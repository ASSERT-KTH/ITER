bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  Option  option  =  options.getOption(i,  newAnonymous,  required);  [CE]  illegal  start  of  expression  [FE]                  OptionException      [CONTEXT]      if  (option  instanceof  Argument)  {  i.remove();  newAnonymous.add(option);  }  else  {  final  Set  triggers  =  option.getTriggers();      [BUGGY]  Option  option  =  options.getOption(i,  newAnonymous,  required);  [BUGGY]      for  (Iterator  j  =  triggers.iterator();  j.hasNext();)  {  newOptionMap.put(j.next(),  option);  }  newPrefixes.addAll(option.getPrefixes());  }  [CLASS]  GroupImpl  [METHOD]  <init>  [RETURN_TYPE]  String,int,int,boolean)  List  options  String  name  String  description  final  int  minimum  final  int  maximum  final  boolean  required  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  required  SortedMap  newOptionMap  optionMap  Iterator  i  j  List  anonymous  newAnonymous  options  Option  option  String  description  name  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	102	102	1	replace	Option  option  =  options.getOption(i,  newAnonymous,  required);	  Option    option    =    options.getOption(i,    newAnonymous);    	non-compiled	[CE]  illegal  start  of  expression	24	None	replace
2	[BUG]  [BUGGY]  Option  option  =  options.getOption(i,  newAnonymous,  prefixes);  [CE]  illegal  start  of  expression  [FE]                    OptionException      [CONTEXT]      if  (option  instanceof  Argument)  {  i.remove();  newAnonymous.add(option);  }  else  {  final  Set  triggers  =  option.getTriggers();      [BUGGY]  Option  option  =  options.getOption(i,  newAnonymous,  prefixes);  [BUGGY]      for  (Iterator  j  =  triggers.iterator();  j.hasNext();)  {  newOptionMap.put(j.next(),  option);  }  newPrefixes.addAll(option.getPrefixes());  }  [CLASS]  GroupImpl  [METHOD]  <init>  [RETURN_TYPE]  String,int,int,boolean)  List  options  String  name  String  description  final  int  minimum  final  int  maximum  final  boolean  required  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  required  SortedMap  newOptionMap  optionMap  Iterator  i  j  List  anonymous  newAnonymous  options  Option  option  String  description  name  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	102	102	1	replace	Option  option  =  options.getOption(i,  newAnonymous,  prefixes);	  Option    option    =    options.getOption(i,    newAnonymous);    	non-compiled	[CE]  illegal  start  of  expression	24	None	replace
3	[BUG]  [BUGGY]  final  Set  <  Option>  options  =  option.getAllAnonymousOptions();  [CE]  illegal  start  of  expression  [FE]                  OptionException      [CONTEXT]      if  (option  instanceof  Argument)  {  i.remove();  newAnonymous.add(option);  }  else  {  final  Set  triggers  =  option.getTriggers();      [BUGGY]  final  Set  <  Option>  options  =  option.getAllAnonymousOptions();  [BUGGY]      for  (Iterator  j  =  triggers.iterator();  j.hasNext();)  {  newOptionMap.put(j.next(),  option);  }  newPrefixes.addAll(option.getPrefixes());  }  [CLASS]  GroupImpl  [METHOD]  <init>  [RETURN_TYPE]  String,int,int,boolean)  List  options  String  name  String  description  final  int  minimum  final  int  maximum  final  boolean  required  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  required  SortedMap  newOptionMap  optionMap  Iterator  i  j  List  anonymous  newAnonymous  options  Option  option  String  description  name  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	102	102	1	replace	final  Set  <  Option>  options  =  option.getAllAnonymousOptions();	  final    Set    <    Option>    options    =    option.getAllOptions();    	non-compiled	[CE]  illegal  start  of  expression	11	None	replace
4	[BUG]  [BUGGY]  final  List  <  Option>  options  =  option.getAllOptions();  [CE]  illegal  start  of  expression  [FE]                    OptionException      [CONTEXT]      if  (option  instanceof  Argument)  {  i.remove();  newAnonymous.add(option);  }  else  {  final  Set  triggers  =  option.getTriggers();      [BUGGY]  final  List  <  Option>  options  =  option.getAllOptions();  [BUGGY]      for  (Iterator  j  =  triggers.iterator();  j.hasNext();)  {  newOptionMap.put(j.next(),  option);  }  newPrefixes.addAll(option.getPrefixes());  }  [CLASS]  GroupImpl  [METHOD]  <init>  [RETURN_TYPE]  String,int,int,boolean)  List  options  String  name  String  description  final  int  minimum  final  int  maximum  final  boolean  required  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  required  SortedMap  newOptionMap  optionMap  Iterator  i  j  List  anonymous  newAnonymous  options  Option  option  String  description  name  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	102	102	1	replace	final  List  <  Option>  options  =  option.getAllOptions();	  final    Set    <    Option>    options    =    option.getAllOptions();    	non-compiled	[CE]  illegal  start  of  expression	11	None	replace
5	[BUG]  [BUGGY]  i.addAll(option.getPrefix());  [CE]  illegal  start  of  expression  [FE]                      OptionException      [CONTEXT]      if  (option  instanceof  Argument)  {  i.remove();  newAnonymous.add(option);  }  else  {  final  Set  triggers  =  option.getTriggers();      [BUGGY]  i.addAll(option.getPrefix());  [BUGGY]      for  (Iterator  j  =  triggers.iterator();  j.hasNext();)  {  newOptionMap.put(j.next(),  option);  }  newPrefixes.addAll(option.getPrefixes());  }  [CLASS]  GroupImpl  [METHOD]  <init>  [RETURN_TYPE]  String,int,int,boolean)  List  options  String  name  String  description  final  int  minimum  final  int  maximum  final  boolean  required  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  required  SortedMap  newOptionMap  optionMap  Iterator  i  j  List  anonymous  newAnonymous  options  Option  option  String  description  name  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	102	102	1	replace	i.addAll(option.getPrefix());	  i.add(option.getPrefix());    	non-compiled	[CE]  illegal  start  of  expression	43	None	replace
6	[BUG]  [BUGGY]  i.add(option.getDescription());  [CE]  illegal  start  of  expression  [FE]                        OptionException      [CONTEXT]      if  (option  instanceof  Argument)  {  i.remove();  newAnonymous.add(option);  }  else  {  final  Set  triggers  =  option.getTriggers();      [BUGGY]  i.add(option.getDescription());  [BUGGY]      for  (Iterator  j  =  triggers.iterator();  j.hasNext();)  {  newOptionMap.put(j.next(),  option);  }  newPrefixes.addAll(option.getPrefixes());  }  [CLASS]  GroupImpl  [METHOD]  <init>  [RETURN_TYPE]  String,int,int,boolean)  List  options  String  name  String  description  final  int  minimum  final  int  maximum  final  boolean  required  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  required  SortedMap  newOptionMap  optionMap  Iterator  i  j  List  anonymous  newAnonymous  options  Option  option  String  description  name  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	102	102	1	replace	i.add(option.getDescription());	  i.add(option.getPrefix());    	non-compiled	[CE]  illegal  start  of  expression	43	None	replace
7	[BUG]  [BUGGY]  Option  option  =(Option)this.triggers.next();  [CE]  illegal  start  of  expression  [FE]                  OptionException      [CONTEXT]      if  (option  instanceof  Argument)  {  i.remove();  newAnonymous.add(option);  }  else  {  final  Set  triggers  =  option.getTriggers();      [BUGGY]  Option  option  =(Option)this.triggers.next();  [BUGGY]      for  (Iterator  j  =  triggers.iterator();  j.hasNext();)  {  newOptionMap.put(j.next(),  option);  }  newPrefixes.addAll(option.getPrefixes());  }  [CLASS]  GroupImpl  [METHOD]  <init>  [RETURN_TYPE]  String,int,int,boolean)  List  options  String  name  String  description  final  int  minimum  final  int  maximum  final  boolean  required  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  required  SortedMap  newOptionMap  optionMap  Iterator  i  j  List  anonymous  newAnonymous  options  Option  option  String  description  name  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	102	102	1	replace	Option  option  =(Option)this.triggers.next();	  Option    option    =(Option)triggers.next();    	non-compiled	[CE]  illegal  start  of  expression	4	None	replace
8	[BUG]  [BUGGY]  Option  option  =(Option)triggers.get(i);  [CE]  illegal  start  of  expression  [FE]                    OptionException      [CONTEXT]      if  (option  instanceof  Argument)  {  i.remove();  newAnonymous.add(option);  }  else  {  final  Set  triggers  =  option.getTriggers();      [BUGGY]  Option  option  =(Option)triggers.get(i);  [BUGGY]      for  (Iterator  j  =  triggers.iterator();  j.hasNext();)  {  newOptionMap.put(j.next(),  option);  }  newPrefixes.addAll(option.getPrefixes());  }  [CLASS]  GroupImpl  [METHOD]  <init>  [RETURN_TYPE]  String,int,int,boolean)  List  options  String  name  String  description  final  int  minimum  final  int  maximum  final  boolean  required  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  required  SortedMap  newOptionMap  optionMap  Iterator  i  j  List  anonymous  newAnonymous  options  Option  option  String  description  name  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	102	102	1	replace	Option  option  =(Option)triggers.get(i);	  Option    option    =(Option)triggers.next();    	non-compiled	[CE]  illegal  start  of  expression	4	None	replace
9	[BUG]  [BUGGY]  Option  option  =(Option)this.optionMap.next();  [CE]  illegal  start  of  expression  [FE]                      OptionException      [CONTEXT]      if  (option  instanceof  Argument)  {  i.remove();  newAnonymous.add(option);  }  else  {  final  Set  triggers  =  option.getTriggers();      [BUGGY]  Option  option  =(Option)this.optionMap.next();  [BUGGY]      for  (Iterator  j  =  triggers.iterator();  j.hasNext();)  {  newOptionMap.put(j.next(),  option);  }  newPrefixes.addAll(option.getPrefixes());  }  [CLASS]  GroupImpl  [METHOD]  <init>  [RETURN_TYPE]  String,int,int,boolean)  List  options  String  name  String  description  final  int  minimum  final  int  maximum  final  boolean  required  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  required  SortedMap  newOptionMap  optionMap  Iterator  i  j  List  anonymous  newAnonymous  options  Option  option  String  description  name  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	102	102	1	replace	Option  option  =(Option)this.optionMap.next();	  Option    option    =(Option)triggers.next();    	non-compiled	[CE]  illegal  start  of  expression	4	None	replace
10	[BUG]  [BUGGY]  final  List  <  Option>  options  =  option.getAnonymousOptionMap();  [CE]  illegal  start  of  expression  [FE]              OptionException      [CONTEXT]      if  (option  instanceof  Argument)  {  i.remove();  newAnonymous.add(option);  }  else  {  final  Set  triggers  =  option.getTriggers();      [BUGGY]  final  List  <  Option>  options  =  option.getAnonymousOptionMap();  [BUGGY]      for  (Iterator  j  =  triggers.iterator();  j.hasNext();)  {  newOptionMap.put(j.next(),  option);  }  newPrefixes.addAll(option.getPrefixes());  }  [CLASS]  GroupImpl  [METHOD]  <init>  [RETURN_TYPE]  String,int,int,boolean)  List  options  String  name  String  description  final  int  minimum  final  int  maximum  final  boolean  required  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  required  SortedMap  newOptionMap  optionMap  Iterator  i  j  List  anonymous  newAnonymous  options  Option  option  String  description  name  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	102	102	1	replace	final  List  <  Option>  options  =  option.getAnonymousOptionMap();	  final    List    <    Option>    options    =    option.getOptionMap();    	non-compiled	[CE]  illegal  start  of  expression	28	None	replace
11	[BUG]  [BUGGY]  Option  option  =  options.cloneOptionMap();  [CE]  illegal  start  of  expression  [FE]              OptionException      [CONTEXT]      if  (option  instanceof  Argument)  {  i.remove();  newAnonymous.add(option);  }  else  {  final  Set  triggers  =  option.getTriggers();      [BUGGY]  Option  option  =  options.cloneOptionMap();  [BUGGY]      for  (Iterator  j  =  triggers.iterator();  j.hasNext();)  {  newOptionMap.put(j.next(),  option);  }  newPrefixes.addAll(option.getPrefixes());  }  [CLASS]  GroupImpl  [METHOD]  <init>  [RETURN_TYPE]  String,int,int,boolean)  List  options  String  name  String  description  final  int  minimum  final  int  maximum  final  boolean  required  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  required  SortedMap  newOptionMap  optionMap  Iterator  i  j  List  anonymous  newAnonymous  options  Option  option  String  description  name  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	102	102	1	replace	Option  option  =  options.cloneOptionMap();	  Option    option    =    option.cloneOptionMap();    	non-compiled	[CE]  illegal  start  of  expression	58	None	replace
12	[BUG]  [BUGGY]  Option  option  =  option.clone();  [CE]  illegal  start  of  expression  [FE]                OptionException      [CONTEXT]      if  (option  instanceof  Argument)  {  i.remove();  newAnonymous.add(option);  }  else  {  final  Set  triggers  =  option.getTriggers();      [BUGGY]  Option  option  =  option.clone();  [BUGGY]      for  (Iterator  j  =  triggers.iterator();  j.hasNext();)  {  newOptionMap.put(j.next(),  option);  }  newPrefixes.addAll(option.getPrefixes());  }  [CLASS]  GroupImpl  [METHOD]  <init>  [RETURN_TYPE]  String,int,int,boolean)  List  options  String  name  String  description  final  int  minimum  final  int  maximum  final  boolean  required  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  required  SortedMap  newOptionMap  optionMap  Iterator  i  j  List  anonymous  newAnonymous  options  Option  option  String  description  name  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	102	102	1	replace	Option  option  =  option.clone();	  Option    option    =    option.cloneOptionMap();    	non-compiled	[CE]  illegal  start  of  expression	58	None	replace
13	[BUG]  [BUGGY]  Option  option  =  option.cloneTree();  [CE]  illegal  start  of  expression  [FE]                  OptionException      [CONTEXT]      if  (option  instanceof  Argument)  {  i.remove();  newAnonymous.add(option);  }  else  {  final  Set  triggers  =  option.getTriggers();      [BUGGY]  Option  option  =  option.cloneTree();  [BUGGY]      for  (Iterator  j  =  triggers.iterator();  j.hasNext();)  {  newOptionMap.put(j.next(),  option);  }  newPrefixes.addAll(option.getPrefixes());  }  [CLASS]  GroupImpl  [METHOD]  <init>  [RETURN_TYPE]  String,int,int,boolean)  List  options  String  name  String  description  final  int  minimum  final  int  maximum  final  boolean  required  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  required  SortedMap  newOptionMap  optionMap  Iterator  i  j  List  anonymous  newAnonymous  options  Option  option  String  description  name  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	102	102	1	replace	Option  option  =  option.cloneTree();	  Option    option    =    option.cloneOptionMap();    	non-compiled	[CE]  illegal  start  of  expression	58	None	replace
14	[BUG]  [BUGGY]  final  ArrayList  <  Option>  options  =  option.getOptions();  [CE]  illegal  start  of  expression  [FE]              OptionException      [CONTEXT]      if  (option  instanceof  Argument)  {  i.remove();  newAnonymous.add(option);  }  else  {  final  Set  triggers  =  option.getTriggers();      [BUGGY]  final  ArrayList  <  Option>  options  =  option.getOptions();  [BUGGY]      for  (Iterator  j  =  triggers.iterator();  j.hasNext();)  {  newOptionMap.put(j.next(),  option);  }  newPrefixes.addAll(option.getPrefixes());  }  [CLASS]  GroupImpl  [METHOD]  <init>  [RETURN_TYPE]  String,int,int,boolean)  List  options  String  name  String  description  final  int  minimum  final  int  maximum  final  boolean  required  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  required  SortedMap  newOptionMap  optionMap  Iterator  i  j  List  anonymous  newAnonymous  options  Option  option  String  description  name  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	102	102	1	replace	final  ArrayList  <  Option>  options  =  option.getOptions();	  final    ArrayList    <    Option>    options    =    option.getOptionMap();    	non-compiled	[CE]  illegal  start  of  expression	49	None	replace
15	[BUG]  [BUGGY]  For(Iterator  j  =  triggers.keySet().iterator();  j.hasNext();)  {  [CE]  illegal  start  of  expression  [FE]            OptionException      [CONTEXT]      if  (option  instanceof  Argument)  {  i.remove();  newAnonymous.add(option);  }  else  {  final  Set  triggers  =  option.getTriggers();      [BUGGY]  For(Iterator  j  =  triggers.keySet().iterator();  j.hasNext();)  {  [BUGGY]      newOptionMap.put(j.next(),  option);  }  newPrefixes.addAll(option.getPrefixes());  }  [CLASS]  GroupImpl  [METHOD]  <init>  [RETURN_TYPE]  String,int,int,boolean)  List  options  String  name  String  description  final  int  minimum  final  int  maximum  final  boolean  required  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  required  SortedMap  newOptionMap  optionMap  Iterator  i  j  List  anonymous  newAnonymous  options  Option  option  String  description  name  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	102	102	1	replace	For(Iterator  j  =  triggers.keySet().iterator();  j.hasNext();)  {	  For(Iterator    j    =    options.keySet().iterator();    j.hasNext();)    {    	non-compiled	[CE]  illegal  start  of  expression	46	None	replace
16	[BUG]  [BUGGY]  For(Iterator  <  Option>  j  =  options.keySet().iterator();  j.hasNext();)  {  [CE]  illegal  start  of  expression  [FE]              OptionException      [CONTEXT]      if  (option  instanceof  Argument)  {  i.remove();  newAnonymous.add(option);  }  else  {  final  Set  triggers  =  option.getTriggers();      [BUGGY]  For(Iterator  <  Option>  j  =  options.keySet().iterator();  j.hasNext();)  {  [BUGGY]      newOptionMap.put(j.next(),  option);  }  newPrefixes.addAll(option.getPrefixes());  }  [CLASS]  GroupImpl  [METHOD]  <init>  [RETURN_TYPE]  String,int,int,boolean)  List  options  String  name  String  description  final  int  minimum  final  int  maximum  final  boolean  required  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  required  SortedMap  newOptionMap  optionMap  Iterator  i  j  List  anonymous  newAnonymous  options  Option  option  String  description  name  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	102	102	1	replace	For(Iterator  <  Option>  j  =  options.keySet().iterator();  j.hasNext();)  {	  For(Iterator    j    =    options.keySet().iterator();    j.hasNext();)    {    	non-compiled	[CE]  illegal  start  of  expression	46	None	replace
17	[BUG]  [BUGGY]  Option  option  =  option.getOption(name,  maximum);  [CE]  illegal  start  of  expression  [FE]              OptionException      [CONTEXT]      if  (option  instanceof  Argument)  {  i.remove();  newAnonymous.add(option);  }  else  {  final  Set  triggers  =  option.getTriggers();      [BUGGY]  Option  option  =  option.getOption(name,  maximum);  [BUGGY]      for  (Iterator  j  =  triggers.iterator();  j.hasNext();)  {  newOptionMap.put(j.next(),  option);  }  newPrefixes.addAll(option.getPrefixes());  }  [CLASS]  GroupImpl  [METHOD]  <init>  [RETURN_TYPE]  String,int,int,boolean)  List  options  String  name  String  description  final  int  minimum  final  int  maximum  final  boolean  required  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  required  SortedMap  newOptionMap  optionMap  Iterator  i  j  List  anonymous  newAnonymous  options  Option  option  String  description  name  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	102	102	1	replace	Option  option  =  option.getOption(name,  maximum);	  Option    option    =    option.getOption(name,    required);    	non-compiled	[CE]  illegal  start  of  expression	13	None	replace
18	[BUG]  [BUGGY]  Option  option  =  option.getOption(name,  minimum,  required);  [CE]  illegal  start  of  expression  [FE]                OptionException      [CONTEXT]      if  (option  instanceof  Argument)  {  i.remove();  newAnonymous.add(option);  }  else  {  final  Set  triggers  =  option.getTriggers();      [BUGGY]  Option  option  =  option.getOption(name,  minimum,  required);  [BUGGY]      for  (Iterator  j  =  triggers.iterator();  j.hasNext();)  {  newOptionMap.put(j.next(),  option);  }  newPrefixes.addAll(option.getPrefixes());  }  [CLASS]  GroupImpl  [METHOD]  <init>  [RETURN_TYPE]  String,int,int,boolean)  List  options  String  name  String  description  final  int  minimum  final  int  maximum  final  boolean  required  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  required  SortedMap  newOptionMap  optionMap  Iterator  i  j  List  anonymous  newAnonymous  options  Option  option  String  description  name  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	102	102	1	replace	Option  option  =  option.getOption(name,  minimum,  required);	  Option    option    =    option.getOption(name,    required);    	non-compiled	[CE]  illegal  start  of  expression	13	None	replace
19	[BUG]  [BUGGY]  Option  option  =(Option)this.optionMap.get(i.next(),  triggers);  [CE]  illegal  start  of  expression  [FE]                      OptionException      [CONTEXT]      if  (option  instanceof  Argument)  {  i.remove();  newAnonymous.add(option);  }  else  {  final  Set  triggers  =  option.getTriggers();      [BUGGY]  Option  option  =(Option)this.optionMap.get(i.next(),  triggers);  [BUGGY]      for  (Iterator  j  =  triggers.iterator();  j.hasNext();)  {  newOptionMap.put(j.next(),  option);  }  newPrefixes.addAll(option.getPrefixes());  }  [CLASS]  GroupImpl  [METHOD]  <init>  [RETURN_TYPE]  String,int,int,boolean)  List  options  String  name  String  description  final  int  minimum  final  int  maximum  final  boolean  required  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  required  SortedMap  newOptionMap  optionMap  Iterator  i  j  List  anonymous  newAnonymous  options  Option  option  String  description  name  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	102	102	1	replace	Option  option  =(Option)this.optionMap.get(i.next(),  triggers);	  Option    option    =(Option)this.optionMap.get(i.next());    	non-compiled	[CE]  illegal  start  of  expression	6	None	replace
20	[BUG]  [BUGGY]  Option  option  =(Option)this.optionMap.get(triggers.next());  [CE]  illegal  start  of  expression  [FE]                        OptionException      [CONTEXT]      if  (option  instanceof  Argument)  {  i.remove();  newAnonymous.add(option);  }  else  {  final  Set  triggers  =  option.getTriggers();      [BUGGY]  Option  option  =(Option)this.optionMap.get(triggers.next());  [BUGGY]      for  (Iterator  j  =  triggers.iterator();  j.hasNext();)  {  newOptionMap.put(j.next(),  option);  }  newPrefixes.addAll(option.getPrefixes());  }  [CLASS]  GroupImpl  [METHOD]  <init>  [RETURN_TYPE]  String,int,int,boolean)  List  options  String  name  String  description  final  int  minimum  final  int  maximum  final  boolean  required  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  required  SortedMap  newOptionMap  optionMap  Iterator  i  j  List  anonymous  newAnonymous  options  Option  option  String  description  name  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	102	102	1	replace	Option  option  =(Option)this.optionMap.get(triggers.next());	  Option    option    =(Option)this.optionMap.get(i.next());    	non-compiled	[CE]  illegal  start  of  expression	6	None	replace
21	[BUG]  [BUGGY]  Option  option  =(Option)this.optionMap.get(i.next(),  options);  [CE]  illegal  start  of  expression  [FE]                          OptionException      [CONTEXT]      if  (option  instanceof  Argument)  {  i.remove();  newAnonymous.add(option);  }  else  {  final  Set  triggers  =  option.getTriggers();      [BUGGY]  Option  option  =(Option)this.optionMap.get(i.next(),  options);  [BUGGY]      for  (Iterator  j  =  triggers.iterator();  j.hasNext();)  {  newOptionMap.put(j.next(),  option);  }  newPrefixes.addAll(option.getPrefixes());  }  [CLASS]  GroupImpl  [METHOD]  <init>  [RETURN_TYPE]  String,int,int,boolean)  List  options  String  name  String  description  final  int  minimum  final  int  maximum  final  boolean  required  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  required  SortedMap  newOptionMap  optionMap  Iterator  i  j  List  anonymous  newAnonymous  options  Option  option  String  description  name  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	102	102	1	replace	Option  option  =(Option)this.optionMap.get(i.next(),  options);	  Option    option    =(Option)this.optionMap.get(i.next());    	non-compiled	[CE]  illegal  start  of  expression	6	None	replace
22	[BUG]  [BUGGY]  Option  option  =  options.getOption(i,  maximum);  [CE]  illegal  start  of  expression  [FE]                OptionException      [CONTEXT]      if  (option  instanceof  Argument)  {  i.remove();  newAnonymous.add(option);  }  else  {  final  Set  triggers  =  option.getTriggers();      [BUGGY]  Option  option  =  options.getOption(i,  maximum);  [BUGGY]      for  (Iterator  j  =  triggers.iterator();  j.hasNext();)  {  newOptionMap.put(j.next(),  option);  }  newPrefixes.addAll(option.getPrefixes());  }  [CLASS]  GroupImpl  [METHOD]  <init>  [RETURN_TYPE]  String,int,int,boolean)  List  options  String  name  String  description  final  int  minimum  final  int  maximum  final  boolean  required  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  required  SortedMap  newOptionMap  optionMap  Iterator  i  j  List  anonymous  newAnonymous  options  Option  option  String  description  name  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	102	102	1	replace	Option  option  =  options.getOption(i,  maximum);	  Option    option    =    options.getOption(i,    required);    	non-compiled	[CE]  illegal  start  of  expression	23	None	replace
23	[BUG]  [BUGGY]  Option  option  =  options.getOption(i,  minimum,  required);  [CE]  illegal  start  of  expression  [FE]                  OptionException      [CONTEXT]      if  (option  instanceof  Argument)  {  i.remove();  newAnonymous.add(option);  }  else  {  final  Set  triggers  =  option.getTriggers();      [BUGGY]  Option  option  =  options.getOption(i,  minimum,  required);  [BUGGY]      for  (Iterator  j  =  triggers.iterator();  j.hasNext();)  {  newOptionMap.put(j.next(),  option);  }  newPrefixes.addAll(option.getPrefixes());  }  [CLASS]  GroupImpl  [METHOD]  <init>  [RETURN_TYPE]  String,int,int,boolean)  List  options  String  name  String  description  final  int  minimum  final  int  maximum  final  boolean  required  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  required  SortedMap  newOptionMap  optionMap  Iterator  i  j  List  anonymous  newAnonymous  options  Option  option  String  description  name  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	102	102	1	replace	Option  option  =  options.getOption(i,  minimum,  required);	  Option    option    =    options.getOption(i,    required);    	non-compiled	[CE]  illegal  start  of  expression	23	None	replace
24	[BUG]  [BUGGY]  Option  option  =  options.getOption(i,  minimum);  [CE]  illegal  start  of  expression  [FE]                    OptionException      [CONTEXT]      if  (option  instanceof  Argument)  {  i.remove();  newAnonymous.add(option);  }  else  {  final  Set  triggers  =  option.getTriggers();      [BUGGY]  Option  option  =  options.getOption(i,  minimum);  [BUGGY]      for  (Iterator  j  =  triggers.iterator();  j.hasNext();)  {  newOptionMap.put(j.next(),  option);  }  newPrefixes.addAll(option.getPrefixes());  }  [CLASS]  GroupImpl  [METHOD]  <init>  [RETURN_TYPE]  String,int,int,boolean)  List  options  String  name  String  description  final  int  minimum  final  int  maximum  final  boolean  required  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  required  SortedMap  newOptionMap  optionMap  Iterator  i  j  List  anonymous  newAnonymous  options  Option  option  String  description  name  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	102	102	1	replace	Option  option  =  options.getOption(i,  minimum);	  Option    option    =    options.getOption(i,    required);    	non-compiled	[CE]  illegal  start  of  expression	23	None	replace
25	[BUG]  [BUGGY]  Option  option  =  options.getOption(minor,  required);  [CE]  illegal  start  of  expression  [FE]                      OptionException      [CONTEXT]      if  (option  instanceof  Argument)  {  i.remove();  newAnonymous.add(option);  }  else  {  final  Set  triggers  =  option.getTriggers();      [BUGGY]  Option  option  =  options.getOption(minor,  required);  [BUGGY]      for  (Iterator  j  =  triggers.iterator();  j.hasNext();)  {  newOptionMap.put(j.next(),  option);  }  newPrefixes.addAll(option.getPrefixes());  }  [CLASS]  GroupImpl  [METHOD]  <init>  [RETURN_TYPE]  String,int,int,boolean)  List  options  String  name  String  description  final  int  minimum  final  int  maximum  final  boolean  required  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  required  SortedMap  newOptionMap  optionMap  Iterator  i  j  List  anonymous  newAnonymous  options  Option  option  String  description  name  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	102	102	1	replace	Option  option  =  options.getOption(minor,  required);	  Option    option    =    options.getOption(i,    required);    	non-compiled	[CE]  illegal  start  of  expression	23	None	replace
26	[BUG]  [BUGGY]  For(Iterator  <  Option>  j  =  triggers.iterator();  j.hasNext();)  {  [CE]  illegal  start  of  expression  [FE]                OptionException      [CONTEXT]      if  (option  instanceof  Argument)  {  i.remove();  newAnonymous.add(option);  }  else  {  final  Set  triggers  =  option.getTriggers();      [BUGGY]  For(Iterator  <  Option>  j  =  triggers.iterator();  j.hasNext();)  {  [BUGGY]      newOptionMap.put(j.next(),  option);  }  newPrefixes.addAll(option.getPrefixes());  }  [CLASS]  GroupImpl  [METHOD]  <init>  [RETURN_TYPE]  String,int,int,boolean)  List  options  String  name  String  description  final  int  minimum  final  int  maximum  final  boolean  required  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  required  SortedMap  newOptionMap  optionMap  Iterator  i  j  List  anonymous  newAnonymous  options  Option  option  String  description  name  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	102	102	1	replace	For(Iterator  <  Option>  j  =  triggers.iterator();  j.hasNext();)  {	  For(Iterator    j    =    allTriggers.iterator();    j.hasNext();)    {    	non-compiled	[CE]  illegal  start  of  expression	22	None	replace
27	[BUG]  [BUGGY]  For(Iterator  j  =  this.allTriggers.iterator();  j.hasNext();)  {  [CE]  illegal  start  of  expression  [FE]                  OptionException      [CONTEXT]      if  (option  instanceof  Argument)  {  i.remove();  newAnonymous.add(option);  }  else  {  final  Set  triggers  =  option.getTriggers();      [BUGGY]  For(Iterator  j  =  this.allTriggers.iterator();  j.hasNext();)  {  [BUGGY]      newOptionMap.put(j.next(),  option);  }  newPrefixes.addAll(option.getPrefixes());  }  [CLASS]  GroupImpl  [METHOD]  <init>  [RETURN_TYPE]  String,int,int,boolean)  List  options  String  name  String  description  final  int  minimum  final  int  maximum  final  boolean  required  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  required  SortedMap  newOptionMap  optionMap  Iterator  i  j  List  anonymous  newAnonymous  options  Option  option  String  description  name  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	102	102	1	replace	For(Iterator  j  =  this.allTriggers.iterator();  j.hasNext();)  {	  For(Iterator    j    =    allTriggers.iterator();    j.hasNext();)    {    	non-compiled	[CE]  illegal  start  of  expression	22	None	replace
28	[BUG]  [BUGGY]  For(Iterator  iterator  =  triggers.iterator();  iterator.hasNext();)  {  [CE]  illegal  start  of  expression  [FE]                    OptionException      [CONTEXT]      if  (option  instanceof  Argument)  {  i.remove();  newAnonymous.add(option);  }  else  {  final  Set  triggers  =  option.getTriggers();      [BUGGY]  For(Iterator  iterator  =  triggers.iterator();  iterator.hasNext();)  {  [BUGGY]      newOptionMap.put(j.next(),  option);  }  newPrefixes.addAll(option.getPrefixes());  }  [CLASS]  GroupImpl  [METHOD]  <init>  [RETURN_TYPE]  String,int,int,boolean)  List  options  String  name  String  description  final  int  minimum  final  int  maximum  final  boolean  required  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  required  SortedMap  newOptionMap  optionMap  Iterator  i  j  List  anonymous  newAnonymous  options  Option  option  String  description  name  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	102	102	1	replace	For(Iterator  iterator  =  triggers.iterator();  iterator.hasNext();)  {	  For(Iterator    j    =    allTriggers.iterator();    j.hasNext();)    {    	non-compiled	[CE]  illegal  start  of  expression	22	None	replace
29	[BUG]  [BUGGY]  final  Set  <  Option>  options  =  option.getOptionMap();  for(Iterator  <  Option>  j  =  options.iterator();  j.hasNext();)  {  [CE]  illegal  start  of  expression  [FE]                  OptionException      [CONTEXT]      if  (option  instanceof  Argument)  {  i.remove();  newAnonymous.add(option);  }  else  {  final  Set  triggers  =  option.getTriggers();      [BUGGY]  final  Set  <  Option>  options  =  option.getOptionMap();  for(Iterator  <  Option>  j  =  options.iterator();  j.hasNext();)  {  [BUGGY]      for  (Iterator  j  =  triggers.iterator();  j.hasNext();)  {  newOptionMap.put(j.next(),  option);  }  newPrefixes.addAll(option.getPrefixes());  }  [CLASS]  GroupImpl  [METHOD]  <init>  [RETURN_TYPE]  String,int,int,boolean)  List  options  String  name  String  description  final  int  minimum  final  int  maximum  final  boolean  required  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  required  SortedMap  newOptionMap  optionMap  Iterator  i  j  List  anonymous  newAnonymous  options  Option  option  String  description  name  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	102	102	1	replace	final  Set  <  Option>  options  =  option.getOptionMap();  for(Iterator  <  Option>  j  =  options.iterator();  j.hasNext();)  {	  if(triggers!=    null)    {    i.remove();    newAnonymous.add(option);    }    else    {    final    Set    <    Option>    options    =    option.getOptionMap();    for(Iterator    <    Option>    j    =    options.iterator();    j.hasNext();)    {    	non-compiled	[CE]  illegal  start  of  expression	51	None	replace
30	[BUG]  [BUGGY]  for(Iterator  <  Option>  j  =  options.iterator();  j.hasNext();)  {  [CE]  illegal  start  of  expression  [FE]                    OptionException      [CONTEXT]      if  (option  instanceof  Argument)  {  i.remove();  newAnonymous.add(option);  }  else  {  final  Set  triggers  =  option.getTriggers();      [BUGGY]  for(Iterator  <  Option>  j  =  options.iterator();  j.hasNext();)  {  [BUGGY]      for  (Iterator  j  =  triggers.iterator();  j.hasNext();)  {  newOptionMap.put(j.next(),  option);  }  newPrefixes.addAll(option.getPrefixes());  }  [CLASS]  GroupImpl  [METHOD]  <init>  [RETURN_TYPE]  String,int,int,boolean)  List  options  String  name  String  description  final  int  minimum  final  int  maximum  final  boolean  required  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  required  SortedMap  newOptionMap  optionMap  Iterator  i  j  List  anonymous  newAnonymous  options  Option  option  String  description  name  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	102	102	1	replace	for(Iterator  <  Option>  j  =  options.iterator();  j.hasNext();)  {	  if(triggers!=    null)    {    i.remove();    newAnonymous.add(option);    }    else    {    final    Set    <    Option>    options    =    option.getOptionMap();    for(Iterator    <    Option>    j    =    options.iterator();    j.hasNext();)    {    	non-compiled	[CE]  illegal  start  of  expression	51	None	replace
31	[BUG]  [BUGGY]  Iterator  <  Option>  j  =  options.iterator();  j.hasNext();)  {  [CE]  illegal  start  of  expression  [FE]                      OptionException      [CONTEXT]      if  (option  instanceof  Argument)  {  i.remove();  newAnonymous.add(option);  }  else  {  final  Set  triggers  =  option.getTriggers();      [BUGGY]  Iterator  <  Option>  j  =  options.iterator();  j.hasNext();)  {  [BUGGY]      for  (Iterator  j  =  triggers.iterator();  j.hasNext();)  {  newOptionMap.put(j.next(),  option);  }  newPrefixes.addAll(option.getPrefixes());  }  [CLASS]  GroupImpl  [METHOD]  <init>  [RETURN_TYPE]  String,int,int,boolean)  List  options  String  name  String  description  final  int  minimum  final  int  maximum  final  boolean  required  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  required  SortedMap  newOptionMap  optionMap  Iterator  i  j  List  anonymous  newAnonymous  options  Option  option  String  description  name  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	102	102	1	replace	Iterator  <  Option>  j  =  options.iterator();  j.hasNext();)  {	  if(triggers!=    null)    {    i.remove();    newAnonymous.add(option);    }    else    {    final    Set    <    Option>    options    =    option.getOptionMap();    for(Iterator    <    Option>    j    =    options.iterator();    j.hasNext();)    {    	non-compiled	[CE]  illegal  start  of  expression	51	None	replace
32	[BUG]  [BUGGY]  final  Set  <  Option>  options  =  option.getOptionMap();  for(final  Option  <  Option>  j  =  options.iterator();  j.hasNext();)  {  [CE]  illegal  start  of  expression  [FE]                        OptionException      [CONTEXT]      if  (option  instanceof  Argument)  {  i.remove();  newAnonymous.add(option);  }  else  {  final  Set  triggers  =  option.getTriggers();      [BUGGY]  final  Set  <  Option>  options  =  option.getOptionMap();  for(final  Option  <  Option>  j  =  options.iterator();  j.hasNext();)  {  [BUGGY]      for  (Iterator  j  =  triggers.iterator();  j.hasNext();)  {  newOptionMap.put(j.next(),  option);  }  newPrefixes.addAll(option.getPrefixes());  }  [CLASS]  GroupImpl  [METHOD]  <init>  [RETURN_TYPE]  String,int,int,boolean)  List  options  String  name  String  description  final  int  minimum  final  int  maximum  final  boolean  required  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  required  SortedMap  newOptionMap  optionMap  Iterator  i  j  List  anonymous  newAnonymous  options  Option  option  String  description  name  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	102	102	1	replace	final  Set  <  Option>  options  =  option.getOptionMap();  for(final  Option  <  Option>  j  =  options.iterator();  j.hasNext();)  {	  if(triggers!=    null)    {    i.remove();    newAnonymous.add(option);    }    else    {    final    Set    <    Option>    options    =    option.getOptionMap();    for(Iterator    <    Option>    j    =    options.iterator();    j.hasNext();)    {    	non-compiled	[CE]  illegal  start  of  expression	51	None	replace
33	[BUG]  [BUGGY]  Iterator  <  Option>  j  =  this.triggers.iterator();  [CE]  illegal  start  of  expression  [FE]                  OptionException      [CONTEXT]      if  (option  instanceof  Argument)  {  i.remove();  newAnonymous.add(option);  }  else  {  final  Set  triggers  =  option.getTriggers();      [BUGGY]  Iterator  <  Option>  j  =  this.triggers.iterator();  [BUGGY]      newOptionMap.put(j.next(),  option);  }  newPrefixes.addAll(option.getPrefixes());  }  [CLASS]  GroupImpl  [METHOD]  <init>  [RETURN_TYPE]  String,int,int,boolean)  List  options  String  name  String  description  final  int  minimum  final  int  maximum  final  boolean  required  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  required  SortedMap  newOptionMap  optionMap  Iterator  i  j  List  anonymous  newAnonymous  options  Option  option  String  description  name  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	102	102	1	replace	Iterator  <  Option>  j  =  this.triggers.iterator();	  Iterator    <    Option>    j    =    triggers.iterator();    	non-compiled	[CE]  illegal  start  of  expression	19	None	replace
34	[BUG]  [BUGGY]  Iterator  <  Option>  j  =  newAnonymous.iterator();  [CE]  illegal  start  of  expression  [FE]                    OptionException      [CONTEXT]      if  (option  instanceof  Argument)  {  i.remove();  newAnonymous.add(option);  }  else  {  final  Set  triggers  =  option.getTriggers();      [BUGGY]  Iterator  <  Option>  j  =  newAnonymous.iterator();  [BUGGY]      newOptionMap.put(j.next(),  option);  }  newPrefixes.addAll(option.getPrefixes());  }  [CLASS]  GroupImpl  [METHOD]  <init>  [RETURN_TYPE]  String,int,int,boolean)  List  options  String  name  String  description  final  int  minimum  final  int  maximum  final  boolean  required  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  required  SortedMap  newOptionMap  optionMap  Iterator  i  j  List  anonymous  newAnonymous  options  Option  option  String  description  name  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	102	102	1	replace	Iterator  <  Option>  j  =  newAnonymous.iterator();	  Iterator    <    Option>    j    =    triggers.iterator();    	non-compiled	[CE]  illegal  start  of  expression	19	None	replace
35	[BUG]  [BUGGY]  Option  option  =  option.getOption(defaultName,  required);  [CE]  illegal  start  of  expression  [FE]            OptionException      [CONTEXT]      if  (option  instanceof  Argument)  {  i.remove();  newAnonymous.add(option);  }  else  {  final  Set  triggers  =  option.getTriggers();      [BUGGY]  Option  option  =  option.getOption(defaultName,  required);  [BUGGY]      for  (Iterator  j  =  triggers.iterator();  j.hasNext();)  {  newOptionMap.put(j.next(),  option);  }  newPrefixes.addAll(option.getPrefixes());  }  [CLASS]  GroupImpl  [METHOD]  <init>  [RETURN_TYPE]  String,int,int,boolean)  List  options  String  name  String  description  final  int  minimum  final  int  maximum  final  boolean  required  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  required  SortedMap  newOptionMap  optionMap  Iterator  i  j  List  anonymous  newAnonymous  options  Option  option  String  description  name  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	102	102	1	replace	Option  option  =  option.getOption(defaultName,  required);	  Option    option    =    option.getOption(defaultName);    	non-compiled	[CE]  illegal  start  of  expression	48	None	replace
36	[BUG]  [BUGGY]  Option  option  =  option.getOption(defaultName,  minimum);  [CE]  illegal  start  of  expression  [FE]              OptionException      [CONTEXT]      if  (option  instanceof  Argument)  {  i.remove();  newAnonymous.add(option);  }  else  {  final  Set  triggers  =  option.getTriggers();      [BUGGY]  Option  option  =  option.getOption(defaultName,  minimum);  [BUGGY]      for  (Iterator  j  =  triggers.iterator();  j.hasNext();)  {  newOptionMap.put(j.next(),  option);  }  newPrefixes.addAll(option.getPrefixes());  }  [CLASS]  GroupImpl  [METHOD]  <init>  [RETURN_TYPE]  String,int,int,boolean)  List  options  String  name  String  description  final  int  minimum  final  int  maximum  final  boolean  required  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  required  SortedMap  newOptionMap  optionMap  Iterator  i  j  List  anonymous  newAnonymous  options  Option  option  String  description  name  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	102	102	1	replace	Option  option  =  option.getOption(defaultName,  minimum);	  Option    option    =    option.getOption(defaultName);    	non-compiled	[CE]  illegal  start  of  expression	48	None	replace
37	[BUG]  [BUGGY]  Option  option  =  option.getOption(name,  description);  [CE]  illegal  start  of  expression  [FE]            OptionException      [CONTEXT]      if  (option  instanceof  Argument)  {  i.remove();  newAnonymous.add(option);  }  else  {  final  Set  triggers  =  option.getTriggers();      [BUGGY]  Option  option  =  option.getOption(name,  description);  [BUGGY]      for  (Iterator  j  =  triggers.iterator();  j.hasNext();)  {  newOptionMap.put(j.next(),  option);  }  newPrefixes.addAll(option.getPrefixes());  }  [CLASS]  GroupImpl  [METHOD]  <init>  [RETURN_TYPE]  String,int,int,boolean)  List  options  String  name  String  description  final  int  minimum  final  int  maximum  final  boolean  required  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  required  SortedMap  newOptionMap  optionMap  Iterator  i  j  List  anonymous  newAnonymous  options  Option  option  String  description  name  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	102	102	1	replace	Option  option  =  option.getOption(name,  description);	  Option    option    =    option.getOption(description);    	non-compiled	[CE]  illegal  start  of  expression	12	None	replace
38	[BUG]  [BUGGY]  Option  option  =  option.getOption(description,  required);  [CE]  illegal  start  of  expression  [FE]              OptionException      [CONTEXT]      if  (option  instanceof  Argument)  {  i.remove();  newAnonymous.add(option);  }  else  {  final  Set  triggers  =  option.getTriggers();      [BUGGY]  Option  option  =  option.getOption(description,  required);  [BUGGY]      for  (Iterator  j  =  triggers.iterator();  j.hasNext();)  {  newOptionMap.put(j.next(),  option);  }  newPrefixes.addAll(option.getPrefixes());  }  [CLASS]  GroupImpl  [METHOD]  <init>  [RETURN_TYPE]  String,int,int,boolean)  List  options  String  name  String  description  final  int  minimum  final  int  maximum  final  boolean  required  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  required  SortedMap  newOptionMap  optionMap  Iterator  i  j  List  anonymous  newAnonymous  options  Option  option  String  description  name  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	102	102	1	replace	Option  option  =  option.getOption(description,  required);	  Option    option    =    option.getOption(description);    	non-compiled	[CE]  illegal  start  of  expression	12	None	replace
39	[BUG]  [BUGGY]  for(Iterator  it  =  options.iterator();  j.hasNext();)  {  [CE]  illegal  start  of  expression  [FE]              OptionException      [CONTEXT]      if  (option  instanceof  Argument)  {  i.remove();  newAnonymous.add(option);  }  else  {  final  Set  triggers  =  option.getTriggers();      [BUGGY]  for(Iterator  it  =  options.iterator();  j.hasNext();)  {  [BUGGY]      newOptionMap.put(j.next(),  option);  }  newPrefixes.addAll(option.getPrefixes());  }  [CLASS]  GroupImpl  [METHOD]  <init>  [RETURN_TYPE]  String,int,int,boolean)  List  options  String  name  String  description  final  int  minimum  final  int  maximum  final  boolean  required  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  required  SortedMap  newOptionMap  optionMap  Iterator  i  j  List  anonymous  newAnonymous  options  Option  option  String  description  name  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	102	102	1	replace	for(Iterator  it  =  options.iterator();  j.hasNext();)  {	  for(Iterator    it    =    triggers.iterator();    j.hasNext();)    {    	non-compiled	[CE]  illegal  start  of  expression	57	None	replace
40	[BUG]  [BUGGY]  for(Iterator  it  =  this.triggers.iterator();  j.hasNext();)  {  [CE]  illegal  start  of  expression  [FE]                OptionException      [CONTEXT]      if  (option  instanceof  Argument)  {  i.remove();  newAnonymous.add(option);  }  else  {  final  Set  triggers  =  option.getTriggers();      [BUGGY]  for(Iterator  it  =  this.triggers.iterator();  j.hasNext();)  {  [BUGGY]      newOptionMap.put(j.next(),  option);  }  newPrefixes.addAll(option.getPrefixes());  }  [CLASS]  GroupImpl  [METHOD]  <init>  [RETURN_TYPE]  String,int,int,boolean)  List  options  String  name  String  description  final  int  minimum  final  int  maximum  final  boolean  required  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  required  SortedMap  newOptionMap  optionMap  Iterator  i  j  List  anonymous  newAnonymous  options  Option  option  String  description  name  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	102	102	1	replace	for(Iterator  it  =  this.triggers.iterator();  j.hasNext();)  {	  for(Iterator    it    =    triggers.iterator();    j.hasNext();)    {    	non-compiled	[CE]  illegal  start  of  expression	57	None	replace
41	[BUG]  [BUGGY]  Option  option  =  options.getOption(defaultValue,  required);  [CE]  illegal  start  of  expression  [FE]                      OptionException      [CONTEXT]      if  (option  instanceof  Argument)  {  i.remove();  newAnonymous.add(option);  }  else  {  final  Set  triggers  =  option.getTriggers();      [BUGGY]  Option  option  =  options.getOption(defaultValue,  required);  [BUGGY]      for  (Iterator  j  =  triggers.iterator();  j.hasNext();)  {  newOptionMap.put(j.next(),  option);  }  newPrefixes.addAll(option.getPrefixes());  }  [CLASS]  GroupImpl  [METHOD]  <init>  [RETURN_TYPE]  String,int,int,boolean)  List  options  String  name  String  description  final  int  minimum  final  int  maximum  final  boolean  required  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  required  SortedMap  newOptionMap  optionMap  Iterator  i  j  List  anonymous  newAnonymous  options  Option  option  String  description  name  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	102	102	1	replace	Option  option  =  options.getOption(defaultValue,  required);	  Option    option    =    options.getOption(defaultValue);    	non-compiled	[CE]  illegal  start  of  expression	38	None	replace
42	[BUG]  [BUGGY]  Option  option  =  options.getOption(defaultValue,  newAnonymous);  [CE]  illegal  start  of  expression  [FE]                        OptionException      [CONTEXT]      if  (option  instanceof  Argument)  {  i.remove();  newAnonymous.add(option);  }  else  {  final  Set  triggers  =  option.getTriggers();      [BUGGY]  Option  option  =  options.getOption(defaultValue,  newAnonymous);  [BUGGY]      for  (Iterator  j  =  triggers.iterator();  j.hasNext();)  {  newOptionMap.put(j.next(),  option);  }  newPrefixes.addAll(option.getPrefixes());  }  [CLASS]  GroupImpl  [METHOD]  <init>  [RETURN_TYPE]  String,int,int,boolean)  List  options  String  name  String  description  final  int  minimum  final  int  maximum  final  boolean  required  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  required  SortedMap  newOptionMap  optionMap  Iterator  i  j  List  anonymous  newAnonymous  options  Option  option  String  description  name  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	102	102	1	replace	Option  option  =  options.getOption(defaultValue,  newAnonymous);	  Option    option    =    options.getOption(defaultValue);    	non-compiled	[CE]  illegal  start  of  expression	38	None	replace
43	[BUG]  [BUGGY]  Option  option  =  options.getOption(defaultValue,  minimum);  [CE]  illegal  start  of  expression  [FE]                          OptionException      [CONTEXT]      if  (option  instanceof  Argument)  {  i.remove();  newAnonymous.add(option);  }  else  {  final  Set  triggers  =  option.getTriggers();      [BUGGY]  Option  option  =  options.getOption(defaultValue,  minimum);  [BUGGY]      for  (Iterator  j  =  triggers.iterator();  j.hasNext();)  {  newOptionMap.put(j.next(),  option);  }  newPrefixes.addAll(option.getPrefixes());  }  [CLASS]  GroupImpl  [METHOD]  <init>  [RETURN_TYPE]  String,int,int,boolean)  List  options  String  name  String  description  final  int  minimum  final  int  maximum  final  boolean  required  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  required  SortedMap  newOptionMap  optionMap  Iterator  i  j  List  anonymous  newAnonymous  options  Option  option  String  description  name  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	102	102	1	replace	Option  option  =  options.getOption(defaultValue,  minimum);	  Option    option    =    options.getOption(defaultValue);    	non-compiled	[CE]  illegal  start  of  expression	38	None	replace
44	[BUG]  [BUGGY]  Iterator  <  Option>  j  =  triggers.keySet().iterator();  [CE]  illegal  start  of  expression  [FE]                    OptionException      [CONTEXT]      if  (option  instanceof  Argument)  {  i.remove();  newAnonymous.add(option);  }  else  {  final  Set  triggers  =  option.getTriggers();      [BUGGY]  Iterator  <  Option>  j  =  triggers.keySet().iterator();  [BUGGY]      newOptionMap.put(j.next(),  option);  }  newPrefixes.addAll(option.getPrefixes());  }  [CLASS]  GroupImpl  [METHOD]  <init>  [RETURN_TYPE]  String,int,int,boolean)  List  options  String  name  String  description  final  int  minimum  final  int  maximum  final  boolean  required  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  required  SortedMap  newOptionMap  optionMap  Iterator  i  j  List  anonymous  newAnonymous  options  Option  option  String  description  name  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	102	102	1	replace	Iterator  <  Option>  j  =  triggers.keySet().iterator();	  Iterator    <    Option>    j    =    options.keySet().iterator();    	non-compiled	[CE]  illegal  start  of  expression	41	None	replace
45	[BUG]  [BUGGY]  final  Iterator  <  Option>  j  =  options.keySet().iterator();  [CE]  illegal  start  of  expression  [FE]                      OptionException      [CONTEXT]      if  (option  instanceof  Argument)  {  i.remove();  newAnonymous.add(option);  }  else  {  final  Set  triggers  =  option.getTriggers();      [BUGGY]  final  Iterator  <  Option>  j  =  options.keySet().iterator();  [BUGGY]      newOptionMap.put(j.next(),  option);  }  newPrefixes.addAll(option.getPrefixes());  }  [CLASS]  GroupImpl  [METHOD]  <init>  [RETURN_TYPE]  String,int,int,boolean)  List  options  String  name  String  description  final  int  minimum  final  int  maximum  final  boolean  required  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  required  SortedMap  newOptionMap  optionMap  Iterator  i  j  List  anonymous  newAnonymous  options  Option  option  String  description  name  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	102	102	1	replace	final  Iterator  <  Option>  j  =  options.keySet().iterator();	  Iterator    <    Option>    j    =    options.keySet().iterator();    	non-compiled	[CE]  illegal  start  of  expression	41	None	replace
46	[BUG]  [BUGGY]  Option  option  =  options.getOption(i,  name);  [CE]  illegal  start  of  expression  [FE]                OptionException      [CONTEXT]      if  (option  instanceof  Argument)  {  i.remove();  newAnonymous.add(option);  }  else  {  final  Set  triggers  =  option.getTriggers();      [BUGGY]  Option  option  =  options.getOption(i,  name);  [BUGGY]      for  (Iterator  j  =  triggers.iterator();  j.hasNext();)  {  newOptionMap.put(j.next(),  option);  }  newPrefixes.addAll(option.getPrefixes());  }  [CLASS]  GroupImpl  [METHOD]  <init>  [RETURN_TYPE]  String,int,int,boolean)  List  options  String  name  String  description  final  int  minimum  final  int  maximum  final  boolean  required  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  required  SortedMap  newOptionMap  optionMap  Iterator  i  j  List  anonymous  newAnonymous  options  Option  option  String  description  name  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	102	102	1	replace	Option  option  =  options.getOption(i,  name);	  Option    option    =    options.getOption(i,    description);    	non-compiled	[CE]  illegal  start  of  expression	62	None	replace
47	[BUG]  [BUGGY]  option  =  options.getOption(name,  description);  [CE]  illegal  start  of  expression  [FE]                  OptionException      [CONTEXT]      if  (option  instanceof  Argument)  {  i.remove();  newAnonymous.add(option);  }  else  {  final  Set  triggers  =  option.getTriggers();      [BUGGY]  option  =  options.getOption(name,  description);  [BUGGY]      for  (Iterator  j  =  triggers.iterator();  j.hasNext();)  {  newOptionMap.put(j.next(),  option);  }  newPrefixes.addAll(option.getPrefixes());  }  [CLASS]  GroupImpl  [METHOD]  <init>  [RETURN_TYPE]  String,int,int,boolean)  List  options  String  name  String  description  final  int  minimum  final  int  maximum  final  boolean  required  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  required  SortedMap  newOptionMap  optionMap  Iterator  i  j  List  anonymous  newAnonymous  options  Option  option  String  description  name  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	102	102	1	replace	option  =  options.getOption(name,  description);	  Option    option    =    options.getOption(i,    description);    	non-compiled	[CE]  illegal  start  of  expression	62	None	replace
48	[BUG]  [BUGGY]  Iterator  <  Option>  j  =  triggers.entities().iterator();  [CE]  illegal  start  of  expression  [FE]                  OptionException      [CONTEXT]      if  (option  instanceof  Argument)  {  i.remove();  newAnonymous.add(option);  }  else  {  final  Set  triggers  =  option.getTriggers();      [BUGGY]  Iterator  <  Option>  j  =  triggers.entities().iterator();  [BUGGY]      newOptionMap.put(j.next(),  option);  }  newPrefixes.addAll(option.getPrefixes());  }  [CLASS]  GroupImpl  [METHOD]  <init>  [RETURN_TYPE]  String,int,int,boolean)  List  options  String  name  String  description  final  int  minimum  final  int  maximum  final  boolean  required  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  required  SortedMap  newOptionMap  optionMap  Iterator  i  j  List  anonymous  newAnonymous  options  Option  option  String  description  name  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	102	102	1	replace	Iterator  <  Option>  j  =  triggers.entities().iterator();	  Iterator    <    Option>    j    =    options.entities().iterator();    	non-compiled	[CE]  illegal  start  of  expression	40	None	replace
49	[BUG]  [BUGGY]  final  Iterator  <  Option>  j  =  options.entities().iterator();  [CE]  illegal  start  of  expression  [FE]                    OptionException      [CONTEXT]      if  (option  instanceof  Argument)  {  i.remove();  newAnonymous.add(option);  }  else  {  final  Set  triggers  =  option.getTriggers();      [BUGGY]  final  Iterator  <  Option>  j  =  options.entities().iterator();  [BUGGY]      newOptionMap.put(j.next(),  option);  }  newPrefixes.addAll(option.getPrefixes());  }  [CLASS]  GroupImpl  [METHOD]  <init>  [RETURN_TYPE]  String,int,int,boolean)  List  options  String  name  String  description  final  int  minimum  final  int  maximum  final  boolean  required  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  required  SortedMap  newOptionMap  optionMap  Iterator  i  j  List  anonymous  newAnonymous  options  Option  option  String  description  name  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	102	102	1	replace	final  Iterator  <  Option>  j  =  options.entities().iterator();	  Iterator    <    Option>    j    =    options.entities().iterator();    	non-compiled	[CE]  illegal  start  of  expression	40	None	replace
50	[BUG]  [BUGGY]  For(Iterator  it  =  triggers.iterator();  it.hasNext();)  {  [CE]  illegal  start  of  expression  [FE]            OptionException      [CONTEXT]      if  (option  instanceof  Argument)  {  i.remove();  newAnonymous.add(option);  }  else  {  final  Set  triggers  =  option.getTriggers();      [BUGGY]  For(Iterator  it  =  triggers.iterator();  it.hasNext();)  {  [BUGGY]      newOptionMap.put(j.next(),  option);  }  newPrefixes.addAll(option.getPrefixes());  }  [CLASS]  GroupImpl  [METHOD]  <init>  [RETURN_TYPE]  String,int,int,boolean)  List  options  String  name  String  description  final  int  minimum  final  int  maximum  final  boolean  required  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  required  SortedMap  newOptionMap  optionMap  Iterator  i  j  List  anonymous  newAnonymous  options  Option  option  String  description  name  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	102	102	1	replace	For(Iterator  it  =  triggers.iterator();  it.hasNext();)  {	  For(Iterator    j    =    this.triggers.iterator();    j.hasNext();)    {    	non-compiled	[CE]  illegal  start  of  expression	20	None	replace
51	[BUG]  [BUGGY]  Option  option  =  options.getOption(name,  maximum);  [CE]  illegal  start  of  expression  [FE]                OptionException      [CONTEXT]      if  (option  instanceof  Argument)  {  i.remove();  newAnonymous.add(option);  }  else  {  final  Set  triggers  =  option.getTriggers();      [BUGGY]  Option  option  =  options.getOption(name,  maximum);  [BUGGY]      for  (Iterator  j  =  triggers.iterator();  j.hasNext();)  {  newOptionMap.put(j.next(),  option);  }  newPrefixes.addAll(option.getPrefixes());  }  [CLASS]  GroupImpl  [METHOD]  <init>  [RETURN_TYPE]  String,int,int,boolean)  List  options  String  name  String  description  final  int  minimum  final  int  maximum  final  boolean  required  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  required  SortedMap  newOptionMap  optionMap  Iterator  i  j  List  anonymous  newAnonymous  options  Option  option  String  description  name  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	102	102	1	replace	Option  option  =  options.getOption(name,  maximum);	  Option    option    =    options.getOption(name,    minimum);    	non-compiled	[CE]  illegal  start  of  expression	35	None	replace
52	[BUG]  [BUGGY]  Option  option  =  options.getOption(name,  minimum,  maximum);  [CE]  illegal  start  of  expression  [FE]                  OptionException      [CONTEXT]      if  (option  instanceof  Argument)  {  i.remove();  newAnonymous.add(option);  }  else  {  final  Set  triggers  =  option.getTriggers();      [BUGGY]  Option  option  =  options.getOption(name,  minimum,  maximum);  [BUGGY]      for  (Iterator  j  =  triggers.iterator();  j.hasNext();)  {  newOptionMap.put(j.next(),  option);  }  newPrefixes.addAll(option.getPrefixes());  }  [CLASS]  GroupImpl  [METHOD]  <init>  [RETURN_TYPE]  String,int,int,boolean)  List  options  String  name  String  description  final  int  minimum  final  int  maximum  final  boolean  required  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  required  SortedMap  newOptionMap  optionMap  Iterator  i  j  List  anonymous  newAnonymous  options  Option  option  String  description  name  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	102	102	1	replace	Option  option  =  options.getOption(name,  minimum,  maximum);	  Option    option    =    options.getOption(name,    minimum);    	non-compiled	[CE]  illegal  start  of  expression	35	None	replace
53	[BUG]  [BUGGY]  Option  option  =  options.getOption(description,  minimum);  [CE]  illegal  start  of  expression  [FE]                    OptionException      [CONTEXT]      if  (option  instanceof  Argument)  {  i.remove();  newAnonymous.add(option);  }  else  {  final  Set  triggers  =  option.getTriggers();      [BUGGY]  Option  option  =  options.getOption(description,  minimum);  [BUGGY]      for  (Iterator  j  =  triggers.iterator();  j.hasNext();)  {  newOptionMap.put(j.next(),  option);  }  newPrefixes.addAll(option.getPrefixes());  }  [CLASS]  GroupImpl  [METHOD]  <init>  [RETURN_TYPE]  String,int,int,boolean)  List  options  String  name  String  description  final  int  minimum  final  int  maximum  final  boolean  required  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  required  SortedMap  newOptionMap  optionMap  Iterator  i  j  List  anonymous  newAnonymous  options  Option  option  String  description  name  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	102	102	1	replace	Option  option  =  options.getOption(description,  minimum);	  Option    option    =    options.getOption(name,    minimum);    	non-compiled	[CE]  illegal  start  of  expression	35	None	replace
54	[BUG]  [BUGGY]  Option  option  =  options.getOption(name,  maximum,  minimum);  [CE]  illegal  start  of  expression  [FE]                      OptionException      [CONTEXT]      if  (option  instanceof  Argument)  {  i.remove();  newAnonymous.add(option);  }  else  {  final  Set  triggers  =  option.getTriggers();      [BUGGY]  Option  option  =  options.getOption(name,  maximum,  minimum);  [BUGGY]      for  (Iterator  j  =  triggers.iterator();  j.hasNext();)  {  newOptionMap.put(j.next(),  option);  }  newPrefixes.addAll(option.getPrefixes());  }  [CLASS]  GroupImpl  [METHOD]  <init>  [RETURN_TYPE]  String,int,int,boolean)  List  options  String  name  String  description  final  int  minimum  final  int  maximum  final  boolean  required  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  required  SortedMap  newOptionMap  optionMap  Iterator  i  j  List  anonymous  newAnonymous  options  Option  option  String  description  name  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	102	102	1	replace	Option  option  =  options.getOption(name,  maximum,  minimum);	  Option    option    =    options.getOption(name,    minimum);    	non-compiled	[CE]  illegal  start  of  expression	35	None	replace
55	[BUG]  [BUGGY]  final  List  <  Option>  options  =  option.getAnonymousOptions();  [CE]  illegal  start  of  expression  [FE]                OptionException      [CONTEXT]      if  (option  instanceof  Argument)  {  i.remove();  newAnonymous.add(option);  }  else  {  final  Set  triggers  =  option.getTriggers();      [BUGGY]  final  List  <  Option>  options  =  option.getAnonymousOptions();  [BUGGY]      for  (Iterator  j  =  triggers.iterator();  j.hasNext();)  {  newOptionMap.put(j.next(),  option);  }  newPrefixes.addAll(option.getPrefixes());  }  [CLASS]  GroupImpl  [METHOD]  <init>  [RETURN_TYPE]  String,int,int,boolean)  List  options  String  name  String  description  final  int  minimum  final  int  maximum  final  boolean  required  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  required  SortedMap  newOptionMap  optionMap  Iterator  i  j  List  anonymous  newAnonymous  options  Option  option  String  description  name  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	102	102	1	replace	final  List  <  Option>  options  =  option.getAnonymousOptions();	  final    Set    <    Option>    options    =    option.getAnonymousOptions();    	non-compiled	[CE]  illegal  start  of  expression	10	None	replace
56	[BUG]  [BUGGY]  Option  option  =  option.getOption(),  minimum);  [CE]  illegal  start  of  expression  [FE]                OptionException      [CONTEXT]      if  (option  instanceof  Argument)  {  i.remove();  newAnonymous.add(option);  }  else  {  final  Set  triggers  =  option.getTriggers();      [BUGGY]  Option  option  =  option.getOption(),  minimum);  [BUGGY]      for  (Iterator  j  =  triggers.iterator();  j.hasNext();)  {  newOptionMap.put(j.next(),  option);  }  newPrefixes.addAll(option.getPrefixes());  }  [CLASS]  GroupImpl  [METHOD]  <init>  [RETURN_TYPE]  String,int,int,boolean)  List  options  String  name  String  description  final  int  minimum  final  int  maximum  final  boolean  required  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  required  SortedMap  newOptionMap  optionMap  Iterator  i  j  List  anonymous  newAnonymous  options  Option  option  String  description  name  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	102	102	1	replace	Option  option  =  option.getOption(),  minimum);	  Option    option    =    option.getOption(),    required);    	non-compiled	[CE]  illegal  start  of  expression	3	None	replace
57	[BUG]  [BUGGY]  Option  option  =  option.getOption(),  required,  minimum);  [CE]  illegal  start  of  expression  [FE]                  OptionException      [CONTEXT]      if  (option  instanceof  Argument)  {  i.remove();  newAnonymous.add(option);  }  else  {  final  Set  triggers  =  option.getTriggers();      [BUGGY]  Option  option  =  option.getOption(),  required,  minimum);  [BUGGY]      for  (Iterator  j  =  triggers.iterator();  j.hasNext();)  {  newOptionMap.put(j.next(),  option);  }  newPrefixes.addAll(option.getPrefixes());  }  [CLASS]  GroupImpl  [METHOD]  <init>  [RETURN_TYPE]  String,int,int,boolean)  List  options  String  name  String  description  final  int  minimum  final  int  maximum  final  boolean  required  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  required  SortedMap  newOptionMap  optionMap  Iterator  i  j  List  anonymous  newAnonymous  options  Option  option  String  description  name  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	102	102	1	replace	Option  option  =  option.getOption(),  required,  minimum);	  Option    option    =    option.getOption(),    required);    	non-compiled	[CE]  illegal  start  of  expression	3	None	replace
58	[BUG]  [BUGGY]  Option  option  =  option.getOption(),  maximum);  [CE]  illegal  start  of  expression  [FE]                    OptionException      [CONTEXT]      if  (option  instanceof  Argument)  {  i.remove();  newAnonymous.add(option);  }  else  {  final  Set  triggers  =  option.getTriggers();      [BUGGY]  Option  option  =  option.getOption(),  maximum);  [BUGGY]      for  (Iterator  j  =  triggers.iterator();  j.hasNext();)  {  newOptionMap.put(j.next(),  option);  }  newPrefixes.addAll(option.getPrefixes());  }  [CLASS]  GroupImpl  [METHOD]  <init>  [RETURN_TYPE]  String,int,int,boolean)  List  options  String  name  String  description  final  int  minimum  final  int  maximum  final  boolean  required  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  required  SortedMap  newOptionMap  optionMap  Iterator  i  j  List  anonymous  newAnonymous  options  Option  option  String  description  name  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	102	102	1	replace	Option  option  =  option.getOption(),  maximum);	  Option    option    =    option.getOption(),    required);    	non-compiled	[CE]  illegal  start  of  expression	3	None	replace
59	[BUG]  [BUGGY]  Option  option  =  option.getOption(),  minimum,  required);  [CE]  illegal  start  of  expression  [FE]                      OptionException      [CONTEXT]      if  (option  instanceof  Argument)  {  i.remove();  newAnonymous.add(option);  }  else  {  final  Set  triggers  =  option.getTriggers();      [BUGGY]  Option  option  =  option.getOption(),  minimum,  required);  [BUGGY]      for  (Iterator  j  =  triggers.iterator();  j.hasNext();)  {  newOptionMap.put(j.next(),  option);  }  newPrefixes.addAll(option.getPrefixes());  }  [CLASS]  GroupImpl  [METHOD]  <init>  [RETURN_TYPE]  String,int,int,boolean)  List  options  String  name  String  description  final  int  minimum  final  int  maximum  final  boolean  required  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  required  SortedMap  newOptionMap  optionMap  Iterator  i  j  List  anonymous  newAnonymous  options  Option  option  String  description  name  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	102	102	1	replace	Option  option  =  option.getOption(),  minimum,  required);	  Option    option    =    option.getOption(),    required);    	non-compiled	[CE]  illegal  start  of  expression	3	None	replace
60	[BUG]  [BUGGY]  Option  option  =  option.getOption(i);  [CE]  illegal  start  of  expression  [FE]                OptionException      [CONTEXT]      if  (option  instanceof  Argument)  {  i.remove();  newAnonymous.add(option);  }  else  {  final  Set  triggers  =  option.getTriggers();      [BUGGY]  Option  option  =  option.getOption(i);  [BUGGY]      newOptionMap.put(j.next(),  option);  }  newPrefixes.addAll(option.getPrefixes());  }  [CLASS]  GroupImpl  [METHOD]  <init>  [RETURN_TYPE]  String,int,int,boolean)  List  options  String  name  String  description  final  int  minimum  final  int  maximum  final  boolean  required  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  required  SortedMap  newOptionMap  optionMap  Iterator  i  j  List  anonymous  newAnonymous  options  Option  option  String  description  name  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	102	102	1	replace	Option  option  =  option.getOption(i);	  Option    option    =    option.getOption(triggers);    	non-compiled	[CE]  illegal  start  of  expression	39	None	replace
61	[BUG]  [BUGGY]  Option  option  =  option.getOption(triggers,  required);  [CE]  illegal  start  of  expression  [FE]                  OptionException      [CONTEXT]      if  (option  instanceof  Argument)  {  i.remove();  newAnonymous.add(option);  }  else  {  final  Set  triggers  =  option.getTriggers();      [BUGGY]  Option  option  =  option.getOption(triggers,  required);  [BUGGY]      newOptionMap.put(j.next(),  option);  }  newPrefixes.addAll(option.getPrefixes());  }  [CLASS]  GroupImpl  [METHOD]  <init>  [RETURN_TYPE]  String,int,int,boolean)  List  options  String  name  String  description  final  int  minimum  final  int  maximum  final  boolean  required  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  required  SortedMap  newOptionMap  optionMap  Iterator  i  j  List  anonymous  newAnonymous  options  Option  option  String  description  name  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	102	102	1	replace	Option  option  =  option.getOption(triggers,  required);	  Option    option    =    option.getOption(triggers);    	non-compiled	[CE]  illegal  start  of  expression	39	None	replace
62	[BUG]  [BUGGY]  Option  option  =  option.getOption(prefixes);  [CE]  illegal  start  of  expression  [FE]                    OptionException      [CONTEXT]      if  (option  instanceof  Argument)  {  i.remove();  newAnonymous.add(option);  }  else  {  final  Set  triggers  =  option.getTriggers();      [BUGGY]  Option  option  =  option.getOption(prefixes);  [BUGGY]      newOptionMap.put(j.next(),  option);  }  newPrefixes.addAll(option.getPrefixes());  }  [CLASS]  GroupImpl  [METHOD]  <init>  [RETURN_TYPE]  String,int,int,boolean)  List  options  String  name  String  description  final  int  minimum  final  int  maximum  final  boolean  required  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  required  SortedMap  newOptionMap  optionMap  Iterator  i  j  List  anonymous  newAnonymous  options  Option  option  String  description  name  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	102	102	1	replace	Option  option  =  option.getOption(prefixes);	  Option    option    =    option.getOption(triggers);    	non-compiled	[CE]  illegal  start  of  expression	39	None	replace
63	[BUG]  [BUGGY]  i.addAll(option.getArgument());  [CE]  illegal  start  of  expression  [FE]                        OptionException      [CONTEXT]      if  (option  instanceof  Argument)  {  i.remove();  newAnonymous.add(option);  }  else  {  final  Set  triggers  =  option.getTriggers();      [BUGGY]  i.addAll(option.getArgument());  [BUGGY]      for  (Iterator  j  =  triggers.iterator();  j.hasNext();)  {  newOptionMap.put(j.next(),  option);  }  newPrefixes.addAll(option.getPrefixes());  }  [CLASS]  GroupImpl  [METHOD]  <init>  [RETURN_TYPE]  String,int,int,boolean)  List  options  String  name  String  description  final  int  minimum  final  int  maximum  final  boolean  required  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  required  SortedMap  newOptionMap  optionMap  Iterator  i  j  List  anonymous  newAnonymous  options  Option  option  String  description  name  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	102	102	1	replace	i.addAll(option.getArgument());	  i.add(option.getArgument());    	non-compiled	[CE]  illegal  start  of  expression	44	None	replace
64	[BUG]  [BUGGY]  Option  option  =  option.getOption(newAnonymous);  [CE]  illegal  start  of  expression  [FE]            OptionException      [CONTEXT]      if  (option  instanceof  Argument)  {  i.remove();  newAnonymous.add(option);  }  else  {  final  Set  triggers  =  option.getTriggers();      [BUGGY]  Option  option  =  option.getOption(newAnonymous);  [BUGGY]      for  (Iterator  j  =  triggers.iterator();  j.hasNext();)  {  newOptionMap.put(j.next(),  option);  }  newPrefixes.addAll(option.getPrefixes());  }  [CLASS]  GroupImpl  [METHOD]  <init>  [RETURN_TYPE]  String,int,int,boolean)  List  options  String  name  String  description  final  int  minimum  final  int  maximum  final  boolean  required  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  required  SortedMap  newOptionMap  optionMap  Iterator  i  j  List  anonymous  newAnonymous  options  Option  option  String  description  name  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	102	102	1	replace	Option  option  =  option.getOption(newAnonymous);	  Option    option    =    option.getOption(defaultAnonymous);    	non-compiled	[CE]  illegal  start  of  expression	56	None	replace
65	[BUG]  [BUGGY]  Option  option  =  option.getOption(defaultAnonymous,  newAnonymous);  [CE]  illegal  start  of  expression  [FE]              OptionException      [CONTEXT]      if  (option  instanceof  Argument)  {  i.remove();  newAnonymous.add(option);  }  else  {  final  Set  triggers  =  option.getTriggers();      [BUGGY]  Option  option  =  option.getOption(defaultAnonymous,  newAnonymous);  [BUGGY]      for  (Iterator  j  =  triggers.iterator();  j.hasNext();)  {  newOptionMap.put(j.next(),  option);  }  newPrefixes.addAll(option.getPrefixes());  }  [CLASS]  GroupImpl  [METHOD]  <init>  [RETURN_TYPE]  String,int,int,boolean)  List  options  String  name  String  description  final  int  minimum  final  int  maximum  final  boolean  required  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  required  SortedMap  newOptionMap  optionMap  Iterator  i  j  List  anonymous  newAnonymous  options  Option  option  String  description  name  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	102	102	1	replace	Option  option  =  option.getOption(defaultAnonymous,  newAnonymous);	  Option    option    =    option.getOption(defaultAnonymous);    	non-compiled	[CE]  illegal  start  of  expression	56	None	replace
66	[BUG]  [BUGGY]  Option  option  =  option.getOption(defaultAnonymous,  triggers);  [CE]  illegal  start  of  expression  [FE]                OptionException      [CONTEXT]      if  (option  instanceof  Argument)  {  i.remove();  newAnonymous.add(option);  }  else  {  final  Set  triggers  =  option.getTriggers();      [BUGGY]  Option  option  =  option.getOption(defaultAnonymous,  triggers);  [BUGGY]      for  (Iterator  j  =  triggers.iterator();  j.hasNext();)  {  newOptionMap.put(j.next(),  option);  }  newPrefixes.addAll(option.getPrefixes());  }  [CLASS]  GroupImpl  [METHOD]  <init>  [RETURN_TYPE]  String,int,int,boolean)  List  options  String  name  String  description  final  int  minimum  final  int  maximum  final  boolean  required  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  required  SortedMap  newOptionMap  optionMap  Iterator  i  j  List  anonymous  newAnonymous  options  Option  option  String  description  name  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	102	102	1	replace	Option  option  =  option.getOption(defaultAnonymous,  triggers);	  Option    option    =    option.getOption(defaultAnonymous);    	non-compiled	[CE]  illegal  start  of  expression	56	None	replace
67	[BUG]  [BUGGY]  Option  option  =  options.getOption(name,  minimum,  required);  [CE]  illegal  start  of  expression  [FE]              OptionException      [CONTEXT]      if  (option  instanceof  Argument)  {  i.remove();  newAnonymous.add(option);  }  else  {  final  Set  triggers  =  option.getTriggers();      [BUGGY]  Option  option  =  options.getOption(name,  minimum,  required);  [BUGGY]      for  (Iterator  j  =  triggers.iterator();  j.hasNext();)  {  newOptionMap.put(j.next(),  option);  }  newPrefixes.addAll(option.getPrefixes());  }  [CLASS]  GroupImpl  [METHOD]  <init>  [RETURN_TYPE]  String,int,int,boolean)  List  options  String  name  String  description  final  int  minimum  final  int  maximum  final  boolean  required  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  required  SortedMap  newOptionMap  optionMap  Iterator  i  j  List  anonymous  newAnonymous  options  Option  option  String  description  name  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	102	102	1	replace	Option  option  =  options.getOption(name,  minimum,  required);	  Option    option    =    options.getOption(name,    required);    	non-compiled	[CE]  illegal  start  of  expression	34	None	replace
68	[BUG]  [BUGGY]  Option  option  =  options.getOption(prefixes);  [CE]  illegal  start  of  expression  [FE]                  OptionException      [CONTEXT]      if  (option  instanceof  Argument)  {  i.remove();  newAnonymous.add(option);  }  else  {  final  Set  triggers  =  option.getTriggers();      [BUGGY]  Option  option  =  options.getOption(prefixes);  [BUGGY]      for  (Iterator  j  =  triggers.iterator();  j.hasNext();)  {  newOptionMap.put(j.next(),  option);  }  newPrefixes.addAll(option.getPrefixes());  }  [CLASS]  GroupImpl  [METHOD]  <init>  [RETURN_TYPE]  String,int,int,boolean)  List  options  String  name  String  description  final  int  minimum  final  int  maximum  final  boolean  required  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  required  SortedMap  newOptionMap  optionMap  Iterator  i  j  List  anonymous  newAnonymous  options  Option  option  String  description  name  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	102	102	1	replace	Option  option  =  options.getOption(prefixes);	  Option    option    =    options.getOption(required);    	non-compiled	[CE]  illegal  start  of  expression	7	None	replace
69	[BUG]  [BUGGY]  Option  option  =  options.getOption(required,  minimum);  [CE]  illegal  start  of  expression  [FE]                    OptionException      [CONTEXT]      if  (option  instanceof  Argument)  {  i.remove();  newAnonymous.add(option);  }  else  {  final  Set  triggers  =  option.getTriggers();      [BUGGY]  Option  option  =  options.getOption(required,  minimum);  [BUGGY]      for  (Iterator  j  =  triggers.iterator();  j.hasNext();)  {  newOptionMap.put(j.next(),  option);  }  newPrefixes.addAll(option.getPrefixes());  }  [CLASS]  GroupImpl  [METHOD]  <init>  [RETURN_TYPE]  String,int,int,boolean)  List  options  String  name  String  description  final  int  minimum  final  int  maximum  final  boolean  required  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  required  SortedMap  newOptionMap  optionMap  Iterator  i  j  List  anonymous  newAnonymous  options  Option  option  String  description  name  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	102	102	1	replace	Option  option  =  options.getOption(required,  minimum);	  Option    option    =    options.getOption(required);    	non-compiled	[CE]  illegal  start  of  expression	7	None	replace
70	[BUG]  [BUGGY]  Option  option  =  options.getOption(minor);  [CE]  illegal  start  of  expression  [FE]                      OptionException      [CONTEXT]      if  (option  instanceof  Argument)  {  i.remove();  newAnonymous.add(option);  }  else  {  final  Set  triggers  =  option.getTriggers();      [BUGGY]  Option  option  =  options.getOption(minor);  [BUGGY]      for  (Iterator  j  =  triggers.iterator();  j.hasNext();)  {  newOptionMap.put(j.next(),  option);  }  newPrefixes.addAll(option.getPrefixes());  }  [CLASS]  GroupImpl  [METHOD]  <init>  [RETURN_TYPE]  String,int,int,boolean)  List  options  String  name  String  description  final  int  minimum  final  int  maximum  final  boolean  required  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  required  SortedMap  newOptionMap  optionMap  Iterator  i  j  List  anonymous  newAnonymous  options  Option  option  String  description  name  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	102	102	1	replace	Option  option  =  options.getOption(minor);	  Option    option    =    options.getOption(required);    	non-compiled	[CE]  illegal  start  of  expression	7	None	replace
71	[BUG]  [BUGGY]  for(Iterator  j  =  triggers.entrySet().iterator();  j.hasNext();)  {  [CE]  illegal  start  of  expression  [FE]              OptionException      [CONTEXT]      if  (option  instanceof  Argument)  {  i.remove();  newAnonymous.add(option);  }  else  {  final  Set  triggers  =  option.getTriggers();      [BUGGY]  for(Iterator  j  =  triggers.entrySet().iterator();  j.hasNext();)  {  [BUGGY]      newOptionMap.put(j.next(),  option);  }  newPrefixes.addAll(option.getPrefixes());  }  [CLASS]  GroupImpl  [METHOD]  <init>  [RETURN_TYPE]  String,int,int,boolean)  List  options  String  name  String  description  final  int  minimum  final  int  maximum  final  boolean  required  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  required  SortedMap  newOptionMap  optionMap  Iterator  i  j  List  anonymous  newAnonymous  options  Option  option  String  description  name  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	102	102	1	replace	for(Iterator  j  =  triggers.entrySet().iterator();  j.hasNext();)  {	  for(Iterator    j    =    options.entrySet().iterator();    j.hasNext();)    {    	non-compiled	[CE]  illegal  start  of  expression	54	None	replace
72	[BUG]  [BUGGY]  Option  option  =  options.getOption(default,  newAnonymous);  [CE]  illegal  start  of  expression  [FE]                    OptionException      [CONTEXT]      if  (option  instanceof  Argument)  {  i.remove();  newAnonymous.add(option);  }  else  {  final  Set  triggers  =  option.getTriggers();      [BUGGY]  Option  option  =  options.getOption(default,  newAnonymous);  [BUGGY]      for  (Iterator  j  =  triggers.iterator();  j.hasNext();)  {  newOptionMap.put(j.next(),  option);  }  newPrefixes.addAll(option.getPrefixes());  }  [CLASS]  GroupImpl  [METHOD]  <init>  [RETURN_TYPE]  String,int,int,boolean)  List  options  String  name  String  description  final  int  minimum  final  int  maximum  final  boolean  required  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  required  SortedMap  newOptionMap  optionMap  Iterator  i  j  List  anonymous  newAnonymous  options  Option  option  String  description  name  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	102	102	1	replace	Option  option  =  options.getOption(default,  newAnonymous);	  Option    option    =    options.getOption(default);    	non-compiled	[CE]  illegal  start  of  expression	8	None	replace
73	[BUG]  [BUGGY]  Option  option  =  options.getOption(default,  required);  [CE]  illegal  start  of  expression  [FE]                      OptionException      [CONTEXT]      if  (option  instanceof  Argument)  {  i.remove();  newAnonymous.add(option);  }  else  {  final  Set  triggers  =  option.getTriggers();      [BUGGY]  Option  option  =  options.getOption(default,  required);  [BUGGY]      for  (Iterator  j  =  triggers.iterator();  j.hasNext();)  {  newOptionMap.put(j.next(),  option);  }  newPrefixes.addAll(option.getPrefixes());  }  [CLASS]  GroupImpl  [METHOD]  <init>  [RETURN_TYPE]  String,int,int,boolean)  List  options  String  name  String  description  final  int  minimum  final  int  maximum  final  boolean  required  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  required  SortedMap  newOptionMap  optionMap  Iterator  i  j  List  anonymous  newAnonymous  options  Option  option  String  description  name  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	102	102	1	replace	Option  option  =  options.getOption(default,  required);	  Option    option    =    options.getOption(default);    	non-compiled	[CE]  illegal  start  of  expression	8	None	replace
74	[BUG]  [BUGGY]  newAnonymous.clear();  [CE]  illegal  start  of  expression  [FE]                    OptionException      [CONTEXT]      if  (option  instanceof  Argument)  {  i.remove();  newAnonymous.add(option);  }  else  {  final  Set  triggers  =  option.getTriggers();      [BUGGY]  newAnonymous.clear();  [BUGGY]      for  (Iterator  j  =  triggers.iterator();  j.hasNext();)  {  newOptionMap.put(j.next(),  option);  }  newPrefixes.addAll(option.getPrefixes());  }  [CLASS]  GroupImpl  [METHOD]  <init>  [RETURN_TYPE]  String,int,int,boolean)  List  options  String  name  String  description  final  int  minimum  final  int  maximum  final  boolean  required  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  required  SortedMap  newOptionMap  optionMap  Iterator  i  j  List  anonymous  newAnonymous  options  Option  option  String  description  name  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	102	102	1	replace	newAnonymous.clear();	  i.clear();    	non-compiled	[CE]  illegal  start  of  expression	42	None	replace
75	[BUG]  [BUGGY]  Option  option  =  option.getOption(name,  minimum,  maximum);  [CE]  illegal  start  of  expression  [FE]                OptionException      [CONTEXT]      if  (option  instanceof  Argument)  {  i.remove();  newAnonymous.add(option);  }  else  {  final  Set  triggers  =  option.getTriggers();      [BUGGY]  Option  option  =  option.getOption(name,  minimum,  maximum);  [BUGGY]      for  (Iterator  j  =  triggers.iterator();  j.hasNext();)  {  newOptionMap.put(j.next(),  option);  }  newPrefixes.addAll(option.getPrefixes());  }  [CLASS]  GroupImpl  [METHOD]  <init>  [RETURN_TYPE]  String,int,int,boolean)  List  options  String  name  String  description  final  int  minimum  final  int  maximum  final  boolean  required  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  required  SortedMap  newOptionMap  optionMap  Iterator  i  j  List  anonymous  newAnonymous  options  Option  option  String  description  name  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	102	102	1	replace	Option  option  =  option.getOption(name,  minimum,  maximum);	  Option    option    =    option.getOption(name,    minimum);    	non-compiled	[CE]  illegal  start  of  expression	14	None	replace
76	[BUG]  [BUGGY]  Option  option  =  option.getOption(description,  minimum);  [CE]  illegal  start  of  expression  [FE]                  OptionException      [CONTEXT]      if  (option  instanceof  Argument)  {  i.remove();  newAnonymous.add(option);  }  else  {  final  Set  triggers  =  option.getTriggers();      [BUGGY]  Option  option  =  option.getOption(description,  minimum);  [BUGGY]      for  (Iterator  j  =  triggers.iterator();  j.hasNext();)  {  newOptionMap.put(j.next(),  option);  }  newPrefixes.addAll(option.getPrefixes());  }  [CLASS]  GroupImpl  [METHOD]  <init>  [RETURN_TYPE]  String,int,int,boolean)  List  options  String  name  String  description  final  int  minimum  final  int  maximum  final  boolean  required  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  required  SortedMap  newOptionMap  optionMap  Iterator  i  j  List  anonymous  newAnonymous  options  Option  option  String  description  name  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	102	102	1	replace	Option  option  =  option.getOption(description,  minimum);	  Option    option    =    option.getOption(name,    minimum);    	non-compiled	[CE]  illegal  start  of  expression	14	None	replace
77	[BUG]  [BUGGY]  Option  option  =  option.getOptionMap(),  newAnonymous,  required);  [CE]  illegal  start  of  expression  [FE]              OptionException      [CONTEXT]      if  (option  instanceof  Argument)  {  i.remove();  newAnonymous.add(option);  }  else  {  final  Set  triggers  =  option.getTriggers();      [BUGGY]  Option  option  =  option.getOptionMap(),  newAnonymous,  required);  [BUGGY]      for  (Iterator  j  =  triggers.iterator();  j.hasNext();)  {  newOptionMap.put(j.next(),  option);  }  newPrefixes.addAll(option.getPrefixes());  }  [CLASS]  GroupImpl  [METHOD]  <init>  [RETURN_TYPE]  String,int,int,boolean)  List  options  String  name  String  description  final  int  minimum  final  int  maximum  final  boolean  required  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  required  SortedMap  newOptionMap  optionMap  Iterator  i  j  List  anonymous  newAnonymous  options  Option  option  String  description  name  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	102	102	1	replace	Option  option  =  option.getOptionMap(),  newAnonymous,  required);	  Option    option    =    option.getOptionMap(),    newAnonymous);    	non-compiled	[CE]  illegal  start  of  expression	25	None	replace
78	[BUG]  [BUGGY]  Option  option  =  option.getOptionMap(),  newAnonymous,  prefixes);  [CE]  illegal  start  of  expression  [FE]                OptionException      [CONTEXT]      if  (option  instanceof  Argument)  {  i.remove();  newAnonymous.add(option);  }  else  {  final  Set  triggers  =  option.getTriggers();      [BUGGY]  Option  option  =  option.getOptionMap(),  newAnonymous,  prefixes);  [BUGGY]      for  (Iterator  j  =  triggers.iterator();  j.hasNext();)  {  newOptionMap.put(j.next(),  option);  }  newPrefixes.addAll(option.getPrefixes());  }  [CLASS]  GroupImpl  [METHOD]  <init>  [RETURN_TYPE]  String,int,int,boolean)  List  options  String  name  String  description  final  int  minimum  final  int  maximum  final  boolean  required  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  required  SortedMap  newOptionMap  optionMap  Iterator  i  j  List  anonymous  newAnonymous  options  Option  option  String  description  name  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	102	102	1	replace	Option  option  =  option.getOptionMap(),  newAnonymous,  prefixes);	  Option    option    =    option.getOptionMap(),    newAnonymous);    	non-compiled	[CE]  illegal  start  of  expression	25	None	replace
79	[BUG]  [BUGGY]  Option  option  =  option.getOptionMap(),  this);  [CE]  illegal  start  of  expression  [FE]                  OptionException      [CONTEXT]      if  (option  instanceof  Argument)  {  i.remove();  newAnonymous.add(option);  }  else  {  final  Set  triggers  =  option.getTriggers();      [BUGGY]  Option  option  =  option.getOptionMap(),  this);  [BUGGY]      for  (Iterator  j  =  triggers.iterator();  j.hasNext();)  {  newOptionMap.put(j.next(),  option);  }  newPrefixes.addAll(option.getPrefixes());  }  [CLASS]  GroupImpl  [METHOD]  <init>  [RETURN_TYPE]  String,int,int,boolean)  List  options  String  name  String  description  final  int  minimum  final  int  maximum  final  boolean  required  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  required  SortedMap  newOptionMap  optionMap  Iterator  i  j  List  anonymous  newAnonymous  options  Option  option  String  description  name  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	102	102	1	replace	Option  option  =  option.getOptionMap(),  this);	  Option    option    =    option.getOptionMap(),    newAnonymous);    	non-compiled	[CE]  illegal  start  of  expression	25	None	replace
80	[BUG]  [BUGGY]  if(required)  {  i.remove();  newAnonymous.add(option,  required);  }  [CE]  illegal  start  of  expression  [FE]                  OptionException      [CONTEXT]      if  (option  instanceof  Argument)  {  i.remove();  newAnonymous.add(option);  }  else  {  final  Set  triggers  =  option.getTriggers();      [BUGGY]  if(required)  {  i.remove();  newAnonymous.add(option,  required);  }  [BUGGY]      for  (Iterator  j  =  triggers.iterator();  j.hasNext();)  {  newOptionMap.put(j.next(),  option);  }  newPrefixes.addAll(option.getPrefixes());  }  [CLASS]  GroupImpl  [METHOD]  <init>  [RETURN_TYPE]  String,int,int,boolean)  List  options  String  name  String  description  final  int  minimum  final  int  maximum  final  boolean  required  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  required  SortedMap  newOptionMap  optionMap  Iterator  i  j  List  anonymous  newAnonymous  options  Option  option  String  description  name  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	102	102	1	replace	if(required)  {  i.remove();  newAnonymous.add(option,  required);  }	  if(required)    {    i.remove();    newAnonymous.add(option);    }    	non-compiled	[CE]  illegal  start  of  expression	16	None	replace
81	[BUG]  [BUGGY]  newAnonymous.addAll(option.getTriggers());  [CE]  illegal  start  of  expression  [FE]                    OptionException      [CONTEXT]      if  (option  instanceof  Argument)  {  i.remove();  newAnonymous.add(option);  }  else  {  final  Set  triggers  =  option.getTriggers();      [BUGGY]  newAnonymous.addAll(option.getTriggers());  [BUGGY]      for  (Iterator  j  =  triggers.iterator();  j.hasNext();)  {  newOptionMap.put(j.next(),  option);  }  newPrefixes.addAll(option.getPrefixes());  }  [CLASS]  GroupImpl  [METHOD]  <init>  [RETURN_TYPE]  String,int,int,boolean)  List  options  String  name  String  description  final  int  minimum  final  int  maximum  final  boolean  required  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  required  SortedMap  newOptionMap  optionMap  Iterator  i  j  List  anonymous  newAnonymous  options  Option  option  String  description  name  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	102	102	1	replace	newAnonymous.addAll(option.getTriggers());	  newAnonymous.addAll(option.getPrefixes());    	non-compiled	[CE]  illegal  start  of  expression	30	None	replace
82	[BUG]  [BUGGY]  newAnonymous.addAll(option.getPrefixes(),  triggers);  [CE]  illegal  start  of  expression  [FE]                      OptionException      [CONTEXT]      if  (option  instanceof  Argument)  {  i.remove();  newAnonymous.add(option);  }  else  {  final  Set  triggers  =  option.getTriggers();      [BUGGY]  newAnonymous.addAll(option.getPrefixes(),  triggers);  [BUGGY]      for  (Iterator  j  =  triggers.iterator();  j.hasNext();)  {  newOptionMap.put(j.next(),  option);  }  newPrefixes.addAll(option.getPrefixes());  }  [CLASS]  GroupImpl  [METHOD]  <init>  [RETURN_TYPE]  String,int,int,boolean)  List  options  String  name  String  description  final  int  minimum  final  int  maximum  final  boolean  required  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  required  SortedMap  newOptionMap  optionMap  Iterator  i  j  List  anonymous  newAnonymous  options  Option  option  String  description  name  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	102	102	1	replace	newAnonymous.addAll(option.getPrefixes(),  triggers);	  newAnonymous.addAll(option.getPrefixes());    	non-compiled	[CE]  illegal  start  of  expression	30	None	replace
83	[BUG]  [BUGGY]  newAnonymous.addAll(option.getArguments());  [CE]  illegal  start  of  expression  [FE]                        OptionException      [CONTEXT]      if  (option  instanceof  Argument)  {  i.remove();  newAnonymous.add(option);  }  else  {  final  Set  triggers  =  option.getTriggers();      [BUGGY]  newAnonymous.addAll(option.getArguments());  [BUGGY]      for  (Iterator  j  =  triggers.iterator();  j.hasNext();)  {  newOptionMap.put(j.next(),  option);  }  newPrefixes.addAll(option.getPrefixes());  }  [CLASS]  GroupImpl  [METHOD]  <init>  [RETURN_TYPE]  String,int,int,boolean)  List  options  String  name  String  description  final  int  minimum  final  int  maximum  final  boolean  required  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  required  SortedMap  newOptionMap  optionMap  Iterator  i  j  List  anonymous  newAnonymous  options  Option  option  String  description  name  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	102	102	1	replace	newAnonymous.addAll(option.getArguments());	  newAnonymous.addAll(option.getPrefixes());    	non-compiled	[CE]  illegal  start  of  expression	30	None	replace
84	[BUG]  [BUGGY]  For(Iterator  j  =  triggers.entities.iterator();  j.hasNext();)  {  [CE]  illegal  start  of  expression  [FE]              OptionException      [CONTEXT]      if  (option  instanceof  Argument)  {  i.remove();  newAnonymous.add(option);  }  else  {  final  Set  triggers  =  option.getTriggers();      [BUGGY]  For(Iterator  j  =  triggers.entities.iterator();  j.hasNext();)  {  [BUGGY]      newOptionMap.put(j.next(),  option);  }  newPrefixes.addAll(option.getPrefixes());  }  [CLASS]  GroupImpl  [METHOD]  <init>  [RETURN_TYPE]  String,int,int,boolean)  List  options  String  name  String  description  final  int  minimum  final  int  maximum  final  boolean  required  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  required  SortedMap  newOptionMap  optionMap  Iterator  i  j  List  anonymous  newAnonymous  options  Option  option  String  description  name  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	102	102	1	replace	For(Iterator  j  =  triggers.entities.iterator();  j.hasNext();)  {	  For(Iterator    j    =    options.entities.iterator();    j.hasNext();)    {    	non-compiled	[CE]  illegal  start  of  expression	47	None	replace
85	[BUG]  [BUGGY]  For(Iterator  <  Option>  j  =  options.entities.iterator();  j.hasNext();)  {  [CE]  illegal  start  of  expression  [FE]                OptionException      [CONTEXT]      if  (option  instanceof  Argument)  {  i.remove();  newAnonymous.add(option);  }  else  {  final  Set  triggers  =  option.getTriggers();      [BUGGY]  For(Iterator  <  Option>  j  =  options.entities.iterator();  j.hasNext();)  {  [BUGGY]      newOptionMap.put(j.next(),  option);  }  newPrefixes.addAll(option.getPrefixes());  }  [CLASS]  GroupImpl  [METHOD]  <init>  [RETURN_TYPE]  String,int,int,boolean)  List  options  String  name  String  description  final  int  minimum  final  int  maximum  final  boolean  required  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  required  SortedMap  newOptionMap  optionMap  Iterator  i  j  List  anonymous  newAnonymous  options  Option  option  String  description  name  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	102	102	1	replace	For(Iterator  <  Option>  j  =  options.entities.iterator();  j.hasNext();)  {	  For(Iterator    j    =    options.entities.iterator();    j.hasNext();)    {    	non-compiled	[CE]  illegal  start  of  expression	47	None	replace
86	[BUG]  [BUGGY]  newAnonymous.addAll(triggers);  [CE]  illegal  start  of  expression  [FE]                    OptionException      [CONTEXT]      if  (option  instanceof  Argument)  {  i.remove();  newAnonymous.add(option);  }  else  {  final  Set  triggers  =  option.getTriggers();      [BUGGY]  newAnonymous.addAll(triggers);  [BUGGY]      for  (Iterator  j  =  triggers.iterator();  j.hasNext();)  {  newOptionMap.put(j.next(),  option);  }  newPrefixes.addAll(option.getPrefixes());  }  [CLASS]  GroupImpl  [METHOD]  <init>  [RETURN_TYPE]  String,int,int,boolean)  List  options  String  name  String  description  final  int  minimum  final  int  maximum  final  boolean  required  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  required  SortedMap  newOptionMap  optionMap  Iterator  i  j  List  anonymous  newAnonymous  options  Option  option  String  description  name  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	102	102	1	replace	newAnonymous.addAll(triggers);	  newAnonymous.add(option);    	non-compiled	[CE]  illegal  start  of  expression	17	None	replace
87	[BUG]  [BUGGY]  newAnonymous.addAll(option);  [CE]  illegal  start  of  expression  [FE]                      OptionException      [CONTEXT]      if  (option  instanceof  Argument)  {  i.remove();  newAnonymous.add(option);  }  else  {  final  Set  triggers  =  option.getTriggers();      [BUGGY]  newAnonymous.addAll(option);  [BUGGY]      for  (Iterator  j  =  triggers.iterator();  j.hasNext();)  {  newOptionMap.put(j.next(),  option);  }  newPrefixes.addAll(option.getPrefixes());  }  [CLASS]  GroupImpl  [METHOD]  <init>  [RETURN_TYPE]  String,int,int,boolean)  List  options  String  name  String  description  final  int  minimum  final  int  maximum  final  boolean  required  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  required  SortedMap  newOptionMap  optionMap  Iterator  i  j  List  anonymous  newAnonymous  options  Option  option  String  description  name  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	102	102	1	replace	newAnonymous.addAll(option);	  newAnonymous.add(option);    	non-compiled	[CE]  illegal  start  of  expression	17	None	replace
88	[BUG]  [BUGGY]  Iterator  j  =  triggers.iterator();  [CE]  illegal  start  of  expression  [FE]                OptionException      [CONTEXT]      if  (option  instanceof  Argument)  {  i.remove();  newAnonymous.add(option);  }  else  {  final  Set  triggers  =  option.getTriggers();      [BUGGY]  Iterator  j  =  triggers.iterator();  [BUGGY]      newOptionMap.put(j.next(),  option);  }  newPrefixes.addAll(option.getPrefixes());  }  [CLASS]  GroupImpl  [METHOD]  <init>  [RETURN_TYPE]  String,int,int,boolean)  List  options  String  name  String  description  final  int  minimum  final  int  maximum  final  boolean  required  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  required  SortedMap  newOptionMap  optionMap  Iterator  i  j  List  anonymous  newAnonymous  options  Option  option  String  description  name  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	102	102	1	replace	Iterator  j  =  triggers.iterator();	  Iterator    j    =    options.iterator();    	non-compiled	[CE]  illegal  start  of  expression	61	None	replace
89	[BUG]  [BUGGY]  final  Iterator  j  =  options.iterator();  [CE]  illegal  start  of  expression  [FE]                  OptionException      [CONTEXT]      if  (option  instanceof  Argument)  {  i.remove();  newAnonymous.add(option);  }  else  {  final  Set  triggers  =  option.getTriggers();      [BUGGY]  final  Iterator  j  =  options.iterator();  [BUGGY]      newOptionMap.put(j.next(),  option);  }  newPrefixes.addAll(option.getPrefixes());  }  [CLASS]  GroupImpl  [METHOD]  <init>  [RETURN_TYPE]  String,int,int,boolean)  List  options  String  name  String  description  final  int  minimum  final  int  maximum  final  boolean  required  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  required  SortedMap  newOptionMap  optionMap  Iterator  i  j  List  anonymous  newAnonymous  options  Option  option  String  description  name  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	102	102	1	replace	final  Iterator  j  =  options.iterator();	  Iterator    j    =    options.iterator();    	non-compiled	[CE]  illegal  start  of  expression	61	None	replace
90	[BUG]  [BUGGY]  final  Iterator  <  Option>  j  =  options.iterator();  [CE]  illegal  start  of  expression  [FE]                OptionException      [CONTEXT]      if  (option  instanceof  Argument)  {  i.remove();  newAnonymous.add(option);  }  else  {  final  Set  triggers  =  option.getTriggers();      [BUGGY]  final  Iterator  <  Option>  j  =  options.iterator();  [BUGGY]      newOptionMap.put(j.next(),  option);  }  newPrefixes.addAll(option.getPrefixes());  }  [CLASS]  GroupImpl  [METHOD]  <init>  [RETURN_TYPE]  String,int,int,boolean)  List  options  String  name  String  description  final  int  minimum  final  int  maximum  final  boolean  required  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  required  SortedMap  newOptionMap  optionMap  Iterator  i  j  List  anonymous  newAnonymous  options  Option  option  String  description  name  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	102	102	1	replace	final  Iterator  <  Option>  j  =  options.iterator();	  Iterator    <    Option>    j    =    options.iterator();    	non-compiled	[CE]  illegal  start  of  expression	18	None	replace
91	[BUG]  [BUGGY]  Iterator  <  Option>  j  =  this.options.iterator();  [CE]  illegal  start  of  expression  [FE]                  OptionException      [CONTEXT]      if  (option  instanceof  Argument)  {  i.remove();  newAnonymous.add(option);  }  else  {  final  Set  triggers  =  option.getTriggers();      [BUGGY]  Iterator  <  Option>  j  =  this.options.iterator();  [BUGGY]      newOptionMap.put(j.next(),  option);  }  newPrefixes.addAll(option.getPrefixes());  }  [CLASS]  GroupImpl  [METHOD]  <init>  [RETURN_TYPE]  String,int,int,boolean)  List  options  String  name  String  description  final  int  minimum  final  int  maximum  final  boolean  required  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  required  SortedMap  newOptionMap  optionMap  Iterator  i  j  List  anonymous  newAnonymous  options  Option  option  String  description  name  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	102	102	1	replace	Iterator  <  Option>  j  =  this.options.iterator();	  Iterator    <    Option>    j    =    options.iterator();    	non-compiled	[CE]  illegal  start  of  expression	18	None	replace
92	[BUG]  [BUGGY]  newAnonymous.remove(option.getPrefixes(),  required);  [CE]  illegal  start  of  expression  [FE]                      OptionException      [CONTEXT]      if  (option  instanceof  Argument)  {  i.remove();  newAnonymous.add(option);  }  else  {  final  Set  triggers  =  option.getTriggers();      [BUGGY]  newAnonymous.remove(option.getPrefixes(),  required);  [BUGGY]      for  (Iterator  j  =  triggers.iterator();  j.hasNext();)  {  newOptionMap.put(j.next(),  option);  }  newPrefixes.addAll(option.getPrefixes());  }  [CLASS]  GroupImpl  [METHOD]  <init>  [RETURN_TYPE]  String,int,int,boolean)  List  options  String  name  String  description  final  int  minimum  final  int  maximum  final  boolean  required  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  required  SortedMap  newOptionMap  optionMap  Iterator  i  j  List  anonymous  newAnonymous  options  Option  option  String  description  name  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	102	102	1	replace	newAnonymous.remove(option.getPrefixes(),  required);	  newAnonymous.remove(option.getPrefixes());    	non-compiled	[CE]  illegal  start  of  expression	31	None	replace
93	[BUG]  [BUGGY]  newAnonymous.removeAll(option.getPrefixes());  [CE]  illegal  start  of  expression  [FE]                        OptionException      [CONTEXT]      if  (option  instanceof  Argument)  {  i.remove();  newAnonymous.add(option);  }  else  {  final  Set  triggers  =  option.getTriggers();      [BUGGY]  newAnonymous.removeAll(option.getPrefixes());  [BUGGY]      for  (Iterator  j  =  triggers.iterator();  j.hasNext();)  {  newOptionMap.put(j.next(),  option);  }  newPrefixes.addAll(option.getPrefixes());  }  [CLASS]  GroupImpl  [METHOD]  <init>  [RETURN_TYPE]  String,int,int,boolean)  List  options  String  name  String  description  final  int  minimum  final  int  maximum  final  boolean  required  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  required  SortedMap  newOptionMap  optionMap  Iterator  i  j  List  anonymous  newAnonymous  options  Option  option  String  description  name  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	102	102	1	replace	newAnonymous.removeAll(option.getPrefixes());	  newAnonymous.remove(option.getPrefixes());    	non-compiled	[CE]  illegal  start  of  expression	31	None	replace
94	[BUG]  [BUGGY]  Option  option  =  option.getOption(default);  [CE]  illegal  start  of  expression  [FE]            OptionException      [CONTEXT]      if  (option  instanceof  Argument)  {  i.remove();  newAnonymous.add(option);  }  else  {  final  Set  triggers  =  option.getTriggers();      [BUGGY]  Option  option  =  option.getOption(default);  [BUGGY]      for  (Iterator  j  =  triggers.iterator();  j.hasNext();)  {  newOptionMap.put(j.next(),  option);  }  newPrefixes.addAll(option.getPrefixes());  }  [CLASS]  GroupImpl  [METHOD]  <init>  [RETURN_TYPE]  String,int,int,boolean)  List  options  String  name  String  description  final  int  minimum  final  int  maximum  final  boolean  required  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  required  SortedMap  newOptionMap  optionMap  Iterator  i  j  List  anonymous  newAnonymous  options  Option  option  String  description  name  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	102	102	1	replace	Option  option  =  option.getOption(default);	  Option    option    =    option.getOption(required);    	non-compiled	[CE]  illegal  start  of  expression	1	None	replace
95	[BUG]  [BUGGY]  Option  option  =  option.getOption(minor);  [CE]  illegal  start  of  expression  [FE]              OptionException      [CONTEXT]      if  (option  instanceof  Argument)  {  i.remove();  newAnonymous.add(option);  }  else  {  final  Set  triggers  =  option.getTriggers();      [BUGGY]  Option  option  =  option.getOption(minor);  [BUGGY]      for  (Iterator  j  =  triggers.iterator();  j.hasNext();)  {  newOptionMap.put(j.next(),  option);  }  newPrefixes.addAll(option.getPrefixes());  }  [CLASS]  GroupImpl  [METHOD]  <init>  [RETURN_TYPE]  String,int,int,boolean)  List  options  String  name  String  description  final  int  minimum  final  int  maximum  final  boolean  required  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  required  SortedMap  newOptionMap  optionMap  Iterator  i  j  List  anonymous  newAnonymous  options  Option  option  String  description  name  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	102	102	1	replace	Option  option  =  option.getOption(minor);	  Option    option    =    option.getOption(required);    	non-compiled	[CE]  illegal  start  of  expression	1	None	replace
96	[BUG]  [BUGGY]  Option  option  =  option.getOptionMap(),  newAnonymous,  required;  [CE]  illegal  start  of  expression  [FE]                OptionException      [CONTEXT]      if  (option  instanceof  Argument)  {  i.remove();  newAnonymous.add(option);  }  else  {  final  Set  triggers  =  option.getTriggers();      [BUGGY]  Option  option  =  option.getOptionMap(),  newAnonymous,  required;  [BUGGY]      for  (Iterator  j  =  triggers.iterator();  j.hasNext();)  {  newOptionMap.put(j.next(),  option);  }  newPrefixes.addAll(option.getPrefixes());  }  [CLASS]  GroupImpl  [METHOD]  <init>  [RETURN_TYPE]  String,int,int,boolean)  List  options  String  name  String  description  final  int  minimum  final  int  maximum  final  boolean  required  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  required  SortedMap  newOptionMap  optionMap  Iterator  i  j  List  anonymous  newAnonymous  options  Option  option  String  description  name  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	102	102	1	replace	Option  option  =  option.getOptionMap(),  newAnonymous,  required;	  Option    option    =    option.getOptionMap(),    newAnonymous;    	non-compiled	[CE]  illegal  start  of  expression	26	None	replace
97	[BUG]  [BUGGY]  Option  option  =  option.getOptionMap(),  prefixes;  [CE]  illegal  start  of  expression  [FE]                  OptionException      [CONTEXT]      if  (option  instanceof  Argument)  {  i.remove();  newAnonymous.add(option);  }  else  {  final  Set  triggers  =  option.getTriggers();      [BUGGY]  Option  option  =  option.getOptionMap(),  prefixes;  [BUGGY]      for  (Iterator  j  =  triggers.iterator();  j.hasNext();)  {  newOptionMap.put(j.next(),  option);  }  newPrefixes.addAll(option.getPrefixes());  }  [CLASS]  GroupImpl  [METHOD]  <init>  [RETURN_TYPE]  String,int,int,boolean)  List  options  String  name  String  description  final  int  minimum  final  int  maximum  final  boolean  required  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  required  SortedMap  newOptionMap  optionMap  Iterator  i  j  List  anonymous  newAnonymous  options  Option  option  String  description  name  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	102	102	1	replace	Option  option  =  option.getOptionMap(),  prefixes;	  Option    option    =    option.getOptionMap(),    newAnonymous;    	non-compiled	[CE]  illegal  start  of  expression	26	None	replace
98	[BUG]  [BUGGY]  option  =  options.getOption(name);  [CE]  illegal  start  of  expression  [FE]            OptionException      [CONTEXT]      if  (option  instanceof  Argument)  {  i.remove();  newAnonymous.add(option);  }  else  {  final  Set  triggers  =  option.getTriggers();      [BUGGY]  option  =  options.getOption(name);  [BUGGY]      for  (Iterator  j  =  triggers.iterator();  j.hasNext();)  {  newOptionMap.put(j.next(),  option);  }  newPrefixes.addAll(option.getPrefixes());  }  [CLASS]  GroupImpl  [METHOD]  <init>  [RETURN_TYPE]  String,int,int,boolean)  List  options  String  name  String  description  final  int  minimum  final  int  maximum  final  boolean  required  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  required  SortedMap  newOptionMap  optionMap  Iterator  i  j  List  anonymous  newAnonymous  options  Option  option  String  description  name  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	102	102	1	replace	option  =  options.getOption(name);	  Option    option    =    options.getOption(description);    	non-compiled	[CE]  illegal  start  of  expression	33	None	replace
99	[BUG]  [BUGGY]  Option  option  =  options.getOption(defaultName);  [CE]  illegal  start  of  expression  [FE]              OptionException      [CONTEXT]      if  (option  instanceof  Argument)  {  i.remove();  newAnonymous.add(option);  }  else  {  final  Set  triggers  =  option.getTriggers();      [BUGGY]  Option  option  =  options.getOption(defaultName);  [BUGGY]      for  (Iterator  j  =  triggers.iterator();  j.hasNext();)  {  newOptionMap.put(j.next(),  option);  }  newPrefixes.addAll(option.getPrefixes());  }  [CLASS]  GroupImpl  [METHOD]  <init>  [RETURN_TYPE]  String,int,int,boolean)  List  options  String  name  String  description  final  int  minimum  final  int  maximum  final  boolean  required  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  required  SortedMap  newOptionMap  optionMap  Iterator  i  j  List  anonymous  newAnonymous  options  Option  option  String  description  name  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	102	102	1	replace	Option  option  =  options.getOption(defaultName);	  Option    option    =    options.getOption(description);    	non-compiled	[CE]  illegal  start  of  expression	33	None	replace
100	[BUG]  [BUGGY]  Option  option  =  options.getOption(newAnonymous);  [CE]  illegal  start  of  expression  [FE]                  OptionException      [CONTEXT]      if  (option  instanceof  Argument)  {  i.remove();  newAnonymous.add(option);  }  else  {  final  Set  triggers  =  option.getTriggers();      [BUGGY]  Option  option  =  options.getOption(newAnonymous);  [BUGGY]      for  (Iterator  j  =  triggers.iterator();  j.hasNext();)  {  newOptionMap.put(j.next(),  option);  }  newPrefixes.addAll(option.getPrefixes());  }  [CLASS]  GroupImpl  [METHOD]  <init>  [RETURN_TYPE]  String,int,int,boolean)  List  options  String  name  String  description  final  int  minimum  final  int  maximum  final  boolean  required  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  required  SortedMap  newOptionMap  optionMap  Iterator  i  j  List  anonymous  newAnonymous  options  Option  option  String  description  name  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	102	102	1	replace	Option  option  =  options.getOption(newAnonymous);	  Option    option    =    options.getOption(defaultAnonymous);    	non-compiled	[CE]  illegal  start  of  expression	36	None	replace
101	[BUG]  [BUGGY]  Option  option  =  options.getOption(defaultAnonymous,  newAnonymous);  [CE]  illegal  start  of  expression  [FE]                    OptionException      [CONTEXT]      if  (option  instanceof  Argument)  {  i.remove();  newAnonymous.add(option);  }  else  {  final  Set  triggers  =  option.getTriggers();      [BUGGY]  Option  option  =  options.getOption(defaultAnonymous,  newAnonymous);  [BUGGY]      for  (Iterator  j  =  triggers.iterator();  j.hasNext();)  {  newOptionMap.put(j.next(),  option);  }  newPrefixes.addAll(option.getPrefixes());  }  [CLASS]  GroupImpl  [METHOD]  <init>  [RETURN_TYPE]  String,int,int,boolean)  List  options  String  name  String  description  final  int  minimum  final  int  maximum  final  boolean  required  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  required  SortedMap  newOptionMap  optionMap  Iterator  i  j  List  anonymous  newAnonymous  options  Option  option  String  description  name  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	102	102	1	replace	Option  option  =  options.getOption(defaultAnonymous,  newAnonymous);	  Option    option    =    options.getOption(defaultAnonymous);    	non-compiled	[CE]  illegal  start  of  expression	36	None	replace
102	[BUG]  [BUGGY]  Option  option  =  options.getOption(defaultAnonymous,  triggers);  [CE]  illegal  start  of  expression  [FE]                      OptionException      [CONTEXT]      if  (option  instanceof  Argument)  {  i.remove();  newAnonymous.add(option);  }  else  {  final  Set  triggers  =  option.getTriggers();      [BUGGY]  Option  option  =  options.getOption(defaultAnonymous,  triggers);  [BUGGY]      for  (Iterator  j  =  triggers.iterator();  j.hasNext();)  {  newOptionMap.put(j.next(),  option);  }  newPrefixes.addAll(option.getPrefixes());  }  [CLASS]  GroupImpl  [METHOD]  <init>  [RETURN_TYPE]  String,int,int,boolean)  List  options  String  name  String  description  final  int  minimum  final  int  maximum  final  boolean  required  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  required  SortedMap  newOptionMap  optionMap  Iterator  i  j  List  anonymous  newAnonymous  options  Option  option  String  description  name  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	102	102	1	replace	Option  option  =  options.getOption(defaultAnonymous,  triggers);	  Option    option    =    options.getOption(defaultAnonymous);    	non-compiled	[CE]  illegal  start  of  expression	36	None	replace
103	[BUG]  [BUGGY]  Option  option  =  options.getOption(name,  description,  required);  [CE]  illegal  start  of  expression  [FE]            OptionException      [CONTEXT]      if  (option  instanceof  Argument)  {  i.remove();  newAnonymous.add(option);  }  else  {  final  Set  triggers  =  option.getTriggers();      [BUGGY]  Option  option  =  options.getOption(name,  description,  required);  [BUGGY]      for  (Iterator  j  =  triggers.iterator();  j.hasNext();)  {  newOptionMap.put(j.next(),  option);  }  newPrefixes.addAll(option.getPrefixes());  }  [CLASS]  GroupImpl  [METHOD]  <init>  [RETURN_TYPE]  String,int,int,boolean)  List  options  String  name  String  description  final  int  minimum  final  int  maximum  final  boolean  required  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  required  SortedMap  newOptionMap  optionMap  Iterator  i  j  List  anonymous  newAnonymous  options  Option  option  String  description  name  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	102	102	1	replace	Option  option  =  options.getOption(name,  description,  required);	  Option    option    =    options.getOption(name,    description);    	non-compiled	[CE]  illegal  start  of  expression	63	None	replace
104	[BUG]  [BUGGY]  Option  option  =  options.getOption(name,  description,  minimum);  [CE]  illegal  start  of  expression  [FE]              OptionException      [CONTEXT]      if  (option  instanceof  Argument)  {  i.remove();  newAnonymous.add(option);  }  else  {  final  Set  triggers  =  option.getTriggers();      [BUGGY]  Option  option  =  options.getOption(name,  description,  minimum);  [BUGGY]      for  (Iterator  j  =  triggers.iterator();  j.hasNext();)  {  newOptionMap.put(j.next(),  option);  }  newPrefixes.addAll(option.getPrefixes());  }  [CLASS]  GroupImpl  [METHOD]  <init>  [RETURN_TYPE]  String,int,int,boolean)  List  options  String  name  String  description  final  int  minimum  final  int  maximum  final  boolean  required  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  required  SortedMap  newOptionMap  optionMap  Iterator  i  j  List  anonymous  newAnonymous  options  Option  option  String  description  name  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	102	102	1	replace	Option  option  =  options.getOption(name,  description,  minimum);	  Option    option    =    options.getOption(name,    description);    	non-compiled	[CE]  illegal  start  of  expression	63	None	replace
105	[BUG]  [BUGGY]  Option  option  =  options.getOption(name,  description,  maximum);  [CE]  illegal  start  of  expression  [FE]                OptionException      [CONTEXT]      if  (option  instanceof  Argument)  {  i.remove();  newAnonymous.add(option);  }  else  {  final  Set  triggers  =  option.getTriggers();      [BUGGY]  Option  option  =  options.getOption(name,  description,  maximum);  [BUGGY]      for  (Iterator  j  =  triggers.iterator();  j.hasNext();)  {  newOptionMap.put(j.next(),  option);  }  newPrefixes.addAll(option.getPrefixes());  }  [CLASS]  GroupImpl  [METHOD]  <init>  [RETURN_TYPE]  String,int,int,boolean)  List  options  String  name  String  description  final  int  minimum  final  int  maximum  final  boolean  required  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  required  SortedMap  newOptionMap  optionMap  Iterator  i  j  List  anonymous  newAnonymous  options  Option  option  String  description  name  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	102	102	1	replace	Option  option  =  options.getOption(name,  description,  maximum);	  Option    option    =    options.getOption(name,    description);    	non-compiled	[CE]  illegal  start  of  expression	63	None	replace
106	[BUG]  [BUGGY]  Option  option  =  options.getOption(name,  description  +  1);  [CE]  illegal  start  of  expression  [FE]                  OptionException      [CONTEXT]      if  (option  instanceof  Argument)  {  i.remove();  newAnonymous.add(option);  }  else  {  final  Set  triggers  =  option.getTriggers();      [BUGGY]  Option  option  =  options.getOption(name,  description  +  1);  [BUGGY]      for  (Iterator  j  =  triggers.iterator();  j.hasNext();)  {  newOptionMap.put(j.next(),  option);  }  newPrefixes.addAll(option.getPrefixes());  }  [CLASS]  GroupImpl  [METHOD]  <init>  [RETURN_TYPE]  String,int,int,boolean)  List  options  String  name  String  description  final  int  minimum  final  int  maximum  final  boolean  required  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  required  SortedMap  newOptionMap  optionMap  Iterator  i  j  List  anonymous  newAnonymous  options  Option  option  String  description  name  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	102	102	1	replace	Option  option  =  options.getOption(name,  description  +  1);	  Option    option    =    options.getOption(name,    description);    	non-compiled	[CE]  illegal  start  of  expression	63	None	replace
107	[BUG]  [BUGGY]  Option  option  =  options.getOptionMap(),  newAnonymous);  [CE]  illegal  start  of  expression  [FE]                  OptionException      [CONTEXT]      if  (option  instanceof  Argument)  {  i.remove();  newAnonymous.add(option);  }  else  {  final  Set  triggers  =  option.getTriggers();      [BUGGY]  Option  option  =  options.getOptionMap(),  newAnonymous);  [BUGGY]      for  (Iterator  j  =  triggers.iterator();  j.hasNext();)  {  newOptionMap.put(j.next(),  option);  }  newPrefixes.addAll(option.getPrefixes());  }  [CLASS]  GroupImpl  [METHOD]  <init>  [RETURN_TYPE]  String,int,int,boolean)  List  options  String  name  String  description  final  int  minimum  final  int  maximum  final  boolean  required  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  required  SortedMap  newOptionMap  optionMap  Iterator  i  j  List  anonymous  newAnonymous  options  Option  option  String  description  name  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	102	102	1	replace	Option  option  =  options.getOptionMap(),  newAnonymous);	  Option    option    =    options.getOptionMap();    	non-compiled	[CE]  illegal  start  of  expression	27	None	replace
108	[BUG]  [BUGGY]  Option  option  =  options.getOptionMap(),  newAnonymous;  [CE]  illegal  start  of  expression  [FE]                    OptionException      [CONTEXT]      if  (option  instanceof  Argument)  {  i.remove();  newAnonymous.add(option);  }  else  {  final  Set  triggers  =  option.getTriggers();      [BUGGY]  Option  option  =  options.getOptionMap(),  newAnonymous;  [BUGGY]      for  (Iterator  j  =  triggers.iterator();  j.hasNext();)  {  newOptionMap.put(j.next(),  option);  }  newPrefixes.addAll(option.getPrefixes());  }  [CLASS]  GroupImpl  [METHOD]  <init>  [RETURN_TYPE]  String,int,int,boolean)  List  options  String  name  String  description  final  int  minimum  final  int  maximum  final  boolean  required  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  required  SortedMap  newOptionMap  optionMap  Iterator  i  j  List  anonymous  newAnonymous  options  Option  option  String  description  name  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	102	102	1	replace	Option  option  =  options.getOptionMap(),  newAnonymous;	  Option    option    =    options.getOptionMap();    	non-compiled	[CE]  illegal  start  of  expression	27	None	replace
109	[BUG]  [BUGGY]  Option  option  =  options.getOptionMap(required);  [CE]  illegal  start  of  expression  [FE]                      OptionException      [CONTEXT]      if  (option  instanceof  Argument)  {  i.remove();  newAnonymous.add(option);  }  else  {  final  Set  triggers  =  option.getTriggers();      [BUGGY]  Option  option  =  options.getOptionMap(required);  [BUGGY]      for  (Iterator  j  =  triggers.iterator();  j.hasNext();)  {  newOptionMap.put(j.next(),  option);  }  newPrefixes.addAll(option.getPrefixes());  }  [CLASS]  GroupImpl  [METHOD]  <init>  [RETURN_TYPE]  String,int,int,boolean)  List  options  String  name  String  description  final  int  minimum  final  int  maximum  final  boolean  required  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  required  SortedMap  newOptionMap  optionMap  Iterator  i  j  List  anonymous  newAnonymous  options  Option  option  String  description  name  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	102	102	1	replace	Option  option  =  options.getOptionMap(required);	  Option    option    =    options.getOptionMap();    	non-compiled	[CE]  illegal  start  of  expression	27	None	replace
110	[BUG]  [BUGGY]  if(triggers!=  null)  {  for(Iterator  i  =  triggers.iterator();  i.hasNext();)  {  newOptionMap.put(i.next(),  option);  }  [CE]  illegal  start  of  expression  [FE]                OptionException      [CONTEXT]      if  (option  instanceof  Argument)  {  i.remove();  newAnonymous.add(option);  }  else  {  final  Set  triggers  =  option.getTriggers();      [BUGGY]  if(triggers!=  null)  {  for(Iterator  i  =  triggers.iterator();  i.hasNext();)  {  newOptionMap.put(i.next(),  option);  }  [BUGGY]      for  (Iterator  j  =  triggers.iterator();  j.hasNext();)  {  newOptionMap.put(j.next(),  option);  }  newPrefixes.addAll(option.getPrefixes());  }  [CLASS]  GroupImpl  [METHOD]  <init>  [RETURN_TYPE]  String,int,int,boolean)  List  options  String  name  String  description  final  int  minimum  final  int  maximum  final  boolean  required  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  required  SortedMap  newOptionMap  optionMap  Iterator  i  j  List  anonymous  newAnonymous  options  Option  option  String  description  name  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	102	102	1	replace	if(triggers!=  null)  {  for(Iterator  i  =  triggers.iterator();  i.hasNext();)  {  newOptionMap.put(i.next(),  option);  }	  if(triggers!=    null)    {    i.remove();    newAnonymous.add(option);    }    	non-compiled	[CE]  illegal  start  of  expression	50	None	replace
111	[BUG]  [BUGGY]  for(Iterator  j  =  triggers.values().iterator();  j.hasNext();)  {  [CE]  illegal  start  of  expression  [FE]            OptionException      [CONTEXT]      if  (option  instanceof  Argument)  {  i.remove();  newAnonymous.add(option);  }  else  {  final  Set  triggers  =  option.getTriggers();      [BUGGY]  for(Iterator  j  =  triggers.values().iterator();  j.hasNext();)  {  [BUGGY]      newOptionMap.put(j.next(),  option);  }  newPrefixes.addAll(option.getPrefixes());  }  [CLASS]  GroupImpl  [METHOD]  <init>  [RETURN_TYPE]  String,int,int,boolean)  List  options  String  name  String  description  final  int  minimum  final  int  maximum  final  boolean  required  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  required  SortedMap  newOptionMap  optionMap  Iterator  i  j  List  anonymous  newAnonymous  options  Option  option  String  description  name  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	102	102	1	replace	for(Iterator  j  =  triggers.values().iterator();  j.hasNext();)  {	  for(Iterator    j    =    options.values().iterator();    j.hasNext();)    {    	non-compiled	[CE]  illegal  start  of  expression	45	None	replace
112	[BUG]  [BUGGY]  for(Iterator  j  =  triggers.keySet().iterator();  j.hasNext();)  {  [CE]  illegal  start  of  expression  [FE]              OptionException      [CONTEXT]      if  (option  instanceof  Argument)  {  i.remove();  newAnonymous.add(option);  }  else  {  final  Set  triggers  =  option.getTriggers();      [BUGGY]  for(Iterator  j  =  triggers.keySet().iterator();  j.hasNext();)  {  [BUGGY]      newOptionMap.put(j.next(),  option);  }  newPrefixes.addAll(option.getPrefixes());  }  [CLASS]  GroupImpl  [METHOD]  <init>  [RETURN_TYPE]  String,int,int,boolean)  List  options  String  name  String  description  final  int  minimum  final  int  maximum  final  boolean  required  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  required  SortedMap  newOptionMap  optionMap  Iterator  i  j  List  anonymous  newAnonymous  options  Option  option  String  description  name  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	102	102	1	replace	for(Iterator  j  =  triggers.keySet().iterator();  j.hasNext();)  {	  for(Iterator    j    =    options.values().iterator();    j.hasNext();)    {    	non-compiled	[CE]  illegal  start  of  expression	45	None	replace
113	[BUG]  [BUGGY]  newAnonymous.add(option.getPrefixes(),  required);  [CE]  illegal  start  of  expression  [FE]                        OptionException      [CONTEXT]      if  (option  instanceof  Argument)  {  i.remove();  newAnonymous.add(option);  }  else  {  final  Set  triggers  =  option.getTriggers();      [BUGGY]  newAnonymous.add(option.getPrefixes(),  required);  [BUGGY]      for  (Iterator  j  =  triggers.iterator();  j.hasNext();)  {  newOptionMap.put(j.next(),  option);  }  newPrefixes.addAll(option.getPrefixes());  }  [CLASS]  GroupImpl  [METHOD]  <init>  [RETURN_TYPE]  String,int,int,boolean)  List  options  String  name  String  description  final  int  minimum  final  int  maximum  final  boolean  required  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  required  SortedMap  newOptionMap  optionMap  Iterator  i  j  List  anonymous  newAnonymous  options  Option  option  String  description  name  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	102	102	1	replace	newAnonymous.add(option.getPrefixes(),  required);	  newAnonymous.add(option.getPrefixes());    	non-compiled	[CE]  illegal  start  of  expression	32	None	replace
114	[BUG]  [BUGGY]  newAnonymous.add(option.getDescription());  [CE]  illegal  start  of  expression  [FE]                          OptionException      [CONTEXT]      if  (option  instanceof  Argument)  {  i.remove();  newAnonymous.add(option);  }  else  {  final  Set  triggers  =  option.getTriggers();      [BUGGY]  newAnonymous.add(option.getDescription());  [BUGGY]      for  (Iterator  j  =  triggers.iterator();  j.hasNext();)  {  newOptionMap.put(j.next(),  option);  }  newPrefixes.addAll(option.getPrefixes());  }  [CLASS]  GroupImpl  [METHOD]  <init>  [RETURN_TYPE]  String,int,int,boolean)  List  options  String  name  String  description  final  int  minimum  final  int  maximum  final  boolean  required  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  required  SortedMap  newOptionMap  optionMap  Iterator  i  j  List  anonymous  newAnonymous  options  Option  option  String  description  name  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	102	102	1	replace	newAnonymous.add(option.getDescription());	  newAnonymous.add(option.getPrefixes());    	non-compiled	[CE]  illegal  start  of  expression	32	None	replace
115	[BUG]  [BUGGY]  newAnonymous.add(option.getPrefixes(),  triggers);  [CE]  illegal  start  of  expression  [FE]                            OptionException      [CONTEXT]      if  (option  instanceof  Argument)  {  i.remove();  newAnonymous.add(option);  }  else  {  final  Set  triggers  =  option.getTriggers();      [BUGGY]  newAnonymous.add(option.getPrefixes(),  triggers);  [BUGGY]      for  (Iterator  j  =  triggers.iterator();  j.hasNext();)  {  newOptionMap.put(j.next(),  option);  }  newPrefixes.addAll(option.getPrefixes());  }  [CLASS]  GroupImpl  [METHOD]  <init>  [RETURN_TYPE]  String,int,int,boolean)  List  options  String  name  String  description  final  int  minimum  final  int  maximum  final  boolean  required  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  required  SortedMap  newOptionMap  optionMap  Iterator  i  j  List  anonymous  newAnonymous  options  Option  option  String  description  name  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	102	102	1	replace	newAnonymous.add(option.getPrefixes(),  triggers);	  newAnonymous.add(option.getPrefixes());    	non-compiled	[CE]  illegal  start  of  expression	32	None	replace
116	[BUG]  [BUGGY]  Option  option  =(Option)throwables.get(0);  [CE]  illegal  start  of  expression  [FE]                    OptionException      [CONTEXT]      if  (option  instanceof  Argument)  {  i.remove();  newAnonymous.add(option);  }  else  {  final  Set  triggers  =  option.getTriggers();      [BUGGY]  Option  option  =(Option)throwables.get(0);  [BUGGY]      for  (Iterator  j  =  triggers.iterator();  j.hasNext();)  {  newOptionMap.put(j.next(),  option);  }  newPrefixes.addAll(option.getPrefixes());  }  [CLASS]  GroupImpl  [METHOD]  <init>  [RETURN_TYPE]  String,int,int,boolean)  List  options  String  name  String  description  final  int  minimum  final  int  maximum  final  boolean  required  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  required  SortedMap  newOptionMap  optionMap  Iterator  i  j  List  anonymous  newAnonymous  options  Option  option  String  description  name  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	102	102	1	replace	Option  option  =(Option)throwables.get(0);	  Option    option    =(Option)throwables.next();    	non-compiled	[CE]  illegal  start  of  expression	5	None	replace
117	[BUG]  [BUGGY]  Option  option  =(Option)throwables.get(i);  [CE]  illegal  start  of  expression  [FE]                      OptionException      [CONTEXT]      if  (option  instanceof  Argument)  {  i.remove();  newAnonymous.add(option);  }  else  {  final  Set  triggers  =  option.getTriggers();      [BUGGY]  Option  option  =(Option)throwables.get(i);  [BUGGY]      for  (Iterator  j  =  triggers.iterator();  j.hasNext();)  {  newOptionMap.put(j.next(),  option);  }  newPrefixes.addAll(option.getPrefixes());  }  [CLASS]  GroupImpl  [METHOD]  <init>  [RETURN_TYPE]  String,int,int,boolean)  List  options  String  name  String  description  final  int  minimum  final  int  maximum  final  boolean  required  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  required  SortedMap  newOptionMap  optionMap  Iterator  i  j  List  anonymous  newAnonymous  options  Option  option  String  description  name  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	102	102	1	replace	Option  option  =(Option)throwables.get(i);	  Option    option    =(Option)throwables.next();    	non-compiled	[CE]  illegal  start  of  expression	5	None	replace
118	[BUG]  [BUGGY]  if(required)  {  i.remove();  newAnonymous.add(option);  }  else  {  final  Set  <  Option>  options  =  option.getOptionMap();  newPrefixes.addAll(option.getPrefixes());  }  [CE]  illegal  start  of  expression  [FE]                OptionException      [CONTEXT]      if  (option  instanceof  Argument)  {  i.remove();  newAnonymous.add(option);  }  else  {  final  Set  triggers  =  option.getTriggers();      [BUGGY]  if(required)  {  i.remove();  newAnonymous.add(option);  }  else  {  final  Set  <  Option>  options  =  option.getOptionMap();  newPrefixes.addAll(option.getPrefixes());  }  [BUGGY]      for  (Iterator  j  =  triggers.iterator();  j.hasNext();)  {  newOptionMap.put(j.next(),  option);  }  newPrefixes.addAll(option.getPrefixes());  }  [CLASS]  GroupImpl  [METHOD]  <init>  [RETURN_TYPE]  String,int,int,boolean)  List  options  String  name  String  description  final  int  minimum  final  int  maximum  final  boolean  required  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  required  SortedMap  newOptionMap  optionMap  Iterator  i  j  List  anonymous  newAnonymous  options  Option  option  String  description  name  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	102	102	1	replace	if(required)  {  i.remove();  newAnonymous.add(option);  }  else  {  final  Set  <  Option>  options  =  option.getOptionMap();  newPrefixes.addAll(option.getPrefixes());  }	  if(!required)    {    i.remove();    newAnonymous.add(option);    }    else    {    final    Set    <    Option>    options    =    option.getOptionMap();    newPrefixes.addAll(option.getPrefixes());    }    	non-compiled	[CE]  illegal  start  of  expression	59	None	replace
119	[BUG]  [BUGGY]  final  Set  <  Option>  options  =  option.getOptionMap();  newPrefixes.addAll(option.getPrefixes());  [CE]  illegal  start  of  expression  [FE]                  OptionException      [CONTEXT]      if  (option  instanceof  Argument)  {  i.remove();  newAnonymous.add(option);  }  else  {  final  Set  triggers  =  option.getTriggers();      [BUGGY]  final  Set  <  Option>  options  =  option.getOptionMap();  newPrefixes.addAll(option.getPrefixes());  [BUGGY]      for  (Iterator  j  =  triggers.iterator();  j.hasNext();)  {  newOptionMap.put(j.next(),  option);  }  newPrefixes.addAll(option.getPrefixes());  }  [CLASS]  GroupImpl  [METHOD]  <init>  [RETURN_TYPE]  String,int,int,boolean)  List  options  String  name  String  description  final  int  minimum  final  int  maximum  final  boolean  required  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  required  SortedMap  newOptionMap  optionMap  Iterator  i  j  List  anonymous  newAnonymous  options  Option  option  String  description  name  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	102	102	1	replace	final  Set  <  Option>  options  =  option.getOptionMap();  newPrefixes.addAll(option.getPrefixes());	  if(!required)    {    i.remove();    newAnonymous.add(option);    }    else    {    final    Set    <    Option>    options    =    option.getOptionMap();    newPrefixes.addAll(option.getPrefixes());    }    	non-compiled	[CE]  illegal  start  of  expression	59	None	replace
120	[BUG]  [BUGGY]  Set  <  Option>  options  =  option.getOptionMap();  newPrefixes.addAll(option.getPrefixes());  [CE]  illegal  start  of  expression  [FE]                    OptionException      [CONTEXT]      if  (option  instanceof  Argument)  {  i.remove();  newAnonymous.add(option);  }  else  {  final  Set  triggers  =  option.getTriggers();      [BUGGY]  Set  <  Option>  options  =  option.getOptionMap();  newPrefixes.addAll(option.getPrefixes());  [BUGGY]      for  (Iterator  j  =  triggers.iterator();  j.hasNext();)  {  newOptionMap.put(j.next(),  option);  }  newPrefixes.addAll(option.getPrefixes());  }  [CLASS]  GroupImpl  [METHOD]  <init>  [RETURN_TYPE]  String,int,int,boolean)  List  options  String  name  String  description  final  int  minimum  final  int  maximum  final  boolean  required  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  required  SortedMap  newOptionMap  optionMap  Iterator  i  j  List  anonymous  newAnonymous  options  Option  option  String  description  name  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	102	102	1	replace	Set  <  Option>  options  =  option.getOptionMap();  newPrefixes.addAll(option.getPrefixes());	  if(!required)    {    i.remove();    newAnonymous.add(option);    }    else    {    final    Set    <    Option>    options    =    option.getOptionMap();    newPrefixes.addAll(option.getPrefixes());    }    	non-compiled	[CE]  illegal  start  of  expression	59	None	replace
121	[BUG]  [BUGGY]  Option  option  =  option.getOptionMap(),  required);  [CE]  illegal  start  of  expression  [FE]                OptionException      [CONTEXT]      if  (option  instanceof  Argument)  {  i.remove();  newAnonymous.add(option);  }  else  {  final  Set  triggers  =  option.getTriggers();      [BUGGY]  Option  option  =  option.getOptionMap(),  required);  [BUGGY]      for  (Iterator  j  =  triggers.iterator();  j.hasNext();)  {  newOptionMap.put(j.next(),  option);  }  newPrefixes.addAll(option.getPrefixes());  }  [CLASS]  GroupImpl  [METHOD]  <init>  [RETURN_TYPE]  String,int,int,boolean)  List  options  String  name  String  description  final  int  minimum  final  int  maximum  final  boolean  required  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  required  SortedMap  newOptionMap  optionMap  Iterator  i  j  List  anonymous  newAnonymous  options  Option  option  String  description  name  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	102	102	1	replace	Option  option  =  option.getOptionMap(),  required);	  Option    option    =    option.getOptionMap(),    options);    	non-compiled	[CE]  illegal  start  of  expression	53	None	replace
122	[BUG]  [BUGGY]  Option  option  =  option.getOptionMap(),  prefixes);  [CE]  illegal  start  of  expression  [FE]                  OptionException      [CONTEXT]      if  (option  instanceof  Argument)  {  i.remove();  newAnonymous.add(option);  }  else  {  final  Set  triggers  =  option.getTriggers();      [BUGGY]  Option  option  =  option.getOptionMap(),  prefixes);  [BUGGY]      for  (Iterator  j  =  triggers.iterator();  j.hasNext();)  {  newOptionMap.put(j.next(),  option);  }  newPrefixes.addAll(option.getPrefixes());  }  [CLASS]  GroupImpl  [METHOD]  <init>  [RETURN_TYPE]  String,int,int,boolean)  List  options  String  name  String  description  final  int  minimum  final  int  maximum  final  boolean  required  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  required  SortedMap  newOptionMap  optionMap  Iterator  i  j  List  anonymous  newAnonymous  options  Option  option  String  description  name  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	102	102	1	replace	Option  option  =  option.getOptionMap(),  prefixes);	  Option    option    =    option.getOptionMap(),    options);    	non-compiled	[CE]  illegal  start  of  expression	53	None	replace
123	[BUG]  [BUGGY]  Option  option  =  option.getOptionMap(),  options,  required);  [CE]  illegal  start  of  expression  [FE]                    OptionException      [CONTEXT]      if  (option  instanceof  Argument)  {  i.remove();  newAnonymous.add(option);  }  else  {  final  Set  triggers  =  option.getTriggers();      [BUGGY]  Option  option  =  option.getOptionMap(),  options,  required);  [BUGGY]      for  (Iterator  j  =  triggers.iterator();  j.hasNext();)  {  newOptionMap.put(j.next(),  option);  }  newPrefixes.addAll(option.getPrefixes());  }  [CLASS]  GroupImpl  [METHOD]  <init>  [RETURN_TYPE]  String,int,int,boolean)  List  options  String  name  String  description  final  int  minimum  final  int  maximum  final  boolean  required  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  required  SortedMap  newOptionMap  optionMap  Iterator  i  j  List  anonymous  newAnonymous  options  Option  option  String  description  name  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	102	102	1	replace	Option  option  =  option.getOptionMap(),  options,  required);	  Option    option    =    option.getOptionMap(),    options);    	non-compiled	[CE]  illegal  start  of  expression	53	None	replace
124	[BUG]  [BUGGY]  if(required)  {  i.remove();  newAnonymous.add(option);  }  else  {  final  Set  <  Option>  triggers  =  option.getTriggers();  for(Iterator  <  Option>  j  =  triggers.iterator();  j.hasNext()  [CE]  illegal  start  of  expression  [FE]                  OptionException      [CONTEXT]      if  (option  instanceof  Argument)  {  i.remove();  newAnonymous.add(option);  }  else  {  final  Set  triggers  =  option.getTriggers();      [BUGGY]  if(required)  {  i.remove();  newAnonymous.add(option);  }  else  {  final  Set  <  Option>  triggers  =  option.getTriggers();  for(Iterator  <  Option>  j  =  triggers.iterator();  j.hasNext()  [BUGGY]      for  (Iterator  j  =  triggers.iterator();  j.hasNext();)  {  newOptionMap.put(j.next(),  option);  }  newPrefixes.addAll(option.getPrefixes());  }  [CLASS]  GroupImpl  [METHOD]  <init>  [RETURN_TYPE]  String,int,int,boolean)  List  options  String  name  String  description  final  int  minimum  final  int  maximum  final  boolean  required  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  required  SortedMap  newOptionMap  optionMap  Iterator  i  j  List  anonymous  newAnonymous  options  Option  option  String  description  name  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	102	102	1	replace	if(required)  {  i.remove();  newAnonymous.add(option);  }  else  {  final  Set  <  Option>  triggers  =  option.getTriggers();  for(Iterator  <  Option>  j  =  triggers.iterator();  j.hasNext()	  if(!required)    {    i.remove();    newAnonymous.add(option);    }    else    {    final    Set    <    Option>    triggers    =    option.getTriggers();    for(Iterator    <    Option>    j    =    triggers.iterator();    j.hasNext()    	non-compiled	[CE]  illegal  start  of  expression	60	None	replace
125	[BUG]  [BUGGY]  if(!required)  {  i.remove();  newAnonymous.add(option);  }  else  {  final  Set  <  Option>  options  =  option.getOptionMap();  for(Iterator  <  Option>  j  =  options.iterator();  j.hasNext()  [CE]  illegal  start  of  expression  [FE]                    OptionException      [CONTEXT]      if  (option  instanceof  Argument)  {  i.remove();  newAnonymous.add(option);  }  else  {  final  Set  triggers  =  option.getTriggers();      [BUGGY]  if(!required)  {  i.remove();  newAnonymous.add(option);  }  else  {  final  Set  <  Option>  options  =  option.getOptionMap();  for(Iterator  <  Option>  j  =  options.iterator();  j.hasNext()  [BUGGY]      for  (Iterator  j  =  triggers.iterator();  j.hasNext();)  {  newOptionMap.put(j.next(),  option);  }  newPrefixes.addAll(option.getPrefixes());  }  [CLASS]  GroupImpl  [METHOD]  <init>  [RETURN_TYPE]  String,int,int,boolean)  List  options  String  name  String  description  final  int  minimum  final  int  maximum  final  boolean  required  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  required  SortedMap  newOptionMap  optionMap  Iterator  i  j  List  anonymous  newAnonymous  options  Option  option  String  description  name  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	102	102	1	replace	if(!required)  {  i.remove();  newAnonymous.add(option);  }  else  {  final  Set  <  Option>  options  =  option.getOptionMap();  for(Iterator  <  Option>  j  =  options.iterator();  j.hasNext()	  if(!required)    {    i.remove();    newAnonymous.add(option);    }    else    {    final    Set    <    Option>    triggers    =    option.getTriggers();    for(Iterator    <    Option>    j    =    triggers.iterator();    j.hasNext()    	non-compiled	[CE]  illegal  start  of  expression	60	None	replace
126	[BUG]  [BUGGY]  if(required)  {  i.remove();  newAnonymous.add(option);  }  else  {  final  Set  <  Option>  options  =  option.getOptionMap();  for(Iterator  <  Option>  j  =  options.iterator();  j.hasNext()  [CE]  illegal  start  of  expression  [FE]                      OptionException      [CONTEXT]      if  (option  instanceof  Argument)  {  i.remove();  newAnonymous.add(option);  }  else  {  final  Set  triggers  =  option.getTriggers();      [BUGGY]  if(required)  {  i.remove();  newAnonymous.add(option);  }  else  {  final  Set  <  Option>  options  =  option.getOptionMap();  for(Iterator  <  Option>  j  =  options.iterator();  j.hasNext()  [BUGGY]      for  (Iterator  j  =  triggers.iterator();  j.hasNext();)  {  newOptionMap.put(j.next(),  option);  }  newPrefixes.addAll(option.getPrefixes());  }  [CLASS]  GroupImpl  [METHOD]  <init>  [RETURN_TYPE]  String,int,int,boolean)  List  options  String  name  String  description  final  int  minimum  final  int  maximum  final  boolean  required  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  required  SortedMap  newOptionMap  optionMap  Iterator  i  j  List  anonymous  newAnonymous  options  Option  option  String  description  name  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	102	102	1	replace	if(required)  {  i.remove();  newAnonymous.add(option);  }  else  {  final  Set  <  Option>  options  =  option.getOptionMap();  for(Iterator  <  Option>  j  =  options.iterator();  j.hasNext()	  if(!required)    {    i.remove();    newAnonymous.add(option);    }    else    {    final    Set    <    Option>    triggers    =    option.getTriggers();    for(Iterator    <    Option>    j    =    triggers.iterator();    j.hasNext()    	non-compiled	[CE]  illegal  start  of  expression	60	None	replace
127	[BUG]  [BUGGY]  For(Iterator  <  Option>  j  =  options.iterator();  j.hasNext();)  {  [CE]  illegal  start  of  expression  [FE]              OptionException      [CONTEXT]      if  (option  instanceof  Argument)  {  i.remove();  newAnonymous.add(option);  }  else  {  final  Set  triggers  =  option.getTriggers();      [BUGGY]  For(Iterator  <  Option>  j  =  options.iterator();  j.hasNext();)  {  [BUGGY]      newOptionMap.put(j.next(),  option);  }  newPrefixes.addAll(option.getPrefixes());  }  [CLASS]  GroupImpl  [METHOD]  <init>  [RETURN_TYPE]  String,int,int,boolean)  List  options  String  name  String  description  final  int  minimum  final  int  maximum  final  boolean  required  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  required  SortedMap  newOptionMap  optionMap  Iterator  i  j  List  anonymous  newAnonymous  options  Option  option  String  description  name  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	102	102	1	replace	For(Iterator  <  Option>  j  =  options.iterator();  j.hasNext();)  {	  For(Iterator    j    =    options.iterator();    j.hasNext();)    {    	non-compiled	[CE]  illegal  start  of  expression	21	None	replace
128	[BUG]  [BUGGY]  For(Iterator  iterator  =  options.iterator();  iterator.hasNext();)  {  [CE]  illegal  start  of  expression  [FE]                OptionException      [CONTEXT]      if  (option  instanceof  Argument)  {  i.remove();  newAnonymous.add(option);  }  else  {  final  Set  triggers  =  option.getTriggers();      [BUGGY]  For(Iterator  iterator  =  options.iterator();  iterator.hasNext();)  {  [BUGGY]      newOptionMap.put(j.next(),  option);  }  newPrefixes.addAll(option.getPrefixes());  }  [CLASS]  GroupImpl  [METHOD]  <init>  [RETURN_TYPE]  String,int,int,boolean)  List  options  String  name  String  description  final  int  minimum  final  int  maximum  final  boolean  required  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  required  SortedMap  newOptionMap  optionMap  Iterator  i  j  List  anonymous  newAnonymous  options  Option  option  String  description  name  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	102	102	1	replace	For(Iterator  iterator  =  options.iterator();  iterator.hasNext();)  {	  For(Iterator    j    =    options.iterator();    j.hasNext();)    {    	non-compiled	[CE]  illegal  start  of  expression	21	None	replace
129	[BUG]  [BUGGY]  Option  option  =  option.getOptionMap(default);  [CE]  illegal  start  of  expression  [FE]              OptionException      [CONTEXT]      if  (option  instanceof  Argument)  {  i.remove();  newAnonymous.add(option);  }  else  {  final  Set  triggers  =  option.getTriggers();      [BUGGY]  Option  option  =  option.getOptionMap(default);  [BUGGY]      for  (Iterator  j  =  triggers.iterator();  j.hasNext();)  {  newOptionMap.put(j.next(),  option);  }  newPrefixes.addAll(option.getPrefixes());  }  [CLASS]  GroupImpl  [METHOD]  <init>  [RETURN_TYPE]  String,int,int,boolean)  List  options  String  name  String  description  final  int  minimum  final  int  maximum  final  boolean  required  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  required  SortedMap  newOptionMap  optionMap  Iterator  i  j  List  anonymous  newAnonymous  options  Option  option  String  description  name  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	102	102	1	replace	Option  option  =  option.getOptionMap(default);	  Option    option    =    option.getOptionMap(required);    	non-compiled	[CE]  illegal  start  of  expression	52	None	replace
130	[BUG]  [BUGGY]  Option  option  =  option.getOptionMap(prefixes);  [CE]  illegal  start  of  expression  [FE]                OptionException      [CONTEXT]      if  (option  instanceof  Argument)  {  i.remove();  newAnonymous.add(option);  }  else  {  final  Set  triggers  =  option.getTriggers();      [BUGGY]  Option  option  =  option.getOptionMap(prefixes);  [BUGGY]      for  (Iterator  j  =  triggers.iterator();  j.hasNext();)  {  newOptionMap.put(j.next(),  option);  }  newPrefixes.addAll(option.getPrefixes());  }  [CLASS]  GroupImpl  [METHOD]  <init>  [RETURN_TYPE]  String,int,int,boolean)  List  options  String  name  String  description  final  int  minimum  final  int  maximum  final  boolean  required  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  required  SortedMap  newOptionMap  optionMap  Iterator  i  j  List  anonymous  newAnonymous  options  Option  option  String  description  name  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	102	102	1	replace	Option  option  =  option.getOptionMap(prefixes);	  Option    option    =    option.getOptionMap(required);    	non-compiled	[CE]  illegal  start  of  expression	52	None	replace
131	[BUG]  [BUGGY]  Option  option  =  option.getOptionMap(required,  minimum);  [CE]  illegal  start  of  expression  [FE]                  OptionException      [CONTEXT]      if  (option  instanceof  Argument)  {  i.remove();  newAnonymous.add(option);  }  else  {  final  Set  triggers  =  option.getTriggers();      [BUGGY]  Option  option  =  option.getOptionMap(required,  minimum);  [BUGGY]      for  (Iterator  j  =  triggers.iterator();  j.hasNext();)  {  newOptionMap.put(j.next(),  option);  }  newPrefixes.addAll(option.getPrefixes());  }  [CLASS]  GroupImpl  [METHOD]  <init>  [RETURN_TYPE]  String,int,int,boolean)  List  options  String  name  String  description  final  int  minimum  final  int  maximum  final  boolean  required  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  required  SortedMap  newOptionMap  optionMap  Iterator  i  j  List  anonymous  newAnonymous  options  Option  option  String  description  name  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	102	102	1	replace	Option  option  =  option.getOptionMap(required,  minimum);	  Option    option    =    option.getOptionMap(required);    	non-compiled	[CE]  illegal  start  of  expression	52	None	replace
132	[BUG]  [BUGGY]  Option  option  =  options.getOption(defaultValue,  triggers);  [CE]  illegal  start  of  expression  [FE]                      OptionException      [CONTEXT]      if  (option  instanceof  Argument)  {  i.remove();  newAnonymous.add(option);  }  else  {  final  Set  triggers  =  option.getTriggers();      [BUGGY]  Option  option  =  options.getOption(defaultValue,  triggers);  [BUGGY]      for  (Iterator  j  =  triggers.iterator();  j.hasNext();)  {  newOptionMap.put(j.next(),  option);  }  newPrefixes.addAll(option.getPrefixes());  }  [CLASS]  GroupImpl  [METHOD]  <init>  [RETURN_TYPE]  String,int,int,boolean)  List  options  String  name  String  description  final  int  minimum  final  int  maximum  final  boolean  required  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  required  SortedMap  newOptionMap  optionMap  Iterator  i  j  List  anonymous  newAnonymous  options  Option  option  String  description  name  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	102	102	1	replace	Option  option  =  options.getOption(defaultValue,  triggers);	  Option    option    =    options.getOption(defaultValue);    	non-compiled	[CE]  illegal  start  of  expression	38	None	replace
133	[BUG]  [BUGGY]  Option  option  =  options.getOption(defaultName,  description);  [CE]  illegal  start  of  expression  [FE]                OptionException      [CONTEXT]      if  (option  instanceof  Argument)  {  i.remove();  newAnonymous.add(option);  }  else  {  final  Set  triggers  =  option.getTriggers();      [BUGGY]  Option  option  =  options.getOption(defaultName,  description);  [BUGGY]      for  (Iterator  j  =  triggers.iterator();  j.hasNext();)  {  newOptionMap.put(j.next(),  option);  }  newPrefixes.addAll(option.getPrefixes());  }  [CLASS]  GroupImpl  [METHOD]  <init>  [RETURN_TYPE]  String,int,int,boolean)  List  options  String  name  String  description  final  int  minimum  final  int  maximum  final  boolean  required  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  required  SortedMap  newOptionMap  optionMap  Iterator  i  j  List  anonymous  newAnonymous  options  Option  option  String  description  name  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	102	102	1	replace	Option  option  =  options.getOption(defaultName,  description);	  Option    option    =    options.getOption(i,    description);    	non-compiled	[CE]  illegal  start  of  expression	62	None	replace
134	[BUG]  [BUGGY]  Option  option  =  options.getOption(i,  description,  required);  [CE]  illegal  start  of  expression  [FE]                  OptionException      [CONTEXT]      if  (option  instanceof  Argument)  {  i.remove();  newAnonymous.add(option);  }  else  {  final  Set  triggers  =  option.getTriggers();      [BUGGY]  Option  option  =  options.getOption(i,  description,  required);  [BUGGY]      for  (Iterator  j  =  triggers.iterator();  j.hasNext();)  {  newOptionMap.put(j.next(),  option);  }  newPrefixes.addAll(option.getPrefixes());  }  [CLASS]  GroupImpl  [METHOD]  <init>  [RETURN_TYPE]  String,int,int,boolean)  List  options  String  name  String  description  final  int  minimum  final  int  maximum  final  boolean  required  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  required  SortedMap  newOptionMap  optionMap  Iterator  i  j  List  anonymous  newAnonymous  options  Option  option  String  description  name  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	102	102	1	replace	Option  option  =  options.getOption(i,  description,  required);	  Option    option    =    options.getOption(i,    description);    	non-compiled	[CE]  illegal  start  of  expression	62	None	replace
135	[BUG]  [BUGGY]  for(Iterator  j  =  options.keySet().iterator();  j.hasNext();)  {  [CE]  illegal  start  of  expression  [FE]            OptionException      [CONTEXT]      if  (option  instanceof  Argument)  {  i.remove();  newAnonymous.add(option);  }  else  {  final  Set  triggers  =  option.getTriggers();      [BUGGY]  for(Iterator  j  =  options.keySet().iterator();  j.hasNext();)  {  [BUGGY]      newOptionMap.put(j.next(),  option);  }  newPrefixes.addAll(option.getPrefixes());  }  [CLASS]  GroupImpl  [METHOD]  <init>  [RETURN_TYPE]  String,int,int,boolean)  List  options  String  name  String  description  final  int  minimum  final  int  maximum  final  boolean  required  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  required  SortedMap  newOptionMap  optionMap  Iterator  i  j  List  anonymous  newAnonymous  options  Option  option  String  description  name  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	102	102	1	replace	for(Iterator  j  =  options.keySet().iterator();  j.hasNext();)  {	  for(Iterator    j    =    options.values().iterator();    j.hasNext();)    {    	non-compiled	[CE]  illegal  start  of  expression	45	None	replace
136	[BUG]  [BUGGY]  Iterator  <  Option>  j  =  options.values().iterator();  [CE]  illegal  start  of  expression  [FE]                    OptionException      [CONTEXT]      if  (option  instanceof  Argument)  {  i.remove();  newAnonymous.add(option);  }  else  {  final  Set  triggers  =  option.getTriggers();      [BUGGY]  Iterator  <  Option>  j  =  options.values().iterator();  [BUGGY]      newOptionMap.put(j.next(),  option);  }  newPrefixes.addAll(option.getPrefixes());  }  [CLASS]  GroupImpl  [METHOD]  <init>  [RETURN_TYPE]  String,int,int,boolean)  List  options  String  name  String  description  final  int  minimum  final  int  maximum  final  boolean  required  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  required  SortedMap  newOptionMap  optionMap  Iterator  i  j  List  anonymous  newAnonymous  options  Option  option  String  description  name  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	102	102	1	replace	Iterator  <  Option>  j  =  options.values().iterator();	  Iterator    <    Option>    j    =    options.keySet().iterator();    	non-compiled	[CE]  illegal  start  of  expression	41	None	replace
137	[BUG]  [BUGGY]  final  Iterator  <  Option>  j  =  options.iterator();  j.hasNext();)  {  [CE]  illegal  start  of  expression  [FE]                  OptionException      [CONTEXT]      if  (option  instanceof  Argument)  {  i.remove();  newAnonymous.add(option);  }  else  {  final  Set  triggers  =  option.getTriggers();      [BUGGY]  final  Iterator  <  Option>  j  =  options.iterator();  j.hasNext();)  {  [BUGGY]      for  (Iterator  j  =  triggers.iterator();  j.hasNext();)  {  newOptionMap.put(j.next(),  option);  }  newPrefixes.addAll(option.getPrefixes());  }  [CLASS]  GroupImpl  [METHOD]  <init>  [RETURN_TYPE]  String,int,int,boolean)  List  options  String  name  String  description  final  int  minimum  final  int  maximum  final  boolean  required  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  required  SortedMap  newOptionMap  optionMap  Iterator  i  j  List  anonymous  newAnonymous  options  Option  option  String  description  name  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	102	102	1	replace	final  Iterator  <  Option>  j  =  options.iterator();  j.hasNext();)  {	  if(triggers!=    null)    {    i.remove();    newAnonymous.add(option);    }    else    {    final    Set    <    Option>    options    =    option.getOptionMap();    for(Iterator    <    Option>    j    =    options.iterator();    j.hasNext();)    {    	non-compiled	[CE]  illegal  start  of  expression	51	None	replace
138	[BUG]  [BUGGY]  Option  option  =  options.getOption(triggers,  required);  [CE]  illegal  start  of  expression  [FE]                    OptionException      [CONTEXT]      if  (option  instanceof  Argument)  {  i.remove();  newAnonymous.add(option);  }  else  {  final  Set  triggers  =  option.getTriggers();      [BUGGY]  Option  option  =  options.getOption(triggers,  required);  [BUGGY]      for  (Iterator  j  =  triggers.iterator();  j.hasNext();)  {  newOptionMap.put(j.next(),  option);  }  newPrefixes.addAll(option.getPrefixes());  }  [CLASS]  GroupImpl  [METHOD]  <init>  [RETURN_TYPE]  String,int,int,boolean)  List  options  String  name  String  description  final  int  minimum  final  int  maximum  final  boolean  required  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  required  SortedMap  newOptionMap  optionMap  Iterator  i  j  List  anonymous  newAnonymous  options  Option  option  String  description  name  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	102	102	1	replace	Option  option  =  options.getOption(triggers,  required);	  Option    option    =    options.getOption(triggers);    	non-compiled	[CE]  illegal  start  of  expression	37	None	replace
139	[BUG]  [BUGGY]  Option  option  =(Option)this.options.next();  [CE]  illegal  start  of  expression  [FE]                  OptionException      [CONTEXT]      if  (option  instanceof  Argument)  {  i.remove();  newAnonymous.add(option);  }  else  {  final  Set  triggers  =  option.getTriggers();      [BUGGY]  Option  option  =(Option)this.options.next();  [BUGGY]      for  (Iterator  j  =  triggers.iterator();  j.hasNext();)  {  newOptionMap.put(j.next(),  option);  }  newPrefixes.addAll(option.getPrefixes());  }  [CLASS]  GroupImpl  [METHOD]  <init>  [RETURN_TYPE]  String,int,int,boolean)  List  options  String  name  String  description  final  int  minimum  final  int  maximum  final  boolean  required  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  required  SortedMap  newOptionMap  optionMap  Iterator  i  j  List  anonymous  newAnonymous  options  Option  option  String  description  name  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	102	102	1	replace	Option  option  =(Option)this.options.next();	  Option    option    =(Option)triggers.next();    	non-compiled	[CE]  illegal  start  of  expression	4	None	replace
140	[BUG]  [BUGGY]  Option  option  =(Option)triggers.get(option);  [CE]  illegal  start  of  expression  [FE]                    OptionException      [CONTEXT]      if  (option  instanceof  Argument)  {  i.remove();  newAnonymous.add(option);  }  else  {  final  Set  triggers  =  option.getTriggers();      [BUGGY]  Option  option  =(Option)triggers.get(option);  [BUGGY]      for  (Iterator  j  =  triggers.iterator();  j.hasNext();)  {  newOptionMap.put(j.next(),  option);  }  newPrefixes.addAll(option.getPrefixes());  }  [CLASS]  GroupImpl  [METHOD]  <init>  [RETURN_TYPE]  String,int,int,boolean)  List  options  String  name  String  description  final  int  minimum  final  int  maximum  final  boolean  required  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  required  SortedMap  newOptionMap  optionMap  Iterator  i  j  List  anonymous  newAnonymous  options  Option  option  String  description  name  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	102	102	1	replace	Option  option  =(Option)triggers.get(option);	  Option    option    =(Option)triggers.next();    	non-compiled	[CE]  illegal  start  of  expression	4	None	replace
141	[BUG]  [BUGGY]  Option  option  =  options.getOption(name,  minimum  +  1);  [CE]  illegal  start  of  expression  [FE]                OptionException      [CONTEXT]      if  (option  instanceof  Argument)  {  i.remove();  newAnonymous.add(option);  }  else  {  final  Set  triggers  =  option.getTriggers();      [BUGGY]  Option  option  =  options.getOption(name,  minimum  +  1);  [BUGGY]      for  (Iterator  j  =  triggers.iterator();  j.hasNext();)  {  newOptionMap.put(j.next(),  option);  }  newPrefixes.addAll(option.getPrefixes());  }  [CLASS]  GroupImpl  [METHOD]  <init>  [RETURN_TYPE]  String,int,int,boolean)  List  options  String  name  String  description  final  int  minimum  final  int  maximum  final  boolean  required  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  required  SortedMap  newOptionMap  optionMap  Iterator  i  j  List  anonymous  newAnonymous  options  Option  option  String  description  name  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	102	102	1	replace	Option  option  =  options.getOption(name,  minimum  +  1);	  Option    option    =    options.getOption(name,    minimum);    	non-compiled	[CE]  illegal  start  of  expression	35	None	replace
142	[BUG]  [BUGGY]  For(Iterator  j  =  options.values().iterator();  j.hasNext();)  {  [CE]  illegal  start  of  expression  [FE]            OptionException      [CONTEXT]      if  (option  instanceof  Argument)  {  i.remove();  newAnonymous.add(option);  }  else  {  final  Set  triggers  =  option.getTriggers();      [BUGGY]  For(Iterator  j  =  options.values().iterator();  j.hasNext();)  {  [BUGGY]      newOptionMap.put(j.next(),  option);  }  newPrefixes.addAll(option.getPrefixes());  }  [CLASS]  GroupImpl  [METHOD]  <init>  [RETURN_TYPE]  String,int,int,boolean)  List  options  String  name  String  description  final  int  minimum  final  int  maximum  final  boolean  required  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  required  SortedMap  newOptionMap  optionMap  Iterator  i  j  List  anonymous  newAnonymous  options  Option  option  String  description  name  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	102	102	1	replace	For(Iterator  j  =  options.values().iterator();  j.hasNext();)  {	  For(Iterator    j    =    options.keySet().iterator();    j.hasNext();)    {    	non-compiled	[CE]  illegal  start  of  expression	46	None	replace
143	[BUG]  [BUGGY]  For(Iterator  j  =  options.entitiesSet().iterator();  j.hasNext();)  {  [CE]  illegal  start  of  expression  [FE]              OptionException      [CONTEXT]      if  (option  instanceof  Argument)  {  i.remove();  newAnonymous.add(option);  }  else  {  final  Set  triggers  =  option.getTriggers();      [BUGGY]  For(Iterator  j  =  options.entitiesSet().iterator();  j.hasNext();)  {  [BUGGY]      newOptionMap.put(j.next(),  option);  }  newPrefixes.addAll(option.getPrefixes());  }  [CLASS]  GroupImpl  [METHOD]  <init>  [RETURN_TYPE]  String,int,int,boolean)  List  options  String  name  String  description  final  int  minimum  final  int  maximum  final  boolean  required  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  required  SortedMap  newOptionMap  optionMap  Iterator  i  j  List  anonymous  newAnonymous  options  Option  option  String  description  name  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	102	102	1	replace	For(Iterator  j  =  options.entitiesSet().iterator();  j.hasNext();)  {	  For(Iterator    j    =    options.keySet().iterator();    j.hasNext();)    {    	non-compiled	[CE]  illegal  start  of  expression	46	None	replace
144	[BUG]  [BUGGY]  Iterator  <  Option>  i  =  triggers.iterator();  [CE]  illegal  start  of  expression  [FE]                OptionException      [CONTEXT]      if  (option  instanceof  Argument)  {  i.remove();  newAnonymous.add(option);  }  else  {  final  Set  triggers  =  option.getTriggers();      [BUGGY]  Iterator  <  Option>  i  =  triggers.iterator();  [BUGGY]      for  (Iterator  j  =  triggers.iterator();  j.hasNext();)  {  newOptionMap.put(j.next(),  option);  }  newPrefixes.addAll(option.getPrefixes());  }  [CLASS]  GroupImpl  [METHOD]  <init>  [RETURN_TYPE]  String,int,int,boolean)  List  options  String  name  String  description  final  int  minimum  final  int  maximum  final  boolean  required  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  required  SortedMap  newOptionMap  optionMap  Iterator  i  j  List  anonymous  newAnonymous  options  Option  option  String  description  name  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	102	102	1	replace	Iterator  <  Option>  i  =  triggers.iterator();	  if(triggers!=    null)    {    i.remove();    newAnonymous.add(option);    }    	non-compiled	[CE]  illegal  start  of  expression	50	None	replace
145	[BUG]  [BUGGY]  if(triggers!=  null)  {  i.remove();  newAnonymous.addAll(option.getPrefixes());  }  [CE]  illegal  start  of  expression  [FE]                  OptionException      [CONTEXT]      if  (option  instanceof  Argument)  {  i.remove();  newAnonymous.add(option);  }  else  {  final  Set  triggers  =  option.getTriggers();      [BUGGY]  if(triggers!=  null)  {  i.remove();  newAnonymous.addAll(option.getPrefixes());  }  [BUGGY]      for  (Iterator  j  =  triggers.iterator();  j.hasNext();)  {  newOptionMap.put(j.next(),  option);  }  newPrefixes.addAll(option.getPrefixes());  }  [CLASS]  GroupImpl  [METHOD]  <init>  [RETURN_TYPE]  String,int,int,boolean)  List  options  String  name  String  description  final  int  minimum  final  int  maximum  final  boolean  required  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  required  SortedMap  newOptionMap  optionMap  Iterator  i  j  List  anonymous  newAnonymous  options  Option  option  String  description  name  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	102	102	1	replace	if(triggers!=  null)  {  i.remove();  newAnonymous.addAll(option.getPrefixes());  }	  if(triggers!=    null)    {    i.remove();    newAnonymous.add(option);    }    	non-compiled	[CE]  illegal  start  of  expression	50	None	replace
146	[BUG]  [BUGGY]  Option  option  =  option.getOption(defaultName,  options);  [CE]  illegal  start  of  expression  [FE]            OptionException      [CONTEXT]      if  (option  instanceof  Argument)  {  i.remove();  newAnonymous.add(option);  }  else  {  final  Set  triggers  =  option.getTriggers();      [BUGGY]  Option  option  =  option.getOption(defaultName,  options);  [BUGGY]      for  (Iterator  j  =  triggers.iterator();  j.hasNext();)  {  newOptionMap.put(j.next(),  option);  }  newPrefixes.addAll(option.getPrefixes());  }  [CLASS]  GroupImpl  [METHOD]  <init>  [RETURN_TYPE]  String,int,int,boolean)  List  options  String  name  String  description  final  int  minimum  final  int  maximum  final  boolean  required  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  required  SortedMap  newOptionMap  optionMap  Iterator  i  j  List  anonymous  newAnonymous  options  Option  option  String  description  name  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	102	102	1	replace	Option  option  =  option.getOption(defaultName,  options);	  Option    option    =    option.getOption(defaultName);    	non-compiled	[CE]  illegal  start  of  expression	48	None	replace
147	[BUG]  [BUGGY]  Option  option  =  option.getOptionMap(),  options;  [CE]  illegal  start  of  expression  [FE]                OptionException      [CONTEXT]      if  (option  instanceof  Argument)  {  i.remove();  newAnonymous.add(option);  }  else  {  final  Set  triggers  =  option.getTriggers();      [BUGGY]  Option  option  =  option.getOptionMap(),  options;  [BUGGY]      for  (Iterator  j  =  triggers.iterator();  j.hasNext();)  {  newOptionMap.put(j.next(),  option);  }  newPrefixes.addAll(option.getPrefixes());  }  [CLASS]  GroupImpl  [METHOD]  <init>  [RETURN_TYPE]  String,int,int,boolean)  List  options  String  name  String  description  final  int  minimum  final  int  maximum  final  boolean  required  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  required  SortedMap  newOptionMap  optionMap  Iterator  i  j  List  anonymous  newAnonymous  options  Option  option  String  description  name  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	102	102	1	replace	Option  option  =  option.getOptionMap(),  options;	  Option    option    =    option.getOptionMap(),    newAnonymous;    	non-compiled	[CE]  illegal  start  of  expression	26	None	replace
148	[BUG]  [BUGGY]  Option  option  =  option.getOptionMap(),  triggers;  [CE]  illegal  start  of  expression  [FE]                  OptionException      [CONTEXT]      if  (option  instanceof  Argument)  {  i.remove();  newAnonymous.add(option);  }  else  {  final  Set  triggers  =  option.getTriggers();      [BUGGY]  Option  option  =  option.getOptionMap(),  triggers;  [BUGGY]      for  (Iterator  j  =  triggers.iterator();  j.hasNext();)  {  newOptionMap.put(j.next(),  option);  }  newPrefixes.addAll(option.getPrefixes());  }  [CLASS]  GroupImpl  [METHOD]  <init>  [RETURN_TYPE]  String,int,int,boolean)  List  options  String  name  String  description  final  int  minimum  final  int  maximum  final  boolean  required  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  required  SortedMap  newOptionMap  optionMap  Iterator  i  j  List  anonymous  newAnonymous  options  Option  option  String  description  name  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	102	102	1	replace	Option  option  =  option.getOptionMap(),  triggers;	  Option    option    =    option.getOptionMap(),    newAnonymous;    	non-compiled	[CE]  illegal  start  of  expression	26	None	replace
149	[BUG]  [BUGGY]  Option  option  =  option.getOptionMap(),  newAnonymous  +  1;  [CE]  illegal  start  of  expression  [FE]                    OptionException      [CONTEXT]      if  (option  instanceof  Argument)  {  i.remove();  newAnonymous.add(option);  }  else  {  final  Set  triggers  =  option.getTriggers();      [BUGGY]  Option  option  =  option.getOptionMap(),  newAnonymous  +  1;  [BUGGY]      for  (Iterator  j  =  triggers.iterator();  j.hasNext();)  {  newOptionMap.put(j.next(),  option);  }  newPrefixes.addAll(option.getPrefixes());  }  [CLASS]  GroupImpl  [METHOD]  <init>  [RETURN_TYPE]  String,int,int,boolean)  List  options  String  name  String  description  final  int  minimum  final  int  maximum  final  boolean  required  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  required  SortedMap  newOptionMap  optionMap  Iterator  i  j  List  anonymous  newAnonymous  options  Option  option  String  description  name  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	102	102	1	replace	Option  option  =  option.getOptionMap(),  newAnonymous  +  1;	  Option    option    =    option.getOptionMap(),    newAnonymous;    	non-compiled	[CE]  illegal  start  of  expression	26	None	replace
150	[BUG]  [BUGGY]  if(!required)  {  i.clear();  newAnonymous.add(option);  }  else  {  final  Set  <  Option>  options  =  option.getOptionMap();  newPrefixes.addAll(option.getPrefixes());  }  [CE]  illegal  start  of  expression  [FE]                OptionException      [CONTEXT]      if  (option  instanceof  Argument)  {  i.remove();  newAnonymous.add(option);  }  else  {  final  Set  triggers  =  option.getTriggers();      [BUGGY]  if(!required)  {  i.clear();  newAnonymous.add(option);  }  else  {  final  Set  <  Option>  options  =  option.getOptionMap();  newPrefixes.addAll(option.getPrefixes());  }  [BUGGY]      for  (Iterator  j  =  triggers.iterator();  j.hasNext();)  {  newOptionMap.put(j.next(),  option);  }  newPrefixes.addAll(option.getPrefixes());  }  [CLASS]  GroupImpl  [METHOD]  <init>  [RETURN_TYPE]  String,int,int,boolean)  List  options  String  name  String  description  final  int  minimum  final  int  maximum  final  boolean  required  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  required  SortedMap  newOptionMap  optionMap  Iterator  i  j  List  anonymous  newAnonymous  options  Option  option  String  description  name  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	102	102	1	replace	if(!required)  {  i.clear();  newAnonymous.add(option);  }  else  {  final  Set  <  Option>  options  =  option.getOptionMap();  newPrefixes.addAll(option.getPrefixes());  }	  if(!required)    {    i.remove();    newAnonymous.add(option);    }    else    {    final    Set    <    Option>    options    =    option.getOptionMap();    newPrefixes.addAll(option.getPrefixes());    }    	non-compiled	[CE]  illegal  start  of  expression	59	None	replace
151	[BUG]  [BUGGY]  if(!required)  {  i.remove();  newAnonymous.add(option);  }  else  {  final  Set  <  Option>  options  =  option.getOptionMap();  newPrefixes.addAll(option.getPre  [CE]  illegal  start  of  expression  [FE]                  OptionException      [CONTEXT]      if  (option  instanceof  Argument)  {  i.remove();  newAnonymous.add(option);  }  else  {  final  Set  triggers  =  option.getTriggers();      [BUGGY]  if(!required)  {  i.remove();  newAnonymous.add(option);  }  else  {  final  Set  <  Option>  options  =  option.getOptionMap();  newPrefixes.addAll(option.getPre  [BUGGY]      for  (Iterator  j  =  triggers.iterator();  j.hasNext();)  {  newOptionMap.put(j.next(),  option);  }  newPrefixes.addAll(option.getPrefixes());  }  [CLASS]  GroupImpl  [METHOD]  <init>  [RETURN_TYPE]  String,int,int,boolean)  List  options  String  name  String  description  final  int  minimum  final  int  maximum  final  boolean  required  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  required  SortedMap  newOptionMap  optionMap  Iterator  i  j  List  anonymous  newAnonymous  options  Option  option  String  description  name  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	102	102	1	replace	if(!required)  {  i.remove();  newAnonymous.add(option);  }  else  {  final  Set  <  Option>  options  =  option.getOptionMap();  newPrefixes.addAll(option.getPre	  if(!required)    {    i.remove();    newAnonymous.add(option);    }    else    {    final    Set    <    Option>    options    =    option.getOptionMap();    newPrefixes.addAll(option.getPrefixes());    }    	non-compiled	[CE]  illegal  start  of  expression	59	None	replace
152	[BUG]  [BUGGY]  Option  option  =  option.getOption(defaultAnonymous,  options);  [CE]  illegal  start  of  expression  [FE]            OptionException      [CONTEXT]      if  (option  instanceof  Argument)  {  i.remove();  newAnonymous.add(option);  }  else  {  final  Set  triggers  =  option.getTriggers();      [BUGGY]  Option  option  =  option.getOption(defaultAnonymous,  options);  [BUGGY]      for  (Iterator  j  =  triggers.iterator();  j.hasNext();)  {  newOptionMap.put(j.next(),  option);  }  newPrefixes.addAll(option.getPrefixes());  }  [CLASS]  GroupImpl  [METHOD]  <init>  [RETURN_TYPE]  String,int,int,boolean)  List  options  String  name  String  description  final  int  minimum  final  int  maximum  final  boolean  required  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  required  SortedMap  newOptionMap  optionMap  Iterator  i  j  List  anonymous  newAnonymous  options  Option  option  String  description  name  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	102	102	1	replace	Option  option  =  option.getOption(defaultAnonymous,  options);	  Option    option    =    option.getOption(defaultAnonymous);    	non-compiled	[CE]  illegal  start  of  expression	56	None	replace
153	[BUG]  [BUGGY]  Iterator  <  Option>  j  =  option.triggers.iterator();  [CE]  illegal  start  of  expression  [FE]                  OptionException      [CONTEXT]      if  (option  instanceof  Argument)  {  i.remove();  newAnonymous.add(option);  }  else  {  final  Set  triggers  =  option.getTriggers();      [BUGGY]  Iterator  <  Option>  j  =  option.triggers.iterator();  [BUGGY]      newOptionMap.put(j.next(),  option);  }  newPrefixes.addAll(option.getPrefixes());  }  [CLASS]  GroupImpl  [METHOD]  <init>  [RETURN_TYPE]  String,int,int,boolean)  List  options  String  name  String  description  final  int  minimum  final  int  maximum  final  boolean  required  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  required  SortedMap  newOptionMap  optionMap  Iterator  i  j  List  anonymous  newAnonymous  options  Option  option  String  description  name  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	102	102	1	replace	Iterator  <  Option>  j  =  option.triggers.iterator();	  Iterator    <    Option>    j    =    triggers.iterator();    	non-compiled	[CE]  illegal  start  of  expression	19	None	replace
154	[BUG]  [BUGGY]  final  Iterator  <  Option>  j  =  triggers.iterator();  [CE]  illegal  start  of  expression  [FE]                    OptionException      [CONTEXT]      if  (option  instanceof  Argument)  {  i.remove();  newAnonymous.add(option);  }  else  {  final  Set  triggers  =  option.getTriggers();      [BUGGY]  final  Iterator  <  Option>  j  =  triggers.iterator();  [BUGGY]      newOptionMap.put(j.next(),  option);  }  newPrefixes.addAll(option.getPrefixes());  }  [CLASS]  GroupImpl  [METHOD]  <init>  [RETURN_TYPE]  String,int,int,boolean)  List  options  String  name  String  description  final  int  minimum  final  int  maximum  final  boolean  required  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  required  SortedMap  newOptionMap  optionMap  Iterator  i  j  List  anonymous  newAnonymous  options  Option  option  String  description  name  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	102	102	1	replace	final  Iterator  <  Option>  j  =  triggers.iterator();	  Iterator    <    Option>    j    =    triggers.iterator();    	non-compiled	[CE]  illegal  start  of  expression	19	None	replace
155	[BUG]  [BUGGY]  i.remove(option.getArgument());  [CE]  illegal  start  of  expression  [FE]                        OptionException      [CONTEXT]      if  (option  instanceof  Argument)  {  i.remove();  newAnonymous.add(option);  }  else  {  final  Set  triggers  =  option.getTriggers();      [BUGGY]  i.remove(option.getArgument());  [BUGGY]      for  (Iterator  j  =  triggers.iterator();  j.hasNext();)  {  newOptionMap.put(j.next(),  option);  }  newPrefixes.addAll(option.getPrefixes());  }  [CLASS]  GroupImpl  [METHOD]  <init>  [RETURN_TYPE]  String,int,int,boolean)  List  options  String  name  String  description  final  int  minimum  final  int  maximum  final  boolean  required  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  required  SortedMap  newOptionMap  optionMap  Iterator  i  j  List  anonymous  newAnonymous  options  Option  option  String  description  name  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	102	102	1	replace	i.remove(option.getArgument());	  i.add(option.getArgument());    	non-compiled	[CE]  illegal  start  of  expression	44	None	replace
156	[BUG]  [BUGGY]  Option  option  =  options.getOption(default,  triggers);  [CE]  illegal  start  of  expression  [FE]                    OptionException      [CONTEXT]      if  (option  instanceof  Argument)  {  i.remove();  newAnonymous.add(option);  }  else  {  final  Set  triggers  =  option.getTriggers();      [BUGGY]  Option  option  =  options.getOption(default,  triggers);  [BUGGY]      for  (Iterator  j  =  triggers.iterator();  j.hasNext();)  {  newOptionMap.put(j.next(),  option);  }  newPrefixes.addAll(option.getPrefixes());  }  [CLASS]  GroupImpl  [METHOD]  <init>  [RETURN_TYPE]  String,int,int,boolean)  List  options  String  name  String  description  final  int  minimum  final  int  maximum  final  boolean  required  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  required  SortedMap  newOptionMap  optionMap  Iterator  i  j  List  anonymous  newAnonymous  options  Option  option  String  description  name  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	102	102	1	replace	Option  option  =  options.getOption(default,  triggers);	  Option    option    =    options.getOption(default);    	non-compiled	[CE]  illegal  start  of  expression	8	None	replace
157	[BUG]  [BUGGY]  Option  option  =  option.getOptionMap(),  triggers);  [CE]  illegal  start  of  expression  [FE]                OptionException      [CONTEXT]      if  (option  instanceof  Argument)  {  i.remove();  newAnonymous.add(option);  }  else  {  final  Set  triggers  =  option.getTriggers();      [BUGGY]  Option  option  =  option.getOptionMap(),  triggers);  [BUGGY]      for  (Iterator  j  =  triggers.iterator();  j.hasNext();)  {  newOptionMap.put(j.next(),  option);  }  newPrefixes.addAll(option.getPrefixes());  }  [CLASS]  GroupImpl  [METHOD]  <init>  [RETURN_TYPE]  String,int,int,boolean)  List  options  String  name  String  description  final  int  minimum  final  int  maximum  final  boolean  required  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  required  SortedMap  newOptionMap  optionMap  Iterator  i  j  List  anonymous  newAnonymous  options  Option  option  String  description  name  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	102	102	1	replace	Option  option  =  option.getOptionMap(),  triggers);	  Option    option    =    option.getOptionMap(),    options);    	non-compiled	[CE]  illegal  start  of  expression	53	None	replace
158	[BUG]  [BUGGY]  i.addAll(option.getPrefixes());  [CE]  illegal  start  of  expression  [FE]                      OptionException      [CONTEXT]      if  (option  instanceof  Argument)  {  i.remove();  newAnonymous.add(option);  }  else  {  final  Set  triggers  =  option.getTriggers();      [BUGGY]  i.addAll(option.getPrefixes());  [BUGGY]      for  (Iterator  j  =  triggers.iterator();  j.hasNext();)  {  newOptionMap.put(j.next(),  option);  }  newPrefixes.addAll(option.getPrefixes());  }  [CLASS]  GroupImpl  [METHOD]  <init>  [RETURN_TYPE]  String,int,int,boolean)  List  options  String  name  String  description  final  int  minimum  final  int  maximum  final  boolean  required  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  required  SortedMap  newOptionMap  optionMap  Iterator  i  j  List  anonymous  newAnonymous  options  Option  option  String  description  name  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	102	102	1	replace	i.addAll(option.getPrefixes());	  i.add(option.getPrefix());    	non-compiled	[CE]  illegal  start  of  expression	43	None	replace
159	[BUG]  [BUGGY]  i.add(option.getAnonymous());  [CE]  illegal  start  of  expression  [FE]                        OptionException      [CONTEXT]      if  (option  instanceof  Argument)  {  i.remove();  newAnonymous.add(option);  }  else  {  final  Set  triggers  =  option.getTriggers();      [BUGGY]  i.add(option.getAnonymous());  [BUGGY]      for  (Iterator  j  =  triggers.iterator();  j.hasNext();)  {  newOptionMap.put(j.next(),  option);  }  newPrefixes.addAll(option.getPrefixes());  }  [CLASS]  GroupImpl  [METHOD]  <init>  [RETURN_TYPE]  String,int,int,boolean)  List  options  String  name  String  description  final  int  minimum  final  int  maximum  final  boolean  required  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  required  SortedMap  newOptionMap  optionMap  Iterator  i  j  List  anonymous  newAnonymous  options  Option  option  String  description  name  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	102	102	1	replace	i.add(option.getAnonymous());	  i.add(option.getPrefix());    	non-compiled	[CE]  illegal  start  of  expression	43	None	replace
160	[BUG]  [BUGGY]  Option  option  =  options.getOptionMap(option);  [CE]  illegal  start  of  expression  [FE]                  OptionException      [CONTEXT]      if  (option  instanceof  Argument)  {  i.remove();  newAnonymous.add(option);  }  else  {  final  Set  triggers  =  option.getTriggers();      [BUGGY]  Option  option  =  options.getOptionMap(option);  [BUGGY]      for  (Iterator  j  =  triggers.iterator();  j.hasNext();)  {  newOptionMap.put(j.next(),  option);  }  newPrefixes.addAll(option.getPrefixes());  }  [CLASS]  GroupImpl  [METHOD]  <init>  [RETURN_TYPE]  String,int,int,boolean)  List  options  String  name  String  description  final  int  minimum  final  int  maximum  final  boolean  required  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  required  SortedMap  newOptionMap  optionMap  Iterator  i  j  List  anonymous  newAnonymous  options  Option  option  String  description  name  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	102	102	1	replace	Option  option  =  options.getOptionMap(option);	  Option    option    =    options.getOptionMap();    	non-compiled	[CE]  illegal  start  of  expression	27	None	replace
161	[BUG]  [BUGGY]  if(!required)  {  i.remove();  newAnonymous.add(option);  }  else  {  final  Set  <  Option>  options  =  option.getTriggers();  for(Iterator  <  Option>  j  =  options.iterator();  j.hasNext()  [CE]  illegal  start  of  expression  [FE]                  OptionException      [CONTEXT]      if  (option  instanceof  Argument)  {  i.remove();  newAnonymous.add(option);  }  else  {  final  Set  triggers  =  option.getTriggers();      [BUGGY]  if(!required)  {  i.remove();  newAnonymous.add(option);  }  else  {  final  Set  <  Option>  options  =  option.getTriggers();  for(Iterator  <  Option>  j  =  options.iterator();  j.hasNext()  [BUGGY]      for  (Iterator  j  =  triggers.iterator();  j.hasNext();)  {  newOptionMap.put(j.next(),  option);  }  newPrefixes.addAll(option.getPrefixes());  }  [CLASS]  GroupImpl  [METHOD]  <init>  [RETURN_TYPE]  String,int,int,boolean)  List  options  String  name  String  description  final  int  minimum  final  int  maximum  final  boolean  required  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  required  SortedMap  newOptionMap  optionMap  Iterator  i  j  List  anonymous  newAnonymous  options  Option  option  String  description  name  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	102	102	1	replace	if(!required)  {  i.remove();  newAnonymous.add(option);  }  else  {  final  Set  <  Option>  options  =  option.getTriggers();  for(Iterator  <  Option>  j  =  options.iterator();  j.hasNext()	  if(!required)    {    i.remove();    newAnonymous.add(option);    }    else    {    final    Set    <    Option>    triggers    =    option.getTriggers();    for(Iterator    <    Option>    j    =    triggers.iterator();    j.hasNext()    	non-compiled	[CE]  illegal  start  of  expression	60	None	replace
162	[BUG]  [BUGGY]  if(required)  {  i.remove();  newAnonymous.add(option);  }  else  {  final  Set  <  Option>  options  =  option.getTriggers();  for(Iterator  <  Option>  j  =  options.iterator();  j.hasNext()  [CE]  illegal  start  of  expression  [FE]                    OptionException      [CONTEXT]      if  (option  instanceof  Argument)  {  i.remove();  newAnonymous.add(option);  }  else  {  final  Set  triggers  =  option.getTriggers();      [BUGGY]  if(required)  {  i.remove();  newAnonymous.add(option);  }  else  {  final  Set  <  Option>  options  =  option.getTriggers();  for(Iterator  <  Option>  j  =  options.iterator();  j.hasNext()  [BUGGY]      for  (Iterator  j  =  triggers.iterator();  j.hasNext();)  {  newOptionMap.put(j.next(),  option);  }  newPrefixes.addAll(option.getPrefixes());  }  [CLASS]  GroupImpl  [METHOD]  <init>  [RETURN_TYPE]  String,int,int,boolean)  List  options  String  name  String  description  final  int  minimum  final  int  maximum  final  boolean  required  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  required  SortedMap  newOptionMap  optionMap  Iterator  i  j  List  anonymous  newAnonymous  options  Option  option  String  description  name  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	102	102	1	replace	if(required)  {  i.remove();  newAnonymous.add(option);  }  else  {  final  Set  <  Option>  options  =  option.getTriggers();  for(Iterator  <  Option>  j  =  options.iterator();  j.hasNext()	  if(!required)    {    i.remove();    newAnonymous.add(option);    }    else    {    final    Set    <    Option>    triggers    =    option.getTriggers();    for(Iterator    <    Option>    j    =    triggers.iterator();    j.hasNext()    	non-compiled	[CE]  illegal  start  of  expression	60	None	replace
163	[BUG]  [BUGGY]  newAnonymous.remove(option.getTriggers());  [CE]  illegal  start  of  expression  [FE]                      OptionException      [CONTEXT]      if  (option  instanceof  Argument)  {  i.remove();  newAnonymous.add(option);  }  else  {  final  Set  triggers  =  option.getTriggers();      [BUGGY]  newAnonymous.remove(option.getTriggers());  [BUGGY]      for  (Iterator  j  =  triggers.iterator();  j.hasNext();)  {  newOptionMap.put(j.next(),  option);  }  newPrefixes.addAll(option.getPrefixes());  }  [CLASS]  GroupImpl  [METHOD]  <init>  [RETURN_TYPE]  String,int,int,boolean)  List  options  String  name  String  description  final  int  minimum  final  int  maximum  final  boolean  required  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  required  SortedMap  newOptionMap  optionMap  Iterator  i  j  List  anonymous  newAnonymous  options  Option  option  String  description  name  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	102	102	1	replace	newAnonymous.remove(option.getTriggers());	  newAnonymous.remove(option.getPrefixes());    	non-compiled	[CE]  illegal  start  of  expression	31	None	replace
164	[BUG]  [BUGGY]  newAnonymous.remove(option.getDescription());  [CE]  illegal  start  of  expression  [FE]                        OptionException      [CONTEXT]      if  (option  instanceof  Argument)  {  i.remove();  newAnonymous.add(option);  }  else  {  final  Set  triggers  =  option.getTriggers();      [BUGGY]  newAnonymous.remove(option.getDescription());  [BUGGY]      for  (Iterator  j  =  triggers.iterator();  j.hasNext();)  {  newOptionMap.put(j.next(),  option);  }  newPrefixes.addAll(option.getPrefixes());  }  [CLASS]  GroupImpl  [METHOD]  <init>  [RETURN_TYPE]  String,int,int,boolean)  List  options  String  name  String  description  final  int  minimum  final  int  maximum  final  boolean  required  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  required  SortedMap  newOptionMap  optionMap  Iterator  i  j  List  anonymous  newAnonymous  options  Option  option  String  description  name  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	102	102	1	replace	newAnonymous.remove(option.getDescription());	  newAnonymous.remove(option.getPrefixes());    	non-compiled	[CE]  illegal  start  of  expression	31	None	replace
165	[BUG]  [BUGGY]  Option  option  =  option.getOption(name,  minimal);  [CE]  illegal  start  of  expression  [FE]              OptionException      [CONTEXT]      if  (option  instanceof  Argument)  {  i.remove();  newAnonymous.add(option);  }  else  {  final  Set  triggers  =  option.getTriggers();      [BUGGY]  Option  option  =  option.getOption(name,  minimal);  [BUGGY]      for  (Iterator  j  =  triggers.iterator();  j.hasNext();)  {  newOptionMap.put(j.next(),  option);  }  newPrefixes.addAll(option.getPrefixes());  }  [CLASS]  GroupImpl  [METHOD]  <init>  [RETURN_TYPE]  String,int,int,boolean)  List  options  String  name  String  description  final  int  minimum  final  int  maximum  final  boolean  required  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  required  SortedMap  newOptionMap  optionMap  Iterator  i  j  List  anonymous  newAnonymous  options  Option  option  String  description  name  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	102	102	1	replace	Option  option  =  option.getOption(name,  minimal);	  Option    option    =    option.getOption(name,    required);    	non-compiled	[CE]  illegal  start  of  expression	13	None	replace
166	[BUG]  [BUGGY]  Option  option  =  option.getOption(required,  name);  [CE]  illegal  start  of  expression  [FE]                OptionException      [CONTEXT]      if  (option  instanceof  Argument)  {  i.remove();  newAnonymous.add(option);  }  else  {  final  Set  triggers  =  option.getTriggers();      [BUGGY]  Option  option  =  option.getOption(required,  name);  [BUGGY]      for  (Iterator  j  =  triggers.iterator();  j.hasNext();)  {  newOptionMap.put(j.next(),  option);  }  newPrefixes.addAll(option.getPrefixes());  }  [CLASS]  GroupImpl  [METHOD]  <init>  [RETURN_TYPE]  String,int,int,boolean)  List  options  String  name  String  description  final  int  minimum  final  int  maximum  final  boolean  required  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  required  SortedMap  newOptionMap  optionMap  Iterator  i  j  List  anonymous  newAnonymous  options  Option  option  String  description  name  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	102	102	1	replace	Option  option  =  option.getOption(required,  name);	  Option    option    =    option.getOption(name,    required);    	non-compiled	[CE]  illegal  start  of  expression	13	None	replace
167	[BUG]  [BUGGY]  Iterator  <  Option>  j  =  optionMap.entities().iterator();  [CE]  illegal  start  of  expression  [FE]                  OptionException      [CONTEXT]      if  (option  instanceof  Argument)  {  i.remove();  newAnonymous.add(option);  }  else  {  final  Set  triggers  =  option.getTriggers();      [BUGGY]  Iterator  <  Option>  j  =  optionMap.entities().iterator();  [BUGGY]      newOptionMap.put(j.next(),  option);  }  newPrefixes.addAll(option.getPrefixes());  }  [CLASS]  GroupImpl  [METHOD]  <init>  [RETURN_TYPE]  String,int,int,boolean)  List  options  String  name  String  description  final  int  minimum  final  int  maximum  final  boolean  required  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  required  SortedMap  newOptionMap  optionMap  Iterator  i  j  List  anonymous  newAnonymous  options  Option  option  String  description  name  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	102	102	1	replace	Iterator  <  Option>  j  =  optionMap.entities().iterator();	  Iterator    <    Option>    j    =    options.entities().iterator();    	non-compiled	[CE]  illegal  start  of  expression	40	None	replace
168	[BUG]  [BUGGY]  For(Iterator  j  =  options.entrySet().iterator();  j.hasNext();)  {  [CE]  illegal  start  of  expression  [FE]              OptionException      [CONTEXT]      if  (option  instanceof  Argument)  {  i.remove();  newAnonymous.add(option);  }  else  {  final  Set  triggers  =  option.getTriggers();      [BUGGY]  For(Iterator  j  =  options.entrySet().iterator();  j.hasNext();)  {  [BUGGY]      newOptionMap.put(j.next(),  option);  }  newPrefixes.addAll(option.getPrefixes());  }  [CLASS]  GroupImpl  [METHOD]  <init>  [RETURN_TYPE]  String,int,int,boolean)  List  options  String  name  String  description  final  int  minimum  final  int  maximum  final  boolean  required  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  required  SortedMap  newOptionMap  optionMap  Iterator  i  j  List  anonymous  newAnonymous  options  Option  option  String  description  name  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	102	102	1	replace	For(Iterator  j  =  options.entrySet().iterator();  j.hasNext();)  {	  For(Iterator    j    =    options.iterator();    j.hasNext();)    {    	non-compiled	[CE]  illegal  start  of  expression	21	None	replace
169	[BUG]  [BUGGY]  For(Iterator  j  =  options.entities();  j.hasNext();)  {  [CE]  illegal  start  of  expression  [FE]                OptionException      [CONTEXT]      if  (option  instanceof  Argument)  {  i.remove();  newAnonymous.add(option);  }  else  {  final  Set  triggers  =  option.getTriggers();      [BUGGY]  For(Iterator  j  =  options.entities();  j.hasNext();)  {  [BUGGY]      newOptionMap.put(j.next(),  option);  }  newPrefixes.addAll(option.getPrefixes());  }  [CLASS]  GroupImpl  [METHOD]  <init>  [RETURN_TYPE]  String,int,int,boolean)  List  options  String  name  String  description  final  int  minimum  final  int  maximum  final  boolean  required  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  required  SortedMap  newOptionMap  optionMap  Iterator  i  j  List  anonymous  newAnonymous  options  Option  option  String  description  name  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	102	102	1	replace	For(Iterator  j  =  options.entities();  j.hasNext();)  {	  For(Iterator    j    =    options.iterator();    j.hasNext();)    {    	non-compiled	[CE]  illegal  start  of  expression	21	None	replace
170	[BUG]  [BUGGY]  For(Iterator  j  =  options.allTriggers.iterator();  j.hasNext();)  {  [CE]  illegal  start  of  expression  [FE]                OptionException      [CONTEXT]      if  (option  instanceof  Argument)  {  i.remove();  newAnonymous.add(option);  }  else  {  final  Set  triggers  =  option.getTriggers();      [BUGGY]  For(Iterator  j  =  options.allTriggers.iterator();  j.hasNext();)  {  [BUGGY]      newOptionMap.put(j.next(),  option);  }  newPrefixes.addAll(option.getPrefixes());  }  [CLASS]  GroupImpl  [METHOD]  <init>  [RETURN_TYPE]  String,int,int,boolean)  List  options  String  name  String  description  final  int  minimum  final  int  maximum  final  boolean  required  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  required  SortedMap  newOptionMap  optionMap  Iterator  i  j  List  anonymous  newAnonymous  options  Option  option  String  description  name  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	102	102	1	replace	For(Iterator  j  =  options.allTriggers.iterator();  j.hasNext();)  {	  For(Iterator    j    =    allTriggers.iterator();    j.hasNext();)    {    	non-compiled	[CE]  illegal  start  of  expression	22	None	replace
171	[BUG]  [BUGGY]  for(Iterator  it  =  options.keySet().iterator();  j.hasNext();)  {  [CE]  illegal  start  of  expression  [FE]              OptionException      [CONTEXT]      if  (option  instanceof  Argument)  {  i.remove();  newAnonymous.add(option);  }  else  {  final  Set  triggers  =  option.getTriggers();      [BUGGY]  for(Iterator  it  =  options.keySet().iterator();  j.hasNext();)  {  [BUGGY]      newOptionMap.put(j.next(),  option);  }  newPrefixes.addAll(option.getPrefixes());  }  [CLASS]  GroupImpl  [METHOD]  <init>  [RETURN_TYPE]  String,int,int,boolean)  List  options  String  name  String  description  final  int  minimum  final  int  maximum  final  boolean  required  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  required  SortedMap  newOptionMap  optionMap  Iterator  i  j  List  anonymous  newAnonymous  options  Option  option  String  description  name  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	102	102	1	replace	for(Iterator  it  =  options.keySet().iterator();  j.hasNext();)  {	  for(Iterator    it    =    triggers.iterator();    j.hasNext();)    {    	non-compiled	[CE]  illegal  start  of  expression	57	None	replace
172	[BUG]  [BUGGY]  newAnonymous.add(option.getTriggers());  [CE]  illegal  start  of  expression  [FE]                        OptionException      [CONTEXT]      if  (option  instanceof  Argument)  {  i.remove();  newAnonymous.add(option);  }  else  {  final  Set  triggers  =  option.getTriggers();      [BUGGY]  newAnonymous.add(option.getTriggers());  [BUGGY]      for  (Iterator  j  =  triggers.iterator();  j.hasNext();)  {  newOptionMap.put(j.next(),  option);  }  newPrefixes.addAll(option.getPrefixes());  }  [CLASS]  GroupImpl  [METHOD]  <init>  [RETURN_TYPE]  String,int,int,boolean)  List  options  String  name  String  description  final  int  minimum  final  int  maximum  final  boolean  required  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  required  SortedMap  newOptionMap  optionMap  Iterator  i  j  List  anonymous  newAnonymous  options  Option  option  String  description  name  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	102	102	1	replace	newAnonymous.add(option.getTriggers());	  newAnonymous.add(option.getPrefixes());    	non-compiled	[CE]  illegal  start  of  expression	32	None	replace
173	[BUG]  [BUGGY]  Option  option  =(Option)throwables.get(option);  [CE]  illegal  start  of  expression  [FE]                    OptionException      [CONTEXT]      if  (option  instanceof  Argument)  {  i.remove();  newAnonymous.add(option);  }  else  {  final  Set  triggers  =  option.getTriggers();      [BUGGY]  Option  option  =(Option)throwables.get(option);  [BUGGY]      for  (Iterator  j  =  triggers.iterator();  j.hasNext();)  {  newOptionMap.put(j.next(),  option);  }  newPrefixes.addAll(option.getPrefixes());  }  [CLASS]  GroupImpl  [METHOD]  <init>  [RETURN_TYPE]  String,int,int,boolean)  List  options  String  name  String  description  final  int  minimum  final  int  maximum  final  boolean  required  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  required  SortedMap  newOptionMap  optionMap  Iterator  i  j  List  anonymous  newAnonymous  options  Option  option  String  description  name  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	102	102	1	replace	Option  option  =(Option)throwables.get(option);	  Option    option    =(Option)throwables.next();    	non-compiled	[CE]  illegal  start  of  expression	5	None	replace
174	[BUG]  [BUGGY]  Option  option  =  option.getOption(name,  minimum  +  1);  [CE]  illegal  start  of  expression  [FE]                OptionException      [CONTEXT]      if  (option  instanceof  Argument)  {  i.remove();  newAnonymous.add(option);  }  else  {  final  Set  triggers  =  option.getTriggers();      [BUGGY]  Option  option  =  option.getOption(name,  minimum  +  1);  [BUGGY]      for  (Iterator  j  =  triggers.iterator();  j.hasNext();)  {  newOptionMap.put(j.next(),  option);  }  newPrefixes.addAll(option.getPrefixes());  }  [CLASS]  GroupImpl  [METHOD]  <init>  [RETURN_TYPE]  String,int,int,boolean)  List  options  String  name  String  description  final  int  minimum  final  int  maximum  final  boolean  required  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  required  SortedMap  newOptionMap  optionMap  Iterator  i  j  List  anonymous  newAnonymous  options  Option  option  String  description  name  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	102	102	1	replace	Option  option  =  option.getOption(name,  minimum  +  1);	  Option    option    =    option.getOption(name,    minimum);    	non-compiled	[CE]  illegal  start  of  expression	14	None	replace
175	[BUG]  [BUGGY]  Option  option  =  option.getOption(name,  minimum  -  1);  [CE]  illegal  start  of  expression  [FE]                  OptionException      [CONTEXT]      if  (option  instanceof  Argument)  {  i.remove();  newAnonymous.add(option);  }  else  {  final  Set  triggers  =  option.getTriggers();      [BUGGY]  Option  option  =  option.getOption(name,  minimum  -  1);  [BUGGY]      for  (Iterator  j  =  triggers.iterator();  j.hasNext();)  {  newOptionMap.put(j.next(),  option);  }  newPrefixes.addAll(option.getPrefixes());  }  [CLASS]  GroupImpl  [METHOD]  <init>  [RETURN_TYPE]  String,int,int,boolean)  List  options  String  name  String  description  final  int  minimum  final  int  maximum  final  boolean  required  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  required  SortedMap  newOptionMap  optionMap  Iterator  i  j  List  anonymous  newAnonymous  options  Option  option  String  description  name  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	102	102	1	replace	Option  option  =  option.getOption(name,  minimum  -  1);	  Option    option    =    option.getOption(name,    minimum);    	non-compiled	[CE]  illegal  start  of  expression	14	None	replace
176	[BUG]  [BUGGY]  Option  option  =  options.getOption(i,  this.triggers);  [CE]  illegal  start  of  expression  [FE]                OptionException      [CONTEXT]      if  (option  instanceof  Argument)  {  i.remove();  newAnonymous.add(option);  }  else  {  final  Set  triggers  =  option.getTriggers();      [BUGGY]  Option  option  =  options.getOption(i,  this.triggers);  [BUGGY]      for  (Iterator  j  =  triggers.iterator();  j.hasNext();)  {  newOptionMap.put(j.next(),  option);  }  newPrefixes.addAll(option.getPrefixes());  }  [CLASS]  GroupImpl  [METHOD]  <init>  [RETURN_TYPE]  String,int,int,boolean)  List  options  String  name  String  description  final  int  minimum  final  int  maximum  final  boolean  required  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  required  SortedMap  newOptionMap  optionMap  Iterator  i  j  List  anonymous  newAnonymous  options  Option  option  String  description  name  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	102	102	1	replace	Option  option  =  options.getOption(i,  this.triggers);	  Option    option    =    options.getOption(i,    triggers);    	non-compiled	[CE]  illegal  start  of  expression	55	None	replace
177	[BUG]  [BUGGY]  Option  option  =  options.getOption(i,  this.defaultAnonymous);  [CE]  illegal  start  of  expression  [FE]                  OptionException      [CONTEXT]      if  (option  instanceof  Argument)  {  i.remove();  newAnonymous.add(option);  }  else  {  final  Set  triggers  =  option.getTriggers();      [BUGGY]  Option  option  =  options.getOption(i,  this.defaultAnonymous);  [BUGGY]      for  (Iterator  j  =  triggers.iterator();  j.hasNext();)  {  newOptionMap.put(j.next(),  option);  }  newPrefixes.addAll(option.getPrefixes());  }  [CLASS]  GroupImpl  [METHOD]  <init>  [RETURN_TYPE]  String,int,int,boolean)  List  options  String  name  String  description  final  int  minimum  final  int  maximum  final  boolean  required  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  required  SortedMap  newOptionMap  optionMap  Iterator  i  j  List  anonymous  newAnonymous  options  Option  option  String  description  name  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	102	102	1	replace	Option  option  =  options.getOption(i,  this.defaultAnonymous);	  Option    option    =    options.getOption(i,    triggers);    	non-compiled	[CE]  illegal  start  of  expression	55	None	replace
178	[BUG]  [BUGGY]  Option  option  =  option.getOption(triggers,  description);  [CE]  illegal  start  of  expression  [FE]                OptionException      [CONTEXT]      if  (option  instanceof  Argument)  {  i.remove();  newAnonymous.add(option);  }  else  {  final  Set  triggers  =  option.getTriggers();      [BUGGY]  Option  option  =  option.getOption(triggers,  description);  [BUGGY]      newOptionMap.put(j.next(),  option);  }  newPrefixes.addAll(option.getPrefixes());  }  [CLASS]  GroupImpl  [METHOD]  <init>  [RETURN_TYPE]  String,int,int,boolean)  List  options  String  name  String  description  final  int  minimum  final  int  maximum  final  boolean  required  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  required  SortedMap  newOptionMap  optionMap  Iterator  i  j  List  anonymous  newAnonymous  options  Option  option  String  description  name  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	102	102	1	replace	Option  option  =  option.getOption(triggers,  description);	  Option    option    =    option.getOption(triggers);    	non-compiled	[CE]  illegal  start  of  expression	39	None	replace
179	[BUG]  [BUGGY]  Option  option  =  option.getOption(),  required,  maximum);  [CE]  illegal  start  of  expression  [FE]                OptionException      [CONTEXT]      if  (option  instanceof  Argument)  {  i.remove();  newAnonymous.add(option);  }  else  {  final  Set  triggers  =  option.getTriggers();      [BUGGY]  Option  option  =  option.getOption(),  required,  maximum);  [BUGGY]      for  (Iterator  j  =  triggers.iterator();  j.hasNext();)  {  newOptionMap.put(j.next(),  option);  }  newPrefixes.addAll(option.getPrefixes());  }  [CLASS]  GroupImpl  [METHOD]  <init>  [RETURN_TYPE]  String,int,int,boolean)  List  options  String  name  String  description  final  int  minimum  final  int  maximum  final  boolean  required  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  required  SortedMap  newOptionMap  optionMap  Iterator  i  j  List  anonymous  newAnonymous  options  Option  option  String  description  name  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	102	102	1	replace	Option  option  =  option.getOption(),  required,  maximum);	  Option    option    =    option.getOption(),    required);    	non-compiled	[CE]  illegal  start  of  expression	3	None	replace
180	[BUG]  [BUGGY]  final  List  <  Option>  options  =  option.getOptions(required);  [CE]  illegal  start  of  expression  [FE]              OptionException      [CONTEXT]      if  (option  instanceof  Argument)  {  i.remove();  newAnonymous.add(option);  }  else  {  final  Set  triggers  =  option.getTriggers();      [BUGGY]  final  List  <  Option>  options  =  option.getOptions(required);  [BUGGY]      for  (Iterator  j  =  triggers.iterator();  j.hasNext();)  {  newOptionMap.put(j.next(),  option);  }  newPrefixes.addAll(option.getPrefixes());  }  [CLASS]  GroupImpl  [METHOD]  <init>  [RETURN_TYPE]  String,int,int,boolean)  List  options  String  name  String  description  final  int  minimum  final  int  maximum  final  boolean  required  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  required  SortedMap  newOptionMap  optionMap  Iterator  i  j  List  anonymous  newAnonymous  options  Option  option  String  description  name  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	102	102	1	replace	final  List  <  Option>  options  =  option.getOptions(required);	  final    List    <    Option>    options    =    option.getOptions();    	non-compiled	[CE]  illegal  start  of  expression	9	None	replace
181	[BUG]  [BUGGY]  Option  option  =  options.getOption(i,  newAnonymous,  triggers);  [CE]  illegal  start  of  expression  [FE]                  OptionException      [CONTEXT]      if  (option  instanceof  Argument)  {  i.remove();  newAnonymous.add(option);  }  else  {  final  Set  triggers  =  option.getTriggers();      [BUGGY]  Option  option  =  options.getOption(i,  newAnonymous,  triggers);  [BUGGY]      for  (Iterator  j  =  triggers.iterator();  j.hasNext();)  {  newOptionMap.put(j.next(),  option);  }  newPrefixes.addAll(option.getPrefixes());  }  [CLASS]  GroupImpl  [METHOD]  <init>  [RETURN_TYPE]  String,int,int,boolean)  List  options  String  name  String  description  final  int  minimum  final  int  maximum  final  boolean  required  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  required  SortedMap  newOptionMap  optionMap  Iterator  i  j  List  anonymous  newAnonymous  options  Option  option  String  description  name  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	102	102	1	replace	Option  option  =  options.getOption(i,  newAnonymous,  triggers);	  Option    option    =    options.getOption(i,    newAnonymous);    	non-compiled	[CE]  illegal  start  of  expression	24	None	replace
182	[BUG]  [BUGGY]  Option  option  =  options.getOption(description,  required);  [CE]  illegal  start  of  expression  [FE]            OptionException      [CONTEXT]      if  (option  instanceof  Argument)  {  i.remove();  newAnonymous.add(option);  }  else  {  final  Set  triggers  =  option.getTriggers();      [BUGGY]  Option  option  =  options.getOption(description,  required);  [BUGGY]      for  (Iterator  j  =  triggers.iterator();  j.hasNext();)  {  newOptionMap.put(j.next(),  option);  }  newPrefixes.addAll(option.getPrefixes());  }  [CLASS]  GroupImpl  [METHOD]  <init>  [RETURN_TYPE]  String,int,int,boolean)  List  options  String  name  String  description  final  int  minimum  final  int  maximum  final  boolean  required  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  required  SortedMap  newOptionMap  optionMap  Iterator  i  j  List  anonymous  newAnonymous  options  Option  option  String  description  name  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	102	102	1	replace	Option  option  =  options.getOption(description,  required);	  Option    option    =    options.getOption(description);    	non-compiled	[CE]  illegal  start  of  expression	33	None	replace
183	[BUG]  [BUGGY]  Option  option  =  options.getOption(name,  minimal);  [CE]  illegal  start  of  expression  [FE]              OptionException      [CONTEXT]      if  (option  instanceof  Argument)  {  i.remove();  newAnonymous.add(option);  }  else  {  final  Set  triggers  =  option.getTriggers();      [BUGGY]  Option  option  =  options.getOption(name,  minimal);  [BUGGY]      for  (Iterator  j  =  triggers.iterator();  j.hasNext();)  {  newOptionMap.put(j.next(),  option);  }  newPrefixes.addAll(option.getPrefixes());  }  [CLASS]  GroupImpl  [METHOD]  <init>  [RETURN_TYPE]  String,int,int,boolean)  List  options  String  name  String  description  final  int  minimum  final  int  maximum  final  boolean  required  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  required  SortedMap  newOptionMap  optionMap  Iterator  i  j  List  anonymous  newAnonymous  options  Option  option  String  description  name  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	102	102	1	replace	Option  option  =  options.getOption(name,  minimal);	  Option    option    =    options.getOption(name,    required);    	non-compiled	[CE]  illegal  start  of  expression	34	None	replace
184	[BUG]  [BUGGY]  Option  option  =  option.getOptionMap(triggers);  [CE]  illegal  start  of  expression  [FE]              OptionException      [CONTEXT]      if  (option  instanceof  Argument)  {  i.remove();  newAnonymous.add(option);  }  else  {  final  Set  triggers  =  option.getTriggers();      [BUGGY]  Option  option  =  option.getOptionMap(triggers);  [BUGGY]      for  (Iterator  j  =  triggers.iterator();  j.hasNext();)  {  newOptionMap.put(j.next(),  option);  }  newPrefixes.addAll(option.getPrefixes());  }  [CLASS]  GroupImpl  [METHOD]  <init>  [RETURN_TYPE]  String,int,int,boolean)  List  options  String  name  String  description  final  int  minimum  final  int  maximum  final  boolean  required  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  required  SortedMap  newOptionMap  optionMap  Iterator  i  j  List  anonymous  newAnonymous  options  Option  option  String  description  name  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	102	102	1	replace	Option  option  =  option.getOptionMap(triggers);	  Option    option    =    option.getOptionMap(required);    	non-compiled	[CE]  illegal  start  of  expression	52	None	replace
185	[BUG]  [BUGGY]  For(Iterator  j  =  options.triggers.iterator();  j.hasNext();)  {  [CE]  illegal  start  of  expression  [FE]            OptionException      [CONTEXT]      if  (option  instanceof  Argument)  {  i.remove();  newAnonymous.add(option);  }  else  {  final  Set  triggers  =  option.getTriggers();      [BUGGY]  For(Iterator  j  =  options.triggers.iterator();  j.hasNext();)  {  [BUGGY]      newOptionMap.put(j.next(),  option);  }  newPrefixes.addAll(option.getPrefixes());  }  [CLASS]  GroupImpl  [METHOD]  <init>  [RETURN_TYPE]  String,int,int,boolean)  List  options  String  name  String  description  final  int  minimum  final  int  maximum  final  boolean  required  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  required  SortedMap  newOptionMap  optionMap  Iterator  i  j  List  anonymous  newAnonymous  options  Option  option  String  description  name  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	102	102	1	replace	For(Iterator  j  =  options.triggers.iterator();  j.hasNext();)  {	  For(Iterator    j    =    this.triggers.iterator();    j.hasNext();)    {    	non-compiled	[CE]  illegal  start  of  expression	20	None	replace
186	[BUG]  [BUGGY]  Option  option  =  options.getOptionMap(),  options);  [CE]  illegal  start  of  expression  [FE]                  OptionException      [CONTEXT]      if  (option  instanceof  Argument)  {  i.remove();  newAnonymous.add(option);  }  else  {  final  Set  triggers  =  option.getTriggers();      [BUGGY]  Option  option  =  options.getOptionMap(),  options);  [BUGGY]      for  (Iterator  j  =  triggers.iterator();  j.hasNext();)  {  newOptionMap.put(j.next(),  option);  }  newPrefixes.addAll(option.getPrefixes());  }  [CLASS]  GroupImpl  [METHOD]  <init>  [RETURN_TYPE]  String,int,int,boolean)  List  options  String  name  String  description  final  int  minimum  final  int  maximum  final  boolean  required  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  required  SortedMap  newOptionMap  optionMap  Iterator  i  j  List  anonymous  newAnonymous  options  Option  option  String  description  name  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	102	102	1	replace	Option  option  =  options.getOptionMap(),  options);	  Option    option    =    options.getOptionMap();    	non-compiled	[CE]  illegal  start  of  expression	27	None	replace
187	[BUG]  [BUGGY]  ArrayList  <  Option>  options  =  option.getOptionMap();  [CE]  illegal  start  of  expression  [FE]              OptionException      [CONTEXT]      if  (option  instanceof  Argument)  {  i.remove();  newAnonymous.add(option);  }  else  {  final  Set  triggers  =  option.getTriggers();      [BUGGY]  ArrayList  <  Option>  options  =  option.getOptionMap();  [BUGGY]      for  (Iterator  j  =  triggers.iterator();  j.hasNext();)  {  newOptionMap.put(j.next(),  option);  }  newPrefixes.addAll(option.getPrefixes());  }  [CLASS]  GroupImpl  [METHOD]  <init>  [RETURN_TYPE]  String,int,int,boolean)  List  options  String  name  String  description  final  int  minimum  final  int  maximum  final  boolean  required  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  required  SortedMap  newOptionMap  optionMap  Iterator  i  j  List  anonymous  newAnonymous  options  Option  option  String  description  name  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	102	102	1	replace	ArrayList  <  Option>  options  =  option.getOptionMap();	  final    ArrayList    <    Option>    options    =    option.getOptionMap();    	non-compiled	[CE]  illegal  start  of  expression	49	None	replace
188	[BUG]  [BUGGY]  Option  option  =  options.getOption(name,  newAnonymous);  [CE]  illegal  start  of  expression  [FE]                  OptionException      [CONTEXT]      if  (option  instanceof  Argument)  {  i.remove();  newAnonymous.add(option);  }  else  {  final  Set  triggers  =  option.getTriggers();      [BUGGY]  Option  option  =  options.getOption(name,  newAnonymous);  [BUGGY]      for  (Iterator  j  =  triggers.iterator();  j.hasNext();)  {  newOptionMap.put(j.next(),  option);  }  newPrefixes.addAll(option.getPrefixes());  }  [CLASS]  GroupImpl  [METHOD]  <init>  [RETURN_TYPE]  String,int,int,boolean)  List  options  String  name  String  description  final  int  minimum  final  int  maximum  final  boolean  required  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  required  SortedMap  newOptionMap  optionMap  Iterator  i  j  List  anonymous  newAnonymous  options  Option  option  String  description  name  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	102	102	1	replace	Option  option  =  options.getOption(name,  newAnonymous);	  Option    option    =    options.getOption(i,    newAnonymous);    	non-compiled	[CE]  illegal  start  of  expression	24	None	replace
189	[BUG]  [BUGGY]  Option  option  =  option.getOptionMap(defaultAnonymous);  [CE]  illegal  start  of  expression  [FE]              OptionException      [CONTEXT]      if  (option  instanceof  Argument)  {  i.remove();  newAnonymous.add(option);  }  else  {  final  Set  triggers  =  option.getTriggers();      [BUGGY]  Option  option  =  option.getOptionMap(defaultAnonymous);  [BUGGY]      for  (Iterator  j  =  triggers.iterator();  j.hasNext();)  {  newOptionMap.put(j.next(),  option);  }  newPrefixes.addAll(option.getPrefixes());  }  [CLASS]  GroupImpl  [METHOD]  <init>  [RETURN_TYPE]  String,int,int,boolean)  List  options  String  name  String  description  final  int  minimum  final  int  maximum  final  boolean  required  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  required  SortedMap  newOptionMap  optionMap  Iterator  i  j  List  anonymous  newAnonymous  options  Option  option  String  description  name  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	102	102	1	replace	Option  option  =  option.getOptionMap(defaultAnonymous);	  Option    option    =    option.getOptionMap(required);    	non-compiled	[CE]  illegal  start  of  expression	52	None	replace
190	[BUG]  [BUGGY]  Option  option  =  option.getOption(defaultName,  description);  [CE]  illegal  start  of  expression  [FE]            OptionException      [CONTEXT]      if  (option  instanceof  Argument)  {  i.remove();  newAnonymous.add(option);  }  else  {  final  Set  triggers  =  option.getTriggers();      [BUGGY]  Option  option  =  option.getOption(defaultName,  description);  [BUGGY]      for  (Iterator  j  =  triggers.iterator();  j.hasNext();)  {  newOptionMap.put(j.next(),  option);  }  newPrefixes.addAll(option.getPrefixes());  }  [CLASS]  GroupImpl  [METHOD]  <init>  [RETURN_TYPE]  String,int,int,boolean)  List  options  String  name  String  description  final  int  minimum  final  int  maximum  final  boolean  required  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  required  SortedMap  newOptionMap  optionMap  Iterator  i  j  List  anonymous  newAnonymous  options  Option  option  String  description  name  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	102	102	1	replace	Option  option  =  option.getOption(defaultName,  description);	  Option    option    =    option.getOption(defaultName);    	non-compiled	[CE]  illegal  start  of  expression	48	None	replace
191	[BUG]  [BUGGY]  newAnonymous.addAll(option.getDescription());  [CE]  illegal  start  of  expression  [FE]                    OptionException      [CONTEXT]      if  (option  instanceof  Argument)  {  i.remove();  newAnonymous.add(option);  }  else  {  final  Set  triggers  =  option.getTriggers();      [BUGGY]  newAnonymous.addAll(option.getDescription());  [BUGGY]      for  (Iterator  j  =  triggers.iterator();  j.hasNext();)  {  newOptionMap.put(j.next(),  option);  }  newPrefixes.addAll(option.getPrefixes());  }  [CLASS]  GroupImpl  [METHOD]  <init>  [RETURN_TYPE]  String,int,int,boolean)  List  options  String  name  String  description  final  int  minimum  final  int  maximum  final  boolean  required  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  required  SortedMap  newOptionMap  optionMap  Iterator  i  j  List  anonymous  newAnonymous  options  Option  option  String  description  name  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	102	102	1	replace	newAnonymous.addAll(option.getDescription());	  newAnonymous.addAll(option.getPrefixes());    	non-compiled	[CE]  illegal  start  of  expression	30	None	replace
192	[BUG]  [BUGGY]  Option  option  =  option.getOption(defaultAnonymous,  false);  [CE]  illegal  start  of  expression  [FE]            OptionException      [CONTEXT]      if  (option  instanceof  Argument)  {  i.remove();  newAnonymous.add(option);  }  else  {  final  Set  triggers  =  option.getTriggers();      [BUGGY]  Option  option  =  option.getOption(defaultAnonymous,  false);  [BUGGY]      for  (Iterator  j  =  triggers.iterator();  j.hasNext();)  {  newOptionMap.put(j.next(),  option);  }  newPrefixes.addAll(option.getPrefixes());  }  [CLASS]  GroupImpl  [METHOD]  <init>  [RETURN_TYPE]  String,int,int,boolean)  List  options  String  name  String  description  final  int  minimum  final  int  maximum  final  boolean  required  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  required  SortedMap  newOptionMap  optionMap  Iterator  i  j  List  anonymous  newAnonymous  options  Option  option  String  description  name  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	102	102	1	replace	Option  option  =  option.getOption(defaultAnonymous,  false);	  Option    option    =    option.getOption(defaultAnonymous);    	non-compiled	[CE]  illegal  start  of  expression	56	None	replace
193	[BUG]  [BUGGY]  Iterator  <  Option>  triggers  =  option.getTriggers();  [CE]  illegal  start  of  expression  [FE]                OptionException      [CONTEXT]      if  (option  instanceof  Argument)  {  i.remove();  newAnonymous.add(option);  }  else  {  final  Set  triggers  =  option.getTriggers();      [BUGGY]  Iterator  <  Option>  triggers  =  option.getTriggers();  [BUGGY]      for  (Iterator  j  =  triggers.iterator();  j.hasNext();)  {  newOptionMap.put(j.next(),  option);  }  newPrefixes.addAll(option.getPrefixes());  }  [CLASS]  GroupImpl  [METHOD]  <init>  [RETURN_TYPE]  String,int,int,boolean)  List  options  String  name  String  description  final  int  minimum  final  int  maximum  final  boolean  required  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  required  SortedMap  newOptionMap  optionMap  Iterator  i  j  List  anonymous  newAnonymous  options  Option  option  String  description  name  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	102	102	1	replace	Iterator  <  Option>  triggers  =  option.getTriggers();	  if(triggers!=    null)    {    i.remove();    newAnonymous.add(option);    }    	non-compiled	[CE]  illegal  start  of  expression	50	None	replace
194	[BUG]  [BUGGY]  if(triggers!=  null)  {  triggers.add(i.get());  newAnonymous.add(option);  }  [CE]  illegal  start  of  expression  [FE]                  OptionException      [CONTEXT]      if  (option  instanceof  Argument)  {  i.remove();  newAnonymous.add(option);  }  else  {  final  Set  triggers  =  option.getTriggers();      [BUGGY]  if(triggers!=  null)  {  triggers.add(i.get());  newAnonymous.add(option);  }  [BUGGY]      for  (Iterator  j  =  triggers.iterator();  j.hasNext();)  {  newOptionMap.put(j.next(),  option);  }  newPrefixes.addAll(option.getPrefixes());  }  [CLASS]  GroupImpl  [METHOD]  <init>  [RETURN_TYPE]  String,int,int,boolean)  List  options  String  name  String  description  final  int  minimum  final  int  maximum  final  boolean  required  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  required  SortedMap  newOptionMap  optionMap  Iterator  i  j  List  anonymous  newAnonymous  options  Option  option  String  description  name  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	102	102	1	replace	if(triggers!=  null)  {  triggers.add(i.get());  newAnonymous.add(option);  }	  if(triggers!=    null)    {    i.remove();    newAnonymous.add(option);    }    	non-compiled	[CE]  illegal  start  of  expression	50	None	replace
195	[BUG]  [BUGGY]  Option  option  =  option.getOption(),  required,  newAnonymous);  [CE]  illegal  start  of  expression  [FE]                OptionException      [CONTEXT]      if  (option  instanceof  Argument)  {  i.remove();  newAnonymous.add(option);  }  else  {  final  Set  triggers  =  option.getTriggers();      [BUGGY]  Option  option  =  option.getOption(),  required,  newAnonymous);  [BUGGY]      for  (Iterator  j  =  triggers.iterator();  j.hasNext();)  {  newOptionMap.put(j.next(),  option);  }  newPrefixes.addAll(option.getPrefixes());  }  [CLASS]  GroupImpl  [METHOD]  <init>  [RETURN_TYPE]  String,int,int,boolean)  List  options  String  name  String  description  final  int  minimum  final  int  maximum  final  boolean  required  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  required  SortedMap  newOptionMap  optionMap  Iterator  i  j  List  anonymous  newAnonymous  options  Option  option  String  description  name  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	102	102	1	replace	Option  option  =  option.getOption(),  required,  newAnonymous);	  Option    option    =    option.getOption(),    required);    	non-compiled	[CE]  illegal  start  of  expression	3	None	replace
196	[BUG]  [BUGGY]  Option  option  =  option.getOption(),  required,  description);  [CE]  illegal  start  of  expression  [FE]                  OptionException      [CONTEXT]      if  (option  instanceof  Argument)  {  i.remove();  newAnonymous.add(option);  }  else  {  final  Set  triggers  =  option.getTriggers();      [BUGGY]  Option  option  =  option.getOption(),  required,  description);  [BUGGY]      for  (Iterator  j  =  triggers.iterator();  j.hasNext();)  {  newOptionMap.put(j.next(),  option);  }  newPrefixes.addAll(option.getPrefixes());  }  [CLASS]  GroupImpl  [METHOD]  <init>  [RETURN_TYPE]  String,int,int,boolean)  List  options  String  name  String  description  final  int  minimum  final  int  maximum  final  boolean  required  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  required  SortedMap  newOptionMap  optionMap  Iterator  i  j  List  anonymous  newAnonymous  options  Option  option  String  description  name  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	102	102	1	replace	Option  option  =  option.getOption(),  required,  description);	  Option    option    =    option.getOption(),    required);    	non-compiled	[CE]  illegal  start  of  expression	3	None	replace
197	[BUG]  [BUGGY]  Option  option  =(Option)this.optionMap.get(i.next(),  newAnonymous);  [CE]  illegal  start  of  expression  [FE]                      OptionException      [CONTEXT]      if  (option  instanceof  Argument)  {  i.remove();  newAnonymous.add(option);  }  else  {  final  Set  triggers  =  option.getTriggers();      [BUGGY]  Option  option  =(Option)this.optionMap.get(i.next(),  newAnonymous);  [BUGGY]      for  (Iterator  j  =  triggers.iterator();  j.hasNext();)  {  newOptionMap.put(j.next(),  option);  }  newPrefixes.addAll(option.getPrefixes());  }  [CLASS]  GroupImpl  [METHOD]  <init>  [RETURN_TYPE]  String,int,int,boolean)  List  options  String  name  String  description  final  int  minimum  final  int  maximum  final  boolean  required  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  required  SortedMap  newOptionMap  optionMap  Iterator  i  j  List  anonymous  newAnonymous  options  Option  option  String  description  name  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	102	102	1	replace	Option  option  =(Option)this.optionMap.get(i.next(),  newAnonymous);	  Option    option    =(Option)this.optionMap.get(i.next());    	non-compiled	[CE]  illegal  start  of  expression	6	None	replace
198	[BUG]  [BUGGY]  Option  option  =  options.getOption(i,  required,  newAnonymous);  [CE]  illegal  start  of  expression  [FE]                OptionException      [CONTEXT]      if  (option  instanceof  Argument)  {  i.remove();  newAnonymous.add(option);  }  else  {  final  Set  triggers  =  option.getTriggers();      [BUGGY]  Option  option  =  options.getOption(i,  required,  newAnonymous);  [BUGGY]      for  (Iterator  j  =  triggers.iterator();  j.hasNext();)  {  newOptionMap.put(j.next(),  option);  }  newPrefixes.addAll(option.getPrefixes());  }  [CLASS]  GroupImpl  [METHOD]  <init>  [RETURN_TYPE]  String,int,int,boolean)  List  options  String  name  String  description  final  int  minimum  final  int  maximum  final  boolean  required  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  required  SortedMap  newOptionMap  optionMap  Iterator  i  j  List  anonymous  newAnonymous  options  Option  option  String  description  name  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	102	102	1	replace	Option  option  =  options.getOption(i,  required,  newAnonymous);	  Option    option    =    options.getOption(i,    required);    	non-compiled	[CE]  illegal  start  of  expression	23	None	replace
199	[BUG]  [BUGGY]  if(required)  {  i.remove();  newAnonymous.add(option);  }  else  {  final  Set  <  Option>  options  =  option.getOptionMap();  for(Iterator  <  Option>  j  =  options.iterator();  j.hasNext();)  {  [CE]  illegal  start  of  expression  [FE]                  OptionException      [CONTEXT]      if  (option  instanceof  Argument)  {  i.remove();  newAnonymous.add(option);  }  else  {  final  Set  triggers  =  option.getTriggers();      [BUGGY]  if(required)  {  i.remove();  newAnonymous.add(option);  }  else  {  final  Set  <  Option>  options  =  option.getOptionMap();  for(Iterator  <  Option>  j  =  options.iterator();  j.hasNext();)  {  [BUGGY]      for  (Iterator  j  =  triggers.iterator();  j.hasNext();)  {  newOptionMap.put(j.next(),  option);  }  newPrefixes.addAll(option.getPrefixes());  }  [CLASS]  GroupImpl  [METHOD]  <init>  [RETURN_TYPE]  String,int,int,boolean)  List  options  String  name  String  description  final  int  minimum  final  int  maximum  final  boolean  required  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  required  SortedMap  newOptionMap  optionMap  Iterator  i  j  List  anonymous  newAnonymous  options  Option  option  String  description  name  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	102	102	1	replace	if(required)  {  i.remove();  newAnonymous.add(option);  }  else  {  final  Set  <  Option>  options  =  option.getOptionMap();  for(Iterator  <  Option>  j  =  options.iterator();  j.hasNext();)  {	  if(triggers!=    null)    {    i.remove();    newAnonymous.add(option);    }    else    {    final    Set    <    Option>    options    =    option.getOptionMap();    for(Iterator    <    Option>    j    =    options.iterator();    j.hasNext();)    {    	non-compiled	[CE]  illegal  start  of  expression	51	None	replace
200	[BUG]  [BUGGY]  if(required)  {  i.remove();  newAnonymous.add(option);  }  else  {  final  Set  <  Option>  j  =  options.iterator();  j.hasNext();)  {  [CE]  illegal  start  of  expression  [FE]                    OptionException      [CONTEXT]      if  (option  instanceof  Argument)  {  i.remove();  newAnonymous.add(option);  }  else  {  final  Set  triggers  =  option.getTriggers();      [BUGGY]  if(required)  {  i.remove();  newAnonymous.add(option);  }  else  {  final  Set  <  Option>  j  =  options.iterator();  j.hasNext();)  {  [BUGGY]      for  (Iterator  j  =  triggers.iterator();  j.hasNext();)  {  newOptionMap.put(j.next(),  option);  }  newPrefixes.addAll(option.getPrefixes());  }  [CLASS]  GroupImpl  [METHOD]  <init>  [RETURN_TYPE]  String,int,int,boolean)  List  options  String  name  String  description  final  int  minimum  final  int  maximum  final  boolean  required  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  required  SortedMap  newOptionMap  optionMap  Iterator  i  j  List  anonymous  newAnonymous  options  Option  option  String  description  name  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	102	102	1	replace	if(required)  {  i.remove();  newAnonymous.add(option);  }  else  {  final  Set  <  Option>  j  =  options.iterator();  j.hasNext();)  {	  if(triggers!=    null)    {    i.remove();    newAnonymous.add(option);    }    else    {    final    Set    <    Option>    options    =    option.getOptionMap();    for(Iterator    <    Option>    j    =    options.iterator();    j.hasNext();)    {    	non-compiled	[CE]  illegal  start  of  expression	51	None	replace
201	[BUG]  [BUGGY]  final  Set  <  Option>  triggers  =  option.getOptionMap();  for(Iterator  <  Option>  j  =  options.iterator();  j.hasNext();)  {  [CE]  illegal  start  of  expression  [FE]                      OptionException      [CONTEXT]      if  (option  instanceof  Argument)  {  i.remove();  newAnonymous.add(option);  }  else  {  final  Set  triggers  =  option.getTriggers();      [BUGGY]  final  Set  <  Option>  triggers  =  option.getOptionMap();  for(Iterator  <  Option>  j  =  options.iterator();  j.hasNext();)  {  [BUGGY]      for  (Iterator  j  =  triggers.iterator();  j.hasNext();)  {  newOptionMap.put(j.next(),  option);  }  newPrefixes.addAll(option.getPrefixes());  }  [CLASS]  GroupImpl  [METHOD]  <init>  [RETURN_TYPE]  String,int,int,boolean)  List  options  String  name  String  description  final  int  minimum  final  int  maximum  final  boolean  required  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  required  SortedMap  newOptionMap  optionMap  Iterator  i  j  List  anonymous  newAnonymous  options  Option  option  String  description  name  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	102	102	1	replace	final  Set  <  Option>  triggers  =  option.getOptionMap();  for(Iterator  <  Option>  j  =  options.iterator();  j.hasNext();)  {	  if(triggers!=    null)    {    i.remove();    newAnonymous.add(option);    }    else    {    final    Set    <    Option>    options    =    option.getOptionMap();    for(Iterator    <    Option>    j    =    options.iterator();    j.hasNext();)    {    	non-compiled	[CE]  illegal  start  of  expression	51	None	replace
202	[BUG]  [BUGGY]  if(required)  {  i.remove();  newAnonymous.add(option);  }  else  {  final  Set  <  Option>  triggers  =  option.getOptionMap();  for(Iterator  <  Option>  j  =  options.iterator();  j.hasNext();)  {  [CE]  illegal  start  of  expression  [FE]                        OptionException      [CONTEXT]      if  (option  instanceof  Argument)  {  i.remove();  newAnonymous.add(option);  }  else  {  final  Set  triggers  =  option.getTriggers();      [BUGGY]  if(required)  {  i.remove();  newAnonymous.add(option);  }  else  {  final  Set  <  Option>  triggers  =  option.getOptionMap();  for(Iterator  <  Option>  j  =  options.iterator();  j.hasNext();)  {  [BUGGY]      for  (Iterator  j  =  triggers.iterator();  j.hasNext();)  {  newOptionMap.put(j.next(),  option);  }  newPrefixes.addAll(option.getPrefixes());  }  [CLASS]  GroupImpl  [METHOD]  <init>  [RETURN_TYPE]  String,int,int,boolean)  List  options  String  name  String  description  final  int  minimum  final  int  maximum  final  boolean  required  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  required  SortedMap  newOptionMap  optionMap  Iterator  i  j  List  anonymous  newAnonymous  options  Option  option  String  description  name  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	102	102	1	replace	if(required)  {  i.remove();  newAnonymous.add(option);  }  else  {  final  Set  <  Option>  triggers  =  option.getOptionMap();  for(Iterator  <  Option>  j  =  options.iterator();  j.hasNext();)  {	  if(triggers!=    null)    {    i.remove();    newAnonymous.add(option);    }    else    {    final    Set    <    Option>    options    =    option.getOptionMap();    for(Iterator    <    Option>    j    =    options.iterator();    j.hasNext();)    {    	non-compiled	[CE]  illegal  start  of  expression	51	None	replace
203	[BUG]  [BUGGY]  newAnonymous.remove(option.getPrefixes(),  option);  [CE]  illegal  start  of  expression  [FE]                      OptionException      [CONTEXT]      if  (option  instanceof  Argument)  {  i.remove();  newAnonymous.add(option);  }  else  {  final  Set  triggers  =  option.getTriggers();      [BUGGY]  newAnonymous.remove(option.getPrefixes(),  option);  [BUGGY]      for  (Iterator  j  =  triggers.iterator();  j.hasNext();)  {  newOptionMap.put(j.next(),  option);  }  newPrefixes.addAll(option.getPrefixes());  }  [CLASS]  GroupImpl  [METHOD]  <init>  [RETURN_TYPE]  String,int,int,boolean)  List  options  String  name  String  description  final  int  minimum  final  int  maximum  final  boolean  required  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  required  SortedMap  newOptionMap  optionMap  Iterator  i  j  List  anonymous  newAnonymous  options  Option  option  String  description  name  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	102	102	1	replace	newAnonymous.remove(option.getPrefixes(),  option);	  newAnonymous.remove(option.getPrefixes());    	non-compiled	[CE]  illegal  start  of  expression	31	None	replace
204	[BUG]  [BUGGY]  Option  option  =  options.getOption(default,  description);  [CE]  illegal  start  of  expression  [FE]                    OptionException      [CONTEXT]      if  (option  instanceof  Argument)  {  i.remove();  newAnonymous.add(option);  }  else  {  final  Set  triggers  =  option.getTriggers();      [BUGGY]  Option  option  =  options.getOption(default,  description);  [BUGGY]      for  (Iterator  j  =  triggers.iterator();  j.hasNext();)  {  newOptionMap.put(j.next(),  option);  }  newPrefixes.addAll(option.getPrefixes());  }  [CLASS]  GroupImpl  [METHOD]  <init>  [RETURN_TYPE]  String,int,int,boolean)  List  options  String  name  String  description  final  int  minimum  final  int  maximum  final  boolean  required  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  required  SortedMap  newOptionMap  optionMap  Iterator  i  j  List  anonymous  newAnonymous  options  Option  option  String  description  name  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	102	102	1	replace	Option  option  =  options.getOption(default,  description);	  Option    option    =    options.getOption(default);    	non-compiled	[CE]  illegal  start  of  expression	8	None	replace
205	[BUG]  [BUGGY]  Iterator  <  Option>  j  =  optionMap.keySet().iterator();  [CE]  illegal  start  of  expression  [FE]                    OptionException      [CONTEXT]      if  (option  instanceof  Argument)  {  i.remove();  newAnonymous.add(option);  }  else  {  final  Set  triggers  =  option.getTriggers();      [BUGGY]  Iterator  <  Option>  j  =  optionMap.keySet().iterator();  [BUGGY]      newOptionMap.put(j.next(),  option);  }  newPrefixes.addAll(option.getPrefixes());  }  [CLASS]  GroupImpl  [METHOD]  <init>  [RETURN_TYPE]  String,int,int,boolean)  List  options  String  name  String  description  final  int  minimum  final  int  maximum  final  boolean  required  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  required  SortedMap  newOptionMap  optionMap  Iterator  i  j  List  anonymous  newAnonymous  options  Option  option  String  description  name  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	102	102	1	replace	Iterator  <  Option>  j  =  optionMap.keySet().iterator();	  Iterator    <    Option>    j    =    options.keySet().iterator();    	non-compiled	[CE]  illegal  start  of  expression	41	None	replace
206	[BUG]  [BUGGY]  For(Iterator  it  =  triggers.iterator();  j.hasNext();)  {  [CE]  illegal  start  of  expression  [FE]                OptionException      [CONTEXT]      if  (option  instanceof  Argument)  {  i.remove();  newAnonymous.add(option);  }  else  {  final  Set  triggers  =  option.getTriggers();      [BUGGY]  For(Iterator  it  =  triggers.iterator();  j.hasNext();)  {  [BUGGY]      newOptionMap.put(j.next(),  option);  }  newPrefixes.addAll(option.getPrefixes());  }  [CLASS]  GroupImpl  [METHOD]  <init>  [RETURN_TYPE]  String,int,int,boolean)  List  options  String  name  String  description  final  int  minimum  final  int  maximum  final  boolean  required  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  required  SortedMap  newOptionMap  optionMap  Iterator  i  j  List  anonymous  newAnonymous  options  Option  option  String  description  name  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	102	102	1	replace	For(Iterator  it  =  triggers.iterator();  j.hasNext();)  {	  For(Iterator    j    =    allTriggers.iterator();    j.hasNext();)    {    	non-compiled	[CE]  illegal  start  of  expression	22	None	replace
207	[BUG]  [BUGGY]  For(Iterator  <  String>  j  =  triggers.iterator();  j.hasNext();)  {  [CE]  illegal  start  of  expression  [FE]                  OptionException      [CONTEXT]      if  (option  instanceof  Argument)  {  i.remove();  newAnonymous.add(option);  }  else  {  final  Set  triggers  =  option.getTriggers();      [BUGGY]  For(Iterator  <  String>  j  =  triggers.iterator();  j.hasNext();)  {  [BUGGY]      newOptionMap.put(j.next(),  option);  }  newPrefixes.addAll(option.getPrefixes());  }  [CLASS]  GroupImpl  [METHOD]  <init>  [RETURN_TYPE]  String,int,int,boolean)  List  options  String  name  String  description  final  int  minimum  final  int  maximum  final  boolean  required  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  required  SortedMap  newOptionMap  optionMap  Iterator  i  j  List  anonymous  newAnonymous  options  Option  option  String  description  name  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	102	102	1	replace	For(Iterator  <  String>  j  =  triggers.iterator();  j.hasNext();)  {	  For(Iterator    j    =    allTriggers.iterator();    j.hasNext();)    {    	non-compiled	[CE]  illegal  start  of  expression	22	None	replace
208	[BUG]  [BUGGY]  newAnonymous.add(option.getPrefixes(),  option);  [CE]  illegal  start  of  expression  [FE]                        OptionException      [CONTEXT]      if  (option  instanceof  Argument)  {  i.remove();  newAnonymous.add(option);  }  else  {  final  Set  triggers  =  option.getTriggers();      [BUGGY]  newAnonymous.add(option.getPrefixes(),  option);  [BUGGY]      for  (Iterator  j  =  triggers.iterator();  j.hasNext();)  {  newOptionMap.put(j.next(),  option);  }  newPrefixes.addAll(option.getPrefixes());  }  [CLASS]  GroupImpl  [METHOD]  <init>  [RETURN_TYPE]  String,int,int,boolean)  List  options  String  name  String  description  final  int  minimum  final  int  maximum  final  boolean  required  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  required  SortedMap  newOptionMap  optionMap  Iterator  i  j  List  anonymous  newAnonymous  options  Option  option  String  description  name  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	102	102	1	replace	newAnonymous.add(option.getPrefixes(),  option);	  newAnonymous.add(option.getPrefixes());    	non-compiled	[CE]  illegal  start  of  expression	32	None	replace
209	[BUG]  [BUGGY]  Option  option  =  option.getOptionMap(),  newAnonymous,  triggers);  [CE]  illegal  start  of  expression  [FE]              OptionException      [CONTEXT]      if  (option  instanceof  Argument)  {  i.remove();  newAnonymous.add(option);  }  else  {  final  Set  triggers  =  option.getTriggers();      [BUGGY]  Option  option  =  option.getOptionMap(),  newAnonymous,  triggers);  [BUGGY]      for  (Iterator  j  =  triggers.iterator();  j.hasNext();)  {  newOptionMap.put(j.next(),  option);  }  newPrefixes.addAll(option.getPrefixes());  }  [CLASS]  GroupImpl  [METHOD]  <init>  [RETURN_TYPE]  String,int,int,boolean)  List  options  String  name  String  description  final  int  minimum  final  int  maximum  final  boolean  required  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  required  SortedMap  newOptionMap  optionMap  Iterator  i  j  List  anonymous  newAnonymous  options  Option  option  String  description  name  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	102	102	1	replace	Option  option  =  option.getOptionMap(),  newAnonymous,  triggers);	  Option    option    =    option.getOptionMap(),    newAnonymous);    	non-compiled	[CE]  illegal  start  of  expression	25	None	replace
210	[BUG]  [BUGGY]  Option  option  =  option.getOptionMap(),  newAnonymous,  options);  [CE]  illegal  start  of  expression  [FE]                OptionException      [CONTEXT]      if  (option  instanceof  Argument)  {  i.remove();  newAnonymous.add(option);  }  else  {  final  Set  triggers  =  option.getTriggers();      [BUGGY]  Option  option  =  option.getOptionMap(),  newAnonymous,  options);  [BUGGY]      for  (Iterator  j  =  triggers.iterator();  j.hasNext();)  {  newOptionMap.put(j.next(),  option);  }  newPrefixes.addAll(option.getPrefixes());  }  [CLASS]  GroupImpl  [METHOD]  <init>  [RETURN_TYPE]  String,int,int,boolean)  List  options  String  name  String  description  final  int  minimum  final  int  maximum  final  boolean  required  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  required  SortedMap  newOptionMap  optionMap  Iterator  i  j  List  anonymous  newAnonymous  options  Option  option  String  description  name  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	102	102	1	replace	Option  option  =  option.getOptionMap(),  newAnonymous,  options);	  Option    option    =    option.getOptionMap(),    newAnonymous);    	non-compiled	[CE]  illegal  start  of  expression	25	None	replace
211	[BUG]  [BUGGY]  if(!required)  {  i.remove();  newAnonymous.add(option);  }  else  {  final  Set  <  Option>  options  =  option.getOptionMap();  for(Iterator  <  Option>  j  =  triggers.iterator();  j.hasNext()  [CE]  illegal  start  of  expression  [FE]                  OptionException      [CONTEXT]      if  (option  instanceof  Argument)  {  i.remove();  newAnonymous.add(option);  }  else  {  final  Set  triggers  =  option.getTriggers();      [BUGGY]  if(!required)  {  i.remove();  newAnonymous.add(option);  }  else  {  final  Set  <  Option>  options  =  option.getOptionMap();  for(Iterator  <  Option>  j  =  triggers.iterator();  j.hasNext()  [BUGGY]      for  (Iterator  j  =  triggers.iterator();  j.hasNext();)  {  newOptionMap.put(j.next(),  option);  }  newPrefixes.addAll(option.getPrefixes());  }  [CLASS]  GroupImpl  [METHOD]  <init>  [RETURN_TYPE]  String,int,int,boolean)  List  options  String  name  String  description  final  int  minimum  final  int  maximum  final  boolean  required  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  required  SortedMap  newOptionMap  optionMap  Iterator  i  j  List  anonymous  newAnonymous  options  Option  option  String  description  name  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	102	102	1	replace	if(!required)  {  i.remove();  newAnonymous.add(option);  }  else  {  final  Set  <  Option>  options  =  option.getOptionMap();  for(Iterator  <  Option>  j  =  triggers.iterator();  j.hasNext()	  if(!required)    {    i.remove();    newAnonymous.add(option);    }    else    {    final    Set    <    Option>    triggers    =    option.getTriggers();    for(Iterator    <    Option>    j    =    triggers.iterator();    j.hasNext()    	non-compiled	[CE]  illegal  start  of  expression	60	None	replace
212	[BUG]  [BUGGY]  if(!required)  {  i.remove();  newAnonymous.add(option);  }  else  {  final  Set  <  Option>  options  =  option.getTriggers();  for(Iterator  <  Option>  j  =  triggers.iterator();  j.hasNext()  [CE]  illegal  start  of  expression  [FE]                    OptionException      [CONTEXT]      if  (option  instanceof  Argument)  {  i.remove();  newAnonymous.add(option);  }  else  {  final  Set  triggers  =  option.getTriggers();      [BUGGY]  if(!required)  {  i.remove();  newAnonymous.add(option);  }  else  {  final  Set  <  Option>  options  =  option.getTriggers();  for(Iterator  <  Option>  j  =  triggers.iterator();  j.hasNext()  [BUGGY]      for  (Iterator  j  =  triggers.iterator();  j.hasNext();)  {  newOptionMap.put(j.next(),  option);  }  newPrefixes.addAll(option.getPrefixes());  }  [CLASS]  GroupImpl  [METHOD]  <init>  [RETURN_TYPE]  String,int,int,boolean)  List  options  String  name  String  description  final  int  minimum  final  int  maximum  final  boolean  required  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  required  SortedMap  newOptionMap  optionMap  Iterator  i  j  List  anonymous  newAnonymous  options  Option  option  String  description  name  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	102	102	1	replace	if(!required)  {  i.remove();  newAnonymous.add(option);  }  else  {  final  Set  <  Option>  options  =  option.getTriggers();  for(Iterator  <  Option>  j  =  triggers.iterator();  j.hasNext()	  if(!required)    {    i.remove();    newAnonymous.add(option);    }    else    {    final    Set    <    Option>    triggers    =    option.getTriggers();    for(Iterator    <    Option>    j    =    triggers.iterator();    j.hasNext()    	non-compiled	[CE]  illegal  start  of  expression	60	None	replace
213	[BUG]  [BUGGY]  Option  option  =  options.getOption(defaultValue,  description);  [CE]  illegal  start  of  expression  [FE]                      OptionException      [CONTEXT]      if  (option  instanceof  Argument)  {  i.remove();  newAnonymous.add(option);  }  else  {  final  Set  triggers  =  option.getTriggers();      [BUGGY]  Option  option  =  options.getOption(defaultValue,  description);  [BUGGY]      for  (Iterator  j  =  triggers.iterator();  j.hasNext();)  {  newOptionMap.put(j.next(),  option);  }  newPrefixes.addAll(option.getPrefixes());  }  [CLASS]  GroupImpl  [METHOD]  <init>  [RETURN_TYPE]  String,int,int,boolean)  List  options  String  name  String  description  final  int  minimum  final  int  maximum  final  boolean  required  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  required  SortedMap  newOptionMap  optionMap  Iterator  i  j  List  anonymous  newAnonymous  options  Option  option  String  description  name  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	102	102	1	replace	Option  option  =  options.getOption(defaultValue,  description);	  Option    option    =    options.getOption(defaultValue);    	non-compiled	[CE]  illegal  start  of  expression	38	None	replace
214	[BUG]  [BUGGY]  Option  option  =  options.getOption(defaultValue,  defaultValue);  [CE]  illegal  start  of  expression  [FE]                        OptionException      [CONTEXT]      if  (option  instanceof  Argument)  {  i.remove();  newAnonymous.add(option);  }  else  {  final  Set  triggers  =  option.getTriggers();      [BUGGY]  Option  option  =  options.getOption(defaultValue,  defaultValue);  [BUGGY]      for  (Iterator  j  =  triggers.iterator();  j.hasNext();)  {  newOptionMap.put(j.next(),  option);  }  newPrefixes.addAll(option.getPrefixes());  }  [CLASS]  GroupImpl  [METHOD]  <init>  [RETURN_TYPE]  String,int,int,boolean)  List  options  String  name  String  description  final  int  minimum  final  int  maximum  final  boolean  required  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  required  SortedMap  newOptionMap  optionMap  Iterator  i  j  List  anonymous  newAnonymous  options  Option  option  String  description  name  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	102	102	1	replace	Option  option  =  options.getOption(defaultValue,  defaultValue);	  Option    option    =    options.getOption(defaultValue);    	non-compiled	[CE]  illegal  start  of  expression	38	None	replace
215	[BUG]  [BUGGY]  Option  option  =  option.getOption(name,  required,  maximum);  [CE]  illegal  start  of  expression  [FE]              OptionException      [CONTEXT]      if  (option  instanceof  Argument)  {  i.remove();  newAnonymous.add(option);  }  else  {  final  Set  triggers  =  option.getTriggers();      [BUGGY]  Option  option  =  option.getOption(name,  required,  maximum);  [BUGGY]      for  (Iterator  j  =  triggers.iterator();  j.hasNext();)  {  newOptionMap.put(j.next(),  option);  }  newPrefixes.addAll(option.getPrefixes());  }  [CLASS]  GroupImpl  [METHOD]  <init>  [RETURN_TYPE]  String,int,int,boolean)  List  options  String  name  String  description  final  int  minimum  final  int  maximum  final  boolean  required  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  required  SortedMap  newOptionMap  optionMap  Iterator  i  j  List  anonymous  newAnonymous  options  Option  option  String  description  name  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	102	102	1	replace	Option  option  =  option.getOption(name,  required,  maximum);	  Option    option    =    option.getOption(name,    required);    	non-compiled	[CE]  illegal  start  of  expression	13	None	replace
