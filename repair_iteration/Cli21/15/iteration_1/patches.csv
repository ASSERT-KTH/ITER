bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  Option  option  =  option.getOption(required);  [CE]  illegal  start  of  expression  [FE]        OptionException    [CONTEXT]    if  (option  instanceof  Argument)  {  i.remove();  newAnonymous.add(option);  }  else  {  final  Set  triggers  =  option.getTriggers();    [BUGGY]  Option  option  =  option.getOption(required);  [BUGGY]    for  (Iterator  j  =  triggers.iterator();  j.hasNext();)  {  newOptionMap.put(j.next(),  option);  }  newPrefixes.addAll(option.getPrefixes());  }  [CLASS]  GroupImpl  [METHOD]  <init>  [RETURN_TYPE]  String,int,int,boolean)  List  options  String  name  String  description  final  int  minimum  final  int  maximum  final  boolean  required  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  required  SortedMap  newOptionMap  optionMap  Iterator  i  j  List  anonymous  newAnonymous  options  Option  option  String  description  name  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	102	102	1	replace	Option  option  =  option.getOption(required);	      Option    option    =    option.getOption();    	non-compiled	[CE]  illegal  start  of  expression	9	None	replace
2	[BUG]  [BUGGY]  Option  option  =  options.getOption();  [CE]  illegal  start  of  expression  [FE]          OptionException    [CONTEXT]    if  (option  instanceof  Argument)  {  i.remove();  newAnonymous.add(option);  }  else  {  final  Set  triggers  =  option.getTriggers();    [BUGGY]  Option  option  =  options.getOption();  [BUGGY]    for  (Iterator  j  =  triggers.iterator();  j.hasNext();)  {  newOptionMap.put(j.next(),  option);  }  newPrefixes.addAll(option.getPrefixes());  }  [CLASS]  GroupImpl  [METHOD]  <init>  [RETURN_TYPE]  String,int,int,boolean)  List  options  String  name  String  description  final  int  minimum  final  int  maximum  final  boolean  required  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  required  SortedMap  newOptionMap  optionMap  Iterator  i  j  List  anonymous  newAnonymous  options  Option  option  String  description  name  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	102	102	1	replace	Option  option  =  options.getOption();	      Option    option    =    option.getOption();    	non-compiled	[CE]  illegal  start  of  expression	9	None	replace
3	[BUG]  [BUGGY]  Option  option  =  option.getOption(),  required);  [CE]  illegal  start  of  expression  [FE]            OptionException    [CONTEXT]    if  (option  instanceof  Argument)  {  i.remove();  newAnonymous.add(option);  }  else  {  final  Set  triggers  =  option.getTriggers();    [BUGGY]  Option  option  =  option.getOption(),  required);  [BUGGY]    for  (Iterator  j  =  triggers.iterator();  j.hasNext();)  {  newOptionMap.put(j.next(),  option);  }  newPrefixes.addAll(option.getPrefixes());  }  [CLASS]  GroupImpl  [METHOD]  <init>  [RETURN_TYPE]  String,int,int,boolean)  List  options  String  name  String  description  final  int  minimum  final  int  maximum  final  boolean  required  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  required  SortedMap  newOptionMap  optionMap  Iterator  i  j  List  anonymous  newAnonymous  options  Option  option  String  description  name  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	102	102	1	replace	Option  option  =  option.getOption(),  required);	      Option    option    =    option.getOption();    	non-compiled	[CE]  illegal  start  of  expression	9	None	replace
4	[BUG]  [BUGGY]  Option  option  =(Option)triggers.next();  [CE]  illegal  start  of  expression  [FE]              OptionException    [CONTEXT]    if  (option  instanceof  Argument)  {  i.remove();  newAnonymous.add(option);  }  else  {  final  Set  triggers  =  option.getTriggers();    [BUGGY]  Option  option  =(Option)triggers.next();  [BUGGY]    for  (Iterator  j  =  triggers.iterator();  j.hasNext();)  {  newOptionMap.put(j.next(),  option);  }  newPrefixes.addAll(option.getPrefixes());  }  [CLASS]  GroupImpl  [METHOD]  <init>  [RETURN_TYPE]  String,int,int,boolean)  List  options  String  name  String  description  final  int  minimum  final  int  maximum  final  boolean  required  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  required  SortedMap  newOptionMap  optionMap  Iterator  i  j  List  anonymous  newAnonymous  options  Option  option  String  description  name  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	102	102	1	replace	Option  option  =(Option)triggers.next();	      Option    option    =(Option)i.next();    	non-compiled	[CE]  illegal  start  of  expression	7	None	replace
5	[BUG]  [BUGGY]  Option  option  =(Option)throwables.next();  [CE]  illegal  start  of  expression  [FE]                OptionException    [CONTEXT]    if  (option  instanceof  Argument)  {  i.remove();  newAnonymous.add(option);  }  else  {  final  Set  triggers  =  option.getTriggers();    [BUGGY]  Option  option  =(Option)throwables.next();  [BUGGY]    for  (Iterator  j  =  triggers.iterator();  j.hasNext();)  {  newOptionMap.put(j.next(),  option);  }  newPrefixes.addAll(option.getPrefixes());  }  [CLASS]  GroupImpl  [METHOD]  <init>  [RETURN_TYPE]  String,int,int,boolean)  List  options  String  name  String  description  final  int  minimum  final  int  maximum  final  boolean  required  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  required  SortedMap  newOptionMap  optionMap  Iterator  i  j  List  anonymous  newAnonymous  options  Option  option  String  description  name  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	102	102	1	replace	Option  option  =(Option)throwables.next();	      Option    option    =(Option)i.next();    	non-compiled	[CE]  illegal  start  of  expression	7	None	replace
6	[BUG]  [BUGGY]  Option  option  =(Option)this.optionMap.get(i.next());  [CE]  illegal  start  of  expression  [FE]                  OptionException    [CONTEXT]    if  (option  instanceof  Argument)  {  i.remove();  newAnonymous.add(option);  }  else  {  final  Set  triggers  =  option.getTriggers();    [BUGGY]  Option  option  =(Option)this.optionMap.get(i.next());  [BUGGY]    for  (Iterator  j  =  triggers.iterator();  j.hasNext();)  {  newOptionMap.put(j.next(),  option);  }  newPrefixes.addAll(option.getPrefixes());  }  [CLASS]  GroupImpl  [METHOD]  <init>  [RETURN_TYPE]  String,int,int,boolean)  List  options  String  name  String  description  final  int  minimum  final  int  maximum  final  boolean  required  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  required  SortedMap  newOptionMap  optionMap  Iterator  i  j  List  anonymous  newAnonymous  options  Option  option  String  description  name  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	102	102	1	replace	Option  option  =(Option)this.optionMap.get(i.next());	      Option    option    =(Option)i.next();    	non-compiled	[CE]  illegal  start  of  expression	7	None	replace
7	[BUG]  [BUGGY]  Option  option  =  options.getOption(required);  [CE]  illegal  start  of  expression  [FE]              OptionException    [CONTEXT]    if  (option  instanceof  Argument)  {  i.remove();  newAnonymous.add(option);  }  else  {  final  Set  triggers  =  option.getTriggers();    [BUGGY]  Option  option  =  options.getOption(required);  [BUGGY]    for  (Iterator  j  =  triggers.iterator();  j.hasNext();)  {  newOptionMap.put(j.next(),  option);  }  newPrefixes.addAll(option.getPrefixes());  }  [CLASS]  GroupImpl  [METHOD]  <init>  [RETURN_TYPE]  String,int,int,boolean)  List  options  String  name  String  description  final  int  minimum  final  int  maximum  final  boolean  required  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  required  SortedMap  newOptionMap  optionMap  Iterator  i  j  List  anonymous  newAnonymous  options  Option  option  String  description  name  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	102	102	1	replace	Option  option  =  options.getOption(required);	      Option    option    =    options.getOption(option);    	non-compiled	[CE]  illegal  start  of  expression	12	None	replace
8	[BUG]  [BUGGY]  Option  option  =  options.getOption(default);  [CE]  illegal  start  of  expression  [FE]                OptionException    [CONTEXT]    if  (option  instanceof  Argument)  {  i.remove();  newAnonymous.add(option);  }  else  {  final  Set  triggers  =  option.getTriggers();    [BUGGY]  Option  option  =  options.getOption(default);  [BUGGY]    for  (Iterator  j  =  triggers.iterator();  j.hasNext();)  {  newOptionMap.put(j.next(),  option);  }  newPrefixes.addAll(option.getPrefixes());  }  [CLASS]  GroupImpl  [METHOD]  <init>  [RETURN_TYPE]  String,int,int,boolean)  List  options  String  name  String  description  final  int  minimum  final  int  maximum  final  boolean  required  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  required  SortedMap  newOptionMap  optionMap  Iterator  i  j  List  anonymous  newAnonymous  options  Option  option  String  description  name  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	102	102	1	replace	Option  option  =  options.getOption(default);	      Option    option    =    options.getOption(option);    	non-compiled	[CE]  illegal  start  of  expression	12	None	replace
9	[BUG]  [BUGGY]  final  List  <  Option>  options  =  option.getOptions();  [CE]  illegal  start  of  expression  [FE]          OptionException    [CONTEXT]    if  (option  instanceof  Argument)  {  i.remove();  newAnonymous.add(option);  }  else  {  final  Set  triggers  =  option.getTriggers();    [BUGGY]  final  List  <  Option>  options  =  option.getOptions();  [BUGGY]    for  (Iterator  j  =  triggers.iterator();  j.hasNext();)  {  newOptionMap.put(j.next(),  option);  }  newPrefixes.addAll(option.getPrefixes());  }  [CLASS]  GroupImpl  [METHOD]  <init>  [RETURN_TYPE]  String,int,int,boolean)  List  options  String  name  String  description  final  int  minimum  final  int  maximum  final  boolean  required  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  required  SortedMap  newOptionMap  optionMap  Iterator  i  j  List  anonymous  newAnonymous  options  Option  option  String  description  name  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	102	102	1	replace	final  List  <  Option>  options  =  option.getOptions();	      final    Set    <    Option>    options    =    option.getOptions();    	non-compiled	[CE]  illegal  start  of  expression	5	None	replace
10	[BUG]  [BUGGY]  final  Set  <  Option>  options  =  option.getAnonymousOptions();  [CE]  illegal  start  of  expression  [FE]            OptionException    [CONTEXT]    if  (option  instanceof  Argument)  {  i.remove();  newAnonymous.add(option);  }  else  {  final  Set  triggers  =  option.getTriggers();    [BUGGY]  final  Set  <  Option>  options  =  option.getAnonymousOptions();  [BUGGY]    for  (Iterator  j  =  triggers.iterator();  j.hasNext();)  {  newOptionMap.put(j.next(),  option);  }  newPrefixes.addAll(option.getPrefixes());  }  [CLASS]  GroupImpl  [METHOD]  <init>  [RETURN_TYPE]  String,int,int,boolean)  List  options  String  name  String  description  final  int  minimum  final  int  maximum  final  boolean  required  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  required  SortedMap  newOptionMap  optionMap  Iterator  i  j  List  anonymous  newAnonymous  options  Option  option  String  description  name  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	102	102	1	replace	final  Set  <  Option>  options  =  option.getAnonymousOptions();	      final    Set    <    Option>    options    =    option.getOptions();    	non-compiled	[CE]  illegal  start  of  expression	5	None	replace
11	[BUG]  [BUGGY]  final  Set  <  Option>  options  =  option.getAllOptions();  [CE]  illegal  start  of  expression  [FE]              OptionException    [CONTEXT]    if  (option  instanceof  Argument)  {  i.remove();  newAnonymous.add(option);  }  else  {  final  Set  triggers  =  option.getTriggers();    [BUGGY]  final  Set  <  Option>  options  =  option.getAllOptions();  [BUGGY]    for  (Iterator  j  =  triggers.iterator();  j.hasNext();)  {  newOptionMap.put(j.next(),  option);  }  newPrefixes.addAll(option.getPrefixes());  }  [CLASS]  GroupImpl  [METHOD]  <init>  [RETURN_TYPE]  String,int,int,boolean)  List  options  String  name  String  description  final  int  minimum  final  int  maximum  final  boolean  required  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  required  SortedMap  newOptionMap  optionMap  Iterator  i  j  List  anonymous  newAnonymous  options  Option  option  String  description  name  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	102	102	1	replace	final  Set  <  Option>  options  =  option.getAllOptions();	      final    Set    <    Option>    options    =    option.getOptions();    	non-compiled	[CE]  illegal  start  of  expression	5	None	replace
12	[BUG]  [BUGGY]  Option  option  =  option.getOption(description);  [CE]  illegal  start  of  expression  [FE]        OptionException    [CONTEXT]    if  (option  instanceof  Argument)  {  i.remove();  newAnonymous.add(option);  }  else  {  final  Set  triggers  =  option.getTriggers();    [BUGGY]  Option  option  =  option.getOption(description);  [BUGGY]    for  (Iterator  j  =  triggers.iterator();  j.hasNext();)  {  newOptionMap.put(j.next(),  option);  }  newPrefixes.addAll(option.getPrefixes());  }  [CLASS]  GroupImpl  [METHOD]  <init>  [RETURN_TYPE]  String,int,int,boolean)  List  options  String  name  String  description  final  int  minimum  final  int  maximum  final  boolean  required  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  required  SortedMap  newOptionMap  optionMap  Iterator  i  j  List  anonymous  newAnonymous  options  Option  option  String  description  name  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	102	102	1	replace	Option  option  =  option.getOption(description);	      Option    option    =    option.getOption(name);    	non-compiled	[CE]  illegal  start  of  expression	14	None	replace
13	[BUG]  [BUGGY]  Option  option  =  option.getOption(name,  required);  [CE]  illegal  start  of  expression  [FE]          OptionException    [CONTEXT]    if  (option  instanceof  Argument)  {  i.remove();  newAnonymous.add(option);  }  else  {  final  Set  triggers  =  option.getTriggers();    [BUGGY]  Option  option  =  option.getOption(name,  required);  [BUGGY]    for  (Iterator  j  =  triggers.iterator();  j.hasNext();)  {  newOptionMap.put(j.next(),  option);  }  newPrefixes.addAll(option.getPrefixes());  }  [CLASS]  GroupImpl  [METHOD]  <init>  [RETURN_TYPE]  String,int,int,boolean)  List  options  String  name  String  description  final  int  minimum  final  int  maximum  final  boolean  required  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  required  SortedMap  newOptionMap  optionMap  Iterator  i  j  List  anonymous  newAnonymous  options  Option  option  String  description  name  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	102	102	1	replace	Option  option  =  option.getOption(name,  required);	      Option    option    =    option.getOption(name);    	non-compiled	[CE]  illegal  start  of  expression	14	None	replace
14	[BUG]  [BUGGY]  Option  option  =  option.getOption(name,  minimum);  [CE]  illegal  start  of  expression  [FE]            OptionException    [CONTEXT]    if  (option  instanceof  Argument)  {  i.remove();  newAnonymous.add(option);  }  else  {  final  Set  triggers  =  option.getTriggers();    [BUGGY]  Option  option  =  option.getOption(name,  minimum);  [BUGGY]    for  (Iterator  j  =  triggers.iterator();  j.hasNext();)  {  newOptionMap.put(j.next(),  option);  }  newPrefixes.addAll(option.getPrefixes());  }  [CLASS]  GroupImpl  [METHOD]  <init>  [RETURN_TYPE]  String,int,int,boolean)  List  options  String  name  String  description  final  int  minimum  final  int  maximum  final  boolean  required  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  required  SortedMap  newOptionMap  optionMap  Iterator  i  j  List  anonymous  newAnonymous  options  Option  option  String  description  name  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	102	102	1	replace	Option  option  =  option.getOption(name,  minimum);	      Option    option    =    option.getOption(name);    	non-compiled	[CE]  illegal  start  of  expression	14	None	replace
15	[BUG]  [BUGGY]  if(!required)  {  i.remove();  newAnonymous.add(option);  }  [CE]  illegal  start  of  expression  [FE]            OptionException    [CONTEXT]    if  (option  instanceof  Argument)  {  i.remove();  newAnonymous.add(option);  }  else  {  final  Set  triggers  =  option.getTriggers();    [BUGGY]  if(!required)  {  i.remove();  newAnonymous.add(option);  }  [BUGGY]    for  (Iterator  j  =  triggers.iterator();  j.hasNext();)  {  newOptionMap.put(j.next(),  option);  }  newPrefixes.addAll(option.getPrefixes());  }  [CLASS]  GroupImpl  [METHOD]  <init>  [RETURN_TYPE]  String,int,int,boolean)  List  options  String  name  String  description  final  int  minimum  final  int  maximum  final  boolean  required  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  required  SortedMap  newOptionMap  optionMap  Iterator  i  j  List  anonymous  newAnonymous  options  Option  option  String  description  name  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	102	102	1	replace	if(!required)  {  i.remove();  newAnonymous.add(option);  }	      i.remove();    newAnonymous.add(option);    	non-compiled	[CE]  illegal  start  of  expression	6	None	replace
16	[BUG]  [BUGGY]  if(required)  {  i.remove();  newAnonymous.add(option);  }  [CE]  illegal  start  of  expression  [FE]              OptionException    [CONTEXT]    if  (option  instanceof  Argument)  {  i.remove();  newAnonymous.add(option);  }  else  {  final  Set  triggers  =  option.getTriggers();    [BUGGY]  if(required)  {  i.remove();  newAnonymous.add(option);  }  [BUGGY]    for  (Iterator  j  =  triggers.iterator();  j.hasNext();)  {  newOptionMap.put(j.next(),  option);  }  newPrefixes.addAll(option.getPrefixes());  }  [CLASS]  GroupImpl  [METHOD]  <init>  [RETURN_TYPE]  String,int,int,boolean)  List  options  String  name  String  description  final  int  minimum  final  int  maximum  final  boolean  required  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  required  SortedMap  newOptionMap  optionMap  Iterator  i  j  List  anonymous  newAnonymous  options  Option  option  String  description  name  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	102	102	1	replace	if(required)  {  i.remove();  newAnonymous.add(option);  }	      i.remove();    newAnonymous.add(option);    	non-compiled	[CE]  illegal  start  of  expression	6	None	replace
17	[BUG]  [BUGGY]  newAnonymous.add(option);  [CE]  illegal  start  of  expression  [FE]                OptionException    [CONTEXT]    if  (option  instanceof  Argument)  {  i.remove();  newAnonymous.add(option);  }  else  {  final  Set  triggers  =  option.getTriggers();    [BUGGY]  newAnonymous.add(option);  [BUGGY]    for  (Iterator  j  =  triggers.iterator();  j.hasNext();)  {  newOptionMap.put(j.next(),  option);  }  newPrefixes.addAll(option.getPrefixes());  }  [CLASS]  GroupImpl  [METHOD]  <init>  [RETURN_TYPE]  String,int,int,boolean)  List  options  String  name  String  description  final  int  minimum  final  int  maximum  final  boolean  required  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  required  SortedMap  newOptionMap  optionMap  Iterator  i  j  List  anonymous  newAnonymous  options  Option  option  String  description  name  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	102	102	1	replace	newAnonymous.add(option);	      i.remove();    newAnonymous.add(option);    	non-compiled	[CE]  illegal  start  of  expression	6	None	replace
18	[BUG]  [BUGGY]  Iterator  <  Option>  j  =  options.iterator();  [CE]  illegal  start  of  expression  [FE]            OptionException    [CONTEXT]    if  (option  instanceof  Argument)  {  i.remove();  newAnonymous.add(option);  }  else  {  final  Set  triggers  =  option.getTriggers();    [BUGGY]  Iterator  <  Option>  j  =  options.iterator();  [BUGGY]    newOptionMap.put(j.next(),  option);  }  newPrefixes.addAll(option.getPrefixes());  }  [CLASS]  GroupImpl  [METHOD]  <init>  [RETURN_TYPE]  String,int,int,boolean)  List  options  String  name  String  description  final  int  minimum  final  int  maximum  final  boolean  required  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  required  SortedMap  newOptionMap  optionMap  Iterator  i  j  List  anonymous  newAnonymous  options  Option  option  String  description  name  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	102	102	1	replace	Iterator  <  Option>  j  =  options.iterator();	      	non-compiled	[CE]  illegal  start  of  expression	3	None	replace
19	[BUG]  [BUGGY]  Iterator  <  Option>  j  =  triggers.iterator();  [CE]  illegal  start  of  expression  [FE]              OptionException    [CONTEXT]    if  (option  instanceof  Argument)  {  i.remove();  newAnonymous.add(option);  }  else  {  final  Set  triggers  =  option.getTriggers();    [BUGGY]  Iterator  <  Option>  j  =  triggers.iterator();  [BUGGY]    newOptionMap.put(j.next(),  option);  }  newPrefixes.addAll(option.getPrefixes());  }  [CLASS]  GroupImpl  [METHOD]  <init>  [RETURN_TYPE]  String,int,int,boolean)  List  options  String  name  String  description  final  int  minimum  final  int  maximum  final  boolean  required  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  required  SortedMap  newOptionMap  optionMap  Iterator  i  j  List  anonymous  newAnonymous  options  Option  option  String  description  name  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	102	102	1	replace	Iterator  <  Option>  j  =  triggers.iterator();	      	non-compiled	[CE]  illegal  start  of  expression	3	None	replace
20	[BUG]  [BUGGY]  For(Iterator  j  =  this.triggers.iterator();  j.hasNext();)  {  [CE]  illegal  start  of  expression  [FE]        OptionException    [CONTEXT]    if  (option  instanceof  Argument)  {  i.remove();  newAnonymous.add(option);  }  else  {  final  Set  triggers  =  option.getTriggers();    [BUGGY]  For(Iterator  j  =  this.triggers.iterator();  j.hasNext();)  {  [BUGGY]    newOptionMap.put(j.next(),  option);  }  newPrefixes.addAll(option.getPrefixes());  }  [CLASS]  GroupImpl  [METHOD]  <init>  [RETURN_TYPE]  String,int,int,boolean)  List  options  String  name  String  description  final  int  minimum  final  int  maximum  final  boolean  required  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  required  SortedMap  newOptionMap  optionMap  Iterator  i  j  List  anonymous  newAnonymous  options  Option  option  String  description  name  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	102	102	1	replace	For(Iterator  j  =  this.triggers.iterator();  j.hasNext();)  {	  For(Iterator    j    =    triggers.iterator();    j.hasNext();)    {    	non-compiled	[CE]  illegal  start  of  expression	13	None	replace
21	[BUG]  [BUGGY]  For(Iterator  j  =  options.iterator();  j.hasNext();)  {  [CE]  illegal  start  of  expression  [FE]          OptionException    [CONTEXT]    if  (option  instanceof  Argument)  {  i.remove();  newAnonymous.add(option);  }  else  {  final  Set  triggers  =  option.getTriggers();    [BUGGY]  For(Iterator  j  =  options.iterator();  j.hasNext();)  {  [BUGGY]    newOptionMap.put(j.next(),  option);  }  newPrefixes.addAll(option.getPrefixes());  }  [CLASS]  GroupImpl  [METHOD]  <init>  [RETURN_TYPE]  String,int,int,boolean)  List  options  String  name  String  description  final  int  minimum  final  int  maximum  final  boolean  required  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  required  SortedMap  newOptionMap  optionMap  Iterator  i  j  List  anonymous  newAnonymous  options  Option  option  String  description  name  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	102	102	1	replace	For(Iterator  j  =  options.iterator();  j.hasNext();)  {	  For(Iterator    j    =    triggers.iterator();    j.hasNext();)    {    	non-compiled	[CE]  illegal  start  of  expression	13	None	replace
22	[BUG]  [BUGGY]  For(Iterator  j  =  allTriggers.iterator();  j.hasNext();)  {  [CE]  illegal  start  of  expression  [FE]            OptionException    [CONTEXT]    if  (option  instanceof  Argument)  {  i.remove();  newAnonymous.add(option);  }  else  {  final  Set  triggers  =  option.getTriggers();    [BUGGY]  For(Iterator  j  =  allTriggers.iterator();  j.hasNext();)  {  [BUGGY]    newOptionMap.put(j.next(),  option);  }  newPrefixes.addAll(option.getPrefixes());  }  [CLASS]  GroupImpl  [METHOD]  <init>  [RETURN_TYPE]  String,int,int,boolean)  List  options  String  name  String  description  final  int  minimum  final  int  maximum  final  boolean  required  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  required  SortedMap  newOptionMap  optionMap  Iterator  i  j  List  anonymous  newAnonymous  options  Option  option  String  description  name  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	102	102	1	replace	For(Iterator  j  =  allTriggers.iterator();  j.hasNext();)  {	  For(Iterator    j    =    triggers.iterator();    j.hasNext();)    {    	non-compiled	[CE]  illegal  start  of  expression	13	None	replace
23	[BUG]  [BUGGY]  Option  option  =  options.getOption(i,  required);  [CE]  illegal  start  of  expression  [FE]            OptionException    [CONTEXT]    if  (option  instanceof  Argument)  {  i.remove();  newAnonymous.add(option);  }  else  {  final  Set  triggers  =  option.getTriggers();    [BUGGY]  Option  option  =  options.getOption(i,  required);  [BUGGY]    for  (Iterator  j  =  triggers.iterator();  j.hasNext();)  {  newOptionMap.put(j.next(),  option);  }  newPrefixes.addAll(option.getPrefixes());  }  [CLASS]  GroupImpl  [METHOD]  <init>  [RETURN_TYPE]  String,int,int,boolean)  List  options  String  name  String  description  final  int  minimum  final  int  maximum  final  boolean  required  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  required  SortedMap  newOptionMap  optionMap  Iterator  i  j  List  anonymous  newAnonymous  options  Option  option  String  description  name  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	102	102	1	replace	Option  option  =  options.getOption(i,  required);	      Option    option    =    options.getOption(i);    	non-compiled	[CE]  illegal  start  of  expression	11	None	replace
24	[BUG]  [BUGGY]  Option  option  =  options.getOption(i,  newAnonymous);  [CE]  illegal  start  of  expression  [FE]              OptionException    [CONTEXT]    if  (option  instanceof  Argument)  {  i.remove();  newAnonymous.add(option);  }  else  {  final  Set  triggers  =  option.getTriggers();    [BUGGY]  Option  option  =  options.getOption(i,  newAnonymous);  [BUGGY]    for  (Iterator  j  =  triggers.iterator();  j.hasNext();)  {  newOptionMap.put(j.next(),  option);  }  newPrefixes.addAll(option.getPrefixes());  }  [CLASS]  GroupImpl  [METHOD]  <init>  [RETURN_TYPE]  String,int,int,boolean)  List  options  String  name  String  description  final  int  minimum  final  int  maximum  final  boolean  required  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  required  SortedMap  newOptionMap  optionMap  Iterator  i  j  List  anonymous  newAnonymous  options  Option  option  String  description  name  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	102	102	1	replace	Option  option  =  options.getOption(i,  newAnonymous);	      Option    option    =    options.getOption(i);    	non-compiled	[CE]  illegal  start  of  expression	11	None	replace
25	[BUG]  [BUGGY]  Option  option  =  option.getOptionMap(),  newAnonymous);  [CE]  illegal  start  of  expression  [FE]          OptionException    [CONTEXT]    if  (option  instanceof  Argument)  {  i.remove();  newAnonymous.add(option);  }  else  {  final  Set  triggers  =  option.getTriggers();    [BUGGY]  Option  option  =  option.getOptionMap(),  newAnonymous);  [BUGGY]    for  (Iterator  j  =  triggers.iterator();  j.hasNext();)  {  newOptionMap.put(j.next(),  option);  }  newPrefixes.addAll(option.getPrefixes());  }  [CLASS]  GroupImpl  [METHOD]  <init>  [RETURN_TYPE]  String,int,int,boolean)  List  options  String  name  String  description  final  int  minimum  final  int  maximum  final  boolean  required  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  required  SortedMap  newOptionMap  optionMap  Iterator  i  j  List  anonymous  newAnonymous  options  Option  option  String  description  name  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	102	102	1	replace	Option  option  =  option.getOptionMap(),  newAnonymous);	      Option    option    =    option.getOptionMap();    	non-compiled	[CE]  illegal  start  of  expression	10	None	replace
26	[BUG]  [BUGGY]  Option  option  =  option.getOptionMap(),  newAnonymous;  [CE]  illegal  start  of  expression  [FE]            OptionException    [CONTEXT]    if  (option  instanceof  Argument)  {  i.remove();  newAnonymous.add(option);  }  else  {  final  Set  triggers  =  option.getTriggers();    [BUGGY]  Option  option  =  option.getOptionMap(),  newAnonymous;  [BUGGY]    for  (Iterator  j  =  triggers.iterator();  j.hasNext();)  {  newOptionMap.put(j.next(),  option);  }  newPrefixes.addAll(option.getPrefixes());  }  [CLASS]  GroupImpl  [METHOD]  <init>  [RETURN_TYPE]  String,int,int,boolean)  List  options  String  name  String  description  final  int  minimum  final  int  maximum  final  boolean  required  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  required  SortedMap  newOptionMap  optionMap  Iterator  i  j  List  anonymous  newAnonymous  options  Option  option  String  description  name  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	102	102	1	replace	Option  option  =  option.getOptionMap(),  newAnonymous;	      Option    option    =    option.getOptionMap();    	non-compiled	[CE]  illegal  start  of  expression	10	None	replace
27	[BUG]  [BUGGY]  Option  option  =  options.getOptionMap();  [CE]  illegal  start  of  expression  [FE]              OptionException    [CONTEXT]    if  (option  instanceof  Argument)  {  i.remove();  newAnonymous.add(option);  }  else  {  final  Set  triggers  =  option.getTriggers();    [BUGGY]  Option  option  =  options.getOptionMap();  [BUGGY]    for  (Iterator  j  =  triggers.iterator();  j.hasNext();)  {  newOptionMap.put(j.next(),  option);  }  newPrefixes.addAll(option.getPrefixes());  }  [CLASS]  GroupImpl  [METHOD]  <init>  [RETURN_TYPE]  String,int,int,boolean)  List  options  String  name  String  description  final  int  minimum  final  int  maximum  final  boolean  required  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  required  SortedMap  newOptionMap  optionMap  Iterator  i  j  List  anonymous  newAnonymous  options  Option  option  String  description  name  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	102	102	1	replace	Option  option  =  options.getOptionMap();	      Option    option    =    option.getOptionMap();    	non-compiled	[CE]  illegal  start  of  expression	10	None	replace
28	[BUG]  [BUGGY]  final  List  <  Option>  options  =  option.getOptionMap();  [CE]  illegal  start  of  expression  [FE]          OptionException    [CONTEXT]    if  (option  instanceof  Argument)  {  i.remove();  newAnonymous.add(option);  }  else  {  final  Set  triggers  =  option.getTriggers();    [BUGGY]  final  List  <  Option>  options  =  option.getOptionMap();  [BUGGY]    for  (Iterator  j  =  triggers.iterator();  j.hasNext();)  {  newOptionMap.put(j.next(),  option);  }  newPrefixes.addAll(option.getPrefixes());  }  [CLASS]  GroupImpl  [METHOD]  <init>  [RETURN_TYPE]  String,int,int,boolean)  List  options  String  name  String  description  final  int  minimum  final  int  maximum  final  boolean  required  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  required  SortedMap  newOptionMap  optionMap  Iterator  i  j  List  anonymous  newAnonymous  options  Option  option  String  description  name  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	102	102	1	replace	final  List  <  Option>  options  =  option.getOptionMap();	      final    Set    <    Option>    options    =    option.getOptionMap();    	non-compiled	[CE]  illegal  start  of  expression	15	None	replace
29	[BUG]  [BUGGY]  final  Set  <  Option>  options  =  option.getAnonymousOptionMap();  [CE]  illegal  start  of  expression  [FE]            OptionException    [CONTEXT]    if  (option  instanceof  Argument)  {  i.remove();  newAnonymous.add(option);  }  else  {  final  Set  triggers  =  option.getTriggers();    [BUGGY]  final  Set  <  Option>  options  =  option.getAnonymousOptionMap();  [BUGGY]    for  (Iterator  j  =  triggers.iterator();  j.hasNext();)  {  newOptionMap.put(j.next(),  option);  }  newPrefixes.addAll(option.getPrefixes());  }  [CLASS]  GroupImpl  [METHOD]  <init>  [RETURN_TYPE]  String,int,int,boolean)  List  options  String  name  String  description  final  int  minimum  final  int  maximum  final  boolean  required  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  required  SortedMap  newOptionMap  optionMap  Iterator  i  j  List  anonymous  newAnonymous  options  Option  option  String  description  name  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	102	102	1	replace	final  Set  <  Option>  options  =  option.getAnonymousOptionMap();	      final    Set    <    Option>    options    =    option.getOptionMap();    	non-compiled	[CE]  illegal  start  of  expression	15	None	replace
30	[BUG]  [BUGGY]  newAnonymous.addAll(option.getPrefixes());  [CE]  illegal  start  of  expression  [FE]                OptionException    [CONTEXT]    if  (option  instanceof  Argument)  {  i.remove();  newAnonymous.add(option);  }  else  {  final  Set  triggers  =  option.getTriggers();    [BUGGY]  newAnonymous.addAll(option.getPrefixes());  [BUGGY]    for  (Iterator  j  =  triggers.iterator();  j.hasNext();)  {  newOptionMap.put(j.next(),  option);  }  newPrefixes.addAll(option.getPrefixes());  }  [CLASS]  GroupImpl  [METHOD]  <init>  [RETURN_TYPE]  String,int,int,boolean)  List  options  String  name  String  description  final  int  minimum  final  int  maximum  final  boolean  required  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  required  SortedMap  newOptionMap  optionMap  Iterator  i  j  List  anonymous  newAnonymous  options  Option  option  String  description  name  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	102	102	1	replace	newAnonymous.addAll(option.getPrefixes());	      i.remove();    	non-compiled	[CE]  illegal  start  of  expression	8	None	replace
31	[BUG]  [BUGGY]  newAnonymous.remove(option.getPrefixes());  [CE]  illegal  start  of  expression  [FE]                  OptionException    [CONTEXT]    if  (option  instanceof  Argument)  {  i.remove();  newAnonymous.add(option);  }  else  {  final  Set  triggers  =  option.getTriggers();    [BUGGY]  newAnonymous.remove(option.getPrefixes());  [BUGGY]    for  (Iterator  j  =  triggers.iterator();  j.hasNext();)  {  newOptionMap.put(j.next(),  option);  }  newPrefixes.addAll(option.getPrefixes());  }  [CLASS]  GroupImpl  [METHOD]  <init>  [RETURN_TYPE]  String,int,int,boolean)  List  options  String  name  String  description  final  int  minimum  final  int  maximum  final  boolean  required  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  required  SortedMap  newOptionMap  optionMap  Iterator  i  j  List  anonymous  newAnonymous  options  Option  option  String  description  name  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	102	102	1	replace	newAnonymous.remove(option.getPrefixes());	      i.remove();    	non-compiled	[CE]  illegal  start  of  expression	8	None	replace
32	[BUG]  [BUGGY]  newAnonymous.add(option.getPrefixes());  [CE]  illegal  start  of  expression  [FE]                    OptionException    [CONTEXT]    if  (option  instanceof  Argument)  {  i.remove();  newAnonymous.add(option);  }  else  {  final  Set  triggers  =  option.getTriggers();    [BUGGY]  newAnonymous.add(option.getPrefixes());  [BUGGY]    for  (Iterator  j  =  triggers.iterator();  j.hasNext();)  {  newOptionMap.put(j.next(),  option);  }  newPrefixes.addAll(option.getPrefixes());  }  [CLASS]  GroupImpl  [METHOD]  <init>  [RETURN_TYPE]  String,int,int,boolean)  List  options  String  name  String  description  final  int  minimum  final  int  maximum  final  boolean  required  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  required  SortedMap  newOptionMap  optionMap  Iterator  i  j  List  anonymous  newAnonymous  options  Option  option  String  description  name  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	102	102	1	replace	newAnonymous.add(option.getPrefixes());	      i.remove();    	non-compiled	[CE]  illegal  start  of  expression	8	None	replace
33	[BUG]  [BUGGY]  Option  option  =  options.getOption(description);  [CE]  illegal  start  of  expression  [FE]        OptionException    [CONTEXT]    if  (option  instanceof  Argument)  {  i.remove();  newAnonymous.add(option);  }  else  {  final  Set  triggers  =  option.getTriggers();    [BUGGY]  Option  option  =  options.getOption(description);  [BUGGY]    for  (Iterator  j  =  triggers.iterator();  j.hasNext();)  {  newOptionMap.put(j.next(),  option);  }  newPrefixes.addAll(option.getPrefixes());  }  [CLASS]  GroupImpl  [METHOD]  <init>  [RETURN_TYPE]  String,int,int,boolean)  List  options  String  name  String  description  final  int  minimum  final  int  maximum  final  boolean  required  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  required  SortedMap  newOptionMap  optionMap  Iterator  i  j  List  anonymous  newAnonymous  options  Option  option  String  description  name  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	102	102	1	replace	Option  option  =  options.getOption(description);	      Option    option    =    options.getOption(name);    	non-compiled	[CE]  illegal  start  of  expression	4	None	replace
34	[BUG]  [BUGGY]  Option  option  =  options.getOption(name,  required);  [CE]  illegal  start  of  expression  [FE]          OptionException    [CONTEXT]    if  (option  instanceof  Argument)  {  i.remove();  newAnonymous.add(option);  }  else  {  final  Set  triggers  =  option.getTriggers();    [BUGGY]  Option  option  =  options.getOption(name,  required);  [BUGGY]    for  (Iterator  j  =  triggers.iterator();  j.hasNext();)  {  newOptionMap.put(j.next(),  option);  }  newPrefixes.addAll(option.getPrefixes());  }  [CLASS]  GroupImpl  [METHOD]  <init>  [RETURN_TYPE]  String,int,int,boolean)  List  options  String  name  String  description  final  int  minimum  final  int  maximum  final  boolean  required  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  required  SortedMap  newOptionMap  optionMap  Iterator  i  j  List  anonymous  newAnonymous  options  Option  option  String  description  name  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	102	102	1	replace	Option  option  =  options.getOption(name,  required);	      Option    option    =    options.getOption(name);    	non-compiled	[CE]  illegal  start  of  expression	4	None	replace
35	[BUG]  [BUGGY]  Option  option  =  options.getOption(name,  minimum);  [CE]  illegal  start  of  expression  [FE]            OptionException    [CONTEXT]    if  (option  instanceof  Argument)  {  i.remove();  newAnonymous.add(option);  }  else  {  final  Set  triggers  =  option.getTriggers();    [BUGGY]  Option  option  =  options.getOption(name,  minimum);  [BUGGY]    for  (Iterator  j  =  triggers.iterator();  j.hasNext();)  {  newOptionMap.put(j.next(),  option);  }  newPrefixes.addAll(option.getPrefixes());  }  [CLASS]  GroupImpl  [METHOD]  <init>  [RETURN_TYPE]  String,int,int,boolean)  List  options  String  name  String  description  final  int  minimum  final  int  maximum  final  boolean  required  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  required  SortedMap  newOptionMap  optionMap  Iterator  i  j  List  anonymous  newAnonymous  options  Option  option  String  description  name  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	102	102	1	replace	Option  option  =  options.getOption(name,  minimum);	      Option    option    =    options.getOption(name);    	non-compiled	[CE]  illegal  start  of  expression	4	None	replace
36	[BUG]  [BUGGY]  Option  option  =  options.getOption(defaultAnonymous);  [CE]  illegal  start  of  expression  [FE]              OptionException    [CONTEXT]    if  (option  instanceof  Argument)  {  i.remove();  newAnonymous.add(option);  }  else  {  final  Set  triggers  =  option.getTriggers();    [BUGGY]  Option  option  =  options.getOption(defaultAnonymous);  [BUGGY]    for  (Iterator  j  =  triggers.iterator();  j.hasNext();)  {  newOptionMap.put(j.next(),  option);  }  newPrefixes.addAll(option.getPrefixes());  }  [CLASS]  GroupImpl  [METHOD]  <init>  [RETURN_TYPE]  String,int,int,boolean)  List  options  String  name  String  description  final  int  minimum  final  int  maximum  final  boolean  required  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  required  SortedMap  newOptionMap  optionMap  Iterator  i  j  List  anonymous  newAnonymous  options  Option  option  String  description  name  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	102	102	1	replace	Option  option  =  options.getOption(defaultAnonymous);	      Option    option    =    options.getOption(option);    	non-compiled	[CE]  illegal  start  of  expression	12	None	replace
37	[BUG]  [BUGGY]  Option  option  =  options.getOption(triggers);  [CE]  illegal  start  of  expression  [FE]                OptionException    [CONTEXT]    if  (option  instanceof  Argument)  {  i.remove();  newAnonymous.add(option);  }  else  {  final  Set  triggers  =  option.getTriggers();    [BUGGY]  Option  option  =  options.getOption(triggers);  [BUGGY]    for  (Iterator  j  =  triggers.iterator();  j.hasNext();)  {  newOptionMap.put(j.next(),  option);  }  newPrefixes.addAll(option.getPrefixes());  }  [CLASS]  GroupImpl  [METHOD]  <init>  [RETURN_TYPE]  String,int,int,boolean)  List  options  String  name  String  description  final  int  minimum  final  int  maximum  final  boolean  required  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  required  SortedMap  newOptionMap  optionMap  Iterator  i  j  List  anonymous  newAnonymous  options  Option  option  String  description  name  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	102	102	1	replace	Option  option  =  options.getOption(triggers);	      Option    option    =    options.getOption(option);    	non-compiled	[CE]  illegal  start  of  expression	12	None	replace
38	[BUG]  [BUGGY]  Option  option  =  options.getOption(defaultValue);  [CE]  illegal  start  of  expression  [FE]                  OptionException    [CONTEXT]    if  (option  instanceof  Argument)  {  i.remove();  newAnonymous.add(option);  }  else  {  final  Set  triggers  =  option.getTriggers();    [BUGGY]  Option  option  =  options.getOption(defaultValue);  [BUGGY]    for  (Iterator  j  =  triggers.iterator();  j.hasNext();)  {  newOptionMap.put(j.next(),  option);  }  newPrefixes.addAll(option.getPrefixes());  }  [CLASS]  GroupImpl  [METHOD]  <init>  [RETURN_TYPE]  String,int,int,boolean)  List  options  String  name  String  description  final  int  minimum  final  int  maximum  final  boolean  required  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  required  SortedMap  newOptionMap  optionMap  Iterator  i  j  List  anonymous  newAnonymous  options  Option  option  String  description  name  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	102	102	1	replace	Option  option  =  options.getOption(defaultValue);	      Option    option    =    options.getOption(option);    	non-compiled	[CE]  illegal  start  of  expression	12	None	replace
39	[BUG]  [BUGGY]  Option  option  =  option.getOption(triggers);  [CE]  illegal  start  of  expression  [FE]            OptionException    [CONTEXT]    if  (option  instanceof  Argument)  {  i.remove();  newAnonymous.add(option);  }  else  {  final  Set  triggers  =  option.getTriggers();    [BUGGY]  Option  option  =  option.getOption(triggers);  [BUGGY]    newOptionMap.put(j.next(),  option);  }  newPrefixes.addAll(option.getPrefixes());  }  [CLASS]  GroupImpl  [METHOD]  <init>  [RETURN_TYPE]  String,int,int,boolean)  List  options  String  name  String  description  final  int  minimum  final  int  maximum  final  boolean  required  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  required  SortedMap  newOptionMap  optionMap  Iterator  i  j  List  anonymous  newAnonymous  options  Option  option  String  description  name  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	102	102	1	replace	Option  option  =  option.getOption(triggers);	      	non-compiled	[CE]  illegal  start  of  expression	3	None	replace
40	[BUG]  [BUGGY]  Iterator  <  Option>  j  =  options.entities().iterator();  [CE]  illegal  start  of  expression  [FE]              OptionException    [CONTEXT]    if  (option  instanceof  Argument)  {  i.remove();  newAnonymous.add(option);  }  else  {  final  Set  triggers  =  option.getTriggers();    [BUGGY]  Iterator  <  Option>  j  =  options.entities().iterator();  [BUGGY]    newOptionMap.put(j.next(),  option);  }  newPrefixes.addAll(option.getPrefixes());  }  [CLASS]  GroupImpl  [METHOD]  <init>  [RETURN_TYPE]  String,int,int,boolean)  List  options  String  name  String  description  final  int  minimum  final  int  maximum  final  boolean  required  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  required  SortedMap  newOptionMap  optionMap  Iterator  i  j  List  anonymous  newAnonymous  options  Option  option  String  description  name  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	102	102	1	replace	Iterator  <  Option>  j  =  options.entities().iterator();	      	non-compiled	[CE]  illegal  start  of  expression	3	None	replace
41	[BUG]  [BUGGY]  Iterator  <  Option>  j  =  options.keySet().iterator();  [CE]  illegal  start  of  expression  [FE]                OptionException    [CONTEXT]    if  (option  instanceof  Argument)  {  i.remove();  newAnonymous.add(option);  }  else  {  final  Set  triggers  =  option.getTriggers();    [BUGGY]  Iterator  <  Option>  j  =  options.keySet().iterator();  [BUGGY]    newOptionMap.put(j.next(),  option);  }  newPrefixes.addAll(option.getPrefixes());  }  [CLASS]  GroupImpl  [METHOD]  <init>  [RETURN_TYPE]  String,int,int,boolean)  List  options  String  name  String  description  final  int  minimum  final  int  maximum  final  boolean  required  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  required  SortedMap  newOptionMap  optionMap  Iterator  i  j  List  anonymous  newAnonymous  options  Option  option  String  description  name  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	102	102	1	replace	Iterator  <  Option>  j  =  options.keySet().iterator();	      	non-compiled	[CE]  illegal  start  of  expression	3	None	replace
42	[BUG]  [BUGGY]  i.clear();  [CE]  illegal  start  of  expression  [FE]                OptionException    [CONTEXT]    if  (option  instanceof  Argument)  {  i.remove();  newAnonymous.add(option);  }  else  {  final  Set  triggers  =  option.getTriggers();    [BUGGY]  i.clear();  [BUGGY]    for  (Iterator  j  =  triggers.iterator();  j.hasNext();)  {  newOptionMap.put(j.next(),  option);  }  newPrefixes.addAll(option.getPrefixes());  }  [CLASS]  GroupImpl  [METHOD]  <init>  [RETURN_TYPE]  String,int,int,boolean)  List  options  String  name  String  description  final  int  minimum  final  int  maximum  final  boolean  required  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  required  SortedMap  newOptionMap  optionMap  Iterator  i  j  List  anonymous  newAnonymous  options  Option  option  String  description  name  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	102	102	1	replace	i.clear();	      i.remove();    	non-compiled	[CE]  illegal  start  of  expression	8	None	replace
43	[BUG]  [BUGGY]  i.add(option.getPrefix());  [CE]  illegal  start  of  expression  [FE]                  OptionException    [CONTEXT]    if  (option  instanceof  Argument)  {  i.remove();  newAnonymous.add(option);  }  else  {  final  Set  triggers  =  option.getTriggers();    [BUGGY]  i.add(option.getPrefix());  [BUGGY]    for  (Iterator  j  =  triggers.iterator();  j.hasNext();)  {  newOptionMap.put(j.next(),  option);  }  newPrefixes.addAll(option.getPrefixes());  }  [CLASS]  GroupImpl  [METHOD]  <init>  [RETURN_TYPE]  String,int,int,boolean)  List  options  String  name  String  description  final  int  minimum  final  int  maximum  final  boolean  required  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  required  SortedMap  newOptionMap  optionMap  Iterator  i  j  List  anonymous  newAnonymous  options  Option  option  String  description  name  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	102	102	1	replace	i.add(option.getPrefix());	      i.remove();    	non-compiled	[CE]  illegal  start  of  expression	8	None	replace
44	[BUG]  [BUGGY]  i.add(option.getArgument());  [CE]  illegal  start  of  expression  [FE]                    OptionException    [CONTEXT]    if  (option  instanceof  Argument)  {  i.remove();  newAnonymous.add(option);  }  else  {  final  Set  triggers  =  option.getTriggers();    [BUGGY]  i.add(option.getArgument());  [BUGGY]    for  (Iterator  j  =  triggers.iterator();  j.hasNext();)  {  newOptionMap.put(j.next(),  option);  }  newPrefixes.addAll(option.getPrefixes());  }  [CLASS]  GroupImpl  [METHOD]  <init>  [RETURN_TYPE]  String,int,int,boolean)  List  options  String  name  String  description  final  int  minimum  final  int  maximum  final  boolean  required  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  required  SortedMap  newOptionMap  optionMap  Iterator  i  j  List  anonymous  newAnonymous  options  Option  option  String  description  name  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	102	102	1	replace	i.add(option.getArgument());	      i.remove();    	non-compiled	[CE]  illegal  start  of  expression	8	None	replace
45	[BUG]  [BUGGY]  for(Iterator  j  =  options.values().iterator();  j.hasNext();)  {  [CE]  illegal  start  of  expression  [FE]        OptionException    [CONTEXT]    if  (option  instanceof  Argument)  {  i.remove();  newAnonymous.add(option);  }  else  {  final  Set  triggers  =  option.getTriggers();    [BUGGY]  for(Iterator  j  =  options.values().iterator();  j.hasNext();)  {  [BUGGY]    newOptionMap.put(j.next(),  option);  }  newPrefixes.addAll(option.getPrefixes());  }  [CLASS]  GroupImpl  [METHOD]  <init>  [RETURN_TYPE]  String,int,int,boolean)  List  options  String  name  String  description  final  int  minimum  final  int  maximum  final  boolean  required  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  required  SortedMap  newOptionMap  optionMap  Iterator  i  j  List  anonymous  newAnonymous  options  Option  option  String  description  name  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	102	102	1	replace	for(Iterator  j  =  options.values().iterator();  j.hasNext();)  {	  for(Iterator    j    =    this.triggers.iterator();    j.hasNext();)    {    	non-compiled	[CE]  illegal  start  of  expression	1	None	replace
46	[BUG]  [BUGGY]  For(Iterator  j  =  options.keySet().iterator();  j.hasNext();)  {  [CE]  illegal  start  of  expression  [FE]        OptionException    [CONTEXT]    if  (option  instanceof  Argument)  {  i.remove();  newAnonymous.add(option);  }  else  {  final  Set  triggers  =  option.getTriggers();    [BUGGY]  For(Iterator  j  =  options.keySet().iterator();  j.hasNext();)  {  [BUGGY]    newOptionMap.put(j.next(),  option);  }  newPrefixes.addAll(option.getPrefixes());  }  [CLASS]  GroupImpl  [METHOD]  <init>  [RETURN_TYPE]  String,int,int,boolean)  List  options  String  name  String  description  final  int  minimum  final  int  maximum  final  boolean  required  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  required  SortedMap  newOptionMap  optionMap  Iterator  i  j  List  anonymous  newAnonymous  options  Option  option  String  description  name  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	102	102	1	replace	For(Iterator  j  =  options.keySet().iterator();  j.hasNext();)  {	  For(Iterator    j    =    triggers.iterator();    j.hasNext();)    {    	non-compiled	[CE]  illegal  start  of  expression	13	None	replace
47	[BUG]  [BUGGY]  For(Iterator  j  =  options.entities.iterator();  j.hasNext();)  {  [CE]  illegal  start  of  expression  [FE]          OptionException    [CONTEXT]    if  (option  instanceof  Argument)  {  i.remove();  newAnonymous.add(option);  }  else  {  final  Set  triggers  =  option.getTriggers();    [BUGGY]  For(Iterator  j  =  options.entities.iterator();  j.hasNext();)  {  [BUGGY]    newOptionMap.put(j.next(),  option);  }  newPrefixes.addAll(option.getPrefixes());  }  [CLASS]  GroupImpl  [METHOD]  <init>  [RETURN_TYPE]  String,int,int,boolean)  List  options  String  name  String  description  final  int  minimum  final  int  maximum  final  boolean  required  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  required  SortedMap  newOptionMap  optionMap  Iterator  i  j  List  anonymous  newAnonymous  options  Option  option  String  description  name  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	102	102	1	replace	For(Iterator  j  =  options.entities.iterator();  j.hasNext();)  {	  For(Iterator    j    =    triggers.iterator();    j.hasNext();)    {    	non-compiled	[CE]  illegal  start  of  expression	13	None	replace
48	[BUG]  [BUGGY]  Option  option  =  option.getOption(defaultName);  [CE]  illegal  start  of  expression  [FE]        OptionException    [CONTEXT]    if  (option  instanceof  Argument)  {  i.remove();  newAnonymous.add(option);  }  else  {  final  Set  triggers  =  option.getTriggers();    [BUGGY]  Option  option  =  option.getOption(defaultName);  [BUGGY]    for  (Iterator  j  =  triggers.iterator();  j.hasNext();)  {  newOptionMap.put(j.next(),  option);  }  newPrefixes.addAll(option.getPrefixes());  }  [CLASS]  GroupImpl  [METHOD]  <init>  [RETURN_TYPE]  String,int,int,boolean)  List  options  String  name  String  description  final  int  minimum  final  int  maximum  final  boolean  required  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  required  SortedMap  newOptionMap  optionMap  Iterator  i  j  List  anonymous  newAnonymous  options  Option  option  String  description  name  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	102	102	1	replace	Option  option  =  option.getOption(defaultName);	      Option    option    =    option.getOption(name);    	non-compiled	[CE]  illegal  start  of  expression	14	None	replace
49	[BUG]  [BUGGY]  final  ArrayList  <  Option>  options  =  option.getOptionMap();  [CE]  illegal  start  of  expression  [FE]          OptionException    [CONTEXT]    if  (option  instanceof  Argument)  {  i.remove();  newAnonymous.add(option);  }  else  {  final  Set  triggers  =  option.getTriggers();    [BUGGY]  final  ArrayList  <  Option>  options  =  option.getOptionMap();  [BUGGY]    for  (Iterator  j  =  triggers.iterator();  j.hasNext();)  {  newOptionMap.put(j.next(),  option);  }  newPrefixes.addAll(option.getPrefixes());  }  [CLASS]  GroupImpl  [METHOD]  <init>  [RETURN_TYPE]  String,int,int,boolean)  List  options  String  name  String  description  final  int  minimum  final  int  maximum  final  boolean  required  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  required  SortedMap  newOptionMap  optionMap  Iterator  i  j  List  anonymous  newAnonymous  options  Option  option  String  description  name  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	102	102	1	replace	final  ArrayList  <  Option>  options  =  option.getOptionMap();	      final    Set    <    Option>    options    =    option.getOptionMap();    	non-compiled	[CE]  illegal  start  of  expression	15	None	replace
50	[BUG]  [BUGGY]  if(triggers!=  null)  {  i.remove();  newAnonymous.add(option);  }  [CE]  illegal  start  of  expression  [FE]            OptionException    [CONTEXT]    if  (option  instanceof  Argument)  {  i.remove();  newAnonymous.add(option);  }  else  {  final  Set  triggers  =  option.getTriggers();    [BUGGY]  if(triggers!=  null)  {  i.remove();  newAnonymous.add(option);  }  [BUGGY]    for  (Iterator  j  =  triggers.iterator();  j.hasNext();)  {  newOptionMap.put(j.next(),  option);  }  newPrefixes.addAll(option.getPrefixes());  }  [CLASS]  GroupImpl  [METHOD]  <init>  [RETURN_TYPE]  String,int,int,boolean)  List  options  String  name  String  description  final  int  minimum  final  int  maximum  final  boolean  required  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  required  SortedMap  newOptionMap  optionMap  Iterator  i  j  List  anonymous  newAnonymous  options  Option  option  String  description  name  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	102	102	1	replace	if(triggers!=  null)  {  i.remove();  newAnonymous.add(option);  }	      i.remove();    newAnonymous.add(option);    	non-compiled	[CE]  illegal  start  of  expression	6	None	replace
51	[BUG]  [BUGGY]  if(triggers!=  null)  {  i.remove();  newAnonymous.add(option);  }  else  {  final  Set  <  Option>  options  =  option.getOptionMap();  for(Iterator  <  Option>  j  =  options.iterator();  j.hasNext();)  {  [CE]  illegal  start  of  expression  [FE]              OptionException    [CONTEXT]    if  (option  instanceof  Argument)  {  i.remove();  newAnonymous.add(option);  }  else  {  final  Set  triggers  =  option.getTriggers();    [BUGGY]  if(triggers!=  null)  {  i.remove();  newAnonymous.add(option);  }  else  {  final  Set  <  Option>  options  =  option.getOptionMap();  for(Iterator  <  Option>  j  =  options.iterator();  j.hasNext();)  {  [BUGGY]    for  (Iterator  j  =  triggers.iterator();  j.hasNext();)  {  newOptionMap.put(j.next(),  option);  }  newPrefixes.addAll(option.getPrefixes());  }  [CLASS]  GroupImpl  [METHOD]  <init>  [RETURN_TYPE]  String,int,int,boolean)  List  options  String  name  String  description  final  int  minimum  final  int  maximum  final  boolean  required  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  required  SortedMap  newOptionMap  optionMap  Iterator  i  j  List  anonymous  newAnonymous  options  Option  option  String  description  name  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	102	102	1	replace	if(triggers!=  null)  {  i.remove();  newAnonymous.add(option);  }  else  {  final  Set  <  Option>  options  =  option.getOptionMap();  for(Iterator  <  Option>  j  =  options.iterator();  j.hasNext();)  {	      i.remove();    newAnonymous.add(option);    	non-compiled	[CE]  illegal  start  of  expression	6	None	replace
52	[BUG]  [BUGGY]  Option  option  =  option.getOptionMap(required);  [CE]  illegal  start  of  expression  [FE]          OptionException    [CONTEXT]    if  (option  instanceof  Argument)  {  i.remove();  newAnonymous.add(option);  }  else  {  final  Set  triggers  =  option.getTriggers();    [BUGGY]  Option  option  =  option.getOptionMap(required);  [BUGGY]    for  (Iterator  j  =  triggers.iterator();  j.hasNext();)  {  newOptionMap.put(j.next(),  option);  }  newPrefixes.addAll(option.getPrefixes());  }  [CLASS]  GroupImpl  [METHOD]  <init>  [RETURN_TYPE]  String,int,int,boolean)  List  options  String  name  String  description  final  int  minimum  final  int  maximum  final  boolean  required  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  required  SortedMap  newOptionMap  optionMap  Iterator  i  j  List  anonymous  newAnonymous  options  Option  option  String  description  name  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	102	102	1	replace	Option  option  =  option.getOptionMap(required);	      Option    option    =    option.getOptionMap();    	non-compiled	[CE]  illegal  start  of  expression	10	None	replace
53	[BUG]  [BUGGY]  Option  option  =  option.getOptionMap(),  options);  [CE]  illegal  start  of  expression  [FE]            OptionException    [CONTEXT]    if  (option  instanceof  Argument)  {  i.remove();  newAnonymous.add(option);  }  else  {  final  Set  triggers  =  option.getTriggers();    [BUGGY]  Option  option  =  option.getOptionMap(),  options);  [BUGGY]    for  (Iterator  j  =  triggers.iterator();  j.hasNext();)  {  newOptionMap.put(j.next(),  option);  }  newPrefixes.addAll(option.getPrefixes());  }  [CLASS]  GroupImpl  [METHOD]  <init>  [RETURN_TYPE]  String,int,int,boolean)  List  options  String  name  String  description  final  int  minimum  final  int  maximum  final  boolean  required  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  required  SortedMap  newOptionMap  optionMap  Iterator  i  j  List  anonymous  newAnonymous  options  Option  option  String  description  name  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	102	102	1	replace	Option  option  =  option.getOptionMap(),  options);	      Option    option    =    option.getOptionMap();    	non-compiled	[CE]  illegal  start  of  expression	10	None	replace
54	[BUG]  [BUGGY]  for(Iterator  j  =  options.entrySet().iterator();  j.hasNext();)  {  [CE]  illegal  start  of  expression  [FE]          OptionException    [CONTEXT]    if  (option  instanceof  Argument)  {  i.remove();  newAnonymous.add(option);  }  else  {  final  Set  triggers  =  option.getTriggers();    [BUGGY]  for(Iterator  j  =  options.entrySet().iterator();  j.hasNext();)  {  [BUGGY]    newOptionMap.put(j.next(),  option);  }  newPrefixes.addAll(option.getPrefixes());  }  [CLASS]  GroupImpl  [METHOD]  <init>  [RETURN_TYPE]  String,int,int,boolean)  List  options  String  name  String  description  final  int  minimum  final  int  maximum  final  boolean  required  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  required  SortedMap  newOptionMap  optionMap  Iterator  i  j  List  anonymous  newAnonymous  options  Option  option  String  description  name  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	102	102	1	replace	for(Iterator  j  =  options.entrySet().iterator();  j.hasNext();)  {	  for(Iterator    j    =    options.iterator();    j.hasNext();)    {    	non-compiled	[CE]  illegal  start  of  expression	2	None	replace
55	[BUG]  [BUGGY]  Option  option  =  options.getOption(i,  triggers);  [CE]  illegal  start  of  expression  [FE]            OptionException    [CONTEXT]    if  (option  instanceof  Argument)  {  i.remove();  newAnonymous.add(option);  }  else  {  final  Set  triggers  =  option.getTriggers();    [BUGGY]  Option  option  =  options.getOption(i,  triggers);  [BUGGY]    for  (Iterator  j  =  triggers.iterator();  j.hasNext();)  {  newOptionMap.put(j.next(),  option);  }  newPrefixes.addAll(option.getPrefixes());  }  [CLASS]  GroupImpl  [METHOD]  <init>  [RETURN_TYPE]  String,int,int,boolean)  List  options  String  name  String  description  final  int  minimum  final  int  maximum  final  boolean  required  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  required  SortedMap  newOptionMap  optionMap  Iterator  i  j  List  anonymous  newAnonymous  options  Option  option  String  description  name  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	102	102	1	replace	Option  option  =  options.getOption(i,  triggers);	      Option    option    =    options.getOption(i);    	non-compiled	[CE]  illegal  start  of  expression	11	None	replace
56	[BUG]  [BUGGY]  Option  option  =  option.getOption(defaultAnonymous);  [CE]  illegal  start  of  expression  [FE]        OptionException    [CONTEXT]    if  (option  instanceof  Argument)  {  i.remove();  newAnonymous.add(option);  }  else  {  final  Set  triggers  =  option.getTriggers();    [BUGGY]  Option  option  =  option.getOption(defaultAnonymous);  [BUGGY]    for  (Iterator  j  =  triggers.iterator();  j.hasNext();)  {  newOptionMap.put(j.next(),  option);  }  newPrefixes.addAll(option.getPrefixes());  }  [CLASS]  GroupImpl  [METHOD]  <init>  [RETURN_TYPE]  String,int,int,boolean)  List  options  String  name  String  description  final  int  minimum  final  int  maximum  final  boolean  required  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  required  SortedMap  newOptionMap  optionMap  Iterator  i  j  List  anonymous  newAnonymous  options  Option  option  String  description  name  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	102	102	1	replace	Option  option  =  option.getOption(defaultAnonymous);	      Option    option    =    option.getOption();    	non-compiled	[CE]  illegal  start  of  expression	9	None	replace
57	[BUG]  [BUGGY]  for(Iterator  it  =  triggers.iterator();  j.hasNext();)  {  [CE]  illegal  start  of  expression  [FE]          OptionException    [CONTEXT]    if  (option  instanceof  Argument)  {  i.remove();  newAnonymous.add(option);  }  else  {  final  Set  triggers  =  option.getTriggers();    [BUGGY]  for(Iterator  it  =  triggers.iterator();  j.hasNext();)  {  [BUGGY]    newOptionMap.put(j.next(),  option);  }  newPrefixes.addAll(option.getPrefixes());  }  [CLASS]  GroupImpl  [METHOD]  <init>  [RETURN_TYPE]  String,int,int,boolean)  List  options  String  name  String  description  final  int  minimum  final  int  maximum  final  boolean  required  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  required  SortedMap  newOptionMap  optionMap  Iterator  i  j  List  anonymous  newAnonymous  options  Option  option  String  description  name  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	102	102	1	replace	for(Iterator  it  =  triggers.iterator();  j.hasNext();)  {	  for(Iterator    j    =    options.iterator();    j.hasNext();)    {    	non-compiled	[CE]  illegal  start  of  expression	2	None	replace
58	[BUG]  [BUGGY]  Option  option  =  option.cloneOptionMap();  [CE]  illegal  start  of  expression  [FE]          OptionException    [CONTEXT]    if  (option  instanceof  Argument)  {  i.remove();  newAnonymous.add(option);  }  else  {  final  Set  triggers  =  option.getTriggers();    [BUGGY]  Option  option  =  option.cloneOptionMap();  [BUGGY]    for  (Iterator  j  =  triggers.iterator();  j.hasNext();)  {  newOptionMap.put(j.next(),  option);  }  newPrefixes.addAll(option.getPrefixes());  }  [CLASS]  GroupImpl  [METHOD]  <init>  [RETURN_TYPE]  String,int,int,boolean)  List  options  String  name  String  description  final  int  minimum  final  int  maximum  final  boolean  required  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  required  SortedMap  newOptionMap  optionMap  Iterator  i  j  List  anonymous  newAnonymous  options  Option  option  String  description  name  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	102	102	1	replace	Option  option  =  option.cloneOptionMap();	      Option    option    =    option.getOptionMap();    	non-compiled	[CE]  illegal  start  of  expression	10	None	replace
59	[BUG]  [BUGGY]  if(!required)  {  i.remove();  newAnonymous.add(option);  }  else  {  final  Set  <  Option>  options  =  option.getOptionMap();  newPrefixes.addAll(option.getPrefixes());  }  [CE]  illegal  start  of  expression  [FE]            OptionException    [CONTEXT]    if  (option  instanceof  Argument)  {  i.remove();  newAnonymous.add(option);  }  else  {  final  Set  triggers  =  option.getTriggers();    [BUGGY]  if(!required)  {  i.remove();  newAnonymous.add(option);  }  else  {  final  Set  <  Option>  options  =  option.getOptionMap();  newPrefixes.addAll(option.getPrefixes());  }  [BUGGY]    for  (Iterator  j  =  triggers.iterator();  j.hasNext();)  {  newOptionMap.put(j.next(),  option);  }  newPrefixes.addAll(option.getPrefixes());  }  [CLASS]  GroupImpl  [METHOD]  <init>  [RETURN_TYPE]  String,int,int,boolean)  List  options  String  name  String  description  final  int  minimum  final  int  maximum  final  boolean  required  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  required  SortedMap  newOptionMap  optionMap  Iterator  i  j  List  anonymous  newAnonymous  options  Option  option  String  description  name  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	102	102	1	replace	if(!required)  {  i.remove();  newAnonymous.add(option);  }  else  {  final  Set  <  Option>  options  =  option.getOptionMap();  newPrefixes.addAll(option.getPrefixes());  }	      i.remove();    newAnonymous.add(option);    	non-compiled	[CE]  illegal  start  of  expression	6	None	replace
60	[BUG]  [BUGGY]  if(!required)  {  i.remove();  newAnonymous.add(option);  }  else  {  final  Set  <  Option>  triggers  =  option.getTriggers();  for(Iterator  <  Option>  j  =  triggers.iterator();  j.hasNext()  [CE]  illegal  start  of  expression  [FE]              OptionException    [CONTEXT]    if  (option  instanceof  Argument)  {  i.remove();  newAnonymous.add(option);  }  else  {  final  Set  triggers  =  option.getTriggers();    [BUGGY]  if(!required)  {  i.remove();  newAnonymous.add(option);  }  else  {  final  Set  <  Option>  triggers  =  option.getTriggers();  for(Iterator  <  Option>  j  =  triggers.iterator();  j.hasNext()  [BUGGY]    for  (Iterator  j  =  triggers.iterator();  j.hasNext();)  {  newOptionMap.put(j.next(),  option);  }  newPrefixes.addAll(option.getPrefixes());  }  [CLASS]  GroupImpl  [METHOD]  <init>  [RETURN_TYPE]  String,int,int,boolean)  List  options  String  name  String  description  final  int  minimum  final  int  maximum  final  boolean  required  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  required  SortedMap  newOptionMap  optionMap  Iterator  i  j  List  anonymous  newAnonymous  options  Option  option  String  description  name  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	102	102	1	replace	if(!required)  {  i.remove();  newAnonymous.add(option);  }  else  {  final  Set  <  Option>  triggers  =  option.getTriggers();  for(Iterator  <  Option>  j  =  triggers.iterator();  j.hasNext()	      i.remove();    newAnonymous.add(option);    	non-compiled	[CE]  illegal  start  of  expression	6	None	replace
61	[BUG]  [BUGGY]  Iterator  j  =  options.iterator();  [CE]  illegal  start  of  expression  [FE]            OptionException    [CONTEXT]    if  (option  instanceof  Argument)  {  i.remove();  newAnonymous.add(option);  }  else  {  final  Set  triggers  =  option.getTriggers();    [BUGGY]  Iterator  j  =  options.iterator();  [BUGGY]    newOptionMap.put(j.next(),  option);  }  newPrefixes.addAll(option.getPrefixes());  }  [CLASS]  GroupImpl  [METHOD]  <init>  [RETURN_TYPE]  String,int,int,boolean)  List  options  String  name  String  description  final  int  minimum  final  int  maximum  final  boolean  required  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  required  SortedMap  newOptionMap  optionMap  Iterator  i  j  List  anonymous  newAnonymous  options  Option  option  String  description  name  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	102	102	1	replace	Iterator  j  =  options.iterator();	      	non-compiled	[CE]  illegal  start  of  expression	3	None	replace
62	[BUG]  [BUGGY]  Option  option  =  options.getOption(i,  description);  [CE]  illegal  start  of  expression  [FE]            OptionException    [CONTEXT]    if  (option  instanceof  Argument)  {  i.remove();  newAnonymous.add(option);  }  else  {  final  Set  triggers  =  option.getTriggers();    [BUGGY]  Option  option  =  options.getOption(i,  description);  [BUGGY]    for  (Iterator  j  =  triggers.iterator();  j.hasNext();)  {  newOptionMap.put(j.next(),  option);  }  newPrefixes.addAll(option.getPrefixes());  }  [CLASS]  GroupImpl  [METHOD]  <init>  [RETURN_TYPE]  String,int,int,boolean)  List  options  String  name  String  description  final  int  minimum  final  int  maximum  final  boolean  required  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  required  SortedMap  newOptionMap  optionMap  Iterator  i  j  List  anonymous  newAnonymous  options  Option  option  String  description  name  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	102	102	1	replace	Option  option  =  options.getOption(i,  description);	      Option    option    =    options.getOption(i);    	non-compiled	[CE]  illegal  start  of  expression	11	None	replace
63	[BUG]  [BUGGY]  Option  option  =  options.getOption(name,  description);  [CE]  illegal  start  of  expression  [FE]        OptionException    [CONTEXT]    if  (option  instanceof  Argument)  {  i.remove();  newAnonymous.add(option);  }  else  {  final  Set  triggers  =  option.getTriggers();    [BUGGY]  Option  option  =  options.getOption(name,  description);  [BUGGY]    for  (Iterator  j  =  triggers.iterator();  j.hasNext();)  {  newOptionMap.put(j.next(),  option);  }  newPrefixes.addAll(option.getPrefixes());  }  [CLASS]  GroupImpl  [METHOD]  <init>  [RETURN_TYPE]  String,int,int,boolean)  List  options  String  name  String  description  final  int  minimum  final  int  maximum  final  boolean  required  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  required  SortedMap  newOptionMap  optionMap  Iterator  i  j  List  anonymous  newAnonymous  options  Option  option  String  description  name  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	102	102	1	replace	Option  option  =  options.getOption(name,  description);	      Option    option    =    options.getOption(name);    	non-compiled	[CE]  illegal  start  of  expression	4	None	replace
