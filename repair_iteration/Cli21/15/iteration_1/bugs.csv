bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  for(Iterator  j  =  this.triggers.iterator();  j.hasNext();)  {  [CE]  illegal  start  of  expression  [FE]    OptionException  [CONTEXT]  if  (option  instanceof  Argument)  {  i.remove();  newAnonymous.add(option);  }  else  {  final  Set  triggers  =  option.getTriggers();  [BUGGY]  for(Iterator  j  =  this.triggers.iterator();  j.hasNext();)  {  [BUGGY]  newOptionMap.put(j.next(),  option);  }  newPrefixes.addAll(option.getPrefixes());  }  [CLASS]  GroupImpl  [METHOD]  <init>  [RETURN_TYPE]  String,int,int,boolean)  List  options  String  name  String  description  final  int  minimum  final  int  maximum  final  boolean  required  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  required  SortedMap  newOptionMap  optionMap  Iterator  i  j  List  anonymous  newAnonymous  options  Option  option  String  description  name  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	102	102	1	replace	for(Iterator  j  =  this.triggers.iterator();  j.hasNext();)  {	for  (Iterator  j  =  triggers.iterator();  j.hasNext();)  {  	non-compiled	[CE]  illegal  start  of  expression	29	None	replace
2	[BUG]  [BUGGY]  for(Iterator  j  =  options.iterator();  j.hasNext();)  {  [CE]  illegal  start  of  expression  [FE]      OptionException  [CONTEXT]  if  (option  instanceof  Argument)  {  i.remove();  newAnonymous.add(option);  }  else  {  final  Set  triggers  =  option.getTriggers();  [BUGGY]  for(Iterator  j  =  options.iterator();  j.hasNext();)  {  [BUGGY]  newOptionMap.put(j.next(),  option);  }  newPrefixes.addAll(option.getPrefixes());  }  [CLASS]  GroupImpl  [METHOD]  <init>  [RETURN_TYPE]  String,int,int,boolean)  List  options  String  name  String  description  final  int  minimum  final  int  maximum  final  boolean  required  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  required  SortedMap  newOptionMap  optionMap  Iterator  i  j  List  anonymous  newAnonymous  options  Option  option  String  description  name  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	102	102	1	replace	for(Iterator  j  =  options.iterator();  j.hasNext();)  {	for  (Iterator  j  =  triggers.iterator();  j.hasNext();)  {  	non-compiled	[CE]  illegal  start  of  expression	29	None	replace
3	[BUG]  [BUGGY]    [CE]  illegal  start  of  expression  [FE]        OptionException  [CONTEXT]  if  (option  instanceof  Argument)  {  i.remove();  newAnonymous.add(option);  }  else  {  final  Set  triggers  =  option.getTriggers();  [BUGGY]    [BUGGY]  newOptionMap.put(j.next(),  option);  }  newPrefixes.addAll(option.getPrefixes());  }  [CLASS]  GroupImpl  [METHOD]  <init>  [RETURN_TYPE]  String,int,int,boolean)  List  options  String  name  String  description  final  int  minimum  final  int  maximum  final  boolean  required  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  required  SortedMap  newOptionMap  optionMap  Iterator  i  j  List  anonymous  newAnonymous  options  Option  option  String  description  name  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	102	102	1	replace	  	for  (Iterator  j  =  triggers.iterator();  j.hasNext();)  {  	non-compiled	[CE]  illegal  start  of  expression	29	None	replace
4	[BUG]  [BUGGY]    Option  option  =  options.getOption(name);  [CE]  illegal  start  of  expression  [FE]    OptionException  [CONTEXT]  if  (option  instanceof  Argument)  {  i.remove();  newAnonymous.add(option);  }  else  {  final  Set  triggers  =  option.getTriggers();  [BUGGY]    Option  option  =  options.getOption(name);  [BUGGY]  for  (Iterator  j  =  triggers.iterator();  j.hasNext();)  {  newOptionMap.put(j.next(),  option);  }  newPrefixes.addAll(option.getPrefixes());  }  [CLASS]  GroupImpl  [METHOD]  <init>  [RETURN_TYPE]  String,int,int,boolean)  List  options  String  name  String  description  final  int  minimum  final  int  maximum  final  boolean  required  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  required  SortedMap  newOptionMap  optionMap  Iterator  i  j  List  anonymous  newAnonymous  options  Option  option  String  description  name  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	102	102	1	replace	    Option  option  =  options.getOption(name);		non-compiled	[CE]  illegal  start  of  expression	30	None	add
5	[BUG]  [BUGGY]    final  Set  <  Option>  options  =  option.getOptions();  [CE]  illegal  start  of  expression  [FE]      OptionException  [CONTEXT]  if  (option  instanceof  Argument)  {  i.remove();  newAnonymous.add(option);  }  else  {  final  Set  triggers  =  option.getTriggers();  [BUGGY]    final  Set  <  Option>  options  =  option.getOptions();  [BUGGY]  for  (Iterator  j  =  triggers.iterator();  j.hasNext();)  {  newOptionMap.put(j.next(),  option);  }  newPrefixes.addAll(option.getPrefixes());  }  [CLASS]  GroupImpl  [METHOD]  <init>  [RETURN_TYPE]  String,int,int,boolean)  List  options  String  name  String  description  final  int  minimum  final  int  maximum  final  boolean  required  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  required  SortedMap  newOptionMap  optionMap  Iterator  i  j  List  anonymous  newAnonymous  options  Option  option  String  description  name  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	102	102	1	replace	    final  Set  <  Option>  options  =  option.getOptions();		non-compiled	[CE]  illegal  start  of  expression	30	None	add
6	[BUG]  [BUGGY]    i.remove();  newAnonymous.add(option);  [CE]  illegal  start  of  expression  [FE]        OptionException  [CONTEXT]  if  (option  instanceof  Argument)  {  i.remove();  newAnonymous.add(option);  }  else  {  final  Set  triggers  =  option.getTriggers();  [BUGGY]    i.remove();  newAnonymous.add(option);  [BUGGY]  for  (Iterator  j  =  triggers.iterator();  j.hasNext();)  {  newOptionMap.put(j.next(),  option);  }  newPrefixes.addAll(option.getPrefixes());  }  [CLASS]  GroupImpl  [METHOD]  <init>  [RETURN_TYPE]  String,int,int,boolean)  List  options  String  name  String  description  final  int  minimum  final  int  maximum  final  boolean  required  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  required  SortedMap  newOptionMap  optionMap  Iterator  i  j  List  anonymous  newAnonymous  options  Option  option  String  description  name  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	102	102	1	replace	    i.remove();  newAnonymous.add(option);		non-compiled	[CE]  illegal  start  of  expression	30	None	add
7	[BUG]  [BUGGY]    Option  option  =(Option)i.next();  [CE]  illegal  start  of  expression  [FE]          OptionException  [CONTEXT]  if  (option  instanceof  Argument)  {  i.remove();  newAnonymous.add(option);  }  else  {  final  Set  triggers  =  option.getTriggers();  [BUGGY]    Option  option  =(Option)i.next();  [BUGGY]  for  (Iterator  j  =  triggers.iterator();  j.hasNext();)  {  newOptionMap.put(j.next(),  option);  }  newPrefixes.addAll(option.getPrefixes());  }  [CLASS]  GroupImpl  [METHOD]  <init>  [RETURN_TYPE]  String,int,int,boolean)  List  options  String  name  String  description  final  int  minimum  final  int  maximum  final  boolean  required  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  required  SortedMap  newOptionMap  optionMap  Iterator  i  j  List  anonymous  newAnonymous  options  Option  option  String  description  name  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	102	102	1	replace	    Option  option  =(Option)i.next();		non-compiled	[CE]  illegal  start  of  expression	30	None	add
8	[BUG]  [BUGGY]    i.remove();  [CE]  illegal  start  of  expression  [FE]            OptionException  [CONTEXT]  if  (option  instanceof  Argument)  {  i.remove();  newAnonymous.add(option);  }  else  {  final  Set  triggers  =  option.getTriggers();  [BUGGY]    i.remove();  [BUGGY]  for  (Iterator  j  =  triggers.iterator();  j.hasNext();)  {  newOptionMap.put(j.next(),  option);  }  newPrefixes.addAll(option.getPrefixes());  }  [CLASS]  GroupImpl  [METHOD]  <init>  [RETURN_TYPE]  String,int,int,boolean)  List  options  String  name  String  description  final  int  minimum  final  int  maximum  final  boolean  required  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  required  SortedMap  newOptionMap  optionMap  Iterator  i  j  List  anonymous  newAnonymous  options  Option  option  String  description  name  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	102	102	1	replace	    i.remove();		non-compiled	[CE]  illegal  start  of  expression	30	None	add
9	[BUG]  [BUGGY]    Option  option  =  option.getOption();  [CE]  illegal  start  of  expression  [FE]    OptionException  [CONTEXT]  if  (option  instanceof  Argument)  {  i.remove();  newAnonymous.add(option);  }  else  {  final  Set  triggers  =  option.getTriggers();  [BUGGY]    Option  option  =  option.getOption();  [BUGGY]  for  (Iterator  j  =  triggers.iterator();  j.hasNext();)  {  newOptionMap.put(j.next(),  option);  }  newPrefixes.addAll(option.getPrefixes());  }  [CLASS]  GroupImpl  [METHOD]  <init>  [RETURN_TYPE]  String,int,int,boolean)  List  options  String  name  String  description  final  int  minimum  final  int  maximum  final  boolean  required  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  required  SortedMap  newOptionMap  optionMap  Iterator  i  j  List  anonymous  newAnonymous  options  Option  option  String  description  name  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	102	102	1	replace	    Option  option  =  option.getOption();		non-compiled	[CE]  illegal  start  of  expression	30	None	add
10	[BUG]  [BUGGY]    Option  option  =  option.getOptionMap();  [CE]  illegal  start  of  expression  [FE]      OptionException  [CONTEXT]  if  (option  instanceof  Argument)  {  i.remove();  newAnonymous.add(option);  }  else  {  final  Set  triggers  =  option.getTriggers();  [BUGGY]    Option  option  =  option.getOptionMap();  [BUGGY]  for  (Iterator  j  =  triggers.iterator();  j.hasNext();)  {  newOptionMap.put(j.next(),  option);  }  newPrefixes.addAll(option.getPrefixes());  }  [CLASS]  GroupImpl  [METHOD]  <init>  [RETURN_TYPE]  String,int,int,boolean)  List  options  String  name  String  description  final  int  minimum  final  int  maximum  final  boolean  required  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  required  SortedMap  newOptionMap  optionMap  Iterator  i  j  List  anonymous  newAnonymous  options  Option  option  String  description  name  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	102	102	1	replace	    Option  option  =  option.getOptionMap();		non-compiled	[CE]  illegal  start  of  expression	30	None	add
11	[BUG]  [BUGGY]    Option  option  =  options.getOption(i);  [CE]  illegal  start  of  expression  [FE]        OptionException  [CONTEXT]  if  (option  instanceof  Argument)  {  i.remove();  newAnonymous.add(option);  }  else  {  final  Set  triggers  =  option.getTriggers();  [BUGGY]    Option  option  =  options.getOption(i);  [BUGGY]  for  (Iterator  j  =  triggers.iterator();  j.hasNext();)  {  newOptionMap.put(j.next(),  option);  }  newPrefixes.addAll(option.getPrefixes());  }  [CLASS]  GroupImpl  [METHOD]  <init>  [RETURN_TYPE]  String,int,int,boolean)  List  options  String  name  String  description  final  int  minimum  final  int  maximum  final  boolean  required  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  required  SortedMap  newOptionMap  optionMap  Iterator  i  j  List  anonymous  newAnonymous  options  Option  option  String  description  name  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	102	102	1	replace	    Option  option  =  options.getOption(i);		non-compiled	[CE]  illegal  start  of  expression	30	None	add
12	[BUG]  [BUGGY]    Option  option  =  options.getOption(option);  [CE]  illegal  start  of  expression  [FE]          OptionException  [CONTEXT]  if  (option  instanceof  Argument)  {  i.remove();  newAnonymous.add(option);  }  else  {  final  Set  triggers  =  option.getTriggers();  [BUGGY]    Option  option  =  options.getOption(option);  [BUGGY]  for  (Iterator  j  =  triggers.iterator();  j.hasNext();)  {  newOptionMap.put(j.next(),  option);  }  newPrefixes.addAll(option.getPrefixes());  }  [CLASS]  GroupImpl  [METHOD]  <init>  [RETURN_TYPE]  String,int,int,boolean)  List  options  String  name  String  description  final  int  minimum  final  int  maximum  final  boolean  required  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  required  SortedMap  newOptionMap  optionMap  Iterator  i  j  List  anonymous  newAnonymous  options  Option  option  String  description  name  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	102	102	1	replace	    Option  option  =  options.getOption(option);		non-compiled	[CE]  illegal  start  of  expression	30	None	add
13	[BUG]  [BUGGY]  For(Iterator  j  =  triggers.iterator();  j.hasNext();)  {  [CE]  illegal  start  of  expression  [FE]    OptionException  [CONTEXT]  if  (option  instanceof  Argument)  {  i.remove();  newAnonymous.add(option);  }  else  {  final  Set  triggers  =  option.getTriggers();  [BUGGY]  For(Iterator  j  =  triggers.iterator();  j.hasNext();)  {  [BUGGY]  newOptionMap.put(j.next(),  option);  }  newPrefixes.addAll(option.getPrefixes());  }  [CLASS]  GroupImpl  [METHOD]  <init>  [RETURN_TYPE]  String,int,int,boolean)  List  options  String  name  String  description  final  int  minimum  final  int  maximum  final  boolean  required  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  required  SortedMap  newOptionMap  optionMap  Iterator  i  j  List  anonymous  newAnonymous  options  Option  option  String  description  name  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	102	102	1	replace	For(Iterator  j  =  triggers.iterator();  j.hasNext();)  {	for  (Iterator  j  =  triggers.iterator();  j.hasNext();)  {  	non-compiled	[CE]  illegal  start  of  expression	29	None	replace
14	[BUG]  [BUGGY]    Option  option  =  option.getOption(name);  [CE]  illegal  start  of  expression  [FE]    OptionException  [CONTEXT]  if  (option  instanceof  Argument)  {  i.remove();  newAnonymous.add(option);  }  else  {  final  Set  triggers  =  option.getTriggers();  [BUGGY]    Option  option  =  option.getOption(name);  [BUGGY]  for  (Iterator  j  =  triggers.iterator();  j.hasNext();)  {  newOptionMap.put(j.next(),  option);  }  newPrefixes.addAll(option.getPrefixes());  }  [CLASS]  GroupImpl  [METHOD]  <init>  [RETURN_TYPE]  String,int,int,boolean)  List  options  String  name  String  description  final  int  minimum  final  int  maximum  final  boolean  required  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  required  SortedMap  newOptionMap  optionMap  Iterator  i  j  List  anonymous  newAnonymous  options  Option  option  String  description  name  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	102	102	1	replace	    Option  option  =  option.getOption(name);		non-compiled	[CE]  illegal  start  of  expression	30	None	add
15	[BUG]  [BUGGY]    final  Set  <  Option>  options  =  option.getOptionMap();  [CE]  illegal  start  of  expression  [FE]      OptionException  [CONTEXT]  if  (option  instanceof  Argument)  {  i.remove();  newAnonymous.add(option);  }  else  {  final  Set  triggers  =  option.getTriggers();  [BUGGY]    final  Set  <  Option>  options  =  option.getOptionMap();  [BUGGY]  for  (Iterator  j  =  triggers.iterator();  j.hasNext();)  {  newOptionMap.put(j.next(),  option);  }  newPrefixes.addAll(option.getPrefixes());  }  [CLASS]  GroupImpl  [METHOD]  <init>  [RETURN_TYPE]  String,int,int,boolean)  List  options  String  name  String  description  final  int  minimum  final  int  maximum  final  boolean  required  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  required  SortedMap  newOptionMap  optionMap  Iterator  i  j  List  anonymous  newAnonymous  options  Option  option  String  description  name  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	102	102	1	replace	    final  Set  <  Option>  options  =  option.getOptionMap();		non-compiled	[CE]  illegal  start  of  expression	30	None	add
