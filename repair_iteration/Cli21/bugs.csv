bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	failing_test_number	action	patch
1	[BUG] [BUGGY] super(0, required); [FE] OptionException [CONTEXT] final boolean required) { [BUGGY] super(0, required); [BUGGY]  this.name = name; this.description = description; this.minimum = minimum; this.maximum = maximum;   this.options = Collections.unmodifiableList(options);  [CLASS] GroupImpl [METHOD] <init> [RETURN_TYPE] String,int,int,boolean)  List options String name String description final int minimum final int maximum final boolean required [VARIABLES] Set newPrefixes prefixes triggers boolean required SortedMap newOptionMap optionMap Iterator i j List anonymous newAnonymous options Option option String description name int maximum minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	71	71	1	replace	
2	[BUG] [BUGGY] [FE] OptionException [CONTEXT] final boolean required) { [BUGGY] [BUGGY] super(0, required); this.name = name; this.description = description; this.minimum = minimum; this.maximum = maximum;   this.options = Collections.unmodifiableList(options);  [CLASS] GroupImpl [METHOD] <init> [RETURN_TYPE] String,int,int,boolean)  List options String name String description final int minimum final int maximum final boolean required [VARIABLES] Set newPrefixes prefixes triggers boolean required SortedMap newOptionMap optionMap Iterator i j List anonymous newAnonymous options Option option String description name int maximum minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	71	71	1	add	
3	[BUG] [BUGGY] this.name = name; [FE] OptionException [CONTEXT] final boolean required) { super(0, required); [BUGGY] this.name = name; [BUGGY] this.description = description; this.minimum = minimum; this.maximum = maximum;   this.options = Collections.unmodifiableList(options);  final List newAnonymous = new ArrayList(); [CLASS] GroupImpl [METHOD] <init> [RETURN_TYPE] String,int,int,boolean)  List options String name String description final int minimum final int maximum final boolean required [VARIABLES] Set newPrefixes prefixes triggers boolean required SortedMap newOptionMap optionMap Iterator i j List anonymous newAnonymous options Option option String description name int maximum minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	73	73	1	replace	
4	[BUG] [BUGGY] [FE] OptionException [CONTEXT] final boolean required) { super(0, required); [BUGGY] [BUGGY] this.name = name; this.description = description; this.minimum = minimum; this.maximum = maximum;   this.options = Collections.unmodifiableList(options);  final List newAnonymous = new ArrayList(); [CLASS] GroupImpl [METHOD] <init> [RETURN_TYPE] String,int,int,boolean)  List options String name String description final int minimum final int maximum final boolean required [VARIABLES] Set newPrefixes prefixes triggers boolean required SortedMap newOptionMap optionMap Iterator i j List anonymous newAnonymous options Option option String description name int maximum minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	73	73	1	add	
5	[BUG] [BUGGY] this.description = description; [FE] OptionException [CONTEXT] final boolean required) { super(0, required); this.name = name; [BUGGY] this.description = description; [BUGGY] this.minimum = minimum; this.maximum = maximum;   this.options = Collections.unmodifiableList(options);  final List newAnonymous = new ArrayList();  [CLASS] GroupImpl [METHOD] <init> [RETURN_TYPE] String,int,int,boolean)  List options String name String description final int minimum final int maximum final boolean required [VARIABLES] Set newPrefixes prefixes triggers boolean required SortedMap newOptionMap optionMap Iterator i j List anonymous newAnonymous options Option option String description name int maximum minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	74	74	1	replace	
6	[BUG] [BUGGY] [FE] OptionException [CONTEXT] final boolean required) { super(0, required); this.name = name; [BUGGY] [BUGGY] this.description = description; this.minimum = minimum; this.maximum = maximum;   this.options = Collections.unmodifiableList(options);  final List newAnonymous = new ArrayList();  [CLASS] GroupImpl [METHOD] <init> [RETURN_TYPE] String,int,int,boolean)  List options String name String description final int minimum final int maximum final boolean required [VARIABLES] Set newPrefixes prefixes triggers boolean required SortedMap newOptionMap optionMap Iterator i j List anonymous newAnonymous options Option option String description name int maximum minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	74	74	1	add	
7	[BUG] [BUGGY] this.minimum = minimum; [FE] OptionException [CONTEXT] final boolean required) { super(0, required); this.name = name; this.description = description; [BUGGY] this.minimum = minimum; [BUGGY] this.maximum = maximum;   this.options = Collections.unmodifiableList(options);  final List newAnonymous = new ArrayList();   [CLASS] GroupImpl [METHOD] <init> [RETURN_TYPE] String,int,int,boolean)  List options String name String description final int minimum final int maximum final boolean required [VARIABLES] Set newPrefixes prefixes triggers boolean required SortedMap newOptionMap optionMap Iterator i j List anonymous newAnonymous options Option option String description name int maximum minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	75	75	1	replace	
8	[BUG] [BUGGY] [FE] OptionException [CONTEXT] final boolean required) { super(0, required); this.name = name; this.description = description; [BUGGY] [BUGGY] this.minimum = minimum; this.maximum = maximum;   this.options = Collections.unmodifiableList(options);  final List newAnonymous = new ArrayList();   [CLASS] GroupImpl [METHOD] <init> [RETURN_TYPE] String,int,int,boolean)  List options String name String description final int minimum final int maximum final boolean required [VARIABLES] Set newPrefixes prefixes triggers boolean required SortedMap newOptionMap optionMap Iterator i j List anonymous newAnonymous options Option option String description name int maximum minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	75	75	1	add	
9	[BUG] [BUGGY] this.maximum = maximum; [FE] OptionException [CONTEXT] final boolean required) { super(0, required); this.name = name; this.description = description; this.minimum = minimum; [BUGGY] this.maximum = maximum; [BUGGY]    this.options = Collections.unmodifiableList(options);  final List newAnonymous = new ArrayList();  final SortedMap newOptionMap = new TreeMap(ReverseStringComparator.getInstance()); [CLASS] GroupImpl [METHOD] <init> [RETURN_TYPE] String,int,int,boolean)  List options String name String description final int minimum final int maximum final boolean required [VARIABLES] Set newPrefixes prefixes triggers boolean required SortedMap newOptionMap optionMap Iterator i j List anonymous newAnonymous options Option option String description name int maximum minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	76	76	1	replace	
10	[BUG] [BUGGY] [FE] OptionException [CONTEXT] final boolean required) { super(0, required); this.name = name; this.description = description; this.minimum = minimum; [BUGGY] [BUGGY] this.maximum = maximum;   this.options = Collections.unmodifiableList(options);  final List newAnonymous = new ArrayList();  final SortedMap newOptionMap = new TreeMap(ReverseStringComparator.getInstance()); [CLASS] GroupImpl [METHOD] <init> [RETURN_TYPE] String,int,int,boolean)  List options String name String description final int minimum final int maximum final boolean required [VARIABLES] Set newPrefixes prefixes triggers boolean required SortedMap newOptionMap optionMap Iterator i j List anonymous newAnonymous options Option option String description name int maximum minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	76	76	1	add	
11	[BUG] [BUGGY] this.options = Collections.unmodifiableList(options); [FE] OptionException [CONTEXT] final boolean required) { super(0, required); this.name = name; this.description = description; this.minimum = minimum; this.maximum = maximum;   [BUGGY] this.options = Collections.unmodifiableList(options); [BUGGY]   final List newAnonymous = new ArrayList();  final SortedMap newOptionMap = new TreeMap(ReverseStringComparator.getInstance());  final Set newPrefixes = new HashSet();  [CLASS] GroupImpl [METHOD] <init> [RETURN_TYPE] String,int,int,boolean)  List options String name String description final int minimum final int maximum final boolean required [VARIABLES] Set newPrefixes prefixes triggers boolean required SortedMap newOptionMap optionMap Iterator i j List anonymous newAnonymous options Option option String description name int maximum minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	80	80	1	replace	
12	[BUG] [BUGGY] [FE] OptionException [CONTEXT] final boolean required) { super(0, required); this.name = name; this.description = description; this.minimum = minimum; this.maximum = maximum;   [BUGGY] [BUGGY] this.options = Collections.unmodifiableList(options);  final List newAnonymous = new ArrayList();  final SortedMap newOptionMap = new TreeMap(ReverseStringComparator.getInstance());  final Set newPrefixes = new HashSet();  [CLASS] GroupImpl [METHOD] <init> [RETURN_TYPE] String,int,int,boolean)  List options String name String description final int minimum final int maximum final boolean required [VARIABLES] Set newPrefixes prefixes triggers boolean required SortedMap newOptionMap optionMap Iterator i j List anonymous newAnonymous options Option option String description name int maximum minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	80	80	1	add	
13	[BUG] [BUGGY] final List newAnonymous = new ArrayList(); [FE] OptionException [CONTEXT] this.name = name; this.description = description; this.minimum = minimum; this.maximum = maximum;   this.options = Collections.unmodifiableList(options);  [BUGGY] final List newAnonymous = new ArrayList(); [BUGGY]   final SortedMap newOptionMap = new TreeMap(ReverseStringComparator.getInstance());  final Set newPrefixes = new HashSet();  for (final Iterator i = options.iterator(); i.hasNext();) { final Option option = (Option) i.next(); [CLASS] GroupImpl [METHOD] <init> [RETURN_TYPE] String,int,int,boolean)  List options String name String description final int minimum final int maximum final boolean required [VARIABLES] Set newPrefixes prefixes triggers boolean required SortedMap newOptionMap optionMap Iterator i j List anonymous newAnonymous options Option option String description name int maximum minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	83	83	1	replace	
14	[BUG] [BUGGY] [FE] OptionException [CONTEXT] this.name = name; this.description = description; this.minimum = minimum; this.maximum = maximum;   this.options = Collections.unmodifiableList(options);  [BUGGY] [BUGGY] final List newAnonymous = new ArrayList();  final SortedMap newOptionMap = new TreeMap(ReverseStringComparator.getInstance());  final Set newPrefixes = new HashSet();  for (final Iterator i = options.iterator(); i.hasNext();) { final Option option = (Option) i.next(); [CLASS] GroupImpl [METHOD] <init> [RETURN_TYPE] String,int,int,boolean)  List options String name String description final int minimum final int maximum final boolean required [VARIABLES] Set newPrefixes prefixes triggers boolean required SortedMap newOptionMap optionMap Iterator i j List anonymous newAnonymous options Option option String description name int maximum minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	83	83	1	add	
15	[BUG] [BUGGY] final SortedMap newOptionMap = new TreeMap(ReverseStringComparator.getInstance()); [FE] OptionException [CONTEXT] this.maximum = maximum;   this.options = Collections.unmodifiableList(options);  final List newAnonymous = new ArrayList();  [BUGGY] final SortedMap newOptionMap = new TreeMap(ReverseStringComparator.getInstance()); [BUGGY]   final Set newPrefixes = new HashSet();  for (final Iterator i = options.iterator(); i.hasNext();) { final Option option = (Option) i.next(); option.setParent(this); if (option instanceof Argument) { [CLASS] GroupImpl [METHOD] <init> [RETURN_TYPE] String,int,int,boolean)  List options String name String description final int minimum final int maximum final boolean required [VARIABLES] Set newPrefixes prefixes triggers boolean required SortedMap newOptionMap optionMap Iterator i j List anonymous newAnonymous options Option option String description name int maximum minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	86	86	1	replace	
16	[BUG] [BUGGY] [FE] OptionException [CONTEXT] this.maximum = maximum;   this.options = Collections.unmodifiableList(options);  final List newAnonymous = new ArrayList();  [BUGGY] [BUGGY] final SortedMap newOptionMap = new TreeMap(ReverseStringComparator.getInstance());  final Set newPrefixes = new HashSet();  for (final Iterator i = options.iterator(); i.hasNext();) { final Option option = (Option) i.next(); option.setParent(this); if (option instanceof Argument) { [CLASS] GroupImpl [METHOD] <init> [RETURN_TYPE] String,int,int,boolean)  List options String name String description final int minimum final int maximum final boolean required [VARIABLES] Set newPrefixes prefixes triggers boolean required SortedMap newOptionMap optionMap Iterator i j List anonymous newAnonymous options Option option String description name int maximum minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	86	86	1	add	
17	[BUG] [BUGGY] final Set newPrefixes = new HashSet(); [FE] OptionException [CONTEXT]  this.options = Collections.unmodifiableList(options);  final List newAnonymous = new ArrayList();  final SortedMap newOptionMap = new TreeMap(ReverseStringComparator.getInstance());  [BUGGY] final Set newPrefixes = new HashSet(); [BUGGY]   for (final Iterator i = options.iterator(); i.hasNext();) { final Option option = (Option) i.next(); option.setParent(this); if (option instanceof Argument) { i.remove(); newAnonymous.add(option); } else { [CLASS] GroupImpl [METHOD] <init> [RETURN_TYPE] String,int,int,boolean)  List options String name String description final int minimum final int maximum final boolean required [VARIABLES] Set newPrefixes prefixes triggers boolean required SortedMap newOptionMap optionMap Iterator i j List anonymous newAnonymous options Option option String description name int maximum minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	89	89	1	replace	
18	[BUG] [BUGGY] [FE] OptionException [CONTEXT]  this.options = Collections.unmodifiableList(options);  final List newAnonymous = new ArrayList();  final SortedMap newOptionMap = new TreeMap(ReverseStringComparator.getInstance());  [BUGGY] [BUGGY] final Set newPrefixes = new HashSet();  for (final Iterator i = options.iterator(); i.hasNext();) { final Option option = (Option) i.next(); option.setParent(this); if (option instanceof Argument) { i.remove(); newAnonymous.add(option); } else { [CLASS] GroupImpl [METHOD] <init> [RETURN_TYPE] String,int,int,boolean)  List options String name String description final int minimum final int maximum final boolean required [VARIABLES] Set newPrefixes prefixes triggers boolean required SortedMap newOptionMap optionMap Iterator i j List anonymous newAnonymous options Option option String description name int maximum minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	89	89	1	add	
19	[BUG] [BUGGY] for (final Iterator i = options.iterator(); i.hasNext();) { [FE] OptionException [CONTEXT]  final List newAnonymous = new ArrayList();  final SortedMap newOptionMap = new TreeMap(ReverseStringComparator.getInstance());  final Set newPrefixes = new HashSet();  [BUGGY] for (final Iterator i = options.iterator(); i.hasNext();) { [BUGGY] final Option option = (Option) i.next(); option.setParent(this); if (option instanceof Argument) { i.remove(); newAnonymous.add(option); } else { final Set triggers = option.getTriggers(); for (Iterator j = triggers.iterator(); j.hasNext();) { [CLASS] GroupImpl [METHOD] <init> [RETURN_TYPE] String,int,int,boolean)  List options String name String description final int minimum final int maximum final boolean required [VARIABLES] Set newPrefixes prefixes triggers boolean required SortedMap newOptionMap optionMap Iterator i j List anonymous newAnonymous options Option option String description name int maximum minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	92	92	1	replace	
20	[BUG] [BUGGY] [FE] OptionException [CONTEXT]  final List newAnonymous = new ArrayList();  final SortedMap newOptionMap = new TreeMap(ReverseStringComparator.getInstance());  final Set newPrefixes = new HashSet();  [BUGGY] [BUGGY] for (final Iterator i = options.iterator(); i.hasNext();) { final Option option = (Option) i.next(); option.setParent(this); if (option instanceof Argument) { i.remove(); newAnonymous.add(option); } else { final Set triggers = option.getTriggers(); for (Iterator j = triggers.iterator(); j.hasNext();) { [CLASS] GroupImpl [METHOD] <init> [RETURN_TYPE] String,int,int,boolean)  List options String name String description final int minimum final int maximum final boolean required [VARIABLES] Set newPrefixes prefixes triggers boolean required SortedMap newOptionMap optionMap Iterator i j List anonymous newAnonymous options Option option String description name int maximum minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	92	92	1	add	
21	[BUG] [BUGGY] final Option option = (Option) i.next(); [FE] OptionException [CONTEXT] final List newAnonymous = new ArrayList();  final SortedMap newOptionMap = new TreeMap(ReverseStringComparator.getInstance());  final Set newPrefixes = new HashSet();  for (final Iterator i = options.iterator(); i.hasNext();) { [BUGGY] final Option option = (Option) i.next(); [BUGGY] option.setParent(this); if (option instanceof Argument) { i.remove(); newAnonymous.add(option); } else { final Set triggers = option.getTriggers(); for (Iterator j = triggers.iterator(); j.hasNext();) { newOptionMap.put(j.next(), option); [CLASS] GroupImpl [METHOD] <init> [RETURN_TYPE] String,int,int,boolean)  List options String name String description final int minimum final int maximum final boolean required [VARIABLES] Set newPrefixes prefixes triggers boolean required SortedMap newOptionMap optionMap Iterator i j List anonymous newAnonymous options Option option String description name int maximum minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	93	93	1	replace	
22	[BUG] [BUGGY] [FE] OptionException [CONTEXT] final List newAnonymous = new ArrayList();  final SortedMap newOptionMap = new TreeMap(ReverseStringComparator.getInstance());  final Set newPrefixes = new HashSet();  for (final Iterator i = options.iterator(); i.hasNext();) { [BUGGY] [BUGGY] final Option option = (Option) i.next(); option.setParent(this); if (option instanceof Argument) { i.remove(); newAnonymous.add(option); } else { final Set triggers = option.getTriggers(); for (Iterator j = triggers.iterator(); j.hasNext();) { newOptionMap.put(j.next(), option); [CLASS] GroupImpl [METHOD] <init> [RETURN_TYPE] String,int,int,boolean)  List options String name String description final int minimum final int maximum final boolean required [VARIABLES] Set newPrefixes prefixes triggers boolean required SortedMap newOptionMap optionMap Iterator i j List anonymous newAnonymous options Option option String description name int maximum minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	93	93	1	add	
23	[BUG] [BUGGY] option.setParent(this); [FE] OptionException [CONTEXT]  final SortedMap newOptionMap = new TreeMap(ReverseStringComparator.getInstance());  final Set newPrefixes = new HashSet();  for (final Iterator i = options.iterator(); i.hasNext();) { final Option option = (Option) i.next(); [BUGGY] option.setParent(this); [BUGGY]  if (option instanceof Argument) { i.remove(); newAnonymous.add(option); } else { final Set triggers = option.getTriggers(); for (Iterator j = triggers.iterator(); j.hasNext();) { newOptionMap.put(j.next(), option); } [CLASS] GroupImpl [METHOD] <init> [RETURN_TYPE] String,int,int,boolean)  List options String name String description final int minimum final int maximum final boolean required [VARIABLES] Set newPrefixes prefixes triggers boolean required SortedMap newOptionMap optionMap Iterator i j List anonymous newAnonymous options Option option String description name int maximum minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	94	94	1	replace	
24	[BUG] [BUGGY] [FE] OptionException [CONTEXT]  final SortedMap newOptionMap = new TreeMap(ReverseStringComparator.getInstance());  final Set newPrefixes = new HashSet();  for (final Iterator i = options.iterator(); i.hasNext();) { final Option option = (Option) i.next(); [BUGGY] [BUGGY] option.setParent(this); if (option instanceof Argument) { i.remove(); newAnonymous.add(option); } else { final Set triggers = option.getTriggers(); for (Iterator j = triggers.iterator(); j.hasNext();) { newOptionMap.put(j.next(), option); } [CLASS] GroupImpl [METHOD] <init> [RETURN_TYPE] String,int,int,boolean)  List options String name String description final int minimum final int maximum final boolean required [VARIABLES] Set newPrefixes prefixes triggers boolean required SortedMap newOptionMap optionMap Iterator i j List anonymous newAnonymous options Option option String description name int maximum minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	94	94	1	add	
25	[BUG] [BUGGY] if (option instanceof Argument) { [FE] OptionException [CONTEXT] final SortedMap newOptionMap = new TreeMap(ReverseStringComparator.getInstance());  final Set newPrefixes = new HashSet();  for (final Iterator i = options.iterator(); i.hasNext();) { final Option option = (Option) i.next(); option.setParent(this); [BUGGY] if (option instanceof Argument) { [BUGGY] i.remove(); newAnonymous.add(option); } else { final Set triggers = option.getTriggers(); for (Iterator j = triggers.iterator(); j.hasNext();) { newOptionMap.put(j.next(), option); }   [CLASS] GroupImpl [METHOD] <init> [RETURN_TYPE] String,int,int,boolean)  List options String name String description final int minimum final int maximum final boolean required [VARIABLES] Set newPrefixes prefixes triggers boolean required SortedMap newOptionMap optionMap Iterator i j List anonymous newAnonymous options Option option String description name int maximum minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	96	96	1	replace	
26	[BUG] [BUGGY] [FE] OptionException [CONTEXT] final SortedMap newOptionMap = new TreeMap(ReverseStringComparator.getInstance());  final Set newPrefixes = new HashSet();  for (final Iterator i = options.iterator(); i.hasNext();) { final Option option = (Option) i.next(); option.setParent(this); [BUGGY] [BUGGY] if (option instanceof Argument) { i.remove(); newAnonymous.add(option); } else { final Set triggers = option.getTriggers(); for (Iterator j = triggers.iterator(); j.hasNext();) { newOptionMap.put(j.next(), option); }   [CLASS] GroupImpl [METHOD] <init> [RETURN_TYPE] String,int,int,boolean)  List options String name String description final int minimum final int maximum final boolean required [VARIABLES] Set newPrefixes prefixes triggers boolean required SortedMap newOptionMap optionMap Iterator i j List anonymous newAnonymous options Option option String description name int maximum minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	96	96	1	add	
27	[BUG] [BUGGY] final Set triggers = option.getTriggers(); [FE] OptionException [CONTEXT] if (option instanceof Argument) { i.remove(); newAnonymous.add(option); } else { [BUGGY] final Set triggers = option.getTriggers(); [BUGGY]  for (Iterator j = triggers.iterator(); j.hasNext();) { newOptionMap.put(j.next(), option); }  newPrefixes.addAll(option.getPrefixes()); } [CLASS] GroupImpl [METHOD] <init> [RETURN_TYPE] String,int,int,boolean)  List options String name String description final int minimum final int maximum final boolean required [VARIABLES] Set newPrefixes prefixes triggers boolean required SortedMap newOptionMap optionMap Iterator i j List anonymous newAnonymous options Option option String description name int maximum minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	100	100	1	replace	
28	[BUG] [BUGGY] [FE] OptionException [CONTEXT] if (option instanceof Argument) { i.remove(); newAnonymous.add(option); } else { [BUGGY] [BUGGY] final Set triggers = option.getTriggers(); for (Iterator j = triggers.iterator(); j.hasNext();) { newOptionMap.put(j.next(), option); }  newPrefixes.addAll(option.getPrefixes()); } [CLASS] GroupImpl [METHOD] <init> [RETURN_TYPE] String,int,int,boolean)  List options String name String description final int minimum final int maximum final boolean required [VARIABLES] Set newPrefixes prefixes triggers boolean required SortedMap newOptionMap optionMap Iterator i j List anonymous newAnonymous options Option option String description name int maximum minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	100	100	1	add	
29	[BUG] [BUGGY] for (Iterator j = triggers.iterator(); j.hasNext();) { [FE] OptionException [CONTEXT] if (option instanceof Argument) { i.remove(); newAnonymous.add(option); } else { final Set triggers = option.getTriggers(); [BUGGY] for (Iterator j = triggers.iterator(); j.hasNext();) { [BUGGY] newOptionMap.put(j.next(), option); }  newPrefixes.addAll(option.getPrefixes()); } [CLASS] GroupImpl [METHOD] <init> [RETURN_TYPE] String,int,int,boolean)  List options String name String description final int minimum final int maximum final boolean required [VARIABLES] Set newPrefixes prefixes triggers boolean required SortedMap newOptionMap optionMap Iterator i j List anonymous newAnonymous options Option option String description name int maximum minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	102	102	1	replace	
30	[BUG] [BUGGY] [FE] OptionException [CONTEXT] if (option instanceof Argument) { i.remove(); newAnonymous.add(option); } else { final Set triggers = option.getTriggers(); [BUGGY] [BUGGY] for (Iterator j = triggers.iterator(); j.hasNext();) { newOptionMap.put(j.next(), option); }  newPrefixes.addAll(option.getPrefixes()); } [CLASS] GroupImpl [METHOD] <init> [RETURN_TYPE] String,int,int,boolean)  List options String name String description final int minimum final int maximum final boolean required [VARIABLES] Set newPrefixes prefixes triggers boolean required SortedMap newOptionMap optionMap Iterator i j List anonymous newAnonymous options Option option String description name int maximum minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	102	102	1	add	
31	[BUG] [BUGGY] newOptionMap.put(j.next(), option); [FE] OptionException [CONTEXT] if (option instanceof Argument) { i.remove(); newAnonymous.add(option); } else { final Set triggers = option.getTriggers(); for (Iterator j = triggers.iterator(); j.hasNext();) { [BUGGY] newOptionMap.put(j.next(), option); [BUGGY] }  newPrefixes.addAll(option.getPrefixes()); } [CLASS] GroupImpl [METHOD] <init> [RETURN_TYPE] String,int,int,boolean)  List options String name String description final int minimum final int maximum final boolean required [VARIABLES] Set newPrefixes prefixes triggers boolean required SortedMap newOptionMap optionMap Iterator i j List anonymous newAnonymous options Option option String description name int maximum minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	103	103	1	replace	
32	[BUG] [BUGGY] [FE] OptionException [CONTEXT] if (option instanceof Argument) { i.remove(); newAnonymous.add(option); } else { final Set triggers = option.getTriggers(); for (Iterator j = triggers.iterator(); j.hasNext();) { [BUGGY] [BUGGY] newOptionMap.put(j.next(), option); }  newPrefixes.addAll(option.getPrefixes()); } [CLASS] GroupImpl [METHOD] <init> [RETURN_TYPE] String,int,int,boolean)  List options String name String description final int minimum final int maximum final boolean required [VARIABLES] Set newPrefixes prefixes triggers boolean required SortedMap newOptionMap optionMap Iterator i j List anonymous newAnonymous options Option option String description name int maximum minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	103	103	1	add	
33	[BUG] [BUGGY] newPrefixes.addAll(option.getPrefixes()); [FE] OptionException [CONTEXT] i.remove(); newAnonymous.add(option); } else { final Set triggers = option.getTriggers(); for (Iterator j = triggers.iterator(); j.hasNext();) { newOptionMap.put(j.next(), option); }  [BUGGY] newPrefixes.addAll(option.getPrefixes()); [BUGGY] } [CLASS] GroupImpl [METHOD] <init> [RETURN_TYPE] String,int,int,boolean)  List options String name String description final int minimum final int maximum final boolean required [VARIABLES] Set newPrefixes prefixes triggers boolean required SortedMap newOptionMap optionMap Iterator i j List anonymous newAnonymous options Option option String description name int maximum minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	107	107	1	replace	
34	[BUG] [BUGGY] [FE] OptionException [CONTEXT] i.remove(); newAnonymous.add(option); } else { final Set triggers = option.getTriggers(); for (Iterator j = triggers.iterator(); j.hasNext();) { newOptionMap.put(j.next(), option); }  [BUGGY] [BUGGY] newPrefixes.addAll(option.getPrefixes()); } [CLASS] GroupImpl [METHOD] <init> [RETURN_TYPE] String,int,int,boolean)  List options String name String description final int minimum final int maximum final boolean required [VARIABLES] Set newPrefixes prefixes triggers boolean required SortedMap newOptionMap optionMap Iterator i j List anonymous newAnonymous options Option option String description name int maximum minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	107	107	1	add	
35	[BUG] [BUGGY] [FE] OptionException [CONTEXT] } else { final Set triggers = option.getTriggers(); for (Iterator j = triggers.iterator(); j.hasNext();) { newOptionMap.put(j.next(), option); }  newPrefixes.addAll(option.getPrefixes()); } [CLASS] GroupImpl [METHOD] <init> [RETURN_TYPE] String,int,int,boolean)  List options String name String description final int minimum final int maximum final boolean required [VARIABLES] Set newPrefixes prefixes triggers boolean required SortedMap newOptionMap optionMap Iterator i j List anonymous newAnonymous options Option option String description name int maximum minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	109	109	1	replace	
36	[BUG] [BUGGY] [FE] OptionException [CONTEXT] } else { final Set triggers = option.getTriggers(); for (Iterator j = triggers.iterator(); j.hasNext();) { newOptionMap.put(j.next(), option); }  newPrefixes.addAll(option.getPrefixes()); } [CLASS] GroupImpl [METHOD] <init> [RETURN_TYPE] String,int,int,boolean)  List options String name String description final int minimum final int maximum final boolean required [VARIABLES] Set newPrefixes prefixes triggers boolean required SortedMap newOptionMap optionMap Iterator i j List anonymous newAnonymous options Option option String description name int maximum minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	109	109	1	add	
37	[BUG] [BUGGY] this.anonymous = Collections.unmodifiableList(newAnonymous); [FE] OptionException [CONTEXT] for (Iterator j = triggers.iterator(); j.hasNext();) { newOptionMap.put(j.next(), option); }  newPrefixes.addAll(option.getPrefixes()); } } [BUGGY] this.anonymous = Collections.unmodifiableList(newAnonymous); [BUGGY] this.optionMap = Collections.unmodifiableSortedMap(newOptionMap); this.prefixes = Collections.unmodifiableSet(newPrefixes); } [CLASS] GroupImpl [METHOD] <init> [RETURN_TYPE] String,int,int,boolean)  List options String name String description final int minimum final int maximum final boolean required [VARIABLES] Set newPrefixes prefixes triggers boolean required SortedMap newOptionMap optionMap Iterator i j List anonymous newAnonymous options Option option String description name int maximum minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	111	111	1	replace	
38	[BUG] [BUGGY] [FE] OptionException [CONTEXT] for (Iterator j = triggers.iterator(); j.hasNext();) { newOptionMap.put(j.next(), option); }  newPrefixes.addAll(option.getPrefixes()); } } [BUGGY] [BUGGY] this.anonymous = Collections.unmodifiableList(newAnonymous); this.optionMap = Collections.unmodifiableSortedMap(newOptionMap); this.prefixes = Collections.unmodifiableSet(newPrefixes); } [CLASS] GroupImpl [METHOD] <init> [RETURN_TYPE] String,int,int,boolean)  List options String name String description final int minimum final int maximum final boolean required [VARIABLES] Set newPrefixes prefixes triggers boolean required SortedMap newOptionMap optionMap Iterator i j List anonymous newAnonymous options Option option String description name int maximum minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	111	111	1	add	
39	[BUG] [BUGGY] this.optionMap = Collections.unmodifiableSortedMap(newOptionMap); [FE] OptionException [CONTEXT] for (Iterator j = triggers.iterator(); j.hasNext();) { newOptionMap.put(j.next(), option); }  newPrefixes.addAll(option.getPrefixes()); } } this.anonymous = Collections.unmodifiableList(newAnonymous); [BUGGY] this.optionMap = Collections.unmodifiableSortedMap(newOptionMap); [BUGGY] this.prefixes = Collections.unmodifiableSet(newPrefixes); } [CLASS] GroupImpl [METHOD] <init> [RETURN_TYPE] String,int,int,boolean)  List options String name String description final int minimum final int maximum final boolean required [VARIABLES] Set newPrefixes prefixes triggers boolean required SortedMap newOptionMap optionMap Iterator i j List anonymous newAnonymous options Option option String description name int maximum minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	112	112	1	replace	
40	[BUG] [BUGGY] [FE] OptionException [CONTEXT] for (Iterator j = triggers.iterator(); j.hasNext();) { newOptionMap.put(j.next(), option); }  newPrefixes.addAll(option.getPrefixes()); } } this.anonymous = Collections.unmodifiableList(newAnonymous); [BUGGY] [BUGGY] this.optionMap = Collections.unmodifiableSortedMap(newOptionMap); this.prefixes = Collections.unmodifiableSet(newPrefixes); } [CLASS] GroupImpl [METHOD] <init> [RETURN_TYPE] String,int,int,boolean)  List options String name String description final int minimum final int maximum final boolean required [VARIABLES] Set newPrefixes prefixes triggers boolean required SortedMap newOptionMap optionMap Iterator i j List anonymous newAnonymous options Option option String description name int maximum minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	112	112	1	add	
41	[BUG] [BUGGY] this.prefixes = Collections.unmodifiableSet(newPrefixes); [FE] OptionException [CONTEXT] newOptionMap.put(j.next(), option); }  newPrefixes.addAll(option.getPrefixes()); } } this.anonymous = Collections.unmodifiableList(newAnonymous); this.optionMap = Collections.unmodifiableSortedMap(newOptionMap); [BUGGY] this.prefixes = Collections.unmodifiableSet(newPrefixes); [BUGGY] } [CLASS] GroupImpl [METHOD] <init> [RETURN_TYPE] String,int,int,boolean)  List options String name String description final int minimum final int maximum final boolean required [VARIABLES] Set newPrefixes prefixes triggers boolean required SortedMap newOptionMap optionMap Iterator i j List anonymous newAnonymous options Option option String description name int maximum minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	113	113	1	replace	
42	[BUG] [BUGGY] [FE] OptionException [CONTEXT] newOptionMap.put(j.next(), option); }  newPrefixes.addAll(option.getPrefixes()); } } this.anonymous = Collections.unmodifiableList(newAnonymous); this.optionMap = Collections.unmodifiableSortedMap(newOptionMap); [BUGGY] [BUGGY] this.prefixes = Collections.unmodifiableSet(newPrefixes); } [CLASS] GroupImpl [METHOD] <init> [RETURN_TYPE] String,int,int,boolean)  List options String name String description final int minimum final int maximum final boolean required [VARIABLES] Set newPrefixes prefixes triggers boolean required SortedMap newOptionMap optionMap Iterator i j List anonymous newAnonymous options Option option String description name int maximum minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	113	113	1	add	
43	[BUG] [BUGGY] } [FE] OptionException [CONTEXT] }  newPrefixes.addAll(option.getPrefixes()); } } this.anonymous = Collections.unmodifiableList(newAnonymous); this.optionMap = Collections.unmodifiableSortedMap(newOptionMap); this.prefixes = Collections.unmodifiableSet(newPrefixes); [BUGGY] } [BUGGY]  [CLASS] GroupImpl [METHOD] <init> [RETURN_TYPE] String,int,int,boolean)  List options String name String description final int minimum final int maximum final boolean required [VARIABLES] Set newPrefixes prefixes triggers boolean required SortedMap newOptionMap optionMap Iterator i j List anonymous newAnonymous options Option option String description name int maximum minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	114	114	1	replace	
44	[BUG] [BUGGY] [FE] OptionException [CONTEXT] }  newPrefixes.addAll(option.getPrefixes()); } } this.anonymous = Collections.unmodifiableList(newAnonymous); this.optionMap = Collections.unmodifiableSortedMap(newOptionMap); this.prefixes = Collections.unmodifiableSet(newPrefixes); [BUGGY] [BUGGY] } [CLASS] GroupImpl [METHOD] <init> [RETURN_TYPE] String,int,int,boolean)  List options String name String description final int minimum final int maximum final boolean required [VARIABLES] Set newPrefixes prefixes triggers boolean required SortedMap newOptionMap optionMap Iterator i j List anonymous newAnonymous options Option option String description name int maximum minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	114	114	1	add	
45	[BUG] [BUGGY] if (arg == null) { [FE] OptionException [CONTEXT] final String arg) { [BUGGY] if (arg == null) { [BUGGY] return false; }  if (optionMap.containsKey(arg)) { return true; }  final Map tailMap = optionMap.tailMap(arg); [CLASS] GroupImpl [METHOD] canProcess [RETURN_TYPE] boolean  WriteableCommandLine commandLine String arg [VARIABLES] Set newPrefixes prefixes triggers boolean SortedMap newOptionMap optionMap WriteableCommandLine commandLine Iterator iter List anonymous newAnonymous options Option option String arg description name Map tailMap int maximum minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	118	118	1	replace	
46	[BUG] [BUGGY] [FE] OptionException [CONTEXT] final String arg) { [BUGGY] [BUGGY] if (arg == null) { return false; }  if (optionMap.containsKey(arg)) { return true; }  final Map tailMap = optionMap.tailMap(arg); [CLASS] GroupImpl [METHOD] canProcess [RETURN_TYPE] boolean  WriteableCommandLine commandLine String arg [VARIABLES] Set newPrefixes prefixes triggers boolean SortedMap newOptionMap optionMap WriteableCommandLine commandLine Iterator iter List anonymous newAnonymous options Option option String arg description name Map tailMap int maximum minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	118	118	1	add	
47	[BUG] [BUGGY] if (optionMap.containsKey(arg)) { [FE] OptionException [CONTEXT] final String arg) { if (arg == null) { return false; }  [BUGGY] if (optionMap.containsKey(arg)) { [BUGGY] return true; }  final Map tailMap = optionMap.tailMap(arg);  for (final Iterator iter = tailMap.values().iterator(); iter.hasNext();) { final Option option = (Option) iter.next();  [CLASS] GroupImpl [METHOD] canProcess [RETURN_TYPE] boolean  WriteableCommandLine commandLine String arg [VARIABLES] Set newPrefixes prefixes triggers boolean SortedMap newOptionMap optionMap WriteableCommandLine commandLine Iterator iter List anonymous newAnonymous options Option option String arg description name Map tailMap int maximum minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	123	123	1	replace	
48	[BUG] [BUGGY] [FE] OptionException [CONTEXT] final String arg) { if (arg == null) { return false; }  [BUGGY] [BUGGY] if (optionMap.containsKey(arg)) { return true; }  final Map tailMap = optionMap.tailMap(arg);  for (final Iterator iter = tailMap.values().iterator(); iter.hasNext();) { final Option option = (Option) iter.next();  [CLASS] GroupImpl [METHOD] canProcess [RETURN_TYPE] boolean  WriteableCommandLine commandLine String arg [VARIABLES] Set newPrefixes prefixes triggers boolean SortedMap newOptionMap optionMap WriteableCommandLine commandLine Iterator iter List anonymous newAnonymous options Option option String arg description name Map tailMap int maximum minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	123	123	1	add	
49	[BUG] [BUGGY] return true; [FE] OptionException [CONTEXT] final String arg) { if (arg == null) { return false; }  if (optionMap.containsKey(arg)) { [BUGGY] return true; [BUGGY] }  final Map tailMap = optionMap.tailMap(arg);  for (final Iterator iter = tailMap.values().iterator(); iter.hasNext();) { final Option option = (Option) iter.next(); if (option.canProcess(commandLine, arg)) { [CLASS] GroupImpl [METHOD] canProcess [RETURN_TYPE] boolean  WriteableCommandLine commandLine String arg [VARIABLES] Set newPrefixes prefixes triggers boolean SortedMap newOptionMap optionMap WriteableCommandLine commandLine Iterator iter List anonymous newAnonymous options Option option String arg description name Map tailMap int maximum minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	124	124	1	replace	
50	[BUG] [BUGGY] [FE] OptionException [CONTEXT] final String arg) { if (arg == null) { return false; }  if (optionMap.containsKey(arg)) { [BUGGY] [BUGGY] return true; }  final Map tailMap = optionMap.tailMap(arg);  for (final Iterator iter = tailMap.values().iterator(); iter.hasNext();) { final Option option = (Option) iter.next(); if (option.canProcess(commandLine, arg)) { [CLASS] GroupImpl [METHOD] canProcess [RETURN_TYPE] boolean  WriteableCommandLine commandLine String arg [VARIABLES] Set newPrefixes prefixes triggers boolean SortedMap newOptionMap optionMap WriteableCommandLine commandLine Iterator iter List anonymous newAnonymous options Option option String arg description name Map tailMap int maximum minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	124	124	1	add	
51	[BUG] [BUGGY] final Map tailMap = optionMap.tailMap(arg); [FE] OptionException [CONTEXT] if (arg == null) { return false; }  if (optionMap.containsKey(arg)) { return true; }  [BUGGY] final Map tailMap = optionMap.tailMap(arg); [BUGGY]   for (final Iterator iter = tailMap.values().iterator(); iter.hasNext();) { final Option option = (Option) iter.next(); if (option.canProcess(commandLine, arg)) { return true; } }  [CLASS] GroupImpl [METHOD] canProcess [RETURN_TYPE] boolean  WriteableCommandLine commandLine String arg [VARIABLES] Set newPrefixes prefixes triggers boolean SortedMap newOptionMap optionMap WriteableCommandLine commandLine Iterator iter List anonymous newAnonymous options Option option String arg description name Map tailMap int maximum minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	128	128	1	replace	
52	[BUG] [BUGGY] [FE] OptionException [CONTEXT] if (arg == null) { return false; }  if (optionMap.containsKey(arg)) { return true; }  [BUGGY] [BUGGY] final Map tailMap = optionMap.tailMap(arg);  for (final Iterator iter = tailMap.values().iterator(); iter.hasNext();) { final Option option = (Option) iter.next(); if (option.canProcess(commandLine, arg)) { return true; } }  [CLASS] GroupImpl [METHOD] canProcess [RETURN_TYPE] boolean  WriteableCommandLine commandLine String arg [VARIABLES] Set newPrefixes prefixes triggers boolean SortedMap newOptionMap optionMap WriteableCommandLine commandLine Iterator iter List anonymous newAnonymous options Option option String arg description name Map tailMap int maximum minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	128	128	1	add	
53	[BUG] [BUGGY] for (final Iterator iter = tailMap.values().iterator(); iter.hasNext();) { [FE] OptionException [CONTEXT]  if (optionMap.containsKey(arg)) { return true; }  final Map tailMap = optionMap.tailMap(arg);  [BUGGY] for (final Iterator iter = tailMap.values().iterator(); iter.hasNext();) { [BUGGY] final Option option = (Option) iter.next(); if (option.canProcess(commandLine, arg)) { return true; } } if (looksLikeOption(commandLine, arg)) { return false; } [CLASS] GroupImpl [METHOD] canProcess [RETURN_TYPE] boolean  WriteableCommandLine commandLine String arg [VARIABLES] Set newPrefixes prefixes triggers boolean SortedMap newOptionMap optionMap WriteableCommandLine commandLine Iterator iter List anonymous newAnonymous options Option option String arg description name Map tailMap int maximum minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	131	131	1	replace	
54	[BUG] [BUGGY] [FE] OptionException [CONTEXT]  if (optionMap.containsKey(arg)) { return true; }  final Map tailMap = optionMap.tailMap(arg);  [BUGGY] [BUGGY] for (final Iterator iter = tailMap.values().iterator(); iter.hasNext();) { final Option option = (Option) iter.next(); if (option.canProcess(commandLine, arg)) { return true; } } if (looksLikeOption(commandLine, arg)) { return false; } [CLASS] GroupImpl [METHOD] canProcess [RETURN_TYPE] boolean  WriteableCommandLine commandLine String arg [VARIABLES] Set newPrefixes prefixes triggers boolean SortedMap newOptionMap optionMap WriteableCommandLine commandLine Iterator iter List anonymous newAnonymous options Option option String arg description name Map tailMap int maximum minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	131	131	1	add	
55	[BUG] [BUGGY] final Option option = (Option) iter.next(); [FE] OptionException [CONTEXT]  if (optionMap.containsKey(arg)) { return true; }  final Map tailMap = optionMap.tailMap(arg);  for (final Iterator iter = tailMap.values().iterator(); iter.hasNext();) { [BUGGY] final Option option = (Option) iter.next(); [BUGGY]  if (option.canProcess(commandLine, arg)) { return true; } } if (looksLikeOption(commandLine, arg)) { return false; }  [CLASS] GroupImpl [METHOD] canProcess [RETURN_TYPE] boolean  WriteableCommandLine commandLine String arg [VARIABLES] Set newPrefixes prefixes triggers boolean SortedMap newOptionMap optionMap WriteableCommandLine commandLine Iterator iter List anonymous newAnonymous options Option option String arg description name Map tailMap int maximum minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	132	132	1	replace	
56	[BUG] [BUGGY] [FE] OptionException [CONTEXT]  if (optionMap.containsKey(arg)) { return true; }  final Map tailMap = optionMap.tailMap(arg);  for (final Iterator iter = tailMap.values().iterator(); iter.hasNext();) { [BUGGY] [BUGGY] final Option option = (Option) iter.next(); if (option.canProcess(commandLine, arg)) { return true; } } if (looksLikeOption(commandLine, arg)) { return false; }  [CLASS] GroupImpl [METHOD] canProcess [RETURN_TYPE] boolean  WriteableCommandLine commandLine String arg [VARIABLES] Set newPrefixes prefixes triggers boolean SortedMap newOptionMap optionMap WriteableCommandLine commandLine Iterator iter List anonymous newAnonymous options Option option String arg description name Map tailMap int maximum minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	132	132	1	add	
57	[BUG] [BUGGY] if (option.canProcess(commandLine, arg)) { [FE] OptionException [CONTEXT] return true; }  final Map tailMap = optionMap.tailMap(arg);  for (final Iterator iter = tailMap.values().iterator(); iter.hasNext();) { final Option option = (Option) iter.next(); [BUGGY] if (option.canProcess(commandLine, arg)) { [BUGGY] return true; } } if (looksLikeOption(commandLine, arg)) { return false; }  if (anonymous.size() > 0) { [CLASS] GroupImpl [METHOD] canProcess [RETURN_TYPE] boolean  WriteableCommandLine commandLine String arg [VARIABLES] Set newPrefixes prefixes triggers boolean SortedMap newOptionMap optionMap WriteableCommandLine commandLine Iterator iter List anonymous newAnonymous options Option option String arg description name Map tailMap int maximum minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	134	134	1	replace	
58	[BUG] [BUGGY] [FE] OptionException [CONTEXT] return true; }  final Map tailMap = optionMap.tailMap(arg);  for (final Iterator iter = tailMap.values().iterator(); iter.hasNext();) { final Option option = (Option) iter.next(); [BUGGY] [BUGGY] if (option.canProcess(commandLine, arg)) { return true; } } if (looksLikeOption(commandLine, arg)) { return false; }  if (anonymous.size() > 0) { [CLASS] GroupImpl [METHOD] canProcess [RETURN_TYPE] boolean  WriteableCommandLine commandLine String arg [VARIABLES] Set newPrefixes prefixes triggers boolean SortedMap newOptionMap optionMap WriteableCommandLine commandLine Iterator iter List anonymous newAnonymous options Option option String arg description name Map tailMap int maximum minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	134	134	1	add	
59	[BUG] [BUGGY] } [FE] OptionException [CONTEXT]  final Map tailMap = optionMap.tailMap(arg);  for (final Iterator iter = tailMap.values().iterator(); iter.hasNext();) { final Option option = (Option) iter.next(); if (option.canProcess(commandLine, arg)) { return true; } [BUGGY] } [BUGGY]  if (looksLikeOption(commandLine, arg)) { return false; }  if (anonymous.size() > 0) { return true; }  [CLASS] GroupImpl [METHOD] canProcess [RETURN_TYPE] boolean  WriteableCommandLine commandLine String arg [VARIABLES] Set newPrefixes prefixes triggers boolean SortedMap newOptionMap optionMap WriteableCommandLine commandLine Iterator iter List anonymous newAnonymous options Option option String arg description name Map tailMap int maximum minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	137	137	1	replace	
60	[BUG] [BUGGY] [FE] OptionException [CONTEXT]  final Map tailMap = optionMap.tailMap(arg);  for (final Iterator iter = tailMap.values().iterator(); iter.hasNext();) { final Option option = (Option) iter.next(); if (option.canProcess(commandLine, arg)) { return true; } [BUGGY] [BUGGY] } if (looksLikeOption(commandLine, arg)) { return false; }  if (anonymous.size() > 0) { return true; }  [CLASS] GroupImpl [METHOD] canProcess [RETURN_TYPE] boolean  WriteableCommandLine commandLine String arg [VARIABLES] Set newPrefixes prefixes triggers boolean SortedMap newOptionMap optionMap WriteableCommandLine commandLine Iterator iter List anonymous newAnonymous options Option option String arg description name Map tailMap int maximum minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	137	137	1	add	
61	[BUG] [BUGGY] if (looksLikeOption(commandLine, arg)) { [FE] OptionException [CONTEXT]  for (final Iterator iter = tailMap.values().iterator(); iter.hasNext();) { final Option option = (Option) iter.next(); if (option.canProcess(commandLine, arg)) { return true; } } [BUGGY] if (looksLikeOption(commandLine, arg)) { [BUGGY] return false; }  if (anonymous.size() > 0) { return true; } return false; } [CLASS] GroupImpl [METHOD] canProcess [RETURN_TYPE] boolean  WriteableCommandLine commandLine String arg [VARIABLES] Set newPrefixes prefixes triggers boolean SortedMap newOptionMap optionMap WriteableCommandLine commandLine Iterator iter List anonymous newAnonymous options Option option String arg description name Map tailMap int maximum minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	139	139	1	replace	
62	[BUG] [BUGGY] [FE] OptionException [CONTEXT]  for (final Iterator iter = tailMap.values().iterator(); iter.hasNext();) { final Option option = (Option) iter.next(); if (option.canProcess(commandLine, arg)) { return true; } } [BUGGY] [BUGGY] if (looksLikeOption(commandLine, arg)) { return false; }  if (anonymous.size() > 0) { return true; } return false; } [CLASS] GroupImpl [METHOD] canProcess [RETURN_TYPE] boolean  WriteableCommandLine commandLine String arg [VARIABLES] Set newPrefixes prefixes triggers boolean SortedMap newOptionMap optionMap WriteableCommandLine commandLine Iterator iter List anonymous newAnonymous options Option option String arg description name Map tailMap int maximum minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	139	139	1	add	
63	[BUG] [BUGGY] return false; [FE] OptionException [CONTEXT]  for (final Iterator iter = tailMap.values().iterator(); iter.hasNext();) { final Option option = (Option) iter.next(); if (option.canProcess(commandLine, arg)) { return true; } } if (looksLikeOption(commandLine, arg)) { [BUGGY] return false; [BUGGY] }  if (anonymous.size() > 0) { return true; } return false; } [CLASS] GroupImpl [METHOD] canProcess [RETURN_TYPE] boolean  WriteableCommandLine commandLine String arg [VARIABLES] Set newPrefixes prefixes triggers boolean SortedMap newOptionMap optionMap WriteableCommandLine commandLine Iterator iter List anonymous newAnonymous options Option option String arg description name Map tailMap int maximum minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	140	140	1	replace	
64	[BUG] [BUGGY] [FE] OptionException [CONTEXT]  for (final Iterator iter = tailMap.values().iterator(); iter.hasNext();) { final Option option = (Option) iter.next(); if (option.canProcess(commandLine, arg)) { return true; } } if (looksLikeOption(commandLine, arg)) { [BUGGY] [BUGGY] return false; }  if (anonymous.size() > 0) { return true; } return false; } [CLASS] GroupImpl [METHOD] canProcess [RETURN_TYPE] boolean  WriteableCommandLine commandLine String arg [VARIABLES] Set newPrefixes prefixes triggers boolean SortedMap newOptionMap optionMap WriteableCommandLine commandLine Iterator iter List anonymous newAnonymous options Option option String arg description name Map tailMap int maximum minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	140	140	1	add	
65	[BUG] [BUGGY] return prefixes; [FE] OptionException [CONTEXT] public Set getPrefixes() { [BUGGY] return prefixes; [BUGGY] } [CLASS] GroupImpl [METHOD] getPrefixes [RETURN_TYPE] Set  [VARIABLES] List anonymous newAnonymous options Set newPrefixes prefixes triggers String arg description name boolean int maximum minimum SortedMap newOptionMap optionMap  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	152	152	1	replace	
66	[BUG] [BUGGY] [FE] OptionException [CONTEXT] public Set getPrefixes() { [BUGGY] [BUGGY] return prefixes; } [CLASS] GroupImpl [METHOD] getPrefixes [RETURN_TYPE] Set  [VARIABLES] List anonymous newAnonymous options Set newPrefixes prefixes triggers String arg description name boolean int maximum minimum SortedMap newOptionMap optionMap  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	152	152	1	add	
67	[BUG] [BUGGY] String previous = null; [FE] OptionException [CONTEXT] throws OptionException { [BUGGY] String previous = null; [BUGGY]   while (arguments.hasNext()) {  final String arg = (String) arguments.next();  if (arg == previous) {  arguments.previous(); [CLASS] GroupImpl [METHOD] process [RETURN_TYPE] void  WriteableCommandLine commandLine ListIterator arguments [VARIABLES] Set newPrefixes prefixes triggers boolean foundMemberOption Argument argument SortedMap newOptionMap optionMap WriteableCommandLine commandLine Iterator i Collection values List anonymous newAnonymous options Option opt option String arg description name previous ListIterator arguments int maximum minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	162	162	1	replace	
68	[BUG] [BUGGY] [FE] OptionException [CONTEXT] throws OptionException { [BUGGY] [BUGGY] String previous = null;  while (arguments.hasNext()) {  final String arg = (String) arguments.next();  if (arg == previous) {  arguments.previous(); [CLASS] GroupImpl [METHOD] process [RETURN_TYPE] void  WriteableCommandLine commandLine ListIterator arguments [VARIABLES] Set newPrefixes prefixes triggers boolean foundMemberOption Argument argument SortedMap newOptionMap optionMap WriteableCommandLine commandLine Iterator i Collection values List anonymous newAnonymous options Option opt option String arg description name previous ListIterator arguments int maximum minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	162	162	1	add	
69	[BUG] [BUGGY] while (arguments.hasNext()) { [FE] OptionException [CONTEXT] throws OptionException { String previous = null;  [BUGGY] while (arguments.hasNext()) { [BUGGY]  final String arg = (String) arguments.next();  if (arg == previous) {  arguments.previous(); break; } [CLASS] GroupImpl [METHOD] process [RETURN_TYPE] void  WriteableCommandLine commandLine ListIterator arguments [VARIABLES] Set newPrefixes prefixes triggers boolean foundMemberOption Argument argument SortedMap newOptionMap optionMap WriteableCommandLine commandLine Iterator i Collection values List anonymous newAnonymous options Option opt option String arg description name previous ListIterator arguments int maximum minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	165	165	1	replace	
70	[BUG] [BUGGY] [FE] OptionException [CONTEXT] throws OptionException { String previous = null;  [BUGGY] [BUGGY] while (arguments.hasNext()) {  final String arg = (String) arguments.next();  if (arg == previous) {  arguments.previous(); break; } [CLASS] GroupImpl [METHOD] process [RETURN_TYPE] void  WriteableCommandLine commandLine ListIterator arguments [VARIABLES] Set newPrefixes prefixes triggers boolean foundMemberOption Argument argument SortedMap newOptionMap optionMap WriteableCommandLine commandLine Iterator i Collection values List anonymous newAnonymous options Option opt option String arg description name previous ListIterator arguments int maximum minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	165	165	1	add	
71	[BUG] [BUGGY] final String arg = (String) arguments.next(); [FE] OptionException [CONTEXT] throws OptionException { String previous = null;  while (arguments.hasNext()) {  [BUGGY] final String arg = (String) arguments.next(); [BUGGY]   if (arg == previous) {  arguments.previous(); break; }   [CLASS] GroupImpl [METHOD] process [RETURN_TYPE] void  WriteableCommandLine commandLine ListIterator arguments [VARIABLES] Set newPrefixes prefixes triggers boolean foundMemberOption Argument argument SortedMap newOptionMap optionMap WriteableCommandLine commandLine Iterator i Collection values List anonymous newAnonymous options Option opt option String arg description name previous ListIterator arguments int maximum minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	167	167	1	replace	
72	[BUG] [BUGGY] [FE] OptionException [CONTEXT] throws OptionException { String previous = null;  while (arguments.hasNext()) {  [BUGGY] [BUGGY] final String arg = (String) arguments.next();  if (arg == previous) {  arguments.previous(); break; }   [CLASS] GroupImpl [METHOD] process [RETURN_TYPE] void  WriteableCommandLine commandLine ListIterator arguments [VARIABLES] Set newPrefixes prefixes triggers boolean foundMemberOption Argument argument SortedMap newOptionMap optionMap WriteableCommandLine commandLine Iterator i Collection values List anonymous newAnonymous options Option opt option String arg description name previous ListIterator arguments int maximum minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	167	167	1	add	
73	[BUG] [BUGGY] if (arg == previous) { [FE] OptionException [CONTEXT] throws OptionException { String previous = null;  while (arguments.hasNext()) {  final String arg = (String) arguments.next();  [BUGGY] if (arg == previous) { [BUGGY]  arguments.previous(); break; }  previous = arg; final Option opt = (Option) optionMap.get(arg); [CLASS] GroupImpl [METHOD] process [RETURN_TYPE] void  WriteableCommandLine commandLine ListIterator arguments [VARIABLES] Set newPrefixes prefixes triggers boolean foundMemberOption Argument argument SortedMap newOptionMap optionMap WriteableCommandLine commandLine Iterator i Collection values List anonymous newAnonymous options Option opt option String arg description name previous ListIterator arguments int maximum minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	170	170	1	replace	
74	[BUG] [BUGGY] [FE] OptionException [CONTEXT] throws OptionException { String previous = null;  while (arguments.hasNext()) {  final String arg = (String) arguments.next();  [BUGGY] [BUGGY] if (arg == previous) {  arguments.previous(); break; }  previous = arg; final Option opt = (Option) optionMap.get(arg); [CLASS] GroupImpl [METHOD] process [RETURN_TYPE] void  WriteableCommandLine commandLine ListIterator arguments [VARIABLES] Set newPrefixes prefixes triggers boolean foundMemberOption Argument argument SortedMap newOptionMap optionMap WriteableCommandLine commandLine Iterator i Collection values List anonymous newAnonymous options Option opt option String arg description name previous ListIterator arguments int maximum minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	170	170	1	add	
75	[BUG] [BUGGY] previous = arg; [FE] OptionException [CONTEXT]  if (arg == previous) {  arguments.previous(); break; }  [BUGGY] previous = arg; [BUGGY]  final Option opt = (Option) optionMap.get(arg);  if (opt != null) { arguments.previous(); opt.process(commandLine, arguments); }  else { [CLASS] GroupImpl [METHOD] process [RETURN_TYPE] void  WriteableCommandLine commandLine ListIterator arguments [VARIABLES] Set newPrefixes prefixes triggers boolean foundMemberOption Argument argument SortedMap newOptionMap optionMap WriteableCommandLine commandLine Iterator i Collection values List anonymous newAnonymous options Option opt option String arg description name previous ListIterator arguments int maximum minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	178	178	1	replace	
76	[BUG] [BUGGY] [FE] OptionException [CONTEXT]  if (arg == previous) {  arguments.previous(); break; }  [BUGGY] [BUGGY] previous = arg; final Option opt = (Option) optionMap.get(arg);  if (opt != null) { arguments.previous(); opt.process(commandLine, arguments); }  else { [CLASS] GroupImpl [METHOD] process [RETURN_TYPE] void  WriteableCommandLine commandLine ListIterator arguments [VARIABLES] Set newPrefixes prefixes triggers boolean foundMemberOption Argument argument SortedMap newOptionMap optionMap WriteableCommandLine commandLine Iterator i Collection values List anonymous newAnonymous options Option opt option String arg description name previous ListIterator arguments int maximum minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	178	178	1	add	
77	[BUG] [BUGGY] final Option opt = (Option) optionMap.get(arg); [FE] OptionException [CONTEXT] if (arg == previous) {  arguments.previous(); break; }  previous = arg; [BUGGY] final Option opt = (Option) optionMap.get(arg); [BUGGY]   if (opt != null) { arguments.previous(); opt.process(commandLine, arguments); }  else {   [CLASS] GroupImpl [METHOD] process [RETURN_TYPE] void  WriteableCommandLine commandLine ListIterator arguments [VARIABLES] Set newPrefixes prefixes triggers boolean foundMemberOption Argument argument SortedMap newOptionMap optionMap WriteableCommandLine commandLine Iterator i Collection values List anonymous newAnonymous options Option opt option String arg description name previous ListIterator arguments int maximum minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	180	180	1	replace	
78	[BUG] [BUGGY] [FE] OptionException [CONTEXT] if (arg == previous) {  arguments.previous(); break; }  previous = arg; [BUGGY] [BUGGY] final Option opt = (Option) optionMap.get(arg);  if (opt != null) { arguments.previous(); opt.process(commandLine, arguments); }  else {   [CLASS] GroupImpl [METHOD] process [RETURN_TYPE] void  WriteableCommandLine commandLine ListIterator arguments [VARIABLES] Set newPrefixes prefixes triggers boolean foundMemberOption Argument argument SortedMap newOptionMap optionMap WriteableCommandLine commandLine Iterator i Collection values List anonymous newAnonymous options Option opt option String arg description name previous ListIterator arguments int maximum minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	180	180	1	add	
79	[BUG] [BUGGY] if (opt != null) { [FE] OptionException [CONTEXT] break; }  previous = arg; final Option opt = (Option) optionMap.get(arg);  [BUGGY] if (opt != null) { [BUGGY] arguments.previous(); opt.process(commandLine, arguments); }  else {   if (looksLikeOption(commandLine, arg)) {  final Collection values = optionMap.tailMap(arg).values(); [CLASS] GroupImpl [METHOD] process [RETURN_TYPE] void  WriteableCommandLine commandLine ListIterator arguments [VARIABLES] Set newPrefixes prefixes triggers boolean foundMemberOption Argument argument SortedMap newOptionMap optionMap WriteableCommandLine commandLine Iterator i Collection values List anonymous newAnonymous options Option opt option String arg description name previous ListIterator arguments int maximum minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	183	183	1	replace	
80	[BUG] [BUGGY] [FE] OptionException [CONTEXT] break; }  previous = arg; final Option opt = (Option) optionMap.get(arg);  [BUGGY] [BUGGY] if (opt != null) { arguments.previous(); opt.process(commandLine, arguments); }  else {   if (looksLikeOption(commandLine, arg)) {  final Collection values = optionMap.tailMap(arg).values(); [CLASS] GroupImpl [METHOD] process [RETURN_TYPE] void  WriteableCommandLine commandLine ListIterator arguments [VARIABLES] Set newPrefixes prefixes triggers boolean foundMemberOption Argument argument SortedMap newOptionMap optionMap WriteableCommandLine commandLine Iterator i Collection values List anonymous newAnonymous options Option opt option String arg description name previous ListIterator arguments int maximum minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	183	183	1	add	
81	[BUG] [BUGGY] arguments.previous(); [FE] OptionException [CONTEXT] break; }  previous = arg; final Option opt = (Option) optionMap.get(arg);  if (opt != null) { [BUGGY] arguments.previous(); [BUGGY] opt.process(commandLine, arguments); }  else {   if (looksLikeOption(commandLine, arg)) {  final Collection values = optionMap.tailMap(arg).values();  [CLASS] GroupImpl [METHOD] process [RETURN_TYPE] void  WriteableCommandLine commandLine ListIterator arguments [VARIABLES] Set newPrefixes prefixes triggers boolean foundMemberOption Argument argument SortedMap newOptionMap optionMap WriteableCommandLine commandLine Iterator i Collection values List anonymous newAnonymous options Option opt option String arg description name previous ListIterator arguments int maximum minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	184	184	1	replace	
82	[BUG] [BUGGY] [FE] OptionException [CONTEXT] break; }  previous = arg; final Option opt = (Option) optionMap.get(arg);  if (opt != null) { [BUGGY] [BUGGY] arguments.previous(); opt.process(commandLine, arguments); }  else {   if (looksLikeOption(commandLine, arg)) {  final Collection values = optionMap.tailMap(arg).values();  [CLASS] GroupImpl [METHOD] process [RETURN_TYPE] void  WriteableCommandLine commandLine ListIterator arguments [VARIABLES] Set newPrefixes prefixes triggers boolean foundMemberOption Argument argument SortedMap newOptionMap optionMap WriteableCommandLine commandLine Iterator i Collection values List anonymous newAnonymous options Option opt option String arg description name previous ListIterator arguments int maximum minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	184	184	1	add	
83	[BUG] [BUGGY] opt.process(commandLine, arguments); [FE] OptionException [CONTEXT] }  previous = arg; final Option opt = (Option) optionMap.get(arg);  if (opt != null) { arguments.previous(); [BUGGY] opt.process(commandLine, arguments); [BUGGY] }  else {   if (looksLikeOption(commandLine, arg)) {  final Collection values = optionMap.tailMap(arg).values(); boolean foundMemberOption = false; [CLASS] GroupImpl [METHOD] process [RETURN_TYPE] void  WriteableCommandLine commandLine ListIterator arguments [VARIABLES] Set newPrefixes prefixes triggers boolean foundMemberOption Argument argument SortedMap newOptionMap optionMap WriteableCommandLine commandLine Iterator i Collection values List anonymous newAnonymous options Option opt option String arg description name previous ListIterator arguments int maximum minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	185	185	1	replace	
84	[BUG] [BUGGY] [FE] OptionException [CONTEXT] }  previous = arg; final Option opt = (Option) optionMap.get(arg);  if (opt != null) { arguments.previous(); [BUGGY] [BUGGY] opt.process(commandLine, arguments); }  else {   if (looksLikeOption(commandLine, arg)) {  final Collection values = optionMap.tailMap(arg).values(); boolean foundMemberOption = false; [CLASS] GroupImpl [METHOD] process [RETURN_TYPE] void  WriteableCommandLine commandLine ListIterator arguments [VARIABLES] Set newPrefixes prefixes triggers boolean foundMemberOption Argument argument SortedMap newOptionMap optionMap WriteableCommandLine commandLine Iterator i Collection values List anonymous newAnonymous options Option opt option String arg description name previous ListIterator arguments int maximum minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	185	185	1	add	
85	[BUG] [BUGGY] if (looksLikeOption(commandLine, arg)) { [FE] OptionException [CONTEXT] if (opt != null) { arguments.previous(); opt.process(commandLine, arguments); }  else {   [BUGGY] if (looksLikeOption(commandLine, arg)) { [BUGGY]  final Collection values = optionMap.tailMap(arg).values(); boolean foundMemberOption = false; for (Iterator i = values.iterator(); i.hasNext() && !foundMemberOption;) { final Option option = (Option) i.next(); if (option.canProcess(commandLine, arg)) { foundMemberOption = true; [CLASS] GroupImpl [METHOD] process [RETURN_TYPE] void  WriteableCommandLine commandLine ListIterator arguments [VARIABLES] Set newPrefixes prefixes triggers boolean foundMemberOption Argument argument SortedMap newOptionMap optionMap WriteableCommandLine commandLine Iterator i Collection values List anonymous newAnonymous options Option opt option String arg description name previous ListIterator arguments int maximum minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	191	191	1	replace	
86	[BUG] [BUGGY] [FE] OptionException [CONTEXT] if (opt != null) { arguments.previous(); opt.process(commandLine, arguments); }  else {   [BUGGY] [BUGGY] if (looksLikeOption(commandLine, arg)) {  final Collection values = optionMap.tailMap(arg).values(); boolean foundMemberOption = false; for (Iterator i = values.iterator(); i.hasNext() && !foundMemberOption;) { final Option option = (Option) i.next(); if (option.canProcess(commandLine, arg)) { foundMemberOption = true; [CLASS] GroupImpl [METHOD] process [RETURN_TYPE] void  WriteableCommandLine commandLine ListIterator arguments [VARIABLES] Set newPrefixes prefixes triggers boolean foundMemberOption Argument argument SortedMap newOptionMap optionMap WriteableCommandLine commandLine Iterator i Collection values List anonymous newAnonymous options Option opt option String arg description name previous ListIterator arguments int maximum minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	191	191	1	add	
87	[BUG] [BUGGY] final Collection values = optionMap.tailMap(arg).values(); [FE] OptionException [CONTEXT] if (opt != null) { arguments.previous(); opt.process(commandLine, arguments); }  else {   if (looksLikeOption(commandLine, arg)) {  [BUGGY] final Collection values = optionMap.tailMap(arg).values(); [BUGGY]  boolean foundMemberOption = false; for (Iterator i = values.iterator(); i.hasNext() && !foundMemberOption;) { final Option option = (Option) i.next(); if (option.canProcess(commandLine, arg)) { foundMemberOption = true; arguments.previous(); option.process(commandLine, arguments); [CLASS] GroupImpl [METHOD] process [RETURN_TYPE] void  WriteableCommandLine commandLine ListIterator arguments [VARIABLES] Set newPrefixes prefixes triggers boolean foundMemberOption Argument argument SortedMap newOptionMap optionMap WriteableCommandLine commandLine Iterator i Collection values List anonymous newAnonymous options Option opt option String arg description name previous ListIterator arguments int maximum minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	193	193	1	replace	
88	[BUG] [BUGGY] [FE] OptionException [CONTEXT] if (opt != null) { arguments.previous(); opt.process(commandLine, arguments); }  else {   if (looksLikeOption(commandLine, arg)) {  [BUGGY] [BUGGY] final Collection values = optionMap.tailMap(arg).values(); boolean foundMemberOption = false; for (Iterator i = values.iterator(); i.hasNext() && !foundMemberOption;) { final Option option = (Option) i.next(); if (option.canProcess(commandLine, arg)) { foundMemberOption = true; arguments.previous(); option.process(commandLine, arguments); [CLASS] GroupImpl [METHOD] process [RETURN_TYPE] void  WriteableCommandLine commandLine ListIterator arguments [VARIABLES] Set newPrefixes prefixes triggers boolean foundMemberOption Argument argument SortedMap newOptionMap optionMap WriteableCommandLine commandLine Iterator i Collection values List anonymous newAnonymous options Option opt option String arg description name previous ListIterator arguments int maximum minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	193	193	1	add	
89	[BUG] [BUGGY] boolean foundMemberOption = false; [FE] OptionException [CONTEXT] opt.process(commandLine, arguments); }  else {   if (looksLikeOption(commandLine, arg)) {  final Collection values = optionMap.tailMap(arg).values(); [BUGGY] boolean foundMemberOption = false; [BUGGY]  for (Iterator i = values.iterator(); i.hasNext() && !foundMemberOption;) { final Option option = (Option) i.next(); if (option.canProcess(commandLine, arg)) { foundMemberOption = true; arguments.previous(); option.process(commandLine, arguments); } } [CLASS] GroupImpl [METHOD] process [RETURN_TYPE] void  WriteableCommandLine commandLine ListIterator arguments [VARIABLES] Set newPrefixes prefixes triggers boolean foundMemberOption Argument argument SortedMap newOptionMap optionMap WriteableCommandLine commandLine Iterator i Collection values List anonymous newAnonymous options Option opt option String arg description name previous ListIterator arguments int maximum minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	195	195	1	replace	
90	[BUG] [BUGGY] [FE] OptionException [CONTEXT] opt.process(commandLine, arguments); }  else {   if (looksLikeOption(commandLine, arg)) {  final Collection values = optionMap.tailMap(arg).values(); [BUGGY] [BUGGY] boolean foundMemberOption = false; for (Iterator i = values.iterator(); i.hasNext() && !foundMemberOption;) { final Option option = (Option) i.next(); if (option.canProcess(commandLine, arg)) { foundMemberOption = true; arguments.previous(); option.process(commandLine, arguments); } } [CLASS] GroupImpl [METHOD] process [RETURN_TYPE] void  WriteableCommandLine commandLine ListIterator arguments [VARIABLES] Set newPrefixes prefixes triggers boolean foundMemberOption Argument argument SortedMap newOptionMap optionMap WriteableCommandLine commandLine Iterator i Collection values List anonymous newAnonymous options Option opt option String arg description name previous ListIterator arguments int maximum minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	195	195	1	add	
91	[BUG] [BUGGY] for (Iterator i = values.iterator(); i.hasNext() && !foundMemberOption;) { [FE] OptionException [CONTEXT]  else {   if (looksLikeOption(commandLine, arg)) {  final Collection values = optionMap.tailMap(arg).values(); boolean foundMemberOption = false; [BUGGY] for (Iterator i = values.iterator(); i.hasNext() && !foundMemberOption;) { [BUGGY] final Option option = (Option) i.next(); if (option.canProcess(commandLine, arg)) { foundMemberOption = true; arguments.previous(); option.process(commandLine, arguments); } }   [CLASS] GroupImpl [METHOD] process [RETURN_TYPE] void  WriteableCommandLine commandLine ListIterator arguments [VARIABLES] Set newPrefixes prefixes triggers boolean foundMemberOption Argument argument SortedMap newOptionMap optionMap WriteableCommandLine commandLine Iterator i Collection values List anonymous newAnonymous options Option opt option String arg description name previous ListIterator arguments int maximum minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	197	197	1	replace	
92	[BUG] [BUGGY] [FE] OptionException [CONTEXT]  else {   if (looksLikeOption(commandLine, arg)) {  final Collection values = optionMap.tailMap(arg).values(); boolean foundMemberOption = false; [BUGGY] [BUGGY] for (Iterator i = values.iterator(); i.hasNext() && !foundMemberOption;) { final Option option = (Option) i.next(); if (option.canProcess(commandLine, arg)) { foundMemberOption = true; arguments.previous(); option.process(commandLine, arguments); } }   [CLASS] GroupImpl [METHOD] process [RETURN_TYPE] void  WriteableCommandLine commandLine ListIterator arguments [VARIABLES] Set newPrefixes prefixes triggers boolean foundMemberOption Argument argument SortedMap newOptionMap optionMap WriteableCommandLine commandLine Iterator i Collection values List anonymous newAnonymous options Option opt option String arg description name previous ListIterator arguments int maximum minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	197	197	1	add	
93	[BUG] [BUGGY] final Option option = (Option) i.next(); [FE] OptionException [CONTEXT] else {   if (looksLikeOption(commandLine, arg)) {  final Collection values = optionMap.tailMap(arg).values(); boolean foundMemberOption = false; for (Iterator i = values.iterator(); i.hasNext() && !foundMemberOption;) { [BUGGY] final Option option = (Option) i.next(); [BUGGY]  if (option.canProcess(commandLine, arg)) { foundMemberOption = true; arguments.previous(); option.process(commandLine, arguments); } }  if (!foundMemberOption) { [CLASS] GroupImpl [METHOD] process [RETURN_TYPE] void  WriteableCommandLine commandLine ListIterator arguments [VARIABLES] Set newPrefixes prefixes triggers boolean foundMemberOption Argument argument SortedMap newOptionMap optionMap WriteableCommandLine commandLine Iterator i Collection values List anonymous newAnonymous options Option opt option String arg description name previous ListIterator arguments int maximum minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	198	198	1	replace	
94	[BUG] [BUGGY] [FE] OptionException [CONTEXT] else {   if (looksLikeOption(commandLine, arg)) {  final Collection values = optionMap.tailMap(arg).values(); boolean foundMemberOption = false; for (Iterator i = values.iterator(); i.hasNext() && !foundMemberOption;) { [BUGGY] [BUGGY] final Option option = (Option) i.next(); if (option.canProcess(commandLine, arg)) { foundMemberOption = true; arguments.previous(); option.process(commandLine, arguments); } }  if (!foundMemberOption) { [CLASS] GroupImpl [METHOD] process [RETURN_TYPE] void  WriteableCommandLine commandLine ListIterator arguments [VARIABLES] Set newPrefixes prefixes triggers boolean foundMemberOption Argument argument SortedMap newOptionMap optionMap WriteableCommandLine commandLine Iterator i Collection values List anonymous newAnonymous options Option opt option String arg description name previous ListIterator arguments int maximum minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	198	198	1	add	
95	[BUG] [BUGGY] if (option.canProcess(commandLine, arg)) { [FE] OptionException [CONTEXT]  if (looksLikeOption(commandLine, arg)) {  final Collection values = optionMap.tailMap(arg).values(); boolean foundMemberOption = false; for (Iterator i = values.iterator(); i.hasNext() && !foundMemberOption;) { final Option option = (Option) i.next(); [BUGGY] if (option.canProcess(commandLine, arg)) { [BUGGY] foundMemberOption = true; arguments.previous(); option.process(commandLine, arguments); } }  if (!foundMemberOption) { arguments.previous();  [CLASS] GroupImpl [METHOD] process [RETURN_TYPE] void  WriteableCommandLine commandLine ListIterator arguments [VARIABLES] Set newPrefixes prefixes triggers boolean foundMemberOption Argument argument SortedMap newOptionMap optionMap WriteableCommandLine commandLine Iterator i Collection values List anonymous newAnonymous options Option opt option String arg description name previous ListIterator arguments int maximum minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	200	200	1	replace	
96	[BUG] [BUGGY] [FE] OptionException [CONTEXT]  if (looksLikeOption(commandLine, arg)) {  final Collection values = optionMap.tailMap(arg).values(); boolean foundMemberOption = false; for (Iterator i = values.iterator(); i.hasNext() && !foundMemberOption;) { final Option option = (Option) i.next(); [BUGGY] [BUGGY] if (option.canProcess(commandLine, arg)) { foundMemberOption = true; arguments.previous(); option.process(commandLine, arguments); } }  if (!foundMemberOption) { arguments.previous();  [CLASS] GroupImpl [METHOD] process [RETURN_TYPE] void  WriteableCommandLine commandLine ListIterator arguments [VARIABLES] Set newPrefixes prefixes triggers boolean foundMemberOption Argument argument SortedMap newOptionMap optionMap WriteableCommandLine commandLine Iterator i Collection values List anonymous newAnonymous options Option opt option String arg description name previous ListIterator arguments int maximum minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	200	200	1	add	
97	[BUG] [BUGGY] } [FE] OptionException [CONTEXT] boolean foundMemberOption = false; for (Iterator i = values.iterator(); i.hasNext() && !foundMemberOption;) { final Option option = (Option) i.next(); if (option.canProcess(commandLine, arg)) { foundMemberOption = true; arguments.previous(); option.process(commandLine, arguments); } [BUGGY] } [BUGGY]   if (!foundMemberOption) { arguments.previous(); return; } } // [END argument may be anonymous   [CLASS] GroupImpl [METHOD] process [RETURN_TYPE] void  WriteableCommandLine commandLine ListIterator arguments [VARIABLES] Set newPrefixes prefixes triggers boolean foundMemberOption Argument argument SortedMap newOptionMap optionMap WriteableCommandLine commandLine Iterator i Collection values List anonymous newAnonymous options Option opt option String arg description name previous ListIterator arguments int maximum minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	205	205	1	replace	
98	[BUG] [BUGGY] [FE] OptionException [CONTEXT] boolean foundMemberOption = false; for (Iterator i = values.iterator(); i.hasNext() && !foundMemberOption;) { final Option option = (Option) i.next(); if (option.canProcess(commandLine, arg)) { foundMemberOption = true; arguments.previous(); option.process(commandLine, arguments); } [BUGGY] [BUGGY] }  if (!foundMemberOption) { arguments.previous(); return; } } // [END argument may be anonymous   [CLASS] GroupImpl [METHOD] process [RETURN_TYPE] void  WriteableCommandLine commandLine ListIterator arguments [VARIABLES] Set newPrefixes prefixes triggers boolean foundMemberOption Argument argument SortedMap newOptionMap optionMap WriteableCommandLine commandLine Iterator i Collection values List anonymous newAnonymous options Option opt option String arg description name previous ListIterator arguments int maximum minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	205	205	1	add	
99	[BUG] [BUGGY] if (!foundMemberOption) { [FE] OptionException [CONTEXT] final Option option = (Option) i.next(); if (option.canProcess(commandLine, arg)) { foundMemberOption = true; arguments.previous(); option.process(commandLine, arguments); } }  [BUGGY] if (!foundMemberOption) { [BUGGY] arguments.previous(); return; } } // [END argument may be anonymous  else {  arguments.previous(); [CLASS] GroupImpl [METHOD] process [RETURN_TYPE] void  WriteableCommandLine commandLine ListIterator arguments [VARIABLES] Set newPrefixes prefixes triggers boolean foundMemberOption Argument argument SortedMap newOptionMap optionMap WriteableCommandLine commandLine Iterator i Collection values List anonymous newAnonymous options Option opt option String arg description name previous ListIterator arguments int maximum minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	208	208	1	replace	
100	[BUG] [BUGGY] [FE] OptionException [CONTEXT] final Option option = (Option) i.next(); if (option.canProcess(commandLine, arg)) { foundMemberOption = true; arguments.previous(); option.process(commandLine, arguments); } }  [BUGGY] [BUGGY] if (!foundMemberOption) { arguments.previous(); return; } } // [END argument may be anonymous  else {  arguments.previous(); [CLASS] GroupImpl [METHOD] process [RETURN_TYPE] void  WriteableCommandLine commandLine ListIterator arguments [VARIABLES] Set newPrefixes prefixes triggers boolean foundMemberOption Argument argument SortedMap newOptionMap optionMap WriteableCommandLine commandLine Iterator i Collection values List anonymous newAnonymous options Option opt option String arg description name previous ListIterator arguments int maximum minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	208	208	1	add	
