bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  newPrefixes.addAll(option.getPrefixes(),  minimum);  [CE]  illegal  start  of  expression  [FE]          OptionException    [CONTEXT]    i.remove();  newAnonymous.add(option);  }  else  {  final  Set  triggers  =  option.getTriggers();  for  (Iterator  j  =  triggers.iterator();  j.hasNext();)  {  newOptionMap.put(j.next(),  option);  }      [BUGGY]  newPrefixes.addAll(option.getPrefixes(),  minimum);  [BUGGY]    }  [CLASS]  GroupImpl  [METHOD]  <init>  [RETURN_TYPE]  String,int,int,boolean)  List  options  String  name  String  description  final  int  minimum  final  int  maximum  final  boolean  required  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  required  SortedMap  newOptionMap  optionMap  Iterator  i  j  List  anonymous  newAnonymous  options  Option  option  String  description  name  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	107	107	1	replace	newPrefixes.addAll(option.getPrefixes(),  minimum);	  newPrefixes.addAll(option.getPrefixes(),    options);    	non-compiled	[CE]  illegal  start  of  expression	2	None	replace
2	[BUG]  [BUGGY]  newPrefixes.addAll(option.getPrefixes(),  options,  required);  [CE]  illegal  start  of  expression  [FE]            OptionException    [CONTEXT]    i.remove();  newAnonymous.add(option);  }  else  {  final  Set  triggers  =  option.getTriggers();  for  (Iterator  j  =  triggers.iterator();  j.hasNext();)  {  newOptionMap.put(j.next(),  option);  }      [BUGGY]  newPrefixes.addAll(option.getPrefixes(),  options,  required);  [BUGGY]    }  [CLASS]  GroupImpl  [METHOD]  <init>  [RETURN_TYPE]  String,int,int,boolean)  List  options  String  name  String  description  final  int  minimum  final  int  maximum  final  boolean  required  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  required  SortedMap  newOptionMap  optionMap  Iterator  i  j  List  anonymous  newAnonymous  options  Option  option  String  description  name  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	107	107	1	replace	newPrefixes.addAll(option.getPrefixes(),  options,  required);	  newPrefixes.addAll(option.getPrefixes(),    options);    	non-compiled	[CE]  illegal  start  of  expression	2	None	replace
3	[BUG]  [BUGGY]  newPrefixes.addAll(option.getPrefixes(),  required);  [CE]  illegal  start  of  expression  [FE]              OptionException    [CONTEXT]    i.remove();  newAnonymous.add(option);  }  else  {  final  Set  triggers  =  option.getTriggers();  for  (Iterator  j  =  triggers.iterator();  j.hasNext();)  {  newOptionMap.put(j.next(),  option);  }      [BUGGY]  newPrefixes.addAll(option.getPrefixes(),  required);  [BUGGY]    }  [CLASS]  GroupImpl  [METHOD]  <init>  [RETURN_TYPE]  String,int,int,boolean)  List  options  String  name  String  description  final  int  minimum  final  int  maximum  final  boolean  required  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  required  SortedMap  newOptionMap  optionMap  Iterator  i  j  List  anonymous  newAnonymous  options  Option  option  String  description  name  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	107	107	1	replace	newPrefixes.addAll(option.getPrefixes(),  required);	  newPrefixes.addAll(option.getPrefixes(),    options);    	non-compiled	[CE]  illegal  start  of  expression	2	None	replace
4	[BUG]  [BUGGY]  if(required)  {  i.remove();  newAnonymous.addAll(option.getPrefixes());  }  [CE]  illegal  start  of  expression  [FE]          OptionException    [CONTEXT]    i.remove();  newAnonymous.add(option);  }  else  {  final  Set  triggers  =  option.getTriggers();  for  (Iterator  j  =  triggers.iterator();  j.hasNext();)  {  newOptionMap.put(j.next(),  option);  }      [BUGGY]  if(required)  {  i.remove();  newAnonymous.addAll(option.getPrefixes());  }  [BUGGY]    newPrefixes.addAll(option.getPrefixes());  }  [CLASS]  GroupImpl  [METHOD]  <init>  [RETURN_TYPE]  String,int,int,boolean)  List  options  String  name  String  description  final  int  minimum  final  int  maximum  final  boolean  required  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  required  SortedMap  newOptionMap  optionMap  Iterator  i  j  List  anonymous  newAnonymous  options  Option  option  String  description  name  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	107	107	1	replace	if(required)  {  i.remove();  newAnonymous.addAll(option.getPrefixes());  }	      i.remove();    newAnonymous.addAll(option.getPrefixes());    	non-compiled	[CE]  illegal  start  of  expression	6	None	replace
5	[BUG]  [BUGGY]  if(!required)  {  i.remove();  newAnonymous.addAll(option.getPrefixes());  }  [CE]  illegal  start  of  expression  [FE]            OptionException    [CONTEXT]    i.remove();  newAnonymous.add(option);  }  else  {  final  Set  triggers  =  option.getTriggers();  for  (Iterator  j  =  triggers.iterator();  j.hasNext();)  {  newOptionMap.put(j.next(),  option);  }      [BUGGY]  if(!required)  {  i.remove();  newAnonymous.addAll(option.getPrefixes());  }  [BUGGY]    newPrefixes.addAll(option.getPrefixes());  }  [CLASS]  GroupImpl  [METHOD]  <init>  [RETURN_TYPE]  String,int,int,boolean)  List  options  String  name  String  description  final  int  minimum  final  int  maximum  final  boolean  required  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  required  SortedMap  newOptionMap  optionMap  Iterator  i  j  List  anonymous  newAnonymous  options  Option  option  String  description  name  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	107	107	1	replace	if(!required)  {  i.remove();  newAnonymous.addAll(option.getPrefixes());  }	      i.remove();    newAnonymous.addAll(option.getPrefixes());    	non-compiled	[CE]  illegal  start  of  expression	6	None	replace
6	[BUG]  [BUGGY]  if(required)  {  newAnonymous.addAll(option.getPrefixes());  }  [CE]  illegal  start  of  expression  [FE]        OptionException    [CONTEXT]    i.remove();  newAnonymous.add(option);  }  else  {  final  Set  triggers  =  option.getTriggers();  for  (Iterator  j  =  triggers.iterator();  j.hasNext();)  {  newOptionMap.put(j.next(),  option);  }      [BUGGY]  if(required)  {  newAnonymous.addAll(option.getPrefixes());  }  [BUGGY]    newPrefixes.addAll(option.getPrefixes());  }  [CLASS]  GroupImpl  [METHOD]  <init>  [RETURN_TYPE]  String,int,int,boolean)  List  options  String  name  String  description  final  int  minimum  final  int  maximum  final  boolean  required  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  required  SortedMap  newOptionMap  optionMap  Iterator  i  j  List  anonymous  newAnonymous  options  Option  option  String  description  name  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	107	107	1	replace	if(required)  {  newAnonymous.addAll(option.getPrefixes());  }	      newAnonymous.addAll(option.getPrefixes());    	non-compiled	[CE]  illegal  start  of  expression	5	None	replace
7	[BUG]  [BUGGY]  newAnonymous.addAll(option.getPrefixes(),  options);  [CE]  illegal  start  of  expression  [FE]          OptionException    [CONTEXT]    i.remove();  newAnonymous.add(option);  }  else  {  final  Set  triggers  =  option.getTriggers();  for  (Iterator  j  =  triggers.iterator();  j.hasNext();)  {  newOptionMap.put(j.next(),  option);  }      [BUGGY]  newAnonymous.addAll(option.getPrefixes(),  options);  [BUGGY]    newPrefixes.addAll(option.getPrefixes());  }  [CLASS]  GroupImpl  [METHOD]  <init>  [RETURN_TYPE]  String,int,int,boolean)  List  options  String  name  String  description  final  int  minimum  final  int  maximum  final  boolean  required  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  required  SortedMap  newOptionMap  optionMap  Iterator  i  j  List  anonymous  newAnonymous  options  Option  option  String  description  name  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	107	107	1	replace	newAnonymous.addAll(option.getPrefixes(),  options);	      newAnonymous.addAll(option.getPrefixes());    	non-compiled	[CE]  illegal  start  of  expression	5	None	replace
8	[BUG]  [BUGGY]  newAnonymous.addAll(option.getPrefixes(),  minimum);  [CE]  illegal  start  of  expression  [FE]            OptionException    [CONTEXT]    i.remove();  newAnonymous.add(option);  }  else  {  final  Set  triggers  =  option.getTriggers();  for  (Iterator  j  =  triggers.iterator();  j.hasNext();)  {  newOptionMap.put(j.next(),  option);  }      [BUGGY]  newAnonymous.addAll(option.getPrefixes(),  minimum);  [BUGGY]    newPrefixes.addAll(option.getPrefixes());  }  [CLASS]  GroupImpl  [METHOD]  <init>  [RETURN_TYPE]  String,int,int,boolean)  List  options  String  name  String  description  final  int  minimum  final  int  maximum  final  boolean  required  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  required  SortedMap  newOptionMap  optionMap  Iterator  i  j  List  anonymous  newAnonymous  options  Option  option  String  description  name  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	107	107	1	replace	newAnonymous.addAll(option.getPrefixes(),  minimum);	      newAnonymous.addAll(option.getPrefixes());    	non-compiled	[CE]  illegal  start  of  expression	5	None	replace
9	[BUG]  [BUGGY]  Option  option  =  options.get(i);  [CE]  illegal  start  of  expression  [FE]            OptionException    [CONTEXT]    i.remove();  newAnonymous.add(option);  }  else  {  final  Set  triggers  =  option.getTriggers();  for  (Iterator  j  =  triggers.iterator();  j.hasNext();)  {  newOptionMap.put(j.next(),  option);  }      [BUGGY]  Option  option  =  options.get(i);  [BUGGY]    newPrefixes.addAll(option.getPrefixes());  }  [CLASS]  GroupImpl  [METHOD]  <init>  [RETURN_TYPE]  String,int,int,boolean)  List  options  String  name  String  description  final  int  minimum  final  int  maximum  final  boolean  required  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  required  SortedMap  newOptionMap  optionMap  Iterator  i  j  List  anonymous  newAnonymous  options  Option  option  String  description  name  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	107	107	1	replace	Option  option  =  options.get(i);	      Option    option    =    optionMap.get(i);    	non-compiled	[CE]  illegal  start  of  expression	12	None	replace
10	[BUG]  [BUGGY]  Option  option  =  optionMap.get(j);  [CE]  illegal  start  of  expression  [FE]              OptionException    [CONTEXT]    i.remove();  newAnonymous.add(option);  }  else  {  final  Set  triggers  =  option.getTriggers();  for  (Iterator  j  =  triggers.iterator();  j.hasNext();)  {  newOptionMap.put(j.next(),  option);  }      [BUGGY]  Option  option  =  optionMap.get(j);  [BUGGY]    newPrefixes.addAll(option.getPrefixes());  }  [CLASS]  GroupImpl  [METHOD]  <init>  [RETURN_TYPE]  String,int,int,boolean)  List  options  String  name  String  description  final  int  minimum  final  int  maximum  final  boolean  required  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  required  SortedMap  newOptionMap  optionMap  Iterator  i  j  List  anonymous  newAnonymous  options  Option  option  String  description  name  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	107	107	1	replace	Option  option  =  optionMap.get(j);	      Option    option    =    optionMap.get(i);    	non-compiled	[CE]  illegal  start  of  expression	12	None	replace
11	[BUG]  [BUGGY]  Option  option  =  optionsMap.get(i);  [CE]  illegal  start  of  expression  [FE]                OptionException    [CONTEXT]    i.remove();  newAnonymous.add(option);  }  else  {  final  Set  triggers  =  option.getTriggers();  for  (Iterator  j  =  triggers.iterator();  j.hasNext();)  {  newOptionMap.put(j.next(),  option);  }      [BUGGY]  Option  option  =  optionsMap.get(i);  [BUGGY]    newPrefixes.addAll(option.getPrefixes());  }  [CLASS]  GroupImpl  [METHOD]  <init>  [RETURN_TYPE]  String,int,int,boolean)  List  options  String  name  String  description  final  int  minimum  final  int  maximum  final  boolean  required  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  required  SortedMap  newOptionMap  optionMap  Iterator  i  j  List  anonymous  newAnonymous  options  Option  option  String  description  name  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	107	107	1	replace	Option  option  =  optionsMap.get(i);	      Option    option    =    optionMap.get(i);    	non-compiled	[CE]  illegal  start  of  expression	12	None	replace
12	[BUG]  [BUGGY]  Option  option  =  options.getOption(description);  [CE]  illegal  start  of  expression  [FE]            OptionException    [CONTEXT]    i.remove();  newAnonymous.add(option);  }  else  {  final  Set  triggers  =  option.getTriggers();  for  (Iterator  j  =  triggers.iterator();  j.hasNext();)  {  newOptionMap.put(j.next(),  option);  }      [BUGGY]  Option  option  =  options.getOption(description);  [BUGGY]    newPrefixes.addAll(option.getPrefixes());  }  [CLASS]  GroupImpl  [METHOD]  <init>  [RETURN_TYPE]  String,int,int,boolean)  List  options  String  name  String  description  final  int  minimum  final  int  maximum  final  boolean  required  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  required  SortedMap  newOptionMap  optionMap  Iterator  i  j  List  anonymous  newAnonymous  options  Option  option  String  description  name  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	107	107	1	replace	Option  option  =  options.getOption(description);	      Option    option    =    options.getOption(name);    	non-compiled	[CE]  illegal  start  of  expression	7	None	replace
13	[BUG]  [BUGGY]  Option  option  =  options.getOption(name,  minimum);  [CE]  illegal  start  of  expression  [FE]              OptionException    [CONTEXT]    i.remove();  newAnonymous.add(option);  }  else  {  final  Set  triggers  =  option.getTriggers();  for  (Iterator  j  =  triggers.iterator();  j.hasNext();)  {  newOptionMap.put(j.next(),  option);  }      [BUGGY]  Option  option  =  options.getOption(name,  minimum);  [BUGGY]    newPrefixes.addAll(option.getPrefixes());  }  [CLASS]  GroupImpl  [METHOD]  <init>  [RETURN_TYPE]  String,int,int,boolean)  List  options  String  name  String  description  final  int  minimum  final  int  maximum  final  boolean  required  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  required  SortedMap  newOptionMap  optionMap  Iterator  i  j  List  anonymous  newAnonymous  options  Option  option  String  description  name  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	107	107	1	replace	Option  option  =  options.getOption(name,  minimum);	      Option    option    =    options.getOption(name);    	non-compiled	[CE]  illegal  start  of  expression	7	None	replace
14	[BUG]  [BUGGY]  Option  option  =  options.getOption(name,  required);  [CE]  illegal  start  of  expression  [FE]                OptionException    [CONTEXT]    i.remove();  newAnonymous.add(option);  }  else  {  final  Set  triggers  =  option.getTriggers();  for  (Iterator  j  =  triggers.iterator();  j.hasNext();)  {  newOptionMap.put(j.next(),  option);  }      [BUGGY]  Option  option  =  options.getOption(name,  required);  [BUGGY]    newPrefixes.addAll(option.getPrefixes());  }  [CLASS]  GroupImpl  [METHOD]  <init>  [RETURN_TYPE]  String,int,int,boolean)  List  options  String  name  String  description  final  int  minimum  final  int  maximum  final  boolean  required  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  required  SortedMap  newOptionMap  optionMap  Iterator  i  j  List  anonymous  newAnonymous  options  Option  option  String  description  name  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	107	107	1	replace	Option  option  =  options.getOption(name,  required);	      Option    option    =    options.getOption(name);    	non-compiled	[CE]  illegal  start  of  expression	7	None	replace
15	[BUG]  [BUGGY]  Option  option  =  option.getOption(description);  [CE]  illegal  start  of  expression  [FE]        OptionException    [CONTEXT]    i.remove();  newAnonymous.add(option);  }  else  {  final  Set  triggers  =  option.getTriggers();  for  (Iterator  j  =  triggers.iterator();  j.hasNext();)  {  newOptionMap.put(j.next(),  option);  }      [BUGGY]  Option  option  =  option.getOption(description);  [BUGGY]    newPrefixes.addAll(option.getPrefixes());  }  [CLASS]  GroupImpl  [METHOD]  <init>  [RETURN_TYPE]  String,int,int,boolean)  List  options  String  name  String  description  final  int  minimum  final  int  maximum  final  boolean  required  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  required  SortedMap  newOptionMap  optionMap  Iterator  i  j  List  anonymous  newAnonymous  options  Option  option  String  description  name  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	107	107	1	replace	Option  option  =  option.getOption(description);	      Option    option    =    option.getOption(name);    	non-compiled	[CE]  illegal  start  of  expression	10	None	replace
16	[BUG]  [BUGGY]  Option  option  =  optionMap.getOption(name);  [CE]  illegal  start  of  expression  [FE]          OptionException    [CONTEXT]    i.remove();  newAnonymous.add(option);  }  else  {  final  Set  triggers  =  option.getTriggers();  for  (Iterator  j  =  triggers.iterator();  j.hasNext();)  {  newOptionMap.put(j.next(),  option);  }      [BUGGY]  Option  option  =  optionMap.getOption(name);  [BUGGY]    newPrefixes.addAll(option.getPrefixes());  }  [CLASS]  GroupImpl  [METHOD]  <init>  [RETURN_TYPE]  String,int,int,boolean)  List  options  String  name  String  description  final  int  minimum  final  int  maximum  final  boolean  required  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  required  SortedMap  newOptionMap  optionMap  Iterator  i  j  List  anonymous  newAnonymous  options  Option  option  String  description  name  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	107	107	1	replace	Option  option  =  optionMap.getOption(name);	      Option    option    =    option.getOption(name);    	non-compiled	[CE]  illegal  start  of  expression	10	None	replace
17	[BUG]  [BUGGY]  newPrefixes.addAll(i.getPrefixes(),  options);  [CE]  illegal  start  of  expression  [FE]        OptionException    [CONTEXT]    i.remove();  newAnonymous.add(option);  }  else  {  final  Set  triggers  =  option.getTriggers();  for  (Iterator  j  =  triggers.iterator();  j.hasNext();)  {  newOptionMap.put(j.next(),  option);  }      [BUGGY]  newPrefixes.addAll(i.getPrefixes(),  options);  [BUGGY]    }  [CLASS]  GroupImpl  [METHOD]  <init>  [RETURN_TYPE]  String,int,int,boolean)  List  options  String  name  String  description  final  int  minimum  final  int  maximum  final  boolean  required  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  required  SortedMap  newOptionMap  optionMap  Iterator  i  j  List  anonymous  newAnonymous  options  Option  option  String  description  name  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	107	107	1	replace	newPrefixes.addAll(i.getPrefixes(),  options);	  newPrefixes.addAll(i.getPrefixes());    	non-compiled	[CE]  illegal  start  of  expression	14	None	replace
18	[BUG]  [BUGGY]  newPrefixes.addAll(i.getPrefixes(),  required);  [CE]  illegal  start  of  expression  [FE]          OptionException    [CONTEXT]    i.remove();  newAnonymous.add(option);  }  else  {  final  Set  triggers  =  option.getTriggers();  for  (Iterator  j  =  triggers.iterator();  j.hasNext();)  {  newOptionMap.put(j.next(),  option);  }      [BUGGY]  newPrefixes.addAll(i.getPrefixes(),  required);  [BUGGY]    }  [CLASS]  GroupImpl  [METHOD]  <init>  [RETURN_TYPE]  String,int,int,boolean)  List  options  String  name  String  description  final  int  minimum  final  int  maximum  final  boolean  required  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  required  SortedMap  newOptionMap  optionMap  Iterator  i  j  List  anonymous  newAnonymous  options  Option  option  String  description  name  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	107	107	1	replace	newPrefixes.addAll(i.getPrefixes(),  required);	  newPrefixes.addAll(i.getPrefixes());    	non-compiled	[CE]  illegal  start  of  expression	14	None	replace
19	[BUG]  [BUGGY]  newPrefixes.addAll(j.getPrefixes(),  options);  [CE]  illegal  start  of  expression  [FE]            OptionException    [CONTEXT]    i.remove();  newAnonymous.add(option);  }  else  {  final  Set  triggers  =  option.getTriggers();  for  (Iterator  j  =  triggers.iterator();  j.hasNext();)  {  newOptionMap.put(j.next(),  option);  }      [BUGGY]  newPrefixes.addAll(j.getPrefixes(),  options);  [BUGGY]    }  [CLASS]  GroupImpl  [METHOD]  <init>  [RETURN_TYPE]  String,int,int,boolean)  List  options  String  name  String  description  final  int  minimum  final  int  maximum  final  boolean  required  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  required  SortedMap  newOptionMap  optionMap  Iterator  i  j  List  anonymous  newAnonymous  options  Option  option  String  description  name  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	107	107	1	replace	newPrefixes.addAll(j.getPrefixes(),  options);	  newPrefixes.addAll(j.getPrefixes());    	non-compiled	[CE]  illegal  start  of  expression	3	None	replace
20	[BUG]  [BUGGY]  newPrefixes.add(j.getPrefixes());  [CE]  illegal  start  of  expression  [FE]              OptionException    [CONTEXT]    i.remove();  newAnonymous.add(option);  }  else  {  final  Set  triggers  =  option.getTriggers();  for  (Iterator  j  =  triggers.iterator();  j.hasNext();)  {  newOptionMap.put(j.next(),  option);  }      [BUGGY]  newPrefixes.add(j.getPrefixes());  [BUGGY]    }  [CLASS]  GroupImpl  [METHOD]  <init>  [RETURN_TYPE]  String,int,int,boolean)  List  options  String  name  String  description  final  int  minimum  final  int  maximum  final  boolean  required  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  required  SortedMap  newOptionMap  optionMap  Iterator  i  j  List  anonymous  newAnonymous  options  Option  option  String  description  name  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	107	107	1	replace	newPrefixes.add(j.getPrefixes());	  newPrefixes.addAll(j.getPrefixes());    	non-compiled	[CE]  illegal  start  of  expression	3	None	replace
21	[BUG]  [BUGGY]  if(!required)  {  i.remove();  }  [CE]  illegal  start  of  expression  [FE]                OptionException    [CONTEXT]    i.remove();  newAnonymous.add(option);  }  else  {  final  Set  triggers  =  option.getTriggers();  for  (Iterator  j  =  triggers.iterator();  j.hasNext();)  {  newOptionMap.put(j.next(),  option);  }      [BUGGY]  if(!required)  {  i.remove();  }  [BUGGY]    newPrefixes.addAll(option.getPrefixes());  }  [CLASS]  GroupImpl  [METHOD]  <init>  [RETURN_TYPE]  String,int,int,boolean)  List  options  String  name  String  description  final  int  minimum  final  int  maximum  final  boolean  required  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  required  SortedMap  newOptionMap  optionMap  Iterator  i  j  List  anonymous  newAnonymous  options  Option  option  String  description  name  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	107	107	1	replace	if(!required)  {  i.remove();  }	      i.remove();    	non-compiled	[CE]  illegal  start  of  expression	9	None	replace
22	[BUG]  [BUGGY]  if(!required)  {  i.remove();  }  else  {  newPrefixes.addAll(option.getPrefixes());  }  [CE]  illegal  start  of  expression  [FE]                  OptionException    [CONTEXT]    i.remove();  newAnonymous.add(option);  }  else  {  final  Set  triggers  =  option.getTriggers();  for  (Iterator  j  =  triggers.iterator();  j.hasNext();)  {  newOptionMap.put(j.next(),  option);  }      [BUGGY]  if(!required)  {  i.remove();  }  else  {  newPrefixes.addAll(option.getPrefixes());  }  [BUGGY]    newPrefixes.addAll(option.getPrefixes());  }  [CLASS]  GroupImpl  [METHOD]  <init>  [RETURN_TYPE]  String,int,int,boolean)  List  options  String  name  String  description  final  int  minimum  final  int  maximum  final  boolean  required  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  required  SortedMap  newOptionMap  optionMap  Iterator  i  j  List  anonymous  newAnonymous  options  Option  option  String  description  name  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	107	107	1	replace	if(!required)  {  i.remove();  }  else  {  newPrefixes.addAll(option.getPrefixes());  }	      i.remove();    	non-compiled	[CE]  illegal  start  of  expression	9	None	replace
23	[BUG]  [BUGGY]  newPrefixes.addAll(option.getPrefixes(),  minimum,  maximum);  [CE]  illegal  start  of  expression  [FE]        OptionException    [CONTEXT]    i.remove();  newAnonymous.add(option);  }  else  {  final  Set  triggers  =  option.getTriggers();  for  (Iterator  j  =  triggers.iterator();  j.hasNext();)  {  newOptionMap.put(j.next(),  option);  }      [BUGGY]  newPrefixes.addAll(option.getPrefixes(),  minimum,  maximum);  [BUGGY]    }  [CLASS]  GroupImpl  [METHOD]  <init>  [RETURN_TYPE]  String,int,int,boolean)  List  options  String  name  String  description  final  int  minimum  final  int  maximum  final  boolean  required  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  required  SortedMap  newOptionMap  optionMap  Iterator  i  j  List  anonymous  newAnonymous  options  Option  option  String  description  name  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	107	107	1	replace	newPrefixes.addAll(option.getPrefixes(),  minimum,  maximum);	  newPrefixes.addAll(option.getPrefixes(),    maximum);    	non-compiled	[CE]  illegal  start  of  expression	13	None	replace
24	[BUG]  [BUGGY]  newPrefixes.addAll(option.getPrefixes(),  minimum,  required);  [CE]  illegal  start  of  expression  [FE]          OptionException    [CONTEXT]    i.remove();  newAnonymous.add(option);  }  else  {  final  Set  triggers  =  option.getTriggers();  for  (Iterator  j  =  triggers.iterator();  j.hasNext();)  {  newOptionMap.put(j.next(),  option);  }      [BUGGY]  newPrefixes.addAll(option.getPrefixes(),  minimum,  required);  [BUGGY]    }  [CLASS]  GroupImpl  [METHOD]  <init>  [RETURN_TYPE]  String,int,int,boolean)  List  options  String  name  String  description  final  int  minimum  final  int  maximum  final  boolean  required  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  required  SortedMap  newOptionMap  optionMap  Iterator  i  j  List  anonymous  newAnonymous  options  Option  option  String  description  name  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	107	107	1	replace	newPrefixes.addAll(option.getPrefixes(),  minimum,  required);	  newPrefixes.addAll(option.getPrefixes(),    maximum);    	non-compiled	[CE]  illegal  start  of  expression	13	None	replace
25	[BUG]  [BUGGY]  newPrefixes.addAll(i.getPrefixes(),  maximum);  [CE]  illegal  start  of  expression  [FE]            OptionException    [CONTEXT]    i.remove();  newAnonymous.add(option);  }  else  {  final  Set  triggers  =  option.getTriggers();  for  (Iterator  j  =  triggers.iterator();  j.hasNext();)  {  newOptionMap.put(j.next(),  option);  }      [BUGGY]  newPrefixes.addAll(i.getPrefixes(),  maximum);  [BUGGY]    }  [CLASS]  GroupImpl  [METHOD]  <init>  [RETURN_TYPE]  String,int,int,boolean)  List  options  String  name  String  description  final  int  minimum  final  int  maximum  final  boolean  required  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  required  SortedMap  newOptionMap  optionMap  Iterator  i  j  List  anonymous  newAnonymous  options  Option  option  String  description  name  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	107	107	1	replace	newPrefixes.addAll(i.getPrefixes(),  maximum);	  newPrefixes.addAll(option.getPrefixes(),    maximum);    	non-compiled	[CE]  illegal  start  of  expression	13	None	replace
26	[BUG]  [BUGGY]  Option  option  =  options.get(name);  [CE]  illegal  start  of  expression  [FE]          OptionException    [CONTEXT]    i.remove();  newAnonymous.add(option);  }  else  {  final  Set  triggers  =  option.getTriggers();  for  (Iterator  j  =  triggers.iterator();  j.hasNext();)  {  newOptionMap.put(j.next(),  option);  }      [BUGGY]  Option  option  =  options.get(name);  [BUGGY]    newPrefixes.addAll(option.getPrefixes());  }  [CLASS]  GroupImpl  [METHOD]  <init>  [RETURN_TYPE]  String,int,int,boolean)  List  options  String  name  String  description  final  int  minimum  final  int  maximum  final  boolean  required  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  required  SortedMap  newOptionMap  optionMap  Iterator  i  j  List  anonymous  newAnonymous  options  Option  option  String  description  name  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	107	107	1	replace	Option  option  =  options.get(name);	      Option    option    =    optionMap.get(name);    	non-compiled	[CE]  illegal  start  of  expression	11	None	replace
27	[BUG]  [BUGGY]  Option  option  =  optionMap.get(name,  minimum);  [CE]  illegal  start  of  expression  [FE]            OptionException    [CONTEXT]    i.remove();  newAnonymous.add(option);  }  else  {  final  Set  triggers  =  option.getTriggers();  for  (Iterator  j  =  triggers.iterator();  j.hasNext();)  {  newOptionMap.put(j.next(),  option);  }      [BUGGY]  Option  option  =  optionMap.get(name,  minimum);  [BUGGY]    newPrefixes.addAll(option.getPrefixes());  }  [CLASS]  GroupImpl  [METHOD]  <init>  [RETURN_TYPE]  String,int,int,boolean)  List  options  String  name  String  description  final  int  minimum  final  int  maximum  final  boolean  required  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  required  SortedMap  newOptionMap  optionMap  Iterator  i  j  List  anonymous  newAnonymous  options  Option  option  String  description  name  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	107	107	1	replace	Option  option  =  optionMap.get(name,  minimum);	      Option    option    =    optionMap.get(name);    	non-compiled	[CE]  illegal  start  of  expression	11	None	replace
28	[BUG]  [BUGGY]  Option  option  =  optionMap.get(description);  [CE]  illegal  start  of  expression  [FE]              OptionException    [CONTEXT]    i.remove();  newAnonymous.add(option);  }  else  {  final  Set  triggers  =  option.getTriggers();  for  (Iterator  j  =  triggers.iterator();  j.hasNext();)  {  newOptionMap.put(j.next(),  option);  }      [BUGGY]  Option  option  =  optionMap.get(description);  [BUGGY]    newPrefixes.addAll(option.getPrefixes());  }  [CLASS]  GroupImpl  [METHOD]  <init>  [RETURN_TYPE]  String,int,int,boolean)  List  options  String  name  String  description  final  int  minimum  final  int  maximum  final  boolean  required  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  required  SortedMap  newOptionMap  optionMap  Iterator  i  j  List  anonymous  newAnonymous  options  Option  option  String  description  name  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	107	107	1	replace	Option  option  =  optionMap.get(description);	      Option    option    =    optionMap.get(name);    	non-compiled	[CE]  illegal  start  of  expression	11	None	replace
29	[BUG]  [BUGGY]  newPrefixes.add(option.getPrefixes(),  minimum);  [CE]  illegal  start  of  expression  [FE]        OptionException    [CONTEXT]    i.remove();  newAnonymous.add(option);  }  else  {  final  Set  triggers  =  option.getTriggers();  for  (Iterator  j  =  triggers.iterator();  j.hasNext();)  {  newOptionMap.put(j.next(),  option);  }      [BUGGY]  newPrefixes.add(option.getPrefixes(),  minimum);  [BUGGY]    }  [CLASS]  GroupImpl  [METHOD]  <init>  [RETURN_TYPE]  String,int,int,boolean)  List  options  String  name  String  description  final  int  minimum  final  int  maximum  final  boolean  required  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  required  SortedMap  newOptionMap  optionMap  Iterator  i  j  List  anonymous  newAnonymous  options  Option  option  String  description  name  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	107	107	1	replace	newPrefixes.add(option.getPrefixes(),  minimum);	  newPrefixes.add(option.getPrefixes());    	non-compiled	[CE]  illegal  start  of  expression	1	None	replace
30	[BUG]  [BUGGY]  newPrefixes.add(option.getDescription());  [CE]  illegal  start  of  expression  [FE]          OptionException    [CONTEXT]    i.remove();  newAnonymous.add(option);  }  else  {  final  Set  triggers  =  option.getTriggers();  for  (Iterator  j  =  triggers.iterator();  j.hasNext();)  {  newOptionMap.put(j.next(),  option);  }      [BUGGY]  newPrefixes.add(option.getDescription());  [BUGGY]    }  [CLASS]  GroupImpl  [METHOD]  <init>  [RETURN_TYPE]  String,int,int,boolean)  List  options  String  name  String  description  final  int  minimum  final  int  maximum  final  boolean  required  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  required  SortedMap  newOptionMap  optionMap  Iterator  i  j  List  anonymous  newAnonymous  options  Option  option  String  description  name  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	107	107	1	replace	newPrefixes.add(option.getDescription());	  newPrefixes.add(option.getPrefixes());    	non-compiled	[CE]  illegal  start  of  expression	1	None	replace
31	[BUG]  [BUGGY]  newPrefixes.add(i.getPrefixes());  [CE]  illegal  start  of  expression  [FE]            OptionException    [CONTEXT]    i.remove();  newAnonymous.add(option);  }  else  {  final  Set  triggers  =  option.getTriggers();  for  (Iterator  j  =  triggers.iterator();  j.hasNext();)  {  newOptionMap.put(j.next(),  option);  }      [BUGGY]  newPrefixes.add(i.getPrefixes());  [BUGGY]    }  [CLASS]  GroupImpl  [METHOD]  <init>  [RETURN_TYPE]  String,int,int,boolean)  List  options  String  name  String  description  final  int  minimum  final  int  maximum  final  boolean  required  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  required  SortedMap  newOptionMap  optionMap  Iterator  i  j  List  anonymous  newAnonymous  options  Option  option  String  description  name  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	107	107	1	replace	newPrefixes.add(i.getPrefixes());	  newPrefixes.add(option.getPrefixes());    	non-compiled	[CE]  illegal  start  of  expression	1	None	replace
32	[BUG]  [BUGGY]  if(!required)  {  i.remove();  newAnonymous.add(option);  }  [CE]  illegal  start  of  expression  [FE]              OptionException    [CONTEXT]    i.remove();  newAnonymous.add(option);  }  else  {  final  Set  triggers  =  option.getTriggers();  for  (Iterator  j  =  triggers.iterator();  j.hasNext();)  {  newOptionMap.put(j.next(),  option);  }      [BUGGY]  if(!required)  {  i.remove();  newAnonymous.add(option);  }  [BUGGY]    newPrefixes.addAll(option.getPrefixes());  }  [CLASS]  GroupImpl  [METHOD]  <init>  [RETURN_TYPE]  String,int,int,boolean)  List  options  String  name  String  description  final  int  minimum  final  int  maximum  final  boolean  required  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  required  SortedMap  newOptionMap  optionMap  Iterator  i  j  List  anonymous  newAnonymous  options  Option  option  String  description  name  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	107	107	1	replace	if(!required)  {  i.remove();  newAnonymous.add(option);  }	      i.remove();    newAnonymous.add(option);    	non-compiled	[CE]  illegal  start  of  expression	8	None	replace
33	[BUG]  [BUGGY]  if(required)  {  i.remove();  newAnonymous.add(option);  }  [CE]  illegal  start  of  expression  [FE]                OptionException    [CONTEXT]    i.remove();  newAnonymous.add(option);  }  else  {  final  Set  triggers  =  option.getTriggers();  for  (Iterator  j  =  triggers.iterator();  j.hasNext();)  {  newOptionMap.put(j.next(),  option);  }      [BUGGY]  if(required)  {  i.remove();  newAnonymous.add(option);  }  [BUGGY]    newPrefixes.addAll(option.getPrefixes());  }  [CLASS]  GroupImpl  [METHOD]  <init>  [RETURN_TYPE]  String,int,int,boolean)  List  options  String  name  String  description  final  int  minimum  final  int  maximum  final  boolean  required  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  required  SortedMap  newOptionMap  optionMap  Iterator  i  j  List  anonymous  newAnonymous  options  Option  option  String  description  name  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	107	107	1	replace	if(required)  {  i.remove();  newAnonymous.add(option);  }	      i.remove();    newAnonymous.add(option);    	non-compiled	[CE]  illegal  start  of  expression	8	None	replace
34	[BUG]  [BUGGY]  n.remove();  newAnonymous.add(option);  [CE]  illegal  start  of  expression  [FE]                  OptionException    [CONTEXT]    i.remove();  newAnonymous.add(option);  }  else  {  final  Set  triggers  =  option.getTriggers();  for  (Iterator  j  =  triggers.iterator();  j.hasNext();)  {  newOptionMap.put(j.next(),  option);  }      [BUGGY]  n.remove();  newAnonymous.add(option);  [BUGGY]    newPrefixes.addAll(option.getPrefixes());  }  [CLASS]  GroupImpl  [METHOD]  <init>  [RETURN_TYPE]  String,int,int,boolean)  List  options  String  name  String  description  final  int  minimum  final  int  maximum  final  boolean  required  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  required  SortedMap  newOptionMap  optionMap  Iterator  i  j  List  anonymous  newAnonymous  options  Option  option  String  description  name  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	107	107	1	replace	n.remove();  newAnonymous.add(option);	      i.remove();    newAnonymous.add(option);    	non-compiled	[CE]  illegal  start  of  expression	8	None	replace
35	[BUG]  [BUGGY]  newAnonymous.add(option);  [CE]  illegal  start  of  expression  [FE]              OptionException    [CONTEXT]    i.remove();  newAnonymous.add(option);  }  else  {  final  Set  triggers  =  option.getTriggers();  for  (Iterator  j  =  triggers.iterator();  j.hasNext();)  {  newOptionMap.put(j.next(),  option);  }      [BUGGY]  newAnonymous.add(option);  [BUGGY]    }  [CLASS]  GroupImpl  [METHOD]  <init>  [RETURN_TYPE]  String,int,int,boolean)  List  options  String  name  String  description  final  int  minimum  final  int  maximum  final  boolean  required  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  required  SortedMap  newOptionMap  optionMap  Iterator  i  j  List  anonymous  newAnonymous  options  Option  option  String  description  name  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	107	107	1	replace	newAnonymous.add(option);	      	non-compiled	[CE]  illegal  start  of  expression	4	None	replace
36	[BUG]  [BUGGY]  newOptionMap.put(name,  option);  [CE]  illegal  start  of  expression  [FE]                OptionException    [CONTEXT]    i.remove();  newAnonymous.add(option);  }  else  {  final  Set  triggers  =  option.getTriggers();  for  (Iterator  j  =  triggers.iterator();  j.hasNext();)  {  newOptionMap.put(j.next(),  option);  }      [BUGGY]  newOptionMap.put(name,  option);  [BUGGY]    }  [CLASS]  GroupImpl  [METHOD]  <init>  [RETURN_TYPE]  String,int,int,boolean)  List  options  String  name  String  description  final  int  minimum  final  int  maximum  final  boolean  required  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  required  SortedMap  newOptionMap  optionMap  Iterator  i  j  List  anonymous  newAnonymous  options  Option  option  String  description  name  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	107	107	1	replace	newOptionMap.put(name,  option);	      	non-compiled	[CE]  illegal  start  of  expression	4	None	replace
37	[BUG]  [BUGGY]  optionMap.put(name,  newAnonymous);  [CE]  illegal  start  of  expression  [FE]                  OptionException    [CONTEXT]    i.remove();  newAnonymous.add(option);  }  else  {  final  Set  triggers  =  option.getTriggers();  for  (Iterator  j  =  triggers.iterator();  j.hasNext();)  {  newOptionMap.put(j.next(),  option);  }      [BUGGY]  optionMap.put(name,  newAnonymous);  [BUGGY]    }  [CLASS]  GroupImpl  [METHOD]  <init>  [RETURN_TYPE]  String,int,int,boolean)  List  options  String  name  String  description  final  int  minimum  final  int  maximum  final  boolean  required  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  required  SortedMap  newOptionMap  optionMap  Iterator  i  j  List  anonymous  newAnonymous  options  Option  option  String  description  name  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	107	107	1	replace	optionMap.put(name,  newAnonymous);	      	non-compiled	[CE]  illegal  start  of  expression	4	None	replace
38	[BUG]  [BUGGY]  optionMap.put(name,  option);  [CE]  illegal  start  of  expression  [FE]              OptionException    [CONTEXT]    i.remove();  newAnonymous.add(option);  }  else  {  final  Set  triggers  =  option.getTriggers();  for  (Iterator  j  =  triggers.iterator();  j.hasNext();)  {  newOptionMap.put(j.next(),  option);  }      [BUGGY]  optionMap.put(name,  option);  [BUGGY]    }  [CLASS]  GroupImpl  [METHOD]  <init>  [RETURN_TYPE]  String,int,int,boolean)  List  options  String  name  String  description  final  int  minimum  final  int  maximum  final  boolean  required  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  required  SortedMap  newOptionMap  optionMap  Iterator  i  j  List  anonymous  newAnonymous  options  Option  option  String  description  name  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	107	107	1	replace	optionMap.put(name,  option);	      	non-compiled	[CE]  illegal  start  of  expression	4	None	replace
39	[BUG]  [BUGGY]  if(required)  {  i.remove();  newAnonymous.addAll(option.getPrefixes());  }  else  {  options.addAll(option.getPrefixes());  }  [CE]  illegal  start  of  expression  [FE]          OptionException    [CONTEXT]    i.remove();  newAnonymous.add(option);  }  else  {  final  Set  triggers  =  option.getTriggers();  for  (Iterator  j  =  triggers.iterator();  j.hasNext();)  {  newOptionMap.put(j.next(),  option);  }      [BUGGY]  if(required)  {  i.remove();  newAnonymous.addAll(option.getPrefixes());  }  else  {  options.addAll(option.getPrefixes());  }  [BUGGY]    newPrefixes.addAll(option.getPrefixes());  }  [CLASS]  GroupImpl  [METHOD]  <init>  [RETURN_TYPE]  String,int,int,boolean)  List  options  String  name  String  description  final  int  minimum  final  int  maximum  final  boolean  required  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  required  SortedMap  newOptionMap  optionMap  Iterator  i  j  List  anonymous  newAnonymous  options  Option  option  String  description  name  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	107	107	1	replace	if(required)  {  i.remove();  newAnonymous.addAll(option.getPrefixes());  }  else  {  options.addAll(option.getPrefixes());  }	      i.remove();    newAnonymous.addAll(option.getPrefixes());    	non-compiled	[CE]  illegal  start  of  expression	6	None	replace
40	[BUG]  [BUGGY]  newPrefixes.add(option.getPrefixes(),  maximum);  [CE]  illegal  start  of  expression  [FE]        OptionException    [CONTEXT]    i.remove();  newAnonymous.add(option);  }  else  {  final  Set  triggers  =  option.getTriggers();  for  (Iterator  j  =  triggers.iterator();  j.hasNext();)  {  newOptionMap.put(j.next(),  option);  }      [BUGGY]  newPrefixes.add(option.getPrefixes(),  maximum);  [BUGGY]    }  [CLASS]  GroupImpl  [METHOD]  <init>  [RETURN_TYPE]  String,int,int,boolean)  List  options  String  name  String  description  final  int  minimum  final  int  maximum  final  boolean  required  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  required  SortedMap  newOptionMap  optionMap  Iterator  i  j  List  anonymous  newAnonymous  options  Option  option  String  description  name  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	107	107	1	replace	newPrefixes.add(option.getPrefixes(),  maximum);	  newPrefixes.add(option.getPrefixes());    	non-compiled	[CE]  illegal  start  of  expression	1	None	replace
41	[BUG]  [BUGGY]  newPrefixes.add(option.getPrefixes(),  required);  [CE]  illegal  start  of  expression  [FE]          OptionException    [CONTEXT]    i.remove();  newAnonymous.add(option);  }  else  {  final  Set  triggers  =  option.getTriggers();  for  (Iterator  j  =  triggers.iterator();  j.hasNext();)  {  newOptionMap.put(j.next(),  option);  }      [BUGGY]  newPrefixes.add(option.getPrefixes(),  required);  [BUGGY]    }  [CLASS]  GroupImpl  [METHOD]  <init>  [RETURN_TYPE]  String,int,int,boolean)  List  options  String  name  String  description  final  int  minimum  final  int  maximum  final  boolean  required  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  required  SortedMap  newOptionMap  optionMap  Iterator  i  j  List  anonymous  newAnonymous  options  Option  option  String  description  name  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	107	107	1	replace	newPrefixes.add(option.getPrefixes(),  required);	  newPrefixes.add(option.getPrefixes());    	non-compiled	[CE]  illegal  start  of  expression	1	None	replace
42	[BUG]  [BUGGY]  Option  option  =  options.getOption(i);  [CE]  illegal  start  of  expression  [FE]            OptionException    [CONTEXT]    i.remove();  newAnonymous.add(option);  }  else  {  final  Set  triggers  =  option.getTriggers();  for  (Iterator  j  =  triggers.iterator();  j.hasNext();)  {  newOptionMap.put(j.next(),  option);  }      [BUGGY]  Option  option  =  options.getOption(i);  [BUGGY]    newPrefixes.addAll(option.getPrefixes());  }  [CLASS]  GroupImpl  [METHOD]  <init>  [RETURN_TYPE]  String,int,int,boolean)  List  options  String  name  String  description  final  int  minimum  final  int  maximum  final  boolean  required  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  required  SortedMap  newOptionMap  optionMap  Iterator  i  j  List  anonymous  newAnonymous  options  Option  option  String  description  name  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	107	107	1	replace	Option  option  =  options.getOption(i);	      Option    option    =    optionMap.get(i);    	non-compiled	[CE]  illegal  start  of  expression	12	None	replace
43	[BUG]  [BUGGY]  i.clear();  [CE]  illegal  start  of  expression  [FE]                OptionException    [CONTEXT]    i.remove();  newAnonymous.add(option);  }  else  {  final  Set  triggers  =  option.getTriggers();  for  (Iterator  j  =  triggers.iterator();  j.hasNext();)  {  newOptionMap.put(j.next(),  option);  }      [BUGGY]  i.clear();  [BUGGY]    newPrefixes.addAll(option.getPrefixes());  }  [CLASS]  GroupImpl  [METHOD]  <init>  [RETURN_TYPE]  String,int,int,boolean)  List  options  String  name  String  description  final  int  minimum  final  int  maximum  final  boolean  required  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  required  SortedMap  newOptionMap  optionMap  Iterator  i  j  List  anonymous  newAnonymous  options  Option  option  String  description  name  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	107	107	1	replace	i.clear();	      i.remove();    	non-compiled	[CE]  illegal  start  of  expression	9	None	replace
44	[BUG]  [BUGGY]  i.remove(option.getPrefix());  [CE]  illegal  start  of  expression  [FE]                  OptionException    [CONTEXT]    i.remove();  newAnonymous.add(option);  }  else  {  final  Set  triggers  =  option.getTriggers();  for  (Iterator  j  =  triggers.iterator();  j.hasNext();)  {  newOptionMap.put(j.next(),  option);  }      [BUGGY]  i.remove(option.getPrefix());  [BUGGY]    newPrefixes.addAll(option.getPrefixes());  }  [CLASS]  GroupImpl  [METHOD]  <init>  [RETURN_TYPE]  String,int,int,boolean)  List  options  String  name  String  description  final  int  minimum  final  int  maximum  final  boolean  required  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  required  SortedMap  newOptionMap  optionMap  Iterator  i  j  List  anonymous  newAnonymous  options  Option  option  String  description  name  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	107	107	1	replace	i.remove(option.getPrefix());	      i.remove();    	non-compiled	[CE]  illegal  start  of  expression	9	None	replace
45	[BUG]  [BUGGY]  i.set(name,  option.getPrefixes());  [CE]  illegal  start  of  expression  [FE]                    OptionException    [CONTEXT]    i.remove();  newAnonymous.add(option);  }  else  {  final  Set  triggers  =  option.getTriggers();  for  (Iterator  j  =  triggers.iterator();  j.hasNext();)  {  newOptionMap.put(j.next(),  option);  }      [BUGGY]  i.set(name,  option.getPrefixes());  [BUGGY]    newPrefixes.addAll(option.getPrefixes());  }  [CLASS]  GroupImpl  [METHOD]  <init>  [RETURN_TYPE]  String,int,int,boolean)  List  options  String  name  String  description  final  int  minimum  final  int  maximum  final  boolean  required  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  required  SortedMap  newOptionMap  optionMap  Iterator  i  j  List  anonymous  newAnonymous  options  Option  option  String  description  name  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	107	107	1	replace	i.set(name,  option.getPrefixes());	      i.remove();    	non-compiled	[CE]  illegal  start  of  expression	9	None	replace
46	[BUG]  [BUGGY]  newAnonymous.addAll(option.getDescription());  [CE]  illegal  start  of  expression  [FE]        OptionException    [CONTEXT]    i.remove();  newAnonymous.add(option);  }  else  {  final  Set  triggers  =  option.getTriggers();  for  (Iterator  j  =  triggers.iterator();  j.hasNext();)  {  newOptionMap.put(j.next(),  option);  }      [BUGGY]  newAnonymous.addAll(option.getDescription());  [BUGGY]    newPrefixes.addAll(option.getPrefixes());  }  [CLASS]  GroupImpl  [METHOD]  <init>  [RETURN_TYPE]  String,int,int,boolean)  List  options  String  name  String  description  final  int  minimum  final  int  maximum  final  boolean  required  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  required  SortedMap  newOptionMap  optionMap  Iterator  i  j  List  anonymous  newAnonymous  options  Option  option  String  description  name  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	107	107	1	replace	newAnonymous.addAll(option.getDescription());	      newAnonymous.addAll(option.getPrefixes());    	non-compiled	[CE]  illegal  start  of  expression	5	None	replace
47	[BUG]  [BUGGY]  newAnonymous.addAll(option.getPrefixes(),  maximum);  [CE]  illegal  start  of  expression  [FE]          OptionException    [CONTEXT]    i.remove();  newAnonymous.add(option);  }  else  {  final  Set  triggers  =  option.getTriggers();  for  (Iterator  j  =  triggers.iterator();  j.hasNext();)  {  newOptionMap.put(j.next(),  option);  }      [BUGGY]  newAnonymous.addAll(option.getPrefixes(),  maximum);  [BUGGY]    newPrefixes.addAll(option.getPrefixes());  }  [CLASS]  GroupImpl  [METHOD]  <init>  [RETURN_TYPE]  String,int,int,boolean)  List  options  String  name  String  description  final  int  minimum  final  int  maximum  final  boolean  required  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  required  SortedMap  newOptionMap  optionMap  Iterator  i  j  List  anonymous  newAnonymous  options  Option  option  String  description  name  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	107	107	1	replace	newAnonymous.addAll(option.getPrefixes(),  maximum);	      newAnonymous.addAll(option.getPrefixes());    	non-compiled	[CE]  illegal  start  of  expression	5	None	replace
48	[BUG]  [BUGGY]  Option  option  =  optionsMap.get(name);  [CE]  illegal  start  of  expression  [FE]          OptionException    [CONTEXT]    i.remove();  newAnonymous.add(option);  }  else  {  final  Set  triggers  =  option.getTriggers();  for  (Iterator  j  =  triggers.iterator();  j.hasNext();)  {  newOptionMap.put(j.next(),  option);  }      [BUGGY]  Option  option  =  optionsMap.get(name);  [BUGGY]    newPrefixes.addAll(option.getPrefixes());  }  [CLASS]  GroupImpl  [METHOD]  <init>  [RETURN_TYPE]  String,int,int,boolean)  List  options  String  name  String  description  final  int  minimum  final  int  maximum  final  boolean  required  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  required  SortedMap  newOptionMap  optionMap  Iterator  i  j  List  anonymous  newAnonymous  options  Option  option  String  description  name  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	107	107	1	replace	Option  option  =  optionsMap.get(name);	      Option    option    =    optionMap.get(name);    	non-compiled	[CE]  illegal  start  of  expression	11	None	replace
49	[BUG]  [BUGGY]  Option  option  =  optionMap.get(name  +  1);  [CE]  illegal  start  of  expression  [FE]            OptionException    [CONTEXT]    i.remove();  newAnonymous.add(option);  }  else  {  final  Set  triggers  =  option.getTriggers();  for  (Iterator  j  =  triggers.iterator();  j.hasNext();)  {  newOptionMap.put(j.next(),  option);  }      [BUGGY]  Option  option  =  optionMap.get(name  +  1);  [BUGGY]    newPrefixes.addAll(option.getPrefixes());  }  [CLASS]  GroupImpl  [METHOD]  <init>  [RETURN_TYPE]  String,int,int,boolean)  List  options  String  name  String  description  final  int  minimum  final  int  maximum  final  boolean  required  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  required  SortedMap  newOptionMap  optionMap  Iterator  i  j  List  anonymous  newAnonymous  options  Option  option  String  description  name  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	107	107	1	replace	Option  option  =  optionMap.get(name  +  1);	      Option    option    =    optionMap.get(name);    	non-compiled	[CE]  illegal  start  of  expression	11	None	replace
50	[BUG]  [BUGGY]  newPrefixes.addAll(option.getPrefixes(),  maximum,  required);  [CE]  illegal  start  of  expression  [FE]        OptionException    [CONTEXT]    i.remove();  newAnonymous.add(option);  }  else  {  final  Set  triggers  =  option.getTriggers();  for  (Iterator  j  =  triggers.iterator();  j.hasNext();)  {  newOptionMap.put(j.next(),  option);  }      [BUGGY]  newPrefixes.addAll(option.getPrefixes(),  maximum,  required);  [BUGGY]    }  [CLASS]  GroupImpl  [METHOD]  <init>  [RETURN_TYPE]  String,int,int,boolean)  List  options  String  name  String  description  final  int  minimum  final  int  maximum  final  boolean  required  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  required  SortedMap  newOptionMap  optionMap  Iterator  i  j  List  anonymous  newAnonymous  options  Option  option  String  description  name  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	107	107	1	replace	newPrefixes.addAll(option.getPrefixes(),  maximum,  required);	  newPrefixes.addAll(option.getPrefixes(),    maximum);    	non-compiled	[CE]  illegal  start  of  expression	13	None	replace
51	[BUG]  [BUGGY]  newPrefixes.addAll(option.getPrefixes(),  minimal);  [CE]  illegal  start  of  expression  [FE]          OptionException    [CONTEXT]    i.remove();  newAnonymous.add(option);  }  else  {  final  Set  triggers  =  option.getTriggers();  for  (Iterator  j  =  triggers.iterator();  j.hasNext();)  {  newOptionMap.put(j.next(),  option);  }      [BUGGY]  newPrefixes.addAll(option.getPrefixes(),  minimal);  [BUGGY]    }  [CLASS]  GroupImpl  [METHOD]  <init>  [RETURN_TYPE]  String,int,int,boolean)  List  options  String  name  String  description  final  int  minimum  final  int  maximum  final  boolean  required  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  required  SortedMap  newOptionMap  optionMap  Iterator  i  j  List  anonymous  newAnonymous  options  Option  option  String  description  name  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	107	107	1	replace	newPrefixes.addAll(option.getPrefixes(),  minimal);	  newPrefixes.addAll(option.getPrefixes(),    maximum);    	non-compiled	[CE]  illegal  start  of  expression	13	None	replace
52	[BUG]  [BUGGY]  Option  option  =  optionMap.get(name,  required);  [CE]  illegal  start  of  expression  [FE]          OptionException    [CONTEXT]    i.remove();  newAnonymous.add(option);  }  else  {  final  Set  triggers  =  option.getTriggers();  for  (Iterator  j  =  triggers.iterator();  j.hasNext();)  {  newOptionMap.put(j.next(),  option);  }      [BUGGY]  Option  option  =  optionMap.get(name,  required);  [BUGGY]    newPrefixes.addAll(option.getPrefixes());  }  [CLASS]  GroupImpl  [METHOD]  <init>  [RETURN_TYPE]  String,int,int,boolean)  List  options  String  name  String  description  final  int  minimum  final  int  maximum  final  boolean  required  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  required  SortedMap  newOptionMap  optionMap  Iterator  i  j  List  anonymous  newAnonymous  options  Option  option  String  description  name  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	107	107	1	replace	Option  option  =  optionMap.get(name,  required);	      Option    option    =    optionMap.get(name);    	non-compiled	[CE]  illegal  start  of  expression	11	None	replace
53	[BUG]  [BUGGY]  newPrefixes.add(option.getPrefixes(),  name);  [CE]  illegal  start  of  expression  [FE]        OptionException    [CONTEXT]    i.remove();  newAnonymous.add(option);  }  else  {  final  Set  triggers  =  option.getTriggers();  for  (Iterator  j  =  triggers.iterator();  j.hasNext();)  {  newOptionMap.put(j.next(),  option);  }      [BUGGY]  newPrefixes.add(option.getPrefixes(),  name);  [BUGGY]    }  [CLASS]  GroupImpl  [METHOD]  <init>  [RETURN_TYPE]  String,int,int,boolean)  List  options  String  name  String  description  final  int  minimum  final  int  maximum  final  boolean  required  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  required  SortedMap  newOptionMap  optionMap  Iterator  i  j  List  anonymous  newAnonymous  options  Option  option  String  description  name  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	107	107	1	replace	newPrefixes.add(option.getPrefixes(),  name);	  newPrefixes.add(option.getPrefixes());    	non-compiled	[CE]  illegal  start  of  expression	1	None	replace
54	[BUG]  [BUGGY]  if(i.hasNext())  {  i.remove();  newAnonymous.addAll(option.getPrefixes());  }  [CE]  illegal  start  of  expression  [FE]          OptionException    [CONTEXT]    i.remove();  newAnonymous.add(option);  }  else  {  final  Set  triggers  =  option.getTriggers();  for  (Iterator  j  =  triggers.iterator();  j.hasNext();)  {  newOptionMap.put(j.next(),  option);  }      [BUGGY]  if(i.hasNext())  {  i.remove();  newAnonymous.addAll(option.getPrefixes());  }  [BUGGY]    newPrefixes.addAll(option.getPrefixes());  }  [CLASS]  GroupImpl  [METHOD]  <init>  [RETURN_TYPE]  String,int,int,boolean)  List  options  String  name  String  description  final  int  minimum  final  int  maximum  final  boolean  required  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  required  SortedMap  newOptionMap  optionMap  Iterator  i  j  List  anonymous  newAnonymous  options  Option  option  String  description  name  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	107	107	1	replace	if(i.hasNext())  {  i.remove();  newAnonymous.addAll(option.getPrefixes());  }	      i.remove();    newAnonymous.addAll(option.getPrefixes());    	non-compiled	[CE]  illegal  start  of  expression	6	None	replace
55	[BUG]  [BUGGY]  Option  option  =  option.getOption();  [CE]  illegal  start  of  expression  [FE]                OptionException    [CONTEXT]    i.remove();  newAnonymous.add(option);  }  else  {  final  Set  triggers  =  option.getTriggers();  for  (Iterator  j  =  triggers.iterator();  j.hasNext();)  {  newOptionMap.put(j.next(),  option);  }      [BUGGY]  Option  option  =  option.getOption();  [BUGGY]    newPrefixes.addAll(option.getPrefixes());  }  [CLASS]  GroupImpl  [METHOD]  <init>  [RETURN_TYPE]  String,int,int,boolean)  List  options  String  name  String  description  final  int  minimum  final  int  maximum  final  boolean  required  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  required  SortedMap  newOptionMap  optionMap  Iterator  i  j  List  anonymous  newAnonymous  options  Option  option  String  description  name  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	107	107	1	replace	Option  option  =  option.getOption();	      i.remove();    	non-compiled	[CE]  illegal  start  of  expression	9	None	replace
56	[BUG]  [BUGGY]  if(!required)  {  newAnonymous.addAll(option.getPrefixes());  }  [CE]  illegal  start  of  expression  [FE]        OptionException    [CONTEXT]    i.remove();  newAnonymous.add(option);  }  else  {  final  Set  triggers  =  option.getTriggers();  for  (Iterator  j  =  triggers.iterator();  j.hasNext();)  {  newOptionMap.put(j.next(),  option);  }      [BUGGY]  if(!required)  {  newAnonymous.addAll(option.getPrefixes());  }  [BUGGY]    newPrefixes.addAll(option.getPrefixes());  }  [CLASS]  GroupImpl  [METHOD]  <init>  [RETURN_TYPE]  String,int,int,boolean)  List  options  String  name  String  description  final  int  minimum  final  int  maximum  final  boolean  required  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  required  SortedMap  newOptionMap  optionMap  Iterator  i  j  List  anonymous  newAnonymous  options  Option  option  String  description  name  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	107	107	1	replace	if(!required)  {  newAnonymous.addAll(option.getPrefixes());  }	      newAnonymous.addAll(option.getPrefixes());    	non-compiled	[CE]  illegal  start  of  expression	5	None	replace
57	[BUG]  [BUGGY]  newPrefixes.addAll(option.getPrefixes(),  prefixes);  [CE]  illegal  start  of  expression  [FE]          OptionException    [CONTEXT]    i.remove();  newAnonymous.add(option);  }  else  {  final  Set  triggers  =  option.getTriggers();  for  (Iterator  j  =  triggers.iterator();  j.hasNext();)  {  newOptionMap.put(j.next(),  option);  }      [BUGGY]  newPrefixes.addAll(option.getPrefixes(),  prefixes);  [BUGGY]    }  [CLASS]  GroupImpl  [METHOD]  <init>  [RETURN_TYPE]  String,int,int,boolean)  List  options  String  name  String  description  final  int  minimum  final  int  maximum  final  boolean  required  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  required  SortedMap  newOptionMap  optionMap  Iterator  i  j  List  anonymous  newAnonymous  options  Option  option  String  description  name  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	107	107	1	replace	newPrefixes.addAll(option.getPrefixes(),  prefixes);	  newPrefixes.addAll(option.getPrefixes(),    options);    	non-compiled	[CE]  illegal  start  of  expression	2	None	replace
58	[BUG]  [BUGGY]  if(required)  {  i.remove();  newAnonymous.add(option);  }  else  {  final  Set  <  Option>  options  =  option.getOptionMap();  newPrefixes.addAll(option.getPrefixes());  }  [CE]  illegal  start  of  expression  [FE]              OptionException    [CONTEXT]    i.remove();  newAnonymous.add(option);  }  else  {  final  Set  triggers  =  option.getTriggers();  for  (Iterator  j  =  triggers.iterator();  j.hasNext();)  {  newOptionMap.put(j.next(),  option);  }      [BUGGY]  if(required)  {  i.remove();  newAnonymous.add(option);  }  else  {  final  Set  <  Option>  options  =  option.getOptionMap();  newPrefixes.addAll(option.getPrefixes());  }  [BUGGY]    newPrefixes.addAll(option.getPrefixes());  }  [CLASS]  GroupImpl  [METHOD]  <init>  [RETURN_TYPE]  String,int,int,boolean)  List  options  String  name  String  description  final  int  minimum  final  int  maximum  final  boolean  required  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  required  SortedMap  newOptionMap  optionMap  Iterator  i  j  List  anonymous  newAnonymous  options  Option  option  String  description  name  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	107	107	1	replace	if(required)  {  i.remove();  newAnonymous.add(option);  }  else  {  final  Set  <  Option>  options  =  option.getOptionMap();  newPrefixes.addAll(option.getPrefixes());  }	      i.remove();    newAnonymous.add(option);    	non-compiled	[CE]  illegal  start  of  expression	8	None	replace
59	[BUG]  [BUGGY]  newPrefixes.addAll(optionMap.get(i.getPrefixes()));  [CE]  illegal  start  of  expression  [FE]        OptionException    [CONTEXT]    i.remove();  newAnonymous.add(option);  }  else  {  final  Set  triggers  =  option.getTriggers();  for  (Iterator  j  =  triggers.iterator();  j.hasNext();)  {  newOptionMap.put(j.next(),  option);  }      [BUGGY]  newPrefixes.addAll(optionMap.get(i.getPrefixes()));  [BUGGY]    }  [CLASS]  GroupImpl  [METHOD]  <init>  [RETURN_TYPE]  String,int,int,boolean)  List  options  String  name  String  description  final  int  minimum  final  int  maximum  final  boolean  required  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  required  SortedMap  newOptionMap  optionMap  Iterator  i  j  List  anonymous  newAnonymous  options  Option  option  String  description  name  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	107	107	1	replace	newPrefixes.addAll(optionMap.get(i.getPrefixes()));	  newPrefixes.addAll(i.getPrefixes());    	non-compiled	[CE]  illegal  start  of  expression	14	None	replace
60	[BUG]  [BUGGY]  Option  option  =  options.getOption(name,  description);  [CE]  illegal  start  of  expression  [FE]            OptionException    [CONTEXT]    i.remove();  newAnonymous.add(option);  }  else  {  final  Set  triggers  =  option.getTriggers();  for  (Iterator  j  =  triggers.iterator();  j.hasNext();)  {  newOptionMap.put(j.next(),  option);  }      [BUGGY]  Option  option  =  options.getOption(name,  description);  [BUGGY]    newPrefixes.addAll(option.getPrefixes());  }  [CLASS]  GroupImpl  [METHOD]  <init>  [RETURN_TYPE]  String,int,int,boolean)  List  options  String  name  String  description  final  int  minimum  final  int  maximum  final  boolean  required  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  required  SortedMap  newOptionMap  optionMap  Iterator  i  j  List  anonymous  newAnonymous  options  Option  option  String  description  name  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	107	107	1	replace	Option  option  =  options.getOption(name,  description);	      Option    option    =    options.getOption(name);    	non-compiled	[CE]  illegal  start  of  expression	7	None	replace
