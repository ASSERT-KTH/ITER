bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	failing_test_number	action	patch
1	[BUG] [BUGGY] super(0, required); [FE] OptionException [CONTEXT] final boolean required) { [BUGGY] super(0, required); [BUGGY]  this.name = name; this.description = description; this.minimum = minimum; this.maximum = maximum;   this.options = Collections.unmodifiableList(options);  [CLASS] GroupImpl [METHOD] <init> [RETURN_TYPE] String,int,int,boolean)  List options String name String description final int minimum final int maximum final boolean required [VARIABLES] Set newPrefixes prefixes triggers boolean required SortedMap newOptionMap optionMap Iterator i j List anonymous newAnonymous options Option option String description name int maximum minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	71	71	1	replace	
2	[BUG] [BUGGY] [FE] OptionException [CONTEXT] final boolean required) { [BUGGY] [BUGGY] super(0, required); this.name = name; this.description = description; this.minimum = minimum; this.maximum = maximum;   this.options = Collections.unmodifiableList(options);  [CLASS] GroupImpl [METHOD] <init> [RETURN_TYPE] String,int,int,boolean)  List options String name String description final int minimum final int maximum final boolean required [VARIABLES] Set newPrefixes prefixes triggers boolean required SortedMap newOptionMap optionMap Iterator i j List anonymous newAnonymous options Option option String description name int maximum minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	71	71	1	add	
3	[BUG] [BUGGY] this.name = name; [FE] OptionException [CONTEXT] final boolean required) { super(0, required); [BUGGY] this.name = name; [BUGGY] this.description = description; this.minimum = minimum; this.maximum = maximum;   this.options = Collections.unmodifiableList(options);  final List newAnonymous = new ArrayList(); [CLASS] GroupImpl [METHOD] <init> [RETURN_TYPE] String,int,int,boolean)  List options String name String description final int minimum final int maximum final boolean required [VARIABLES] Set newPrefixes prefixes triggers boolean required SortedMap newOptionMap optionMap Iterator i j List anonymous newAnonymous options Option option String description name int maximum minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	73	73	1	replace	
4	[BUG] [BUGGY] [FE] OptionException [CONTEXT] final boolean required) { super(0, required); [BUGGY] [BUGGY] this.name = name; this.description = description; this.minimum = minimum; this.maximum = maximum;   this.options = Collections.unmodifiableList(options);  final List newAnonymous = new ArrayList(); [CLASS] GroupImpl [METHOD] <init> [RETURN_TYPE] String,int,int,boolean)  List options String name String description final int minimum final int maximum final boolean required [VARIABLES] Set newPrefixes prefixes triggers boolean required SortedMap newOptionMap optionMap Iterator i j List anonymous newAnonymous options Option option String description name int maximum minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	73	73	1	add	
5	[BUG] [BUGGY] this.description = description; [FE] OptionException [CONTEXT] final boolean required) { super(0, required); this.name = name; [BUGGY] this.description = description; [BUGGY] this.minimum = minimum; this.maximum = maximum;   this.options = Collections.unmodifiableList(options);  final List newAnonymous = new ArrayList();  [CLASS] GroupImpl [METHOD] <init> [RETURN_TYPE] String,int,int,boolean)  List options String name String description final int minimum final int maximum final boolean required [VARIABLES] Set newPrefixes prefixes triggers boolean required SortedMap newOptionMap optionMap Iterator i j List anonymous newAnonymous options Option option String description name int maximum minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	74	74	1	replace	
6	[BUG] [BUGGY] [FE] OptionException [CONTEXT] final boolean required) { super(0, required); this.name = name; [BUGGY] [BUGGY] this.description = description; this.minimum = minimum; this.maximum = maximum;   this.options = Collections.unmodifiableList(options);  final List newAnonymous = new ArrayList();  [CLASS] GroupImpl [METHOD] <init> [RETURN_TYPE] String,int,int,boolean)  List options String name String description final int minimum final int maximum final boolean required [VARIABLES] Set newPrefixes prefixes triggers boolean required SortedMap newOptionMap optionMap Iterator i j List anonymous newAnonymous options Option option String description name int maximum minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	74	74	1	add	
7	[BUG] [BUGGY] this.minimum = minimum; [FE] OptionException [CONTEXT] final boolean required) { super(0, required); this.name = name; this.description = description; [BUGGY] this.minimum = minimum; [BUGGY] this.maximum = maximum;   this.options = Collections.unmodifiableList(options);  final List newAnonymous = new ArrayList();   [CLASS] GroupImpl [METHOD] <init> [RETURN_TYPE] String,int,int,boolean)  List options String name String description final int minimum final int maximum final boolean required [VARIABLES] Set newPrefixes prefixes triggers boolean required SortedMap newOptionMap optionMap Iterator i j List anonymous newAnonymous options Option option String description name int maximum minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	75	75	1	replace	
8	[BUG] [BUGGY] [FE] OptionException [CONTEXT] final boolean required) { super(0, required); this.name = name; this.description = description; [BUGGY] [BUGGY] this.minimum = minimum; this.maximum = maximum;   this.options = Collections.unmodifiableList(options);  final List newAnonymous = new ArrayList();   [CLASS] GroupImpl [METHOD] <init> [RETURN_TYPE] String,int,int,boolean)  List options String name String description final int minimum final int maximum final boolean required [VARIABLES] Set newPrefixes prefixes triggers boolean required SortedMap newOptionMap optionMap Iterator i j List anonymous newAnonymous options Option option String description name int maximum minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	75	75	1	add	
9	[BUG] [BUGGY] this.maximum = maximum; [FE] OptionException [CONTEXT] final boolean required) { super(0, required); this.name = name; this.description = description; this.minimum = minimum; [BUGGY] this.maximum = maximum; [BUGGY]    this.options = Collections.unmodifiableList(options);  final List newAnonymous = new ArrayList();  final SortedMap newOptionMap = new TreeMap(ReverseStringComparator.getInstance()); [CLASS] GroupImpl [METHOD] <init> [RETURN_TYPE] String,int,int,boolean)  List options String name String description final int minimum final int maximum final boolean required [VARIABLES] Set newPrefixes prefixes triggers boolean required SortedMap newOptionMap optionMap Iterator i j List anonymous newAnonymous options Option option String description name int maximum minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	76	76	1	replace	
10	[BUG] [BUGGY] [FE] OptionException [CONTEXT] final boolean required) { super(0, required); this.name = name; this.description = description; this.minimum = minimum; [BUGGY] [BUGGY] this.maximum = maximum;   this.options = Collections.unmodifiableList(options);  final List newAnonymous = new ArrayList();  final SortedMap newOptionMap = new TreeMap(ReverseStringComparator.getInstance()); [CLASS] GroupImpl [METHOD] <init> [RETURN_TYPE] String,int,int,boolean)  List options String name String description final int minimum final int maximum final boolean required [VARIABLES] Set newPrefixes prefixes triggers boolean required SortedMap newOptionMap optionMap Iterator i j List anonymous newAnonymous options Option option String description name int maximum minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	76	76	1	add	
11	[BUG] [BUGGY] this.options = Collections.unmodifiableList(options); [FE] OptionException [CONTEXT] final boolean required) { super(0, required); this.name = name; this.description = description; this.minimum = minimum; this.maximum = maximum;   [BUGGY] this.options = Collections.unmodifiableList(options); [BUGGY]   final List newAnonymous = new ArrayList();  final SortedMap newOptionMap = new TreeMap(ReverseStringComparator.getInstance());  final Set newPrefixes = new HashSet();  [CLASS] GroupImpl [METHOD] <init> [RETURN_TYPE] String,int,int,boolean)  List options String name String description final int minimum final int maximum final boolean required [VARIABLES] Set newPrefixes prefixes triggers boolean required SortedMap newOptionMap optionMap Iterator i j List anonymous newAnonymous options Option option String description name int maximum minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	80	80	1	replace	
12	[BUG] [BUGGY] [FE] OptionException [CONTEXT] final boolean required) { super(0, required); this.name = name; this.description = description; this.minimum = minimum; this.maximum = maximum;   [BUGGY] [BUGGY] this.options = Collections.unmodifiableList(options);  final List newAnonymous = new ArrayList();  final SortedMap newOptionMap = new TreeMap(ReverseStringComparator.getInstance());  final Set newPrefixes = new HashSet();  [CLASS] GroupImpl [METHOD] <init> [RETURN_TYPE] String,int,int,boolean)  List options String name String description final int minimum final int maximum final boolean required [VARIABLES] Set newPrefixes prefixes triggers boolean required SortedMap newOptionMap optionMap Iterator i j List anonymous newAnonymous options Option option String description name int maximum minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	80	80	1	add	
13	[BUG] [BUGGY] final List newAnonymous = new ArrayList(); [FE] OptionException [CONTEXT] this.name = name; this.description = description; this.minimum = minimum; this.maximum = maximum;   this.options = Collections.unmodifiableList(options);  [BUGGY] final List newAnonymous = new ArrayList(); [BUGGY]   final SortedMap newOptionMap = new TreeMap(ReverseStringComparator.getInstance());  final Set newPrefixes = new HashSet();  for (final Iterator i = options.iterator(); i.hasNext();) { final Option option = (Option) i.next(); [CLASS] GroupImpl [METHOD] <init> [RETURN_TYPE] String,int,int,boolean)  List options String name String description final int minimum final int maximum final boolean required [VARIABLES] Set newPrefixes prefixes triggers boolean required SortedMap newOptionMap optionMap Iterator i j List anonymous newAnonymous options Option option String description name int maximum minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	83	83	1	replace	
14	[BUG] [BUGGY] [FE] OptionException [CONTEXT] this.name = name; this.description = description; this.minimum = minimum; this.maximum = maximum;   this.options = Collections.unmodifiableList(options);  [BUGGY] [BUGGY] final List newAnonymous = new ArrayList();  final SortedMap newOptionMap = new TreeMap(ReverseStringComparator.getInstance());  final Set newPrefixes = new HashSet();  for (final Iterator i = options.iterator(); i.hasNext();) { final Option option = (Option) i.next(); [CLASS] GroupImpl [METHOD] <init> [RETURN_TYPE] String,int,int,boolean)  List options String name String description final int minimum final int maximum final boolean required [VARIABLES] Set newPrefixes prefixes triggers boolean required SortedMap newOptionMap optionMap Iterator i j List anonymous newAnonymous options Option option String description name int maximum minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	83	83	1	add	
15	[BUG] [BUGGY] final SortedMap newOptionMap = new TreeMap(ReverseStringComparator.getInstance()); [FE] OptionException [CONTEXT] this.maximum = maximum;   this.options = Collections.unmodifiableList(options);  final List newAnonymous = new ArrayList();  [BUGGY] final SortedMap newOptionMap = new TreeMap(ReverseStringComparator.getInstance()); [BUGGY]   final Set newPrefixes = new HashSet();  for (final Iterator i = options.iterator(); i.hasNext();) { final Option option = (Option) i.next(); option.setParent(this); if (option instanceof Argument) { [CLASS] GroupImpl [METHOD] <init> [RETURN_TYPE] String,int,int,boolean)  List options String name String description final int minimum final int maximum final boolean required [VARIABLES] Set newPrefixes prefixes triggers boolean required SortedMap newOptionMap optionMap Iterator i j List anonymous newAnonymous options Option option String description name int maximum minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	86	86	1	replace	
16	[BUG] [BUGGY] [FE] OptionException [CONTEXT] this.maximum = maximum;   this.options = Collections.unmodifiableList(options);  final List newAnonymous = new ArrayList();  [BUGGY] [BUGGY] final SortedMap newOptionMap = new TreeMap(ReverseStringComparator.getInstance());  final Set newPrefixes = new HashSet();  for (final Iterator i = options.iterator(); i.hasNext();) { final Option option = (Option) i.next(); option.setParent(this); if (option instanceof Argument) { [CLASS] GroupImpl [METHOD] <init> [RETURN_TYPE] String,int,int,boolean)  List options String name String description final int minimum final int maximum final boolean required [VARIABLES] Set newPrefixes prefixes triggers boolean required SortedMap newOptionMap optionMap Iterator i j List anonymous newAnonymous options Option option String description name int maximum minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	86	86	1	add	
17	[BUG] [BUGGY] final Set newPrefixes = new HashSet(); [FE] OptionException [CONTEXT]  this.options = Collections.unmodifiableList(options);  final List newAnonymous = new ArrayList();  final SortedMap newOptionMap = new TreeMap(ReverseStringComparator.getInstance());  [BUGGY] final Set newPrefixes = new HashSet(); [BUGGY]   for (final Iterator i = options.iterator(); i.hasNext();) { final Option option = (Option) i.next(); option.setParent(this); if (option instanceof Argument) { i.remove(); newAnonymous.add(option); } else { [CLASS] GroupImpl [METHOD] <init> [RETURN_TYPE] String,int,int,boolean)  List options String name String description final int minimum final int maximum final boolean required [VARIABLES] Set newPrefixes prefixes triggers boolean required SortedMap newOptionMap optionMap Iterator i j List anonymous newAnonymous options Option option String description name int maximum minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	89	89	1	replace	
18	[BUG] [BUGGY] [FE] OptionException [CONTEXT]  this.options = Collections.unmodifiableList(options);  final List newAnonymous = new ArrayList();  final SortedMap newOptionMap = new TreeMap(ReverseStringComparator.getInstance());  [BUGGY] [BUGGY] final Set newPrefixes = new HashSet();  for (final Iterator i = options.iterator(); i.hasNext();) { final Option option = (Option) i.next(); option.setParent(this); if (option instanceof Argument) { i.remove(); newAnonymous.add(option); } else { [CLASS] GroupImpl [METHOD] <init> [RETURN_TYPE] String,int,int,boolean)  List options String name String description final int minimum final int maximum final boolean required [VARIABLES] Set newPrefixes prefixes triggers boolean required SortedMap newOptionMap optionMap Iterator i j List anonymous newAnonymous options Option option String description name int maximum minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	89	89	1	add	
19	[BUG] [BUGGY] for (final Iterator i = options.iterator(); i.hasNext();) { [FE] OptionException [CONTEXT]  final List newAnonymous = new ArrayList();  final SortedMap newOptionMap = new TreeMap(ReverseStringComparator.getInstance());  final Set newPrefixes = new HashSet();  [BUGGY] for (final Iterator i = options.iterator(); i.hasNext();) { [BUGGY] final Option option = (Option) i.next(); option.setParent(this); if (option instanceof Argument) { i.remove(); newAnonymous.add(option); } else { final Set triggers = option.getTriggers(); for (Iterator j = triggers.iterator(); j.hasNext();) { [CLASS] GroupImpl [METHOD] <init> [RETURN_TYPE] String,int,int,boolean)  List options String name String description final int minimum final int maximum final boolean required [VARIABLES] Set newPrefixes prefixes triggers boolean required SortedMap newOptionMap optionMap Iterator i j List anonymous newAnonymous options Option option String description name int maximum minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	92	92	1	replace	
20	[BUG] [BUGGY] [FE] OptionException [CONTEXT]  final List newAnonymous = new ArrayList();  final SortedMap newOptionMap = new TreeMap(ReverseStringComparator.getInstance());  final Set newPrefixes = new HashSet();  [BUGGY] [BUGGY] for (final Iterator i = options.iterator(); i.hasNext();) { final Option option = (Option) i.next(); option.setParent(this); if (option instanceof Argument) { i.remove(); newAnonymous.add(option); } else { final Set triggers = option.getTriggers(); for (Iterator j = triggers.iterator(); j.hasNext();) { [CLASS] GroupImpl [METHOD] <init> [RETURN_TYPE] String,int,int,boolean)  List options String name String description final int minimum final int maximum final boolean required [VARIABLES] Set newPrefixes prefixes triggers boolean required SortedMap newOptionMap optionMap Iterator i j List anonymous newAnonymous options Option option String description name int maximum minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	92	92	1	add	
21	[BUG] [BUGGY] final Option option = (Option) i.next(); [FE] OptionException [CONTEXT] final List newAnonymous = new ArrayList();  final SortedMap newOptionMap = new TreeMap(ReverseStringComparator.getInstance());  final Set newPrefixes = new HashSet();  for (final Iterator i = options.iterator(); i.hasNext();) { [BUGGY] final Option option = (Option) i.next(); [BUGGY] option.setParent(this); if (option instanceof Argument) { i.remove(); newAnonymous.add(option); } else { final Set triggers = option.getTriggers(); for (Iterator j = triggers.iterator(); j.hasNext();) { newOptionMap.put(j.next(), option); [CLASS] GroupImpl [METHOD] <init> [RETURN_TYPE] String,int,int,boolean)  List options String name String description final int minimum final int maximum final boolean required [VARIABLES] Set newPrefixes prefixes triggers boolean required SortedMap newOptionMap optionMap Iterator i j List anonymous newAnonymous options Option option String description name int maximum minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	93	93	1	replace	
22	[BUG] [BUGGY] [FE] OptionException [CONTEXT] final List newAnonymous = new ArrayList();  final SortedMap newOptionMap = new TreeMap(ReverseStringComparator.getInstance());  final Set newPrefixes = new HashSet();  for (final Iterator i = options.iterator(); i.hasNext();) { [BUGGY] [BUGGY] final Option option = (Option) i.next(); option.setParent(this); if (option instanceof Argument) { i.remove(); newAnonymous.add(option); } else { final Set triggers = option.getTriggers(); for (Iterator j = triggers.iterator(); j.hasNext();) { newOptionMap.put(j.next(), option); [CLASS] GroupImpl [METHOD] <init> [RETURN_TYPE] String,int,int,boolean)  List options String name String description final int minimum final int maximum final boolean required [VARIABLES] Set newPrefixes prefixes triggers boolean required SortedMap newOptionMap optionMap Iterator i j List anonymous newAnonymous options Option option String description name int maximum minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	93	93	1	add	
23	[BUG] [BUGGY] option.setParent(this); [FE] OptionException [CONTEXT]  final SortedMap newOptionMap = new TreeMap(ReverseStringComparator.getInstance());  final Set newPrefixes = new HashSet();  for (final Iterator i = options.iterator(); i.hasNext();) { final Option option = (Option) i.next(); [BUGGY] option.setParent(this); [BUGGY]  if (option instanceof Argument) { i.remove(); newAnonymous.add(option); } else { final Set triggers = option.getTriggers(); for (Iterator j = triggers.iterator(); j.hasNext();) { newOptionMap.put(j.next(), option); } [CLASS] GroupImpl [METHOD] <init> [RETURN_TYPE] String,int,int,boolean)  List options String name String description final int minimum final int maximum final boolean required [VARIABLES] Set newPrefixes prefixes triggers boolean required SortedMap newOptionMap optionMap Iterator i j List anonymous newAnonymous options Option option String description name int maximum minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	94	94	1	replace	
24	[BUG] [BUGGY] [FE] OptionException [CONTEXT]  final SortedMap newOptionMap = new TreeMap(ReverseStringComparator.getInstance());  final Set newPrefixes = new HashSet();  for (final Iterator i = options.iterator(); i.hasNext();) { final Option option = (Option) i.next(); [BUGGY] [BUGGY] option.setParent(this); if (option instanceof Argument) { i.remove(); newAnonymous.add(option); } else { final Set triggers = option.getTriggers(); for (Iterator j = triggers.iterator(); j.hasNext();) { newOptionMap.put(j.next(), option); } [CLASS] GroupImpl [METHOD] <init> [RETURN_TYPE] String,int,int,boolean)  List options String name String description final int minimum final int maximum final boolean required [VARIABLES] Set newPrefixes prefixes triggers boolean required SortedMap newOptionMap optionMap Iterator i j List anonymous newAnonymous options Option option String description name int maximum minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	94	94	1	add	
25	[BUG] [BUGGY] if (option instanceof Argument) { [FE] OptionException [CONTEXT] final SortedMap newOptionMap = new TreeMap(ReverseStringComparator.getInstance());  final Set newPrefixes = new HashSet();  for (final Iterator i = options.iterator(); i.hasNext();) { final Option option = (Option) i.next(); option.setParent(this); [BUGGY] if (option instanceof Argument) { [BUGGY] i.remove(); newAnonymous.add(option); } else { final Set triggers = option.getTriggers(); for (Iterator j = triggers.iterator(); j.hasNext();) { newOptionMap.put(j.next(), option); }   [CLASS] GroupImpl [METHOD] <init> [RETURN_TYPE] String,int,int,boolean)  List options String name String description final int minimum final int maximum final boolean required [VARIABLES] Set newPrefixes prefixes triggers boolean required SortedMap newOptionMap optionMap Iterator i j List anonymous newAnonymous options Option option String description name int maximum minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	96	96	1	replace	
26	[BUG] [BUGGY] [FE] OptionException [CONTEXT] final SortedMap newOptionMap = new TreeMap(ReverseStringComparator.getInstance());  final Set newPrefixes = new HashSet();  for (final Iterator i = options.iterator(); i.hasNext();) { final Option option = (Option) i.next(); option.setParent(this); [BUGGY] [BUGGY] if (option instanceof Argument) { i.remove(); newAnonymous.add(option); } else { final Set triggers = option.getTriggers(); for (Iterator j = triggers.iterator(); j.hasNext();) { newOptionMap.put(j.next(), option); }   [CLASS] GroupImpl [METHOD] <init> [RETURN_TYPE] String,int,int,boolean)  List options String name String description final int minimum final int maximum final boolean required [VARIABLES] Set newPrefixes prefixes triggers boolean required SortedMap newOptionMap optionMap Iterator i j List anonymous newAnonymous options Option option String description name int maximum minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	96	96	1	add	
27	[BUG] [BUGGY] final Set triggers = option.getTriggers(); [FE] OptionException [CONTEXT] if (option instanceof Argument) { i.remove(); newAnonymous.add(option); } else { [BUGGY] final Set triggers = option.getTriggers(); [BUGGY]  for (Iterator j = triggers.iterator(); j.hasNext();) { newOptionMap.put(j.next(), option); }  newPrefixes.addAll(option.getPrefixes()); } [CLASS] GroupImpl [METHOD] <init> [RETURN_TYPE] String,int,int,boolean)  List options String name String description final int minimum final int maximum final boolean required [VARIABLES] Set newPrefixes prefixes triggers boolean required SortedMap newOptionMap optionMap Iterator i j List anonymous newAnonymous options Option option String description name int maximum minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	100	100	1	replace	
28	[BUG] [BUGGY] [FE] OptionException [CONTEXT] if (option instanceof Argument) { i.remove(); newAnonymous.add(option); } else { [BUGGY] [BUGGY] final Set triggers = option.getTriggers(); for (Iterator j = triggers.iterator(); j.hasNext();) { newOptionMap.put(j.next(), option); }  newPrefixes.addAll(option.getPrefixes()); } [CLASS] GroupImpl [METHOD] <init> [RETURN_TYPE] String,int,int,boolean)  List options String name String description final int minimum final int maximum final boolean required [VARIABLES] Set newPrefixes prefixes triggers boolean required SortedMap newOptionMap optionMap Iterator i j List anonymous newAnonymous options Option option String description name int maximum minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	100	100	1	add	
29	[BUG] [BUGGY] for (Iterator j = triggers.iterator(); j.hasNext();) { [FE] OptionException [CONTEXT] if (option instanceof Argument) { i.remove(); newAnonymous.add(option); } else { final Set triggers = option.getTriggers(); [BUGGY] for (Iterator j = triggers.iterator(); j.hasNext();) { [BUGGY] newOptionMap.put(j.next(), option); }  newPrefixes.addAll(option.getPrefixes()); } [CLASS] GroupImpl [METHOD] <init> [RETURN_TYPE] String,int,int,boolean)  List options String name String description final int minimum final int maximum final boolean required [VARIABLES] Set newPrefixes prefixes triggers boolean required SortedMap newOptionMap optionMap Iterator i j List anonymous newAnonymous options Option option String description name int maximum minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	102	102	1	replace	
30	[BUG] [BUGGY] [FE] OptionException [CONTEXT] if (option instanceof Argument) { i.remove(); newAnonymous.add(option); } else { final Set triggers = option.getTriggers(); [BUGGY] [BUGGY] for (Iterator j = triggers.iterator(); j.hasNext();) { newOptionMap.put(j.next(), option); }  newPrefixes.addAll(option.getPrefixes()); } [CLASS] GroupImpl [METHOD] <init> [RETURN_TYPE] String,int,int,boolean)  List options String name String description final int minimum final int maximum final boolean required [VARIABLES] Set newPrefixes prefixes triggers boolean required SortedMap newOptionMap optionMap Iterator i j List anonymous newAnonymous options Option option String description name int maximum minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	102	102	1	add	
31	[BUG] [BUGGY] newOptionMap.put(j.next(), option); [FE] OptionException [CONTEXT] if (option instanceof Argument) { i.remove(); newAnonymous.add(option); } else { final Set triggers = option.getTriggers(); for (Iterator j = triggers.iterator(); j.hasNext();) { [BUGGY] newOptionMap.put(j.next(), option); [BUGGY] }  newPrefixes.addAll(option.getPrefixes()); } [CLASS] GroupImpl [METHOD] <init> [RETURN_TYPE] String,int,int,boolean)  List options String name String description final int minimum final int maximum final boolean required [VARIABLES] Set newPrefixes prefixes triggers boolean required SortedMap newOptionMap optionMap Iterator i j List anonymous newAnonymous options Option option String description name int maximum minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	103	103	1	replace	
32	[BUG] [BUGGY] [FE] OptionException [CONTEXT] if (option instanceof Argument) { i.remove(); newAnonymous.add(option); } else { final Set triggers = option.getTriggers(); for (Iterator j = triggers.iterator(); j.hasNext();) { [BUGGY] [BUGGY] newOptionMap.put(j.next(), option); }  newPrefixes.addAll(option.getPrefixes()); } [CLASS] GroupImpl [METHOD] <init> [RETURN_TYPE] String,int,int,boolean)  List options String name String description final int minimum final int maximum final boolean required [VARIABLES] Set newPrefixes prefixes triggers boolean required SortedMap newOptionMap optionMap Iterator i j List anonymous newAnonymous options Option option String description name int maximum minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	103	103	1	add	
33	[BUG] [BUGGY] newPrefixes.addAll(option.getPrefixes()); [FE] OptionException [CONTEXT] i.remove(); newAnonymous.add(option); } else { final Set triggers = option.getTriggers(); for (Iterator j = triggers.iterator(); j.hasNext();) { newOptionMap.put(j.next(), option); }  [BUGGY] newPrefixes.addAll(option.getPrefixes()); [BUGGY] } [CLASS] GroupImpl [METHOD] <init> [RETURN_TYPE] String,int,int,boolean)  List options String name String description final int minimum final int maximum final boolean required [VARIABLES] Set newPrefixes prefixes triggers boolean required SortedMap newOptionMap optionMap Iterator i j List anonymous newAnonymous options Option option String description name int maximum minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	107	107	1	replace	
34	[BUG] [BUGGY] [FE] OptionException [CONTEXT] i.remove(); newAnonymous.add(option); } else { final Set triggers = option.getTriggers(); for (Iterator j = triggers.iterator(); j.hasNext();) { newOptionMap.put(j.next(), option); }  [BUGGY] [BUGGY] newPrefixes.addAll(option.getPrefixes()); } [CLASS] GroupImpl [METHOD] <init> [RETURN_TYPE] String,int,int,boolean)  List options String name String description final int minimum final int maximum final boolean required [VARIABLES] Set newPrefixes prefixes triggers boolean required SortedMap newOptionMap optionMap Iterator i j List anonymous newAnonymous options Option option String description name int maximum minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	107	107	1	add	
35	[BUG] [BUGGY] [FE] OptionException [CONTEXT] } else { final Set triggers = option.getTriggers(); for (Iterator j = triggers.iterator(); j.hasNext();) { newOptionMap.put(j.next(), option); }  newPrefixes.addAll(option.getPrefixes()); } [CLASS] GroupImpl [METHOD] <init> [RETURN_TYPE] String,int,int,boolean)  List options String name String description final int minimum final int maximum final boolean required [VARIABLES] Set newPrefixes prefixes triggers boolean required SortedMap newOptionMap optionMap Iterator i j List anonymous newAnonymous options Option option String description name int maximum minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	109	109	1	replace	
36	[BUG] [BUGGY] [FE] OptionException [CONTEXT] } else { final Set triggers = option.getTriggers(); for (Iterator j = triggers.iterator(); j.hasNext();) { newOptionMap.put(j.next(), option); }  newPrefixes.addAll(option.getPrefixes()); } [CLASS] GroupImpl [METHOD] <init> [RETURN_TYPE] String,int,int,boolean)  List options String name String description final int minimum final int maximum final boolean required [VARIABLES] Set newPrefixes prefixes triggers boolean required SortedMap newOptionMap optionMap Iterator i j List anonymous newAnonymous options Option option String description name int maximum minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	109	109	1	add	
37	[BUG] [BUGGY] this.anonymous = Collections.unmodifiableList(newAnonymous); [FE] OptionException [CONTEXT] for (Iterator j = triggers.iterator(); j.hasNext();) { newOptionMap.put(j.next(), option); }  newPrefixes.addAll(option.getPrefixes()); } } [BUGGY] this.anonymous = Collections.unmodifiableList(newAnonymous); [BUGGY] this.optionMap = Collections.unmodifiableSortedMap(newOptionMap); this.prefixes = Collections.unmodifiableSet(newPrefixes); } [CLASS] GroupImpl [METHOD] <init> [RETURN_TYPE] String,int,int,boolean)  List options String name String description final int minimum final int maximum final boolean required [VARIABLES] Set newPrefixes prefixes triggers boolean required SortedMap newOptionMap optionMap Iterator i j List anonymous newAnonymous options Option option String description name int maximum minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	111	111	1	replace	
38	[BUG] [BUGGY] [FE] OptionException [CONTEXT] for (Iterator j = triggers.iterator(); j.hasNext();) { newOptionMap.put(j.next(), option); }  newPrefixes.addAll(option.getPrefixes()); } } [BUGGY] [BUGGY] this.anonymous = Collections.unmodifiableList(newAnonymous); this.optionMap = Collections.unmodifiableSortedMap(newOptionMap); this.prefixes = Collections.unmodifiableSet(newPrefixes); } [CLASS] GroupImpl [METHOD] <init> [RETURN_TYPE] String,int,int,boolean)  List options String name String description final int minimum final int maximum final boolean required [VARIABLES] Set newPrefixes prefixes triggers boolean required SortedMap newOptionMap optionMap Iterator i j List anonymous newAnonymous options Option option String description name int maximum minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	111	111	1	add	
39	[BUG] [BUGGY] this.optionMap = Collections.unmodifiableSortedMap(newOptionMap); [FE] OptionException [CONTEXT] for (Iterator j = triggers.iterator(); j.hasNext();) { newOptionMap.put(j.next(), option); }  newPrefixes.addAll(option.getPrefixes()); } } this.anonymous = Collections.unmodifiableList(newAnonymous); [BUGGY] this.optionMap = Collections.unmodifiableSortedMap(newOptionMap); [BUGGY] this.prefixes = Collections.unmodifiableSet(newPrefixes); } [CLASS] GroupImpl [METHOD] <init> [RETURN_TYPE] String,int,int,boolean)  List options String name String description final int minimum final int maximum final boolean required [VARIABLES] Set newPrefixes prefixes triggers boolean required SortedMap newOptionMap optionMap Iterator i j List anonymous newAnonymous options Option option String description name int maximum minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	112	112	1	replace	
40	[BUG] [BUGGY] [FE] OptionException [CONTEXT] for (Iterator j = triggers.iterator(); j.hasNext();) { newOptionMap.put(j.next(), option); }  newPrefixes.addAll(option.getPrefixes()); } } this.anonymous = Collections.unmodifiableList(newAnonymous); [BUGGY] [BUGGY] this.optionMap = Collections.unmodifiableSortedMap(newOptionMap); this.prefixes = Collections.unmodifiableSet(newPrefixes); } [CLASS] GroupImpl [METHOD] <init> [RETURN_TYPE] String,int,int,boolean)  List options String name String description final int minimum final int maximum final boolean required [VARIABLES] Set newPrefixes prefixes triggers boolean required SortedMap newOptionMap optionMap Iterator i j List anonymous newAnonymous options Option option String description name int maximum minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	112	112	1	add	
41	[BUG] [BUGGY] this.prefixes = Collections.unmodifiableSet(newPrefixes); [FE] OptionException [CONTEXT] newOptionMap.put(j.next(), option); }  newPrefixes.addAll(option.getPrefixes()); } } this.anonymous = Collections.unmodifiableList(newAnonymous); this.optionMap = Collections.unmodifiableSortedMap(newOptionMap); [BUGGY] this.prefixes = Collections.unmodifiableSet(newPrefixes); [BUGGY] } [CLASS] GroupImpl [METHOD] <init> [RETURN_TYPE] String,int,int,boolean)  List options String name String description final int minimum final int maximum final boolean required [VARIABLES] Set newPrefixes prefixes triggers boolean required SortedMap newOptionMap optionMap Iterator i j List anonymous newAnonymous options Option option String description name int maximum minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	113	113	1	replace	
42	[BUG] [BUGGY] [FE] OptionException [CONTEXT] newOptionMap.put(j.next(), option); }  newPrefixes.addAll(option.getPrefixes()); } } this.anonymous = Collections.unmodifiableList(newAnonymous); this.optionMap = Collections.unmodifiableSortedMap(newOptionMap); [BUGGY] [BUGGY] this.prefixes = Collections.unmodifiableSet(newPrefixes); } [CLASS] GroupImpl [METHOD] <init> [RETURN_TYPE] String,int,int,boolean)  List options String name String description final int minimum final int maximum final boolean required [VARIABLES] Set newPrefixes prefixes triggers boolean required SortedMap newOptionMap optionMap Iterator i j List anonymous newAnonymous options Option option String description name int maximum minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	113	113	1	add	
43	[BUG] [BUGGY] } [FE] OptionException [CONTEXT] }  newPrefixes.addAll(option.getPrefixes()); } } this.anonymous = Collections.unmodifiableList(newAnonymous); this.optionMap = Collections.unmodifiableSortedMap(newOptionMap); this.prefixes = Collections.unmodifiableSet(newPrefixes); [BUGGY] } [BUGGY]  [CLASS] GroupImpl [METHOD] <init> [RETURN_TYPE] String,int,int,boolean)  List options String name String description final int minimum final int maximum final boolean required [VARIABLES] Set newPrefixes prefixes triggers boolean required SortedMap newOptionMap optionMap Iterator i j List anonymous newAnonymous options Option option String description name int maximum minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	114	114	1	replace	
44	[BUG] [BUGGY] [FE] OptionException [CONTEXT] }  newPrefixes.addAll(option.getPrefixes()); } } this.anonymous = Collections.unmodifiableList(newAnonymous); this.optionMap = Collections.unmodifiableSortedMap(newOptionMap); this.prefixes = Collections.unmodifiableSet(newPrefixes); [BUGGY] [BUGGY] } [CLASS] GroupImpl [METHOD] <init> [RETURN_TYPE] String,int,int,boolean)  List options String name String description final int minimum final int maximum final boolean required [VARIABLES] Set newPrefixes prefixes triggers boolean required SortedMap newOptionMap optionMap Iterator i j List anonymous newAnonymous options Option option String description name int maximum minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	114	114	1	add	
45	[BUG] [BUGGY] if (arg == null) { [FE] OptionException [CONTEXT] final String arg) { [BUGGY] if (arg == null) { [BUGGY] return false; }  if (optionMap.containsKey(arg)) { return true; }  final Map tailMap = optionMap.tailMap(arg); [CLASS] GroupImpl [METHOD] canProcess [RETURN_TYPE] boolean  WriteableCommandLine commandLine String arg [VARIABLES] Set newPrefixes prefixes triggers boolean SortedMap newOptionMap optionMap WriteableCommandLine commandLine Iterator iter List anonymous newAnonymous options Option option String arg description name Map tailMap int maximum minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	118	118	1	replace	
46	[BUG] [BUGGY] [FE] OptionException [CONTEXT] final String arg) { [BUGGY] [BUGGY] if (arg == null) { return false; }  if (optionMap.containsKey(arg)) { return true; }  final Map tailMap = optionMap.tailMap(arg); [CLASS] GroupImpl [METHOD] canProcess [RETURN_TYPE] boolean  WriteableCommandLine commandLine String arg [VARIABLES] Set newPrefixes prefixes triggers boolean SortedMap newOptionMap optionMap WriteableCommandLine commandLine Iterator iter List anonymous newAnonymous options Option option String arg description name Map tailMap int maximum minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	118	118	1	add	
47	[BUG] [BUGGY] if (optionMap.containsKey(arg)) { [FE] OptionException [CONTEXT] final String arg) { if (arg == null) { return false; }  [BUGGY] if (optionMap.containsKey(arg)) { [BUGGY] return true; }  final Map tailMap = optionMap.tailMap(arg);  for (final Iterator iter = tailMap.values().iterator(); iter.hasNext();) { final Option option = (Option) iter.next();  [CLASS] GroupImpl [METHOD] canProcess [RETURN_TYPE] boolean  WriteableCommandLine commandLine String arg [VARIABLES] Set newPrefixes prefixes triggers boolean SortedMap newOptionMap optionMap WriteableCommandLine commandLine Iterator iter List anonymous newAnonymous options Option option String arg description name Map tailMap int maximum minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	123	123	1	replace	
48	[BUG] [BUGGY] [FE] OptionException [CONTEXT] final String arg) { if (arg == null) { return false; }  [BUGGY] [BUGGY] if (optionMap.containsKey(arg)) { return true; }  final Map tailMap = optionMap.tailMap(arg);  for (final Iterator iter = tailMap.values().iterator(); iter.hasNext();) { final Option option = (Option) iter.next();  [CLASS] GroupImpl [METHOD] canProcess [RETURN_TYPE] boolean  WriteableCommandLine commandLine String arg [VARIABLES] Set newPrefixes prefixes triggers boolean SortedMap newOptionMap optionMap WriteableCommandLine commandLine Iterator iter List anonymous newAnonymous options Option option String arg description name Map tailMap int maximum minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	123	123	1	add	
49	[BUG] [BUGGY] return true; [FE] OptionException [CONTEXT] final String arg) { if (arg == null) { return false; }  if (optionMap.containsKey(arg)) { [BUGGY] return true; [BUGGY] }  final Map tailMap = optionMap.tailMap(arg);  for (final Iterator iter = tailMap.values().iterator(); iter.hasNext();) { final Option option = (Option) iter.next(); if (option.canProcess(commandLine, arg)) { [CLASS] GroupImpl [METHOD] canProcess [RETURN_TYPE] boolean  WriteableCommandLine commandLine String arg [VARIABLES] Set newPrefixes prefixes triggers boolean SortedMap newOptionMap optionMap WriteableCommandLine commandLine Iterator iter List anonymous newAnonymous options Option option String arg description name Map tailMap int maximum minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	124	124	1	replace	
50	[BUG] [BUGGY] [FE] OptionException [CONTEXT] final String arg) { if (arg == null) { return false; }  if (optionMap.containsKey(arg)) { [BUGGY] [BUGGY] return true; }  final Map tailMap = optionMap.tailMap(arg);  for (final Iterator iter = tailMap.values().iterator(); iter.hasNext();) { final Option option = (Option) iter.next(); if (option.canProcess(commandLine, arg)) { [CLASS] GroupImpl [METHOD] canProcess [RETURN_TYPE] boolean  WriteableCommandLine commandLine String arg [VARIABLES] Set newPrefixes prefixes triggers boolean SortedMap newOptionMap optionMap WriteableCommandLine commandLine Iterator iter List anonymous newAnonymous options Option option String arg description name Map tailMap int maximum minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	124	124	1	add	
51	[BUG] [BUGGY] final Map tailMap = optionMap.tailMap(arg); [FE] OptionException [CONTEXT] if (arg == null) { return false; }  if (optionMap.containsKey(arg)) { return true; }  [BUGGY] final Map tailMap = optionMap.tailMap(arg); [BUGGY]   for (final Iterator iter = tailMap.values().iterator(); iter.hasNext();) { final Option option = (Option) iter.next(); if (option.canProcess(commandLine, arg)) { return true; } }  [CLASS] GroupImpl [METHOD] canProcess [RETURN_TYPE] boolean  WriteableCommandLine commandLine String arg [VARIABLES] Set newPrefixes prefixes triggers boolean SortedMap newOptionMap optionMap WriteableCommandLine commandLine Iterator iter List anonymous newAnonymous options Option option String arg description name Map tailMap int maximum minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	128	128	1	replace	
52	[BUG] [BUGGY] [FE] OptionException [CONTEXT] if (arg == null) { return false; }  if (optionMap.containsKey(arg)) { return true; }  [BUGGY] [BUGGY] final Map tailMap = optionMap.tailMap(arg);  for (final Iterator iter = tailMap.values().iterator(); iter.hasNext();) { final Option option = (Option) iter.next(); if (option.canProcess(commandLine, arg)) { return true; } }  [CLASS] GroupImpl [METHOD] canProcess [RETURN_TYPE] boolean  WriteableCommandLine commandLine String arg [VARIABLES] Set newPrefixes prefixes triggers boolean SortedMap newOptionMap optionMap WriteableCommandLine commandLine Iterator iter List anonymous newAnonymous options Option option String arg description name Map tailMap int maximum minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	128	128	1	add	
53	[BUG] [BUGGY] for (final Iterator iter = tailMap.values().iterator(); iter.hasNext();) { [FE] OptionException [CONTEXT]  if (optionMap.containsKey(arg)) { return true; }  final Map tailMap = optionMap.tailMap(arg);  [BUGGY] for (final Iterator iter = tailMap.values().iterator(); iter.hasNext();) { [BUGGY] final Option option = (Option) iter.next(); if (option.canProcess(commandLine, arg)) { return true; } } if (looksLikeOption(commandLine, arg)) { return false; } [CLASS] GroupImpl [METHOD] canProcess [RETURN_TYPE] boolean  WriteableCommandLine commandLine String arg [VARIABLES] Set newPrefixes prefixes triggers boolean SortedMap newOptionMap optionMap WriteableCommandLine commandLine Iterator iter List anonymous newAnonymous options Option option String arg description name Map tailMap int maximum minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	131	131	1	replace	
54	[BUG] [BUGGY] [FE] OptionException [CONTEXT]  if (optionMap.containsKey(arg)) { return true; }  final Map tailMap = optionMap.tailMap(arg);  [BUGGY] [BUGGY] for (final Iterator iter = tailMap.values().iterator(); iter.hasNext();) { final Option option = (Option) iter.next(); if (option.canProcess(commandLine, arg)) { return true; } } if (looksLikeOption(commandLine, arg)) { return false; } [CLASS] GroupImpl [METHOD] canProcess [RETURN_TYPE] boolean  WriteableCommandLine commandLine String arg [VARIABLES] Set newPrefixes prefixes triggers boolean SortedMap newOptionMap optionMap WriteableCommandLine commandLine Iterator iter List anonymous newAnonymous options Option option String arg description name Map tailMap int maximum minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	131	131	1	add	
55	[BUG] [BUGGY] final Option option = (Option) iter.next(); [FE] OptionException [CONTEXT]  if (optionMap.containsKey(arg)) { return true; }  final Map tailMap = optionMap.tailMap(arg);  for (final Iterator iter = tailMap.values().iterator(); iter.hasNext();) { [BUGGY] final Option option = (Option) iter.next(); [BUGGY]  if (option.canProcess(commandLine, arg)) { return true; } } if (looksLikeOption(commandLine, arg)) { return false; }  [CLASS] GroupImpl [METHOD] canProcess [RETURN_TYPE] boolean  WriteableCommandLine commandLine String arg [VARIABLES] Set newPrefixes prefixes triggers boolean SortedMap newOptionMap optionMap WriteableCommandLine commandLine Iterator iter List anonymous newAnonymous options Option option String arg description name Map tailMap int maximum minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	132	132	1	replace	
56	[BUG] [BUGGY] [FE] OptionException [CONTEXT]  if (optionMap.containsKey(arg)) { return true; }  final Map tailMap = optionMap.tailMap(arg);  for (final Iterator iter = tailMap.values().iterator(); iter.hasNext();) { [BUGGY] [BUGGY] final Option option = (Option) iter.next(); if (option.canProcess(commandLine, arg)) { return true; } } if (looksLikeOption(commandLine, arg)) { return false; }  [CLASS] GroupImpl [METHOD] canProcess [RETURN_TYPE] boolean  WriteableCommandLine commandLine String arg [VARIABLES] Set newPrefixes prefixes triggers boolean SortedMap newOptionMap optionMap WriteableCommandLine commandLine Iterator iter List anonymous newAnonymous options Option option String arg description name Map tailMap int maximum minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	132	132	1	add	
57	[BUG] [BUGGY] if (option.canProcess(commandLine, arg)) { [FE] OptionException [CONTEXT] return true; }  final Map tailMap = optionMap.tailMap(arg);  for (final Iterator iter = tailMap.values().iterator(); iter.hasNext();) { final Option option = (Option) iter.next(); [BUGGY] if (option.canProcess(commandLine, arg)) { [BUGGY] return true; } } if (looksLikeOption(commandLine, arg)) { return false; }  if (anonymous.size() > 0) { [CLASS] GroupImpl [METHOD] canProcess [RETURN_TYPE] boolean  WriteableCommandLine commandLine String arg [VARIABLES] Set newPrefixes prefixes triggers boolean SortedMap newOptionMap optionMap WriteableCommandLine commandLine Iterator iter List anonymous newAnonymous options Option option String arg description name Map tailMap int maximum minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	134	134	1	replace	
58	[BUG] [BUGGY] [FE] OptionException [CONTEXT] return true; }  final Map tailMap = optionMap.tailMap(arg);  for (final Iterator iter = tailMap.values().iterator(); iter.hasNext();) { final Option option = (Option) iter.next(); [BUGGY] [BUGGY] if (option.canProcess(commandLine, arg)) { return true; } } if (looksLikeOption(commandLine, arg)) { return false; }  if (anonymous.size() > 0) { [CLASS] GroupImpl [METHOD] canProcess [RETURN_TYPE] boolean  WriteableCommandLine commandLine String arg [VARIABLES] Set newPrefixes prefixes triggers boolean SortedMap newOptionMap optionMap WriteableCommandLine commandLine Iterator iter List anonymous newAnonymous options Option option String arg description name Map tailMap int maximum minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	134	134	1	add	
59	[BUG] [BUGGY] } [FE] OptionException [CONTEXT]  final Map tailMap = optionMap.tailMap(arg);  for (final Iterator iter = tailMap.values().iterator(); iter.hasNext();) { final Option option = (Option) iter.next(); if (option.canProcess(commandLine, arg)) { return true; } [BUGGY] } [BUGGY]  if (looksLikeOption(commandLine, arg)) { return false; }  if (anonymous.size() > 0) { return true; }  [CLASS] GroupImpl [METHOD] canProcess [RETURN_TYPE] boolean  WriteableCommandLine commandLine String arg [VARIABLES] Set newPrefixes prefixes triggers boolean SortedMap newOptionMap optionMap WriteableCommandLine commandLine Iterator iter List anonymous newAnonymous options Option option String arg description name Map tailMap int maximum minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	137	137	1	replace	
60	[BUG] [BUGGY] [FE] OptionException [CONTEXT]  final Map tailMap = optionMap.tailMap(arg);  for (final Iterator iter = tailMap.values().iterator(); iter.hasNext();) { final Option option = (Option) iter.next(); if (option.canProcess(commandLine, arg)) { return true; } [BUGGY] [BUGGY] } if (looksLikeOption(commandLine, arg)) { return false; }  if (anonymous.size() > 0) { return true; }  [CLASS] GroupImpl [METHOD] canProcess [RETURN_TYPE] boolean  WriteableCommandLine commandLine String arg [VARIABLES] Set newPrefixes prefixes triggers boolean SortedMap newOptionMap optionMap WriteableCommandLine commandLine Iterator iter List anonymous newAnonymous options Option option String arg description name Map tailMap int maximum minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	137	137	1	add	
61	[BUG] [BUGGY] if (looksLikeOption(commandLine, arg)) { [FE] OptionException [CONTEXT]  for (final Iterator iter = tailMap.values().iterator(); iter.hasNext();) { final Option option = (Option) iter.next(); if (option.canProcess(commandLine, arg)) { return true; } } [BUGGY] if (looksLikeOption(commandLine, arg)) { [BUGGY] return false; }  if (anonymous.size() > 0) { return true; } return false; } [CLASS] GroupImpl [METHOD] canProcess [RETURN_TYPE] boolean  WriteableCommandLine commandLine String arg [VARIABLES] Set newPrefixes prefixes triggers boolean SortedMap newOptionMap optionMap WriteableCommandLine commandLine Iterator iter List anonymous newAnonymous options Option option String arg description name Map tailMap int maximum minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	139	139	1	replace	
62	[BUG] [BUGGY] [FE] OptionException [CONTEXT]  for (final Iterator iter = tailMap.values().iterator(); iter.hasNext();) { final Option option = (Option) iter.next(); if (option.canProcess(commandLine, arg)) { return true; } } [BUGGY] [BUGGY] if (looksLikeOption(commandLine, arg)) { return false; }  if (anonymous.size() > 0) { return true; } return false; } [CLASS] GroupImpl [METHOD] canProcess [RETURN_TYPE] boolean  WriteableCommandLine commandLine String arg [VARIABLES] Set newPrefixes prefixes triggers boolean SortedMap newOptionMap optionMap WriteableCommandLine commandLine Iterator iter List anonymous newAnonymous options Option option String arg description name Map tailMap int maximum minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	139	139	1	add	
63	[BUG] [BUGGY] return false; [FE] OptionException [CONTEXT]  for (final Iterator iter = tailMap.values().iterator(); iter.hasNext();) { final Option option = (Option) iter.next(); if (option.canProcess(commandLine, arg)) { return true; } } if (looksLikeOption(commandLine, arg)) { [BUGGY] return false; [BUGGY] }  if (anonymous.size() > 0) { return true; } return false; } [CLASS] GroupImpl [METHOD] canProcess [RETURN_TYPE] boolean  WriteableCommandLine commandLine String arg [VARIABLES] Set newPrefixes prefixes triggers boolean SortedMap newOptionMap optionMap WriteableCommandLine commandLine Iterator iter List anonymous newAnonymous options Option option String arg description name Map tailMap int maximum minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	140	140	1	replace	
64	[BUG] [BUGGY] [FE] OptionException [CONTEXT]  for (final Iterator iter = tailMap.values().iterator(); iter.hasNext();) { final Option option = (Option) iter.next(); if (option.canProcess(commandLine, arg)) { return true; } } if (looksLikeOption(commandLine, arg)) { [BUGGY] [BUGGY] return false; }  if (anonymous.size() > 0) { return true; } return false; } [CLASS] GroupImpl [METHOD] canProcess [RETURN_TYPE] boolean  WriteableCommandLine commandLine String arg [VARIABLES] Set newPrefixes prefixes triggers boolean SortedMap newOptionMap optionMap WriteableCommandLine commandLine Iterator iter List anonymous newAnonymous options Option option String arg description name Map tailMap int maximum minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	140	140	1	add	
65	[BUG] [BUGGY] return prefixes; [FE] OptionException [CONTEXT] public Set getPrefixes() { [BUGGY] return prefixes; [BUGGY] } [CLASS] GroupImpl [METHOD] getPrefixes [RETURN_TYPE] Set  [VARIABLES] List anonymous newAnonymous options Set newPrefixes prefixes triggers String arg description name boolean int maximum minimum SortedMap newOptionMap optionMap  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	152	152	1	replace	
66	[BUG] [BUGGY] [FE] OptionException [CONTEXT] public Set getPrefixes() { [BUGGY] [BUGGY] return prefixes; } [CLASS] GroupImpl [METHOD] getPrefixes [RETURN_TYPE] Set  [VARIABLES] List anonymous newAnonymous options Set newPrefixes prefixes triggers String arg description name boolean int maximum minimum SortedMap newOptionMap optionMap  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	152	152	1	add	
67	[BUG] [BUGGY] String previous = null; [FE] OptionException [CONTEXT] throws OptionException { [BUGGY] String previous = null; [BUGGY]   while (arguments.hasNext()) {  final String arg = (String) arguments.next();  if (arg == previous) {  arguments.previous(); [CLASS] GroupImpl [METHOD] process [RETURN_TYPE] void  WriteableCommandLine commandLine ListIterator arguments [VARIABLES] Set newPrefixes prefixes triggers boolean foundMemberOption Argument argument SortedMap newOptionMap optionMap WriteableCommandLine commandLine Iterator i Collection values List anonymous newAnonymous options Option opt option String arg description name previous ListIterator arguments int maximum minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	162	162	1	replace	
68	[BUG] [BUGGY] [FE] OptionException [CONTEXT] throws OptionException { [BUGGY] [BUGGY] String previous = null;  while (arguments.hasNext()) {  final String arg = (String) arguments.next();  if (arg == previous) {  arguments.previous(); [CLASS] GroupImpl [METHOD] process [RETURN_TYPE] void  WriteableCommandLine commandLine ListIterator arguments [VARIABLES] Set newPrefixes prefixes triggers boolean foundMemberOption Argument argument SortedMap newOptionMap optionMap WriteableCommandLine commandLine Iterator i Collection values List anonymous newAnonymous options Option opt option String arg description name previous ListIterator arguments int maximum minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	162	162	1	add	
69	[BUG] [BUGGY] while (arguments.hasNext()) { [FE] OptionException [CONTEXT] throws OptionException { String previous = null;  [BUGGY] while (arguments.hasNext()) { [BUGGY]  final String arg = (String) arguments.next();  if (arg == previous) {  arguments.previous(); break; } [CLASS] GroupImpl [METHOD] process [RETURN_TYPE] void  WriteableCommandLine commandLine ListIterator arguments [VARIABLES] Set newPrefixes prefixes triggers boolean foundMemberOption Argument argument SortedMap newOptionMap optionMap WriteableCommandLine commandLine Iterator i Collection values List anonymous newAnonymous options Option opt option String arg description name previous ListIterator arguments int maximum minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	165	165	1	replace	
70	[BUG] [BUGGY] [FE] OptionException [CONTEXT] throws OptionException { String previous = null;  [BUGGY] [BUGGY] while (arguments.hasNext()) {  final String arg = (String) arguments.next();  if (arg == previous) {  arguments.previous(); break; } [CLASS] GroupImpl [METHOD] process [RETURN_TYPE] void  WriteableCommandLine commandLine ListIterator arguments [VARIABLES] Set newPrefixes prefixes triggers boolean foundMemberOption Argument argument SortedMap newOptionMap optionMap WriteableCommandLine commandLine Iterator i Collection values List anonymous newAnonymous options Option opt option String arg description name previous ListIterator arguments int maximum minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	165	165	1	add	
71	[BUG] [BUGGY] final String arg = (String) arguments.next(); [FE] OptionException [CONTEXT] throws OptionException { String previous = null;  while (arguments.hasNext()) {  [BUGGY] final String arg = (String) arguments.next(); [BUGGY]   if (arg == previous) {  arguments.previous(); break; }   [CLASS] GroupImpl [METHOD] process [RETURN_TYPE] void  WriteableCommandLine commandLine ListIterator arguments [VARIABLES] Set newPrefixes prefixes triggers boolean foundMemberOption Argument argument SortedMap newOptionMap optionMap WriteableCommandLine commandLine Iterator i Collection values List anonymous newAnonymous options Option opt option String arg description name previous ListIterator arguments int maximum minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	167	167	1	replace	
72	[BUG] [BUGGY] [FE] OptionException [CONTEXT] throws OptionException { String previous = null;  while (arguments.hasNext()) {  [BUGGY] [BUGGY] final String arg = (String) arguments.next();  if (arg == previous) {  arguments.previous(); break; }   [CLASS] GroupImpl [METHOD] process [RETURN_TYPE] void  WriteableCommandLine commandLine ListIterator arguments [VARIABLES] Set newPrefixes prefixes triggers boolean foundMemberOption Argument argument SortedMap newOptionMap optionMap WriteableCommandLine commandLine Iterator i Collection values List anonymous newAnonymous options Option opt option String arg description name previous ListIterator arguments int maximum minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	167	167	1	add	
73	[BUG] [BUGGY] if (arg == previous) { [FE] OptionException [CONTEXT] throws OptionException { String previous = null;  while (arguments.hasNext()) {  final String arg = (String) arguments.next();  [BUGGY] if (arg == previous) { [BUGGY]  arguments.previous(); break; }  previous = arg; final Option opt = (Option) optionMap.get(arg); [CLASS] GroupImpl [METHOD] process [RETURN_TYPE] void  WriteableCommandLine commandLine ListIterator arguments [VARIABLES] Set newPrefixes prefixes triggers boolean foundMemberOption Argument argument SortedMap newOptionMap optionMap WriteableCommandLine commandLine Iterator i Collection values List anonymous newAnonymous options Option opt option String arg description name previous ListIterator arguments int maximum minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	170	170	1	replace	
74	[BUG] [BUGGY] [FE] OptionException [CONTEXT] throws OptionException { String previous = null;  while (arguments.hasNext()) {  final String arg = (String) arguments.next();  [BUGGY] [BUGGY] if (arg == previous) {  arguments.previous(); break; }  previous = arg; final Option opt = (Option) optionMap.get(arg); [CLASS] GroupImpl [METHOD] process [RETURN_TYPE] void  WriteableCommandLine commandLine ListIterator arguments [VARIABLES] Set newPrefixes prefixes triggers boolean foundMemberOption Argument argument SortedMap newOptionMap optionMap WriteableCommandLine commandLine Iterator i Collection values List anonymous newAnonymous options Option opt option String arg description name previous ListIterator arguments int maximum minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	170	170	1	add	
75	[BUG] [BUGGY] previous = arg; [FE] OptionException [CONTEXT]  if (arg == previous) {  arguments.previous(); break; }  [BUGGY] previous = arg; [BUGGY]  final Option opt = (Option) optionMap.get(arg);  if (opt != null) { arguments.previous(); opt.process(commandLine, arguments); }  else { [CLASS] GroupImpl [METHOD] process [RETURN_TYPE] void  WriteableCommandLine commandLine ListIterator arguments [VARIABLES] Set newPrefixes prefixes triggers boolean foundMemberOption Argument argument SortedMap newOptionMap optionMap WriteableCommandLine commandLine Iterator i Collection values List anonymous newAnonymous options Option opt option String arg description name previous ListIterator arguments int maximum minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	178	178	1	replace	
76	[BUG] [BUGGY] [FE] OptionException [CONTEXT]  if (arg == previous) {  arguments.previous(); break; }  [BUGGY] [BUGGY] previous = arg; final Option opt = (Option) optionMap.get(arg);  if (opt != null) { arguments.previous(); opt.process(commandLine, arguments); }  else { [CLASS] GroupImpl [METHOD] process [RETURN_TYPE] void  WriteableCommandLine commandLine ListIterator arguments [VARIABLES] Set newPrefixes prefixes triggers boolean foundMemberOption Argument argument SortedMap newOptionMap optionMap WriteableCommandLine commandLine Iterator i Collection values List anonymous newAnonymous options Option opt option String arg description name previous ListIterator arguments int maximum minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	178	178	1	add	
77	[BUG] [BUGGY] final Option opt = (Option) optionMap.get(arg); [FE] OptionException [CONTEXT] if (arg == previous) {  arguments.previous(); break; }  previous = arg; [BUGGY] final Option opt = (Option) optionMap.get(arg); [BUGGY]   if (opt != null) { arguments.previous(); opt.process(commandLine, arguments); }  else {   [CLASS] GroupImpl [METHOD] process [RETURN_TYPE] void  WriteableCommandLine commandLine ListIterator arguments [VARIABLES] Set newPrefixes prefixes triggers boolean foundMemberOption Argument argument SortedMap newOptionMap optionMap WriteableCommandLine commandLine Iterator i Collection values List anonymous newAnonymous options Option opt option String arg description name previous ListIterator arguments int maximum minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	180	180	1	replace	
78	[BUG] [BUGGY] [FE] OptionException [CONTEXT] if (arg == previous) {  arguments.previous(); break; }  previous = arg; [BUGGY] [BUGGY] final Option opt = (Option) optionMap.get(arg);  if (opt != null) { arguments.previous(); opt.process(commandLine, arguments); }  else {   [CLASS] GroupImpl [METHOD] process [RETURN_TYPE] void  WriteableCommandLine commandLine ListIterator arguments [VARIABLES] Set newPrefixes prefixes triggers boolean foundMemberOption Argument argument SortedMap newOptionMap optionMap WriteableCommandLine commandLine Iterator i Collection values List anonymous newAnonymous options Option opt option String arg description name previous ListIterator arguments int maximum minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	180	180	1	add	
79	[BUG] [BUGGY] if (opt != null) { [FE] OptionException [CONTEXT] break; }  previous = arg; final Option opt = (Option) optionMap.get(arg);  [BUGGY] if (opt != null) { [BUGGY] arguments.previous(); opt.process(commandLine, arguments); }  else {   if (looksLikeOption(commandLine, arg)) {  final Collection values = optionMap.tailMap(arg).values(); [CLASS] GroupImpl [METHOD] process [RETURN_TYPE] void  WriteableCommandLine commandLine ListIterator arguments [VARIABLES] Set newPrefixes prefixes triggers boolean foundMemberOption Argument argument SortedMap newOptionMap optionMap WriteableCommandLine commandLine Iterator i Collection values List anonymous newAnonymous options Option opt option String arg description name previous ListIterator arguments int maximum minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	183	183	1	replace	
80	[BUG] [BUGGY] [FE] OptionException [CONTEXT] break; }  previous = arg; final Option opt = (Option) optionMap.get(arg);  [BUGGY] [BUGGY] if (opt != null) { arguments.previous(); opt.process(commandLine, arguments); }  else {   if (looksLikeOption(commandLine, arg)) {  final Collection values = optionMap.tailMap(arg).values(); [CLASS] GroupImpl [METHOD] process [RETURN_TYPE] void  WriteableCommandLine commandLine ListIterator arguments [VARIABLES] Set newPrefixes prefixes triggers boolean foundMemberOption Argument argument SortedMap newOptionMap optionMap WriteableCommandLine commandLine Iterator i Collection values List anonymous newAnonymous options Option opt option String arg description name previous ListIterator arguments int maximum minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	183	183	1	add	
81	[BUG] [BUGGY] arguments.previous(); [FE] OptionException [CONTEXT] break; }  previous = arg; final Option opt = (Option) optionMap.get(arg);  if (opt != null) { [BUGGY] arguments.previous(); [BUGGY] opt.process(commandLine, arguments); }  else {   if (looksLikeOption(commandLine, arg)) {  final Collection values = optionMap.tailMap(arg).values();  [CLASS] GroupImpl [METHOD] process [RETURN_TYPE] void  WriteableCommandLine commandLine ListIterator arguments [VARIABLES] Set newPrefixes prefixes triggers boolean foundMemberOption Argument argument SortedMap newOptionMap optionMap WriteableCommandLine commandLine Iterator i Collection values List anonymous newAnonymous options Option opt option String arg description name previous ListIterator arguments int maximum minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	184	184	1	replace	
82	[BUG] [BUGGY] [FE] OptionException [CONTEXT] break; }  previous = arg; final Option opt = (Option) optionMap.get(arg);  if (opt != null) { [BUGGY] [BUGGY] arguments.previous(); opt.process(commandLine, arguments); }  else {   if (looksLikeOption(commandLine, arg)) {  final Collection values = optionMap.tailMap(arg).values();  [CLASS] GroupImpl [METHOD] process [RETURN_TYPE] void  WriteableCommandLine commandLine ListIterator arguments [VARIABLES] Set newPrefixes prefixes triggers boolean foundMemberOption Argument argument SortedMap newOptionMap optionMap WriteableCommandLine commandLine Iterator i Collection values List anonymous newAnonymous options Option opt option String arg description name previous ListIterator arguments int maximum minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	184	184	1	add	
83	[BUG] [BUGGY] opt.process(commandLine, arguments); [FE] OptionException [CONTEXT] }  previous = arg; final Option opt = (Option) optionMap.get(arg);  if (opt != null) { arguments.previous(); [BUGGY] opt.process(commandLine, arguments); [BUGGY] }  else {   if (looksLikeOption(commandLine, arg)) {  final Collection values = optionMap.tailMap(arg).values(); boolean foundMemberOption = false; [CLASS] GroupImpl [METHOD] process [RETURN_TYPE] void  WriteableCommandLine commandLine ListIterator arguments [VARIABLES] Set newPrefixes prefixes triggers boolean foundMemberOption Argument argument SortedMap newOptionMap optionMap WriteableCommandLine commandLine Iterator i Collection values List anonymous newAnonymous options Option opt option String arg description name previous ListIterator arguments int maximum minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	185	185	1	replace	
84	[BUG] [BUGGY] [FE] OptionException [CONTEXT] }  previous = arg; final Option opt = (Option) optionMap.get(arg);  if (opt != null) { arguments.previous(); [BUGGY] [BUGGY] opt.process(commandLine, arguments); }  else {   if (looksLikeOption(commandLine, arg)) {  final Collection values = optionMap.tailMap(arg).values(); boolean foundMemberOption = false; [CLASS] GroupImpl [METHOD] process [RETURN_TYPE] void  WriteableCommandLine commandLine ListIterator arguments [VARIABLES] Set newPrefixes prefixes triggers boolean foundMemberOption Argument argument SortedMap newOptionMap optionMap WriteableCommandLine commandLine Iterator i Collection values List anonymous newAnonymous options Option opt option String arg description name previous ListIterator arguments int maximum minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	185	185	1	add	
85	[BUG] [BUGGY] if (looksLikeOption(commandLine, arg)) { [FE] OptionException [CONTEXT] if (opt != null) { arguments.previous(); opt.process(commandLine, arguments); }  else {   [BUGGY] if (looksLikeOption(commandLine, arg)) { [BUGGY]  final Collection values = optionMap.tailMap(arg).values(); boolean foundMemberOption = false; for (Iterator i = values.iterator(); i.hasNext() && !foundMemberOption;) { final Option option = (Option) i.next(); if (option.canProcess(commandLine, arg)) { foundMemberOption = true; [CLASS] GroupImpl [METHOD] process [RETURN_TYPE] void  WriteableCommandLine commandLine ListIterator arguments [VARIABLES] Set newPrefixes prefixes triggers boolean foundMemberOption Argument argument SortedMap newOptionMap optionMap WriteableCommandLine commandLine Iterator i Collection values List anonymous newAnonymous options Option opt option String arg description name previous ListIterator arguments int maximum minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	191	191	1	replace	
86	[BUG] [BUGGY] [FE] OptionException [CONTEXT] if (opt != null) { arguments.previous(); opt.process(commandLine, arguments); }  else {   [BUGGY] [BUGGY] if (looksLikeOption(commandLine, arg)) {  final Collection values = optionMap.tailMap(arg).values(); boolean foundMemberOption = false; for (Iterator i = values.iterator(); i.hasNext() && !foundMemberOption;) { final Option option = (Option) i.next(); if (option.canProcess(commandLine, arg)) { foundMemberOption = true; [CLASS] GroupImpl [METHOD] process [RETURN_TYPE] void  WriteableCommandLine commandLine ListIterator arguments [VARIABLES] Set newPrefixes prefixes triggers boolean foundMemberOption Argument argument SortedMap newOptionMap optionMap WriteableCommandLine commandLine Iterator i Collection values List anonymous newAnonymous options Option opt option String arg description name previous ListIterator arguments int maximum minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	191	191	1	add	
87	[BUG] [BUGGY] final Collection values = optionMap.tailMap(arg).values(); [FE] OptionException [CONTEXT] if (opt != null) { arguments.previous(); opt.process(commandLine, arguments); }  else {   if (looksLikeOption(commandLine, arg)) {  [BUGGY] final Collection values = optionMap.tailMap(arg).values(); [BUGGY]  boolean foundMemberOption = false; for (Iterator i = values.iterator(); i.hasNext() && !foundMemberOption;) { final Option option = (Option) i.next(); if (option.canProcess(commandLine, arg)) { foundMemberOption = true; arguments.previous(); option.process(commandLine, arguments); [CLASS] GroupImpl [METHOD] process [RETURN_TYPE] void  WriteableCommandLine commandLine ListIterator arguments [VARIABLES] Set newPrefixes prefixes triggers boolean foundMemberOption Argument argument SortedMap newOptionMap optionMap WriteableCommandLine commandLine Iterator i Collection values List anonymous newAnonymous options Option opt option String arg description name previous ListIterator arguments int maximum minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	193	193	1	replace	
88	[BUG] [BUGGY] [FE] OptionException [CONTEXT] if (opt != null) { arguments.previous(); opt.process(commandLine, arguments); }  else {   if (looksLikeOption(commandLine, arg)) {  [BUGGY] [BUGGY] final Collection values = optionMap.tailMap(arg).values(); boolean foundMemberOption = false; for (Iterator i = values.iterator(); i.hasNext() && !foundMemberOption;) { final Option option = (Option) i.next(); if (option.canProcess(commandLine, arg)) { foundMemberOption = true; arguments.previous(); option.process(commandLine, arguments); [CLASS] GroupImpl [METHOD] process [RETURN_TYPE] void  WriteableCommandLine commandLine ListIterator arguments [VARIABLES] Set newPrefixes prefixes triggers boolean foundMemberOption Argument argument SortedMap newOptionMap optionMap WriteableCommandLine commandLine Iterator i Collection values List anonymous newAnonymous options Option opt option String arg description name previous ListIterator arguments int maximum minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	193	193	1	add	
89	[BUG] [BUGGY] boolean foundMemberOption = false; [FE] OptionException [CONTEXT] opt.process(commandLine, arguments); }  else {   if (looksLikeOption(commandLine, arg)) {  final Collection values = optionMap.tailMap(arg).values(); [BUGGY] boolean foundMemberOption = false; [BUGGY]  for (Iterator i = values.iterator(); i.hasNext() && !foundMemberOption;) { final Option option = (Option) i.next(); if (option.canProcess(commandLine, arg)) { foundMemberOption = true; arguments.previous(); option.process(commandLine, arguments); } } [CLASS] GroupImpl [METHOD] process [RETURN_TYPE] void  WriteableCommandLine commandLine ListIterator arguments [VARIABLES] Set newPrefixes prefixes triggers boolean foundMemberOption Argument argument SortedMap newOptionMap optionMap WriteableCommandLine commandLine Iterator i Collection values List anonymous newAnonymous options Option opt option String arg description name previous ListIterator arguments int maximum minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	195	195	1	replace	
90	[BUG] [BUGGY] [FE] OptionException [CONTEXT] opt.process(commandLine, arguments); }  else {   if (looksLikeOption(commandLine, arg)) {  final Collection values = optionMap.tailMap(arg).values(); [BUGGY] [BUGGY] boolean foundMemberOption = false; for (Iterator i = values.iterator(); i.hasNext() && !foundMemberOption;) { final Option option = (Option) i.next(); if (option.canProcess(commandLine, arg)) { foundMemberOption = true; arguments.previous(); option.process(commandLine, arguments); } } [CLASS] GroupImpl [METHOD] process [RETURN_TYPE] void  WriteableCommandLine commandLine ListIterator arguments [VARIABLES] Set newPrefixes prefixes triggers boolean foundMemberOption Argument argument SortedMap newOptionMap optionMap WriteableCommandLine commandLine Iterator i Collection values List anonymous newAnonymous options Option opt option String arg description name previous ListIterator arguments int maximum minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	195	195	1	add	
91	[BUG] [BUGGY] for (Iterator i = values.iterator(); i.hasNext() && !foundMemberOption;) { [FE] OptionException [CONTEXT]  else {   if (looksLikeOption(commandLine, arg)) {  final Collection values = optionMap.tailMap(arg).values(); boolean foundMemberOption = false; [BUGGY] for (Iterator i = values.iterator(); i.hasNext() && !foundMemberOption;) { [BUGGY] final Option option = (Option) i.next(); if (option.canProcess(commandLine, arg)) { foundMemberOption = true; arguments.previous(); option.process(commandLine, arguments); } }   [CLASS] GroupImpl [METHOD] process [RETURN_TYPE] void  WriteableCommandLine commandLine ListIterator arguments [VARIABLES] Set newPrefixes prefixes triggers boolean foundMemberOption Argument argument SortedMap newOptionMap optionMap WriteableCommandLine commandLine Iterator i Collection values List anonymous newAnonymous options Option opt option String arg description name previous ListIterator arguments int maximum minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	197	197	1	replace	
92	[BUG] [BUGGY] [FE] OptionException [CONTEXT]  else {   if (looksLikeOption(commandLine, arg)) {  final Collection values = optionMap.tailMap(arg).values(); boolean foundMemberOption = false; [BUGGY] [BUGGY] for (Iterator i = values.iterator(); i.hasNext() && !foundMemberOption;) { final Option option = (Option) i.next(); if (option.canProcess(commandLine, arg)) { foundMemberOption = true; arguments.previous(); option.process(commandLine, arguments); } }   [CLASS] GroupImpl [METHOD] process [RETURN_TYPE] void  WriteableCommandLine commandLine ListIterator arguments [VARIABLES] Set newPrefixes prefixes triggers boolean foundMemberOption Argument argument SortedMap newOptionMap optionMap WriteableCommandLine commandLine Iterator i Collection values List anonymous newAnonymous options Option opt option String arg description name previous ListIterator arguments int maximum minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	197	197	1	add	
93	[BUG] [BUGGY] final Option option = (Option) i.next(); [FE] OptionException [CONTEXT] else {   if (looksLikeOption(commandLine, arg)) {  final Collection values = optionMap.tailMap(arg).values(); boolean foundMemberOption = false; for (Iterator i = values.iterator(); i.hasNext() && !foundMemberOption;) { [BUGGY] final Option option = (Option) i.next(); [BUGGY]  if (option.canProcess(commandLine, arg)) { foundMemberOption = true; arguments.previous(); option.process(commandLine, arguments); } }  if (!foundMemberOption) { [CLASS] GroupImpl [METHOD] process [RETURN_TYPE] void  WriteableCommandLine commandLine ListIterator arguments [VARIABLES] Set newPrefixes prefixes triggers boolean foundMemberOption Argument argument SortedMap newOptionMap optionMap WriteableCommandLine commandLine Iterator i Collection values List anonymous newAnonymous options Option opt option String arg description name previous ListIterator arguments int maximum minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	198	198	1	replace	
94	[BUG] [BUGGY] [FE] OptionException [CONTEXT] else {   if (looksLikeOption(commandLine, arg)) {  final Collection values = optionMap.tailMap(arg).values(); boolean foundMemberOption = false; for (Iterator i = values.iterator(); i.hasNext() && !foundMemberOption;) { [BUGGY] [BUGGY] final Option option = (Option) i.next(); if (option.canProcess(commandLine, arg)) { foundMemberOption = true; arguments.previous(); option.process(commandLine, arguments); } }  if (!foundMemberOption) { [CLASS] GroupImpl [METHOD] process [RETURN_TYPE] void  WriteableCommandLine commandLine ListIterator arguments [VARIABLES] Set newPrefixes prefixes triggers boolean foundMemberOption Argument argument SortedMap newOptionMap optionMap WriteableCommandLine commandLine Iterator i Collection values List anonymous newAnonymous options Option opt option String arg description name previous ListIterator arguments int maximum minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	198	198	1	add	
95	[BUG] [BUGGY] if (option.canProcess(commandLine, arg)) { [FE] OptionException [CONTEXT]  if (looksLikeOption(commandLine, arg)) {  final Collection values = optionMap.tailMap(arg).values(); boolean foundMemberOption = false; for (Iterator i = values.iterator(); i.hasNext() && !foundMemberOption;) { final Option option = (Option) i.next(); [BUGGY] if (option.canProcess(commandLine, arg)) { [BUGGY] foundMemberOption = true; arguments.previous(); option.process(commandLine, arguments); } }  if (!foundMemberOption) { arguments.previous();  [CLASS] GroupImpl [METHOD] process [RETURN_TYPE] void  WriteableCommandLine commandLine ListIterator arguments [VARIABLES] Set newPrefixes prefixes triggers boolean foundMemberOption Argument argument SortedMap newOptionMap optionMap WriteableCommandLine commandLine Iterator i Collection values List anonymous newAnonymous options Option opt option String arg description name previous ListIterator arguments int maximum minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	200	200	1	replace	
96	[BUG] [BUGGY] [FE] OptionException [CONTEXT]  if (looksLikeOption(commandLine, arg)) {  final Collection values = optionMap.tailMap(arg).values(); boolean foundMemberOption = false; for (Iterator i = values.iterator(); i.hasNext() && !foundMemberOption;) { final Option option = (Option) i.next(); [BUGGY] [BUGGY] if (option.canProcess(commandLine, arg)) { foundMemberOption = true; arguments.previous(); option.process(commandLine, arguments); } }  if (!foundMemberOption) { arguments.previous();  [CLASS] GroupImpl [METHOD] process [RETURN_TYPE] void  WriteableCommandLine commandLine ListIterator arguments [VARIABLES] Set newPrefixes prefixes triggers boolean foundMemberOption Argument argument SortedMap newOptionMap optionMap WriteableCommandLine commandLine Iterator i Collection values List anonymous newAnonymous options Option opt option String arg description name previous ListIterator arguments int maximum minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	200	200	1	add	
97	[BUG] [BUGGY] } [FE] OptionException [CONTEXT] boolean foundMemberOption = false; for (Iterator i = values.iterator(); i.hasNext() && !foundMemberOption;) { final Option option = (Option) i.next(); if (option.canProcess(commandLine, arg)) { foundMemberOption = true; arguments.previous(); option.process(commandLine, arguments); } [BUGGY] } [BUGGY]   if (!foundMemberOption) { arguments.previous(); return; } } // [END argument may be anonymous   [CLASS] GroupImpl [METHOD] process [RETURN_TYPE] void  WriteableCommandLine commandLine ListIterator arguments [VARIABLES] Set newPrefixes prefixes triggers boolean foundMemberOption Argument argument SortedMap newOptionMap optionMap WriteableCommandLine commandLine Iterator i Collection values List anonymous newAnonymous options Option opt option String arg description name previous ListIterator arguments int maximum minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	205	205	1	replace	
98	[BUG] [BUGGY] [FE] OptionException [CONTEXT] boolean foundMemberOption = false; for (Iterator i = values.iterator(); i.hasNext() && !foundMemberOption;) { final Option option = (Option) i.next(); if (option.canProcess(commandLine, arg)) { foundMemberOption = true; arguments.previous(); option.process(commandLine, arguments); } [BUGGY] [BUGGY] }  if (!foundMemberOption) { arguments.previous(); return; } } // [END argument may be anonymous   [CLASS] GroupImpl [METHOD] process [RETURN_TYPE] void  WriteableCommandLine commandLine ListIterator arguments [VARIABLES] Set newPrefixes prefixes triggers boolean foundMemberOption Argument argument SortedMap newOptionMap optionMap WriteableCommandLine commandLine Iterator i Collection values List anonymous newAnonymous options Option opt option String arg description name previous ListIterator arguments int maximum minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	205	205	1	add	
99	[BUG] [BUGGY] if (!foundMemberOption) { [FE] OptionException [CONTEXT] final Option option = (Option) i.next(); if (option.canProcess(commandLine, arg)) { foundMemberOption = true; arguments.previous(); option.process(commandLine, arguments); } }  [BUGGY] if (!foundMemberOption) { [BUGGY] arguments.previous(); return; } } // [END argument may be anonymous  else {  arguments.previous(); [CLASS] GroupImpl [METHOD] process [RETURN_TYPE] void  WriteableCommandLine commandLine ListIterator arguments [VARIABLES] Set newPrefixes prefixes triggers boolean foundMemberOption Argument argument SortedMap newOptionMap optionMap WriteableCommandLine commandLine Iterator i Collection values List anonymous newAnonymous options Option opt option String arg description name previous ListIterator arguments int maximum minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	208	208	1	replace	
100	[BUG] [BUGGY] [FE] OptionException [CONTEXT] final Option option = (Option) i.next(); if (option.canProcess(commandLine, arg)) { foundMemberOption = true; arguments.previous(); option.process(commandLine, arguments); } }  [BUGGY] [BUGGY] if (!foundMemberOption) { arguments.previous(); return; } } // [END argument may be anonymous  else {  arguments.previous(); [CLASS] GroupImpl [METHOD] process [RETURN_TYPE] void  WriteableCommandLine commandLine ListIterator arguments [VARIABLES] Set newPrefixes prefixes triggers boolean foundMemberOption Argument argument SortedMap newOptionMap optionMap WriteableCommandLine commandLine Iterator i Collection values List anonymous newAnonymous options Option opt option String arg description name previous ListIterator arguments int maximum minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	208	208	1	add	
101	[BUG] [BUGGY] arguments.previous(); [FE] OptionException [CONTEXT] if (option.canProcess(commandLine, arg)) { foundMemberOption = true; arguments.previous(); option.process(commandLine, arguments); } }  if (!foundMemberOption) { [BUGGY] arguments.previous(); [BUGGY]  return; } } // [END argument may be anonymous  else {  arguments.previous();  [CLASS] GroupImpl [METHOD] process [RETURN_TYPE] void  WriteableCommandLine commandLine ListIterator arguments [VARIABLES] Set newPrefixes prefixes triggers boolean foundMemberOption Argument argument SortedMap newOptionMap optionMap WriteableCommandLine commandLine Iterator i Collection values List anonymous newAnonymous options Option opt option String arg description name previous ListIterator arguments int maximum minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	209	209	1	replace	
102	[BUG] [BUGGY] [FE] OptionException [CONTEXT] if (option.canProcess(commandLine, arg)) { foundMemberOption = true; arguments.previous(); option.process(commandLine, arguments); } }  if (!foundMemberOption) { [BUGGY] [BUGGY] arguments.previous(); return; } } // [END argument may be anonymous  else {  arguments.previous();  [CLASS] GroupImpl [METHOD] process [RETURN_TYPE] void  WriteableCommandLine commandLine ListIterator arguments [VARIABLES] Set newPrefixes prefixes triggers boolean foundMemberOption Argument argument SortedMap newOptionMap optionMap WriteableCommandLine commandLine Iterator i Collection values List anonymous newAnonymous options Option opt option String arg description name previous ListIterator arguments int maximum minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	209	209	1	add	
103	[BUG] [BUGGY] return; [FE] OptionException [CONTEXT] foundMemberOption = true; arguments.previous(); option.process(commandLine, arguments); } }  if (!foundMemberOption) { arguments.previous(); [BUGGY] return; [BUGGY] } } // [END argument may be anonymous  else {  arguments.previous();    [CLASS] GroupImpl [METHOD] process [RETURN_TYPE] void  WriteableCommandLine commandLine ListIterator arguments [VARIABLES] Set newPrefixes prefixes triggers boolean foundMemberOption Argument argument SortedMap newOptionMap optionMap WriteableCommandLine commandLine Iterator i Collection values List anonymous newAnonymous options Option opt option String arg description name previous ListIterator arguments int maximum minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	211	211	1	replace	
104	[BUG] [BUGGY] [FE] OptionException [CONTEXT] foundMemberOption = true; arguments.previous(); option.process(commandLine, arguments); } }  if (!foundMemberOption) { arguments.previous(); [BUGGY] [BUGGY] return; } } // [END argument may be anonymous  else {  arguments.previous();    [CLASS] GroupImpl [METHOD] process [RETURN_TYPE] void  WriteableCommandLine commandLine ListIterator arguments [VARIABLES] Set newPrefixes prefixes triggers boolean foundMemberOption Argument argument SortedMap newOptionMap optionMap WriteableCommandLine commandLine Iterator i Collection values List anonymous newAnonymous options Option opt option String arg description name previous ListIterator arguments int maximum minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	211	211	1	add	
106	[BUG] [BUGGY] return name; [FE] OptionException [CONTEXT] public String getPreferredName() { [BUGGY] return name; [BUGGY] } [CLASS] GroupImpl [METHOD] getPreferredName [RETURN_TYPE] String  [VARIABLES] List anonymous newAnonymous options Set newPrefixes prefixes triggers String arg description name previous boolean int maximum minimum present SortedMap newOptionMap optionMap  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	288	288	1	replace	
107	[BUG] [BUGGY] [FE] OptionException [CONTEXT] public String getPreferredName() { [BUGGY] [BUGGY] return name; } [CLASS] GroupImpl [METHOD] getPreferredName [RETURN_TYPE] String  [VARIABLES] List anonymous newAnonymous options Set newPrefixes prefixes triggers String arg description name previous boolean int maximum minimum present SortedMap newOptionMap optionMap  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	288	288	1	add	
108	[BUG] [BUGGY] appendUsage(buffer, helpSettings, comp, "|"); [FE] OptionException [CONTEXT] public void appendUsage(final StringBuffer buffer, final Set helpSettings, final Comparator comp) { [BUGGY] appendUsage(buffer, helpSettings, comp, "|"); [BUGGY] } [CLASS] GroupImpl [METHOD] appendUsage [RETURN_TYPE] void  StringBuffer buffer Set helpSettings Comparator comp [VARIABLES] StringBuffer buffer Set helpSettings newPrefixes prefixes triggers boolean SortedMap newOptionMap optionMap List anonymous newAnonymous options String arg description name previous int maximum minimum present Comparator comp  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	298	298	1	replace	
109	[BUG] [BUGGY] [FE] OptionException [CONTEXT] public void appendUsage(final StringBuffer buffer, final Set helpSettings, final Comparator comp) { [BUGGY] [BUGGY] appendUsage(buffer, helpSettings, comp, "|"); } [CLASS] GroupImpl [METHOD] appendUsage [RETURN_TYPE] void  StringBuffer buffer Set helpSettings Comparator comp [VARIABLES] StringBuffer buffer Set helpSettings newPrefixes prefixes triggers boolean SortedMap newOptionMap optionMap List anonymous newAnonymous options String arg description name previous int maximum minimum present Comparator comp  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	298	298	1	add	
110	[BUG] [BUGGY] } [FE] OptionException [CONTEXT] public void appendUsage(final StringBuffer buffer, final Set helpSettings, final Comparator comp) { appendUsage(buffer, helpSettings, comp, "|"); [BUGGY] } [BUGGY]  [CLASS] GroupImpl [METHOD] appendUsage [RETURN_TYPE] void  StringBuffer buffer Set helpSettings Comparator comp [VARIABLES] StringBuffer buffer Set helpSettings newPrefixes prefixes triggers boolean SortedMap newOptionMap optionMap List anonymous newAnonymous options String arg description name previous int maximum minimum present Comparator comp  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	299	299	1	replace	
111	[BUG] [BUGGY] [FE] OptionException [CONTEXT] public void appendUsage(final StringBuffer buffer, final Set helpSettings, final Comparator comp) { appendUsage(buffer, helpSettings, comp, "|"); [BUGGY] [BUGGY] } [CLASS] GroupImpl [METHOD] appendUsage [RETURN_TYPE] void  StringBuffer buffer Set helpSettings Comparator comp [VARIABLES] StringBuffer buffer Set helpSettings newPrefixes prefixes triggers boolean SortedMap newOptionMap optionMap List anonymous newAnonymous options String arg description name previous int maximum minimum present Comparator comp  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	299	299	1	add	
112	[BUG] [BUGGY] final Set helpSettingsCopy = new HashSet(helpSettings); [FE] OptionException [CONTEXT] final String separator) { [BUGGY] final Set helpSettingsCopy = new HashSet(helpSettings); [BUGGY]  final boolean optional = !isRequired() && (helpSettingsCopy.contains(DisplaySetting.DISPLAY_OPTIONAL) || helpSettingsCopy.contains(DisplaySetting.DISPLAY_OPTIONAL_CHILD_GROUP)); final boolean expanded = (name == null) || helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED); final boolean named = !expanded || [CLASS] GroupImpl [METHOD] appendUsage [RETURN_TYPE] void  StringBuffer buffer Set helpSettings Comparator comp String separator [VARIABLES] StringBuffer buffer Set childSettings helpSettings helpSettingsCopy newPrefixes prefixes triggers boolean arguments both expanded named optional outer SortedMap newOptionMap optionMap Iterator i List anonymous list newAnonymous options Option option String arg description name previous separator int maximum minimum present Comparator comp  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	305	305	1	replace	
113	[BUG] [BUGGY] [FE] OptionException [CONTEXT] final String separator) { [BUGGY] [BUGGY] final Set helpSettingsCopy = new HashSet(helpSettings); final boolean optional = !isRequired() && (helpSettingsCopy.contains(DisplaySetting.DISPLAY_OPTIONAL) || helpSettingsCopy.contains(DisplaySetting.DISPLAY_OPTIONAL_CHILD_GROUP)); final boolean expanded = (name == null) || helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED); final boolean named = !expanded || [CLASS] GroupImpl [METHOD] appendUsage [RETURN_TYPE] void  StringBuffer buffer Set helpSettings Comparator comp String separator [VARIABLES] StringBuffer buffer Set childSettings helpSettings helpSettingsCopy newPrefixes prefixes triggers boolean arguments both expanded named optional outer SortedMap newOptionMap optionMap Iterator i List anonymous list newAnonymous options Option option String arg description name previous separator int maximum minimum present Comparator comp  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	305	305	1	add	
114	[BUG] [BUGGY] final boolean optional = !isRequired() && (helpSettingsCopy.contains(DisplaySetting.DISPLAY_OPTIONAL) ||   helpSettingsCopy.contains(DisplaySetting.DISPLAY_OPTIONAL_CHILD_GROUP)); [FE] OptionException [CONTEXT] final String separator) { final Set helpSettingsCopy = new HashSet(helpSettings); [BUGGY] final boolean optional = !isRequired()    && (helpSettingsCopy.contains(DisplaySetting.DISPLAY_OPTIONAL) ||            helpSettingsCopy.contains(DisplaySetting.DISPLAY_OPTIONAL_CHILD_GROUP)); [BUGGY] && (helpSettingsCopy.contains(DisplaySetting.DISPLAY_OPTIONAL) || helpSettingsCopy.contains(DisplaySetting.DISPLAY_OPTIONAL_CHILD_GROUP)); final boolean expanded = (name == null) || helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED); final boolean named = !expanded || ((name != null) && helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_NAME));  [CLASS] GroupImpl [METHOD] appendUsage [RETURN_TYPE] void  StringBuffer buffer Set helpSettings Comparator comp String separator [VARIABLES] StringBuffer buffer Set childSettings helpSettings helpSettingsCopy newPrefixes prefixes triggers boolean arguments both expanded named optional outer SortedMap newOptionMap optionMap Iterator i List anonymous list newAnonymous options Option option String arg description name previous separator int maximum minimum present Comparator comp  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	307	309	1	replace	
115	[BUG] [BUGGY] [FE] OptionException [CONTEXT] final String separator) { final Set helpSettingsCopy = new HashSet(helpSettings); [BUGGY] [BUGGY] final boolean optional = !isRequired()    && (helpSettingsCopy.contains(DisplaySetting.DISPLAY_OPTIONAL) ||            helpSettingsCopy.contains(DisplaySetting.DISPLAY_OPTIONAL_CHILD_GROUP)); && (helpSettingsCopy.contains(DisplaySetting.DISPLAY_OPTIONAL) || helpSettingsCopy.contains(DisplaySetting.DISPLAY_OPTIONAL_CHILD_GROUP)); final boolean expanded = (name == null) || helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED); final boolean named = !expanded || ((name != null) && helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_NAME));  [CLASS] GroupImpl [METHOD] appendUsage [RETURN_TYPE] void  StringBuffer buffer Set helpSettings Comparator comp String separator [VARIABLES] StringBuffer buffer Set childSettings helpSettings helpSettingsCopy newPrefixes prefixes triggers boolean arguments both expanded named optional outer SortedMap newOptionMap optionMap Iterator i List anonymous list newAnonymous options Option option String arg description name previous separator int maximum minimum present Comparator comp  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	307	309	1	add	
116	[BUG] [BUGGY] final boolean expanded = (name == null) || helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED); [FE] OptionException [CONTEXT] final String separator) { final Set helpSettingsCopy = new HashSet(helpSettings); final boolean optional = !isRequired() && (helpSettingsCopy.contains(DisplaySetting.DISPLAY_OPTIONAL) || helpSettingsCopy.contains(DisplaySetting.DISPLAY_OPTIONAL_CHILD_GROUP)); [BUGGY] final boolean expanded =   (name == null) || helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED); [BUGGY] (name == null) || helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED); final boolean named = !expanded || ((name != null) && helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_NAME)); final boolean arguments = helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_ARGUMENT); final boolean outer = helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_OUTER);  [CLASS] GroupImpl [METHOD] appendUsage [RETURN_TYPE] void  StringBuffer buffer Set helpSettings Comparator comp String separator [VARIABLES] StringBuffer buffer Set childSettings helpSettings helpSettingsCopy newPrefixes prefixes triggers boolean arguments both expanded named optional outer SortedMap newOptionMap optionMap Iterator i List anonymous list newAnonymous options Option option String arg description name previous separator int maximum minimum present Comparator comp  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	311	312	1	replace	
117	[BUG] [BUGGY] [FE] OptionException [CONTEXT] final String separator) { final Set helpSettingsCopy = new HashSet(helpSettings); final boolean optional = !isRequired() && (helpSettingsCopy.contains(DisplaySetting.DISPLAY_OPTIONAL) || helpSettingsCopy.contains(DisplaySetting.DISPLAY_OPTIONAL_CHILD_GROUP)); [BUGGY] [BUGGY] final boolean expanded =   (name == null) || helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED); (name == null) || helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED); final boolean named = !expanded || ((name != null) && helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_NAME)); final boolean arguments = helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_ARGUMENT); final boolean outer = helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_OUTER);  [CLASS] GroupImpl [METHOD] appendUsage [RETURN_TYPE] void  StringBuffer buffer Set helpSettings Comparator comp String separator [VARIABLES] StringBuffer buffer Set childSettings helpSettings helpSettingsCopy newPrefixes prefixes triggers boolean arguments both expanded named optional outer SortedMap newOptionMap optionMap Iterator i List anonymous list newAnonymous options Option option String arg description name previous separator int maximum minimum present Comparator comp  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	311	312	1	add	
118	[BUG] [BUGGY] final boolean named = !expanded ||  ((name != null) && helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_NAME)); [FE] OptionException [CONTEXT] final String separator) { final Set helpSettingsCopy = new HashSet(helpSettings); final boolean optional = !isRequired() && (helpSettingsCopy.contains(DisplaySetting.DISPLAY_OPTIONAL) || helpSettingsCopy.contains(DisplaySetting.DISPLAY_OPTIONAL_CHILD_GROUP)); final boolean expanded = (name == null) || helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED); [BUGGY] final boolean named =   !expanded ||      ((name != null) && helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_NAME)); [BUGGY] !expanded || ((name != null) && helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_NAME)); final boolean arguments = helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_ARGUMENT); final boolean outer = helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_OUTER); helpSettingsCopy.remove(DisplaySetting.DISPLAY_GROUP_OUTER); final boolean both = named && expanded; [CLASS] GroupImpl [METHOD] appendUsage [RETURN_TYPE] void  StringBuffer buffer Set helpSettings Comparator comp String separator [VARIABLES] StringBuffer buffer Set childSettings helpSettings helpSettingsCopy newPrefixes prefixes triggers boolean arguments both expanded named optional outer SortedMap newOptionMap optionMap Iterator i List anonymous list newAnonymous options Option option String arg description name previous separator int maximum minimum present Comparator comp  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	314	316	1	replace	
119	[BUG] [BUGGY] [FE] OptionException [CONTEXT] final String separator) { final Set helpSettingsCopy = new HashSet(helpSettings); final boolean optional = !isRequired() && (helpSettingsCopy.contains(DisplaySetting.DISPLAY_OPTIONAL) || helpSettingsCopy.contains(DisplaySetting.DISPLAY_OPTIONAL_CHILD_GROUP)); final boolean expanded = (name == null) || helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED); [BUGGY] [BUGGY] final boolean named =   !expanded ||      ((name != null) && helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_NAME)); !expanded || ((name != null) && helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_NAME)); final boolean arguments = helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_ARGUMENT); final boolean outer = helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_OUTER); helpSettingsCopy.remove(DisplaySetting.DISPLAY_GROUP_OUTER); final boolean both = named && expanded; [CLASS] GroupImpl [METHOD] appendUsage [RETURN_TYPE] void  StringBuffer buffer Set helpSettings Comparator comp String separator [VARIABLES] StringBuffer buffer Set childSettings helpSettings helpSettingsCopy newPrefixes prefixes triggers boolean arguments both expanded named optional outer SortedMap newOptionMap optionMap Iterator i List anonymous list newAnonymous options Option option String arg description name previous separator int maximum minimum present Comparator comp  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	314	316	1	add	
120	[BUG] [BUGGY] final boolean arguments = helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_ARGUMENT); [FE] OptionException [CONTEXT] && (helpSettingsCopy.contains(DisplaySetting.DISPLAY_OPTIONAL) || helpSettingsCopy.contains(DisplaySetting.DISPLAY_OPTIONAL_CHILD_GROUP)); final boolean expanded = (name == null) || helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED); final boolean named = !expanded || ((name != null) && helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_NAME)); [BUGGY] final boolean arguments = helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_ARGUMENT); [BUGGY]  final boolean outer = helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_OUTER); helpSettingsCopy.remove(DisplaySetting.DISPLAY_GROUP_OUTER); final boolean both = named && expanded; if (optional) { buffer.append('['); } [CLASS] GroupImpl [METHOD] appendUsage [RETURN_TYPE] void  StringBuffer buffer Set helpSettings Comparator comp String separator [VARIABLES] StringBuffer buffer Set childSettings helpSettings helpSettingsCopy newPrefixes prefixes triggers boolean arguments both expanded named optional outer SortedMap newOptionMap optionMap Iterator i List anonymous list newAnonymous options Option option String arg description name previous separator int maximum minimum present Comparator comp  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	318	318	1	replace	
121	[BUG] [BUGGY] [FE] OptionException [CONTEXT] && (helpSettingsCopy.contains(DisplaySetting.DISPLAY_OPTIONAL) || helpSettingsCopy.contains(DisplaySetting.DISPLAY_OPTIONAL_CHILD_GROUP)); final boolean expanded = (name == null) || helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED); final boolean named = !expanded || ((name != null) && helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_NAME)); [BUGGY] [BUGGY] final boolean arguments = helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_ARGUMENT); final boolean outer = helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_OUTER); helpSettingsCopy.remove(DisplaySetting.DISPLAY_GROUP_OUTER); final boolean both = named && expanded; if (optional) { buffer.append('['); } [CLASS] GroupImpl [METHOD] appendUsage [RETURN_TYPE] void  StringBuffer buffer Set helpSettings Comparator comp String separator [VARIABLES] StringBuffer buffer Set childSettings helpSettings helpSettingsCopy newPrefixes prefixes triggers boolean arguments both expanded named optional outer SortedMap newOptionMap optionMap Iterator i List anonymous list newAnonymous options Option option String arg description name previous separator int maximum minimum present Comparator comp  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	318	318	1	add	
122	[BUG] [BUGGY] final boolean outer = helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_OUTER); [FE] OptionException [CONTEXT] final boolean expanded = (name == null) || helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED); final boolean named = !expanded || ((name != null) && helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_NAME)); final boolean arguments = helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_ARGUMENT); [BUGGY] final boolean outer = helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_OUTER); [BUGGY]  helpSettingsCopy.remove(DisplaySetting.DISPLAY_GROUP_OUTER); final boolean both = named && expanded; if (optional) { buffer.append('['); } if (named) { [CLASS] GroupImpl [METHOD] appendUsage [RETURN_TYPE] void  StringBuffer buffer Set helpSettings Comparator comp String separator [VARIABLES] StringBuffer buffer Set childSettings helpSettings helpSettingsCopy newPrefixes prefixes triggers boolean arguments both expanded named optional outer SortedMap newOptionMap optionMap Iterator i List anonymous list newAnonymous options Option option String arg description name previous separator int maximum minimum present Comparator comp  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	320	320	1	replace	
123	[BUG] [BUGGY] [FE] OptionException [CONTEXT] final boolean expanded = (name == null) || helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED); final boolean named = !expanded || ((name != null) && helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_NAME)); final boolean arguments = helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_ARGUMENT); [BUGGY] [BUGGY] final boolean outer = helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_OUTER); helpSettingsCopy.remove(DisplaySetting.DISPLAY_GROUP_OUTER); final boolean both = named && expanded; if (optional) { buffer.append('['); } if (named) { [CLASS] GroupImpl [METHOD] appendUsage [RETURN_TYPE] void  StringBuffer buffer Set helpSettings Comparator comp String separator [VARIABLES] StringBuffer buffer Set childSettings helpSettings helpSettingsCopy newPrefixes prefixes triggers boolean arguments both expanded named optional outer SortedMap newOptionMap optionMap Iterator i List anonymous list newAnonymous options Option option String arg description name previous separator int maximum minimum present Comparator comp  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	320	320	1	add	
124	[BUG] [BUGGY] helpSettingsCopy.remove(DisplaySetting.DISPLAY_GROUP_OUTER); [FE] OptionException [CONTEXT] (name == null) || helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED); final boolean named = !expanded || ((name != null) && helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_NAME)); final boolean arguments = helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_ARGUMENT); final boolean outer = helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_OUTER); [BUGGY] helpSettingsCopy.remove(DisplaySetting.DISPLAY_GROUP_OUTER); [BUGGY]  final boolean both = named && expanded; if (optional) { buffer.append('['); } if (named) { buffer.append(name); } [CLASS] GroupImpl [METHOD] appendUsage [RETURN_TYPE] void  StringBuffer buffer Set helpSettings Comparator comp String separator [VARIABLES] StringBuffer buffer Set childSettings helpSettings helpSettingsCopy newPrefixes prefixes triggers boolean arguments both expanded named optional outer SortedMap newOptionMap optionMap Iterator i List anonymous list newAnonymous options Option option String arg description name previous separator int maximum minimum present Comparator comp  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	322	322	1	replace	
125	[BUG] [BUGGY] [FE] OptionException [CONTEXT] (name == null) || helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED); final boolean named = !expanded || ((name != null) && helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_NAME)); final boolean arguments = helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_ARGUMENT); final boolean outer = helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_OUTER); [BUGGY] [BUGGY] helpSettingsCopy.remove(DisplaySetting.DISPLAY_GROUP_OUTER); final boolean both = named && expanded; if (optional) { buffer.append('['); } if (named) { buffer.append(name); } [CLASS] GroupImpl [METHOD] appendUsage [RETURN_TYPE] void  StringBuffer buffer Set helpSettings Comparator comp String separator [VARIABLES] StringBuffer buffer Set childSettings helpSettings helpSettingsCopy newPrefixes prefixes triggers boolean arguments both expanded named optional outer SortedMap newOptionMap optionMap Iterator i List anonymous list newAnonymous options Option option String arg description name previous separator int maximum minimum present Comparator comp  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	322	322	1	add	
126	[BUG] [BUGGY] final boolean both = named && expanded; [FE] OptionException [CONTEXT] final boolean named = !expanded || ((name != null) && helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_NAME)); final boolean arguments = helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_ARGUMENT); final boolean outer = helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_OUTER); helpSettingsCopy.remove(DisplaySetting.DISPLAY_GROUP_OUTER); [BUGGY] final boolean both = named && expanded; [BUGGY]  if (optional) { buffer.append('['); } if (named) { buffer.append(name); } if (both) { [CLASS] GroupImpl [METHOD] appendUsage [RETURN_TYPE] void  StringBuffer buffer Set helpSettings Comparator comp String separator [VARIABLES] StringBuffer buffer Set childSettings helpSettings helpSettingsCopy newPrefixes prefixes triggers boolean arguments both expanded named optional outer SortedMap newOptionMap optionMap Iterator i List anonymous list newAnonymous options Option option String arg description name previous separator int maximum minimum present Comparator comp  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	324	324	1	replace	
127	[BUG] [BUGGY] [FE] OptionException [CONTEXT] final boolean named = !expanded || ((name != null) && helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_NAME)); final boolean arguments = helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_ARGUMENT); final boolean outer = helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_OUTER); helpSettingsCopy.remove(DisplaySetting.DISPLAY_GROUP_OUTER); [BUGGY] [BUGGY] final boolean both = named && expanded; if (optional) { buffer.append('['); } if (named) { buffer.append(name); } if (both) { [CLASS] GroupImpl [METHOD] appendUsage [RETURN_TYPE] void  StringBuffer buffer Set helpSettings Comparator comp String separator [VARIABLES] StringBuffer buffer Set childSettings helpSettings helpSettingsCopy newPrefixes prefixes triggers boolean arguments both expanded named optional outer SortedMap newOptionMap optionMap Iterator i List anonymous list newAnonymous options Option option String arg description name previous separator int maximum minimum present Comparator comp  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	324	324	1	add	
128	[BUG] [BUGGY] if (optional) { [FE] OptionException [CONTEXT] ((name != null) && helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_NAME)); final boolean arguments = helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_ARGUMENT); final boolean outer = helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_OUTER); helpSettingsCopy.remove(DisplaySetting.DISPLAY_GROUP_OUTER); final boolean both = named && expanded; [BUGGY] if (optional) { [BUGGY] buffer.append('['); } if (named) { buffer.append(name); } if (both) { buffer.append(" ("); } [CLASS] GroupImpl [METHOD] appendUsage [RETURN_TYPE] void  StringBuffer buffer Set helpSettings Comparator comp String separator [VARIABLES] StringBuffer buffer Set childSettings helpSettings helpSettingsCopy newPrefixes prefixes triggers boolean arguments both expanded named optional outer SortedMap newOptionMap optionMap Iterator i List anonymous list newAnonymous options Option option String arg description name previous separator int maximum minimum present Comparator comp  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	326	326	1	replace	
129	[BUG] [BUGGY] [FE] OptionException [CONTEXT] ((name != null) && helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_NAME)); final boolean arguments = helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_ARGUMENT); final boolean outer = helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_OUTER); helpSettingsCopy.remove(DisplaySetting.DISPLAY_GROUP_OUTER); final boolean both = named && expanded; [BUGGY] [BUGGY] if (optional) { buffer.append('['); } if (named) { buffer.append(name); } if (both) { buffer.append(" ("); } [CLASS] GroupImpl [METHOD] appendUsage [RETURN_TYPE] void  StringBuffer buffer Set helpSettings Comparator comp String separator [VARIABLES] StringBuffer buffer Set childSettings helpSettings helpSettingsCopy newPrefixes prefixes triggers boolean arguments both expanded named optional outer SortedMap newOptionMap optionMap Iterator i List anonymous list newAnonymous options Option option String arg description name previous separator int maximum minimum present Comparator comp  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	326	326	1	add	
130	[BUG] [BUGGY] if (named) { [FE] OptionException [CONTEXT] final boolean outer = helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_OUTER); helpSettingsCopy.remove(DisplaySetting.DISPLAY_GROUP_OUTER); final boolean both = named && expanded; if (optional) { buffer.append('['); } [BUGGY] if (named) { [BUGGY] buffer.append(name); } if (both) { buffer.append(" ("); } if (expanded) { final Set childSettings;  [CLASS] GroupImpl [METHOD] appendUsage [RETURN_TYPE] void  StringBuffer buffer Set helpSettings Comparator comp String separator [VARIABLES] StringBuffer buffer Set childSettings helpSettings helpSettingsCopy newPrefixes prefixes triggers boolean arguments both expanded named optional outer SortedMap newOptionMap optionMap Iterator i List anonymous list newAnonymous options Option option String arg description name previous separator int maximum minimum present Comparator comp  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	330	330	1	replace	
131	[BUG] [BUGGY] [FE] OptionException [CONTEXT] final boolean outer = helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_OUTER); helpSettingsCopy.remove(DisplaySetting.DISPLAY_GROUP_OUTER); final boolean both = named && expanded; if (optional) { buffer.append('['); } [BUGGY] [BUGGY] if (named) { buffer.append(name); } if (both) { buffer.append(" ("); } if (expanded) { final Set childSettings;  [CLASS] GroupImpl [METHOD] appendUsage [RETURN_TYPE] void  StringBuffer buffer Set helpSettings Comparator comp String separator [VARIABLES] StringBuffer buffer Set childSettings helpSettings helpSettingsCopy newPrefixes prefixes triggers boolean arguments both expanded named optional outer SortedMap newOptionMap optionMap Iterator i List anonymous list newAnonymous options Option option String arg description name previous separator int maximum minimum present Comparator comp  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	330	330	1	add	
132	[BUG] [BUGGY] if (both) { [FE] OptionException [CONTEXT] final boolean both = named && expanded; if (optional) { buffer.append('['); } if (named) { buffer.append(name); } [BUGGY] if (both) { [BUGGY] buffer.append(" ("); } if (expanded) { final Set childSettings; if (!helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED)) { childSettings = DisplaySetting.NONE; } else { childSettings = new HashSet(helpSettingsCopy); [CLASS] GroupImpl [METHOD] appendUsage [RETURN_TYPE] void  StringBuffer buffer Set helpSettings Comparator comp String separator [VARIABLES] StringBuffer buffer Set childSettings helpSettings helpSettingsCopy newPrefixes prefixes triggers boolean arguments both expanded named optional outer SortedMap newOptionMap optionMap Iterator i List anonymous list newAnonymous options Option option String arg description name previous separator int maximum minimum present Comparator comp  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	334	334	1	replace	
133	[BUG] [BUGGY] [FE] OptionException [CONTEXT] final boolean both = named && expanded; if (optional) { buffer.append('['); } if (named) { buffer.append(name); } [BUGGY] [BUGGY] if (both) { buffer.append(" ("); } if (expanded) { final Set childSettings; if (!helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED)) { childSettings = DisplaySetting.NONE; } else { childSettings = new HashSet(helpSettingsCopy); [CLASS] GroupImpl [METHOD] appendUsage [RETURN_TYPE] void  StringBuffer buffer Set helpSettings Comparator comp String separator [VARIABLES] StringBuffer buffer Set childSettings helpSettings helpSettingsCopy newPrefixes prefixes triggers boolean arguments both expanded named optional outer SortedMap newOptionMap optionMap Iterator i List anonymous list newAnonymous options Option option String arg description name previous separator int maximum minimum present Comparator comp  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	334	334	1	add	
134	[BUG] [BUGGY] if (expanded) { [FE] OptionException [CONTEXT] } if (named) { buffer.append(name); } if (both) { buffer.append(" ("); } [BUGGY] if (expanded) { [BUGGY] final Set childSettings; if (!helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED)) { childSettings = DisplaySetting.NONE; } else { childSettings = new HashSet(helpSettingsCopy); childSettings.remove(DisplaySetting.DISPLAY_OPTIONAL); }   [CLASS] GroupImpl [METHOD] appendUsage [RETURN_TYPE] void  StringBuffer buffer Set helpSettings Comparator comp String separator [VARIABLES] StringBuffer buffer Set childSettings helpSettings helpSettingsCopy newPrefixes prefixes triggers boolean arguments both expanded named optional outer SortedMap newOptionMap optionMap Iterator i List anonymous list newAnonymous options Option option String arg description name previous separator int maximum minimum present Comparator comp  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	338	338	1	replace	
135	[BUG] [BUGGY] [FE] OptionException [CONTEXT] } if (named) { buffer.append(name); } if (both) { buffer.append(" ("); } [BUGGY] [BUGGY] if (expanded) { final Set childSettings; if (!helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED)) { childSettings = DisplaySetting.NONE; } else { childSettings = new HashSet(helpSettingsCopy); childSettings.remove(DisplaySetting.DISPLAY_OPTIONAL); }   [CLASS] GroupImpl [METHOD] appendUsage [RETURN_TYPE] void  StringBuffer buffer Set helpSettings Comparator comp String separator [VARIABLES] StringBuffer buffer Set childSettings helpSettings helpSettingsCopy newPrefixes prefixes triggers boolean arguments both expanded named optional outer SortedMap newOptionMap optionMap Iterator i List anonymous list newAnonymous options Option option String arg description name previous separator int maximum minimum present Comparator comp  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	338	338	1	add	
136	[BUG] [BUGGY] if (!helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED)) { [FE] OptionException [CONTEXT] buffer.append(name); } if (both) { buffer.append(" ("); } if (expanded) { final Set childSettings; [BUGGY] if (!helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED)) { [BUGGY] childSettings = DisplaySetting.NONE; } else { childSettings = new HashSet(helpSettingsCopy); childSettings.remove(DisplaySetting.DISPLAY_OPTIONAL); }  final List list; if (comp == null) { [CLASS] GroupImpl [METHOD] appendUsage [RETURN_TYPE] void  StringBuffer buffer Set helpSettings Comparator comp String separator [VARIABLES] StringBuffer buffer Set childSettings helpSettings helpSettingsCopy newPrefixes prefixes triggers boolean arguments both expanded named optional outer SortedMap newOptionMap optionMap Iterator i List anonymous list newAnonymous options Option option String arg description name previous separator int maximum minimum present Comparator comp  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	341	341	1	replace	
137	[BUG] [BUGGY] [FE] OptionException [CONTEXT] buffer.append(name); } if (both) { buffer.append(" ("); } if (expanded) { final Set childSettings; [BUGGY] [BUGGY] if (!helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED)) { childSettings = DisplaySetting.NONE; } else { childSettings = new HashSet(helpSettingsCopy); childSettings.remove(DisplaySetting.DISPLAY_OPTIONAL); }  final List list; if (comp == null) { [CLASS] GroupImpl [METHOD] appendUsage [RETURN_TYPE] void  StringBuffer buffer Set helpSettings Comparator comp String separator [VARIABLES] StringBuffer buffer Set childSettings helpSettings helpSettingsCopy newPrefixes prefixes triggers boolean arguments both expanded named optional outer SortedMap newOptionMap optionMap Iterator i List anonymous list newAnonymous options Option option String arg description name previous separator int maximum minimum present Comparator comp  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	341	341	1	add	
138	[BUG] [BUGGY] childSettings = DisplaySetting.NONE; [FE] OptionException [CONTEXT] } if (both) { buffer.append(" ("); } if (expanded) { final Set childSettings; if (!helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED)) { [BUGGY] childSettings = DisplaySetting.NONE; [BUGGY] } else { childSettings = new HashSet(helpSettingsCopy); childSettings.remove(DisplaySetting.DISPLAY_OPTIONAL); }  final List list; if (comp == null) {  [CLASS] GroupImpl [METHOD] appendUsage [RETURN_TYPE] void  StringBuffer buffer Set helpSettings Comparator comp String separator [VARIABLES] StringBuffer buffer Set childSettings helpSettings helpSettingsCopy newPrefixes prefixes triggers boolean arguments both expanded named optional outer SortedMap newOptionMap optionMap Iterator i List anonymous list newAnonymous options Option option String arg description name previous separator int maximum minimum present Comparator comp  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	342	342	1	replace	
139	[BUG] [BUGGY] [FE] OptionException [CONTEXT] } if (both) { buffer.append(" ("); } if (expanded) { final Set childSettings; if (!helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED)) { [BUGGY] [BUGGY] childSettings = DisplaySetting.NONE; } else { childSettings = new HashSet(helpSettingsCopy); childSettings.remove(DisplaySetting.DISPLAY_OPTIONAL); }  final List list; if (comp == null) {  [CLASS] GroupImpl [METHOD] appendUsage [RETURN_TYPE] void  StringBuffer buffer Set helpSettings Comparator comp String separator [VARIABLES] StringBuffer buffer Set childSettings helpSettings helpSettingsCopy newPrefixes prefixes triggers boolean arguments both expanded named optional outer SortedMap newOptionMap optionMap Iterator i List anonymous list newAnonymous options Option option String arg description name previous separator int maximum minimum present Comparator comp  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	342	342	1	add	
140	[BUG] [BUGGY] if (comp == null) { [FE] OptionException [CONTEXT] if (!helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED)) { childSettings = DisplaySetting.NONE; } else { childSettings = new HashSet(helpSettingsCopy); childSettings.remove(DisplaySetting.DISPLAY_OPTIONAL); }  final List list; [BUGGY] if (comp == null) { [BUGGY]  list = options; } else {  list = new ArrayList(options); Collections.sort(list, comp); }  for (final Iterator i = list.iterator(); i.hasNext();) { [CLASS] GroupImpl [METHOD] appendUsage [RETURN_TYPE] void  StringBuffer buffer Set helpSettings Comparator comp String separator [VARIABLES] StringBuffer buffer Set childSettings helpSettings helpSettingsCopy newPrefixes prefixes triggers boolean arguments both expanded named optional outer SortedMap newOptionMap optionMap Iterator i List anonymous list newAnonymous options Option option String arg description name previous separator int maximum minimum present Comparator comp  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	351	351	1	replace	
141	[BUG] [BUGGY] [FE] OptionException [CONTEXT] if (!helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED)) { childSettings = DisplaySetting.NONE; } else { childSettings = new HashSet(helpSettingsCopy); childSettings.remove(DisplaySetting.DISPLAY_OPTIONAL); }  final List list; [BUGGY] [BUGGY] if (comp == null) {  list = options; } else {  list = new ArrayList(options); Collections.sort(list, comp); }  for (final Iterator i = list.iterator(); i.hasNext();) { [CLASS] GroupImpl [METHOD] appendUsage [RETURN_TYPE] void  StringBuffer buffer Set helpSettings Comparator comp String separator [VARIABLES] StringBuffer buffer Set childSettings helpSettings helpSettingsCopy newPrefixes prefixes triggers boolean arguments both expanded named optional outer SortedMap newOptionMap optionMap Iterator i List anonymous list newAnonymous options Option option String arg description name previous separator int maximum minimum present Comparator comp  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	351	351	1	add	
142	[BUG] [BUGGY] list = options; [FE] OptionException [CONTEXT] } else { childSettings = new HashSet(helpSettingsCopy); childSettings.remove(DisplaySetting.DISPLAY_OPTIONAL); }  final List list; if (comp == null) {  [BUGGY] list = options; [BUGGY] } else {  list = new ArrayList(options); Collections.sort(list, comp); }  for (final Iterator i = list.iterator(); i.hasNext();) { final Option option = (Option) i.next();  [CLASS] GroupImpl [METHOD] appendUsage [RETURN_TYPE] void  StringBuffer buffer Set helpSettings Comparator comp String separator [VARIABLES] StringBuffer buffer Set childSettings helpSettings helpSettingsCopy newPrefixes prefixes triggers boolean arguments both expanded named optional outer SortedMap newOptionMap optionMap Iterator i List anonymous list newAnonymous options Option option String arg description name previous separator int maximum minimum present Comparator comp  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	353	353	1	replace	
143	[BUG] [BUGGY] [FE] OptionException [CONTEXT] } else { childSettings = new HashSet(helpSettingsCopy); childSettings.remove(DisplaySetting.DISPLAY_OPTIONAL); }  final List list; if (comp == null) {  [BUGGY] [BUGGY] list = options; } else {  list = new ArrayList(options); Collections.sort(list, comp); }  for (final Iterator i = list.iterator(); i.hasNext();) { final Option option = (Option) i.next();  [CLASS] GroupImpl [METHOD] appendUsage [RETURN_TYPE] void  StringBuffer buffer Set helpSettings Comparator comp String separator [VARIABLES] StringBuffer buffer Set childSettings helpSettings helpSettingsCopy newPrefixes prefixes triggers boolean arguments both expanded named optional outer SortedMap newOptionMap optionMap Iterator i List anonymous list newAnonymous options Option option String arg description name previous separator int maximum minimum present Comparator comp  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	353	353	1	add	
144	[BUG] [BUGGY] for (final Iterator i = list.iterator(); i.hasNext();) { [FE] OptionException [CONTEXT] if (comp == null) {  list = options; } else {  list = new ArrayList(options); Collections.sort(list, comp); }  [BUGGY] for (final Iterator i = list.iterator(); i.hasNext();) { [BUGGY] final Option option = (Option) i.next();  option.appendUsage(buffer, childSettings, comp);  if (i.hasNext()) { buffer.append(separator); } } [CLASS] GroupImpl [METHOD] appendUsage [RETURN_TYPE] void  StringBuffer buffer Set helpSettings Comparator comp String separator [VARIABLES] StringBuffer buffer Set childSettings helpSettings helpSettingsCopy newPrefixes prefixes triggers boolean arguments both expanded named optional outer SortedMap newOptionMap optionMap Iterator i List anonymous list newAnonymous options Option option String arg description name previous separator int maximum minimum present Comparator comp  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	361	361	1	replace	
145	[BUG] [BUGGY] [FE] OptionException [CONTEXT] if (comp == null) {  list = options; } else {  list = new ArrayList(options); Collections.sort(list, comp); }  [BUGGY] [BUGGY] for (final Iterator i = list.iterator(); i.hasNext();) { final Option option = (Option) i.next();  option.appendUsage(buffer, childSettings, comp);  if (i.hasNext()) { buffer.append(separator); } } [CLASS] GroupImpl [METHOD] appendUsage [RETURN_TYPE] void  StringBuffer buffer Set helpSettings Comparator comp String separator [VARIABLES] StringBuffer buffer Set childSettings helpSettings helpSettingsCopy newPrefixes prefixes triggers boolean arguments both expanded named optional outer SortedMap newOptionMap optionMap Iterator i List anonymous list newAnonymous options Option option String arg description name previous separator int maximum minimum present Comparator comp  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	361	361	1	add	
146	[BUG] [BUGGY] final Option option = (Option) i.next(); [FE] OptionException [CONTEXT]  list = options; } else {  list = new ArrayList(options); Collections.sort(list, comp); }  for (final Iterator i = list.iterator(); i.hasNext();) { [BUGGY] final Option option = (Option) i.next(); [BUGGY]   option.appendUsage(buffer, childSettings, comp);  if (i.hasNext()) { buffer.append(separator); } } } [CLASS] GroupImpl [METHOD] appendUsage [RETURN_TYPE] void  StringBuffer buffer Set helpSettings Comparator comp String separator [VARIABLES] StringBuffer buffer Set childSettings helpSettings helpSettingsCopy newPrefixes prefixes triggers boolean arguments both expanded named optional outer SortedMap newOptionMap optionMap Iterator i List anonymous list newAnonymous options Option option String arg description name previous separator int maximum minimum present Comparator comp  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	362	362	1	replace	
147	[BUG] [BUGGY] [FE] OptionException [CONTEXT]  list = options; } else {  list = new ArrayList(options); Collections.sort(list, comp); }  for (final Iterator i = list.iterator(); i.hasNext();) { [BUGGY] [BUGGY] final Option option = (Option) i.next();  option.appendUsage(buffer, childSettings, comp);  if (i.hasNext()) { buffer.append(separator); } } } [CLASS] GroupImpl [METHOD] appendUsage [RETURN_TYPE] void  StringBuffer buffer Set helpSettings Comparator comp String separator [VARIABLES] StringBuffer buffer Set childSettings helpSettings helpSettingsCopy newPrefixes prefixes triggers boolean arguments both expanded named optional outer SortedMap newOptionMap optionMap Iterator i List anonymous list newAnonymous options Option option String arg description name previous separator int maximum minimum present Comparator comp  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	362	362	1	add	
148	[BUG] [BUGGY] option.appendUsage(buffer, childSettings, comp); [FE] OptionException [CONTEXT]  list = new ArrayList(options); Collections.sort(list, comp); }  for (final Iterator i = list.iterator(); i.hasNext();) { final Option option = (Option) i.next();  [BUGGY] option.appendUsage(buffer, childSettings, comp); [BUGGY]   if (i.hasNext()) { buffer.append(separator); } } } if (both) { buffer.append(')'); [CLASS] GroupImpl [METHOD] appendUsage [RETURN_TYPE] void  StringBuffer buffer Set helpSettings Comparator comp String separator [VARIABLES] StringBuffer buffer Set childSettings helpSettings helpSettingsCopy newPrefixes prefixes triggers boolean arguments both expanded named optional outer SortedMap newOptionMap optionMap Iterator i List anonymous list newAnonymous options Option option String arg description name previous separator int maximum minimum present Comparator comp  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	365	365	1	replace	
149	[BUG] [BUGGY] [FE] OptionException [CONTEXT]  list = new ArrayList(options); Collections.sort(list, comp); }  for (final Iterator i = list.iterator(); i.hasNext();) { final Option option = (Option) i.next();  [BUGGY] [BUGGY] option.appendUsage(buffer, childSettings, comp);  if (i.hasNext()) { buffer.append(separator); } } } if (both) { buffer.append(')'); [CLASS] GroupImpl [METHOD] appendUsage [RETURN_TYPE] void  StringBuffer buffer Set helpSettings Comparator comp String separator [VARIABLES] StringBuffer buffer Set childSettings helpSettings helpSettingsCopy newPrefixes prefixes triggers boolean arguments both expanded named optional outer SortedMap newOptionMap optionMap Iterator i List anonymous list newAnonymous options Option option String arg description name previous separator int maximum minimum present Comparator comp  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	365	365	1	add	
150	[BUG] [BUGGY] if (i.hasNext()) { [FE] OptionException [CONTEXT] }  for (final Iterator i = list.iterator(); i.hasNext();) { final Option option = (Option) i.next();  option.appendUsage(buffer, childSettings, comp);  [BUGGY] if (i.hasNext()) { [BUGGY] buffer.append(separator); } } } if (both) { buffer.append(')'); } if (optional && outer) { [CLASS] GroupImpl [METHOD] appendUsage [RETURN_TYPE] void  StringBuffer buffer Set helpSettings Comparator comp String separator [VARIABLES] StringBuffer buffer Set childSettings helpSettings helpSettingsCopy newPrefixes prefixes triggers boolean arguments both expanded named optional outer SortedMap newOptionMap optionMap Iterator i List anonymous list newAnonymous options Option option String arg description name previous separator int maximum minimum present Comparator comp  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	368	368	1	replace	
151	[BUG] [BUGGY] [FE] OptionException [CONTEXT] }  for (final Iterator i = list.iterator(); i.hasNext();) { final Option option = (Option) i.next();  option.appendUsage(buffer, childSettings, comp);  [BUGGY] [BUGGY] if (i.hasNext()) { buffer.append(separator); } } } if (both) { buffer.append(')'); } if (optional && outer) { [CLASS] GroupImpl [METHOD] appendUsage [RETURN_TYPE] void  StringBuffer buffer Set helpSettings Comparator comp String separator [VARIABLES] StringBuffer buffer Set childSettings helpSettings helpSettingsCopy newPrefixes prefixes triggers boolean arguments both expanded named optional outer SortedMap newOptionMap optionMap Iterator i List anonymous list newAnonymous options Option option String arg description name previous separator int maximum minimum present Comparator comp  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	368	368	1	add	
152	[BUG] [BUGGY] } [FE] OptionException [CONTEXT] for (final Iterator i = list.iterator(); i.hasNext();) { final Option option = (Option) i.next();  option.appendUsage(buffer, childSettings, comp);  if (i.hasNext()) { buffer.append(separator); } [BUGGY] } [BUGGY] } if (both) { buffer.append(')'); } if (optional && outer) { buffer.append(']'); }  [CLASS] GroupImpl [METHOD] appendUsage [RETURN_TYPE] void  StringBuffer buffer Set helpSettings Comparator comp String separator [VARIABLES] StringBuffer buffer Set childSettings helpSettings helpSettingsCopy newPrefixes prefixes triggers boolean arguments both expanded named optional outer SortedMap newOptionMap optionMap Iterator i List anonymous list newAnonymous options Option option String arg description name previous separator int maximum minimum present Comparator comp  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	371	371	1	replace	
153	[BUG] [BUGGY] [FE] OptionException [CONTEXT] for (final Iterator i = list.iterator(); i.hasNext();) { final Option option = (Option) i.next();  option.appendUsage(buffer, childSettings, comp);  if (i.hasNext()) { buffer.append(separator); } [BUGGY] [BUGGY] } } if (both) { buffer.append(')'); } if (optional && outer) { buffer.append(']'); }  [CLASS] GroupImpl [METHOD] appendUsage [RETURN_TYPE] void  StringBuffer buffer Set helpSettings Comparator comp String separator [VARIABLES] StringBuffer buffer Set childSettings helpSettings helpSettingsCopy newPrefixes prefixes triggers boolean arguments both expanded named optional outer SortedMap newOptionMap optionMap Iterator i List anonymous list newAnonymous options Option option String arg description name previous separator int maximum minimum present Comparator comp  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	371	371	1	add	
154	[BUG] [BUGGY] if (both) { [FE] OptionException [CONTEXT]  option.appendUsage(buffer, childSettings, comp);  if (i.hasNext()) { buffer.append(separator); } } } [BUGGY] if (both) { [BUGGY] buffer.append(')'); } if (optional && outer) { buffer.append(']'); } if (arguments) { for (final Iterator i = anonymous.iterator(); i.hasNext();) { buffer.append(' '); [CLASS] GroupImpl [METHOD] appendUsage [RETURN_TYPE] void  StringBuffer buffer Set helpSettings Comparator comp String separator [VARIABLES] StringBuffer buffer Set childSettings helpSettings helpSettingsCopy newPrefixes prefixes triggers boolean arguments both expanded named optional outer SortedMap newOptionMap optionMap Iterator i List anonymous list newAnonymous options Option option String arg description name previous separator int maximum minimum present Comparator comp  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	374	374	1	replace	
155	[BUG] [BUGGY] [FE] OptionException [CONTEXT]  option.appendUsage(buffer, childSettings, comp);  if (i.hasNext()) { buffer.append(separator); } } } [BUGGY] [BUGGY] if (both) { buffer.append(')'); } if (optional && outer) { buffer.append(']'); } if (arguments) { for (final Iterator i = anonymous.iterator(); i.hasNext();) { buffer.append(' '); [CLASS] GroupImpl [METHOD] appendUsage [RETURN_TYPE] void  StringBuffer buffer Set helpSettings Comparator comp String separator [VARIABLES] StringBuffer buffer Set childSettings helpSettings helpSettingsCopy newPrefixes prefixes triggers boolean arguments both expanded named optional outer SortedMap newOptionMap optionMap Iterator i List anonymous list newAnonymous options Option option String arg description name previous separator int maximum minimum present Comparator comp  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	374	374	1	add	
156	[BUG] [BUGGY] if (optional && outer) { [FE] OptionException [CONTEXT] if (i.hasNext()) { buffer.append(separator); } } } if (both) { buffer.append(')'); } [BUGGY] if (optional && outer) { [BUGGY] buffer.append(']'); } if (arguments) { for (final Iterator i = anonymous.iterator(); i.hasNext();) { buffer.append(' '); final Option option = (Option) i.next(); option.appendUsage(buffer, helpSettingsCopy, comp); } [CLASS] GroupImpl [METHOD] appendUsage [RETURN_TYPE] void  StringBuffer buffer Set helpSettings Comparator comp String separator [VARIABLES] StringBuffer buffer Set childSettings helpSettings helpSettingsCopy newPrefixes prefixes triggers boolean arguments both expanded named optional outer SortedMap newOptionMap optionMap Iterator i List anonymous list newAnonymous options Option option String arg description name previous separator int maximum minimum present Comparator comp  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	378	378	1	replace	
157	[BUG] [BUGGY] [FE] OptionException [CONTEXT] if (i.hasNext()) { buffer.append(separator); } } } if (both) { buffer.append(')'); } [BUGGY] [BUGGY] if (optional && outer) { buffer.append(']'); } if (arguments) { for (final Iterator i = anonymous.iterator(); i.hasNext();) { buffer.append(' '); final Option option = (Option) i.next(); option.appendUsage(buffer, helpSettingsCopy, comp); } [CLASS] GroupImpl [METHOD] appendUsage [RETURN_TYPE] void  StringBuffer buffer Set helpSettings Comparator comp String separator [VARIABLES] StringBuffer buffer Set childSettings helpSettings helpSettingsCopy newPrefixes prefixes triggers boolean arguments both expanded named optional outer SortedMap newOptionMap optionMap Iterator i List anonymous list newAnonymous options Option option String arg description name previous separator int maximum minimum present Comparator comp  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	378	378	1	add	
158	[BUG] [BUGGY] if (arguments) { [FE] OptionException [CONTEXT] } if (both) { buffer.append(')'); } if (optional && outer) { buffer.append(']'); } [BUGGY] if (arguments) { [BUGGY] for (final Iterator i = anonymous.iterator(); i.hasNext();) { buffer.append(' '); final Option option = (Option) i.next(); option.appendUsage(buffer, helpSettingsCopy, comp); } } if (optional && !outer) { buffer.append(']'); [CLASS] GroupImpl [METHOD] appendUsage [RETURN_TYPE] void  StringBuffer buffer Set helpSettings Comparator comp String separator [VARIABLES] StringBuffer buffer Set childSettings helpSettings helpSettingsCopy newPrefixes prefixes triggers boolean arguments both expanded named optional outer SortedMap newOptionMap optionMap Iterator i List anonymous list newAnonymous options Option option String arg description name previous separator int maximum minimum present Comparator comp  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	382	382	1	replace	
159	[BUG] [BUGGY] [FE] OptionException [CONTEXT] } if (both) { buffer.append(')'); } if (optional && outer) { buffer.append(']'); } [BUGGY] [BUGGY] if (arguments) { for (final Iterator i = anonymous.iterator(); i.hasNext();) { buffer.append(' '); final Option option = (Option) i.next(); option.appendUsage(buffer, helpSettingsCopy, comp); } } if (optional && !outer) { buffer.append(']'); [CLASS] GroupImpl [METHOD] appendUsage [RETURN_TYPE] void  StringBuffer buffer Set helpSettings Comparator comp String separator [VARIABLES] StringBuffer buffer Set childSettings helpSettings helpSettingsCopy newPrefixes prefixes triggers boolean arguments both expanded named optional outer SortedMap newOptionMap optionMap Iterator i List anonymous list newAnonymous options Option option String arg description name previous separator int maximum minimum present Comparator comp  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	382	382	1	add	
160	[BUG] [BUGGY] if (optional && !outer) { [FE] OptionException [CONTEXT] if (arguments) { for (final Iterator i = anonymous.iterator(); i.hasNext();) { buffer.append(' '); final Option option = (Option) i.next(); option.appendUsage(buffer, helpSettingsCopy, comp); } } [BUGGY] if (optional && !outer) { [BUGGY] buffer.append(']'); } } [CLASS] GroupImpl [METHOD] appendUsage [RETURN_TYPE] void  StringBuffer buffer Set helpSettings Comparator comp String separator [VARIABLES] StringBuffer buffer Set childSettings helpSettings helpSettingsCopy newPrefixes prefixes triggers boolean arguments both expanded named optional outer SortedMap newOptionMap optionMap Iterator i List anonymous list newAnonymous options Option option String arg description name previous separator int maximum minimum present Comparator comp  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	391	391	1	replace	
161	[BUG] [BUGGY] [FE] OptionException [CONTEXT] if (arguments) { for (final Iterator i = anonymous.iterator(); i.hasNext();) { buffer.append(' '); final Option option = (Option) i.next(); option.appendUsage(buffer, helpSettingsCopy, comp); } } [BUGGY] [BUGGY] if (optional && !outer) { buffer.append(']'); } } [CLASS] GroupImpl [METHOD] appendUsage [RETURN_TYPE] void  StringBuffer buffer Set helpSettings Comparator comp String separator [VARIABLES] StringBuffer buffer Set childSettings helpSettings helpSettingsCopy newPrefixes prefixes triggers boolean arguments both expanded named optional outer SortedMap newOptionMap optionMap Iterator i List anonymous list newAnonymous options Option option String arg description name previous separator int maximum minimum present Comparator comp  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	391	391	1	add	
162	[BUG] [BUGGY] } [FE] OptionException [CONTEXT] buffer.append(' '); final Option option = (Option) i.next(); option.appendUsage(buffer, helpSettingsCopy, comp); } } if (optional && !outer) { buffer.append(']'); } [BUGGY] } [BUGGY]  [CLASS] GroupImpl [METHOD] appendUsage [RETURN_TYPE] void  StringBuffer buffer Set helpSettings Comparator comp String separator [VARIABLES] StringBuffer buffer Set childSettings helpSettings helpSettingsCopy newPrefixes prefixes triggers boolean arguments both expanded named optional outer SortedMap newOptionMap optionMap Iterator i List anonymous list newAnonymous options Option option String arg description name previous separator int maximum minimum present Comparator comp  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	394	394	1	replace	
163	[BUG] [BUGGY] [FE] OptionException [CONTEXT] buffer.append(' '); final Option option = (Option) i.next(); option.appendUsage(buffer, helpSettingsCopy, comp); } } if (optional && !outer) { buffer.append(']'); } [BUGGY] [BUGGY] } [CLASS] GroupImpl [METHOD] appendUsage [RETURN_TYPE] void  StringBuffer buffer Set helpSettings Comparator comp String separator [VARIABLES] StringBuffer buffer Set childSettings helpSettings helpSettingsCopy newPrefixes prefixes triggers boolean arguments both expanded named optional outer SortedMap newOptionMap optionMap Iterator i List anonymous list newAnonymous options Option option String arg description name previous separator int maximum minimum present Comparator comp  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	394	394	1	add	
164	[BUG] [BUGGY] return minimum; [FE] OptionException [CONTEXT] public int getMinimum() { [BUGGY] return minimum; [BUGGY] } [CLASS] GroupImpl [METHOD] getMinimum [RETURN_TYPE] int  [VARIABLES] List anonymous helpLines list newAnonymous options Set childSettings helpSettings helpSettingsCopy newPrefixes prefixes triggers String arg description name previous separator trigger boolean int depth maximum minimum present SortedMap newOptionMap optionMap  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	469	469	1	replace	
165	[BUG] [BUGGY] [FE] OptionException [CONTEXT] public int getMinimum() { [BUGGY] [BUGGY] return minimum; } [CLASS] GroupImpl [METHOD] getMinimum [RETURN_TYPE] int  [VARIABLES] List anonymous helpLines list newAnonymous options Set childSettings helpSettings helpSettingsCopy newPrefixes prefixes triggers String arg description name previous separator trigger boolean int depth maximum minimum present SortedMap newOptionMap optionMap  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	469	469	1	add	
166	[BUG] [BUGGY] return (getParent() == null || super.isRequired()) && getMinimum() > 0; [FE] OptionException [CONTEXT] public boolean isRequired() { [BUGGY] return (getParent() == null || super.isRequired()) && getMinimum() > 0; [BUGGY] } [CLASS] GroupImpl [METHOD] isRequired [RETURN_TYPE] boolean  [VARIABLES] List anonymous helpLines list newAnonymous options Set childSettings helpSettings helpSettingsCopy newPrefixes prefixes triggers String arg description name previous separator trigger boolean int depth maximum minimum present SortedMap newOptionMap optionMap  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	485	485	1	replace	
167	[BUG] [BUGGY] [FE] OptionException [CONTEXT] public boolean isRequired() { [BUGGY] [BUGGY] return (getParent() == null || super.isRequired()) && getMinimum() > 0; } [CLASS] GroupImpl [METHOD] isRequired [RETURN_TYPE] boolean  [VARIABLES] List anonymous helpLines list newAnonymous options Set childSettings helpSettings helpSettingsCopy newPrefixes prefixes triggers String arg description name previous separator trigger boolean int depth maximum minimum present SortedMap newOptionMap optionMap  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	485	485	1	add	
168	[BUG] [BUGGY] super.defaults(commandLine); [FE] OptionException [CONTEXT] public void defaults(final WriteableCommandLine commandLine) { [BUGGY] super.defaults(commandLine); [BUGGY]  for (final Iterator i = options.iterator(); i.hasNext();) { final Option option = (Option) i.next(); option.defaults(commandLine); } for (final Iterator i = anonymous.iterator(); i.hasNext();) { final Option option = (Option) i.next(); option.defaults(commandLine); } [CLASS] GroupImpl [METHOD] defaults [RETURN_TYPE] void  WriteableCommandLine commandLine [VARIABLES] Set childSettings helpSettings helpSettingsCopy newPrefixes prefixes triggers boolean SortedMap newOptionMap optionMap WriteableCommandLine commandLine Iterator i List anonymous helpLines list newAnonymous options Option option String arg description name previous separator trigger int depth maximum minimum present  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	489	489	1	replace	
169	[BUG] [BUGGY] [FE] OptionException [CONTEXT] public void defaults(final WriteableCommandLine commandLine) { [BUGGY] [BUGGY] super.defaults(commandLine); for (final Iterator i = options.iterator(); i.hasNext();) { final Option option = (Option) i.next(); option.defaults(commandLine); } for (final Iterator i = anonymous.iterator(); i.hasNext();) { final Option option = (Option) i.next(); option.defaults(commandLine); } [CLASS] GroupImpl [METHOD] defaults [RETURN_TYPE] void  WriteableCommandLine commandLine [VARIABLES] Set childSettings helpSettings helpSettingsCopy newPrefixes prefixes triggers boolean SortedMap newOptionMap optionMap WriteableCommandLine commandLine Iterator i List anonymous helpLines list newAnonymous options Option option String arg description name previous separator trigger int depth maximum minimum present  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	489	489	1	add	
170	[BUG] [BUGGY] for (final Iterator i = options.iterator(); i.hasNext();) { [FE] OptionException [CONTEXT] public void defaults(final WriteableCommandLine commandLine) { super.defaults(commandLine); [BUGGY] for (final Iterator i = options.iterator(); i.hasNext();) { [BUGGY] final Option option = (Option) i.next(); option.defaults(commandLine); } for (final Iterator i = anonymous.iterator(); i.hasNext();) { final Option option = (Option) i.next(); option.defaults(commandLine); } } [CLASS] GroupImpl [METHOD] defaults [RETURN_TYPE] void  WriteableCommandLine commandLine [VARIABLES] Set childSettings helpSettings helpSettingsCopy newPrefixes prefixes triggers boolean SortedMap newOptionMap optionMap WriteableCommandLine commandLine Iterator i List anonymous helpLines list newAnonymous options Option option String arg description name previous separator trigger int depth maximum minimum present  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	491	491	1	replace	
171	[BUG] [BUGGY] [FE] OptionException [CONTEXT] public void defaults(final WriteableCommandLine commandLine) { super.defaults(commandLine); [BUGGY] [BUGGY] for (final Iterator i = options.iterator(); i.hasNext();) { final Option option = (Option) i.next(); option.defaults(commandLine); } for (final Iterator i = anonymous.iterator(); i.hasNext();) { final Option option = (Option) i.next(); option.defaults(commandLine); } } [CLASS] GroupImpl [METHOD] defaults [RETURN_TYPE] void  WriteableCommandLine commandLine [VARIABLES] Set childSettings helpSettings helpSettingsCopy newPrefixes prefixes triggers boolean SortedMap newOptionMap optionMap WriteableCommandLine commandLine Iterator i List anonymous helpLines list newAnonymous options Option option String arg description name previous separator trigger int depth maximum minimum present  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	491	491	1	add	
172	[BUG] [BUGGY] final Option option = (Option) i.next(); [FE] OptionException [CONTEXT] public void defaults(final WriteableCommandLine commandLine) { super.defaults(commandLine); for (final Iterator i = options.iterator(); i.hasNext();) { [BUGGY] final Option option = (Option) i.next(); [BUGGY] option.defaults(commandLine); } for (final Iterator i = anonymous.iterator(); i.hasNext();) { final Option option = (Option) i.next(); option.defaults(commandLine); } } [CLASS] GroupImpl [METHOD] defaults [RETURN_TYPE] void  WriteableCommandLine commandLine [VARIABLES] Set childSettings helpSettings helpSettingsCopy newPrefixes prefixes triggers boolean SortedMap newOptionMap optionMap WriteableCommandLine commandLine Iterator i List anonymous helpLines list newAnonymous options Option option String arg description name previous separator trigger int depth maximum minimum present  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	492	492	1	replace	
173	[BUG] [BUGGY] [FE] OptionException [CONTEXT] public void defaults(final WriteableCommandLine commandLine) { super.defaults(commandLine); for (final Iterator i = options.iterator(); i.hasNext();) { [BUGGY] [BUGGY] final Option option = (Option) i.next(); option.defaults(commandLine); } for (final Iterator i = anonymous.iterator(); i.hasNext();) { final Option option = (Option) i.next(); option.defaults(commandLine); } } [CLASS] GroupImpl [METHOD] defaults [RETURN_TYPE] void  WriteableCommandLine commandLine [VARIABLES] Set childSettings helpSettings helpSettingsCopy newPrefixes prefixes triggers boolean SortedMap newOptionMap optionMap WriteableCommandLine commandLine Iterator i List anonymous helpLines list newAnonymous options Option option String arg description name previous separator trigger int depth maximum minimum present  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	492	492	1	add	
174	[BUG] [BUGGY] option.defaults(commandLine); [FE] OptionException [CONTEXT] public void defaults(final WriteableCommandLine commandLine) { super.defaults(commandLine); for (final Iterator i = options.iterator(); i.hasNext();) { final Option option = (Option) i.next(); [BUGGY] option.defaults(commandLine); [BUGGY] } for (final Iterator i = anonymous.iterator(); i.hasNext();) { final Option option = (Option) i.next(); option.defaults(commandLine); } } [CLASS] GroupImpl [METHOD] defaults [RETURN_TYPE] void  WriteableCommandLine commandLine [VARIABLES] Set childSettings helpSettings helpSettingsCopy newPrefixes prefixes triggers boolean SortedMap newOptionMap optionMap WriteableCommandLine commandLine Iterator i List anonymous helpLines list newAnonymous options Option option String arg description name previous separator trigger int depth maximum minimum present  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	493	493	1	replace	
175	[BUG] [BUGGY] [FE] OptionException [CONTEXT] public void defaults(final WriteableCommandLine commandLine) { super.defaults(commandLine); for (final Iterator i = options.iterator(); i.hasNext();) { final Option option = (Option) i.next(); [BUGGY] [BUGGY] option.defaults(commandLine); } for (final Iterator i = anonymous.iterator(); i.hasNext();) { final Option option = (Option) i.next(); option.defaults(commandLine); } } [CLASS] GroupImpl [METHOD] defaults [RETURN_TYPE] void  WriteableCommandLine commandLine [VARIABLES] Set childSettings helpSettings helpSettingsCopy newPrefixes prefixes triggers boolean SortedMap newOptionMap optionMap WriteableCommandLine commandLine Iterator i List anonymous helpLines list newAnonymous options Option option String arg description name previous separator trigger int depth maximum minimum present  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	493	493	1	add	
176	[BUG] [BUGGY] } [FE] OptionException [CONTEXT] public void defaults(final WriteableCommandLine commandLine) { super.defaults(commandLine); for (final Iterator i = options.iterator(); i.hasNext();) { final Option option = (Option) i.next(); option.defaults(commandLine); [BUGGY] } [BUGGY]  for (final Iterator i = anonymous.iterator(); i.hasNext();) { final Option option = (Option) i.next(); option.defaults(commandLine); } } [CLASS] GroupImpl [METHOD] defaults [RETURN_TYPE] void  WriteableCommandLine commandLine [VARIABLES] Set childSettings helpSettings helpSettingsCopy newPrefixes prefixes triggers boolean SortedMap newOptionMap optionMap WriteableCommandLine commandLine Iterator i List anonymous helpLines list newAnonymous options Option option String arg description name previous separator trigger int depth maximum minimum present  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	494	494	1	replace	
177	[BUG] [BUGGY] [FE] OptionException [CONTEXT] public void defaults(final WriteableCommandLine commandLine) { super.defaults(commandLine); for (final Iterator i = options.iterator(); i.hasNext();) { final Option option = (Option) i.next(); option.defaults(commandLine); [BUGGY] [BUGGY] } for (final Iterator i = anonymous.iterator(); i.hasNext();) { final Option option = (Option) i.next(); option.defaults(commandLine); } } [CLASS] GroupImpl [METHOD] defaults [RETURN_TYPE] void  WriteableCommandLine commandLine [VARIABLES] Set childSettings helpSettings helpSettingsCopy newPrefixes prefixes triggers boolean SortedMap newOptionMap optionMap WriteableCommandLine commandLine Iterator i List anonymous helpLines list newAnonymous options Option option String arg description name previous separator trigger int depth maximum minimum present  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	494	494	1	add	
178	[BUG] [BUGGY] for (final Iterator i = anonymous.iterator(); i.hasNext();) { [FE] OptionException [CONTEXT] public void defaults(final WriteableCommandLine commandLine) { super.defaults(commandLine); for (final Iterator i = options.iterator(); i.hasNext();) { final Option option = (Option) i.next(); option.defaults(commandLine); } [BUGGY] for (final Iterator i = anonymous.iterator(); i.hasNext();) { [BUGGY] final Option option = (Option) i.next(); option.defaults(commandLine); } } [CLASS] GroupImpl [METHOD] defaults [RETURN_TYPE] void  WriteableCommandLine commandLine [VARIABLES] Set childSettings helpSettings helpSettingsCopy newPrefixes prefixes triggers boolean SortedMap newOptionMap optionMap WriteableCommandLine commandLine Iterator i List anonymous helpLines list newAnonymous options Option option String arg description name previous separator trigger int depth maximum minimum present  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	496	496	1	replace	
179	[BUG] [BUGGY] [FE] OptionException [CONTEXT] public void defaults(final WriteableCommandLine commandLine) { super.defaults(commandLine); for (final Iterator i = options.iterator(); i.hasNext();) { final Option option = (Option) i.next(); option.defaults(commandLine); } [BUGGY] [BUGGY] for (final Iterator i = anonymous.iterator(); i.hasNext();) { final Option option = (Option) i.next(); option.defaults(commandLine); } } [CLASS] GroupImpl [METHOD] defaults [RETURN_TYPE] void  WriteableCommandLine commandLine [VARIABLES] Set childSettings helpSettings helpSettingsCopy newPrefixes prefixes triggers boolean SortedMap newOptionMap optionMap WriteableCommandLine commandLine Iterator i List anonymous helpLines list newAnonymous options Option option String arg description name previous separator trigger int depth maximum minimum present  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	496	496	1	add	
180	[BUG] [BUGGY] } [FE] OptionException [CONTEXT] for (final Iterator i = options.iterator(); i.hasNext();) { final Option option = (Option) i.next(); option.defaults(commandLine); } for (final Iterator i = anonymous.iterator(); i.hasNext();) { final Option option = (Option) i.next(); option.defaults(commandLine); } [BUGGY] } [BUGGY]  [CLASS] GroupImpl [METHOD] defaults [RETURN_TYPE] void  WriteableCommandLine commandLine [VARIABLES] Set childSettings helpSettings helpSettingsCopy newPrefixes prefixes triggers boolean SortedMap newOptionMap optionMap WriteableCommandLine commandLine Iterator i List anonymous helpLines list newAnonymous options Option option String arg description name previous separator trigger int depth maximum minimum present  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	500	500	1	replace	
181	[BUG] [BUGGY] [FE] OptionException [CONTEXT] for (final Iterator i = options.iterator(); i.hasNext();) { final Option option = (Option) i.next(); option.defaults(commandLine); } for (final Iterator i = anonymous.iterator(); i.hasNext();) { final Option option = (Option) i.next(); option.defaults(commandLine); } [BUGGY] [BUGGY] } [CLASS] GroupImpl [METHOD] defaults [RETURN_TYPE] void  WriteableCommandLine commandLine [VARIABLES] Set childSettings helpSettings helpSettingsCopy newPrefixes prefixes triggers boolean SortedMap newOptionMap optionMap WriteableCommandLine commandLine Iterator i List anonymous helpLines list newAnonymous options Option option String arg description name previous separator trigger int depth maximum minimum present  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	500	500	1	add	
182	[BUG] [BUGGY] return commandLine.looksLikeOption(trigger); [FE] OptionException [CONTEXT] private boolean looksLikeOption(final WriteableCommandLine commandLine, final String trigger) { [BUGGY] return commandLine.looksLikeOption(trigger); [BUGGY] } [CLASS] GroupImpl [METHOD] looksLikeOption [RETURN_TYPE] boolean  WriteableCommandLine commandLine String trigger [VARIABLES] Set childSettings helpSettings helpSettingsCopy newPrefixes prefixes triggers boolean SortedMap newOptionMap optionMap WriteableCommandLine commandLine List anonymous helpLines list newAnonymous options String arg description name previous separator trigger int depth maximum minimum present  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	513	513	1	replace	
183	[BUG] [BUGGY] [FE] OptionException [CONTEXT] private boolean looksLikeOption(final WriteableCommandLine commandLine, final String trigger) { [BUGGY] [BUGGY] return commandLine.looksLikeOption(trigger); } [CLASS] GroupImpl [METHOD] looksLikeOption [RETURN_TYPE] boolean  WriteableCommandLine commandLine String trigger [VARIABLES] Set childSettings helpSettings helpSettingsCopy newPrefixes prefixes triggers boolean SortedMap newOptionMap optionMap WriteableCommandLine commandLine List anonymous helpLines list newAnonymous options String arg description name previous separator trigger int depth maximum minimum present  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	513	513	1	add	
184	[BUG] [BUGGY] final List arguments) { [FE] OptionException [CONTEXT] public WriteableCommandLineImpl(final Option rootOption, [BUGGY] final List arguments) { [BUGGY] this.prefixes = rootOption.getPrefixes(); this.normalised = arguments; } [CLASS] WriteableCommandLineImpl [METHOD] <init> [RETURN_TYPE] List)  Option rootOption List arguments [VARIABLES] List arguments normalised options Option rootOption Set prefixes boolean Map defaultSwitches defaultValues nameToOption optionToProperties switches values  	projects/Cli21/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	60	60	1	replace	
185	[BUG] [BUGGY] [FE] OptionException [CONTEXT] public WriteableCommandLineImpl(final Option rootOption, [BUGGY] [BUGGY] final List arguments) { this.prefixes = rootOption.getPrefixes(); this.normalised = arguments; } [CLASS] WriteableCommandLineImpl [METHOD] <init> [RETURN_TYPE] List)  Option rootOption List arguments [VARIABLES] List arguments normalised options Option rootOption Set prefixes boolean Map defaultSwitches defaultValues nameToOption optionToProperties switches values  	projects/Cli21/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	60	60	1	add	
186	[BUG] [BUGGY] private final Map optionToProperties = new HashMap(); [FE] OptionException [CONTEXT] [BUGGY] private final Map optionToProperties = new HashMap(); [BUGGY]  [CLASS] WriteableCommandLineImpl  [VARIABLES] 	projects/Cli21/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	41	41	1	replace	
187	[BUG] [BUGGY] [FE] OptionException [CONTEXT] [BUGGY] [BUGGY] private final Map optionToProperties = new HashMap(); [CLASS] WriteableCommandLineImpl  [VARIABLES] 	projects/Cli21/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	41	41	1	add	
188	[BUG] [BUGGY] [FE] OptionException [CONTEXT] private final Map optionToProperties = new HashMap(); [CLASS] WriteableCommandLineImpl  [VARIABLES] 	projects/Cli21/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	43	43	1	replace	
189	[BUG] [BUGGY] [FE] OptionException [CONTEXT] private final Map optionToProperties = new HashMap(); [CLASS] WriteableCommandLineImpl  [VARIABLES] 	projects/Cli21/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	43	43	1	add	
190	[BUG] [BUGGY] [FE] OptionException [CONTEXT] private final List options = new ArrayList(); [CLASS] WriteableCommandLineImpl  [VARIABLES] 	projects/Cli21/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	44	44	1	replace	
191	[BUG] [BUGGY] [FE] OptionException [CONTEXT] private final List options = new ArrayList(); [CLASS] WriteableCommandLineImpl  [VARIABLES] 	projects/Cli21/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	44	44	1	add	
192	[BUG] [BUGGY] [FE] OptionException [CONTEXT] private final List options = new ArrayList(); [CLASS] WriteableCommandLineImpl  [VARIABLES] 	projects/Cli21/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	45	45	1	replace	
193	[BUG] [BUGGY] [FE] OptionException [CONTEXT] private final List options = new ArrayList(); [CLASS] WriteableCommandLineImpl  [VARIABLES] 	projects/Cli21/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	45	45	1	add	
194	[BUG] [BUGGY] [FE] OptionException [CONTEXT] private final Map nameToOption = new HashMap(); [CLASS] WriteableCommandLineImpl  [VARIABLES] 	projects/Cli21/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	46	46	1	replace	
195	[BUG] [BUGGY] [FE] OptionException [CONTEXT] private final Map nameToOption = new HashMap(); [CLASS] WriteableCommandLineImpl  [VARIABLES] 	projects/Cli21/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	46	46	1	add	
196	[BUG] [BUGGY] [FE] OptionException [CONTEXT] private final Map values = new HashMap(); [CLASS] WriteableCommandLineImpl  [VARIABLES] 	projects/Cli21/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	47	47	1	replace	
197	[BUG] [BUGGY] [FE] OptionException [CONTEXT] private final Map values = new HashMap(); [CLASS] WriteableCommandLineImpl  [VARIABLES] 	projects/Cli21/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	47	47	1	add	
198	[BUG] [BUGGY] [FE] OptionException [CONTEXT] private final Map switches = new HashMap(); [CLASS] WriteableCommandLineImpl  [VARIABLES] 	projects/Cli21/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	48	48	1	replace	
199	[BUG] [BUGGY] [FE] OptionException [CONTEXT] private final Map switches = new HashMap(); [CLASS] WriteableCommandLineImpl  [VARIABLES] 	projects/Cli21/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	48	48	1	add	
200	[BUG] [BUGGY] this.prefixes = rootOption.getPrefixes(); [FE] OptionException [CONTEXT] public WriteableCommandLineImpl(final Option rootOption, final List arguments) { [BUGGY] this.prefixes = rootOption.getPrefixes(); [BUGGY] this.normalised = arguments; } [CLASS] WriteableCommandLineImpl [METHOD] <init> [RETURN_TYPE] List)  Option rootOption List arguments [VARIABLES] List arguments normalised options Option rootOption Set prefixes boolean Map defaultSwitches defaultValues nameToOption optionToProperties switches values  	projects/Cli21/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	61	61	1	replace	
201	[BUG] [BUGGY] [FE] OptionException [CONTEXT] public WriteableCommandLineImpl(final Option rootOption, final List arguments) { [BUGGY] [BUGGY] this.prefixes = rootOption.getPrefixes(); this.normalised = arguments; } [CLASS] WriteableCommandLineImpl [METHOD] <init> [RETURN_TYPE] List)  Option rootOption List arguments [VARIABLES] List arguments normalised options Option rootOption Set prefixes boolean Map defaultSwitches defaultValues nameToOption optionToProperties switches values  	projects/Cli21/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	61	61	1	add	
202	[BUG] [BUGGY] this.normalised = arguments; [FE] OptionException [CONTEXT] public WriteableCommandLineImpl(final Option rootOption, final List arguments) { this.prefixes = rootOption.getPrefixes(); [BUGGY] this.normalised = arguments; [BUGGY] } [CLASS] WriteableCommandLineImpl [METHOD] <init> [RETURN_TYPE] List)  Option rootOption List arguments [VARIABLES] List arguments normalised options Option rootOption Set prefixes boolean Map defaultSwitches defaultValues nameToOption optionToProperties switches values  	projects/Cli21/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	62	62	1	replace	
203	[BUG] [BUGGY] [FE] OptionException [CONTEXT] public WriteableCommandLineImpl(final Option rootOption, final List arguments) { this.prefixes = rootOption.getPrefixes(); [BUGGY] [BUGGY] this.normalised = arguments; } [CLASS] WriteableCommandLineImpl [METHOD] <init> [RETURN_TYPE] List)  Option rootOption List arguments [VARIABLES] List arguments normalised options Option rootOption Set prefixes boolean Map defaultSwitches defaultValues nameToOption optionToProperties switches values  	projects/Cli21/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	62	62	1	add	
204	[BUG] [BUGGY] } [FE] OptionException [CONTEXT] public WriteableCommandLineImpl(final Option rootOption, final List arguments) { this.prefixes = rootOption.getPrefixes(); this.normalised = arguments; [BUGGY] } [BUGGY]  [CLASS] WriteableCommandLineImpl [METHOD] <init> [RETURN_TYPE] List)  Option rootOption List arguments [VARIABLES] List arguments normalised options Option rootOption Set prefixes boolean Map defaultSwitches defaultValues nameToOption optionToProperties switches values  	projects/Cli21/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	63	63	1	replace	
205	[BUG] [BUGGY] [FE] OptionException [CONTEXT] public WriteableCommandLineImpl(final Option rootOption, final List arguments) { this.prefixes = rootOption.getPrefixes(); this.normalised = arguments; [BUGGY] [BUGGY] } [CLASS] WriteableCommandLineImpl [METHOD] <init> [RETURN_TYPE] List)  Option rootOption List arguments [VARIABLES] List arguments normalised options Option rootOption Set prefixes boolean Map defaultSwitches defaultValues nameToOption optionToProperties switches values  	projects/Cli21/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	63	63	1	add	
206	[BUG] [BUGGY] options.add(option); [FE] OptionException [CONTEXT] public void addOption(Option option) { [BUGGY] options.add(option); [BUGGY] nameToOption.put(option.getPreferredName(), option); for (Iterator i = option.getTriggers().iterator(); i.hasNext();) { nameToOption.put(i.next(), option); }  Option parent = option.getParent(); while (parent != null && !options.contains(parent)) { options.add(parent); [CLASS] WriteableCommandLineImpl [METHOD] addOption [RETURN_TYPE] void  Option option [VARIABLES] Iterator i List arguments normalised options Option option parent Set prefixes boolean Map defaultSwitches defaultValues nameToOption optionToProperties switches values  	projects/Cli21/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	68	68	1	replace	
207	[BUG] [BUGGY] [FE] OptionException [CONTEXT] public void addOption(Option option) { [BUGGY] [BUGGY] options.add(option); nameToOption.put(option.getPreferredName(), option); for (Iterator i = option.getTriggers().iterator(); i.hasNext();) { nameToOption.put(i.next(), option); }  Option parent = option.getParent(); while (parent != null && !options.contains(parent)) { options.add(parent); [CLASS] WriteableCommandLineImpl [METHOD] addOption [RETURN_TYPE] void  Option option [VARIABLES] Iterator i List arguments normalised options Option option parent Set prefixes boolean Map defaultSwitches defaultValues nameToOption optionToProperties switches values  	projects/Cli21/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	68	68	1	add	
208	[BUG] [BUGGY] nameToOption.put(option.getPreferredName(), option); [FE] OptionException [CONTEXT] public void addOption(Option option) { options.add(option); [BUGGY] nameToOption.put(option.getPreferredName(), option); [BUGGY]  for (Iterator i = option.getTriggers().iterator(); i.hasNext();) { nameToOption.put(i.next(), option); }  Option parent = option.getParent(); while (parent != null && !options.contains(parent)) { options.add(parent); parent = parent.getParent(); [CLASS] WriteableCommandLineImpl [METHOD] addOption [RETURN_TYPE] void  Option option [VARIABLES] Iterator i List arguments normalised options Option option parent Set prefixes boolean Map defaultSwitches defaultValues nameToOption optionToProperties switches values  	projects/Cli21/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	69	69	1	replace	
209	[BUG] [BUGGY] [FE] OptionException [CONTEXT] public void addOption(Option option) { options.add(option); [BUGGY] [BUGGY] nameToOption.put(option.getPreferredName(), option); for (Iterator i = option.getTriggers().iterator(); i.hasNext();) { nameToOption.put(i.next(), option); }  Option parent = option.getParent(); while (parent != null && !options.contains(parent)) { options.add(parent); parent = parent.getParent(); [CLASS] WriteableCommandLineImpl [METHOD] addOption [RETURN_TYPE] void  Option option [VARIABLES] Iterator i List arguments normalised options Option option parent Set prefixes boolean Map defaultSwitches defaultValues nameToOption optionToProperties switches values  	projects/Cli21/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	69	69	1	add	
210	[BUG] [BUGGY] for (Iterator i = option.getTriggers().iterator(); i.hasNext();) { [FE] OptionException [CONTEXT] public void addOption(Option option) { options.add(option); nameToOption.put(option.getPreferredName(), option); [BUGGY] for (Iterator i = option.getTriggers().iterator(); i.hasNext();) { [BUGGY] nameToOption.put(i.next(), option); }  Option parent = option.getParent(); while (parent != null && !options.contains(parent)) { options.add(parent); parent = parent.getParent(); } } [CLASS] WriteableCommandLineImpl [METHOD] addOption [RETURN_TYPE] void  Option option [VARIABLES] Iterator i List arguments normalised options Option option parent Set prefixes boolean Map defaultSwitches defaultValues nameToOption optionToProperties switches values  	projects/Cli21/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	71	71	1	replace	
211	[BUG] [BUGGY] [FE] OptionException [CONTEXT] public void addOption(Option option) { options.add(option); nameToOption.put(option.getPreferredName(), option); [BUGGY] [BUGGY] for (Iterator i = option.getTriggers().iterator(); i.hasNext();) { nameToOption.put(i.next(), option); }  Option parent = option.getParent(); while (parent != null && !options.contains(parent)) { options.add(parent); parent = parent.getParent(); } } [CLASS] WriteableCommandLineImpl [METHOD] addOption [RETURN_TYPE] void  Option option [VARIABLES] Iterator i List arguments normalised options Option option parent Set prefixes boolean Map defaultSwitches defaultValues nameToOption optionToProperties switches values  	projects/Cli21/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	71	71	1	add	
212	[BUG] [BUGGY] nameToOption.put(i.next(), option); [FE] OptionException [CONTEXT] public void addOption(Option option) { options.add(option); nameToOption.put(option.getPreferredName(), option); for (Iterator i = option.getTriggers().iterator(); i.hasNext();) { [BUGGY] nameToOption.put(i.next(), option); [BUGGY] }  Option parent = option.getParent(); while (parent != null && !options.contains(parent)) { options.add(parent); parent = parent.getParent(); } } [CLASS] WriteableCommandLineImpl [METHOD] addOption [RETURN_TYPE] void  Option option [VARIABLES] Iterator i List arguments normalised options Option option parent Set prefixes boolean Map defaultSwitches defaultValues nameToOption optionToProperties switches values  	projects/Cli21/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	72	72	1	replace	
213	[BUG] [BUGGY] [FE] OptionException [CONTEXT] public void addOption(Option option) { options.add(option); nameToOption.put(option.getPreferredName(), option); for (Iterator i = option.getTriggers().iterator(); i.hasNext();) { [BUGGY] [BUGGY] nameToOption.put(i.next(), option); }  Option parent = option.getParent(); while (parent != null && !options.contains(parent)) { options.add(parent); parent = parent.getParent(); } } [CLASS] WriteableCommandLineImpl [METHOD] addOption [RETURN_TYPE] void  Option option [VARIABLES] Iterator i List arguments normalised options Option option parent Set prefixes boolean Map defaultSwitches defaultValues nameToOption optionToProperties switches values  	projects/Cli21/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	72	72	1	add	
214	[BUG] [BUGGY] Option parent = option.getParent(); [FE] OptionException [CONTEXT] public void addOption(Option option) { options.add(option); nameToOption.put(option.getPreferredName(), option); for (Iterator i = option.getTriggers().iterator(); i.hasNext();) { nameToOption.put(i.next(), option); }  [BUGGY] Option parent = option.getParent(); [BUGGY] while (parent != null && !options.contains(parent)) { options.add(parent); parent = parent.getParent(); } } [CLASS] WriteableCommandLineImpl [METHOD] addOption [RETURN_TYPE] void  Option option [VARIABLES] Iterator i List arguments normalised options Option option parent Set prefixes boolean Map defaultSwitches defaultValues nameToOption optionToProperties switches values  	projects/Cli21/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	76	76	1	replace	
215	[BUG] [BUGGY] [FE] OptionException [CONTEXT] public void addOption(Option option) { options.add(option); nameToOption.put(option.getPreferredName(), option); for (Iterator i = option.getTriggers().iterator(); i.hasNext();) { nameToOption.put(i.next(), option); }  [BUGGY] [BUGGY] Option parent = option.getParent(); while (parent != null && !options.contains(parent)) { options.add(parent); parent = parent.getParent(); } } [CLASS] WriteableCommandLineImpl [METHOD] addOption [RETURN_TYPE] void  Option option [VARIABLES] Iterator i List arguments normalised options Option option parent Set prefixes boolean Map defaultSwitches defaultValues nameToOption optionToProperties switches values  	projects/Cli21/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	76	76	1	add	
216	[BUG] [BUGGY] while (parent != null && !options.contains(parent)) { [FE] OptionException [CONTEXT] public void addOption(Option option) { options.add(option); nameToOption.put(option.getPreferredName(), option); for (Iterator i = option.getTriggers().iterator(); i.hasNext();) { nameToOption.put(i.next(), option); }  Option parent = option.getParent(); [BUGGY] while (parent != null && !options.contains(parent)) { [BUGGY] options.add(parent); parent = parent.getParent(); } } [CLASS] WriteableCommandLineImpl [METHOD] addOption [RETURN_TYPE] void  Option option [VARIABLES] Iterator i List arguments normalised options Option option parent Set prefixes boolean Map defaultSwitches defaultValues nameToOption optionToProperties switches values  	projects/Cli21/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	77	77	1	replace	
217	[BUG] [BUGGY] [FE] OptionException [CONTEXT] public void addOption(Option option) { options.add(option); nameToOption.put(option.getPreferredName(), option); for (Iterator i = option.getTriggers().iterator(); i.hasNext();) { nameToOption.put(i.next(), option); }  Option parent = option.getParent(); [BUGGY] [BUGGY] while (parent != null && !options.contains(parent)) { options.add(parent); parent = parent.getParent(); } } [CLASS] WriteableCommandLineImpl [METHOD] addOption [RETURN_TYPE] void  Option option [VARIABLES] Iterator i List arguments normalised options Option option parent Set prefixes boolean Map defaultSwitches defaultValues nameToOption optionToProperties switches values  	projects/Cli21/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	77	77	1	add	
218	[BUG] [BUGGY] options.add(parent); [FE] OptionException [CONTEXT] options.add(option); nameToOption.put(option.getPreferredName(), option); for (Iterator i = option.getTriggers().iterator(); i.hasNext();) { nameToOption.put(i.next(), option); }  Option parent = option.getParent(); while (parent != null && !options.contains(parent)) { [BUGGY] options.add(parent); [BUGGY] parent = parent.getParent(); } } [CLASS] WriteableCommandLineImpl [METHOD] addOption [RETURN_TYPE] void  Option option [VARIABLES] Iterator i List arguments normalised options Option option parent Set prefixes boolean Map defaultSwitches defaultValues nameToOption optionToProperties switches values  	projects/Cli21/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	78	78	1	replace	
219	[BUG] [BUGGY] [FE] OptionException [CONTEXT] options.add(option); nameToOption.put(option.getPreferredName(), option); for (Iterator i = option.getTriggers().iterator(); i.hasNext();) { nameToOption.put(i.next(), option); }  Option parent = option.getParent(); while (parent != null && !options.contains(parent)) { [BUGGY] [BUGGY] options.add(parent); parent = parent.getParent(); } } [CLASS] WriteableCommandLineImpl [METHOD] addOption [RETURN_TYPE] void  Option option [VARIABLES] Iterator i List arguments normalised options Option option parent Set prefixes boolean Map defaultSwitches defaultValues nameToOption optionToProperties switches values  	projects/Cli21/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	78	78	1	add	
220	[BUG] [BUGGY] parent = parent.getParent(); [FE] OptionException [CONTEXT] nameToOption.put(option.getPreferredName(), option); for (Iterator i = option.getTriggers().iterator(); i.hasNext();) { nameToOption.put(i.next(), option); }  Option parent = option.getParent(); while (parent != null && !options.contains(parent)) { options.add(parent); [BUGGY] parent = parent.getParent(); [BUGGY] } } [CLASS] WriteableCommandLineImpl [METHOD] addOption [RETURN_TYPE] void  Option option [VARIABLES] Iterator i List arguments normalised options Option option parent Set prefixes boolean Map defaultSwitches defaultValues nameToOption optionToProperties switches values  	projects/Cli21/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	79	79	1	replace	
221	[BUG] [BUGGY] [FE] OptionException [CONTEXT] nameToOption.put(option.getPreferredName(), option); for (Iterator i = option.getTriggers().iterator(); i.hasNext();) { nameToOption.put(i.next(), option); }  Option parent = option.getParent(); while (parent != null && !options.contains(parent)) { options.add(parent); [BUGGY] [BUGGY] parent = parent.getParent(); } } [CLASS] WriteableCommandLineImpl [METHOD] addOption [RETURN_TYPE] void  Option option [VARIABLES] Iterator i List arguments normalised options Option option parent Set prefixes boolean Map defaultSwitches defaultValues nameToOption optionToProperties switches values  	projects/Cli21/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	79	79	1	add	
222	[BUG] [BUGGY] } [FE] OptionException [CONTEXT] for (Iterator i = option.getTriggers().iterator(); i.hasNext();) { nameToOption.put(i.next(), option); }  Option parent = option.getParent(); while (parent != null && !options.contains(parent)) { options.add(parent); parent = parent.getParent(); } [BUGGY] } [BUGGY]  [CLASS] WriteableCommandLineImpl [METHOD] addOption [RETURN_TYPE] void  Option option [VARIABLES] Iterator i List arguments normalised options Option option parent Set prefixes boolean Map defaultSwitches defaultValues nameToOption optionToProperties switches values  	projects/Cli21/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	81	81	1	replace	
223	[BUG] [BUGGY] [FE] OptionException [CONTEXT] for (Iterator i = option.getTriggers().iterator(); i.hasNext();) { nameToOption.put(i.next(), option); }  Option parent = option.getParent(); while (parent != null && !options.contains(parent)) { options.add(parent); parent = parent.getParent(); } [BUGGY] [BUGGY] } [CLASS] WriteableCommandLineImpl [METHOD] addOption [RETURN_TYPE] void  Option option [VARIABLES] Iterator i List arguments normalised options Option option parent Set prefixes boolean Map defaultSwitches defaultValues nameToOption optionToProperties switches values  	projects/Cli21/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	81	81	1	add	
224	[BUG] [BUGGY] List valueList = (List) values.get(option); [FE] OptionException [CONTEXT] public List getUndefaultedValues(Option option) {  [BUGGY] List valueList = (List) values.get(option); [BUGGY]   if (valueList == null) { valueList = Collections.EMPTY_LIST; } return valueList; } [CLASS] WriteableCommandLineImpl [METHOD] getUndefaultedValues [RETURN_TYPE] List  Option option [VARIABLES] List arguments defaultValues normalised options valueList Option option Set prefixes boolean Map defaultSwitches defaultValues nameToOption optionToProperties switches values  	projects/Cli21/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	152	152	1	replace	
225	[BUG] [BUGGY] [FE] OptionException [CONTEXT] public List getUndefaultedValues(Option option) {  [BUGGY] [BUGGY] List valueList = (List) values.get(option);  if (valueList == null) { valueList = Collections.EMPTY_LIST; } return valueList; } [CLASS] WriteableCommandLineImpl [METHOD] getUndefaultedValues [RETURN_TYPE] List  Option option [VARIABLES] List arguments defaultValues normalised options valueList Option option Set prefixes boolean Map defaultSwitches defaultValues nameToOption optionToProperties switches values  	projects/Cli21/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	152	152	1	add	
226	[BUG] [BUGGY] if (valueList == null) { [FE] OptionException [CONTEXT] public List getUndefaultedValues(Option option) {  List valueList = (List) values.get(option);  [BUGGY] if (valueList == null) { [BUGGY] valueList = Collections.EMPTY_LIST; } return valueList; } [CLASS] WriteableCommandLineImpl [METHOD] getUndefaultedValues [RETURN_TYPE] List  Option option [VARIABLES] List arguments defaultValues normalised options valueList Option option Set prefixes boolean Map defaultSwitches defaultValues nameToOption optionToProperties switches values  	projects/Cli21/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	155	155	1	replace	
227	[BUG] [BUGGY] [FE] OptionException [CONTEXT] public List getUndefaultedValues(Option option) {  List valueList = (List) values.get(option);  [BUGGY] [BUGGY] if (valueList == null) { valueList = Collections.EMPTY_LIST; } return valueList; } [CLASS] WriteableCommandLineImpl [METHOD] getUndefaultedValues [RETURN_TYPE] List  Option option [VARIABLES] List arguments defaultValues normalised options valueList Option option Set prefixes boolean Map defaultSwitches defaultValues nameToOption optionToProperties switches values  	projects/Cli21/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	155	155	1	add	
228	[BUG] [BUGGY] valueList = Collections.EMPTY_LIST; [FE] OptionException [CONTEXT] public List getUndefaultedValues(Option option) {  List valueList = (List) values.get(option);  if (valueList == null) { [BUGGY] valueList = Collections.EMPTY_LIST; [BUGGY] } return valueList; } [CLASS] WriteableCommandLineImpl [METHOD] getUndefaultedValues [RETURN_TYPE] List  Option option [VARIABLES] List arguments defaultValues normalised options valueList Option option Set prefixes boolean Map defaultSwitches defaultValues nameToOption optionToProperties switches values  	projects/Cli21/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	156	156	1	replace	
229	[BUG] [BUGGY] [FE] OptionException [CONTEXT] public List getUndefaultedValues(Option option) {  List valueList = (List) values.get(option);  if (valueList == null) { [BUGGY] [BUGGY] valueList = Collections.EMPTY_LIST; } return valueList; } [CLASS] WriteableCommandLineImpl [METHOD] getUndefaultedValues [RETURN_TYPE] List  Option option [VARIABLES] List arguments defaultValues normalised options valueList Option option Set prefixes boolean Map defaultSwitches defaultValues nameToOption optionToProperties switches values  	projects/Cli21/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	156	156	1	add	
230	[BUG] [BUGGY] return valueList; [FE] OptionException [CONTEXT] public List getUndefaultedValues(Option option) {  List valueList = (List) values.get(option);  if (valueList == null) { valueList = Collections.EMPTY_LIST; } [BUGGY] return valueList; [BUGGY] } [CLASS] WriteableCommandLineImpl [METHOD] getUndefaultedValues [RETURN_TYPE] List  Option option [VARIABLES] List arguments defaultValues normalised options valueList Option option Set prefixes boolean Map defaultSwitches defaultValues nameToOption optionToProperties switches values  	projects/Cli21/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	159	159	1	replace	
231	[BUG] [BUGGY] [FE] OptionException [CONTEXT] public List getUndefaultedValues(Option option) {  List valueList = (List) values.get(option);  if (valueList == null) { valueList = Collections.EMPTY_LIST; } [BUGGY] [BUGGY] return valueList; } [CLASS] WriteableCommandLineImpl [METHOD] getUndefaultedValues [RETURN_TYPE] List  Option option [VARIABLES] List arguments defaultValues normalised options valueList Option option Set prefixes boolean Map defaultSwitches defaultValues nameToOption optionToProperties switches values  	projects/Cli21/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	159	159	1	add	
232	[BUG] [BUGGY] for (final Iterator i = prefixes.iterator(); i.hasNext();) { [FE] OptionException [CONTEXT] public boolean looksLikeOption(final String trigger) {  [BUGGY] for (final Iterator i = prefixes.iterator(); i.hasNext();)   { [BUGGY] { final String prefix = (String) i.next(); if (trigger.startsWith(prefix)) { return true; } } return false; } [CLASS] WriteableCommandLineImpl [METHOD] looksLikeOption [RETURN_TYPE] boolean  String trigger [VARIABLES] Iterator i List arguments defaultValues normalised options valueList Set prefixes String prefix trigger boolean Map defaultSwitches defaultValues nameToOption optionToProperties switches values  	projects/Cli21/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	236	237	1	replace	
233	[BUG] [BUGGY] [FE] OptionException [CONTEXT] public boolean looksLikeOption(final String trigger) {  [BUGGY] [BUGGY] for (final Iterator i = prefixes.iterator(); i.hasNext();)   { { final String prefix = (String) i.next(); if (trigger.startsWith(prefix)) { return true; } } return false; } [CLASS] WriteableCommandLineImpl [METHOD] looksLikeOption [RETURN_TYPE] boolean  String trigger [VARIABLES] Iterator i List arguments defaultValues normalised options valueList Set prefixes String prefix trigger boolean Map defaultSwitches defaultValues nameToOption optionToProperties switches values  	projects/Cli21/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	236	237	1	add	
234	[BUG] [BUGGY] final String prefix = (String) i.next(); [FE] OptionException [CONTEXT] public boolean looksLikeOption(final String trigger) {  for (final Iterator i = prefixes.iterator(); i.hasNext();) { [BUGGY] final String prefix = (String) i.next(); [BUGGY]  if (trigger.startsWith(prefix)) { return true; } } return false; } [CLASS] WriteableCommandLineImpl [METHOD] looksLikeOption [RETURN_TYPE] boolean  String trigger [VARIABLES] Iterator i List arguments defaultValues normalised options valueList Set prefixes String prefix trigger boolean Map defaultSwitches defaultValues nameToOption optionToProperties switches values  	projects/Cli21/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	238	238	1	replace	
235	[BUG] [BUGGY] [FE] OptionException [CONTEXT] public boolean looksLikeOption(final String trigger) {  for (final Iterator i = prefixes.iterator(); i.hasNext();) { [BUGGY] [BUGGY] final String prefix = (String) i.next(); if (trigger.startsWith(prefix)) { return true; } } return false; } [CLASS] WriteableCommandLineImpl [METHOD] looksLikeOption [RETURN_TYPE] boolean  String trigger [VARIABLES] Iterator i List arguments defaultValues normalised options valueList Set prefixes String prefix trigger boolean Map defaultSwitches defaultValues nameToOption optionToProperties switches values  	projects/Cli21/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	238	238	1	add	
236	[BUG] [BUGGY] if (trigger.startsWith(prefix)) { [FE] OptionException [CONTEXT] public boolean looksLikeOption(final String trigger) {  for (final Iterator i = prefixes.iterator(); i.hasNext();) { final String prefix = (String) i.next(); [BUGGY] if (trigger.startsWith(prefix))    { [BUGGY] { return true; } } return false; } [CLASS] WriteableCommandLineImpl [METHOD] looksLikeOption [RETURN_TYPE] boolean  String trigger [VARIABLES] Iterator i List arguments defaultValues normalised options valueList Set prefixes String prefix trigger boolean Map defaultSwitches defaultValues nameToOption optionToProperties switches values  	projects/Cli21/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	240	241	1	replace	
237	[BUG] [BUGGY] [FE] OptionException [CONTEXT] public boolean looksLikeOption(final String trigger) {  for (final Iterator i = prefixes.iterator(); i.hasNext();) { final String prefix = (String) i.next(); [BUGGY] [BUGGY] if (trigger.startsWith(prefix))    { { return true; } } return false; } [CLASS] WriteableCommandLineImpl [METHOD] looksLikeOption [RETURN_TYPE] boolean  String trigger [VARIABLES] Iterator i List arguments defaultValues normalised options valueList Set prefixes String prefix trigger boolean Map defaultSwitches defaultValues nameToOption optionToProperties switches values  	projects/Cli21/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	240	241	1	add	
238	[BUG] [BUGGY] return true; [FE] OptionException [CONTEXT] public boolean looksLikeOption(final String trigger) {  for (final Iterator i = prefixes.iterator(); i.hasNext();) { final String prefix = (String) i.next(); if (trigger.startsWith(prefix)) { [BUGGY] return true; [BUGGY] } } return false; } [CLASS] WriteableCommandLineImpl [METHOD] looksLikeOption [RETURN_TYPE] boolean  String trigger [VARIABLES] Iterator i List arguments defaultValues normalised options valueList Set prefixes String prefix trigger boolean Map defaultSwitches defaultValues nameToOption optionToProperties switches values  	projects/Cli21/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	242	242	1	replace	
239	[BUG] [BUGGY] [FE] OptionException [CONTEXT] public boolean looksLikeOption(final String trigger) {  for (final Iterator i = prefixes.iterator(); i.hasNext();) { final String prefix = (String) i.next(); if (trigger.startsWith(prefix)) { [BUGGY] [BUGGY] return true; } } return false; } [CLASS] WriteableCommandLineImpl [METHOD] looksLikeOption [RETURN_TYPE] boolean  String trigger [VARIABLES] Iterator i List arguments defaultValues normalised options valueList Set prefixes String prefix trigger boolean Map defaultSwitches defaultValues nameToOption optionToProperties switches values  	projects/Cli21/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	242	242	1	add	
240	[BUG] [BUGGY] } [FE] OptionException [CONTEXT]  for (final Iterator i = prefixes.iterator(); i.hasNext();) { final String prefix = (String) i.next(); if (trigger.startsWith(prefix)) { return true; } [BUGGY] } [BUGGY] return false; } [CLASS] WriteableCommandLineImpl [METHOD] looksLikeOption [RETURN_TYPE] boolean  String trigger [VARIABLES] Iterator i List arguments defaultValues normalised options valueList Set prefixes String prefix trigger boolean Map defaultSwitches defaultValues nameToOption optionToProperties switches values  	projects/Cli21/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	244	244	1	replace	
241	[BUG] [BUGGY] [FE] OptionException [CONTEXT]  for (final Iterator i = prefixes.iterator(); i.hasNext();) { final String prefix = (String) i.next(); if (trigger.startsWith(prefix)) { return true; } [BUGGY] [BUGGY] } return false; } [CLASS] WriteableCommandLineImpl [METHOD] looksLikeOption [RETURN_TYPE] boolean  String trigger [VARIABLES] Iterator i List arguments defaultValues normalised options valueList Set prefixes String prefix trigger boolean Map defaultSwitches defaultValues nameToOption optionToProperties switches values  	projects/Cli21/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	244	244	1	add	
242	[BUG] [BUGGY] if (defaults == null) { [FE] OptionException [CONTEXT] public void setDefaultValues(final Option option, final List defaults) { [BUGGY] if (defaults == null) { [BUGGY] defaultValues.remove(option); } else { defaultValues.put(option, defaults); } } [CLASS] WriteableCommandLineImpl [METHOD] setDefaultValues [RETURN_TYPE] void  Option option List defaults [VARIABLES] List arguments defaultValues defaults normalised options valueList Option option Set prefixes boolean Map defaultSwitches defaultValues nameToOption optionToProperties switches values  	projects/Cli21/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	279	279	1	replace	
243	[BUG] [BUGGY] [FE] OptionException [CONTEXT] public void setDefaultValues(final Option option, final List defaults) { [BUGGY] [BUGGY] if (defaults == null) { defaultValues.remove(option); } else { defaultValues.put(option, defaults); } } [CLASS] WriteableCommandLineImpl [METHOD] setDefaultValues [RETURN_TYPE] void  Option option List defaults [VARIABLES] List arguments defaultValues defaults normalised options valueList Option option Set prefixes boolean Map defaultSwitches defaultValues nameToOption optionToProperties switches values  	projects/Cli21/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	279	279	1	add	
244	[BUG] [BUGGY] defaultValues.remove(option); [FE] OptionException [CONTEXT] public void setDefaultValues(final Option option, final List defaults) { if (defaults == null) { [BUGGY] defaultValues.remove(option); [BUGGY] } else { defaultValues.put(option, defaults); } } [CLASS] WriteableCommandLineImpl [METHOD] setDefaultValues [RETURN_TYPE] void  Option option List defaults [VARIABLES] List arguments defaultValues defaults normalised options valueList Option option Set prefixes boolean Map defaultSwitches defaultValues nameToOption optionToProperties switches values  	projects/Cli21/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	280	280	1	replace	
245	[BUG] [BUGGY] [FE] OptionException [CONTEXT] public void setDefaultValues(final Option option, final List defaults) { if (defaults == null) { [BUGGY] [BUGGY] defaultValues.remove(option); } else { defaultValues.put(option, defaults); } } [CLASS] WriteableCommandLineImpl [METHOD] setDefaultValues [RETURN_TYPE] void  Option option List defaults [VARIABLES] List arguments defaultValues defaults normalised options valueList Option option Set prefixes boolean Map defaultSwitches defaultValues nameToOption optionToProperties switches values  	projects/Cli21/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	280	280	1	add	
246	[BUG] [BUGGY] } [FE] OptionException [CONTEXT] public void setDefaultValues(final Option option, final List defaults) { if (defaults == null) { defaultValues.remove(option); } else { defaultValues.put(option, defaults); } [BUGGY] } [BUGGY]  [CLASS] WriteableCommandLineImpl [METHOD] setDefaultValues [RETURN_TYPE] void  Option option List defaults [VARIABLES] List arguments defaultValues defaults normalised options valueList Option option Set prefixes boolean Map defaultSwitches defaultValues nameToOption optionToProperties switches values  	projects/Cli21/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	284	284	1	replace	
247	[BUG] [BUGGY] [FE] OptionException [CONTEXT] public void setDefaultValues(final Option option, final List defaults) { if (defaults == null) { defaultValues.remove(option); } else { defaultValues.put(option, defaults); } [BUGGY] [BUGGY] } [CLASS] WriteableCommandLineImpl [METHOD] setDefaultValues [RETURN_TYPE] void  Option option List defaults [VARIABLES] List arguments defaultValues defaults normalised options valueList Option option Set prefixes boolean Map defaultSwitches defaultValues nameToOption optionToProperties switches values  	projects/Cli21/src/java/org/apache/commons/cli2/commandline/WriteableCommandLineImpl.java	1.0	284	284	1	add	
