bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  final  List  options  =  prefixes.keySet();  [CE]  illegal  start  of  expression  [FE]            OptionException      [CONTEXT]        final  List  newAnonymous  =  new  ArrayList();  final  SortedMap  newOptionMap  =  new  TreeMap(ReverseStringComparator.getInstance());  final  Set  newPrefixes  =  new  HashSet();        [BUGGY]  final  List  options  =  prefixes.keySet();  [BUGGY]      for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {  final  Option  option  =  (Option)  i.next();  option.setParent(this);  if  (option  instanceof  Argument)  {  i.remove();  newAnonymous.add(option);  }  else  {  final  Set  triggers  =  option.getTriggers();  for  (Iterator  j  =  triggers.iterator();  j.hasNext();)  {  [CLASS]  GroupImpl  [METHOD]  <init>  [RETURN_TYPE]  String,int,int,boolean)  List  options  String  name  String  description  final  int  minimum  final  int  maximum  final  boolean  required  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  required  SortedMap  newOptionMap  optionMap  Iterator  i  j  List  anonymous  newAnonymous  options  Option  option  String  description  name  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	92	92	1	replace	final  List  options  =  prefixes.keySet();	  final    Set    options    =    prefixes.keySet();    	non-compiled	[CE]  illegal  start  of  expression	45	None	replace
2	[BUG]  [BUGGY]  newAnonymous.add(newPrefixes,  prefixes);  [CE]  illegal  start  of  expression  [FE]                    OptionException      [CONTEXT]        final  List  newAnonymous  =  new  ArrayList();  final  SortedMap  newOptionMap  =  new  TreeMap(ReverseStringComparator.getInstance());  final  Set  newPrefixes  =  new  HashSet();        [BUGGY]  newAnonymous.add(newPrefixes,  prefixes);  [BUGGY]      final  Option  option  =  (Option)  i.next();  option.setParent(this);  if  (option  instanceof  Argument)  {  i.remove();  newAnonymous.add(option);  }  else  {  final  Set  triggers  =  option.getTriggers();  for  (Iterator  j  =  triggers.iterator();  j.hasNext();)  {  [CLASS]  GroupImpl  [METHOD]  <init>  [RETURN_TYPE]  String,int,int,boolean)  List  options  String  name  String  description  final  int  minimum  final  int  maximum  final  boolean  required  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  required  SortedMap  newOptionMap  optionMap  Iterator  i  j  List  anonymous  newAnonymous  options  Option  option  String  description  name  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	92	92	1	replace	newAnonymous.add(newPrefixes,  prefixes);	  newAnonymous.add(newPrefixes);    	non-compiled	[CE]  illegal  start  of  expression	2	None	replace
3	[BUG]  [BUGGY]  newAnonymous.add(prefixes);  [CE]  illegal  start  of  expression  [FE]                      OptionException      [CONTEXT]        final  List  newAnonymous  =  new  ArrayList();  final  SortedMap  newOptionMap  =  new  TreeMap(ReverseStringComparator.getInstance());  final  Set  newPrefixes  =  new  HashSet();        [BUGGY]  newAnonymous.add(prefixes);  [BUGGY]      final  Option  option  =  (Option)  i.next();  option.setParent(this);  if  (option  instanceof  Argument)  {  i.remove();  newAnonymous.add(option);  }  else  {  final  Set  triggers  =  option.getTriggers();  for  (Iterator  j  =  triggers.iterator();  j.hasNext();)  {  [CLASS]  GroupImpl  [METHOD]  <init>  [RETURN_TYPE]  String,int,int,boolean)  List  options  String  name  String  description  final  int  minimum  final  int  maximum  final  boolean  required  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  required  SortedMap  newOptionMap  optionMap  Iterator  i  j  List  anonymous  newAnonymous  options  Option  option  String  description  name  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	92	92	1	replace	newAnonymous.add(prefixes);	  newAnonymous.add(newPrefixes);    	non-compiled	[CE]  illegal  start  of  expression	2	None	replace
4	[BUG]  [BUGGY]  final  ArrayList  options  =  newAnonymous.values();  [CE]  illegal  start  of  expression  [FE]                      OptionException      [CONTEXT]        final  List  newAnonymous  =  new  ArrayList();  final  SortedMap  newOptionMap  =  new  TreeMap(ReverseStringComparator.getInstance());  final  Set  newPrefixes  =  new  HashSet();        [BUGGY]  final  ArrayList  options  =  newAnonymous.values();  [BUGGY]      for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {  final  Option  option  =  (Option)  i.next();  option.setParent(this);  if  (option  instanceof  Argument)  {  i.remove();  newAnonymous.add(option);  }  else  {  final  Set  triggers  =  option.getTriggers();  for  (Iterator  j  =  triggers.iterator();  j.hasNext();)  {  [CLASS]  GroupImpl  [METHOD]  <init>  [RETURN_TYPE]  String,int,int,boolean)  List  options  String  name  String  description  final  int  minimum  final  int  maximum  final  boolean  required  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  required  SortedMap  newOptionMap  optionMap  Iterator  i  j  List  anonymous  newAnonymous  options  Option  option  String  description  name  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	92	92	1	replace	final  ArrayList  options  =  newAnonymous.values();	  final    Set    options    =    newAnonymous.values();    	non-compiled	[CE]  illegal  start  of  expression	31	None	replace
5	[BUG]  [BUGGY]  final  Set  options  =  new  TreeSet(prefixes);  [CE]  illegal  start  of  expression  [FE]                OptionException      [CONTEXT]        final  List  newAnonymous  =  new  ArrayList();  final  SortedMap  newOptionMap  =  new  TreeMap(ReverseStringComparator.getInstance());  final  Set  newPrefixes  =  new  HashSet();        [BUGGY]  final  Set  options  =  new  TreeSet(prefixes);  [BUGGY]      for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {  final  Option  option  =  (Option)  i.next();  option.setParent(this);  if  (option  instanceof  Argument)  {  i.remove();  newAnonymous.add(option);  }  else  {  final  Set  triggers  =  option.getTriggers();  for  (Iterator  j  =  triggers.iterator();  j.hasNext();)  {  [CLASS]  GroupImpl  [METHOD]  <init>  [RETURN_TYPE]  String,int,int,boolean)  List  options  String  name  String  description  final  int  minimum  final  int  maximum  final  boolean  required  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  required  SortedMap  newOptionMap  optionMap  Iterator  i  j  List  anonymous  newAnonymous  options  Option  option  String  description  name  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	92	92	1	replace	final  Set  options  =  new  TreeSet(prefixes);	  final    Set    options    =    new    TreeSet();    	non-compiled	[CE]  illegal  start  of  expression	27	None	replace
6	[BUG]  [BUGGY]  final  List  options  =  new  TreeSet();  [CE]  illegal  start  of  expression  [FE]                  OptionException      [CONTEXT]        final  List  newAnonymous  =  new  ArrayList();  final  SortedMap  newOptionMap  =  new  TreeMap(ReverseStringComparator.getInstance());  final  Set  newPrefixes  =  new  HashSet();        [BUGGY]  final  List  options  =  new  TreeSet();  [BUGGY]      for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {  final  Option  option  =  (Option)  i.next();  option.setParent(this);  if  (option  instanceof  Argument)  {  i.remove();  newAnonymous.add(option);  }  else  {  final  Set  triggers  =  option.getTriggers();  for  (Iterator  j  =  triggers.iterator();  j.hasNext();)  {  [CLASS]  GroupImpl  [METHOD]  <init>  [RETURN_TYPE]  String,int,int,boolean)  List  options  String  name  String  description  final  int  minimum  final  int  maximum  final  boolean  required  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  required  SortedMap  newOptionMap  optionMap  Iterator  i  j  List  anonymous  newAnonymous  options  Option  option  String  description  name  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	92	92	1	replace	final  List  options  =  new  TreeSet();	  final    Set    options    =    new    TreeSet();    	non-compiled	[CE]  illegal  start  of  expression	27	None	replace
7	[BUG]  [BUGGY]  final  Set  options  =  newSet.keySet();  [CE]  illegal  start  of  expression  [FE]                    OptionException      [CONTEXT]        final  List  newAnonymous  =  new  ArrayList();  final  SortedMap  newOptionMap  =  new  TreeMap(ReverseStringComparator.getInstance());  final  Set  newPrefixes  =  new  HashSet();        [BUGGY]  final  Set  options  =  newSet.keySet();  [BUGGY]      for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {  final  Option  option  =  (Option)  i.next();  option.setParent(this);  if  (option  instanceof  Argument)  {  i.remove();  newAnonymous.add(option);  }  else  {  final  Set  triggers  =  option.getTriggers();  for  (Iterator  j  =  triggers.iterator();  j.hasNext();)  {  [CLASS]  GroupImpl  [METHOD]  <init>  [RETURN_TYPE]  String,int,int,boolean)  List  options  String  name  String  description  final  int  minimum  final  int  maximum  final  boolean  required  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  required  SortedMap  newOptionMap  optionMap  Iterator  i  j  List  anonymous  newAnonymous  options  Option  option  String  description  name  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	92	92	1	replace	final  Set  options  =  newSet.keySet();	  final    Set    options    =    newSet.values();    	non-compiled	[CE]  illegal  start  of  expression	30	None	replace
8	[BUG]  [BUGGY]  final  List  options  =  newSet.values();  [CE]  illegal  start  of  expression  [FE]                      OptionException      [CONTEXT]        final  List  newAnonymous  =  new  ArrayList();  final  SortedMap  newOptionMap  =  new  TreeMap(ReverseStringComparator.getInstance());  final  Set  newPrefixes  =  new  HashSet();        [BUGGY]  final  List  options  =  newSet.values();  [BUGGY]      for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {  final  Option  option  =  (Option)  i.next();  option.setParent(this);  if  (option  instanceof  Argument)  {  i.remove();  newAnonymous.add(option);  }  else  {  final  Set  triggers  =  option.getTriggers();  for  (Iterator  j  =  triggers.iterator();  j.hasNext();)  {  [CLASS]  GroupImpl  [METHOD]  <init>  [RETURN_TYPE]  String,int,int,boolean)  List  options  String  name  String  description  final  int  minimum  final  int  maximum  final  boolean  required  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  required  SortedMap  newOptionMap  optionMap  Iterator  i  j  List  anonymous  newAnonymous  options  Option  option  String  description  name  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	92	92	1	replace	final  List  options  =  newSet.values();	  final    Set    options    =    newSet.values();    	non-compiled	[CE]  illegal  start  of  expression	30	None	replace
9	[BUG]  [BUGGY]  final  ArrayList  options  =  new  ArrayList();  [CE]  illegal  start  of  expression  [FE]              OptionException      [CONTEXT]        final  List  newAnonymous  =  new  ArrayList();  final  SortedMap  newOptionMap  =  new  TreeMap(ReverseStringComparator.getInstance());  final  Set  newPrefixes  =  new  HashSet();        [BUGGY]  final  ArrayList  options  =  new  ArrayList();  [BUGGY]      for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {  final  Option  option  =  (Option)  i.next();  option.setParent(this);  if  (option  instanceof  Argument)  {  i.remove();  newAnonymous.add(option);  }  else  {  final  Set  triggers  =  option.getTriggers();  for  (Iterator  j  =  triggers.iterator();  j.hasNext();)  {  [CLASS]  GroupImpl  [METHOD]  <init>  [RETURN_TYPE]  String,int,int,boolean)  List  options  String  name  String  description  final  int  minimum  final  int  maximum  final  boolean  required  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  required  SortedMap  newOptionMap  optionMap  Iterator  i  j  List  anonymous  newAnonymous  options  Option  option  String  description  name  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	92	92	1	replace	final  ArrayList  options  =  new  ArrayList();	  final    List    options    =    new    ArrayList();    	non-compiled	[CE]  illegal  start  of  expression	26	None	replace
10	[BUG]  [BUGGY]  final  Option  option  =  options.getOption(prefixes,  name);  [CE]  illegal  start  of  expression  [FE]                  OptionException      [CONTEXT]        final  List  newAnonymous  =  new  ArrayList();  final  SortedMap  newOptionMap  =  new  TreeMap(ReverseStringComparator.getInstance());  final  Set  newPrefixes  =  new  HashSet();        [BUGGY]  final  Option  option  =  options.getOption(prefixes,  name);  [BUGGY]      for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {  final  Option  option  =  (Option)  i.next();  option.setParent(this);  if  (option  instanceof  Argument)  {  i.remove();  newAnonymous.add(option);  }  else  {  final  Set  triggers  =  option.getTriggers();  for  (Iterator  j  =  triggers.iterator();  j.hasNext();)  {  [CLASS]  GroupImpl  [METHOD]  <init>  [RETURN_TYPE]  String,int,int,boolean)  List  options  String  name  String  description  final  int  minimum  final  int  maximum  final  boolean  required  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  required  SortedMap  newOptionMap  optionMap  Iterator  i  j  List  anonymous  newAnonymous  options  Option  option  String  description  name  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	92	92	1	replace	final  Option  option  =  options.getOption(prefixes,  name);	  final    Option    option    =    options.getOption(name,    prefixes);    	non-compiled	[CE]  illegal  start  of  expression	47	None	replace
11	[BUG]  [BUGGY]  final  Option  option  =  options.getOption(description,  prefixes);  [CE]  illegal  start  of  expression  [FE]                    OptionException      [CONTEXT]        final  List  newAnonymous  =  new  ArrayList();  final  SortedMap  newOptionMap  =  new  TreeMap(ReverseStringComparator.getInstance());  final  Set  newPrefixes  =  new  HashSet();        [BUGGY]  final  Option  option  =  options.getOption(description,  prefixes);  [BUGGY]      for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {  final  Option  option  =  (Option)  i.next();  option.setParent(this);  if  (option  instanceof  Argument)  {  i.remove();  newAnonymous.add(option);  }  else  {  final  Set  triggers  =  option.getTriggers();  for  (Iterator  j  =  triggers.iterator();  j.hasNext();)  {  [CLASS]  GroupImpl  [METHOD]  <init>  [RETURN_TYPE]  String,int,int,boolean)  List  options  String  name  String  description  final  int  minimum  final  int  maximum  final  boolean  required  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  required  SortedMap  newOptionMap  optionMap  Iterator  i  j  List  anonymous  newAnonymous  options  Option  option  String  description  name  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	92	92	1	replace	final  Option  option  =  options.getOption(description,  prefixes);	  final    Option    option    =    options.getOption(name,    prefixes);    	non-compiled	[CE]  illegal  start  of  expression	47	None	replace
12	[BUG]  [BUGGY]  final  Option  option  =(Option)newOptionMap.get(this,  newPrefixes);  [CE]  illegal  start  of  expression  [FE]                    OptionException      [CONTEXT]        final  List  newAnonymous  =  new  ArrayList();  final  SortedMap  newOptionMap  =  new  TreeMap(ReverseStringComparator.getInstance());  final  Set  newPrefixes  =  new  HashSet();        [BUGGY]  final  Option  option  =(Option)newOptionMap.get(this,  newPrefixes);  [BUGGY]      final  Option  option  =  (Option)  i.next();  option.setParent(this);  if  (option  instanceof  Argument)  {  i.remove();  newAnonymous.add(option);  }  else  {  final  Set  triggers  =  option.getTriggers();  for  (Iterator  j  =  triggers.iterator();  j.hasNext();)  {  [CLASS]  GroupImpl  [METHOD]  <init>  [RETURN_TYPE]  String,int,int,boolean)  List  options  String  name  String  description  final  int  minimum  final  int  maximum  final  boolean  required  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  required  SortedMap  newOptionMap  optionMap  Iterator  i  j  List  anonymous  newAnonymous  options  Option  option  String  description  name  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	92	92	1	replace	final  Option  option  =(Option)newOptionMap.get(this,  newPrefixes);	  final    Option    option    =(Option)newOptionMap.get(this);    	non-compiled	[CE]  illegal  start  of  expression	51	None	replace
13	[BUG]  [BUGGY]  Option  option  =(Option)newOptionMap.get(this);  [CE]  illegal  start  of  expression  [FE]                      OptionException      [CONTEXT]        final  List  newAnonymous  =  new  ArrayList();  final  SortedMap  newOptionMap  =  new  TreeMap(ReverseStringComparator.getInstance());  final  Set  newPrefixes  =  new  HashSet();        [BUGGY]  Option  option  =(Option)newOptionMap.get(this);  [BUGGY]      final  Option  option  =  (Option)  i.next();  option.setParent(this);  if  (option  instanceof  Argument)  {  i.remove();  newAnonymous.add(option);  }  else  {  final  Set  triggers  =  option.getTriggers();  for  (Iterator  j  =  triggers.iterator();  j.hasNext();)  {  [CLASS]  GroupImpl  [METHOD]  <init>  [RETURN_TYPE]  String,int,int,boolean)  List  options  String  name  String  description  final  int  minimum  final  int  maximum  final  boolean  required  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  required  SortedMap  newOptionMap  optionMap  Iterator  i  j  List  anonymous  newAnonymous  options  Option  option  String  description  name  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	92	92	1	replace	Option  option  =(Option)newOptionMap.get(this);	  final    Option    option    =(Option)newOptionMap.get(this);    	non-compiled	[CE]  illegal  start  of  expression	51	None	replace
14	[BUG]  [BUGGY]  final  Option  option  =(Option)this.newOptionMap.get(this);  [CE]  illegal  start  of  expression  [FE]                        OptionException      [CONTEXT]        final  List  newAnonymous  =  new  ArrayList();  final  SortedMap  newOptionMap  =  new  TreeMap(ReverseStringComparator.getInstance());  final  Set  newPrefixes  =  new  HashSet();        [BUGGY]  final  Option  option  =(Option)this.newOptionMap.get(this);  [BUGGY]      final  Option  option  =  (Option)  i.next();  option.setParent(this);  if  (option  instanceof  Argument)  {  i.remove();  newAnonymous.add(option);  }  else  {  final  Set  triggers  =  option.getTriggers();  for  (Iterator  j  =  triggers.iterator();  j.hasNext();)  {  [CLASS]  GroupImpl  [METHOD]  <init>  [RETURN_TYPE]  String,int,int,boolean)  List  options  String  name  String  description  final  int  minimum  final  int  maximum  final  boolean  required  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  required  SortedMap  newOptionMap  optionMap  Iterator  i  j  List  anonymous  newAnonymous  options  Option  option  String  description  name  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	92	92	1	replace	final  Option  option  =(Option)this.newOptionMap.get(this);	  final    Option    option    =(Option)newOptionMap.get(this);    	non-compiled	[CE]  illegal  start  of  expression	51	None	replace
15	[BUG]  [BUGGY]  Option  option  =(Option)newPrefixes.get(0);  [CE]  illegal  start  of  expression  [FE]                        OptionException      [CONTEXT]        final  List  newAnonymous  =  new  ArrayList();  final  SortedMap  newOptionMap  =  new  TreeMap(ReverseStringComparator.getInstance());  final  Set  newPrefixes  =  new  HashSet();        [BUGGY]  Option  option  =(Option)newPrefixes.get(0);  [BUGGY]      final  Option  option  =  (Option)  i.next();  option.setParent(this);  if  (option  instanceof  Argument)  {  i.remove();  newAnonymous.add(option);  }  else  {  final  Set  triggers  =  option.getTriggers();  for  (Iterator  j  =  triggers.iterator();  j.hasNext();)  {  [CLASS]  GroupImpl  [METHOD]  <init>  [RETURN_TYPE]  String,int,int,boolean)  List  options  String  name  String  description  final  int  minimum  final  int  maximum  final  boolean  required  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  required  SortedMap  newOptionMap  optionMap  Iterator  i  j  List  anonymous  newAnonymous  options  Option  option  String  description  name  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	92	92	1	replace	Option  option  =(Option)newPrefixes.get(0);	  final    Option    option    =(Option)newPrefixes.get(0);    	non-compiled	[CE]  illegal  start  of  expression	4	None	replace
16	[BUG]  [BUGGY]  final  Option  option  =(Option)this.newPrefixes.get(0);  [CE]  illegal  start  of  expression  [FE]                          OptionException      [CONTEXT]        final  List  newAnonymous  =  new  ArrayList();  final  SortedMap  newOptionMap  =  new  TreeMap(ReverseStringComparator.getInstance());  final  Set  newPrefixes  =  new  HashSet();        [BUGGY]  final  Option  option  =(Option)this.newPrefixes.get(0);  [BUGGY]      final  Option  option  =  (Option)  i.next();  option.setParent(this);  if  (option  instanceof  Argument)  {  i.remove();  newAnonymous.add(option);  }  else  {  final  Set  triggers  =  option.getTriggers();  for  (Iterator  j  =  triggers.iterator();  j.hasNext();)  {  [CLASS]  GroupImpl  [METHOD]  <init>  [RETURN_TYPE]  String,int,int,boolean)  List  options  String  name  String  description  final  int  minimum  final  int  maximum  final  boolean  required  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  required  SortedMap  newOptionMap  optionMap  Iterator  i  j  List  anonymous  newAnonymous  options  Option  option  String  description  name  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	92	92	1	replace	final  Option  option  =(Option)this.newPrefixes.get(0);	  final    Option    option    =(Option)newPrefixes.get(0);    	non-compiled	[CE]  illegal  start  of  expression	4	None	replace
17	[BUG]  [BUGGY]  final  Option  option  =(Option)this.prefixes.get(0);  [CE]  illegal  start  of  expression  [FE]                            OptionException      [CONTEXT]        final  List  newAnonymous  =  new  ArrayList();  final  SortedMap  newOptionMap  =  new  TreeMap(ReverseStringComparator.getInstance());  final  Set  newPrefixes  =  new  HashSet();        [BUGGY]  final  Option  option  =(Option)this.prefixes.get(0);  [BUGGY]      final  Option  option  =  (Option)  i.next();  option.setParent(this);  if  (option  instanceof  Argument)  {  i.remove();  newAnonymous.add(option);  }  else  {  final  Set  triggers  =  option.getTriggers();  for  (Iterator  j  =  triggers.iterator();  j.hasNext();)  {  [CLASS]  GroupImpl  [METHOD]  <init>  [RETURN_TYPE]  String,int,int,boolean)  List  options  String  name  String  description  final  int  minimum  final  int  maximum  final  boolean  required  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  required  SortedMap  newOptionMap  optionMap  Iterator  i  j  List  anonymous  newAnonymous  options  Option  option  String  description  name  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	92	92	1	replace	final  Option  option  =(Option)this.prefixes.get(0);	  final    Option    option    =(Option)newPrefixes.get(0);    	non-compiled	[CE]  illegal  start  of  expression	4	None	replace
18	[BUG]  [BUGGY]  Option  option  =(Option)newOptionMap.get(prefixes);  [CE]  illegal  start  of  expression  [FE]                    OptionException      [CONTEXT]        final  List  newAnonymous  =  new  ArrayList();  final  SortedMap  newOptionMap  =  new  TreeMap(ReverseStringComparator.getInstance());  final  Set  newPrefixes  =  new  HashSet();        [BUGGY]  Option  option  =(Option)newOptionMap.get(prefixes);  [BUGGY]      final  Option  option  =  (Option)  i.next();  option.setParent(this);  if  (option  instanceof  Argument)  {  i.remove();  newAnonymous.add(option);  }  else  {  final  Set  triggers  =  option.getTriggers();  for  (Iterator  j  =  triggers.iterator();  j.hasNext();)  {  [CLASS]  GroupImpl  [METHOD]  <init>  [RETURN_TYPE]  String,int,int,boolean)  List  options  String  name  String  description  final  int  minimum  final  int  maximum  final  boolean  required  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  required  SortedMap  newOptionMap  optionMap  Iterator  i  j  List  anonymous  newAnonymous  options  Option  option  String  description  name  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	92	92	1	replace	Option  option  =(Option)newOptionMap.get(prefixes);	  Option    option    =(Option)newOptionMap.get(name);    	non-compiled	[CE]  illegal  start  of  expression	54	None	replace
19	[BUG]  [BUGGY]  Option  option  =(Option)newOptionMap.get(name  +  1);  [CE]  illegal  start  of  expression  [FE]                      OptionException      [CONTEXT]        final  List  newAnonymous  =  new  ArrayList();  final  SortedMap  newOptionMap  =  new  TreeMap(ReverseStringComparator.getInstance());  final  Set  newPrefixes  =  new  HashSet();        [BUGGY]  Option  option  =(Option)newOptionMap.get(name  +  1);  [BUGGY]      final  Option  option  =  (Option)  i.next();  option.setParent(this);  if  (option  instanceof  Argument)  {  i.remove();  newAnonymous.add(option);  }  else  {  final  Set  triggers  =  option.getTriggers();  for  (Iterator  j  =  triggers.iterator();  j.hasNext();)  {  [CLASS]  GroupImpl  [METHOD]  <init>  [RETURN_TYPE]  String,int,int,boolean)  List  options  String  name  String  description  final  int  minimum  final  int  maximum  final  boolean  required  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  required  SortedMap  newOptionMap  optionMap  Iterator  i  j  List  anonymous  newAnonymous  options  Option  option  String  description  name  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	92	92	1	replace	Option  option  =(Option)newOptionMap.get(name  +  1);	  Option    option    =(Option)newOptionMap.get(name);    	non-compiled	[CE]  illegal  start  of  expression	54	None	replace
20	[BUG]  [BUGGY]  Option  option  =(Option)newOptionMap.get(description);  [CE]  illegal  start  of  expression  [FE]                        OptionException      [CONTEXT]        final  List  newAnonymous  =  new  ArrayList();  final  SortedMap  newOptionMap  =  new  TreeMap(ReverseStringComparator.getInstance());  final  Set  newPrefixes  =  new  HashSet();        [BUGGY]  Option  option  =(Option)newOptionMap.get(description);  [BUGGY]      final  Option  option  =  (Option)  i.next();  option.setParent(this);  if  (option  instanceof  Argument)  {  i.remove();  newAnonymous.add(option);  }  else  {  final  Set  triggers  =  option.getTriggers();  for  (Iterator  j  =  triggers.iterator();  j.hasNext();)  {  [CLASS]  GroupImpl  [METHOD]  <init>  [RETURN_TYPE]  String,int,int,boolean)  List  options  String  name  String  description  final  int  minimum  final  int  maximum  final  boolean  required  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  required  SortedMap  newOptionMap  optionMap  Iterator  i  j  List  anonymous  newAnonymous  options  Option  option  String  description  name  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	92	92	1	replace	Option  option  =(Option)newOptionMap.get(description);	  Option    option    =(Option)newOptionMap.get(name);    	non-compiled	[CE]  illegal  start  of  expression	54	None	replace
21	[BUG]  [BUGGY]  final  List  options  =  optionMap.getAllOptions();  [CE]  illegal  start  of  expression  [FE]              OptionException      [CONTEXT]        final  List  newAnonymous  =  new  ArrayList();  final  SortedMap  newOptionMap  =  new  TreeMap(ReverseStringComparator.getInstance());  final  Set  newPrefixes  =  new  HashSet();        [BUGGY]  final  List  options  =  optionMap.getAllOptions();  [BUGGY]      for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {  final  Option  option  =  (Option)  i.next();  option.setParent(this);  if  (option  instanceof  Argument)  {  i.remove();  newAnonymous.add(option);  }  else  {  final  Set  triggers  =  option.getTriggers();  for  (Iterator  j  =  triggers.iterator();  j.hasNext();)  {  [CLASS]  GroupImpl  [METHOD]  <init>  [RETURN_TYPE]  String,int,int,boolean)  List  options  String  name  String  description  final  int  minimum  final  int  maximum  final  boolean  required  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  required  SortedMap  newOptionMap  optionMap  Iterator  i  j  List  anonymous  newAnonymous  options  Option  option  String  description  name  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	92	92	1	replace	final  List  options  =  optionMap.getAllOptions();	  final    List    options    =    optionMap.getOptions();    	non-compiled	[CE]  illegal  start  of  expression	32	None	replace
22	[BUG]  [BUGGY]  final  Set  options  =  optionMap.values();  [CE]  illegal  start  of  expression  [FE]                  OptionException      [CONTEXT]        final  List  newAnonymous  =  new  ArrayList();  final  SortedMap  newOptionMap  =  new  TreeMap(ReverseStringComparator.getInstance());  final  Set  newPrefixes  =  new  HashSet();        [BUGGY]  final  Set  options  =  optionMap.values();  [BUGGY]      for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {  final  Option  option  =  (Option)  i.next();  option.setParent(this);  if  (option  instanceof  Argument)  {  i.remove();  newAnonymous.add(option);  }  else  {  final  Set  triggers  =  option.getTriggers();  for  (Iterator  j  =  triggers.iterator();  j.hasNext();)  {  [CLASS]  GroupImpl  [METHOD]  <init>  [RETURN_TYPE]  String,int,int,boolean)  List  options  String  name  String  description  final  int  minimum  final  int  maximum  final  boolean  required  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  required  SortedMap  newOptionMap  optionMap  Iterator  i  j  List  anonymous  newAnonymous  options  Option  option  String  description  name  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	92	92	1	replace	final  Set  options  =  optionMap.values();	  final    Set    options    =    newOptionMap.values();    	non-compiled	[CE]  illegal  start  of  expression	38	None	replace
23	[BUG]  [BUGGY]  final  List  options  =  newOptionMap(ReverseStringComparator.getInstance(),  newPrefixes,  required);  [CE]  illegal  start  of  expression  [FE]              OptionException      [CONTEXT]        final  List  newAnonymous  =  new  ArrayList();  final  SortedMap  newOptionMap  =  new  TreeMap(ReverseStringComparator.getInstance());  final  Set  newPrefixes  =  new  HashSet();        [BUGGY]  final  List  options  =  newOptionMap(ReverseStringComparator.getInstance(),  newPrefixes,  required);  [BUGGY]      for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {  final  Option  option  =  (Option)  i.next();  option.setParent(this);  if  (option  instanceof  Argument)  {  i.remove();  newAnonymous.add(option);  }  else  {  final  Set  triggers  =  option.getTriggers();  for  (Iterator  j  =  triggers.iterator();  j.hasNext();)  {  [CLASS]  GroupImpl  [METHOD]  <init>  [RETURN_TYPE]  String,int,int,boolean)  List  options  String  name  String  description  final  int  minimum  final  int  maximum  final  boolean  required  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  required  SortedMap  newOptionMap  optionMap  Iterator  i  j  List  anonymous  newAnonymous  options  Option  option  String  description  name  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	92	92	1	replace	final  List  options  =  newOptionMap(ReverseStringComparator.getInstance(),  newPrefixes,  required);	  final    List    options    =    newOptionMap(ReverseStringComparator.getInstance(),    newPrefixes);    	non-compiled	[CE]  illegal  start  of  expression	40	None	replace
24	[BUG]  [BUGGY]  final  List  options  =  newOptionMap(ReverseStringComparator.getInstance(),  prefixes);  [CE]  illegal  start  of  expression  [FE]                OptionException      [CONTEXT]        final  List  newAnonymous  =  new  ArrayList();  final  SortedMap  newOptionMap  =  new  TreeMap(ReverseStringComparator.getInstance());  final  Set  newPrefixes  =  new  HashSet();        [BUGGY]  final  List  options  =  newOptionMap(ReverseStringComparator.getInstance(),  prefixes);  [BUGGY]      for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {  final  Option  option  =  (Option)  i.next();  option.setParent(this);  if  (option  instanceof  Argument)  {  i.remove();  newAnonymous.add(option);  }  else  {  final  Set  triggers  =  option.getTriggers();  for  (Iterator  j  =  triggers.iterator();  j.hasNext();)  {  [CLASS]  GroupImpl  [METHOD]  <init>  [RETURN_TYPE]  String,int,int,boolean)  List  options  String  name  String  description  final  int  minimum  final  int  maximum  final  boolean  required  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  required  SortedMap  newOptionMap  optionMap  Iterator  i  j  List  anonymous  newAnonymous  options  Option  option  String  description  name  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	92	92	1	replace	final  List  options  =  newOptionMap(ReverseStringComparator.getInstance(),  prefixes);	  final    List    options    =    newOptionMap(ReverseStringComparator.getInstance(),    newPrefixes);    	non-compiled	[CE]  illegal  start  of  expression	40	None	replace
25	[BUG]  [BUGGY]  final  Set  options  =  newOptionMap(ReverseStringComparator.getInstance(),  newPrefixes);  [CE]  illegal  start  of  expression  [FE]                  OptionException      [CONTEXT]        final  List  newAnonymous  =  new  ArrayList();  final  SortedMap  newOptionMap  =  new  TreeMap(ReverseStringComparator.getInstance());  final  Set  newPrefixes  =  new  HashSet();        [BUGGY]  final  Set  options  =  newOptionMap(ReverseStringComparator.getInstance(),  newPrefixes);  [BUGGY]      for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {  final  Option  option  =  (Option)  i.next();  option.setParent(this);  if  (option  instanceof  Argument)  {  i.remove();  newAnonymous.add(option);  }  else  {  final  Set  triggers  =  option.getTriggers();  for  (Iterator  j  =  triggers.iterator();  j.hasNext();)  {  [CLASS]  GroupImpl  [METHOD]  <init>  [RETURN_TYPE]  String,int,int,boolean)  List  options  String  name  String  description  final  int  minimum  final  int  maximum  final  boolean  required  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  required  SortedMap  newOptionMap  optionMap  Iterator  i  j  List  anonymous  newAnonymous  options  Option  option  String  description  name  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	92	92	1	replace	final  Set  options  =  newOptionMap(ReverseStringComparator.getInstance(),  newPrefixes);	  final    List    options    =    newOptionMap(ReverseStringComparator.getInstance(),    newPrefixes);    	non-compiled	[CE]  illegal  start  of  expression	40	None	replace
26	[BUG]  [BUGGY]  final  List  options  =  newOptionMap(ReverseStringComparator.getInstance(),  newPrefixes,  prefixes);  [CE]  illegal  start  of  expression  [FE]                    OptionException      [CONTEXT]        final  List  newAnonymous  =  new  ArrayList();  final  SortedMap  newOptionMap  =  new  TreeMap(ReverseStringComparator.getInstance());  final  Set  newPrefixes  =  new  HashSet();        [BUGGY]  final  List  options  =  newOptionMap(ReverseStringComparator.getInstance(),  newPrefixes,  prefixes);  [BUGGY]      for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {  final  Option  option  =  (Option)  i.next();  option.setParent(this);  if  (option  instanceof  Argument)  {  i.remove();  newAnonymous.add(option);  }  else  {  final  Set  triggers  =  option.getTriggers();  for  (Iterator  j  =  triggers.iterator();  j.hasNext();)  {  [CLASS]  GroupImpl  [METHOD]  <init>  [RETURN_TYPE]  String,int,int,boolean)  List  options  String  name  String  description  final  int  minimum  final  int  maximum  final  boolean  required  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  required  SortedMap  newOptionMap  optionMap  Iterator  i  j  List  anonymous  newAnonymous  options  Option  option  String  description  name  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	92	92	1	replace	final  List  options  =  newOptionMap(ReverseStringComparator.getInstance(),  newPrefixes,  prefixes);	  final    List    options    =    newOptionMap(ReverseStringComparator.getInstance(),    newPrefixes);    	non-compiled	[CE]  illegal  start  of  expression	40	None	replace
27	[BUG]  [BUGGY]  For(final  Iterator  i  =  newPrefixes.iterator();  i.hasNext();)  {  [CE]  illegal  start  of  expression  [FE]            OptionException      [CONTEXT]        final  List  newAnonymous  =  new  ArrayList();  final  SortedMap  newOptionMap  =  new  TreeMap(ReverseStringComparator.getInstance());  final  Set  newPrefixes  =  new  HashSet();        [BUGGY]  For(final  Iterator  i  =  newPrefixes.iterator();  i.hasNext();)  {  [BUGGY]      final  Option  option  =  (Option)  i.next();  option.setParent(this);  if  (option  instanceof  Argument)  {  i.remove();  newAnonymous.add(option);  }  else  {  final  Set  triggers  =  option.getTriggers();  for  (Iterator  j  =  triggers.iterator();  j.hasNext();)  {  [CLASS]  GroupImpl  [METHOD]  <init>  [RETURN_TYPE]  String,int,int,boolean)  List  options  String  name  String  description  final  int  minimum  final  int  maximum  final  boolean  required  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  required  SortedMap  newOptionMap  optionMap  Iterator  i  j  List  anonymous  newAnonymous  options  Option  option  String  description  name  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	92	92	1	replace	For(final  Iterator  i  =  newPrefixes.iterator();  i.hasNext();)  {	  For(final    Iterator    i    =    prefixes.iterator();    i.hasNext();)    {    	non-compiled	[CE]  illegal  start  of  expression	59	None	replace
28	[BUG]  [BUGGY]  For(final  Iterator  i  =  this.prefixes.iterator();  i.hasNext();)  {  [CE]  illegal  start  of  expression  [FE]              OptionException      [CONTEXT]        final  List  newAnonymous  =  new  ArrayList();  final  SortedMap  newOptionMap  =  new  TreeMap(ReverseStringComparator.getInstance());  final  Set  newPrefixes  =  new  HashSet();        [BUGGY]  For(final  Iterator  i  =  this.prefixes.iterator();  i.hasNext();)  {  [BUGGY]      final  Option  option  =  (Option)  i.next();  option.setParent(this);  if  (option  instanceof  Argument)  {  i.remove();  newAnonymous.add(option);  }  else  {  final  Set  triggers  =  option.getTriggers();  for  (Iterator  j  =  triggers.iterator();  j.hasNext();)  {  [CLASS]  GroupImpl  [METHOD]  <init>  [RETURN_TYPE]  String,int,int,boolean)  List  options  String  name  String  description  final  int  minimum  final  int  maximum  final  boolean  required  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  required  SortedMap  newOptionMap  optionMap  Iterator  i  j  List  anonymous  newAnonymous  options  Option  option  String  description  name  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	92	92	1	replace	For(final  Iterator  i  =  this.prefixes.iterator();  i.hasNext();)  {	  For(final    Iterator    i    =    prefixes.iterator();    i.hasNext();)    {    	non-compiled	[CE]  illegal  start  of  expression	59	None	replace
29	[BUG]  [BUGGY]  For(Iterator  i  =  newPrefixes.iterator();  i.hasNext();)  {  [CE]  illegal  start  of  expression  [FE]                OptionException      [CONTEXT]        final  List  newAnonymous  =  new  ArrayList();  final  SortedMap  newOptionMap  =  new  TreeMap(ReverseStringComparator.getInstance());  final  Set  newPrefixes  =  new  HashSet();        [BUGGY]  For(Iterator  i  =  newPrefixes.iterator();  i.hasNext();)  {  [BUGGY]      final  Option  option  =  (Option)  i.next();  option.setParent(this);  if  (option  instanceof  Argument)  {  i.remove();  newAnonymous.add(option);  }  else  {  final  Set  triggers  =  option.getTriggers();  for  (Iterator  j  =  triggers.iterator();  j.hasNext();)  {  [CLASS]  GroupImpl  [METHOD]  <init>  [RETURN_TYPE]  String,int,int,boolean)  List  options  String  name  String  description  final  int  minimum  final  int  maximum  final  boolean  required  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  required  SortedMap  newOptionMap  optionMap  Iterator  i  j  List  anonymous  newAnonymous  options  Option  option  String  description  name  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	92	92	1	replace	For(Iterator  i  =  newPrefixes.iterator();  i.hasNext();)  {	  For(final    Iterator    i    =    prefixes.iterator();    i.hasNext();)    {    	non-compiled	[CE]  illegal  start  of  expression	59	None	replace
30	[BUG]  [BUGGY]  newAnonymous.addAll(prefixes,  newPrefixes);  [CE]  illegal  start  of  expression  [FE]                      OptionException      [CONTEXT]        final  List  newAnonymous  =  new  ArrayList();  final  SortedMap  newOptionMap  =  new  TreeMap(ReverseStringComparator.getInstance());  final  Set  newPrefixes  =  new  HashSet();        [BUGGY]  newAnonymous.addAll(prefixes,  newPrefixes);  [BUGGY]      final  Option  option  =  (Option)  i.next();  option.setParent(this);  if  (option  instanceof  Argument)  {  i.remove();  newAnonymous.add(option);  }  else  {  final  Set  triggers  =  option.getTriggers();  for  (Iterator  j  =  triggers.iterator();  j.hasNext();)  {  [CLASS]  GroupImpl  [METHOD]  <init>  [RETURN_TYPE]  String,int,int,boolean)  List  options  String  name  String  description  final  int  minimum  final  int  maximum  final  boolean  required  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  required  SortedMap  newOptionMap  optionMap  Iterator  i  j  List  anonymous  newAnonymous  options  Option  option  String  description  name  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	92	92	1	replace	newAnonymous.addAll(prefixes,  newPrefixes);	  newAnonymous.addAll(prefixes);    	non-compiled	[CE]  illegal  start  of  expression	3	None	replace
31	[BUG]  [BUGGY]  newAnonymous.addAll(required);  [CE]  illegal  start  of  expression  [FE]                        OptionException      [CONTEXT]        final  List  newAnonymous  =  new  ArrayList();  final  SortedMap  newOptionMap  =  new  TreeMap(ReverseStringComparator.getInstance());  final  Set  newPrefixes  =  new  HashSet();        [BUGGY]  newAnonymous.addAll(required);  [BUGGY]      final  Option  option  =  (Option)  i.next();  option.setParent(this);  if  (option  instanceof  Argument)  {  i.remove();  newAnonymous.add(option);  }  else  {  final  Set  triggers  =  option.getTriggers();  for  (Iterator  j  =  triggers.iterator();  j.hasNext();)  {  [CLASS]  GroupImpl  [METHOD]  <init>  [RETURN_TYPE]  String,int,int,boolean)  List  options  String  name  String  description  final  int  minimum  final  int  maximum  final  boolean  required  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  required  SortedMap  newOptionMap  optionMap  Iterator  i  j  List  anonymous  newAnonymous  options  Option  option  String  description  name  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	92	92	1	replace	newAnonymous.addAll(required);	  newAnonymous.addAll(prefixes);    	non-compiled	[CE]  illegal  start  of  expression	3	None	replace
32	[BUG]  [BUGGY]  final  List  options  =  optionMap.values();  [CE]  illegal  start  of  expression  [FE]                    OptionException      [CONTEXT]        final  List  newAnonymous  =  new  ArrayList();  final  SortedMap  newOptionMap  =  new  TreeMap(ReverseStringComparator.getInstance());  final  Set  newPrefixes  =  new  HashSet();        [BUGGY]  final  List  options  =  optionMap.values();  [BUGGY]      for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {  final  Option  option  =  (Option)  i.next();  option.setParent(this);  if  (option  instanceof  Argument)  {  i.remove();  newAnonymous.add(option);  }  else  {  final  Set  triggers  =  option.getTriggers();  for  (Iterator  j  =  triggers.iterator();  j.hasNext();)  {  [CLASS]  GroupImpl  [METHOD]  <init>  [RETURN_TYPE]  String,int,int,boolean)  List  options  String  name  String  description  final  int  minimum  final  int  maximum  final  boolean  required  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  required  SortedMap  newOptionMap  optionMap  Iterator  i  j  List  anonymous  newAnonymous  options  Option  option  String  description  name  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	92	92	1	replace	final  List  options  =  optionMap.values();	  final    List    options    =    newOptionMap.values();    	non-compiled	[CE]  illegal  start  of  expression	48	None	replace
33	[BUG]  [BUGGY]  Option  option  =  options.getOption(name);  [CE]  illegal  start  of  expression  [FE]                  OptionException      [CONTEXT]        final  List  newAnonymous  =  new  ArrayList();  final  SortedMap  newOptionMap  =  new  TreeMap(ReverseStringComparator.getInstance());  final  Set  newPrefixes  =  new  HashSet();        [BUGGY]  Option  option  =  options.getOption(name);  [BUGGY]      for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {  final  Option  option  =  (Option)  i.next();  option.setParent(this);  if  (option  instanceof  Argument)  {  i.remove();  newAnonymous.add(option);  }  else  {  final  Set  triggers  =  option.getTriggers();  for  (Iterator  j  =  triggers.iterator();  j.hasNext();)  {  [CLASS]  GroupImpl  [METHOD]  <init>  [RETURN_TYPE]  String,int,int,boolean)  List  options  String  name  String  description  final  int  minimum  final  int  maximum  final  boolean  required  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  required  SortedMap  newOptionMap  optionMap  Iterator  i  j  List  anonymous  newAnonymous  options  Option  option  String  description  name  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	92	92	1	replace	Option  option  =  options.getOption(name);	  final    Option    option    =    options.getOption(description);    	non-compiled	[CE]  illegal  start  of  expression	18	None	replace
34	[BUG]  [BUGGY]  final  Option  option  =  options.getOption(name,  description,  minimum);  [CE]  illegal  start  of  expression  [FE]                    OptionException      [CONTEXT]        final  List  newAnonymous  =  new  ArrayList();  final  SortedMap  newOptionMap  =  new  TreeMap(ReverseStringComparator.getInstance());  final  Set  newPrefixes  =  new  HashSet();        [BUGGY]  final  Option  option  =  options.getOption(name,  description,  minimum);  [BUGGY]      for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {  final  Option  option  =  (Option)  i.next();  option.setParent(this);  if  (option  instanceof  Argument)  {  i.remove();  newAnonymous.add(option);  }  else  {  final  Set  triggers  =  option.getTriggers();  for  (Iterator  j  =  triggers.iterator();  j.hasNext();)  {  [CLASS]  GroupImpl  [METHOD]  <init>  [RETURN_TYPE]  String,int,int,boolean)  List  options  String  name  String  description  final  int  minimum  final  int  maximum  final  boolean  required  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  required  SortedMap  newOptionMap  optionMap  Iterator  i  j  List  anonymous  newAnonymous  options  Option  option  String  description  name  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	92	92	1	replace	final  Option  option  =  options.getOption(name,  description,  minimum);	  final    Option    option    =    options.getOption(name,    description);    	non-compiled	[CE]  illegal  start  of  expression	19	None	replace
35	[BUG]  [BUGGY]  final  Option  option  =  options.getOption(name,  description,  newPrefixes);  [CE]  illegal  start  of  expression  [FE]                      OptionException      [CONTEXT]        final  List  newAnonymous  =  new  ArrayList();  final  SortedMap  newOptionMap  =  new  TreeMap(ReverseStringComparator.getInstance());  final  Set  newPrefixes  =  new  HashSet();        [BUGGY]  final  Option  option  =  options.getOption(name,  description,  newPrefixes);  [BUGGY]      for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {  final  Option  option  =  (Option)  i.next();  option.setParent(this);  if  (option  instanceof  Argument)  {  i.remove();  newAnonymous.add(option);  }  else  {  final  Set  triggers  =  option.getTriggers();  for  (Iterator  j  =  triggers.iterator();  j.hasNext();)  {  [CLASS]  GroupImpl  [METHOD]  <init>  [RETURN_TYPE]  String,int,int,boolean)  List  options  String  name  String  description  final  int  minimum  final  int  maximum  final  boolean  required  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  required  SortedMap  newOptionMap  optionMap  Iterator  i  j  List  anonymous  newAnonymous  options  Option  option  String  description  name  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	92	92	1	replace	final  Option  option  =  options.getOption(name,  description,  newPrefixes);	  final    Option    option    =    options.getOption(name,    description);    	non-compiled	[CE]  illegal  start  of  expression	19	None	replace
36	[BUG]  [BUGGY]  final  Option  option  =  options.getOption(name,  description,  required);  [CE]  illegal  start  of  expression  [FE]                        OptionException      [CONTEXT]        final  List  newAnonymous  =  new  ArrayList();  final  SortedMap  newOptionMap  =  new  TreeMap(ReverseStringComparator.getInstance());  final  Set  newPrefixes  =  new  HashSet();        [BUGGY]  final  Option  option  =  options.getOption(name,  description,  required);  [BUGGY]      for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {  final  Option  option  =  (Option)  i.next();  option.setParent(this);  if  (option  instanceof  Argument)  {  i.remove();  newAnonymous.add(option);  }  else  {  final  Set  triggers  =  option.getTriggers();  for  (Iterator  j  =  triggers.iterator();  j.hasNext();)  {  [CLASS]  GroupImpl  [METHOD]  <init>  [RETURN_TYPE]  String,int,int,boolean)  List  options  String  name  String  description  final  int  minimum  final  int  maximum  final  boolean  required  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  required  SortedMap  newOptionMap  optionMap  Iterator  i  j  List  anonymous  newAnonymous  options  Option  option  String  description  name  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	92	92	1	replace	final  Option  option  =  options.getOption(name,  description,  required);	  final    Option    option    =    options.getOption(name,    description);    	non-compiled	[CE]  illegal  start  of  expression	19	None	replace
37	[BUG]  [BUGGY]  final  Option  option  =  options.getOption(name,  description,  maximum);  [CE]  illegal  start  of  expression  [FE]                          OptionException      [CONTEXT]        final  List  newAnonymous  =  new  ArrayList();  final  SortedMap  newOptionMap  =  new  TreeMap(ReverseStringComparator.getInstance());  final  Set  newPrefixes  =  new  HashSet();        [BUGGY]  final  Option  option  =  options.getOption(name,  description,  maximum);  [BUGGY]      for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {  final  Option  option  =  (Option)  i.next();  option.setParent(this);  if  (option  instanceof  Argument)  {  i.remove();  newAnonymous.add(option);  }  else  {  final  Set  triggers  =  option.getTriggers();  for  (Iterator  j  =  triggers.iterator();  j.hasNext();)  {  [CLASS]  GroupImpl  [METHOD]  <init>  [RETURN_TYPE]  String,int,int,boolean)  List  options  String  name  String  description  final  int  minimum  final  int  maximum  final  boolean  required  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  required  SortedMap  newOptionMap  optionMap  Iterator  i  j  List  anonymous  newAnonymous  options  Option  option  String  description  name  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	92	92	1	replace	final  Option  option  =  options.getOption(name,  description,  maximum);	  final    Option    option    =    options.getOption(name,    description);    	non-compiled	[CE]  illegal  start  of  expression	19	None	replace
38	[BUG]  [BUGGY]  final  List  options  =  optionMap.keySet();  [CE]  illegal  start  of  expression  [FE]                OptionException      [CONTEXT]        final  List  newAnonymous  =  new  ArrayList();  final  SortedMap  newOptionMap  =  new  TreeMap(ReverseStringComparator.getInstance());  final  Set  newPrefixes  =  new  HashSet();        [BUGGY]  final  List  options  =  optionMap.keySet();  [BUGGY]      for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {  final  Option  option  =  (Option)  i.next();  option.setParent(this);  if  (option  instanceof  Argument)  {  i.remove();  newAnonymous.add(option);  }  else  {  final  Set  triggers  =  option.getTriggers();  for  (Iterator  j  =  triggers.iterator();  j.hasNext();)  {  [CLASS]  GroupImpl  [METHOD]  <init>  [RETURN_TYPE]  String,int,int,boolean)  List  options  String  name  String  description  final  int  minimum  final  int  maximum  final  boolean  required  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  required  SortedMap  newOptionMap  optionMap  Iterator  i  j  List  anonymous  newAnonymous  options  Option  option  String  description  name  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	92	92	1	replace	final  List  options  =  optionMap.keySet();	  final    Set    options    =    optionMap.keySet();    	non-compiled	[CE]  illegal  start  of  expression	37	None	replace
39	[BUG]  [BUGGY]  for(final  Iterator  i  =  this.allPrefixes.iterator();  i.hasNext();)  {  [CE]  illegal  start  of  expression  [FE]                  OptionException      [CONTEXT]        final  List  newAnonymous  =  new  ArrayList();  final  SortedMap  newOptionMap  =  new  TreeMap(ReverseStringComparator.getInstance());  final  Set  newPrefixes  =  new  HashSet();        [BUGGY]  for(final  Iterator  i  =  this.allPrefixes.iterator();  i.hasNext();)  {  [BUGGY]      final  Option  option  =  (Option)  i.next();  option.setParent(this);  if  (option  instanceof  Argument)  {  i.remove();  newAnonymous.add(option);  }  else  {  final  Set  triggers  =  option.getTriggers();  for  (Iterator  j  =  triggers.iterator();  j.hasNext();)  {  [CLASS]  GroupImpl  [METHOD]  <init>  [RETURN_TYPE]  String,int,int,boolean)  List  options  String  name  String  description  final  int  minimum  final  int  maximum  final  boolean  required  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  required  SortedMap  newOptionMap  optionMap  Iterator  i  j  List  anonymous  newAnonymous  options  Option  option  String  description  name  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	92	92	1	replace	for(final  Iterator  i  =  this.allPrefixes.iterator();  i.hasNext();)  {	  for(final    Iterator    i    =    allPrefixes.iterator();    i.hasNext();)    {    	non-compiled	[CE]  illegal  start  of  expression	29	None	replace
40	[BUG]  [BUGGY]  final  Set  options  =  newOptionMap.list();  [CE]  illegal  start  of  expression  [FE]                  OptionException      [CONTEXT]        final  List  newAnonymous  =  new  ArrayList();  final  SortedMap  newOptionMap  =  new  TreeMap(ReverseStringComparator.getInstance());  final  Set  newPrefixes  =  new  HashSet();        [BUGGY]  final  Set  options  =  newOptionMap.list();  [BUGGY]      for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {  final  Option  option  =  (Option)  i.next();  option.setParent(this);  if  (option  instanceof  Argument)  {  i.remove();  newAnonymous.add(option);  }  else  {  final  Set  triggers  =  option.getTriggers();  for  (Iterator  j  =  triggers.iterator();  j.hasNext();)  {  [CLASS]  GroupImpl  [METHOD]  <init>  [RETURN_TYPE]  String,int,int,boolean)  List  options  String  name  String  description  final  int  minimum  final  int  maximum  final  boolean  required  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  required  SortedMap  newOptionMap  optionMap  Iterator  i  j  List  anonymous  newAnonymous  options  Option  option  String  description  name  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	92	92	1	replace	final  Set  options  =  newOptionMap.list();	  final    List    options    =    newOptionMap.list();    	non-compiled	[CE]  illegal  start  of  expression	46	None	replace
41	[BUG]  [BUGGY]  final  Option  option  =  this.options.getOption(this,  prefixes);  [CE]  illegal  start  of  expression  [FE]                      OptionException      [CONTEXT]        final  List  newAnonymous  =  new  ArrayList();  final  SortedMap  newOptionMap  =  new  TreeMap(ReverseStringComparator.getInstance());  final  Set  newPrefixes  =  new  HashSet();        [BUGGY]  final  Option  option  =  this.options.getOption(this,  prefixes);  [BUGGY]      for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {  final  Option  option  =  (Option)  i.next();  option.setParent(this);  if  (option  instanceof  Argument)  {  i.remove();  newAnonymous.add(option);  }  else  {  final  Set  triggers  =  option.getTriggers();  for  (Iterator  j  =  triggers.iterator();  j.hasNext();)  {  [CLASS]  GroupImpl  [METHOD]  <init>  [RETURN_TYPE]  String,int,int,boolean)  List  options  String  name  String  description  final  int  minimum  final  int  maximum  final  boolean  required  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  required  SortedMap  newOptionMap  optionMap  Iterator  i  j  List  anonymous  newAnonymous  options  Option  option  String  description  name  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	92	92	1	replace	final  Option  option  =  this.options.getOption(this,  prefixes);	  final    Option    option    =    options.getOption(this,    prefixes);    	non-compiled	[CE]  illegal  start  of  expression	8	None	replace
42	[BUG]  [BUGGY]  final  Option  option  =  newOptionMap.getOption(this,  prefixes);  [CE]  illegal  start  of  expression  [FE]                        OptionException      [CONTEXT]        final  List  newAnonymous  =  new  ArrayList();  final  SortedMap  newOptionMap  =  new  TreeMap(ReverseStringComparator.getInstance());  final  Set  newPrefixes  =  new  HashSet();        [BUGGY]  final  Option  option  =  newOptionMap.getOption(this,  prefixes);  [BUGGY]      for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {  final  Option  option  =  (Option)  i.next();  option.setParent(this);  if  (option  instanceof  Argument)  {  i.remove();  newAnonymous.add(option);  }  else  {  final  Set  triggers  =  option.getTriggers();  for  (Iterator  j  =  triggers.iterator();  j.hasNext();)  {  [CLASS]  GroupImpl  [METHOD]  <init>  [RETURN_TYPE]  String,int,int,boolean)  List  options  String  name  String  description  final  int  minimum  final  int  maximum  final  boolean  required  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  required  SortedMap  newOptionMap  optionMap  Iterator  i  j  List  anonymous  newAnonymous  options  Option  option  String  description  name  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	92	92	1	replace	final  Option  option  =  newOptionMap.getOption(this,  prefixes);	  final    Option    option    =    options.getOption(this,    prefixes);    	non-compiled	[CE]  illegal  start  of  expression	8	None	replace
43	[BUG]  [BUGGY]  Option  option  =  options.getOption(this,  newPrefixes);  [CE]  illegal  start  of  expression  [FE]                          OptionException      [CONTEXT]        final  List  newAnonymous  =  new  ArrayList();  final  SortedMap  newOptionMap  =  new  TreeMap(ReverseStringComparator.getInstance());  final  Set  newPrefixes  =  new  HashSet();        [BUGGY]  Option  option  =  options.getOption(this,  newPrefixes);  [BUGGY]      for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {  final  Option  option  =  (Option)  i.next();  option.setParent(this);  if  (option  instanceof  Argument)  {  i.remove();  newAnonymous.add(option);  }  else  {  final  Set  triggers  =  option.getTriggers();  for  (Iterator  j  =  triggers.iterator();  j.hasNext();)  {  [CLASS]  GroupImpl  [METHOD]  <init>  [RETURN_TYPE]  String,int,int,boolean)  List  options  String  name  String  description  final  int  minimum  final  int  maximum  final  boolean  required  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  required  SortedMap  newOptionMap  optionMap  Iterator  i  j  List  anonymous  newAnonymous  options  Option  option  String  description  name  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	92	92	1	replace	Option  option  =  options.getOption(this,  newPrefixes);	  final    Option    option    =    options.getOption(this,    prefixes);    	non-compiled	[CE]  illegal  start  of  expression	8	None	replace
44	[BUG]  [BUGGY]  final  Set  options  =  newOptionMap.getAllOptions();  [CE]  illegal  start  of  expression  [FE]                  OptionException      [CONTEXT]        final  List  newAnonymous  =  new  ArrayList();  final  SortedMap  newOptionMap  =  new  TreeMap(ReverseStringComparator.getInstance());  final  Set  newPrefixes  =  new  HashSet();        [BUGGY]  final  Set  options  =  newOptionMap.getAllOptions();  [BUGGY]      for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {  final  Option  option  =  (Option)  i.next();  option.setParent(this);  if  (option  instanceof  Argument)  {  i.remove();  newAnonymous.add(option);  }  else  {  final  Set  triggers  =  option.getTriggers();  for  (Iterator  j  =  triggers.iterator();  j.hasNext();)  {  [CLASS]  GroupImpl  [METHOD]  <init>  [RETURN_TYPE]  String,int,int,boolean)  List  options  String  name  String  description  final  int  minimum  final  int  maximum  final  boolean  required  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  required  SortedMap  newOptionMap  optionMap  Iterator  i  j  List  anonymous  newAnonymous  options  Option  option  String  description  name  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	92	92	1	replace	final  Set  options  =  newOptionMap.getAllOptions();	  final    List    options    =    newOptionMap.getAllOptions();    	non-compiled	[CE]  illegal  start  of  expression	34	None	replace
45	[BUG]  [BUGGY]  final  Set  options  =  optionMap.getAllOptions();  [CE]  illegal  start  of  expression  [FE]                    OptionException      [CONTEXT]        final  List  newAnonymous  =  new  ArrayList();  final  SortedMap  newOptionMap  =  new  TreeMap(ReverseStringComparator.getInstance());  final  Set  newPrefixes  =  new  HashSet();        [BUGGY]  final  Set  options  =  optionMap.getAllOptions();  [BUGGY]      for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {  final  Option  option  =  (Option)  i.next();  option.setParent(this);  if  (option  instanceof  Argument)  {  i.remove();  newAnonymous.add(option);  }  else  {  final  Set  triggers  =  option.getTriggers();  for  (Iterator  j  =  triggers.iterator();  j.hasNext();)  {  [CLASS]  GroupImpl  [METHOD]  <init>  [RETURN_TYPE]  String,int,int,boolean)  List  options  String  name  String  description  final  int  minimum  final  int  maximum  final  boolean  required  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  required  SortedMap  newOptionMap  optionMap  Iterator  i  j  List  anonymous  newAnonymous  options  Option  option  String  description  name  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	92	92	1	replace	final  Set  options  =  optionMap.getAllOptions();	  final    List    options    =    newOptionMap.getAllOptions();    	non-compiled	[CE]  illegal  start  of  expression	34	None	replace
46	[BUG]  [BUGGY]  for(final  Iterator  i  =  this.newOptionMap.iterator();  i.hasNext();)  {  [CE]  illegal  start  of  expression  [FE]            OptionException      [CONTEXT]        final  List  newAnonymous  =  new  ArrayList();  final  SortedMap  newOptionMap  =  new  TreeMap(ReverseStringComparator.getInstance());  final  Set  newPrefixes  =  new  HashSet();        [BUGGY]  for(final  Iterator  i  =  this.newOptionMap.iterator();  i.hasNext();)  {  [BUGGY]      final  Option  option  =  (Option)  i.next();  option.setParent(this);  if  (option  instanceof  Argument)  {  i.remove();  newAnonymous.add(option);  }  else  {  final  Set  triggers  =  option.getTriggers();  for  (Iterator  j  =  triggers.iterator();  j.hasNext();)  {  [CLASS]  GroupImpl  [METHOD]  <init>  [RETURN_TYPE]  String,int,int,boolean)  List  options  String  name  String  description  final  int  minimum  final  int  maximum  final  boolean  required  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  required  SortedMap  newOptionMap  optionMap  Iterator  i  j  List  anonymous  newAnonymous  options  Option  option  String  description  name  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	92	92	1	replace	for(final  Iterator  i  =  this.newOptionMap.iterator();  i.hasNext();)  {	  for(final    Iterator    i    =    newOptionMap.iterator();    i.hasNext();)    {    	non-compiled	[CE]  illegal  start  of  expression	44	None	replace
47	[BUG]  [BUGGY]  final  SortedMap  options  =  newOptionMap(ReverseStringComparator.getInstance(),  newPrefixes,  required);  [CE]  illegal  start  of  expression  [FE]            OptionException      [CONTEXT]        final  List  newAnonymous  =  new  ArrayList();  final  SortedMap  newOptionMap  =  new  TreeMap(ReverseStringComparator.getInstance());  final  Set  newPrefixes  =  new  HashSet();        [BUGGY]  final  SortedMap  options  =  newOptionMap(ReverseStringComparator.getInstance(),  newPrefixes,  required);  [BUGGY]      for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {  final  Option  option  =  (Option)  i.next();  option.setParent(this);  if  (option  instanceof  Argument)  {  i.remove();  newAnonymous.add(option);  }  else  {  final  Set  triggers  =  option.getTriggers();  for  (Iterator  j  =  triggers.iterator();  j.hasNext();)  {  [CLASS]  GroupImpl  [METHOD]  <init>  [RETURN_TYPE]  String,int,int,boolean)  List  options  String  name  String  description  final  int  minimum  final  int  maximum  final  boolean  required  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  required  SortedMap  newOptionMap  optionMap  Iterator  i  j  List  anonymous  newAnonymous  options  Option  option  String  description  name  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	92	92	1	replace	final  SortedMap  options  =  newOptionMap(ReverseStringComparator.getInstance(),  newPrefixes,  required);	  final    SortedMap    options    =    newOptionMap(ReverseStringComparator.getInstance(),    newPrefixes);    	non-compiled	[CE]  illegal  start  of  expression	5	None	replace
48	[BUG]  [BUGGY]  final  SortedMap  options  =  newOptionMap(ReverseStringComparator.getInstance(),  newPrefixes,  prefixes);  [CE]  illegal  start  of  expression  [FE]              OptionException      [CONTEXT]        final  List  newAnonymous  =  new  ArrayList();  final  SortedMap  newOptionMap  =  new  TreeMap(ReverseStringComparator.getInstance());  final  Set  newPrefixes  =  new  HashSet();        [BUGGY]  final  SortedMap  options  =  newOptionMap(ReverseStringComparator.getInstance(),  newPrefixes,  prefixes);  [BUGGY]      for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {  final  Option  option  =  (Option)  i.next();  option.setParent(this);  if  (option  instanceof  Argument)  {  i.remove();  newAnonymous.add(option);  }  else  {  final  Set  triggers  =  option.getTriggers();  for  (Iterator  j  =  triggers.iterator();  j.hasNext();)  {  [CLASS]  GroupImpl  [METHOD]  <init>  [RETURN_TYPE]  String,int,int,boolean)  List  options  String  name  String  description  final  int  minimum  final  int  maximum  final  boolean  required  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  required  SortedMap  newOptionMap  optionMap  Iterator  i  j  List  anonymous  newAnonymous  options  Option  option  String  description  name  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	92	92	1	replace	final  SortedMap  options  =  newOptionMap(ReverseStringComparator.getInstance(),  newPrefixes,  prefixes);	  final    SortedMap    options    =    newOptionMap(ReverseStringComparator.getInstance(),    newPrefixes);    	non-compiled	[CE]  illegal  start  of  expression	5	None	replace
49	[BUG]  [BUGGY]  final  SortedMap  options  =  newOptionMap(ReverseStringComparator.getInstance(),  prefixes);  [CE]  illegal  start  of  expression  [FE]                OptionException      [CONTEXT]        final  List  newAnonymous  =  new  ArrayList();  final  SortedMap  newOptionMap  =  new  TreeMap(ReverseStringComparator.getInstance());  final  Set  newPrefixes  =  new  HashSet();        [BUGGY]  final  SortedMap  options  =  newOptionMap(ReverseStringComparator.getInstance(),  prefixes);  [BUGGY]      for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {  final  Option  option  =  (Option)  i.next();  option.setParent(this);  if  (option  instanceof  Argument)  {  i.remove();  newAnonymous.add(option);  }  else  {  final  Set  triggers  =  option.getTriggers();  for  (Iterator  j  =  triggers.iterator();  j.hasNext();)  {  [CLASS]  GroupImpl  [METHOD]  <init>  [RETURN_TYPE]  String,int,int,boolean)  List  options  String  name  String  description  final  int  minimum  final  int  maximum  final  boolean  required  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  required  SortedMap  newOptionMap  optionMap  Iterator  i  j  List  anonymous  newAnonymous  options  Option  option  String  description  name  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	92	92	1	replace	final  SortedMap  options  =  newOptionMap(ReverseStringComparator.getInstance(),  prefixes);	  final    SortedMap    options    =    newOptionMap(ReverseStringComparator.getInstance(),    newPrefixes);    	non-compiled	[CE]  illegal  start  of  expression	5	None	replace
50	[BUG]  [BUGGY]  final  SortedMap  options  =  newOptionMap(ReverseStringComparator.getInstance(),  newPrefixes,  this);  [CE]  illegal  start  of  expression  [FE]                  OptionException      [CONTEXT]        final  List  newAnonymous  =  new  ArrayList();  final  SortedMap  newOptionMap  =  new  TreeMap(ReverseStringComparator.getInstance());  final  Set  newPrefixes  =  new  HashSet();        [BUGGY]  final  SortedMap  options  =  newOptionMap(ReverseStringComparator.getInstance(),  newPrefixes,  this);  [BUGGY]      for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {  final  Option  option  =  (Option)  i.next();  option.setParent(this);  if  (option  instanceof  Argument)  {  i.remove();  newAnonymous.add(option);  }  else  {  final  Set  triggers  =  option.getTriggers();  for  (Iterator  j  =  triggers.iterator();  j.hasNext();)  {  [CLASS]  GroupImpl  [METHOD]  <init>  [RETURN_TYPE]  String,int,int,boolean)  List  options  String  name  String  description  final  int  minimum  final  int  maximum  final  boolean  required  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  required  SortedMap  newOptionMap  optionMap  Iterator  i  j  List  anonymous  newAnonymous  options  Option  option  String  description  name  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	92	92	1	replace	final  SortedMap  options  =  newOptionMap(ReverseStringComparator.getInstance(),  newPrefixes,  this);	  final    SortedMap    options    =    newOptionMap(ReverseStringComparator.getInstance(),    newPrefixes);    	non-compiled	[CE]  illegal  start  of  expression	5	None	replace
51	[BUG]  [BUGGY]  final  Set  options  =  newPrefixes  ==  null?  newPrefixes.keySet()  :  Collections.EMPTY_SET;  [CE]  illegal  start  of  expression  [FE]            OptionException      [CONTEXT]        final  List  newAnonymous  =  new  ArrayList();  final  SortedMap  newOptionMap  =  new  TreeMap(ReverseStringComparator.getInstance());  final  Set  newPrefixes  =  new  HashSet();        [BUGGY]  final  Set  options  =  newPrefixes  ==  null?  newPrefixes.keySet()  :  Collections.EMPTY_SET;  [BUGGY]      for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {  final  Option  option  =  (Option)  i.next();  option.setParent(this);  if  (option  instanceof  Argument)  {  i.remove();  newAnonymous.add(option);  }  else  {  final  Set  triggers  =  option.getTriggers();  for  (Iterator  j  =  triggers.iterator();  j.hasNext();)  {  [CLASS]  GroupImpl  [METHOD]  <init>  [RETURN_TYPE]  String,int,int,boolean)  List  options  String  name  String  description  final  int  minimum  final  int  maximum  final  boolean  required  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  required  SortedMap  newOptionMap  optionMap  Iterator  i  j  List  anonymous  newAnonymous  options  Option  option  String  description  name  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	92	92	1	replace	final  Set  options  =  newPrefixes  ==  null?  newPrefixes.keySet()  :  Collections.EMPTY_SET;	  final    Set    options    =    newPrefixes!=    null?    newPrefixes.keySet()    :    Collections.EMPTY_SET;    	non-compiled	[CE]  illegal  start  of  expression	22	None	replace
52	[BUG]  [BUGGY]  final  Option  option  =  options.getOption(this,  name,  description);  [CE]  illegal  start  of  expression  [FE]                        OptionException      [CONTEXT]        final  List  newAnonymous  =  new  ArrayList();  final  SortedMap  newOptionMap  =  new  TreeMap(ReverseStringComparator.getInstance());  final  Set  newPrefixes  =  new  HashSet();        [BUGGY]  final  Option  option  =  options.getOption(this,  name,  description);  [BUGGY]      for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {  final  Option  option  =  (Option)  i.next();  option.setParent(this);  if  (option  instanceof  Argument)  {  i.remove();  newAnonymous.add(option);  }  else  {  final  Set  triggers  =  option.getTriggers();  for  (Iterator  j  =  triggers.iterator();  j.hasNext();)  {  [CLASS]  GroupImpl  [METHOD]  <init>  [RETURN_TYPE]  String,int,int,boolean)  List  options  String  name  String  description  final  int  minimum  final  int  maximum  final  boolean  required  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  required  SortedMap  newOptionMap  optionMap  Iterator  i  j  List  anonymous  newAnonymous  options  Option  option  String  description  name  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	92	92	1	replace	final  Option  option  =  options.getOption(this,  name,  description);	  final    Option    option    =    options.getOption(this,    name);    	non-compiled	[CE]  illegal  start  of  expression	9	None	replace
53	[BUG]  [BUGGY]  final  Option  option  =  options.getOption(this,  name,  newPrefixes);  [CE]  illegal  start  of  expression  [FE]                          OptionException      [CONTEXT]        final  List  newAnonymous  =  new  ArrayList();  final  SortedMap  newOptionMap  =  new  TreeMap(ReverseStringComparator.getInstance());  final  Set  newPrefixes  =  new  HashSet();        [BUGGY]  final  Option  option  =  options.getOption(this,  name,  newPrefixes);  [BUGGY]      for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {  final  Option  option  =  (Option)  i.next();  option.setParent(this);  if  (option  instanceof  Argument)  {  i.remove();  newAnonymous.add(option);  }  else  {  final  Set  triggers  =  option.getTriggers();  for  (Iterator  j  =  triggers.iterator();  j.hasNext();)  {  [CLASS]  GroupImpl  [METHOD]  <init>  [RETURN_TYPE]  String,int,int,boolean)  List  options  String  name  String  description  final  int  minimum  final  int  maximum  final  boolean  required  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  required  SortedMap  newOptionMap  optionMap  Iterator  i  j  List  anonymous  newAnonymous  options  Option  option  String  description  name  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	92	92	1	replace	final  Option  option  =  options.getOption(this,  name,  newPrefixes);	  final    Option    option    =    options.getOption(this,    name);    	non-compiled	[CE]  illegal  start  of  expression	9	None	replace
54	[BUG]  [BUGGY]  final  Option  option  =  options.getOption(name,  this);  [CE]  illegal  start  of  expression  [FE]                            OptionException      [CONTEXT]        final  List  newAnonymous  =  new  ArrayList();  final  SortedMap  newOptionMap  =  new  TreeMap(ReverseStringComparator.getInstance());  final  Set  newPrefixes  =  new  HashSet();        [BUGGY]  final  Option  option  =  options.getOption(name,  this);  [BUGGY]      for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {  final  Option  option  =  (Option)  i.next();  option.setParent(this);  if  (option  instanceof  Argument)  {  i.remove();  newAnonymous.add(option);  }  else  {  final  Set  triggers  =  option.getTriggers();  for  (Iterator  j  =  triggers.iterator();  j.hasNext();)  {  [CLASS]  GroupImpl  [METHOD]  <init>  [RETURN_TYPE]  String,int,int,boolean)  List  options  String  name  String  description  final  int  minimum  final  int  maximum  final  boolean  required  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  required  SortedMap  newOptionMap  optionMap  Iterator  i  j  List  anonymous  newAnonymous  options  Option  option  String  description  name  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	92	92	1	replace	final  Option  option  =  options.getOption(name,  this);	  final    Option    option    =    options.getOption(this,    name);    	non-compiled	[CE]  illegal  start  of  expression	9	None	replace
55	[BUG]  [BUGGY]  final  Set  <  Option>  options  =  newPrefixes.values();  [CE]  illegal  start  of  expression  [FE]                  OptionException      [CONTEXT]        final  List  newAnonymous  =  new  ArrayList();  final  SortedMap  newOptionMap  =  new  TreeMap(ReverseStringComparator.getInstance());  final  Set  newPrefixes  =  new  HashSet();        [BUGGY]  final  Set  <  Option>  options  =  newPrefixes.values();  [BUGGY]      for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {  final  Option  option  =  (Option)  i.next();  option.setParent(this);  if  (option  instanceof  Argument)  {  i.remove();  newAnonymous.add(option);  }  else  {  final  Set  triggers  =  option.getTriggers();  for  (Iterator  j  =  triggers.iterator();  j.hasNext();)  {  [CLASS]  GroupImpl  [METHOD]  <init>  [RETURN_TYPE]  String,int,int,boolean)  List  options  String  name  String  description  final  int  minimum  final  int  maximum  final  boolean  required  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  required  SortedMap  newOptionMap  optionMap  Iterator  i  j  List  anonymous  newAnonymous  options  Option  option  String  description  name  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	92	92	1	replace	final  Set  <  Option>  options  =  newPrefixes.values();	  final    List    options    =    newPrefixes.values();    	non-compiled	[CE]  illegal  start  of  expression	14	None	replace
56	[BUG]  [BUGGY]  final  SortedMap  options  =  newOptionMap(ReverseStringComparator.getDefault(),  newPrefixes);  [CE]  illegal  start  of  expression  [FE]              OptionException      [CONTEXT]        final  List  newAnonymous  =  new  ArrayList();  final  SortedMap  newOptionMap  =  new  TreeMap(ReverseStringComparator.getInstance());  final  Set  newPrefixes  =  new  HashSet();        [BUGGY]  final  SortedMap  options  =  newOptionMap(ReverseStringComparator.getDefault(),  newPrefixes);  [BUGGY]      for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {  final  Option  option  =  (Option)  i.next();  option.setParent(this);  if  (option  instanceof  Argument)  {  i.remove();  newAnonymous.add(option);  }  else  {  final  Set  triggers  =  option.getTriggers();  for  (Iterator  j  =  triggers.iterator();  j.hasNext();)  {  [CLASS]  GroupImpl  [METHOD]  <init>  [RETURN_TYPE]  String,int,int,boolean)  List  options  String  name  String  description  final  int  minimum  final  int  maximum  final  boolean  required  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  required  SortedMap  newOptionMap  optionMap  Iterator  i  j  List  anonymous  newAnonymous  options  Option  option  String  description  name  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	92	92	1	replace	final  SortedMap  options  =  newOptionMap(ReverseStringComparator.getDefault(),  newPrefixes);	  final    SortedMap    options    =    newOptionMap(ReverseStringComparator.getDefault());    	non-compiled	[CE]  illegal  start  of  expression	6	None	replace
57	[BUG]  [BUGGY]  final  SortedMap  options  =  newOptionMap(ReverseStringComparator.getPrefixes());  [CE]  illegal  start  of  expression  [FE]                OptionException      [CONTEXT]        final  List  newAnonymous  =  new  ArrayList();  final  SortedMap  newOptionMap  =  new  TreeMap(ReverseStringComparator.getInstance());  final  Set  newPrefixes  =  new  HashSet();        [BUGGY]  final  SortedMap  options  =  newOptionMap(ReverseStringComparator.getPrefixes());  [BUGGY]      for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {  final  Option  option  =  (Option)  i.next();  option.setParent(this);  if  (option  instanceof  Argument)  {  i.remove();  newAnonymous.add(option);  }  else  {  final  Set  triggers  =  option.getTriggers();  for  (Iterator  j  =  triggers.iterator();  j.hasNext();)  {  [CLASS]  GroupImpl  [METHOD]  <init>  [RETURN_TYPE]  String,int,int,boolean)  List  options  String  name  String  description  final  int  minimum  final  int  maximum  final  boolean  required  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  required  SortedMap  newOptionMap  optionMap  Iterator  i  j  List  anonymous  newAnonymous  options  Option  option  String  description  name  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	92	92	1	replace	final  SortedMap  options  =  newOptionMap(ReverseStringComparator.getPrefixes());	  final    SortedMap    options    =    newOptionMap(ReverseStringComparator.getDefault());    	non-compiled	[CE]  illegal  start  of  expression	6	None	replace
58	[BUG]  [BUGGY]  final  ArrayList  options  =  newAnonymous.keySet();  [CE]  illegal  start  of  expression  [FE]                OptionException      [CONTEXT]        final  List  newAnonymous  =  new  ArrayList();  final  SortedMap  newOptionMap  =  new  TreeMap(ReverseStringComparator.getInstance());  final  Set  newPrefixes  =  new  HashSet();        [BUGGY]  final  ArrayList  options  =  newAnonymous.keySet();  [BUGGY]      for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {  final  Option  option  =  (Option)  i.next();  option.setParent(this);  if  (option  instanceof  Argument)  {  i.remove();  newAnonymous.add(option);  }  else  {  final  Set  triggers  =  option.getTriggers();  for  (Iterator  j  =  triggers.iterator();  j.hasNext();)  {  [CLASS]  GroupImpl  [METHOD]  <init>  [RETURN_TYPE]  String,int,int,boolean)  List  options  String  name  String  description  final  int  minimum  final  int  maximum  final  boolean  required  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  required  SortedMap  newOptionMap  optionMap  Iterator  i  j  List  anonymous  newAnonymous  options  Option  option  String  description  name  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	92	92	1	replace	final  ArrayList  options  =  newAnonymous.keySet();	  final    Set    options    =    newAnonymous.keySet();    	non-compiled	[CE]  illegal  start  of  expression	16	None	replace
59	[BUG]  [BUGGY]  final  ArrayList  options  =  newOptionMap(ReverseStringComparator.getInstance());  [CE]  illegal  start  of  expression  [FE]                OptionException      [CONTEXT]        final  List  newAnonymous  =  new  ArrayList();  final  SortedMap  newOptionMap  =  new  TreeMap(ReverseStringComparator.getInstance());  final  Set  newPrefixes  =  new  HashSet();        [BUGGY]  final  ArrayList  options  =  newOptionMap(ReverseStringComparator.getInstance());  [BUGGY]      for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {  final  Option  option  =  (Option)  i.next();  option.setParent(this);  if  (option  instanceof  Argument)  {  i.remove();  newAnonymous.add(option);  }  else  {  final  Set  triggers  =  option.getTriggers();  for  (Iterator  j  =  triggers.iterator();  j.hasNext();)  {  [CLASS]  GroupImpl  [METHOD]  <init>  [RETURN_TYPE]  String,int,int,boolean)  List  options  String  name  String  description  final  int  minimum  final  int  maximum  final  boolean  required  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  required  SortedMap  newOptionMap  optionMap  Iterator  i  j  List  anonymous  newAnonymous  options  Option  option  String  description  name  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	92	92	1	replace	final  ArrayList  options  =  newOptionMap(ReverseStringComparator.getInstance());	  final    Set    options    =    newOptionMap(ReverseStringComparator.getInstance());    	non-compiled	[CE]  illegal  start  of  expression	41	None	replace
60	[BUG]  [BUGGY]  final  Option  option  =  options.getOption(this,  description,  newPrefixes);  [CE]  illegal  start  of  expression  [FE]                    OptionException      [CONTEXT]        final  List  newAnonymous  =  new  ArrayList();  final  SortedMap  newOptionMap  =  new  TreeMap(ReverseStringComparator.getInstance());  final  Set  newPrefixes  =  new  HashSet();        [BUGGY]  final  Option  option  =  options.getOption(this,  description,  newPrefixes);  [BUGGY]      for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {  final  Option  option  =  (Option)  i.next();  option.setParent(this);  if  (option  instanceof  Argument)  {  i.remove();  newAnonymous.add(option);  }  else  {  final  Set  triggers  =  option.getTriggers();  for  (Iterator  j  =  triggers.iterator();  j.hasNext();)  {  [CLASS]  GroupImpl  [METHOD]  <init>  [RETURN_TYPE]  String,int,int,boolean)  List  options  String  name  String  description  final  int  minimum  final  int  maximum  final  boolean  required  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  required  SortedMap  newOptionMap  optionMap  Iterator  i  j  List  anonymous  newAnonymous  options  Option  option  String  description  name  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	92	92	1	replace	final  Option  option  =  options.getOption(this,  description,  newPrefixes);	  final    Option    option    =    options.getOption(this,    description);    	non-compiled	[CE]  illegal  start  of  expression	55	None	replace
61	[BUG]  [BUGGY]  final  Option  option  =  this.options.getOption(this,  description);  [CE]  illegal  start  of  expression  [FE]                      OptionException      [CONTEXT]        final  List  newAnonymous  =  new  ArrayList();  final  SortedMap  newOptionMap  =  new  TreeMap(ReverseStringComparator.getInstance());  final  Set  newPrefixes  =  new  HashSet();        [BUGGY]  final  Option  option  =  this.options.getOption(this,  description);  [BUGGY]      for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {  final  Option  option  =  (Option)  i.next();  option.setParent(this);  if  (option  instanceof  Argument)  {  i.remove();  newAnonymous.add(option);  }  else  {  final  Set  triggers  =  option.getTriggers();  for  (Iterator  j  =  triggers.iterator();  j.hasNext();)  {  [CLASS]  GroupImpl  [METHOD]  <init>  [RETURN_TYPE]  String,int,int,boolean)  List  options  String  name  String  description  final  int  minimum  final  int  maximum  final  boolean  required  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  required  SortedMap  newOptionMap  optionMap  Iterator  i  j  List  anonymous  newAnonymous  options  Option  option  String  description  name  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	92	92	1	replace	final  Option  option  =  this.options.getOption(this,  description);	  final    Option    option    =    options.getOption(this,    description);    	non-compiled	[CE]  illegal  start  of  expression	55	None	replace
62	[BUG]  [BUGGY]  final  ArrayList  options  =  newOptionMap.getOptions();  [CE]  illegal  start  of  expression  [FE]                OptionException      [CONTEXT]        final  List  newAnonymous  =  new  ArrayList();  final  SortedMap  newOptionMap  =  new  TreeMap(ReverseStringComparator.getInstance());  final  Set  newPrefixes  =  new  HashSet();        [BUGGY]  final  ArrayList  options  =  newOptionMap.getOptions();  [BUGGY]      for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {  final  Option  option  =  (Option)  i.next();  option.setParent(this);  if  (option  instanceof  Argument)  {  i.remove();  newAnonymous.add(option);  }  else  {  final  Set  triggers  =  option.getTriggers();  for  (Iterator  j  =  triggers.iterator();  j.hasNext();)  {  [CLASS]  GroupImpl  [METHOD]  <init>  [RETURN_TYPE]  String,int,int,boolean)  List  options  String  name  String  description  final  int  minimum  final  int  maximum  final  boolean  required  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  required  SortedMap  newOptionMap  optionMap  Iterator  i  j  List  anonymous  newAnonymous  options  Option  option  String  description  name  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	92	92	1	replace	final  ArrayList  options  =  newOptionMap.getOptions();	  final    Set    options    =    newOptionMap.getOptions();    	non-compiled	[CE]  illegal  start  of  expression	33	None	replace
63	[BUG]  [BUGGY]  final  Set  options  =  new  HashSet(newPrefixes);  [CE]  illegal  start  of  expression  [FE]            OptionException      [CONTEXT]        final  List  newAnonymous  =  new  ArrayList();  final  SortedMap  newOptionMap  =  new  TreeMap(ReverseStringComparator.getInstance());  final  Set  newPrefixes  =  new  HashSet();        [BUGGY]  final  Set  options  =  new  HashSet(newPrefixes);  [BUGGY]      for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {  final  Option  option  =  (Option)  i.next();  option.setParent(this);  if  (option  instanceof  Argument)  {  i.remove();  newAnonymous.add(option);  }  else  {  final  Set  triggers  =  option.getTriggers();  for  (Iterator  j  =  triggers.iterator();  j.hasNext();)  {  [CLASS]  GroupImpl  [METHOD]  <init>  [RETURN_TYPE]  String,int,int,boolean)  List  options  String  name  String  description  final  int  minimum  final  int  maximum  final  boolean  required  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  required  SortedMap  newOptionMap  optionMap  Iterator  i  j  List  anonymous  newAnonymous  options  Option  option  String  description  name  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	92	92	1	replace	final  Set  options  =  new  HashSet(newPrefixes);	  final    Set    options    =    new    HashSet(optionMap);    	non-compiled	[CE]  illegal  start  of  expression	58	None	replace
64	[BUG]  [BUGGY]  final  List  options  =  new  ArrayList(optionMap);  [CE]  illegal  start  of  expression  [FE]              OptionException      [CONTEXT]        final  List  newAnonymous  =  new  ArrayList();  final  SortedMap  newOptionMap  =  new  TreeMap(ReverseStringComparator.getInstance());  final  Set  newPrefixes  =  new  HashSet();        [BUGGY]  final  List  options  =  new  ArrayList(optionMap);  [BUGGY]      for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {  final  Option  option  =  (Option)  i.next();  option.setParent(this);  if  (option  instanceof  Argument)  {  i.remove();  newAnonymous.add(option);  }  else  {  final  Set  triggers  =  option.getTriggers();  for  (Iterator  j  =  triggers.iterator();  j.hasNext();)  {  [CLASS]  GroupImpl  [METHOD]  <init>  [RETURN_TYPE]  String,int,int,boolean)  List  options  String  name  String  description  final  int  minimum  final  int  maximum  final  boolean  required  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  required  SortedMap  newOptionMap  optionMap  Iterator  i  j  List  anonymous  newAnonymous  options  Option  option  String  description  name  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	92	92	1	replace	final  List  options  =  new  ArrayList(optionMap);	  final    Set    options    =    new    HashSet(optionMap);    	non-compiled	[CE]  illegal  start  of  expression	58	None	replace
65	[BUG]  [BUGGY]  final  Option  option  =  options.getOption(this,  defaultPrefixes,  required);  [CE]  illegal  start  of  expression  [FE]                          OptionException      [CONTEXT]        final  List  newAnonymous  =  new  ArrayList();  final  SortedMap  newOptionMap  =  new  TreeMap(ReverseStringComparator.getInstance());  final  Set  newPrefixes  =  new  HashSet();        [BUGGY]  final  Option  option  =  options.getOption(this,  defaultPrefixes,  required);  [BUGGY]      for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {  final  Option  option  =  (Option)  i.next();  option.setParent(this);  if  (option  instanceof  Argument)  {  i.remove();  newAnonymous.add(option);  }  else  {  final  Set  triggers  =  option.getTriggers();  for  (Iterator  j  =  triggers.iterator();  j.hasNext();)  {  [CLASS]  GroupImpl  [METHOD]  <init>  [RETURN_TYPE]  String,int,int,boolean)  List  options  String  name  String  description  final  int  minimum  final  int  maximum  final  boolean  required  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  required  SortedMap  newOptionMap  optionMap  Iterator  i  j  List  anonymous  newAnonymous  options  Option  option  String  description  name  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	92	92	1	replace	final  Option  option  =  options.getOption(this,  defaultPrefixes,  required);	  final    Option    option    =    options.getOption(this,    defaultPrefixes);    	non-compiled	[CE]  illegal  start  of  expression	10	None	replace
66	[BUG]  [BUGGY]  final  Set  options  =  newPrefixes  ==  null?  newPrefixes.values()  :  Collections.EMPTY_SET;  [CE]  illegal  start  of  expression  [FE]                OptionException      [CONTEXT]        final  List  newAnonymous  =  new  ArrayList();  final  SortedMap  newOptionMap  =  new  TreeMap(ReverseStringComparator.getInstance());  final  Set  newPrefixes  =  new  HashSet();        [BUGGY]  final  Set  options  =  newPrefixes  ==  null?  newPrefixes.values()  :  Collections.EMPTY_SET;  [BUGGY]      for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {  final  Option  option  =  (Option)  i.next();  option.setParent(this);  if  (option  instanceof  Argument)  {  i.remove();  newAnonymous.add(option);  }  else  {  final  Set  triggers  =  option.getTriggers();  for  (Iterator  j  =  triggers.iterator();  j.hasNext();)  {  [CLASS]  GroupImpl  [METHOD]  <init>  [RETURN_TYPE]  String,int,int,boolean)  List  options  String  name  String  description  final  int  minimum  final  int  maximum  final  boolean  required  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  required  SortedMap  newOptionMap  optionMap  Iterator  i  j  List  anonymous  newAnonymous  options  Option  option  String  description  name  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	92	92	1	replace	final  Set  options  =  newPrefixes  ==  null?  newPrefixes.values()  :  Collections.EMPTY_SET;	  final    Set    options    =    newPrefixes!=    null?    newPrefixes.values()    :    Collections.EMPTY_SET;    	non-compiled	[CE]  illegal  start  of  expression	13	None	replace
67	[BUG]  [BUGGY]  final  List  options  =  newPrefixes.toArray(newPrefixes);  [CE]  illegal  start  of  expression  [FE]                OptionException      [CONTEXT]        final  List  newAnonymous  =  new  ArrayList();  final  SortedMap  newOptionMap  =  new  TreeMap(ReverseStringComparator.getInstance());  final  Set  newPrefixes  =  new  HashSet();        [BUGGY]  final  List  options  =  newPrefixes.toArray(newPrefixes);  [BUGGY]      for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {  final  Option  option  =  (Option)  i.next();  option.setParent(this);  if  (option  instanceof  Argument)  {  i.remove();  newAnonymous.add(option);  }  else  {  final  Set  triggers  =  option.getTriggers();  for  (Iterator  j  =  triggers.iterator();  j.hasNext();)  {  [CLASS]  GroupImpl  [METHOD]  <init>  [RETURN_TYPE]  String,int,int,boolean)  List  options  String  name  String  description  final  int  minimum  final  int  maximum  final  boolean  required  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  required  SortedMap  newOptionMap  optionMap  Iterator  i  j  List  anonymous  newAnonymous  options  Option  option  String  description  name  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	92	92	1	replace	final  List  options  =  newPrefixes.toArray(newPrefixes);	  final    Set    options    =    newPrefixes.toArray(newPrefixes);    	non-compiled	[CE]  illegal  start  of  expression	57	None	replace
68	[BUG]  [BUGGY]  final  ArrayList  options  =  newPrefixes.toArray(newPrefixes);  [CE]  illegal  start  of  expression  [FE]                  OptionException      [CONTEXT]        final  List  newAnonymous  =  new  ArrayList();  final  SortedMap  newOptionMap  =  new  TreeMap(ReverseStringComparator.getInstance());  final  Set  newPrefixes  =  new  HashSet();        [BUGGY]  final  ArrayList  options  =  newPrefixes.toArray(newPrefixes);  [BUGGY]      for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {  final  Option  option  =  (Option)  i.next();  option.setParent(this);  if  (option  instanceof  Argument)  {  i.remove();  newAnonymous.add(option);  }  else  {  final  Set  triggers  =  option.getTriggers();  for  (Iterator  j  =  triggers.iterator();  j.hasNext();)  {  [CLASS]  GroupImpl  [METHOD]  <init>  [RETURN_TYPE]  String,int,int,boolean)  List  options  String  name  String  description  final  int  minimum  final  int  maximum  final  boolean  required  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  required  SortedMap  newOptionMap  optionMap  Iterator  i  j  List  anonymous  newAnonymous  options  Option  option  String  description  name  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	92	92	1	replace	final  ArrayList  options  =  newPrefixes.toArray(newPrefixes);	  final    Set    options    =    newPrefixes.toArray(newPrefixes);    	non-compiled	[CE]  illegal  start  of  expression	57	None	replace
69	[BUG]  [BUGGY]  final  List  options  =  prefixes.values();  [CE]  illegal  start  of  expression  [FE]                OptionException      [CONTEXT]        final  List  newAnonymous  =  new  ArrayList();  final  SortedMap  newOptionMap  =  new  TreeMap(ReverseStringComparator.getInstance());  final  Set  newPrefixes  =  new  HashSet();        [BUGGY]  final  List  options  =  prefixes.values();  [BUGGY]      for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {  final  Option  option  =  (Option)  i.next();  option.setParent(this);  if  (option  instanceof  Argument)  {  i.remove();  newAnonymous.add(option);  }  else  {  final  Set  triggers  =  option.getTriggers();  for  (Iterator  j  =  triggers.iterator();  j.hasNext();)  {  [CLASS]  GroupImpl  [METHOD]  <init>  [RETURN_TYPE]  String,int,int,boolean)  List  options  String  name  String  description  final  int  minimum  final  int  maximum  final  boolean  required  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  required  SortedMap  newOptionMap  optionMap  Iterator  i  j  List  anonymous  newAnonymous  options  Option  option  String  description  name  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	92	92	1	replace	final  List  options  =  prefixes.values();	  final    Set    options    =    prefixes.values();    	non-compiled	[CE]  illegal  start  of  expression	49	None	replace
70	[BUG]  [BUGGY]  final  Option  option  =  options.getOption(this,  newPrefixes,  required);  [CE]  illegal  start  of  expression  [FE]                    OptionException      [CONTEXT]        final  List  newAnonymous  =  new  ArrayList();  final  SortedMap  newOptionMap  =  new  TreeMap(ReverseStringComparator.getInstance());  final  Set  newPrefixes  =  new  HashSet();        [BUGGY]  final  Option  option  =  options.getOption(this,  newPrefixes,  required);  [BUGGY]      for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {  final  Option  option  =  (Option)  i.next();  option.setParent(this);  if  (option  instanceof  Argument)  {  i.remove();  newAnonymous.add(option);  }  else  {  final  Set  triggers  =  option.getTriggers();  for  (Iterator  j  =  triggers.iterator();  j.hasNext();)  {  [CLASS]  GroupImpl  [METHOD]  <init>  [RETURN_TYPE]  String,int,int,boolean)  List  options  String  name  String  description  final  int  minimum  final  int  maximum  final  boolean  required  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  required  SortedMap  newOptionMap  optionMap  Iterator  i  j  List  anonymous  newAnonymous  options  Option  option  String  description  name  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	92	92	1	replace	final  Option  option  =  options.getOption(this,  newPrefixes,  required);	  final    Option    option    =    options.getOption(this,    newPrefixes);    	non-compiled	[CE]  illegal  start  of  expression	7	None	replace
71	[BUG]  [BUGGY]  final  Option  option  =  options.getOption(this,  newAnonymous);  [CE]  illegal  start  of  expression  [FE]                      OptionException      [CONTEXT]        final  List  newAnonymous  =  new  ArrayList();  final  SortedMap  newOptionMap  =  new  TreeMap(ReverseStringComparator.getInstance());  final  Set  newPrefixes  =  new  HashSet();        [BUGGY]  final  Option  option  =  options.getOption(this,  newAnonymous);  [BUGGY]      for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {  final  Option  option  =  (Option)  i.next();  option.setParent(this);  if  (option  instanceof  Argument)  {  i.remove();  newAnonymous.add(option);  }  else  {  final  Set  triggers  =  option.getTriggers();  for  (Iterator  j  =  triggers.iterator();  j.hasNext();)  {  [CLASS]  GroupImpl  [METHOD]  <init>  [RETURN_TYPE]  String,int,int,boolean)  List  options  String  name  String  description  final  int  minimum  final  int  maximum  final  boolean  required  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  required  SortedMap  newOptionMap  optionMap  Iterator  i  j  List  anonymous  newAnonymous  options  Option  option  String  description  name  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	92	92	1	replace	final  Option  option  =  options.getOption(this,  newAnonymous);	  final    Option    option    =    options.getOption(this,    newPrefixes);    	non-compiled	[CE]  illegal  start  of  expression	7	None	replace
72	[BUG]  [BUGGY]  final  Option  option  =  options.getOption(this,  newPrefixes,  prefixes);  [CE]  illegal  start  of  expression  [FE]                        OptionException      [CONTEXT]        final  List  newAnonymous  =  new  ArrayList();  final  SortedMap  newOptionMap  =  new  TreeMap(ReverseStringComparator.getInstance());  final  Set  newPrefixes  =  new  HashSet();        [BUGGY]  final  Option  option  =  options.getOption(this,  newPrefixes,  prefixes);  [BUGGY]      for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {  final  Option  option  =  (Option)  i.next();  option.setParent(this);  if  (option  instanceof  Argument)  {  i.remove();  newAnonymous.add(option);  }  else  {  final  Set  triggers  =  option.getTriggers();  for  (Iterator  j  =  triggers.iterator();  j.hasNext();)  {  [CLASS]  GroupImpl  [METHOD]  <init>  [RETURN_TYPE]  String,int,int,boolean)  List  options  String  name  String  description  final  int  minimum  final  int  maximum  final  boolean  required  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  required  SortedMap  newOptionMap  optionMap  Iterator  i  j  List  anonymous  newAnonymous  options  Option  option  String  description  name  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	92	92	1	replace	final  Option  option  =  options.getOption(this,  newPrefixes,  prefixes);	  final    Option    option    =    options.getOption(this,    newPrefixes);    	non-compiled	[CE]  illegal  start  of  expression	7	None	replace
73	[BUG]  [BUGGY]  final  Option  option  =(Option)newOptionMap.get(name  +  1);  [CE]  illegal  start  of  expression  [FE]                      OptionException      [CONTEXT]        final  List  newAnonymous  =  new  ArrayList();  final  SortedMap  newOptionMap  =  new  TreeMap(ReverseStringComparator.getInstance());  final  Set  newPrefixes  =  new  HashSet();        [BUGGY]  final  Option  option  =(Option)newOptionMap.get(name  +  1);  [BUGGY]      final  Option  option  =  (Option)  i.next();  option.setParent(this);  if  (option  instanceof  Argument)  {  i.remove();  newAnonymous.add(option);  }  else  {  final  Set  triggers  =  option.getTriggers();  for  (Iterator  j  =  triggers.iterator();  j.hasNext();)  {  [CLASS]  GroupImpl  [METHOD]  <init>  [RETURN_TYPE]  String,int,int,boolean)  List  options  String  name  String  description  final  int  minimum  final  int  maximum  final  boolean  required  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  required  SortedMap  newOptionMap  optionMap  Iterator  i  j  List  anonymous  newAnonymous  options  Option  option  String  description  name  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	92	92	1	replace	final  Option  option  =(Option)newOptionMap.get(name  +  1);	  final    Option    option    =(Option)newOptionMap.get(name);    	non-compiled	[CE]  illegal  start  of  expression	52	None	replace
74	[BUG]  [BUGGY]  final  Option  option  =(Option)newOptionMap.get(prefixes);  [CE]  illegal  start  of  expression  [FE]                        OptionException      [CONTEXT]        final  List  newAnonymous  =  new  ArrayList();  final  SortedMap  newOptionMap  =  new  TreeMap(ReverseStringComparator.getInstance());  final  Set  newPrefixes  =  new  HashSet();        [BUGGY]  final  Option  option  =(Option)newOptionMap.get(prefixes);  [BUGGY]      final  Option  option  =  (Option)  i.next();  option.setParent(this);  if  (option  instanceof  Argument)  {  i.remove();  newAnonymous.add(option);  }  else  {  final  Set  triggers  =  option.getTriggers();  for  (Iterator  j  =  triggers.iterator();  j.hasNext();)  {  [CLASS]  GroupImpl  [METHOD]  <init>  [RETURN_TYPE]  String,int,int,boolean)  List  options  String  name  String  description  final  int  minimum  final  int  maximum  final  boolean  required  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  required  SortedMap  newOptionMap  optionMap  Iterator  i  j  List  anonymous  newAnonymous  options  Option  option  String  description  name  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	92	92	1	replace	final  Option  option  =(Option)newOptionMap.get(prefixes);	  final    Option    option    =(Option)newOptionMap.get(name);    	non-compiled	[CE]  illegal  start  of  expression	52	None	replace
75	[BUG]  [BUGGY]  final  Option  option  =(Option)newOptionMap.get(name  -  1);  [CE]  illegal  start  of  expression  [FE]                          OptionException      [CONTEXT]        final  List  newAnonymous  =  new  ArrayList();  final  SortedMap  newOptionMap  =  new  TreeMap(ReverseStringComparator.getInstance());  final  Set  newPrefixes  =  new  HashSet();        [BUGGY]  final  Option  option  =(Option)newOptionMap.get(name  -  1);  [BUGGY]      final  Option  option  =  (Option)  i.next();  option.setParent(this);  if  (option  instanceof  Argument)  {  i.remove();  newAnonymous.add(option);  }  else  {  final  Set  triggers  =  option.getTriggers();  for  (Iterator  j  =  triggers.iterator();  j.hasNext();)  {  [CLASS]  GroupImpl  [METHOD]  <init>  [RETURN_TYPE]  String,int,int,boolean)  List  options  String  name  String  description  final  int  minimum  final  int  maximum  final  boolean  required  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  required  SortedMap  newOptionMap  optionMap  Iterator  i  j  List  anonymous  newAnonymous  options  Option  option  String  description  name  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	92	92	1	replace	final  Option  option  =(Option)newOptionMap.get(name  -  1);	  final    Option    option    =(Option)newOptionMap.get(name);    	non-compiled	[CE]  illegal  start  of  expression	52	None	replace
76	[BUG]  [BUGGY]  final  Set  options  =  new  ArrayList();  [CE]  illegal  start  of  expression  [FE]            OptionException      [CONTEXT]        final  List  newAnonymous  =  new  ArrayList();  final  SortedMap  newOptionMap  =  new  TreeMap(ReverseStringComparator.getInstance());  final  Set  newPrefixes  =  new  HashSet();        [BUGGY]  final  Set  options  =  new  ArrayList();  [BUGGY]      for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {  final  Option  option  =  (Option)  i.next();  option.setParent(this);  if  (option  instanceof  Argument)  {  i.remove();  newAnonymous.add(option);  }  else  {  final  Set  triggers  =  option.getTriggers();  for  (Iterator  j  =  triggers.iterator();  j.hasNext();)  {  [CLASS]  GroupImpl  [METHOD]  <init>  [RETURN_TYPE]  String,int,int,boolean)  List  options  String  name  String  description  final  int  minimum  final  int  maximum  final  boolean  required  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  required  SortedMap  newOptionMap  optionMap  Iterator  i  j  List  anonymous  newAnonymous  options  Option  option  String  description  name  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	92	92	1	replace	final  Set  options  =  new  ArrayList();	  final    Set    options    =    new    LinkedHashSet();    	non-compiled	[CE]  illegal  start  of  expression	35	None	replace
77	[BUG]  [BUGGY]  final  SortedMap  options  =  newOptionMap(ReverseStringComparator.instance(),  newPrefixes);  [CE]  illegal  start  of  expression  [FE]            OptionException      [CONTEXT]        final  List  newAnonymous  =  new  ArrayList();  final  SortedMap  newOptionMap  =  new  TreeMap(ReverseStringComparator.getInstance());  final  Set  newPrefixes  =  new  HashSet();        [BUGGY]  final  SortedMap  options  =  newOptionMap(ReverseStringComparator.instance(),  newPrefixes);  [BUGGY]      for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {  final  Option  option  =  (Option)  i.next();  option.setParent(this);  if  (option  instanceof  Argument)  {  i.remove();  newAnonymous.add(option);  }  else  {  final  Set  triggers  =  option.getTriggers();  for  (Iterator  j  =  triggers.iterator();  j.hasNext();)  {  [CLASS]  GroupImpl  [METHOD]  <init>  [RETURN_TYPE]  String,int,int,boolean)  List  options  String  name  String  description  final  int  minimum  final  int  maximum  final  boolean  required  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  required  SortedMap  newOptionMap  optionMap  Iterator  i  j  List  anonymous  newAnonymous  options  Option  option  String  description  name  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	92	92	1	replace	final  SortedMap  options  =  newOptionMap(ReverseStringComparator.instance(),  newPrefixes);	  final    SortedMap    options    =    newOptionMap(ReverseStringComparator.instance());    	non-compiled	[CE]  illegal  start  of  expression	56	None	replace
78	[BUG]  [BUGGY]  Option  option  =(Option)i.next();  [CE]  illegal  start  of  expression  [FE]                  OptionException      [CONTEXT]        final  List  newAnonymous  =  new  ArrayList();  final  SortedMap  newOptionMap  =  new  TreeMap(ReverseStringComparator.getInstance());  final  Set  newPrefixes  =  new  HashSet();        [BUGGY]  Option  option  =(Option)i.next();  [BUGGY]      final  Option  option  =  (Option)  i.next();  option.setParent(this);  if  (option  instanceof  Argument)  {  i.remove();  newAnonymous.add(option);  }  else  {  final  Set  triggers  =  option.getTriggers();  for  (Iterator  j  =  triggers.iterator();  j.hasNext();)  {  [CLASS]  GroupImpl  [METHOD]  <init>  [RETURN_TYPE]  String,int,int,boolean)  List  options  String  name  String  description  final  int  minimum  final  int  maximum  final  boolean  required  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  required  SortedMap  newOptionMap  optionMap  Iterator  i  j  List  anonymous  newAnonymous  options  Option  option  String  description  name  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	92	92	1	replace	Option  option  =(Option)i.next();	  final    Option    option    =(Option)i.next();    	non-compiled	[CE]  illegal  start  of  expression	53	None	replace
79	[BUG]  [BUGGY]  final  Option  option  =(Option)newPrefixes.next();  [CE]  illegal  start  of  expression  [FE]                    OptionException      [CONTEXT]        final  List  newAnonymous  =  new  ArrayList();  final  SortedMap  newOptionMap  =  new  TreeMap(ReverseStringComparator.getInstance());  final  Set  newPrefixes  =  new  HashSet();        [BUGGY]  final  Option  option  =(Option)newPrefixes.next();  [BUGGY]      final  Option  option  =  (Option)  i.next();  option.setParent(this);  if  (option  instanceof  Argument)  {  i.remove();  newAnonymous.add(option);  }  else  {  final  Set  triggers  =  option.getTriggers();  for  (Iterator  j  =  triggers.iterator();  j.hasNext();)  {  [CLASS]  GroupImpl  [METHOD]  <init>  [RETURN_TYPE]  String,int,int,boolean)  List  options  String  name  String  description  final  int  minimum  final  int  maximum  final  boolean  required  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  required  SortedMap  newOptionMap  optionMap  Iterator  i  j  List  anonymous  newAnonymous  options  Option  option  String  description  name  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	92	92	1	replace	final  Option  option  =(Option)newPrefixes.next();	  final    Option    option    =(Option)i.next();    	non-compiled	[CE]  illegal  start  of  expression	53	None	replace
80	[BUG]  [BUGGY]  final  Option  option  =(Option)this.optionMap.get(i.next());  [CE]  illegal  start  of  expression  [FE]                      OptionException      [CONTEXT]        final  List  newAnonymous  =  new  ArrayList();  final  SortedMap  newOptionMap  =  new  TreeMap(ReverseStringComparator.getInstance());  final  Set  newPrefixes  =  new  HashSet();        [BUGGY]  final  Option  option  =(Option)this.optionMap.get(i.next());  [BUGGY]      final  Option  option  =  (Option)  i.next();  option.setParent(this);  if  (option  instanceof  Argument)  {  i.remove();  newAnonymous.add(option);  }  else  {  final  Set  triggers  =  option.getTriggers();  for  (Iterator  j  =  triggers.iterator();  j.hasNext();)  {  [CLASS]  GroupImpl  [METHOD]  <init>  [RETURN_TYPE]  String,int,int,boolean)  List  options  String  name  String  description  final  int  minimum  final  int  maximum  final  boolean  required  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  required  SortedMap  newOptionMap  optionMap  Iterator  i  j  List  anonymous  newAnonymous  options  Option  option  String  description  name  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	92	92	1	replace	final  Option  option  =(Option)this.optionMap.get(i.next());	  final    Option    option    =(Option)i.next();    	non-compiled	[CE]  illegal  start  of  expression	53	None	replace
81	[BUG]  [BUGGY]  final  Option  option  =  options.getOption(newPrefixes);  [CE]  illegal  start  of  expression  [FE]                        OptionException      [CONTEXT]        final  List  newAnonymous  =  new  ArrayList();  final  SortedMap  newOptionMap  =  new  TreeMap(ReverseStringComparator.getInstance());  final  Set  newPrefixes  =  new  HashSet();        [BUGGY]  final  Option  option  =  options.getOption(newPrefixes);  [BUGGY]      for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {  final  Option  option  =  (Option)  i.next();  option.setParent(this);  if  (option  instanceof  Argument)  {  i.remove();  newAnonymous.add(option);  }  else  {  final  Set  triggers  =  option.getTriggers();  for  (Iterator  j  =  triggers.iterator();  j.hasNext();)  {  [CLASS]  GroupImpl  [METHOD]  <init>  [RETURN_TYPE]  String,int,int,boolean)  List  options  String  name  String  description  final  int  minimum  final  int  maximum  final  boolean  required  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  required  SortedMap  newOptionMap  optionMap  Iterator  i  j  List  anonymous  newAnonymous  options  Option  option  String  description  name  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	92	92	1	replace	final  Option  option  =  options.getOption(newPrefixes);	  final    Option    option    =    options.getOption(prefixes);    	non-compiled	[CE]  illegal  start  of  expression	21	None	replace
82	[BUG]  [BUGGY]  final  Option  option  =  options.getOption(prefixes,  required);  [CE]  illegal  start  of  expression  [FE]                          OptionException      [CONTEXT]        final  List  newAnonymous  =  new  ArrayList();  final  SortedMap  newOptionMap  =  new  TreeMap(ReverseStringComparator.getInstance());  final  Set  newPrefixes  =  new  HashSet();        [BUGGY]  final  Option  option  =  options.getOption(prefixes,  required);  [BUGGY]      for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {  final  Option  option  =  (Option)  i.next();  option.setParent(this);  if  (option  instanceof  Argument)  {  i.remove();  newAnonymous.add(option);  }  else  {  final  Set  triggers  =  option.getTriggers();  for  (Iterator  j  =  triggers.iterator();  j.hasNext();)  {  [CLASS]  GroupImpl  [METHOD]  <init>  [RETURN_TYPE]  String,int,int,boolean)  List  options  String  name  String  description  final  int  minimum  final  int  maximum  final  boolean  required  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  required  SortedMap  newOptionMap  optionMap  Iterator  i  j  List  anonymous  newAnonymous  options  Option  option  String  description  name  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	92	92	1	replace	final  Option  option  =  options.getOption(prefixes,  required);	  final    Option    option    =    options.getOption(prefixes);    	non-compiled	[CE]  illegal  start  of  expression	21	None	replace
83	[BUG]  [BUGGY]  final  Option  option  =  options.getOption(required);  [CE]  illegal  start  of  expression  [FE]                            OptionException      [CONTEXT]        final  List  newAnonymous  =  new  ArrayList();  final  SortedMap  newOptionMap  =  new  TreeMap(ReverseStringComparator.getInstance());  final  Set  newPrefixes  =  new  HashSet();        [BUGGY]  final  Option  option  =  options.getOption(required);  [BUGGY]      for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {  final  Option  option  =  (Option)  i.next();  option.setParent(this);  if  (option  instanceof  Argument)  {  i.remove();  newAnonymous.add(option);  }  else  {  final  Set  triggers  =  option.getTriggers();  for  (Iterator  j  =  triggers.iterator();  j.hasNext();)  {  [CLASS]  GroupImpl  [METHOD]  <init>  [RETURN_TYPE]  String,int,int,boolean)  List  options  String  name  String  description  final  int  minimum  final  int  maximum  final  boolean  required  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  required  SortedMap  newOptionMap  optionMap  Iterator  i  j  List  anonymous  newAnonymous  options  Option  option  String  description  name  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	92	92	1	replace	final  Option  option  =  options.getOption(required);	  final    Option    option    =    options.getOption(prefixes);    	non-compiled	[CE]  illegal  start  of  expression	21	None	replace
84	[BUG]  [BUGGY]  newOptionMap.put(name,  newPrefixes,  required);  [CE]  illegal  start  of  expression  [FE]                  OptionException      [CONTEXT]        final  List  newAnonymous  =  new  ArrayList();  final  SortedMap  newOptionMap  =  new  TreeMap(ReverseStringComparator.getInstance());  final  Set  newPrefixes  =  new  HashSet();        [BUGGY]  newOptionMap.put(name,  newPrefixes,  required);  [BUGGY]      final  Option  option  =  (Option)  i.next();  option.setParent(this);  if  (option  instanceof  Argument)  {  i.remove();  newAnonymous.add(option);  }  else  {  final  Set  triggers  =  option.getTriggers();  for  (Iterator  j  =  triggers.iterator();  j.hasNext();)  {  [CLASS]  GroupImpl  [METHOD]  <init>  [RETURN_TYPE]  String,int,int,boolean)  List  options  String  name  String  description  final  int  minimum  final  int  maximum  final  boolean  required  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  required  SortedMap  newOptionMap  optionMap  Iterator  i  j  List  anonymous  newAnonymous  options  Option  option  String  description  name  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	92	92	1	replace	newOptionMap.put(name,  newPrefixes,  required);	  newOptionMap.put(name,    newPrefixes);    	non-compiled	[CE]  illegal  start  of  expression	50	None	replace
85	[BUG]  [BUGGY]  newOptionMap.put(name,  prefixes);  [CE]  illegal  start  of  expression  [FE]                    OptionException      [CONTEXT]        final  List  newAnonymous  =  new  ArrayList();  final  SortedMap  newOptionMap  =  new  TreeMap(ReverseStringComparator.getInstance());  final  Set  newPrefixes  =  new  HashSet();        [BUGGY]  newOptionMap.put(name,  prefixes);  [BUGGY]      final  Option  option  =  (Option)  i.next();  option.setParent(this);  if  (option  instanceof  Argument)  {  i.remove();  newAnonymous.add(option);  }  else  {  final  Set  triggers  =  option.getTriggers();  for  (Iterator  j  =  triggers.iterator();  j.hasNext();)  {  [CLASS]  GroupImpl  [METHOD]  <init>  [RETURN_TYPE]  String,int,int,boolean)  List  options  String  name  String  description  final  int  minimum  final  int  maximum  final  boolean  required  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  required  SortedMap  newOptionMap  optionMap  Iterator  i  j  List  anonymous  newAnonymous  options  Option  option  String  description  name  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	92	92	1	replace	newOptionMap.put(name,  prefixes);	  newOptionMap.put(name,    newPrefixes);    	non-compiled	[CE]  illegal  start  of  expression	50	None	replace
86	[BUG]  [BUGGY]  newOptionMap.put(name,  newPrefixes,  prefixes);  [CE]  illegal  start  of  expression  [FE]                      OptionException      [CONTEXT]        final  List  newAnonymous  =  new  ArrayList();  final  SortedMap  newOptionMap  =  new  TreeMap(ReverseStringComparator.getInstance());  final  Set  newPrefixes  =  new  HashSet();        [BUGGY]  newOptionMap.put(name,  newPrefixes,  prefixes);  [BUGGY]      final  Option  option  =  (Option)  i.next();  option.setParent(this);  if  (option  instanceof  Argument)  {  i.remove();  newAnonymous.add(option);  }  else  {  final  Set  triggers  =  option.getTriggers();  for  (Iterator  j  =  triggers.iterator();  j.hasNext();)  {  [CLASS]  GroupImpl  [METHOD]  <init>  [RETURN_TYPE]  String,int,int,boolean)  List  options  String  name  String  description  final  int  minimum  final  int  maximum  final  boolean  required  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  required  SortedMap  newOptionMap  optionMap  Iterator  i  j  List  anonymous  newAnonymous  options  Option  option  String  description  name  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	92	92	1	replace	newOptionMap.put(name,  newPrefixes,  prefixes);	  newOptionMap.put(name,    newPrefixes);    	non-compiled	[CE]  illegal  start  of  expression	50	None	replace
87	[BUG]  [BUGGY]  final  Set  options  =  newPrefixes.list();  [CE]  illegal  start  of  expression  [FE]                    OptionException      [CONTEXT]        final  List  newAnonymous  =  new  ArrayList();  final  SortedMap  newOptionMap  =  new  TreeMap(ReverseStringComparator.getInstance());  final  Set  newPrefixes  =  new  HashSet();        [BUGGY]  final  Set  options  =  newPrefixes.list();  [BUGGY]      for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {  final  Option  option  =  (Option)  i.next();  option.setParent(this);  if  (option  instanceof  Argument)  {  i.remove();  newAnonymous.add(option);  }  else  {  final  Set  triggers  =  option.getTriggers();  for  (Iterator  j  =  triggers.iterator();  j.hasNext();)  {  [CLASS]  GroupImpl  [METHOD]  <init>  [RETURN_TYPE]  String,int,int,boolean)  List  options  String  name  String  description  final  int  minimum  final  int  maximum  final  boolean  required  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  required  SortedMap  newOptionMap  optionMap  Iterator  i  j  List  anonymous  newAnonymous  options  Option  option  String  description  name  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	92	92	1	replace	final  Set  options  =  newPrefixes.list();	  final    List    options    =    newPrefixes.list();    	non-compiled	[CE]  illegal  start  of  expression	12	None	replace
88	[BUG]  [BUGGY]  newAnonymous.addAll(newPrefixes,  prefixes);  [CE]  illegal  start  of  expression  [FE]                  OptionException      [CONTEXT]        final  List  newAnonymous  =  new  ArrayList();  final  SortedMap  newOptionMap  =  new  TreeMap(ReverseStringComparator.getInstance());  final  Set  newPrefixes  =  new  HashSet();        [BUGGY]  newAnonymous.addAll(newPrefixes,  prefixes);  [BUGGY]      final  Option  option  =  (Option)  i.next();  option.setParent(this);  if  (option  instanceof  Argument)  {  i.remove();  newAnonymous.add(option);  }  else  {  final  Set  triggers  =  option.getTriggers();  for  (Iterator  j  =  triggers.iterator();  j.hasNext();)  {  [CLASS]  GroupImpl  [METHOD]  <init>  [RETURN_TYPE]  String,int,int,boolean)  List  options  String  name  String  description  final  int  minimum  final  int  maximum  final  boolean  required  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  required  SortedMap  newOptionMap  optionMap  Iterator  i  j  List  anonymous  newAnonymous  options  Option  option  String  description  name  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	92	92	1	replace	newAnonymous.addAll(newPrefixes,  prefixes);	  newAnonymous.addAll(newPrefixes);    	non-compiled	[CE]  illegal  start  of  expression	1	None	replace
89	[BUG]  [BUGGY]  final  Option  option  =  options.getOption(name,  newPrefixes,  required);  [CE]  illegal  start  of  expression  [FE]                      OptionException      [CONTEXT]        final  List  newAnonymous  =  new  ArrayList();  final  SortedMap  newOptionMap  =  new  TreeMap(ReverseStringComparator.getInstance());  final  Set  newPrefixes  =  new  HashSet();        [BUGGY]  final  Option  option  =  options.getOption(name,  newPrefixes,  required);  [BUGGY]      for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {  final  Option  option  =  (Option)  i.next();  option.setParent(this);  if  (option  instanceof  Argument)  {  i.remove();  newAnonymous.add(option);  }  else  {  final  Set  triggers  =  option.getTriggers();  for  (Iterator  j  =  triggers.iterator();  j.hasNext();)  {  [CLASS]  GroupImpl  [METHOD]  <init>  [RETURN_TYPE]  String,int,int,boolean)  List  options  String  name  String  description  final  int  minimum  final  int  maximum  final  boolean  required  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  required  SortedMap  newOptionMap  optionMap  Iterator  i  j  List  anonymous  newAnonymous  options  Option  option  String  description  name  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	92	92	1	replace	final  Option  option  =  options.getOption(name,  newPrefixes,  required);	  final    Option    option    =    options.getOption(name,    newPrefixes);    	non-compiled	[CE]  illegal  start  of  expression	20	None	replace
90	[BUG]  [BUGGY]  final  Set  options  =  option.getOptions();  [CE]  illegal  start  of  expression  [FE]              OptionException      [CONTEXT]        final  List  newAnonymous  =  new  ArrayList();  final  SortedMap  newOptionMap  =  new  TreeMap(ReverseStringComparator.getInstance());  final  Set  newPrefixes  =  new  HashSet();        [BUGGY]  final  Set  options  =  option.getOptions();  [BUGGY]      for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {  final  Option  option  =  (Option)  i.next();  option.setParent(this);  if  (option  instanceof  Argument)  {  i.remove();  newAnonymous.add(option);  }  else  {  final  Set  triggers  =  option.getTriggers();  for  (Iterator  j  =  triggers.iterator();  j.hasNext();)  {  [CLASS]  GroupImpl  [METHOD]  <init>  [RETURN_TYPE]  String,int,int,boolean)  List  options  String  name  String  description  final  int  minimum  final  int  maximum  final  boolean  required  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  required  SortedMap  newOptionMap  optionMap  Iterator  i  j  List  anonymous  newAnonymous  options  Option  option  String  description  name  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	92	92	1	replace	final  Set  options  =  option.getOptions();	  final    Set    options    =    optionMap.getOptions();    	non-compiled	[CE]  illegal  start  of  expression	43	None	replace
91	[BUG]  [BUGGY]  final  Set  options  =  prefixes!=  null?  newPrefixes.keySet()  :  prefixes;  [CE]  illegal  start  of  expression  [FE]                OptionException      [CONTEXT]        final  List  newAnonymous  =  new  ArrayList();  final  SortedMap  newOptionMap  =  new  TreeMap(ReverseStringComparator.getInstance());  final  Set  newPrefixes  =  new  HashSet();        [BUGGY]  final  Set  options  =  prefixes!=  null?  newPrefixes.keySet()  :  prefixes;  [BUGGY]      for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {  final  Option  option  =  (Option)  i.next();  option.setParent(this);  if  (option  instanceof  Argument)  {  i.remove();  newAnonymous.add(option);  }  else  {  final  Set  triggers  =  option.getTriggers();  for  (Iterator  j  =  triggers.iterator();  j.hasNext();)  {  [CLASS]  GroupImpl  [METHOD]  <init>  [RETURN_TYPE]  String,int,int,boolean)  List  options  String  name  String  description  final  int  minimum  final  int  maximum  final  boolean  required  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  required  SortedMap  newOptionMap  optionMap  Iterator  i  j  List  anonymous  newAnonymous  options  Option  option  String  description  name  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	92	92	1	replace	final  Set  options  =  prefixes!=  null?  newPrefixes.keySet()  :  prefixes;	  final    Set    options    =    newPrefixes!=    null?    newPrefixes.keySet()    :    prefixes;    	non-compiled	[CE]  illegal  start  of  expression	24	None	replace
92	[BUG]  [BUGGY]  final  Set  options  =  newPrefixes  ==  null?  newPrefixes.keySet()  :  prefixes;  [CE]  illegal  start  of  expression  [FE]                  OptionException      [CONTEXT]        final  List  newAnonymous  =  new  ArrayList();  final  SortedMap  newOptionMap  =  new  TreeMap(ReverseStringComparator.getInstance());  final  Set  newPrefixes  =  new  HashSet();        [BUGGY]  final  Set  options  =  newPrefixes  ==  null?  newPrefixes.keySet()  :  prefixes;  [BUGGY]      for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {  final  Option  option  =  (Option)  i.next();  option.setParent(this);  if  (option  instanceof  Argument)  {  i.remove();  newAnonymous.add(option);  }  else  {  final  Set  triggers  =  option.getTriggers();  for  (Iterator  j  =  triggers.iterator();  j.hasNext();)  {  [CLASS]  GroupImpl  [METHOD]  <init>  [RETURN_TYPE]  String,int,int,boolean)  List  options  String  name  String  description  final  int  minimum  final  int  maximum  final  boolean  required  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  required  SortedMap  newOptionMap  optionMap  Iterator  i  j  List  anonymous  newAnonymous  options  Option  option  String  description  name  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	92	92	1	replace	final  Set  options  =  newPrefixes  ==  null?  newPrefixes.keySet()  :  prefixes;	  final    Set    options    =    newPrefixes!=    null?    newPrefixes.keySet()    :    prefixes;    	non-compiled	[CE]  illegal  start  of  expression	24	None	replace
93	[BUG]  [BUGGY]  final  Set  options  =  new  HashSet(required);  [CE]  illegal  start  of  expression  [FE]              OptionException      [CONTEXT]        final  List  newAnonymous  =  new  ArrayList();  final  SortedMap  newOptionMap  =  new  TreeMap(ReverseStringComparator.getInstance());  final  Set  newPrefixes  =  new  HashSet();        [BUGGY]  final  Set  options  =  new  HashSet(required);  [BUGGY]      for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {  final  Option  option  =  (Option)  i.next();  option.setParent(this);  if  (option  instanceof  Argument)  {  i.remove();  newAnonymous.add(option);  }  else  {  final  Set  triggers  =  option.getTriggers();  for  (Iterator  j  =  triggers.iterator();  j.hasNext();)  {  [CLASS]  GroupImpl  [METHOD]  <init>  [RETURN_TYPE]  String,int,int,boolean)  List  options  String  name  String  description  final  int  minimum  final  int  maximum  final  boolean  required  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  required  SortedMap  newOptionMap  optionMap  Iterator  i  j  List  anonymous  newAnonymous  options  Option  option  String  description  name  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	92	92	1	replace	final  Set  options  =  new  HashSet(required);	  final    Set    options    =    new    HashSet(prefixes);    	non-compiled	[CE]  illegal  start  of  expression	36	None	replace
94	[BUG]  [BUGGY]  final  Set  options  =  new  HashSet(prefixes,  newPrefixes);  [CE]  illegal  start  of  expression  [FE]                OptionException      [CONTEXT]        final  List  newAnonymous  =  new  ArrayList();  final  SortedMap  newOptionMap  =  new  TreeMap(ReverseStringComparator.getInstance());  final  Set  newPrefixes  =  new  HashSet();        [BUGGY]  final  Set  options  =  new  HashSet(prefixes,  newPrefixes);  [BUGGY]      for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {  final  Option  option  =  (Option)  i.next();  option.setParent(this);  if  (option  instanceof  Argument)  {  i.remove();  newAnonymous.add(option);  }  else  {  final  Set  triggers  =  option.getTriggers();  for  (Iterator  j  =  triggers.iterator();  j.hasNext();)  {  [CLASS]  GroupImpl  [METHOD]  <init>  [RETURN_TYPE]  String,int,int,boolean)  List  options  String  name  String  description  final  int  minimum  final  int  maximum  final  boolean  required  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  required  SortedMap  newOptionMap  optionMap  Iterator  i  j  List  anonymous  newAnonymous  options  Option  option  String  description  name  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	92	92	1	replace	final  Set  options  =  new  HashSet(prefixes,  newPrefixes);	  final    Set    options    =    new    HashSet(prefixes);    	non-compiled	[CE]  illegal  start  of  expression	36	None	replace
95	[BUG]  [BUGGY]  final  List  options  =  new  ArrayList(prefixes);  [CE]  illegal  start  of  expression  [FE]                  OptionException      [CONTEXT]        final  List  newAnonymous  =  new  ArrayList();  final  SortedMap  newOptionMap  =  new  TreeMap(ReverseStringComparator.getInstance());  final  Set  newPrefixes  =  new  HashSet();        [BUGGY]  final  List  options  =  new  ArrayList(prefixes);  [BUGGY]      for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {  final  Option  option  =  (Option)  i.next();  option.setParent(this);  if  (option  instanceof  Argument)  {  i.remove();  newAnonymous.add(option);  }  else  {  final  Set  triggers  =  option.getTriggers();  for  (Iterator  j  =  triggers.iterator();  j.hasNext();)  {  [CLASS]  GroupImpl  [METHOD]  <init>  [RETURN_TYPE]  String,int,int,boolean)  List  options  String  name  String  description  final  int  minimum  final  int  maximum  final  boolean  required  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  required  SortedMap  newOptionMap  optionMap  Iterator  i  j  List  anonymous  newAnonymous  options  Option  option  String  description  name  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	92	92	1	replace	final  List  options  =  new  ArrayList(prefixes);	  final    Set    options    =    new    HashSet(prefixes);    	non-compiled	[CE]  illegal  start  of  expression	36	None	replace
96	[BUG]  [BUGGY]  for(final  Iterator  i  =  this.newAnonymous.iterator();  i.hasNext();)  {  [CE]  illegal  start  of  expression  [FE]              OptionException      [CONTEXT]        final  List  newAnonymous  =  new  ArrayList();  final  SortedMap  newOptionMap  =  new  TreeMap(ReverseStringComparator.getInstance());  final  Set  newPrefixes  =  new  HashSet();        [BUGGY]  for(final  Iterator  i  =  this.newAnonymous.iterator();  i.hasNext();)  {  [BUGGY]      final  Option  option  =  (Option)  i.next();  option.setParent(this);  if  (option  instanceof  Argument)  {  i.remove();  newAnonymous.add(option);  }  else  {  final  Set  triggers  =  option.getTriggers();  for  (Iterator  j  =  triggers.iterator();  j.hasNext();)  {  [CLASS]  GroupImpl  [METHOD]  <init>  [RETURN_TYPE]  String,int,int,boolean)  List  options  String  name  String  description  final  int  minimum  final  int  maximum  final  boolean  required  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  required  SortedMap  newOptionMap  optionMap  Iterator  i  j  List  anonymous  newAnonymous  options  Option  option  String  description  name  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	92	92	1	replace	for(final  Iterator  i  =  this.newAnonymous.iterator();  i.hasNext();)  {	  for(final    Iterator    i    =    newAnonymous.iterator();    i.hasNext();)    {    	non-compiled	[CE]  illegal  start  of  expression	15	None	replace
97	[BUG]  [BUGGY]  final  List  options  =  newPrefixes!=  null?  newPrefixes.keySet()  :  Collections.EMPTY_LIST;  [CE]  illegal  start  of  expression  [FE]              OptionException      [CONTEXT]        final  List  newAnonymous  =  new  ArrayList();  final  SortedMap  newOptionMap  =  new  TreeMap(ReverseStringComparator.getInstance());  final  Set  newPrefixes  =  new  HashSet();        [BUGGY]  final  List  options  =  newPrefixes!=  null?  newPrefixes.keySet()  :  Collections.EMPTY_LIST;  [BUGGY]      for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {  final  Option  option  =  (Option)  i.next();  option.setParent(this);  if  (option  instanceof  Argument)  {  i.remove();  newAnonymous.add(option);  }  else  {  final  Set  triggers  =  option.getTriggers();  for  (Iterator  j  =  triggers.iterator();  j.hasNext();)  {  [CLASS]  GroupImpl  [METHOD]  <init>  [RETURN_TYPE]  String,int,int,boolean)  List  options  String  name  String  description  final  int  minimum  final  int  maximum  final  boolean  required  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  required  SortedMap  newOptionMap  optionMap  Iterator  i  j  List  anonymous  newAnonymous  options  Option  option  String  description  name  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	92	92	1	replace	final  List  options  =  newPrefixes!=  null?  newPrefixes.keySet()  :  Collections.EMPTY_LIST;	  final    List    options    =    newPrefixes.keySet();    	non-compiled	[CE]  illegal  start  of  expression	23	None	replace
98	[BUG]  [BUGGY]  for(Iterator  i  =  newPrefixes.iterator();  i.hasNext();)  {  [CE]  illegal  start  of  expression  [FE]            OptionException      [CONTEXT]        final  List  newAnonymous  =  new  ArrayList();  final  SortedMap  newOptionMap  =  new  TreeMap(ReverseStringComparator.getInstance());  final  Set  newPrefixes  =  new  HashSet();        [BUGGY]  for(Iterator  i  =  newPrefixes.iterator();  i.hasNext();)  {  [BUGGY]      final  Option  option  =  (Option)  i.next();  option.setParent(this);  if  (option  instanceof  Argument)  {  i.remove();  newAnonymous.add(option);  }  else  {  final  Set  triggers  =  option.getTriggers();  for  (Iterator  j  =  triggers.iterator();  j.hasNext();)  {  [CLASS]  GroupImpl  [METHOD]  <init>  [RETURN_TYPE]  String,int,int,boolean)  List  options  String  name  String  description  final  int  minimum  final  int  maximum  final  boolean  required  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  required  SortedMap  newOptionMap  optionMap  Iterator  i  j  List  anonymous  newAnonymous  options  Option  option  String  description  name  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	92	92	1	replace	for(Iterator  i  =  newPrefixes.iterator();  i.hasNext();)  {	  for(Iterator    i    =    prefixes.iterator();    i.hasNext();)    {    	non-compiled	[CE]  illegal  start  of  expression	39	None	replace
99	[BUG]  [BUGGY]  for(Iterator  i  =  this.prefixes.iterator();  i.hasNext();)  {  [CE]  illegal  start  of  expression  [FE]              OptionException      [CONTEXT]        final  List  newAnonymous  =  new  ArrayList();  final  SortedMap  newOptionMap  =  new  TreeMap(ReverseStringComparator.getInstance());  final  Set  newPrefixes  =  new  HashSet();        [BUGGY]  for(Iterator  i  =  this.prefixes.iterator();  i.hasNext();)  {  [BUGGY]      final  Option  option  =  (Option)  i.next();  option.setParent(this);  if  (option  instanceof  Argument)  {  i.remove();  newAnonymous.add(option);  }  else  {  final  Set  triggers  =  option.getTriggers();  for  (Iterator  j  =  triggers.iterator();  j.hasNext();)  {  [CLASS]  GroupImpl  [METHOD]  <init>  [RETURN_TYPE]  String,int,int,boolean)  List  options  String  name  String  description  final  int  minimum  final  int  maximum  final  boolean  required  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  required  SortedMap  newOptionMap  optionMap  Iterator  i  j  List  anonymous  newAnonymous  options  Option  option  String  description  name  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	92	92	1	replace	for(Iterator  i  =  this.prefixes.iterator();  i.hasNext();)  {	  for(Iterator    i    =    prefixes.iterator();    i.hasNext();)    {    	non-compiled	[CE]  illegal  start  of  expression	39	None	replace
100	[BUG]  [BUGGY]  final  List  options  =  newOptionMap(ReverseStringComparator.getDefault(),  newPrefixes);  [CE]  illegal  start  of  expression  [FE]                  OptionException      [CONTEXT]        final  List  newAnonymous  =  new  ArrayList();  final  SortedMap  newOptionMap  =  new  TreeMap(ReverseStringComparator.getInstance());  final  Set  newPrefixes  =  new  HashSet();        [BUGGY]  final  List  options  =  newOptionMap(ReverseStringComparator.getDefault(),  newPrefixes);  [BUGGY]      for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {  final  Option  option  =  (Option)  i.next();  option.setParent(this);  if  (option  instanceof  Argument)  {  i.remove();  newAnonymous.add(option);  }  else  {  final  Set  triggers  =  option.getTriggers();  for  (Iterator  j  =  triggers.iterator();  j.hasNext();)  {  [CLASS]  GroupImpl  [METHOD]  <init>  [RETURN_TYPE]  String,int,int,boolean)  List  options  String  name  String  description  final  int  minimum  final  int  maximum  final  boolean  required  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  required  SortedMap  newOptionMap  optionMap  Iterator  i  j  List  anonymous  newAnonymous  options  Option  option  String  description  name  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	92	92	1	replace	final  List  options  =  newOptionMap(ReverseStringComparator.getDefault(),  newPrefixes);	  final    List    options    =    newOptionMap(ReverseStringComparator.getDefault());    	non-compiled	[CE]  illegal  start  of  expression	42	None	replace
101	[BUG]  [BUGGY]  final  List  options  =  newOptionMap(ReverseStringComparator.getPrefixes());  [CE]  illegal  start  of  expression  [FE]                    OptionException      [CONTEXT]        final  List  newAnonymous  =  new  ArrayList();  final  SortedMap  newOptionMap  =  new  TreeMap(ReverseStringComparator.getInstance());  final  Set  newPrefixes  =  new  HashSet();        [BUGGY]  final  List  options  =  newOptionMap(ReverseStringComparator.getPrefixes());  [BUGGY]      for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {  final  Option  option  =  (Option)  i.next();  option.setParent(this);  if  (option  instanceof  Argument)  {  i.remove();  newAnonymous.add(option);  }  else  {  final  Set  triggers  =  option.getTriggers();  for  (Iterator  j  =  triggers.iterator();  j.hasNext();)  {  [CLASS]  GroupImpl  [METHOD]  <init>  [RETURN_TYPE]  String,int,int,boolean)  List  options  String  name  String  description  final  int  minimum  final  int  maximum  final  boolean  required  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  required  SortedMap  newOptionMap  optionMap  Iterator  i  j  List  anonymous  newAnonymous  options  Option  option  String  description  name  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	92	92	1	replace	final  List  options  =  newOptionMap(ReverseStringComparator.getPrefixes());	  final    List    options    =    newOptionMap(ReverseStringComparator.getDefault());    	non-compiled	[CE]  illegal  start  of  expression	42	None	replace
102	[BUG]  [BUGGY]  final  Set  options  =  new  LinkedList();  [CE]  illegal  start  of  expression  [FE]            OptionException      [CONTEXT]        final  List  newAnonymous  =  new  ArrayList();  final  SortedMap  newOptionMap  =  new  TreeMap(ReverseStringComparator.getInstance());  final  Set  newPrefixes  =  new  HashSet();        [BUGGY]  final  Set  options  =  new  LinkedList();  [BUGGY]      for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {  final  Option  option  =  (Option)  i.next();  option.setParent(this);  if  (option  instanceof  Argument)  {  i.remove();  newAnonymous.add(option);  }  else  {  final  Set  triggers  =  option.getTriggers();  for  (Iterator  j  =  triggers.iterator();  j.hasNext();)  {  [CLASS]  GroupImpl  [METHOD]  <init>  [RETURN_TYPE]  String,int,int,boolean)  List  options  String  name  String  description  final  int  minimum  final  int  maximum  final  boolean  required  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  required  SortedMap  newOptionMap  optionMap  Iterator  i  j  List  anonymous  newAnonymous  options  Option  option  String  description  name  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	92	92	1	replace	final  Set  options  =  new  LinkedList();	  final    Set    options    =    new    LinkedHashSet();    	non-compiled	[CE]  illegal  start  of  expression	35	None	replace
103	[BUG]  [BUGGY]  final  Option  option  =  options.getOption(this,  name,  prefixes);  [CE]  illegal  start  of  expression  [FE]                        OptionException      [CONTEXT]        final  List  newAnonymous  =  new  ArrayList();  final  SortedMap  newOptionMap  =  new  TreeMap(ReverseStringComparator.getInstance());  final  Set  newPrefixes  =  new  HashSet();        [BUGGY]  final  Option  option  =  options.getOption(this,  name,  prefixes);  [BUGGY]      for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {  final  Option  option  =  (Option)  i.next();  option.setParent(this);  if  (option  instanceof  Argument)  {  i.remove();  newAnonymous.add(option);  }  else  {  final  Set  triggers  =  option.getTriggers();  for  (Iterator  j  =  triggers.iterator();  j.hasNext();)  {  [CLASS]  GroupImpl  [METHOD]  <init>  [RETURN_TYPE]  String,int,int,boolean)  List  options  String  name  String  description  final  int  minimum  final  int  maximum  final  boolean  required  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  required  SortedMap  newOptionMap  optionMap  Iterator  i  j  List  anonymous  newAnonymous  options  Option  option  String  description  name  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	92	92	1	replace	final  Option  option  =  options.getOption(this,  name,  prefixes);	  final    Option    option    =    options.getOption(this,    name);    	non-compiled	[CE]  illegal  start  of  expression	9	None	replace
104	[BUG]  [BUGGY]  final  Set  options  =  this.prefixes.keySet();  [CE]  illegal  start  of  expression  [FE]            OptionException      [CONTEXT]        final  List  newAnonymous  =  new  ArrayList();  final  SortedMap  newOptionMap  =  new  TreeMap(ReverseStringComparator.getInstance());  final  Set  newPrefixes  =  new  HashSet();        [BUGGY]  final  Set  options  =  this.prefixes.keySet();  [BUGGY]      for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {  final  Option  option  =  (Option)  i.next();  option.setParent(this);  if  (option  instanceof  Argument)  {  i.remove();  newAnonymous.add(option);  }  else  {  final  Set  triggers  =  option.getTriggers();  for  (Iterator  j  =  triggers.iterator();  j.hasNext();)  {  [CLASS]  GroupImpl  [METHOD]  <init>  [RETURN_TYPE]  String,int,int,boolean)  List  options  String  name  String  description  final  int  minimum  final  int  maximum  final  boolean  required  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  required  SortedMap  newOptionMap  optionMap  Iterator  i  j  List  anonymous  newAnonymous  options  Option  option  String  description  name  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	92	92	1	replace	final  Set  options  =  this.prefixes.keySet();	  final    Set    options    =    prefixes.keySet();    	non-compiled	[CE]  illegal  start  of  expression	45	None	replace
105	[BUG]  [BUGGY]  final  List  options  =  optionMap.getOptions(newPrefixes);  [CE]  illegal  start  of  expression  [FE]              OptionException      [CONTEXT]        final  List  newAnonymous  =  new  ArrayList();  final  SortedMap  newOptionMap  =  new  TreeMap(ReverseStringComparator.getInstance());  final  Set  newPrefixes  =  new  HashSet();        [BUGGY]  final  List  options  =  optionMap.getOptions(newPrefixes);  [BUGGY]      for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {  final  Option  option  =  (Option)  i.next();  option.setParent(this);  if  (option  instanceof  Argument)  {  i.remove();  newAnonymous.add(option);  }  else  {  final  Set  triggers  =  option.getTriggers();  for  (Iterator  j  =  triggers.iterator();  j.hasNext();)  {  [CLASS]  GroupImpl  [METHOD]  <init>  [RETURN_TYPE]  String,int,int,boolean)  List  options  String  name  String  description  final  int  minimum  final  int  maximum  final  boolean  required  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  required  SortedMap  newOptionMap  optionMap  Iterator  i  j  List  anonymous  newAnonymous  options  Option  option  String  description  name  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	92	92	1	replace	final  List  options  =  optionMap.getOptions(newPrefixes);	  final    List    options    =    optionMap.getOptions();    	non-compiled	[CE]  illegal  start  of  expression	32	None	replace
106	[BUG]  [BUGGY]  final  Set  options  =  new  TreeSet(ReverseStringComparator.getInstance());  [CE]  illegal  start  of  expression  [FE]                OptionException      [CONTEXT]        final  List  newAnonymous  =  new  ArrayList();  final  SortedMap  newOptionMap  =  new  TreeMap(ReverseStringComparator.getInstance());  final  Set  newPrefixes  =  new  HashSet();        [BUGGY]  final  Set  options  =  new  TreeSet(ReverseStringComparator.getInstance());  [BUGGY]      for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {  final  Option  option  =  (Option)  i.next();  option.setParent(this);  if  (option  instanceof  Argument)  {  i.remove();  newAnonymous.add(option);  }  else  {  final  Set  triggers  =  option.getTriggers();  for  (Iterator  j  =  triggers.iterator();  j.hasNext();)  {  [CLASS]  GroupImpl  [METHOD]  <init>  [RETURN_TYPE]  String,int,int,boolean)  List  options  String  name  String  description  final  int  minimum  final  int  maximum  final  boolean  required  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  required  SortedMap  newOptionMap  optionMap  Iterator  i  j  List  anonymous  newAnonymous  options  Option  option  String  description  name  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	92	92	1	replace	final  Set  options  =  new  TreeSet(ReverseStringComparator.getInstance());	  final    Set    options    =    new    TreeSet();    	non-compiled	[CE]  illegal  start  of  expression	27	None	replace
107	[BUG]  [BUGGY]  final  List  options  =  optionMap.list();  [CE]  illegal  start  of  expression  [FE]                  OptionException      [CONTEXT]        final  List  newAnonymous  =  new  ArrayList();  final  SortedMap  newOptionMap  =  new  TreeMap(ReverseStringComparator.getInstance());  final  Set  newPrefixes  =  new  HashSet();        [BUGGY]  final  List  options  =  optionMap.list();  [BUGGY]      for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {  final  Option  option  =  (Option)  i.next();  option.setParent(this);  if  (option  instanceof  Argument)  {  i.remove();  newAnonymous.add(option);  }  else  {  final  Set  triggers  =  option.getTriggers();  for  (Iterator  j  =  triggers.iterator();  j.hasNext();)  {  [CLASS]  GroupImpl  [METHOD]  <init>  [RETURN_TYPE]  String,int,int,boolean)  List  options  String  name  String  description  final  int  minimum  final  int  maximum  final  boolean  required  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  required  SortedMap  newOptionMap  optionMap  Iterator  i  j  List  anonymous  newAnonymous  options  Option  option  String  description  name  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	92	92	1	replace	final  List  options  =  optionMap.list();	  final    List    options    =    newOptionMap.list();    	non-compiled	[CE]  illegal  start  of  expression	46	None	replace
108	[BUG]  [BUGGY]  final  Option  option  =  options.getOption(name,  prefixes,  required);  [CE]  illegal  start  of  expression  [FE]                  OptionException      [CONTEXT]        final  List  newAnonymous  =  new  ArrayList();  final  SortedMap  newOptionMap  =  new  TreeMap(ReverseStringComparator.getInstance());  final  Set  newPrefixes  =  new  HashSet();        [BUGGY]  final  Option  option  =  options.getOption(name,  prefixes,  required);  [BUGGY]      for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {  final  Option  option  =  (Option)  i.next();  option.setParent(this);  if  (option  instanceof  Argument)  {  i.remove();  newAnonymous.add(option);  }  else  {  final  Set  triggers  =  option.getTriggers();  for  (Iterator  j  =  triggers.iterator();  j.hasNext();)  {  [CLASS]  GroupImpl  [METHOD]  <init>  [RETURN_TYPE]  String,int,int,boolean)  List  options  String  name  String  description  final  int  minimum  final  int  maximum  final  boolean  required  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  required  SortedMap  newOptionMap  optionMap  Iterator  i  j  List  anonymous  newAnonymous  options  Option  option  String  description  name  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	92	92	1	replace	final  Option  option  =  options.getOption(name,  prefixes,  required);	  final    Option    option    =    options.getOption(name,    prefixes);    	non-compiled	[CE]  illegal  start  of  expression	47	None	replace
109	[BUG]  [BUGGY]  final  Set  options  =  new  HashSet(newOptionMap);  [CE]  illegal  start  of  expression  [FE]            OptionException      [CONTEXT]        final  List  newAnonymous  =  new  ArrayList();  final  SortedMap  newOptionMap  =  new  TreeMap(ReverseStringComparator.getInstance());  final  Set  newPrefixes  =  new  HashSet();        [BUGGY]  final  Set  options  =  new  HashSet(newOptionMap);  [BUGGY]      for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {  final  Option  option  =  (Option)  i.next();  option.setParent(this);  if  (option  instanceof  Argument)  {  i.remove();  newAnonymous.add(option);  }  else  {  final  Set  triggers  =  option.getTriggers();  for  (Iterator  j  =  triggers.iterator();  j.hasNext();)  {  [CLASS]  GroupImpl  [METHOD]  <init>  [RETURN_TYPE]  String,int,int,boolean)  List  options  String  name  String  description  final  int  minimum  final  int  maximum  final  boolean  required  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  required  SortedMap  newOptionMap  optionMap  Iterator  i  j  List  anonymous  newAnonymous  options  Option  option  String  description  name  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	92	92	1	replace	final  Set  options  =  new  HashSet(newOptionMap);	  final    Set    options    =    new    HashSet(optionMap);    	non-compiled	[CE]  illegal  start  of  expression	58	None	replace
110	[BUG]  [BUGGY]  For(final  Iterator  i  =  allPrefixes.iterator();  i.hasNext();)  {  [CE]  illegal  start  of  expression  [FE]            OptionException      [CONTEXT]        final  List  newAnonymous  =  new  ArrayList();  final  SortedMap  newOptionMap  =  new  TreeMap(ReverseStringComparator.getInstance());  final  Set  newPrefixes  =  new  HashSet();        [BUGGY]  For(final  Iterator  i  =  allPrefixes.iterator();  i.hasNext();)  {  [BUGGY]      final  Option  option  =  (Option)  i.next();  option.setParent(this);  if  (option  instanceof  Argument)  {  i.remove();  newAnonymous.add(option);  }  else  {  final  Set  triggers  =  option.getTriggers();  for  (Iterator  j  =  triggers.iterator();  j.hasNext();)  {  [CLASS]  GroupImpl  [METHOD]  <init>  [RETURN_TYPE]  String,int,int,boolean)  List  options  String  name  String  description  final  int  minimum  final  int  maximum  final  boolean  required  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  required  SortedMap  newOptionMap  optionMap  Iterator  i  j  List  anonymous  newAnonymous  options  Option  option  String  description  name  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	92	92	1	replace	For(final  Iterator  i  =  allPrefixes.iterator();  i.hasNext();)  {	  For(final    Iterator    i    =    prefixes.iterator();    i.hasNext();)    {    	non-compiled	[CE]  illegal  start  of  expression	59	None	replace
111	[BUG]  [BUGGY]  final  Option  option  =(Option)newPrefixes.get(required);  [CE]  illegal  start  of  expression  [FE]                        OptionException      [CONTEXT]        final  List  newAnonymous  =  new  ArrayList();  final  SortedMap  newOptionMap  =  new  TreeMap(ReverseStringComparator.getInstance());  final  Set  newPrefixes  =  new  HashSet();        [BUGGY]  final  Option  option  =(Option)newPrefixes.get(required);  [BUGGY]      final  Option  option  =  (Option)  i.next();  option.setParent(this);  if  (option  instanceof  Argument)  {  i.remove();  newAnonymous.add(option);  }  else  {  final  Set  triggers  =  option.getTriggers();  for  (Iterator  j  =  triggers.iterator();  j.hasNext();)  {  [CLASS]  GroupImpl  [METHOD]  <init>  [RETURN_TYPE]  String,int,int,boolean)  List  options  String  name  String  description  final  int  minimum  final  int  maximum  final  boolean  required  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  required  SortedMap  newOptionMap  optionMap  Iterator  i  j  List  anonymous  newAnonymous  options  Option  option  String  description  name  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	92	92	1	replace	final  Option  option  =(Option)newPrefixes.get(required);	  final    Option    option    =(Option)newPrefixes.get(0);    	non-compiled	[CE]  illegal  start  of  expression	4	None	replace
112	[BUG]  [BUGGY]  final  Option  option  =(Option)newPrefixes.get(1);  [CE]  illegal  start  of  expression  [FE]                          OptionException      [CONTEXT]        final  List  newAnonymous  =  new  ArrayList();  final  SortedMap  newOptionMap  =  new  TreeMap(ReverseStringComparator.getInstance());  final  Set  newPrefixes  =  new  HashSet();        [BUGGY]  final  Option  option  =(Option)newPrefixes.get(1);  [BUGGY]      final  Option  option  =  (Option)  i.next();  option.setParent(this);  if  (option  instanceof  Argument)  {  i.remove();  newAnonymous.add(option);  }  else  {  final  Set  triggers  =  option.getTriggers();  for  (Iterator  j  =  triggers.iterator();  j.hasNext();)  {  [CLASS]  GroupImpl  [METHOD]  <init>  [RETURN_TYPE]  String,int,int,boolean)  List  options  String  name  String  description  final  int  minimum  final  int  maximum  final  boolean  required  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  required  SortedMap  newOptionMap  optionMap  Iterator  i  j  List  anonymous  newAnonymous  options  Option  option  String  description  name  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	92	92	1	replace	final  Option  option  =(Option)newPrefixes.get(1);	  final    Option    option    =(Option)newPrefixes.get(0);    	non-compiled	[CE]  illegal  start  of  expression	4	None	replace
113	[BUG]  [BUGGY]  final  Option  option  =  options.getOption(this,  prefixes,  required);  [CE]  illegal  start  of  expression  [FE]                      OptionException      [CONTEXT]        final  List  newAnonymous  =  new  ArrayList();  final  SortedMap  newOptionMap  =  new  TreeMap(ReverseStringComparator.getInstance());  final  Set  newPrefixes  =  new  HashSet();        [BUGGY]  final  Option  option  =  options.getOption(this,  prefixes,  required);  [BUGGY]      for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {  final  Option  option  =  (Option)  i.next();  option.setParent(this);  if  (option  instanceof  Argument)  {  i.remove();  newAnonymous.add(option);  }  else  {  final  Set  triggers  =  option.getTriggers();  for  (Iterator  j  =  triggers.iterator();  j.hasNext();)  {  [CLASS]  GroupImpl  [METHOD]  <init>  [RETURN_TYPE]  String,int,int,boolean)  List  options  String  name  String  description  final  int  minimum  final  int  maximum  final  boolean  required  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  required  SortedMap  newOptionMap  optionMap  Iterator  i  j  List  anonymous  newAnonymous  options  Option  option  String  description  name  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	92	92	1	replace	final  Option  option  =  options.getOption(this,  prefixes,  required);	  final    Option    option    =    options.getOption(this,    prefixes);    	non-compiled	[CE]  illegal  start  of  expression	8	None	replace
114	[BUG]  [BUGGY]  final  Option  option  =  options.getOption(this,  prefixes,  newPrefixes);  [CE]  illegal  start  of  expression  [FE]                        OptionException      [CONTEXT]        final  List  newAnonymous  =  new  ArrayList();  final  SortedMap  newOptionMap  =  new  TreeMap(ReverseStringComparator.getInstance());  final  Set  newPrefixes  =  new  HashSet();        [BUGGY]  final  Option  option  =  options.getOption(this,  prefixes,  newPrefixes);  [BUGGY]      for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {  final  Option  option  =  (Option)  i.next();  option.setParent(this);  if  (option  instanceof  Argument)  {  i.remove();  newAnonymous.add(option);  }  else  {  final  Set  triggers  =  option.getTriggers();  for  (Iterator  j  =  triggers.iterator();  j.hasNext();)  {  [CLASS]  GroupImpl  [METHOD]  <init>  [RETURN_TYPE]  String,int,int,boolean)  List  options  String  name  String  description  final  int  minimum  final  int  maximum  final  boolean  required  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  required  SortedMap  newOptionMap  optionMap  Iterator  i  j  List  anonymous  newAnonymous  options  Option  option  String  description  name  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	92	92	1	replace	final  Option  option  =  options.getOption(this,  prefixes,  newPrefixes);	  final    Option    option    =    options.getOption(this,    prefixes);    	non-compiled	[CE]  illegal  start  of  expression	8	None	replace
115	[BUG]  [BUGGY]  Option  option  =(Option)newOptionMap.get(name,  newPrefixes);  [CE]  illegal  start  of  expression  [FE]                    OptionException      [CONTEXT]        final  List  newAnonymous  =  new  ArrayList();  final  SortedMap  newOptionMap  =  new  TreeMap(ReverseStringComparator.getInstance());  final  Set  newPrefixes  =  new  HashSet();        [BUGGY]  Option  option  =(Option)newOptionMap.get(name,  newPrefixes);  [BUGGY]      final  Option  option  =  (Option)  i.next();  option.setParent(this);  if  (option  instanceof  Argument)  {  i.remove();  newAnonymous.add(option);  }  else  {  final  Set  triggers  =  option.getTriggers();  for  (Iterator  j  =  triggers.iterator();  j.hasNext();)  {  [CLASS]  GroupImpl  [METHOD]  <init>  [RETURN_TYPE]  String,int,int,boolean)  List  options  String  name  String  description  final  int  minimum  final  int  maximum  final  boolean  required  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  required  SortedMap  newOptionMap  optionMap  Iterator  i  j  List  anonymous  newAnonymous  options  Option  option  String  description  name  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	92	92	1	replace	Option  option  =(Option)newOptionMap.get(name,  newPrefixes);	  Option    option    =(Option)newOptionMap.get(name);    	non-compiled	[CE]  illegal  start  of  expression	54	None	replace
116	[BUG]  [BUGGY]  Option  option  =(Option)newOptionMap.get(name  -  1);  [CE]  illegal  start  of  expression  [FE]                      OptionException      [CONTEXT]        final  List  newAnonymous  =  new  ArrayList();  final  SortedMap  newOptionMap  =  new  TreeMap(ReverseStringComparator.getInstance());  final  Set  newPrefixes  =  new  HashSet();        [BUGGY]  Option  option  =(Option)newOptionMap.get(name  -  1);  [BUGGY]      final  Option  option  =  (Option)  i.next();  option.setParent(this);  if  (option  instanceof  Argument)  {  i.remove();  newAnonymous.add(option);  }  else  {  final  Set  triggers  =  option.getTriggers();  for  (Iterator  j  =  triggers.iterator();  j.hasNext();)  {  [CLASS]  GroupImpl  [METHOD]  <init>  [RETURN_TYPE]  String,int,int,boolean)  List  options  String  name  String  description  final  int  minimum  final  int  maximum  final  boolean  required  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  required  SortedMap  newOptionMap  optionMap  Iterator  i  j  List  anonymous  newAnonymous  options  Option  option  String  description  name  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	92	92	1	replace	Option  option  =(Option)newOptionMap.get(name  -  1);	  Option    option    =(Option)newOptionMap.get(name);    	non-compiled	[CE]  illegal  start  of  expression	54	None	replace
117	[BUG]  [BUGGY]  newAnonymous.addAll(optionMap);  [CE]  illegal  start  of  expression  [FE]                      OptionException      [CONTEXT]        final  List  newAnonymous  =  new  ArrayList();  final  SortedMap  newOptionMap  =  new  TreeMap(ReverseStringComparator.getInstance());  final  Set  newPrefixes  =  new  HashSet();        [BUGGY]  newAnonymous.addAll(optionMap);  [BUGGY]      final  Option  option  =  (Option)  i.next();  option.setParent(this);  if  (option  instanceof  Argument)  {  i.remove();  newAnonymous.add(option);  }  else  {  final  Set  triggers  =  option.getTriggers();  for  (Iterator  j  =  triggers.iterator();  j.hasNext();)  {  [CLASS]  GroupImpl  [METHOD]  <init>  [RETURN_TYPE]  String,int,int,boolean)  List  options  String  name  String  description  final  int  minimum  final  int  maximum  final  boolean  required  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  required  SortedMap  newOptionMap  optionMap  Iterator  i  j  List  anonymous  newAnonymous  options  Option  option  String  description  name  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	92	92	1	replace	newAnonymous.addAll(optionMap);	  newAnonymous.addAll(prefixes);    	non-compiled	[CE]  illegal  start  of  expression	3	None	replace
118	[BUG]  [BUGGY]  final  Set  options  =  prefixes!=  null?  newPrefixes.keySet()  :  newPrefixes;  [CE]  illegal  start  of  expression  [FE]                OptionException      [CONTEXT]        final  List  newAnonymous  =  new  ArrayList();  final  SortedMap  newOptionMap  =  new  TreeMap(ReverseStringComparator.getInstance());  final  Set  newPrefixes  =  new  HashSet();        [BUGGY]  final  Set  options  =  prefixes!=  null?  newPrefixes.keySet()  :  newPrefixes;  [BUGGY]      for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {  final  Option  option  =  (Option)  i.next();  option.setParent(this);  if  (option  instanceof  Argument)  {  i.remove();  newAnonymous.add(option);  }  else  {  final  Set  triggers  =  option.getTriggers();  for  (Iterator  j  =  triggers.iterator();  j.hasNext();)  {  [CLASS]  GroupImpl  [METHOD]  <init>  [RETURN_TYPE]  String,int,int,boolean)  List  options  String  name  String  description  final  int  minimum  final  int  maximum  final  boolean  required  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  required  SortedMap  newOptionMap  optionMap  Iterator  i  j  List  anonymous  newAnonymous  options  Option  option  String  description  name  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	92	92	1	replace	final  Set  options  =  prefixes!=  null?  newPrefixes.keySet()  :  newPrefixes;	  final    Set    options    =    newPrefixes!=    null?    newPrefixes.keySet()    :    prefixes;    	non-compiled	[CE]  illegal  start  of  expression	24	None	replace
119	[BUG]  [BUGGY]  final  Option  option  =(Option)newOptionMap.get(option);  [CE]  illegal  start  of  expression  [FE]                    OptionException      [CONTEXT]        final  List  newAnonymous  =  new  ArrayList();  final  SortedMap  newOptionMap  =  new  TreeMap(ReverseStringComparator.getInstance());  final  Set  newPrefixes  =  new  HashSet();        [BUGGY]  final  Option  option  =(Option)newOptionMap.get(option);  [BUGGY]      final  Option  option  =  (Option)  i.next();  option.setParent(this);  if  (option  instanceof  Argument)  {  i.remove();  newAnonymous.add(option);  }  else  {  final  Set  triggers  =  option.getTriggers();  for  (Iterator  j  =  triggers.iterator();  j.hasNext();)  {  [CLASS]  GroupImpl  [METHOD]  <init>  [RETURN_TYPE]  String,int,int,boolean)  List  options  String  name  String  description  final  int  minimum  final  int  maximum  final  boolean  required  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  required  SortedMap  newOptionMap  optionMap  Iterator  i  j  List  anonymous  newAnonymous  options  Option  option  String  description  name  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	92	92	1	replace	final  Option  option  =(Option)newOptionMap.get(option);	  final    Option    option    =(Option)newOptionMap.get(this);    	non-compiled	[CE]  illegal  start  of  expression	51	None	replace
120	[BUG]  [BUGGY]  for(Iterator  i  =  options.iterator();  i.hasNext();)  {  [CE]  illegal  start  of  expression  [FE]            OptionException      [CONTEXT]        final  List  newAnonymous  =  new  ArrayList();  final  SortedMap  newOptionMap  =  new  TreeMap(ReverseStringComparator.getInstance());  final  Set  newPrefixes  =  new  HashSet();        [BUGGY]  for(Iterator  i  =  options.iterator();  i.hasNext();)  {  [BUGGY]      final  Option  option  =  (Option)  i.next();  option.setParent(this);  if  (option  instanceof  Argument)  {  i.remove();  newAnonymous.add(option);  }  else  {  final  Set  triggers  =  option.getTriggers();  for  (Iterator  j  =  triggers.iterator();  j.hasNext();)  {  [CLASS]  GroupImpl  [METHOD]  <init>  [RETURN_TYPE]  String,int,int,boolean)  List  options  String  name  String  description  final  int  minimum  final  int  maximum  final  boolean  required  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  required  SortedMap  newOptionMap  optionMap  Iterator  i  j  List  anonymous  newAnonymous  options  Option  option  String  description  name  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	92	92	1	replace	for(Iterator  i  =  options.iterator();  i.hasNext();)  {	  for(Iterator    i    =    prefixes.iterator();    i.hasNext();)    {    	non-compiled	[CE]  illegal  start  of  expression	39	None	replace
121	[BUG]  [BUGGY]  final  Option  option  =(Option)newOptionMap.get(name,  newPrefixes);  [CE]  illegal  start  of  expression  [FE]                      OptionException      [CONTEXT]        final  List  newAnonymous  =  new  ArrayList();  final  SortedMap  newOptionMap  =  new  TreeMap(ReverseStringComparator.getInstance());  final  Set  newPrefixes  =  new  HashSet();        [BUGGY]  final  Option  option  =(Option)newOptionMap.get(name,  newPrefixes);  [BUGGY]      final  Option  option  =  (Option)  i.next();  option.setParent(this);  if  (option  instanceof  Argument)  {  i.remove();  newAnonymous.add(option);  }  else  {  final  Set  triggers  =  option.getTriggers();  for  (Iterator  j  =  triggers.iterator();  j.hasNext();)  {  [CLASS]  GroupImpl  [METHOD]  <init>  [RETURN_TYPE]  String,int,int,boolean)  List  options  String  name  String  description  final  int  minimum  final  int  maximum  final  boolean  required  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  required  SortedMap  newOptionMap  optionMap  Iterator  i  j  List  anonymous  newAnonymous  options  Option  option  String  description  name  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	92	92	1	replace	final  Option  option  =(Option)newOptionMap.get(name,  newPrefixes);	  final    Option    option    =(Option)newOptionMap.get(name);    	non-compiled	[CE]  illegal  start  of  expression	52	None	replace
122	[BUG]  [BUGGY]  final  SortedMap  options  =  newOptionMap(ReverseStringComparator.getPrefix());  [CE]  illegal  start  of  expression  [FE]              OptionException      [CONTEXT]        final  List  newAnonymous  =  new  ArrayList();  final  SortedMap  newOptionMap  =  new  TreeMap(ReverseStringComparator.getInstance());  final  Set  newPrefixes  =  new  HashSet();        [BUGGY]  final  SortedMap  options  =  newOptionMap(ReverseStringComparator.getPrefix());  [BUGGY]      for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {  final  Option  option  =  (Option)  i.next();  option.setParent(this);  if  (option  instanceof  Argument)  {  i.remove();  newAnonymous.add(option);  }  else  {  final  Set  triggers  =  option.getTriggers();  for  (Iterator  j  =  triggers.iterator();  j.hasNext();)  {  [CLASS]  GroupImpl  [METHOD]  <init>  [RETURN_TYPE]  String,int,int,boolean)  List  options  String  name  String  description  final  int  minimum  final  int  maximum  final  boolean  required  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  required  SortedMap  newOptionMap  optionMap  Iterator  i  j  List  anonymous  newAnonymous  options  Option  option  String  description  name  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	92	92	1	replace	final  SortedMap  options  =  newOptionMap(ReverseStringComparator.getPrefix());	  final    SortedMap    options    =    newOptionMap(ReverseStringComparator.getDefault());    	non-compiled	[CE]  illegal  start  of  expression	6	None	replace
123	[BUG]  [BUGGY]  final  Set  options  =  newOptionMap(ReverseStringComparator.getDefault());  [CE]  illegal  start  of  expression  [FE]                  OptionException      [CONTEXT]        final  List  newAnonymous  =  new  ArrayList();  final  SortedMap  newOptionMap  =  new  TreeMap(ReverseStringComparator.getInstance());  final  Set  newPrefixes  =  new  HashSet();        [BUGGY]  final  Set  options  =  newOptionMap(ReverseStringComparator.getDefault());  [BUGGY]      for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {  final  Option  option  =  (Option)  i.next();  option.setParent(this);  if  (option  instanceof  Argument)  {  i.remove();  newAnonymous.add(option);  }  else  {  final  Set  triggers  =  option.getTriggers();  for  (Iterator  j  =  triggers.iterator();  j.hasNext();)  {  [CLASS]  GroupImpl  [METHOD]  <init>  [RETURN_TYPE]  String,int,int,boolean)  List  options  String  name  String  description  final  int  minimum  final  int  maximum  final  boolean  required  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  required  SortedMap  newOptionMap  optionMap  Iterator  i  j  List  anonymous  newAnonymous  options  Option  option  String  description  name  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	92	92	1	replace	final  Set  options  =  newOptionMap(ReverseStringComparator.getDefault());	  final    List    options    =    newOptionMap(ReverseStringComparator.getDefault());    	non-compiled	[CE]  illegal  start  of  expression	42	None	replace
124	[BUG]  [BUGGY]  final  Set  options  =  options.keySet();  [CE]  illegal  start  of  expression  [FE]                OptionException      [CONTEXT]        final  List  newAnonymous  =  new  ArrayList();  final  SortedMap  newOptionMap  =  new  TreeMap(ReverseStringComparator.getInstance());  final  Set  newPrefixes  =  new  HashSet();        [BUGGY]  final  Set  options  =  options.keySet();  [BUGGY]      for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {  final  Option  option  =  (Option)  i.next();  option.setParent(this);  if  (option  instanceof  Argument)  {  i.remove();  newAnonymous.add(option);  }  else  {  final  Set  triggers  =  option.getTriggers();  for  (Iterator  j  =  triggers.iterator();  j.hasNext();)  {  [CLASS]  GroupImpl  [METHOD]  <init>  [RETURN_TYPE]  String,int,int,boolean)  List  options  String  name  String  description  final  int  minimum  final  int  maximum  final  boolean  required  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  required  SortedMap  newOptionMap  optionMap  Iterator  i  j  List  anonymous  newAnonymous  options  Option  option  String  description  name  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	92	92	1	replace	final  Set  options  =  options.keySet();	  final    Set    options    =    optionMap.keySet();    	non-compiled	[CE]  illegal  start  of  expression	37	None	replace
125	[BUG]  [BUGGY]  final  Set  options  =  this.prefixes.values();  [CE]  illegal  start  of  expression  [FE]                OptionException      [CONTEXT]        final  List  newAnonymous  =  new  ArrayList();  final  SortedMap  newOptionMap  =  new  TreeMap(ReverseStringComparator.getInstance());  final  Set  newPrefixes  =  new  HashSet();        [BUGGY]  final  Set  options  =  this.prefixes.values();  [BUGGY]      for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {  final  Option  option  =  (Option)  i.next();  option.setParent(this);  if  (option  instanceof  Argument)  {  i.remove();  newAnonymous.add(option);  }  else  {  final  Set  triggers  =  option.getTriggers();  for  (Iterator  j  =  triggers.iterator();  j.hasNext();)  {  [CLASS]  GroupImpl  [METHOD]  <init>  [RETURN_TYPE]  String,int,int,boolean)  List  options  String  name  String  description  final  int  minimum  final  int  maximum  final  boolean  required  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  required  SortedMap  newOptionMap  optionMap  Iterator  i  j  List  anonymous  newAnonymous  options  Option  option  String  description  name  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	92	92	1	replace	final  Set  options  =  this.prefixes.values();	  final    Set    options    =    prefixes.values();    	non-compiled	[CE]  illegal  start  of  expression	49	None	replace
126	[BUG]  [BUGGY]  newOptionMap.put(name,  PrefixUtil.newPrefix(prefixes));  [CE]  illegal  start  of  expression  [FE]                  OptionException      [CONTEXT]        final  List  newAnonymous  =  new  ArrayList();  final  SortedMap  newOptionMap  =  new  TreeMap(ReverseStringComparator.getInstance());  final  Set  newPrefixes  =  new  HashSet();        [BUGGY]  newOptionMap.put(name,  PrefixUtil.newPrefix(prefixes));  [BUGGY]      final  Option  option  =  (Option)  i.next();  option.setParent(this);  if  (option  instanceof  Argument)  {  i.remove();  newAnonymous.add(option);  }  else  {  final  Set  triggers  =  option.getTriggers();  for  (Iterator  j  =  triggers.iterator();  j.hasNext();)  {  [CLASS]  GroupImpl  [METHOD]  <init>  [RETURN_TYPE]  String,int,int,boolean)  List  options  String  name  String  description  final  int  minimum  final  int  maximum  final  boolean  required  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  required  SortedMap  newOptionMap  optionMap  Iterator  i  j  List  anonymous  newAnonymous  options  Option  option  String  description  name  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	92	92	1	replace	newOptionMap.put(name,  PrefixUtil.newPrefix(prefixes));	  newOptionMap.put(name,    newPrefixes);    	non-compiled	[CE]  illegal  start  of  expression	50	None	replace
127	[BUG]  [BUGGY]  final  Option  option  =  this.options.getOption(this,  newPrefixes);  [CE]  illegal  start  of  expression  [FE]                      OptionException      [CONTEXT]        final  List  newAnonymous  =  new  ArrayList();  final  SortedMap  newOptionMap  =  new  TreeMap(ReverseStringComparator.getInstance());  final  Set  newPrefixes  =  new  HashSet();        [BUGGY]  final  Option  option  =  this.options.getOption(this,  newPrefixes);  [BUGGY]      for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {  final  Option  option  =  (Option)  i.next();  option.setParent(this);  if  (option  instanceof  Argument)  {  i.remove();  newAnonymous.add(option);  }  else  {  final  Set  triggers  =  option.getTriggers();  for  (Iterator  j  =  triggers.iterator();  j.hasNext();)  {  [CLASS]  GroupImpl  [METHOD]  <init>  [RETURN_TYPE]  String,int,int,boolean)  List  options  String  name  String  description  final  int  minimum  final  int  maximum  final  boolean  required  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  required  SortedMap  newOptionMap  optionMap  Iterator  i  j  List  anonymous  newAnonymous  options  Option  option  String  description  name  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	92	92	1	replace	final  Option  option  =  this.options.getOption(this,  newPrefixes);	  final    Option    option    =    options.getOption(this,    prefixes);    	non-compiled	[CE]  illegal  start  of  expression	8	None	replace
128	[BUG]  [BUGGY]  final  Option  option  =  options.getOption(name,  this,  description);  [CE]  illegal  start  of  expression  [FE]                    OptionException      [CONTEXT]        final  List  newAnonymous  =  new  ArrayList();  final  SortedMap  newOptionMap  =  new  TreeMap(ReverseStringComparator.getInstance());  final  Set  newPrefixes  =  new  HashSet();        [BUGGY]  final  Option  option  =  options.getOption(name,  this,  description);  [BUGGY]      for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {  final  Option  option  =  (Option)  i.next();  option.setParent(this);  if  (option  instanceof  Argument)  {  i.remove();  newAnonymous.add(option);  }  else  {  final  Set  triggers  =  option.getTriggers();  for  (Iterator  j  =  triggers.iterator();  j.hasNext();)  {  [CLASS]  GroupImpl  [METHOD]  <init>  [RETURN_TYPE]  String,int,int,boolean)  List  options  String  name  String  description  final  int  minimum  final  int  maximum  final  boolean  required  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  required  SortedMap  newOptionMap  optionMap  Iterator  i  j  List  anonymous  newAnonymous  options  Option  option  String  description  name  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	92	92	1	replace	final  Option  option  =  options.getOption(name,  this,  description);	  final    Option    option    =    options.getOption(this,    description);    	non-compiled	[CE]  illegal  start  of  expression	55	None	replace
129	[BUG]  [BUGGY]  final  Option  option  =  options.getOption(this,  newPrefixes,  description);  [CE]  illegal  start  of  expression  [FE]                    OptionException      [CONTEXT]        final  List  newAnonymous  =  new  ArrayList();  final  SortedMap  newOptionMap  =  new  TreeMap(ReverseStringComparator.getInstance());  final  Set  newPrefixes  =  new  HashSet();        [BUGGY]  final  Option  option  =  options.getOption(this,  newPrefixes,  description);  [BUGGY]      for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {  final  Option  option  =  (Option)  i.next();  option.setParent(this);  if  (option  instanceof  Argument)  {  i.remove();  newAnonymous.add(option);  }  else  {  final  Set  triggers  =  option.getTriggers();  for  (Iterator  j  =  triggers.iterator();  j.hasNext();)  {  [CLASS]  GroupImpl  [METHOD]  <init>  [RETURN_TYPE]  String,int,int,boolean)  List  options  String  name  String  description  final  int  minimum  final  int  maximum  final  boolean  required  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  required  SortedMap  newOptionMap  optionMap  Iterator  i  j  List  anonymous  newAnonymous  options  Option  option  String  description  name  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	92	92	1	replace	final  Option  option  =  options.getOption(this,  newPrefixes,  description);	  final    Option    option    =    options.getOption(this,    newPrefixes);    	non-compiled	[CE]  illegal  start  of  expression	7	None	replace
130	[BUG]  [BUGGY]  final  Set  options  =  new  HashSet(optionMap.keySet());  [CE]  illegal  start  of  expression  [FE]            OptionException      [CONTEXT]        final  List  newAnonymous  =  new  ArrayList();  final  SortedMap  newOptionMap  =  new  TreeMap(ReverseStringComparator.getInstance());  final  Set  newPrefixes  =  new  HashSet();        [BUGGY]  final  Set  options  =  new  HashSet(optionMap.keySet());  [BUGGY]      for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {  final  Option  option  =  (Option)  i.next();  option.setParent(this);  if  (option  instanceof  Argument)  {  i.remove();  newAnonymous.add(option);  }  else  {  final  Set  triggers  =  option.getTriggers();  for  (Iterator  j  =  triggers.iterator();  j.hasNext();)  {  [CLASS]  GroupImpl  [METHOD]  <init>  [RETURN_TYPE]  String,int,int,boolean)  List  options  String  name  String  description  final  int  minimum  final  int  maximum  final  boolean  required  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  required  SortedMap  newOptionMap  optionMap  Iterator  i  j  List  anonymous  newAnonymous  options  Option  option  String  description  name  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	92	92	1	replace	final  Set  options  =  new  HashSet(optionMap.keySet());	  final    Set    options    =    new    HashSet(optionMap);    	non-compiled	[CE]  illegal  start  of  expression	58	None	replace
131	[BUG]  [BUGGY]  Option  option  =  options.getOption(this,  description);  [CE]  illegal  start  of  expression  [FE]                        OptionException      [CONTEXT]        final  List  newAnonymous  =  new  ArrayList();  final  SortedMap  newOptionMap  =  new  TreeMap(ReverseStringComparator.getInstance());  final  Set  newPrefixes  =  new  HashSet();        [BUGGY]  Option  option  =  options.getOption(this,  description);  [BUGGY]      for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {  final  Option  option  =  (Option)  i.next();  option.setParent(this);  if  (option  instanceof  Argument)  {  i.remove();  newAnonymous.add(option);  }  else  {  final  Set  triggers  =  option.getTriggers();  for  (Iterator  j  =  triggers.iterator();  j.hasNext();)  {  [CLASS]  GroupImpl  [METHOD]  <init>  [RETURN_TYPE]  String,int,int,boolean)  List  options  String  name  String  description  final  int  minimum  final  int  maximum  final  boolean  required  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  required  SortedMap  newOptionMap  optionMap  Iterator  i  j  List  anonymous  newAnonymous  options  Option  option  String  description  name  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	92	92	1	replace	Option  option  =  options.getOption(this,  description);	  final    Option    option    =    options.getOption(this,    name);    	non-compiled	[CE]  illegal  start  of  expression	9	None	replace
132	[BUG]  [BUGGY]  final  Set  options  =  newSet.toArray(newSet);  [CE]  illegal  start  of  expression  [FE]                    OptionException      [CONTEXT]        final  List  newAnonymous  =  new  ArrayList();  final  SortedMap  newOptionMap  =  new  TreeMap(ReverseStringComparator.getInstance());  final  Set  newPrefixes  =  new  HashSet();        [BUGGY]  final  Set  options  =  newSet.toArray(newSet);  [BUGGY]      for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {  final  Option  option  =  (Option)  i.next();  option.setParent(this);  if  (option  instanceof  Argument)  {  i.remove();  newAnonymous.add(option);  }  else  {  final  Set  triggers  =  option.getTriggers();  for  (Iterator  j  =  triggers.iterator();  j.hasNext();)  {  [CLASS]  GroupImpl  [METHOD]  <init>  [RETURN_TYPE]  String,int,int,boolean)  List  options  String  name  String  description  final  int  minimum  final  int  maximum  final  boolean  required  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  required  SortedMap  newOptionMap  optionMap  Iterator  i  j  List  anonymous  newAnonymous  options  Option  option  String  description  name  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	92	92	1	replace	final  Set  options  =  newSet.toArray(newSet);	  final    Set    options    =    newSet.values();    	non-compiled	[CE]  illegal  start  of  expression	30	None	replace
133	[BUG]  [BUGGY]  final  List  options  =  optionMap.getOptions(this);  [CE]  illegal  start  of  expression  [FE]              OptionException      [CONTEXT]        final  List  newAnonymous  =  new  ArrayList();  final  SortedMap  newOptionMap  =  new  TreeMap(ReverseStringComparator.getInstance());  final  Set  newPrefixes  =  new  HashSet();        [BUGGY]  final  List  options  =  optionMap.getOptions(this);  [BUGGY]      for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {  final  Option  option  =  (Option)  i.next();  option.setParent(this);  if  (option  instanceof  Argument)  {  i.remove();  newAnonymous.add(option);  }  else  {  final  Set  triggers  =  option.getTriggers();  for  (Iterator  j  =  triggers.iterator();  j.hasNext();)  {  [CLASS]  GroupImpl  [METHOD]  <init>  [RETURN_TYPE]  String,int,int,boolean)  List  options  String  name  String  description  final  int  minimum  final  int  maximum  final  boolean  required  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  required  SortedMap  newOptionMap  optionMap  Iterator  i  j  List  anonymous  newAnonymous  options  Option  option  String  description  name  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	92	92	1	replace	final  List  options  =  optionMap.getOptions(this);	  final    List    options    =    optionMap.getOptions();    	non-compiled	[CE]  illegal  start  of  expression	32	None	replace
134	[BUG]  [BUGGY]  final  Set  options  =  new  TreeSet(ReverseStringComparator.getInstance(),  false);  [CE]  illegal  start  of  expression  [FE]                OptionException      [CONTEXT]        final  List  newAnonymous  =  new  ArrayList();  final  SortedMap  newOptionMap  =  new  TreeMap(ReverseStringComparator.getInstance());  final  Set  newPrefixes  =  new  HashSet();        [BUGGY]  final  Set  options  =  new  TreeSet(ReverseStringComparator.getInstance(),  false);  [BUGGY]      for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {  final  Option  option  =  (Option)  i.next();  option.setParent(this);  if  (option  instanceof  Argument)  {  i.remove();  newAnonymous.add(option);  }  else  {  final  Set  triggers  =  option.getTriggers();  for  (Iterator  j  =  triggers.iterator();  j.hasNext();)  {  [CLASS]  GroupImpl  [METHOD]  <init>  [RETURN_TYPE]  String,int,int,boolean)  List  options  String  name  String  description  final  int  minimum  final  int  maximum  final  boolean  required  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  required  SortedMap  newOptionMap  optionMap  Iterator  i  j  List  anonymous  newAnonymous  options  Option  option  String  description  name  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	92	92	1	replace	final  Set  options  =  new  TreeSet(ReverseStringComparator.getInstance(),  false);	  final    Set    options    =    new    TreeSet();    	non-compiled	[CE]  illegal  start  of  expression	27	None	replace
135	[BUG]  [BUGGY]  final  Option  option  =  options.getOption(defaultPrefixes);  [CE]  illegal  start  of  expression  [FE]                        OptionException      [CONTEXT]        final  List  newAnonymous  =  new  ArrayList();  final  SortedMap  newOptionMap  =  new  TreeMap(ReverseStringComparator.getInstance());  final  Set  newPrefixes  =  new  HashSet();        [BUGGY]  final  Option  option  =  options.getOption(defaultPrefixes);  [BUGGY]      for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {  final  Option  option  =  (Option)  i.next();  option.setParent(this);  if  (option  instanceof  Argument)  {  i.remove();  newAnonymous.add(option);  }  else  {  final  Set  triggers  =  option.getTriggers();  for  (Iterator  j  =  triggers.iterator();  j.hasNext();)  {  [CLASS]  GroupImpl  [METHOD]  <init>  [RETURN_TYPE]  String,int,int,boolean)  List  options  String  name  String  description  final  int  minimum  final  int  maximum  final  boolean  required  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  required  SortedMap  newOptionMap  optionMap  Iterator  i  j  List  anonymous  newAnonymous  options  Option  option  String  description  name  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	92	92	1	replace	final  Option  option  =  options.getOption(defaultPrefixes);	  final    Option    option    =    options.getOption(prefixes);    	non-compiled	[CE]  illegal  start  of  expression	21	None	replace
136	[BUG]  [BUGGY]  final  Option  option  =  options.getOption(name,  newPrefixes,  description);  [CE]  illegal  start  of  expression  [FE]                      OptionException      [CONTEXT]        final  List  newAnonymous  =  new  ArrayList();  final  SortedMap  newOptionMap  =  new  TreeMap(ReverseStringComparator.getInstance());  final  Set  newPrefixes  =  new  HashSet();        [BUGGY]  final  Option  option  =  options.getOption(name,  newPrefixes,  description);  [BUGGY]      for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {  final  Option  option  =  (Option)  i.next();  option.setParent(this);  if  (option  instanceof  Argument)  {  i.remove();  newAnonymous.add(option);  }  else  {  final  Set  triggers  =  option.getTriggers();  for  (Iterator  j  =  triggers.iterator();  j.hasNext();)  {  [CLASS]  GroupImpl  [METHOD]  <init>  [RETURN_TYPE]  String,int,int,boolean)  List  options  String  name  String  description  final  int  minimum  final  int  maximum  final  boolean  required  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  required  SortedMap  newOptionMap  optionMap  Iterator  i  j  List  anonymous  newAnonymous  options  Option  option  String  description  name  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	92	92	1	replace	final  Option  option  =  options.getOption(name,  newPrefixes,  description);	  final    Option    option    =    options.getOption(name,    newPrefixes);    	non-compiled	[CE]  illegal  start  of  expression	20	None	replace
137	[BUG]  [BUGGY]  final  Set  options  =  new  Prefixes();  [CE]  illegal  start  of  expression  [FE]            OptionException      [CONTEXT]        final  List  newAnonymous  =  new  ArrayList();  final  SortedMap  newOptionMap  =  new  TreeMap(ReverseStringComparator.getInstance());  final  Set  newPrefixes  =  new  HashSet();        [BUGGY]  final  Set  options  =  new  Prefixes();  [BUGGY]      for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {  final  Option  option  =  (Option)  i.next();  option.setParent(this);  if  (option  instanceof  Argument)  {  i.remove();  newAnonymous.add(option);  }  else  {  final  Set  triggers  =  option.getTriggers();  for  (Iterator  j  =  triggers.iterator();  j.hasNext();)  {  [CLASS]  GroupImpl  [METHOD]  <init>  [RETURN_TYPE]  String,int,int,boolean)  List  options  String  name  String  description  final  int  minimum  final  int  maximum  final  boolean  required  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  required  SortedMap  newOptionMap  optionMap  Iterator  i  j  List  anonymous  newAnonymous  options  Option  option  String  description  name  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	92	92	1	replace	final  Set  options  =  new  Prefixes();	  final    Set    options    =    prefixes.keySet();    	non-compiled	[CE]  illegal  start  of  expression	45	None	replace
138	[BUG]  [BUGGY]  final  Option  option  =  options.getOption(name,  description  +  1);  [CE]  illegal  start  of  expression  [FE]                    OptionException      [CONTEXT]        final  List  newAnonymous  =  new  ArrayList();  final  SortedMap  newOptionMap  =  new  TreeMap(ReverseStringComparator.getInstance());  final  Set  newPrefixes  =  new  HashSet();        [BUGGY]  final  Option  option  =  options.getOption(name,  description  +  1);  [BUGGY]      for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {  final  Option  option  =  (Option)  i.next();  option.setParent(this);  if  (option  instanceof  Argument)  {  i.remove();  newAnonymous.add(option);  }  else  {  final  Set  triggers  =  option.getTriggers();  for  (Iterator  j  =  triggers.iterator();  j.hasNext();)  {  [CLASS]  GroupImpl  [METHOD]  <init>  [RETURN_TYPE]  String,int,int,boolean)  List  options  String  name  String  description  final  int  minimum  final  int  maximum  final  boolean  required  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  required  SortedMap  newOptionMap  optionMap  Iterator  i  j  List  anonymous  newAnonymous  options  Option  option  String  description  name  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	92	92	1	replace	final  Option  option  =  options.getOption(name,  description  +  1);	  final    Option    option    =    options.getOption(name,    description);    	non-compiled	[CE]  illegal  start  of  expression	19	None	replace
