projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java152returnprefixes;
projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java152returnthis.prefixes;
projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java152if(prefixes!=null)returnnewPrefixes();if(prefixes==null){returnprefixes;}
projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java152if(prefixes!=null)returnnewPrefixes;if(prefixes==null){returnprefixes;}
projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java152if(prefixes!=null)returnnewPrefixes();if(prefixes!=null){returnprefixes;}
projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java152
projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java152PrefixesnewPrefixes=(Prefixes)this.prefixes.clone();
projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java152Prefixesprefixes=(Prefixes)this.prefixes.clone();
projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java152Prefixesprefixes=getPrefixes();
projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java152ArrayListnewPrefixes=Lists.newArrayList();
projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java152PrefixesnewPrefixes=getOptionMap().getPrefixes();
projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java152if(prefixes!=null){returnprefixes;}
projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java152if(prefixes!=null){returnnewPrefixes;}
projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java152if(prefixes!=null){returnPrefixes.EMPTY_SET;}
projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java152Preconditions.checkState(!prefixes.isEmpty());
projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java152Preconditions.checkNotNull(prefixes);
projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java152Preconditions.checkArgument(prefixes!=null);
projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java152Preconditions.checkArgument(prefixes==null);
projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java152Preconditions.checkState(!prefixes.contains(""));
projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java152Preconditions.checkState(!prefixes.containsKey(arg));
projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java152return(Set)this.prefixes;
projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java152if(prefixes==null){returnnewPrefixes;}
projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java152Preconditions.checkState(prefixes!=null);
projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java152Preconditions.checkState(prefixes==null);
projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java152ListnewPrefixes=Lists.newArrayList();
projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java152ArrayListprefixes=Lists.newArrayList();
projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java152ArrayListnewPrefixes=Lists.newArrayList(prefixes);
projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java152if(prefixes==null){returnPrefixes.EMPTY_SET;}
projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java152Set<Prefix>newPrefixes=Sets.newHashSet();
projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java152Set<Prefix>newPrefixes=Sets.newHashSet(prefixes);
projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java152this.prefixes=Prefixes.EMPTY_SET;
projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java152Prefixesprefixes=getOptionMap().getPrefixes();
projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java152PrefixesnewPrefixes=getOptionMap().getPrefixes(defaultName);
projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java152PrefixesnewPrefixes=getOptionMap().getPrefixes(this);
projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java152if(prefixes==null)returnnewPrefixes();if(prefixes==null){returnprefixes;}
projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java152if(prefixes==null)returnnewPrefixes();if(prefixes!=null){returnprefixes;}
projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java152if(newPrefixes==null)returnnewPrefixes();if(prefixes==null){returnprefixes;}
projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java152if(prefixes==null)returnnewPrefixes;if(prefixes==null){returnprefixes;}
projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java152if(newPrefixes!=null)returnprefixes;if(prefixes==null){returnprefixes;}
projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java152if(prefixes==null)returnnewPrefixes;if(prefixes!=null){returnprefixes;}
projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java152if(newPrefixes==null)returnprefixes;if(prefixes==null){returnprefixes;}
projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java152if(prefixes==null){returnthis.prefixes;}
projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java152PrefixesnewPrefixes=getPrefixes();
projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java152if(prefixes==null){returnnewArrayList();}
projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java152if(newPrefixes==null){returnprefixes;}
projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java152newPrefixes=Sets.newHashSet(prefixes);
projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java152newPrefixes=Sets.newHashSet();
projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java152return(this.prefixes==null)?null:this.prefixes;
projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java152return(this.prefixes!=null)?null:this.prefixes;
projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java152Prefixesprefixes=getPrefixes(null);
projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java152Prefixesprefixes=getPrefixes(defaultOptionMap);
projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java152Prefixesprefixes=getPrefixes(defaultName);
projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java152newAnonymous.addAll(prefixes);
projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java152Set<String>newPrefixes=Sets.newHashSet();setPrefixes(newPrefixes);
projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java152return(Set)this.prefixes.clone();
projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java152Set<String>newPrefixes=Sets.newHashSet();newPrefixes.addAll(prefixes);
projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java152if(newPrefixes==null)returnnewPrefixes();if(prefixes!=null){returnprefixes;}
projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java152Preconditions.checkState(!prefixes.contains("*"));
projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java152Preconditions.checkState(!prefixes.contains("n"));
projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java152Preconditions.checkState(!prefixes.containsKey(name));
projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java152Preconditions.checkState(!prefixes.containsKey(prefix));
projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java152Preconditions.checkState(!prefixes.containsKey(description));
projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java152if(newPrefixes!=null){returnprefixes;}
projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java152Preconditions.checkState(!prefixes.isEmpty()||!prefixes.isEmpty());
projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java152Preconditions.checkState(!prefixes.isEmpty()&&!prefixes.isEmpty());
projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java152Preconditions.checkState(!prefixes.isEmpty()&&prefixes.size()>minimum);
projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java152Prefixesprefixes=(Prefixes)prefixes.clone();
projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java152Prefixesprefixes=(Prefixes)super.prefixes.clone();
projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java152Prefixesprefixes=(Prefixes)this.prefixes.get(0);
projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java152PrefixesnewPrefixes=(Prefixes)prefixes.clone();
projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java152return(List)this.prefixes;
projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java152if(this.prefixes!=null){return(Set)this.prefixes;}
projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java152if(prefixes==null){returnprefixes;}
projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java152if(prefixes==null){returnPrefixes.EMPTY;}
projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java152if(prefixes==null)returnprefixes;if(prefixes==null){returnprefixes;}
projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java152PrefixesnewPrefixes=(Prefixes)this.prefixes.get(0);
projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java152Prefixesprefixes=getPrefixes(defaultAnonymousOptionMap);
projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java152if(this.prefixes!=null){return(List)this.prefixes;}
projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java152Preconditions.checkState(!prefixes.isEmpty(),prefixes.size());
projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java152PrefixesnewPrefixes=getOptionMap().getPrefixes(null);
projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java152PrefixesnewPrefixes=prefixes.values();
projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java152Preconditions.checkArgument(prefixes>=null);
projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java152Preconditions.checkState(!prefixes.contains("|"));
projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java152returnprefixes.values();
projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java152Preconditions.checkArgument(!prefixes.isEmpty());
projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java152return(Set)this.prefixes.values();
projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java152Prefixesprefixes=getPrefixes(this);
projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java152Prefixesprefixes=getPrefixes(defaultAnonymous);
projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java152if(prefixes==null)returnnewPrefixes();
projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java152if(newPrefixes!=null){returnPrefixes.EMPTY_SET;}
projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java152Preconditions.checkArgument(prefixes!=null&&prefixes.size()>maximum);
projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java152if(this.prefixes!=null){return(Set)this.prefixes;}else{Preconditions.checkState(this.prefixes==null);returnprefixes;}
projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java152Preconditions.checkState(prefixes.isEmpty());
projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java152Prefixesprefixes=(Prefixes)newPrefixes.clone();
projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java152Preconditions.checkState(!prefixes.contains("-"));
projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java152Setprefixes=Lists.newArrayList();
projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java152return(this.prefixes==null)?Collections.EMPTY_SET:prefixes;
projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java152returnnewPrefixes.values();
projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java152returnnewPrefixes(prefixes);
projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java152Set<String>newPrefixes=Sets.newHashSet();
projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java152PrefixesnewPrefixes=(Prefixes)super.prefixes.clone();
projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java152this.prefixes=Sets.newHashSet();
projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java152if(this.prefixes==null){returnprefixes;}
projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java152this.prefixes;
projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java152return(List)this.prefixes.values();
projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java152return(Set)this.prefixes.keySet();
projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java152return(Set)this.prefixes.get(0);
projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java152Setprefixes=Lists.newHashSet();
projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java152Listprefixes=Lists.newArrayList();
projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java152Set<String>newPrefixes=Sets.newHashSet(prefixes);
projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java152Prefixesprefixes=getOptionMap().getPrefixes(this);
projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java152PrefixesnewPrefixes=getOptionMap().getPrefixes(prefixes);
projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java152if(newPrefixes==null)returnprefixes;if(prefixes!=null){returnprefixes;}
projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java152Prefixesprefixes=getPrefixes(defaultName,minimum);
projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java152Prefixesprefixes=getPrefixes(defaultName,true);
projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java152Prefixesprefixes=getPrefixes(defaultName,null);
projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java152ArrayList<String>newPrefixes=Sets.newHashSet();
projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java152List<String>newPrefixes=Sets.newHashSet();
projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java152Preconditions.checkState(!prefixes.contains("-")||!prefixes.contains("-"));
projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java152Preconditions.checkState(prefixes.contains("-"));
projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java152Preconditions.checkState(this.prefixes==null);
projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java152Preconditions.checkState(this.prefixes==null);returnprefixes;
projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java152Preconditions.checkState(this.prefixes!=null);
projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java152Preconditions.checkState(this.prefixes!=null);returnprefixes;
projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java152Preconditions.checkArgument(prefixes!=null&&prefixes.size()>minimum);
projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java152Preconditions.checkArgument(prefixes!=null||prefixes.size()>maximum);
projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java152Preconditions.checkArgument(prefixes==null&&prefixes.size()>minimum);
projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java152Preconditions.checkArgument(prefixes==null||prefixes.size()>maximum);
projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java152if(newPrefixes!=null)returnprefixes;if(prefixes!=null){returnprefixes;}
projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java152if(newPrefixes==null)returnPrefixes.EMPTY;if(prefixes!=null){returnprefixes;}
projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java152Prefixesprefixes=getOptionMap().getPrefixes(defaultName);
projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java152Prefixesprefixes=getOptionMap().getPrefixes(null);
projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java152this.prefixes=newPrefixes;
projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java152Preconditions.checkState(!prefixes.containsKey(name+1));
projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java152Preconditions.checkState(!prefixes.containsKey(name)||!prefixes.containsKey(name));
projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java152returnnewPrefixes(this.prefixes);
projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java152returnnewPrefixes(prefixes,this.defaultOptionMap);
projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java152returnnewPrefixes(prefixes,getOptionMap());
projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java152returnnewPrefixes(prefixes,this.defaultPrefixes);
projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java152Prefixesprefixes=getPrefixes(defaultAnonymousOptionMap,options);
projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java152Prefixesprefixes=getPrefixes(this.defaultAnonymousOptionMap);
projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java152Prefixesprefixes=getPrefixes(newAnonymousOptionMap);
projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java152Prefixesprefixes=getPrefixes(defaultAnonymousOptionMap,defaultOptionMap);
projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java152if(prefixes==null)returnprefixes;if(prefixes!=null){returnprefixes;}
projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java152Preconditions.checkState(prefixes>=null);
projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java152if(this.prefixes==null)returnthis.prefixes;if(this.prefixes!=null)returnnewPrefixes();
projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java152if(this.prefixes!=null)returnthis.prefixes;if(this.prefixes!=null)returnnewPrefixes();
projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java152this.prefixes=Prefixes.EMPTY;
projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java152ArrayList<Prefix>newPrefixes=Sets.newHashSet(prefixes);
projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java152Set<Prefix>newPrefixes=Sets.newHashSet(prefixes,prefixes.size());
projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java152returnthis.prefixes.values();
projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java152returnthis.newPrefixes.values();
projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java152if(prefixes==null)returnPrefixes.EMPTY;if(prefixes!=null){returnprefixes;}
projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java152Prefixesprefixes=getPrefixes(this,newAnonymous);
projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java152Prefixesprefixes=getPrefixes(this,newAnonymousOptionMap);
projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java152Preconditions.checkState(!prefixes.contains("||"));
projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java152Preconditions.checkState(!prefixes.contains("<"));
projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java152return(List)this.prefixes.clone();
projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java152ArrayListprefixes=Lists.newArrayList(prefixes);
projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java152ArrayList<String>newPrefixes=Sets.newHashSet();setPrefixes(newPrefixes);
projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java152Set<String>newPrefixes=Sets.newHashSet();setPrefixes(prefixes);
projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java152Set<String>newPrefixes=Sets.newHashSet();setPrefixes(newPrefixes,prefixes);
projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java152if(newPrefixes==null)returnnewPrefixes();
projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java152if(prefixes==null||prefixes.size()==0)returnnewPrefixes();
projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java152Prefixesprefixes=(Prefixes)this.newPrefixes.clone();
projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java152Preconditions.checkState(!prefixes.isEmpty()||prefixes.size()>minimum);
projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java152Preconditions.checkState(!prefixes.isEmpty()&&prefixes.size()>maximum);
projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java152Preconditions.checkState(!prefixes.isEmpty()&&prefixes.size()==minimum);
projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java152Preconditions.checkState(prefixes.isEmpty()||prefixes.size()>minimum);
projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java152Preconditions.checkState(prefixes.isEmpty()||prefixes.isEmpty());
projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java152Preconditions.checkState(prefixes!=null||prefixes.isEmpty());
projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java152PrefixesnewPrefixes=(Prefixes)prefixes.get(0);
projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java152Prefixesprefixes=(Prefixes)this.prefixes.get(1);
projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java152Preconditions.checkState(prefixes.isEmpty()||!prefixes.isEmpty());
projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java152Preconditions.checkState(!prefixes.containsKey(this.prefixes));
projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java152return(prefixes==null)?Collections.EMPTY_SET:prefixes;
projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java152return(prefixes==null)?Collections.EMPTY_SET:this.prefixes;
projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java152return(prefixes==null)?Collections.EMPTY_SET:Prefixes.EMPTY_SET;
projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java152return(prefixes==null)?Collections.EMPTY_SET:newArrayList();
projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java152Prefixesprefixes=getPrefixes(defaultOptionMap,defaultOptionMap);
projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java152Prefixesprefixes=getPrefixes(defaultOptionMap,minimum);
projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java152Prefixesprefixes=getPrefixes(defaultOptionMap,true);
projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java152if(this.prefixes==null){return(Set)this.prefixes;}
projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java152if(this.prefixes==null){return(List)this.prefixes;}
projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java152Preconditions.checkArgument(!prefixes.isEmpty()||!prefixes.isEmpty());
projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java152Preconditions.checkArgument(!prefixes.isEmpty()&&!prefixes.isEmpty());
projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java152Prefixesprefixes=getPrefixes(defaultAnonymous,true);
projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java152Prefixesprefixes=getPrefixes(defaultAnonymous,defaultOptionMap);
projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java152Prefixesprefixes=getPrefixes(defaultAnonymous,false);
projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java152Prefixesprefixes=getPrefixes(defaultAnonymous,this);
projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java152Prefixesprefixes=(Prefixes)prefixes.get(0);
projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java152newPrefixes=Sets.newHashSet(prefixes,minimum);
projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java152newPrefixes=Sets.newHashSet(this.prefixes);
projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java152newPrefixes=Sets.newHashSet(prefixes,prefixes.size());
projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java152newPrefixes=Collections.newHashSet();
projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java152Prefixesprefixes=getOptionMap().getPrefixes(defaultName,minimum);
projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java152PrefixesnewPrefixes=getOptionMap().getPrefixes(defaultName,minimum);
projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java152PrefixesnewPrefixes=getOptionMap().getPrefixes(name);
projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java152Preconditions.checkState(prefixes.contains("*"));
projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java152Preconditions.checkState(!prefixes.contains("*));
projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java152PrefixesnewPrefixes=getPrefixes(null);
projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java152PrefixesnewPrefixes=getPrefixes(defaultName);
projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java152PrefixesnewPrefixes=getPrefixes().values();
projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java152Preconditions.checkState(!prefixes.containsKey(newPrefixes));
projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java152Preconditions.checkState(!prefixes.containsKey(defaultPrefix));
projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java152Preconditions.checkState(!prefixes.isEmpty(),prefixes.size()+1);
projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java152Preconditions.checkState(!prefixes.isEmpty(),prefixes.size()>minimum);
projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java152Preconditions.checkState(!prefixes.isEmpty(),prefixes.size()>1);
projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java152ArrayListnewPrefixes=Lists.newArrayList(this.prefixes);
projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java152ArrayListnewPrefixes=Lists.newArrayList(prefixes.size());
projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java152ArrayList<Prefix>newPrefixes=Sets.newHashSet();
projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java152finalSet<Prefix>newPrefixes=Sets.newHashSet();
projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java152Preconditions.checkState(!prefixes.contains("null"));
projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java152Preconditions.checkState(!prefixes.contains("default"));
projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java152PrefixesnewPrefixes=getOptionMap().getPrefixes(this,minimum);
projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java152Prefixesprefixes=getOptionMap().getPrefixes(this,minimum);
projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java152returnprefixes==null?null:prefixes.values();
projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java152returnprefixes!=null?null:prefixes.values();
projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java152Preconditions.checkState(!prefixes.isEmpty()||prefixes.isEmpty());
projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java152ListnewPrefixes=Lists.newArrayList(prefixes);
projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java152ArrayList<String>newPrefixes=Sets.newHashSet();newPrefixes.addAll(prefixes);
projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java152finalSet<String>newPrefixes=Sets.newHashSet();newPrefixes.addAll(prefixes);
projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java152Set<String>newPrefixes=Sets.newHashSet();prefixes.addAll(prefixes);
projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java152newAnonymous.addAll(this.prefixes);
projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java152newAnonymous.addAll(optionMap.getPrefixes());
projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java152newAnonymous.addAll(prefixes,options);
projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java152if(newPrefixes!=null)returnnewPrefixes();if(prefixes==null){returnprefixes;}
projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java152PrefixesnewPrefixes=this.prefixes.values();
projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java152PrefixesnewPrefixes=prefixes.keySet();
projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java152PrefixesnewPrefixes=prefixes.get("prefixes");
projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java152return(this.prefixes==null)?null:newHashSet<String>(this.prefixes);
projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java152this.prefixes=newArrayList<Prefixes.EMPTY_SET;
projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java152this.prefixes=Sets.EMPTY_SET;
projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java152this.prefixes=prefixes;
projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java152newPrefixes=Sets.newLinkedHashSet();
projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java152newPrefixes=Sets.newArrayList();
projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java152returnnewPrefixes(prefixes,this);
projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java152returnnewPrefixes(prefixes,true);
projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java152returnnewPrefixes(prefixes,null);
projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java152Prefixesprefixes=getPrefixes(null,null);
projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java152this.prefixes=newArrayList<Prefixes>();
projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java152this.prefixes=Sets.newHashSet(prefixes);
projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java152if(prefixes==null)returnPrefixes.EMPTY;if(prefixes==null){returnprefixes;}
projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java152if(this.prefixes==null){return(Set)this.prefixes;}else{Preconditions.checkState(this.prefixes==null);returnprefixes;}
projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java152if(prefixes==null){return(Set)this.prefixes;}else{Preconditions.checkState(this.prefixes==null);returnprefixes;}
projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java152ArrayListprefixes=Lists.newArrayList(this.prefixes);
projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java152Preconditions.checkState(!prefixes.isEmpty())&&!prefixes.isEmpty());
projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java152Preconditions.checkState(newPrefixes!=null);
projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java152Preconditions.checkState(newPrefixes==null);
projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java152returnPrefixes.EMPTY_SET;
projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java152Prefixesprefixes=getOptionMap().getPrefixes(defaultName,maximum);
projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java152Preconditions.checkState(prefixes!=null&&prefixes.isEmpty());
projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java152Preconditions.checkState(prefixes==null||prefixes.isEmpty());
projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java152Preconditions.checkState(prefixes!=null&&prefixes.size()>maximum);
projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java152Preconditions.checkState(!prefixes.containsKey(newPrefix));
projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java152SetnewPrefixes=Lists.newArrayList();
projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java152returnPredicates.newPrefixes();
projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java152returnPrefixes.prefixes();
projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java152Prefixesprefixes=getPrefixes(optionMap);
projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java152Prefixesprefixes=getPrefixes(defaultOptionMap,options);
projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java152PrefixesnewPrefixes=getPrefixes(defaultOptionMap);
projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java152finalSet<Prefix>newPrefixes=Sets.newHashSet(prefixes);
projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java152Prefix>newPrefixes=Sets.newHashSet(prefixes);
projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java152Preconditions.checkState(!prefixes.isEmpty(),prefixes.size()>maximum);
projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java152newAnonymous.addAll(optionMap);
projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java152if(this.prefixes==null){returnPrefixes.EMPTY_SET;}
projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java152finalSet<String>newPrefixes=Sets.newHashSet();
projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java152if(prefixes==null||prefixes.size()==1){returnnewArrayList();}
projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java152if(prefixes==null){returnprefixes.values();}
projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java152if(prefixes!=null){returnnewPrefixes();}
projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java152Preconditions.checkState(!prefixes.containsKey("-"));
projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java152Preconditions.checkState(!prefixes.contains("&nbsp;"));
projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java152if(prefixes!=null)returnnewPrefixes();
projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java152if(prefixes==null||prefixes.size()==1)returnnewPrefixes();
projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java152Preconditions.checkArgument(!prefixes.isEmpty()||prefix.isEmpty());
projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java152Setprefixes=Lists.newArrayList(prefixes);
projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java152if(prefixes==null){returnnewPrefixes();}
projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java152if(newPrefixes!=null)returnnewPrefixes();if(prefixes!=null){returnprefixes;}
projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java152Prefixesprefixes=getPrefixes(defaultAnonymous,options);
projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java152Prefixesprefixes=getPrefixes(this.defaultAnonymous);
projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java152return(this.prefixes==null)?null:newHashSet<String>();
projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java152Preconditions.checkState(!prefixes.contains("&&"));
projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java152Prefixesprefixes=getOptionMap().getPrefixes(null,null);
projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java152Prefix>newPrefixes=Sets.newHashSet();
projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java152Preconditions.checkState(!prefixes.contains("*")||!prefixes.contains("*"));
projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java152Preconditions.checkState(!prefixes.containsKey("*"));
projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java152Preconditions.checkState(!prefixes.contains("*")||prefixes.contains("*"));
projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java152return(ArrayList)this.prefixes.values();
projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java152PrefixesnewPrefixes=getOptionMap().getPrefixes(this,options);
projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java152Prefixesprefixes=getOptionMap().getPrefixes(this,options);
projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java152if(prefixes!=null)returnprefixes;if(prefixes==null){returnprefixes;}
projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java152if(prefixes!=null){returnnewSet();}
projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java152Preconditions.checkState(!prefixes.contains("-",prefixes));
projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java152Preconditions.checkState(!prefixes.contains("-",minimum));
projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java152Preconditions.checkState(!prefixes.contains("/"));
projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java152if(prefixes==null||prefixes.size()==1){returnPrefixes.EMPTY;}
projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java152if(prefixes==null||prefixes.size()<1){returnPrefixes.EMPTY;}
projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java152if(newPrefixes==null)returnthis;if(prefixes==null){returnprefixes;}
projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java152return(Set)this.prefixes.get(this.prefixes);
projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java152this.prefixes=newArrayList<Prefixes>(Prefixes.EMPTY_SET);
projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java152this.prefixes=newPrefixes(Prefixes.EMPTY_SET);
projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java152Preconditions.checkState(prefixes.isEmpty()&&prefixes.size()>maximum);
projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java152Prefixesprefixes=getPrefixes(this.defaultOptionMap);
projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java152Prefixesprefixes=getPrefixes(defaultOptionMap,this);
projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java152Prefixesprefixes=getPrefixes(this.optionMap);
projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java152if(prefixes==null){returnnewSet();}
projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java152if(prefixes==null){returnnewSetes;}
projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java152Prefixesprefixes=getOptionMap().getPrefixes(defaultName,true);
projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java152Prefixesprefixes=getOptionMap().getPrefixes(name);
projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java152PrefixesnewPrefixes=getOptionMap().getPrefixes(defaultName,true);
projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java152Preconditions.checkState(prefixes==null||prefixes.size()==1);
projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java152Preconditions.checkState(prefixes.containsKey(arg));
projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java152Preconditions.checkArgument(!prefixes.containsKey(name));
projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java152if(prefixes==null||prefixes.size()==0){returnnewArrayList();}
projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java152if(prefixes==null||prefixes.size()<1){returnnewArrayList();}
projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java152Preconditions.checkState(!prefixes.isEmpty()||prefixes.size()>maximum);
projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java152Prefixesprefixes=getPrefixes(this,newAnonymousOptionMap());
projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java152if(prefixes==null||prefixes.size()==1)returnnewPrefixes();if(prefixes!=null){returnprefixes;}
projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java152Prefixesprefixes=getOptionMap().getPrefixes(null,true);
projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java152Prefixesprefixes=getOptionMap().getPrefixes(this,newAnonymous);
projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java152Set<Prefix>newPrefixes=Sets.newHashSet(prefixes,prefixes);
projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java152if(this.prefixes==null){returnnewSet(this.prefixes);}
projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java152List<Prefix>newPrefixes=Sets.newHashSet();
projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java152Prefixesprefixes=getOptionMap().getPrefixes(defaultValue);
projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java152PrefixesnewPrefixes=getPrefixes(this);
projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java152Preconditions.checkArgument(prefixes.isEmpty());
projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java152Preconditions.checkArgument(prefixes==null&&prefixes.size()>maximum);
projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java152return(this.prefixes==null)?null:newSet(this.prefixes);
projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java152return(this.prefixes==null)?null:newHashSet<String>(this.prefixes.size());
projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java152Preconditions.checkState(this.prefixes.isEmpty());
projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java152Prefixesprefixes=getPrefixes(defaultAnonymous,defaultPrefixes);
projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java152PrefixesnewPrefixes=prefixes.toArray(newPrefixes);
projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java152Prefixesprefixes=getPrefixes(this.newAnonymousOptionMap);
projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java152returnprefixes==null?Collections.EMPTY_SET;
projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java152Prefixesprefixes=getPrefixes(null,true);
projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java152if(prefixes!=null)returnnewPrefixes;if(prefixes!=null){returnprefixes;}
projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java152Prefixesprefixes=getPrefixes(name);
projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java152Prefixesprefixes=getPrefixes(defaultName,this);
projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java152Prefixesprefixes=getPrefixes(this.defaultName);
projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java152Preconditions.checkArgument(!prefixes.containsKey(description));
projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java152newPrefixes=Sets.newHashSet(prefixes,prefixes);
projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java152if(prefixes==null){returnCollections.EMPTY_SET;}
projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java152return(this.prefixes==null)?newArrayList():this.prefixes;
projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java152if(prefixes==null||prefixes.size()==1){returnPrefixes.EMPTY_SET;}
projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java152finalSet<String>newPrefixes=Sets.newHashSet();setPrefixes(newPrefixes);
