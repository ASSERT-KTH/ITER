projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java80this.options=Collections.unmodifiableList(options);
projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java80this.options=Collections.unmodifiableList(optionMap);
projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java80if(optionMap!=null){this.options=Collections.unmodifiableList(options);}
projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java80this.options=Collections.unmodifiableList(options,required);
projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java80
projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java80Optionoption=optionMap.getOption(required);
projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java80Optionoption=optionMap.getOption(name);
projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java80Preconditions.checkNotNull(description);
projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java80Preconditions.checkState(required);
projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java80Optionoption=optionMap.getOption(default);
projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java80if(optionMap==null){this.options=Collections.unmodifiableList(options);}
projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java80Optionoption=optionMap.getOption("option");
projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java80Optionoption=optionMap.getOption(defaultName);
projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java80this.optionMap=Collections.unmodifiableList(optionMap);
projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java80this.optionMap=optionMap.getOptionMap();
projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java80Optionoption=optionMap.getOption(description);
projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java80i.remove();
projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java80Optionoption=optionMap.getOption(prefixes);
projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java80Optionoption=optionMap.getOption(required,required);
projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java80Optionoption=optionMap.getOption(option);
projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java80Optionoption=optionMap.getOption("option",required);
projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java80Optionoption=options.getOption("option");
projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java80Optionoption=optionMap.getOption("options");
projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java80Preconditions.checkState(!required);
projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java80Preconditions.checkState(required>required);
projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java80Preconditions.checkState(required,minimum);
projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java80Preconditions.checkNotNull(required);
projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java80Preconditions.checkNotNull(prefixes);
projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java80this.optionMap=Collections.unmodifiableList(optionMap,required);
projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java80if(optionMap!=null){this.optionMap=Collections.unmodifiableList(optionMap);}
projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java80this.optionMap=Collections.unmodifiableList(optionMap,options);
projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java80Optionoption=optionMap.getOption(default,required);
projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java80Optionoption=options.getOption(default);
projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java80j.remove();
projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java80i.removeChangeListener(this);
projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java80i.removeChild(j);
projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java80Optionoption=optionMap.getOption(defaultName,required);
projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java80this.options=Collections.unmodifiableList(optionMap,required);
projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java80if(optionMap!=null){this.options=Collections.unmodifiableList(optionMap);}
projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java80this.options=Collections.unmodifiableList(optionMap,options);
projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java80this.optionMap=options.getOptionMap();
projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java80this.optionMap=optionMap.getOptionMap(required);
projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java80this.optionMap=optionMap.cloneOptionMap();
projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java80Optionoption=options.getOption(description);
projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java80optionMap=Collections.unmodifiableList(options);
projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java80this.options=Collections.unmodifiableList(options,minimum);
projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java80this.options=Collections.unmodifiableList(options,required,prefixes);
projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java80this.options=Collections.unmodifiableList(options,maximum);
projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java80Optionoption=optionMap.getOption(name,required);
projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java80Optionoption=options.getOption(name);
projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java80this.options=Collections.unmodifiableList(options,options);
projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java80this.options=Collections.unmodifiableList(options,prefixes);
projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java80if(optionMap!=null){this.options=Sets.unmodifiableList(options);}
projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java80Optionoption=optionMap.getOption(defaultValue);
projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java80Optionoption=options.getOption(required);
projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java80Preconditions.checkArgument(description!=null);
projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java80i.remove(description);
projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java80i.set(description,required);
projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java80Preconditions.checkState(required,required);
projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java80Optionoption=optionsMap.getOption("option");
projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java80this.optionMap=optionMap.getOptionMap(option);
projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java80Optionoption=options.getOption(defaultName);
projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java80Optionoption=optionMap.getOption(this.description);
projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java80This.options=Collections.unmodifiableList(options);
projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java80Optionoption=optionMap.getOption(name,description);
projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java80ij.remove();
projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java80i.set(description);
projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java80if(optionMap!=null){this.optionMap=Collections.unmodifiableList(optionMap);}else{finalSortedMapnewOptionMap=newTreeMap(ReverseStringComparator.getInstance());returnnewOptionMap;}
projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java80if(optionMap!=null){this.optionMap=Collections.unmodifiableList(optionMap);}else{finalSortedMapnewOptionMap=newTreeMap(ReverseStringComparator.getInstance());options.addAll(newOptionMap);}
projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java80Preconditions.checkState(description!=null);
projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java80Optionoption=optionMap.getOption(default,description);
projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java80Optionoption=optionMap.getOption(default,true);
projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java80this.options=Collections.unmodifiableList(options,description);
projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java80Optionoption=optionMap.getOption(defaultName,false);
projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java80Optionoption=optionMap.getOption("option",description);
projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java80Optionoption=optionMap.getOption("option",null);
projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java80this.options=Collections.unmodifiableList(optionMap,description);
projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java80Preconditions.checkState(this.required);
projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java80this.options=Collections.unmodifiableList(options,minimum,required);
projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java80this.options=Collections.unmodifiableList(options,minimum+1);
projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java80Optionoption=optionMap.getOption("option","null");
projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java80Optionoption=options.getOption(default,required);
projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java80Optionoption=options.getOption(this.default);
projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java80finalSortedMapnewOptionMap=newTreeMap(ReverseStringComparator.getInstance());
projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java80finalSortedMapnewOptionMap=newTreeMap(ReverseStringComparator.getInstance());this.options=Collections.unmodifiableList(optionMap);
projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java80Optionoption=options.unmodifiableList(required);
projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java80optionMap=Collections.unmodifiableList(options,required);
projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java80this.options=Collections.unmodifiableList(options,description,required);
projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java80this.options=Collections.unmodifiableList(options,name);
projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java80Preconditions.checkState(!required,required);
projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java80Preconditions.checkState(!prefixes);
projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java80Optionoption=optionMap.getOption(default,false);
projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java80Optionoption=optionMap.getOption(required,true);
projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java80Optionoption=optionMap.getOption(this.default,true);
projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java80Optionoption=optionMap.getOption(default,true,required);
projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java80finalSortedMapnewOptionMap=newTreeMap(ReverseStringComparator.getInstance());options.addAll(newOptionMap);
projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java80if(required){if(optionMap!=null){this.optionMap=Collections.unmodifiableList(optionMap);}
projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java80if(i.hasChangeListener(this)){i.removeChangeListener(this);}
projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java80if(!required){i.removeChangeListener(this);}
projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java80j.removeChangeListener(this);
projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java80Optionoption=optionMap.getOption("option","required");
projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java80Optionoption=optionMap.getOption("option,",required);
projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java80j.removeChild(name);
projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java80Preconditions.checkState(required>minimum);
projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java80Preconditions.checkState(required>maximum);
projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java80Preconditions.checkState(minimum>required);
projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java80Preconditions.checkState(required<required);
projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java80i.removeChild(description);
projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java80i.removeChild(prefix);
projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java80i.removeChild(prefixes);
projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java80Optionoption=optionMap.getOption(defaultValue,required);
projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java80Optionoption=options.getOption(defaultValue);
projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java80Optionoption=optionMap.getOption(this.defaultValue);
projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java80this.optionMap=optionMap.getOptionMap(prefixes);
projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java80this.optionMap=optionMap.getOptionMap(default);
projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java80this.optionMap=options.getOptionMap(required);
projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java80Optionoption=optionMap.getOption(name,description,required);
projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java80Optionoption=options.getOption(name,description);
projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java80Optionoption=optionMap.getOption(name,description-1);
projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java80i.set(required);
projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java80Preconditions.checkState(this.required,required);
projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java80Preconditions.checkState(!this.required);
projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java80Optionoption=options.getOption(prefixes);
projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java80Optionoption=options.getOption(required,required);
projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java80Optionoption=options.getOption(name,required);
projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java80Optionoption=optionMap.getOption(defaultName,true);
projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java80Optionoption=optionMap.getOption(name,false);
projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java80Optionoption=options.getOption(defaultName,false);
projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java80Optionoption=optionMap.getOption(defaultName,false,required);
projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java80Preconditions.checkState(required,minimum+1);
projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java80Preconditions.checkState(minimum,required);
projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java80Preconditions.checkState(required,maximum);
projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java80Preconditions.checkState(required,minimum>maximum);
projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java80Optionoption=optionsMap.getOption("option",required);
projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java80Optionoption=optionsMap.getOption("options");
projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java80Optionoption=optionsMap.getOption("option",description);
projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java80Optionoption=optionMap.getOption(default,description,required);
projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java80Optionoption=options.getOption(default,description);
projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java80ij.removeChangeListener(this);
projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java80ij.removeChild(name);
projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java80ij.removeChild(description);
projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java80this.optionMap=optionMap.clone();
projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java80this.optionMap=options.cloneOptionMap();
projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java80this.optionMap=optionMap.cloneOrCreateOptionMap();
projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java80if(required){this.options=Collections.unmodifiableList(options,maximum);}
projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java80this.options=Collections.unmodifiableList(options,minimum,maximum);
projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java80Optionoption=options.getOption("options");
projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java80Optionoption=optionMap.getOption("options",required);
projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java80optionMap=Collections.unmodifiableList(optionMap);
projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java80if(optionMap!=null){this.optionMap=newTreeMap(ReverseStringComparator.getInstance());}
projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java80Optionoption=options.getOption(option);
projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java80if(options!=null){this.options=Collections.unmodifiableList(options,options);}
projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java80i.remove(name);
projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java80i.remove(this.description);
projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java80i.remove(prefix);
projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java80Optionoption=optionMap.getOption(name,minimum);
projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java80Optionoption=optionMap.getOption(name,maximum);
projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java80this.optionMap=Collections.unmodifiableList(optionMap,newOptionMap);
projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java80this.optionMap=Collections.unmodifiableList(optionMap,prefixes);
projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java80finalSortedMapnewOptionMap=newTreeMap(ReverseStringComparator.getInstance());returnnewOptionMap;
projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java80if(required){if(optionMap!=null){this.optionMap=Collections.unmodifiableList(optionMap);}else{finalSortedMapnewOptionMap=newTreeMap(ReverseStringComparator.getInstance());returnnewOpti
projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java80this.optionMap=Collections.unmodifiableList(optionMap,required,prefixes);
projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java80this.optionMap=Collections.unmodifiableList(optionMap,minimum);
projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java80Preconditions.checkState(required,minimal);
projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java80this.optionMap=options.getOptionMap(option);
projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java80Preconditions.checkNotNull(newPrefixes);
projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java80Preconditions.checkState(prefixes!=null);
projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java80this.options=Collections.unmodifiableList(options,triggers);
projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java80this.options=Collections.unmodifiableList(options,newPrefixes);
projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java80this.options=Collections.unmodifiableList(options,prefixes,required);
projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java80Optionoption=options.getOption(defaultName,required);
projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java80Optionoption=optionMap.getOption(defaultName,minimum);
projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java80Optionoption=optionMap.getOption(defaultName,maximum);
projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java80this.options=Collections.unmodifiableList(options,required,triggers);
projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java80this.options=Collections.unmodifiableList(options,triggers,required);
projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java80this.options=Collections.unmodifiableList(options,description,prefixes);
projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java80i.set(description,minimum);
projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java80i.set(required,description);
projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java80i.set(description,maximum);
projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java80this.optionMap=options!=null?options.getOptionMap():null;
projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java80Preconditions.checkState(this.description!=null);
projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java80Preconditions.checkState(description==null);
projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java80This.options=Collections.unmodifiableList(options,required);
projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java80This.options=Collections.unmodifiableList(optionMap);
projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java80this.options=Collections.unmodifiableList(optionMap,newOptionMap);
projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java80this.options=Collections.unmodifiableList(optionMap,prefixes);
projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java80Optionoption=options.getOption("option",required);
projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java80Optionoption=options.getOption("option",description);
projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java80Optionoption=optionMap.getOption("option","description");
projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java80Optionoption=options.getOption(this.description);
projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java80Optionoption=this.optionMap.getOption(this.description);
projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java80Optionoption=optionMap.getOption(this.description,required);
projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java80Optionoption=this.description.getOption(optionMap);
projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java80Optionoption=optionMap.getOption(prefixes,required);
projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java80Optionoption=optionMap.getOption(defaultPrefixes);
projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java80this.options=Collections.unmodifiableList(optionMap,required,prefixes);
projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java80this.options=Collections.unmodifiableList(optionMap,minimum);
projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java80this.options=Collections.unmodifiableList(optionMap,description,required);
projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java80this.options=Collections.unmodifiableList(optionMap,name);
projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java80this.options=Collections.unmodifiableList(optionMap,description&0xff);
projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java80this.options=Sets.unmodifiableList(options);
projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java80optionMap=Sets.unmodifiableList(options);
projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java80this.options=Sets.unmodifiableList(optionMap);
projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java80Preconditions.checkArgument(description==null);
projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java80Preconditions.checkArgument(this.description!=null);
projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java80Optionoption=optionMap.getOption(default,minimum);
projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java80Optionoption=optionMap.getOption(default,maximum);
projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java80Optionoption=optionMap.getOption(required,default);
projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java80Optionoption=optionMap.getOption(required,minimum);
projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java80Optionoption=optionMap.getOption(required,maximum);
projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java80Optionoption=optionMap.getOption(minimum,required);
projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java80Preconditions.checkState(required>0);
projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java80this.optionMap=optionMap.getOptionMap(defaultPrefixes);
projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java80Optionoption=optionMap.getOption("opts");
projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java80i.removeChild(name);
projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java80i.removeChild(this.description);
projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java80Preconditions.checkState(required,minimum-1);
projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java80Preconditions.checkArgument(description!=null&&description.length()>0);
projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java80Optionoption=optionsMap.getOption("opt");
projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java80Preconditions.checkState(required,required+minimum);
projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java80Optionoption=options.getOption(this.defaultName);
projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java80Preconditions.checkNotNull(prefixes,required);
projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java80this.options=Collections.unmodifiableList(optionMap,maximum);
projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java80j.remove(description);
projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java80j.remove(name);
projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java80if(optionMap!=null){This.options=Collections.unmodifiableList(options);}
projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java80i.addChangeListener(this);
projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java80i.setChangeListener(this);
projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java80i.removeChangeListener(listener);
projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java80OptionoptionMap=Collections.unmodifiableList(options);
projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java80OptionoptionMap=options.unmodifiableList(required);
projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java80this.options=Collections.unmodifiableList(optionMap,option);
projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java80if(optionMap==null){this.optionMap=Collections.unmodifiableList(optionMap);}else{finalSortedMapnewOptionMap=newTreeMap(ReverseStringComparator.getInstance());options.addAll(newOptionMap);}
projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java80ij.remove(description);
projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java80ij.setAnonymous(required);
projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java80if(optionMap==null){this.optionMap=Collections.unmodifiableList(optionMap);}else{finalSortedMapnewOptionMap=newTreeMap(ReverseStringComparator.getInstance());returnnewOptionMap;}
projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java80Optionoption=optionsMap.getOption(option);
projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java80Optionoption=optionMap.getOption(default,description-1);
projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java80Optionoption=optionsMap.getOption(this.description);
projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java80Optionoption=optionsMap.getOption(defaultName,false);
projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java80this.optionMap=Collections.unmodifiableList(optionMap,required+1);
projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java80this.optionMap=options.getOptionMap(options);
projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java80if(optionMap==null){this.options=Sets.unmodifiableList(options);}
projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java80finalSortedMapnewOptionMap=newOptionMap(ReverseStringComparator.getInstance());
projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java80finalSortedMapoptionMap=newOptionMap(ReverseStringComparator.getInstance());
projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java80Optionoption=optionMap.getOption(defaultValue,defaultValue);
projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java80Optionoption=optionMap.getOption(defaultValue,false);
projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java80j.removeChild(description);
projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java80if(optionMap!=null){this.options=Collections.unemodifiableList(optionMap);}
projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java80Optionoption=optionMap.getOption(description,required);
projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java80this.options=Collections.unmodifiableList(options,minimal);
projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java80this.optionMap=options!=null?options.getOptionMap():optionMap;
projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java80this.options=Collections.unmodifiableList(optionMap,description,options);
projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java80Optionoption=optionMap.getOption(default,required,description);
projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java80Preconditions.checkState(description!=null&&description.length()>0);
projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java80Optionoption=optionsMap.getOption("option",null);
projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java80This.optionMap=Collections.unmodifiableList(optionMap);
projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java80Optionoption=optionMap.getOption(defaultName,description);
projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java80if(required){this.optionMap=Collections.unmodifiableList(optionMap);}else{finalSortedMapnewOptionMap=newTreeMap(ReverseStringComparator.getInstance());options.addAll(newOptionMap);}
projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java80this.options=Collections.unmodifiableList(options,description,options);
projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java80Optionoption=optionMap.getOption(name,description+1);
projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java80this.optionMap=Collections.unmodifiableList(optionMap,description);
projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java80Optionoption=options.getOption(defaultName,description);
projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java80OptionoptionMap=Options.unmodifiableList(options);
projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java80this.optionMap=Collections.unmodifiableList(optionMap,required,description);
projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java80Optionoption=optionMap.getOption(default,null);
projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java80Optionoption=options.getOption(default,true);
projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java80Preconditions.checkState(required==required);
projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java80Optionoption=optionMap.getOption(this.description,description);
projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java80i.remove(0);
projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java80this.optionMap=optionMap.getOptionMap(defaultAnonymous);
projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java80this.optionMap=optionMap.getOptionMap(defaultValue);
projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java80Optionoption=optionMap.getOption("option",options);
projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java80This.options=Sets.unmodifiableList(options);
projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java80Preconditions.checkState(required,minimum>0);
projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java80Preconditions.checkState(required,required+1);
projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java80Optionoption=optionMap.getOption(description,default);
projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java80ij.setAnonymous(false);
projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java80Preconditions.checkArgument(required);
projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java80this.options=Collections.unmodifiableList(optionMap,required,description);
projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java80i.set(description,null);
projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java80if(optionMap!=null){this.options=Collections.unmodifiableList(optionMap,options);}
