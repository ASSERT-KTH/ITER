projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java80this.options=Collections.unmodifiableList(options);
projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java80this.options=Collections.unmodifiableList(optionMap);
projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java80if(optionMap!=null){this.options=Collections.unmodifiableList(options);}
projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java80this.options=Collections.unmodifiableList(options,required);
projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java80
projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java80Optionoption=optionMap.getOption(required);
projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java80Optionoption=optionMap.getOption(name);
projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java80Preconditions.checkNotNull(description);
projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java80Preconditions.checkState(required);
projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java80Optionoption=optionMap.getOption(default);
projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java80if(optionMap==null){this.options=Collections.unmodifiableList(options);}
projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java80Optionoption=optionMap.getOption("option");
projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java80Optionoption=optionMap.getOption(defaultName);
projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java80this.optionMap=Collections.unmodifiableList(optionMap);
projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java80this.optionMap=optionMap.getOptionMap();
projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java80Optionoption=optionMap.getOption(description);
projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java80i.remove();
projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java80Optionoption=optionMap.getOption(prefixes);
projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java80Optionoption=optionMap.getOption(required,required);
projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java80Optionoption=optionMap.getOption(option);
projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java80Optionoption=optionMap.getOption("option",required);
projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java80Optionoption=options.getOption("option");
projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java80Optionoption=optionMap.getOption("options");
projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java80Preconditions.checkState(!required);
projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java80Preconditions.checkState(required>required);
projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java80Preconditions.checkState(required,minimum);
projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java80Preconditions.checkNotNull(required);
projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java80Preconditions.checkNotNull(prefixes);
projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java80this.optionMap=Collections.unmodifiableList(optionMap,required);
projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java80if(optionMap!=null){this.optionMap=Collections.unmodifiableList(optionMap);}
projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java80this.optionMap=Collections.unmodifiableList(optionMap,options);
projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java80Optionoption=optionMap.getOption(default,required);
projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java80Optionoption=options.getOption(default);
projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java80j.remove();
projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java80i.removeChangeListener(this);
projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java80i.removeChild(j);
projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java80Optionoption=optionMap.getOption(defaultName,required);
projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java80this.options=Collections.unmodifiableList(optionMap,required);
projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java80if(optionMap!=null){this.options=Collections.unmodifiableList(optionMap);}
projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java80this.options=Collections.unmodifiableList(optionMap,options);
projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java80this.optionMap=options.getOptionMap();
projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java80this.optionMap=optionMap.getOptionMap(required);
projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java80this.optionMap=optionMap.cloneOptionMap();
projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java80Optionoption=options.getOption(description);
projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java80optionMap=Collections.unmodifiableList(options);
projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java80this.options=Collections.unmodifiableList(options,minimum);
projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java80this.options=Collections.unmodifiableList(options,required,prefixes);
projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java80this.options=Collections.unmodifiableList(options,maximum);
projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java80Optionoption=optionMap.getOption(name,required);
projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java80Optionoption=options.getOption(name);
projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java80this.options=Collections.unmodifiableList(options,options);
projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java80this.options=Collections.unmodifiableList(options,prefixes);
projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java80if(optionMap!=null){this.options=Sets.unmodifiableList(options);}
projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java80Optionoption=optionMap.getOption(defaultValue);
projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java80Optionoption=options.getOption(required);
projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java80Preconditions.checkArgument(description!=null);
projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java80i.remove(description);
projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java80i.set(description,required);
projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java80Preconditions.checkState(required,required);
projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java80Optionoption=optionsMap.getOption("option");
projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java80this.optionMap=optionMap.getOptionMap(option);
projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java80Optionoption=options.getOption(defaultName);
projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java80Optionoption=optionMap.getOption(this.description);
projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java80This.options=Collections.unmodifiableList(options);
projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java80Optionoption=optionMap.getOption(name,description);
projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java80ij.remove();
projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java80i.set(description);
projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java80if(optionMap!=null){this.optionMap=Collections.unmodifiableList(optionMap);}else{finalSortedMapnewOptionMap=newTreeMap(ReverseStringComparator.getInstance());returnnewOptionMap;}
projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java80if(optionMap!=null){this.optionMap=Collections.unmodifiableList(optionMap);}else{finalSortedMapnewOptionMap=newTreeMap(ReverseStringComparator.getInstance());options.addAll(newOptionMap);}
projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java80Preconditions.checkState(description!=null);
projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java80Optionoption=optionMap.getOption(default,description);
projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java80Optionoption=optionMap.getOption(default,true);
projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java80this.options=Collections.unmodifiableList(options,description);
projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java80Optionoption=optionMap.getOption(defaultName,false);
projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java80Optionoption=optionMap.getOption("option",description);
projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java80Optionoption=optionMap.getOption("option",null);
projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java80this.options=Collections.unmodifiableList(optionMap,description);
projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java80Preconditions.checkState(this.required);
