bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  final  Option  commandLine  =(Option)iter.next();  [CE]  illegal  start  of  expression  [FE]          OptionException    [CONTEXT]      if  (optionMap.containsKey(arg))  {  return  true;  }  final  Map  tailMap  =  optionMap.tailMap(arg);  for  (final  Iterator  iter  =  tailMap.values().iterator();  iter.hasNext();)  {    [BUGGY]  final  Option  commandLine  =(Option)iter.next();  [BUGGY]    final  Option  option  =  (Option)  iter.next();  if  (option.canProcess(commandLine,  arg))  {  return  true;  }  }  if  (looksLikeOption(commandLine,  arg))  {  return  false;  }  [CLASS]  GroupImpl  [METHOD]  canProcess  [RETURN_TYPE]  boolean  WriteableCommandLine  commandLine  String  arg  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  SortedMap  newOptionMap  optionMap  WriteableCommandLine  commandLine  Iterator  iter  List  anonymous  newAnonymous  options  Option  option  String  arg  description  name  Map  tailMap  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	132	132	1	replace	final  Option  commandLine  =(Option)iter.next();	      Option    commandLine    =(Option)iter.next();    	non-compiled	[CE]  illegal  start  of  expression	10	None	replace
2	[BUG]  [BUGGY]  Option  option  =(Option)iter.next();  if(option.canProcess(commandLine,  arg))  {  return  false;  }  [CE]  illegal  start  of  expression  [FE]            OptionException    [CONTEXT]      if  (optionMap.containsKey(arg))  {  return  true;  }  final  Map  tailMap  =  optionMap.tailMap(arg);  for  (final  Iterator  iter  =  tailMap.values().iterator();  iter.hasNext();)  {    [BUGGY]  Option  option  =(Option)iter.next();  if(option.canProcess(commandLine,  arg))  {  return  false;  }  [BUGGY]      if  (option.canProcess(commandLine,  arg))  {  return  true;  }  }  if  (looksLikeOption(commandLine,  arg))  {  return  false;  }  [CLASS]  GroupImpl  [METHOD]  canProcess  [RETURN_TYPE]  boolean  WriteableCommandLine  commandLine  String  arg  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  SortedMap  newOptionMap  optionMap  WriteableCommandLine  commandLine  Iterator  iter  List  anonymous  newAnonymous  options  Option  option  String  arg  description  name  Map  tailMap  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	132	132	1	replace	Option  option  =(Option)iter.next();  if(option.canProcess(commandLine,  arg))  {  return  false;  }	      	non-compiled	[CE]  illegal  start  of  expression	3	None	replace
3	[BUG]  [BUGGY]  String  commandLine  =(String)iter.next();  [CE]  illegal  start  of  expression  [FE]              OptionException    [CONTEXT]      if  (optionMap.containsKey(arg))  {  return  true;  }  final  Map  tailMap  =  optionMap.tailMap(arg);  for  (final  Iterator  iter  =  tailMap.values().iterator();  iter.hasNext();)  {    [BUGGY]  String  commandLine  =(String)iter.next();  [BUGGY]      if  (option.canProcess(commandLine,  arg))  {  return  true;  }  }  if  (looksLikeOption(commandLine,  arg))  {  return  false;  }  [CLASS]  GroupImpl  [METHOD]  canProcess  [RETURN_TYPE]  boolean  WriteableCommandLine  commandLine  String  arg  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  SortedMap  newOptionMap  optionMap  WriteableCommandLine  commandLine  Iterator  iter  List  anonymous  newAnonymous  options  Option  option  String  arg  description  name  Map  tailMap  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	132	132	1	replace	String  commandLine  =(String)iter.next();	      	non-compiled	[CE]  illegal  start  of  expression	3	None	replace
4	[BUG]  [BUGGY]  Option  option  =(Option)iter.next();  if(option.canProcess(commandLine,  arg))  {  return  true;  }  [CE]  illegal  start  of  expression  [FE]                OptionException    [CONTEXT]      if  (optionMap.containsKey(arg))  {  return  true;  }  final  Map  tailMap  =  optionMap.tailMap(arg);  for  (final  Iterator  iter  =  tailMap.values().iterator();  iter.hasNext();)  {    [BUGGY]  Option  option  =(Option)iter.next();  if(option.canProcess(commandLine,  arg))  {  return  true;  }  [BUGGY]      if  (option.canProcess(commandLine,  arg))  {  return  true;  }  }  if  (looksLikeOption(commandLine,  arg))  {  return  false;  }  [CLASS]  GroupImpl  [METHOD]  canProcess  [RETURN_TYPE]  boolean  WriteableCommandLine  commandLine  String  arg  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  SortedMap  newOptionMap  optionMap  WriteableCommandLine  commandLine  Iterator  iter  List  anonymous  newAnonymous  options  Option  option  String  arg  description  name  Map  tailMap  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	132	132	1	replace	Option  option  =(Option)iter.next();  if(option.canProcess(commandLine,  arg))  {  return  true;  }	      	non-compiled	[CE]  illegal  start  of  expression	3	None	replace
5	[BUG]  [BUGGY]  final  Map  commandLine  =(Map)iter.getValue();  [CE]  illegal  start  of  expression  [FE]        OptionException    [CONTEXT]      if  (optionMap.containsKey(arg))  {  return  true;  }  final  Map  tailMap  =  optionMap.tailMap(arg);  for  (final  Iterator  iter  =  tailMap.values().iterator();  iter.hasNext();)  {    [BUGGY]  final  Map  commandLine  =(Map)iter.getValue();  [BUGGY]    final  Option  option  =  (Option)  iter.next();  if  (option.canProcess(commandLine,  arg))  {  return  true;  }  }  if  (looksLikeOption(commandLine,  arg))  {  return  false;  }  [CLASS]  GroupImpl  [METHOD]  canProcess  [RETURN_TYPE]  boolean  WriteableCommandLine  commandLine  String  arg  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  SortedMap  newOptionMap  optionMap  WriteableCommandLine  commandLine  Iterator  iter  List  anonymous  newAnonymous  options  Option  option  String  arg  description  name  Map  tailMap  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	132	132	1	replace	final  Map  commandLine  =(Map)iter.getValue();	      final    Map    commandLine    =(Map)iter.next();    	non-compiled	[CE]  illegal  start  of  expression	9	None	replace
6	[BUG]  [BUGGY]  option  =(Option)iter.next(),  description);  [CE]  illegal  start  of  expression  [FE]          OptionException    [CONTEXT]      if  (optionMap.containsKey(arg))  {  return  true;  }  final  Map  tailMap  =  optionMap.tailMap(arg);  for  (final  Iterator  iter  =  tailMap.values().iterator();  iter.hasNext();)  {    [BUGGY]  option  =(Option)iter.next(),  description);  [BUGGY]      if  (option.canProcess(commandLine,  arg))  {  return  true;  }  }  if  (looksLikeOption(commandLine,  arg))  {  return  false;  }  [CLASS]  GroupImpl  [METHOD]  canProcess  [RETURN_TYPE]  boolean  WriteableCommandLine  commandLine  String  arg  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  SortedMap  newOptionMap  optionMap  WriteableCommandLine  commandLine  Iterator  iter  List  anonymous  newAnonymous  options  Option  option  String  arg  description  name  Map  tailMap  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	132	132	1	replace	option  =(Option)iter.next(),  description);	  option    =(Option)iter.next();    	non-compiled	[CE]  illegal  start  of  expression	2	None	replace
7	[BUG]  [BUGGY]  final  String  commandLine  =(String)iter.next(),  description);  [CE]  illegal  start  of  expression  [FE]        OptionException    [CONTEXT]      if  (optionMap.containsKey(arg))  {  return  true;  }  final  Map  tailMap  =  optionMap.tailMap(arg);  for  (final  Iterator  iter  =  tailMap.values().iterator();  iter.hasNext();)  {    [BUGGY]  final  String  commandLine  =(String)iter.next(),  description);  [BUGGY]    final  Option  option  =  (Option)  iter.next();  if  (option.canProcess(commandLine,  arg))  {  return  true;  }  }  if  (looksLikeOption(commandLine,  arg))  {  return  false;  }  [CLASS]  GroupImpl  [METHOD]  canProcess  [RETURN_TYPE]  boolean  WriteableCommandLine  commandLine  String  arg  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  SortedMap  newOptionMap  optionMap  WriteableCommandLine  commandLine  Iterator  iter  List  anonymous  newAnonymous  options  Option  option  String  arg  description  name  Map  tailMap  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	132	132	1	replace	final  String  commandLine  =(String)iter.next(),  description);	      final    String    commandLine    =(String)iter.next();    	non-compiled	[CE]  illegal  start  of  expression	4	None	replace
8	[BUG]  [BUGGY]  final  String  commandLine  =(String)iter.next()  -  1;  [CE]  illegal  start  of  expression  [FE]          OptionException    [CONTEXT]      if  (optionMap.containsKey(arg))  {  return  true;  }  final  Map  tailMap  =  optionMap.tailMap(arg);  for  (final  Iterator  iter  =  tailMap.values().iterator();  iter.hasNext();)  {    [BUGGY]  final  String  commandLine  =(String)iter.next()  -  1;  [BUGGY]    final  Option  option  =  (Option)  iter.next();  if  (option.canProcess(commandLine,  arg))  {  return  true;  }  }  if  (looksLikeOption(commandLine,  arg))  {  return  false;  }  [CLASS]  GroupImpl  [METHOD]  canProcess  [RETURN_TYPE]  boolean  WriteableCommandLine  commandLine  String  arg  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  SortedMap  newOptionMap  optionMap  WriteableCommandLine  commandLine  Iterator  iter  List  anonymous  newAnonymous  options  Option  option  String  arg  description  name  Map  tailMap  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	132	132	1	replace	final  String  commandLine  =(String)iter.next()  -  1;	      final    String    commandLine    =(String)iter.next();    	non-compiled	[CE]  illegal  start  of  expression	4	None	replace
9	[BUG]  [BUGGY]  final  List  <  Option>  newAnonymous  =(List  <  Option>)iter.next();  [CE]  illegal  start  of  expression  [FE]          OptionException    [CONTEXT]      if  (optionMap.containsKey(arg))  {  return  true;  }  final  Map  tailMap  =  optionMap.tailMap(arg);  for  (final  Iterator  iter  =  tailMap.values().iterator();  iter.hasNext();)  {    [BUGGY]  final  List  <  Option>  newAnonymous  =(List  <  Option>)iter.next();  [BUGGY]    final  Option  option  =  (Option)  iter.next();  if  (option.canProcess(commandLine,  arg))  {  return  true;  }  }  if  (looksLikeOption(commandLine,  arg))  {  return  false;  }  [CLASS]  GroupImpl  [METHOD]  canProcess  [RETURN_TYPE]  boolean  WriteableCommandLine  commandLine  String  arg  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  SortedMap  newOptionMap  optionMap  WriteableCommandLine  commandLine  Iterator  iter  List  anonymous  newAnonymous  options  Option  option  String  arg  description  name  Map  tailMap  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	132	132	1	replace	final  List  <  Option>  newAnonymous  =(List  <  Option>)iter.next();	      List    <    Option>    newAnonymous    =(List    <    Option>)iter.next();    	non-compiled	[CE]  illegal  start  of  expression	5	None	replace
10	[BUG]  [BUGGY]  Set  <  Option>  newAnonymous  =(Set  <  Option>)iter.next();  [CE]  illegal  start  of  expression  [FE]            OptionException    [CONTEXT]      if  (optionMap.containsKey(arg))  {  return  true;  }  final  Map  tailMap  =  optionMap.tailMap(arg);  for  (final  Iterator  iter  =  tailMap.values().iterator();  iter.hasNext();)  {    [BUGGY]  Set  <  Option>  newAnonymous  =(Set  <  Option>)iter.next();  [BUGGY]    final  Option  option  =  (Option)  iter.next();  if  (option.canProcess(commandLine,  arg))  {  return  true;  }  }  if  (looksLikeOption(commandLine,  arg))  {  return  false;  }  [CLASS]  GroupImpl  [METHOD]  canProcess  [RETURN_TYPE]  boolean  WriteableCommandLine  commandLine  String  arg  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  SortedMap  newOptionMap  optionMap  WriteableCommandLine  commandLine  Iterator  iter  List  anonymous  newAnonymous  options  Option  option  String  arg  description  name  Map  tailMap  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	132	132	1	replace	Set  <  Option>  newAnonymous  =(Set  <  Option>)iter.next();	      List    <    Option>    newAnonymous    =(List    <    Option>)iter.next();    	non-compiled	[CE]  illegal  start  of  expression	5	None	replace
11	[BUG]  [BUGGY]  ArrayList  <  Option>  newAnonymous  =(ArrayList  <  Option>)iter.next();  [CE]  illegal  start  of  expression  [FE]              OptionException    [CONTEXT]      if  (optionMap.containsKey(arg))  {  return  true;  }  final  Map  tailMap  =  optionMap.tailMap(arg);  for  (final  Iterator  iter  =  tailMap.values().iterator();  iter.hasNext();)  {    [BUGGY]  ArrayList  <  Option>  newAnonymous  =(ArrayList  <  Option>)iter.next();  [BUGGY]    final  Option  option  =  (Option)  iter.next();  if  (option.canProcess(commandLine,  arg))  {  return  true;  }  }  if  (looksLikeOption(commandLine,  arg))  {  return  false;  }  [CLASS]  GroupImpl  [METHOD]  canProcess  [RETURN_TYPE]  boolean  WriteableCommandLine  commandLine  String  arg  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  SortedMap  newOptionMap  optionMap  WriteableCommandLine  commandLine  Iterator  iter  List  anonymous  newAnonymous  options  Option  option  String  arg  description  name  Map  tailMap  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	132	132	1	replace	ArrayList  <  Option>  newAnonymous  =(ArrayList  <  Option>)iter.next();	      List    <    Option>    newAnonymous    =(List    <    Option>)iter.next();    	non-compiled	[CE]  illegal  start  of  expression	5	None	replace
12	[BUG]  [BUGGY]  final  Map  commandLine  =  options.values().iterator();  [CE]  illegal  start  of  expression  [FE]        OptionException    [CONTEXT]      if  (optionMap.containsKey(arg))  {  return  true;  }  final  Map  tailMap  =  optionMap.tailMap(arg);  for  (final  Iterator  iter  =  tailMap.values().iterator();  iter.hasNext();)  {    [BUGGY]  final  Map  commandLine  =  options.values().iterator();  [BUGGY]    final  Option  option  =  (Option)  iter.next();  if  (option.canProcess(commandLine,  arg))  {  return  true;  }  }  if  (looksLikeOption(commandLine,  arg))  {  return  false;  }  [CLASS]  GroupImpl  [METHOD]  canProcess  [RETURN_TYPE]  boolean  WriteableCommandLine  commandLine  String  arg  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  SortedMap  newOptionMap  optionMap  WriteableCommandLine  commandLine  Iterator  iter  List  anonymous  newAnonymous  options  Option  option  String  arg  description  name  Map  tailMap  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	132	132	1	replace	final  Map  commandLine  =  options.values().iterator();	      final    Map    commandLine    =    optionMap.values().iterator();    	non-compiled	[CE]  illegal  start  of  expression	7	None	replace
13	[BUG]  [BUGGY]  final  Map  commandLine  =  optionMap.keySet().iterator();  [CE]  illegal  start  of  expression  [FE]          OptionException    [CONTEXT]      if  (optionMap.containsKey(arg))  {  return  true;  }  final  Map  tailMap  =  optionMap.tailMap(arg);  for  (final  Iterator  iter  =  tailMap.values().iterator();  iter.hasNext();)  {    [BUGGY]  final  Map  commandLine  =  optionMap.keySet().iterator();  [BUGGY]    final  Option  option  =  (Option)  iter.next();  if  (option.canProcess(commandLine,  arg))  {  return  true;  }  }  if  (looksLikeOption(commandLine,  arg))  {  return  false;  }  [CLASS]  GroupImpl  [METHOD]  canProcess  [RETURN_TYPE]  boolean  WriteableCommandLine  commandLine  String  arg  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  SortedMap  newOptionMap  optionMap  WriteableCommandLine  commandLine  Iterator  iter  List  anonymous  newAnonymous  options  Option  option  String  arg  description  name  Map  tailMap  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	132	132	1	replace	final  Map  commandLine  =  optionMap.keySet().iterator();	      final    Map    commandLine    =    optionMap.values().iterator();    	non-compiled	[CE]  illegal  start  of  expression	7	None	replace
14	[BUG]  [BUGGY]  final  Map  commandLine  =  optionsMap.values().iterator();  [CE]  illegal  start  of  expression  [FE]            OptionException    [CONTEXT]      if  (optionMap.containsKey(arg))  {  return  true;  }  final  Map  tailMap  =  optionMap.tailMap(arg);  for  (final  Iterator  iter  =  tailMap.values().iterator();  iter.hasNext();)  {    [BUGGY]  final  Map  commandLine  =  optionsMap.values().iterator();  [BUGGY]    final  Option  option  =  (Option)  iter.next();  if  (option.canProcess(commandLine,  arg))  {  return  true;  }  }  if  (looksLikeOption(commandLine,  arg))  {  return  false;  }  [CLASS]  GroupImpl  [METHOD]  canProcess  [RETURN_TYPE]  boolean  WriteableCommandLine  commandLine  String  arg  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  SortedMap  newOptionMap  optionMap  WriteableCommandLine  commandLine  Iterator  iter  List  anonymous  newAnonymous  options  Option  option  String  arg  description  name  Map  tailMap  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	132	132	1	replace	final  Map  commandLine  =  optionsMap.values().iterator();	      final    Map    commandLine    =    optionMap.values().iterator();    	non-compiled	[CE]  illegal  start  of  expression	7	None	replace
15	[BUG]  [BUGGY]  final  List  <  Option>  newAnonymousOptions  =(List  <  Option>)iter.next();  [CE]  illegal  start  of  expression  [FE]            OptionException    [CONTEXT]      if  (optionMap.containsKey(arg))  {  return  true;  }  final  Map  tailMap  =  optionMap.tailMap(arg);  for  (final  Iterator  iter  =  tailMap.values().iterator();  iter.hasNext();)  {    [BUGGY]  final  List  <  Option>  newAnonymousOptions  =(List  <  Option>)iter.next();  [BUGGY]    final  Option  option  =  (Option)  iter.next();  if  (option.canProcess(commandLine,  arg))  {  return  true;  }  }  if  (looksLikeOption(commandLine,  arg))  {  return  false;  }  [CLASS]  GroupImpl  [METHOD]  canProcess  [RETURN_TYPE]  boolean  WriteableCommandLine  commandLine  String  arg  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  SortedMap  newOptionMap  optionMap  WriteableCommandLine  commandLine  Iterator  iter  List  anonymous  newAnonymous  options  Option  option  String  arg  description  name  Map  tailMap  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	132	132	1	replace	final  List  <  Option>  newAnonymousOptions  =(List  <  Option>)iter.next();	      List    <    Option>    newAnonymousOptions    =(List    <    Option>)iter.next();    	non-compiled	[CE]  illegal  start  of  expression	6	None	replace
16	[BUG]  [BUGGY]  Set  <  Option>  newAnonymousOptions  =(Set  <  Option>)iter.next();  [CE]  illegal  start  of  expression  [FE]              OptionException    [CONTEXT]      if  (optionMap.containsKey(arg))  {  return  true;  }  final  Map  tailMap  =  optionMap.tailMap(arg);  for  (final  Iterator  iter  =  tailMap.values().iterator();  iter.hasNext();)  {    [BUGGY]  Set  <  Option>  newAnonymousOptions  =(Set  <  Option>)iter.next();  [BUGGY]    final  Option  option  =  (Option)  iter.next();  if  (option.canProcess(commandLine,  arg))  {  return  true;  }  }  if  (looksLikeOption(commandLine,  arg))  {  return  false;  }  [CLASS]  GroupImpl  [METHOD]  canProcess  [RETURN_TYPE]  boolean  WriteableCommandLine  commandLine  String  arg  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  SortedMap  newOptionMap  optionMap  WriteableCommandLine  commandLine  Iterator  iter  List  anonymous  newAnonymous  options  Option  option  String  arg  description  name  Map  tailMap  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	132	132	1	replace	Set  <  Option>  newAnonymousOptions  =(Set  <  Option>)iter.next();	      List    <    Option>    newAnonymousOptions    =(List    <    Option>)iter.next();    	non-compiled	[CE]  illegal  start  of  expression	6	None	replace
17	[BUG]  [BUGGY]  ArrayList  <  Option>  newAnonymousOptions  =(ArrayList  <  Option>)iter.next();  [CE]  illegal  start  of  expression  [FE]                OptionException    [CONTEXT]      if  (optionMap.containsKey(arg))  {  return  true;  }  final  Map  tailMap  =  optionMap.tailMap(arg);  for  (final  Iterator  iter  =  tailMap.values().iterator();  iter.hasNext();)  {    [BUGGY]  ArrayList  <  Option>  newAnonymousOptions  =(ArrayList  <  Option>)iter.next();  [BUGGY]    final  Option  option  =  (Option)  iter.next();  if  (option.canProcess(commandLine,  arg))  {  return  true;  }  }  if  (looksLikeOption(commandLine,  arg))  {  return  false;  }  [CLASS]  GroupImpl  [METHOD]  canProcess  [RETURN_TYPE]  boolean  WriteableCommandLine  commandLine  String  arg  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  SortedMap  newOptionMap  optionMap  WriteableCommandLine  commandLine  Iterator  iter  List  anonymous  newAnonymous  options  Option  option  String  arg  description  name  Map  tailMap  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	132	132	1	replace	ArrayList  <  Option>  newAnonymousOptions  =(ArrayList  <  Option>)iter.next();	      List    <    Option>    newAnonymousOptions    =(List    <    Option>)iter.next();    	non-compiled	[CE]  illegal  start  of  expression	6	None	replace
18	[BUG]  [BUGGY]  Option  option  =(Option)iter.next(),  description);  [CE]  illegal  start  of  expression  [FE]        OptionException    [CONTEXT]      if  (optionMap.containsKey(arg))  {  return  true;  }  final  Map  tailMap  =  optionMap.tailMap(arg);  for  (final  Iterator  iter  =  tailMap.values().iterator();  iter.hasNext();)  {    [BUGGY]  Option  option  =(Option)iter.next(),  description);  [BUGGY]      if  (option.canProcess(commandLine,  arg))  {  return  true;  }  }  if  (looksLikeOption(commandLine,  arg))  {  return  false;  }  [CLASS]  GroupImpl  [METHOD]  canProcess  [RETURN_TYPE]  boolean  WriteableCommandLine  commandLine  String  arg  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  SortedMap  newOptionMap  optionMap  WriteableCommandLine  commandLine  Iterator  iter  List  anonymous  newAnonymous  options  Option  option  String  arg  description  name  Map  tailMap  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	132	132	1	replace	Option  option  =(Option)iter.next(),  description);	  Option    option    =(Option)iter.next();    	non-compiled	[CE]  illegal  start  of  expression	1	None	replace
19	[BUG]  [BUGGY]  Option  option  =(Option)iter.next()  :  null;  [CE]  illegal  start  of  expression  [FE]          OptionException    [CONTEXT]      if  (optionMap.containsKey(arg))  {  return  true;  }  final  Map  tailMap  =  optionMap.tailMap(arg);  for  (final  Iterator  iter  =  tailMap.values().iterator();  iter.hasNext();)  {    [BUGGY]  Option  option  =(Option)iter.next()  :  null;  [BUGGY]      if  (option.canProcess(commandLine,  arg))  {  return  true;  }  }  if  (looksLikeOption(commandLine,  arg))  {  return  false;  }  [CLASS]  GroupImpl  [METHOD]  canProcess  [RETURN_TYPE]  boolean  WriteableCommandLine  commandLine  String  arg  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  SortedMap  newOptionMap  optionMap  WriteableCommandLine  commandLine  Iterator  iter  List  anonymous  newAnonymous  options  Option  option  String  arg  description  name  Map  tailMap  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	132	132	1	replace	Option  option  =(Option)iter.next()  :  null;	  Option    option    =(Option)iter.next();    	non-compiled	[CE]  illegal  start  of  expression	1	None	replace
20	[BUG]  [BUGGY]  final  Set  <  Option>  options  =(Set  <  Option>)iter.next();  [CE]  illegal  start  of  expression  [FE]          OptionException    [CONTEXT]      if  (optionMap.containsKey(arg))  {  return  true;  }  final  Map  tailMap  =  optionMap.tailMap(arg);  for  (final  Iterator  iter  =  tailMap.values().iterator();  iter.hasNext();)  {    [BUGGY]  final  Set  <  Option>  options  =(Set  <  Option>)iter.next();  [BUGGY]    final  Option  option  =  (Option)  iter.next();  if  (option.canProcess(commandLine,  arg))  {  return  true;  }  }  if  (looksLikeOption(commandLine,  arg))  {  return  false;  }  [CLASS]  GroupImpl  [METHOD]  canProcess  [RETURN_TYPE]  boolean  WriteableCommandLine  commandLine  String  arg  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  SortedMap  newOptionMap  optionMap  WriteableCommandLine  commandLine  Iterator  iter  List  anonymous  newAnonymous  options  Option  option  String  arg  description  name  Map  tailMap  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	132	132	1	replace	final  Set  <  Option>  options  =(Set  <  Option>)iter.next();	      final    List    <    Option>    options    =(List)iter.next();    	non-compiled	[CE]  illegal  start  of  expression	8	None	replace
21	[BUG]  [BUGGY]  final  List  <  Option>  options  =(List  <  Option>)iter.next();  [CE]  illegal  start  of  expression  [FE]            OptionException    [CONTEXT]      if  (optionMap.containsKey(arg))  {  return  true;  }  final  Map  tailMap  =  optionMap.tailMap(arg);  for  (final  Iterator  iter  =  tailMap.values().iterator();  iter.hasNext();)  {    [BUGGY]  final  List  <  Option>  options  =(List  <  Option>)iter.next();  [BUGGY]    final  Option  option  =  (Option)  iter.next();  if  (option.canProcess(commandLine,  arg))  {  return  true;  }  }  if  (looksLikeOption(commandLine,  arg))  {  return  false;  }  [CLASS]  GroupImpl  [METHOD]  canProcess  [RETURN_TYPE]  boolean  WriteableCommandLine  commandLine  String  arg  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  SortedMap  newOptionMap  optionMap  WriteableCommandLine  commandLine  Iterator  iter  List  anonymous  newAnonymous  options  Option  option  String  arg  description  name  Map  tailMap  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	132	132	1	replace	final  List  <  Option>  options  =(List  <  Option>)iter.next();	      final    List    <    Option>    options    =(List)iter.next();    	non-compiled	[CE]  illegal  start  of  expression	8	None	replace
22	[BUG]  [BUGGY]  options  =(Option)iter.next();  [CE]  illegal  start  of  expression  [FE]          OptionException    [CONTEXT]      if  (optionMap.containsKey(arg))  {  return  true;  }  final  Map  tailMap  =  optionMap.tailMap(arg);  for  (final  Iterator  iter  =  tailMap.values().iterator();  iter.hasNext();)  {    [BUGGY]  options  =(Option)iter.next();  [BUGGY]      if  (option.canProcess(commandLine,  arg))  {  return  true;  }  }  if  (looksLikeOption(commandLine,  arg))  {  return  false;  }  [CLASS]  GroupImpl  [METHOD]  canProcess  [RETURN_TYPE]  boolean  WriteableCommandLine  commandLine  String  arg  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  SortedMap  newOptionMap  optionMap  WriteableCommandLine  commandLine  Iterator  iter  List  anonymous  newAnonymous  options  Option  option  String  arg  description  name  Map  tailMap  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	132	132	1	replace	options  =(Option)iter.next();	  option    =(Option)iter.next();    	non-compiled	[CE]  illegal  start  of  expression	2	None	replace
23	[BUG]  [BUGGY]  final  Set  <  Option>  options  =(Set)iter.next();  [CE]  illegal  start  of  expression  [FE]          OptionException    [CONTEXT]      if  (optionMap.containsKey(arg))  {  return  true;  }  final  Map  tailMap  =  optionMap.tailMap(arg);  for  (final  Iterator  iter  =  tailMap.values().iterator();  iter.hasNext();)  {    [BUGGY]  final  Set  <  Option>  options  =(Set)iter.next();  [BUGGY]    final  Option  option  =  (Option)  iter.next();  if  (option.canProcess(commandLine,  arg))  {  return  true;  }  }  if  (looksLikeOption(commandLine,  arg))  {  return  false;  }  [CLASS]  GroupImpl  [METHOD]  canProcess  [RETURN_TYPE]  boolean  WriteableCommandLine  commandLine  String  arg  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  SortedMap  newOptionMap  optionMap  WriteableCommandLine  commandLine  Iterator  iter  List  anonymous  newAnonymous  options  Option  option  String  arg  description  name  Map  tailMap  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	132	132	1	replace	final  Set  <  Option>  options  =(Set)iter.next();	      final    List    <    Option>    options    =(List)iter.next();    	non-compiled	[CE]  illegal  start  of  expression	8	None	replace
24	[BUG]  [BUGGY]  Option  commandLine  =(Option)iter.getValue();  [CE]  illegal  start  of  expression  [FE]          OptionException    [CONTEXT]      if  (optionMap.containsKey(arg))  {  return  true;  }  final  Map  tailMap  =  optionMap.tailMap(arg);  for  (final  Iterator  iter  =  tailMap.values().iterator();  iter.hasNext();)  {    [BUGGY]  Option  commandLine  =(Option)iter.getValue();  [BUGGY]    final  Option  option  =  (Option)  iter.next();  if  (option.canProcess(commandLine,  arg))  {  return  true;  }  }  if  (looksLikeOption(commandLine,  arg))  {  return  false;  }  [CLASS]  GroupImpl  [METHOD]  canProcess  [RETURN_TYPE]  boolean  WriteableCommandLine  commandLine  String  arg  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  SortedMap  newOptionMap  optionMap  WriteableCommandLine  commandLine  Iterator  iter  List  anonymous  newAnonymous  options  Option  option  String  arg  description  name  Map  tailMap  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	132	132	1	replace	Option  commandLine  =(Option)iter.getValue();	      Option    commandLine    =(Option)iter.next();    	non-compiled	[CE]  illegal  start  of  expression	10	None	replace
25	[BUG]  [BUGGY]  final  Map  commandLine  =(Map)iter.get();  [CE]  illegal  start  of  expression  [FE]        OptionException    [CONTEXT]      if  (optionMap.containsKey(arg))  {  return  true;  }  final  Map  tailMap  =  optionMap.tailMap(arg);  for  (final  Iterator  iter  =  tailMap.values().iterator();  iter.hasNext();)  {    [BUGGY]  final  Map  commandLine  =(Map)iter.get();  [BUGGY]    final  Option  option  =  (Option)  iter.next();  if  (option.canProcess(commandLine,  arg))  {  return  true;  }  }  if  (looksLikeOption(commandLine,  arg))  {  return  false;  }  [CLASS]  GroupImpl  [METHOD]  canProcess  [RETURN_TYPE]  boolean  WriteableCommandLine  commandLine  String  arg  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  SortedMap  newOptionMap  optionMap  WriteableCommandLine  commandLine  Iterator  iter  List  anonymous  newAnonymous  options  Option  option  String  arg  description  name  Map  tailMap  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	132	132	1	replace	final  Map  commandLine  =(Map)iter.get();	      final    Map    commandLine    =(Map)iter.next();    	non-compiled	[CE]  illegal  start  of  expression	9	None	replace
26	[BUG]  [BUGGY]  final  Map  commandLine  =  optionMap.commandLines().iterator();  [CE]  illegal  start  of  expression  [FE]        OptionException    [CONTEXT]      if  (optionMap.containsKey(arg))  {  return  true;  }  final  Map  tailMap  =  optionMap.tailMap(arg);  for  (final  Iterator  iter  =  tailMap.values().iterator();  iter.hasNext();)  {    [BUGGY]  final  Map  commandLine  =  optionMap.commandLines().iterator();  [BUGGY]    final  Option  option  =  (Option)  iter.next();  if  (option.canProcess(commandLine,  arg))  {  return  true;  }  }  if  (looksLikeOption(commandLine,  arg))  {  return  false;  }  [CLASS]  GroupImpl  [METHOD]  canProcess  [RETURN_TYPE]  boolean  WriteableCommandLine  commandLine  String  arg  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  SortedMap  newOptionMap  optionMap  WriteableCommandLine  commandLine  Iterator  iter  List  anonymous  newAnonymous  options  Option  option  String  arg  description  name  Map  tailMap  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	132	132	1	replace	final  Map  commandLine  =  optionMap.commandLines().iterator();	      final    Map    commandLine    =    optionMap.values().iterator();    	non-compiled	[CE]  illegal  start  of  expression	7	None	replace
27	[BUG]  [BUGGY]  final  Map  commandLine  =  tailMap.values().iterator();  [CE]  illegal  start  of  expression  [FE]          OptionException    [CONTEXT]      if  (optionMap.containsKey(arg))  {  return  true;  }  final  Map  tailMap  =  optionMap.tailMap(arg);  for  (final  Iterator  iter  =  tailMap.values().iterator();  iter.hasNext();)  {    [BUGGY]  final  Map  commandLine  =  tailMap.values().iterator();  [BUGGY]    final  Option  option  =  (Option)  iter.next();  if  (option.canProcess(commandLine,  arg))  {  return  true;  }  }  if  (looksLikeOption(commandLine,  arg))  {  return  false;  }  [CLASS]  GroupImpl  [METHOD]  canProcess  [RETURN_TYPE]  boolean  WriteableCommandLine  commandLine  String  arg  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  SortedMap  newOptionMap  optionMap  WriteableCommandLine  commandLine  Iterator  iter  List  anonymous  newAnonymous  options  Option  option  String  arg  description  name  Map  tailMap  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	132	132	1	replace	final  Map  commandLine  =  tailMap.values().iterator();	      final    Map    commandLine    =    optionMap.values().iterator();    	non-compiled	[CE]  illegal  start  of  expression	7	None	replace
28	[BUG]  [BUGGY]  final  WriteableCommandLine  commandLine  =(WritableCommandLine)iter.next();  [CE]  illegal  start  of  expression  [FE]        OptionException    [CONTEXT]      if  (optionMap.containsKey(arg))  {  return  true;  }  final  Map  tailMap  =  optionMap.tailMap(arg);  for  (final  Iterator  iter  =  tailMap.values().iterator();  iter.hasNext();)  {    [BUGGY]  final  WriteableCommandLine  commandLine  =(WritableCommandLine)iter.next();  [BUGGY]    final  Option  option  =  (Option)  iter.next();  if  (option.canProcess(commandLine,  arg))  {  return  true;  }  }  if  (looksLikeOption(commandLine,  arg))  {  return  false;  }  [CLASS]  GroupImpl  [METHOD]  canProcess  [RETURN_TYPE]  boolean  WriteableCommandLine  commandLine  String  arg  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  SortedMap  newOptionMap  optionMap  WriteableCommandLine  commandLine  Iterator  iter  List  anonymous  newAnonymous  options  Option  option  String  arg  description  name  Map  tailMap  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	132	132	1	replace	final  WriteableCommandLine  commandLine  =(WritableCommandLine)iter.next();	      final    String    commandLine    =(String)iter.next();    	non-compiled	[CE]  illegal  start  of  expression	4	None	replace
29	[BUG]  [BUGGY]  final  String  commandLine  =(String)iter.getValue();  [CE]  illegal  start  of  expression  [FE]          OptionException    [CONTEXT]      if  (optionMap.containsKey(arg))  {  return  true;  }  final  Map  tailMap  =  optionMap.tailMap(arg);  for  (final  Iterator  iter  =  tailMap.values().iterator();  iter.hasNext();)  {    [BUGGY]  final  String  commandLine  =(String)iter.getValue();  [BUGGY]    final  Option  option  =  (Option)  iter.next();  if  (option.canProcess(commandLine,  arg))  {  return  true;  }  }  if  (looksLikeOption(commandLine,  arg))  {  return  false;  }  [CLASS]  GroupImpl  [METHOD]  canProcess  [RETURN_TYPE]  boolean  WriteableCommandLine  commandLine  String  arg  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  SortedMap  newOptionMap  optionMap  WriteableCommandLine  commandLine  Iterator  iter  List  anonymous  newAnonymous  options  Option  option  String  arg  description  name  Map  tailMap  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	132	132	1	replace	final  String  commandLine  =(String)iter.getValue();	      final    String    commandLine    =(String)iter.next();    	non-compiled	[CE]  illegal  start  of  expression	4	None	replace
30	[BUG]  [BUGGY]  final  String  commandLine  =(String)iter.next()  +  1;  [CE]  illegal  start  of  expression  [FE]            OptionException    [CONTEXT]      if  (optionMap.containsKey(arg))  {  return  true;  }  final  Map  tailMap  =  optionMap.tailMap(arg);  for  (final  Iterator  iter  =  tailMap.values().iterator();  iter.hasNext();)  {    [BUGGY]  final  String  commandLine  =(String)iter.next()  +  1;  [BUGGY]    final  Option  option  =  (Option)  iter.next();  if  (option.canProcess(commandLine,  arg))  {  return  true;  }  }  if  (looksLikeOption(commandLine,  arg))  {  return  false;  }  [CLASS]  GroupImpl  [METHOD]  canProcess  [RETURN_TYPE]  boolean  WriteableCommandLine  commandLine  String  arg  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  SortedMap  newOptionMap  optionMap  WriteableCommandLine  commandLine  Iterator  iter  List  anonymous  newAnonymous  options  Option  option  String  arg  description  name  Map  tailMap  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	132	132	1	replace	final  String  commandLine  =(String)iter.next()  +  1;	      final    String    commandLine    =(String)iter.next();    	non-compiled	[CE]  illegal  start  of  expression	4	None	replace
31	[BUG]  [BUGGY]  WriteableCommandLine  commandLine  =(WriteableCommandLine)iter.next();  [CE]  illegal  start  of  expression  [FE]            OptionException    [CONTEXT]      if  (optionMap.containsKey(arg))  {  return  true;  }  final  Map  tailMap  =  optionMap.tailMap(arg);  for  (final  Iterator  iter  =  tailMap.values().iterator();  iter.hasNext();)  {    [BUGGY]  WriteableCommandLine  commandLine  =(WriteableCommandLine)iter.next();  [BUGGY]      if  (option.canProcess(commandLine,  arg))  {  return  true;  }  }  if  (looksLikeOption(commandLine,  arg))  {  return  false;  }  [CLASS]  GroupImpl  [METHOD]  canProcess  [RETURN_TYPE]  boolean  WriteableCommandLine  commandLine  String  arg  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  SortedMap  newOptionMap  optionMap  WriteableCommandLine  commandLine  Iterator  iter  List  anonymous  newAnonymous  options  Option  option  String  arg  description  name  Map  tailMap  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	132	132	1	replace	WriteableCommandLine  commandLine  =(WriteableCommandLine)iter.next();	      	non-compiled	[CE]  illegal  start  of  expression	3	None	replace
32	[BUG]  [BUGGY]  Option  option  =  optionMap.getOption(iter.next());  [CE]  illegal  start  of  expression  [FE]              OptionException    [CONTEXT]      if  (optionMap.containsKey(arg))  {  return  true;  }  final  Map  tailMap  =  optionMap.tailMap(arg);  for  (final  Iterator  iter  =  tailMap.values().iterator();  iter.hasNext();)  {    [BUGGY]  Option  option  =  optionMap.getOption(iter.next());  [BUGGY]      if  (option.canProcess(commandLine,  arg))  {  return  true;  }  }  if  (looksLikeOption(commandLine,  arg))  {  return  false;  }  [CLASS]  GroupImpl  [METHOD]  canProcess  [RETURN_TYPE]  boolean  WriteableCommandLine  commandLine  String  arg  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  SortedMap  newOptionMap  optionMap  WriteableCommandLine  commandLine  Iterator  iter  List  anonymous  newAnonymous  options  Option  option  String  arg  description  name  Map  tailMap  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	132	132	1	replace	Option  option  =  optionMap.getOption(iter.next());	      	non-compiled	[CE]  illegal  start  of  expression	3	None	replace
33	[BUG]  [BUGGY]  Option  option  =  options.getOption(iter.next());  [CE]  illegal  start  of  expression  [FE]                OptionException    [CONTEXT]      if  (optionMap.containsKey(arg))  {  return  true;  }  final  Map  tailMap  =  optionMap.tailMap(arg);  for  (final  Iterator  iter  =  tailMap.values().iterator();  iter.hasNext();)  {    [BUGGY]  Option  option  =  options.getOption(iter.next());  [BUGGY]      if  (option.canProcess(commandLine,  arg))  {  return  true;  }  }  if  (looksLikeOption(commandLine,  arg))  {  return  false;  }  [CLASS]  GroupImpl  [METHOD]  canProcess  [RETURN_TYPE]  boolean  WriteableCommandLine  commandLine  String  arg  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  SortedMap  newOptionMap  optionMap  WriteableCommandLine  commandLine  Iterator  iter  List  anonymous  newAnonymous  options  Option  option  String  arg  description  name  Map  tailMap  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	132	132	1	replace	Option  option  =  options.getOption(iter.next());	      	non-compiled	[CE]  illegal  start  of  expression	3	None	replace
34	[BUG]  [BUGGY]  Option  option  =(Option)iter.getValue();  [CE]  illegal  start  of  expression  [FE]        OptionException    [CONTEXT]      if  (optionMap.containsKey(arg))  {  return  true;  }  final  Map  tailMap  =  optionMap.tailMap(arg);  for  (final  Iterator  iter  =  tailMap.values().iterator();  iter.hasNext();)  {    [BUGGY]  Option  option  =(Option)iter.getValue();  [BUGGY]      if  (option.canProcess(commandLine,  arg))  {  return  true;  }  }  if  (looksLikeOption(commandLine,  arg))  {  return  false;  }  [CLASS]  GroupImpl  [METHOD]  canProcess  [RETURN_TYPE]  boolean  WriteableCommandLine  commandLine  String  arg  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  SortedMap  newOptionMap  optionMap  WriteableCommandLine  commandLine  Iterator  iter  List  anonymous  newAnonymous  options  Option  option  String  arg  description  name  Map  tailMap  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	132	132	1	replace	Option  option  =(Option)iter.getValue();	  Option    option    =(Option)iter.next();    	non-compiled	[CE]  illegal  start  of  expression	1	None	replace
35	[BUG]  [BUGGY]  final  WriteableCommandLine  commandLine  =(WriteableCommandLine)iter.next();  [CE]  illegal  start  of  expression  [FE]        OptionException    [CONTEXT]      if  (optionMap.containsKey(arg))  {  return  true;  }  final  Map  tailMap  =  optionMap.tailMap(arg);  for  (final  Iterator  iter  =  tailMap.values().iterator();  iter.hasNext();)  {    [BUGGY]  final  WriteableCommandLine  commandLine  =(WriteableCommandLine)iter.next();  [BUGGY]    final  Option  option  =  (Option)  iter.next();  if  (option.canProcess(commandLine,  arg))  {  return  true;  }  }  if  (looksLikeOption(commandLine,  arg))  {  return  false;  }  [CLASS]  GroupImpl  [METHOD]  canProcess  [RETURN_TYPE]  boolean  WriteableCommandLine  commandLine  String  arg  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  SortedMap  newOptionMap  optionMap  WriteableCommandLine  commandLine  Iterator  iter  List  anonymous  newAnonymous  options  Option  option  String  arg  description  name  Map  tailMap  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	132	132	1	replace	final  WriteableCommandLine  commandLine  =(WriteableCommandLine)iter.next();	      final    String    commandLine    =(String)iter.next();    	non-compiled	[CE]  illegal  start  of  expression	4	None	replace
36	[BUG]  [BUGGY]  Options  option  =(Option)iter.next();  [CE]  illegal  start  of  expression  [FE]        OptionException    [CONTEXT]      if  (optionMap.containsKey(arg))  {  return  true;  }  final  Map  tailMap  =  optionMap.tailMap(arg);  for  (final  Iterator  iter  =  tailMap.values().iterator();  iter.hasNext();)  {    [BUGGY]  Options  option  =(Option)iter.next();  [BUGGY]      if  (option.canProcess(commandLine,  arg))  {  return  true;  }  }  if  (looksLikeOption(commandLine,  arg))  {  return  false;  }  [CLASS]  GroupImpl  [METHOD]  canProcess  [RETURN_TYPE]  boolean  WriteableCommandLine  commandLine  String  arg  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  SortedMap  newOptionMap  optionMap  WriteableCommandLine  commandLine  Iterator  iter  List  anonymous  newAnonymous  options  Option  option  String  arg  description  name  Map  tailMap  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	132	132	1	replace	Options  option  =(Option)iter.next();	  Option    option    =(Option)iter.next();    	non-compiled	[CE]  illegal  start  of  expression	1	None	replace
