bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  final  ReadableCommandLine  commandLine  =(WritableCommandLine)iter.next();  [CE]  illegal  start  of  expression  [FE]            OptionException      [CONTEXT]        if  (optionMap.containsKey(arg))  {  return  true;  }  final  Map  tailMap  =  optionMap.tailMap(arg);  for  (final  Iterator  iter  =  tailMap.values().iterator();  iter.hasNext();)  {      [BUGGY]  final  ReadableCommandLine  commandLine  =(WritableCommandLine)iter.next();  [BUGGY]      final  Option  option  =  (Option)  iter.next();  if  (option.canProcess(commandLine,  arg))  {  return  true;  }  }  if  (looksLikeOption(commandLine,  arg))  {  return  false;  }  [CLASS]  GroupImpl  [METHOD]  canProcess  [RETURN_TYPE]  boolean  WriteableCommandLine  commandLine  String  arg  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  SortedMap  newOptionMap  optionMap  WriteableCommandLine  commandLine  Iterator  iter  List  anonymous  newAnonymous  options  Option  option  String  arg  description  name  Map  tailMap  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	132	132	1	replace	final  ReadableCommandLine  commandLine  =(WritableCommandLine)iter.next();	  final    WriteableCommandLine    commandLine    =(WritableCommandLine)iter.next();    	non-compiled	[CE]  illegal  start  of  expression	28	None	replace
2	[BUG]  [BUGGY]  final  WriteableCommandLine  commandLine  =(WritableCommandLine)commandLine.next();  [CE]  illegal  start  of  expression  [FE]              OptionException      [CONTEXT]        if  (optionMap.containsKey(arg))  {  return  true;  }  final  Map  tailMap  =  optionMap.tailMap(arg);  for  (final  Iterator  iter  =  tailMap.values().iterator();  iter.hasNext();)  {      [BUGGY]  final  WriteableCommandLine  commandLine  =(WritableCommandLine)commandLine.next();  [BUGGY]      final  Option  option  =  (Option)  iter.next();  if  (option.canProcess(commandLine,  arg))  {  return  true;  }  }  if  (looksLikeOption(commandLine,  arg))  {  return  false;  }  [CLASS]  GroupImpl  [METHOD]  canProcess  [RETURN_TYPE]  boolean  WriteableCommandLine  commandLine  String  arg  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  SortedMap  newOptionMap  optionMap  WriteableCommandLine  commandLine  Iterator  iter  List  anonymous  newAnonymous  options  Option  option  String  arg  description  name  Map  tailMap  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	132	132	1	replace	final  WriteableCommandLine  commandLine  =(WritableCommandLine)commandLine.next();	  final    WriteableCommandLine    commandLine    =(WritableCommandLine)iter.next();    	non-compiled	[CE]  illegal  start  of  expression	28	None	replace
3	[BUG]  [BUGGY]  Option  option  =(Option)iter.next()?  null  :  iter.next();  [CE]  illegal  start  of  expression  [FE]              OptionException      [CONTEXT]        if  (optionMap.containsKey(arg))  {  return  true;  }  final  Map  tailMap  =  optionMap.tailMap(arg);  for  (final  Iterator  iter  =  tailMap.values().iterator();  iter.hasNext();)  {      [BUGGY]  Option  option  =(Option)iter.next()?  null  :  iter.next();  [BUGGY]        if  (option.canProcess(commandLine,  arg))  {  return  true;  }  }  if  (looksLikeOption(commandLine,  arg))  {  return  false;  }  [CLASS]  GroupImpl  [METHOD]  canProcess  [RETURN_TYPE]  boolean  WriteableCommandLine  commandLine  String  arg  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  SortedMap  newOptionMap  optionMap  WriteableCommandLine  commandLine  Iterator  iter  List  anonymous  newAnonymous  options  Option  option  String  arg  description  name  Map  tailMap  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	132	132	1	replace	Option  option  =(Option)iter.next()?  null  :  iter.next();	  Option    option    =(Option)iter.next()    :    null;    	non-compiled	[CE]  illegal  start  of  expression	19	None	replace
4	[BUG]  [BUGGY]  Option  option  =(Option)iter.next()?  tailMap.get(arg):  null;  [CE]  illegal  start  of  expression  [FE]                OptionException      [CONTEXT]        if  (optionMap.containsKey(arg))  {  return  true;  }  final  Map  tailMap  =  optionMap.tailMap(arg);  for  (final  Iterator  iter  =  tailMap.values().iterator();  iter.hasNext();)  {      [BUGGY]  Option  option  =(Option)iter.next()?  tailMap.get(arg):  null;  [BUGGY]        if  (option.canProcess(commandLine,  arg))  {  return  true;  }  }  if  (looksLikeOption(commandLine,  arg))  {  return  false;  }  [CLASS]  GroupImpl  [METHOD]  canProcess  [RETURN_TYPE]  boolean  WriteableCommandLine  commandLine  String  arg  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  SortedMap  newOptionMap  optionMap  WriteableCommandLine  commandLine  Iterator  iter  List  anonymous  newAnonymous  options  Option  option  String  arg  description  name  Map  tailMap  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	132	132	1	replace	Option  option  =(Option)iter.next()?  tailMap.get(arg):  null;	  Option    option    =(Option)iter.next()    :    null;    	non-compiled	[CE]  illegal  start  of  expression	19	None	replace
5	[BUG]  [BUGGY]  Option  option  =  optionMap.getOption(iter.next(),  description);  [CE]  illegal  start  of  expression  [FE]                  OptionException      [CONTEXT]        if  (optionMap.containsKey(arg))  {  return  true;  }  final  Map  tailMap  =  optionMap.tailMap(arg);  for  (final  Iterator  iter  =  tailMap.values().iterator();  iter.hasNext();)  {      [BUGGY]  Option  option  =  optionMap.getOption(iter.next(),  description);  [BUGGY]        if  (option.canProcess(commandLine,  arg))  {  return  true;  }  }  if  (looksLikeOption(commandLine,  arg))  {  return  false;  }  [CLASS]  GroupImpl  [METHOD]  canProcess  [RETURN_TYPE]  boolean  WriteableCommandLine  commandLine  String  arg  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  SortedMap  newOptionMap  optionMap  WriteableCommandLine  commandLine  Iterator  iter  List  anonymous  newAnonymous  options  Option  option  String  arg  description  name  Map  tailMap  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	132	132	1	replace	Option  option  =  optionMap.getOption(iter.next(),  description);	  Option    option    =    optionMap.getOption(iter.next());    	non-compiled	[CE]  illegal  start  of  expression	32	None	replace
6	[BUG]  [BUGGY]  Option  option  =  iter.next();  [CE]  illegal  start  of  expression  [FE]                    OptionException      [CONTEXT]        if  (optionMap.containsKey(arg))  {  return  true;  }  final  Map  tailMap  =  optionMap.tailMap(arg);  for  (final  Iterator  iter  =  tailMap.values().iterator();  iter.hasNext();)  {      [BUGGY]  Option  option  =  iter.next();  [BUGGY]        if  (option.canProcess(commandLine,  arg))  {  return  true;  }  }  if  (looksLikeOption(commandLine,  arg))  {  return  false;  }  [CLASS]  GroupImpl  [METHOD]  canProcess  [RETURN_TYPE]  boolean  WriteableCommandLine  commandLine  String  arg  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  SortedMap  newOptionMap  optionMap  WriteableCommandLine  commandLine  Iterator  iter  List  anonymous  newAnonymous  options  Option  option  String  arg  description  name  Map  tailMap  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	132	132	1	replace	Option  option  =  iter.next();	  Option    option    =    optionMap.getOption(iter.next());    	non-compiled	[CE]  illegal  start  of  expression	32	None	replace
7	[BUG]  [BUGGY]  Option  option  =  optionMap.getOption(iter.next()  +  1);  [CE]  illegal  start  of  expression  [FE]                      OptionException      [CONTEXT]        if  (optionMap.containsKey(arg))  {  return  true;  }  final  Map  tailMap  =  optionMap.tailMap(arg);  for  (final  Iterator  iter  =  tailMap.values().iterator();  iter.hasNext();)  {      [BUGGY]  Option  option  =  optionMap.getOption(iter.next()  +  1);  [BUGGY]        if  (option.canProcess(commandLine,  arg))  {  return  true;  }  }  if  (looksLikeOption(commandLine,  arg))  {  return  false;  }  [CLASS]  GroupImpl  [METHOD]  canProcess  [RETURN_TYPE]  boolean  WriteableCommandLine  commandLine  String  arg  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  SortedMap  newOptionMap  optionMap  WriteableCommandLine  commandLine  Iterator  iter  List  anonymous  newAnonymous  options  Option  option  String  arg  description  name  Map  tailMap  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	132	132	1	replace	Option  option  =  optionMap.getOption(iter.next()  +  1);	  Option    option    =    optionMap.getOption(iter.next());    	non-compiled	[CE]  illegal  start  of  expression	32	None	replace
8	[BUG]  [BUGGY]  final  Set  <  Option>  newAnonymousOptions  =(Set  <  Option>)iter.next();  [CE]  illegal  start  of  expression  [FE]                  OptionException      [CONTEXT]        if  (optionMap.containsKey(arg))  {  return  true;  }  final  Map  tailMap  =  optionMap.tailMap(arg);  for  (final  Iterator  iter  =  tailMap.values().iterator();  iter.hasNext();)  {      [BUGGY]  final  Set  <  Option>  newAnonymousOptions  =(Set  <  Option>)iter.next();  [BUGGY]      final  Option  option  =  (Option)  iter.next();  if  (option.canProcess(commandLine,  arg))  {  return  true;  }  }  if  (looksLikeOption(commandLine,  arg))  {  return  false;  }  [CLASS]  GroupImpl  [METHOD]  canProcess  [RETURN_TYPE]  boolean  WriteableCommandLine  commandLine  String  arg  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  SortedMap  newOptionMap  optionMap  WriteableCommandLine  commandLine  Iterator  iter  List  anonymous  newAnonymous  options  Option  option  String  arg  description  name  Map  tailMap  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	132	132	1	replace	final  Set  <  Option>  newAnonymousOptions  =(Set  <  Option>)iter.next();	  Set    <    Option>    newAnonymousOptions    =(Set    <    Option>)iter.next();    	non-compiled	[CE]  illegal  start  of  expression	16	None	replace
9	[BUG]  [BUGGY]  Option  option  =(Option)iter.next();  if(option.hasProcess(commandLine,  arg))  {  return  true;  }  [CE]  illegal  start  of  expression  [FE]                    OptionException      [CONTEXT]        if  (optionMap.containsKey(arg))  {  return  true;  }  final  Map  tailMap  =  optionMap.tailMap(arg);  for  (final  Iterator  iter  =  tailMap.values().iterator();  iter.hasNext();)  {      [BUGGY]  Option  option  =(Option)iter.next();  if(option.hasProcess(commandLine,  arg))  {  return  true;  }  [BUGGY]        if  (option.canProcess(commandLine,  arg))  {  return  true;  }  }  if  (looksLikeOption(commandLine,  arg))  {  return  false;  }  [CLASS]  GroupImpl  [METHOD]  canProcess  [RETURN_TYPE]  boolean  WriteableCommandLine  commandLine  String  arg  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  SortedMap  newOptionMap  optionMap  WriteableCommandLine  commandLine  Iterator  iter  List  anonymous  newAnonymous  options  Option  option  String  arg  description  name  Map  tailMap  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	132	132	1	replace	Option  option  =(Option)iter.next();  if(option.hasProcess(commandLine,  arg))  {  return  true;  }	  Option    option    =(Option)iter.next();    if(option.canProcess(commandLine,    arg))    {    return    true;    }    	non-compiled	[CE]  illegal  start  of  expression	4	None	replace
10	[BUG]  [BUGGY]  final  String  commandLine  =(String)iter.getKey();  [CE]  illegal  start  of  expression  [FE]              OptionException      [CONTEXT]        if  (optionMap.containsKey(arg))  {  return  true;  }  final  Map  tailMap  =  optionMap.tailMap(arg);  for  (final  Iterator  iter  =  tailMap.values().iterator();  iter.hasNext();)  {      [BUGGY]  final  String  commandLine  =(String)iter.getKey();  [BUGGY]      final  Option  option  =  (Option)  iter.next();  if  (option.canProcess(commandLine,  arg))  {  return  true;  }  }  if  (looksLikeOption(commandLine,  arg))  {  return  false;  }  [CLASS]  GroupImpl  [METHOD]  canProcess  [RETURN_TYPE]  boolean  WriteableCommandLine  commandLine  String  arg  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  SortedMap  newOptionMap  optionMap  WriteableCommandLine  commandLine  Iterator  iter  List  anonymous  newAnonymous  options  Option  option  String  arg  description  name  Map  tailMap  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	132	132	1	replace	final  String  commandLine  =(String)iter.getKey();	  final    String    commandLine    =(String)iter.getValue();    	non-compiled	[CE]  illegal  start  of  expression	29	None	replace
11	[BUG]  [BUGGY]  final  Map  commandLine  =  options.commandLines().iterator();  [CE]  illegal  start  of  expression  [FE]            OptionException      [CONTEXT]        if  (optionMap.containsKey(arg))  {  return  true;  }  final  Map  tailMap  =  optionMap.tailMap(arg);  for  (final  Iterator  iter  =  tailMap.values().iterator();  iter.hasNext();)  {      [BUGGY]  final  Map  commandLine  =  options.commandLines().iterator();  [BUGGY]      final  Option  option  =  (Option)  iter.next();  if  (option.canProcess(commandLine,  arg))  {  return  true;  }  }  if  (looksLikeOption(commandLine,  arg))  {  return  false;  }  [CLASS]  GroupImpl  [METHOD]  canProcess  [RETURN_TYPE]  boolean  WriteableCommandLine  commandLine  String  arg  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  SortedMap  newOptionMap  optionMap  WriteableCommandLine  commandLine  Iterator  iter  List  anonymous  newAnonymous  options  Option  option  String  arg  description  name  Map  tailMap  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	132	132	1	replace	final  Map  commandLine  =  options.commandLines().iterator();	  final    Map    commandLine    =    optionMap.commandLines().iterator();    	non-compiled	[CE]  illegal  start  of  expression	26	None	replace
12	[BUG]  [BUGGY]  final  Map  commandLine  =  optionsMap.commandLines().iterator();  [CE]  illegal  start  of  expression  [FE]              OptionException      [CONTEXT]        if  (optionMap.containsKey(arg))  {  return  true;  }  final  Map  tailMap  =  optionMap.tailMap(arg);  for  (final  Iterator  iter  =  tailMap.values().iterator();  iter.hasNext();)  {      [BUGGY]  final  Map  commandLine  =  optionsMap.commandLines().iterator();  [BUGGY]      final  Option  option  =  (Option)  iter.next();  if  (option.canProcess(commandLine,  arg))  {  return  true;  }  }  if  (looksLikeOption(commandLine,  arg))  {  return  false;  }  [CLASS]  GroupImpl  [METHOD]  canProcess  [RETURN_TYPE]  boolean  WriteableCommandLine  commandLine  String  arg  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  SortedMap  newOptionMap  optionMap  WriteableCommandLine  commandLine  Iterator  iter  List  anonymous  newAnonymous  options  Option  option  String  arg  description  name  Map  tailMap  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	132	132	1	replace	final  Map  commandLine  =  optionsMap.commandLines().iterator();	  final    Map    commandLine    =    optionMap.commandLines().iterator();    	non-compiled	[CE]  illegal  start  of  expression	26	None	replace
13	[BUG]  [BUGGY]  final  Map  commandLine  =  iter.commandLines().iterator();  [CE]  illegal  start  of  expression  [FE]                OptionException      [CONTEXT]        if  (optionMap.containsKey(arg))  {  return  true;  }  final  Map  tailMap  =  optionMap.tailMap(arg);  for  (final  Iterator  iter  =  tailMap.values().iterator();  iter.hasNext();)  {      [BUGGY]  final  Map  commandLine  =  iter.commandLines().iterator();  [BUGGY]      final  Option  option  =  (Option)  iter.next();  if  (option.canProcess(commandLine,  arg))  {  return  true;  }  }  if  (looksLikeOption(commandLine,  arg))  {  return  false;  }  [CLASS]  GroupImpl  [METHOD]  canProcess  [RETURN_TYPE]  boolean  WriteableCommandLine  commandLine  String  arg  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  SortedMap  newOptionMap  optionMap  WriteableCommandLine  commandLine  Iterator  iter  List  anonymous  newAnonymous  options  Option  option  String  arg  description  name  Map  tailMap  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	132	132	1	replace	final  Map  commandLine  =  iter.commandLines().iterator();	  final    Map    commandLine    =    optionMap.commandLines().iterator();    	non-compiled	[CE]  illegal  start  of  expression	26	None	replace
14	[BUG]  [BUGGY]  option  =(Option)iter.next(),  commandLine);  [CE]  illegal  start  of  expression  [FE]              OptionException      [CONTEXT]        if  (optionMap.containsKey(arg))  {  return  true;  }  final  Map  tailMap  =  optionMap.tailMap(arg);  for  (final  Iterator  iter  =  tailMap.values().iterator();  iter.hasNext();)  {      [BUGGY]  option  =(Option)iter.next(),  commandLine);  [BUGGY]        if  (option.canProcess(commandLine,  arg))  {  return  true;  }  }  if  (looksLikeOption(commandLine,  arg))  {  return  false;  }  [CLASS]  GroupImpl  [METHOD]  canProcess  [RETURN_TYPE]  boolean  WriteableCommandLine  commandLine  String  arg  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  SortedMap  newOptionMap  optionMap  WriteableCommandLine  commandLine  Iterator  iter  List  anonymous  newAnonymous  options  Option  option  String  arg  description  name  Map  tailMap  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	132	132	1	replace	option  =(Option)iter.next(),  commandLine);	  option    =(Option)iter.next(),    description);    	non-compiled	[CE]  illegal  start  of  expression	6	None	replace
15	[BUG]  [BUGGY]  option  =(Option)iter.next(),  name);  [CE]  illegal  start  of  expression  [FE]                OptionException      [CONTEXT]        if  (optionMap.containsKey(arg))  {  return  true;  }  final  Map  tailMap  =  optionMap.tailMap(arg);  for  (final  Iterator  iter  =  tailMap.values().iterator();  iter.hasNext();)  {      [BUGGY]  option  =(Option)iter.next(),  name);  [BUGGY]        if  (option.canProcess(commandLine,  arg))  {  return  true;  }  }  if  (looksLikeOption(commandLine,  arg))  {  return  false;  }  [CLASS]  GroupImpl  [METHOD]  canProcess  [RETURN_TYPE]  boolean  WriteableCommandLine  commandLine  String  arg  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  SortedMap  newOptionMap  optionMap  WriteableCommandLine  commandLine  Iterator  iter  List  anonymous  newAnonymous  options  Option  option  String  arg  description  name  Map  tailMap  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	132	132	1	replace	option  =(Option)iter.next(),  name);	  option    =(Option)iter.next(),    description);    	non-compiled	[CE]  illegal  start  of  expression	6	None	replace
16	[BUG]  [BUGGY]  Option  option  =(Option)iter.getAnonymousOption();  [CE]  illegal  start  of  expression  [FE]            OptionException      [CONTEXT]        if  (optionMap.containsKey(arg))  {  return  true;  }  final  Map  tailMap  =  optionMap.tailMap(arg);  for  (final  Iterator  iter  =  tailMap.values().iterator();  iter.hasNext();)  {      [BUGGY]  Option  option  =(Option)iter.getAnonymousOption();  [BUGGY]        if  (option.canProcess(commandLine,  arg))  {  return  true;  }  }  if  (looksLikeOption(commandLine,  arg))  {  return  false;  }  [CLASS]  GroupImpl  [METHOD]  canProcess  [RETURN_TYPE]  boolean  WriteableCommandLine  commandLine  String  arg  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  SortedMap  newOptionMap  optionMap  WriteableCommandLine  commandLine  Iterator  iter  List  anonymous  newAnonymous  options  Option  option  String  arg  description  name  Map  tailMap  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	132	132	1	replace	Option  option  =(Option)iter.getAnonymousOption();	  Option    option    =(Option)iter.getValue();    	non-compiled	[CE]  illegal  start  of  expression	34	None	replace
17	[BUG]  [BUGGY]  final  Map  commandLine  =  options.keySet().iterator();  [CE]  illegal  start  of  expression  [FE]              OptionException      [CONTEXT]        if  (optionMap.containsKey(arg))  {  return  true;  }  final  Map  tailMap  =  optionMap.tailMap(arg);  for  (final  Iterator  iter  =  tailMap.values().iterator();  iter.hasNext();)  {      [BUGGY]  final  Map  commandLine  =  options.keySet().iterator();  [BUGGY]      final  Option  option  =  (Option)  iter.next();  if  (option.canProcess(commandLine,  arg))  {  return  true;  }  }  if  (looksLikeOption(commandLine,  arg))  {  return  false;  }  [CLASS]  GroupImpl  [METHOD]  canProcess  [RETURN_TYPE]  boolean  WriteableCommandLine  commandLine  String  arg  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  SortedMap  newOptionMap  optionMap  WriteableCommandLine  commandLine  Iterator  iter  List  anonymous  newAnonymous  options  Option  option  String  arg  description  name  Map  tailMap  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	132	132	1	replace	final  Map  commandLine  =  options.keySet().iterator();	  final    Map    commandLine    =    optionMap.keySet().iterator();    	non-compiled	[CE]  illegal  start  of  expression	13	None	replace
18	[BUG]  [BUGGY]  final  Map  commandLine  =  optionsMap.keySet().iterator();  [CE]  illegal  start  of  expression  [FE]                OptionException      [CONTEXT]        if  (optionMap.containsKey(arg))  {  return  true;  }  final  Map  tailMap  =  optionMap.tailMap(arg);  for  (final  Iterator  iter  =  tailMap.values().iterator();  iter.hasNext();)  {      [BUGGY]  final  Map  commandLine  =  optionsMap.keySet().iterator();  [BUGGY]      final  Option  option  =  (Option)  iter.next();  if  (option.canProcess(commandLine,  arg))  {  return  true;  }  }  if  (looksLikeOption(commandLine,  arg))  {  return  false;  }  [CLASS]  GroupImpl  [METHOD]  canProcess  [RETURN_TYPE]  boolean  WriteableCommandLine  commandLine  String  arg  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  SortedMap  newOptionMap  optionMap  WriteableCommandLine  commandLine  Iterator  iter  List  anonymous  newAnonymous  options  Option  option  String  arg  description  name  Map  tailMap  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	132	132	1	replace	final  Map  commandLine  =  optionsMap.keySet().iterator();	  final    Map    commandLine    =    optionMap.keySet().iterator();    	non-compiled	[CE]  illegal  start  of  expression	13	None	replace
19	[BUG]  [BUGGY]  Option  commandLine  =(Option)iter.getAnonymousCommandLine();  [CE]  illegal  start  of  expression  [FE]              OptionException      [CONTEXT]        if  (optionMap.containsKey(arg))  {  return  true;  }  final  Map  tailMap  =  optionMap.tailMap(arg);  for  (final  Iterator  iter  =  tailMap.values().iterator();  iter.hasNext();)  {      [BUGGY]  Option  commandLine  =(Option)iter.getAnonymousCommandLine();  [BUGGY]      final  Option  option  =  (Option)  iter.next();  if  (option.canProcess(commandLine,  arg))  {  return  true;  }  }  if  (looksLikeOption(commandLine,  arg))  {  return  false;  }  [CLASS]  GroupImpl  [METHOD]  canProcess  [RETURN_TYPE]  boolean  WriteableCommandLine  commandLine  String  arg  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  SortedMap  newOptionMap  optionMap  WriteableCommandLine  commandLine  Iterator  iter  List  anonymous  newAnonymous  options  Option  option  String  arg  description  name  Map  tailMap  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	132	132	1	replace	Option  commandLine  =(Option)iter.getAnonymousCommandLine();	  Option    commandLine    =(Option)iter.getValue();    	non-compiled	[CE]  illegal  start  of  expression	24	None	replace
20	[BUG]  [BUGGY]  Option  commandLine  =(Option)iter.getKey();  [CE]  illegal  start  of  expression  [FE]                OptionException      [CONTEXT]        if  (optionMap.containsKey(arg))  {  return  true;  }  final  Map  tailMap  =  optionMap.tailMap(arg);  for  (final  Iterator  iter  =  tailMap.values().iterator();  iter.hasNext();)  {      [BUGGY]  Option  commandLine  =(Option)iter.getKey();  [BUGGY]      final  Option  option  =  (Option)  iter.next();  if  (option.canProcess(commandLine,  arg))  {  return  true;  }  }  if  (looksLikeOption(commandLine,  arg))  {  return  false;  }  [CLASS]  GroupImpl  [METHOD]  canProcess  [RETURN_TYPE]  boolean  WriteableCommandLine  commandLine  String  arg  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  SortedMap  newOptionMap  optionMap  WriteableCommandLine  commandLine  Iterator  iter  List  anonymous  newAnonymous  options  Option  option  String  arg  description  name  Map  tailMap  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	132	132	1	replace	Option  commandLine  =(Option)iter.getKey();	  Option    commandLine    =(Option)iter.getValue();    	non-compiled	[CE]  illegal  start  of  expression	24	None	replace
21	[BUG]  [BUGGY]  final  ArrayList  <  Option>  newAnonymous  =(ArrayList  <  Option>)iter.next();  [CE]  illegal  start  of  expression  [FE]                  OptionException      [CONTEXT]        if  (optionMap.containsKey(arg))  {  return  true;  }  final  Map  tailMap  =  optionMap.tailMap(arg);  for  (final  Iterator  iter  =  tailMap.values().iterator();  iter.hasNext();)  {      [BUGGY]  final  ArrayList  <  Option>  newAnonymous  =(ArrayList  <  Option>)iter.next();  [BUGGY]      final  Option  option  =  (Option)  iter.next();  if  (option.canProcess(commandLine,  arg))  {  return  true;  }  }  if  (looksLikeOption(commandLine,  arg))  {  return  false;  }  [CLASS]  GroupImpl  [METHOD]  canProcess  [RETURN_TYPE]  boolean  WriteableCommandLine  commandLine  String  arg  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  SortedMap  newOptionMap  optionMap  WriteableCommandLine  commandLine  Iterator  iter  List  anonymous  newAnonymous  options  Option  option  String  arg  description  name  Map  tailMap  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	132	132	1	replace	final  ArrayList  <  Option>  newAnonymous  =(ArrayList  <  Option>)iter.next();	  ArrayList    <    Option>    newAnonymous    =(ArrayList    <    Option>)iter.next();    	non-compiled	[CE]  illegal  start  of  expression	11	None	replace
22	[BUG]  [BUGGY]  final  Map  commandLine  =(Map)iter.getAnonymousCommandLine();  [CE]  illegal  start  of  expression  [FE]            OptionException      [CONTEXT]        if  (optionMap.containsKey(arg))  {  return  true;  }  final  Map  tailMap  =  optionMap.tailMap(arg);  for  (final  Iterator  iter  =  tailMap.values().iterator();  iter.hasNext();)  {      [BUGGY]  final  Map  commandLine  =(Map)iter.getAnonymousCommandLine();  [BUGGY]      final  Option  option  =  (Option)  iter.next();  if  (option.canProcess(commandLine,  arg))  {  return  true;  }  }  if  (looksLikeOption(commandLine,  arg))  {  return  false;  }  [CLASS]  GroupImpl  [METHOD]  canProcess  [RETURN_TYPE]  boolean  WriteableCommandLine  commandLine  String  arg  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  SortedMap  newOptionMap  optionMap  WriteableCommandLine  commandLine  Iterator  iter  List  anonymous  newAnonymous  options  Option  option  String  arg  description  name  Map  tailMap  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	132	132	1	replace	final  Map  commandLine  =(Map)iter.getAnonymousCommandLine();	  final    Map    commandLine    =(Map)iter.getValue();    	non-compiled	[CE]  illegal  start  of  expression	5	None	replace
23	[BUG]  [BUGGY]  final  Map  commandLine  =(Map)iter.getKey();  [CE]  illegal  start  of  expression  [FE]              OptionException      [CONTEXT]        if  (optionMap.containsKey(arg))  {  return  true;  }  final  Map  tailMap  =  optionMap.tailMap(arg);  for  (final  Iterator  iter  =  tailMap.values().iterator();  iter.hasNext();)  {      [BUGGY]  final  Map  commandLine  =(Map)iter.getKey();  [BUGGY]      final  Option  option  =  (Option)  iter.next();  if  (option.canProcess(commandLine,  arg))  {  return  true;  }  }  if  (looksLikeOption(commandLine,  arg))  {  return  false;  }  [CLASS]  GroupImpl  [METHOD]  canProcess  [RETURN_TYPE]  boolean  WriteableCommandLine  commandLine  String  arg  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  SortedMap  newOptionMap  optionMap  WriteableCommandLine  commandLine  Iterator  iter  List  anonymous  newAnonymous  options  Option  option  String  arg  description  name  Map  tailMap  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	132	132	1	replace	final  Map  commandLine  =(Map)iter.getKey();	  final    Map    commandLine    =(Map)iter.getValue();    	non-compiled	[CE]  illegal  start  of  expression	5	None	replace
24	[BUG]  [BUGGY]  String  commandLine  =(String)iter.next(),  description);  [CE]  illegal  start  of  expression  [FE]                  OptionException      [CONTEXT]        if  (optionMap.containsKey(arg))  {  return  true;  }  final  Map  tailMap  =  optionMap.tailMap(arg);  for  (final  Iterator  iter  =  tailMap.values().iterator();  iter.hasNext();)  {      [BUGGY]  String  commandLine  =(String)iter.next(),  description);  [BUGGY]        if  (option.canProcess(commandLine,  arg))  {  return  true;  }  }  if  (looksLikeOption(commandLine,  arg))  {  return  false;  }  [CLASS]  GroupImpl  [METHOD]  canProcess  [RETURN_TYPE]  boolean  WriteableCommandLine  commandLine  String  arg  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  SortedMap  newOptionMap  optionMap  WriteableCommandLine  commandLine  Iterator  iter  List  anonymous  newAnonymous  options  Option  option  String  arg  description  name  Map  tailMap  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	132	132	1	replace	String  commandLine  =(String)iter.next(),  description);	  String    commandLine    =(String)iter.next();    	non-compiled	[CE]  illegal  start  of  expression	3	None	replace
25	[BUG]  [BUGGY]  String  commandLine  =(String)iter.next()  -  1;  [CE]  illegal  start  of  expression  [FE]                    OptionException      [CONTEXT]        if  (optionMap.containsKey(arg))  {  return  true;  }  final  Map  tailMap  =  optionMap.tailMap(arg);  for  (final  Iterator  iter  =  tailMap.values().iterator();  iter.hasNext();)  {      [BUGGY]  String  commandLine  =(String)iter.next()  -  1;  [BUGGY]        if  (option.canProcess(commandLine,  arg))  {  return  true;  }  }  if  (looksLikeOption(commandLine,  arg))  {  return  false;  }  [CLASS]  GroupImpl  [METHOD]  canProcess  [RETURN_TYPE]  boolean  WriteableCommandLine  commandLine  String  arg  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  SortedMap  newOptionMap  optionMap  WriteableCommandLine  commandLine  Iterator  iter  List  anonymous  newAnonymous  options  Option  option  String  arg  description  name  Map  tailMap  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	132	132	1	replace	String  commandLine  =(String)iter.next()  -  1;	  String    commandLine    =(String)iter.next();    	non-compiled	[CE]  illegal  start  of  expression	3	None	replace
26	[BUG]  [BUGGY]  String  commandLine  =(String)iter.next(),  description;  [CE]  illegal  start  of  expression  [FE]                      OptionException      [CONTEXT]        if  (optionMap.containsKey(arg))  {  return  true;  }  final  Map  tailMap  =  optionMap.tailMap(arg);  for  (final  Iterator  iter  =  tailMap.values().iterator();  iter.hasNext();)  {      [BUGGY]  String  commandLine  =(String)iter.next(),  description;  [BUGGY]        if  (option.canProcess(commandLine,  arg))  {  return  true;  }  }  if  (looksLikeOption(commandLine,  arg))  {  return  false;  }  [CLASS]  GroupImpl  [METHOD]  canProcess  [RETURN_TYPE]  boolean  WriteableCommandLine  commandLine  String  arg  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  SortedMap  newOptionMap  optionMap  WriteableCommandLine  commandLine  Iterator  iter  List  anonymous  newAnonymous  options  Option  option  String  arg  description  name  Map  tailMap  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	132	132	1	replace	String  commandLine  =(String)iter.next(),  description;	  String    commandLine    =(String)iter.next();    	non-compiled	[CE]  illegal  start  of  expression	3	None	replace
27	[BUG]  [BUGGY]  final  Map  commandLine  =  iter.next();  [CE]  illegal  start  of  expression  [FE]            OptionException      [CONTEXT]        if  (optionMap.containsKey(arg))  {  return  true;  }  final  Map  tailMap  =  optionMap.tailMap(arg);  for  (final  Iterator  iter  =  tailMap.values().iterator();  iter.hasNext();)  {      [BUGGY]  final  Map  commandLine  =  iter.next();  [BUGGY]      final  Option  option  =  (Option)  iter.next();  if  (option.canProcess(commandLine,  arg))  {  return  true;  }  }  if  (looksLikeOption(commandLine,  arg))  {  return  false;  }  [CLASS]  GroupImpl  [METHOD]  canProcess  [RETURN_TYPE]  boolean  WriteableCommandLine  commandLine  String  arg  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  SortedMap  newOptionMap  optionMap  WriteableCommandLine  commandLine  Iterator  iter  List  anonymous  newAnonymous  options  Option  option  String  arg  description  name  Map  tailMap  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	132	132	1	replace	final  Map  commandLine  =  iter.next();	  final    Map    commandLine    =    options.values().iterator();    	non-compiled	[CE]  illegal  start  of  expression	12	None	replace
28	[BUG]  [BUGGY]  final  Map  commandLine  =  iter.values().iterator();  [CE]  illegal  start  of  expression  [FE]              OptionException      [CONTEXT]        if  (optionMap.containsKey(arg))  {  return  true;  }  final  Map  tailMap  =  optionMap.tailMap(arg);  for  (final  Iterator  iter  =  tailMap.values().iterator();  iter.hasNext();)  {      [BUGGY]  final  Map  commandLine  =  iter.values().iterator();  [BUGGY]      final  Option  option  =  (Option)  iter.next();  if  (option.canProcess(commandLine,  arg))  {  return  true;  }  }  if  (looksLikeOption(commandLine,  arg))  {  return  false;  }  [CLASS]  GroupImpl  [METHOD]  canProcess  [RETURN_TYPE]  boolean  WriteableCommandLine  commandLine  String  arg  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  SortedMap  newOptionMap  optionMap  WriteableCommandLine  commandLine  Iterator  iter  List  anonymous  newAnonymous  options  Option  option  String  arg  description  name  Map  tailMap  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	132	132	1	replace	final  Map  commandLine  =  iter.values().iterator();	  final    Map    commandLine    =    options.values().iterator();    	non-compiled	[CE]  illegal  start  of  expression	12	None	replace
29	[BUG]  [BUGGY]  Option  option  =(Option)iter.next();  if(option.hasProcess(commandLine,  arg))  {  return  false;  }  [CE]  illegal  start  of  expression  [FE]                OptionException      [CONTEXT]        if  (optionMap.containsKey(arg))  {  return  true;  }  final  Map  tailMap  =  optionMap.tailMap(arg);  for  (final  Iterator  iter  =  tailMap.values().iterator();  iter.hasNext();)  {      [BUGGY]  Option  option  =(Option)iter.next();  if(option.hasProcess(commandLine,  arg))  {  return  false;  }  [BUGGY]        if  (option.canProcess(commandLine,  arg))  {  return  true;  }  }  if  (looksLikeOption(commandLine,  arg))  {  return  false;  }  [CLASS]  GroupImpl  [METHOD]  canProcess  [RETURN_TYPE]  boolean  WriteableCommandLine  commandLine  String  arg  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  SortedMap  newOptionMap  optionMap  WriteableCommandLine  commandLine  Iterator  iter  List  anonymous  newAnonymous  options  Option  option  String  arg  description  name  Map  tailMap  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	132	132	1	replace	Option  option  =(Option)iter.next();  if(option.hasProcess(commandLine,  arg))  {  return  false;  }	  Option    option    =(Option)iter.next();    if(option.canProcess(commandLine,    arg))    {    return    false;    }    	non-compiled	[CE]  illegal  start  of  expression	2	None	replace
30	[BUG]  [BUGGY]  Option  option  =(Option)iter.next(),  commandLine);  [CE]  illegal  start  of  expression  [FE]            OptionException      [CONTEXT]        if  (optionMap.containsKey(arg))  {  return  true;  }  final  Map  tailMap  =  optionMap.tailMap(arg);  for  (final  Iterator  iter  =  tailMap.values().iterator();  iter.hasNext();)  {      [BUGGY]  Option  option  =(Option)iter.next(),  commandLine);  [BUGGY]        if  (option.canProcess(commandLine,  arg))  {  return  true;  }  }  if  (looksLikeOption(commandLine,  arg))  {  return  false;  }  [CLASS]  GroupImpl  [METHOD]  canProcess  [RETURN_TYPE]  boolean  WriteableCommandLine  commandLine  String  arg  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  SortedMap  newOptionMap  optionMap  WriteableCommandLine  commandLine  Iterator  iter  List  anonymous  newAnonymous  options  Option  option  String  arg  description  name  Map  tailMap  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	132	132	1	replace	Option  option  =(Option)iter.next(),  commandLine);	  Option    option    =(Option)iter.next(),    description);    	non-compiled	[CE]  illegal  start  of  expression	18	None	replace
31	[BUG]  [BUGGY]  Option  option  =(Option)iter.next(),  name);  [CE]  illegal  start  of  expression  [FE]              OptionException      [CONTEXT]        if  (optionMap.containsKey(arg))  {  return  true;  }  final  Map  tailMap  =  optionMap.tailMap(arg);  for  (final  Iterator  iter  =  tailMap.values().iterator();  iter.hasNext();)  {      [BUGGY]  Option  option  =(Option)iter.next(),  name);  [BUGGY]        if  (option.canProcess(commandLine,  arg))  {  return  true;  }  }  if  (looksLikeOption(commandLine,  arg))  {  return  false;  }  [CLASS]  GroupImpl  [METHOD]  canProcess  [RETURN_TYPE]  boolean  WriteableCommandLine  commandLine  String  arg  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  SortedMap  newOptionMap  optionMap  WriteableCommandLine  commandLine  Iterator  iter  List  anonymous  newAnonymous  options  Option  option  String  arg  description  name  Map  tailMap  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	132	132	1	replace	Option  option  =(Option)iter.next(),  name);	  Option    option    =(Option)iter.next(),    description);    	non-compiled	[CE]  illegal  start  of  expression	18	None	replace
32	[BUG]  [BUGGY]  Option  option  =(Option)iter.next(),  this.commandLine);  [CE]  illegal  start  of  expression  [FE]                OptionException      [CONTEXT]        if  (optionMap.containsKey(arg))  {  return  true;  }  final  Map  tailMap  =  optionMap.tailMap(arg);  for  (final  Iterator  iter  =  tailMap.values().iterator();  iter.hasNext();)  {      [BUGGY]  Option  option  =(Option)iter.next(),  this.commandLine);  [BUGGY]        if  (option.canProcess(commandLine,  arg))  {  return  true;  }  }  if  (looksLikeOption(commandLine,  arg))  {  return  false;  }  [CLASS]  GroupImpl  [METHOD]  canProcess  [RETURN_TYPE]  boolean  WriteableCommandLine  commandLine  String  arg  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  SortedMap  newOptionMap  optionMap  WriteableCommandLine  commandLine  Iterator  iter  List  anonymous  newAnonymous  options  Option  option  String  arg  description  name  Map  tailMap  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	132	132	1	replace	Option  option  =(Option)iter.next(),  this.commandLine);	  Option    option    =(Option)iter.next(),    description);    	non-compiled	[CE]  illegal  start  of  expression	18	None	replace
33	[BUG]  [BUGGY]  final  ReadableCommandLine  commandLine  =(WriteableCommandLine)iter.next();  [CE]  illegal  start  of  expression  [FE]            OptionException      [CONTEXT]        if  (optionMap.containsKey(arg))  {  return  true;  }  final  Map  tailMap  =  optionMap.tailMap(arg);  for  (final  Iterator  iter  =  tailMap.values().iterator();  iter.hasNext();)  {      [BUGGY]  final  ReadableCommandLine  commandLine  =(WriteableCommandLine)iter.next();  [BUGGY]      final  Option  option  =  (Option)  iter.next();  if  (option.canProcess(commandLine,  arg))  {  return  true;  }  }  if  (looksLikeOption(commandLine,  arg))  {  return  false;  }  [CLASS]  GroupImpl  [METHOD]  canProcess  [RETURN_TYPE]  boolean  WriteableCommandLine  commandLine  String  arg  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  SortedMap  newOptionMap  optionMap  WriteableCommandLine  commandLine  Iterator  iter  List  anonymous  newAnonymous  options  Option  option  String  arg  description  name  Map  tailMap  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	132	132	1	replace	final  ReadableCommandLine  commandLine  =(WriteableCommandLine)iter.next();	  final    WriteableCommandLine    commandLine    =(WriteableCommandLine)iter.next();    	non-compiled	[CE]  illegal  start  of  expression	35	None	replace
34	[BUG]  [BUGGY]  final  WriteableCommandLine  commandLine  =(WriteableCommandLine)commandLine.next();  [CE]  illegal  start  of  expression  [FE]              OptionException      [CONTEXT]        if  (optionMap.containsKey(arg))  {  return  true;  }  final  Map  tailMap  =  optionMap.tailMap(arg);  for  (final  Iterator  iter  =  tailMap.values().iterator();  iter.hasNext();)  {      [BUGGY]  final  WriteableCommandLine  commandLine  =(WriteableCommandLine)commandLine.next();  [BUGGY]      final  Option  option  =  (Option)  iter.next();  if  (option.canProcess(commandLine,  arg))  {  return  true;  }  }  if  (looksLikeOption(commandLine,  arg))  {  return  false;  }  [CLASS]  GroupImpl  [METHOD]  canProcess  [RETURN_TYPE]  boolean  WriteableCommandLine  commandLine  String  arg  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  SortedMap  newOptionMap  optionMap  WriteableCommandLine  commandLine  Iterator  iter  List  anonymous  newAnonymous  options  Option  option  String  arg  description  name  Map  tailMap  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	132	132	1	replace	final  WriteableCommandLine  commandLine  =(WriteableCommandLine)commandLine.next();	  final    WriteableCommandLine    commandLine    =(WriteableCommandLine)iter.next();    	non-compiled	[CE]  illegal  start  of  expression	35	None	replace
35	[BUG]  [BUGGY]  Option  option  =  options.getOption(iter.next(),  description);  [CE]  illegal  start  of  expression  [FE]                    OptionException      [CONTEXT]        if  (optionMap.containsKey(arg))  {  return  true;  }  final  Map  tailMap  =  optionMap.tailMap(arg);  for  (final  Iterator  iter  =  tailMap.values().iterator();  iter.hasNext();)  {      [BUGGY]  Option  option  =  options.getOption(iter.next(),  description);  [BUGGY]        if  (option.canProcess(commandLine,  arg))  {  return  true;  }  }  if  (looksLikeOption(commandLine,  arg))  {  return  false;  }  [CLASS]  GroupImpl  [METHOD]  canProcess  [RETURN_TYPE]  boolean  WriteableCommandLine  commandLine  String  arg  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  SortedMap  newOptionMap  optionMap  WriteableCommandLine  commandLine  Iterator  iter  List  anonymous  newAnonymous  options  Option  option  String  arg  description  name  Map  tailMap  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	132	132	1	replace	Option  option  =  options.getOption(iter.next(),  description);	  Option    option    =    options.getOption(iter.next());    	non-compiled	[CE]  illegal  start  of  expression	33	None	replace
36	[BUG]  [BUGGY]  Option  option  =  options.getOption(iter.next()  +  1);  [CE]  illegal  start  of  expression  [FE]                      OptionException      [CONTEXT]        if  (optionMap.containsKey(arg))  {  return  true;  }  final  Map  tailMap  =  optionMap.tailMap(arg);  for  (final  Iterator  iter  =  tailMap.values().iterator();  iter.hasNext();)  {      [BUGGY]  Option  option  =  options.getOption(iter.next()  +  1);  [BUGGY]        if  (option.canProcess(commandLine,  arg))  {  return  true;  }  }  if  (looksLikeOption(commandLine,  arg))  {  return  false;  }  [CLASS]  GroupImpl  [METHOD]  canProcess  [RETURN_TYPE]  boolean  WriteableCommandLine  commandLine  String  arg  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  SortedMap  newOptionMap  optionMap  WriteableCommandLine  commandLine  Iterator  iter  List  anonymous  newAnonymous  options  Option  option  String  arg  description  name  Map  tailMap  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	132	132	1	replace	Option  option  =  options.getOption(iter.next()  +  1);	  Option    option    =    options.getOption(iter.next());    	non-compiled	[CE]  illegal  start  of  expression	33	None	replace
37	[BUG]  [BUGGY]  final  Map  commandLine  =(Map)iter.remove();  [CE]  illegal  start  of  expression  [FE]            OptionException      [CONTEXT]        if  (optionMap.containsKey(arg))  {  return  true;  }  final  Map  tailMap  =  optionMap.tailMap(arg);  for  (final  Iterator  iter  =  tailMap.values().iterator();  iter.hasNext();)  {      [BUGGY]  final  Map  commandLine  =(Map)iter.remove();  [BUGGY]      final  Option  option  =  (Option)  iter.next();  if  (option.canProcess(commandLine,  arg))  {  return  true;  }  }  if  (looksLikeOption(commandLine,  arg))  {  return  false;  }  [CLASS]  GroupImpl  [METHOD]  canProcess  [RETURN_TYPE]  boolean  WriteableCommandLine  commandLine  String  arg  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  SortedMap  newOptionMap  optionMap  WriteableCommandLine  commandLine  Iterator  iter  List  anonymous  newAnonymous  options  Option  option  String  arg  description  name  Map  tailMap  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	132	132	1	replace	final  Map  commandLine  =(Map)iter.remove();	  final    Map    commandLine    =(Map)iter.get();    	non-compiled	[CE]  illegal  start  of  expression	25	None	replace
38	[BUG]  [BUGGY]  Map  commandLine  =(Map)iter.next();  [CE]  illegal  start  of  expression  [FE]              OptionException      [CONTEXT]        if  (optionMap.containsKey(arg))  {  return  true;  }  final  Map  tailMap  =  optionMap.tailMap(arg);  for  (final  Iterator  iter  =  tailMap.values().iterator();  iter.hasNext();)  {      [BUGGY]  Map  commandLine  =(Map)iter.next();  [BUGGY]      final  Option  option  =  (Option)  iter.next();  if  (option.canProcess(commandLine,  arg))  {  return  true;  }  }  if  (looksLikeOption(commandLine,  arg))  {  return  false;  }  [CLASS]  GroupImpl  [METHOD]  canProcess  [RETURN_TYPE]  boolean  WriteableCommandLine  commandLine  String  arg  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  SortedMap  newOptionMap  optionMap  WriteableCommandLine  commandLine  Iterator  iter  List  anonymous  newAnonymous  options  Option  option  String  arg  description  name  Map  tailMap  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	132	132	1	replace	Map  commandLine  =(Map)iter.next();	  final    Map    commandLine    =(Map)iter.get();    	non-compiled	[CE]  illegal  start  of  expression	25	None	replace
39	[BUG]  [BUGGY]  List  <  Option>  options  =(List  <  Option>)iter.next();  [CE]  illegal  start  of  expression  [FE]                OptionException      [CONTEXT]        if  (optionMap.containsKey(arg))  {  return  true;  }  final  Map  tailMap  =  optionMap.tailMap(arg);  for  (final  Iterator  iter  =  tailMap.values().iterator();  iter.hasNext();)  {      [BUGGY]  List  <  Option>  options  =(List  <  Option>)iter.next();  [BUGGY]      final  Option  option  =  (Option)  iter.next();  if  (option.canProcess(commandLine,  arg))  {  return  true;  }  }  if  (looksLikeOption(commandLine,  arg))  {  return  false;  }  [CLASS]  GroupImpl  [METHOD]  canProcess  [RETURN_TYPE]  boolean  WriteableCommandLine  commandLine  String  arg  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  SortedMap  newOptionMap  optionMap  WriteableCommandLine  commandLine  Iterator  iter  List  anonymous  newAnonymous  options  Option  option  String  arg  description  name  Map  tailMap  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	132	132	1	replace	List  <  Option>  options  =(List  <  Option>)iter.next();	  final    List    <    Option>    options    =(List    <    Option>)iter.next();    	non-compiled	[CE]  illegal  start  of  expression	21	None	replace
40	[BUG]  [BUGGY]  final  String  commandLine  =(String)iter.getValue()  +  1;  [CE]  illegal  start  of  expression  [FE]                OptionException      [CONTEXT]        if  (optionMap.containsKey(arg))  {  return  true;  }  final  Map  tailMap  =  optionMap.tailMap(arg);  for  (final  Iterator  iter  =  tailMap.values().iterator();  iter.hasNext();)  {      [BUGGY]  final  String  commandLine  =(String)iter.getValue()  +  1;  [BUGGY]      final  Option  option  =  (Option)  iter.next();  if  (option.canProcess(commandLine,  arg))  {  return  true;  }  }  if  (looksLikeOption(commandLine,  arg))  {  return  false;  }  [CLASS]  GroupImpl  [METHOD]  canProcess  [RETURN_TYPE]  boolean  WriteableCommandLine  commandLine  String  arg  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  SortedMap  newOptionMap  optionMap  WriteableCommandLine  commandLine  Iterator  iter  List  anonymous  newAnonymous  options  Option  option  String  arg  description  name  Map  tailMap  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	132	132	1	replace	final  String  commandLine  =(String)iter.getValue()  +  1;	  final    String    commandLine    =(String)iter.next()    +    1;    	non-compiled	[CE]  illegal  start  of  expression	30	None	replace
41	[BUG]  [BUGGY]  final  Set  <  Option>  newAnonymous  =(Set  <  Option>)iter.next();  [CE]  illegal  start  of  expression  [FE]              OptionException      [CONTEXT]        if  (optionMap.containsKey(arg))  {  return  true;  }  final  Map  tailMap  =  optionMap.tailMap(arg);  for  (final  Iterator  iter  =  tailMap.values().iterator();  iter.hasNext();)  {      [BUGGY]  final  Set  <  Option>  newAnonymous  =(Set  <  Option>)iter.next();  [BUGGY]      final  Option  option  =  (Option)  iter.next();  if  (option.canProcess(commandLine,  arg))  {  return  true;  }  }  if  (looksLikeOption(commandLine,  arg))  {  return  false;  }  [CLASS]  GroupImpl  [METHOD]  canProcess  [RETURN_TYPE]  boolean  WriteableCommandLine  commandLine  String  arg  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  SortedMap  newOptionMap  optionMap  WriteableCommandLine  commandLine  Iterator  iter  List  anonymous  newAnonymous  options  Option  option  String  arg  description  name  Map  tailMap  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	132	132	1	replace	final  Set  <  Option>  newAnonymous  =(Set  <  Option>)iter.next();	  final    List    <    Option>    newAnonymous    =(List    <    Option>)iter.next();    	non-compiled	[CE]  illegal  start  of  expression	9	None	replace
42	[BUG]  [BUGGY]  WriteableCommandLine  commandLine  =(WriteableCommandLine)commandLine.next();  [CE]  illegal  start  of  expression  [FE]                OptionException      [CONTEXT]        if  (optionMap.containsKey(arg))  {  return  true;  }  final  Map  tailMap  =  optionMap.tailMap(arg);  for  (final  Iterator  iter  =  tailMap.values().iterator();  iter.hasNext();)  {      [BUGGY]  WriteableCommandLine  commandLine  =(WriteableCommandLine)commandLine.next();  [BUGGY]        if  (option.canProcess(commandLine,  arg))  {  return  true;  }  }  if  (looksLikeOption(commandLine,  arg))  {  return  false;  }  [CLASS]  GroupImpl  [METHOD]  canProcess  [RETURN_TYPE]  boolean  WriteableCommandLine  commandLine  String  arg  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  SortedMap  newOptionMap  optionMap  WriteableCommandLine  commandLine  Iterator  iter  List  anonymous  newAnonymous  options  Option  option  String  arg  description  name  Map  tailMap  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	132	132	1	replace	WriteableCommandLine  commandLine  =(WriteableCommandLine)commandLine.next();	  WriteableCommandLine    commandLine    =(WriteableCommandLine)iter.next();    	non-compiled	[CE]  illegal  start  of  expression	31	None	replace
43	[BUG]  [BUGGY]  WriteableCommandLine  commandLine  =(WriteableCommandLine)iter.next(),  description;  [CE]  illegal  start  of  expression  [FE]                  OptionException      [CONTEXT]        if  (optionMap.containsKey(arg))  {  return  true;  }  final  Map  tailMap  =  optionMap.tailMap(arg);  for  (final  Iterator  iter  =  tailMap.values().iterator();  iter.hasNext();)  {      [BUGGY]  WriteableCommandLine  commandLine  =(WriteableCommandLine)iter.next(),  description;  [BUGGY]        if  (option.canProcess(commandLine,  arg))  {  return  true;  }  }  if  (looksLikeOption(commandLine,  arg))  {  return  false;  }  [CLASS]  GroupImpl  [METHOD]  canProcess  [RETURN_TYPE]  boolean  WriteableCommandLine  commandLine  String  arg  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  SortedMap  newOptionMap  optionMap  WriteableCommandLine  commandLine  Iterator  iter  List  anonymous  newAnonymous  options  Option  option  String  arg  description  name  Map  tailMap  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	132	132	1	replace	WriteableCommandLine  commandLine  =(WriteableCommandLine)iter.next(),  description;	  WriteableCommandLine    commandLine    =(WriteableCommandLine)iter.next();    	non-compiled	[CE]  illegal  start  of  expression	31	None	replace
44	[BUG]  [BUGGY]  WriteableCommandLine  commandLine  =(WriteableCommandLine)this.commandLine.next();  [CE]  illegal  start  of  expression  [FE]                    OptionException      [CONTEXT]        if  (optionMap.containsKey(arg))  {  return  true;  }  final  Map  tailMap  =  optionMap.tailMap(arg);  for  (final  Iterator  iter  =  tailMap.values().iterator();  iter.hasNext();)  {      [BUGGY]  WriteableCommandLine  commandLine  =(WriteableCommandLine)this.commandLine.next();  [BUGGY]        if  (option.canProcess(commandLine,  arg))  {  return  true;  }  }  if  (looksLikeOption(commandLine,  arg))  {  return  false;  }  [CLASS]  GroupImpl  [METHOD]  canProcess  [RETURN_TYPE]  boolean  WriteableCommandLine  commandLine  String  arg  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  SortedMap  newOptionMap  optionMap  WriteableCommandLine  commandLine  Iterator  iter  List  anonymous  newAnonymous  options  Option  option  String  arg  description  name  Map  tailMap  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	132	132	1	replace	WriteableCommandLine  commandLine  =(WriteableCommandLine)this.commandLine.next();	  WriteableCommandLine    commandLine    =(WriteableCommandLine)iter.next();    	non-compiled	[CE]  illegal  start  of  expression	31	None	replace
45	[BUG]  [BUGGY]  final  ArrayList  <  Option>  options  =(ArrayList  <  Option>)iter.next();  [CE]  illegal  start  of  expression  [FE]              OptionException      [CONTEXT]        if  (optionMap.containsKey(arg))  {  return  true;  }  final  Map  tailMap  =  optionMap.tailMap(arg);  for  (final  Iterator  iter  =  tailMap.values().iterator();  iter.hasNext();)  {      [BUGGY]  final  ArrayList  <  Option>  options  =(ArrayList  <  Option>)iter.next();  [BUGGY]      final  Option  option  =  (Option)  iter.next();  if  (option.canProcess(commandLine,  arg))  {  return  true;  }  }  if  (looksLikeOption(commandLine,  arg))  {  return  false;  }  [CLASS]  GroupImpl  [METHOD]  canProcess  [RETURN_TYPE]  boolean  WriteableCommandLine  commandLine  String  arg  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  SortedMap  newOptionMap  optionMap  WriteableCommandLine  commandLine  Iterator  iter  List  anonymous  newAnonymous  options  Option  option  String  arg  description  name  Map  tailMap  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	132	132	1	replace	final  ArrayList  <  Option>  options  =(ArrayList  <  Option>)iter.next();	  final    Set    <    Option>    options    =(Set    <    Option>)iter.next();    	non-compiled	[CE]  illegal  start  of  expression	20	None	replace
46	[BUG]  [BUGGY]  final  String  commandLine  =(String)iter.next(),  name);  [CE]  illegal  start  of  expression  [FE]            OptionException      [CONTEXT]        if  (optionMap.containsKey(arg))  {  return  true;  }  final  Map  tailMap  =  optionMap.tailMap(arg);  for  (final  Iterator  iter  =  tailMap.values().iterator();  iter.hasNext();)  {      [BUGGY]  final  String  commandLine  =(String)iter.next(),  name);  [BUGGY]      final  Option  option  =  (Option)  iter.next();  if  (option.canProcess(commandLine,  arg))  {  return  true;  }  }  if  (looksLikeOption(commandLine,  arg))  {  return  false;  }  [CLASS]  GroupImpl  [METHOD]  canProcess  [RETURN_TYPE]  boolean  WriteableCommandLine  commandLine  String  arg  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  SortedMap  newOptionMap  optionMap  WriteableCommandLine  commandLine  Iterator  iter  List  anonymous  newAnonymous  options  Option  option  String  arg  description  name  Map  tailMap  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	132	132	1	replace	final  String  commandLine  =(String)iter.next(),  name);	  final    String    commandLine    =(String)iter.next(),    description);    	non-compiled	[CE]  illegal  start  of  expression	7	None	replace
47	[BUG]  [BUGGY]  final  String  commandLine  =(String)iter.next(),  this.commandLine);  [CE]  illegal  start  of  expression  [FE]              OptionException      [CONTEXT]        if  (optionMap.containsKey(arg))  {  return  true;  }  final  Map  tailMap  =  optionMap.tailMap(arg);  for  (final  Iterator  iter  =  tailMap.values().iterator();  iter.hasNext();)  {      [BUGGY]  final  String  commandLine  =(String)iter.next(),  this.commandLine);  [BUGGY]      final  Option  option  =  (Option)  iter.next();  if  (option.canProcess(commandLine,  arg))  {  return  true;  }  }  if  (looksLikeOption(commandLine,  arg))  {  return  false;  }  [CLASS]  GroupImpl  [METHOD]  canProcess  [RETURN_TYPE]  boolean  WriteableCommandLine  commandLine  String  arg  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  SortedMap  newOptionMap  optionMap  WriteableCommandLine  commandLine  Iterator  iter  List  anonymous  newAnonymous  options  Option  option  String  arg  description  name  Map  tailMap  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	132	132	1	replace	final  String  commandLine  =(String)iter.next(),  this.commandLine);	  final    String    commandLine    =(String)iter.next(),    description);    	non-compiled	[CE]  illegal  start  of  expression	7	None	replace
48	[BUG]  [BUGGY]  final  String  commandLine  =(String)iter.next(),  description  +  1);  [CE]  illegal  start  of  expression  [FE]                OptionException      [CONTEXT]        if  (optionMap.containsKey(arg))  {  return  true;  }  final  Map  tailMap  =  optionMap.tailMap(arg);  for  (final  Iterator  iter  =  tailMap.values().iterator();  iter.hasNext();)  {      [BUGGY]  final  String  commandLine  =(String)iter.next(),  description  +  1);  [BUGGY]      final  Option  option  =  (Option)  iter.next();  if  (option.canProcess(commandLine,  arg))  {  return  true;  }  }  if  (looksLikeOption(commandLine,  arg))  {  return  false;  }  [CLASS]  GroupImpl  [METHOD]  canProcess  [RETURN_TYPE]  boolean  WriteableCommandLine  commandLine  String  arg  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  SortedMap  newOptionMap  optionMap  WriteableCommandLine  commandLine  Iterator  iter  List  anonymous  newAnonymous  options  Option  option  String  arg  description  name  Map  tailMap  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	132	132	1	replace	final  String  commandLine  =(String)iter.next(),  description  +  1);	  final    String    commandLine    =(String)iter.next(),    description);    	non-compiled	[CE]  illegal  start  of  expression	7	None	replace
49	[BUG]  [BUGGY]  final  Map  commandLine  =  iter.next().iterator();  [CE]  illegal  start  of  expression  [FE]              OptionException      [CONTEXT]        if  (optionMap.containsKey(arg))  {  return  true;  }  final  Map  tailMap  =  optionMap.tailMap(arg);  for  (final  Iterator  iter  =  tailMap.values().iterator();  iter.hasNext();)  {      [BUGGY]  final  Map  commandLine  =  iter.next().iterator();  [BUGGY]      final  Option  option  =  (Option)  iter.next();  if  (option.canProcess(commandLine,  arg))  {  return  true;  }  }  if  (looksLikeOption(commandLine,  arg))  {  return  false;  }  [CLASS]  GroupImpl  [METHOD]  canProcess  [RETURN_TYPE]  boolean  WriteableCommandLine  commandLine  String  arg  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  SortedMap  newOptionMap  optionMap  WriteableCommandLine  commandLine  Iterator  iter  List  anonymous  newAnonymous  options  Option  option  String  arg  description  name  Map  tailMap  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	132	132	1	replace	final  Map  commandLine  =  iter.next().iterator();	  final    Map    commandLine    =    tailMap.values().iterator();    	non-compiled	[CE]  illegal  start  of  expression	27	None	replace
50	[BUG]  [BUGGY]  final  ArrayList  <  Option>  newAnonymousOptions  =(ArrayList  <  Option>)iter.next();  [CE]  illegal  start  of  expression  [FE]                    OptionException      [CONTEXT]        if  (optionMap.containsKey(arg))  {  return  true;  }  final  Map  tailMap  =  optionMap.tailMap(arg);  for  (final  Iterator  iter  =  tailMap.values().iterator();  iter.hasNext();)  {      [BUGGY]  final  ArrayList  <  Option>  newAnonymousOptions  =(ArrayList  <  Option>)iter.next();  [BUGGY]      final  Option  option  =  (Option)  iter.next();  if  (option.canProcess(commandLine,  arg))  {  return  true;  }  }  if  (looksLikeOption(commandLine,  arg))  {  return  false;  }  [CLASS]  GroupImpl  [METHOD]  canProcess  [RETURN_TYPE]  boolean  WriteableCommandLine  commandLine  String  arg  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  SortedMap  newOptionMap  optionMap  WriteableCommandLine  commandLine  Iterator  iter  List  anonymous  newAnonymous  options  Option  option  String  arg  description  name  Map  tailMap  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	132	132	1	replace	final  ArrayList  <  Option>  newAnonymousOptions  =(ArrayList  <  Option>)iter.next();	  ArrayList    <    Option>    newAnonymousOptions    =(ArrayList    <    Option>)iter.next();    	non-compiled	[CE]  illegal  start  of  expression	17	None	replace
51	[BUG]  [BUGGY]  final  String  commandLine  =(String)iter.getValue()  -  1;  [CE]  illegal  start  of  expression  [FE]              OptionException      [CONTEXT]        if  (optionMap.containsKey(arg))  {  return  true;  }  final  Map  tailMap  =  optionMap.tailMap(arg);  for  (final  Iterator  iter  =  tailMap.values().iterator();  iter.hasNext();)  {      [BUGGY]  final  String  commandLine  =(String)iter.getValue()  -  1;  [BUGGY]      final  Option  option  =  (Option)  iter.next();  if  (option.canProcess(commandLine,  arg))  {  return  true;  }  }  if  (looksLikeOption(commandLine,  arg))  {  return  false;  }  [CLASS]  GroupImpl  [METHOD]  canProcess  [RETURN_TYPE]  boolean  WriteableCommandLine  commandLine  String  arg  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  SortedMap  newOptionMap  optionMap  WriteableCommandLine  commandLine  Iterator  iter  List  anonymous  newAnonymous  options  Option  option  String  arg  description  name  Map  tailMap  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	132	132	1	replace	final  String  commandLine  =(String)iter.getValue()  -  1;	  final    String    commandLine    =(String)iter.next()    -    1;    	non-compiled	[CE]  illegal  start  of  expression	8	None	replace
52	[BUG]  [BUGGY]  final  WriteableCommandLine  commandLine  =(WritableCommandLine)iter.getValue();  [CE]  illegal  start  of  expression  [FE]              OptionException      [CONTEXT]        if  (optionMap.containsKey(arg))  {  return  true;  }  final  Map  tailMap  =  optionMap.tailMap(arg);  for  (final  Iterator  iter  =  tailMap.values().iterator();  iter.hasNext();)  {      [BUGGY]  final  WriteableCommandLine  commandLine  =(WritableCommandLine)iter.getValue();  [BUGGY]      final  Option  option  =  (Option)  iter.next();  if  (option.canProcess(commandLine,  arg))  {  return  true;  }  }  if  (looksLikeOption(commandLine,  arg))  {  return  false;  }  [CLASS]  GroupImpl  [METHOD]  canProcess  [RETURN_TYPE]  boolean  WriteableCommandLine  commandLine  String  arg  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  SortedMap  newOptionMap  optionMap  WriteableCommandLine  commandLine  Iterator  iter  List  anonymous  newAnonymous  options  Option  option  String  arg  description  name  Map  tailMap  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	132	132	1	replace	final  WriteableCommandLine  commandLine  =(WritableCommandLine)iter.getValue();	  final    String    commandLine    =(String)iter.getValue();    	non-compiled	[CE]  illegal  start  of  expression	29	None	replace
53	[BUG]  [BUGGY]  Option  option  =(Option)iter.next();  if(option.looksLikeOption(commandLine,  arg))  {  return  true;  }  [CE]  illegal  start  of  expression  [FE]                    OptionException      [CONTEXT]        if  (optionMap.containsKey(arg))  {  return  true;  }  final  Map  tailMap  =  optionMap.tailMap(arg);  for  (final  Iterator  iter  =  tailMap.values().iterator();  iter.hasNext();)  {      [BUGGY]  Option  option  =(Option)iter.next();  if(option.looksLikeOption(commandLine,  arg))  {  return  true;  }  [BUGGY]        if  (option.canProcess(commandLine,  arg))  {  return  true;  }  }  if  (looksLikeOption(commandLine,  arg))  {  return  false;  }  [CLASS]  GroupImpl  [METHOD]  canProcess  [RETURN_TYPE]  boolean  WriteableCommandLine  commandLine  String  arg  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  SortedMap  newOptionMap  optionMap  WriteableCommandLine  commandLine  Iterator  iter  List  anonymous  newAnonymous  options  Option  option  String  arg  description  name  Map  tailMap  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	132	132	1	replace	Option  option  =(Option)iter.next();  if(option.looksLikeOption(commandLine,  arg))  {  return  true;  }	  Option    option    =(Option)iter.next();    if(option.canProcess(commandLine,    arg))    {    return    true;    }    	non-compiled	[CE]  illegal  start  of  expression	4	None	replace
54	[BUG]  [BUGGY]  Option  option  =(Option)iter.next();  if(option.canProcess(commandLine,  null))  {  return  true;  }  [CE]  illegal  start  of  expression  [FE]                      OptionException      [CONTEXT]        if  (optionMap.containsKey(arg))  {  return  true;  }  final  Map  tailMap  =  optionMap.tailMap(arg);  for  (final  Iterator  iter  =  tailMap.values().iterator();  iter.hasNext();)  {      [BUGGY]  Option  option  =(Option)iter.next();  if(option.canProcess(commandLine,  null))  {  return  true;  }  [BUGGY]        if  (option.canProcess(commandLine,  arg))  {  return  true;  }  }  if  (looksLikeOption(commandLine,  arg))  {  return  false;  }  [CLASS]  GroupImpl  [METHOD]  canProcess  [RETURN_TYPE]  boolean  WriteableCommandLine  commandLine  String  arg  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  SortedMap  newOptionMap  optionMap  WriteableCommandLine  commandLine  Iterator  iter  List  anonymous  newAnonymous  options  Option  option  String  arg  description  name  Map  tailMap  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	132	132	1	replace	Option  option  =(Option)iter.next();  if(option.canProcess(commandLine,  null))  {  return  true;  }	  Option    option    =(Option)iter.next();    if(option.canProcess(commandLine,    arg))    {    return    true;    }    	non-compiled	[CE]  illegal  start  of  expression	4	None	replace
55	[BUG]  [BUGGY]  final  WriteableCommandLine  commandLine  =(ReadableCommandLine)iter.next();  [CE]  illegal  start  of  expression  [FE]            OptionException      [CONTEXT]        if  (optionMap.containsKey(arg))  {  return  true;  }  final  Map  tailMap  =  optionMap.tailMap(arg);  for  (final  Iterator  iter  =  tailMap.values().iterator();  iter.hasNext();)  {      [BUGGY]  final  WriteableCommandLine  commandLine  =(ReadableCommandLine)iter.next();  [BUGGY]      final  Option  option  =  (Option)  iter.next();  if  (option.canProcess(commandLine,  arg))  {  return  true;  }  }  if  (looksLikeOption(commandLine,  arg))  {  return  false;  }  [CLASS]  GroupImpl  [METHOD]  canProcess  [RETURN_TYPE]  boolean  WriteableCommandLine  commandLine  String  arg  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  SortedMap  newOptionMap  optionMap  WriteableCommandLine  commandLine  Iterator  iter  List  anonymous  newAnonymous  options  Option  option  String  arg  description  name  Map  tailMap  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	132	132	1	replace	final  WriteableCommandLine  commandLine  =(ReadableCommandLine)iter.next();	  final    WriteableCommandLine    commandLine    =(WritableCommandLine)iter.next();    	non-compiled	[CE]  illegal  start  of  expression	28	None	replace
56	[BUG]  [BUGGY]  final  WriteableCommandLine  commandLine  =(WritableCommandLine)iter.next()  -  1;  [CE]  illegal  start  of  expression  [FE]              OptionException      [CONTEXT]        if  (optionMap.containsKey(arg))  {  return  true;  }  final  Map  tailMap  =  optionMap.tailMap(arg);  for  (final  Iterator  iter  =  tailMap.values().iterator();  iter.hasNext();)  {      [BUGGY]  final  WriteableCommandLine  commandLine  =(WritableCommandLine)iter.next()  -  1;  [BUGGY]      final  Option  option  =  (Option)  iter.next();  if  (option.canProcess(commandLine,  arg))  {  return  true;  }  }  if  (looksLikeOption(commandLine,  arg))  {  return  false;  }  [CLASS]  GroupImpl  [METHOD]  canProcess  [RETURN_TYPE]  boolean  WriteableCommandLine  commandLine  String  arg  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  SortedMap  newOptionMap  optionMap  WriteableCommandLine  commandLine  Iterator  iter  List  anonymous  newAnonymous  options  Option  option  String  arg  description  name  Map  tailMap  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	132	132	1	replace	final  WriteableCommandLine  commandLine  =(WritableCommandLine)iter.next()  -  1;	  final    WriteableCommandLine    commandLine    =(WritableCommandLine)iter.next();    	non-compiled	[CE]  illegal  start  of  expression	28	None	replace
57	[BUG]  [BUGGY]  List  <  Option>  newAnonymousOptions  =(ArrayList  <  Option>)iter.next();  [CE]  illegal  start  of  expression  [FE]                    OptionException      [CONTEXT]        if  (optionMap.containsKey(arg))  {  return  true;  }  final  Map  tailMap  =  optionMap.tailMap(arg);  for  (final  Iterator  iter  =  tailMap.values().iterator();  iter.hasNext();)  {      [BUGGY]  List  <  Option>  newAnonymousOptions  =(ArrayList  <  Option>)iter.next();  [BUGGY]      final  Option  option  =  (Option)  iter.next();  if  (option.canProcess(commandLine,  arg))  {  return  true;  }  }  if  (looksLikeOption(commandLine,  arg))  {  return  false;  }  [CLASS]  GroupImpl  [METHOD]  canProcess  [RETURN_TYPE]  boolean  WriteableCommandLine  commandLine  String  arg  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  SortedMap  newOptionMap  optionMap  WriteableCommandLine  commandLine  Iterator  iter  List  anonymous  newAnonymous  options  Option  option  String  arg  description  name  Map  tailMap  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	132	132	1	replace	List  <  Option>  newAnonymousOptions  =(ArrayList  <  Option>)iter.next();	  ArrayList    <    Option>    newAnonymousOptions    =(ArrayList    <    Option>)iter.next();    	non-compiled	[CE]  illegal  start  of  expression	17	None	replace
58	[BUG]  [BUGGY]  WriteableCommandLine  commandLine  =(WritableCommandLine)iter.next();  [CE]  illegal  start  of  expression  [FE]                  OptionException      [CONTEXT]        if  (optionMap.containsKey(arg))  {  return  true;  }  final  Map  tailMap  =  optionMap.tailMap(arg);  for  (final  Iterator  iter  =  tailMap.values().iterator();  iter.hasNext();)  {      [BUGGY]  WriteableCommandLine  commandLine  =(WritableCommandLine)iter.next();  [BUGGY]        if  (option.canProcess(commandLine,  arg))  {  return  true;  }  }  if  (looksLikeOption(commandLine,  arg))  {  return  false;  }  [CLASS]  GroupImpl  [METHOD]  canProcess  [RETURN_TYPE]  boolean  WriteableCommandLine  commandLine  String  arg  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  SortedMap  newOptionMap  optionMap  WriteableCommandLine  commandLine  Iterator  iter  List  anonymous  newAnonymous  options  Option  option  String  arg  description  name  Map  tailMap  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	132	132	1	replace	WriteableCommandLine  commandLine  =(WritableCommandLine)iter.next();	  String    commandLine    =(String)iter.next();    	non-compiled	[CE]  illegal  start  of  expression	3	None	replace
59	[BUG]  [BUGGY]  String  commandLine  =(String)iter.next()  +  1;  [CE]  illegal  start  of  expression  [FE]                    OptionException      [CONTEXT]        if  (optionMap.containsKey(arg))  {  return  true;  }  final  Map  tailMap  =  optionMap.tailMap(arg);  for  (final  Iterator  iter  =  tailMap.values().iterator();  iter.hasNext();)  {      [BUGGY]  String  commandLine  =(String)iter.next()  +  1;  [BUGGY]        if  (option.canProcess(commandLine,  arg))  {  return  true;  }  }  if  (looksLikeOption(commandLine,  arg))  {  return  false;  }  [CLASS]  GroupImpl  [METHOD]  canProcess  [RETURN_TYPE]  boolean  WriteableCommandLine  commandLine  String  arg  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  SortedMap  newOptionMap  optionMap  WriteableCommandLine  commandLine  Iterator  iter  List  anonymous  newAnonymous  options  Option  option  String  arg  description  name  Map  tailMap  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	132	132	1	replace	String  commandLine  =(String)iter.next()  +  1;	  String    commandLine    =(String)iter.next();    	non-compiled	[CE]  illegal  start  of  expression	3	None	replace
60	[BUG]  [BUGGY]  String  commandLine  =(String)iter.next()  + ": "+commandLine;  [CE]  illegal  start  of  expression  [FE]                      OptionException      [CONTEXT]        if  (optionMap.containsKey(arg))  {  return  true;  }  final  Map  tailMap  =  optionMap.tailMap(arg);  for  (final  Iterator  iter  =  tailMap.values().iterator();  iter.hasNext();)  {      [BUGGY]  String  commandLine  =(String)iter.next()  + ": "+commandLine;  [BUGGY]        if  (option.canProcess(commandLine,  arg))  {  return  true;  }  }  if  (looksLikeOption(commandLine,  arg))  {  return  false;  }  [CLASS]  GroupImpl  [METHOD]  canProcess  [RETURN_TYPE]  boolean  WriteableCommandLine  commandLine  String  arg  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  SortedMap  newOptionMap  optionMap  WriteableCommandLine  commandLine  Iterator  iter  List  anonymous  newAnonymous  options  Option  option  String  arg  description  name  Map  tailMap  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	132	132	1	replace	String  commandLine  =(String)iter.next()  + ": "+commandLine;	  String    commandLine    =(String)iter.next();    	non-compiled	[CE]  illegal  start  of  expression	3	None	replace
61	[BUG]  [BUGGY]  final  Map  <  Option>  options  =(Map  <  Option>)iter.next();  [CE]  illegal  start  of  expression  [FE]                OptionException      [CONTEXT]        if  (optionMap.containsKey(arg))  {  return  true;  }  final  Map  tailMap  =  optionMap.tailMap(arg);  for  (final  Iterator  iter  =  tailMap.values().iterator();  iter.hasNext();)  {      [BUGGY]  final  Map  <  Option>  options  =(Map  <  Option>)iter.next();  [BUGGY]      final  Option  option  =  (Option)  iter.next();  if  (option.canProcess(commandLine,  arg))  {  return  true;  }  }  if  (looksLikeOption(commandLine,  arg))  {  return  false;  }  [CLASS]  GroupImpl  [METHOD]  canProcess  [RETURN_TYPE]  boolean  WriteableCommandLine  commandLine  String  arg  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  SortedMap  newOptionMap  optionMap  WriteableCommandLine  commandLine  Iterator  iter  List  anonymous  newAnonymous  options  Option  option  String  arg  description  name  Map  tailMap  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	132	132	1	replace	final  Map  <  Option>  options  =(Map  <  Option>)iter.next();	  final    List    <    Option>    options    =(List    <    Option>)iter.next();    	non-compiled	[CE]  illegal  start  of  expression	21	None	replace
62	[BUG]  [BUGGY]  final  Map  commandLine  =(Map)tailMap.get();  [CE]  illegal  start  of  expression  [FE]            OptionException      [CONTEXT]        if  (optionMap.containsKey(arg))  {  return  true;  }  final  Map  tailMap  =  optionMap.tailMap(arg);  for  (final  Iterator  iter  =  tailMap.values().iterator();  iter.hasNext();)  {      [BUGGY]  final  Map  commandLine  =(Map)tailMap.get();  [BUGGY]      final  Option  option  =  (Option)  iter.next();  if  (option.canProcess(commandLine,  arg))  {  return  true;  }  }  if  (looksLikeOption(commandLine,  arg))  {  return  false;  }  [CLASS]  GroupImpl  [METHOD]  canProcess  [RETURN_TYPE]  boolean  WriteableCommandLine  commandLine  String  arg  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  SortedMap  newOptionMap  optionMap  WriteableCommandLine  commandLine  Iterator  iter  List  anonymous  newAnonymous  options  Option  option  String  arg  description  name  Map  tailMap  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	132	132	1	replace	final  Map  commandLine  =(Map)tailMap.get();	  final    Map    commandLine    =(Map)iter.get();    	non-compiled	[CE]  illegal  start  of  expression	25	None	replace
63	[BUG]  [BUGGY]  Option  option  =(Option)iter.next();  if(option.looksLikeOption(commandLine,  arg))  {  return  false;  }  [CE]  illegal  start  of  expression  [FE]                OptionException      [CONTEXT]        if  (optionMap.containsKey(arg))  {  return  true;  }  final  Map  tailMap  =  optionMap.tailMap(arg);  for  (final  Iterator  iter  =  tailMap.values().iterator();  iter.hasNext();)  {      [BUGGY]  Option  option  =(Option)iter.next();  if(option.looksLikeOption(commandLine,  arg))  {  return  false;  }  [BUGGY]        if  (option.canProcess(commandLine,  arg))  {  return  true;  }  }  if  (looksLikeOption(commandLine,  arg))  {  return  false;  }  [CLASS]  GroupImpl  [METHOD]  canProcess  [RETURN_TYPE]  boolean  WriteableCommandLine  commandLine  String  arg  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  SortedMap  newOptionMap  optionMap  WriteableCommandLine  commandLine  Iterator  iter  List  anonymous  newAnonymous  options  Option  option  String  arg  description  name  Map  tailMap  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	132	132	1	replace	Option  option  =(Option)iter.next();  if(option.looksLikeOption(commandLine,  arg))  {  return  false;  }	  Option    option    =(Option)iter.next();    if(option.canProcess(commandLine,    arg))    {    return    false;    }    	non-compiled	[CE]  illegal  start  of  expression	2	None	replace
64	[BUG]  [BUGGY]  Option  option  =  optionMap.getOption(iter.next())+  1;  [CE]  illegal  start  of  expression  [FE]                  OptionException      [CONTEXT]        if  (optionMap.containsKey(arg))  {  return  true;  }  final  Map  tailMap  =  optionMap.tailMap(arg);  for  (final  Iterator  iter  =  tailMap.values().iterator();  iter.hasNext();)  {      [BUGGY]  Option  option  =  optionMap.getOption(iter.next())+  1;  [BUGGY]        if  (option.canProcess(commandLine,  arg))  {  return  true;  }  }  if  (looksLikeOption(commandLine,  arg))  {  return  false;  }  [CLASS]  GroupImpl  [METHOD]  canProcess  [RETURN_TYPE]  boolean  WriteableCommandLine  commandLine  String  arg  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  SortedMap  newOptionMap  optionMap  WriteableCommandLine  commandLine  Iterator  iter  List  anonymous  newAnonymous  options  Option  option  String  arg  description  name  Map  tailMap  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	132	132	1	replace	Option  option  =  optionMap.getOption(iter.next())+  1;	  Option    option    =    optionMap.getOption(iter.next());    	non-compiled	[CE]  illegal  start  of  expression	32	None	replace
65	[BUG]  [BUGGY]  WriteableCommandLine  commandLine  =(ReadableCommandLine)iter.next();  [CE]  illegal  start  of  expression  [FE]                OptionException      [CONTEXT]        if  (optionMap.containsKey(arg))  {  return  true;  }  final  Map  tailMap  =  optionMap.tailMap(arg);  for  (final  Iterator  iter  =  tailMap.values().iterator();  iter.hasNext();)  {      [BUGGY]  WriteableCommandLine  commandLine  =(ReadableCommandLine)iter.next();  [BUGGY]        if  (option.canProcess(commandLine,  arg))  {  return  true;  }  }  if  (looksLikeOption(commandLine,  arg))  {  return  false;  }  [CLASS]  GroupImpl  [METHOD]  canProcess  [RETURN_TYPE]  boolean  WriteableCommandLine  commandLine  String  arg  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  SortedMap  newOptionMap  optionMap  WriteableCommandLine  commandLine  Iterator  iter  List  anonymous  newAnonymous  options  Option  option  String  arg  description  name  Map  tailMap  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	132	132	1	replace	WriteableCommandLine  commandLine  =(ReadableCommandLine)iter.next();	  WriteableCommandLine    commandLine    =(WriteableCommandLine)iter.next();    	non-compiled	[CE]  illegal  start  of  expression	31	None	replace
66	[BUG]  [BUGGY]  WriteableCommandLine  commandLine  =(WriteableCommandLine)iter.next()  -  1;  [CE]  illegal  start  of  expression  [FE]                  OptionException      [CONTEXT]        if  (optionMap.containsKey(arg))  {  return  true;  }  final  Map  tailMap  =  optionMap.tailMap(arg);  for  (final  Iterator  iter  =  tailMap.values().iterator();  iter.hasNext();)  {      [BUGGY]  WriteableCommandLine  commandLine  =(WriteableCommandLine)iter.next()  -  1;  [BUGGY]        if  (option.canProcess(commandLine,  arg))  {  return  true;  }  }  if  (looksLikeOption(commandLine,  arg))  {  return  false;  }  [CLASS]  GroupImpl  [METHOD]  canProcess  [RETURN_TYPE]  boolean  WriteableCommandLine  commandLine  String  arg  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  SortedMap  newOptionMap  optionMap  WriteableCommandLine  commandLine  Iterator  iter  List  anonymous  newAnonymous  options  Option  option  String  arg  description  name  Map  tailMap  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	132	132	1	replace	WriteableCommandLine  commandLine  =(WriteableCommandLine)iter.next()  -  1;	  WriteableCommandLine    commandLine    =(WriteableCommandLine)iter.next();    	non-compiled	[CE]  illegal  start  of  expression	31	None	replace
67	[BUG]  [BUGGY]  final  List  <  Option>  options  =(ArrayList  <  Option>)iter.next();  [CE]  illegal  start  of  expression  [FE]              OptionException      [CONTEXT]        if  (optionMap.containsKey(arg))  {  return  true;  }  final  Map  tailMap  =  optionMap.tailMap(arg);  for  (final  Iterator  iter  =  tailMap.values().iterator();  iter.hasNext();)  {      [BUGGY]  final  List  <  Option>  options  =(ArrayList  <  Option>)iter.next();  [BUGGY]      final  Option  option  =  (Option)  iter.next();  if  (option.canProcess(commandLine,  arg))  {  return  true;  }  }  if  (looksLikeOption(commandLine,  arg))  {  return  false;  }  [CLASS]  GroupImpl  [METHOD]  canProcess  [RETURN_TYPE]  boolean  WriteableCommandLine  commandLine  String  arg  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  SortedMap  newOptionMap  optionMap  WriteableCommandLine  commandLine  Iterator  iter  List  anonymous  newAnonymous  options  Option  option  String  arg  description  name  Map  tailMap  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	132	132	1	replace	final  List  <  Option>  options  =(ArrayList  <  Option>)iter.next();	  final    Set    <    Option>    options    =(Set    <    Option>)iter.next();    	non-compiled	[CE]  illegal  start  of  expression	20	None	replace
68	[BUG]  [BUGGY]  option  =(Option)iter.next(),  description  +  1;  [CE]  illegal  start  of  expression  [FE]              OptionException      [CONTEXT]        if  (optionMap.containsKey(arg))  {  return  true;  }  final  Map  tailMap  =  optionMap.tailMap(arg);  for  (final  Iterator  iter  =  tailMap.values().iterator();  iter.hasNext();)  {      [BUGGY]  option  =(Option)iter.next(),  description  +  1;  [BUGGY]        if  (option.canProcess(commandLine,  arg))  {  return  true;  }  }  if  (looksLikeOption(commandLine,  arg))  {  return  false;  }  [CLASS]  GroupImpl  [METHOD]  canProcess  [RETURN_TYPE]  boolean  WriteableCommandLine  commandLine  String  arg  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  SortedMap  newOptionMap  optionMap  WriteableCommandLine  commandLine  Iterator  iter  List  anonymous  newAnonymous  options  Option  option  String  arg  description  name  Map  tailMap  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	132	132	1	replace	option  =(Option)iter.next(),  description  +  1;	  option    =(Option)iter.next(),    description);    	non-compiled	[CE]  illegal  start  of  expression	6	None	replace
69	[BUG]  [BUGGY]  option  =(Option)iter.next(),  description  +  1);  [CE]  illegal  start  of  expression  [FE]                OptionException      [CONTEXT]        if  (optionMap.containsKey(arg))  {  return  true;  }  final  Map  tailMap  =  optionMap.tailMap(arg);  for  (final  Iterator  iter  =  tailMap.values().iterator();  iter.hasNext();)  {      [BUGGY]  option  =(Option)iter.next(),  description  +  1);  [BUGGY]        if  (option.canProcess(commandLine,  arg))  {  return  true;  }  }  if  (looksLikeOption(commandLine,  arg))  {  return  false;  }  [CLASS]  GroupImpl  [METHOD]  canProcess  [RETURN_TYPE]  boolean  WriteableCommandLine  commandLine  String  arg  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  SortedMap  newOptionMap  optionMap  WriteableCommandLine  commandLine  Iterator  iter  List  anonymous  newAnonymous  options  Option  option  String  arg  description  name  Map  tailMap  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	132	132	1	replace	option  =(Option)iter.next(),  description  +  1);	  option    =(Option)iter.next(),    description);    	non-compiled	[CE]  illegal  start  of  expression	6	None	replace
70	[BUG]  [BUGGY]  List  <  Option>  newAnonymous  =(ArrayList  <  Option>)iter.next();  [CE]  illegal  start  of  expression  [FE]                  OptionException      [CONTEXT]        if  (optionMap.containsKey(arg))  {  return  true;  }  final  Map  tailMap  =  optionMap.tailMap(arg);  for  (final  Iterator  iter  =  tailMap.values().iterator();  iter.hasNext();)  {      [BUGGY]  List  <  Option>  newAnonymous  =(ArrayList  <  Option>)iter.next();  [BUGGY]      final  Option  option  =  (Option)  iter.next();  if  (option.canProcess(commandLine,  arg))  {  return  true;  }  }  if  (looksLikeOption(commandLine,  arg))  {  return  false;  }  [CLASS]  GroupImpl  [METHOD]  canProcess  [RETURN_TYPE]  boolean  WriteableCommandLine  commandLine  String  arg  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  SortedMap  newOptionMap  optionMap  WriteableCommandLine  commandLine  Iterator  iter  List  anonymous  newAnonymous  options  Option  option  String  arg  description  name  Map  tailMap  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	132	132	1	replace	List  <  Option>  newAnonymous  =(ArrayList  <  Option>)iter.next();	  ArrayList    <    Option>    newAnonymous    =(ArrayList    <    Option>)iter.next();    	non-compiled	[CE]  illegal  start  of  expression	11	None	replace
71	[BUG]  [BUGGY]  Option  option  =(Option)iter.next()?  null  :(Option)iter.next();  [CE]  illegal  start  of  expression  [FE]              OptionException      [CONTEXT]        if  (optionMap.containsKey(arg))  {  return  true;  }  final  Map  tailMap  =  optionMap.tailMap(arg);  for  (final  Iterator  iter  =  tailMap.values().iterator();  iter.hasNext();)  {      [BUGGY]  Option  option  =(Option)iter.next()?  null  :(Option)iter.next();  [BUGGY]        if  (option.canProcess(commandLine,  arg))  {  return  true;  }  }  if  (looksLikeOption(commandLine,  arg))  {  return  false;  }  [CLASS]  GroupImpl  [METHOD]  canProcess  [RETURN_TYPE]  boolean  WriteableCommandLine  commandLine  String  arg  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  SortedMap  newOptionMap  optionMap  WriteableCommandLine  commandLine  Iterator  iter  List  anonymous  newAnonymous  options  Option  option  String  arg  description  name  Map  tailMap  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	132	132	1	replace	Option  option  =(Option)iter.next()?  null  :(Option)iter.next();	  Option    option    =(Option)iter.next()    :    null;    	non-compiled	[CE]  illegal  start  of  expression	19	None	replace
72	[BUG]  [BUGGY]  Option  commandLine  =(Option)iter.getAnonymousValue();  [CE]  illegal  start  of  expression  [FE]              OptionException      [CONTEXT]        if  (optionMap.containsKey(arg))  {  return  true;  }  final  Map  tailMap  =  optionMap.tailMap(arg);  for  (final  Iterator  iter  =  tailMap.values().iterator();  iter.hasNext();)  {      [BUGGY]  Option  commandLine  =(Option)iter.getAnonymousValue();  [BUGGY]      final  Option  option  =  (Option)  iter.next();  if  (option.canProcess(commandLine,  arg))  {  return  true;  }  }  if  (looksLikeOption(commandLine,  arg))  {  return  false;  }  [CLASS]  GroupImpl  [METHOD]  canProcess  [RETURN_TYPE]  boolean  WriteableCommandLine  commandLine  String  arg  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  SortedMap  newOptionMap  optionMap  WriteableCommandLine  commandLine  Iterator  iter  List  anonymous  newAnonymous  options  Option  option  String  arg  description  name  Map  tailMap  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	132	132	1	replace	Option  commandLine  =(Option)iter.getAnonymousValue();	  Option    commandLine    =(Option)iter.getValue();    	non-compiled	[CE]  illegal  start  of  expression	24	None	replace
73	[BUG]  [BUGGY]  Option  option  =(Option)iter.next(),  description  +  1;  [CE]  illegal  start  of  expression  [FE]            OptionException      [CONTEXT]        if  (optionMap.containsKey(arg))  {  return  true;  }  final  Map  tailMap  =  optionMap.tailMap(arg);  for  (final  Iterator  iter  =  tailMap.values().iterator();  iter.hasNext();)  {      [BUGGY]  Option  option  =(Option)iter.next(),  description  +  1;  [BUGGY]        if  (option.canProcess(commandLine,  arg))  {  return  true;  }  }  if  (looksLikeOption(commandLine,  arg))  {  return  false;  }  [CLASS]  GroupImpl  [METHOD]  canProcess  [RETURN_TYPE]  boolean  WriteableCommandLine  commandLine  String  arg  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  SortedMap  newOptionMap  optionMap  WriteableCommandLine  commandLine  Iterator  iter  List  anonymous  newAnonymous  options  Option  option  String  arg  description  name  Map  tailMap  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	132	132	1	replace	Option  option  =(Option)iter.next(),  description  +  1;	  Option    option    =(Option)iter.next(),    description);    	non-compiled	[CE]  illegal  start  of  expression	18	None	replace
74	[BUG]  [BUGGY]  final  Option  commandLine  =(Option)iter.getValue();  [CE]  illegal  start  of  expression  [FE]              OptionException      [CONTEXT]        if  (optionMap.containsKey(arg))  {  return  true;  }  final  Map  tailMap  =  optionMap.tailMap(arg);  for  (final  Iterator  iter  =  tailMap.values().iterator();  iter.hasNext();)  {      [BUGGY]  final  Option  commandLine  =(Option)iter.getValue();  [BUGGY]      final  Option  option  =  (Option)  iter.next();  if  (option.canProcess(commandLine,  arg))  {  return  true;  }  }  if  (looksLikeOption(commandLine,  arg))  {  return  false;  }  [CLASS]  GroupImpl  [METHOD]  canProcess  [RETURN_TYPE]  boolean  WriteableCommandLine  commandLine  String  arg  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  SortedMap  newOptionMap  optionMap  WriteableCommandLine  commandLine  Iterator  iter  List  anonymous  newAnonymous  options  Option  option  String  arg  description  name  Map  tailMap  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	132	132	1	replace	final  Option  commandLine  =(Option)iter.getValue();	  final    Option    commandLine    =(Option)iter.next();    	non-compiled	[CE]  illegal  start  of  expression	1	None	replace
75	[BUG]  [BUGGY]  final  WriteableCommandLine  commandLine  =(WriteableCommandLine)iter.getValue();  [CE]  illegal  start  of  expression  [FE]            OptionException      [CONTEXT]        if  (optionMap.containsKey(arg))  {  return  true;  }  final  Map  tailMap  =  optionMap.tailMap(arg);  for  (final  Iterator  iter  =  tailMap.values().iterator();  iter.hasNext();)  {      [BUGGY]  final  WriteableCommandLine  commandLine  =(WriteableCommandLine)iter.getValue();  [BUGGY]      final  Option  option  =  (Option)  iter.next();  if  (option.canProcess(commandLine,  arg))  {  return  true;  }  }  if  (looksLikeOption(commandLine,  arg))  {  return  false;  }  [CLASS]  GroupImpl  [METHOD]  canProcess  [RETURN_TYPE]  boolean  WriteableCommandLine  commandLine  String  arg  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  SortedMap  newOptionMap  optionMap  WriteableCommandLine  commandLine  Iterator  iter  List  anonymous  newAnonymous  options  Option  option  String  arg  description  name  Map  tailMap  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	132	132	1	replace	final  WriteableCommandLine  commandLine  =(WriteableCommandLine)iter.getValue();	  final    WriteableCommandLine    commandLine    =(WriteableCommandLine)iter.next();    	non-compiled	[CE]  illegal  start  of  expression	35	None	replace
76	[BUG]  [BUGGY]  final  WriteableCommandLine  commandLine  =(WriteableCommandLine)iter.next()  -  1;  [CE]  illegal  start  of  expression  [FE]              OptionException      [CONTEXT]        if  (optionMap.containsKey(arg))  {  return  true;  }  final  Map  tailMap  =  optionMap.tailMap(arg);  for  (final  Iterator  iter  =  tailMap.values().iterator();  iter.hasNext();)  {      [BUGGY]  final  WriteableCommandLine  commandLine  =(WriteableCommandLine)iter.next()  -  1;  [BUGGY]      final  Option  option  =  (Option)  iter.next();  if  (option.canProcess(commandLine,  arg))  {  return  true;  }  }  if  (looksLikeOption(commandLine,  arg))  {  return  false;  }  [CLASS]  GroupImpl  [METHOD]  canProcess  [RETURN_TYPE]  boolean  WriteableCommandLine  commandLine  String  arg  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  SortedMap  newOptionMap  optionMap  WriteableCommandLine  commandLine  Iterator  iter  List  anonymous  newAnonymous  options  Option  option  String  arg  description  name  Map  tailMap  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	132	132	1	replace	final  WriteableCommandLine  commandLine  =(WriteableCommandLine)iter.next()  -  1;	  final    WriteableCommandLine    commandLine    =(WriteableCommandLine)iter.next();    	non-compiled	[CE]  illegal  start  of  expression	35	None	replace
77	[BUG]  [BUGGY]  final  WriteableCommandLine  commandLine  =(WriteableCommandLine)iter.getNext();  [CE]  illegal  start  of  expression  [FE]                OptionException      [CONTEXT]        if  (optionMap.containsKey(arg))  {  return  true;  }  final  Map  tailMap  =  optionMap.tailMap(arg);  for  (final  Iterator  iter  =  tailMap.values().iterator();  iter.hasNext();)  {      [BUGGY]  final  WriteableCommandLine  commandLine  =(WriteableCommandLine)iter.getNext();  [BUGGY]      final  Option  option  =  (Option)  iter.next();  if  (option.canProcess(commandLine,  arg))  {  return  true;  }  }  if  (looksLikeOption(commandLine,  arg))  {  return  false;  }  [CLASS]  GroupImpl  [METHOD]  canProcess  [RETURN_TYPE]  boolean  WriteableCommandLine  commandLine  String  arg  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  SortedMap  newOptionMap  optionMap  WriteableCommandLine  commandLine  Iterator  iter  List  anonymous  newAnonymous  options  Option  option  String  arg  description  name  Map  tailMap  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	132	132	1	replace	final  WriteableCommandLine  commandLine  =(WriteableCommandLine)iter.getNext();	  final    WriteableCommandLine    commandLine    =(WriteableCommandLine)iter.next();    	non-compiled	[CE]  illegal  start  of  expression	35	None	replace
78	[BUG]  [BUGGY]  final  Map  commandLine  =  tailMap.commandLines().iterator();  [CE]  illegal  start  of  expression  [FE]            OptionException      [CONTEXT]        if  (optionMap.containsKey(arg))  {  return  true;  }  final  Map  tailMap  =  optionMap.tailMap(arg);  for  (final  Iterator  iter  =  tailMap.values().iterator();  iter.hasNext();)  {      [BUGGY]  final  Map  commandLine  =  tailMap.commandLines().iterator();  [BUGGY]      final  Option  option  =  (Option)  iter.next();  if  (option.canProcess(commandLine,  arg))  {  return  true;  }  }  if  (looksLikeOption(commandLine,  arg))  {  return  false;  }  [CLASS]  GroupImpl  [METHOD]  canProcess  [RETURN_TYPE]  boolean  WriteableCommandLine  commandLine  String  arg  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  SortedMap  newOptionMap  optionMap  WriteableCommandLine  commandLine  Iterator  iter  List  anonymous  newAnonymous  options  Option  option  String  arg  description  name  Map  tailMap  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	132	132	1	replace	final  Map  commandLine  =  tailMap.commandLines().iterator();	  final    Map    commandLine    =    optionMap.commandLines().iterator();    	non-compiled	[CE]  illegal  start  of  expression	26	None	replace
79	[BUG]  [BUGGY]  Option  option  =(Option)iter.getAnonymousValue();  [CE]  illegal  start  of  expression  [FE]            OptionException      [CONTEXT]        if  (optionMap.containsKey(arg))  {  return  true;  }  final  Map  tailMap  =  optionMap.tailMap(arg);  for  (final  Iterator  iter  =  tailMap.values().iterator();  iter.hasNext();)  {      [BUGGY]  Option  option  =(Option)iter.getAnonymousValue();  [BUGGY]        if  (option.canProcess(commandLine,  arg))  {  return  true;  }  }  if  (looksLikeOption(commandLine,  arg))  {  return  false;  }  [CLASS]  GroupImpl  [METHOD]  canProcess  [RETURN_TYPE]  boolean  WriteableCommandLine  commandLine  String  arg  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  SortedMap  newOptionMap  optionMap  WriteableCommandLine  commandLine  Iterator  iter  List  anonymous  newAnonymous  options  Option  option  String  arg  description  name  Map  tailMap  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	132	132	1	replace	Option  option  =(Option)iter.getAnonymousValue();	  Option    option    =(Option)iter.getValue();    	non-compiled	[CE]  illegal  start  of  expression	34	None	replace
80	[BUG]  [BUGGY]  option  =(Option)iter.next(),  this.commandLine);  [CE]  illegal  start  of  expression  [FE]              OptionException      [CONTEXT]        if  (optionMap.containsKey(arg))  {  return  true;  }  final  Map  tailMap  =  optionMap.tailMap(arg);  for  (final  Iterator  iter  =  tailMap.values().iterator();  iter.hasNext();)  {      [BUGGY]  option  =(Option)iter.next(),  this.commandLine);  [BUGGY]        if  (option.canProcess(commandLine,  arg))  {  return  true;  }  }  if  (looksLikeOption(commandLine,  arg))  {  return  false;  }  [CLASS]  GroupImpl  [METHOD]  canProcess  [RETURN_TYPE]  boolean  WriteableCommandLine  commandLine  String  arg  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  SortedMap  newOptionMap  optionMap  WriteableCommandLine  commandLine  Iterator  iter  List  anonymous  newAnonymous  options  Option  option  String  arg  description  name  Map  tailMap  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	132	132	1	replace	option  =(Option)iter.next(),  this.commandLine);	  option    =(Option)iter.next(),    description);    	non-compiled	[CE]  illegal  start  of  expression	6	None	replace
81	[BUG]  [BUGGY]  final  Map  commandLine  =  this.tailMap.values().iterator();  [CE]  illegal  start  of  expression  [FE]              OptionException      [CONTEXT]        if  (optionMap.containsKey(arg))  {  return  true;  }  final  Map  tailMap  =  optionMap.tailMap(arg);  for  (final  Iterator  iter  =  tailMap.values().iterator();  iter.hasNext();)  {      [BUGGY]  final  Map  commandLine  =  this.tailMap.values().iterator();  [BUGGY]      final  Option  option  =  (Option)  iter.next();  if  (option.canProcess(commandLine,  arg))  {  return  true;  }  }  if  (looksLikeOption(commandLine,  arg))  {  return  false;  }  [CLASS]  GroupImpl  [METHOD]  canProcess  [RETURN_TYPE]  boolean  WriteableCommandLine  commandLine  String  arg  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  SortedMap  newOptionMap  optionMap  WriteableCommandLine  commandLine  Iterator  iter  List  anonymous  newAnonymous  options  Option  option  String  arg  description  name  Map  tailMap  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	132	132	1	replace	final  Map  commandLine  =  this.tailMap.values().iterator();	  final    Map    commandLine    =    tailMap.values().iterator();    	non-compiled	[CE]  illegal  start  of  expression	27	None	replace
82	[BUG]  [BUGGY]  Option  option  =(Option)iter.next(),  description  +  1);  [CE]  illegal  start  of  expression  [FE]            OptionException      [CONTEXT]        if  (optionMap.containsKey(arg))  {  return  true;  }  final  Map  tailMap  =  optionMap.tailMap(arg);  for  (final  Iterator  iter  =  tailMap.values().iterator();  iter.hasNext();)  {      [BUGGY]  Option  option  =(Option)iter.next(),  description  +  1);  [BUGGY]        if  (option.canProcess(commandLine,  arg))  {  return  true;  }  }  if  (looksLikeOption(commandLine,  arg))  {  return  false;  }  [CLASS]  GroupImpl  [METHOD]  canProcess  [RETURN_TYPE]  boolean  WriteableCommandLine  commandLine  String  arg  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  SortedMap  newOptionMap  optionMap  WriteableCommandLine  commandLine  Iterator  iter  List  anonymous  newAnonymous  options  Option  option  String  arg  description  name  Map  tailMap  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	132	132	1	replace	Option  option  =(Option)iter.next(),  description  +  1);	  Option    option    =(Option)iter.next(),    description);    	non-compiled	[CE]  illegal  start  of  expression	18	None	replace
83	[BUG]  [BUGGY]  String  commandLine  =(String)iter.next()  &&  option.canProcess(commandLine);  [CE]  illegal  start  of  expression  [FE]                  OptionException      [CONTEXT]        if  (optionMap.containsKey(arg))  {  return  true;  }  final  Map  tailMap  =  optionMap.tailMap(arg);  for  (final  Iterator  iter  =  tailMap.values().iterator();  iter.hasNext();)  {      [BUGGY]  String  commandLine  =(String)iter.next()  &&  option.canProcess(commandLine);  [BUGGY]        if  (option.canProcess(commandLine,  arg))  {  return  true;  }  }  if  (looksLikeOption(commandLine,  arg))  {  return  false;  }  [CLASS]  GroupImpl  [METHOD]  canProcess  [RETURN_TYPE]  boolean  WriteableCommandLine  commandLine  String  arg  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  SortedMap  newOptionMap  optionMap  WriteableCommandLine  commandLine  Iterator  iter  List  anonymous  newAnonymous  options  Option  option  String  arg  description  name  Map  tailMap  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	132	132	1	replace	String  commandLine  =(String)iter.next()  &&  option.canProcess(commandLine);	  String    commandLine    =(String)iter.next();    	non-compiled	[CE]  illegal  start  of  expression	3	None	replace
84	[BUG]  [BUGGY]  WriteableCommandLine  commandLine  =(WriteableCommandLine)iter.next(),  description);  [CE]  illegal  start  of  expression  [FE]                OptionException      [CONTEXT]        if  (optionMap.containsKey(arg))  {  return  true;  }  final  Map  tailMap  =  optionMap.tailMap(arg);  for  (final  Iterator  iter  =  tailMap.values().iterator();  iter.hasNext();)  {      [BUGGY]  WriteableCommandLine  commandLine  =(WriteableCommandLine)iter.next(),  description);  [BUGGY]        if  (option.canProcess(commandLine,  arg))  {  return  true;  }  }  if  (looksLikeOption(commandLine,  arg))  {  return  false;  }  [CLASS]  GroupImpl  [METHOD]  canProcess  [RETURN_TYPE]  boolean  WriteableCommandLine  commandLine  String  arg  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  SortedMap  newOptionMap  optionMap  WriteableCommandLine  commandLine  Iterator  iter  List  anonymous  newAnonymous  options  Option  option  String  arg  description  name  Map  tailMap  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	132	132	1	replace	WriteableCommandLine  commandLine  =(WriteableCommandLine)iter.next(),  description);	  WriteableCommandLine    commandLine    =(WriteableCommandLine)iter.next();    	non-compiled	[CE]  illegal  start  of  expression	31	None	replace
85	[BUG]  [BUGGY]  final  Map  commandLine  =  tailMap.keySet().iterator();  [CE]  illegal  start  of  expression  [FE]              OptionException      [CONTEXT]        if  (optionMap.containsKey(arg))  {  return  true;  }  final  Map  tailMap  =  optionMap.tailMap(arg);  for  (final  Iterator  iter  =  tailMap.values().iterator();  iter.hasNext();)  {      [BUGGY]  final  Map  commandLine  =  tailMap.keySet().iterator();  [BUGGY]      final  Option  option  =  (Option)  iter.next();  if  (option.canProcess(commandLine,  arg))  {  return  true;  }  }  if  (looksLikeOption(commandLine,  arg))  {  return  false;  }  [CLASS]  GroupImpl  [METHOD]  canProcess  [RETURN_TYPE]  boolean  WriteableCommandLine  commandLine  String  arg  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  SortedMap  newOptionMap  optionMap  WriteableCommandLine  commandLine  Iterator  iter  List  anonymous  newAnonymous  options  Option  option  String  arg  description  name  Map  tailMap  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	132	132	1	replace	final  Map  commandLine  =  tailMap.keySet().iterator();	  final    Map    commandLine    =    optionMap.keySet().iterator();    	non-compiled	[CE]  illegal  start  of  expression	13	None	replace
