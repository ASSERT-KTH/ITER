bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]    Option  commandLine  =(Option)iter.next();  [CE]  illegal  start  of  expression  [FE]    OptionException  [CONTEXT]  return  true;  }  final  Map  tailMap  =  optionMap.tailMap(arg);  for  (final  Iterator  iter  =  tailMap.values().iterator();  iter.hasNext();)  {  final  Option  option  =  (Option)  iter.next();  [BUGGY]    Option  commandLine  =(Option)iter.next();  [BUGGY]  if  (option.canProcess(commandLine,  arg))  {  return  true;  }  }  if  (looksLikeOption(commandLine,  arg))  {  return  false;  }  if  (anonymous.size()  >  0)  {  [CLASS]  GroupImpl  [METHOD]  canProcess  [RETURN_TYPE]  boolean  WriteableCommandLine  commandLine  String  arg  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  SortedMap  newOptionMap  optionMap  WriteableCommandLine  commandLine  Iterator  iter  List  anonymous  newAnonymous  options  Option  option  String  arg  description  name  Map  tailMap  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	134	134	1	replace	    Option  commandLine  =(Option)iter.next();		non-compiled	[CE]  illegal  start  of  expression	58	None	add
2	[BUG]  [BUGGY]    Option  commandLine  =  option.getCommandLine();  [CE]  illegal  start  of  expression  [FE]      OptionException  [CONTEXT]  return  true;  }  final  Map  tailMap  =  optionMap.tailMap(arg);  for  (final  Iterator  iter  =  tailMap.values().iterator();  iter.hasNext();)  {  final  Option  option  =  (Option)  iter.next();  [BUGGY]    Option  commandLine  =  option.getCommandLine();  [BUGGY]  if  (option.canProcess(commandLine,  arg))  {  return  true;  }  }  if  (looksLikeOption(commandLine,  arg))  {  return  false;  }  if  (anonymous.size()  >  0)  {  [CLASS]  GroupImpl  [METHOD]  canProcess  [RETURN_TYPE]  boolean  WriteableCommandLine  commandLine  String  arg  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  SortedMap  newOptionMap  optionMap  WriteableCommandLine  commandLine  Iterator  iter  List  anonymous  newAnonymous  options  Option  option  String  arg  description  name  Map  tailMap  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	134	134	1	replace	    Option  commandLine  =  option.getCommandLine();		non-compiled	[CE]  illegal  start  of  expression	58	None	add
3	[BUG]  [BUGGY]    Option  commandLine  =  option.getArgument();  [CE]  illegal  start  of  expression  [FE]        OptionException  [CONTEXT]  return  true;  }  final  Map  tailMap  =  optionMap.tailMap(arg);  for  (final  Iterator  iter  =  tailMap.values().iterator();  iter.hasNext();)  {  final  Option  option  =  (Option)  iter.next();  [BUGGY]    Option  commandLine  =  option.getArgument();  [BUGGY]  if  (option.canProcess(commandLine,  arg))  {  return  true;  }  }  if  (looksLikeOption(commandLine,  arg))  {  return  false;  }  if  (anonymous.size()  >  0)  {  [CLASS]  GroupImpl  [METHOD]  canProcess  [RETURN_TYPE]  boolean  WriteableCommandLine  commandLine  String  arg  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  SortedMap  newOptionMap  optionMap  WriteableCommandLine  commandLine  Iterator  iter  List  anonymous  newAnonymous  options  Option  option  String  arg  description  name  Map  tailMap  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	134	134	1	replace	    Option  commandLine  =  option.getArgument();		non-compiled	[CE]  illegal  start  of  expression	58	None	add
4	[BUG]  [BUGGY]    Option  commandLine  =  option.getCommandLine();  if(commandLine!=  null)  {  return  false;  }  [CE]  illegal  start  of  expression  [FE]          OptionException  [CONTEXT]  return  true;  }  final  Map  tailMap  =  optionMap.tailMap(arg);  for  (final  Iterator  iter  =  tailMap.values().iterator();  iter.hasNext();)  {  final  Option  option  =  (Option)  iter.next();  [BUGGY]    Option  commandLine  =  option.getCommandLine();  if(commandLine!=  null)  {  return  false;  }  [BUGGY]  if  (option.canProcess(commandLine,  arg))  {  return  true;  }  }  if  (looksLikeOption(commandLine,  arg))  {  return  false;  }  if  (anonymous.size()  >  0)  {  [CLASS]  GroupImpl  [METHOD]  canProcess  [RETURN_TYPE]  boolean  WriteableCommandLine  commandLine  String  arg  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  SortedMap  newOptionMap  optionMap  WriteableCommandLine  commandLine  Iterator  iter  List  anonymous  newAnonymous  options  Option  option  String  arg  description  name  Map  tailMap  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	134	134	1	replace	    Option  commandLine  =  option.getCommandLine();  if(commandLine!=  null)  {  return  false;  }		non-compiled	[CE]  illegal  start  of  expression	58	None	add
5	[BUG]  [BUGGY]    Option  commandLine  =  option.getCommandLine();  if(commandLine  ==  null)  {  return  false;  }  [CE]  illegal  start  of  expression  [FE]            OptionException  [CONTEXT]  return  true;  }  final  Map  tailMap  =  optionMap.tailMap(arg);  for  (final  Iterator  iter  =  tailMap.values().iterator();  iter.hasNext();)  {  final  Option  option  =  (Option)  iter.next();  [BUGGY]    Option  commandLine  =  option.getCommandLine();  if(commandLine  ==  null)  {  return  false;  }  [BUGGY]  if  (option.canProcess(commandLine,  arg))  {  return  true;  }  }  if  (looksLikeOption(commandLine,  arg))  {  return  false;  }  if  (anonymous.size()  >  0)  {  [CLASS]  GroupImpl  [METHOD]  canProcess  [RETURN_TYPE]  boolean  WriteableCommandLine  commandLine  String  arg  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  SortedMap  newOptionMap  optionMap  WriteableCommandLine  commandLine  Iterator  iter  List  anonymous  newAnonymous  options  Option  option  String  arg  description  name  Map  tailMap  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	134	134	1	replace	    Option  commandLine  =  option.getCommandLine();  if(commandLine  ==  null)  {  return  false;  }		non-compiled	[CE]  illegal  start  of  expression	58	None	add
6	[BUG]  [BUGGY]  if  (!option.canProcess(commandLine,  arg))  {  [CE]  illegal  start  of  expression  [FE]    OptionException  [CONTEXT]  return  true;  }  final  Map  tailMap  =  optionMap.tailMap(arg);  for  (final  Iterator  iter  =  tailMap.values().iterator();  iter.hasNext();)  {  final  Option  option  =  (Option)  iter.next();  [BUGGY]  if  (!option.canProcess(commandLine,  arg))  {  [BUGGY]  return  true;  }  }  if  (looksLikeOption(commandLine,  arg))  {  return  false;  }  if  (anonymous.size()  >  0)  {  [CLASS]  GroupImpl  [METHOD]  canProcess  [RETURN_TYPE]  boolean  WriteableCommandLine  commandLine  String  arg  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  SortedMap  newOptionMap  optionMap  WriteableCommandLine  commandLine  Iterator  iter  List  anonymous  newAnonymous  options  Option  option  String  arg  description  name  Map  tailMap  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	134	134	1	replace	if  (!option.canProcess(commandLine,  arg))  {	if  (option.canProcess(commandLine,  arg))  {  	non-compiled	[CE]  illegal  start  of  expression	57	None	replace
7	[BUG]  [BUGGY]  if(option.canProcess(commandLine,  arg)||  options.hasOption(option))  {  [CE]  illegal  start  of  expression  [FE]      OptionException  [CONTEXT]  return  true;  }  final  Map  tailMap  =  optionMap.tailMap(arg);  for  (final  Iterator  iter  =  tailMap.values().iterator();  iter.hasNext();)  {  final  Option  option  =  (Option)  iter.next();  [BUGGY]  if(option.canProcess(commandLine,  arg)||  options.hasOption(option))  {  [BUGGY]  return  true;  }  }  if  (looksLikeOption(commandLine,  arg))  {  return  false;  }  if  (anonymous.size()  >  0)  {  [CLASS]  GroupImpl  [METHOD]  canProcess  [RETURN_TYPE]  boolean  WriteableCommandLine  commandLine  String  arg  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  SortedMap  newOptionMap  optionMap  WriteableCommandLine  commandLine  Iterator  iter  List  anonymous  newAnonymous  options  Option  option  String  arg  description  name  Map  tailMap  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	134	134	1	replace	if(option.canProcess(commandLine,  arg)||  options.hasOption(option))  {	if  (option.canProcess(commandLine,  arg))  {  	non-compiled	[CE]  illegal  start  of  expression	57	None	replace
8	[BUG]  [BUGGY]  if(option.canProcess(commandLine,  arg)||  options.hasArg())  {  [CE]  illegal  start  of  expression  [FE]        OptionException  [CONTEXT]  return  true;  }  final  Map  tailMap  =  optionMap.tailMap(arg);  for  (final  Iterator  iter  =  tailMap.values().iterator();  iter.hasNext();)  {  final  Option  option  =  (Option)  iter.next();  [BUGGY]  if(option.canProcess(commandLine,  arg)||  options.hasArg())  {  [BUGGY]  return  true;  }  }  if  (looksLikeOption(commandLine,  arg))  {  return  false;  }  if  (anonymous.size()  >  0)  {  [CLASS]  GroupImpl  [METHOD]  canProcess  [RETURN_TYPE]  boolean  WriteableCommandLine  commandLine  String  arg  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  SortedMap  newOptionMap  optionMap  WriteableCommandLine  commandLine  Iterator  iter  List  anonymous  newAnonymous  options  Option  option  String  arg  description  name  Map  tailMap  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	134	134	1	replace	if(option.canProcess(commandLine,  arg)||  options.hasArg())  {	if  (option.canProcess(commandLine,  arg))  {  	non-compiled	[CE]  illegal  start  of  expression	57	None	replace
9	[BUG]  [BUGGY]  if  (option.canProcess(arg,  commandLine))  {  [CE]  illegal  start  of  expression  [FE]    OptionException  [CONTEXT]  return  true;  }  final  Map  tailMap  =  optionMap.tailMap(arg);  for  (final  Iterator  iter  =  tailMap.values().iterator();  iter.hasNext();)  {  final  Option  option  =  (Option)  iter.next();  [BUGGY]  if  (option.canProcess(arg,  commandLine))  {  [BUGGY]  return  true;  }  }  if  (looksLikeOption(commandLine,  arg))  {  return  false;  }  if  (anonymous.size()  >  0)  {  [CLASS]  GroupImpl  [METHOD]  canProcess  [RETURN_TYPE]  boolean  WriteableCommandLine  commandLine  String  arg  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  SortedMap  newOptionMap  optionMap  WriteableCommandLine  commandLine  Iterator  iter  List  anonymous  newAnonymous  options  Option  option  String  arg  description  name  Map  tailMap  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	134	134	1	replace	if  (option.canProcess(arg,  commandLine))  {	if  (option.canProcess(commandLine,  arg))  {  	non-compiled	[CE]  illegal  start  of  expression	57	None	replace
10	[BUG]  [BUGGY]  if  (option.canProcess(commandLine,  null))  {  [CE]  illegal  start  of  expression  [FE]      OptionException  [CONTEXT]  return  true;  }  final  Map  tailMap  =  optionMap.tailMap(arg);  for  (final  Iterator  iter  =  tailMap.values().iterator();  iter.hasNext();)  {  final  Option  option  =  (Option)  iter.next();  [BUGGY]  if  (option.canProcess(commandLine,  null))  {  [BUGGY]  return  true;  }  }  if  (looksLikeOption(commandLine,  arg))  {  return  false;  }  if  (anonymous.size()  >  0)  {  [CLASS]  GroupImpl  [METHOD]  canProcess  [RETURN_TYPE]  boolean  WriteableCommandLine  commandLine  String  arg  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  SortedMap  newOptionMap  optionMap  WriteableCommandLine  commandLine  Iterator  iter  List  anonymous  newAnonymous  options  Option  option  String  arg  description  name  Map  tailMap  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	134	134	1	replace	if  (option.canProcess(commandLine,  null))  {	if  (option.canProcess(commandLine,  arg))  {  	non-compiled	[CE]  illegal  start  of  expression	57	None	replace
11	[BUG]  [BUGGY]    Option  option  =  option.getOption();  [CE]  illegal  start  of  expression  [FE]    OptionException  [CONTEXT]  return  true;  }  final  Map  tailMap  =  optionMap.tailMap(arg);  for  (final  Iterator  iter  =  tailMap.values().iterator();  iter.hasNext();)  {  final  Option  option  =  (Option)  iter.next();  [BUGGY]    Option  option  =  option.getOption();  [BUGGY]  if  (option.canProcess(commandLine,  arg))  {  return  true;  }  }  if  (looksLikeOption(commandLine,  arg))  {  return  false;  }  if  (anonymous.size()  >  0)  {  [CLASS]  GroupImpl  [METHOD]  canProcess  [RETURN_TYPE]  boolean  WriteableCommandLine  commandLine  String  arg  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  SortedMap  newOptionMap  optionMap  WriteableCommandLine  commandLine  Iterator  iter  List  anonymous  newAnonymous  options  Option  option  String  arg  description  name  Map  tailMap  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	134	134	1	replace	    Option  option  =  option.getOption();		non-compiled	[CE]  illegal  start  of  expression	58	None	add
12	[BUG]  [BUGGY]    Option  option  =  option.getOption(arg);  [CE]  illegal  start  of  expression  [FE]      OptionException  [CONTEXT]  return  true;  }  final  Map  tailMap  =  optionMap.tailMap(arg);  for  (final  Iterator  iter  =  tailMap.values().iterator();  iter.hasNext();)  {  final  Option  option  =  (Option)  iter.next();  [BUGGY]    Option  option  =  option.getOption(arg);  [BUGGY]  if  (option.canProcess(commandLine,  arg))  {  return  true;  }  }  if  (looksLikeOption(commandLine,  arg))  {  return  false;  }  if  (anonymous.size()  >  0)  {  [CLASS]  GroupImpl  [METHOD]  canProcess  [RETURN_TYPE]  boolean  WriteableCommandLine  commandLine  String  arg  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  SortedMap  newOptionMap  optionMap  WriteableCommandLine  commandLine  Iterator  iter  List  anonymous  newAnonymous  options  Option  option  String  arg  description  name  Map  tailMap  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	134	134	1	replace	    Option  option  =  option.getOption(arg);		non-compiled	[CE]  illegal  start  of  expression	58	None	add
13	[BUG]  [BUGGY]    Option  option  =  option.getOption(option);  [CE]  illegal  start  of  expression  [FE]        OptionException  [CONTEXT]  return  true;  }  final  Map  tailMap  =  optionMap.tailMap(arg);  for  (final  Iterator  iter  =  tailMap.values().iterator();  iter.hasNext();)  {  final  Option  option  =  (Option)  iter.next();  [BUGGY]    Option  option  =  option.getOption(option);  [BUGGY]  if  (option.canProcess(commandLine,  arg))  {  return  true;  }  }  if  (looksLikeOption(commandLine,  arg))  {  return  false;  }  if  (anonymous.size()  >  0)  {  [CLASS]  GroupImpl  [METHOD]  canProcess  [RETURN_TYPE]  boolean  WriteableCommandLine  commandLine  String  arg  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  SortedMap  newOptionMap  optionMap  WriteableCommandLine  commandLine  Iterator  iter  List  anonymous  newAnonymous  options  Option  option  String  arg  description  name  Map  tailMap  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	134	134	1	replace	    Option  option  =  option.getOption(option);		non-compiled	[CE]  illegal  start  of  expression	58	None	add
14	[BUG]  [BUGGY]    final  Option  commandLine  =  option.getCommandLine();  [CE]  illegal  start  of  expression  [FE]    OptionException  [CONTEXT]  return  true;  }  final  Map  tailMap  =  optionMap.tailMap(arg);  for  (final  Iterator  iter  =  tailMap.values().iterator();  iter.hasNext();)  {  final  Option  option  =  (Option)  iter.next();  [BUGGY]    final  Option  commandLine  =  option.getCommandLine();  [BUGGY]  if  (option.canProcess(commandLine,  arg))  {  return  true;  }  }  if  (looksLikeOption(commandLine,  arg))  {  return  false;  }  if  (anonymous.size()  >  0)  {  [CLASS]  GroupImpl  [METHOD]  canProcess  [RETURN_TYPE]  boolean  WriteableCommandLine  commandLine  String  arg  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  SortedMap  newOptionMap  optionMap  WriteableCommandLine  commandLine  Iterator  iter  List  anonymous  newAnonymous  options  Option  option  String  arg  description  name  Map  tailMap  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	134	134	1	replace	    final  Option  commandLine  =  option.getCommandLine();		non-compiled	[CE]  illegal  start  of  expression	58	None	add
15	[BUG]  [BUGGY]    Option  commandLine  =  option.getParameterType(0);  [CE]  illegal  start  of  expression  [FE]      OptionException  [CONTEXT]  return  true;  }  final  Map  tailMap  =  optionMap.tailMap(arg);  for  (final  Iterator  iter  =  tailMap.values().iterator();  iter.hasNext();)  {  final  Option  option  =  (Option)  iter.next();  [BUGGY]    Option  commandLine  =  option.getParameterType(0);  [BUGGY]  if  (option.canProcess(commandLine,  arg))  {  return  true;  }  }  if  (looksLikeOption(commandLine,  arg))  {  return  false;  }  if  (anonymous.size()  >  0)  {  [CLASS]  GroupImpl  [METHOD]  canProcess  [RETURN_TYPE]  boolean  WriteableCommandLine  commandLine  String  arg  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  SortedMap  newOptionMap  optionMap  WriteableCommandLine  commandLine  Iterator  iter  List  anonymous  newAnonymous  options  Option  option  String  arg  description  name  Map  tailMap  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	134	134	1	replace	    Option  commandLine  =  option.getParameterType(0);		non-compiled	[CE]  illegal  start  of  expression	58	None	add
16	[BUG]  [BUGGY]    Option  commandLine  =  option.getCommandLine(command);  [CE]  illegal  start  of  expression  [FE]        OptionException  [CONTEXT]  return  true;  }  final  Map  tailMap  =  optionMap.tailMap(arg);  for  (final  Iterator  iter  =  tailMap.values().iterator();  iter.hasNext();)  {  final  Option  option  =  (Option)  iter.next();  [BUGGY]    Option  commandLine  =  option.getCommandLine(command);  [BUGGY]  if  (option.canProcess(commandLine,  arg))  {  return  true;  }  }  if  (looksLikeOption(commandLine,  arg))  {  return  false;  }  if  (anonymous.size()  >  0)  {  [CLASS]  GroupImpl  [METHOD]  canProcess  [RETURN_TYPE]  boolean  WriteableCommandLine  commandLine  String  arg  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  SortedMap  newOptionMap  optionMap  WriteableCommandLine  commandLine  Iterator  iter  List  anonymous  newAnonymous  options  Option  option  String  arg  description  name  Map  tailMap  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	134	134	1	replace	    Option  commandLine  =  option.getCommandLine(command);		non-compiled	[CE]  illegal  start  of  expression	58	None	add
17	[BUG]  [BUGGY]  if(option.canProcess(commandLine,  arg)||  option.canProcess(commandLine,  arg))  {  [CE]  illegal  start  of  expression  [FE]    OptionException  [CONTEXT]  return  true;  }  final  Map  tailMap  =  optionMap.tailMap(arg);  for  (final  Iterator  iter  =  tailMap.values().iterator();  iter.hasNext();)  {  final  Option  option  =  (Option)  iter.next();  [BUGGY]  if(option.canProcess(commandLine,  arg)||  option.canProcess(commandLine,  arg))  {  [BUGGY]  return  true;  }  }  if  (looksLikeOption(commandLine,  arg))  {  return  false;  }  if  (anonymous.size()  >  0)  {  [CLASS]  GroupImpl  [METHOD]  canProcess  [RETURN_TYPE]  boolean  WriteableCommandLine  commandLine  String  arg  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  SortedMap  newOptionMap  optionMap  WriteableCommandLine  commandLine  Iterator  iter  List  anonymous  newAnonymous  options  Option  option  String  arg  description  name  Map  tailMap  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	134	134	1	replace	if(option.canProcess(commandLine,  arg)||  option.canProcess(commandLine,  arg))  {	if  (option.canProcess(commandLine,  arg))  {  	non-compiled	[CE]  illegal  start  of  expression	57	None	replace
18	[BUG]  [BUGGY]  if(option.canProcess(commandLine,  arg)&&  options.hasOption(option))  {  [CE]  illegal  start  of  expression  [FE]      OptionException  [CONTEXT]  return  true;  }  final  Map  tailMap  =  optionMap.tailMap(arg);  for  (final  Iterator  iter  =  tailMap.values().iterator();  iter.hasNext();)  {  final  Option  option  =  (Option)  iter.next();  [BUGGY]  if(option.canProcess(commandLine,  arg)&&  options.hasOption(option))  {  [BUGGY]  return  true;  }  }  if  (looksLikeOption(commandLine,  arg))  {  return  false;  }  if  (anonymous.size()  >  0)  {  [CLASS]  GroupImpl  [METHOD]  canProcess  [RETURN_TYPE]  boolean  WriteableCommandLine  commandLine  String  arg  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  SortedMap  newOptionMap  optionMap  WriteableCommandLine  commandLine  Iterator  iter  List  anonymous  newAnonymous  options  Option  option  String  arg  description  name  Map  tailMap  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	134	134	1	replace	if(option.canProcess(commandLine,  arg)&&  options.hasOption(option))  {	if  (option.canProcess(commandLine,  arg))  {  	non-compiled	[CE]  illegal  start  of  expression	57	None	replace
