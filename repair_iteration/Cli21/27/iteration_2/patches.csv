bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  final  Map  tailMap  =  optionMap.tailMap(commandLine,  arg,  description);  [CE]  illegal  start  of  expression  [FE]              OptionException      [CONTEXT]        if  (optionMap.containsKey(arg))  {  return  true;  }  final  Map  tailMap  =  optionMap.tailMap(arg);        [BUGGY]  final  Map  tailMap  =  optionMap.tailMap(commandLine,  arg,  description);  [BUGGY]      for  (final  Iterator  iter  =  tailMap.values().iterator();  iter.hasNext();)  {  final  Option  option  =  (Option)  iter.next();  if  (option.canProcess(commandLine,  arg))  {  return  true;  }  }  if  (looksLikeOption(commandLine,  arg))  {  return  false;  }  [CLASS]  GroupImpl  [METHOD]  canProcess  [RETURN_TYPE]  boolean  WriteableCommandLine  commandLine  String  arg  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  SortedMap  newOptionMap  optionMap  WriteableCommandLine  commandLine  Iterator  iter  List  anonymous  newAnonymous  options  Option  option  String  arg  description  name  Map  tailMap  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	131	131	1	replace	final  Map  tailMap  =  optionMap.tailMap(commandLine,  arg,  description);	  final    Map    tailMap    =    optionMap.tailMap(commandLine,    arg);    	non-compiled	[CE]  illegal  start  of  expression	7	None	replace
2	[BUG]  [BUGGY]  final  Map  tailMap  =  optionMap.tailMap(commandLine,  description);  [CE]  illegal  start  of  expression  [FE]                OptionException      [CONTEXT]        if  (optionMap.containsKey(arg))  {  return  true;  }  final  Map  tailMap  =  optionMap.tailMap(arg);        [BUGGY]  final  Map  tailMap  =  optionMap.tailMap(commandLine,  description);  [BUGGY]      for  (final  Iterator  iter  =  tailMap.values().iterator();  iter.hasNext();)  {  final  Option  option  =  (Option)  iter.next();  if  (option.canProcess(commandLine,  arg))  {  return  true;  }  }  if  (looksLikeOption(commandLine,  arg))  {  return  false;  }  [CLASS]  GroupImpl  [METHOD]  canProcess  [RETURN_TYPE]  boolean  WriteableCommandLine  commandLine  String  arg  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  SortedMap  newOptionMap  optionMap  WriteableCommandLine  commandLine  Iterator  iter  List  anonymous  newAnonymous  options  Option  option  String  arg  description  name  Map  tailMap  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	131	131	1	replace	final  Map  tailMap  =  optionMap.tailMap(commandLine,  description);	  final    Map    tailMap    =    optionMap.tailMap(commandLine,    arg);    	non-compiled	[CE]  illegal  start  of  expression	7	None	replace
3	[BUG]  [BUGGY]  final  Map  tailMap  =  optionMap.tailMap(commandLine,  arg  +  1);  [CE]  illegal  start  of  expression  [FE]                  OptionException      [CONTEXT]        if  (optionMap.containsKey(arg))  {  return  true;  }  final  Map  tailMap  =  optionMap.tailMap(arg);        [BUGGY]  final  Map  tailMap  =  optionMap.tailMap(commandLine,  arg  +  1);  [BUGGY]      for  (final  Iterator  iter  =  tailMap.values().iterator();  iter.hasNext();)  {  final  Option  option  =  (Option)  iter.next();  if  (option.canProcess(commandLine,  arg))  {  return  true;  }  }  if  (looksLikeOption(commandLine,  arg))  {  return  false;  }  [CLASS]  GroupImpl  [METHOD]  canProcess  [RETURN_TYPE]  boolean  WriteableCommandLine  commandLine  String  arg  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  SortedMap  newOptionMap  optionMap  WriteableCommandLine  commandLine  Iterator  iter  List  anonymous  newAnonymous  options  Option  option  String  arg  description  name  Map  tailMap  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	131	131	1	replace	final  Map  tailMap  =  optionMap.tailMap(commandLine,  arg  +  1);	  final    Map    tailMap    =    optionMap.tailMap(commandLine,    arg);    	non-compiled	[CE]  illegal  start  of  expression	7	None	replace
4	[BUG]  [BUGGY]  final  Map  <  String,  Option>  tailMap  =  options.tailMap(commandLine);  [CE]  illegal  start  of  expression  [FE]              OptionException      [CONTEXT]        if  (optionMap.containsKey(arg))  {  return  true;  }  final  Map  tailMap  =  optionMap.tailMap(arg);        [BUGGY]  final  Map  <  String,  Option>  tailMap  =  options.tailMap(commandLine);  [BUGGY]      for  (final  Iterator  iter  =  tailMap.values().iterator();  iter.hasNext();)  {  final  Option  option  =  (Option)  iter.next();  if  (option.canProcess(commandLine,  arg))  {  return  true;  }  }  if  (looksLikeOption(commandLine,  arg))  {  return  false;  }  [CLASS]  GroupImpl  [METHOD]  canProcess  [RETURN_TYPE]  boolean  WriteableCommandLine  commandLine  String  arg  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  SortedMap  newOptionMap  optionMap  WriteableCommandLine  commandLine  Iterator  iter  List  anonymous  newAnonymous  options  Option  option  String  arg  description  name  Map  tailMap  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	131	131	1	replace	final  Map  <  String,  Option>  tailMap  =  options.tailMap(commandLine);	  final    Map    <    String,    Option>    tailMap    =    options.tailMap(arg);    	non-compiled	[CE]  illegal  start  of  expression	15	None	replace
5	[BUG]  [BUGGY]  final  Map  <  String,  Option>  tailMap  =  optionsMap.tailMap(commandLine);  [CE]  illegal  start  of  expression  [FE]            OptionException      [CONTEXT]        if  (optionMap.containsKey(arg))  {  return  true;  }  final  Map  tailMap  =  optionMap.tailMap(arg);        [BUGGY]  final  Map  <  String,  Option>  tailMap  =  optionsMap.tailMap(commandLine);  [BUGGY]      for  (final  Iterator  iter  =  tailMap.values().iterator();  iter.hasNext();)  {  final  Option  option  =  (Option)  iter.next();  if  (option.canProcess(commandLine,  arg))  {  return  true;  }  }  if  (looksLikeOption(commandLine,  arg))  {  return  false;  }  [CLASS]  GroupImpl  [METHOD]  canProcess  [RETURN_TYPE]  boolean  WriteableCommandLine  commandLine  String  arg  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  SortedMap  newOptionMap  optionMap  WriteableCommandLine  commandLine  Iterator  iter  List  anonymous  newAnonymous  options  Option  option  String  arg  description  name  Map  tailMap  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	131	131	1	replace	final  Map  <  String,  Option>  tailMap  =  optionsMap.tailMap(commandLine);	  final    Map    <    String,    Option>    tailMap    =    optionsMap.tailMap(arg);    	non-compiled	[CE]  illegal  start  of  expression	21	None	replace
6	[BUG]  [BUGGY]  final  Map  <  Option>  options  =  optionMap.keySet();  [CE]  illegal  start  of  expression  [FE]              OptionException      [CONTEXT]        if  (optionMap.containsKey(arg))  {  return  true;  }  final  Map  tailMap  =  optionMap.tailMap(arg);        [BUGGY]  final  Map  <  Option>  options  =  optionMap.keySet();  [BUGGY]      for  (final  Iterator  iter  =  tailMap.values().iterator();  iter.hasNext();)  {  final  Option  option  =  (Option)  iter.next();  if  (option.canProcess(commandLine,  arg))  {  return  true;  }  }  if  (looksLikeOption(commandLine,  arg))  {  return  false;  }  [CLASS]  GroupImpl  [METHOD]  canProcess  [RETURN_TYPE]  boolean  WriteableCommandLine  commandLine  String  arg  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  SortedMap  newOptionMap  optionMap  WriteableCommandLine  commandLine  Iterator  iter  List  anonymous  newAnonymous  options  Option  option  String  arg  description  name  Map  tailMap  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	131	131	1	replace	final  Map  <  Option>  options  =  optionMap.keySet();	  final    Map    <    Option>    options    =    optionMap.values();    	non-compiled	[CE]  illegal  start  of  expression	28	None	replace
7	[BUG]  [BUGGY]  final  Map  <  Option>  options  =  tailMap.values();  [CE]  illegal  start  of  expression  [FE]                OptionException      [CONTEXT]        if  (optionMap.containsKey(arg))  {  return  true;  }  final  Map  tailMap  =  optionMap.tailMap(arg);        [BUGGY]  final  Map  <  Option>  options  =  tailMap.values();  [BUGGY]      for  (final  Iterator  iter  =  tailMap.values().iterator();  iter.hasNext();)  {  final  Option  option  =  (Option)  iter.next();  if  (option.canProcess(commandLine,  arg))  {  return  true;  }  }  if  (looksLikeOption(commandLine,  arg))  {  return  false;  }  [CLASS]  GroupImpl  [METHOD]  canProcess  [RETURN_TYPE]  boolean  WriteableCommandLine  commandLine  String  arg  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  SortedMap  newOptionMap  optionMap  WriteableCommandLine  commandLine  Iterator  iter  List  anonymous  newAnonymous  options  Option  option  String  arg  description  name  Map  tailMap  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	131	131	1	replace	final  Map  <  Option>  options  =  tailMap.values();	  final    Map    <    Option>    options    =    optionMap.values();    	non-compiled	[CE]  illegal  start  of  expression	28	None	replace
8	[BUG]  [BUGGY]  final  Map  <  Option>  options  =  optionMap.getOptions();  [CE]  illegal  start  of  expression  [FE]                  OptionException      [CONTEXT]        if  (optionMap.containsKey(arg))  {  return  true;  }  final  Map  tailMap  =  optionMap.tailMap(arg);        [BUGGY]  final  Map  <  Option>  options  =  optionMap.getOptions();  [BUGGY]      for  (final  Iterator  iter  =  tailMap.values().iterator();  iter.hasNext();)  {  final  Option  option  =  (Option)  iter.next();  if  (option.canProcess(commandLine,  arg))  {  return  true;  }  }  if  (looksLikeOption(commandLine,  arg))  {  return  false;  }  [CLASS]  GroupImpl  [METHOD]  canProcess  [RETURN_TYPE]  boolean  WriteableCommandLine  commandLine  String  arg  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  SortedMap  newOptionMap  optionMap  WriteableCommandLine  commandLine  Iterator  iter  List  anonymous  newAnonymous  options  Option  option  String  arg  description  name  Map  tailMap  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	131	131	1	replace	final  Map  <  Option>  options  =  optionMap.getOptions();	  final    Map    <    Option>    options    =    optionMap.values();    	non-compiled	[CE]  illegal  start  of  expression	28	None	replace
9	[BUG]  [BUGGY]  final  Map  tailMap  =  options.tailMap(commandLine);  [CE]  illegal  start  of  expression  [FE]                OptionException      [CONTEXT]        if  (optionMap.containsKey(arg))  {  return  true;  }  final  Map  tailMap  =  optionMap.tailMap(arg);        [BUGGY]  final  Map  tailMap  =  options.tailMap(commandLine);  [BUGGY]      for  (final  Iterator  iter  =  tailMap.values().iterator();  iter.hasNext();)  {  final  Option  option  =  (Option)  iter.next();  if  (option.canProcess(commandLine,  arg))  {  return  true;  }  }  if  (looksLikeOption(commandLine,  arg))  {  return  false;  }  [CLASS]  GroupImpl  [METHOD]  canProcess  [RETURN_TYPE]  boolean  WriteableCommandLine  commandLine  String  arg  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  SortedMap  newOptionMap  optionMap  WriteableCommandLine  commandLine  Iterator  iter  List  anonymous  newAnonymous  options  Option  option  String  arg  description  name  Map  tailMap  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	131	131	1	replace	final  Map  tailMap  =  options.tailMap(commandLine);	  final    Map    tailMap    =    options.tailMap(arg);    	non-compiled	[CE]  illegal  start  of  expression	8	None	replace
10	[BUG]  [BUGGY]  final  Map  tailMap  =  options.tailMap(arg,  description);  [CE]  illegal  start  of  expression  [FE]                  OptionException      [CONTEXT]        if  (optionMap.containsKey(arg))  {  return  true;  }  final  Map  tailMap  =  optionMap.tailMap(arg);        [BUGGY]  final  Map  tailMap  =  options.tailMap(arg,  description);  [BUGGY]      for  (final  Iterator  iter  =  tailMap.values().iterator();  iter.hasNext();)  {  final  Option  option  =  (Option)  iter.next();  if  (option.canProcess(commandLine,  arg))  {  return  true;  }  }  if  (looksLikeOption(commandLine,  arg))  {  return  false;  }  [CLASS]  GroupImpl  [METHOD]  canProcess  [RETURN_TYPE]  boolean  WriteableCommandLine  commandLine  String  arg  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  SortedMap  newOptionMap  optionMap  WriteableCommandLine  commandLine  Iterator  iter  List  anonymous  newAnonymous  options  Option  option  String  arg  description  name  Map  tailMap  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	131	131	1	replace	final  Map  tailMap  =  options.tailMap(arg,  description);	  final    Map    tailMap    =    options.tailMap(arg);    	non-compiled	[CE]  illegal  start  of  expression	8	None	replace
11	[BUG]  [BUGGY]  For(final  Iterator  iter  =  tailMap.values().iterator();  iter.hasNext();)  {  [CE]  illegal  start  of  expression  [FE]            OptionException      [CONTEXT]        if  (optionMap.containsKey(arg))  {  return  true;  }  final  Map  tailMap  =  optionMap.tailMap(arg);        [BUGGY]  For(final  Iterator  iter  =  tailMap.values().iterator();  iter.hasNext();)  {  [BUGGY]      final  Option  option  =  (Option)  iter.next();  if  (option.canProcess(commandLine,  arg))  {  return  true;  }  }  if  (looksLikeOption(commandLine,  arg))  {  return  false;  }  [CLASS]  GroupImpl  [METHOD]  canProcess  [RETURN_TYPE]  boolean  WriteableCommandLine  commandLine  String  arg  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  SortedMap  newOptionMap  optionMap  WriteableCommandLine  commandLine  Iterator  iter  List  anonymous  newAnonymous  options  Option  option  String  arg  description  name  Map  tailMap  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	131	131	1	replace	For(final  Iterator  iter  =  tailMap.values().iterator();  iter.hasNext();)  {	  For(final    Iterator    iter    =    tailMap.keySet().iterator();    iter.hasNext();)    {    	non-compiled	[CE]  illegal  start  of  expression	31	None	replace
12	[BUG]  [BUGGY]  For(final  Iterator  iter  =  tailMap.entrySet().iterator();  iter.hasNext();)  {  [CE]  illegal  start  of  expression  [FE]              OptionException      [CONTEXT]        if  (optionMap.containsKey(arg))  {  return  true;  }  final  Map  tailMap  =  optionMap.tailMap(arg);        [BUGGY]  For(final  Iterator  iter  =  tailMap.entrySet().iterator();  iter.hasNext();)  {  [BUGGY]      final  Option  option  =  (Option)  iter.next();  if  (option.canProcess(commandLine,  arg))  {  return  true;  }  }  if  (looksLikeOption(commandLine,  arg))  {  return  false;  }  [CLASS]  GroupImpl  [METHOD]  canProcess  [RETURN_TYPE]  boolean  WriteableCommandLine  commandLine  String  arg  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  SortedMap  newOptionMap  optionMap  WriteableCommandLine  commandLine  Iterator  iter  List  anonymous  newAnonymous  options  Option  option  String  arg  description  name  Map  tailMap  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	131	131	1	replace	For(final  Iterator  iter  =  tailMap.entrySet().iterator();  iter.hasNext();)  {	  For(final    Iterator    iter    =    tailMap.keySet().iterator();    iter.hasNext();)    {    	non-compiled	[CE]  illegal  start  of  expression	31	None	replace
13	[BUG]  [BUGGY]  final  Map  <  String,  Option>  tailMap  =  optionMap.tailMap(commandLine  +  1);  [CE]  illegal  start  of  expression  [FE]              OptionException      [CONTEXT]        if  (optionMap.containsKey(arg))  {  return  true;  }  final  Map  tailMap  =  optionMap.tailMap(arg);        [BUGGY]  final  Map  <  String,  Option>  tailMap  =  optionMap.tailMap(commandLine  +  1);  [BUGGY]      for  (final  Iterator  iter  =  tailMap.values().iterator();  iter.hasNext();)  {  final  Option  option  =  (Option)  iter.next();  if  (option.canProcess(commandLine,  arg))  {  return  true;  }  }  if  (looksLikeOption(commandLine,  arg))  {  return  false;  }  [CLASS]  GroupImpl  [METHOD]  canProcess  [RETURN_TYPE]  boolean  WriteableCommandLine  commandLine  String  arg  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  SortedMap  newOptionMap  optionMap  WriteableCommandLine  commandLine  Iterator  iter  List  anonymous  newAnonymous  options  Option  option  String  arg  description  name  Map  tailMap  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	131	131	1	replace	final  Map  <  String,  Option>  tailMap  =  optionMap.tailMap(commandLine  +  1);	  final    Map    <    String,    Option>    tailMap    =    optionMap.tailMap(arg    +    1);    	non-compiled	[CE]  illegal  start  of  expression	24	None	replace
14	[BUG]  [BUGGY]  final  Map  <  String,  Option>  tailMap  =  optionMap.tailMap(arg  -  1);  [CE]  illegal  start  of  expression  [FE]                OptionException      [CONTEXT]        if  (optionMap.containsKey(arg))  {  return  true;  }  final  Map  tailMap  =  optionMap.tailMap(arg);        [BUGGY]  final  Map  <  String,  Option>  tailMap  =  optionMap.tailMap(arg  -  1);  [BUGGY]      for  (final  Iterator  iter  =  tailMap.values().iterator();  iter.hasNext();)  {  final  Option  option  =  (Option)  iter.next();  if  (option.canProcess(commandLine,  arg))  {  return  true;  }  }  if  (looksLikeOption(commandLine,  arg))  {  return  false;  }  [CLASS]  GroupImpl  [METHOD]  canProcess  [RETURN_TYPE]  boolean  WriteableCommandLine  commandLine  String  arg  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  SortedMap  newOptionMap  optionMap  WriteableCommandLine  commandLine  Iterator  iter  List  anonymous  newAnonymous  options  Option  option  String  arg  description  name  Map  tailMap  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	131	131	1	replace	final  Map  <  String,  Option>  tailMap  =  optionMap.tailMap(arg  -  1);	  final    Map    <    String,    Option>    tailMap    =    optionMap.tailMap(arg    +    1);    	non-compiled	[CE]  illegal  start  of  expression	24	None	replace
15	[BUG]  [BUGGY]  final  Map  <  String,String>  tailMap  =  optionMap.tailMap(commandLine  +  1);  [CE]  illegal  start  of  expression  [FE]                OptionException      [CONTEXT]        if  (optionMap.containsKey(arg))  {  return  true;  }  final  Map  tailMap  =  optionMap.tailMap(arg);        [BUGGY]  final  Map  <  String,String>  tailMap  =  optionMap.tailMap(commandLine  +  1);  [BUGGY]      for  (final  Iterator  iter  =  tailMap.values().iterator();  iter.hasNext();)  {  final  Option  option  =  (Option)  iter.next();  if  (option.canProcess(commandLine,  arg))  {  return  true;  }  }  if  (looksLikeOption(commandLine,  arg))  {  return  false;  }  [CLASS]  GroupImpl  [METHOD]  canProcess  [RETURN_TYPE]  boolean  WriteableCommandLine  commandLine  String  arg  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  SortedMap  newOptionMap  optionMap  WriteableCommandLine  commandLine  Iterator  iter  List  anonymous  newAnonymous  options  Option  option  String  arg  description  name  Map  tailMap  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	131	131	1	replace	final  Map  <  String,String>  tailMap  =  optionMap.tailMap(commandLine  +  1);	  final    Map    <    String,String>    tailMap    =    optionMap.tailMap(arg    +    1);    	non-compiled	[CE]  illegal  start  of  expression	26	None	replace
16	[BUG]  [BUGGY]  final  Map  <  String,String>  tailMap  =  optionMap.tailMap(arg  -  1);  [CE]  illegal  start  of  expression  [FE]                  OptionException      [CONTEXT]        if  (optionMap.containsKey(arg))  {  return  true;  }  final  Map  tailMap  =  optionMap.tailMap(arg);        [BUGGY]  final  Map  <  String,String>  tailMap  =  optionMap.tailMap(arg  -  1);  [BUGGY]      for  (final  Iterator  iter  =  tailMap.values().iterator();  iter.hasNext();)  {  final  Option  option  =  (Option)  iter.next();  if  (option.canProcess(commandLine,  arg))  {  return  true;  }  }  if  (looksLikeOption(commandLine,  arg))  {  return  false;  }  [CLASS]  GroupImpl  [METHOD]  canProcess  [RETURN_TYPE]  boolean  WriteableCommandLine  commandLine  String  arg  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  SortedMap  newOptionMap  optionMap  WriteableCommandLine  commandLine  Iterator  iter  List  anonymous  newAnonymous  options  Option  option  String  arg  description  name  Map  tailMap  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	131	131	1	replace	final  Map  <  String,String>  tailMap  =  optionMap.tailMap(arg  -  1);	  final    Map    <    String,String>    tailMap    =    optionMap.tailMap(arg    +    1);    	non-compiled	[CE]  illegal  start  of  expression	26	None	replace
17	[BUG]  [BUGGY]  final  Map  <  String,String>  tailMap  =  optionMap.tailMap(commandLine  -  1);  [CE]  illegal  start  of  expression  [FE]                OptionException      [CONTEXT]        if  (optionMap.containsKey(arg))  {  return  true;  }  final  Map  tailMap  =  optionMap.tailMap(arg);        [BUGGY]  final  Map  <  String,String>  tailMap  =  optionMap.tailMap(commandLine  -  1);  [BUGGY]      for  (final  Iterator  iter  =  tailMap.values().iterator();  iter.hasNext();)  {  final  Option  option  =  (Option)  iter.next();  if  (option.canProcess(commandLine,  arg))  {  return  true;  }  }  if  (looksLikeOption(commandLine,  arg))  {  return  false;  }  [CLASS]  GroupImpl  [METHOD]  canProcess  [RETURN_TYPE]  boolean  WriteableCommandLine  commandLine  String  arg  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  SortedMap  newOptionMap  optionMap  WriteableCommandLine  commandLine  Iterator  iter  List  anonymous  newAnonymous  options  Option  option  String  arg  description  name  Map  tailMap  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	131	131	1	replace	final  Map  <  String,String>  tailMap  =  optionMap.tailMap(commandLine  -  1);	  final    Map    <    String,String>    tailMap    =    optionMap.tailMap(commandLine);    	non-compiled	[CE]  illegal  start  of  expression	4	None	replace
18	[BUG]  [BUGGY]  final  Map  <  String,String>  tailMap  =  optionMap.tailMap(commandLine,  description);  [CE]  illegal  start  of  expression  [FE]                  OptionException      [CONTEXT]        if  (optionMap.containsKey(arg))  {  return  true;  }  final  Map  tailMap  =  optionMap.tailMap(arg);        [BUGGY]  final  Map  <  String,String>  tailMap  =  optionMap.tailMap(commandLine,  description);  [BUGGY]      for  (final  Iterator  iter  =  tailMap.values().iterator();  iter.hasNext();)  {  final  Option  option  =  (Option)  iter.next();  if  (option.canProcess(commandLine,  arg))  {  return  true;  }  }  if  (looksLikeOption(commandLine,  arg))  {  return  false;  }  [CLASS]  GroupImpl  [METHOD]  canProcess  [RETURN_TYPE]  boolean  WriteableCommandLine  commandLine  String  arg  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  SortedMap  newOptionMap  optionMap  WriteableCommandLine  commandLine  Iterator  iter  List  anonymous  newAnonymous  options  Option  option  String  arg  description  name  Map  tailMap  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	131	131	1	replace	final  Map  <  String,String>  tailMap  =  optionMap.tailMap(commandLine,  description);	  final    Map    <    String,String>    tailMap    =    optionMap.tailMap(commandLine);    	non-compiled	[CE]  illegal  start  of  expression	4	None	replace
19	[BUG]  [BUGGY]  For(final  Iterator  iter  =  this.tailMap.iterator();  iter.hasNext();)  {  [CE]  illegal  start  of  expression  [FE]                  OptionException      [CONTEXT]        if  (optionMap.containsKey(arg))  {  return  true;  }  final  Map  tailMap  =  optionMap.tailMap(arg);        [BUGGY]  For(final  Iterator  iter  =  this.tailMap.iterator();  iter.hasNext();)  {  [BUGGY]      final  Option  option  =  (Option)  iter.next();  if  (option.canProcess(commandLine,  arg))  {  return  true;  }  }  if  (looksLikeOption(commandLine,  arg))  {  return  false;  }  [CLASS]  GroupImpl  [METHOD]  canProcess  [RETURN_TYPE]  boolean  WriteableCommandLine  commandLine  String  arg  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  SortedMap  newOptionMap  optionMap  WriteableCommandLine  commandLine  Iterator  iter  List  anonymous  newAnonymous  options  Option  option  String  arg  description  name  Map  tailMap  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	131	131	1	replace	For(final  Iterator  iter  =  this.tailMap.iterator();  iter.hasNext();)  {	  For(final    Iterator    iter    =    tailMap.iterator();    iter.hasNext();)    {    	non-compiled	[CE]  illegal  start  of  expression	3	None	replace
20	[BUG]  [BUGGY]  For(final  Iterator  iter  =  args.iterator();  iter.hasNext();)  {  [CE]  illegal  start  of  expression  [FE]                    OptionException      [CONTEXT]        if  (optionMap.containsKey(arg))  {  return  true;  }  final  Map  tailMap  =  optionMap.tailMap(arg);        [BUGGY]  For(final  Iterator  iter  =  args.iterator();  iter.hasNext();)  {  [BUGGY]      final  Option  option  =  (Option)  iter.next();  if  (option.canProcess(commandLine,  arg))  {  return  true;  }  }  if  (looksLikeOption(commandLine,  arg))  {  return  false;  }  [CLASS]  GroupImpl  [METHOD]  canProcess  [RETURN_TYPE]  boolean  WriteableCommandLine  commandLine  String  arg  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  SortedMap  newOptionMap  optionMap  WriteableCommandLine  commandLine  Iterator  iter  List  anonymous  newAnonymous  options  Option  option  String  arg  description  name  Map  tailMap  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	131	131	1	replace	For(final  Iterator  iter  =  args.iterator();  iter.hasNext();)  {	  For(final    Iterator    iter    =    tailMap.iterator();    iter.hasNext();)    {    	non-compiled	[CE]  illegal  start  of  expression	3	None	replace
21	[BUG]  [BUGGY]  final  Map  <  String,Object>  tailMap  =  optionMap.tailMap(arg)/  1;  [CE]  illegal  start  of  expression  [FE]                      OptionException      [CONTEXT]        if  (optionMap.containsKey(arg))  {  return  true;  }  final  Map  tailMap  =  optionMap.tailMap(arg);        [BUGGY]  final  Map  <  String,Object>  tailMap  =  optionMap.tailMap(arg)/  1;  [BUGGY]      for  (final  Iterator  iter  =  tailMap.values().iterator();  iter.hasNext();)  {  final  Option  option  =  (Option)  iter.next();  if  (option.canProcess(commandLine,  arg))  {  return  true;  }  }  if  (looksLikeOption(commandLine,  arg))  {  return  false;  }  [CLASS]  GroupImpl  [METHOD]  canProcess  [RETURN_TYPE]  boolean  WriteableCommandLine  commandLine  String  arg  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  SortedMap  newOptionMap  optionMap  WriteableCommandLine  commandLine  Iterator  iter  List  anonymous  newAnonymous  options  Option  option  String  arg  description  name  Map  tailMap  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	131	131	1	replace	final  Map  <  String,Object>  tailMap  =  optionMap.tailMap(arg)/  1;	  final    Map    <    String,Object>    tailMap    =    optionMap.tailMap(arg)+    1;    	non-compiled	[CE]  illegal  start  of  expression	14	None	replace
22	[BUG]  [BUGGY]  final  Map  <  String,Object>  tailMap  =  optionMap.tailMap(arg)+  2;  [CE]  illegal  start  of  expression  [FE]                        OptionException      [CONTEXT]        if  (optionMap.containsKey(arg))  {  return  true;  }  final  Map  tailMap  =  optionMap.tailMap(arg);        [BUGGY]  final  Map  <  String,Object>  tailMap  =  optionMap.tailMap(arg)+  2;  [BUGGY]      for  (final  Iterator  iter  =  tailMap.values().iterator();  iter.hasNext();)  {  final  Option  option  =  (Option)  iter.next();  if  (option.canProcess(commandLine,  arg))  {  return  true;  }  }  if  (looksLikeOption(commandLine,  arg))  {  return  false;  }  [CLASS]  GroupImpl  [METHOD]  canProcess  [RETURN_TYPE]  boolean  WriteableCommandLine  commandLine  String  arg  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  SortedMap  newOptionMap  optionMap  WriteableCommandLine  commandLine  Iterator  iter  List  anonymous  newAnonymous  options  Option  option  String  arg  description  name  Map  tailMap  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	131	131	1	replace	final  Map  <  String,Object>  tailMap  =  optionMap.tailMap(arg)+  2;	  final    Map    <    String,Object>    tailMap    =    optionMap.tailMap(arg)+    1;    	non-compiled	[CE]  illegal  start  of  expression	14	None	replace
23	[BUG]  [BUGGY]  final  Map  <  String,Object>  tailMap  =  optionMap.tailMap(arg)-  1;  [CE]  illegal  start  of  expression  [FE]                          OptionException      [CONTEXT]        if  (optionMap.containsKey(arg))  {  return  true;  }  final  Map  tailMap  =  optionMap.tailMap(arg);        [BUGGY]  final  Map  <  String,Object>  tailMap  =  optionMap.tailMap(arg)-  1;  [BUGGY]      for  (final  Iterator  iter  =  tailMap.values().iterator();  iter.hasNext();)  {  final  Option  option  =  (Option)  iter.next();  if  (option.canProcess(commandLine,  arg))  {  return  true;  }  }  if  (looksLikeOption(commandLine,  arg))  {  return  false;  }  [CLASS]  GroupImpl  [METHOD]  canProcess  [RETURN_TYPE]  boolean  WriteableCommandLine  commandLine  String  arg  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  SortedMap  newOptionMap  optionMap  WriteableCommandLine  commandLine  Iterator  iter  List  anonymous  newAnonymous  options  Option  option  String  arg  description  name  Map  tailMap  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	131	131	1	replace	final  Map  <  String,Object>  tailMap  =  optionMap.tailMap(arg)-  1;	  final    Map    <    String,Object>    tailMap    =    optionMap.tailMap(arg)+    1;    	non-compiled	[CE]  illegal  start  of  expression	14	None	replace
24	[BUG]  [BUGGY]  final  List  <  Option>  options  =  tailMap.keySet();  [CE]  illegal  start  of  expression  [FE]                OptionException      [CONTEXT]        if  (optionMap.containsKey(arg))  {  return  true;  }  final  Map  tailMap  =  optionMap.tailMap(arg);        [BUGGY]  final  List  <  Option>  options  =  tailMap.keySet();  [BUGGY]      for  (final  Iterator  iter  =  tailMap.values().iterator();  iter.hasNext();)  {  final  Option  option  =  (Option)  iter.next();  if  (option.canProcess(commandLine,  arg))  {  return  true;  }  }  if  (looksLikeOption(commandLine,  arg))  {  return  false;  }  [CLASS]  GroupImpl  [METHOD]  canProcess  [RETURN_TYPE]  boolean  WriteableCommandLine  commandLine  String  arg  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  SortedMap  newOptionMap  optionMap  WriteableCommandLine  commandLine  Iterator  iter  List  anonymous  newAnonymous  options  Option  option  String  arg  description  name  Map  tailMap  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	131	131	1	replace	final  List  <  Option>  options  =  tailMap.keySet();	  final    List    <    Option>    options    =    optionMap.keySet();    	non-compiled	[CE]  illegal  start  of  expression	18	None	replace
25	[BUG]  [BUGGY]  final  Set  <  Option>  options  =  optionMap.keySet();  [CE]  illegal  start  of  expression  [FE]                  OptionException      [CONTEXT]        if  (optionMap.containsKey(arg))  {  return  true;  }  final  Map  tailMap  =  optionMap.tailMap(arg);        [BUGGY]  final  Set  <  Option>  options  =  optionMap.keySet();  [BUGGY]      for  (final  Iterator  iter  =  tailMap.values().iterator();  iter.hasNext();)  {  final  Option  option  =  (Option)  iter.next();  if  (option.canProcess(commandLine,  arg))  {  return  true;  }  }  if  (looksLikeOption(commandLine,  arg))  {  return  false;  }  [CLASS]  GroupImpl  [METHOD]  canProcess  [RETURN_TYPE]  boolean  WriteableCommandLine  commandLine  String  arg  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  SortedMap  newOptionMap  optionMap  WriteableCommandLine  commandLine  Iterator  iter  List  anonymous  newAnonymous  options  Option  option  String  arg  description  name  Map  tailMap  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	131	131	1	replace	final  Set  <  Option>  options  =  optionMap.keySet();	  final    List    <    Option>    options    =    optionMap.keySet();    	non-compiled	[CE]  illegal  start  of  expression	18	None	replace
26	[BUG]  [BUGGY]  final  List  <  Option>  options  =  tailMap.getOptions();  [CE]  illegal  start  of  expression  [FE]              OptionException      [CONTEXT]        if  (optionMap.containsKey(arg))  {  return  true;  }  final  Map  tailMap  =  optionMap.tailMap(arg);        [BUGGY]  final  List  <  Option>  options  =  tailMap.getOptions();  [BUGGY]      for  (final  Iterator  iter  =  tailMap.values().iterator();  iter.hasNext();)  {  final  Option  option  =  (Option)  iter.next();  if  (option.canProcess(commandLine,  arg))  {  return  true;  }  }  if  (looksLikeOption(commandLine,  arg))  {  return  false;  }  [CLASS]  GroupImpl  [METHOD]  canProcess  [RETURN_TYPE]  boolean  WriteableCommandLine  commandLine  String  arg  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  SortedMap  newOptionMap  optionMap  WriteableCommandLine  commandLine  Iterator  iter  List  anonymous  newAnonymous  options  Option  option  String  arg  description  name  Map  tailMap  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	131	131	1	replace	final  List  <  Option>  options  =  tailMap.getOptions();	  final    List    <    Option>    options    =    tailMap.values();    	non-compiled	[CE]  illegal  start  of  expression	17	None	replace
27	[BUG]  [BUGGY]  final  Set  <  Option>  options  =  tailMap.values();  [CE]  illegal  start  of  expression  [FE]                  OptionException      [CONTEXT]        if  (optionMap.containsKey(arg))  {  return  true;  }  final  Map  tailMap  =  optionMap.tailMap(arg);        [BUGGY]  final  Set  <  Option>  options  =  tailMap.values();  [BUGGY]      for  (final  Iterator  iter  =  tailMap.values().iterator();  iter.hasNext();)  {  final  Option  option  =  (Option)  iter.next();  if  (option.canProcess(commandLine,  arg))  {  return  true;  }  }  if  (looksLikeOption(commandLine,  arg))  {  return  false;  }  [CLASS]  GroupImpl  [METHOD]  canProcess  [RETURN_TYPE]  boolean  WriteableCommandLine  commandLine  String  arg  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  SortedMap  newOptionMap  optionMap  WriteableCommandLine  commandLine  Iterator  iter  List  anonymous  newAnonymous  options  Option  option  String  arg  description  name  Map  tailMap  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	131	131	1	replace	final  Set  <  Option>  options  =  tailMap.values();	  final    Set    <    Option>    options    =    optionMap.values();    	non-compiled	[CE]  illegal  start  of  expression	19	None	replace
28	[BUG]  [BUGGY]  final  Map  <  String,  Option>  tailMap  =  optionMap.tailMap(commandLine  -  1);  [CE]  illegal  start  of  expression  [FE]            OptionException      [CONTEXT]        if  (optionMap.containsKey(arg))  {  return  true;  }  final  Map  tailMap  =  optionMap.tailMap(arg);        [BUGGY]  final  Map  <  String,  Option>  tailMap  =  optionMap.tailMap(commandLine  -  1);  [BUGGY]      for  (final  Iterator  iter  =  tailMap.values().iterator();  iter.hasNext();)  {  final  Option  option  =  (Option)  iter.next();  if  (option.canProcess(commandLine,  arg))  {  return  true;  }  }  if  (looksLikeOption(commandLine,  arg))  {  return  false;  }  [CLASS]  GroupImpl  [METHOD]  canProcess  [RETURN_TYPE]  boolean  WriteableCommandLine  commandLine  String  arg  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  SortedMap  newOptionMap  optionMap  WriteableCommandLine  commandLine  Iterator  iter  List  anonymous  newAnonymous  options  Option  option  String  arg  description  name  Map  tailMap  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	131	131	1	replace	final  Map  <  String,  Option>  tailMap  =  optionMap.tailMap(commandLine  -  1);	  final    Map    <    String,    Option>    tailMap    =    optionMap.tailMap(commandLine);    	non-compiled	[CE]  illegal  start  of  expression	10	None	replace
29	[BUG]  [BUGGY]  final  Map  <  String,  Option>  tailMap  =  optionMap.tailMap(commandLine,  description);  [CE]  illegal  start  of  expression  [FE]              OptionException      [CONTEXT]        if  (optionMap.containsKey(arg))  {  return  true;  }  final  Map  tailMap  =  optionMap.tailMap(arg);        [BUGGY]  final  Map  <  String,  Option>  tailMap  =  optionMap.tailMap(commandLine,  description);  [BUGGY]      for  (final  Iterator  iter  =  tailMap.values().iterator();  iter.hasNext();)  {  final  Option  option  =  (Option)  iter.next();  if  (option.canProcess(commandLine,  arg))  {  return  true;  }  }  if  (looksLikeOption(commandLine,  arg))  {  return  false;  }  [CLASS]  GroupImpl  [METHOD]  canProcess  [RETURN_TYPE]  boolean  WriteableCommandLine  commandLine  String  arg  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  SortedMap  newOptionMap  optionMap  WriteableCommandLine  commandLine  Iterator  iter  List  anonymous  newAnonymous  options  Option  option  String  arg  description  name  Map  tailMap  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	131	131	1	replace	final  Map  <  String,  Option>  tailMap  =  optionMap.tailMap(commandLine,  description);	  final    Map    <    String,    Option>    tailMap    =    optionMap.tailMap(commandLine);    	non-compiled	[CE]  illegal  start  of  expression	10	None	replace
30	[BUG]  [BUGGY]  final  Map  <  String,String>  tailMap  =  optionMap.keySet();  [CE]  illegal  start  of  expression  [FE]                    OptionException      [CONTEXT]        if  (optionMap.containsKey(arg))  {  return  true;  }  final  Map  tailMap  =  optionMap.tailMap(arg);        [BUGGY]  final  Map  <  String,String>  tailMap  =  optionMap.keySet();  [BUGGY]      for  (final  Iterator  iter  =  tailMap.values().iterator();  iter.hasNext();)  {  final  Option  option  =  (Option)  iter.next();  if  (option.canProcess(commandLine,  arg))  {  return  true;  }  }  if  (looksLikeOption(commandLine,  arg))  {  return  false;  }  [CLASS]  GroupImpl  [METHOD]  canProcess  [RETURN_TYPE]  boolean  WriteableCommandLine  commandLine  String  arg  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  SortedMap  newOptionMap  optionMap  WriteableCommandLine  commandLine  Iterator  iter  List  anonymous  newAnonymous  options  Option  option  String  arg  description  name  Map  tailMap  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	131	131	1	replace	final  Map  <  String,String>  tailMap  =  optionMap.keySet();	  final    Map    <    String,String>    tailMap    =    optionMap.values();    	non-compiled	[CE]  illegal  start  of  expression	29	None	replace
31	[BUG]  [BUGGY]  final  Map  tailMap  =  optionMap.tailMap(arg,  name);  [CE]  illegal  start  of  expression  [FE]                  OptionException      [CONTEXT]        if  (optionMap.containsKey(arg))  {  return  true;  }  final  Map  tailMap  =  optionMap.tailMap(arg);        [BUGGY]  final  Map  tailMap  =  optionMap.tailMap(arg,  name);  [BUGGY]      for  (final  Iterator  iter  =  tailMap.values().iterator();  iter.hasNext();)  {  final  Option  option  =  (Option)  iter.next();  if  (option.canProcess(commandLine,  arg))  {  return  true;  }  }  if  (looksLikeOption(commandLine,  arg))  {  return  false;  }  [CLASS]  GroupImpl  [METHOD]  canProcess  [RETURN_TYPE]  boolean  WriteableCommandLine  commandLine  String  arg  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  SortedMap  newOptionMap  optionMap  WriteableCommandLine  commandLine  Iterator  iter  List  anonymous  newAnonymous  options  Option  option  String  arg  description  name  Map  tailMap  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	131	131	1	replace	final  Map  tailMap  =  optionMap.tailMap(arg,  name);	  final    Map    tailMap    =    optionMap.tailMap(arg,    description);    	non-compiled	[CE]  illegal  start  of  expression	9	None	replace
32	[BUG]  [BUGGY]  final  Map  tailMap  =  optionMap.tailMap(arg,  description  -  1);  [CE]  illegal  start  of  expression  [FE]                    OptionException      [CONTEXT]        if  (optionMap.containsKey(arg))  {  return  true;  }  final  Map  tailMap  =  optionMap.tailMap(arg);        [BUGGY]  final  Map  tailMap  =  optionMap.tailMap(arg,  description  -  1);  [BUGGY]      for  (final  Iterator  iter  =  tailMap.values().iterator();  iter.hasNext();)  {  final  Option  option  =  (Option)  iter.next();  if  (option.canProcess(commandLine,  arg))  {  return  true;  }  }  if  (looksLikeOption(commandLine,  arg))  {  return  false;  }  [CLASS]  GroupImpl  [METHOD]  canProcess  [RETURN_TYPE]  boolean  WriteableCommandLine  commandLine  String  arg  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  SortedMap  newOptionMap  optionMap  WriteableCommandLine  commandLine  Iterator  iter  List  anonymous  newAnonymous  options  Option  option  String  arg  description  name  Map  tailMap  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	131	131	1	replace	final  Map  tailMap  =  optionMap.tailMap(arg,  description  -  1);	  final    Map    tailMap    =    optionMap.tailMap(arg,    description);    	non-compiled	[CE]  illegal  start  of  expression	9	None	replace
33	[BUG]  [BUGGY]  final  Map  <  String,Object>  tailMap  =  optionMap.tailMap(commandLine  +  1);  [CE]  illegal  start  of  expression  [FE]                  OptionException      [CONTEXT]        if  (optionMap.containsKey(arg))  {  return  true;  }  final  Map  tailMap  =  optionMap.tailMap(arg);        [BUGGY]  final  Map  <  String,Object>  tailMap  =  optionMap.tailMap(commandLine  +  1);  [BUGGY]      for  (final  Iterator  iter  =  tailMap.values().iterator();  iter.hasNext();)  {  final  Option  option  =  (Option)  iter.next();  if  (option.canProcess(commandLine,  arg))  {  return  true;  }  }  if  (looksLikeOption(commandLine,  arg))  {  return  false;  }  [CLASS]  GroupImpl  [METHOD]  canProcess  [RETURN_TYPE]  boolean  WriteableCommandLine  commandLine  String  arg  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  SortedMap  newOptionMap  optionMap  WriteableCommandLine  commandLine  Iterator  iter  List  anonymous  newAnonymous  options  Option  option  String  arg  description  name  Map  tailMap  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	131	131	1	replace	final  Map  <  String,Object>  tailMap  =  optionMap.tailMap(commandLine  +  1);	  final    Map    <    String,Object>    tailMap    =    optionMap.tailMap(arg    +    1);    	non-compiled	[CE]  illegal  start  of  expression	22	None	replace
34	[BUG]  [BUGGY]  final  Map  <  String,Object>  tailMap  =  optionMap.tailMap(arg  -  1);  [CE]  illegal  start  of  expression  [FE]                    OptionException      [CONTEXT]        if  (optionMap.containsKey(arg))  {  return  true;  }  final  Map  tailMap  =  optionMap.tailMap(arg);        [BUGGY]  final  Map  <  String,Object>  tailMap  =  optionMap.tailMap(arg  -  1);  [BUGGY]      for  (final  Iterator  iter  =  tailMap.values().iterator();  iter.hasNext();)  {  final  Option  option  =  (Option)  iter.next();  if  (option.canProcess(commandLine,  arg))  {  return  true;  }  }  if  (looksLikeOption(commandLine,  arg))  {  return  false;  }  [CLASS]  GroupImpl  [METHOD]  canProcess  [RETURN_TYPE]  boolean  WriteableCommandLine  commandLine  String  arg  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  SortedMap  newOptionMap  optionMap  WriteableCommandLine  commandLine  Iterator  iter  List  anonymous  newAnonymous  options  Option  option  String  arg  description  name  Map  tailMap  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	131	131	1	replace	final  Map  <  String,Object>  tailMap  =  optionMap.tailMap(arg  -  1);	  final    Map    <    String,Object>    tailMap    =    optionMap.tailMap(arg    +    1);    	non-compiled	[CE]  illegal  start  of  expression	22	None	replace
35	[BUG]  [BUGGY]  final  Map  <  String,String>  tailMap  =  options.tailMap(commandLine);  [CE]  illegal  start  of  expression  [FE]                  OptionException      [CONTEXT]        if  (optionMap.containsKey(arg))  {  return  true;  }  final  Map  tailMap  =  optionMap.tailMap(arg);        [BUGGY]  final  Map  <  String,String>  tailMap  =  options.tailMap(commandLine);  [BUGGY]      for  (final  Iterator  iter  =  tailMap.values().iterator();  iter.hasNext();)  {  final  Option  option  =  (Option)  iter.next();  if  (option.canProcess(commandLine,  arg))  {  return  true;  }  }  if  (looksLikeOption(commandLine,  arg))  {  return  false;  }  [CLASS]  GroupImpl  [METHOD]  canProcess  [RETURN_TYPE]  boolean  WriteableCommandLine  commandLine  String  arg  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  SortedMap  newOptionMap  optionMap  WriteableCommandLine  commandLine  Iterator  iter  List  anonymous  newAnonymous  options  Option  option  String  arg  description  name  Map  tailMap  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	131	131	1	replace	final  Map  <  String,String>  tailMap  =  options.tailMap(commandLine);	  final    Map    <    String,String>    tailMap    =    options.tailMap(arg);    	non-compiled	[CE]  illegal  start  of  expression	5	None	replace
36	[BUG]  [BUGGY]  final  Map  <  String,String>  tailMap  =  optionsMap.tailMap(commandLine);  [CE]  illegal  start  of  expression  [FE]                    OptionException      [CONTEXT]        if  (optionMap.containsKey(arg))  {  return  true;  }  final  Map  tailMap  =  optionMap.tailMap(arg);        [BUGGY]  final  Map  <  String,String>  tailMap  =  optionsMap.tailMap(commandLine);  [BUGGY]      for  (final  Iterator  iter  =  tailMap.values().iterator();  iter.hasNext();)  {  final  Option  option  =  (Option)  iter.next();  if  (option.canProcess(commandLine,  arg))  {  return  true;  }  }  if  (looksLikeOption(commandLine,  arg))  {  return  false;  }  [CLASS]  GroupImpl  [METHOD]  canProcess  [RETURN_TYPE]  boolean  WriteableCommandLine  commandLine  String  arg  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  SortedMap  newOptionMap  optionMap  WriteableCommandLine  commandLine  Iterator  iter  List  anonymous  newAnonymous  options  Option  option  String  arg  description  name  Map  tailMap  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	131	131	1	replace	final  Map  <  String,String>  tailMap  =  optionsMap.tailMap(commandLine);	  final    Map    <    String,String>    tailMap    =    optionsMap.tailMap(arg);    	non-compiled	[CE]  illegal  start  of  expression	23	None	replace
37	[BUG]  [BUGGY]  final  Map  <  String,Object>  tailMap  =  optionMap.tailMap(commandLine  -  1);  [CE]  illegal  start  of  expression  [FE]                  OptionException      [CONTEXT]        if  (optionMap.containsKey(arg))  {  return  true;  }  final  Map  tailMap  =  optionMap.tailMap(arg);        [BUGGY]  final  Map  <  String,Object>  tailMap  =  optionMap.tailMap(commandLine  -  1);  [BUGGY]      for  (final  Iterator  iter  =  tailMap.values().iterator();  iter.hasNext();)  {  final  Option  option  =  (Option)  iter.next();  if  (option.canProcess(commandLine,  arg))  {  return  true;  }  }  if  (looksLikeOption(commandLine,  arg))  {  return  false;  }  [CLASS]  GroupImpl  [METHOD]  canProcess  [RETURN_TYPE]  boolean  WriteableCommandLine  commandLine  String  arg  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  SortedMap  newOptionMap  optionMap  WriteableCommandLine  commandLine  Iterator  iter  List  anonymous  newAnonymous  options  Option  option  String  arg  description  name  Map  tailMap  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	131	131	1	replace	final  Map  <  String,Object>  tailMap  =  optionMap.tailMap(commandLine  -  1);	  final    Map    <    String,Object>    tailMap    =    optionMap.tailMap(commandLine);    	non-compiled	[CE]  illegal  start  of  expression	12	None	replace
38	[BUG]  [BUGGY]  final  Map  <  String,Object>  tailMap  =  optionMap.tailMap(commandLine,  description);  [CE]  illegal  start  of  expression  [FE]                    OptionException      [CONTEXT]        if  (optionMap.containsKey(arg))  {  return  true;  }  final  Map  tailMap  =  optionMap.tailMap(arg);        [BUGGY]  final  Map  <  String,Object>  tailMap  =  optionMap.tailMap(commandLine,  description);  [BUGGY]      for  (final  Iterator  iter  =  tailMap.values().iterator();  iter.hasNext();)  {  final  Option  option  =  (Option)  iter.next();  if  (option.canProcess(commandLine,  arg))  {  return  true;  }  }  if  (looksLikeOption(commandLine,  arg))  {  return  false;  }  [CLASS]  GroupImpl  [METHOD]  canProcess  [RETURN_TYPE]  boolean  WriteableCommandLine  commandLine  String  arg  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  SortedMap  newOptionMap  optionMap  WriteableCommandLine  commandLine  Iterator  iter  List  anonymous  newAnonymous  options  Option  option  String  arg  description  name  Map  tailMap  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	131	131	1	replace	final  Map  <  String,Object>  tailMap  =  optionMap.tailMap(commandLine,  description);	  final    Map    <    String,Object>    tailMap    =    optionMap.tailMap(commandLine);    	non-compiled	[CE]  illegal  start  of  expression	12	None	replace
39	[BUG]  [BUGGY]  final  Map  tailMap  =  optionsMap.tailMap(commandLine);  [CE]  illegal  start  of  expression  [FE]            OptionException      [CONTEXT]        if  (optionMap.containsKey(arg))  {  return  true;  }  final  Map  tailMap  =  optionMap.tailMap(arg);        [BUGGY]  final  Map  tailMap  =  optionsMap.tailMap(commandLine);  [BUGGY]      for  (final  Iterator  iter  =  tailMap.values().iterator();  iter.hasNext();)  {  final  Option  option  =  (Option)  iter.next();  if  (option.canProcess(commandLine,  arg))  {  return  true;  }  }  if  (looksLikeOption(commandLine,  arg))  {  return  false;  }  [CLASS]  GroupImpl  [METHOD]  canProcess  [RETURN_TYPE]  boolean  WriteableCommandLine  commandLine  String  arg  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  SortedMap  newOptionMap  optionMap  WriteableCommandLine  commandLine  Iterator  iter  List  anonymous  newAnonymous  options  Option  option  String  arg  description  name  Map  tailMap  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	131	131	1	replace	final  Map  tailMap  =  optionsMap.tailMap(commandLine);	  final    Map    tailMap    =    optionsMap.tailMap(arg);    	non-compiled	[CE]  illegal  start  of  expression	20	None	replace
40	[BUG]  [BUGGY]  final  Map  tailMap  =  optionsMap.tailMap(commandLine,  arg);  [CE]  illegal  start  of  expression  [FE]              OptionException      [CONTEXT]        if  (optionMap.containsKey(arg))  {  return  true;  }  final  Map  tailMap  =  optionMap.tailMap(arg);        [BUGGY]  final  Map  tailMap  =  optionsMap.tailMap(commandLine,  arg);  [BUGGY]      for  (final  Iterator  iter  =  tailMap.values().iterator();  iter.hasNext();)  {  final  Option  option  =  (Option)  iter.next();  if  (option.canProcess(commandLine,  arg))  {  return  true;  }  }  if  (looksLikeOption(commandLine,  arg))  {  return  false;  }  [CLASS]  GroupImpl  [METHOD]  canProcess  [RETURN_TYPE]  boolean  WriteableCommandLine  commandLine  String  arg  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  SortedMap  newOptionMap  optionMap  WriteableCommandLine  commandLine  Iterator  iter  List  anonymous  newAnonymous  options  Option  option  String  arg  description  name  Map  tailMap  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	131	131	1	replace	final  Map  tailMap  =  optionsMap.tailMap(commandLine,  arg);	  final    Map    tailMap    =    optionsMap.tailMap(arg);    	non-compiled	[CE]  illegal  start  of  expression	20	None	replace
41	[BUG]  [BUGGY]  final  Map  tailMap  =  optionsMap.tailMap(arg,  description);  [CE]  illegal  start  of  expression  [FE]                OptionException      [CONTEXT]        if  (optionMap.containsKey(arg))  {  return  true;  }  final  Map  tailMap  =  optionMap.tailMap(arg);        [BUGGY]  final  Map  tailMap  =  optionsMap.tailMap(arg,  description);  [BUGGY]      for  (final  Iterator  iter  =  tailMap.values().iterator();  iter.hasNext();)  {  final  Option  option  =  (Option)  iter.next();  if  (option.canProcess(commandLine,  arg))  {  return  true;  }  }  if  (looksLikeOption(commandLine,  arg))  {  return  false;  }  [CLASS]  GroupImpl  [METHOD]  canProcess  [RETURN_TYPE]  boolean  WriteableCommandLine  commandLine  String  arg  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  SortedMap  newOptionMap  optionMap  WriteableCommandLine  commandLine  Iterator  iter  List  anonymous  newAnonymous  options  Option  option  String  arg  description  name  Map  tailMap  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	131	131	1	replace	final  Map  tailMap  =  optionsMap.tailMap(arg,  description);	  final    Map    tailMap    =    optionsMap.tailMap(arg);    	non-compiled	[CE]  illegal  start  of  expression	20	None	replace
42	[BUG]  [BUGGY]  final  Map  <  String,Object>  tailMap  =  options.tailMap(commandLine);  [CE]  illegal  start  of  expression  [FE]                    OptionException      [CONTEXT]        if  (optionMap.containsKey(arg))  {  return  true;  }  final  Map  tailMap  =  optionMap.tailMap(arg);        [BUGGY]  final  Map  <  String,Object>  tailMap  =  options.tailMap(commandLine);  [BUGGY]      for  (final  Iterator  iter  =  tailMap.values().iterator();  iter.hasNext();)  {  final  Option  option  =  (Option)  iter.next();  if  (option.canProcess(commandLine,  arg))  {  return  true;  }  }  if  (looksLikeOption(commandLine,  arg))  {  return  false;  }  [CLASS]  GroupImpl  [METHOD]  canProcess  [RETURN_TYPE]  boolean  WriteableCommandLine  commandLine  String  arg  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  SortedMap  newOptionMap  optionMap  WriteableCommandLine  commandLine  Iterator  iter  List  anonymous  newAnonymous  options  Option  option  String  arg  description  name  Map  tailMap  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	131	131	1	replace	final  Map  <  String,Object>  tailMap  =  options.tailMap(commandLine);	  final    Map    <    String,Object>    tailMap    =    options.tailMap(arg);    	non-compiled	[CE]  illegal  start  of  expression	13	None	replace
43	[BUG]  [BUGGY]  final  Map  <  String,String>  tailMap  =  optionMap.tailMap(arg)+  2;  [CE]  illegal  start  of  expression  [FE]                  OptionException      [CONTEXT]        if  (optionMap.containsKey(arg))  {  return  true;  }  final  Map  tailMap  =  optionMap.tailMap(arg);        [BUGGY]  final  Map  <  String,String>  tailMap  =  optionMap.tailMap(arg)+  2;  [BUGGY]      for  (final  Iterator  iter  =  tailMap.values().iterator();  iter.hasNext();)  {  final  Option  option  =  (Option)  iter.next();  if  (option.canProcess(commandLine,  arg))  {  return  true;  }  }  if  (looksLikeOption(commandLine,  arg))  {  return  false;  }  [CLASS]  GroupImpl  [METHOD]  canProcess  [RETURN_TYPE]  boolean  WriteableCommandLine  commandLine  String  arg  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  SortedMap  newOptionMap  optionMap  WriteableCommandLine  commandLine  Iterator  iter  List  anonymous  newAnonymous  options  Option  option  String  arg  description  name  Map  tailMap  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	131	131	1	replace	final  Map  <  String,String>  tailMap  =  optionMap.tailMap(arg)+  2;	  final    Map    <    String,String>    tailMap    =    optionMap.tailMap(arg)+    1;    	non-compiled	[CE]  illegal  start  of  expression	27	None	replace
44	[BUG]  [BUGGY]  final  Map  <  String,String>  tailMap  =  optionMap.tailMap(arg)/  1;  [CE]  illegal  start  of  expression  [FE]                    OptionException      [CONTEXT]        if  (optionMap.containsKey(arg))  {  return  true;  }  final  Map  tailMap  =  optionMap.tailMap(arg);        [BUGGY]  final  Map  <  String,String>  tailMap  =  optionMap.tailMap(arg)/  1;  [BUGGY]      for  (final  Iterator  iter  =  tailMap.values().iterator();  iter.hasNext();)  {  final  Option  option  =  (Option)  iter.next();  if  (option.canProcess(commandLine,  arg))  {  return  true;  }  }  if  (looksLikeOption(commandLine,  arg))  {  return  false;  }  [CLASS]  GroupImpl  [METHOD]  canProcess  [RETURN_TYPE]  boolean  WriteableCommandLine  commandLine  String  arg  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  SortedMap  newOptionMap  optionMap  WriteableCommandLine  commandLine  Iterator  iter  List  anonymous  newAnonymous  options  Option  option  String  arg  description  name  Map  tailMap  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	131	131	1	replace	final  Map  <  String,String>  tailMap  =  optionMap.tailMap(arg)/  1;	  final    Map    <    String,String>    tailMap    =    optionMap.tailMap(arg)+    1;    	non-compiled	[CE]  illegal  start  of  expression	27	None	replace
45	[BUG]  [BUGGY]  final  Map  <  String,String>  tailMap  =  optionMap.tailMap(arg)-  1;  [CE]  illegal  start  of  expression  [FE]                      OptionException      [CONTEXT]        if  (optionMap.containsKey(arg))  {  return  true;  }  final  Map  tailMap  =  optionMap.tailMap(arg);        [BUGGY]  final  Map  <  String,String>  tailMap  =  optionMap.tailMap(arg)-  1;  [BUGGY]      for  (final  Iterator  iter  =  tailMap.values().iterator();  iter.hasNext();)  {  final  Option  option  =  (Option)  iter.next();  if  (option.canProcess(commandLine,  arg))  {  return  true;  }  }  if  (looksLikeOption(commandLine,  arg))  {  return  false;  }  [CLASS]  GroupImpl  [METHOD]  canProcess  [RETURN_TYPE]  boolean  WriteableCommandLine  commandLine  String  arg  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  SortedMap  newOptionMap  optionMap  WriteableCommandLine  commandLine  Iterator  iter  List  anonymous  newAnonymous  options  Option  option  String  arg  description  name  Map  tailMap  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	131	131	1	replace	final  Map  <  String,String>  tailMap  =  optionMap.tailMap(arg)-  1;	  final    Map    <    String,String>    tailMap    =    optionMap.tailMap(arg)+    1;    	non-compiled	[CE]  illegal  start  of  expression	27	None	replace
46	[BUG]  [BUGGY]  final  Map  <  String,  Option>  tailMap  =  optionMap.tailMap(arg)/  1;  [CE]  illegal  start  of  expression  [FE]                OptionException      [CONTEXT]        if  (optionMap.containsKey(arg))  {  return  true;  }  final  Map  tailMap  =  optionMap.tailMap(arg);        [BUGGY]  final  Map  <  String,  Option>  tailMap  =  optionMap.tailMap(arg)/  1;  [BUGGY]      for  (final  Iterator  iter  =  tailMap.values().iterator();  iter.hasNext();)  {  final  Option  option  =  (Option)  iter.next();  if  (option.canProcess(commandLine,  arg))  {  return  true;  }  }  if  (looksLikeOption(commandLine,  arg))  {  return  false;  }  [CLASS]  GroupImpl  [METHOD]  canProcess  [RETURN_TYPE]  boolean  WriteableCommandLine  commandLine  String  arg  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  SortedMap  newOptionMap  optionMap  WriteableCommandLine  commandLine  Iterator  iter  List  anonymous  newAnonymous  options  Option  option  String  arg  description  name  Map  tailMap  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	131	131	1	replace	final  Map  <  String,  Option>  tailMap  =  optionMap.tailMap(arg)/  1;	  final    Map    <    String,    Option>    tailMap    =    optionMap.tailMap(arg)+    1;    	non-compiled	[CE]  illegal  start  of  expression	25	None	replace
47	[BUG]  [BUGGY]  final  Map  <  String,  Option>  tailMap  =  optionMap.tailMap(arg)+  2;  [CE]  illegal  start  of  expression  [FE]                  OptionException      [CONTEXT]        if  (optionMap.containsKey(arg))  {  return  true;  }  final  Map  tailMap  =  optionMap.tailMap(arg);        [BUGGY]  final  Map  <  String,  Option>  tailMap  =  optionMap.tailMap(arg)+  2;  [BUGGY]      for  (final  Iterator  iter  =  tailMap.values().iterator();  iter.hasNext();)  {  final  Option  option  =  (Option)  iter.next();  if  (option.canProcess(commandLine,  arg))  {  return  true;  }  }  if  (looksLikeOption(commandLine,  arg))  {  return  false;  }  [CLASS]  GroupImpl  [METHOD]  canProcess  [RETURN_TYPE]  boolean  WriteableCommandLine  commandLine  String  arg  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  SortedMap  newOptionMap  optionMap  WriteableCommandLine  commandLine  Iterator  iter  List  anonymous  newAnonymous  options  Option  option  String  arg  description  name  Map  tailMap  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	131	131	1	replace	final  Map  <  String,  Option>  tailMap  =  optionMap.tailMap(arg)+  2;	  final    Map    <    String,    Option>    tailMap    =    optionMap.tailMap(arg)+    1;    	non-compiled	[CE]  illegal  start  of  expression	25	None	replace
48	[BUG]  [BUGGY]  final  Map  <  String,  Option>  tailMap  =  optionMap.tailMap(arg)-  1;  [CE]  illegal  start  of  expression  [FE]                    OptionException      [CONTEXT]        if  (optionMap.containsKey(arg))  {  return  true;  }  final  Map  tailMap  =  optionMap.tailMap(arg);        [BUGGY]  final  Map  <  String,  Option>  tailMap  =  optionMap.tailMap(arg)-  1;  [BUGGY]      for  (final  Iterator  iter  =  tailMap.values().iterator();  iter.hasNext();)  {  final  Option  option  =  (Option)  iter.next();  if  (option.canProcess(commandLine,  arg))  {  return  true;  }  }  if  (looksLikeOption(commandLine,  arg))  {  return  false;  }  [CLASS]  GroupImpl  [METHOD]  canProcess  [RETURN_TYPE]  boolean  WriteableCommandLine  commandLine  String  arg  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  SortedMap  newOptionMap  optionMap  WriteableCommandLine  commandLine  Iterator  iter  List  anonymous  newAnonymous  options  Option  option  String  arg  description  name  Map  tailMap  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	131	131	1	replace	final  Map  <  String,  Option>  tailMap  =  optionMap.tailMap(arg)-  1;	  final    Map    <    String,    Option>    tailMap    =    optionMap.tailMap(arg)+    1;    	non-compiled	[CE]  illegal  start  of  expression	25	None	replace
49	[BUG]  [BUGGY]  final  Map  <  String,Object>  tailMap  =  options.tailMap(arg  +  1);  [CE]  illegal  start  of  expression  [FE]                    OptionException      [CONTEXT]        if  (optionMap.containsKey(arg))  {  return  true;  }  final  Map  tailMap  =  optionMap.tailMap(arg);        [BUGGY]  final  Map  <  String,Object>  tailMap  =  options.tailMap(arg  +  1);  [BUGGY]      for  (final  Iterator  iter  =  tailMap.values().iterator();  iter.hasNext();)  {  final  Option  option  =  (Option)  iter.next();  if  (option.canProcess(commandLine,  arg))  {  return  true;  }  }  if  (looksLikeOption(commandLine,  arg))  {  return  false;  }  [CLASS]  GroupImpl  [METHOD]  canProcess  [RETURN_TYPE]  boolean  WriteableCommandLine  commandLine  String  arg  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  SortedMap  newOptionMap  optionMap  WriteableCommandLine  commandLine  Iterator  iter  List  anonymous  newAnonymous  options  Option  option  String  arg  description  name  Map  tailMap  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	131	131	1	replace	final  Map  <  String,Object>  tailMap  =  options.tailMap(arg  +  1);	  final    Map    <    String,Object>    tailMap    =    options.tailMap(arg);    	non-compiled	[CE]  illegal  start  of  expression	13	None	replace
50	[BUG]  [BUGGY]  final  Map  <  String,  Option>  tailMap  =  optionsMap.tailMap(arg  +  1);  [CE]  illegal  start  of  expression  [FE]            OptionException      [CONTEXT]        if  (optionMap.containsKey(arg))  {  return  true;  }  final  Map  tailMap  =  optionMap.tailMap(arg);        [BUGGY]  final  Map  <  String,  Option>  tailMap  =  optionsMap.tailMap(arg  +  1);  [BUGGY]      for  (final  Iterator  iter  =  tailMap.values().iterator();  iter.hasNext();)  {  final  Option  option  =  (Option)  iter.next();  if  (option.canProcess(commandLine,  arg))  {  return  true;  }  }  if  (looksLikeOption(commandLine,  arg))  {  return  false;  }  [CLASS]  GroupImpl  [METHOD]  canProcess  [RETURN_TYPE]  boolean  WriteableCommandLine  commandLine  String  arg  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  SortedMap  newOptionMap  optionMap  WriteableCommandLine  commandLine  Iterator  iter  List  anonymous  newAnonymous  options  Option  option  String  arg  description  name  Map  tailMap  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	131	131	1	replace	final  Map  <  String,  Option>  tailMap  =  optionsMap.tailMap(arg  +  1);	  final    Map    <    String,    Option>    tailMap    =    optionsMap.tailMap(arg);    	non-compiled	[CE]  illegal  start  of  expression	21	None	replace
51	[BUG]  [BUGGY]  final  Map  <  String,Object>  tailMap  =  optionMap.tailMap(arg  +  2);  [CE]  illegal  start  of  expression  [FE]                  OptionException      [CONTEXT]        if  (optionMap.containsKey(arg))  {  return  true;  }  final  Map  tailMap  =  optionMap.tailMap(arg);        [BUGGY]  final  Map  <  String,Object>  tailMap  =  optionMap.tailMap(arg  +  2);  [BUGGY]      for  (final  Iterator  iter  =  tailMap.values().iterator();  iter.hasNext();)  {  final  Option  option  =  (Option)  iter.next();  if  (option.canProcess(commandLine,  arg))  {  return  true;  }  }  if  (looksLikeOption(commandLine,  arg))  {  return  false;  }  [CLASS]  GroupImpl  [METHOD]  canProcess  [RETURN_TYPE]  boolean  WriteableCommandLine  commandLine  String  arg  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  SortedMap  newOptionMap  optionMap  WriteableCommandLine  commandLine  Iterator  iter  List  anonymous  newAnonymous  options  Option  option  String  arg  description  name  Map  tailMap  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	131	131	1	replace	final  Map  <  String,Object>  tailMap  =  optionMap.tailMap(arg  +  2);	  final    Map    <    String,Object>    tailMap    =    optionMap.tailMap(arg    +    1);    	non-compiled	[CE]  illegal  start  of  expression	22	None	replace
52	[BUG]  [BUGGY]  final  Map  <  String,String>  tailMap  =  optionMap.tailMap(arg  +  2);  [CE]  illegal  start  of  expression  [FE]                OptionException      [CONTEXT]        if  (optionMap.containsKey(arg))  {  return  true;  }  final  Map  tailMap  =  optionMap.tailMap(arg);        [BUGGY]  final  Map  <  String,String>  tailMap  =  optionMap.tailMap(arg  +  2);  [BUGGY]      for  (final  Iterator  iter  =  tailMap.values().iterator();  iter.hasNext();)  {  final  Option  option  =  (Option)  iter.next();  if  (option.canProcess(commandLine,  arg))  {  return  true;  }  }  if  (looksLikeOption(commandLine,  arg))  {  return  false;  }  [CLASS]  GroupImpl  [METHOD]  canProcess  [RETURN_TYPE]  boolean  WriteableCommandLine  commandLine  String  arg  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  SortedMap  newOptionMap  optionMap  WriteableCommandLine  commandLine  Iterator  iter  List  anonymous  newAnonymous  options  Option  option  String  arg  description  name  Map  tailMap  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	131	131	1	replace	final  Map  <  String,String>  tailMap  =  optionMap.tailMap(arg  +  2);	  final    Map    <    String,String>    tailMap    =    optionMap.tailMap(arg    +    1);    	non-compiled	[CE]  illegal  start  of  expression	26	None	replace
53	[BUG]  [BUGGY]  final  Map  <  String,String>  tailMap  =  optionsMap.tailMap(arg  +  1);  [CE]  illegal  start  of  expression  [FE]                    OptionException      [CONTEXT]        if  (optionMap.containsKey(arg))  {  return  true;  }  final  Map  tailMap  =  optionMap.tailMap(arg);        [BUGGY]  final  Map  <  String,String>  tailMap  =  optionsMap.tailMap(arg  +  1);  [BUGGY]      for  (final  Iterator  iter  =  tailMap.values().iterator();  iter.hasNext();)  {  final  Option  option  =  (Option)  iter.next();  if  (option.canProcess(commandLine,  arg))  {  return  true;  }  }  if  (looksLikeOption(commandLine,  arg))  {  return  false;  }  [CLASS]  GroupImpl  [METHOD]  canProcess  [RETURN_TYPE]  boolean  WriteableCommandLine  commandLine  String  arg  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  SortedMap  newOptionMap  optionMap  WriteableCommandLine  commandLine  Iterator  iter  List  anonymous  newAnonymous  options  Option  option  String  arg  description  name  Map  tailMap  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	131	131	1	replace	final  Map  <  String,String>  tailMap  =  optionsMap.tailMap(arg  +  1);	  final    Map    <    String,String>    tailMap    =    optionsMap.tailMap(arg);    	non-compiled	[CE]  illegal  start  of  expression	23	None	replace
54	[BUG]  [BUGGY]  final  Map  <  Option>  options  =  optionMap.tailMap(arg);  [CE]  illegal  start  of  expression  [FE]              OptionException      [CONTEXT]        if  (optionMap.containsKey(arg))  {  return  true;  }  final  Map  tailMap  =  optionMap.tailMap(arg);        [BUGGY]  final  Map  <  Option>  options  =  optionMap.tailMap(arg);  [BUGGY]      for  (final  Iterator  iter  =  tailMap.values().iterator();  iter.hasNext();)  {  final  Option  option  =  (Option)  iter.next();  if  (option.canProcess(commandLine,  arg))  {  return  true;  }  }  if  (looksLikeOption(commandLine,  arg))  {  return  false;  }  [CLASS]  GroupImpl  [METHOD]  canProcess  [RETURN_TYPE]  boolean  WriteableCommandLine  commandLine  String  arg  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  SortedMap  newOptionMap  optionMap  WriteableCommandLine  commandLine  Iterator  iter  List  anonymous  newAnonymous  options  Option  option  String  arg  description  name  Map  tailMap  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	131	131	1	replace	final  Map  <  Option>  options  =  optionMap.tailMap(arg);	  final    Map    <    Option>    options    =    optionMap.values();    	non-compiled	[CE]  illegal  start  of  expression	28	None	replace
55	[BUG]  [BUGGY]  final  Map  <  String,String>  tailMap  =  options.tailMap(arg  +  1);  [CE]  illegal  start  of  expression  [FE]                  OptionException      [CONTEXT]        if  (optionMap.containsKey(arg))  {  return  true;  }  final  Map  tailMap  =  optionMap.tailMap(arg);        [BUGGY]  final  Map  <  String,String>  tailMap  =  options.tailMap(arg  +  1);  [BUGGY]      for  (final  Iterator  iter  =  tailMap.values().iterator();  iter.hasNext();)  {  final  Option  option  =  (Option)  iter.next();  if  (option.canProcess(commandLine,  arg))  {  return  true;  }  }  if  (looksLikeOption(commandLine,  arg))  {  return  false;  }  [CLASS]  GroupImpl  [METHOD]  canProcess  [RETURN_TYPE]  boolean  WriteableCommandLine  commandLine  String  arg  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  SortedMap  newOptionMap  optionMap  WriteableCommandLine  commandLine  Iterator  iter  List  anonymous  newAnonymous  options  Option  option  String  arg  description  name  Map  tailMap  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	131	131	1	replace	final  Map  <  String,String>  tailMap  =  options.tailMap(arg  +  1);	  final    Map    <    String,String>    tailMap    =    options.tailMap(arg);    	non-compiled	[CE]  illegal  start  of  expression	5	None	replace
56	[BUG]  [BUGGY]  final  Map  <  String,  Option>  tailMap  =  options.tailMap(arg  +  1);  [CE]  illegal  start  of  expression  [FE]              OptionException      [CONTEXT]        if  (optionMap.containsKey(arg))  {  return  true;  }  final  Map  tailMap  =  optionMap.tailMap(arg);        [BUGGY]  final  Map  <  String,  Option>  tailMap  =  options.tailMap(arg  +  1);  [BUGGY]      for  (final  Iterator  iter  =  tailMap.values().iterator();  iter.hasNext();)  {  final  Option  option  =  (Option)  iter.next();  if  (option.canProcess(commandLine,  arg))  {  return  true;  }  }  if  (looksLikeOption(commandLine,  arg))  {  return  false;  }  [CLASS]  GroupImpl  [METHOD]  canProcess  [RETURN_TYPE]  boolean  WriteableCommandLine  commandLine  String  arg  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  SortedMap  newOptionMap  optionMap  WriteableCommandLine  commandLine  Iterator  iter  List  anonymous  newAnonymous  options  Option  option  String  arg  description  name  Map  tailMap  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	131	131	1	replace	final  Map  <  String,  Option>  tailMap  =  options.tailMap(arg  +  1);	  final    Map    <    String,    Option>    tailMap    =    options.tailMap(arg);    	non-compiled	[CE]  illegal  start  of  expression	15	None	replace
57	[BUG]  [BUGGY]  final  Map  tailMap  =  optionMap.tailMap(commandLine  -  1);  [CE]  illegal  start  of  expression  [FE]            OptionException      [CONTEXT]        if  (optionMap.containsKey(arg))  {  return  true;  }  final  Map  tailMap  =  optionMap.tailMap(arg);        [BUGGY]  final  Map  tailMap  =  optionMap.tailMap(commandLine  -  1);  [BUGGY]      for  (final  Iterator  iter  =  tailMap.values().iterator();  iter.hasNext();)  {  final  Option  option  =  (Option)  iter.next();  if  (option.canProcess(commandLine,  arg))  {  return  true;  }  }  if  (looksLikeOption(commandLine,  arg))  {  return  false;  }  [CLASS]  GroupImpl  [METHOD]  canProcess  [RETURN_TYPE]  boolean  WriteableCommandLine  commandLine  String  arg  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  SortedMap  newOptionMap  optionMap  WriteableCommandLine  commandLine  Iterator  iter  List  anonymous  newAnonymous  options  Option  option  String  arg  description  name  Map  tailMap  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	131	131	1	replace	final  Map  tailMap  =  optionMap.tailMap(commandLine  -  1);	  final    Map    tailMap    =    optionMap.tailMap(commandLine);    	non-compiled	[CE]  illegal  start  of  expression	6	None	replace
58	[BUG]  [BUGGY]  final  Map  <  String,  Option>  tailMap  =  optionMap.tailMap(arg  +  2);  [CE]  illegal  start  of  expression  [FE]              OptionException      [CONTEXT]        if  (optionMap.containsKey(arg))  {  return  true;  }  final  Map  tailMap  =  optionMap.tailMap(arg);        [BUGGY]  final  Map  <  String,  Option>  tailMap  =  optionMap.tailMap(arg  +  2);  [BUGGY]      for  (final  Iterator  iter  =  tailMap.values().iterator();  iter.hasNext();)  {  final  Option  option  =  (Option)  iter.next();  if  (option.canProcess(commandLine,  arg))  {  return  true;  }  }  if  (looksLikeOption(commandLine,  arg))  {  return  false;  }  [CLASS]  GroupImpl  [METHOD]  canProcess  [RETURN_TYPE]  boolean  WriteableCommandLine  commandLine  String  arg  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  SortedMap  newOptionMap  optionMap  WriteableCommandLine  commandLine  Iterator  iter  List  anonymous  newAnonymous  options  Option  option  String  arg  description  name  Map  tailMap  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	131	131	1	replace	final  Map  <  String,  Option>  tailMap  =  optionMap.tailMap(arg  +  2);	  final    Map    <    String,    Option>    tailMap    =    optionMap.tailMap(arg    +    1);    	non-compiled	[CE]  illegal  start  of  expression	24	None	replace
59	[BUG]  [BUGGY]  final  Map  <  String,  Option>  tailMap  =  optionMap.tailMap(arg  /  1);  [CE]  illegal  start  of  expression  [FE]              OptionException      [CONTEXT]        if  (optionMap.containsKey(arg))  {  return  true;  }  final  Map  tailMap  =  optionMap.tailMap(arg);        [BUGGY]  final  Map  <  String,  Option>  tailMap  =  optionMap.tailMap(arg  /  1);  [BUGGY]      for  (final  Iterator  iter  =  tailMap.values().iterator();  iter.hasNext();)  {  final  Option  option  =  (Option)  iter.next();  if  (option.canProcess(commandLine,  arg))  {  return  true;  }  }  if  (looksLikeOption(commandLine,  arg))  {  return  false;  }  [CLASS]  GroupImpl  [METHOD]  canProcess  [RETURN_TYPE]  boolean  WriteableCommandLine  commandLine  String  arg  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  SortedMap  newOptionMap  optionMap  WriteableCommandLine  commandLine  Iterator  iter  List  anonymous  newAnonymous  options  Option  option  String  arg  description  name  Map  tailMap  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	131	131	1	replace	final  Map  <  String,  Option>  tailMap  =  optionMap.tailMap(arg  /  1);	  final    Map    <    String,    Option>    tailMap    =    optionMap.tailMap(arg    +    1);    	non-compiled	[CE]  illegal  start  of  expression	24	None	replace
60	[BUG]  [BUGGY]  final  Map  <  String,Object>  tailMap  =  options.tailMap(arg,  description);  [CE]  illegal  start  of  expression  [FE]                    OptionException      [CONTEXT]        if  (optionMap.containsKey(arg))  {  return  true;  }  final  Map  tailMap  =  optionMap.tailMap(arg);        [BUGGY]  final  Map  <  String,Object>  tailMap  =  options.tailMap(arg,  description);  [BUGGY]      for  (final  Iterator  iter  =  tailMap.values().iterator();  iter.hasNext();)  {  final  Option  option  =  (Option)  iter.next();  if  (option.canProcess(commandLine,  arg))  {  return  true;  }  }  if  (looksLikeOption(commandLine,  arg))  {  return  false;  }  [CLASS]  GroupImpl  [METHOD]  canProcess  [RETURN_TYPE]  boolean  WriteableCommandLine  commandLine  String  arg  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  SortedMap  newOptionMap  optionMap  WriteableCommandLine  commandLine  Iterator  iter  List  anonymous  newAnonymous  options  Option  option  String  arg  description  name  Map  tailMap  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	131	131	1	replace	final  Map  <  String,Object>  tailMap  =  options.tailMap(arg,  description);	  final    Map    <    String,Object>    tailMap    =    options.tailMap(arg);    	non-compiled	[CE]  illegal  start  of  expression	13	None	replace
61	[BUG]  [BUGGY]  For(final  Iterator  iter  =  this.tailMap.keySet().iterator();  iter.hasNext();)  {  [CE]  illegal  start  of  expression  [FE]            OptionException      [CONTEXT]        if  (optionMap.containsKey(arg))  {  return  true;  }  final  Map  tailMap  =  optionMap.tailMap(arg);        [BUGGY]  For(final  Iterator  iter  =  this.tailMap.keySet().iterator();  iter.hasNext();)  {  [BUGGY]      final  Option  option  =  (Option)  iter.next();  if  (option.canProcess(commandLine,  arg))  {  return  true;  }  }  if  (looksLikeOption(commandLine,  arg))  {  return  false;  }  [CLASS]  GroupImpl  [METHOD]  canProcess  [RETURN_TYPE]  boolean  WriteableCommandLine  commandLine  String  arg  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  SortedMap  newOptionMap  optionMap  WriteableCommandLine  commandLine  Iterator  iter  List  anonymous  newAnonymous  options  Option  option  String  arg  description  name  Map  tailMap  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	131	131	1	replace	For(final  Iterator  iter  =  this.tailMap.keySet().iterator();  iter.hasNext();)  {	  For(final    Iterator    iter    =    tailMap.keySet().iterator();    iter.hasNext();)    {    	non-compiled	[CE]  illegal  start  of  expression	31	None	replace
62	[BUG]  [BUGGY]  final  Map  <  String,String>  tailMap  =  options.tailMap(arg,  description);  [CE]  illegal  start  of  expression  [FE]                  OptionException      [CONTEXT]        if  (optionMap.containsKey(arg))  {  return  true;  }  final  Map  tailMap  =  optionMap.tailMap(arg);        [BUGGY]  final  Map  <  String,String>  tailMap  =  options.tailMap(arg,  description);  [BUGGY]      for  (final  Iterator  iter  =  tailMap.values().iterator();  iter.hasNext();)  {  final  Option  option  =  (Option)  iter.next();  if  (option.canProcess(commandLine,  arg))  {  return  true;  }  }  if  (looksLikeOption(commandLine,  arg))  {  return  false;  }  [CLASS]  GroupImpl  [METHOD]  canProcess  [RETURN_TYPE]  boolean  WriteableCommandLine  commandLine  String  arg  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  SortedMap  newOptionMap  optionMap  WriteableCommandLine  commandLine  Iterator  iter  List  anonymous  newAnonymous  options  Option  option  String  arg  description  name  Map  tailMap  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	131	131	1	replace	final  Map  <  String,String>  tailMap  =  options.tailMap(arg,  description);	  final    Map    <    String,String>    tailMap    =    options.tailMap(arg);    	non-compiled	[CE]  illegal  start  of  expression	5	None	replace
63	[BUG]  [BUGGY]  final  Map  tailMap  =  optionMap.tailMap(commandLine,  arg)+  1;  [CE]  illegal  start  of  expression  [FE]              OptionException      [CONTEXT]        if  (optionMap.containsKey(arg))  {  return  true;  }  final  Map  tailMap  =  optionMap.tailMap(arg);        [BUGGY]  final  Map  tailMap  =  optionMap.tailMap(commandLine,  arg)+  1;  [BUGGY]      for  (final  Iterator  iter  =  tailMap.values().iterator();  iter.hasNext();)  {  final  Option  option  =  (Option)  iter.next();  if  (option.canProcess(commandLine,  arg))  {  return  true;  }  }  if  (looksLikeOption(commandLine,  arg))  {  return  false;  }  [CLASS]  GroupImpl  [METHOD]  canProcess  [RETURN_TYPE]  boolean  WriteableCommandLine  commandLine  String  arg  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  SortedMap  newOptionMap  optionMap  WriteableCommandLine  commandLine  Iterator  iter  List  anonymous  newAnonymous  options  Option  option  String  arg  description  name  Map  tailMap  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	131	131	1	replace	final  Map  tailMap  =  optionMap.tailMap(commandLine,  arg)+  1;	  final    Map    tailMap    =    optionMap.tailMap(commandLine,    arg);    	non-compiled	[CE]  illegal  start  of  expression	7	None	replace
64	[BUG]  [BUGGY]  final  Map  <  String,Object>  tailMap  =  optionMap.tailMap(arg  /  1);  [CE]  illegal  start  of  expression  [FE]                  OptionException      [CONTEXT]        if  (optionMap.containsKey(arg))  {  return  true;  }  final  Map  tailMap  =  optionMap.tailMap(arg);        [BUGGY]  final  Map  <  String,Object>  tailMap  =  optionMap.tailMap(arg  /  1);  [BUGGY]      for  (final  Iterator  iter  =  tailMap.values().iterator();  iter.hasNext();)  {  final  Option  option  =  (Option)  iter.next();  if  (option.canProcess(commandLine,  arg))  {  return  true;  }  }  if  (looksLikeOption(commandLine,  arg))  {  return  false;  }  [CLASS]  GroupImpl  [METHOD]  canProcess  [RETURN_TYPE]  boolean  WriteableCommandLine  commandLine  String  arg  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  SortedMap  newOptionMap  optionMap  WriteableCommandLine  commandLine  Iterator  iter  List  anonymous  newAnonymous  options  Option  option  String  arg  description  name  Map  tailMap  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	131	131	1	replace	final  Map  <  String,Object>  tailMap  =  optionMap.tailMap(arg  /  1);	  final    Map    <    String,Object>    tailMap    =    optionMap.tailMap(arg    +    1);    	non-compiled	[CE]  illegal  start  of  expression	22	None	replace
65	[BUG]  [BUGGY]  final  List  <  Option>  options  =  tailMap.options();  [CE]  illegal  start  of  expression  [FE]              OptionException      [CONTEXT]        if  (optionMap.containsKey(arg))  {  return  true;  }  final  Map  tailMap  =  optionMap.tailMap(arg);        [BUGGY]  final  List  <  Option>  options  =  tailMap.options();  [BUGGY]      for  (final  Iterator  iter  =  tailMap.values().iterator();  iter.hasNext();)  {  final  Option  option  =  (Option)  iter.next();  if  (option.canProcess(commandLine,  arg))  {  return  true;  }  }  if  (looksLikeOption(commandLine,  arg))  {  return  false;  }  [CLASS]  GroupImpl  [METHOD]  canProcess  [RETURN_TYPE]  boolean  WriteableCommandLine  commandLine  String  arg  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  SortedMap  newOptionMap  optionMap  WriteableCommandLine  commandLine  Iterator  iter  List  anonymous  newAnonymous  options  Option  option  String  arg  description  name  Map  tailMap  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	131	131	1	replace	final  List  <  Option>  options  =  tailMap.options();	  final    List    <    Option>    options    =    tailMap.values();    	non-compiled	[CE]  illegal  start  of  expression	17	None	replace
66	[BUG]  [BUGGY]  final  Map  <  String,  Option>  tailMap  =  options.tailMap(arg,  description);  [CE]  illegal  start  of  expression  [FE]              OptionException      [CONTEXT]        if  (optionMap.containsKey(arg))  {  return  true;  }  final  Map  tailMap  =  optionMap.tailMap(arg);        [BUGGY]  final  Map  <  String,  Option>  tailMap  =  options.tailMap(arg,  description);  [BUGGY]      for  (final  Iterator  iter  =  tailMap.values().iterator();  iter.hasNext();)  {  final  Option  option  =  (Option)  iter.next();  if  (option.canProcess(commandLine,  arg))  {  return  true;  }  }  if  (looksLikeOption(commandLine,  arg))  {  return  false;  }  [CLASS]  GroupImpl  [METHOD]  canProcess  [RETURN_TYPE]  boolean  WriteableCommandLine  commandLine  String  arg  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  SortedMap  newOptionMap  optionMap  WriteableCommandLine  commandLine  Iterator  iter  List  anonymous  newAnonymous  options  Option  option  String  arg  description  name  Map  tailMap  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	131	131	1	replace	final  Map  <  String,  Option>  tailMap  =  options.tailMap(arg,  description);	  final    Map    <    String,    Option>    tailMap    =    options.tailMap(arg);    	non-compiled	[CE]  illegal  start  of  expression	15	None	replace
67	[BUG]  [BUGGY]  final  Map  <  String,String>  tailMap  =  optionMap.tailMap(arg  /  1);  [CE]  illegal  start  of  expression  [FE]                OptionException      [CONTEXT]        if  (optionMap.containsKey(arg))  {  return  true;  }  final  Map  tailMap  =  optionMap.tailMap(arg);        [BUGGY]  final  Map  <  String,String>  tailMap  =  optionMap.tailMap(arg  /  1);  [BUGGY]      for  (final  Iterator  iter  =  tailMap.values().iterator();  iter.hasNext();)  {  final  Option  option  =  (Option)  iter.next();  if  (option.canProcess(commandLine,  arg))  {  return  true;  }  }  if  (looksLikeOption(commandLine,  arg))  {  return  false;  }  [CLASS]  GroupImpl  [METHOD]  canProcess  [RETURN_TYPE]  boolean  WriteableCommandLine  commandLine  String  arg  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  SortedMap  newOptionMap  optionMap  WriteableCommandLine  commandLine  Iterator  iter  List  anonymous  newAnonymous  options  Option  option  String  arg  description  name  Map  tailMap  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	131	131	1	replace	final  Map  <  String,String>  tailMap  =  optionMap.tailMap(arg  /  1);	  final    Map    <    String,String>    tailMap    =    optionMap.tailMap(arg    +    1);    	non-compiled	[CE]  illegal  start  of  expression	26	None	replace
68	[BUG]  [BUGGY]  final  Map  tailMap  =  optionMap.values().tailMap(arg);  [CE]  illegal  start  of  expression  [FE]            OptionException      [CONTEXT]        if  (optionMap.containsKey(arg))  {  return  true;  }  final  Map  tailMap  =  optionMap.tailMap(arg);        [BUGGY]  final  Map  tailMap  =  optionMap.values().tailMap(arg);  [BUGGY]      for  (final  Iterator  iter  =  tailMap.values().iterator();  iter.hasNext();)  {  final  Option  option  =  (Option)  iter.next();  if  (option.canProcess(commandLine,  arg))  {  return  true;  }  }  if  (looksLikeOption(commandLine,  arg))  {  return  false;  }  [CLASS]  GroupImpl  [METHOD]  canProcess  [RETURN_TYPE]  boolean  WriteableCommandLine  commandLine  String  arg  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  SortedMap  newOptionMap  optionMap  WriteableCommandLine  commandLine  Iterator  iter  List  anonymous  newAnonymous  options  Option  option  String  arg  description  name  Map  tailMap  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	131	131	1	replace	final  Map  tailMap  =  optionMap.values().tailMap(arg);	  final    Map    tailMap    =    optionMap.tailMap(option);    	non-compiled	[CE]  illegal  start  of  expression	30	None	replace
