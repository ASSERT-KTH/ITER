bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]    final  Map  tailMap  =  optionMap.tailMap(arg);  [CE]  illegal  start  of  expression  [FE]    OptionException  [CONTEXT]    if  (optionMap.containsKey(arg))  {  return  true;  }  final  Map  tailMap  =  optionMap.tailMap(arg);    [BUGGY]    final  Map  tailMap  =  optionMap.tailMap(arg);  [BUGGY]  for  (final  Iterator  iter  =  tailMap.values().iterator();  iter.hasNext();)  {  final  Option  option  =  (Option)  iter.next();  if  (option.canProcess(commandLine,  arg))  {  return  true;  }  }  if  (looksLikeOption(commandLine,  arg))  {  return  false;  }  [CLASS]  GroupImpl  [METHOD]  canProcess  [RETURN_TYPE]  boolean  WriteableCommandLine  commandLine  String  arg  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  SortedMap  newOptionMap  optionMap  WriteableCommandLine  commandLine  Iterator  iter  List  anonymous  newAnonymous  options  Option  option  String  arg  description  name  Map  tailMap  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	131	131	1	replace	    final  Map  tailMap  =  optionMap.tailMap(arg);		non-compiled	[CE]  illegal  start  of  expression	54	None	add
2	[BUG]  [BUGGY]    final  Map  <  String,  Option>  tailMap  =  optionMap.tailMap(arg);  [CE]  illegal  start  of  expression  [FE]      OptionException  [CONTEXT]    if  (optionMap.containsKey(arg))  {  return  true;  }  final  Map  tailMap  =  optionMap.tailMap(arg);    [BUGGY]    final  Map  <  String,  Option>  tailMap  =  optionMap.tailMap(arg);  [BUGGY]  for  (final  Iterator  iter  =  tailMap.values().iterator();  iter.hasNext();)  {  final  Option  option  =  (Option)  iter.next();  if  (option.canProcess(commandLine,  arg))  {  return  true;  }  }  if  (looksLikeOption(commandLine,  arg))  {  return  false;  }  [CLASS]  GroupImpl  [METHOD]  canProcess  [RETURN_TYPE]  boolean  WriteableCommandLine  commandLine  String  arg  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  SortedMap  newOptionMap  optionMap  WriteableCommandLine  commandLine  Iterator  iter  List  anonymous  newAnonymous  options  Option  option  String  arg  description  name  Map  tailMap  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	131	131	1	replace	    final  Map  <  String,  Option>  tailMap  =  optionMap.tailMap(arg);		non-compiled	[CE]  illegal  start  of  expression	54	None	add
3	[BUG]  [BUGGY]    final  Map  <  String,String>  tailMap  =  optionMap.tailMap(arg);  [CE]  illegal  start  of  expression  [FE]        OptionException  [CONTEXT]    if  (optionMap.containsKey(arg))  {  return  true;  }  final  Map  tailMap  =  optionMap.tailMap(arg);    [BUGGY]    final  Map  <  String,String>  tailMap  =  optionMap.tailMap(arg);  [BUGGY]  for  (final  Iterator  iter  =  tailMap.values().iterator();  iter.hasNext();)  {  final  Option  option  =  (Option)  iter.next();  if  (option.canProcess(commandLine,  arg))  {  return  true;  }  }  if  (looksLikeOption(commandLine,  arg))  {  return  false;  }  [CLASS]  GroupImpl  [METHOD]  canProcess  [RETURN_TYPE]  boolean  WriteableCommandLine  commandLine  String  arg  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  SortedMap  newOptionMap  optionMap  WriteableCommandLine  commandLine  Iterator  iter  List  anonymous  newAnonymous  options  Option  option  String  arg  description  name  Map  tailMap  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	131	131	1	replace	    final  Map  <  String,String>  tailMap  =  optionMap.tailMap(arg);		non-compiled	[CE]  illegal  start  of  expression	54	None	add
4	[BUG]  [BUGGY]    final  Map  <  String,Object>  tailMap  =  optionMap.tailMap(arg);  [CE]  illegal  start  of  expression  [FE]          OptionException  [CONTEXT]    if  (optionMap.containsKey(arg))  {  return  true;  }  final  Map  tailMap  =  optionMap.tailMap(arg);    [BUGGY]    final  Map  <  String,Object>  tailMap  =  optionMap.tailMap(arg);  [BUGGY]  for  (final  Iterator  iter  =  tailMap.values().iterator();  iter.hasNext();)  {  final  Option  option  =  (Option)  iter.next();  if  (option.canProcess(commandLine,  arg))  {  return  true;  }  }  if  (looksLikeOption(commandLine,  arg))  {  return  false;  }  [CLASS]  GroupImpl  [METHOD]  canProcess  [RETURN_TYPE]  boolean  WriteableCommandLine  commandLine  String  arg  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  SortedMap  newOptionMap  optionMap  WriteableCommandLine  commandLine  Iterator  iter  List  anonymous  newAnonymous  options  Option  option  String  arg  description  name  Map  tailMap  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	131	131	1	replace	    final  Map  <  String,Object>  tailMap  =  optionMap.tailMap(arg);		non-compiled	[CE]  illegal  start  of  expression	54	None	add
5	[BUG]  [BUGGY]    final  Map  <  String,String>  tailMap  =  optionMap.tailMap();  [CE]  illegal  start  of  expression  [FE]            OptionException  [CONTEXT]    if  (optionMap.containsKey(arg))  {  return  true;  }  final  Map  tailMap  =  optionMap.tailMap(arg);    [BUGGY]    final  Map  <  String,String>  tailMap  =  optionMap.tailMap();  [BUGGY]  for  (final  Iterator  iter  =  tailMap.values().iterator();  iter.hasNext();)  {  final  Option  option  =  (Option)  iter.next();  if  (option.canProcess(commandLine,  arg))  {  return  true;  }  }  if  (looksLikeOption(commandLine,  arg))  {  return  false;  }  [CLASS]  GroupImpl  [METHOD]  canProcess  [RETURN_TYPE]  boolean  WriteableCommandLine  commandLine  String  arg  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  SortedMap  newOptionMap  optionMap  WriteableCommandLine  commandLine  Iterator  iter  List  anonymous  newAnonymous  options  Option  option  String  arg  description  name  Map  tailMap  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	131	131	1	replace	    final  Map  <  String,String>  tailMap  =  optionMap.tailMap();		non-compiled	[CE]  illegal  start  of  expression	54	None	add
6	[BUG]  [BUGGY]  for(final  Iterator  iter  =  tailMap.keySet().iterator();  iter.hasNext();)  {  [CE]  illegal  start  of  expression  [FE]    OptionException  [CONTEXT]    if  (optionMap.containsKey(arg))  {  return  true;  }  final  Map  tailMap  =  optionMap.tailMap(arg);    [BUGGY]  for(final  Iterator  iter  =  tailMap.keySet().iterator();  iter.hasNext();)  {  [BUGGY]  final  Option  option  =  (Option)  iter.next();  if  (option.canProcess(commandLine,  arg))  {  return  true;  }  }  if  (looksLikeOption(commandLine,  arg))  {  return  false;  }  [CLASS]  GroupImpl  [METHOD]  canProcess  [RETURN_TYPE]  boolean  WriteableCommandLine  commandLine  String  arg  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  SortedMap  newOptionMap  optionMap  WriteableCommandLine  commandLine  Iterator  iter  List  anonymous  newAnonymous  options  Option  option  String  arg  description  name  Map  tailMap  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	131	131	1	replace	for(final  Iterator  iter  =  tailMap.keySet().iterator();  iter.hasNext();)  {	for  (final  Iterator  iter  =  tailMap.values().iterator();  iter.hasNext();)  {  	non-compiled	[CE]  illegal  start  of  expression	53	None	replace
7	[BUG]  [BUGGY]  for(final  Iterator  iter  =  tailMap.iterator();  iter.hasNext();)  {  [CE]  illegal  start  of  expression  [FE]      OptionException  [CONTEXT]    if  (optionMap.containsKey(arg))  {  return  true;  }  final  Map  tailMap  =  optionMap.tailMap(arg);    [BUGGY]  for(final  Iterator  iter  =  tailMap.iterator();  iter.hasNext();)  {  [BUGGY]  final  Option  option  =  (Option)  iter.next();  if  (option.canProcess(commandLine,  arg))  {  return  true;  }  }  if  (looksLikeOption(commandLine,  arg))  {  return  false;  }  [CLASS]  GroupImpl  [METHOD]  canProcess  [RETURN_TYPE]  boolean  WriteableCommandLine  commandLine  String  arg  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  SortedMap  newOptionMap  optionMap  WriteableCommandLine  commandLine  Iterator  iter  List  anonymous  newAnonymous  options  Option  option  String  arg  description  name  Map  tailMap  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	131	131	1	replace	for(final  Iterator  iter  =  tailMap.iterator();  iter.hasNext();)  {	for  (final  Iterator  iter  =  tailMap.values().iterator();  iter.hasNext();)  {  	non-compiled	[CE]  illegal  start  of  expression	53	None	replace
8	[BUG]  [BUGGY]    final  Map  <  String,  Option>  tailMap  =  optionMap.tailMap();  [CE]  illegal  start  of  expression  [FE]    OptionException  [CONTEXT]    if  (optionMap.containsKey(arg))  {  return  true;  }  final  Map  tailMap  =  optionMap.tailMap(arg);    [BUGGY]    final  Map  <  String,  Option>  tailMap  =  optionMap.tailMap();  [BUGGY]  for  (final  Iterator  iter  =  tailMap.values().iterator();  iter.hasNext();)  {  final  Option  option  =  (Option)  iter.next();  if  (option.canProcess(commandLine,  arg))  {  return  true;  }  }  if  (looksLikeOption(commandLine,  arg))  {  return  false;  }  [CLASS]  GroupImpl  [METHOD]  canProcess  [RETURN_TYPE]  boolean  WriteableCommandLine  commandLine  String  arg  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  SortedMap  newOptionMap  optionMap  WriteableCommandLine  commandLine  Iterator  iter  List  anonymous  newAnonymous  options  Option  option  String  arg  description  name  Map  tailMap  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	131	131	1	replace	    final  Map  <  String,  Option>  tailMap  =  optionMap.tailMap();		non-compiled	[CE]  illegal  start  of  expression	54	None	add
9	[BUG]  [BUGGY]    final  List  <  Option>  options  =  optionMap.values();  [CE]  illegal  start  of  expression  [FE]      OptionException  [CONTEXT]    if  (optionMap.containsKey(arg))  {  return  true;  }  final  Map  tailMap  =  optionMap.tailMap(arg);    [BUGGY]    final  List  <  Option>  options  =  optionMap.values();  [BUGGY]  for  (final  Iterator  iter  =  tailMap.values().iterator();  iter.hasNext();)  {  final  Option  option  =  (Option)  iter.next();  if  (option.canProcess(commandLine,  arg))  {  return  true;  }  }  if  (looksLikeOption(commandLine,  arg))  {  return  false;  }  [CLASS]  GroupImpl  [METHOD]  canProcess  [RETURN_TYPE]  boolean  WriteableCommandLine  commandLine  String  arg  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  SortedMap  newOptionMap  optionMap  WriteableCommandLine  commandLine  Iterator  iter  List  anonymous  newAnonymous  options  Option  option  String  arg  description  name  Map  tailMap  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	131	131	1	replace	    final  List  <  Option>  options  =  optionMap.values();		non-compiled	[CE]  illegal  start  of  expression	54	None	add
10	[BUG]  [BUGGY]  for(final  Iterator  iter  =  tailMap.entrySet().iterator();  iter.hasNext();)  {  [CE]  illegal  start  of  expression  [FE]    OptionException  [CONTEXT]    if  (optionMap.containsKey(arg))  {  return  true;  }  final  Map  tailMap  =  optionMap.tailMap(arg);    [BUGGY]  for(final  Iterator  iter  =  tailMap.entrySet().iterator();  iter.hasNext();)  {  [BUGGY]  final  Option  option  =  (Option)  iter.next();  if  (option.canProcess(commandLine,  arg))  {  return  true;  }  }  if  (looksLikeOption(commandLine,  arg))  {  return  false;  }  [CLASS]  GroupImpl  [METHOD]  canProcess  [RETURN_TYPE]  boolean  WriteableCommandLine  commandLine  String  arg  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  SortedMap  newOptionMap  optionMap  WriteableCommandLine  commandLine  Iterator  iter  List  anonymous  newAnonymous  options  Option  option  String  arg  description  name  Map  tailMap  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	131	131	1	replace	for(final  Iterator  iter  =  tailMap.entrySet().iterator();  iter.hasNext();)  {	for  (final  Iterator  iter  =  tailMap.values().iterator();  iter.hasNext();)  {  	non-compiled	[CE]  illegal  start  of  expression	53	None	replace
