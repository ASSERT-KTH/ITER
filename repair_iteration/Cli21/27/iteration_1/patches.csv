bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  for(final  Iterator  iter  =  this.tailMap.iterator();  iter.hasNext();)  {  [CE]  illegal  start  of  expression  [FE]          OptionException    [CONTEXT]      if  (optionMap.containsKey(arg))  {  return  true;  }  final  Map  tailMap  =  optionMap.tailMap(arg);      [BUGGY]  for(final  Iterator  iter  =  this.tailMap.iterator();  iter.hasNext();)  {  [BUGGY]    final  Option  option  =  (Option)  iter.next();  if  (option.canProcess(commandLine,  arg))  {  return  true;  }  }  if  (looksLikeOption(commandLine,  arg))  {  return  false;  }  [CLASS]  GroupImpl  [METHOD]  canProcess  [RETURN_TYPE]  boolean  WriteableCommandLine  commandLine  String  arg  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  SortedMap  newOptionMap  optionMap  WriteableCommandLine  commandLine  Iterator  iter  List  anonymous  newAnonymous  options  Option  option  String  arg  description  name  Map  tailMap  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	131	131	1	replace	for(final  Iterator  iter  =  this.tailMap.iterator();  iter.hasNext();)  {	  for(final    Iterator    iter    =    tailMap.iterator();    iter.hasNext();)    {    	non-compiled	[CE]  illegal  start  of  expression	7	None	replace
2	[BUG]  [BUGGY]  for(final  Iterator  iter  =  args.iterator();  iter.hasNext();)  {  [CE]  illegal  start  of  expression  [FE]            OptionException    [CONTEXT]      if  (optionMap.containsKey(arg))  {  return  true;  }  final  Map  tailMap  =  optionMap.tailMap(arg);      [BUGGY]  for(final  Iterator  iter  =  args.iterator();  iter.hasNext();)  {  [BUGGY]    final  Option  option  =  (Option)  iter.next();  if  (option.canProcess(commandLine,  arg))  {  return  true;  }  }  if  (looksLikeOption(commandLine,  arg))  {  return  false;  }  [CLASS]  GroupImpl  [METHOD]  canProcess  [RETURN_TYPE]  boolean  WriteableCommandLine  commandLine  String  arg  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  SortedMap  newOptionMap  optionMap  WriteableCommandLine  commandLine  Iterator  iter  List  anonymous  newAnonymous  options  Option  option  String  arg  description  name  Map  tailMap  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	131	131	1	replace	for(final  Iterator  iter  =  args.iterator();  iter.hasNext();)  {	  for(final    Iterator    iter    =    tailMap.iterator();    iter.hasNext();)    {    	non-compiled	[CE]  illegal  start  of  expression	7	None	replace
3	[BUG]  [BUGGY]  For(final  Iterator  iter  =  tailMap.iterator();  iter.hasNext();)  {  [CE]  illegal  start  of  expression  [FE]              OptionException    [CONTEXT]      if  (optionMap.containsKey(arg))  {  return  true;  }  final  Map  tailMap  =  optionMap.tailMap(arg);      [BUGGY]  For(final  Iterator  iter  =  tailMap.iterator();  iter.hasNext();)  {  [BUGGY]    final  Option  option  =  (Option)  iter.next();  if  (option.canProcess(commandLine,  arg))  {  return  true;  }  }  if  (looksLikeOption(commandLine,  arg))  {  return  false;  }  [CLASS]  GroupImpl  [METHOD]  canProcess  [RETURN_TYPE]  boolean  WriteableCommandLine  commandLine  String  arg  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  SortedMap  newOptionMap  optionMap  WriteableCommandLine  commandLine  Iterator  iter  List  anonymous  newAnonymous  options  Option  option  String  arg  description  name  Map  tailMap  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	131	131	1	replace	For(final  Iterator  iter  =  tailMap.iterator();  iter.hasNext();)  {	  for(final    Iterator    iter    =    tailMap.iterator();    iter.hasNext();)    {    	non-compiled	[CE]  illegal  start  of  expression	7	None	replace
4	[BUG]  [BUGGY]  final  Map  <  String,String>  tailMap  =  optionMap.tailMap(commandLine);  [CE]  illegal  start  of  expression  [FE]            OptionException    [CONTEXT]      if  (optionMap.containsKey(arg))  {  return  true;  }  final  Map  tailMap  =  optionMap.tailMap(arg);      [BUGGY]  final  Map  <  String,String>  tailMap  =  optionMap.tailMap(commandLine);  [BUGGY]    for  (final  Iterator  iter  =  tailMap.values().iterator();  iter.hasNext();)  {  final  Option  option  =  (Option)  iter.next();  if  (option.canProcess(commandLine,  arg))  {  return  true;  }  }  if  (looksLikeOption(commandLine,  arg))  {  return  false;  }  [CLASS]  GroupImpl  [METHOD]  canProcess  [RETURN_TYPE]  boolean  WriteableCommandLine  commandLine  String  arg  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  SortedMap  newOptionMap  optionMap  WriteableCommandLine  commandLine  Iterator  iter  List  anonymous  newAnonymous  options  Option  option  String  arg  description  name  Map  tailMap  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	131	131	1	replace	final  Map  <  String,String>  tailMap  =  optionMap.tailMap(commandLine);	      final    Map    <    String,String>    tailMap    =    optionMap.tailMap(arg);    	non-compiled	[CE]  illegal  start  of  expression	3	None	replace
5	[BUG]  [BUGGY]  final  Map  <  String,String>  tailMap  =  options.tailMap(arg);  [CE]  illegal  start  of  expression  [FE]              OptionException    [CONTEXT]      if  (optionMap.containsKey(arg))  {  return  true;  }  final  Map  tailMap  =  optionMap.tailMap(arg);      [BUGGY]  final  Map  <  String,String>  tailMap  =  options.tailMap(arg);  [BUGGY]    for  (final  Iterator  iter  =  tailMap.values().iterator();  iter.hasNext();)  {  final  Option  option  =  (Option)  iter.next();  if  (option.canProcess(commandLine,  arg))  {  return  true;  }  }  if  (looksLikeOption(commandLine,  arg))  {  return  false;  }  [CLASS]  GroupImpl  [METHOD]  canProcess  [RETURN_TYPE]  boolean  WriteableCommandLine  commandLine  String  arg  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  SortedMap  newOptionMap  optionMap  WriteableCommandLine  commandLine  Iterator  iter  List  anonymous  newAnonymous  options  Option  option  String  arg  description  name  Map  tailMap  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	131	131	1	replace	final  Map  <  String,String>  tailMap  =  options.tailMap(arg);	      final    Map    <    String,String>    tailMap    =    optionMap.tailMap(arg);    	non-compiled	[CE]  illegal  start  of  expression	3	None	replace
6	[BUG]  [BUGGY]  final  Map  tailMap  =  optionMap.tailMap(commandLine);  [CE]  illegal  start  of  expression  [FE]        OptionException    [CONTEXT]      if  (optionMap.containsKey(arg))  {  return  true;  }  final  Map  tailMap  =  optionMap.tailMap(arg);      [BUGGY]  final  Map  tailMap  =  optionMap.tailMap(commandLine);  [BUGGY]    for  (final  Iterator  iter  =  tailMap.values().iterator();  iter.hasNext();)  {  final  Option  option  =  (Option)  iter.next();  if  (option.canProcess(commandLine,  arg))  {  return  true;  }  }  if  (looksLikeOption(commandLine,  arg))  {  return  false;  }  [CLASS]  GroupImpl  [METHOD]  canProcess  [RETURN_TYPE]  boolean  WriteableCommandLine  commandLine  String  arg  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  SortedMap  newOptionMap  optionMap  WriteableCommandLine  commandLine  Iterator  iter  List  anonymous  newAnonymous  options  Option  option  String  arg  description  name  Map  tailMap  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	131	131	1	replace	final  Map  tailMap  =  optionMap.tailMap(commandLine);	      final    Map    tailMap    =    optionMap.tailMap(arg);    	non-compiled	[CE]  illegal  start  of  expression	1	None	replace
7	[BUG]  [BUGGY]  final  Map  tailMap  =  optionMap.tailMap(commandLine,  arg);  [CE]  illegal  start  of  expression  [FE]          OptionException    [CONTEXT]      if  (optionMap.containsKey(arg))  {  return  true;  }  final  Map  tailMap  =  optionMap.tailMap(arg);      [BUGGY]  final  Map  tailMap  =  optionMap.tailMap(commandLine,  arg);  [BUGGY]    for  (final  Iterator  iter  =  tailMap.values().iterator();  iter.hasNext();)  {  final  Option  option  =  (Option)  iter.next();  if  (option.canProcess(commandLine,  arg))  {  return  true;  }  }  if  (looksLikeOption(commandLine,  arg))  {  return  false;  }  [CLASS]  GroupImpl  [METHOD]  canProcess  [RETURN_TYPE]  boolean  WriteableCommandLine  commandLine  String  arg  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  SortedMap  newOptionMap  optionMap  WriteableCommandLine  commandLine  Iterator  iter  List  anonymous  newAnonymous  options  Option  option  String  arg  description  name  Map  tailMap  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	131	131	1	replace	final  Map  tailMap  =  optionMap.tailMap(commandLine,  arg);	      final    Map    tailMap    =    optionMap.tailMap(arg);    	non-compiled	[CE]  illegal  start  of  expression	1	None	replace
8	[BUG]  [BUGGY]  final  Map  tailMap  =  options.tailMap(arg);  [CE]  illegal  start  of  expression  [FE]            OptionException    [CONTEXT]      if  (optionMap.containsKey(arg))  {  return  true;  }  final  Map  tailMap  =  optionMap.tailMap(arg);      [BUGGY]  final  Map  tailMap  =  options.tailMap(arg);  [BUGGY]    for  (final  Iterator  iter  =  tailMap.values().iterator();  iter.hasNext();)  {  final  Option  option  =  (Option)  iter.next();  if  (option.canProcess(commandLine,  arg))  {  return  true;  }  }  if  (looksLikeOption(commandLine,  arg))  {  return  false;  }  [CLASS]  GroupImpl  [METHOD]  canProcess  [RETURN_TYPE]  boolean  WriteableCommandLine  commandLine  String  arg  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  SortedMap  newOptionMap  optionMap  WriteableCommandLine  commandLine  Iterator  iter  List  anonymous  newAnonymous  options  Option  option  String  arg  description  name  Map  tailMap  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	131	131	1	replace	final  Map  tailMap  =  options.tailMap(arg);	      final    Map    tailMap    =    optionMap.tailMap(arg);    	non-compiled	[CE]  illegal  start  of  expression	1	None	replace
9	[BUG]  [BUGGY]  final  Map  tailMap  =  optionMap.tailMap(arg,  description);  [CE]  illegal  start  of  expression  [FE]              OptionException    [CONTEXT]      if  (optionMap.containsKey(arg))  {  return  true;  }  final  Map  tailMap  =  optionMap.tailMap(arg);      [BUGGY]  final  Map  tailMap  =  optionMap.tailMap(arg,  description);  [BUGGY]    for  (final  Iterator  iter  =  tailMap.values().iterator();  iter.hasNext();)  {  final  Option  option  =  (Option)  iter.next();  if  (option.canProcess(commandLine,  arg))  {  return  true;  }  }  if  (looksLikeOption(commandLine,  arg))  {  return  false;  }  [CLASS]  GroupImpl  [METHOD]  canProcess  [RETURN_TYPE]  boolean  WriteableCommandLine  commandLine  String  arg  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  SortedMap  newOptionMap  optionMap  WriteableCommandLine  commandLine  Iterator  iter  List  anonymous  newAnonymous  options  Option  option  String  arg  description  name  Map  tailMap  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	131	131	1	replace	final  Map  tailMap  =  optionMap.tailMap(arg,  description);	      final    Map    tailMap    =    optionMap.tailMap(arg);    	non-compiled	[CE]  illegal  start  of  expression	1	None	replace
10	[BUG]  [BUGGY]  final  Map  <  String,  Option>  tailMap  =  optionMap.tailMap(commandLine);  [CE]  illegal  start  of  expression  [FE]        OptionException    [CONTEXT]      if  (optionMap.containsKey(arg))  {  return  true;  }  final  Map  tailMap  =  optionMap.tailMap(arg);      [BUGGY]  final  Map  <  String,  Option>  tailMap  =  optionMap.tailMap(commandLine);  [BUGGY]    for  (final  Iterator  iter  =  tailMap.values().iterator();  iter.hasNext();)  {  final  Option  option  =  (Option)  iter.next();  if  (option.canProcess(commandLine,  arg))  {  return  true;  }  }  if  (looksLikeOption(commandLine,  arg))  {  return  false;  }  [CLASS]  GroupImpl  [METHOD]  canProcess  [RETURN_TYPE]  boolean  WriteableCommandLine  commandLine  String  arg  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  SortedMap  newOptionMap  optionMap  WriteableCommandLine  commandLine  Iterator  iter  List  anonymous  newAnonymous  options  Option  option  String  arg  description  name  Map  tailMap  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	131	131	1	replace	final  Map  <  String,  Option>  tailMap  =  optionMap.tailMap(commandLine);	      final    Map    <    String,    Option>    tailMap    =    optionMap.tailMap();    	non-compiled	[CE]  illegal  start  of  expression	8	None	replace
11	[BUG]  [BUGGY]  final  Map  <  String,  Option>  tailMap  =  options.tailMap();  [CE]  illegal  start  of  expression  [FE]          OptionException    [CONTEXT]      if  (optionMap.containsKey(arg))  {  return  true;  }  final  Map  tailMap  =  optionMap.tailMap(arg);      [BUGGY]  final  Map  <  String,  Option>  tailMap  =  options.tailMap();  [BUGGY]    for  (final  Iterator  iter  =  tailMap.values().iterator();  iter.hasNext();)  {  final  Option  option  =  (Option)  iter.next();  if  (option.canProcess(commandLine,  arg))  {  return  true;  }  }  if  (looksLikeOption(commandLine,  arg))  {  return  false;  }  [CLASS]  GroupImpl  [METHOD]  canProcess  [RETURN_TYPE]  boolean  WriteableCommandLine  commandLine  String  arg  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  SortedMap  newOptionMap  optionMap  WriteableCommandLine  commandLine  Iterator  iter  List  anonymous  newAnonymous  options  Option  option  String  arg  description  name  Map  tailMap  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	131	131	1	replace	final  Map  <  String,  Option>  tailMap  =  options.tailMap();	      final    Map    <    String,    Option>    tailMap    =    optionMap.tailMap();    	non-compiled	[CE]  illegal  start  of  expression	8	None	replace
12	[BUG]  [BUGGY]  final  Map  <  String,Object>  tailMap  =  optionMap.tailMap(commandLine);  [CE]  illegal  start  of  expression  [FE]              OptionException    [CONTEXT]      if  (optionMap.containsKey(arg))  {  return  true;  }  final  Map  tailMap  =  optionMap.tailMap(arg);      [BUGGY]  final  Map  <  String,Object>  tailMap  =  optionMap.tailMap(commandLine);  [BUGGY]    for  (final  Iterator  iter  =  tailMap.values().iterator();  iter.hasNext();)  {  final  Option  option  =  (Option)  iter.next();  if  (option.canProcess(commandLine,  arg))  {  return  true;  }  }  if  (looksLikeOption(commandLine,  arg))  {  return  false;  }  [CLASS]  GroupImpl  [METHOD]  canProcess  [RETURN_TYPE]  boolean  WriteableCommandLine  commandLine  String  arg  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  SortedMap  newOptionMap  optionMap  WriteableCommandLine  commandLine  Iterator  iter  List  anonymous  newAnonymous  options  Option  option  String  arg  description  name  Map  tailMap  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	131	131	1	replace	final  Map  <  String,Object>  tailMap  =  optionMap.tailMap(commandLine);	      final    Map    <    String,Object>    tailMap    =    optionMap.tailMap(arg);    	non-compiled	[CE]  illegal  start  of  expression	4	None	replace
13	[BUG]  [BUGGY]  final  Map  <  String,Object>  tailMap  =  options.tailMap(arg);  [CE]  illegal  start  of  expression  [FE]                OptionException    [CONTEXT]      if  (optionMap.containsKey(arg))  {  return  true;  }  final  Map  tailMap  =  optionMap.tailMap(arg);      [BUGGY]  final  Map  <  String,Object>  tailMap  =  options.tailMap(arg);  [BUGGY]    for  (final  Iterator  iter  =  tailMap.values().iterator();  iter.hasNext();)  {  final  Option  option  =  (Option)  iter.next();  if  (option.canProcess(commandLine,  arg))  {  return  true;  }  }  if  (looksLikeOption(commandLine,  arg))  {  return  false;  }  [CLASS]  GroupImpl  [METHOD]  canProcess  [RETURN_TYPE]  boolean  WriteableCommandLine  commandLine  String  arg  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  SortedMap  newOptionMap  optionMap  WriteableCommandLine  commandLine  Iterator  iter  List  anonymous  newAnonymous  options  Option  option  String  arg  description  name  Map  tailMap  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	131	131	1	replace	final  Map  <  String,Object>  tailMap  =  options.tailMap(arg);	      final    Map    <    String,Object>    tailMap    =    optionMap.tailMap(arg);    	non-compiled	[CE]  illegal  start  of  expression	4	None	replace
14	[BUG]  [BUGGY]  final  Map  <  String,Object>  tailMap  =  optionMap.tailMap(arg)+  1;  [CE]  illegal  start  of  expression  [FE]                  OptionException    [CONTEXT]      if  (optionMap.containsKey(arg))  {  return  true;  }  final  Map  tailMap  =  optionMap.tailMap(arg);      [BUGGY]  final  Map  <  String,Object>  tailMap  =  optionMap.tailMap(arg)+  1;  [BUGGY]    for  (final  Iterator  iter  =  tailMap.values().iterator();  iter.hasNext();)  {  final  Option  option  =  (Option)  iter.next();  if  (option.canProcess(commandLine,  arg))  {  return  true;  }  }  if  (looksLikeOption(commandLine,  arg))  {  return  false;  }  [CLASS]  GroupImpl  [METHOD]  canProcess  [RETURN_TYPE]  boolean  WriteableCommandLine  commandLine  String  arg  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  SortedMap  newOptionMap  optionMap  WriteableCommandLine  commandLine  Iterator  iter  List  anonymous  newAnonymous  options  Option  option  String  arg  description  name  Map  tailMap  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	131	131	1	replace	final  Map  <  String,Object>  tailMap  =  optionMap.tailMap(arg)+  1;	      final    Map    <    String,Object>    tailMap    =    optionMap.tailMap(arg);    	non-compiled	[CE]  illegal  start  of  expression	4	None	replace
15	[BUG]  [BUGGY]  final  Map  <  String,  Option>  tailMap  =  options.tailMap(arg);  [CE]  illegal  start  of  expression  [FE]          OptionException    [CONTEXT]      if  (optionMap.containsKey(arg))  {  return  true;  }  final  Map  tailMap  =  optionMap.tailMap(arg);      [BUGGY]  final  Map  <  String,  Option>  tailMap  =  options.tailMap(arg);  [BUGGY]    for  (final  Iterator  iter  =  tailMap.values().iterator();  iter.hasNext();)  {  final  Option  option  =  (Option)  iter.next();  if  (option.canProcess(commandLine,  arg))  {  return  true;  }  }  if  (looksLikeOption(commandLine,  arg))  {  return  false;  }  [CLASS]  GroupImpl  [METHOD]  canProcess  [RETURN_TYPE]  boolean  WriteableCommandLine  commandLine  String  arg  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  SortedMap  newOptionMap  optionMap  WriteableCommandLine  commandLine  Iterator  iter  List  anonymous  newAnonymous  options  Option  option  String  arg  description  name  Map  tailMap  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	131	131	1	replace	final  Map  <  String,  Option>  tailMap  =  options.tailMap(arg);	      final    Map    <    String,    Option>    tailMap    =    optionMap.tailMap(arg);    	non-compiled	[CE]  illegal  start  of  expression	2	None	replace
16	[BUG]  [BUGGY]  final  Map  <  String,String>  tailMap  =  options.tailMap();  [CE]  illegal  start  of  expression  [FE]                OptionException    [CONTEXT]      if  (optionMap.containsKey(arg))  {  return  true;  }  final  Map  tailMap  =  optionMap.tailMap(arg);      [BUGGY]  final  Map  <  String,String>  tailMap  =  options.tailMap();  [BUGGY]    for  (final  Iterator  iter  =  tailMap.values().iterator();  iter.hasNext();)  {  final  Option  option  =  (Option)  iter.next();  if  (option.canProcess(commandLine,  arg))  {  return  true;  }  }  if  (looksLikeOption(commandLine,  arg))  {  return  false;  }  [CLASS]  GroupImpl  [METHOD]  canProcess  [RETURN_TYPE]  boolean  WriteableCommandLine  commandLine  String  arg  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  SortedMap  newOptionMap  optionMap  WriteableCommandLine  commandLine  Iterator  iter  List  anonymous  newAnonymous  options  Option  option  String  arg  description  name  Map  tailMap  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	131	131	1	replace	final  Map  <  String,String>  tailMap  =  options.tailMap();	      final    Map    <    String,String>    tailMap    =    optionMap.tailMap();    	non-compiled	[CE]  illegal  start  of  expression	5	None	replace
17	[BUG]  [BUGGY]  final  List  <  Option>  options  =  tailMap.values();  [CE]  illegal  start  of  expression  [FE]          OptionException    [CONTEXT]      if  (optionMap.containsKey(arg))  {  return  true;  }  final  Map  tailMap  =  optionMap.tailMap(arg);      [BUGGY]  final  List  <  Option>  options  =  tailMap.values();  [BUGGY]    for  (final  Iterator  iter  =  tailMap.values().iterator();  iter.hasNext();)  {  final  Option  option  =  (Option)  iter.next();  if  (option.canProcess(commandLine,  arg))  {  return  true;  }  }  if  (looksLikeOption(commandLine,  arg))  {  return  false;  }  [CLASS]  GroupImpl  [METHOD]  canProcess  [RETURN_TYPE]  boolean  WriteableCommandLine  commandLine  String  arg  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  SortedMap  newOptionMap  optionMap  WriteableCommandLine  commandLine  Iterator  iter  List  anonymous  newAnonymous  options  Option  option  String  arg  description  name  Map  tailMap  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	131	131	1	replace	final  List  <  Option>  options  =  tailMap.values();	      final    List    <    Option>    options    =    optionMap.values();    	non-compiled	[CE]  illegal  start  of  expression	9	None	replace
18	[BUG]  [BUGGY]  final  List  <  Option>  options  =  optionMap.keySet();  [CE]  illegal  start  of  expression  [FE]            OptionException    [CONTEXT]      if  (optionMap.containsKey(arg))  {  return  true;  }  final  Map  tailMap  =  optionMap.tailMap(arg);      [BUGGY]  final  List  <  Option>  options  =  optionMap.keySet();  [BUGGY]    for  (final  Iterator  iter  =  tailMap.values().iterator();  iter.hasNext();)  {  final  Option  option  =  (Option)  iter.next();  if  (option.canProcess(commandLine,  arg))  {  return  true;  }  }  if  (looksLikeOption(commandLine,  arg))  {  return  false;  }  [CLASS]  GroupImpl  [METHOD]  canProcess  [RETURN_TYPE]  boolean  WriteableCommandLine  commandLine  String  arg  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  SortedMap  newOptionMap  optionMap  WriteableCommandLine  commandLine  Iterator  iter  List  anonymous  newAnonymous  options  Option  option  String  arg  description  name  Map  tailMap  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	131	131	1	replace	final  List  <  Option>  options  =  optionMap.keySet();	      final    List    <    Option>    options    =    optionMap.values();    	non-compiled	[CE]  illegal  start  of  expression	9	None	replace
19	[BUG]  [BUGGY]  final  Set  <  Option>  options  =  optionMap.values();  [CE]  illegal  start  of  expression  [FE]              OptionException    [CONTEXT]      if  (optionMap.containsKey(arg))  {  return  true;  }  final  Map  tailMap  =  optionMap.tailMap(arg);      [BUGGY]  final  Set  <  Option>  options  =  optionMap.values();  [BUGGY]    for  (final  Iterator  iter  =  tailMap.values().iterator();  iter.hasNext();)  {  final  Option  option  =  (Option)  iter.next();  if  (option.canProcess(commandLine,  arg))  {  return  true;  }  }  if  (looksLikeOption(commandLine,  arg))  {  return  false;  }  [CLASS]  GroupImpl  [METHOD]  canProcess  [RETURN_TYPE]  boolean  WriteableCommandLine  commandLine  String  arg  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  SortedMap  newOptionMap  optionMap  WriteableCommandLine  commandLine  Iterator  iter  List  anonymous  newAnonymous  options  Option  option  String  arg  description  name  Map  tailMap  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	131	131	1	replace	final  Set  <  Option>  options  =  optionMap.values();	      final    List    <    Option>    options    =    optionMap.values();    	non-compiled	[CE]  illegal  start  of  expression	9	None	replace
20	[BUG]  [BUGGY]  final  Map  tailMap  =  optionsMap.tailMap(arg);  [CE]  illegal  start  of  expression  [FE]        OptionException    [CONTEXT]      if  (optionMap.containsKey(arg))  {  return  true;  }  final  Map  tailMap  =  optionMap.tailMap(arg);      [BUGGY]  final  Map  tailMap  =  optionsMap.tailMap(arg);  [BUGGY]    for  (final  Iterator  iter  =  tailMap.values().iterator();  iter.hasNext();)  {  final  Option  option  =  (Option)  iter.next();  if  (option.canProcess(commandLine,  arg))  {  return  true;  }  }  if  (looksLikeOption(commandLine,  arg))  {  return  false;  }  [CLASS]  GroupImpl  [METHOD]  canProcess  [RETURN_TYPE]  boolean  WriteableCommandLine  commandLine  String  arg  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  SortedMap  newOptionMap  optionMap  WriteableCommandLine  commandLine  Iterator  iter  List  anonymous  newAnonymous  options  Option  option  String  arg  description  name  Map  tailMap  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	131	131	1	replace	final  Map  tailMap  =  optionsMap.tailMap(arg);	      final    Map    tailMap    =    optionMap.tailMap(arg);    	non-compiled	[CE]  illegal  start  of  expression	1	None	replace
21	[BUG]  [BUGGY]  final  Map  <  String,  Option>  tailMap  =  optionsMap.tailMap(arg);  [CE]  illegal  start  of  expression  [FE]        OptionException    [CONTEXT]      if  (optionMap.containsKey(arg))  {  return  true;  }  final  Map  tailMap  =  optionMap.tailMap(arg);      [BUGGY]  final  Map  <  String,  Option>  tailMap  =  optionsMap.tailMap(arg);  [BUGGY]    for  (final  Iterator  iter  =  tailMap.values().iterator();  iter.hasNext();)  {  final  Option  option  =  (Option)  iter.next();  if  (option.canProcess(commandLine,  arg))  {  return  true;  }  }  if  (looksLikeOption(commandLine,  arg))  {  return  false;  }  [CLASS]  GroupImpl  [METHOD]  canProcess  [RETURN_TYPE]  boolean  WriteableCommandLine  commandLine  String  arg  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  SortedMap  newOptionMap  optionMap  WriteableCommandLine  commandLine  Iterator  iter  List  anonymous  newAnonymous  options  Option  option  String  arg  description  name  Map  tailMap  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	131	131	1	replace	final  Map  <  String,  Option>  tailMap  =  optionsMap.tailMap(arg);	      final    Map    <    String,    Option>    tailMap    =    optionMap.tailMap();    	non-compiled	[CE]  illegal  start  of  expression	8	None	replace
22	[BUG]  [BUGGY]  final  Map  <  String,Object>  tailMap  =  optionMap.tailMap(arg  +  1);  [CE]  illegal  start  of  expression  [FE]              OptionException    [CONTEXT]      if  (optionMap.containsKey(arg))  {  return  true;  }  final  Map  tailMap  =  optionMap.tailMap(arg);      [BUGGY]  final  Map  <  String,Object>  tailMap  =  optionMap.tailMap(arg  +  1);  [BUGGY]    for  (final  Iterator  iter  =  tailMap.values().iterator();  iter.hasNext();)  {  final  Option  option  =  (Option)  iter.next();  if  (option.canProcess(commandLine,  arg))  {  return  true;  }  }  if  (looksLikeOption(commandLine,  arg))  {  return  false;  }  [CLASS]  GroupImpl  [METHOD]  canProcess  [RETURN_TYPE]  boolean  WriteableCommandLine  commandLine  String  arg  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  SortedMap  newOptionMap  optionMap  WriteableCommandLine  commandLine  Iterator  iter  List  anonymous  newAnonymous  options  Option  option  String  arg  description  name  Map  tailMap  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	131	131	1	replace	final  Map  <  String,Object>  tailMap  =  optionMap.tailMap(arg  +  1);	      final    Map    <    String,Object>    tailMap    =    optionMap.tailMap(arg);    	non-compiled	[CE]  illegal  start  of  expression	4	None	replace
23	[BUG]  [BUGGY]  final  Map  <  String,String>  tailMap  =  optionsMap.tailMap(arg);  [CE]  illegal  start  of  expression  [FE]                OptionException    [CONTEXT]      if  (optionMap.containsKey(arg))  {  return  true;  }  final  Map  tailMap  =  optionMap.tailMap(arg);      [BUGGY]  final  Map  <  String,String>  tailMap  =  optionsMap.tailMap(arg);  [BUGGY]    for  (final  Iterator  iter  =  tailMap.values().iterator();  iter.hasNext();)  {  final  Option  option  =  (Option)  iter.next();  if  (option.canProcess(commandLine,  arg))  {  return  true;  }  }  if  (looksLikeOption(commandLine,  arg))  {  return  false;  }  [CLASS]  GroupImpl  [METHOD]  canProcess  [RETURN_TYPE]  boolean  WriteableCommandLine  commandLine  String  arg  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  SortedMap  newOptionMap  optionMap  WriteableCommandLine  commandLine  Iterator  iter  List  anonymous  newAnonymous  options  Option  option  String  arg  description  name  Map  tailMap  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	131	131	1	replace	final  Map  <  String,String>  tailMap  =  optionsMap.tailMap(arg);	      final    Map    <    String,String>    tailMap    =    optionMap.tailMap();    	non-compiled	[CE]  illegal  start  of  expression	5	None	replace
24	[BUG]  [BUGGY]  final  Map  <  String,  Option>  tailMap  =  optionMap.tailMap(arg  +  1);  [CE]  illegal  start  of  expression  [FE]          OptionException    [CONTEXT]      if  (optionMap.containsKey(arg))  {  return  true;  }  final  Map  tailMap  =  optionMap.tailMap(arg);      [BUGGY]  final  Map  <  String,  Option>  tailMap  =  optionMap.tailMap(arg  +  1);  [BUGGY]    for  (final  Iterator  iter  =  tailMap.values().iterator();  iter.hasNext();)  {  final  Option  option  =  (Option)  iter.next();  if  (option.canProcess(commandLine,  arg))  {  return  true;  }  }  if  (looksLikeOption(commandLine,  arg))  {  return  false;  }  [CLASS]  GroupImpl  [METHOD]  canProcess  [RETURN_TYPE]  boolean  WriteableCommandLine  commandLine  String  arg  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  SortedMap  newOptionMap  optionMap  WriteableCommandLine  commandLine  Iterator  iter  List  anonymous  newAnonymous  options  Option  option  String  arg  description  name  Map  tailMap  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	131	131	1	replace	final  Map  <  String,  Option>  tailMap  =  optionMap.tailMap(arg  +  1);	      final    Map    <    String,    Option>    tailMap    =    optionMap.tailMap(arg);    	non-compiled	[CE]  illegal  start  of  expression	2	None	replace
25	[BUG]  [BUGGY]  final  Map  <  String,  Option>  tailMap  =  optionMap.tailMap(arg)+  1;  [CE]  illegal  start  of  expression  [FE]            OptionException    [CONTEXT]      if  (optionMap.containsKey(arg))  {  return  true;  }  final  Map  tailMap  =  optionMap.tailMap(arg);      [BUGGY]  final  Map  <  String,  Option>  tailMap  =  optionMap.tailMap(arg)+  1;  [BUGGY]    for  (final  Iterator  iter  =  tailMap.values().iterator();  iter.hasNext();)  {  final  Option  option  =  (Option)  iter.next();  if  (option.canProcess(commandLine,  arg))  {  return  true;  }  }  if  (looksLikeOption(commandLine,  arg))  {  return  false;  }  [CLASS]  GroupImpl  [METHOD]  canProcess  [RETURN_TYPE]  boolean  WriteableCommandLine  commandLine  String  arg  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  SortedMap  newOptionMap  optionMap  WriteableCommandLine  commandLine  Iterator  iter  List  anonymous  newAnonymous  options  Option  option  String  arg  description  name  Map  tailMap  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	131	131	1	replace	final  Map  <  String,  Option>  tailMap  =  optionMap.tailMap(arg)+  1;	      final    Map    <    String,    Option>    tailMap    =    optionMap.tailMap(arg);    	non-compiled	[CE]  illegal  start  of  expression	2	None	replace
26	[BUG]  [BUGGY]  final  Map  <  String,String>  tailMap  =  optionMap.tailMap(arg  +  1);  [CE]  illegal  start  of  expression  [FE]            OptionException    [CONTEXT]      if  (optionMap.containsKey(arg))  {  return  true;  }  final  Map  tailMap  =  optionMap.tailMap(arg);      [BUGGY]  final  Map  <  String,String>  tailMap  =  optionMap.tailMap(arg  +  1);  [BUGGY]    for  (final  Iterator  iter  =  tailMap.values().iterator();  iter.hasNext();)  {  final  Option  option  =  (Option)  iter.next();  if  (option.canProcess(commandLine,  arg))  {  return  true;  }  }  if  (looksLikeOption(commandLine,  arg))  {  return  false;  }  [CLASS]  GroupImpl  [METHOD]  canProcess  [RETURN_TYPE]  boolean  WriteableCommandLine  commandLine  String  arg  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  SortedMap  newOptionMap  optionMap  WriteableCommandLine  commandLine  Iterator  iter  List  anonymous  newAnonymous  options  Option  option  String  arg  description  name  Map  tailMap  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	131	131	1	replace	final  Map  <  String,String>  tailMap  =  optionMap.tailMap(arg  +  1);	      final    Map    <    String,String>    tailMap    =    optionMap.tailMap(arg);    	non-compiled	[CE]  illegal  start  of  expression	3	None	replace
27	[BUG]  [BUGGY]  final  Map  <  String,String>  tailMap  =  optionMap.tailMap(arg)+  1;  [CE]  illegal  start  of  expression  [FE]              OptionException    [CONTEXT]      if  (optionMap.containsKey(arg))  {  return  true;  }  final  Map  tailMap  =  optionMap.tailMap(arg);      [BUGGY]  final  Map  <  String,String>  tailMap  =  optionMap.tailMap(arg)+  1;  [BUGGY]    for  (final  Iterator  iter  =  tailMap.values().iterator();  iter.hasNext();)  {  final  Option  option  =  (Option)  iter.next();  if  (option.canProcess(commandLine,  arg))  {  return  true;  }  }  if  (looksLikeOption(commandLine,  arg))  {  return  false;  }  [CLASS]  GroupImpl  [METHOD]  canProcess  [RETURN_TYPE]  boolean  WriteableCommandLine  commandLine  String  arg  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  SortedMap  newOptionMap  optionMap  WriteableCommandLine  commandLine  Iterator  iter  List  anonymous  newAnonymous  options  Option  option  String  arg  description  name  Map  tailMap  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	131	131	1	replace	final  Map  <  String,String>  tailMap  =  optionMap.tailMap(arg)+  1;	      final    Map    <    String,String>    tailMap    =    optionMap.tailMap(arg);    	non-compiled	[CE]  illegal  start  of  expression	3	None	replace
28	[BUG]  [BUGGY]  final  Map  <  Option>  options  =  optionMap.values();  [CE]  illegal  start  of  expression  [FE]          OptionException    [CONTEXT]      if  (optionMap.containsKey(arg))  {  return  true;  }  final  Map  tailMap  =  optionMap.tailMap(arg);      [BUGGY]  final  Map  <  Option>  options  =  optionMap.values();  [BUGGY]    for  (final  Iterator  iter  =  tailMap.values().iterator();  iter.hasNext();)  {  final  Option  option  =  (Option)  iter.next();  if  (option.canProcess(commandLine,  arg))  {  return  true;  }  }  if  (looksLikeOption(commandLine,  arg))  {  return  false;  }  [CLASS]  GroupImpl  [METHOD]  canProcess  [RETURN_TYPE]  boolean  WriteableCommandLine  commandLine  String  arg  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  SortedMap  newOptionMap  optionMap  WriteableCommandLine  commandLine  Iterator  iter  List  anonymous  newAnonymous  options  Option  option  String  arg  description  name  Map  tailMap  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	131	131	1	replace	final  Map  <  Option>  options  =  optionMap.values();	      final    List    <    Option>    options    =    optionMap.values();    	non-compiled	[CE]  illegal  start  of  expression	9	None	replace
29	[BUG]  [BUGGY]  final  Map  <  String,String>  tailMap  =  optionMap.values();  [CE]  illegal  start  of  expression  [FE]                OptionException    [CONTEXT]      if  (optionMap.containsKey(arg))  {  return  true;  }  final  Map  tailMap  =  optionMap.tailMap(arg);      [BUGGY]  final  Map  <  String,String>  tailMap  =  optionMap.values();  [BUGGY]    for  (final  Iterator  iter  =  tailMap.values().iterator();  iter.hasNext();)  {  final  Option  option  =  (Option)  iter.next();  if  (option.canProcess(commandLine,  arg))  {  return  true;  }  }  if  (looksLikeOption(commandLine,  arg))  {  return  false;  }  [CLASS]  GroupImpl  [METHOD]  canProcess  [RETURN_TYPE]  boolean  WriteableCommandLine  commandLine  String  arg  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  SortedMap  newOptionMap  optionMap  WriteableCommandLine  commandLine  Iterator  iter  List  anonymous  newAnonymous  options  Option  option  String  arg  description  name  Map  tailMap  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	131	131	1	replace	final  Map  <  String,String>  tailMap  =  optionMap.values();	      final    Map    <    String,String>    tailMap    =    optionMap.tailMap();    	non-compiled	[CE]  illegal  start  of  expression	5	None	replace
30	[BUG]  [BUGGY]  final  Map  tailMap  =  optionMap.tailMap(option);  [CE]  illegal  start  of  expression  [FE]        OptionException    [CONTEXT]      if  (optionMap.containsKey(arg))  {  return  true;  }  final  Map  tailMap  =  optionMap.tailMap(arg);      [BUGGY]  final  Map  tailMap  =  optionMap.tailMap(option);  [BUGGY]    for  (final  Iterator  iter  =  tailMap.values().iterator();  iter.hasNext();)  {  final  Option  option  =  (Option)  iter.next();  if  (option.canProcess(commandLine,  arg))  {  return  true;  }  }  if  (looksLikeOption(commandLine,  arg))  {  return  false;  }  [CLASS]  GroupImpl  [METHOD]  canProcess  [RETURN_TYPE]  boolean  WriteableCommandLine  commandLine  String  arg  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  SortedMap  newOptionMap  optionMap  WriteableCommandLine  commandLine  Iterator  iter  List  anonymous  newAnonymous  options  Option  option  String  arg  description  name  Map  tailMap  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	131	131	1	replace	final  Map  tailMap  =  optionMap.tailMap(option);	      final    Map    tailMap    =    optionMap.tailMap(arg);    	non-compiled	[CE]  illegal  start  of  expression	1	None	replace
31	[BUG]  [BUGGY]  For(final  Iterator  iter  =  tailMap.keySet().iterator();  iter.hasNext();)  {  [CE]  illegal  start  of  expression  [FE]        OptionException    [CONTEXT]      if  (optionMap.containsKey(arg))  {  return  true;  }  final  Map  tailMap  =  optionMap.tailMap(arg);      [BUGGY]  For(final  Iterator  iter  =  tailMap.keySet().iterator();  iter.hasNext();)  {  [BUGGY]    final  Option  option  =  (Option)  iter.next();  if  (option.canProcess(commandLine,  arg))  {  return  true;  }  }  if  (looksLikeOption(commandLine,  arg))  {  return  false;  }  [CLASS]  GroupImpl  [METHOD]  canProcess  [RETURN_TYPE]  boolean  WriteableCommandLine  commandLine  String  arg  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  SortedMap  newOptionMap  optionMap  WriteableCommandLine  commandLine  Iterator  iter  List  anonymous  newAnonymous  options  Option  option  String  arg  description  name  Map  tailMap  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	131	131	1	replace	For(final  Iterator  iter  =  tailMap.keySet().iterator();  iter.hasNext();)  {	  for(final    Iterator    iter    =    tailMap.keySet().iterator();    iter.hasNext();)    {    	non-compiled	[CE]  illegal  start  of  expression	6	None	replace
