bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  if(option.hasAnonymous()  &&!(option.hasNext()  &&  option  instanceof  Option))  {  [CE]  illegal  start  of  expression  [FE]                OptionException      [CONTEXT]      final  SortedMap  newOptionMap  =  new  TreeMap(ReverseStringComparator.getInstance());  final  Set  newPrefixes  =  new  HashSet();  for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {  final  Option  option  =  (Option)  i.next();  option.setParent(this);      [BUGGY]  if(option.hasAnonymous()  &&!(option.hasNext()  &&  option  instanceof  Option))  {  [BUGGY]      i.remove();  newAnonymous.add(option);  }  else  {  final  Set  triggers  =  option.getTriggers();  for  (Iterator  j  =  triggers.iterator();  j.hasNext();)  {  newOptionMap.put(j.next(),  option);  }    [CLASS]  GroupImpl  [METHOD]  <init>  [RETURN_TYPE]  String,int,int,boolean)  List  options  String  name  String  description  final  int  minimum  final  int  maximum  final  boolean  required  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  required  SortedMap  newOptionMap  optionMap  Iterator  i  j  List  anonymous  newAnonymous  options  Option  option  String  description  name  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	96	96	1	replace	if(option.hasAnonymous()  &&!(option.hasNext()  &&  option  instanceof  Option))  {	  if(option.hasAnonymous()    ||!(option.hasNext()    &&    option    instanceof    Option))    {    	non-compiled	[CE]  illegal  start  of  expression	39	None	replace
2	[BUG]  [BUGGY]  if(option.hasNext()  ||!(option.hasNext()  &&  option  instanceof  Option))  {  [CE]  illegal  start  of  expression  [FE]                  OptionException      [CONTEXT]      final  SortedMap  newOptionMap  =  new  TreeMap(ReverseStringComparator.getInstance());  final  Set  newPrefixes  =  new  HashSet();  for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {  final  Option  option  =  (Option)  i.next();  option.setParent(this);      [BUGGY]  if(option.hasNext()  ||!(option.hasNext()  &&  option  instanceof  Option))  {  [BUGGY]      i.remove();  newAnonymous.add(option);  }  else  {  final  Set  triggers  =  option.getTriggers();  for  (Iterator  j  =  triggers.iterator();  j.hasNext();)  {  newOptionMap.put(j.next(),  option);  }    [CLASS]  GroupImpl  [METHOD]  <init>  [RETURN_TYPE]  String,int,int,boolean)  List  options  String  name  String  description  final  int  minimum  final  int  maximum  final  boolean  required  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  required  SortedMap  newOptionMap  optionMap  Iterator  i  j  List  anonymous  newAnonymous  options  Option  option  String  description  name  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	96	96	1	replace	if(option.hasNext()  ||!(option.hasNext()  &&  option  instanceof  Option))  {	  if(option.hasAnonymous()    ||!(option.hasNext()    &&    option    instanceof    Option))    {    	non-compiled	[CE]  illegal  start  of  expression	39	None	replace
3	[BUG]  [BUGGY]  Option  option  =  options.getOption(default,  i);  [CE]  illegal  start  of  expression  [FE]                OptionException      [CONTEXT]      final  SortedMap  newOptionMap  =  new  TreeMap(ReverseStringComparator.getInstance());  final  Set  newPrefixes  =  new  HashSet();  for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {  final  Option  option  =  (Option)  i.next();  option.setParent(this);      [BUGGY]  Option  option  =  options.getOption(default,  i);  [BUGGY]      if  (option  instanceof  Argument)  {  i.remove();  newAnonymous.add(option);  }  else  {  final  Set  triggers  =  option.getTriggers();  for  (Iterator  j  =  triggers.iterator();  j.hasNext();)  {  newOptionMap.put(j.next(),  option);  }    [CLASS]  GroupImpl  [METHOD]  <init>  [RETURN_TYPE]  String,int,int,boolean)  List  options  String  name  String  description  final  int  minimum  final  int  maximum  final  boolean  required  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  required  SortedMap  newOptionMap  optionMap  Iterator  i  j  List  anonymous  newAnonymous  options  Option  option  String  description  name  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	96	96	1	replace	Option  option  =  options.getOption(default,  i);	  Option    option    =    options.getOption(default);    	non-compiled	[CE]  illegal  start  of  expression	20	None	replace
4	[BUG]  [BUGGY]  Option  option  =  options.getOption(default,  newPrefixes);  [CE]  illegal  start  of  expression  [FE]                  OptionException      [CONTEXT]      final  SortedMap  newOptionMap  =  new  TreeMap(ReverseStringComparator.getInstance());  final  Set  newPrefixes  =  new  HashSet();  for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {  final  Option  option  =  (Option)  i.next();  option.setParent(this);      [BUGGY]  Option  option  =  options.getOption(default,  newPrefixes);  [BUGGY]      if  (option  instanceof  Argument)  {  i.remove();  newAnonymous.add(option);  }  else  {  final  Set  triggers  =  option.getTriggers();  for  (Iterator  j  =  triggers.iterator();  j.hasNext();)  {  newOptionMap.put(j.next(),  option);  }    [CLASS]  GroupImpl  [METHOD]  <init>  [RETURN_TYPE]  String,int,int,boolean)  List  options  String  name  String  description  final  int  minimum  final  int  maximum  final  boolean  required  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  required  SortedMap  newOptionMap  optionMap  Iterator  i  j  List  anonymous  newAnonymous  options  Option  option  String  description  name  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	96	96	1	replace	Option  option  =  options.getOption(default,  newPrefixes);	  Option    option    =    options.getOption(default);    	non-compiled	[CE]  illegal  start  of  expression	20	None	replace
5	[BUG]  [BUGGY]  Option  option  =  options.getOption(default,  minimum);  [CE]  illegal  start  of  expression  [FE]                    OptionException      [CONTEXT]      final  SortedMap  newOptionMap  =  new  TreeMap(ReverseStringComparator.getInstance());  final  Set  newPrefixes  =  new  HashSet();  for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {  final  Option  option  =  (Option)  i.next();  option.setParent(this);      [BUGGY]  Option  option  =  options.getOption(default,  minimum);  [BUGGY]      if  (option  instanceof  Argument)  {  i.remove();  newAnonymous.add(option);  }  else  {  final  Set  triggers  =  option.getTriggers();  for  (Iterator  j  =  triggers.iterator();  j.hasNext();)  {  newOptionMap.put(j.next(),  option);  }    [CLASS]  GroupImpl  [METHOD]  <init>  [RETURN_TYPE]  String,int,int,boolean)  List  options  String  name  String  description  final  int  minimum  final  int  maximum  final  boolean  required  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  required  SortedMap  newOptionMap  optionMap  Iterator  i  j  List  anonymous  newAnonymous  options  Option  option  String  description  name  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	96	96	1	replace	Option  option  =  options.getOption(default,  minimum);	  Option    option    =    options.getOption(default);    	non-compiled	[CE]  illegal  start  of  expression	20	None	replace
6	[BUG]  [BUGGY]  Option  option  =  options.getOption(defaultName,  minimum);  [CE]  illegal  start  of  expression  [FE]                OptionException      [CONTEXT]      final  SortedMap  newOptionMap  =  new  TreeMap(ReverseStringComparator.getInstance());  final  Set  newPrefixes  =  new  HashSet();  for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {  final  Option  option  =  (Option)  i.next();  option.setParent(this);      [BUGGY]  Option  option  =  options.getOption(defaultName,  minimum);  [BUGGY]      if  (option  instanceof  Argument)  {  i.remove();  newAnonymous.add(option);  }  else  {  final  Set  triggers  =  option.getTriggers();  for  (Iterator  j  =  triggers.iterator();  j.hasNext();)  {  newOptionMap.put(j.next(),  option);  }    [CLASS]  GroupImpl  [METHOD]  <init>  [RETURN_TYPE]  String,int,int,boolean)  List  options  String  name  String  description  final  int  minimum  final  int  maximum  final  boolean  required  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  required  SortedMap  newOptionMap  optionMap  Iterator  i  j  List  anonymous  newAnonymous  options  Option  option  String  description  name  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	96	96	1	replace	Option  option  =  options.getOption(defaultName,  minimum);	  Option    option    =    options.getOption(defaultName);    	non-compiled	[CE]  illegal  start  of  expression	2	None	replace
7	[BUG]  [BUGGY]  Option  option  =  options.getOption(defaultName,  required);  [CE]  illegal  start  of  expression  [FE]                  OptionException      [CONTEXT]      final  SortedMap  newOptionMap  =  new  TreeMap(ReverseStringComparator.getInstance());  final  Set  newPrefixes  =  new  HashSet();  for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {  final  Option  option  =  (Option)  i.next();  option.setParent(this);      [BUGGY]  Option  option  =  options.getOption(defaultName,  required);  [BUGGY]      if  (option  instanceof  Argument)  {  i.remove();  newAnonymous.add(option);  }  else  {  final  Set  triggers  =  option.getTriggers();  for  (Iterator  j  =  triggers.iterator();  j.hasNext();)  {  newOptionMap.put(j.next(),  option);  }    [CLASS]  GroupImpl  [METHOD]  <init>  [RETURN_TYPE]  String,int,int,boolean)  List  options  String  name  String  description  final  int  minimum  final  int  maximum  final  boolean  required  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  required  SortedMap  newOptionMap  optionMap  Iterator  i  j  List  anonymous  newAnonymous  options  Option  option  String  description  name  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	96	96	1	replace	Option  option  =  options.getOption(defaultName,  required);	  Option    option    =    options.getOption(defaultName);    	non-compiled	[CE]  illegal  start  of  expression	2	None	replace
8	[BUG]  [BUGGY]  if(!option.hasArg())  {  [CE]  illegal  start  of  expression  [FE]              OptionException      [CONTEXT]      final  SortedMap  newOptionMap  =  new  TreeMap(ReverseStringComparator.getInstance());  final  Set  newPrefixes  =  new  HashSet();  for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {  final  Option  option  =  (Option)  i.next();  option.setParent(this);      [BUGGY]  if(!option.hasArg())  {  [BUGGY]      i.remove();  newAnonymous.add(option);  }  else  {  final  Set  triggers  =  option.getTriggers();  for  (Iterator  j  =  triggers.iterator();  j.hasNext();)  {  newOptionMap.put(j.next(),  option);  }    [CLASS]  GroupImpl  [METHOD]  <init>  [RETURN_TYPE]  String,int,int,boolean)  List  options  String  name  String  description  final  int  minimum  final  int  maximum  final  boolean  required  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  required  SortedMap  newOptionMap  optionMap  Iterator  i  j  List  anonymous  newAnonymous  options  Option  option  String  description  name  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	96	96	1	replace	if(!option.hasArg())  {	  if(option.hasArg())    {    	non-compiled	[CE]  illegal  start  of  expression	59	None	replace
9	[BUG]  [BUGGY]  if(option.hasArg()  ||  option.hasArg())  {  [CE]  illegal  start  of  expression  [FE]                OptionException      [CONTEXT]      final  SortedMap  newOptionMap  =  new  TreeMap(ReverseStringComparator.getInstance());  final  Set  newPrefixes  =  new  HashSet();  for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {  final  Option  option  =  (Option)  i.next();  option.setParent(this);      [BUGGY]  if(option.hasArg()  ||  option.hasArg())  {  [BUGGY]      i.remove();  newAnonymous.add(option);  }  else  {  final  Set  triggers  =  option.getTriggers();  for  (Iterator  j  =  triggers.iterator();  j.hasNext();)  {  newOptionMap.put(j.next(),  option);  }    [CLASS]  GroupImpl  [METHOD]  <init>  [RETURN_TYPE]  String,int,int,boolean)  List  options  String  name  String  description  final  int  minimum  final  int  maximum  final  boolean  required  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  required  SortedMap  newOptionMap  optionMap  Iterator  i  j  List  anonymous  newAnonymous  options  Option  option  String  description  name  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	96	96	1	replace	if(option.hasArg()  ||  option.hasArg())  {	  if(option.hasArg())    {    	non-compiled	[CE]  illegal  start  of  expression	59	None	replace
10	[BUG]  [BUGGY]  if(option.hasAnonymous()  ||  option.hasArg())  {  [CE]  illegal  start  of  expression  [FE]                  OptionException      [CONTEXT]      final  SortedMap  newOptionMap  =  new  TreeMap(ReverseStringComparator.getInstance());  final  Set  newPrefixes  =  new  HashSet();  for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {  final  Option  option  =  (Option)  i.next();  option.setParent(this);      [BUGGY]  if(option.hasAnonymous()  ||  option.hasArg())  {  [BUGGY]      i.remove();  newAnonymous.add(option);  }  else  {  final  Set  triggers  =  option.getTriggers();  for  (Iterator  j  =  triggers.iterator();  j.hasNext();)  {  newOptionMap.put(j.next(),  option);  }    [CLASS]  GroupImpl  [METHOD]  <init>  [RETURN_TYPE]  String,int,int,boolean)  List  options  String  name  String  description  final  int  minimum  final  int  maximum  final  boolean  required  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  required  SortedMap  newOptionMap  optionMap  Iterator  i  j  List  anonymous  newAnonymous  options  Option  option  String  description  name  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	96	96	1	replace	if(option.hasAnonymous()  ||  option.hasArg())  {	  if(option.hasArg())    {    	non-compiled	[CE]  illegal  start  of  expression	59	None	replace
11	[BUG]  [BUGGY]  if(option  instanceof  Option  &&  newAnonymous.getAnonymous()!=  null)  {  [CE]  illegal  start  of  expression  [FE]            OptionException      [CONTEXT]      final  SortedMap  newOptionMap  =  new  TreeMap(ReverseStringComparator.getInstance());  final  Set  newPrefixes  =  new  HashSet();  for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {  final  Option  option  =  (Option)  i.next();  option.setParent(this);      [BUGGY]  if(option  instanceof  Option  &&  newAnonymous.getAnonymous()!=  null)  {  [BUGGY]      i.remove();  newAnonymous.add(option);  }  else  {  final  Set  triggers  =  option.getTriggers();  for  (Iterator  j  =  triggers.iterator();  j.hasNext();)  {  newOptionMap.put(j.next(),  option);  }    [CLASS]  GroupImpl  [METHOD]  <init>  [RETURN_TYPE]  String,int,int,boolean)  List  options  String  name  String  description  final  int  minimum  final  int  maximum  final  boolean  required  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  required  SortedMap  newOptionMap  optionMap  Iterator  i  j  List  anonymous  newAnonymous  options  Option  option  String  description  name  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	96	96	1	replace	if(option  instanceof  Option  &&  newAnonymous.getAnonymous()!=  null)  {	  if(option    instanceof    Option    &&    option.getAnonymous()!=    null)    {    	non-compiled	[CE]  illegal  start  of  expression	53	None	replace
12	[BUG]  [BUGGY]  if(!(option  instanceof  Option  &&  option.getAnonymous()!=  null))  {  [CE]  illegal  start  of  expression  [FE]              OptionException      [CONTEXT]      final  SortedMap  newOptionMap  =  new  TreeMap(ReverseStringComparator.getInstance());  final  Set  newPrefixes  =  new  HashSet();  for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {  final  Option  option  =  (Option)  i.next();  option.setParent(this);      [BUGGY]  if(!(option  instanceof  Option  &&  option.getAnonymous()!=  null))  {  [BUGGY]      i.remove();  newAnonymous.add(option);  }  else  {  final  Set  triggers  =  option.getTriggers();  for  (Iterator  j  =  triggers.iterator();  j.hasNext();)  {  newOptionMap.put(j.next(),  option);  }    [CLASS]  GroupImpl  [METHOD]  <init>  [RETURN_TYPE]  String,int,int,boolean)  List  options  String  name  String  description  final  int  minimum  final  int  maximum  final  boolean  required  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  required  SortedMap  newOptionMap  optionMap  Iterator  i  j  List  anonymous  newAnonymous  options  Option  option  String  description  name  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	96	96	1	replace	if(!(option  instanceof  Option  &&  option.getAnonymous()!=  null))  {	  if(option    instanceof    Option    &&    option.getAnonymous()!=    null)    {    	non-compiled	[CE]  illegal  start  of  expression	53	None	replace
13	[BUG]  [BUGGY]  if(option  instanceof  Option  &&  options.getAnonymous()!=  null)  {  [CE]  illegal  start  of  expression  [FE]                OptionException      [CONTEXT]      final  SortedMap  newOptionMap  =  new  TreeMap(ReverseStringComparator.getInstance());  final  Set  newPrefixes  =  new  HashSet();  for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {  final  Option  option  =  (Option)  i.next();  option.setParent(this);      [BUGGY]  if(option  instanceof  Option  &&  options.getAnonymous()!=  null)  {  [BUGGY]      i.remove();  newAnonymous.add(option);  }  else  {  final  Set  triggers  =  option.getTriggers();  for  (Iterator  j  =  triggers.iterator();  j.hasNext();)  {  newOptionMap.put(j.next(),  option);  }    [CLASS]  GroupImpl  [METHOD]  <init>  [RETURN_TYPE]  String,int,int,boolean)  List  options  String  name  String  description  final  int  minimum  final  int  maximum  final  boolean  required  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  required  SortedMap  newOptionMap  optionMap  Iterator  i  j  List  anonymous  newAnonymous  options  Option  option  String  description  name  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	96	96	1	replace	if(option  instanceof  Option  &&  options.getAnonymous()!=  null)  {	  if(option    instanceof    Option    &&    option.getAnonymous()!=    null)    {    	non-compiled	[CE]  illegal  start  of  expression	53	None	replace
14	[BUG]  [BUGGY]  if(option.hasNext())  {  [CE]  illegal  start  of  expression  [FE]            OptionException      [CONTEXT]      final  SortedMap  newOptionMap  =  new  TreeMap(ReverseStringComparator.getInstance());  final  Set  newPrefixes  =  new  HashSet();  for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {  final  Option  option  =  (Option)  i.next();  option.setParent(this);      [BUGGY]  if(option.hasNext())  {  [BUGGY]      i.remove();  newAnonymous.add(option);  }  else  {  final  Set  triggers  =  option.getTriggers();  for  (Iterator  j  =  triggers.iterator();  j.hasNext();)  {  newOptionMap.put(j.next(),  option);  }    [CLASS]  GroupImpl  [METHOD]  <init>  [RETURN_TYPE]  String,int,int,boolean)  List  options  String  name  String  description  final  int  minimum  final  int  maximum  final  boolean  required  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  required  SortedMap  newOptionMap  optionMap  Iterator  i  j  List  anonymous  newAnonymous  options  Option  option  String  description  name  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	96	96	1	replace	if(option.hasNext())  {	  if(i.hasNext())    {    	non-compiled	[CE]  illegal  start  of  expression	56	None	replace
15	[BUG]  [BUGGY]  if(i.hasNext()  ||  option.getTriggers().contains(option))  {  [CE]  illegal  start  of  expression  [FE]              OptionException      [CONTEXT]      final  SortedMap  newOptionMap  =  new  TreeMap(ReverseStringComparator.getInstance());  final  Set  newPrefixes  =  new  HashSet();  for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {  final  Option  option  =  (Option)  i.next();  option.setParent(this);      [BUGGY]  if(i.hasNext()  ||  option.getTriggers().contains(option))  {  [BUGGY]      i.remove();  newAnonymous.add(option);  }  else  {  final  Set  triggers  =  option.getTriggers();  for  (Iterator  j  =  triggers.iterator();  j.hasNext();)  {  newOptionMap.put(j.next(),  option);  }    [CLASS]  GroupImpl  [METHOD]  <init>  [RETURN_TYPE]  String,int,int,boolean)  List  options  String  name  String  description  final  int  minimum  final  int  maximum  final  boolean  required  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  required  SortedMap  newOptionMap  optionMap  Iterator  i  j  List  anonymous  newAnonymous  options  Option  option  String  description  name  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	96	96	1	replace	if(i.hasNext()  ||  option.getTriggers().contains(option))  {	  if(i.hasNext())    {    	non-compiled	[CE]  illegal  start  of  expression	56	None	replace
16	[BUG]  [BUGGY]  if(i.hasNext()  ||  options.getTriggers().contains(option))  {  [CE]  illegal  start  of  expression  [FE]                OptionException      [CONTEXT]      final  SortedMap  newOptionMap  =  new  TreeMap(ReverseStringComparator.getInstance());  final  Set  newPrefixes  =  new  HashSet();  for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {  final  Option  option  =  (Option)  i.next();  option.setParent(this);      [BUGGY]  if(i.hasNext()  ||  options.getTriggers().contains(option))  {  [BUGGY]      i.remove();  newAnonymous.add(option);  }  else  {  final  Set  triggers  =  option.getTriggers();  for  (Iterator  j  =  triggers.iterator();  j.hasNext();)  {  newOptionMap.put(j.next(),  option);  }    [CLASS]  GroupImpl  [METHOD]  <init>  [RETURN_TYPE]  String,int,int,boolean)  List  options  String  name  String  description  final  int  minimum  final  int  maximum  final  boolean  required  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  required  SortedMap  newOptionMap  optionMap  Iterator  i  j  List  anonymous  newAnonymous  options  Option  option  String  description  name  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	96	96	1	replace	if(i.hasNext()  ||  options.getTriggers().contains(option))  {	  if(i.hasNext())    {    	non-compiled	[CE]  illegal  start  of  expression	56	None	replace
17	[BUG]  [BUGGY]  final  Option  option  =  option.clone();  [CE]  illegal  start  of  expression  [FE]                OptionException      [CONTEXT]      final  SortedMap  newOptionMap  =  new  TreeMap(ReverseStringComparator.getInstance());  final  Set  newPrefixes  =  new  HashSet();  for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {  final  Option  option  =  (Option)  i.next();  option.setParent(this);      [BUGGY]  final  Option  option  =  option.clone();  [BUGGY]      if  (option  instanceof  Argument)  {  i.remove();  newAnonymous.add(option);  }  else  {  final  Set  triggers  =  option.getTriggers();  for  (Iterator  j  =  triggers.iterator();  j.hasNext();)  {  newOptionMap.put(j.next(),  option);  }    [CLASS]  GroupImpl  [METHOD]  <init>  [RETURN_TYPE]  String,int,int,boolean)  List  options  String  name  String  description  final  int  minimum  final  int  maximum  final  boolean  required  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  required  SortedMap  newOptionMap  optionMap  Iterator  i  j  List  anonymous  newAnonymous  options  Option  option  String  description  name  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	96	96	1	replace	final  Option  option  =  option.clone();	  final    Option    option    =    option.cloneTree();    	non-compiled	[CE]  illegal  start  of  expression	69	None	replace
18	[BUG]  [BUGGY]  final  Option  option  =  options.cloneTree();  [CE]  illegal  start  of  expression  [FE]                  OptionException      [CONTEXT]      final  SortedMap  newOptionMap  =  new  TreeMap(ReverseStringComparator.getInstance());  final  Set  newPrefixes  =  new  HashSet();  for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {  final  Option  option  =  (Option)  i.next();  option.setParent(this);      [BUGGY]  final  Option  option  =  options.cloneTree();  [BUGGY]      if  (option  instanceof  Argument)  {  i.remove();  newAnonymous.add(option);  }  else  {  final  Set  triggers  =  option.getTriggers();  for  (Iterator  j  =  triggers.iterator();  j.hasNext();)  {  newOptionMap.put(j.next(),  option);  }    [CLASS]  GroupImpl  [METHOD]  <init>  [RETURN_TYPE]  String,int,int,boolean)  List  options  String  name  String  description  final  int  minimum  final  int  maximum  final  boolean  required  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  required  SortedMap  newOptionMap  optionMap  Iterator  i  j  List  anonymous  newAnonymous  options  Option  option  String  description  name  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	96	96	1	replace	final  Option  option  =  options.cloneTree();	  final    Option    option    =    option.cloneTree();    	non-compiled	[CE]  illegal  start  of  expression	69	None	replace
19	[BUG]  [BUGGY]  if(!(option  instanceof  Option)&&  newAnonymous.contains(option.getAnonymous()))  {  [CE]  illegal  start  of  expression  [FE]                OptionException      [CONTEXT]      final  SortedMap  newOptionMap  =  new  TreeMap(ReverseStringComparator.getInstance());  final  Set  newPrefixes  =  new  HashSet();  for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {  final  Option  option  =  (Option)  i.next();  option.setParent(this);      [BUGGY]  if(!(option  instanceof  Option)&&  newAnonymous.contains(option.getAnonymous()))  {  [BUGGY]      i.remove();  newAnonymous.add(option);  }  else  {  final  Set  triggers  =  option.getTriggers();  for  (Iterator  j  =  triggers.iterator();  j.hasNext();)  {  newOptionMap.put(j.next(),  option);  }    [CLASS]  GroupImpl  [METHOD]  <init>  [RETURN_TYPE]  String,int,int,boolean)  List  options  String  name  String  description  final  int  minimum  final  int  maximum  final  boolean  required  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  required  SortedMap  newOptionMap  optionMap  Iterator  i  j  List  anonymous  newAnonymous  options  Option  option  String  description  name  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	96	96	1	replace	if(!(option  instanceof  Option)&&  newAnonymous.contains(option.getAnonymous()))  {	  if(!(option    instanceof    Option)&&    options.contains(option.getAnonymous()))    {    	non-compiled	[CE]  illegal  start  of  expression	47	None	replace
20	[BUG]  [BUGGY]  if(!(option  instanceof  Option)&&  newPrefixes.contains(option.getAnonymous()))  {  [CE]  illegal  start  of  expression  [FE]                  OptionException      [CONTEXT]      final  SortedMap  newOptionMap  =  new  TreeMap(ReverseStringComparator.getInstance());  final  Set  newPrefixes  =  new  HashSet();  for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {  final  Option  option  =  (Option)  i.next();  option.setParent(this);      [BUGGY]  if(!(option  instanceof  Option)&&  newPrefixes.contains(option.getAnonymous()))  {  [BUGGY]      i.remove();  newAnonymous.add(option);  }  else  {  final  Set  triggers  =  option.getTriggers();  for  (Iterator  j  =  triggers.iterator();  j.hasNext();)  {  newOptionMap.put(j.next(),  option);  }    [CLASS]  GroupImpl  [METHOD]  <init>  [RETURN_TYPE]  String,int,int,boolean)  List  options  String  name  String  description  final  int  minimum  final  int  maximum  final  boolean  required  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  required  SortedMap  newOptionMap  optionMap  Iterator  i  j  List  anonymous  newAnonymous  options  Option  option  String  description  name  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	96	96	1	replace	if(!(option  instanceof  Option)&&  newPrefixes.contains(option.getAnonymous()))  {	  if(!(option    instanceof    Option)&&    options.contains(option.getAnonymous()))    {    	non-compiled	[CE]  illegal  start  of  expression	47	None	replace
21	[BUG]  [BUGGY]  if(!(option  instanceof  Option)&&  options.contains(option.getDescription()))  {  [CE]  illegal  start  of  expression  [FE]                    OptionException      [CONTEXT]      final  SortedMap  newOptionMap  =  new  TreeMap(ReverseStringComparator.getInstance());  final  Set  newPrefixes  =  new  HashSet();  for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {  final  Option  option  =  (Option)  i.next();  option.setParent(this);      [BUGGY]  if(!(option  instanceof  Option)&&  options.contains(option.getDescription()))  {  [BUGGY]      i.remove();  newAnonymous.add(option);  }  else  {  final  Set  triggers  =  option.getTriggers();  for  (Iterator  j  =  triggers.iterator();  j.hasNext();)  {  newOptionMap.put(j.next(),  option);  }    [CLASS]  GroupImpl  [METHOD]  <init>  [RETURN_TYPE]  String,int,int,boolean)  List  options  String  name  String  description  final  int  minimum  final  int  maximum  final  boolean  required  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  required  SortedMap  newOptionMap  optionMap  Iterator  i  j  List  anonymous  newAnonymous  options  Option  option  String  description  name  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	96	96	1	replace	if(!(option  instanceof  Option)&&  options.contains(option.getDescription()))  {	  if(!(option    instanceof    Option)&&    options.contains(option.getAnonymous()))    {    	non-compiled	[CE]  illegal  start  of  expression	47	None	replace
22	[BUG]  [BUGGY]  Option  option  =  option.getOption(defaultName,  prefixes);  [CE]  illegal  start  of  expression  [FE]                OptionException      [CONTEXT]      final  SortedMap  newOptionMap  =  new  TreeMap(ReverseStringComparator.getInstance());  final  Set  newPrefixes  =  new  HashSet();  for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {  final  Option  option  =  (Option)  i.next();  option.setParent(this);      [BUGGY]  Option  option  =  option.getOption(defaultName,  prefixes);  [BUGGY]      if  (option  instanceof  Argument)  {  i.remove();  newAnonymous.add(option);  }  else  {  final  Set  triggers  =  option.getTriggers();  for  (Iterator  j  =  triggers.iterator();  j.hasNext();)  {  newOptionMap.put(j.next(),  option);  }    [CLASS]  GroupImpl  [METHOD]  <init>  [RETURN_TYPE]  String,int,int,boolean)  List  options  String  name  String  description  final  int  minimum  final  int  maximum  final  boolean  required  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  required  SortedMap  newOptionMap  optionMap  Iterator  i  j  List  anonymous  newAnonymous  options  Option  option  String  description  name  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	96	96	1	replace	Option  option  =  option.getOption(defaultName,  prefixes);	  Option    option    =    option.getOption(defaultName,    defaultPrefixes);    	non-compiled	[CE]  illegal  start  of  expression	45	None	replace
23	[BUG]  [BUGGY]  Option  option  =  option.getOption(defaultName,  newPrefixes);  [CE]  illegal  start  of  expression  [FE]                  OptionException      [CONTEXT]      final  SortedMap  newOptionMap  =  new  TreeMap(ReverseStringComparator.getInstance());  final  Set  newPrefixes  =  new  HashSet();  for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {  final  Option  option  =  (Option)  i.next();  option.setParent(this);      [BUGGY]  Option  option  =  option.getOption(defaultName,  newPrefixes);  [BUGGY]      if  (option  instanceof  Argument)  {  i.remove();  newAnonymous.add(option);  }  else  {  final  Set  triggers  =  option.getTriggers();  for  (Iterator  j  =  triggers.iterator();  j.hasNext();)  {  newOptionMap.put(j.next(),  option);  }    [CLASS]  GroupImpl  [METHOD]  <init>  [RETURN_TYPE]  String,int,int,boolean)  List  options  String  name  String  description  final  int  minimum  final  int  maximum  final  boolean  required  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  required  SortedMap  newOptionMap  optionMap  Iterator  i  j  List  anonymous  newAnonymous  options  Option  option  String  description  name  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	96	96	1	replace	Option  option  =  option.getOption(defaultName,  newPrefixes);	  Option    option    =    option.getOption(defaultName,    defaultPrefixes);    	non-compiled	[CE]  illegal  start  of  expression	45	None	replace
24	[BUG]  [BUGGY]  Option  option  =  option.getOption(defaultName,  defaultPrefixes,  required);  [CE]  illegal  start  of  expression  [FE]                    OptionException      [CONTEXT]      final  SortedMap  newOptionMap  =  new  TreeMap(ReverseStringComparator.getInstance());  final  Set  newPrefixes  =  new  HashSet();  for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {  final  Option  option  =  (Option)  i.next();  option.setParent(this);      [BUGGY]  Option  option  =  option.getOption(defaultName,  defaultPrefixes,  required);  [BUGGY]      if  (option  instanceof  Argument)  {  i.remove();  newAnonymous.add(option);  }  else  {  final  Set  triggers  =  option.getTriggers();  for  (Iterator  j  =  triggers.iterator();  j.hasNext();)  {  newOptionMap.put(j.next(),  option);  }    [CLASS]  GroupImpl  [METHOD]  <init>  [RETURN_TYPE]  String,int,int,boolean)  List  options  String  name  String  description  final  int  minimum  final  int  maximum  final  boolean  required  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  required  SortedMap  newOptionMap  optionMap  Iterator  i  j  List  anonymous  newAnonymous  options  Option  option  String  description  name  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	96	96	1	replace	Option  option  =  option.getOption(defaultName,  defaultPrefixes,  required);	  Option    option    =    option.getOption(defaultName,    defaultPrefixes);    	non-compiled	[CE]  illegal  start  of  expression	45	None	replace
25	[BUG]  [BUGGY]  Option  option  =  option.getOption(name,  defaultPrefixes);  [CE]  illegal  start  of  expression  [FE]                      OptionException      [CONTEXT]      final  SortedMap  newOptionMap  =  new  TreeMap(ReverseStringComparator.getInstance());  final  Set  newPrefixes  =  new  HashSet();  for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {  final  Option  option  =  (Option)  i.next();  option.setParent(this);      [BUGGY]  Option  option  =  option.getOption(name,  defaultPrefixes);  [BUGGY]      if  (option  instanceof  Argument)  {  i.remove();  newAnonymous.add(option);  }  else  {  final  Set  triggers  =  option.getTriggers();  for  (Iterator  j  =  triggers.iterator();  j.hasNext();)  {  newOptionMap.put(j.next(),  option);  }    [CLASS]  GroupImpl  [METHOD]  <init>  [RETURN_TYPE]  String,int,int,boolean)  List  options  String  name  String  description  final  int  minimum  final  int  maximum  final  boolean  required  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  required  SortedMap  newOptionMap  optionMap  Iterator  i  j  List  anonymous  newAnonymous  options  Option  option  String  description  name  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	96	96	1	replace	Option  option  =  option.getOption(name,  defaultPrefixes);	  Option    option    =    option.getOption(defaultName,    defaultPrefixes);    	non-compiled	[CE]  illegal  start  of  expression	45	None	replace
26	[BUG]  [BUGGY]  Option  option  =  option.getOption(name,  maximum);  [CE]  illegal  start  of  expression  [FE]            OptionException      [CONTEXT]      final  SortedMap  newOptionMap  =  new  TreeMap(ReverseStringComparator.getInstance());  final  Set  newPrefixes  =  new  HashSet();  for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {  final  Option  option  =  (Option)  i.next();  option.setParent(this);      [BUGGY]  Option  option  =  option.getOption(name,  maximum);  [BUGGY]      if  (option  instanceof  Argument)  {  i.remove();  newAnonymous.add(option);  }  else  {  final  Set  triggers  =  option.getTriggers();  for  (Iterator  j  =  triggers.iterator();  j.hasNext();)  {  newOptionMap.put(j.next(),  option);  }    [CLASS]  GroupImpl  [METHOD]  <init>  [RETURN_TYPE]  String,int,int,boolean)  List  options  String  name  String  description  final  int  minimum  final  int  maximum  final  boolean  required  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  required  SortedMap  newOptionMap  optionMap  Iterator  i  j  List  anonymous  newAnonymous  options  Option  option  String  description  name  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	96	96	1	replace	Option  option  =  option.getOption(name,  maximum);	  Option    option    =    option.getOption(name,    required);    	non-compiled	[CE]  illegal  start  of  expression	62	None	replace
27	[BUG]  [BUGGY]  Option  option  =  option.getOption(name,  minimum,  required);  [CE]  illegal  start  of  expression  [FE]              OptionException      [CONTEXT]      final  SortedMap  newOptionMap  =  new  TreeMap(ReverseStringComparator.getInstance());  final  Set  newPrefixes  =  new  HashSet();  for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {  final  Option  option  =  (Option)  i.next();  option.setParent(this);      [BUGGY]  Option  option  =  option.getOption(name,  minimum,  required);  [BUGGY]      if  (option  instanceof  Argument)  {  i.remove();  newAnonymous.add(option);  }  else  {  final  Set  triggers  =  option.getTriggers();  for  (Iterator  j  =  triggers.iterator();  j.hasNext();)  {  newOptionMap.put(j.next(),  option);  }    [CLASS]  GroupImpl  [METHOD]  <init>  [RETURN_TYPE]  String,int,int,boolean)  List  options  String  name  String  description  final  int  minimum  final  int  maximum  final  boolean  required  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  required  SortedMap  newOptionMap  optionMap  Iterator  i  j  List  anonymous  newAnonymous  options  Option  option  String  description  name  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	96	96	1	replace	Option  option  =  option.getOption(name,  minimum,  required);	  Option    option    =    option.getOption(name,    required);    	non-compiled	[CE]  illegal  start  of  expression	62	None	replace
28	[BUG]  [BUGGY]  Option  option  =  options.getOption(name,  required);  [CE]  illegal  start  of  expression  [FE]                OptionException      [CONTEXT]      final  SortedMap  newOptionMap  =  new  TreeMap(ReverseStringComparator.getInstance());  final  Set  newPrefixes  =  new  HashSet();  for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {  final  Option  option  =  (Option)  i.next();  option.setParent(this);      [BUGGY]  Option  option  =  options.getOption(name,  required);  [BUGGY]      if  (option  instanceof  Argument)  {  i.remove();  newAnonymous.add(option);  }  else  {  final  Set  triggers  =  option.getTriggers();  for  (Iterator  j  =  triggers.iterator();  j.hasNext();)  {  newOptionMap.put(j.next(),  option);  }    [CLASS]  GroupImpl  [METHOD]  <init>  [RETURN_TYPE]  String,int,int,boolean)  List  options  String  name  String  description  final  int  minimum  final  int  maximum  final  boolean  required  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  required  SortedMap  newOptionMap  optionMap  Iterator  i  j  List  anonymous  newAnonymous  options  Option  option  String  description  name  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	96	96	1	replace	Option  option  =  options.getOption(name,  required);	  Option    option    =    option.getOption(name,    required);    	non-compiled	[CE]  illegal  start  of  expression	62	None	replace
29	[BUG]  [BUGGY]  Option  option  =  option.getOption(this,  prefixes);  [CE]  illegal  start  of  expression  [FE]                OptionException      [CONTEXT]      final  SortedMap  newOptionMap  =  new  TreeMap(ReverseStringComparator.getInstance());  final  Set  newPrefixes  =  new  HashSet();  for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {  final  Option  option  =  (Option)  i.next();  option.setParent(this);      [BUGGY]  Option  option  =  option.getOption(this,  prefixes);  [BUGGY]      if  (option  instanceof  Argument)  {  i.remove();  newAnonymous.add(option);  }  else  {  final  Set  triggers  =  option.getTriggers();  for  (Iterator  j  =  triggers.iterator();  j.hasNext();)  {  newOptionMap.put(j.next(),  option);  }    [CLASS]  GroupImpl  [METHOD]  <init>  [RETURN_TYPE]  String,int,int,boolean)  List  options  String  name  String  description  final  int  minimum  final  int  maximum  final  boolean  required  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  required  SortedMap  newOptionMap  optionMap  Iterator  i  j  List  anonymous  newAnonymous  options  Option  option  String  description  name  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	96	96	1	replace	Option  option  =  option.getOption(this,  prefixes);	  Option    option    =    option.getOption(this,    newPrefixes);    	non-compiled	[CE]  illegal  start  of  expression	24	None	replace
30	[BUG]  [BUGGY]  Option  option  =  option.getOption(this,  newPrefixes,  required);  [CE]  illegal  start  of  expression  [FE]                  OptionException      [CONTEXT]      final  SortedMap  newOptionMap  =  new  TreeMap(ReverseStringComparator.getInstance());  final  Set  newPrefixes  =  new  HashSet();  for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {  final  Option  option  =  (Option)  i.next();  option.setParent(this);      [BUGGY]  Option  option  =  option.getOption(this,  newPrefixes,  required);  [BUGGY]      if  (option  instanceof  Argument)  {  i.remove();  newAnonymous.add(option);  }  else  {  final  Set  triggers  =  option.getTriggers();  for  (Iterator  j  =  triggers.iterator();  j.hasNext();)  {  newOptionMap.put(j.next(),  option);  }    [CLASS]  GroupImpl  [METHOD]  <init>  [RETURN_TYPE]  String,int,int,boolean)  List  options  String  name  String  description  final  int  minimum  final  int  maximum  final  boolean  required  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  required  SortedMap  newOptionMap  optionMap  Iterator  i  j  List  anonymous  newAnonymous  options  Option  option  String  description  name  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	96	96	1	replace	Option  option  =  option.getOption(this,  newPrefixes,  required);	  Option    option    =    option.getOption(this,    newPrefixes);    	non-compiled	[CE]  illegal  start  of  expression	24	None	replace
31	[BUG]  [BUGGY]  Option  option  =  options.getOption(this,  newPrefixes);  [CE]  illegal  start  of  expression  [FE]                    OptionException      [CONTEXT]      final  SortedMap  newOptionMap  =  new  TreeMap(ReverseStringComparator.getInstance());  final  Set  newPrefixes  =  new  HashSet();  for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {  final  Option  option  =  (Option)  i.next();  option.setParent(this);      [BUGGY]  Option  option  =  options.getOption(this,  newPrefixes);  [BUGGY]      if  (option  instanceof  Argument)  {  i.remove();  newAnonymous.add(option);  }  else  {  final  Set  triggers  =  option.getTriggers();  for  (Iterator  j  =  triggers.iterator();  j.hasNext();)  {  newOptionMap.put(j.next(),  option);  }    [CLASS]  GroupImpl  [METHOD]  <init>  [RETURN_TYPE]  String,int,int,boolean)  List  options  String  name  String  description  final  int  minimum  final  int  maximum  final  boolean  required  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  required  SortedMap  newOptionMap  optionMap  Iterator  i  j  List  anonymous  newAnonymous  options  Option  option  String  description  name  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	96	96	1	replace	Option  option  =  options.getOption(this,  newPrefixes);	  Option    option    =    option.getOption(this,    newPrefixes);    	non-compiled	[CE]  illegal  start  of  expression	24	None	replace
32	[BUG]  [BUGGY]  Option  option  =  newOptionMap.getOption(this,  newPrefixes);  [CE]  illegal  start  of  expression  [FE]                      OptionException      [CONTEXT]      final  SortedMap  newOptionMap  =  new  TreeMap(ReverseStringComparator.getInstance());  final  Set  newPrefixes  =  new  HashSet();  for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {  final  Option  option  =  (Option)  i.next();  option.setParent(this);      [BUGGY]  Option  option  =  newOptionMap.getOption(this,  newPrefixes);  [BUGGY]      if  (option  instanceof  Argument)  {  i.remove();  newAnonymous.add(option);  }  else  {  final  Set  triggers  =  option.getTriggers();  for  (Iterator  j  =  triggers.iterator();  j.hasNext();)  {  newOptionMap.put(j.next(),  option);  }    [CLASS]  GroupImpl  [METHOD]  <init>  [RETURN_TYPE]  String,int,int,boolean)  List  options  String  name  String  description  final  int  minimum  final  int  maximum  final  boolean  required  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  required  SortedMap  newOptionMap  optionMap  Iterator  i  j  List  anonymous  newAnonymous  options  Option  option  String  description  name  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	96	96	1	replace	Option  option  =  newOptionMap.getOption(this,  newPrefixes);	  Option    option    =    option.getOption(this,    newPrefixes);    	non-compiled	[CE]  illegal  start  of  expression	24	None	replace
33	[BUG]  [BUGGY]  if(option.hasNext()  &&!option.hasNext())  {  [CE]  illegal  start  of  expression  [FE]                  OptionException      [CONTEXT]      final  SortedMap  newOptionMap  =  new  TreeMap(ReverseStringComparator.getInstance());  final  Set  newPrefixes  =  new  HashSet();  for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {  final  Option  option  =  (Option)  i.next();  option.setParent(this);      [BUGGY]  if(option.hasNext()  &&!option.hasNext())  {  [BUGGY]      i.remove();  newAnonymous.add(option);  }  else  {  final  Set  triggers  =  option.getTriggers();  for  (Iterator  j  =  triggers.iterator();  j.hasNext();)  {  newOptionMap.put(j.next(),  option);  }    [CLASS]  GroupImpl  [METHOD]  <init>  [RETURN_TYPE]  String,int,int,boolean)  List  options  String  name  String  description  final  int  minimum  final  int  maximum  final  boolean  required  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  required  SortedMap  newOptionMap  optionMap  Iterator  i  j  List  anonymous  newAnonymous  options  Option  option  String  description  name  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	96	96	1	replace	if(option.hasNext()  &&!option.hasNext())  {	  if(option.hasNext()    ||!option.hasNext())    {    	non-compiled	[CE]  illegal  start  of  expression	40	None	replace
34	[BUG]  [BUGGY]  if(!option.hasNext()  ||!option.hasNext())  {  [CE]  illegal  start  of  expression  [FE]                    OptionException      [CONTEXT]      final  SortedMap  newOptionMap  =  new  TreeMap(ReverseStringComparator.getInstance());  final  Set  newPrefixes  =  new  HashSet();  for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {  final  Option  option  =  (Option)  i.next();  option.setParent(this);      [BUGGY]  if(!option.hasNext()  ||!option.hasNext())  {  [BUGGY]      i.remove();  newAnonymous.add(option);  }  else  {  final  Set  triggers  =  option.getTriggers();  for  (Iterator  j  =  triggers.iterator();  j.hasNext();)  {  newOptionMap.put(j.next(),  option);  }    [CLASS]  GroupImpl  [METHOD]  <init>  [RETURN_TYPE]  String,int,int,boolean)  List  options  String  name  String  description  final  int  minimum  final  int  maximum  final  boolean  required  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  required  SortedMap  newOptionMap  optionMap  Iterator  i  j  List  anonymous  newAnonymous  options  Option  option  String  description  name  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	96	96	1	replace	if(!option.hasNext()  ||!option.hasNext())  {	  if(option.hasNext()    ||!option.hasNext())    {    	non-compiled	[CE]  illegal  start  of  expression	40	None	replace
35	[BUG]  [BUGGY]  Option  option  =  option.getOption(newPrefixes);  [CE]  illegal  start  of  expression  [FE]            OptionException      [CONTEXT]      final  SortedMap  newOptionMap  =  new  TreeMap(ReverseStringComparator.getInstance());  final  Set  newPrefixes  =  new  HashSet();  for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {  final  Option  option  =  (Option)  i.next();  option.setParent(this);      [BUGGY]  Option  option  =  option.getOption(newPrefixes);  [BUGGY]      if  (option  instanceof  Argument)  {  i.remove();  newAnonymous.add(option);  }  else  {  final  Set  triggers  =  option.getTriggers();  for  (Iterator  j  =  triggers.iterator();  j.hasNext();)  {  newOptionMap.put(j.next(),  option);  }    [CLASS]  GroupImpl  [METHOD]  <init>  [RETURN_TYPE]  String,int,int,boolean)  List  options  String  name  String  description  final  int  minimum  final  int  maximum  final  boolean  required  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  required  SortedMap  newOptionMap  optionMap  Iterator  i  j  List  anonymous  newAnonymous  options  Option  option  String  description  name  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	96	96	1	replace	Option  option  =  option.getOption(newPrefixes);	  Option    option    =    option.getOption(prefixes);    	non-compiled	[CE]  illegal  start  of  expression	52	None	replace
36	[BUG]  [BUGGY]  Option  option  =  option.getOption(prefixes,  required);  [CE]  illegal  start  of  expression  [FE]              OptionException      [CONTEXT]      final  SortedMap  newOptionMap  =  new  TreeMap(ReverseStringComparator.getInstance());  final  Set  newPrefixes  =  new  HashSet();  for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {  final  Option  option  =  (Option)  i.next();  option.setParent(this);      [BUGGY]  Option  option  =  option.getOption(prefixes,  required);  [BUGGY]      if  (option  instanceof  Argument)  {  i.remove();  newAnonymous.add(option);  }  else  {  final  Set  triggers  =  option.getTriggers();  for  (Iterator  j  =  triggers.iterator();  j.hasNext();)  {  newOptionMap.put(j.next(),  option);  }    [CLASS]  GroupImpl  [METHOD]  <init>  [RETURN_TYPE]  String,int,int,boolean)  List  options  String  name  String  description  final  int  minimum  final  int  maximum  final  boolean  required  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  required  SortedMap  newOptionMap  optionMap  Iterator  i  j  List  anonymous  newAnonymous  options  Option  option  String  description  name  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	96	96	1	replace	Option  option  =  option.getOption(prefixes,  required);	  Option    option    =    option.getOption(prefixes);    	non-compiled	[CE]  illegal  start  of  expression	52	None	replace
37	[BUG]  [BUGGY]  Option  option  =  options.getOption(prefixes);  [CE]  illegal  start  of  expression  [FE]                OptionException      [CONTEXT]      final  SortedMap  newOptionMap  =  new  TreeMap(ReverseStringComparator.getInstance());  final  Set  newPrefixes  =  new  HashSet();  for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {  final  Option  option  =  (Option)  i.next();  option.setParent(this);      [BUGGY]  Option  option  =  options.getOption(prefixes);  [BUGGY]      if  (option  instanceof  Argument)  {  i.remove();  newAnonymous.add(option);  }  else  {  final  Set  triggers  =  option.getTriggers();  for  (Iterator  j  =  triggers.iterator();  j.hasNext();)  {  newOptionMap.put(j.next(),  option);  }    [CLASS]  GroupImpl  [METHOD]  <init>  [RETURN_TYPE]  String,int,int,boolean)  List  options  String  name  String  description  final  int  minimum  final  int  maximum  final  boolean  required  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  required  SortedMap  newOptionMap  optionMap  Iterator  i  j  List  anonymous  newAnonymous  options  Option  option  String  description  name  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	96	96	1	replace	Option  option  =  options.getOption(prefixes);	  Option    option    =    option.getOption(prefixes);    	non-compiled	[CE]  illegal  start  of  expression	52	None	replace
38	[BUG]  [BUGGY]  Option  option  =  options.getOption(description);  [CE]  illegal  start  of  expression  [FE]            OptionException      [CONTEXT]      final  SortedMap  newOptionMap  =  new  TreeMap(ReverseStringComparator.getInstance());  final  Set  newPrefixes  =  new  HashSet();  for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {  final  Option  option  =  (Option)  i.next();  option.setParent(this);      [BUGGY]  Option  option  =  options.getOption(description);  [BUGGY]      if  (option  instanceof  Argument)  {  i.remove();  newAnonymous.add(option);  }  else  {  final  Set  triggers  =  option.getTriggers();  for  (Iterator  j  =  triggers.iterator();  j.hasNext();)  {  newOptionMap.put(j.next(),  option);  }    [CLASS]  GroupImpl  [METHOD]  <init>  [RETURN_TYPE]  String,int,int,boolean)  List  options  String  name  String  description  final  int  minimum  final  int  maximum  final  boolean  required  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  required  SortedMap  newOptionMap  optionMap  Iterator  i  j  List  anonymous  newAnonymous  options  Option  option  String  description  name  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	96	96	1	replace	Option  option  =  options.getOption(description);	  Option    option    =    option.getOption(description);    	non-compiled	[CE]  illegal  start  of  expression	28	None	replace
39	[BUG]  [BUGGY]  option  =  option.getOption(name);  [CE]  illegal  start  of  expression  [FE]              OptionException      [CONTEXT]      final  SortedMap  newOptionMap  =  new  TreeMap(ReverseStringComparator.getInstance());  final  Set  newPrefixes  =  new  HashSet();  for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {  final  Option  option  =  (Option)  i.next();  option.setParent(this);      [BUGGY]  option  =  option.getOption(name);  [BUGGY]      if  (option  instanceof  Argument)  {  i.remove();  newAnonymous.add(option);  }  else  {  final  Set  triggers  =  option.getTriggers();  for  (Iterator  j  =  triggers.iterator();  j.hasNext();)  {  newOptionMap.put(j.next(),  option);  }    [CLASS]  GroupImpl  [METHOD]  <init>  [RETURN_TYPE]  String,int,int,boolean)  List  options  String  name  String  description  final  int  minimum  final  int  maximum  final  boolean  required  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  required  SortedMap  newOptionMap  optionMap  Iterator  i  j  List  anonymous  newAnonymous  options  Option  option  String  description  name  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	96	96	1	replace	option  =  option.getOption(name);	  Option    option    =    option.getOption(description);    	non-compiled	[CE]  illegal  start  of  expression	28	None	replace
40	[BUG]  [BUGGY]  final  Option  option  =  option.cloneOption(this);  [CE]  illegal  start  of  expression  [FE]                OptionException      [CONTEXT]      final  SortedMap  newOptionMap  =  new  TreeMap(ReverseStringComparator.getInstance());  final  Set  newPrefixes  =  new  HashSet();  for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {  final  Option  option  =  (Option)  i.next();  option.setParent(this);      [BUGGY]  final  Option  option  =  option.cloneOption(this);  [BUGGY]      if  (option  instanceof  Argument)  {  i.remove();  newAnonymous.add(option);  }  else  {  final  Set  triggers  =  option.getTriggers();  for  (Iterator  j  =  triggers.iterator();  j.hasNext();)  {  newOptionMap.put(j.next(),  option);  }    [CLASS]  GroupImpl  [METHOD]  <init>  [RETURN_TYPE]  String,int,int,boolean)  List  options  String  name  String  description  final  int  minimum  final  int  maximum  final  boolean  required  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  required  SortedMap  newOptionMap  optionMap  Iterator  i  j  List  anonymous  newAnonymous  options  Option  option  String  description  name  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	96	96	1	replace	final  Option  option  =  option.cloneOption(this);	  final    Option    option    =    option.cloneOption();    	non-compiled	[CE]  illegal  start  of  expression	41	None	replace
41	[BUG]  [BUGGY]  Option  option  =  options.getOption(this,  option);  [CE]  illegal  start  of  expression  [FE]            OptionException      [CONTEXT]      final  SortedMap  newOptionMap  =  new  TreeMap(ReverseStringComparator.getInstance());  final  Set  newPrefixes  =  new  HashSet();  for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {  final  Option  option  =  (Option)  i.next();  option.setParent(this);      [BUGGY]  Option  option  =  options.getOption(this,  option);  [BUGGY]      if  (option  instanceof  Argument)  {  i.remove();  newAnonymous.add(option);  }  else  {  final  Set  triggers  =  option.getTriggers();  for  (Iterator  j  =  triggers.iterator();  j.hasNext();)  {  newOptionMap.put(j.next(),  option);  }    [CLASS]  GroupImpl  [METHOD]  <init>  [RETURN_TYPE]  String,int,int,boolean)  List  options  String  name  String  description  final  int  minimum  final  int  maximum  final  boolean  required  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  required  SortedMap  newOptionMap  optionMap  Iterator  i  j  List  anonymous  newAnonymous  options  Option  option  String  description  name  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	96	96	1	replace	Option  option  =  options.getOption(this,  option);	  Option    option    =    option.getOption(this,    options);    	non-compiled	[CE]  illegal  start  of  expression	43	None	replace
42	[BUG]  [BUGGY]  Option  option  =  option.getOption(this,  i);  [CE]  illegal  start  of  expression  [FE]              OptionException      [CONTEXT]      final  SortedMap  newOptionMap  =  new  TreeMap(ReverseStringComparator.getInstance());  final  Set  newPrefixes  =  new  HashSet();  for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {  final  Option  option  =  (Option)  i.next();  option.setParent(this);      [BUGGY]  Option  option  =  option.getOption(this,  i);  [BUGGY]      if  (option  instanceof  Argument)  {  i.remove();  newAnonymous.add(option);  }  else  {  final  Set  triggers  =  option.getTriggers();  for  (Iterator  j  =  triggers.iterator();  j.hasNext();)  {  newOptionMap.put(j.next(),  option);  }    [CLASS]  GroupImpl  [METHOD]  <init>  [RETURN_TYPE]  String,int,int,boolean)  List  options  String  name  String  description  final  int  minimum  final  int  maximum  final  boolean  required  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  required  SortedMap  newOptionMap  optionMap  Iterator  i  j  List  anonymous  newAnonymous  options  Option  option  String  description  name  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	96	96	1	replace	Option  option  =  option.getOption(this,  i);	  Option    option    =    option.getOption(this,    options);    	non-compiled	[CE]  illegal  start  of  expression	43	None	replace
43	[BUG]  [BUGGY]  Option  option  =  option.getOption(name,  description,  minimum);  [CE]  illegal  start  of  expression  [FE]              OptionException      [CONTEXT]      final  SortedMap  newOptionMap  =  new  TreeMap(ReverseStringComparator.getInstance());  final  Set  newPrefixes  =  new  HashSet();  for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {  final  Option  option  =  (Option)  i.next();  option.setParent(this);      [BUGGY]  Option  option  =  option.getOption(name,  description,  minimum);  [BUGGY]      if  (option  instanceof  Argument)  {  i.remove();  newAnonymous.add(option);  }  else  {  final  Set  triggers  =  option.getTriggers();  for  (Iterator  j  =  triggers.iterator();  j.hasNext();)  {  newOptionMap.put(j.next(),  option);  }    [CLASS]  GroupImpl  [METHOD]  <init>  [RETURN_TYPE]  String,int,int,boolean)  List  options  String  name  String  description  final  int  minimum  final  int  maximum  final  boolean  required  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  required  SortedMap  newOptionMap  optionMap  Iterator  i  j  List  anonymous  newAnonymous  options  Option  option  String  description  name  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	96	96	1	replace	Option  option  =  option.getOption(name,  description,  minimum);	  Option    option    =    option.getOption(name,    description);    	non-compiled	[CE]  illegal  start  of  expression	63	None	replace
44	[BUG]  [BUGGY]  Option  option  =  option.getOption(name,  description,  required);  [CE]  illegal  start  of  expression  [FE]                OptionException      [CONTEXT]      final  SortedMap  newOptionMap  =  new  TreeMap(ReverseStringComparator.getInstance());  final  Set  newPrefixes  =  new  HashSet();  for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {  final  Option  option  =  (Option)  i.next();  option.setParent(this);      [BUGGY]  Option  option  =  option.getOption(name,  description,  required);  [BUGGY]      if  (option  instanceof  Argument)  {  i.remove();  newAnonymous.add(option);  }  else  {  final  Set  triggers  =  option.getTriggers();  for  (Iterator  j  =  triggers.iterator();  j.hasNext();)  {  newOptionMap.put(j.next(),  option);  }    [CLASS]  GroupImpl  [METHOD]  <init>  [RETURN_TYPE]  String,int,int,boolean)  List  options  String  name  String  description  final  int  minimum  final  int  maximum  final  boolean  required  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  required  SortedMap  newOptionMap  optionMap  Iterator  i  j  List  anonymous  newAnonymous  options  Option  option  String  description  name  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	96	96	1	replace	Option  option  =  option.getOption(name,  description,  required);	  Option    option    =    option.getOption(name,    description);    	non-compiled	[CE]  illegal  start  of  expression	63	None	replace
45	[BUG]  [BUGGY]  Option  option  =  options.getOption(name,  description);  [CE]  illegal  start  of  expression  [FE]                  OptionException      [CONTEXT]      final  SortedMap  newOptionMap  =  new  TreeMap(ReverseStringComparator.getInstance());  final  Set  newPrefixes  =  new  HashSet();  for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {  final  Option  option  =  (Option)  i.next();  option.setParent(this);      [BUGGY]  Option  option  =  options.getOption(name,  description);  [BUGGY]      if  (option  instanceof  Argument)  {  i.remove();  newAnonymous.add(option);  }  else  {  final  Set  triggers  =  option.getTriggers();  for  (Iterator  j  =  triggers.iterator();  j.hasNext();)  {  newOptionMap.put(j.next(),  option);  }    [CLASS]  GroupImpl  [METHOD]  <init>  [RETURN_TYPE]  String,int,int,boolean)  List  options  String  name  String  description  final  int  minimum  final  int  maximum  final  boolean  required  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  required  SortedMap  newOptionMap  optionMap  Iterator  i  j  List  anonymous  newAnonymous  options  Option  option  String  description  name  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	96	96	1	replace	Option  option  =  options.getOption(name,  description);	  Option    option    =    option.getOption(name,    description);    	non-compiled	[CE]  illegal  start  of  expression	63	None	replace
46	[BUG]  [BUGGY]  if(option.hasNext()  ||  option  instanceof  Option)  {  [CE]  illegal  start  of  expression  [FE]                  OptionException      [CONTEXT]      final  SortedMap  newOptionMap  =  new  TreeMap(ReverseStringComparator.getInstance());  final  Set  newPrefixes  =  new  HashSet();  for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {  final  Option  option  =  (Option)  i.next();  option.setParent(this);      [BUGGY]  if(option.hasNext()  ||  option  instanceof  Option)  {  [BUGGY]      i.remove();  newAnonymous.add(option);  }  else  {  final  Set  triggers  =  option.getTriggers();  for  (Iterator  j  =  triggers.iterator();  j.hasNext();)  {  newOptionMap.put(j.next(),  option);  }    [CLASS]  GroupImpl  [METHOD]  <init>  [RETURN_TYPE]  String,int,int,boolean)  List  options  String  name  String  description  final  int  minimum  final  int  maximum  final  boolean  required  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  required  SortedMap  newOptionMap  optionMap  Iterator  i  j  List  anonymous  newAnonymous  options  Option  option  String  description  name  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	96	96	1	replace	if(option.hasNext()  ||  option  instanceof  Option)  {	  if(!option.hasNext()    ||    option    instanceof    Option)    {    	non-compiled	[CE]  illegal  start  of  expression	27	None	replace
47	[BUG]  [BUGGY]  if(!option.hasNext()  &&  options  instanceof  Option)  {  [CE]  illegal  start  of  expression  [FE]                    OptionException      [CONTEXT]      final  SortedMap  newOptionMap  =  new  TreeMap(ReverseStringComparator.getInstance());  final  Set  newPrefixes  =  new  HashSet();  for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {  final  Option  option  =  (Option)  i.next();  option.setParent(this);      [BUGGY]  if(!option.hasNext()  &&  options  instanceof  Option)  {  [BUGGY]      i.remove();  newAnonymous.add(option);  }  else  {  final  Set  triggers  =  option.getTriggers();  for  (Iterator  j  =  triggers.iterator();  j.hasNext();)  {  newOptionMap.put(j.next(),  option);  }    [CLASS]  GroupImpl  [METHOD]  <init>  [RETURN_TYPE]  String,int,int,boolean)  List  options  String  name  String  description  final  int  minimum  final  int  maximum  final  boolean  required  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  required  SortedMap  newOptionMap  optionMap  Iterator  i  j  List  anonymous  newAnonymous  options  Option  option  String  description  name  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	96	96	1	replace	if(!option.hasNext()  &&  options  instanceof  Option)  {	  if(!option.hasNext()    ||    option    instanceof    Option)    {    	non-compiled	[CE]  illegal  start  of  expression	27	None	replace
48	[BUG]  [BUGGY]  final  Option  option  =  option.getOption(newPrefixes);  [CE]  illegal  start  of  expression  [FE]                      OptionException      [CONTEXT]      final  SortedMap  newOptionMap  =  new  TreeMap(ReverseStringComparator.getInstance());  final  Set  newPrefixes  =  new  HashSet();  for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {  final  Option  option  =  (Option)  i.next();  option.setParent(this);      [BUGGY]  final  Option  option  =  option.getOption(newPrefixes);  [BUGGY]      if  (option  instanceof  Argument)  {  i.remove();  newAnonymous.add(option);  }  else  {  final  Set  triggers  =  option.getTriggers();  for  (Iterator  j  =  triggers.iterator();  j.hasNext();)  {  newOptionMap.put(j.next(),  option);  }    [CLASS]  GroupImpl  [METHOD]  <init>  [RETURN_TYPE]  String,int,int,boolean)  List  options  String  name  String  description  final  int  minimum  final  int  maximum  final  boolean  required  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  required  SortedMap  newOptionMap  optionMap  Iterator  i  j  List  anonymous  newAnonymous  options  Option  option  String  description  name  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	96	96	1	replace	final  Option  option  =  option.getOption(newPrefixes);	  final    Option    option    =    option.getOption(prefixes);    	non-compiled	[CE]  illegal  start  of  expression	12	None	replace
49	[BUG]  [BUGGY]  final  Option  option  =  option.getOption(prefixes,  required);  [CE]  illegal  start  of  expression  [FE]                        OptionException      [CONTEXT]      final  SortedMap  newOptionMap  =  new  TreeMap(ReverseStringComparator.getInstance());  final  Set  newPrefixes  =  new  HashSet();  for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {  final  Option  option  =  (Option)  i.next();  option.setParent(this);      [BUGGY]  final  Option  option  =  option.getOption(prefixes,  required);  [BUGGY]      if  (option  instanceof  Argument)  {  i.remove();  newAnonymous.add(option);  }  else  {  final  Set  triggers  =  option.getTriggers();  for  (Iterator  j  =  triggers.iterator();  j.hasNext();)  {  newOptionMap.put(j.next(),  option);  }    [CLASS]  GroupImpl  [METHOD]  <init>  [RETURN_TYPE]  String,int,int,boolean)  List  options  String  name  String  description  final  int  minimum  final  int  maximum  final  boolean  required  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  required  SortedMap  newOptionMap  optionMap  Iterator  i  j  List  anonymous  newAnonymous  options  Option  option  String  description  name  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	96	96	1	replace	final  Option  option  =  option.getOption(prefixes,  required);	  final    Option    option    =    option.getOption(prefixes);    	non-compiled	[CE]  illegal  start  of  expression	12	None	replace
50	[BUG]  [BUGGY]  final  Option  option  =  option.getOption(defaultPrefixes);  [CE]  illegal  start  of  expression  [FE]                          OptionException      [CONTEXT]      final  SortedMap  newOptionMap  =  new  TreeMap(ReverseStringComparator.getInstance());  final  Set  newPrefixes  =  new  HashSet();  for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {  final  Option  option  =  (Option)  i.next();  option.setParent(this);      [BUGGY]  final  Option  option  =  option.getOption(defaultPrefixes);  [BUGGY]      if  (option  instanceof  Argument)  {  i.remove();  newAnonymous.add(option);  }  else  {  final  Set  triggers  =  option.getTriggers();  for  (Iterator  j  =  triggers.iterator();  j.hasNext();)  {  newOptionMap.put(j.next(),  option);  }    [CLASS]  GroupImpl  [METHOD]  <init>  [RETURN_TYPE]  String,int,int,boolean)  List  options  String  name  String  description  final  int  minimum  final  int  maximum  final  boolean  required  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  required  SortedMap  newOptionMap  optionMap  Iterator  i  j  List  anonymous  newAnonymous  options  Option  option  String  description  name  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	96	96	1	replace	final  Option  option  =  option.getOption(defaultPrefixes);	  final    Option    option    =    option.getOption(prefixes);    	non-compiled	[CE]  illegal  start  of  expression	12	None	replace
51	[BUG]  [BUGGY]  Option  option  =  options.getOption(this,  minimum);  [CE]  illegal  start  of  expression  [FE]              OptionException      [CONTEXT]      final  SortedMap  newOptionMap  =  new  TreeMap(ReverseStringComparator.getInstance());  final  Set  newPrefixes  =  new  HashSet();  for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {  final  Option  option  =  (Option)  i.next();  option.setParent(this);      [BUGGY]  Option  option  =  options.getOption(this,  minimum);  [BUGGY]      if  (option  instanceof  Argument)  {  i.remove();  newAnonymous.add(option);  }  else  {  final  Set  triggers  =  option.getTriggers();  for  (Iterator  j  =  triggers.iterator();  j.hasNext();)  {  newOptionMap.put(j.next(),  option);  }    [CLASS]  GroupImpl  [METHOD]  <init>  [RETURN_TYPE]  String,int,int,boolean)  List  options  String  name  String  description  final  int  minimum  final  int  maximum  final  boolean  required  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  required  SortedMap  newOptionMap  optionMap  Iterator  i  j  List  anonymous  newAnonymous  options  Option  option  String  description  name  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	96	96	1	replace	Option  option  =  options.getOption(this,  minimum);	  Option    option    =    options.getOption(this);    	non-compiled	[CE]  illegal  start  of  expression	23	None	replace
52	[BUG]  [BUGGY]  Option  option  =  options.getOption(this,  i);  [CE]  illegal  start  of  expression  [FE]                OptionException      [CONTEXT]      final  SortedMap  newOptionMap  =  new  TreeMap(ReverseStringComparator.getInstance());  final  Set  newPrefixes  =  new  HashSet();  for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {  final  Option  option  =  (Option)  i.next();  option.setParent(this);      [BUGGY]  Option  option  =  options.getOption(this,  i);  [BUGGY]      if  (option  instanceof  Argument)  {  i.remove();  newAnonymous.add(option);  }  else  {  final  Set  triggers  =  option.getTriggers();  for  (Iterator  j  =  triggers.iterator();  j.hasNext();)  {  newOptionMap.put(j.next(),  option);  }    [CLASS]  GroupImpl  [METHOD]  <init>  [RETURN_TYPE]  String,int,int,boolean)  List  options  String  name  String  description  final  int  minimum  final  int  maximum  final  boolean  required  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  required  SortedMap  newOptionMap  optionMap  Iterator  i  j  List  anonymous  newAnonymous  options  Option  option  String  description  name  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	96	96	1	replace	Option  option  =  options.getOption(this,  i);	  Option    option    =    options.getOption(this);    	non-compiled	[CE]  illegal  start  of  expression	23	None	replace
53	[BUG]  [BUGGY]  option  =(Option)option.getAnonymousValue();  [CE]  illegal  start  of  expression  [FE]                      OptionException      [CONTEXT]      final  SortedMap  newOptionMap  =  new  TreeMap(ReverseStringComparator.getInstance());  final  Set  newPrefixes  =  new  HashSet();  for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {  final  Option  option  =  (Option)  i.next();  option.setParent(this);      [BUGGY]  option  =(Option)option.getAnonymousValue();  [BUGGY]      if  (option  instanceof  Argument)  {  i.remove();  newAnonymous.add(option);  }  else  {  final  Set  triggers  =  option.getTriggers();  for  (Iterator  j  =  triggers.iterator();  j.hasNext();)  {  newOptionMap.put(j.next(),  option);  }    [CLASS]  GroupImpl  [METHOD]  <init>  [RETURN_TYPE]  String,int,int,boolean)  List  options  String  name  String  description  final  int  minimum  final  int  maximum  final  boolean  required  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  required  SortedMap  newOptionMap  optionMap  Iterator  i  j  List  anonymous  newAnonymous  options  Option  option  String  description  name  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	96	96	1	replace	option  =(Option)option.getAnonymousValue();	  Option    option    =(Option)option.getAnonymousValue();    	non-compiled	[CE]  illegal  start  of  expression	4	None	replace
54	[BUG]  [BUGGY]  final  Option  option  =  option.getOption(this,  minimum);  [CE]  illegal  start  of  expression  [FE]                OptionException      [CONTEXT]      final  SortedMap  newOptionMap  =  new  TreeMap(ReverseStringComparator.getInstance());  final  Set  newPrefixes  =  new  HashSet();  for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {  final  Option  option  =  (Option)  i.next();  option.setParent(this);      [BUGGY]  final  Option  option  =  option.getOption(this,  minimum);  [BUGGY]      if  (option  instanceof  Argument)  {  i.remove();  newAnonymous.add(option);  }  else  {  final  Set  triggers  =  option.getTriggers();  for  (Iterator  j  =  triggers.iterator();  j.hasNext();)  {  newOptionMap.put(j.next(),  option);  }    [CLASS]  GroupImpl  [METHOD]  <init>  [RETURN_TYPE]  String,int,int,boolean)  List  options  String  name  String  description  final  int  minimum  final  int  maximum  final  boolean  required  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  required  SortedMap  newOptionMap  optionMap  Iterator  i  j  List  anonymous  newAnonymous  options  Option  option  String  description  name  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	96	96	1	replace	final  Option  option  =  option.getOption(this,  minimum);	  final    Option    option    =    option.getOption(this);    	non-compiled	[CE]  illegal  start  of  expression	9	None	replace
55	[BUG]  [BUGGY]  final  Option  option  =  options.getOption(this);  [CE]  illegal  start  of  expression  [FE]                  OptionException      [CONTEXT]      final  SortedMap  newOptionMap  =  new  TreeMap(ReverseStringComparator.getInstance());  final  Set  newPrefixes  =  new  HashSet();  for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {  final  Option  option  =  (Option)  i.next();  option.setParent(this);      [BUGGY]  final  Option  option  =  options.getOption(this);  [BUGGY]      if  (option  instanceof  Argument)  {  i.remove();  newAnonymous.add(option);  }  else  {  final  Set  triggers  =  option.getTriggers();  for  (Iterator  j  =  triggers.iterator();  j.hasNext();)  {  newOptionMap.put(j.next(),  option);  }    [CLASS]  GroupImpl  [METHOD]  <init>  [RETURN_TYPE]  String,int,int,boolean)  List  options  String  name  String  description  final  int  minimum  final  int  maximum  final  boolean  required  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  required  SortedMap  newOptionMap  optionMap  Iterator  i  j  List  anonymous  newAnonymous  options  Option  option  String  description  name  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	96	96	1	replace	final  Option  option  =  options.getOption(this);	  final    Option    option    =    option.getOption(this);    	non-compiled	[CE]  illegal  start  of  expression	9	None	replace
56	[BUG]  [BUGGY]  final  Option  option  =  option.getOption(this,  description);  [CE]  illegal  start  of  expression  [FE]                    OptionException      [CONTEXT]      final  SortedMap  newOptionMap  =  new  TreeMap(ReverseStringComparator.getInstance());  final  Set  newPrefixes  =  new  HashSet();  for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {  final  Option  option  =  (Option)  i.next();  option.setParent(this);      [BUGGY]  final  Option  option  =  option.getOption(this,  description);  [BUGGY]      if  (option  instanceof  Argument)  {  i.remove();  newAnonymous.add(option);  }  else  {  final  Set  triggers  =  option.getTriggers();  for  (Iterator  j  =  triggers.iterator();  j.hasNext();)  {  newOptionMap.put(j.next(),  option);  }    [CLASS]  GroupImpl  [METHOD]  <init>  [RETURN_TYPE]  String,int,int,boolean)  List  options  String  name  String  description  final  int  minimum  final  int  maximum  final  boolean  required  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  required  SortedMap  newOptionMap  optionMap  Iterator  i  j  List  anonymous  newAnonymous  options  Option  option  String  description  name  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	96	96	1	replace	final  Option  option  =  option.getOption(this,  description);	  final    Option    option    =    option.getOption(this);    	non-compiled	[CE]  illegal  start  of  expression	9	None	replace
57	[BUG]  [BUGGY]  if(!(option  instanceof  Option)&&  newAnonymous.contains(option.getName()))  {  [CE]  illegal  start  of  expression  [FE]                  OptionException      [CONTEXT]      final  SortedMap  newOptionMap  =  new  TreeMap(ReverseStringComparator.getInstance());  final  Set  newPrefixes  =  new  HashSet();  for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {  final  Option  option  =  (Option)  i.next();  option.setParent(this);      [BUGGY]  if(!(option  instanceof  Option)&&  newAnonymous.contains(option.getName()))  {  [BUGGY]      i.remove();  newAnonymous.add(option);  }  else  {  final  Set  triggers  =  option.getTriggers();  for  (Iterator  j  =  triggers.iterator();  j.hasNext();)  {  newOptionMap.put(j.next(),  option);  }    [CLASS]  GroupImpl  [METHOD]  <init>  [RETURN_TYPE]  String,int,int,boolean)  List  options  String  name  String  description  final  int  minimum  final  int  maximum  final  boolean  required  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  required  SortedMap  newOptionMap  optionMap  Iterator  i  j  List  anonymous  newAnonymous  options  Option  option  String  description  name  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	96	96	1	replace	if(!(option  instanceof  Option)&&  newAnonymous.contains(option.getName()))  {	  if(!(option    instanceof    Option)&&    i.hasNext())    {    	non-compiled	[CE]  illegal  start  of  expression	65	None	replace
58	[BUG]  [BUGGY]  if(!(i  instanceof  Option)&&  option.hasNext())  {  [CE]  illegal  start  of  expression  [FE]                    OptionException      [CONTEXT]      final  SortedMap  newOptionMap  =  new  TreeMap(ReverseStringComparator.getInstance());  final  Set  newPrefixes  =  new  HashSet();  for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {  final  Option  option  =  (Option)  i.next();  option.setParent(this);      [BUGGY]  if(!(i  instanceof  Option)&&  option.hasNext())  {  [BUGGY]      i.remove();  newAnonymous.add(option);  }  else  {  final  Set  triggers  =  option.getTriggers();  for  (Iterator  j  =  triggers.iterator();  j.hasNext();)  {  newOptionMap.put(j.next(),  option);  }    [CLASS]  GroupImpl  [METHOD]  <init>  [RETURN_TYPE]  String,int,int,boolean)  List  options  String  name  String  description  final  int  minimum  final  int  maximum  final  boolean  required  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  required  SortedMap  newOptionMap  optionMap  Iterator  i  j  List  anonymous  newAnonymous  options  Option  option  String  description  name  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	96	96	1	replace	if(!(i  instanceof  Option)&&  option.hasNext())  {	  if(!(option    instanceof    Option)&&    i.hasNext())    {    	non-compiled	[CE]  illegal  start  of  expression	65	None	replace
59	[BUG]  [BUGGY]  if(!(option  instanceof  Option)&&  options.hasNext())  {  [CE]  illegal  start  of  expression  [FE]                      OptionException      [CONTEXT]      final  SortedMap  newOptionMap  =  new  TreeMap(ReverseStringComparator.getInstance());  final  Set  newPrefixes  =  new  HashSet();  for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {  final  Option  option  =  (Option)  i.next();  option.setParent(this);      [BUGGY]  if(!(option  instanceof  Option)&&  options.hasNext())  {  [BUGGY]      i.remove();  newAnonymous.add(option);  }  else  {  final  Set  triggers  =  option.getTriggers();  for  (Iterator  j  =  triggers.iterator();  j.hasNext();)  {  newOptionMap.put(j.next(),  option);  }    [CLASS]  GroupImpl  [METHOD]  <init>  [RETURN_TYPE]  String,int,int,boolean)  List  options  String  name  String  description  final  int  minimum  final  int  maximum  final  boolean  required  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  required  SortedMap  newOptionMap  optionMap  Iterator  i  j  List  anonymous  newAnonymous  options  Option  option  String  description  name  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	96	96	1	replace	if(!(option  instanceof  Option)&&  options.hasNext())  {	  if(!(option    instanceof    Option)&&    i.hasNext())    {    	non-compiled	[CE]  illegal  start  of  expression	65	None	replace
60	[BUG]  [BUGGY]  if(!(i.hasNext()  instanceof  Option)&&  option.hasNext())  {  [CE]  illegal  start  of  expression  [FE]                        OptionException      [CONTEXT]      final  SortedMap  newOptionMap  =  new  TreeMap(ReverseStringComparator.getInstance());  final  Set  newPrefixes  =  new  HashSet();  for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {  final  Option  option  =  (Option)  i.next();  option.setParent(this);      [BUGGY]  if(!(i.hasNext()  instanceof  Option)&&  option.hasNext())  {  [BUGGY]      i.remove();  newAnonymous.add(option);  }  else  {  final  Set  triggers  =  option.getTriggers();  for  (Iterator  j  =  triggers.iterator();  j.hasNext();)  {  newOptionMap.put(j.next(),  option);  }    [CLASS]  GroupImpl  [METHOD]  <init>  [RETURN_TYPE]  String,int,int,boolean)  List  options  String  name  String  description  final  int  minimum  final  int  maximum  final  boolean  required  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  required  SortedMap  newOptionMap  optionMap  Iterator  i  j  List  anonymous  newAnonymous  options  Option  option  String  description  name  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	96	96	1	replace	if(!(i.hasNext()  instanceof  Option)&&  option.hasNext())  {	  if(!(option    instanceof    Option)&&    i.hasNext())    {    	non-compiled	[CE]  illegal  start  of  expression	65	None	replace
61	[BUG]  [BUGGY]  if(!option.hasNext())  {  [CE]  illegal  start  of  expression  [FE]                OptionException      [CONTEXT]      final  SortedMap  newOptionMap  =  new  TreeMap(ReverseStringComparator.getInstance());  final  Set  newPrefixes  =  new  HashSet();  for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {  final  Option  option  =  (Option)  i.next();  option.setParent(this);      [BUGGY]  if(!option.hasNext())  {  [BUGGY]      i.remove();  newAnonymous.add(option);  }  else  {  final  Set  triggers  =  option.getTriggers();  for  (Iterator  j  =  triggers.iterator();  j.hasNext();)  {  newOptionMap.put(j.next(),  option);  }    [CLASS]  GroupImpl  [METHOD]  <init>  [RETURN_TYPE]  String,int,int,boolean)  List  options  String  name  String  description  final  int  minimum  final  int  maximum  final  boolean  required  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  required  SortedMap  newOptionMap  optionMap  Iterator  i  j  List  anonymous  newAnonymous  options  Option  option  String  description  name  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	96	96	1	replace	if(!option.hasNext())  {	  if(!(i.hasNext()))    {    	non-compiled	[CE]  illegal  start  of  expression	64	None	replace
62	[BUG]  [BUGGY]  if(!(i.hasNext())&&  options.contains(option.getTriggers()))  {  [CE]  illegal  start  of  expression  [FE]                  OptionException      [CONTEXT]      final  SortedMap  newOptionMap  =  new  TreeMap(ReverseStringComparator.getInstance());  final  Set  newPrefixes  =  new  HashSet();  for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {  final  Option  option  =  (Option)  i.next();  option.setParent(this);      [BUGGY]  if(!(i.hasNext())&&  options.contains(option.getTriggers()))  {  [BUGGY]      i.remove();  newAnonymous.add(option);  }  else  {  final  Set  triggers  =  option.getTriggers();  for  (Iterator  j  =  triggers.iterator();  j.hasNext();)  {  newOptionMap.put(j.next(),  option);  }    [CLASS]  GroupImpl  [METHOD]  <init>  [RETURN_TYPE]  String,int,int,boolean)  List  options  String  name  String  description  final  int  minimum  final  int  maximum  final  boolean  required  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  required  SortedMap  newOptionMap  optionMap  Iterator  i  j  List  anonymous  newAnonymous  options  Option  option  String  description  name  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	96	96	1	replace	if(!(i.hasNext())&&  options.contains(option.getTriggers()))  {	  if(!(i.hasNext()))    {    	non-compiled	[CE]  illegal  start  of  expression	64	None	replace
63	[BUG]  [BUGGY]  if(!(i.hasNext()  ||  option.getTriggers().contains(option)))  {  [CE]  illegal  start  of  expression  [FE]                    OptionException      [CONTEXT]      final  SortedMap  newOptionMap  =  new  TreeMap(ReverseStringComparator.getInstance());  final  Set  newPrefixes  =  new  HashSet();  for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {  final  Option  option  =  (Option)  i.next();  option.setParent(this);      [BUGGY]  if(!(i.hasNext()  ||  option.getTriggers().contains(option)))  {  [BUGGY]      i.remove();  newAnonymous.add(option);  }  else  {  final  Set  triggers  =  option.getTriggers();  for  (Iterator  j  =  triggers.iterator();  j.hasNext();)  {  newOptionMap.put(j.next(),  option);  }    [CLASS]  GroupImpl  [METHOD]  <init>  [RETURN_TYPE]  String,int,int,boolean)  List  options  String  name  String  description  final  int  minimum  final  int  maximum  final  boolean  required  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  required  SortedMap  newOptionMap  optionMap  Iterator  i  j  List  anonymous  newAnonymous  options  Option  option  String  description  name  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	96	96	1	replace	if(!(i.hasNext()  ||  option.getTriggers().contains(option)))  {	  if(!(i.hasNext()))    {    	non-compiled	[CE]  illegal  start  of  expression	64	None	replace
64	[BUG]  [BUGGY]  Option  option  =  option.getOption(this,  name);  [CE]  illegal  start  of  expression  [FE]            OptionException      [CONTEXT]      final  SortedMap  newOptionMap  =  new  TreeMap(ReverseStringComparator.getInstance());  final  Set  newPrefixes  =  new  HashSet();  for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {  final  Option  option  =  (Option)  i.next();  option.setParent(this);      [BUGGY]  Option  option  =  option.getOption(this,  name);  [BUGGY]      if  (option  instanceof  Argument)  {  i.remove();  newAnonymous.add(option);  }  else  {  final  Set  triggers  =  option.getTriggers();  for  (Iterator  j  =  triggers.iterator();  j.hasNext();)  {  newOptionMap.put(j.next(),  option);  }    [CLASS]  GroupImpl  [METHOD]  <init>  [RETURN_TYPE]  String,int,int,boolean)  List  options  String  name  String  description  final  int  minimum  final  int  maximum  final  boolean  required  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  required  SortedMap  newOptionMap  optionMap  Iterator  i  j  List  anonymous  newAnonymous  options  Option  option  String  description  name  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	96	96	1	replace	Option  option  =  option.getOption(this,  name);	  Option    option    =    option.getOption(this,    description);    	non-compiled	[CE]  illegal  start  of  expression	57	None	replace
65	[BUG]  [BUGGY]  Option  option  =  options.getOption(this,  description);  [CE]  illegal  start  of  expression  [FE]              OptionException      [CONTEXT]      final  SortedMap  newOptionMap  =  new  TreeMap(ReverseStringComparator.getInstance());  final  Set  newPrefixes  =  new  HashSet();  for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {  final  Option  option  =  (Option)  i.next();  option.setParent(this);      [BUGGY]  Option  option  =  options.getOption(this,  description);  [BUGGY]      if  (option  instanceof  Argument)  {  i.remove();  newAnonymous.add(option);  }  else  {  final  Set  triggers  =  option.getTriggers();  for  (Iterator  j  =  triggers.iterator();  j.hasNext();)  {  newOptionMap.put(j.next(),  option);  }    [CLASS]  GroupImpl  [METHOD]  <init>  [RETURN_TYPE]  String,int,int,boolean)  List  options  String  name  String  description  final  int  minimum  final  int  maximum  final  boolean  required  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  required  SortedMap  newOptionMap  optionMap  Iterator  i  j  List  anonymous  newAnonymous  options  Option  option  String  description  name  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	96	96	1	replace	Option  option  =  options.getOption(this,  description);	  Option    option    =    option.getOption(this,    description);    	non-compiled	[CE]  illegal  start  of  expression	57	None	replace
66	[BUG]  [BUGGY]  Option  option  =  this.options.getOption(this,  description);  [CE]  illegal  start  of  expression  [FE]                OptionException      [CONTEXT]      final  SortedMap  newOptionMap  =  new  TreeMap(ReverseStringComparator.getInstance());  final  Set  newPrefixes  =  new  HashSet();  for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {  final  Option  option  =  (Option)  i.next();  option.setParent(this);      [BUGGY]  Option  option  =  this.options.getOption(this,  description);  [BUGGY]      if  (option  instanceof  Argument)  {  i.remove();  newAnonymous.add(option);  }  else  {  final  Set  triggers  =  option.getTriggers();  for  (Iterator  j  =  triggers.iterator();  j.hasNext();)  {  newOptionMap.put(j.next(),  option);  }    [CLASS]  GroupImpl  [METHOD]  <init>  [RETURN_TYPE]  String,int,int,boolean)  List  options  String  name  String  description  final  int  minimum  final  int  maximum  final  boolean  required  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  required  SortedMap  newOptionMap  optionMap  Iterator  i  j  List  anonymous  newAnonymous  options  Option  option  String  description  name  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	96	96	1	replace	Option  option  =  this.options.getOption(this,  description);	  Option    option    =    option.getOption(this,    description);    	non-compiled	[CE]  illegal  start  of  expression	57	None	replace
67	[BUG]  [BUGGY]  Option  option  =  option.getOption(this,  description,  minimum);  [CE]  illegal  start  of  expression  [FE]                  OptionException      [CONTEXT]      final  SortedMap  newOptionMap  =  new  TreeMap(ReverseStringComparator.getInstance());  final  Set  newPrefixes  =  new  HashSet();  for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {  final  Option  option  =  (Option)  i.next();  option.setParent(this);      [BUGGY]  Option  option  =  option.getOption(this,  description,  minimum);  [BUGGY]      if  (option  instanceof  Argument)  {  i.remove();  newAnonymous.add(option);  }  else  {  final  Set  triggers  =  option.getTriggers();  for  (Iterator  j  =  triggers.iterator();  j.hasNext();)  {  newOptionMap.put(j.next(),  option);  }    [CLASS]  GroupImpl  [METHOD]  <init>  [RETURN_TYPE]  String,int,int,boolean)  List  options  String  name  String  description  final  int  minimum  final  int  maximum  final  boolean  required  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  required  SortedMap  newOptionMap  optionMap  Iterator  i  j  List  anonymous  newAnonymous  options  Option  option  String  description  name  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	96	96	1	replace	Option  option  =  option.getOption(this,  description,  minimum);	  Option    option    =    option.getOption(this,    description);    	non-compiled	[CE]  illegal  start  of  expression	57	None	replace
68	[BUG]  [BUGGY]  if(i.hasNext()  instanceof  Option)  {  [CE]  illegal  start  of  expression  [FE]                OptionException      [CONTEXT]      final  SortedMap  newOptionMap  =  new  TreeMap(ReverseStringComparator.getInstance());  final  Set  newPrefixes  =  new  HashSet();  for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {  final  Option  option  =  (Option)  i.next();  option.setParent(this);      [BUGGY]  if(i.hasNext()  instanceof  Option)  {  [BUGGY]      i.remove();  newAnonymous.add(option);  }  else  {  final  Set  triggers  =  option.getTriggers();  for  (Iterator  j  =  triggers.iterator();  j.hasNext();)  {  newOptionMap.put(j.next(),  option);  }    [CLASS]  GroupImpl  [METHOD]  <init>  [RETURN_TYPE]  String,int,int,boolean)  List  options  String  name  String  description  final  int  minimum  final  int  maximum  final  boolean  required  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  required  SortedMap  newOptionMap  optionMap  Iterator  i  j  List  anonymous  newAnonymous  options  Option  option  String  description  name  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	96	96	1	replace	if(i.hasNext()  instanceof  Option)  {	  if(!(i.hasNext()    instanceof    Option))    {    	non-compiled	[CE]  illegal  start  of  expression	14	None	replace
69	[BUG]  [BUGGY]  if(!(i.hasNext()  instanceof  Option)&&  option.getTriggers().contains(option.getTriggers()))  {  [CE]  illegal  start  of  expression  [FE]                  OptionException      [CONTEXT]      final  SortedMap  newOptionMap  =  new  TreeMap(ReverseStringComparator.getInstance());  final  Set  newPrefixes  =  new  HashSet();  for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {  final  Option  option  =  (Option)  i.next();  option.setParent(this);      [BUGGY]  if(!(i.hasNext()  instanceof  Option)&&  option.getTriggers().contains(option.getTriggers()))  {  [BUGGY]      i.remove();  newAnonymous.add(option);  }  else  {  final  Set  triggers  =  option.getTriggers();  for  (Iterator  j  =  triggers.iterator();  j.hasNext();)  {  newOptionMap.put(j.next(),  option);  }    [CLASS]  GroupImpl  [METHOD]  <init>  [RETURN_TYPE]  String,int,int,boolean)  List  options  String  name  String  description  final  int  minimum  final  int  maximum  final  boolean  required  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  required  SortedMap  newOptionMap  optionMap  Iterator  i  j  List  anonymous  newAnonymous  options  Option  option  String  description  name  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	96	96	1	replace	if(!(i.hasNext()  instanceof  Option)&&  option.getTriggers().contains(option.getTriggers()))  {	  if(!(i.hasNext()    instanceof    Option))    {    	non-compiled	[CE]  illegal  start  of  expression	14	None	replace
70	[BUG]  [BUGGY]  if(!(i.hasNext()  instanceof  Option)&&  options.getTriggers().contains(option.getTriggers()))  {  [CE]  illegal  start  of  expression  [FE]                    OptionException      [CONTEXT]      final  SortedMap  newOptionMap  =  new  TreeMap(ReverseStringComparator.getInstance());  final  Set  newPrefixes  =  new  HashSet();  for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {  final  Option  option  =  (Option)  i.next();  option.setParent(this);      [BUGGY]  if(!(i.hasNext()  instanceof  Option)&&  options.getTriggers().contains(option.getTriggers()))  {  [BUGGY]      i.remove();  newAnonymous.add(option);  }  else  {  final  Set  triggers  =  option.getTriggers();  for  (Iterator  j  =  triggers.iterator();  j.hasNext();)  {  newOptionMap.put(j.next(),  option);  }    [CLASS]  GroupImpl  [METHOD]  <init>  [RETURN_TYPE]  String,int,int,boolean)  List  options  String  name  String  description  final  int  minimum  final  int  maximum  final  boolean  required  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  required  SortedMap  newOptionMap  optionMap  Iterator  i  j  List  anonymous  newAnonymous  options  Option  option  String  description  name  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	96	96	1	replace	if(!(i.hasNext()  instanceof  Option)&&  options.getTriggers().contains(option.getTriggers()))  {	  if(!(i.hasNext()    instanceof    Option))    {    	non-compiled	[CE]  illegal  start  of  expression	14	None	replace
71	[BUG]  [BUGGY]  if(!(i.hasNext()  instanceof  Option)&&  options.contains(option.getDescription()))  {  [CE]  illegal  start  of  expression  [FE]                      OptionException      [CONTEXT]      final  SortedMap  newOptionMap  =  new  TreeMap(ReverseStringComparator.getInstance());  final  Set  newPrefixes  =  new  HashSet();  for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {  final  Option  option  =  (Option)  i.next();  option.setParent(this);      [BUGGY]  if(!(i.hasNext()  instanceof  Option)&&  options.contains(option.getDescription()))  {  [BUGGY]      i.remove();  newAnonymous.add(option);  }  else  {  final  Set  triggers  =  option.getTriggers();  for  (Iterator  j  =  triggers.iterator();  j.hasNext();)  {  newOptionMap.put(j.next(),  option);  }    [CLASS]  GroupImpl  [METHOD]  <init>  [RETURN_TYPE]  String,int,int,boolean)  List  options  String  name  String  description  final  int  minimum  final  int  maximum  final  boolean  required  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  required  SortedMap  newOptionMap  optionMap  Iterator  i  j  List  anonymous  newAnonymous  options  Option  option  String  description  name  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	96	96	1	replace	if(!(i.hasNext()  instanceof  Option)&&  options.contains(option.getDescription()))  {	  if(!(i.hasNext()    instanceof    Option))    {    	non-compiled	[CE]  illegal  start  of  expression	14	None	replace
72	[BUG]  [BUGGY]  option  =  options.getOption(name,  description);  [CE]  illegal  start  of  expression  [FE]                OptionException      [CONTEXT]      final  SortedMap  newOptionMap  =  new  TreeMap(ReverseStringComparator.getInstance());  final  Set  newPrefixes  =  new  HashSet();  for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {  final  Option  option  =  (Option)  i.next();  option.setParent(this);      [BUGGY]  option  =  options.getOption(name,  description);  [BUGGY]      if  (option  instanceof  Argument)  {  i.remove();  newAnonymous.add(option);  }  else  {  final  Set  triggers  =  option.getTriggers();  for  (Iterator  j  =  triggers.iterator();  j.hasNext();)  {  newOptionMap.put(j.next(),  option);  }    [CLASS]  GroupImpl  [METHOD]  <init>  [RETURN_TYPE]  String,int,int,boolean)  List  options  String  name  String  description  final  int  minimum  final  int  maximum  final  boolean  required  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  required  SortedMap  newOptionMap  optionMap  Iterator  i  j  List  anonymous  newAnonymous  options  Option  option  String  description  name  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	96	96	1	replace	option  =  options.getOption(name,  description);	  Option    option    =    options.getOption(option,    description);    	non-compiled	[CE]  illegal  start  of  expression	49	None	replace
73	[BUG]  [BUGGY]  Option  option  =  options.getOption(defaultName,  description);  [CE]  illegal  start  of  expression  [FE]                  OptionException      [CONTEXT]      final  SortedMap  newOptionMap  =  new  TreeMap(ReverseStringComparator.getInstance());  final  Set  newPrefixes  =  new  HashSet();  for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {  final  Option  option  =  (Option)  i.next();  option.setParent(this);      [BUGGY]  Option  option  =  options.getOption(defaultName,  description);  [BUGGY]      if  (option  instanceof  Argument)  {  i.remove();  newAnonymous.add(option);  }  else  {  final  Set  triggers  =  option.getTriggers();  for  (Iterator  j  =  triggers.iterator();  j.hasNext();)  {  newOptionMap.put(j.next(),  option);  }    [CLASS]  GroupImpl  [METHOD]  <init>  [RETURN_TYPE]  String,int,int,boolean)  List  options  String  name  String  description  final  int  minimum  final  int  maximum  final  boolean  required  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  required  SortedMap  newOptionMap  optionMap  Iterator  i  j  List  anonymous  newAnonymous  options  Option  option  String  description  name  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	96	96	1	replace	Option  option  =  options.getOption(defaultName,  description);	  Option    option    =    options.getOption(option,    description);    	non-compiled	[CE]  illegal  start  of  expression	49	None	replace
74	[BUG]  [BUGGY]  option  =(Option)i.getValue();  [CE]  illegal  start  of  expression  [FE]                    OptionException      [CONTEXT]      final  SortedMap  newOptionMap  =  new  TreeMap(ReverseStringComparator.getInstance());  final  Set  newPrefixes  =  new  HashSet();  for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {  final  Option  option  =  (Option)  i.next();  option.setParent(this);      [BUGGY]  option  =(Option)i.getValue();  [BUGGY]      if  (option  instanceof  Argument)  {  i.remove();  newAnonymous.add(option);  }  else  {  final  Set  triggers  =  option.getTriggers();  for  (Iterator  j  =  triggers.iterator();  j.hasNext();)  {  newOptionMap.put(j.next(),  option);  }    [CLASS]  GroupImpl  [METHOD]  <init>  [RETURN_TYPE]  String,int,int,boolean)  List  options  String  name  String  description  final  int  minimum  final  int  maximum  final  boolean  required  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  required  SortedMap  newOptionMap  optionMap  Iterator  i  j  List  anonymous  newAnonymous  options  Option  option  String  description  name  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	96	96	1	replace	option  =(Option)i.getValue();	  Option    option    =(Option)i.getValue();    	non-compiled	[CE]  illegal  start  of  expression	58	None	replace
75	[BUG]  [BUGGY]  Option  option  =  options.getOption(option)/  1;  [CE]  illegal  start  of  expression  [FE]              OptionException      [CONTEXT]      final  SortedMap  newOptionMap  =  new  TreeMap(ReverseStringComparator.getInstance());  final  Set  newPrefixes  =  new  HashSet();  for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {  final  Option  option  =  (Option)  i.next();  option.setParent(this);      [BUGGY]  Option  option  =  options.getOption(option)/  1;  [BUGGY]      if  (option  instanceof  Argument)  {  i.remove();  newAnonymous.add(option);  }  else  {  final  Set  triggers  =  option.getTriggers();  for  (Iterator  j  =  triggers.iterator();  j.hasNext();)  {  newOptionMap.put(j.next(),  option);  }    [CLASS]  GroupImpl  [METHOD]  <init>  [RETURN_TYPE]  String,int,int,boolean)  List  options  String  name  String  description  final  int  minimum  final  int  maximum  final  boolean  required  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  required  SortedMap  newOptionMap  optionMap  Iterator  i  j  List  anonymous  newAnonymous  options  Option  option  String  description  name  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	96	96	1	replace	Option  option  =  options.getOption(option)/  1;	  Option    option    =    options.getOption(option)+    1;    	non-compiled	[CE]  illegal  start  of  expression	48	None	replace
76	[BUG]  [BUGGY]  Option  option  =  options.getOption(option)+  2;  [CE]  illegal  start  of  expression  [FE]                OptionException      [CONTEXT]      final  SortedMap  newOptionMap  =  new  TreeMap(ReverseStringComparator.getInstance());  final  Set  newPrefixes  =  new  HashSet();  for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {  final  Option  option  =  (Option)  i.next();  option.setParent(this);      [BUGGY]  Option  option  =  options.getOption(option)+  2;  [BUGGY]      if  (option  instanceof  Argument)  {  i.remove();  newAnonymous.add(option);  }  else  {  final  Set  triggers  =  option.getTriggers();  for  (Iterator  j  =  triggers.iterator();  j.hasNext();)  {  newOptionMap.put(j.next(),  option);  }    [CLASS]  GroupImpl  [METHOD]  <init>  [RETURN_TYPE]  String,int,int,boolean)  List  options  String  name  String  description  final  int  minimum  final  int  maximum  final  boolean  required  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  required  SortedMap  newOptionMap  optionMap  Iterator  i  j  List  anonymous  newAnonymous  options  Option  option  String  description  name  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	96	96	1	replace	Option  option  =  options.getOption(option)+  2;	  Option    option    =    options.getOption(option)+    1;    	non-compiled	[CE]  illegal  start  of  expression	48	None	replace
77	[BUG]  [BUGGY]  Option  option  =  options.getOption(option)+  1L;  [CE]  illegal  start  of  expression  [FE]                  OptionException      [CONTEXT]      final  SortedMap  newOptionMap  =  new  TreeMap(ReverseStringComparator.getInstance());  final  Set  newPrefixes  =  new  HashSet();  for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {  final  Option  option  =  (Option)  i.next();  option.setParent(this);      [BUGGY]  Option  option  =  options.getOption(option)+  1L;  [BUGGY]      if  (option  instanceof  Argument)  {  i.remove();  newAnonymous.add(option);  }  else  {  final  Set  triggers  =  option.getTriggers();  for  (Iterator  j  =  triggers.iterator();  j.hasNext();)  {  newOptionMap.put(j.next(),  option);  }    [CLASS]  GroupImpl  [METHOD]  <init>  [RETURN_TYPE]  String,int,int,boolean)  List  options  String  name  String  description  final  int  minimum  final  int  maximum  final  boolean  required  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  required  SortedMap  newOptionMap  optionMap  Iterator  i  j  List  anonymous  newAnonymous  options  Option  option  String  description  name  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	96	96	1	replace	Option  option  =  options.getOption(option)+  1L;	  Option    option    =    options.getOption(option)+    1;    	non-compiled	[CE]  illegal  start  of  expression	48	None	replace
78	[BUG]  [BUGGY]  option  =(Option)option.clone();  [CE]  illegal  start  of  expression  [FE]                    OptionException      [CONTEXT]      final  SortedMap  newOptionMap  =  new  TreeMap(ReverseStringComparator.getInstance());  final  Set  newPrefixes  =  new  HashSet();  for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {  final  Option  option  =  (Option)  i.next();  option.setParent(this);      [BUGGY]  option  =(Option)option.clone();  [BUGGY]      if  (option  instanceof  Argument)  {  i.remove();  newAnonymous.add(option);  }  else  {  final  Set  triggers  =  option.getTriggers();  for  (Iterator  j  =  triggers.iterator();  j.hasNext();)  {  newOptionMap.put(j.next(),  option);  }    [CLASS]  GroupImpl  [METHOD]  <init>  [RETURN_TYPE]  String,int,int,boolean)  List  options  String  name  String  description  final  int  minimum  final  int  maximum  final  boolean  required  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  required  SortedMap  newOptionMap  optionMap  Iterator  i  j  List  anonymous  newAnonymous  options  Option  option  String  description  name  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	96	96	1	replace	option  =(Option)option.clone();	  Option    option    =(Option)option.clone();    	non-compiled	[CE]  illegal  start  of  expression	3	None	replace
79	[BUG]  [BUGGY]  option  =(Option)option.getOption();  [CE]  illegal  start  of  expression  [FE]                    OptionException      [CONTEXT]      final  SortedMap  newOptionMap  =  new  TreeMap(ReverseStringComparator.getInstance());  final  Set  newPrefixes  =  new  HashSet();  for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {  final  Option  option  =  (Option)  i.next();  option.setParent(this);      [BUGGY]  option  =(Option)option.getOption();  [BUGGY]      if  (option  instanceof  Argument)  {  i.remove();  newAnonymous.add(option);  }  else  {  final  Set  triggers  =  option.getTriggers();  for  (Iterator  j  =  triggers.iterator();  j.hasNext();)  {  newOptionMap.put(j.next(),  option);  }    [CLASS]  GroupImpl  [METHOD]  <init>  [RETURN_TYPE]  String,int,int,boolean)  List  options  String  name  String  description  final  int  minimum  final  int  maximum  final  boolean  required  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  required  SortedMap  newOptionMap  optionMap  Iterator  i  j  List  anonymous  newAnonymous  options  Option  option  String  description  name  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	96	96	1	replace	option  =(Option)option.getOption();	  Option    option    =(Option)option.getOption();    	non-compiled	[CE]  illegal  start  of  expression	42	None	replace
80	[BUG]  [BUGGY]  if(!(option  instanceof  Option)||  options.contains(option.getName()))  {  [CE]  illegal  start  of  expression  [FE]                      OptionException      [CONTEXT]      final  SortedMap  newOptionMap  =  new  TreeMap(ReverseStringComparator.getInstance());  final  Set  newPrefixes  =  new  HashSet();  for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {  final  Option  option  =  (Option)  i.next();  option.setParent(this);      [BUGGY]  if(!(option  instanceof  Option)||  options.contains(option.getName()))  {  [BUGGY]      i.remove();  newAnonymous.add(option);  }  else  {  final  Set  triggers  =  option.getTriggers();  for  (Iterator  j  =  triggers.iterator();  j.hasNext();)  {  newOptionMap.put(j.next(),  option);  }    [CLASS]  GroupImpl  [METHOD]  <init>  [RETURN_TYPE]  String,int,int,boolean)  List  options  String  name  String  description  final  int  minimum  final  int  maximum  final  boolean  required  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  required  SortedMap  newOptionMap  optionMap  Iterator  i  j  List  anonymous  newAnonymous  options  Option  option  String  description  name  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	96	96	1	replace	if(!(option  instanceof  Option)||  options.contains(option.getName()))  {	  if(!(option    instanceof    Option)&&    options.contains(option.getName()))    {    	non-compiled	[CE]  illegal  start  of  expression	17	None	replace
81	[BUG]  [BUGGY]  option  =(Option)option.next();  [CE]  illegal  start  of  expression  [FE]              OptionException      [CONTEXT]      final  SortedMap  newOptionMap  =  new  TreeMap(ReverseStringComparator.getInstance());  final  Set  newPrefixes  =  new  HashSet();  for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {  final  Option  option  =  (Option)  i.next();  option.setParent(this);      [BUGGY]  option  =(Option)option.next();  [BUGGY]      if  (option  instanceof  Argument)  {  i.remove();  newAnonymous.add(option);  }  else  {  final  Set  triggers  =  option.getTriggers();  for  (Iterator  j  =  triggers.iterator();  j.hasNext();)  {  newOptionMap.put(j.next(),  option);  }    [CLASS]  GroupImpl  [METHOD]  <init>  [RETURN_TYPE]  String,int,int,boolean)  List  options  String  name  String  description  final  int  minimum  final  int  maximum  final  boolean  required  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  required  SortedMap  newOptionMap  optionMap  Iterator  i  j  List  anonymous  newAnonymous  options  Option  option  String  description  name  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	96	96	1	replace	option  =(Option)option.next();	  option    =(Option)i.next();    	non-compiled	[CE]  illegal  start  of  expression	37	None	replace
82	[BUG]  [BUGGY]  Option  option  =  options.getOption(i,  description);  [CE]  illegal  start  of  expression  [FE]                  OptionException      [CONTEXT]      final  SortedMap  newOptionMap  =  new  TreeMap(ReverseStringComparator.getInstance());  final  Set  newPrefixes  =  new  HashSet();  for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {  final  Option  option  =  (Option)  i.next();  option.setParent(this);      [BUGGY]  Option  option  =  options.getOption(i,  description);  [BUGGY]      if  (option  instanceof  Argument)  {  i.remove();  newAnonymous.add(option);  }  else  {  final  Set  triggers  =  option.getTriggers();  for  (Iterator  j  =  triggers.iterator();  j.hasNext();)  {  newOptionMap.put(j.next(),  option);  }    [CLASS]  GroupImpl  [METHOD]  <init>  [RETURN_TYPE]  String,int,int,boolean)  List  options  String  name  String  description  final  int  minimum  final  int  maximum  final  boolean  required  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  required  SortedMap  newOptionMap  optionMap  Iterator  i  j  List  anonymous  newAnonymous  options  Option  option  String  description  name  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	96	96	1	replace	Option  option  =  options.getOption(i,  description);	  Option    option    =    options.getOption(i);    	non-compiled	[CE]  illegal  start  of  expression	21	None	replace
83	[BUG]  [BUGGY]  Option  option  =  option.clone();  [CE]  illegal  start  of  expression  [FE]              OptionException      [CONTEXT]      final  SortedMap  newOptionMap  =  new  TreeMap(ReverseStringComparator.getInstance());  final  Set  newPrefixes  =  new  HashSet();  for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {  final  Option  option  =  (Option)  i.next();  option.setParent(this);      [BUGGY]  Option  option  =  option.clone();  [BUGGY]      if  (option  instanceof  Argument)  {  i.remove();  newAnonymous.add(option);  }  else  {  final  Set  triggers  =  option.getTriggers();  for  (Iterator  j  =  triggers.iterator();  j.hasNext();)  {  newOptionMap.put(j.next(),  option);  }    [CLASS]  GroupImpl  [METHOD]  <init>  [RETURN_TYPE]  String,int,int,boolean)  List  options  String  name  String  description  final  int  minimum  final  int  maximum  final  boolean  required  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  required  SortedMap  newOptionMap  optionMap  Iterator  i  j  List  anonymous  newAnonymous  options  Option  option  String  description  name  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	96	96	1	replace	Option  option  =  option.clone();	  Option    option    =    option.cloneOption();    	non-compiled	[CE]  illegal  start  of  expression	51	None	replace
84	[BUG]  [BUGGY]  Option  option  =  option.cloneTree();  [CE]  illegal  start  of  expression  [FE]                OptionException      [CONTEXT]      final  SortedMap  newOptionMap  =  new  TreeMap(ReverseStringComparator.getInstance());  final  Set  newPrefixes  =  new  HashSet();  for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {  final  Option  option  =  (Option)  i.next();  option.setParent(this);      [BUGGY]  Option  option  =  option.cloneTree();  [BUGGY]      if  (option  instanceof  Argument)  {  i.remove();  newAnonymous.add(option);  }  else  {  final  Set  triggers  =  option.getTriggers();  for  (Iterator  j  =  triggers.iterator();  j.hasNext();)  {  newOptionMap.put(j.next(),  option);  }    [CLASS]  GroupImpl  [METHOD]  <init>  [RETURN_TYPE]  String,int,int,boolean)  List  options  String  name  String  description  final  int  minimum  final  int  maximum  final  boolean  required  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  required  SortedMap  newOptionMap  optionMap  Iterator  i  j  List  anonymous  newAnonymous  options  Option  option  String  description  name  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	96	96	1	replace	Option  option  =  option.cloneTree();	  Option    option    =    option.cloneOption();    	non-compiled	[CE]  illegal  start  of  expression	51	None	replace
85	[BUG]  [BUGGY]  Option  option  =  options.cloneOption();  [CE]  illegal  start  of  expression  [FE]                  OptionException      [CONTEXT]      final  SortedMap  newOptionMap  =  new  TreeMap(ReverseStringComparator.getInstance());  final  Set  newPrefixes  =  new  HashSet();  for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {  final  Option  option  =  (Option)  i.next();  option.setParent(this);      [BUGGY]  Option  option  =  options.cloneOption();  [BUGGY]      if  (option  instanceof  Argument)  {  i.remove();  newAnonymous.add(option);  }  else  {  final  Set  triggers  =  option.getTriggers();  for  (Iterator  j  =  triggers.iterator();  j.hasNext();)  {  newOptionMap.put(j.next(),  option);  }    [CLASS]  GroupImpl  [METHOD]  <init>  [RETURN_TYPE]  String,int,int,boolean)  List  options  String  name  String  description  final  int  minimum  final  int  maximum  final  boolean  required  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  required  SortedMap  newOptionMap  optionMap  Iterator  i  j  List  anonymous  newAnonymous  options  Option  option  String  description  name  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	96	96	1	replace	Option  option  =  options.cloneOption();	  Option    option    =    option.cloneOption();    	non-compiled	[CE]  illegal  start  of  expression	51	None	replace
86	[BUG]  [BUGGY]  if(option.hasAnonymous()  &&  options.hasTriggers())  {  [CE]  illegal  start  of  expression  [FE]              OptionException      [CONTEXT]      final  SortedMap  newOptionMap  =  new  TreeMap(ReverseStringComparator.getInstance());  final  Set  newPrefixes  =  new  HashSet();  for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {  final  Option  option  =  (Option)  i.next();  option.setParent(this);      [BUGGY]  if(option.hasAnonymous()  &&  options.hasTriggers())  {  [BUGGY]      i.remove();  newAnonymous.add(option);  }  else  {  final  Set  triggers  =  option.getTriggers();  for  (Iterator  j  =  triggers.iterator();  j.hasNext();)  {  newOptionMap.put(j.next(),  option);  }    [CLASS]  GroupImpl  [METHOD]  <init>  [RETURN_TYPE]  String,int,int,boolean)  List  options  String  name  String  description  final  int  minimum  final  int  maximum  final  boolean  required  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  required  SortedMap  newOptionMap  optionMap  Iterator  i  j  List  anonymous  newAnonymous  options  Option  option  String  description  name  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	96	96	1	replace	if(option.hasAnonymous()  &&  options.hasTriggers())  {	  if(option.hasAnonymous()    ||    options.hasTriggers())    {    	non-compiled	[CE]  illegal  start  of  expression	46	None	replace
87	[BUG]  [BUGGY]  if(option.hasAnonymous()  ||  options.hasDescription())  {  [CE]  illegal  start  of  expression  [FE]                OptionException      [CONTEXT]      final  SortedMap  newOptionMap  =  new  TreeMap(ReverseStringComparator.getInstance());  final  Set  newPrefixes  =  new  HashSet();  for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {  final  Option  option  =  (Option)  i.next();  option.setParent(this);      [BUGGY]  if(option.hasAnonymous()  ||  options.hasDescription())  {  [BUGGY]      i.remove();  newAnonymous.add(option);  }  else  {  final  Set  triggers  =  option.getTriggers();  for  (Iterator  j  =  triggers.iterator();  j.hasNext();)  {  newOptionMap.put(j.next(),  option);  }    [CLASS]  GroupImpl  [METHOD]  <init>  [RETURN_TYPE]  String,int,int,boolean)  List  options  String  name  String  description  final  int  minimum  final  int  maximum  final  boolean  required  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  required  SortedMap  newOptionMap  optionMap  Iterator  i  j  List  anonymous  newAnonymous  options  Option  option  String  description  name  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	96	96	1	replace	if(option.hasAnonymous()  ||  options.hasDescription())  {	  if(option.hasAnonymous()    ||    options.hasTriggers())    {    	non-compiled	[CE]  illegal  start  of  expression	46	None	replace
88	[BUG]  [BUGGY]  if(option.hasAnonymous()  ||  options.hasNext())  {  [CE]  illegal  start  of  expression  [FE]                  OptionException      [CONTEXT]      final  SortedMap  newOptionMap  =  new  TreeMap(ReverseStringComparator.getInstance());  final  Set  newPrefixes  =  new  HashSet();  for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {  final  Option  option  =  (Option)  i.next();  option.setParent(this);      [BUGGY]  if(option.hasAnonymous()  ||  options.hasNext())  {  [BUGGY]      i.remove();  newAnonymous.add(option);  }  else  {  final  Set  triggers  =  option.getTriggers();  for  (Iterator  j  =  triggers.iterator();  j.hasNext();)  {  newOptionMap.put(j.next(),  option);  }    [CLASS]  GroupImpl  [METHOD]  <init>  [RETURN_TYPE]  String,int,int,boolean)  List  options  String  name  String  description  final  int  minimum  final  int  maximum  final  boolean  required  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  required  SortedMap  newOptionMap  optionMap  Iterator  i  j  List  anonymous  newAnonymous  options  Option  option  String  description  name  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	96	96	1	replace	if(option.hasAnonymous()  ||  options.hasNext())  {	  if(option.hasAnonymous()    ||    options.hasTriggers())    {    	non-compiled	[CE]  illegal  start  of  expression	46	None	replace
89	[BUG]  [BUGGY]  Option  option  =  options.getOption(defaultValue,  defaultValue);  [CE]  illegal  start  of  expression  [FE]              OptionException      [CONTEXT]      final  SortedMap  newOptionMap  =  new  TreeMap(ReverseStringComparator.getInstance());  final  Set  newPrefixes  =  new  HashSet();  for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {  final  Option  option  =  (Option)  i.next();  option.setParent(this);      [BUGGY]  Option  option  =  options.getOption(defaultValue,  defaultValue);  [BUGGY]      if  (option  instanceof  Argument)  {  i.remove();  newAnonymous.add(option);  }  else  {  final  Set  triggers  =  option.getTriggers();  for  (Iterator  j  =  triggers.iterator();  j.hasNext();)  {  newOptionMap.put(j.next(),  option);  }    [CLASS]  GroupImpl  [METHOD]  <init>  [RETURN_TYPE]  String,int,int,boolean)  List  options  String  name  String  description  final  int  minimum  final  int  maximum  final  boolean  required  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  required  SortedMap  newOptionMap  optionMap  Iterator  i  j  List  anonymous  newAnonymous  options  Option  option  String  description  name  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	96	96	1	replace	Option  option  =  options.getOption(defaultValue,  defaultValue);	  Option    option    =    options.getOption(defaultValue);    	non-compiled	[CE]  illegal  start  of  expression	73	None	replace
90	[BUG]  [BUGGY]  Option  option  =  options.getOption(defaultValue,  description);  [CE]  illegal  start  of  expression  [FE]                OptionException      [CONTEXT]      final  SortedMap  newOptionMap  =  new  TreeMap(ReverseStringComparator.getInstance());  final  Set  newPrefixes  =  new  HashSet();  for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {  final  Option  option  =  (Option)  i.next();  option.setParent(this);      [BUGGY]  Option  option  =  options.getOption(defaultValue,  description);  [BUGGY]      if  (option  instanceof  Argument)  {  i.remove();  newAnonymous.add(option);  }  else  {  final  Set  triggers  =  option.getTriggers();  for  (Iterator  j  =  triggers.iterator();  j.hasNext();)  {  newOptionMap.put(j.next(),  option);  }    [CLASS]  GroupImpl  [METHOD]  <init>  [RETURN_TYPE]  String,int,int,boolean)  List  options  String  name  String  description  final  int  minimum  final  int  maximum  final  boolean  required  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  required  SortedMap  newOptionMap  optionMap  Iterator  i  j  List  anonymous  newAnonymous  options  Option  option  String  description  name  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	96	96	1	replace	Option  option  =  options.getOption(defaultValue,  description);	  Option    option    =    options.getOption(defaultValue);    	non-compiled	[CE]  illegal  start  of  expression	73	None	replace
91	[BUG]  [BUGGY]  Option  option  =  options.getOption(defaultValue,  minimum);  [CE]  illegal  start  of  expression  [FE]                  OptionException      [CONTEXT]      final  SortedMap  newOptionMap  =  new  TreeMap(ReverseStringComparator.getInstance());  final  Set  newPrefixes  =  new  HashSet();  for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {  final  Option  option  =  (Option)  i.next();  option.setParent(this);      [BUGGY]  Option  option  =  options.getOption(defaultValue,  minimum);  [BUGGY]      if  (option  instanceof  Argument)  {  i.remove();  newAnonymous.add(option);  }  else  {  final  Set  triggers  =  option.getTriggers();  for  (Iterator  j  =  triggers.iterator();  j.hasNext();)  {  newOptionMap.put(j.next(),  option);  }    [CLASS]  GroupImpl  [METHOD]  <init>  [RETURN_TYPE]  String,int,int,boolean)  List  options  String  name  String  description  final  int  minimum  final  int  maximum  final  boolean  required  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  required  SortedMap  newOptionMap  optionMap  Iterator  i  j  List  anonymous  newAnonymous  options  Option  option  String  description  name  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	96	96	1	replace	Option  option  =  options.getOption(defaultValue,  minimum);	  Option    option    =    options.getOption(defaultValue);    	non-compiled	[CE]  illegal  start  of  expression	73	None	replace
92	[BUG]  [BUGGY]  Option  option  =  option.getOption(defaultName,  maximum);  [CE]  illegal  start  of  expression  [FE]              OptionException      [CONTEXT]      final  SortedMap  newOptionMap  =  new  TreeMap(ReverseStringComparator.getInstance());  final  Set  newPrefixes  =  new  HashSet();  for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {  final  Option  option  =  (Option)  i.next();  option.setParent(this);      [BUGGY]  Option  option  =  option.getOption(defaultName,  maximum);  [BUGGY]      if  (option  instanceof  Argument)  {  i.remove();  newAnonymous.add(option);  }  else  {  final  Set  triggers  =  option.getTriggers();  for  (Iterator  j  =  triggers.iterator();  j.hasNext();)  {  newOptionMap.put(j.next(),  option);  }    [CLASS]  GroupImpl  [METHOD]  <init>  [RETURN_TYPE]  String,int,int,boolean)  List  options  String  name  String  description  final  int  minimum  final  int  maximum  final  boolean  required  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  required  SortedMap  newOptionMap  optionMap  Iterator  i  j  List  anonymous  newAnonymous  options  Option  option  String  description  name  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	96	96	1	replace	Option  option  =  option.getOption(defaultName,  maximum);	  Option    option    =    option.getOption(defaultName,    required);    	non-compiled	[CE]  illegal  start  of  expression	44	None	replace
93	[BUG]  [BUGGY]  Option  option  =  option.getOption(defaultName,  minimum,  required);  [CE]  illegal  start  of  expression  [FE]                OptionException      [CONTEXT]      final  SortedMap  newOptionMap  =  new  TreeMap(ReverseStringComparator.getInstance());  final  Set  newPrefixes  =  new  HashSet();  for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {  final  Option  option  =  (Option)  i.next();  option.setParent(this);      [BUGGY]  Option  option  =  option.getOption(defaultName,  minimum,  required);  [BUGGY]      if  (option  instanceof  Argument)  {  i.remove();  newAnonymous.add(option);  }  else  {  final  Set  triggers  =  option.getTriggers();  for  (Iterator  j  =  triggers.iterator();  j.hasNext();)  {  newOptionMap.put(j.next(),  option);  }    [CLASS]  GroupImpl  [METHOD]  <init>  [RETURN_TYPE]  String,int,int,boolean)  List  options  String  name  String  description  final  int  minimum  final  int  maximum  final  boolean  required  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  required  SortedMap  newOptionMap  optionMap  Iterator  i  j  List  anonymous  newAnonymous  options  Option  option  String  description  name  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	96	96	1	replace	Option  option  =  option.getOption(defaultName,  minimum,  required);	  Option    option    =    option.getOption(defaultName,    required);    	non-compiled	[CE]  illegal  start  of  expression	44	None	replace
94	[BUG]  [BUGGY]  if(option.getDescription()!=  null  &&  option.getDescription().equals(description))  {  [CE]  illegal  start  of  expression  [FE]              OptionException      [CONTEXT]      final  SortedMap  newOptionMap  =  new  TreeMap(ReverseStringComparator.getInstance());  final  Set  newPrefixes  =  new  HashSet();  for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {  final  Option  option  =  (Option)  i.next();  option.setParent(this);      [BUGGY]  if(option.getDescription()!=  null  &&  option.getDescription().equals(description))  {  [BUGGY]      i.remove();  newAnonymous.add(option);  }  else  {  final  Set  triggers  =  option.getTriggers();  for  (Iterator  j  =  triggers.iterator();  j.hasNext();)  {  newOptionMap.put(j.next(),  option);  }    [CLASS]  GroupImpl  [METHOD]  <init>  [RETURN_TYPE]  String,int,int,boolean)  List  options  String  name  String  description  final  int  minimum  final  int  maximum  final  boolean  required  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  required  SortedMap  newOptionMap  optionMap  Iterator  i  j  List  anonymous  newAnonymous  options  Option  option  String  description  name  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	96	96	1	replace	if(option.getDescription()!=  null  &&  option.getDescription().equals(description))  {	  if(option.getDescription()!=    null    &&    option.getDescription().equals(name))    {    	non-compiled	[CE]  illegal  start  of  expression	34	None	replace
95	[BUG]  [BUGGY]  if(option.getName()!=  null  &&  option.getDescription().equals(name))  {  [CE]  illegal  start  of  expression  [FE]                OptionException      [CONTEXT]      final  SortedMap  newOptionMap  =  new  TreeMap(ReverseStringComparator.getInstance());  final  Set  newPrefixes  =  new  HashSet();  for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {  final  Option  option  =  (Option)  i.next();  option.setParent(this);      [BUGGY]  if(option.getName()!=  null  &&  option.getDescription().equals(name))  {  [BUGGY]      i.remove();  newAnonymous.add(option);  }  else  {  final  Set  triggers  =  option.getTriggers();  for  (Iterator  j  =  triggers.iterator();  j.hasNext();)  {  newOptionMap.put(j.next(),  option);  }    [CLASS]  GroupImpl  [METHOD]  <init>  [RETURN_TYPE]  String,int,int,boolean)  List  options  String  name  String  description  final  int  minimum  final  int  maximum  final  boolean  required  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  required  SortedMap  newOptionMap  optionMap  Iterator  i  j  List  anonymous  newAnonymous  options  Option  option  String  description  name  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	96	96	1	replace	if(option.getName()!=  null  &&  option.getDescription().equals(name))  {	  if(option.getDescription()!=    null    &&    option.getDescription().equals(name))    {    	non-compiled	[CE]  illegal  start  of  expression	34	None	replace
96	[BUG]  [BUGGY]  if(option.getDescription()!=  null  &&  option.getDescription().equals(option.getDescription()))  {  [CE]  illegal  start  of  expression  [FE]              OptionException      [CONTEXT]      final  SortedMap  newOptionMap  =  new  TreeMap(ReverseStringComparator.getInstance());  final  Set  newPrefixes  =  new  HashSet();  for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {  final  Option  option  =  (Option)  i.next();  option.setParent(this);      [BUGGY]  if(option.getDescription()!=  null  &&  option.getDescription().equals(option.getDescription()))  {  [BUGGY]      i.remove();  newAnonymous.add(option);  }  else  {  final  Set  triggers  =  option.getTriggers();  for  (Iterator  j  =  triggers.iterator();  j.hasNext();)  {  newOptionMap.put(j.next(),  option);  }    [CLASS]  GroupImpl  [METHOD]  <init>  [RETURN_TYPE]  String,int,int,boolean)  List  options  String  name  String  description  final  int  minimum  final  int  maximum  final  boolean  required  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  required  SortedMap  newOptionMap  optionMap  Iterator  i  j  List  anonymous  newAnonymous  options  Option  option  String  description  name  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	96	96	1	replace	if(option.getDescription()!=  null  &&  option.getDescription().equals(option.getDescription()))  {	  if(option.getDescription()!=    null    &&    options.getDescription().equals(option.getDescription()))    {    	non-compiled	[CE]  illegal  start  of  expression	72	None	replace
97	[BUG]  [BUGGY]  if(option.getDescription()  ==  null  &&  options.getDescription().equals(option.getDescription()))  {  [CE]  illegal  start  of  expression  [FE]                OptionException      [CONTEXT]      final  SortedMap  newOptionMap  =  new  TreeMap(ReverseStringComparator.getInstance());  final  Set  newPrefixes  =  new  HashSet();  for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {  final  Option  option  =  (Option)  i.next();  option.setParent(this);      [BUGGY]  if(option.getDescription()  ==  null  &&  options.getDescription().equals(option.getDescription()))  {  [BUGGY]      i.remove();  newAnonymous.add(option);  }  else  {  final  Set  triggers  =  option.getTriggers();  for  (Iterator  j  =  triggers.iterator();  j.hasNext();)  {  newOptionMap.put(j.next(),  option);  }    [CLASS]  GroupImpl  [METHOD]  <init>  [RETURN_TYPE]  String,int,int,boolean)  List  options  String  name  String  description  final  int  minimum  final  int  maximum  final  boolean  required  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  required  SortedMap  newOptionMap  optionMap  Iterator  i  j  List  anonymous  newAnonymous  options  Option  option  String  description  name  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	96	96	1	replace	if(option.getDescription()  ==  null  &&  options.getDescription().equals(option.getDescription()))  {	  if(option.getDescription()!=    null    &&    options.getDescription().equals(option.getDescription()))    {    	non-compiled	[CE]  illegal  start  of  expression	72	None	replace
98	[BUG]  [BUGGY]  if(option  instanceof  Option  ||  options.getOptions().contains(option))  {  [CE]  illegal  start  of  expression  [FE]              OptionException      [CONTEXT]      final  SortedMap  newOptionMap  =  new  TreeMap(ReverseStringComparator.getInstance());  final  Set  newPrefixes  =  new  HashSet();  for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {  final  Option  option  =  (Option)  i.next();  option.setParent(this);      [BUGGY]  if(option  instanceof  Option  ||  options.getOptions().contains(option))  {  [BUGGY]      i.remove();  newAnonymous.add(option);  }  else  {  final  Set  triggers  =  option.getTriggers();  for  (Iterator  j  =  triggers.iterator();  j.hasNext();)  {  newOptionMap.put(j.next(),  option);  }    [CLASS]  GroupImpl  [METHOD]  <init>  [RETURN_TYPE]  String,int,int,boolean)  List  options  String  name  String  description  final  int  minimum  final  int  maximum  final  boolean  required  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  required  SortedMap  newOptionMap  optionMap  Iterator  i  j  List  anonymous  newAnonymous  options  Option  option  String  description  name  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	96	96	1	replace	if(option  instanceof  Option  ||  options.getOptions().contains(option))  {	  if(option    instanceof    Option    &&    options.getOptions().contains(option))    {    	non-compiled	[CE]  illegal  start  of  expression	54	None	replace
99	[BUG]  [BUGGY]  if(option  instanceof  Option  &&  options.getOptions().contains(option.getName()))  {  [CE]  illegal  start  of  expression  [FE]                OptionException      [CONTEXT]      final  SortedMap  newOptionMap  =  new  TreeMap(ReverseStringComparator.getInstance());  final  Set  newPrefixes  =  new  HashSet();  for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {  final  Option  option  =  (Option)  i.next();  option.setParent(this);      [BUGGY]  if(option  instanceof  Option  &&  options.getOptions().contains(option.getName()))  {  [BUGGY]      i.remove();  newAnonymous.add(option);  }  else  {  final  Set  triggers  =  option.getTriggers();  for  (Iterator  j  =  triggers.iterator();  j.hasNext();)  {  newOptionMap.put(j.next(),  option);  }    [CLASS]  GroupImpl  [METHOD]  <init>  [RETURN_TYPE]  String,int,int,boolean)  List  options  String  name  String  description  final  int  minimum  final  int  maximum  final  boolean  required  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  required  SortedMap  newOptionMap  optionMap  Iterator  i  j  List  anonymous  newAnonymous  options  Option  option  String  description  name  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	96	96	1	replace	if(option  instanceof  Option  &&  options.getOptions().contains(option.getName()))  {	  if(option    instanceof    Option    &&    options.getOptions().contains(option))    {    	non-compiled	[CE]  illegal  start  of  expression	54	None	replace
100	[BUG]  [BUGGY]  if(option  instanceof  Option  &&  options.getOptions().contains(option)||  options.getOptions().contains(option))  {  [CE]  illegal  start  of  expression  [FE]                  OptionException      [CONTEXT]      final  SortedMap  newOptionMap  =  new  TreeMap(ReverseStringComparator.getInstance());  final  Set  newPrefixes  =  new  HashSet();  for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {  final  Option  option  =  (Option)  i.next();  option.setParent(this);      [BUGGY]  if(option  instanceof  Option  &&  options.getOptions().contains(option)||  options.getOptions().contains(option))  {  [BUGGY]      i.remove();  newAnonymous.add(option);  }  else  {  final  Set  triggers  =  option.getTriggers();  for  (Iterator  j  =  triggers.iterator();  j.hasNext();)  {  newOptionMap.put(j.next(),  option);  }    [CLASS]  GroupImpl  [METHOD]  <init>  [RETURN_TYPE]  String,int,int,boolean)  List  options  String  name  String  description  final  int  minimum  final  int  maximum  final  boolean  required  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  required  SortedMap  newOptionMap  optionMap  Iterator  i  j  List  anonymous  newAnonymous  options  Option  option  String  description  name  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	96	96	1	replace	if(option  instanceof  Option  &&  options.getOptions().contains(option)||  options.getOptions().contains(option))  {	  if(option    instanceof    Option    &&    options.getOptions().contains(option))    {    	non-compiled	[CE]  illegal  start  of  expression	54	None	replace
101	[BUG]  [BUGGY]  option  =  option.getOption(this);  [CE]  illegal  start  of  expression  [FE]                OptionException      [CONTEXT]      final  SortedMap  newOptionMap  =  new  TreeMap(ReverseStringComparator.getInstance());  final  Set  newPrefixes  =  new  HashSet();  for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {  final  Option  option  =  (Option)  i.next();  option.setParent(this);      [BUGGY]  option  =  option.getOption(this);  [BUGGY]      if  (option  instanceof  Argument)  {  i.remove();  newAnonymous.add(option);  }  else  {  final  Set  triggers  =  option.getTriggers();  for  (Iterator  j  =  triggers.iterator();  j.hasNext();)  {  newOptionMap.put(j.next(),  option);  }    [CLASS]  GroupImpl  [METHOD]  <init>  [RETURN_TYPE]  String,int,int,boolean)  List  options  String  name  String  description  final  int  minimum  final  int  maximum  final  boolean  required  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  required  SortedMap  newOptionMap  optionMap  Iterator  i  j  List  anonymous  newAnonymous  options  Option  option  String  description  name  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	96	96	1	replace	option  =  option.getOption(this);	  option    =    option.getOption();    	non-compiled	[CE]  illegal  start  of  expression	32	None	replace
102	[BUG]  [BUGGY]  Option  option  =  option.getOption(defaultName,  name);  [CE]  illegal  start  of  expression  [FE]              OptionException      [CONTEXT]      final  SortedMap  newOptionMap  =  new  TreeMap(ReverseStringComparator.getInstance());  final  Set  newPrefixes  =  new  HashSet();  for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {  final  Option  option  =  (Option)  i.next();  option.setParent(this);      [BUGGY]  Option  option  =  option.getOption(defaultName,  name);  [BUGGY]      if  (option  instanceof  Argument)  {  i.remove();  newAnonymous.add(option);  }  else  {  final  Set  triggers  =  option.getTriggers();  for  (Iterator  j  =  triggers.iterator();  j.hasNext();)  {  newOptionMap.put(j.next(),  option);  }    [CLASS]  GroupImpl  [METHOD]  <init>  [RETURN_TYPE]  String,int,int,boolean)  List  options  String  name  String  description  final  int  minimum  final  int  maximum  final  boolean  required  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  required  SortedMap  newOptionMap  optionMap  Iterator  i  j  List  anonymous  newAnonymous  options  Option  option  String  description  name  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	96	96	1	replace	Option  option  =  option.getOption(defaultName,  name);	  Option    option    =    option.getOption(defaultName,    description);    	non-compiled	[CE]  illegal  start  of  expression	68	None	replace
103	[BUG]  [BUGGY]  if(!option.hasAnonymous()  &&  newAnonymous.contains(option.getTriggers()))  {  [CE]  illegal  start  of  expression  [FE]              OptionException      [CONTEXT]      final  SortedMap  newOptionMap  =  new  TreeMap(ReverseStringComparator.getInstance());  final  Set  newPrefixes  =  new  HashSet();  for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {  final  Option  option  =  (Option)  i.next();  option.setParent(this);      [BUGGY]  if(!option.hasAnonymous()  &&  newAnonymous.contains(option.getTriggers()))  {  [BUGGY]      i.remove();  newAnonymous.add(option);  }  else  {  final  Set  triggers  =  option.getTriggers();  for  (Iterator  j  =  triggers.iterator();  j.hasNext();)  {  newOptionMap.put(j.next(),  option);  }    [CLASS]  GroupImpl  [METHOD]  <init>  [RETURN_TYPE]  String,int,int,boolean)  List  options  String  name  String  description  final  int  minimum  final  int  maximum  final  boolean  required  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  required  SortedMap  newOptionMap  optionMap  Iterator  i  j  List  anonymous  newAnonymous  options  Option  option  String  description  name  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	96	96	1	replace	if(!option.hasAnonymous()  &&  newAnonymous.contains(option.getTriggers()))  {	  if(!option.hasAnonymous())    {    	non-compiled	[CE]  illegal  start  of  expression	5	None	replace
104	[BUG]  [BUGGY]  if(!option.hasAnonymous()  &&  newAnonymous.contains(option.getName()))  {  [CE]  illegal  start  of  expression  [FE]                OptionException      [CONTEXT]      final  SortedMap  newOptionMap  =  new  TreeMap(ReverseStringComparator.getInstance());  final  Set  newPrefixes  =  new  HashSet();  for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {  final  Option  option  =  (Option)  i.next();  option.setParent(this);      [BUGGY]  if(!option.hasAnonymous()  &&  newAnonymous.contains(option.getName()))  {  [BUGGY]      i.remove();  newAnonymous.add(option);  }  else  {  final  Set  triggers  =  option.getTriggers();  for  (Iterator  j  =  triggers.iterator();  j.hasNext();)  {  newOptionMap.put(j.next(),  option);  }    [CLASS]  GroupImpl  [METHOD]  <init>  [RETURN_TYPE]  String,int,int,boolean)  List  options  String  name  String  description  final  int  minimum  final  int  maximum  final  boolean  required  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  required  SortedMap  newOptionMap  optionMap  Iterator  i  j  List  anonymous  newAnonymous  options  Option  option  String  description  name  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	96	96	1	replace	if(!option.hasAnonymous()  &&  newAnonymous.contains(option.getName()))  {	  if(!option.hasAnonymous())    {    	non-compiled	[CE]  illegal  start  of  expression	5	None	replace
105	[BUG]  [BUGGY]  if(!option.hasTriggers())  {  [CE]  illegal  start  of  expression  [FE]                  OptionException      [CONTEXT]      final  SortedMap  newOptionMap  =  new  TreeMap(ReverseStringComparator.getInstance());  final  Set  newPrefixes  =  new  HashSet();  for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {  final  Option  option  =  (Option)  i.next();  option.setParent(this);      [BUGGY]  if(!option.hasTriggers())  {  [BUGGY]      i.remove();  newAnonymous.add(option);  }  else  {  final  Set  triggers  =  option.getTriggers();  for  (Iterator  j  =  triggers.iterator();  j.hasNext();)  {  newOptionMap.put(j.next(),  option);  }    [CLASS]  GroupImpl  [METHOD]  <init>  [RETURN_TYPE]  String,int,int,boolean)  List  options  String  name  String  description  final  int  minimum  final  int  maximum  final  boolean  required  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  required  SortedMap  newOptionMap  optionMap  Iterator  i  j  List  anonymous  newAnonymous  options  Option  option  String  description  name  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	96	96	1	replace	if(!option.hasTriggers())  {	  if(!option.hasAnonymous())    {    	non-compiled	[CE]  illegal  start  of  expression	5	None	replace
106	[BUG]  [BUGGY]  if(!option.hasAnonymous()  &&  option.getTriggers().contains(option.getTriggers()))  {  [CE]  illegal  start  of  expression  [FE]                    OptionException      [CONTEXT]      final  SortedMap  newOptionMap  =  new  TreeMap(ReverseStringComparator.getInstance());  final  Set  newPrefixes  =  new  HashSet();  for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {  final  Option  option  =  (Option)  i.next();  option.setParent(this);      [BUGGY]  if(!option.hasAnonymous()  &&  option.getTriggers().contains(option.getTriggers()))  {  [BUGGY]      i.remove();  newAnonymous.add(option);  }  else  {  final  Set  triggers  =  option.getTriggers();  for  (Iterator  j  =  triggers.iterator();  j.hasNext();)  {  newOptionMap.put(j.next(),  option);  }    [CLASS]  GroupImpl  [METHOD]  <init>  [RETURN_TYPE]  String,int,int,boolean)  List  options  String  name  String  description  final  int  minimum  final  int  maximum  final  boolean  required  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  required  SortedMap  newOptionMap  optionMap  Iterator  i  j  List  anonymous  newAnonymous  options  Option  option  String  description  name  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	96	96	1	replace	if(!option.hasAnonymous()  &&  option.getTriggers().contains(option.getTriggers()))  {	  if(!option.hasAnonymous())    {    	non-compiled	[CE]  illegal  start  of  expression	5	None	replace
107	[BUG]  [BUGGY]  if(option.hasAnonymous()  &&  option.hasTriggers())  {  [CE]  illegal  start  of  expression  [FE]                  OptionException      [CONTEXT]      final  SortedMap  newOptionMap  =  new  TreeMap(ReverseStringComparator.getInstance());  final  Set  newPrefixes  =  new  HashSet();  for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {  final  Option  option  =  (Option)  i.next();  option.setParent(this);      [BUGGY]  if(option.hasAnonymous()  &&  option.hasTriggers())  {  [BUGGY]      i.remove();  newAnonymous.add(option);  }  else  {  final  Set  triggers  =  option.getTriggers();  for  (Iterator  j  =  triggers.iterator();  j.hasNext();)  {  newOptionMap.put(j.next(),  option);  }    [CLASS]  GroupImpl  [METHOD]  <init>  [RETURN_TYPE]  String,int,int,boolean)  List  options  String  name  String  description  final  int  minimum  final  int  maximum  final  boolean  required  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  required  SortedMap  newOptionMap  optionMap  Iterator  i  j  List  anonymous  newAnonymous  options  Option  option  String  description  name  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	96	96	1	replace	if(option.hasAnonymous()  &&  option.hasTriggers())  {	  if(option.hasAnonymous()    ||    option.hasTriggers())    {    	non-compiled	[CE]  illegal  start  of  expression	7	None	replace
108	[BUG]  [BUGGY]  if(!option.hasAnonymous()  &&  option.hasTriggers())  {  [CE]  illegal  start  of  expression  [FE]                    OptionException      [CONTEXT]      final  SortedMap  newOptionMap  =  new  TreeMap(ReverseStringComparator.getInstance());  final  Set  newPrefixes  =  new  HashSet();  for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {  final  Option  option  =  (Option)  i.next();  option.setParent(this);      [BUGGY]  if(!option.hasAnonymous()  &&  option.hasTriggers())  {  [BUGGY]      i.remove();  newAnonymous.add(option);  }  else  {  final  Set  triggers  =  option.getTriggers();  for  (Iterator  j  =  triggers.iterator();  j.hasNext();)  {  newOptionMap.put(j.next(),  option);  }    [CLASS]  GroupImpl  [METHOD]  <init>  [RETURN_TYPE]  String,int,int,boolean)  List  options  String  name  String  description  final  int  minimum  final  int  maximum  final  boolean  required  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  required  SortedMap  newOptionMap  optionMap  Iterator  i  j  List  anonymous  newAnonymous  options  Option  option  String  description  name  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	96	96	1	replace	if(!option.hasAnonymous()  &&  option.hasTriggers())  {	  if(option.hasAnonymous()    ||    option.hasTriggers())    {    	non-compiled	[CE]  illegal  start  of  expression	7	None	replace
109	[BUG]  [BUGGY]  if(option.hasTriggers()  ||  option.hasAnonymous())  {  [CE]  illegal  start  of  expression  [FE]                      OptionException      [CONTEXT]      final  SortedMap  newOptionMap  =  new  TreeMap(ReverseStringComparator.getInstance());  final  Set  newPrefixes  =  new  HashSet();  for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {  final  Option  option  =  (Option)  i.next();  option.setParent(this);      [BUGGY]  if(option.hasTriggers()  ||  option.hasAnonymous())  {  [BUGGY]      i.remove();  newAnonymous.add(option);  }  else  {  final  Set  triggers  =  option.getTriggers();  for  (Iterator  j  =  triggers.iterator();  j.hasNext();)  {  newOptionMap.put(j.next(),  option);  }    [CLASS]  GroupImpl  [METHOD]  <init>  [RETURN_TYPE]  String,int,int,boolean)  List  options  String  name  String  description  final  int  minimum  final  int  maximum  final  boolean  required  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  required  SortedMap  newOptionMap  optionMap  Iterator  i  j  List  anonymous  newAnonymous  options  Option  option  String  description  name  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	96	96	1	replace	if(option.hasTriggers()  ||  option.hasAnonymous())  {	  if(option.hasAnonymous()    ||    option.hasTriggers())    {    	non-compiled	[CE]  illegal  start  of  expression	7	None	replace
110	[BUG]  [BUGGY]  if(option.hasAnonymousTriggers())  {  [CE]  illegal  start  of  expression  [FE]                OptionException      [CONTEXT]      final  SortedMap  newOptionMap  =  new  TreeMap(ReverseStringComparator.getInstance());  final  Set  newPrefixes  =  new  HashSet();  for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {  final  Option  option  =  (Option)  i.next();  option.setParent(this);      [BUGGY]  if(option.hasAnonymousTriggers())  {  [BUGGY]      i.remove();  newAnonymous.add(option);  }  else  {  final  Set  triggers  =  option.getTriggers();  for  (Iterator  j  =  triggers.iterator();  j.hasNext();)  {  newOptionMap.put(j.next(),  option);  }    [CLASS]  GroupImpl  [METHOD]  <init>  [RETURN_TYPE]  String,int,int,boolean)  List  options  String  name  String  description  final  int  minimum  final  int  maximum  final  boolean  required  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  required  SortedMap  newOptionMap  optionMap  Iterator  i  j  List  anonymous  newAnonymous  options  Option  option  String  description  name  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	96	96	1	replace	if(option.hasAnonymousTriggers())  {	  if(option.hasTriggers())    {    	non-compiled	[CE]  illegal  start  of  expression	6	None	replace
111	[BUG]  [BUGGY]  if(option.hasDescription())  {  [CE]  illegal  start  of  expression  [FE]                  OptionException      [CONTEXT]      final  SortedMap  newOptionMap  =  new  TreeMap(ReverseStringComparator.getInstance());  final  Set  newPrefixes  =  new  HashSet();  for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {  final  Option  option  =  (Option)  i.next();  option.setParent(this);      [BUGGY]  if(option.hasDescription())  {  [BUGGY]      i.remove();  newAnonymous.add(option);  }  else  {  final  Set  triggers  =  option.getTriggers();  for  (Iterator  j  =  triggers.iterator();  j.hasNext();)  {  newOptionMap.put(j.next(),  option);  }    [CLASS]  GroupImpl  [METHOD]  <init>  [RETURN_TYPE]  String,int,int,boolean)  List  options  String  name  String  description  final  int  minimum  final  int  maximum  final  boolean  required  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  required  SortedMap  newOptionMap  optionMap  Iterator  i  j  List  anonymous  newAnonymous  options  Option  option  String  description  name  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	96	96	1	replace	if(option.hasDescription())  {	  if(option.hasTriggers())    {    	non-compiled	[CE]  illegal  start  of  expression	6	None	replace
112	[BUG]  [BUGGY]  option  =(Option)i.getAnonymous();  [CE]  illegal  start  of  expression  [FE]                  OptionException      [CONTEXT]      final  SortedMap  newOptionMap  =  new  TreeMap(ReverseStringComparator.getInstance());  final  Set  newPrefixes  =  new  HashSet();  for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {  final  Option  option  =  (Option)  i.next();  option.setParent(this);      [BUGGY]  option  =(Option)i.getAnonymous();  [BUGGY]      if  (option  instanceof  Argument)  {  i.remove();  newAnonymous.add(option);  }  else  {  final  Set  triggers  =  option.getTriggers();  for  (Iterator  j  =  triggers.iterator();  j.hasNext();)  {  newOptionMap.put(j.next(),  option);  }    [CLASS]  GroupImpl  [METHOD]  <init>  [RETURN_TYPE]  String,int,int,boolean)  List  options  String  name  String  description  final  int  minimum  final  int  maximum  final  boolean  required  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  required  SortedMap  newOptionMap  optionMap  Iterator  i  j  List  anonymous  newAnonymous  options  Option  option  String  description  name  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	96	96	1	replace	option  =(Option)i.getAnonymous();	  Option    option    =(Option)i.getAnonymous();    	non-compiled	[CE]  illegal  start  of  expression	67	None	replace
113	[BUG]  [BUGGY]  final  Option  option  =  option.getOption(description);  [CE]  illegal  start  of  expression  [FE]                    OptionException      [CONTEXT]      final  SortedMap  newOptionMap  =  new  TreeMap(ReverseStringComparator.getInstance());  final  Set  newPrefixes  =  new  HashSet();  for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {  final  Option  option  =  (Option)  i.next();  option.setParent(this);      [BUGGY]  final  Option  option  =  option.getOption(description);  [BUGGY]      if  (option  instanceof  Argument)  {  i.remove();  newAnonymous.add(option);  }  else  {  final  Set  triggers  =  option.getTriggers();  for  (Iterator  j  =  triggers.iterator();  j.hasNext();)  {  newOptionMap.put(j.next(),  option);  }    [CLASS]  GroupImpl  [METHOD]  <init>  [RETURN_TYPE]  String,int,int,boolean)  List  options  String  name  String  description  final  int  minimum  final  int  maximum  final  boolean  required  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  required  SortedMap  newOptionMap  optionMap  Iterator  i  j  List  anonymous  newAnonymous  options  Option  option  String  description  name  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	96	96	1	replace	final  Option  option  =  option.getOption(description);	  final    Option    option    =    option.getOption(name);    	non-compiled	[CE]  illegal  start  of  expression	11	None	replace
114	[BUG]  [BUGGY]  final  Option  option  =  option.getOption(name,  minimum);  [CE]  illegal  start  of  expression  [FE]                      OptionException      [CONTEXT]      final  SortedMap  newOptionMap  =  new  TreeMap(ReverseStringComparator.getInstance());  final  Set  newPrefixes  =  new  HashSet();  for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {  final  Option  option  =  (Option)  i.next();  option.setParent(this);      [BUGGY]  final  Option  option  =  option.getOption(name,  minimum);  [BUGGY]      if  (option  instanceof  Argument)  {  i.remove();  newAnonymous.add(option);  }  else  {  final  Set  triggers  =  option.getTriggers();  for  (Iterator  j  =  triggers.iterator();  j.hasNext();)  {  newOptionMap.put(j.next(),  option);  }    [CLASS]  GroupImpl  [METHOD]  <init>  [RETURN_TYPE]  String,int,int,boolean)  List  options  String  name  String  description  final  int  minimum  final  int  maximum  final  boolean  required  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  required  SortedMap  newOptionMap  optionMap  Iterator  i  j  List  anonymous  newAnonymous  options  Option  option  String  description  name  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	96	96	1	replace	final  Option  option  =  option.getOption(name,  minimum);	  final    Option    option    =    option.getOption(name);    	non-compiled	[CE]  illegal  start  of  expression	11	None	replace
115	[BUG]  [BUGGY]  final  Option  option  =  option.getOption(name,  description);  [CE]  illegal  start  of  expression  [FE]                        OptionException      [CONTEXT]      final  SortedMap  newOptionMap  =  new  TreeMap(ReverseStringComparator.getInstance());  final  Set  newPrefixes  =  new  HashSet();  for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {  final  Option  option  =  (Option)  i.next();  option.setParent(this);      [BUGGY]  final  Option  option  =  option.getOption(name,  description);  [BUGGY]      if  (option  instanceof  Argument)  {  i.remove();  newAnonymous.add(option);  }  else  {  final  Set  triggers  =  option.getTriggers();  for  (Iterator  j  =  triggers.iterator();  j.hasNext();)  {  newOptionMap.put(j.next(),  option);  }    [CLASS]  GroupImpl  [METHOD]  <init>  [RETURN_TYPE]  String,int,int,boolean)  List  options  String  name  String  description  final  int  minimum  final  int  maximum  final  boolean  required  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  required  SortedMap  newOptionMap  optionMap  Iterator  i  j  List  anonymous  newAnonymous  options  Option  option  String  description  name  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	96	96	1	replace	final  Option  option  =  option.getOption(name,  description);	  final    Option    option    =    option.getOption(name);    	non-compiled	[CE]  illegal  start  of  expression	11	None	replace
116	[BUG]  [BUGGY]  final  Option  option  =  options.getOption(name);  [CE]  illegal  start  of  expression  [FE]                OptionException      [CONTEXT]      final  SortedMap  newOptionMap  =  new  TreeMap(ReverseStringComparator.getInstance());  final  Set  newPrefixes  =  new  HashSet();  for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {  final  Option  option  =  (Option)  i.next();  option.setParent(this);      [BUGGY]  final  Option  option  =  options.getOption(name);  [BUGGY]      if  (option  instanceof  Argument)  {  i.remove();  newAnonymous.add(option);  }  else  {  final  Set  triggers  =  option.getTriggers();  for  (Iterator  j  =  triggers.iterator();  j.hasNext();)  {  newOptionMap.put(j.next(),  option);  }    [CLASS]  GroupImpl  [METHOD]  <init>  [RETURN_TYPE]  String,int,int,boolean)  List  options  String  name  String  description  final  int  minimum  final  int  maximum  final  boolean  required  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  required  SortedMap  newOptionMap  optionMap  Iterator  i  j  List  anonymous  newAnonymous  options  Option  option  String  description  name  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	96	96	1	replace	final  Option  option  =  options.getOption(name);	  final    Option    option    =    options.getOption();    	non-compiled	[CE]  illegal  start  of  expression	18	None	replace
117	[BUG]  [BUGGY]  final  Option  option  =  options.getOption(i);  [CE]  illegal  start  of  expression  [FE]                  OptionException      [CONTEXT]      final  SortedMap  newOptionMap  =  new  TreeMap(ReverseStringComparator.getInstance());  final  Set  newPrefixes  =  new  HashSet();  for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {  final  Option  option  =  (Option)  i.next();  option.setParent(this);      [BUGGY]  final  Option  option  =  options.getOption(i);  [BUGGY]      if  (option  instanceof  Argument)  {  i.remove();  newAnonymous.add(option);  }  else  {  final  Set  triggers  =  option.getTriggers();  for  (Iterator  j  =  triggers.iterator();  j.hasNext();)  {  newOptionMap.put(j.next(),  option);  }    [CLASS]  GroupImpl  [METHOD]  <init>  [RETURN_TYPE]  String,int,int,boolean)  List  options  String  name  String  description  final  int  minimum  final  int  maximum  final  boolean  required  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  required  SortedMap  newOptionMap  optionMap  Iterator  i  j  List  anonymous  newAnonymous  options  Option  option  String  description  name  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	96	96	1	replace	final  Option  option  =  options.getOption(i);	  final    Option    option    =    options.getOption();    	non-compiled	[CE]  illegal  start  of  expression	18	None	replace
118	[BUG]  [BUGGY]  if(option.hasNext()  &&  option  instanceof  Option)  {  [CE]  illegal  start  of  expression  [FE]              OptionException      [CONTEXT]      final  SortedMap  newOptionMap  =  new  TreeMap(ReverseStringComparator.getInstance());  final  Set  newPrefixes  =  new  HashSet();  for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {  final  Option  option  =  (Option)  i.next();  option.setParent(this);      [BUGGY]  if(option.hasNext()  &&  option  instanceof  Option)  {  [BUGGY]      i.remove();  newAnonymous.add(option);  }  else  {  final  Set  triggers  =  option.getTriggers();  for  (Iterator  j  =  triggers.iterator();  j.hasNext();)  {  newOptionMap.put(j.next(),  option);  }    [CLASS]  GroupImpl  [METHOD]  <init>  [RETURN_TYPE]  String,int,int,boolean)  List  options  String  name  String  description  final  int  minimum  final  int  maximum  final  boolean  required  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  required  SortedMap  newOptionMap  optionMap  Iterator  i  j  List  anonymous  newAnonymous  options  Option  option  String  description  name  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	96	96	1	replace	if(option.hasNext()  &&  option  instanceof  Option)  {	  if(!option.hasNext()    &&    option    instanceof    Option)    {    	non-compiled	[CE]  illegal  start  of  expression	38	None	replace
119	[BUG]  [BUGGY]  Option  option  =  option.getOption(name,  minimum,  maximum);  [CE]  illegal  start  of  expression  [FE]              OptionException      [CONTEXT]      final  SortedMap  newOptionMap  =  new  TreeMap(ReverseStringComparator.getInstance());  final  Set  newPrefixes  =  new  HashSet();  for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {  final  Option  option  =  (Option)  i.next();  option.setParent(this);      [BUGGY]  Option  option  =  option.getOption(name,  minimum,  maximum);  [BUGGY]      if  (option  instanceof  Argument)  {  i.remove();  newAnonymous.add(option);  }  else  {  final  Set  triggers  =  option.getTriggers();  for  (Iterator  j  =  triggers.iterator();  j.hasNext();)  {  newOptionMap.put(j.next(),  option);  }    [CLASS]  GroupImpl  [METHOD]  <init>  [RETURN_TYPE]  String,int,int,boolean)  List  options  String  name  String  description  final  int  minimum  final  int  maximum  final  boolean  required  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  required  SortedMap  newOptionMap  optionMap  Iterator  i  j  List  anonymous  newAnonymous  options  Option  option  String  description  name  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	96	96	1	replace	Option  option  =  option.getOption(name,  minimum,  maximum);	  Option    option    =    option.getOption(name,    minimum);    	non-compiled	[CE]  illegal  start  of  expression	29	None	replace
120	[BUG]  [BUGGY]  Option  option  =  option.getOption(description,  minimum);  [CE]  illegal  start  of  expression  [FE]                OptionException      [CONTEXT]      final  SortedMap  newOptionMap  =  new  TreeMap(ReverseStringComparator.getInstance());  final  Set  newPrefixes  =  new  HashSet();  for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {  final  Option  option  =  (Option)  i.next();  option.setParent(this);      [BUGGY]  Option  option  =  option.getOption(description,  minimum);  [BUGGY]      if  (option  instanceof  Argument)  {  i.remove();  newAnonymous.add(option);  }  else  {  final  Set  triggers  =  option.getTriggers();  for  (Iterator  j  =  triggers.iterator();  j.hasNext();)  {  newOptionMap.put(j.next(),  option);  }    [CLASS]  GroupImpl  [METHOD]  <init>  [RETURN_TYPE]  String,int,int,boolean)  List  options  String  name  String  description  final  int  minimum  final  int  maximum  final  boolean  required  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  required  SortedMap  newOptionMap  optionMap  Iterator  i  j  List  anonymous  newAnonymous  options  Option  option  String  description  name  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	96	96	1	replace	Option  option  =  option.getOption(description,  minimum);	  Option    option    =    option.getOption(name,    minimum);    	non-compiled	[CE]  illegal  start  of  expression	29	None	replace
121	[BUG]  [BUGGY]  Option  option  =  options.getOption(name,  minimum);  [CE]  illegal  start  of  expression  [FE]                  OptionException      [CONTEXT]      final  SortedMap  newOptionMap  =  new  TreeMap(ReverseStringComparator.getInstance());  final  Set  newPrefixes  =  new  HashSet();  for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {  final  Option  option  =  (Option)  i.next();  option.setParent(this);      [BUGGY]  Option  option  =  options.getOption(name,  minimum);  [BUGGY]      if  (option  instanceof  Argument)  {  i.remove();  newAnonymous.add(option);  }  else  {  final  Set  triggers  =  option.getTriggers();  for  (Iterator  j  =  triggers.iterator();  j.hasNext();)  {  newOptionMap.put(j.next(),  option);  }    [CLASS]  GroupImpl  [METHOD]  <init>  [RETURN_TYPE]  String,int,int,boolean)  List  options  String  name  String  description  final  int  minimum  final  int  maximum  final  boolean  required  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  required  SortedMap  newOptionMap  optionMap  Iterator  i  j  List  anonymous  newAnonymous  options  Option  option  String  description  name  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	96	96	1	replace	Option  option  =  options.getOption(name,  minimum);	  Option    option    =    option.getOption(name,    minimum);    	non-compiled	[CE]  illegal  start  of  expression	29	None	replace
122	[BUG]  [BUGGY]  if(option  instanceof  Option  &&  option  instanceof  Anonymous)  {  [CE]  illegal  start  of  expression  [FE]            OptionException      [CONTEXT]      final  SortedMap  newOptionMap  =  new  TreeMap(ReverseStringComparator.getInstance());  final  Set  newPrefixes  =  new  HashSet();  for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {  final  Option  option  =  (Option)  i.next();  option.setParent(this);      [BUGGY]  if(option  instanceof  Option  &&  option  instanceof  Anonymous)  {  [BUGGY]      i.remove();  newAnonymous.add(option);  }  else  {  final  Set  triggers  =  option.getTriggers();  for  (Iterator  j  =  triggers.iterator();  j.hasNext();)  {  newOptionMap.put(j.next(),  option);  }    [CLASS]  GroupImpl  [METHOD]  <init>  [RETURN_TYPE]  String,int,int,boolean)  List  options  String  name  String  description  final  int  minimum  final  int  maximum  final  boolean  required  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  required  SortedMap  newOptionMap  optionMap  Iterator  i  j  List  anonymous  newAnonymous  options  Option  option  String  description  name  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	96	96	1	replace	if(option  instanceof  Option  &&  option  instanceof  Anonymous)  {	  if(option    instanceof    Option    ||    option    instanceof    Anonymous)    {    	non-compiled	[CE]  illegal  start  of  expression	13	None	replace
123	[BUG]  [BUGGY]  if(option  instanceof  Anonymous  ||  option  instanceof  Option)  {  [CE]  illegal  start  of  expression  [FE]              OptionException      [CONTEXT]      final  SortedMap  newOptionMap  =  new  TreeMap(ReverseStringComparator.getInstance());  final  Set  newPrefixes  =  new  HashSet();  for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {  final  Option  option  =  (Option)  i.next();  option.setParent(this);      [BUGGY]  if(option  instanceof  Anonymous  ||  option  instanceof  Option)  {  [BUGGY]      i.remove();  newAnonymous.add(option);  }  else  {  final  Set  triggers  =  option.getTriggers();  for  (Iterator  j  =  triggers.iterator();  j.hasNext();)  {  newOptionMap.put(j.next(),  option);  }    [CLASS]  GroupImpl  [METHOD]  <init>  [RETURN_TYPE]  String,int,int,boolean)  List  options  String  name  String  description  final  int  minimum  final  int  maximum  final  boolean  required  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  required  SortedMap  newOptionMap  optionMap  Iterator  i  j  List  anonymous  newAnonymous  options  Option  option  String  description  name  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	96	96	1	replace	if(option  instanceof  Anonymous  ||  option  instanceof  Option)  {	  if(option    instanceof    Option    ||    option    instanceof    Anonymous)    {    	non-compiled	[CE]  illegal  start  of  expression	13	None	replace
124	[BUG]  [BUGGY]  if(option.getDescription()!=  null  &&  option.getDescription().length()  >  minimum)  {  [CE]  illegal  start  of  expression  [FE]            OptionException      [CONTEXT]      final  SortedMap  newOptionMap  =  new  TreeMap(ReverseStringComparator.getInstance());  final  Set  newPrefixes  =  new  HashSet();  for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {  final  Option  option  =  (Option)  i.next();  option.setParent(this);      [BUGGY]  if(option.getDescription()!=  null  &&  option.getDescription().length()  >  minimum)  {  [BUGGY]      i.remove();  newAnonymous.add(option);  }  else  {  final  Set  triggers  =  option.getTriggers();  for  (Iterator  j  =  triggers.iterator();  j.hasNext();)  {  newOptionMap.put(j.next(),  option);  }    [CLASS]  GroupImpl  [METHOD]  <init>  [RETURN_TYPE]  String,int,int,boolean)  List  options  String  name  String  description  final  int  minimum  final  int  maximum  final  boolean  required  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  required  SortedMap  newOptionMap  optionMap  Iterator  i  j  List  anonymous  newAnonymous  options  Option  option  String  description  name  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	96	96	1	replace	if(option.getDescription()!=  null  &&  option.getDescription().length()  >  minimum)  {	  if(option.getDescription()!=    null    &&    option.getDescription().length()    >    maximum)    {    	non-compiled	[CE]  illegal  start  of  expression	71	None	replace
125	[BUG]  [BUGGY]  if(option.getDescription()!=  null  ||  option.getDescription().length()  >  maximum)  {  [CE]  illegal  start  of  expression  [FE]              OptionException      [CONTEXT]      final  SortedMap  newOptionMap  =  new  TreeMap(ReverseStringComparator.getInstance());  final  Set  newPrefixes  =  new  HashSet();  for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {  final  Option  option  =  (Option)  i.next();  option.setParent(this);      [BUGGY]  if(option.getDescription()!=  null  ||  option.getDescription().length()  >  maximum)  {  [BUGGY]      i.remove();  newAnonymous.add(option);  }  else  {  final  Set  triggers  =  option.getTriggers();  for  (Iterator  j  =  triggers.iterator();  j.hasNext();)  {  newOptionMap.put(j.next(),  option);  }    [CLASS]  GroupImpl  [METHOD]  <init>  [RETURN_TYPE]  String,int,int,boolean)  List  options  String  name  String  description  final  int  minimum  final  int  maximum  final  boolean  required  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  required  SortedMap  newOptionMap  optionMap  Iterator  i  j  List  anonymous  newAnonymous  options  Option  option  String  description  name  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	96	96	1	replace	if(option.getDescription()!=  null  ||  option.getDescription().length()  >  maximum)  {	  if(option.getDescription()!=    null    &&    option.getDescription().length()    >    maximum)    {    	non-compiled	[CE]  illegal  start  of  expression	71	None	replace
126	[BUG]  [BUGGY]  if(option.getDescription()!=  null  &&  option.getDescription().length()  <  maximum)  {  [CE]  illegal  start  of  expression  [FE]                OptionException      [CONTEXT]      final  SortedMap  newOptionMap  =  new  TreeMap(ReverseStringComparator.getInstance());  final  Set  newPrefixes  =  new  HashSet();  for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {  final  Option  option  =  (Option)  i.next();  option.setParent(this);      [BUGGY]  if(option.getDescription()!=  null  &&  option.getDescription().length()  <  maximum)  {  [BUGGY]      i.remove();  newAnonymous.add(option);  }  else  {  final  Set  triggers  =  option.getTriggers();  for  (Iterator  j  =  triggers.iterator();  j.hasNext();)  {  newOptionMap.put(j.next(),  option);  }    [CLASS]  GroupImpl  [METHOD]  <init>  [RETURN_TYPE]  String,int,int,boolean)  List  options  String  name  String  description  final  int  minimum  final  int  maximum  final  boolean  required  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  required  SortedMap  newOptionMap  optionMap  Iterator  i  j  List  anonymous  newAnonymous  options  Option  option  String  description  name  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	96	96	1	replace	if(option.getDescription()!=  null  &&  option.getDescription().length()  <  maximum)  {	  if(option.getDescription()!=    null    &&    option.getDescription().length()    >    maximum)    {    	non-compiled	[CE]  illegal  start  of  expression	71	None	replace
127	[BUG]  [BUGGY]  final  Option  option  =  option.getOption(default,  i);  [CE]  illegal  start  of  expression  [FE]                  OptionException      [CONTEXT]      final  SortedMap  newOptionMap  =  new  TreeMap(ReverseStringComparator.getInstance());  final  Set  newPrefixes  =  new  HashSet();  for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {  final  Option  option  =  (Option)  i.next();  option.setParent(this);      [BUGGY]  final  Option  option  =  option.getOption(default,  i);  [BUGGY]      if  (option  instanceof  Argument)  {  i.remove();  newAnonymous.add(option);  }  else  {  final  Set  triggers  =  option.getTriggers();  for  (Iterator  j  =  triggers.iterator();  j.hasNext();)  {  newOptionMap.put(j.next(),  option);  }    [CLASS]  GroupImpl  [METHOD]  <init>  [RETURN_TYPE]  String,int,int,boolean)  List  options  String  name  String  description  final  int  minimum  final  int  maximum  final  boolean  required  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  required  SortedMap  newOptionMap  optionMap  Iterator  i  j  List  anonymous  newAnonymous  options  Option  option  String  description  name  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	96	96	1	replace	final  Option  option  =  option.getOption(default,  i);	  final    Option    option    =    option.getOption(default);    	non-compiled	[CE]  illegal  start  of  expression	10	None	replace
128	[BUG]  [BUGGY]  final  Option  option  =  option.getOption(default,  description);  [CE]  illegal  start  of  expression  [FE]                    OptionException      [CONTEXT]      final  SortedMap  newOptionMap  =  new  TreeMap(ReverseStringComparator.getInstance());  final  Set  newPrefixes  =  new  HashSet();  for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {  final  Option  option  =  (Option)  i.next();  option.setParent(this);      [BUGGY]  final  Option  option  =  option.getOption(default,  description);  [BUGGY]      if  (option  instanceof  Argument)  {  i.remove();  newAnonymous.add(option);  }  else  {  final  Set  triggers  =  option.getTriggers();  for  (Iterator  j  =  triggers.iterator();  j.hasNext();)  {  newOptionMap.put(j.next(),  option);  }    [CLASS]  GroupImpl  [METHOD]  <init>  [RETURN_TYPE]  String,int,int,boolean)  List  options  String  name  String  description  final  int  minimum  final  int  maximum  final  boolean  required  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  required  SortedMap  newOptionMap  optionMap  Iterator  i  j  List  anonymous  newAnonymous  options  Option  option  String  description  name  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	96	96	1	replace	final  Option  option  =  option.getOption(default,  description);	  final    Option    option    =    option.getOption(default);    	non-compiled	[CE]  illegal  start  of  expression	10	None	replace
129	[BUG]  [BUGGY]  if(!(option.hasNext()  &&  option  instanceof  Option))  {  [CE]  illegal  start  of  expression  [FE]                OptionException      [CONTEXT]      final  SortedMap  newOptionMap  =  new  TreeMap(ReverseStringComparator.getInstance());  final  Set  newPrefixes  =  new  HashSet();  for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {  final  Option  option  =  (Option)  i.next();  option.setParent(this);      [BUGGY]  if(!(option.hasNext()  &&  option  instanceof  Option))  {  [BUGGY]      i.remove();  newAnonymous.add(option);  }  else  {  final  Set  triggers  =  option.getTriggers();  for  (Iterator  j  =  triggers.iterator();  j.hasNext();)  {  newOptionMap.put(j.next(),  option);  }    [CLASS]  GroupImpl  [METHOD]  <init>  [RETURN_TYPE]  String,int,int,boolean)  List  options  String  name  String  description  final  int  minimum  final  int  maximum  final  boolean  required  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  required  SortedMap  newOptionMap  optionMap  Iterator  i  j  List  anonymous  newAnonymous  options  Option  option  String  description  name  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	96	96	1	replace	if(!(option.hasNext()  &&  option  instanceof  Option))  {	  if(!(i.hasNext()    &&    option    instanceof    Option))    {    	non-compiled	[CE]  illegal  start  of  expression	26	None	replace
130	[BUG]  [BUGGY]  if(!(i  instanceof  Option)&&!(option.hasNext()))  {  [CE]  illegal  start  of  expression  [FE]                    OptionException      [CONTEXT]      final  SortedMap  newOptionMap  =  new  TreeMap(ReverseStringComparator.getInstance());  final  Set  newPrefixes  =  new  HashSet();  for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {  final  Option  option  =  (Option)  i.next();  option.setParent(this);      [BUGGY]  if(!(i  instanceof  Option)&&!(option.hasNext()))  {  [BUGGY]      i.remove();  newAnonymous.add(option);  }  else  {  final  Set  triggers  =  option.getTriggers();  for  (Iterator  j  =  triggers.iterator();  j.hasNext();)  {  newOptionMap.put(j.next(),  option);  }    [CLASS]  GroupImpl  [METHOD]  <init>  [RETURN_TYPE]  String,int,int,boolean)  List  options  String  name  String  description  final  int  minimum  final  int  maximum  final  boolean  required  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  required  SortedMap  newOptionMap  optionMap  Iterator  i  j  List  anonymous  newAnonymous  options  Option  option  String  description  name  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	96	96	1	replace	if(!(i  instanceof  Option)&&!(option.hasNext()))  {	  if(!(option    instanceof    Option)&&!(i.hasNext()))    {    	non-compiled	[CE]  illegal  start  of  expression	66	None	replace
131	[BUG]  [BUGGY]  if(!(i  instanceof  Option)&&!(i.hasNext()))  {  [CE]  illegal  start  of  expression  [FE]                      OptionException      [CONTEXT]      final  SortedMap  newOptionMap  =  new  TreeMap(ReverseStringComparator.getInstance());  final  Set  newPrefixes  =  new  HashSet();  for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {  final  Option  option  =  (Option)  i.next();  option.setParent(this);      [BUGGY]  if(!(i  instanceof  Option)&&!(i.hasNext()))  {  [BUGGY]      i.remove();  newAnonymous.add(option);  }  else  {  final  Set  triggers  =  option.getTriggers();  for  (Iterator  j  =  triggers.iterator();  j.hasNext();)  {  newOptionMap.put(j.next(),  option);  }    [CLASS]  GroupImpl  [METHOD]  <init>  [RETURN_TYPE]  String,int,int,boolean)  List  options  String  name  String  description  final  int  minimum  final  int  maximum  final  boolean  required  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  required  SortedMap  newOptionMap  optionMap  Iterator  i  j  List  anonymous  newAnonymous  options  Option  option  String  description  name  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	96	96	1	replace	if(!(i  instanceof  Option)&&!(i.hasNext()))  {	  if(!(option    instanceof    Option)&&!(i.hasNext()))    {    	non-compiled	[CE]  illegal  start  of  expression	66	None	replace
132	[BUG]  [BUGGY]  if(!(i.hasNext()  instanceof  Option)&&!(i.hasNext()  instanceof  Option))  {  [CE]  illegal  start  of  expression  [FE]                        OptionException      [CONTEXT]      final  SortedMap  newOptionMap  =  new  TreeMap(ReverseStringComparator.getInstance());  final  Set  newPrefixes  =  new  HashSet();  for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {  final  Option  option  =  (Option)  i.next();  option.setParent(this);      [BUGGY]  if(!(i.hasNext()  instanceof  Option)&&!(i.hasNext()  instanceof  Option))  {  [BUGGY]      i.remove();  newAnonymous.add(option);  }  else  {  final  Set  triggers  =  option.getTriggers();  for  (Iterator  j  =  triggers.iterator();  j.hasNext();)  {  newOptionMap.put(j.next(),  option);  }    [CLASS]  GroupImpl  [METHOD]  <init>  [RETURN_TYPE]  String,int,int,boolean)  List  options  String  name  String  description  final  int  minimum  final  int  maximum  final  boolean  required  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  required  SortedMap  newOptionMap  optionMap  Iterator  i  j  List  anonymous  newAnonymous  options  Option  option  String  description  name  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	96	96	1	replace	if(!(i.hasNext()  instanceof  Option)&&!(i.hasNext()  instanceof  Option))  {	  if(!(option    instanceof    Option)&&!(i.hasNext()))    {    	non-compiled	[CE]  illegal  start  of  expression	66	None	replace
133	[BUG]  [BUGGY]  if(option.hasAnonymous()  ||  newAnonymous.contains(option.getTriggers()))  {  [CE]  illegal  start  of  expression  [FE]                    OptionException      [CONTEXT]      final  SortedMap  newOptionMap  =  new  TreeMap(ReverseStringComparator.getInstance());  final  Set  newPrefixes  =  new  HashSet();  for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {  final  Option  option  =  (Option)  i.next();  option.setParent(this);      [BUGGY]  if(option.hasAnonymous()  ||  newAnonymous.contains(option.getTriggers()))  {  [BUGGY]      i.remove();  newAnonymous.add(option);  }  else  {  final  Set  triggers  =  option.getTriggers();  for  (Iterator  j  =  triggers.iterator();  j.hasNext();)  {  newOptionMap.put(j.next(),  option);  }    [CLASS]  GroupImpl  [METHOD]  <init>  [RETURN_TYPE]  String,int,int,boolean)  List  options  String  name  String  description  final  int  minimum  final  int  maximum  final  boolean  required  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  required  SortedMap  newOptionMap  optionMap  Iterator  i  j  List  anonymous  newAnonymous  options  Option  option  String  description  name  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	96	96	1	replace	if(option.hasAnonymous()  ||  newAnonymous.contains(option.getTriggers()))  {	  if(option.hasAnonymous()    &&    newAnonymous.contains(option.getTriggers()))    {    	non-compiled	[CE]  illegal  start  of  expression	8	None	replace
134	[BUG]  [BUGGY]  if(i.hasNext()  &&  newAnonymous.contains(option.getTriggers()))  {  [CE]  illegal  start  of  expression  [FE]                      OptionException      [CONTEXT]      final  SortedMap  newOptionMap  =  new  TreeMap(ReverseStringComparator.getInstance());  final  Set  newPrefixes  =  new  HashSet();  for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {  final  Option  option  =  (Option)  i.next();  option.setParent(this);      [BUGGY]  if(i.hasNext()  &&  newAnonymous.contains(option.getTriggers()))  {  [BUGGY]      i.remove();  newAnonymous.add(option);  }  else  {  final  Set  triggers  =  option.getTriggers();  for  (Iterator  j  =  triggers.iterator();  j.hasNext();)  {  newOptionMap.put(j.next(),  option);  }    [CLASS]  GroupImpl  [METHOD]  <init>  [RETURN_TYPE]  String,int,int,boolean)  List  options  String  name  String  description  final  int  minimum  final  int  maximum  final  boolean  required  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  required  SortedMap  newOptionMap  optionMap  Iterator  i  j  List  anonymous  newAnonymous  options  Option  option  String  description  name  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	96	96	1	replace	if(i.hasNext()  &&  newAnonymous.contains(option.getTriggers()))  {	  if(option.hasAnonymous()    &&    newAnonymous.contains(option.getTriggers()))    {    	non-compiled	[CE]  illegal  start  of  expression	8	None	replace
135	[BUG]  [BUGGY]  final  Option  option  =  option.getOption(defaultValue,  defaultValue);  [CE]  illegal  start  of  expression  [FE]                OptionException      [CONTEXT]      final  SortedMap  newOptionMap  =  new  TreeMap(ReverseStringComparator.getInstance());  final  Set  newPrefixes  =  new  HashSet();  for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {  final  Option  option  =  (Option)  i.next();  option.setParent(this);      [BUGGY]  final  Option  option  =  option.getOption(defaultValue,  defaultValue);  [BUGGY]      if  (option  instanceof  Argument)  {  i.remove();  newAnonymous.add(option);  }  else  {  final  Set  triggers  =  option.getTriggers();  for  (Iterator  j  =  triggers.iterator();  j.hasNext();)  {  newOptionMap.put(j.next(),  option);  }    [CLASS]  GroupImpl  [METHOD]  <init>  [RETURN_TYPE]  String,int,int,boolean)  List  options  String  name  String  description  final  int  minimum  final  int  maximum  final  boolean  required  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  required  SortedMap  newOptionMap  optionMap  Iterator  i  j  List  anonymous  newAnonymous  options  Option  option  String  description  name  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	96	96	1	replace	final  Option  option  =  option.getOption(defaultValue,  defaultValue);	  final    Option    option    =    option.getOption(defaultValue);    	non-compiled	[CE]  illegal  start  of  expression	60	None	replace
136	[BUG]  [BUGGY]  final  Option  option  =  option.getOption(defaultValue,  description);  [CE]  illegal  start  of  expression  [FE]                  OptionException      [CONTEXT]      final  SortedMap  newOptionMap  =  new  TreeMap(ReverseStringComparator.getInstance());  final  Set  newPrefixes  =  new  HashSet();  for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {  final  Option  option  =  (Option)  i.next();  option.setParent(this);      [BUGGY]  final  Option  option  =  option.getOption(defaultValue,  description);  [BUGGY]      if  (option  instanceof  Argument)  {  i.remove();  newAnonymous.add(option);  }  else  {  final  Set  triggers  =  option.getTriggers();  for  (Iterator  j  =  triggers.iterator();  j.hasNext();)  {  newOptionMap.put(j.next(),  option);  }    [CLASS]  GroupImpl  [METHOD]  <init>  [RETURN_TYPE]  String,int,int,boolean)  List  options  String  name  String  description  final  int  minimum  final  int  maximum  final  boolean  required  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  required  SortedMap  newOptionMap  optionMap  Iterator  i  j  List  anonymous  newAnonymous  options  Option  option  String  description  name  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	96	96	1	replace	final  Option  option  =  option.getOption(defaultValue,  description);	  final    Option    option    =    option.getOption(defaultValue);    	non-compiled	[CE]  illegal  start  of  expression	60	None	replace
137	[BUG]  [BUGGY]  final  Option  option  =  option.getOption(defaultValue,  minimum);  [CE]  illegal  start  of  expression  [FE]                    OptionException      [CONTEXT]      final  SortedMap  newOptionMap  =  new  TreeMap(ReverseStringComparator.getInstance());  final  Set  newPrefixes  =  new  HashSet();  for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {  final  Option  option  =  (Option)  i.next();  option.setParent(this);      [BUGGY]  final  Option  option  =  option.getOption(defaultValue,  minimum);  [BUGGY]      if  (option  instanceof  Argument)  {  i.remove();  newAnonymous.add(option);  }  else  {  final  Set  triggers  =  option.getTriggers();  for  (Iterator  j  =  triggers.iterator();  j.hasNext();)  {  newOptionMap.put(j.next(),  option);  }    [CLASS]  GroupImpl  [METHOD]  <init>  [RETURN_TYPE]  String,int,int,boolean)  List  options  String  name  String  description  final  int  minimum  final  int  maximum  final  boolean  required  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  required  SortedMap  newOptionMap  optionMap  Iterator  i  j  List  anonymous  newAnonymous  options  Option  option  String  description  name  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	96	96	1	replace	final  Option  option  =  option.getOption(defaultValue,  minimum);	  final    Option    option    =    option.getOption(defaultValue);    	non-compiled	[CE]  illegal  start  of  expression	60	None	replace
138	[BUG]  [BUGGY]  if(!(option  instanceof  Option  &&  option  instanceof  Anonymous))  {  [CE]  illegal  start  of  expression  [FE]                    OptionException      [CONTEXT]      final  SortedMap  newOptionMap  =  new  TreeMap(ReverseStringComparator.getInstance());  final  Set  newPrefixes  =  new  HashSet();  for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {  final  Option  option  =  (Option)  i.next();  option.setParent(this);      [BUGGY]  if(!(option  instanceof  Option  &&  option  instanceof  Anonymous))  {  [BUGGY]      i.remove();  newAnonymous.add(option);  }  else  {  final  Set  triggers  =  option.getTriggers();  for  (Iterator  j  =  triggers.iterator();  j.hasNext();)  {  newOptionMap.put(j.next(),  option);  }    [CLASS]  GroupImpl  [METHOD]  <init>  [RETURN_TYPE]  String,int,int,boolean)  List  options  String  name  String  description  final  int  minimum  final  int  maximum  final  boolean  required  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  required  SortedMap  newOptionMap  optionMap  Iterator  i  j  List  anonymous  newAnonymous  options  Option  option  String  description  name  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	96	96	1	replace	if(!(option  instanceof  Option  &&  option  instanceof  Anonymous))  {	  if(!(option    instanceof    Option    ||    option    instanceof    Anonymous))    {    	non-compiled	[CE]  illegal  start  of  expression	16	None	replace
139	[BUG]  [BUGGY]  if(!(option  instanceof  Anonymous  ||  option  instanceof  Anonymous))  {  [CE]  illegal  start  of  expression  [FE]                      OptionException      [CONTEXT]      final  SortedMap  newOptionMap  =  new  TreeMap(ReverseStringComparator.getInstance());  final  Set  newPrefixes  =  new  HashSet();  for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {  final  Option  option  =  (Option)  i.next();  option.setParent(this);      [BUGGY]  if(!(option  instanceof  Anonymous  ||  option  instanceof  Anonymous))  {  [BUGGY]      i.remove();  newAnonymous.add(option);  }  else  {  final  Set  triggers  =  option.getTriggers();  for  (Iterator  j  =  triggers.iterator();  j.hasNext();)  {  newOptionMap.put(j.next(),  option);  }    [CLASS]  GroupImpl  [METHOD]  <init>  [RETURN_TYPE]  String,int,int,boolean)  List  options  String  name  String  description  final  int  minimum  final  int  maximum  final  boolean  required  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  required  SortedMap  newOptionMap  optionMap  Iterator  i  j  List  anonymous  newAnonymous  options  Option  option  String  description  name  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	96	96	1	replace	if(!(option  instanceof  Anonymous  ||  option  instanceof  Anonymous))  {	  if(!(option    instanceof    Option    ||    option    instanceof    Anonymous))    {    	non-compiled	[CE]  illegal  start  of  expression	16	None	replace
140	[BUG]  [BUGGY]  Option  option  =  option.getOption(defaultName,  minimum,  maximum);  [CE]  illegal  start  of  expression  [FE]              OptionException      [CONTEXT]      final  SortedMap  newOptionMap  =  new  TreeMap(ReverseStringComparator.getInstance());  final  Set  newPrefixes  =  new  HashSet();  for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {  final  Option  option  =  (Option)  i.next();  option.setParent(this);      [BUGGY]  Option  option  =  option.getOption(defaultName,  minimum,  maximum);  [BUGGY]      if  (option  instanceof  Argument)  {  i.remove();  newAnonymous.add(option);  }  else  {  final  Set  triggers  =  option.getTriggers();  for  (Iterator  j  =  triggers.iterator();  j.hasNext();)  {  newOptionMap.put(j.next(),  option);  }    [CLASS]  GroupImpl  [METHOD]  <init>  [RETURN_TYPE]  String,int,int,boolean)  List  options  String  name  String  description  final  int  minimum  final  int  maximum  final  boolean  required  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  required  SortedMap  newOptionMap  optionMap  Iterator  i  j  List  anonymous  newAnonymous  options  Option  option  String  description  name  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	96	96	1	replace	Option  option  =  option.getOption(defaultName,  minimum,  maximum);	  Option    option    =    option.getOption(defaultName,    minimum);    	non-compiled	[CE]  illegal  start  of  expression	1	None	replace
141	[BUG]  [BUGGY]  if(option.hasNext()  ||  options  instanceof  Option)  {  [CE]  illegal  start  of  expression  [FE]              OptionException      [CONTEXT]      final  SortedMap  newOptionMap  =  new  TreeMap(ReverseStringComparator.getInstance());  final  Set  newPrefixes  =  new  HashSet();  for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {  final  Option  option  =  (Option)  i.next();  option.setParent(this);      [BUGGY]  if(option.hasNext()  ||  options  instanceof  Option)  {  [BUGGY]      i.remove();  newAnonymous.add(option);  }  else  {  final  Set  triggers  =  option.getTriggers();  for  (Iterator  j  =  triggers.iterator();  j.hasNext();)  {  newOptionMap.put(j.next(),  option);  }    [CLASS]  GroupImpl  [METHOD]  <init>  [RETURN_TYPE]  String,int,int,boolean)  List  options  String  name  String  description  final  int  minimum  final  int  maximum  final  boolean  required  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  required  SortedMap  newOptionMap  optionMap  Iterator  i  j  List  anonymous  newAnonymous  options  Option  option  String  description  name  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	96	96	1	replace	if(option.hasNext()  ||  options  instanceof  Option)  {	  if(i.hasNext()    ||    option    instanceof    Option)    {    	non-compiled	[CE]  illegal  start  of  expression	74	None	replace
142	[BUG]  [BUGGY]  if(option.getDescription()  ==  null  &&  option.getDescription().equals(name))  {  [CE]  illegal  start  of  expression  [FE]            OptionException      [CONTEXT]      final  SortedMap  newOptionMap  =  new  TreeMap(ReverseStringComparator.getInstance());  final  Set  newPrefixes  =  new  HashSet();  for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {  final  Option  option  =  (Option)  i.next();  option.setParent(this);      [BUGGY]  if(option.getDescription()  ==  null  &&  option.getDescription().equals(name))  {  [BUGGY]      i.remove();  newAnonymous.add(option);  }  else  {  final  Set  triggers  =  option.getTriggers();  for  (Iterator  j  =  triggers.iterator();  j.hasNext();)  {  newOptionMap.put(j.next(),  option);  }    [CLASS]  GroupImpl  [METHOD]  <init>  [RETURN_TYPE]  String,int,int,boolean)  List  options  String  name  String  description  final  int  minimum  final  int  maximum  final  boolean  required  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  required  SortedMap  newOptionMap  optionMap  Iterator  i  j  List  anonymous  newAnonymous  options  Option  option  String  description  name  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	96	96	1	replace	if(option.getDescription()  ==  null  &&  option.getDescription().equals(name))  {	  if(option.getDescription()!=    null    ||    option.getDescription().equals(name))    {    	non-compiled	[CE]  illegal  start  of  expression	33	None	replace
143	[BUG]  [BUGGY]  if(option.getDescription()!=  null  ||  option.getDescription().equals(description))  {  [CE]  illegal  start  of  expression  [FE]              OptionException      [CONTEXT]      final  SortedMap  newOptionMap  =  new  TreeMap(ReverseStringComparator.getInstance());  final  Set  newPrefixes  =  new  HashSet();  for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {  final  Option  option  =  (Option)  i.next();  option.setParent(this);      [BUGGY]  if(option.getDescription()!=  null  ||  option.getDescription().equals(description))  {  [BUGGY]      i.remove();  newAnonymous.add(option);  }  else  {  final  Set  triggers  =  option.getTriggers();  for  (Iterator  j  =  triggers.iterator();  j.hasNext();)  {  newOptionMap.put(j.next(),  option);  }    [CLASS]  GroupImpl  [METHOD]  <init>  [RETURN_TYPE]  String,int,int,boolean)  List  options  String  name  String  description  final  int  minimum  final  int  maximum  final  boolean  required  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  required  SortedMap  newOptionMap  optionMap  Iterator  i  j  List  anonymous  newAnonymous  options  Option  option  String  description  name  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	96	96	1	replace	if(option.getDescription()!=  null  ||  option.getDescription().equals(description))  {	  if(option.getDescription()!=    null    ||    option.getDescription().equals(name))    {    	non-compiled	[CE]  illegal  start  of  expression	33	None	replace
144	[BUG]  [BUGGY]  if(!(option  instanceof  Anonymous)&&  options.contains(option.getName()))  {  [CE]  illegal  start  of  expression  [FE]                  OptionException      [CONTEXT]      final  SortedMap  newOptionMap  =  new  TreeMap(ReverseStringComparator.getInstance());  final  Set  newPrefixes  =  new  HashSet();  for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {  final  Option  option  =  (Option)  i.next();  option.setParent(this);      [BUGGY]  if(!(option  instanceof  Anonymous)&&  options.contains(option.getName()))  {  [BUGGY]      i.remove();  newAnonymous.add(option);  }  else  {  final  Set  triggers  =  option.getTriggers();  for  (Iterator  j  =  triggers.iterator();  j.hasNext();)  {  newOptionMap.put(j.next(),  option);  }    [CLASS]  GroupImpl  [METHOD]  <init>  [RETURN_TYPE]  String,int,int,boolean)  List  options  String  name  String  description  final  int  minimum  final  int  maximum  final  boolean  required  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  required  SortedMap  newOptionMap  optionMap  Iterator  i  j  List  anonymous  newAnonymous  options  Option  option  String  description  name  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	96	96	1	replace	if(!(option  instanceof  Anonymous)&&  options.contains(option.getName()))  {	  if(!(option    instanceof    Anonymous))    {    	non-compiled	[CE]  illegal  start  of  expression	15	None	replace
145	[BUG]  [BUGGY]  Option  option  =  option.getOption(this,  maximum);  [CE]  illegal  start  of  expression  [FE]            OptionException      [CONTEXT]      final  SortedMap  newOptionMap  =  new  TreeMap(ReverseStringComparator.getInstance());  final  Set  newPrefixes  =  new  HashSet();  for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {  final  Option  option  =  (Option)  i.next();  option.setParent(this);      [BUGGY]  Option  option  =  option.getOption(this,  maximum);  [BUGGY]      if  (option  instanceof  Argument)  {  i.remove();  newAnonymous.add(option);  }  else  {  final  Set  triggers  =  option.getTriggers();  for  (Iterator  j  =  triggers.iterator();  j.hasNext();)  {  newOptionMap.put(j.next(),  option);  }    [CLASS]  GroupImpl  [METHOD]  <init>  [RETURN_TYPE]  String,int,int,boolean)  List  options  String  name  String  description  final  int  minimum  final  int  maximum  final  boolean  required  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  required  SortedMap  newOptionMap  optionMap  Iterator  i  j  List  anonymous  newAnonymous  options  Option  option  String  description  name  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	96	96	1	replace	Option  option  =  option.getOption(this,  maximum);	  Option    option    =    option.getOption(this,    minimum);    	non-compiled	[CE]  illegal  start  of  expression	22	None	replace
146	[BUG]  [BUGGY]  Option  option  =  option.getOption(this,  minimum,  maximum);  [CE]  illegal  start  of  expression  [FE]              OptionException      [CONTEXT]      final  SortedMap  newOptionMap  =  new  TreeMap(ReverseStringComparator.getInstance());  final  Set  newPrefixes  =  new  HashSet();  for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {  final  Option  option  =  (Option)  i.next();  option.setParent(this);      [BUGGY]  Option  option  =  option.getOption(this,  minimum,  maximum);  [BUGGY]      if  (option  instanceof  Argument)  {  i.remove();  newAnonymous.add(option);  }  else  {  final  Set  triggers  =  option.getTriggers();  for  (Iterator  j  =  triggers.iterator();  j.hasNext();)  {  newOptionMap.put(j.next(),  option);  }    [CLASS]  GroupImpl  [METHOD]  <init>  [RETURN_TYPE]  String,int,int,boolean)  List  options  String  name  String  description  final  int  minimum  final  int  maximum  final  boolean  required  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  required  SortedMap  newOptionMap  optionMap  Iterator  i  j  List  anonymous  newAnonymous  options  Option  option  String  description  name  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	96	96	1	replace	Option  option  =  option.getOption(this,  minimum,  maximum);	  Option    option    =    option.getOption(this,    minimum);    	non-compiled	[CE]  illegal  start  of  expression	22	None	replace
147	[BUG]  [BUGGY]  option  =  option.getOption(this,  maximum);  [CE]  illegal  start  of  expression  [FE]                OptionException      [CONTEXT]      final  SortedMap  newOptionMap  =  new  TreeMap(ReverseStringComparator.getInstance());  final  Set  newPrefixes  =  new  HashSet();  for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {  final  Option  option  =  (Option)  i.next();  option.setParent(this);      [BUGGY]  option  =  option.getOption(this,  maximum);  [BUGGY]      if  (option  instanceof  Argument)  {  i.remove();  newAnonymous.add(option);  }  else  {  final  Set  triggers  =  option.getTriggers();  for  (Iterator  j  =  triggers.iterator();  j.hasNext();)  {  newOptionMap.put(j.next(),  option);  }    [CLASS]  GroupImpl  [METHOD]  <init>  [RETURN_TYPE]  String,int,int,boolean)  List  options  String  name  String  description  final  int  minimum  final  int  maximum  final  boolean  required  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  required  SortedMap  newOptionMap  optionMap  Iterator  i  j  List  anonymous  newAnonymous  options  Option  option  String  description  name  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	96	96	1	replace	option  =  option.getOption(this,  maximum);	  Option    option    =    option.getOption(this,    minimum);    	non-compiled	[CE]  illegal  start  of  expression	22	None	replace
148	[BUG]  [BUGGY]  if(!(option  instanceof  Option)&&!(i.hasNext()  instanceof  Option))  {  [CE]  illegal  start  of  expression  [FE]            OptionException      [CONTEXT]      final  SortedMap  newOptionMap  =  new  TreeMap(ReverseStringComparator.getInstance());  final  Set  newPrefixes  =  new  HashSet();  for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {  final  Option  option  =  (Option)  i.next();  option.setParent(this);      [BUGGY]  if(!(option  instanceof  Option)&&!(i.hasNext()  instanceof  Option))  {  [BUGGY]      i.remove();  newAnonymous.add(option);  }  else  {  final  Set  triggers  =  option.getTriggers();  for  (Iterator  j  =  triggers.iterator();  j.hasNext();)  {  newOptionMap.put(j.next(),  option);  }    [CLASS]  GroupImpl  [METHOD]  <init>  [RETURN_TYPE]  String,int,int,boolean)  List  options  String  name  String  description  final  int  minimum  final  int  maximum  final  boolean  required  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  required  SortedMap  newOptionMap  optionMap  Iterator  i  j  List  anonymous  newAnonymous  options  Option  option  String  description  name  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	96	96	1	replace	if(!(option  instanceof  Option)&&!(i.hasNext()  instanceof  Option))  {	  if(!(option    instanceof    Alternative))    {    	non-compiled	[CE]  illegal  start  of  expression	30	None	replace
149	[BUG]  [BUGGY]  final  Option  option  =  option.getOption(defaultName,  minimum);  [CE]  illegal  start  of  expression  [FE]                  OptionException      [CONTEXT]      final  SortedMap  newOptionMap  =  new  TreeMap(ReverseStringComparator.getInstance());  final  Set  newPrefixes  =  new  HashSet();  for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {  final  Option  option  =  (Option)  i.next();  option.setParent(this);      [BUGGY]  final  Option  option  =  option.getOption(defaultName,  minimum);  [BUGGY]      if  (option  instanceof  Argument)  {  i.remove();  newAnonymous.add(option);  }  else  {  final  Set  triggers  =  option.getTriggers();  for  (Iterator  j  =  triggers.iterator();  j.hasNext();)  {  newOptionMap.put(j.next(),  option);  }    [CLASS]  GroupImpl  [METHOD]  <init>  [RETURN_TYPE]  String,int,int,boolean)  List  options  String  name  String  description  final  int  minimum  final  int  maximum  final  boolean  required  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  required  SortedMap  newOptionMap  optionMap  Iterator  i  j  List  anonymous  newAnonymous  options  Option  option  String  description  name  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	96	96	1	replace	final  Option  option  =  option.getOption(defaultName,  minimum);	  final    Option    option    =    option.getOption(defaultName);    	non-compiled	[CE]  illegal  start  of  expression	61	None	replace
150	[BUG]  [BUGGY]  final  Option  option  =  option.getOption(defaultName,  required);  [CE]  illegal  start  of  expression  [FE]                    OptionException      [CONTEXT]      final  SortedMap  newOptionMap  =  new  TreeMap(ReverseStringComparator.getInstance());  final  Set  newPrefixes  =  new  HashSet();  for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {  final  Option  option  =  (Option)  i.next();  option.setParent(this);      [BUGGY]  final  Option  option  =  option.getOption(defaultName,  required);  [BUGGY]      if  (option  instanceof  Argument)  {  i.remove();  newAnonymous.add(option);  }  else  {  final  Set  triggers  =  option.getTriggers();  for  (Iterator  j  =  triggers.iterator();  j.hasNext();)  {  newOptionMap.put(j.next(),  option);  }    [CLASS]  GroupImpl  [METHOD]  <init>  [RETURN_TYPE]  String,int,int,boolean)  List  options  String  name  String  description  final  int  minimum  final  int  maximum  final  boolean  required  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  required  SortedMap  newOptionMap  optionMap  Iterator  i  j  List  anonymous  newAnonymous  options  Option  option  String  description  name  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	96	96	1	replace	final  Option  option  =  option.getOption(defaultName,  required);	  final    Option    option    =    option.getOption(defaultName);    	non-compiled	[CE]  illegal  start  of  expression	61	None	replace
151	[BUG]  [BUGGY]  if(option.getName()!=  null  ||  options.getDescription().equals(option.getDescription()))  {  [CE]  illegal  start  of  expression  [FE]                OptionException      [CONTEXT]      final  SortedMap  newOptionMap  =  new  TreeMap(ReverseStringComparator.getInstance());  final  Set  newPrefixes  =  new  HashSet();  for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {  final  Option  option  =  (Option)  i.next();  option.setParent(this);      [BUGGY]  if(option.getName()!=  null  ||  options.getDescription().equals(option.getDescription()))  {  [BUGGY]      i.remove();  newAnonymous.add(option);  }  else  {  final  Set  triggers  =  option.getTriggers();  for  (Iterator  j  =  triggers.iterator();  j.hasNext();)  {  newOptionMap.put(j.next(),  option);  }    [CLASS]  GroupImpl  [METHOD]  <init>  [RETURN_TYPE]  String,int,int,boolean)  List  options  String  name  String  description  final  int  minimum  final  int  maximum  final  boolean  required  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  required  SortedMap  newOptionMap  optionMap  Iterator  i  j  List  anonymous  newAnonymous  options  Option  option  String  description  name  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	96	96	1	replace	if(option.getName()!=  null  ||  options.getDescription().equals(option.getDescription()))  {	  if(option.getDescription()!=    null    ||    options.getDescription().equals(option.getDescription()))    {    	non-compiled	[CE]  illegal  start  of  expression	35	None	replace
152	[BUG]  [BUGGY]  final  Option  option  =  options.getOption(default);  [CE]  illegal  start  of  expression  [FE]                OptionException      [CONTEXT]      final  SortedMap  newOptionMap  =  new  TreeMap(ReverseStringComparator.getInstance());  final  Set  newPrefixes  =  new  HashSet();  for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {  final  Option  option  =  (Option)  i.next();  option.setParent(this);      [BUGGY]  final  Option  option  =  options.getOption(default);  [BUGGY]      if  (option  instanceof  Argument)  {  i.remove();  newAnonymous.add(option);  }  else  {  final  Set  triggers  =  option.getTriggers();  for  (Iterator  j  =  triggers.iterator();  j.hasNext();)  {  newOptionMap.put(j.next(),  option);  }    [CLASS]  GroupImpl  [METHOD]  <init>  [RETURN_TYPE]  String,int,int,boolean)  List  options  String  name  String  description  final  int  minimum  final  int  maximum  final  boolean  required  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  required  SortedMap  newOptionMap  optionMap  Iterator  i  j  List  anonymous  newAnonymous  options  Option  option  String  description  name  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	96	96	1	replace	final  Option  option  =  options.getOption(default);	  final    Option    option    =    options.getOption(option);    	non-compiled	[CE]  illegal  start  of  expression	50	None	replace
153	[BUG]  [BUGGY]  final  Option  option  =  options.cloneOption();  [CE]  illegal  start  of  expression  [FE]                OptionException      [CONTEXT]      final  SortedMap  newOptionMap  =  new  TreeMap(ReverseStringComparator.getInstance());  final  Set  newPrefixes  =  new  HashSet();  for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {  final  Option  option  =  (Option)  i.next();  option.setParent(this);      [BUGGY]  final  Option  option  =  options.cloneOption();  [BUGGY]      if  (option  instanceof  Argument)  {  i.remove();  newAnonymous.add(option);  }  else  {  final  Set  triggers  =  option.getTriggers();  for  (Iterator  j  =  triggers.iterator();  j.hasNext();)  {  newOptionMap.put(j.next(),  option);  }    [CLASS]  GroupImpl  [METHOD]  <init>  [RETURN_TYPE]  String,int,int,boolean)  List  options  String  name  String  description  final  int  minimum  final  int  maximum  final  boolean  required  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  required  SortedMap  newOptionMap  optionMap  Iterator  i  j  List  anonymous  newAnonymous  options  Option  option  String  description  name  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	96	96	1	replace	final  Option  option  =  options.cloneOption();	  final    Option    option    =    option.cloneOption();    	non-compiled	[CE]  illegal  start  of  expression	41	None	replace
154	[BUG]  [BUGGY]  if(option.hasAnonymous()  ||  option.hasDescription())  {  [CE]  illegal  start  of  expression  [FE]                  OptionException      [CONTEXT]      final  SortedMap  newOptionMap  =  new  TreeMap(ReverseStringComparator.getInstance());  final  Set  newPrefixes  =  new  HashSet();  for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {  final  Option  option  =  (Option)  i.next();  option.setParent(this);      [BUGGY]  if(option.hasAnonymous()  ||  option.hasDescription())  {  [BUGGY]      i.remove();  newAnonymous.add(option);  }  else  {  final  Set  triggers  =  option.getTriggers();  for  (Iterator  j  =  triggers.iterator();  j.hasNext();)  {  newOptionMap.put(j.next(),  option);  }    [CLASS]  GroupImpl  [METHOD]  <init>  [RETURN_TYPE]  String,int,int,boolean)  List  options  String  name  String  description  final  int  minimum  final  int  maximum  final  boolean  required  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  required  SortedMap  newOptionMap  optionMap  Iterator  i  j  List  anonymous  newAnonymous  options  Option  option  String  description  name  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	96	96	1	replace	if(option.hasAnonymous()  ||  option.hasDescription())  {	  if(option.hasAnonymous()    ||    option.hasTriggers())    {    	non-compiled	[CE]  illegal  start  of  expression	7	None	replace
155	[BUG]  [BUGGY]  if(option.hasAnonymous()  ||  option.hasPrefixes())  {  [CE]  illegal  start  of  expression  [FE]                    OptionException      [CONTEXT]      final  SortedMap  newOptionMap  =  new  TreeMap(ReverseStringComparator.getInstance());  final  Set  newPrefixes  =  new  HashSet();  for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {  final  Option  option  =  (Option)  i.next();  option.setParent(this);      [BUGGY]  if(option.hasAnonymous()  ||  option.hasPrefixes())  {  [BUGGY]      i.remove();  newAnonymous.add(option);  }  else  {  final  Set  triggers  =  option.getTriggers();  for  (Iterator  j  =  triggers.iterator();  j.hasNext();)  {  newOptionMap.put(j.next(),  option);  }    [CLASS]  GroupImpl  [METHOD]  <init>  [RETURN_TYPE]  String,int,int,boolean)  List  options  String  name  String  description  final  int  minimum  final  int  maximum  final  boolean  required  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  required  SortedMap  newOptionMap  optionMap  Iterator  i  j  List  anonymous  newAnonymous  options  Option  option  String  description  name  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	96	96	1	replace	if(option.hasAnonymous()  ||  option.hasPrefixes())  {	  if(option.hasAnonymous()    ||    option.hasTriggers())    {    	non-compiled	[CE]  illegal  start  of  expression	7	None	replace
156	[BUG]  [BUGGY]  Option  option  =  option.getOption(this,  minimum  -  1);  [CE]  illegal  start  of  expression  [FE]            OptionException      [CONTEXT]      final  SortedMap  newOptionMap  =  new  TreeMap(ReverseStringComparator.getInstance());  final  Set  newPrefixes  =  new  HashSet();  for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {  final  Option  option  =  (Option)  i.next();  option.setParent(this);      [BUGGY]  Option  option  =  option.getOption(this,  minimum  -  1);  [BUGGY]      if  (option  instanceof  Argument)  {  i.remove();  newAnonymous.add(option);  }  else  {  final  Set  triggers  =  option.getTriggers();  for  (Iterator  j  =  triggers.iterator();  j.hasNext();)  {  newOptionMap.put(j.next(),  option);  }    [CLASS]  GroupImpl  [METHOD]  <init>  [RETURN_TYPE]  String,int,int,boolean)  List  options  String  name  String  description  final  int  minimum  final  int  maximum  final  boolean  required  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  required  SortedMap  newOptionMap  optionMap  Iterator  i  j  List  anonymous  newAnonymous  options  Option  option  String  description  name  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	96	96	1	replace	Option  option  =  option.getOption(this,  minimum  -  1);	  Option    option    =    option.getOption(this,    minimum);    	non-compiled	[CE]  illegal  start  of  expression	22	None	replace
157	[BUG]  [BUGGY]  if(!(option  instanceof  Option)&&  option.hasNext())  {  [CE]  illegal  start  of  expression  [FE]                  OptionException      [CONTEXT]      final  SortedMap  newOptionMap  =  new  TreeMap(ReverseStringComparator.getInstance());  final  Set  newPrefixes  =  new  HashSet();  for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {  final  Option  option  =  (Option)  i.next();  option.setParent(this);      [BUGGY]  if(!(option  instanceof  Option)&&  option.hasNext())  {  [BUGGY]      i.remove();  newAnonymous.add(option);  }  else  {  final  Set  triggers  =  option.getTriggers();  for  (Iterator  j  =  triggers.iterator();  j.hasNext();)  {  newOptionMap.put(j.next(),  option);  }    [CLASS]  GroupImpl  [METHOD]  <init>  [RETURN_TYPE]  String,int,int,boolean)  List  options  String  name  String  description  final  int  minimum  final  int  maximum  final  boolean  required  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  required  SortedMap  newOptionMap  optionMap  Iterator  i  j  List  anonymous  newAnonymous  options  Option  option  String  description  name  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	96	96	1	replace	if(!(option  instanceof  Option)&&  option.hasNext())  {	  if(!(option    instanceof    Option)&&    i.hasNext())    {    	non-compiled	[CE]  illegal  start  of  expression	65	None	replace
158	[BUG]  [BUGGY]  if(option  instanceof  Option  &&  option.getOptions().contains(option))  {  [CE]  illegal  start  of  expression  [FE]              OptionException      [CONTEXT]      final  SortedMap  newOptionMap  =  new  TreeMap(ReverseStringComparator.getInstance());  final  Set  newPrefixes  =  new  HashSet();  for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {  final  Option  option  =  (Option)  i.next();  option.setParent(this);      [BUGGY]  if(option  instanceof  Option  &&  option.getOptions().contains(option))  {  [BUGGY]      i.remove();  newAnonymous.add(option);  }  else  {  final  Set  triggers  =  option.getTriggers();  for  (Iterator  j  =  triggers.iterator();  j.hasNext();)  {  newOptionMap.put(j.next(),  option);  }    [CLASS]  GroupImpl  [METHOD]  <init>  [RETURN_TYPE]  String,int,int,boolean)  List  options  String  name  String  description  final  int  minimum  final  int  maximum  final  boolean  required  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  required  SortedMap  newOptionMap  optionMap  Iterator  i  j  List  anonymous  newAnonymous  options  Option  option  String  description  name  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	96	96	1	replace	if(option  instanceof  Option  &&  option.getOptions().contains(option))  {	  if(option    instanceof    Option    &&    options.getOptions().contains(option))    {    	non-compiled	[CE]  illegal  start  of  expression	54	None	replace
159	[BUG]  [BUGGY]  Option  option  =  options.getOption(name,  maximum);  [CE]  illegal  start  of  expression  [FE]              OptionException      [CONTEXT]      final  SortedMap  newOptionMap  =  new  TreeMap(ReverseStringComparator.getInstance());  final  Set  newPrefixes  =  new  HashSet();  for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {  final  Option  option  =  (Option)  i.next();  option.setParent(this);      [BUGGY]  Option  option  =  options.getOption(name,  maximum);  [BUGGY]      if  (option  instanceof  Argument)  {  i.remove();  newAnonymous.add(option);  }  else  {  final  Set  triggers  =  option.getTriggers();  for  (Iterator  j  =  triggers.iterator();  j.hasNext();)  {  newOptionMap.put(j.next(),  option);  }    [CLASS]  GroupImpl  [METHOD]  <init>  [RETURN_TYPE]  String,int,int,boolean)  List  options  String  name  String  description  final  int  minimum  final  int  maximum  final  boolean  required  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  required  SortedMap  newOptionMap  optionMap  Iterator  i  j  List  anonymous  newAnonymous  options  Option  option  String  description  name  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	96	96	1	replace	Option  option  =  options.getOption(name,  maximum);	  Option    option    =    options.getOption(name);    	non-compiled	[CE]  illegal  start  of  expression	19	None	replace
160	[BUG]  [BUGGY]  if(option.hasAnonymous()  &&  newAnonymous.contains(option.getPrefixes()))  {  [CE]  illegal  start  of  expression  [FE]                    OptionException      [CONTEXT]      final  SortedMap  newOptionMap  =  new  TreeMap(ReverseStringComparator.getInstance());  final  Set  newPrefixes  =  new  HashSet();  for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {  final  Option  option  =  (Option)  i.next();  option.setParent(this);      [BUGGY]  if(option.hasAnonymous()  &&  newAnonymous.contains(option.getPrefixes()))  {  [BUGGY]      i.remove();  newAnonymous.add(option);  }  else  {  final  Set  triggers  =  option.getTriggers();  for  (Iterator  j  =  triggers.iterator();  j.hasNext();)  {  newOptionMap.put(j.next(),  option);  }    [CLASS]  GroupImpl  [METHOD]  <init>  [RETURN_TYPE]  String,int,int,boolean)  List  options  String  name  String  description  final  int  minimum  final  int  maximum  final  boolean  required  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  required  SortedMap  newOptionMap  optionMap  Iterator  i  j  List  anonymous  newAnonymous  options  Option  option  String  description  name  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	96	96	1	replace	if(option.hasAnonymous()  &&  newAnonymous.contains(option.getPrefixes()))  {	  if(option.hasAnonymous()    &&    newAnonymous.contains(option.getTriggers()))    {    	non-compiled	[CE]  illegal  start  of  expression	8	None	replace
161	[BUG]  [BUGGY]  if(option.hasArg()  &&  newAnonymous.contains(option.getTriggers()))  {  [CE]  illegal  start  of  expression  [FE]                      OptionException      [CONTEXT]      final  SortedMap  newOptionMap  =  new  TreeMap(ReverseStringComparator.getInstance());  final  Set  newPrefixes  =  new  HashSet();  for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {  final  Option  option  =  (Option)  i.next();  option.setParent(this);      [BUGGY]  if(option.hasArg()  &&  newAnonymous.contains(option.getTriggers()))  {  [BUGGY]      i.remove();  newAnonymous.add(option);  }  else  {  final  Set  triggers  =  option.getTriggers();  for  (Iterator  j  =  triggers.iterator();  j.hasNext();)  {  newOptionMap.put(j.next(),  option);  }    [CLASS]  GroupImpl  [METHOD]  <init>  [RETURN_TYPE]  String,int,int,boolean)  List  options  String  name  String  description  final  int  minimum  final  int  maximum  final  boolean  required  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  required  SortedMap  newOptionMap  optionMap  Iterator  i  j  List  anonymous  newAnonymous  options  Option  option  String  description  name  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	96	96	1	replace	if(option.hasArg()  &&  newAnonymous.contains(option.getTriggers()))  {	  if(option.hasAnonymous()    &&    newAnonymous.contains(option.getTriggers()))    {    	non-compiled	[CE]  illegal  start  of  expression	8	None	replace
162	[BUG]  [BUGGY]  if(option  instanceof  Option  &&  options.contains(option.getName()))  {  [CE]  illegal  start  of  expression  [FE]                      OptionException      [CONTEXT]      final  SortedMap  newOptionMap  =  new  TreeMap(ReverseStringComparator.getInstance());  final  Set  newPrefixes  =  new  HashSet();  for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {  final  Option  option  =  (Option)  i.next();  option.setParent(this);      [BUGGY]  if(option  instanceof  Option  &&  options.contains(option.getName()))  {  [BUGGY]      i.remove();  newAnonymous.add(option);  }  else  {  final  Set  triggers  =  option.getTriggers();  for  (Iterator  j  =  triggers.iterator();  j.hasNext();)  {  newOptionMap.put(j.next(),  option);  }    [CLASS]  GroupImpl  [METHOD]  <init>  [RETURN_TYPE]  String,int,int,boolean)  List  options  String  name  String  description  final  int  minimum  final  int  maximum  final  boolean  required  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  required  SortedMap  newOptionMap  optionMap  Iterator  i  j  List  anonymous  newAnonymous  options  Option  option  String  description  name  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	96	96	1	replace	if(option  instanceof  Option  &&  options.contains(option.getName()))  {	  if(!(option    instanceof    Option)&&    options.contains(option.getName()))    {    	non-compiled	[CE]  illegal  start  of  expression	17	None	replace
163	[BUG]  [BUGGY]  if(option  instanceof  Option  ||  options.contains(option.getName()))  {  [CE]  illegal  start  of  expression  [FE]                        OptionException      [CONTEXT]      final  SortedMap  newOptionMap  =  new  TreeMap(ReverseStringComparator.getInstance());  final  Set  newPrefixes  =  new  HashSet();  for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {  final  Option  option  =  (Option)  i.next();  option.setParent(this);      [BUGGY]  if(option  instanceof  Option  ||  options.contains(option.getName()))  {  [BUGGY]      i.remove();  newAnonymous.add(option);  }  else  {  final  Set  triggers  =  option.getTriggers();  for  (Iterator  j  =  triggers.iterator();  j.hasNext();)  {  newOptionMap.put(j.next(),  option);  }    [CLASS]  GroupImpl  [METHOD]  <init>  [RETURN_TYPE]  String,int,int,boolean)  List  options  String  name  String  description  final  int  minimum  final  int  maximum  final  boolean  required  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  required  SortedMap  newOptionMap  optionMap  Iterator  i  j  List  anonymous  newAnonymous  options  Option  option  String  description  name  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	96	96	1	replace	if(option  instanceof  Option  ||  options.contains(option.getName()))  {	  if(!(option    instanceof    Option)&&    options.contains(option.getName()))    {    	non-compiled	[CE]  illegal  start  of  expression	17	None	replace
164	[BUG]  [BUGGY]  if(option.hasArg()  &&  option.hasAnonymous())  {  [CE]  illegal  start  of  expression  [FE]              OptionException      [CONTEXT]      final  SortedMap  newOptionMap  =  new  TreeMap(ReverseStringComparator.getInstance());  final  Set  newPrefixes  =  new  HashSet();  for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {  final  Option  option  =  (Option)  i.next();  option.setParent(this);      [BUGGY]  if(option.hasArg()  &&  option.hasAnonymous())  {  [BUGGY]      i.remove();  newAnonymous.add(option);  }  else  {  final  Set  triggers  =  option.getTriggers();  for  (Iterator  j  =  triggers.iterator();  j.hasNext();)  {  newOptionMap.put(j.next(),  option);  }    [CLASS]  GroupImpl  [METHOD]  <init>  [RETURN_TYPE]  String,int,int,boolean)  List  options  String  name  String  description  final  int  minimum  final  int  maximum  final  boolean  required  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  required  SortedMap  newOptionMap  optionMap  Iterator  i  j  List  anonymous  newAnonymous  options  Option  option  String  description  name  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	96	96	1	replace	if(option.hasArg()  &&  option.hasAnonymous())  {	  if(option.hasArg())    {    	non-compiled	[CE]  illegal  start  of  expression	59	None	replace
165	[BUG]  [BUGGY]  if(option.hasArg()  &&  option.hasArg())  {  [CE]  illegal  start  of  expression  [FE]                OptionException      [CONTEXT]      final  SortedMap  newOptionMap  =  new  TreeMap(ReverseStringComparator.getInstance());  final  Set  newPrefixes  =  new  HashSet();  for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {  final  Option  option  =  (Option)  i.next();  option.setParent(this);      [BUGGY]  if(option.hasArg()  &&  option.hasArg())  {  [BUGGY]      i.remove();  newAnonymous.add(option);  }  else  {  final  Set  triggers  =  option.getTriggers();  for  (Iterator  j  =  triggers.iterator();  j.hasNext();)  {  newOptionMap.put(j.next(),  option);  }    [CLASS]  GroupImpl  [METHOD]  <init>  [RETURN_TYPE]  String,int,int,boolean)  List  options  String  name  String  description  final  int  minimum  final  int  maximum  final  boolean  required  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  required  SortedMap  newOptionMap  optionMap  Iterator  i  j  List  anonymous  newAnonymous  options  Option  option  String  description  name  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	96	96	1	replace	if(option.hasArg()  &&  option.hasArg())  {	  if(option.hasArg())    {    	non-compiled	[CE]  illegal  start  of  expression	59	None	replace
166	[BUG]  [BUGGY]  Option  option  =(Option)optionMap.get(i.next());  [CE]  illegal  start  of  expression  [FE]                  OptionException      [CONTEXT]      final  SortedMap  newOptionMap  =  new  TreeMap(ReverseStringComparator.getInstance());  final  Set  newPrefixes  =  new  HashSet();  for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {  final  Option  option  =  (Option)  i.next();  option.setParent(this);      [BUGGY]  Option  option  =(Option)optionMap.get(i.next());  [BUGGY]      if  (option  instanceof  Argument)  {  i.remove();  newAnonymous.add(option);  }  else  {  final  Set  triggers  =  option.getTriggers();  for  (Iterator  j  =  triggers.iterator();  j.hasNext();)  {  newOptionMap.put(j.next(),  option);  }    [CLASS]  GroupImpl  [METHOD]  <init>  [RETURN_TYPE]  String,int,int,boolean)  List  options  String  name  String  description  final  int  minimum  final  int  maximum  final  boolean  required  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  required  SortedMap  newOptionMap  optionMap  Iterator  i  j  List  anonymous  newAnonymous  options  Option  option  String  description  name  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	96	96	1	replace	Option  option  =(Option)optionMap.get(i.next());	  Option    option    =(Option)i.getAnonymous();    	non-compiled	[CE]  illegal  start  of  expression	67	None	replace
167	[BUG]  [BUGGY]  Option  option  =  options.getOption(i.next());  [CE]  illegal  start  of  expression  [FE]                  OptionException      [CONTEXT]      final  SortedMap  newOptionMap  =  new  TreeMap(ReverseStringComparator.getInstance());  final  Set  newPrefixes  =  new  HashSet();  for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {  final  Option  option  =  (Option)  i.next();  option.setParent(this);      [BUGGY]  Option  option  =  options.getOption(i.next());  [BUGGY]      if  (option  instanceof  Argument)  {  i.remove();  newAnonymous.add(option);  }  else  {  final  Set  triggers  =  option.getTriggers();  for  (Iterator  j  =  triggers.iterator();  j.hasNext();)  {  newOptionMap.put(j.next(),  option);  }    [CLASS]  GroupImpl  [METHOD]  <init>  [RETURN_TYPE]  String,int,int,boolean)  List  options  String  name  String  description  final  int  minimum  final  int  maximum  final  boolean  required  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  required  SortedMap  newOptionMap  optionMap  Iterator  i  j  List  anonymous  newAnonymous  options  Option  option  String  description  name  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	96	96	1	replace	Option  option  =  options.getOption(i.next());	  Option    option    =    options.getOption(i);    	non-compiled	[CE]  illegal  start  of  expression	21	None	replace
168	[BUG]  [BUGGY]  Option  option  =  options.getOption(i,  newPrefixes);  [CE]  illegal  start  of  expression  [FE]                    OptionException      [CONTEXT]      final  SortedMap  newOptionMap  =  new  TreeMap(ReverseStringComparator.getInstance());  final  Set  newPrefixes  =  new  HashSet();  for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {  final  Option  option  =  (Option)  i.next();  option.setParent(this);      [BUGGY]  Option  option  =  options.getOption(i,  newPrefixes);  [BUGGY]      if  (option  instanceof  Argument)  {  i.remove();  newAnonymous.add(option);  }  else  {  final  Set  triggers  =  option.getTriggers();  for  (Iterator  j  =  triggers.iterator();  j.hasNext();)  {  newOptionMap.put(j.next(),  option);  }    [CLASS]  GroupImpl  [METHOD]  <init>  [RETURN_TYPE]  String,int,int,boolean)  List  options  String  name  String  description  final  int  minimum  final  int  maximum  final  boolean  required  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  required  SortedMap  newOptionMap  optionMap  Iterator  i  j  List  anonymous  newAnonymous  options  Option  option  String  description  name  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	96	96	1	replace	Option  option  =  options.getOption(i,  newPrefixes);	  Option    option    =    options.getOption(i);    	non-compiled	[CE]  illegal  start  of  expression	21	None	replace
169	[BUG]  [BUGGY]  Option  option  =  option.getOption(defaultName,  description,  minimum);  [CE]  illegal  start  of  expression  [FE]              OptionException      [CONTEXT]      final  SortedMap  newOptionMap  =  new  TreeMap(ReverseStringComparator.getInstance());  final  Set  newPrefixes  =  new  HashSet();  for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {  final  Option  option  =  (Option)  i.next();  option.setParent(this);      [BUGGY]  Option  option  =  option.getOption(defaultName,  description,  minimum);  [BUGGY]      if  (option  instanceof  Argument)  {  i.remove();  newAnonymous.add(option);  }  else  {  final  Set  triggers  =  option.getTriggers();  for  (Iterator  j  =  triggers.iterator();  j.hasNext();)  {  newOptionMap.put(j.next(),  option);  }    [CLASS]  GroupImpl  [METHOD]  <init>  [RETURN_TYPE]  String,int,int,boolean)  List  options  String  name  String  description  final  int  minimum  final  int  maximum  final  boolean  required  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  required  SortedMap  newOptionMap  optionMap  Iterator  i  j  List  anonymous  newAnonymous  options  Option  option  String  description  name  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	96	96	1	replace	Option  option  =  option.getOption(defaultName,  description,  minimum);	  Option    option    =    option.getOption(defaultName,    description);    	non-compiled	[CE]  illegal  start  of  expression	68	None	replace
170	[BUG]  [BUGGY]  if(option.hasNext()  ||  option.hasNext())  {  [CE]  illegal  start  of  expression  [FE]                  OptionException      [CONTEXT]      final  SortedMap  newOptionMap  =  new  TreeMap(ReverseStringComparator.getInstance());  final  Set  newPrefixes  =  new  HashSet();  for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {  final  Option  option  =  (Option)  i.next();  option.setParent(this);      [BUGGY]  if(option.hasNext()  ||  option.hasNext())  {  [BUGGY]      i.remove();  newAnonymous.add(option);  }  else  {  final  Set  triggers  =  option.getTriggers();  for  (Iterator  j  =  triggers.iterator();  j.hasNext();)  {  newOptionMap.put(j.next(),  option);  }    [CLASS]  GroupImpl  [METHOD]  <init>  [RETURN_TYPE]  String,int,int,boolean)  List  options  String  name  String  description  final  int  minimum  final  int  maximum  final  boolean  required  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  required  SortedMap  newOptionMap  optionMap  Iterator  i  j  List  anonymous  newAnonymous  options  Option  option  String  description  name  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	96	96	1	replace	if(option.hasNext()  ||  option.hasNext())  {	  if(option.hasNext()    ||!option.hasNext())    {    	non-compiled	[CE]  illegal  start  of  expression	40	None	replace
171	[BUG]  [BUGGY]  final  Option  option  =  options.getOption(defaultValue);  [CE]  illegal  start  of  expression  [FE]                OptionException      [CONTEXT]      final  SortedMap  newOptionMap  =  new  TreeMap(ReverseStringComparator.getInstance());  final  Set  newPrefixes  =  new  HashSet();  for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {  final  Option  option  =  (Option)  i.next();  option.setParent(this);      [BUGGY]  final  Option  option  =  options.getOption(defaultValue);  [BUGGY]      if  (option  instanceof  Argument)  {  i.remove();  newAnonymous.add(option);  }  else  {  final  Set  triggers  =  option.getTriggers();  for  (Iterator  j  =  triggers.iterator();  j.hasNext();)  {  newOptionMap.put(j.next(),  option);  }    [CLASS]  GroupImpl  [METHOD]  <init>  [RETURN_TYPE]  String,int,int,boolean)  List  options  String  name  String  description  final  int  minimum  final  int  maximum  final  boolean  required  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  required  SortedMap  newOptionMap  optionMap  Iterator  i  j  List  anonymous  newAnonymous  options  Option  option  String  description  name  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	96	96	1	replace	final  Option  option  =  options.getOption(defaultValue);	  final    Option    option    =    option.getOption(defaultValue);    	non-compiled	[CE]  illegal  start  of  expression	60	None	replace
172	[BUG]  [BUGGY]  final  Option  option  =  option.getOption(defaultValue,  preferredValue);  [CE]  illegal  start  of  expression  [FE]                  OptionException      [CONTEXT]      final  SortedMap  newOptionMap  =  new  TreeMap(ReverseStringComparator.getInstance());  final  Set  newPrefixes  =  new  HashSet();  for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {  final  Option  option  =  (Option)  i.next();  option.setParent(this);      [BUGGY]  final  Option  option  =  option.getOption(defaultValue,  preferredValue);  [BUGGY]      if  (option  instanceof  Argument)  {  i.remove();  newAnonymous.add(option);  }  else  {  final  Set  triggers  =  option.getTriggers();  for  (Iterator  j  =  triggers.iterator();  j.hasNext();)  {  newOptionMap.put(j.next(),  option);  }    [CLASS]  GroupImpl  [METHOD]  <init>  [RETURN_TYPE]  String,int,int,boolean)  List  options  String  name  String  description  final  int  minimum  final  int  maximum  final  boolean  required  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  required  SortedMap  newOptionMap  optionMap  Iterator  i  j  List  anonymous  newAnonymous  options  Option  option  String  description  name  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	96	96	1	replace	final  Option  option  =  option.getOption(defaultValue,  preferredValue);	  final    Option    option    =    option.getOption(defaultValue);    	non-compiled	[CE]  illegal  start  of  expression	60	None	replace
173	[BUG]  [BUGGY]  if(i.hasNext()  &&  option  instanceof  Option)  {  [CE]  illegal  start  of  expression  [FE]              OptionException      [CONTEXT]      final  SortedMap  newOptionMap  =  new  TreeMap(ReverseStringComparator.getInstance());  final  Set  newPrefixes  =  new  HashSet();  for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {  final  Option  option  =  (Option)  i.next();  option.setParent(this);      [BUGGY]  if(i.hasNext()  &&  option  instanceof  Option)  {  [BUGGY]      i.remove();  newAnonymous.add(option);  }  else  {  final  Set  triggers  =  option.getTriggers();  for  (Iterator  j  =  triggers.iterator();  j.hasNext();)  {  newOptionMap.put(j.next(),  option);  }    [CLASS]  GroupImpl  [METHOD]  <init>  [RETURN_TYPE]  String,int,int,boolean)  List  options  String  name  String  description  final  int  minimum  final  int  maximum  final  boolean  required  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  required  SortedMap  newOptionMap  optionMap  Iterator  i  j  List  anonymous  newAnonymous  options  Option  option  String  description  name  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	96	96	1	replace	if(i.hasNext()  &&  option  instanceof  Option)  {	  if(i.hasNext()    ||    option    instanceof    Option)    {    	non-compiled	[CE]  illegal  start  of  expression	74	None	replace
174	[BUG]  [BUGGY]  if(!option.hasAnonymous()  &&  options.getTriggers().contains(option.getTriggers()))  {  [CE]  illegal  start  of  expression  [FE]              OptionException      [CONTEXT]      final  SortedMap  newOptionMap  =  new  TreeMap(ReverseStringComparator.getInstance());  final  Set  newPrefixes  =  new  HashSet();  for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {  final  Option  option  =  (Option)  i.next();  option.setParent(this);      [BUGGY]  if(!option.hasAnonymous()  &&  options.getTriggers().contains(option.getTriggers()))  {  [BUGGY]      i.remove();  newAnonymous.add(option);  }  else  {  final  Set  triggers  =  option.getTriggers();  for  (Iterator  j  =  triggers.iterator();  j.hasNext();)  {  newOptionMap.put(j.next(),  option);  }    [CLASS]  GroupImpl  [METHOD]  <init>  [RETURN_TYPE]  String,int,int,boolean)  List  options  String  name  String  description  final  int  minimum  final  int  maximum  final  boolean  required  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  required  SortedMap  newOptionMap  optionMap  Iterator  i  j  List  anonymous  newAnonymous  options  Option  option  String  description  name  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	96	96	1	replace	if(!option.hasAnonymous()  &&  options.getTriggers().contains(option.getTriggers()))  {	  if(!option.hasAnonymous())    {    	non-compiled	[CE]  illegal  start  of  expression	5	None	replace
175	[BUG]  [BUGGY]  if(!option.hasAnonymous()  &&  options.getTriggers().contains(option))  {  [CE]  illegal  start  of  expression  [FE]                OptionException      [CONTEXT]      final  SortedMap  newOptionMap  =  new  TreeMap(ReverseStringComparator.getInstance());  final  Set  newPrefixes  =  new  HashSet();  for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {  final  Option  option  =  (Option)  i.next();  option.setParent(this);      [BUGGY]  if(!option.hasAnonymous()  &&  options.getTriggers().contains(option))  {  [BUGGY]      i.remove();  newAnonymous.add(option);  }  else  {  final  Set  triggers  =  option.getTriggers();  for  (Iterator  j  =  triggers.iterator();  j.hasNext();)  {  newOptionMap.put(j.next(),  option);  }    [CLASS]  GroupImpl  [METHOD]  <init>  [RETURN_TYPE]  String,int,int,boolean)  List  options  String  name  String  description  final  int  minimum  final  int  maximum  final  boolean  required  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  required  SortedMap  newOptionMap  optionMap  Iterator  i  j  List  anonymous  newAnonymous  options  Option  option  String  description  name  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	96	96	1	replace	if(!option.hasAnonymous()  &&  options.getTriggers().contains(option))  {	  if(!option.hasAnonymous())    {    	non-compiled	[CE]  illegal  start  of  expression	5	None	replace
176	[BUG]  [BUGGY]  if(option  instanceof  Option  &&!(option.hasNext()))  {  [CE]  illegal  start  of  expression  [FE]                    OptionException      [CONTEXT]      final  SortedMap  newOptionMap  =  new  TreeMap(ReverseStringComparator.getInstance());  final  Set  newPrefixes  =  new  HashSet();  for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {  final  Option  option  =  (Option)  i.next();  option.setParent(this);      [BUGGY]  if(option  instanceof  Option  &&!(option.hasNext()))  {  [BUGGY]      i.remove();  newAnonymous.add(option);  }  else  {  final  Set  triggers  =  option.getTriggers();  for  (Iterator  j  =  triggers.iterator();  j.hasNext();)  {  newOptionMap.put(j.next(),  option);  }    [CLASS]  GroupImpl  [METHOD]  <init>  [RETURN_TYPE]  String,int,int,boolean)  List  options  String  name  String  description  final  int  minimum  final  int  maximum  final  boolean  required  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  required  SortedMap  newOptionMap  optionMap  Iterator  i  j  List  anonymous  newAnonymous  options  Option  option  String  description  name  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	96	96	1	replace	if(option  instanceof  Option  &&!(option.hasNext()))  {	  if(!(option    instanceof    Option)&&!(i.hasNext()))    {    	non-compiled	[CE]  illegal  start  of  expression	66	None	replace
177	[BUG]  [BUGGY]  if(!(option  instanceof  Option)&&!option.hasNext())  {  [CE]  illegal  start  of  expression  [FE]                      OptionException      [CONTEXT]      final  SortedMap  newOptionMap  =  new  TreeMap(ReverseStringComparator.getInstance());  final  Set  newPrefixes  =  new  HashSet();  for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {  final  Option  option  =  (Option)  i.next();  option.setParent(this);      [BUGGY]  if(!(option  instanceof  Option)&&!option.hasNext())  {  [BUGGY]      i.remove();  newAnonymous.add(option);  }  else  {  final  Set  triggers  =  option.getTriggers();  for  (Iterator  j  =  triggers.iterator();  j.hasNext();)  {  newOptionMap.put(j.next(),  option);  }    [CLASS]  GroupImpl  [METHOD]  <init>  [RETURN_TYPE]  String,int,int,boolean)  List  options  String  name  String  description  final  int  minimum  final  int  maximum  final  boolean  required  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  required  SortedMap  newOptionMap  optionMap  Iterator  i  j  List  anonymous  newAnonymous  options  Option  option  String  description  name  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	96	96	1	replace	if(!(option  instanceof  Option)&&!option.hasNext())  {	  if(!(option    instanceof    Option)&&!(i.hasNext()))    {    	non-compiled	[CE]  illegal  start  of  expression	66	None	replace
178	[BUG]  [BUGGY]  if(!(option  instanceof  Alternative)&&  options.getTriggers().contains(option.getTriggers()))  {  [CE]  illegal  start  of  expression  [FE]            OptionException      [CONTEXT]      final  SortedMap  newOptionMap  =  new  TreeMap(ReverseStringComparator.getInstance());  final  Set  newPrefixes  =  new  HashSet();  for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {  final  Option  option  =  (Option)  i.next();  option.setParent(this);      [BUGGY]  if(!(option  instanceof  Alternative)&&  options.getTriggers().contains(option.getTriggers()))  {  [BUGGY]      i.remove();  newAnonymous.add(option);  }  else  {  final  Set  triggers  =  option.getTriggers();  for  (Iterator  j  =  triggers.iterator();  j.hasNext();)  {  newOptionMap.put(j.next(),  option);  }    [CLASS]  GroupImpl  [METHOD]  <init>  [RETURN_TYPE]  String,int,int,boolean)  List  options  String  name  String  description  final  int  minimum  final  int  maximum  final  boolean  required  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  required  SortedMap  newOptionMap  optionMap  Iterator  i  j  List  anonymous  newAnonymous  options  Option  option  String  description  name  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	96	96	1	replace	if(!(option  instanceof  Alternative)&&  options.getTriggers().contains(option.getTriggers()))  {	  if(!(option    instanceof    Alternative))    {    	non-compiled	[CE]  illegal  start  of  expression	30	None	replace
179	[BUG]  [BUGGY]  if(!(option  instanceof  Alternative)&&  options.getTriggers().contains(option.getDescription()))  {  [CE]  illegal  start  of  expression  [FE]              OptionException      [CONTEXT]      final  SortedMap  newOptionMap  =  new  TreeMap(ReverseStringComparator.getInstance());  final  Set  newPrefixes  =  new  HashSet();  for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {  final  Option  option  =  (Option)  i.next();  option.setParent(this);      [BUGGY]  if(!(option  instanceof  Alternative)&&  options.getTriggers().contains(option.getDescription()))  {  [BUGGY]      i.remove();  newAnonymous.add(option);  }  else  {  final  Set  triggers  =  option.getTriggers();  for  (Iterator  j  =  triggers.iterator();  j.hasNext();)  {  newOptionMap.put(j.next(),  option);  }    [CLASS]  GroupImpl  [METHOD]  <init>  [RETURN_TYPE]  String,int,int,boolean)  List  options  String  name  String  description  final  int  minimum  final  int  maximum  final  boolean  required  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  required  SortedMap  newOptionMap  optionMap  Iterator  i  j  List  anonymous  newAnonymous  options  Option  option  String  description  name  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	96	96	1	replace	if(!(option  instanceof  Alternative)&&  options.getTriggers().contains(option.getDescription()))  {	  if(!(option    instanceof    Alternative))    {    	non-compiled	[CE]  illegal  start  of  expression	30	None	replace
180	[BUG]  [BUGGY]  if(!(option  instanceof  Alternative)&&  option.getTriggers().contains(option.getTriggers()))  {  [CE]  illegal  start  of  expression  [FE]                OptionException      [CONTEXT]      final  SortedMap  newOptionMap  =  new  TreeMap(ReverseStringComparator.getInstance());  final  Set  newPrefixes  =  new  HashSet();  for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {  final  Option  option  =  (Option)  i.next();  option.setParent(this);      [BUGGY]  if(!(option  instanceof  Alternative)&&  option.getTriggers().contains(option.getTriggers()))  {  [BUGGY]      i.remove();  newAnonymous.add(option);  }  else  {  final  Set  triggers  =  option.getTriggers();  for  (Iterator  j  =  triggers.iterator();  j.hasNext();)  {  newOptionMap.put(j.next(),  option);  }    [CLASS]  GroupImpl  [METHOD]  <init>  [RETURN_TYPE]  String,int,int,boolean)  List  options  String  name  String  description  final  int  minimum  final  int  maximum  final  boolean  required  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  required  SortedMap  newOptionMap  optionMap  Iterator  i  j  List  anonymous  newAnonymous  options  Option  option  String  description  name  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	96	96	1	replace	if(!(option  instanceof  Alternative)&&  option.getTriggers().contains(option.getTriggers()))  {	  if(!(option    instanceof    Alternative))    {    	non-compiled	[CE]  illegal  start  of  expression	30	None	replace
181	[BUG]  [BUGGY]  if(option.hasAnonymousTrigger())  {  [CE]  illegal  start  of  expression  [FE]                OptionException      [CONTEXT]      final  SortedMap  newOptionMap  =  new  TreeMap(ReverseStringComparator.getInstance());  final  Set  newPrefixes  =  new  HashSet();  for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {  final  Option  option  =  (Option)  i.next();  option.setParent(this);      [BUGGY]  if(option.hasAnonymousTrigger())  {  [BUGGY]      i.remove();  newAnonymous.add(option);  }  else  {  final  Set  triggers  =  option.getTriggers();  for  (Iterator  j  =  triggers.iterator();  j.hasNext();)  {  newOptionMap.put(j.next(),  option);  }    [CLASS]  GroupImpl  [METHOD]  <init>  [RETURN_TYPE]  String,int,int,boolean)  List  options  String  name  String  description  final  int  minimum  final  int  maximum  final  boolean  required  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  required  SortedMap  newOptionMap  optionMap  Iterator  i  j  List  anonymous  newAnonymous  options  Option  option  String  description  name  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	96	96	1	replace	if(option.hasAnonymousTrigger())  {	  if(option.hasTriggers())    {    	non-compiled	[CE]  illegal  start  of  expression	6	None	replace
182	[BUG]  [BUGGY]  final  Option  option  =  options.getOption(option,  description);  [CE]  illegal  start  of  expression  [FE]                OptionException      [CONTEXT]      final  SortedMap  newOptionMap  =  new  TreeMap(ReverseStringComparator.getInstance());  final  Set  newPrefixes  =  new  HashSet();  for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {  final  Option  option  =  (Option)  i.next();  option.setParent(this);      [BUGGY]  final  Option  option  =  options.getOption(option,  description);  [BUGGY]      if  (option  instanceof  Argument)  {  i.remove();  newAnonymous.add(option);  }  else  {  final  Set  triggers  =  option.getTriggers();  for  (Iterator  j  =  triggers.iterator();  j.hasNext();)  {  newOptionMap.put(j.next(),  option);  }    [CLASS]  GroupImpl  [METHOD]  <init>  [RETURN_TYPE]  String,int,int,boolean)  List  options  String  name  String  description  final  int  minimum  final  int  maximum  final  boolean  required  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  required  SortedMap  newOptionMap  optionMap  Iterator  i  j  List  anonymous  newAnonymous  options  Option  option  String  description  name  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	96	96	1	replace	final  Option  option  =  options.getOption(option,  description);	  final    Option    option    =    options.getOption(option);    	non-compiled	[CE]  illegal  start  of  expression	50	None	replace
183	[BUG]  [BUGGY]  if(option.getDescription()  ==  null  &&  option.getDescription().length()  >  maximum)  {  [CE]  illegal  start  of  expression  [FE]            OptionException      [CONTEXT]      final  SortedMap  newOptionMap  =  new  TreeMap(ReverseStringComparator.getInstance());  final  Set  newPrefixes  =  new  HashSet();  for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {  final  Option  option  =  (Option)  i.next();  option.setParent(this);      [BUGGY]  if(option.getDescription()  ==  null  &&  option.getDescription().length()  >  maximum)  {  [BUGGY]      i.remove();  newAnonymous.add(option);  }  else  {  final  Set  triggers  =  option.getTriggers();  for  (Iterator  j  =  triggers.iterator();  j.hasNext();)  {  newOptionMap.put(j.next(),  option);  }    [CLASS]  GroupImpl  [METHOD]  <init>  [RETURN_TYPE]  String,int,int,boolean)  List  options  String  name  String  description  final  int  minimum  final  int  maximum  final  boolean  required  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  required  SortedMap  newOptionMap  optionMap  Iterator  i  j  List  anonymous  newAnonymous  options  Option  option  String  description  name  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	96	96	1	replace	if(option.getDescription()  ==  null  &&  option.getDescription().length()  >  maximum)  {	  if(option.getDescription()!=    null    &&    option.getDescription().length()    >    maximum)    {    	non-compiled	[CE]  illegal  start  of  expression	71	None	replace
184	[BUG]  [BUGGY]  if(option.getDescription()!=  null  &&  option.getDescription().length()  ==  maximum)  {  [CE]  illegal  start  of  expression  [FE]              OptionException      [CONTEXT]      final  SortedMap  newOptionMap  =  new  TreeMap(ReverseStringComparator.getInstance());  final  Set  newPrefixes  =  new  HashSet();  for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {  final  Option  option  =  (Option)  i.next();  option.setParent(this);      [BUGGY]  if(option.getDescription()!=  null  &&  option.getDescription().length()  ==  maximum)  {  [BUGGY]      i.remove();  newAnonymous.add(option);  }  else  {  final  Set  triggers  =  option.getTriggers();  for  (Iterator  j  =  triggers.iterator();  j.hasNext();)  {  newOptionMap.put(j.next(),  option);  }    [CLASS]  GroupImpl  [METHOD]  <init>  [RETURN_TYPE]  String,int,int,boolean)  List  options  String  name  String  description  final  int  minimum  final  int  maximum  final  boolean  required  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  required  SortedMap  newOptionMap  optionMap  Iterator  i  j  List  anonymous  newAnonymous  options  Option  option  String  description  name  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	96	96	1	replace	if(option.getDescription()!=  null  &&  option.getDescription().length()  ==  maximum)  {	  if(option.getDescription()!=    null    &&    option.getDescription().length()    >    maximum)    {    	non-compiled	[CE]  illegal  start  of  expression	71	None	replace
185	[BUG]  [BUGGY]  Option  option  =(Option)option.cloneTree();  [CE]  illegal  start  of  expression  [FE]                    OptionException      [CONTEXT]      final  SortedMap  newOptionMap  =  new  TreeMap(ReverseStringComparator.getInstance());  final  Set  newPrefixes  =  new  HashSet();  for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {  final  Option  option  =  (Option)  i.next();  option.setParent(this);      [BUGGY]  Option  option  =(Option)option.cloneTree();  [BUGGY]      if  (option  instanceof  Argument)  {  i.remove();  newAnonymous.add(option);  }  else  {  final  Set  triggers  =  option.getTriggers();  for  (Iterator  j  =  triggers.iterator();  j.hasNext();)  {  newOptionMap.put(j.next(),  option);  }    [CLASS]  GroupImpl  [METHOD]  <init>  [RETURN_TYPE]  String,int,int,boolean)  List  options  String  name  String  description  final  int  minimum  final  int  maximum  final  boolean  required  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  required  SortedMap  newOptionMap  optionMap  Iterator  i  j  List  anonymous  newAnonymous  options  Option  option  String  description  name  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	96	96	1	replace	Option  option  =(Option)option.cloneTree();	  Option    option    =(Option)option.getOption();    	non-compiled	[CE]  illegal  start  of  expression	42	None	replace
186	[BUG]  [BUGGY]  if(option.hasAnonymous()  &&!option.hasNext()  &&  option  instanceof  Option)  {  [CE]  illegal  start  of  expression  [FE]              OptionException      [CONTEXT]      final  SortedMap  newOptionMap  =  new  TreeMap(ReverseStringComparator.getInstance());  final  Set  newPrefixes  =  new  HashSet();  for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {  final  Option  option  =  (Option)  i.next();  option.setParent(this);      [BUGGY]  if(option.hasAnonymous()  &&!option.hasNext()  &&  option  instanceof  Option)  {  [BUGGY]      i.remove();  newAnonymous.add(option);  }  else  {  final  Set  triggers  =  option.getTriggers();  for  (Iterator  j  =  triggers.iterator();  j.hasNext();)  {  newOptionMap.put(j.next(),  option);  }    [CLASS]  GroupImpl  [METHOD]  <init>  [RETURN_TYPE]  String,int,int,boolean)  List  options  String  name  String  description  final  int  minimum  final  int  maximum  final  boolean  required  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  required  SortedMap  newOptionMap  optionMap  Iterator  i  j  List  anonymous  newAnonymous  options  Option  option  String  description  name  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	96	96	1	replace	if(option.hasAnonymous()  &&!option.hasNext()  &&  option  instanceof  Option)  {	  if(!option.hasNext()    &&    option    instanceof    Option)    {    	non-compiled	[CE]  illegal  start  of  expression	38	None	replace
187	[BUG]  [BUGGY]  Option  option  =  option.getOption(name,  minimal);  [CE]  illegal  start  of  expression  [FE]            OptionException      [CONTEXT]      final  SortedMap  newOptionMap  =  new  TreeMap(ReverseStringComparator.getInstance());  final  Set  newPrefixes  =  new  HashSet();  for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {  final  Option  option  =  (Option)  i.next();  option.setParent(this);      [BUGGY]  Option  option  =  option.getOption(name,  minimal);  [BUGGY]      if  (option  instanceof  Argument)  {  i.remove();  newAnonymous.add(option);  }  else  {  final  Set  triggers  =  option.getTriggers();  for  (Iterator  j  =  triggers.iterator();  j.hasNext();)  {  newOptionMap.put(j.next(),  option);  }    [CLASS]  GroupImpl  [METHOD]  <init>  [RETURN_TYPE]  String,int,int,boolean)  List  options  String  name  String  description  final  int  minimum  final  int  maximum  final  boolean  required  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  required  SortedMap  newOptionMap  optionMap  Iterator  i  j  List  anonymous  newAnonymous  options  Option  option  String  description  name  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	96	96	1	replace	Option  option  =  option.getOption(name,  minimal);	  Option    option    =    option.getOption(name,    required);    	non-compiled	[CE]  illegal  start  of  expression	62	None	replace
188	[BUG]  [BUGGY]  Option  option  =  option.getOption(name,  minimum  +  1);  [CE]  illegal  start  of  expression  [FE]              OptionException      [CONTEXT]      final  SortedMap  newOptionMap  =  new  TreeMap(ReverseStringComparator.getInstance());  final  Set  newPrefixes  =  new  HashSet();  for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {  final  Option  option  =  (Option)  i.next();  option.setParent(this);      [BUGGY]  Option  option  =  option.getOption(name,  minimum  +  1);  [BUGGY]      if  (option  instanceof  Argument)  {  i.remove();  newAnonymous.add(option);  }  else  {  final  Set  triggers  =  option.getTriggers();  for  (Iterator  j  =  triggers.iterator();  j.hasNext();)  {  newOptionMap.put(j.next(),  option);  }    [CLASS]  GroupImpl  [METHOD]  <init>  [RETURN_TYPE]  String,int,int,boolean)  List  options  String  name  String  description  final  int  minimum  final  int  maximum  final  boolean  required  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  required  SortedMap  newOptionMap  optionMap  Iterator  i  j  List  anonymous  newAnonymous  options  Option  option  String  description  name  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	96	96	1	replace	Option  option  =  option.getOption(name,  minimum  +  1);	  Option    option    =    option.getOption(name,    minimum);    	non-compiled	[CE]  illegal  start  of  expression	29	None	replace
189	[BUG]  [BUGGY]  if(option.hasAnonymous()  ||  options.hasPrefixes())  {  [CE]  illegal  start  of  expression  [FE]              OptionException      [CONTEXT]      final  SortedMap  newOptionMap  =  new  TreeMap(ReverseStringComparator.getInstance());  final  Set  newPrefixes  =  new  HashSet();  for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {  final  Option  option  =  (Option)  i.next();  option.setParent(this);      [BUGGY]  if(option.hasAnonymous()  ||  options.hasPrefixes())  {  [BUGGY]      i.remove();  newAnonymous.add(option);  }  else  {  final  Set  triggers  =  option.getTriggers();  for  (Iterator  j  =  triggers.iterator();  j.hasNext();)  {  newOptionMap.put(j.next(),  option);  }    [CLASS]  GroupImpl  [METHOD]  <init>  [RETURN_TYPE]  String,int,int,boolean)  List  options  String  name  String  description  final  int  minimum  final  int  maximum  final  boolean  required  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  required  SortedMap  newOptionMap  optionMap  Iterator  i  j  List  anonymous  newAnonymous  options  Option  option  String  description  name  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	96	96	1	replace	if(option.hasAnonymous()  ||  options.hasPrefixes())  {	  if(option.hasAnonymous()    ||    options.hasTriggers())    {    	non-compiled	[CE]  illegal  start  of  expression	46	None	replace
190	[BUG]  [BUGGY]  Option  option  =  option.getOption(this,  description,  maximum);  [CE]  illegal  start  of  expression  [FE]            OptionException      [CONTEXT]      final  SortedMap  newOptionMap  =  new  TreeMap(ReverseStringComparator.getInstance());  final  Set  newPrefixes  =  new  HashSet();  for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {  final  Option  option  =  (Option)  i.next();  option.setParent(this);      [BUGGY]  Option  option  =  option.getOption(this,  description,  maximum);  [BUGGY]      if  (option  instanceof  Argument)  {  i.remove();  newAnonymous.add(option);  }  else  {  final  Set  triggers  =  option.getTriggers();  for  (Iterator  j  =  triggers.iterator();  j.hasNext();)  {  newOptionMap.put(j.next(),  option);  }    [CLASS]  GroupImpl  [METHOD]  <init>  [RETURN_TYPE]  String,int,int,boolean)  List  options  String  name  String  description  final  int  minimum  final  int  maximum  final  boolean  required  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  required  SortedMap  newOptionMap  optionMap  Iterator  i  j  List  anonymous  newAnonymous  options  Option  option  String  description  name  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	96	96	1	replace	Option  option  =  option.getOption(this,  description,  maximum);	  Option    option    =    option.getOption(this,    description);    	non-compiled	[CE]  illegal  start  of  expression	57	None	replace
191	[BUG]  [BUGGY]  if(!(option  instanceof  Anonymous)&&  option.getTriggers().contains(option.getTriggers()))  {  [CE]  illegal  start  of  expression  [FE]                  OptionException      [CONTEXT]      final  SortedMap  newOptionMap  =  new  TreeMap(ReverseStringComparator.getInstance());  final  Set  newPrefixes  =  new  HashSet();  for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {  final  Option  option  =  (Option)  i.next();  option.setParent(this);      [BUGGY]  if(!(option  instanceof  Anonymous)&&  option.getTriggers().contains(option.getTriggers()))  {  [BUGGY]      i.remove();  newAnonymous.add(option);  }  else  {  final  Set  triggers  =  option.getTriggers();  for  (Iterator  j  =  triggers.iterator();  j.hasNext();)  {  newOptionMap.put(j.next(),  option);  }    [CLASS]  GroupImpl  [METHOD]  <init>  [RETURN_TYPE]  String,int,int,boolean)  List  options  String  name  String  description  final  int  minimum  final  int  maximum  final  boolean  required  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  required  SortedMap  newOptionMap  optionMap  Iterator  i  j  List  anonymous  newAnonymous  options  Option  option  String  description  name  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	96	96	1	replace	if(!(option  instanceof  Anonymous)&&  option.getTriggers().contains(option.getTriggers()))  {	  if(!(option    instanceof    Anonymous))    {    	non-compiled	[CE]  illegal  start  of  expression	15	None	replace
192	[BUG]  [BUGGY]  Option  option  =  option.cloneOption(this);  [CE]  illegal  start  of  expression  [FE]              OptionException      [CONTEXT]      final  SortedMap  newOptionMap  =  new  TreeMap(ReverseStringComparator.getInstance());  final  Set  newPrefixes  =  new  HashSet();  for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {  final  Option  option  =  (Option)  i.next();  option.setParent(this);      [BUGGY]  Option  option  =  option.cloneOption(this);  [BUGGY]      if  (option  instanceof  Argument)  {  i.remove();  newAnonymous.add(option);  }  else  {  final  Set  triggers  =  option.getTriggers();  for  (Iterator  j  =  triggers.iterator();  j.hasNext();)  {  newOptionMap.put(j.next(),  option);  }    [CLASS]  GroupImpl  [METHOD]  <init>  [RETURN_TYPE]  String,int,int,boolean)  List  options  String  name  String  description  final  int  minimum  final  int  maximum  final  boolean  required  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  required  SortedMap  newOptionMap  optionMap  Iterator  i  j  List  anonymous  newAnonymous  options  Option  option  String  description  name  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	96	96	1	replace	Option  option  =  option.cloneOption(this);	  Option    option    =    option.cloneOption();    	non-compiled	[CE]  illegal  start  of  expression	51	None	replace
193	[BUG]  [BUGGY]  if(option.getDescription()  ==  null  ||  option.getDescription().equals(name))  {  [CE]  illegal  start  of  expression  [FE]            OptionException      [CONTEXT]      final  SortedMap  newOptionMap  =  new  TreeMap(ReverseStringComparator.getInstance());  final  Set  newPrefixes  =  new  HashSet();  for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {  final  Option  option  =  (Option)  i.next();  option.setParent(this);      [BUGGY]  if(option.getDescription()  ==  null  ||  option.getDescription().equals(name))  {  [BUGGY]      i.remove();  newAnonymous.add(option);  }  else  {  final  Set  triggers  =  option.getTriggers();  for  (Iterator  j  =  triggers.iterator();  j.hasNext();)  {  newOptionMap.put(j.next(),  option);  }    [CLASS]  GroupImpl  [METHOD]  <init>  [RETURN_TYPE]  String,int,int,boolean)  List  options  String  name  String  description  final  int  minimum  final  int  maximum  final  boolean  required  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  required  SortedMap  newOptionMap  optionMap  Iterator  i  j  List  anonymous  newAnonymous  options  Option  option  String  description  name  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	96	96	1	replace	if(option.getDescription()  ==  null  ||  option.getDescription().equals(name))  {	  if(option.getDescription()!=    null    ||    option.getDescription().equals(name))    {    	non-compiled	[CE]  illegal  start  of  expression	33	None	replace
194	[BUG]  [BUGGY]  if(option.getDescription()!=  null  ||  option.getDescription().length()  ==  0)  {  [CE]  illegal  start  of  expression  [FE]            OptionException      [CONTEXT]      final  SortedMap  newOptionMap  =  new  TreeMap(ReverseStringComparator.getInstance());  final  Set  newPrefixes  =  new  HashSet();  for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {  final  Option  option  =  (Option)  i.next();  option.setParent(this);      [BUGGY]  if(option.getDescription()!=  null  ||  option.getDescription().length()  ==  0)  {  [BUGGY]      i.remove();  newAnonymous.add(option);  }  else  {  final  Set  triggers  =  option.getTriggers();  for  (Iterator  j  =  triggers.iterator();  j.hasNext();)  {  newOptionMap.put(j.next(),  option);  }    [CLASS]  GroupImpl  [METHOD]  <init>  [RETURN_TYPE]  String,int,int,boolean)  List  options  String  name  String  description  final  int  minimum  final  int  maximum  final  boolean  required  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  required  SortedMap  newOptionMap  optionMap  Iterator  i  j  List  anonymous  newAnonymous  options  Option  option  String  description  name  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	96	96	1	replace	if(option.getDescription()!=  null  ||  option.getDescription().length()  ==  0)  {	  if(option.getDescription()    ==    null)    {    	non-compiled	[CE]  illegal  start  of  expression	55	None	replace
195	[BUG]  [BUGGY]  if(i.hasNext()  ||  options.hasNext())  {  [CE]  illegal  start  of  expression  [FE]                OptionException      [CONTEXT]      final  SortedMap  newOptionMap  =  new  TreeMap(ReverseStringComparator.getInstance());  final  Set  newPrefixes  =  new  HashSet();  for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {  final  Option  option  =  (Option)  i.next();  option.setParent(this);      [BUGGY]  if(i.hasNext()  ||  options.hasNext())  {  [BUGGY]      i.remove();  newAnonymous.add(option);  }  else  {  final  Set  triggers  =  option.getTriggers();  for  (Iterator  j  =  triggers.iterator();  j.hasNext();)  {  newOptionMap.put(j.next(),  option);  }    [CLASS]  GroupImpl  [METHOD]  <init>  [RETURN_TYPE]  String,int,int,boolean)  List  options  String  name  String  description  final  int  minimum  final  int  maximum  final  boolean  required  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  required  SortedMap  newOptionMap  optionMap  Iterator  i  j  List  anonymous  newAnonymous  options  Option  option  String  description  name  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	96	96	1	replace	if(i.hasNext()  ||  options.hasNext())  {	  if(!(i.hasNext()))    {    	non-compiled	[CE]  illegal  start  of  expression	64	None	replace
196	[BUG]  [BUGGY]  if(!option.hasAnonymous()  &&  options.contains(option.getAnonymous()))  {  [CE]  illegal  start  of  expression  [FE]                OptionException      [CONTEXT]      final  SortedMap  newOptionMap  =  new  TreeMap(ReverseStringComparator.getInstance());  final  Set  newPrefixes  =  new  HashSet();  for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {  final  Option  option  =  (Option)  i.next();  option.setParent(this);      [BUGGY]  if(!option.hasAnonymous()  &&  options.contains(option.getAnonymous()))  {  [BUGGY]      i.remove();  newAnonymous.add(option);  }  else  {  final  Set  triggers  =  option.getTriggers();  for  (Iterator  j  =  triggers.iterator();  j.hasNext();)  {  newOptionMap.put(j.next(),  option);  }    [CLASS]  GroupImpl  [METHOD]  <init>  [RETURN_TYPE]  String,int,int,boolean)  List  options  String  name  String  description  final  int  minimum  final  int  maximum  final  boolean  required  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  required  SortedMap  newOptionMap  optionMap  Iterator  i  j  List  anonymous  newAnonymous  options  Option  option  String  description  name  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	96	96	1	replace	if(!option.hasAnonymous()  &&  options.contains(option.getAnonymous()))  {	  if(!(option    instanceof    Option)&&    options.contains(option.getAnonymous()))    {    	non-compiled	[CE]  illegal  start  of  expression	47	None	replace
197	[BUG]  [BUGGY]  if(option  instanceof  Option  &&  options.contains(option.getAnonymous()))  {  [CE]  illegal  start  of  expression  [FE]                  OptionException      [CONTEXT]      final  SortedMap  newOptionMap  =  new  TreeMap(ReverseStringComparator.getInstance());  final  Set  newPrefixes  =  new  HashSet();  for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {  final  Option  option  =  (Option)  i.next();  option.setParent(this);      [BUGGY]  if(option  instanceof  Option  &&  options.contains(option.getAnonymous()))  {  [BUGGY]      i.remove();  newAnonymous.add(option);  }  else  {  final  Set  triggers  =  option.getTriggers();  for  (Iterator  j  =  triggers.iterator();  j.hasNext();)  {  newOptionMap.put(j.next(),  option);  }    [CLASS]  GroupImpl  [METHOD]  <init>  [RETURN_TYPE]  String,int,int,boolean)  List  options  String  name  String  description  final  int  minimum  final  int  maximum  final  boolean  required  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  required  SortedMap  newOptionMap  optionMap  Iterator  i  j  List  anonymous  newAnonymous  options  Option  option  String  description  name  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	96	96	1	replace	if(option  instanceof  Option  &&  options.contains(option.getAnonymous()))  {	  if(!(option    instanceof    Option)&&    options.contains(option.getAnonymous()))    {    	non-compiled	[CE]  illegal  start  of  expression	47	None	replace
198	[BUG]  [BUGGY]  if(option.getAnonymous()!=  null  &&  options.contains(option.getAnonymous()))  {  [CE]  illegal  start  of  expression  [FE]                    OptionException      [CONTEXT]      final  SortedMap  newOptionMap  =  new  TreeMap(ReverseStringComparator.getInstance());  final  Set  newPrefixes  =  new  HashSet();  for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {  final  Option  option  =  (Option)  i.next();  option.setParent(this);      [BUGGY]  if(option.getAnonymous()!=  null  &&  options.contains(option.getAnonymous()))  {  [BUGGY]      i.remove();  newAnonymous.add(option);  }  else  {  final  Set  triggers  =  option.getTriggers();  for  (Iterator  j  =  triggers.iterator();  j.hasNext();)  {  newOptionMap.put(j.next(),  option);  }    [CLASS]  GroupImpl  [METHOD]  <init>  [RETURN_TYPE]  String,int,int,boolean)  List  options  String  name  String  description  final  int  minimum  final  int  maximum  final  boolean  required  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  required  SortedMap  newOptionMap  optionMap  Iterator  i  j  List  anonymous  newAnonymous  options  Option  option  String  description  name  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	96	96	1	replace	if(option.getAnonymous()!=  null  &&  options.contains(option.getAnonymous()))  {	  if(!(option    instanceof    Option)&&    options.contains(option.getAnonymous()))    {    	non-compiled	[CE]  illegal  start  of  expression	47	None	replace
199	[BUG]  [BUGGY]  if(option.getAnonymous()!=  null)  {  [CE]  illegal  start  of  expression  [FE]                      OptionException      [CONTEXT]      final  SortedMap  newOptionMap  =  new  TreeMap(ReverseStringComparator.getInstance());  final  Set  newPrefixes  =  new  HashSet();  for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {  final  Option  option  =  (Option)  i.next();  option.setParent(this);      [BUGGY]  if(option.getAnonymous()!=  null)  {  [BUGGY]      i.remove();  newAnonymous.add(option);  }  else  {  final  Set  triggers  =  option.getTriggers();  for  (Iterator  j  =  triggers.iterator();  j.hasNext();)  {  newOptionMap.put(j.next(),  option);  }    [CLASS]  GroupImpl  [METHOD]  <init>  [RETURN_TYPE]  String,int,int,boolean)  List  options  String  name  String  description  final  int  minimum  final  int  maximum  final  boolean  required  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  required  SortedMap  newOptionMap  optionMap  Iterator  i  j  List  anonymous  newAnonymous  options  Option  option  String  description  name  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	96	96	1	replace	if(option.getAnonymous()!=  null)  {	  if(!(option    instanceof    Option)&&    options.contains(option.getAnonymous()))    {    	non-compiled	[CE]  illegal  start  of  expression	47	None	replace
200	[BUG]  [BUGGY]  final  Option  option  =  options.getOption(prefixes);  [CE]  illegal  start  of  expression  [FE]                      OptionException      [CONTEXT]      final  SortedMap  newOptionMap  =  new  TreeMap(ReverseStringComparator.getInstance());  final  Set  newPrefixes  =  new  HashSet();  for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {  final  Option  option  =  (Option)  i.next();  option.setParent(this);      [BUGGY]  final  Option  option  =  options.getOption(prefixes);  [BUGGY]      if  (option  instanceof  Argument)  {  i.remove();  newAnonymous.add(option);  }  else  {  final  Set  triggers  =  option.getTriggers();  for  (Iterator  j  =  triggers.iterator();  j.hasNext();)  {  newOptionMap.put(j.next(),  option);  }    [CLASS]  GroupImpl  [METHOD]  <init>  [RETURN_TYPE]  String,int,int,boolean)  List  options  String  name  String  description  final  int  minimum  final  int  maximum  final  boolean  required  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  required  SortedMap  newOptionMap  optionMap  Iterator  i  j  List  anonymous  newAnonymous  options  Option  option  String  description  name  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	96	96	1	replace	final  Option  option  =  options.getOption(prefixes);	  final    Option    option    =    option.getOption(prefixes);    	non-compiled	[CE]  illegal  start  of  expression	12	None	replace
201	[BUG]  [BUGGY]  Option  option  =(Option)optionMap.clone();  [CE]  illegal  start  of  expression  [FE]                    OptionException      [CONTEXT]      final  SortedMap  newOptionMap  =  new  TreeMap(ReverseStringComparator.getInstance());  final  Set  newPrefixes  =  new  HashSet();  for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {  final  Option  option  =  (Option)  i.next();  option.setParent(this);      [BUGGY]  Option  option  =(Option)optionMap.clone();  [BUGGY]      if  (option  instanceof  Argument)  {  i.remove();  newAnonymous.add(option);  }  else  {  final  Set  triggers  =  option.getTriggers();  for  (Iterator  j  =  triggers.iterator();  j.hasNext();)  {  newOptionMap.put(j.next(),  option);  }    [CLASS]  GroupImpl  [METHOD]  <init>  [RETURN_TYPE]  String,int,int,boolean)  List  options  String  name  String  description  final  int  minimum  final  int  maximum  final  boolean  required  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  required  SortedMap  newOptionMap  optionMap  Iterator  i  j  List  anonymous  newAnonymous  options  Option  option  String  description  name  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	96	96	1	replace	Option  option  =(Option)optionMap.clone();	  Option    option    =(Option)option.clone();    	non-compiled	[CE]  illegal  start  of  expression	3	None	replace
202	[BUG]  [BUGGY]  Option  option  =(Option)i.clone();  [CE]  illegal  start  of  expression  [FE]                      OptionException      [CONTEXT]      final  SortedMap  newOptionMap  =  new  TreeMap(ReverseStringComparator.getInstance());  final  Set  newPrefixes  =  new  HashSet();  for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {  final  Option  option  =  (Option)  i.next();  option.setParent(this);      [BUGGY]  Option  option  =(Option)i.clone();  [BUGGY]      if  (option  instanceof  Argument)  {  i.remove();  newAnonymous.add(option);  }  else  {  final  Set  triggers  =  option.getTriggers();  for  (Iterator  j  =  triggers.iterator();  j.hasNext();)  {  newOptionMap.put(j.next(),  option);  }    [CLASS]  GroupImpl  [METHOD]  <init>  [RETURN_TYPE]  String,int,int,boolean)  List  options  String  name  String  description  final  int  minimum  final  int  maximum  final  boolean  required  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  required  SortedMap  newOptionMap  optionMap  Iterator  i  j  List  anonymous  newAnonymous  options  Option  option  String  description  name  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	96	96	1	replace	Option  option  =(Option)i.clone();	  Option    option    =(Option)option.clone();    	non-compiled	[CE]  illegal  start  of  expression	3	None	replace
203	[BUG]  [BUGGY]  if(option.hasAnonymous()  ||!option.hasNext()  ||  option  instanceof  Option)  {  [CE]  illegal  start  of  expression  [FE]                  OptionException      [CONTEXT]      final  SortedMap  newOptionMap  =  new  TreeMap(ReverseStringComparator.getInstance());  final  Set  newPrefixes  =  new  HashSet();  for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {  final  Option  option  =  (Option)  i.next();  option.setParent(this);      [BUGGY]  if(option.hasAnonymous()  ||!option.hasNext()  ||  option  instanceof  Option)  {  [BUGGY]      i.remove();  newAnonymous.add(option);  }  else  {  final  Set  triggers  =  option.getTriggers();  for  (Iterator  j  =  triggers.iterator();  j.hasNext();)  {  newOptionMap.put(j.next(),  option);  }    [CLASS]  GroupImpl  [METHOD]  <init>  [RETURN_TYPE]  String,int,int,boolean)  List  options  String  name  String  description  final  int  minimum  final  int  maximum  final  boolean  required  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  required  SortedMap  newOptionMap  optionMap  Iterator  i  j  List  anonymous  newAnonymous  options  Option  option  String  description  name  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	96	96	1	replace	if(option.hasAnonymous()  ||!option.hasNext()  ||  option  instanceof  Option)  {	  if(!option.hasNext()    ||    option    instanceof    Option)    {    	non-compiled	[CE]  illegal  start  of  expression	27	None	replace
204	[BUG]  [BUGGY]  Option  option  =  options.getOption(description,  option);  [CE]  illegal  start  of  expression  [FE]                OptionException      [CONTEXT]      final  SortedMap  newOptionMap  =  new  TreeMap(ReverseStringComparator.getInstance());  final  Set  newPrefixes  =  new  HashSet();  for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {  final  Option  option  =  (Option)  i.next();  option.setParent(this);      [BUGGY]  Option  option  =  options.getOption(description,  option);  [BUGGY]      if  (option  instanceof  Argument)  {  i.remove();  newAnonymous.add(option);  }  else  {  final  Set  triggers  =  option.getTriggers();  for  (Iterator  j  =  triggers.iterator();  j.hasNext();)  {  newOptionMap.put(j.next(),  option);  }    [CLASS]  GroupImpl  [METHOD]  <init>  [RETURN_TYPE]  String,int,int,boolean)  List  options  String  name  String  description  final  int  minimum  final  int  maximum  final  boolean  required  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  required  SortedMap  newOptionMap  optionMap  Iterator  i  j  List  anonymous  newAnonymous  options  Option  option  String  description  name  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	96	96	1	replace	Option  option  =  options.getOption(description,  option);	  Option    option    =    options.getOption(option,    description);    	non-compiled	[CE]  illegal  start  of  expression	49	None	replace
205	[BUG]  [BUGGY]  Option  option  =  options.getOption(option,  name);  [CE]  illegal  start  of  expression  [FE]                  OptionException      [CONTEXT]      final  SortedMap  newOptionMap  =  new  TreeMap(ReverseStringComparator.getInstance());  final  Set  newPrefixes  =  new  HashSet();  for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {  final  Option  option  =  (Option)  i.next();  option.setParent(this);      [BUGGY]  Option  option  =  options.getOption(option,  name);  [BUGGY]      if  (option  instanceof  Argument)  {  i.remove();  newAnonymous.add(option);  }  else  {  final  Set  triggers  =  option.getTriggers();  for  (Iterator  j  =  triggers.iterator();  j.hasNext();)  {  newOptionMap.put(j.next(),  option);  }    [CLASS]  GroupImpl  [METHOD]  <init>  [RETURN_TYPE]  String,int,int,boolean)  List  options  String  name  String  description  final  int  minimum  final  int  maximum  final  boolean  required  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  required  SortedMap  newOptionMap  optionMap  Iterator  i  j  List  anonymous  newAnonymous  options  Option  option  String  description  name  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	96	96	1	replace	Option  option  =  options.getOption(option,  name);	  Option    option    =    options.getOption(option,    description);    	non-compiled	[CE]  illegal  start  of  expression	49	None	replace
206	[BUG]  [BUGGY]  if(!(option  instanceof  Anonymous  ||  option  instanceof  Option))  {  [CE]  illegal  start  of  expression  [FE]                    OptionException      [CONTEXT]      final  SortedMap  newOptionMap  =  new  TreeMap(ReverseStringComparator.getInstance());  final  Set  newPrefixes  =  new  HashSet();  for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {  final  Option  option  =  (Option)  i.next();  option.setParent(this);      [BUGGY]  if(!(option  instanceof  Anonymous  ||  option  instanceof  Option))  {  [BUGGY]      i.remove();  newAnonymous.add(option);  }  else  {  final  Set  triggers  =  option.getTriggers();  for  (Iterator  j  =  triggers.iterator();  j.hasNext();)  {  newOptionMap.put(j.next(),  option);  }    [CLASS]  GroupImpl  [METHOD]  <init>  [RETURN_TYPE]  String,int,int,boolean)  List  options  String  name  String  description  final  int  minimum  final  int  maximum  final  boolean  required  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  required  SortedMap  newOptionMap  optionMap  Iterator  i  j  List  anonymous  newAnonymous  options  Option  option  String  description  name  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	96	96	1	replace	if(!(option  instanceof  Anonymous  ||  option  instanceof  Option))  {	  if(!(option    instanceof    Option    ||    option    instanceof    Anonymous))    {    	non-compiled	[CE]  illegal  start  of  expression	16	None	replace
207	[BUG]  [BUGGY]  if(option  instanceof  Option  &&  option.getAnonymous()  ==  null)  {  [CE]  illegal  start  of  expression  [FE]            OptionException      [CONTEXT]      final  SortedMap  newOptionMap  =  new  TreeMap(ReverseStringComparator.getInstance());  final  Set  newPrefixes  =  new  HashSet();  for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {  final  Option  option  =  (Option)  i.next();  option.setParent(this);      [BUGGY]  if(option  instanceof  Option  &&  option.getAnonymous()  ==  null)  {  [BUGGY]      i.remove();  newAnonymous.add(option);  }  else  {  final  Set  triggers  =  option.getTriggers();  for  (Iterator  j  =  triggers.iterator();  j.hasNext();)  {  newOptionMap.put(j.next(),  option);  }    [CLASS]  GroupImpl  [METHOD]  <init>  [RETURN_TYPE]  String,int,int,boolean)  List  options  String  name  String  description  final  int  minimum  final  int  maximum  final  boolean  required  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  required  SortedMap  newOptionMap  optionMap  Iterator  i  j  List  anonymous  newAnonymous  options  Option  option  String  description  name  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	96	96	1	replace	if(option  instanceof  Option  &&  option.getAnonymous()  ==  null)  {	  if(option    instanceof    Option    &&    option.getAnonymous()!=    null)    {    	non-compiled	[CE]  illegal  start  of  expression	53	None	replace
208	[BUG]  [BUGGY]  if(option  instanceof  Option  ||  option.getAnonymous()!=  null)  {  [CE]  illegal  start  of  expression  [FE]              OptionException      [CONTEXT]      final  SortedMap  newOptionMap  =  new  TreeMap(ReverseStringComparator.getInstance());  final  Set  newPrefixes  =  new  HashSet();  for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {  final  Option  option  =  (Option)  i.next();  option.setParent(this);      [BUGGY]  if(option  instanceof  Option  ||  option.getAnonymous()!=  null)  {  [BUGGY]      i.remove();  newAnonymous.add(option);  }  else  {  final  Set  triggers  =  option.getTriggers();  for  (Iterator  j  =  triggers.iterator();  j.hasNext();)  {  newOptionMap.put(j.next(),  option);  }    [CLASS]  GroupImpl  [METHOD]  <init>  [RETURN_TYPE]  String,int,int,boolean)  List  options  String  name  String  description  final  int  minimum  final  int  maximum  final  boolean  required  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  required  SortedMap  newOptionMap  optionMap  Iterator  i  j  List  anonymous  newAnonymous  options  Option  option  String  description  name  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	96	96	1	replace	if(option  instanceof  Option  ||  option.getAnonymous()!=  null)  {	  if(option    instanceof    Option    &&    option.getAnonymous()!=    null)    {    	non-compiled	[CE]  illegal  start  of  expression	53	None	replace
209	[BUG]  [BUGGY]  Option  option  =  options.getOption(defaultValue,  preferredValue);  [CE]  illegal  start  of  expression  [FE]              OptionException      [CONTEXT]      final  SortedMap  newOptionMap  =  new  TreeMap(ReverseStringComparator.getInstance());  final  Set  newPrefixes  =  new  HashSet();  for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {  final  Option  option  =  (Option)  i.next();  option.setParent(this);      [BUGGY]  Option  option  =  options.getOption(defaultValue,  preferredValue);  [BUGGY]      if  (option  instanceof  Argument)  {  i.remove();  newAnonymous.add(option);  }  else  {  final  Set  triggers  =  option.getTriggers();  for  (Iterator  j  =  triggers.iterator();  j.hasNext();)  {  newOptionMap.put(j.next(),  option);  }    [CLASS]  GroupImpl  [METHOD]  <init>  [RETURN_TYPE]  String,int,int,boolean)  List  options  String  name  String  description  final  int  minimum  final  int  maximum  final  boolean  required  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  required  SortedMap  newOptionMap  optionMap  Iterator  i  j  List  anonymous  newAnonymous  options  Option  option  String  description  name  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	96	96	1	replace	Option  option  =  options.getOption(defaultValue,  preferredValue);	  Option    option    =    options.getOption(defaultValue);    	non-compiled	[CE]  illegal  start  of  expression	73	None	replace
210	[BUG]  [BUGGY]  if(option.hasNext()  ||  option.getTriggers().contains(option))  {  [CE]  illegal  start  of  expression  [FE]              OptionException      [CONTEXT]      final  SortedMap  newOptionMap  =  new  TreeMap(ReverseStringComparator.getInstance());  final  Set  newPrefixes  =  new  HashSet();  for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {  final  Option  option  =  (Option)  i.next();  option.setParent(this);      [BUGGY]  if(option.hasNext()  ||  option.getTriggers().contains(option))  {  [BUGGY]      i.remove();  newAnonymous.add(option);  }  else  {  final  Set  triggers  =  option.getTriggers();  for  (Iterator  j  =  triggers.iterator();  j.hasNext();)  {  newOptionMap.put(j.next(),  option);  }    [CLASS]  GroupImpl  [METHOD]  <init>  [RETURN_TYPE]  String,int,int,boolean)  List  options  String  name  String  description  final  int  minimum  final  int  maximum  final  boolean  required  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  required  SortedMap  newOptionMap  optionMap  Iterator  i  j  List  anonymous  newAnonymous  options  Option  option  String  description  name  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	96	96	1	replace	if(option.hasNext()  ||  option.getTriggers().contains(option))  {	  if(!(option.hasNext()    ||    option    instanceof    Option))    {    	non-compiled	[CE]  illegal  start  of  expression	25	None	replace
211	[BUG]  [BUGGY]  if(option.getDescription()  ==  null  ||  options.getDescription().equals(option.getDescription()))  {  [CE]  illegal  start  of  expression  [FE]                OptionException      [CONTEXT]      final  SortedMap  newOptionMap  =  new  TreeMap(ReverseStringComparator.getInstance());  final  Set  newPrefixes  =  new  HashSet();  for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {  final  Option  option  =  (Option)  i.next();  option.setParent(this);      [BUGGY]  if(option.getDescription()  ==  null  ||  options.getDescription().equals(option.getDescription()))  {  [BUGGY]      i.remove();  newAnonymous.add(option);  }  else  {  final  Set  triggers  =  option.getTriggers();  for  (Iterator  j  =  triggers.iterator();  j.hasNext();)  {  newOptionMap.put(j.next(),  option);  }    [CLASS]  GroupImpl  [METHOD]  <init>  [RETURN_TYPE]  String,int,int,boolean)  List  options  String  name  String  description  final  int  minimum  final  int  maximum  final  boolean  required  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  required  SortedMap  newOptionMap  optionMap  Iterator  i  j  List  anonymous  newAnonymous  options  Option  option  String  description  name  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	96	96	1	replace	if(option.getDescription()  ==  null  ||  options.getDescription().equals(option.getDescription()))  {	  if(option.getDescription()!=    null    ||    options.getDescription().equals(option.getDescription()))    {    	non-compiled	[CE]  illegal  start  of  expression	35	None	replace
212	[BUG]  [BUGGY]  Option  option  =  option.getOption(defaultName,  minimal);  [CE]  illegal  start  of  expression  [FE]              OptionException      [CONTEXT]      final  SortedMap  newOptionMap  =  new  TreeMap(ReverseStringComparator.getInstance());  final  Set  newPrefixes  =  new  HashSet();  for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {  final  Option  option  =  (Option)  i.next();  option.setParent(this);      [BUGGY]  Option  option  =  option.getOption(defaultName,  minimal);  [BUGGY]      if  (option  instanceof  Argument)  {  i.remove();  newAnonymous.add(option);  }  else  {  final  Set  triggers  =  option.getTriggers();  for  (Iterator  j  =  triggers.iterator();  j.hasNext();)  {  newOptionMap.put(j.next(),  option);  }    [CLASS]  GroupImpl  [METHOD]  <init>  [RETURN_TYPE]  String,int,int,boolean)  List  options  String  name  String  description  final  int  minimum  final  int  maximum  final  boolean  required  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  required  SortedMap  newOptionMap  optionMap  Iterator  i  j  List  anonymous  newAnonymous  options  Option  option  String  description  name  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	96	96	1	replace	Option  option  =  option.getOption(defaultName,  minimal);	  Option    option    =    option.getOption(defaultName,    required);    	non-compiled	[CE]  illegal  start  of  expression	44	None	replace
213	[BUG]  [BUGGY]  Option  option  =  options.getOption(defaultName,  defaultPrefixes);  [CE]  illegal  start  of  expression  [FE]                OptionException      [CONTEXT]      final  SortedMap  newOptionMap  =  new  TreeMap(ReverseStringComparator.getInstance());  final  Set  newPrefixes  =  new  HashSet();  for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {  final  Option  option  =  (Option)  i.next();  option.setParent(this);      [BUGGY]  Option  option  =  options.getOption(defaultName,  defaultPrefixes);  [BUGGY]      if  (option  instanceof  Argument)  {  i.remove();  newAnonymous.add(option);  }  else  {  final  Set  triggers  =  option.getTriggers();  for  (Iterator  j  =  triggers.iterator();  j.hasNext();)  {  newOptionMap.put(j.next(),  option);  }    [CLASS]  GroupImpl  [METHOD]  <init>  [RETURN_TYPE]  String,int,int,boolean)  List  options  String  name  String  description  final  int  minimum  final  int  maximum  final  boolean  required  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  required  SortedMap  newOptionMap  optionMap  Iterator  i  j  List  anonymous  newAnonymous  options  Option  option  String  description  name  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	96	96	1	replace	Option  option  =  options.getOption(defaultName,  defaultPrefixes);	  Option    option    =    options.getOption(defaultName);    	non-compiled	[CE]  illegal  start  of  expression	2	None	replace
214	[BUG]  [BUGGY]  Option  option  =  option.getOption(defaultName,  minimum  +  1);  [CE]  illegal  start  of  expression  [FE]              OptionException      [CONTEXT]      final  SortedMap  newOptionMap  =  new  TreeMap(ReverseStringComparator.getInstance());  final  Set  newPrefixes  =  new  HashSet();  for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {  final  Option  option  =  (Option)  i.next();  option.setParent(this);      [BUGGY]  Option  option  =  option.getOption(defaultName,  minimum  +  1);  [BUGGY]      if  (option  instanceof  Argument)  {  i.remove();  newAnonymous.add(option);  }  else  {  final  Set  triggers  =  option.getTriggers();  for  (Iterator  j  =  triggers.iterator();  j.hasNext();)  {  newOptionMap.put(j.next(),  option);  }    [CLASS]  GroupImpl  [METHOD]  <init>  [RETURN_TYPE]  String,int,int,boolean)  List  options  String  name  String  description  final  int  minimum  final  int  maximum  final  boolean  required  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  required  SortedMap  newOptionMap  optionMap  Iterator  i  j  List  anonymous  newAnonymous  options  Option  option  String  description  name  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	96	96	1	replace	Option  option  =  option.getOption(defaultName,  minimum  +  1);	  Option    option    =    option.getOption(defaultName,    minimum);    	non-compiled	[CE]  illegal  start  of  expression	1	None	replace
215	[BUG]  [BUGGY]  final  Option  option  =  options.getOption(defaultName);  [CE]  illegal  start  of  expression  [FE]                  OptionException      [CONTEXT]      final  SortedMap  newOptionMap  =  new  TreeMap(ReverseStringComparator.getInstance());  final  Set  newPrefixes  =  new  HashSet();  for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {  final  Option  option  =  (Option)  i.next();  option.setParent(this);      [BUGGY]  final  Option  option  =  options.getOption(defaultName);  [BUGGY]      if  (option  instanceof  Argument)  {  i.remove();  newAnonymous.add(option);  }  else  {  final  Set  triggers  =  option.getTriggers();  for  (Iterator  j  =  triggers.iterator();  j.hasNext();)  {  newOptionMap.put(j.next(),  option);  }    [CLASS]  GroupImpl  [METHOD]  <init>  [RETURN_TYPE]  String,int,int,boolean)  List  options  String  name  String  description  final  int  minimum  final  int  maximum  final  boolean  required  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  required  SortedMap  newOptionMap  optionMap  Iterator  i  j  List  anonymous  newAnonymous  options  Option  option  String  description  name  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	96	96	1	replace	final  Option  option  =  options.getOption(defaultName);	  final    Option    option    =    option.getOption(defaultName);    	non-compiled	[CE]  illegal  start  of  expression	61	None	replace
216	[BUG]  [BUGGY]  final  Option  option  =  option.getOption(this,  options);  [CE]  illegal  start  of  expression  [FE]                OptionException      [CONTEXT]      final  SortedMap  newOptionMap  =  new  TreeMap(ReverseStringComparator.getInstance());  final  Set  newPrefixes  =  new  HashSet();  for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {  final  Option  option  =  (Option)  i.next();  option.setParent(this);      [BUGGY]  final  Option  option  =  option.getOption(this,  options);  [BUGGY]      if  (option  instanceof  Argument)  {  i.remove();  newAnonymous.add(option);  }  else  {  final  Set  triggers  =  option.getTriggers();  for  (Iterator  j  =  triggers.iterator();  j.hasNext();)  {  newOptionMap.put(j.next(),  option);  }    [CLASS]  GroupImpl  [METHOD]  <init>  [RETURN_TYPE]  String,int,int,boolean)  List  options  String  name  String  description  final  int  minimum  final  int  maximum  final  boolean  required  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  required  SortedMap  newOptionMap  optionMap  Iterator  i  j  List  anonymous  newAnonymous  options  Option  option  String  description  name  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	96	96	1	replace	final  Option  option  =  option.getOption(this,  options);	  final    Option    option    =    option.getOption(this);    	non-compiled	[CE]  illegal  start  of  expression	9	None	replace
217	[BUG]  [BUGGY]  Option  option  =  option.getOption(name,  description,  maximum);  [CE]  illegal  start  of  expression  [FE]              OptionException      [CONTEXT]      final  SortedMap  newOptionMap  =  new  TreeMap(ReverseStringComparator.getInstance());  final  Set  newPrefixes  =  new  HashSet();  for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {  final  Option  option  =  (Option)  i.next();  option.setParent(this);      [BUGGY]  Option  option  =  option.getOption(name,  description,  maximum);  [BUGGY]      if  (option  instanceof  Argument)  {  i.remove();  newAnonymous.add(option);  }  else  {  final  Set  triggers  =  option.getTriggers();  for  (Iterator  j  =  triggers.iterator();  j.hasNext();)  {  newOptionMap.put(j.next(),  option);  }    [CLASS]  GroupImpl  [METHOD]  <init>  [RETURN_TYPE]  String,int,int,boolean)  List  options  String  name  String  description  final  int  minimum  final  int  maximum  final  boolean  required  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  required  SortedMap  newOptionMap  optionMap  Iterator  i  j  List  anonymous  newAnonymous  options  Option  option  String  description  name  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	96	96	1	replace	Option  option  =  option.getOption(name,  description,  maximum);	  Option    option    =    option.getOption(name,    description);    	non-compiled	[CE]  illegal  start  of  expression	63	None	replace
218	[BUG]  [BUGGY]  Option  option  =(Option)option.getAnonymousValue()  +  1;  [CE]  illegal  start  of  expression  [FE]                      OptionException      [CONTEXT]      final  SortedMap  newOptionMap  =  new  TreeMap(ReverseStringComparator.getInstance());  final  Set  newPrefixes  =  new  HashSet();  for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {  final  Option  option  =  (Option)  i.next();  option.setParent(this);      [BUGGY]  Option  option  =(Option)option.getAnonymousValue()  +  1;  [BUGGY]      if  (option  instanceof  Argument)  {  i.remove();  newAnonymous.add(option);  }  else  {  final  Set  triggers  =  option.getTriggers();  for  (Iterator  j  =  triggers.iterator();  j.hasNext();)  {  newOptionMap.put(j.next(),  option);  }    [CLASS]  GroupImpl  [METHOD]  <init>  [RETURN_TYPE]  String,int,int,boolean)  List  options  String  name  String  description  final  int  minimum  final  int  maximum  final  boolean  required  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  required  SortedMap  newOptionMap  optionMap  Iterator  i  j  List  anonymous  newAnonymous  options  Option  option  String  description  name  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	96	96	1	replace	Option  option  =(Option)option.getAnonymousValue()  +  1;	  Option    option    =(Option)option.getAnonymousValue();    	non-compiled	[CE]  illegal  start  of  expression	4	None	replace
219	[BUG]  [BUGGY]  Option  option  =  options.getOption(default,  description);  [CE]  illegal  start  of  expression  [FE]                OptionException      [CONTEXT]      final  SortedMap  newOptionMap  =  new  TreeMap(ReverseStringComparator.getInstance());  final  Set  newPrefixes  =  new  HashSet();  for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {  final  Option  option  =  (Option)  i.next();  option.setParent(this);      [BUGGY]  Option  option  =  options.getOption(default,  description);  [BUGGY]      if  (option  instanceof  Argument)  {  i.remove();  newAnonymous.add(option);  }  else  {  final  Set  triggers  =  option.getTriggers();  for  (Iterator  j  =  triggers.iterator();  j.hasNext();)  {  newOptionMap.put(j.next(),  option);  }    [CLASS]  GroupImpl  [METHOD]  <init>  [RETURN_TYPE]  String,int,int,boolean)  List  options  String  name  String  description  final  int  minimum  final  int  maximum  final  boolean  required  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  required  SortedMap  newOptionMap  optionMap  Iterator  i  j  List  anonymous  newAnonymous  options  Option  option  String  description  name  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	96	96	1	replace	Option  option  =  options.getOption(default,  description);	  Option    option    =    options.getOption(default);    	non-compiled	[CE]  illegal  start  of  expression	20	None	replace
220	[BUG]  [BUGGY]  Option  option  =  options.getOption(defaultValue,  name);  [CE]  illegal  start  of  expression  [FE]              OptionException      [CONTEXT]      final  SortedMap  newOptionMap  =  new  TreeMap(ReverseStringComparator.getInstance());  final  Set  newPrefixes  =  new  HashSet();  for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {  final  Option  option  =  (Option)  i.next();  option.setParent(this);      [BUGGY]  Option  option  =  options.getOption(defaultValue,  name);  [BUGGY]      if  (option  instanceof  Argument)  {  i.remove();  newAnonymous.add(option);  }  else  {  final  Set  triggers  =  option.getTriggers();  for  (Iterator  j  =  triggers.iterator();  j.hasNext();)  {  newOptionMap.put(j.next(),  option);  }    [CLASS]  GroupImpl  [METHOD]  <init>  [RETURN_TYPE]  String,int,int,boolean)  List  options  String  name  String  description  final  int  minimum  final  int  maximum  final  boolean  required  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  required  SortedMap  newOptionMap  optionMap  Iterator  i  j  List  anonymous  newAnonymous  options  Option  option  String  description  name  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	96	96	1	replace	Option  option  =  options.getOption(defaultValue,  name);	  Option    option    =    options.getOption(defaultValue);    	non-compiled	[CE]  illegal  start  of  expression	73	None	replace
221	[BUG]  [BUGGY]  Option  option  =(Option)i.remove();  [CE]  illegal  start  of  expression  [FE]                  OptionException      [CONTEXT]      final  SortedMap  newOptionMap  =  new  TreeMap(ReverseStringComparator.getInstance());  final  Set  newPrefixes  =  new  HashSet();  for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {  final  Option  option  =  (Option)  i.next();  option.setParent(this);      [BUGGY]  Option  option  =(Option)i.remove();  [BUGGY]      if  (option  instanceof  Argument)  {  i.remove();  newAnonymous.add(option);  }  else  {  final  Set  triggers  =  option.getTriggers();  for  (Iterator  j  =  triggers.iterator();  j.hasNext();)  {  newOptionMap.put(j.next(),  option);  }    [CLASS]  GroupImpl  [METHOD]  <init>  [RETURN_TYPE]  String,int,int,boolean)  List  options  String  name  String  description  final  int  minimum  final  int  maximum  final  boolean  required  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  required  SortedMap  newOptionMap  optionMap  Iterator  i  j  List  anonymous  newAnonymous  options  Option  option  String  description  name  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	96	96	1	replace	Option  option  =(Option)i.remove();	  Option    option    =(Option)i.getAnonymous();    	non-compiled	[CE]  illegal  start  of  expression	67	None	replace
222	[BUG]  [BUGGY]  final  Option  option  =  option.getOption(this,  i);  [CE]  illegal  start  of  expression  [FE]                OptionException      [CONTEXT]      final  SortedMap  newOptionMap  =  new  TreeMap(ReverseStringComparator.getInstance());  final  Set  newPrefixes  =  new  HashSet();  for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {  final  Option  option  =  (Option)  i.next();  option.setParent(this);      [BUGGY]  final  Option  option  =  option.getOption(this,  i);  [BUGGY]      if  (option  instanceof  Argument)  {  i.remove();  newAnonymous.add(option);  }  else  {  final  Set  triggers  =  option.getTriggers();  for  (Iterator  j  =  triggers.iterator();  j.hasNext();)  {  newOptionMap.put(j.next(),  option);  }    [CLASS]  GroupImpl  [METHOD]  <init>  [RETURN_TYPE]  String,int,int,boolean)  List  options  String  name  String  description  final  int  minimum  final  int  maximum  final  boolean  required  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  required  SortedMap  newOptionMap  optionMap  Iterator  i  j  List  anonymous  newAnonymous  options  Option  option  String  description  name  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	96	96	1	replace	final  Option  option  =  option.getOption(this,  i);	  final    Option    option    =    option.getOption(this);    	non-compiled	[CE]  illegal  start  of  expression	9	None	replace
223	[BUG]  [BUGGY]  if(option.hasArg()  ||!(option.hasNext()  &&  option  instanceof  Option))  {  [CE]  illegal  start  of  expression  [FE]                OptionException      [CONTEXT]      final  SortedMap  newOptionMap  =  new  TreeMap(ReverseStringComparator.getInstance());  final  Set  newPrefixes  =  new  HashSet();  for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {  final  Option  option  =  (Option)  i.next();  option.setParent(this);      [BUGGY]  if(option.hasArg()  ||!(option.hasNext()  &&  option  instanceof  Option))  {  [BUGGY]      i.remove();  newAnonymous.add(option);  }  else  {  final  Set  triggers  =  option.getTriggers();  for  (Iterator  j  =  triggers.iterator();  j.hasNext();)  {  newOptionMap.put(j.next(),  option);  }    [CLASS]  GroupImpl  [METHOD]  <init>  [RETURN_TYPE]  String,int,int,boolean)  List  options  String  name  String  description  final  int  minimum  final  int  maximum  final  boolean  required  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  required  SortedMap  newOptionMap  optionMap  Iterator  i  j  List  anonymous  newAnonymous  options  Option  option  String  description  name  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	96	96	1	replace	if(option.hasArg()  ||!(option.hasNext()  &&  option  instanceof  Option))  {	  if(option.hasAnonymous()    ||!(option.hasNext()    &&    option    instanceof    Option))    {    	non-compiled	[CE]  illegal  start  of  expression	39	None	replace
224	[BUG]  [BUGGY]  if(option.hasAnonymous()  ||!(option.hasNext()  &&  option.getDescription()  instanceof  Option))  {  [CE]  illegal  start  of  expression  [FE]                  OptionException      [CONTEXT]      final  SortedMap  newOptionMap  =  new  TreeMap(ReverseStringComparator.getInstance());  final  Set  newPrefixes  =  new  HashSet();  for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {  final  Option  option  =  (Option)  i.next();  option.setParent(this);      [BUGGY]  if(option.hasAnonymous()  ||!(option.hasNext()  &&  option.getDescription()  instanceof  Option))  {  [BUGGY]      i.remove();  newAnonymous.add(option);  }  else  {  final  Set  triggers  =  option.getTriggers();  for  (Iterator  j  =  triggers.iterator();  j.hasNext();)  {  newOptionMap.put(j.next(),  option);  }    [CLASS]  GroupImpl  [METHOD]  <init>  [RETURN_TYPE]  String,int,int,boolean)  List  options  String  name  String  description  final  int  minimum  final  int  maximum  final  boolean  required  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  required  SortedMap  newOptionMap  optionMap  Iterator  i  j  List  anonymous  newAnonymous  options  Option  option  String  description  name  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	96	96	1	replace	if(option.hasAnonymous()  ||!(option.hasNext()  &&  option.getDescription()  instanceof  Option))  {	  if(option.hasAnonymous()    ||!(option.hasNext()    &&    option    instanceof    Option))    {    	non-compiled	[CE]  illegal  start  of  expression	39	None	replace
225	[BUG]  [BUGGY]  if(!option.hasAnonymousTriggers())  {  [CE]  illegal  start  of  expression  [FE]                OptionException      [CONTEXT]      final  SortedMap  newOptionMap  =  new  TreeMap(ReverseStringComparator.getInstance());  final  Set  newPrefixes  =  new  HashSet();  for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {  final  Option  option  =  (Option)  i.next();  option.setParent(this);      [BUGGY]  if(!option.hasAnonymousTriggers())  {  [BUGGY]      i.remove();  newAnonymous.add(option);  }  else  {  final  Set  triggers  =  option.getTriggers();  for  (Iterator  j  =  triggers.iterator();  j.hasNext();)  {  newOptionMap.put(j.next(),  option);  }    [CLASS]  GroupImpl  [METHOD]  <init>  [RETURN_TYPE]  String,int,int,boolean)  List  options  String  name  String  description  final  int  minimum  final  int  maximum  final  boolean  required  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  required  SortedMap  newOptionMap  optionMap  Iterator  i  j  List  anonymous  newAnonymous  options  Option  option  String  description  name  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	96	96	1	replace	if(!option.hasAnonymousTriggers())  {	  if(option.hasTriggers())    {    	non-compiled	[CE]  illegal  start  of  expression	6	None	replace
226	[BUG]  [BUGGY]  Option  option  =  optionMap.getOption(name,  required);  [CE]  illegal  start  of  expression  [FE]            OptionException      [CONTEXT]      final  SortedMap  newOptionMap  =  new  TreeMap(ReverseStringComparator.getInstance());  final  Set  newPrefixes  =  new  HashSet();  for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {  final  Option  option  =  (Option)  i.next();  option.setParent(this);      [BUGGY]  Option  option  =  optionMap.getOption(name,  required);  [BUGGY]      if  (option  instanceof  Argument)  {  i.remove();  newAnonymous.add(option);  }  else  {  final  Set  triggers  =  option.getTriggers();  for  (Iterator  j  =  triggers.iterator();  j.hasNext();)  {  newOptionMap.put(j.next(),  option);  }    [CLASS]  GroupImpl  [METHOD]  <init>  [RETURN_TYPE]  String,int,int,boolean)  List  options  String  name  String  description  final  int  minimum  final  int  maximum  final  boolean  required  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  required  SortedMap  newOptionMap  optionMap  Iterator  i  j  List  anonymous  newAnonymous  options  Option  option  String  description  name  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	96	96	1	replace	Option  option  =  optionMap.getOption(name,  required);	  Option    option    =    option.getOption(name,    required);    	non-compiled	[CE]  illegal  start  of  expression	62	None	replace
227	[BUG]  [BUGGY]  Option  option  =  option.getOption(this,  description,  required);  [CE]  illegal  start  of  expression  [FE]            OptionException      [CONTEXT]      final  SortedMap  newOptionMap  =  new  TreeMap(ReverseStringComparator.getInstance());  final  Set  newPrefixes  =  new  HashSet();  for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {  final  Option  option  =  (Option)  i.next();  option.setParent(this);      [BUGGY]  Option  option  =  option.getOption(this,  description,  required);  [BUGGY]      if  (option  instanceof  Argument)  {  i.remove();  newAnonymous.add(option);  }  else  {  final  Set  triggers  =  option.getTriggers();  for  (Iterator  j  =  triggers.iterator();  j.hasNext();)  {  newOptionMap.put(j.next(),  option);  }    [CLASS]  GroupImpl  [METHOD]  <init>  [RETURN_TYPE]  String,int,int,boolean)  List  options  String  name  String  description  final  int  minimum  final  int  maximum  final  boolean  required  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  required  SortedMap  newOptionMap  optionMap  Iterator  i  j  List  anonymous  newAnonymous  options  Option  option  String  description  name  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	96	96	1	replace	Option  option  =  option.getOption(this,  description,  required);	  Option    option    =    option.getOption(this,    description);    	non-compiled	[CE]  illegal  start  of  expression	57	None	replace
228	[BUG]  [BUGGY]  if(!(i  instanceof  Option)&&  options.hasNext())  {  [CE]  illegal  start  of  expression  [FE]                  OptionException      [CONTEXT]      final  SortedMap  newOptionMap  =  new  TreeMap(ReverseStringComparator.getInstance());  final  Set  newPrefixes  =  new  HashSet();  for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {  final  Option  option  =  (Option)  i.next();  option.setParent(this);      [BUGGY]  if(!(i  instanceof  Option)&&  options.hasNext())  {  [BUGGY]      i.remove();  newAnonymous.add(option);  }  else  {  final  Set  triggers  =  option.getTriggers();  for  (Iterator  j  =  triggers.iterator();  j.hasNext();)  {  newOptionMap.put(j.next(),  option);  }    [CLASS]  GroupImpl  [METHOD]  <init>  [RETURN_TYPE]  String,int,int,boolean)  List  options  String  name  String  description  final  int  minimum  final  int  maximum  final  boolean  required  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  required  SortedMap  newOptionMap  optionMap  Iterator  i  j  List  anonymous  newAnonymous  options  Option  option  String  description  name  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	96	96	1	replace	if(!(i  instanceof  Option)&&  options.hasNext())  {	  if(!(option    instanceof    Option)&&    i.hasNext())    {    	non-compiled	[CE]  illegal  start  of  expression	65	None	replace
229	[BUG]  [BUGGY]  if(!i.hasNext())  {  [CE]  illegal  start  of  expression  [FE]                OptionException      [CONTEXT]      final  SortedMap  newOptionMap  =  new  TreeMap(ReverseStringComparator.getInstance());  final  Set  newPrefixes  =  new  HashSet();  for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {  final  Option  option  =  (Option)  i.next();  option.setParent(this);      [BUGGY]  if(!i.hasNext())  {  [BUGGY]      i.remove();  newAnonymous.add(option);  }  else  {  final  Set  triggers  =  option.getTriggers();  for  (Iterator  j  =  triggers.iterator();  j.hasNext();)  {  newOptionMap.put(j.next(),  option);  }    [CLASS]  GroupImpl  [METHOD]  <init>  [RETURN_TYPE]  String,int,int,boolean)  List  options  String  name  String  description  final  int  minimum  final  int  maximum  final  boolean  required  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  required  SortedMap  newOptionMap  optionMap  Iterator  i  j  List  anonymous  newAnonymous  options  Option  option  String  description  name  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	96	96	1	replace	if(!i.hasNext())  {	  if(!(i.hasNext()))    {    	non-compiled	[CE]  illegal  start  of  expression	64	None	replace
230	[BUG]  [BUGGY]  if(!i.hasNext()  ||  option.getTriggers().contains(option))  {  [CE]  illegal  start  of  expression  [FE]                  OptionException      [CONTEXT]      final  SortedMap  newOptionMap  =  new  TreeMap(ReverseStringComparator.getInstance());  final  Set  newPrefixes  =  new  HashSet();  for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {  final  Option  option  =  (Option)  i.next();  option.setParent(this);      [BUGGY]  if(!i.hasNext()  ||  option.getTriggers().contains(option))  {  [BUGGY]      i.remove();  newAnonymous.add(option);  }  else  {  final  Set  triggers  =  option.getTriggers();  for  (Iterator  j  =  triggers.iterator();  j.hasNext();)  {  newOptionMap.put(j.next(),  option);  }    [CLASS]  GroupImpl  [METHOD]  <init>  [RETURN_TYPE]  String,int,int,boolean)  List  options  String  name  String  description  final  int  minimum  final  int  maximum  final  boolean  required  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  required  SortedMap  newOptionMap  optionMap  Iterator  i  j  List  anonymous  newAnonymous  options  Option  option  String  description  name  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	96	96	1	replace	if(!i.hasNext()  ||  option.getTriggers().contains(option))  {	  if(!(i.hasNext()))    {    	non-compiled	[CE]  illegal  start  of  expression	64	None	replace
231	[BUG]  [BUGGY]  if(!option.hasAnonymous()  &&  option.getTriggers().size()  >  maximum)  {  [CE]  illegal  start  of  expression  [FE]              OptionException      [CONTEXT]      final  SortedMap  newOptionMap  =  new  TreeMap(ReverseStringComparator.getInstance());  final  Set  newPrefixes  =  new  HashSet();  for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {  final  Option  option  =  (Option)  i.next();  option.setParent(this);      [BUGGY]  if(!option.hasAnonymous()  &&  option.getTriggers().size()  >  maximum)  {  [BUGGY]      i.remove();  newAnonymous.add(option);  }  else  {  final  Set  triggers  =  option.getTriggers();  for  (Iterator  j  =  triggers.iterator();  j.hasNext();)  {  newOptionMap.put(j.next(),  option);  }    [CLASS]  GroupImpl  [METHOD]  <init>  [RETURN_TYPE]  String,int,int,boolean)  List  options  String  name  String  description  final  int  minimum  final  int  maximum  final  boolean  required  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  required  SortedMap  newOptionMap  optionMap  Iterator  i  j  List  anonymous  newAnonymous  options  Option  option  String  description  name  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	96	96	1	replace	if(!option.hasAnonymous()  &&  option.getTriggers().size()  >  maximum)  {	  if(!option.hasAnonymous())    {    	non-compiled	[CE]  illegal  start  of  expression	5	None	replace
232	[BUG]  [BUGGY]  if(!option.hasAnonymous()  ||  option.hasTriggers())  {  [CE]  illegal  start  of  expression  [FE]                OptionException      [CONTEXT]      final  SortedMap  newOptionMap  =  new  TreeMap(ReverseStringComparator.getInstance());  final  Set  newPrefixes  =  new  HashSet();  for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {  final  Option  option  =  (Option)  i.next();  option.setParent(this);      [BUGGY]  if(!option.hasAnonymous()  ||  option.hasTriggers())  {  [BUGGY]      i.remove();  newAnonymous.add(option);  }  else  {  final  Set  triggers  =  option.getTriggers();  for  (Iterator  j  =  triggers.iterator();  j.hasNext();)  {  newOptionMap.put(j.next(),  option);  }    [CLASS]  GroupImpl  [METHOD]  <init>  [RETURN_TYPE]  String,int,int,boolean)  List  options  String  name  String  description  final  int  minimum  final  int  maximum  final  boolean  required  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  required  SortedMap  newOptionMap  optionMap  Iterator  i  j  List  anonymous  newAnonymous  options  Option  option  String  description  name  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	96	96	1	replace	if(!option.hasAnonymous()  ||  option.hasTriggers())  {	  if(!option.hasAnonymous())    {    	non-compiled	[CE]  illegal  start  of  expression	5	None	replace
233	[BUG]  [BUGGY]  Option  option  =  this.options.getOption(option);  [CE]  illegal  start  of  expression  [FE]            OptionException      [CONTEXT]      final  SortedMap  newOptionMap  =  new  TreeMap(ReverseStringComparator.getInstance());  final  Set  newPrefixes  =  new  HashSet();  for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {  final  Option  option  =  (Option)  i.next();  option.setParent(this);      [BUGGY]  Option  option  =  this.options.getOption(option);  [BUGGY]      if  (option  instanceof  Argument)  {  i.remove();  newAnonymous.add(option);  }  else  {  final  Set  triggers  =  option.getTriggers();  for  (Iterator  j  =  triggers.iterator();  j.hasNext();)  {  newOptionMap.put(j.next(),  option);  }    [CLASS]  GroupImpl  [METHOD]  <init>  [RETURN_TYPE]  String,int,int,boolean)  List  options  String  name  String  description  final  int  minimum  final  int  maximum  final  boolean  required  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  required  SortedMap  newOptionMap  optionMap  Iterator  i  j  List  anonymous  newAnonymous  options  Option  option  String  description  name  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	96	96	1	replace	Option  option  =  this.options.getOption(option);	  Option    option    =    option.getOption(this,    options);    	non-compiled	[CE]  illegal  start  of  expression	43	None	replace
234	[BUG]  [BUGGY]  Option  option  =(Option)i.getOption();  [CE]  illegal  start  of  expression  [FE]                    OptionException      [CONTEXT]      final  SortedMap  newOptionMap  =  new  TreeMap(ReverseStringComparator.getInstance());  final  Set  newPrefixes  =  new  HashSet();  for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {  final  Option  option  =  (Option)  i.next();  option.setParent(this);      [BUGGY]  Option  option  =(Option)i.getOption();  [BUGGY]      if  (option  instanceof  Argument)  {  i.remove();  newAnonymous.add(option);  }  else  {  final  Set  triggers  =  option.getTriggers();  for  (Iterator  j  =  triggers.iterator();  j.hasNext();)  {  newOptionMap.put(j.next(),  option);  }    [CLASS]  GroupImpl  [METHOD]  <init>  [RETURN_TYPE]  String,int,int,boolean)  List  options  String  name  String  description  final  int  minimum  final  int  maximum  final  boolean  required  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  required  SortedMap  newOptionMap  optionMap  Iterator  i  j  List  anonymous  newAnonymous  options  Option  option  String  description  name  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	96	96	1	replace	Option  option  =(Option)i.getOption();	  Option    option    =(Option)option.getOption();    	non-compiled	[CE]  illegal  start  of  expression	42	None	replace
235	[BUG]  [BUGGY]  Option  option  =  option.getOption(defaultName,  minimum,  newPrefixes);  [CE]  illegal  start  of  expression  [FE]              OptionException      [CONTEXT]      final  SortedMap  newOptionMap  =  new  TreeMap(ReverseStringComparator.getInstance());  final  Set  newPrefixes  =  new  HashSet();  for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {  final  Option  option  =  (Option)  i.next();  option.setParent(this);      [BUGGY]  Option  option  =  option.getOption(defaultName,  minimum,  newPrefixes);  [BUGGY]      if  (option  instanceof  Argument)  {  i.remove();  newAnonymous.add(option);  }  else  {  final  Set  triggers  =  option.getTriggers();  for  (Iterator  j  =  triggers.iterator();  j.hasNext();)  {  newOptionMap.put(j.next(),  option);  }    [CLASS]  GroupImpl  [METHOD]  <init>  [RETURN_TYPE]  String,int,int,boolean)  List  options  String  name  String  description  final  int  minimum  final  int  maximum  final  boolean  required  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  required  SortedMap  newOptionMap  optionMap  Iterator  i  j  List  anonymous  newAnonymous  options  Option  option  String  description  name  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	96	96	1	replace	Option  option  =  option.getOption(defaultName,  minimum,  newPrefixes);	  Option    option    =    option.getOption(defaultName,    minimum);    	non-compiled	[CE]  illegal  start  of  expression	1	None	replace
236	[BUG]  [BUGGY]  Option  option  =  option.getOption(this,  newPrefixes,  prefixes);  [CE]  illegal  start  of  expression  [FE]                OptionException      [CONTEXT]      final  SortedMap  newOptionMap  =  new  TreeMap(ReverseStringComparator.getInstance());  final  Set  newPrefixes  =  new  HashSet();  for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {  final  Option  option  =  (Option)  i.next();  option.setParent(this);      [BUGGY]  Option  option  =  option.getOption(this,  newPrefixes,  prefixes);  [BUGGY]      if  (option  instanceof  Argument)  {  i.remove();  newAnonymous.add(option);  }  else  {  final  Set  triggers  =  option.getTriggers();  for  (Iterator  j  =  triggers.iterator();  j.hasNext();)  {  newOptionMap.put(j.next(),  option);  }    [CLASS]  GroupImpl  [METHOD]  <init>  [RETURN_TYPE]  String,int,int,boolean)  List  options  String  name  String  description  final  int  minimum  final  int  maximum  final  boolean  required  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  required  SortedMap  newOptionMap  optionMap  Iterator  i  j  List  anonymous  newAnonymous  options  Option  option  String  description  name  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	96	96	1	replace	Option  option  =  option.getOption(this,  newPrefixes,  prefixes);	  Option    option    =    option.getOption(this,    newPrefixes);    	non-compiled	[CE]  illegal  start  of  expression	24	None	replace
237	[BUG]  [BUGGY]  if(i.hasNext()  ||  option.hasTriggers())  {  [CE]  illegal  start  of  expression  [FE]              OptionException      [CONTEXT]      final  SortedMap  newOptionMap  =  new  TreeMap(ReverseStringComparator.getInstance());  final  Set  newPrefixes  =  new  HashSet();  for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {  final  Option  option  =  (Option)  i.next();  option.setParent(this);      [BUGGY]  if(i.hasNext()  ||  option.hasTriggers())  {  [BUGGY]      i.remove();  newAnonymous.add(option);  }  else  {  final  Set  triggers  =  option.getTriggers();  for  (Iterator  j  =  triggers.iterator();  j.hasNext();)  {  newOptionMap.put(j.next(),  option);  }    [CLASS]  GroupImpl  [METHOD]  <init>  [RETURN_TYPE]  String,int,int,boolean)  List  options  String  name  String  description  final  int  minimum  final  int  maximum  final  boolean  required  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  required  SortedMap  newOptionMap  optionMap  Iterator  i  j  List  anonymous  newAnonymous  options  Option  option  String  description  name  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	96	96	1	replace	if(i.hasNext()  ||  option.hasTriggers())  {	  if(option.hasAnonymous()    ||    options.hasTriggers())    {    	non-compiled	[CE]  illegal  start  of  expression	46	None	replace
238	[BUG]  [BUGGY]  option  =  option.getOption(i);  [CE]  illegal  start  of  expression  [FE]                OptionException      [CONTEXT]      final  SortedMap  newOptionMap  =  new  TreeMap(ReverseStringComparator.getInstance());  final  Set  newPrefixes  =  new  HashSet();  for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {  final  Option  option  =  (Option)  i.next();  option.setParent(this);      [BUGGY]  option  =  option.getOption(i);  [BUGGY]      if  (option  instanceof  Argument)  {  i.remove();  newAnonymous.add(option);  }  else  {  final  Set  triggers  =  option.getTriggers();  for  (Iterator  j  =  triggers.iterator();  j.hasNext();)  {  newOptionMap.put(j.next(),  option);  }    [CLASS]  GroupImpl  [METHOD]  <init>  [RETURN_TYPE]  String,int,int,boolean)  List  options  String  name  String  description  final  int  minimum  final  int  maximum  final  boolean  required  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  required  SortedMap  newOptionMap  optionMap  Iterator  i  j  List  anonymous  newAnonymous  options  Option  option  String  description  name  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	96	96	1	replace	option  =  option.getOption(i);	  option    =    option.getOption();    	non-compiled	[CE]  illegal  start  of  expression	32	None	replace
239	[BUG]  [BUGGY]  if(i.hasNext()  ||  option.getTriggers().size()  ==  maximum)  {  [CE]  illegal  start  of  expression  [FE]            OptionException      [CONTEXT]      final  SortedMap  newOptionMap  =  new  TreeMap(ReverseStringComparator.getInstance());  final  Set  newPrefixes  =  new  HashSet();  for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {  final  Option  option  =  (Option)  i.next();  option.setParent(this);      [BUGGY]  if(i.hasNext()  ||  option.getTriggers().size()  ==  maximum)  {  [BUGGY]      i.remove();  newAnonymous.add(option);  }  else  {  final  Set  triggers  =  option.getTriggers();  for  (Iterator  j  =  triggers.iterator();  j.hasNext();)  {  newOptionMap.put(j.next(),  option);  }    [CLASS]  GroupImpl  [METHOD]  <init>  [RETURN_TYPE]  String,int,int,boolean)  List  options  String  name  String  description  final  int  minimum  final  int  maximum  final  boolean  required  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  required  SortedMap  newOptionMap  optionMap  Iterator  i  j  List  anonymous  newAnonymous  options  Option  option  String  description  name  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	96	96	1	replace	if(i.hasNext()  ||  option.getTriggers().size()  ==  maximum)  {	  if(i.hasNext())    {    	non-compiled	[CE]  illegal  start  of  expression	56	None	replace
240	[BUG]  [BUGGY]  if(!(i.hasNext())&&  options.contains(option.getName()))  {  [CE]  illegal  start  of  expression  [FE]                      OptionException      [CONTEXT]      final  SortedMap  newOptionMap  =  new  TreeMap(ReverseStringComparator.getInstance());  final  Set  newPrefixes  =  new  HashSet();  for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {  final  Option  option  =  (Option)  i.next();  option.setParent(this);      [BUGGY]  if(!(i.hasNext())&&  options.contains(option.getName()))  {  [BUGGY]      i.remove();  newAnonymous.add(option);  }  else  {  final  Set  triggers  =  option.getTriggers();  for  (Iterator  j  =  triggers.iterator();  j.hasNext();)  {  newOptionMap.put(j.next(),  option);  }    [CLASS]  GroupImpl  [METHOD]  <init>  [RETURN_TYPE]  String,int,int,boolean)  List  options  String  name  String  description  final  int  minimum  final  int  maximum  final  boolean  required  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  required  SortedMap  newOptionMap  optionMap  Iterator  i  j  List  anonymous  newAnonymous  options  Option  option  String  description  name  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	96	96	1	replace	if(!(i.hasNext())&&  options.contains(option.getName()))  {	  if(!(option    instanceof    Option)&&    options.contains(option.getName()))    {    	non-compiled	[CE]  illegal  start  of  expression	17	None	replace
241	[BUG]  [BUGGY]  Option  option  =(Option)i.getKey();  [CE]  illegal  start  of  expression  [FE]                    OptionException      [CONTEXT]      final  SortedMap  newOptionMap  =  new  TreeMap(ReverseStringComparator.getInstance());  final  Set  newPrefixes  =  new  HashSet();  for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {  final  Option  option  =  (Option)  i.next();  option.setParent(this);      [BUGGY]  Option  option  =(Option)i.getKey();  [BUGGY]      if  (option  instanceof  Argument)  {  i.remove();  newAnonymous.add(option);  }  else  {  final  Set  triggers  =  option.getTriggers();  for  (Iterator  j  =  triggers.iterator();  j.hasNext();)  {  newOptionMap.put(j.next(),  option);  }    [CLASS]  GroupImpl  [METHOD]  <init>  [RETURN_TYPE]  String,int,int,boolean)  List  options  String  name  String  description  final  int  minimum  final  int  maximum  final  boolean  required  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  required  SortedMap  newOptionMap  optionMap  Iterator  i  j  List  anonymous  newAnonymous  options  Option  option  String  description  name  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	96	96	1	replace	Option  option  =(Option)i.getKey();	  Option    option    =(Option)i.getValue();    	non-compiled	[CE]  illegal  start  of  expression	58	None	replace
242	[BUG]  [BUGGY]  Option  option  =  option.getOption(defaultName,  description,  required);  [CE]  illegal  start  of  expression  [FE]              OptionException      [CONTEXT]      final  SortedMap  newOptionMap  =  new  TreeMap(ReverseStringComparator.getInstance());  final  Set  newPrefixes  =  new  HashSet();  for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {  final  Option  option  =  (Option)  i.next();  option.setParent(this);      [BUGGY]  Option  option  =  option.getOption(defaultName,  description,  required);  [BUGGY]      if  (option  instanceof  Argument)  {  i.remove();  newAnonymous.add(option);  }  else  {  final  Set  triggers  =  option.getTriggers();  for  (Iterator  j  =  triggers.iterator();  j.hasNext();)  {  newOptionMap.put(j.next(),  option);  }    [CLASS]  GroupImpl  [METHOD]  <init>  [RETURN_TYPE]  String,int,int,boolean)  List  options  String  name  String  description  final  int  minimum  final  int  maximum  final  boolean  required  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  required  SortedMap  newOptionMap  optionMap  Iterator  i  j  List  anonymous  newAnonymous  options  Option  option  String  description  name  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	96	96	1	replace	Option  option  =  option.getOption(defaultName,  description,  required);	  Option    option    =    option.getOption(defaultName,    description);    	non-compiled	[CE]  illegal  start  of  expression	68	None	replace
243	[BUG]  [BUGGY]  if(i.hasNext()  ||!option.hasNext())  {  [CE]  illegal  start  of  expression  [FE]                  OptionException      [CONTEXT]      final  SortedMap  newOptionMap  =  new  TreeMap(ReverseStringComparator.getInstance());  final  Set  newPrefixes  =  new  HashSet();  for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {  final  Option  option  =  (Option)  i.next();  option.setParent(this);      [BUGGY]  if(i.hasNext()  ||!option.hasNext())  {  [BUGGY]      i.remove();  newAnonymous.add(option);  }  else  {  final  Set  triggers  =  option.getTriggers();  for  (Iterator  j  =  triggers.iterator();  j.hasNext();)  {  newOptionMap.put(j.next(),  option);  }    [CLASS]  GroupImpl  [METHOD]  <init>  [RETURN_TYPE]  String,int,int,boolean)  List  options  String  name  String  description  final  int  minimum  final  int  maximum  final  boolean  required  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  required  SortedMap  newOptionMap  optionMap  Iterator  i  j  List  anonymous  newAnonymous  options  Option  option  String  description  name  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	96	96	1	replace	if(i.hasNext()  ||!option.hasNext())  {	  if(option.hasNext()    ||!option.hasNext())    {    	non-compiled	[CE]  illegal  start  of  expression	40	None	replace
244	[BUG]  [BUGGY]  Option  option  =  option.getOption(name,  description  +  1);  [CE]  illegal  start  of  expression  [FE]              OptionException      [CONTEXT]      final  SortedMap  newOptionMap  =  new  TreeMap(ReverseStringComparator.getInstance());  final  Set  newPrefixes  =  new  HashSet();  for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {  final  Option  option  =  (Option)  i.next();  option.setParent(this);      [BUGGY]  Option  option  =  option.getOption(name,  description  +  1);  [BUGGY]      if  (option  instanceof  Argument)  {  i.remove();  newAnonymous.add(option);  }  else  {  final  Set  triggers  =  option.getTriggers();  for  (Iterator  j  =  triggers.iterator();  j.hasNext();)  {  newOptionMap.put(j.next(),  option);  }    [CLASS]  GroupImpl  [METHOD]  <init>  [RETURN_TYPE]  String,int,int,boolean)  List  options  String  name  String  description  final  int  minimum  final  int  maximum  final  boolean  required  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  required  SortedMap  newOptionMap  optionMap  Iterator  i  j  List  anonymous  newAnonymous  options  Option  option  String  description  name  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	96	96	1	replace	Option  option  =  option.getOption(name,  description  +  1);	  Option    option    =    option.getOption(name,    description);    	non-compiled	[CE]  illegal  start  of  expression	63	None	replace
245	[BUG]  [BUGGY]  Option  option  =  options.getOptionMap();  [CE]  illegal  start  of  expression  [FE]              OptionException      [CONTEXT]      final  SortedMap  newOptionMap  =  new  TreeMap(ReverseStringComparator.getInstance());  final  Set  newPrefixes  =  new  HashSet();  for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {  final  Option  option  =  (Option)  i.next();  option.setParent(this);      [BUGGY]  Option  option  =  options.getOptionMap();  [BUGGY]      if  (option  instanceof  Argument)  {  i.remove();  newAnonymous.add(option);  }  else  {  final  Set  triggers  =  option.getTriggers();  for  (Iterator  j  =  triggers.iterator();  j.hasNext();)  {  newOptionMap.put(j.next(),  option);  }    [CLASS]  GroupImpl  [METHOD]  <init>  [RETURN_TYPE]  String,int,int,boolean)  List  options  String  name  String  description  final  int  minimum  final  int  maximum  final  boolean  required  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  required  SortedMap  newOptionMap  optionMap  Iterator  i  j  List  anonymous  newAnonymous  options  Option  option  String  description  name  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	96	96	1	replace	Option  option  =  options.getOptionMap();	  Option    option    =    options.getOption();    	non-compiled	[CE]  illegal  start  of  expression	31	None	replace
246	[BUG]  [BUGGY]  Option  option  =  this.options.getOption(this,  minimum);  [CE]  illegal  start  of  expression  [FE]            OptionException      [CONTEXT]      final  SortedMap  newOptionMap  =  new  TreeMap(ReverseStringComparator.getInstance());  final  Set  newPrefixes  =  new  HashSet();  for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {  final  Option  option  =  (Option)  i.next();  option.setParent(this);      [BUGGY]  Option  option  =  this.options.getOption(this,  minimum);  [BUGGY]      if  (option  instanceof  Argument)  {  i.remove();  newAnonymous.add(option);  }  else  {  final  Set  triggers  =  option.getTriggers();  for  (Iterator  j  =  triggers.iterator();  j.hasNext();)  {  newOptionMap.put(j.next(),  option);  }    [CLASS]  GroupImpl  [METHOD]  <init>  [RETURN_TYPE]  String,int,int,boolean)  List  options  String  name  String  description  final  int  minimum  final  int  maximum  final  boolean  required  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  required  SortedMap  newOptionMap  optionMap  Iterator  i  j  List  anonymous  newAnonymous  options  Option  option  String  description  name  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	96	96	1	replace	Option  option  =  this.options.getOption(this,  minimum);	  Option    option    =    option.getOption(this,    minimum);    	non-compiled	[CE]  illegal  start  of  expression	22	None	replace
247	[BUG]  [BUGGY]  if(!option.getDescription().equals(name)&&  option.getDescription()  ==  null)  {  [CE]  illegal  start  of  expression  [FE]            OptionException      [CONTEXT]      final  SortedMap  newOptionMap  =  new  TreeMap(ReverseStringComparator.getInstance());  final  Set  newPrefixes  =  new  HashSet();  for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {  final  Option  option  =  (Option)  i.next();  option.setParent(this);      [BUGGY]  if(!option.getDescription().equals(name)&&  option.getDescription()  ==  null)  {  [BUGGY]      i.remove();  newAnonymous.add(option);  }  else  {  final  Set  triggers  =  option.getTriggers();  for  (Iterator  j  =  triggers.iterator();  j.hasNext();)  {  newOptionMap.put(j.next(),  option);  }    [CLASS]  GroupImpl  [METHOD]  <init>  [RETURN_TYPE]  String,int,int,boolean)  List  options  String  name  String  description  final  int  minimum  final  int  maximum  final  boolean  required  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  required  SortedMap  newOptionMap  optionMap  Iterator  i  j  List  anonymous  newAnonymous  options  Option  option  String  description  name  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	96	96	1	replace	if(!option.getDescription().equals(name)&&  option.getDescription()  ==  null)  {	  if(option.getDescription()    ==    null)    {    	non-compiled	[CE]  illegal  start  of  expression	55	None	replace
248	[BUG]  [BUGGY]  if(option  instanceof  Option  &&  options.getOptions().contains(option.getAnonymousValue()))  {  [CE]  illegal  start  of  expression  [FE]              OptionException      [CONTEXT]      final  SortedMap  newOptionMap  =  new  TreeMap(ReverseStringComparator.getInstance());  final  Set  newPrefixes  =  new  HashSet();  for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {  final  Option  option  =  (Option)  i.next();  option.setParent(this);      [BUGGY]  if(option  instanceof  Option  &&  options.getOptions().contains(option.getAnonymousValue()))  {  [BUGGY]      i.remove();  newAnonymous.add(option);  }  else  {  final  Set  triggers  =  option.getTriggers();  for  (Iterator  j  =  triggers.iterator();  j.hasNext();)  {  newOptionMap.put(j.next(),  option);  }    [CLASS]  GroupImpl  [METHOD]  <init>  [RETURN_TYPE]  String,int,int,boolean)  List  options  String  name  String  description  final  int  minimum  final  int  maximum  final  boolean  required  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  required  SortedMap  newOptionMap  optionMap  Iterator  i  j  List  anonymous  newAnonymous  options  Option  option  String  description  name  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	96	96	1	replace	if(option  instanceof  Option  &&  options.getOptions().contains(option.getAnonymousValue()))  {	  if(option    instanceof    Option    &&    options.getOptions().contains(option))    {    	non-compiled	[CE]  illegal  start  of  expression	54	None	replace
249	[BUG]  [BUGGY]  if(option.hasAnonymous()  ||  option.hasNext())  {  [CE]  illegal  start  of  expression  [FE]                  OptionException      [CONTEXT]      final  SortedMap  newOptionMap  =  new  TreeMap(ReverseStringComparator.getInstance());  final  Set  newPrefixes  =  new  HashSet();  for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {  final  Option  option  =  (Option)  i.next();  option.setParent(this);      [BUGGY]  if(option.hasAnonymous()  ||  option.hasNext())  {  [BUGGY]      i.remove();  newAnonymous.add(option);  }  else  {  final  Set  triggers  =  option.getTriggers();  for  (Iterator  j  =  triggers.iterator();  j.hasNext();)  {  newOptionMap.put(j.next(),  option);  }    [CLASS]  GroupImpl  [METHOD]  <init>  [RETURN_TYPE]  String,int,int,boolean)  List  options  String  name  String  description  final  int  minimum  final  int  maximum  final  boolean  required  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  required  SortedMap  newOptionMap  optionMap  Iterator  i  j  List  anonymous  newAnonymous  options  Option  option  String  description  name  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	96	96	1	replace	if(option.hasAnonymous()  ||  option.hasNext())  {	  if(option.hasAnonymous()    ||    option.hasTriggers())    {    	non-compiled	[CE]  illegal  start  of  expression	7	None	replace
250	[BUG]  [BUGGY]  if(!i.hasNext()  &&  option  instanceof  Option)  {  [CE]  illegal  start  of  expression  [FE]                OptionException      [CONTEXT]      final  SortedMap  newOptionMap  =  new  TreeMap(ReverseStringComparator.getInstance());  final  Set  newPrefixes  =  new  HashSet();  for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {  final  Option  option  =  (Option)  i.next();  option.setParent(this);      [BUGGY]  if(!i.hasNext()  &&  option  instanceof  Option)  {  [BUGGY]      i.remove();  newAnonymous.add(option);  }  else  {  final  Set  triggers  =  option.getTriggers();  for  (Iterator  j  =  triggers.iterator();  j.hasNext();)  {  newOptionMap.put(j.next(),  option);  }    [CLASS]  GroupImpl  [METHOD]  <init>  [RETURN_TYPE]  String,int,int,boolean)  List  options  String  name  String  description  final  int  minimum  final  int  maximum  final  boolean  required  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  required  SortedMap  newOptionMap  optionMap  Iterator  i  j  List  anonymous  newAnonymous  options  Option  option  String  description  name  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	96	96	1	replace	if(!i.hasNext()  &&  option  instanceof  Option)  {	  if(!(i.hasNext()    &&    option    instanceof    Option))    {    	non-compiled	[CE]  illegal  start  of  expression	26	None	replace
251	[BUG]  [BUGGY]  if(option.getName()!=  null  &&  options.getDescription().equals(option.getDescription()))  {  [CE]  illegal  start  of  expression  [FE]                OptionException      [CONTEXT]      final  SortedMap  newOptionMap  =  new  TreeMap(ReverseStringComparator.getInstance());  final  Set  newPrefixes  =  new  HashSet();  for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {  final  Option  option  =  (Option)  i.next();  option.setParent(this);      [BUGGY]  if(option.getName()!=  null  &&  options.getDescription().equals(option.getDescription()))  {  [BUGGY]      i.remove();  newAnonymous.add(option);  }  else  {  final  Set  triggers  =  option.getTriggers();  for  (Iterator  j  =  triggers.iterator();  j.hasNext();)  {  newOptionMap.put(j.next(),  option);  }    [CLASS]  GroupImpl  [METHOD]  <init>  [RETURN_TYPE]  String,int,int,boolean)  List  options  String  name  String  description  final  int  minimum  final  int  maximum  final  boolean  required  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  required  SortedMap  newOptionMap  optionMap  Iterator  i  j  List  anonymous  newAnonymous  options  Option  option  String  description  name  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	96	96	1	replace	if(option.getName()!=  null  &&  options.getDescription().equals(option.getDescription()))  {	  if(option.getDescription()!=    null    ||    options.getDescription().equals(option.getDescription()))    {    	non-compiled	[CE]  illegal  start  of  expression	35	None	replace
252	[BUG]  [BUGGY]  final  Option  option  =  option.getOption(name,  required);  [CE]  illegal  start  of  expression  [FE]                    OptionException      [CONTEXT]      final  SortedMap  newOptionMap  =  new  TreeMap(ReverseStringComparator.getInstance());  final  Set  newPrefixes  =  new  HashSet();  for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {  final  Option  option  =  (Option)  i.next();  option.setParent(this);      [BUGGY]  final  Option  option  =  option.getOption(name,  required);  [BUGGY]      if  (option  instanceof  Argument)  {  i.remove();  newAnonymous.add(option);  }  else  {  final  Set  triggers  =  option.getTriggers();  for  (Iterator  j  =  triggers.iterator();  j.hasNext();)  {  newOptionMap.put(j.next(),  option);  }    [CLASS]  GroupImpl  [METHOD]  <init>  [RETURN_TYPE]  String,int,int,boolean)  List  options  String  name  String  description  final  int  minimum  final  int  maximum  final  boolean  required  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  required  SortedMap  newOptionMap  optionMap  Iterator  i  j  List  anonymous  newAnonymous  options  Option  option  String  description  name  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	96	96	1	replace	final  Option  option  =  option.getOption(name,  required);	  final    Option    option    =    option.getOption(name);    	non-compiled	[CE]  illegal  start  of  expression	11	None	replace
253	[BUG]  [BUGGY]  final  Option  option  =  option.getOption(defaultName,  description);  [CE]  illegal  start  of  expression  [FE]                  OptionException      [CONTEXT]      final  SortedMap  newOptionMap  =  new  TreeMap(ReverseStringComparator.getInstance());  final  Set  newPrefixes  =  new  HashSet();  for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {  final  Option  option  =  (Option)  i.next();  option.setParent(this);      [BUGGY]  final  Option  option  =  option.getOption(defaultName,  description);  [BUGGY]      if  (option  instanceof  Argument)  {  i.remove();  newAnonymous.add(option);  }  else  {  final  Set  triggers  =  option.getTriggers();  for  (Iterator  j  =  triggers.iterator();  j.hasNext();)  {  newOptionMap.put(j.next(),  option);  }    [CLASS]  GroupImpl  [METHOD]  <init>  [RETURN_TYPE]  String,int,int,boolean)  List  options  String  name  String  description  final  int  minimum  final  int  maximum  final  boolean  required  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  required  SortedMap  newOptionMap  optionMap  Iterator  i  j  List  anonymous  newAnonymous  options  Option  option  String  description  name  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	96	96	1	replace	final  Option  option  =  option.getOption(defaultName,  description);	  final    Option    option    =    option.getOption(defaultName);    	non-compiled	[CE]  illegal  start  of  expression	61	None	replace
254	[BUG]  [BUGGY]  if(i.hasNext()  &&  option.hasAnonymous()  &&  newAnonymous.contains(option.getTriggers()))  {  [CE]  illegal  start  of  expression  [FE]                    OptionException      [CONTEXT]      final  SortedMap  newOptionMap  =  new  TreeMap(ReverseStringComparator.getInstance());  final  Set  newPrefixes  =  new  HashSet();  for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {  final  Option  option  =  (Option)  i.next();  option.setParent(this);      [BUGGY]  if(i.hasNext()  &&  option.hasAnonymous()  &&  newAnonymous.contains(option.getTriggers()))  {  [BUGGY]      i.remove();  newAnonymous.add(option);  }  else  {  final  Set  triggers  =  option.getTriggers();  for  (Iterator  j  =  triggers.iterator();  j.hasNext();)  {  newOptionMap.put(j.next(),  option);  }    [CLASS]  GroupImpl  [METHOD]  <init>  [RETURN_TYPE]  String,int,int,boolean)  List  options  String  name  String  description  final  int  minimum  final  int  maximum  final  boolean  required  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  required  SortedMap  newOptionMap  optionMap  Iterator  i  j  List  anonymous  newAnonymous  options  Option  option  String  description  name  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	96	96	1	replace	if(i.hasNext()  &&  option.hasAnonymous()  &&  newAnonymous.contains(option.getTriggers()))  {	  if(option.hasAnonymous()    &&    newAnonymous.contains(option.getTriggers()))    {    	non-compiled	[CE]  illegal  start  of  expression	8	None	replace
255	[BUG]  [BUGGY]  if(i.hasNext()  ||  option.hasTriggers()  ||  newAnonymous.contains(option.getTriggers()))  {  [CE]  illegal  start  of  expression  [FE]                      OptionException      [CONTEXT]      final  SortedMap  newOptionMap  =  new  TreeMap(ReverseStringComparator.getInstance());  final  Set  newPrefixes  =  new  HashSet();  for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {  final  Option  option  =  (Option)  i.next();  option.setParent(this);      [BUGGY]  if(i.hasNext()  ||  option.hasTriggers()  ||  newAnonymous.contains(option.getTriggers()))  {  [BUGGY]      i.remove();  newAnonymous.add(option);  }  else  {  final  Set  triggers  =  option.getTriggers();  for  (Iterator  j  =  triggers.iterator();  j.hasNext();)  {  newOptionMap.put(j.next(),  option);  }    [CLASS]  GroupImpl  [METHOD]  <init>  [RETURN_TYPE]  String,int,int,boolean)  List  options  String  name  String  description  final  int  minimum  final  int  maximum  final  boolean  required  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  required  SortedMap  newOptionMap  optionMap  Iterator  i  j  List  anonymous  newAnonymous  options  Option  option  String  description  name  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	96	96	1	replace	if(i.hasNext()  ||  option.hasTriggers()  ||  newAnonymous.contains(option.getTriggers()))  {	  if(option.hasAnonymous()    &&    newAnonymous.contains(option.getTriggers()))    {    	non-compiled	[CE]  illegal  start  of  expression	8	None	replace
256	[BUG]  [BUGGY]  Option  option  =  options.getOption(option)+  i;  [CE]  illegal  start  of  expression  [FE]              OptionException      [CONTEXT]      final  SortedMap  newOptionMap  =  new  TreeMap(ReverseStringComparator.getInstance());  final  Set  newPrefixes  =  new  HashSet();  for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {  final  Option  option  =  (Option)  i.next();  option.setParent(this);      [BUGGY]  Option  option  =  options.getOption(option)+  i;  [BUGGY]      if  (option  instanceof  Argument)  {  i.remove();  newAnonymous.add(option);  }  else  {  final  Set  triggers  =  option.getTriggers();  for  (Iterator  j  =  triggers.iterator();  j.hasNext();)  {  newOptionMap.put(j.next(),  option);  }    [CLASS]  GroupImpl  [METHOD]  <init>  [RETURN_TYPE]  String,int,int,boolean)  List  options  String  name  String  description  final  int  minimum  final  int  maximum  final  boolean  required  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  required  SortedMap  newOptionMap  optionMap  Iterator  i  j  List  anonymous  newAnonymous  options  Option  option  String  description  name  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	96	96	1	replace	Option  option  =  options.getOption(option)+  i;	  Option    option    =    options.getOption(option)+    1;    	non-compiled	[CE]  illegal  start  of  expression	48	None	replace
257	[BUG]  [BUGGY]  Option  option  =  options.getOption(option)-  1;  [CE]  illegal  start  of  expression  [FE]                OptionException      [CONTEXT]      final  SortedMap  newOptionMap  =  new  TreeMap(ReverseStringComparator.getInstance());  final  Set  newPrefixes  =  new  HashSet();  for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {  final  Option  option  =  (Option)  i.next();  option.setParent(this);      [BUGGY]  Option  option  =  options.getOption(option)-  1;  [BUGGY]      if  (option  instanceof  Argument)  {  i.remove();  newAnonymous.add(option);  }  else  {  final  Set  triggers  =  option.getTriggers();  for  (Iterator  j  =  triggers.iterator();  j.hasNext();)  {  newOptionMap.put(j.next(),  option);  }    [CLASS]  GroupImpl  [METHOD]  <init>  [RETURN_TYPE]  String,int,int,boolean)  List  options  String  name  String  description  final  int  minimum  final  int  maximum  final  boolean  required  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  required  SortedMap  newOptionMap  optionMap  Iterator  i  j  List  anonymous  newAnonymous  options  Option  option  String  description  name  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	96	96	1	replace	Option  option  =  options.getOption(option)-  1;	  Option    option    =    options.getOption(option)+    1;    	non-compiled	[CE]  illegal  start  of  expression	48	None	replace
258	[BUG]  [BUGGY]  if(!(i.hasNext())&&  options.contains(option.getAnonymous()))  {  [CE]  illegal  start  of  expression  [FE]                OptionException      [CONTEXT]      final  SortedMap  newOptionMap  =  new  TreeMap(ReverseStringComparator.getInstance());  final  Set  newPrefixes  =  new  HashSet();  for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {  final  Option  option  =  (Option)  i.next();  option.setParent(this);      [BUGGY]  if(!(i.hasNext())&&  options.contains(option.getAnonymous()))  {  [BUGGY]      i.remove();  newAnonymous.add(option);  }  else  {  final  Set  triggers  =  option.getTriggers();  for  (Iterator  j  =  triggers.iterator();  j.hasNext();)  {  newOptionMap.put(j.next(),  option);  }    [CLASS]  GroupImpl  [METHOD]  <init>  [RETURN_TYPE]  String,int,int,boolean)  List  options  String  name  String  description  final  int  minimum  final  int  maximum  final  boolean  required  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  required  SortedMap  newOptionMap  optionMap  Iterator  i  j  List  anonymous  newAnonymous  options  Option  option  String  description  name  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	96	96	1	replace	if(!(i.hasNext())&&  options.contains(option.getAnonymous()))  {	  if(!(option    instanceof    Option)&&    options.contains(option.getAnonymous()))    {    	non-compiled	[CE]  illegal  start  of  expression	47	None	replace
259	[BUG]  [BUGGY]  if(!(option  instanceof  Alternative)&&  i.hasNext())  {  [CE]  illegal  start  of  expression  [FE]            OptionException      [CONTEXT]      final  SortedMap  newOptionMap  =  new  TreeMap(ReverseStringComparator.getInstance());  final  Set  newPrefixes  =  new  HashSet();  for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {  final  Option  option  =  (Option)  i.next();  option.setParent(this);      [BUGGY]  if(!(option  instanceof  Alternative)&&  i.hasNext())  {  [BUGGY]      i.remove();  newAnonymous.add(option);  }  else  {  final  Set  triggers  =  option.getTriggers();  for  (Iterator  j  =  triggers.iterator();  j.hasNext();)  {  newOptionMap.put(j.next(),  option);  }    [CLASS]  GroupImpl  [METHOD]  <init>  [RETURN_TYPE]  String,int,int,boolean)  List  options  String  name  String  description  final  int  minimum  final  int  maximum  final  boolean  required  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  required  SortedMap  newOptionMap  optionMap  Iterator  i  j  List  anonymous  newAnonymous  options  Option  option  String  description  name  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	96	96	1	replace	if(!(option  instanceof  Alternative)&&  i.hasNext())  {	  if(!(option    instanceof    Alternative))    {    	non-compiled	[CE]  illegal  start  of  expression	30	None	replace
260	[BUG]  [BUGGY]  if(!(option  instanceof  Alternative)&&!(i.hasNext()))  {  [CE]  illegal  start  of  expression  [FE]              OptionException      [CONTEXT]      final  SortedMap  newOptionMap  =  new  TreeMap(ReverseStringComparator.getInstance());  final  Set  newPrefixes  =  new  HashSet();  for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {  final  Option  option  =  (Option)  i.next();  option.setParent(this);      [BUGGY]  if(!(option  instanceof  Alternative)&&!(i.hasNext()))  {  [BUGGY]      i.remove();  newAnonymous.add(option);  }  else  {  final  Set  triggers  =  option.getTriggers();  for  (Iterator  j  =  triggers.iterator();  j.hasNext();)  {  newOptionMap.put(j.next(),  option);  }    [CLASS]  GroupImpl  [METHOD]  <init>  [RETURN_TYPE]  String,int,int,boolean)  List  options  String  name  String  description  final  int  minimum  final  int  maximum  final  boolean  required  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  required  SortedMap  newOptionMap  optionMap  Iterator  i  j  List  anonymous  newAnonymous  options  Option  option  String  description  name  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	96	96	1	replace	if(!(option  instanceof  Alternative)&&!(i.hasNext()))  {	  if(!(option    instanceof    Alternative))    {    	non-compiled	[CE]  illegal  start  of  expression	30	None	replace
261	[BUG]  [BUGGY]  if(!(option  instanceof  Action))  {  [CE]  illegal  start  of  expression  [FE]                  OptionException      [CONTEXT]      final  SortedMap  newOptionMap  =  new  TreeMap(ReverseStringComparator.getInstance());  final  Set  newPrefixes  =  new  HashSet();  for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {  final  Option  option  =  (Option)  i.next();  option.setParent(this);      [BUGGY]  if(!(option  instanceof  Action))  {  [BUGGY]      i.remove();  newAnonymous.add(option);  }  else  {  final  Set  triggers  =  option.getTriggers();  for  (Iterator  j  =  triggers.iterator();  j.hasNext();)  {  newOptionMap.put(j.next(),  option);  }    [CLASS]  GroupImpl  [METHOD]  <init>  [RETURN_TYPE]  String,int,int,boolean)  List  options  String  name  String  description  final  int  minimum  final  int  maximum  final  boolean  required  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  required  SortedMap  newOptionMap  optionMap  Iterator  i  j  List  anonymous  newAnonymous  options  Option  option  String  description  name  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	96	96	1	replace	if(!(option  instanceof  Action))  {	  if(!(option    instanceof    Anonymous))    {    	non-compiled	[CE]  illegal  start  of  expression	15	None	replace
262	[BUG]  [BUGGY]  Option  option  =(Option)i.getAnonymousValue();  [CE]  illegal  start  of  expression  [FE]                      OptionException      [CONTEXT]      final  SortedMap  newOptionMap  =  new  TreeMap(ReverseStringComparator.getInstance());  final  Set  newPrefixes  =  new  HashSet();  for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {  final  Option  option  =  (Option)  i.next();  option.setParent(this);      [BUGGY]  Option  option  =(Option)i.getAnonymousValue();  [BUGGY]      if  (option  instanceof  Argument)  {  i.remove();  newAnonymous.add(option);  }  else  {  final  Set  triggers  =  option.getTriggers();  for  (Iterator  j  =  triggers.iterator();  j.hasNext();)  {  newOptionMap.put(j.next(),  option);  }    [CLASS]  GroupImpl  [METHOD]  <init>  [RETURN_TYPE]  String,int,int,boolean)  List  options  String  name  String  description  final  int  minimum  final  int  maximum  final  boolean  required  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  required  SortedMap  newOptionMap  optionMap  Iterator  i  j  List  anonymous  newAnonymous  options  Option  option  String  description  name  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	96	96	1	replace	Option  option  =(Option)i.getAnonymousValue();	  Option    option    =(Option)option.getAnonymousValue();    	non-compiled	[CE]  illegal  start  of  expression	4	None	replace
263	[BUG]  [BUGGY]  Option  option  =  option.getOption(i.next());  [CE]  illegal  start  of  expression  [FE]              OptionException      [CONTEXT]      final  SortedMap  newOptionMap  =  new  TreeMap(ReverseStringComparator.getInstance());  final  Set  newPrefixes  =  new  HashSet();  for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {  final  Option  option  =  (Option)  i.next();  option.setParent(this);      [BUGGY]  Option  option  =  option.getOption(i.next());  [BUGGY]      if  (option  instanceof  Argument)  {  i.remove();  newAnonymous.add(option);  }  else  {  final  Set  triggers  =  option.getTriggers();  for  (Iterator  j  =  triggers.iterator();  j.hasNext();)  {  newOptionMap.put(j.next(),  option);  }    [CLASS]  GroupImpl  [METHOD]  <init>  [RETURN_TYPE]  String,int,int,boolean)  List  options  String  name  String  description  final  int  minimum  final  int  maximum  final  boolean  required  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  required  SortedMap  newOptionMap  optionMap  Iterator  i  j  List  anonymous  newAnonymous  options  Option  option  String  description  name  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	96	96	1	replace	Option  option  =  option.getOption(i.next());	  Option    option    =    option.getOption(i);    	non-compiled	[CE]  illegal  start  of  expression	70	None	replace
264	[BUG]  [BUGGY]  Option  option  =  option.getOption(i,  description);  [CE]  illegal  start  of  expression  [FE]                OptionException      [CONTEXT]      final  SortedMap  newOptionMap  =  new  TreeMap(ReverseStringComparator.getInstance());  final  Set  newPrefixes  =  new  HashSet();  for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {  final  Option  option  =  (Option)  i.next();  option.setParent(this);      [BUGGY]  Option  option  =  option.getOption(i,  description);  [BUGGY]      if  (option  instanceof  Argument)  {  i.remove();  newAnonymous.add(option);  }  else  {  final  Set  triggers  =  option.getTriggers();  for  (Iterator  j  =  triggers.iterator();  j.hasNext();)  {  newOptionMap.put(j.next(),  option);  }    [CLASS]  GroupImpl  [METHOD]  <init>  [RETURN_TYPE]  String,int,int,boolean)  List  options  String  name  String  description  final  int  minimum  final  int  maximum  final  boolean  required  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  required  SortedMap  newOptionMap  optionMap  Iterator  i  j  List  anonymous  newAnonymous  options  Option  option  String  description  name  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	96	96	1	replace	Option  option  =  option.getOption(i,  description);	  Option    option    =    option.getOption(i);    	non-compiled	[CE]  illegal  start  of  expression	70	None	replace
