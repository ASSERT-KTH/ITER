bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  Option  option  =  optionMap.getOption(j);  [CE]  illegal  start  of  expression  [FE]                OptionException      [CONTEXT]      if  (option  instanceof  Argument)  {  i.remove();  newAnonymous.add(option);  }  else  {  final  Set  triggers  =  option.getTriggers();  for  (Iterator  j  =  triggers.iterator();  j.hasNext();)  {      [BUGGY]  Option  option  =  optionMap.getOption(j);  [BUGGY]      newOptionMap.put(j.next(),  option);  }  newPrefixes.addAll(option.getPrefixes());  }  [CLASS]  GroupImpl  [METHOD]  <init>  [RETURN_TYPE]  String,int,int,boolean)  List  options  String  name  String  description  final  int  minimum  final  int  maximum  final  boolean  required  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  required  SortedMap  newOptionMap  optionMap  Iterator  i  j  List  anonymous  newAnonymous  options  Option  option  String  description  name  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	103	103	1	replace	Option  option  =  optionMap.getOption(j);	  Option    option    =    optionMap.getOption(i);    	non-compiled	[CE]  illegal  start  of  expression	36	None	replace
2	[BUG]  [BUGGY]  Option  option  =  optionMap.getOption(i,  j);  [CE]  illegal  start  of  expression  [FE]                  OptionException      [CONTEXT]      if  (option  instanceof  Argument)  {  i.remove();  newAnonymous.add(option);  }  else  {  final  Set  triggers  =  option.getTriggers();  for  (Iterator  j  =  triggers.iterator();  j.hasNext();)  {      [BUGGY]  Option  option  =  optionMap.getOption(i,  j);  [BUGGY]      newOptionMap.put(j.next(),  option);  }  newPrefixes.addAll(option.getPrefixes());  }  [CLASS]  GroupImpl  [METHOD]  <init>  [RETURN_TYPE]  String,int,int,boolean)  List  options  String  name  String  description  final  int  minimum  final  int  maximum  final  boolean  required  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  required  SortedMap  newOptionMap  optionMap  Iterator  i  j  List  anonymous  newAnonymous  options  Option  option  String  description  name  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	103	103	1	replace	Option  option  =  optionMap.getOption(i,  j);	  Option    option    =    optionMap.getOption(i);    	non-compiled	[CE]  illegal  start  of  expression	36	None	replace
3	[BUG]  [BUGGY]  Option  option  =(Option)j.next();  newAnonymous.addAll(option.getPrefixes(),  options,  required);  [CE]  illegal  start  of  expression  [FE]              OptionException      [CONTEXT]      if  (option  instanceof  Argument)  {  i.remove();  newAnonymous.add(option);  }  else  {  final  Set  triggers  =  option.getTriggers();  for  (Iterator  j  =  triggers.iterator();  j.hasNext();)  {      [BUGGY]  Option  option  =(Option)j.next();  newAnonymous.addAll(option.getPrefixes(),  options,  required);  [BUGGY]      newOptionMap.put(j.next(),  option);  }  newPrefixes.addAll(option.getPrefixes());  }  [CLASS]  GroupImpl  [METHOD]  <init>  [RETURN_TYPE]  String,int,int,boolean)  List  options  String  name  String  description  final  int  minimum  final  int  maximum  final  boolean  required  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  required  SortedMap  newOptionMap  optionMap  Iterator  i  j  List  anonymous  newAnonymous  options  Option  option  String  description  name  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	103	103	1	replace	Option  option  =(Option)j.next();  newAnonymous.addAll(option.getPrefixes(),  options,  required);	  Option    option    =(Option)j.next();    newAnonymous.addAll(option.getPrefixes(),    options);    	non-compiled	[CE]  illegal  start  of  expression	1	None	replace
4	[BUG]  [BUGGY]  option  =(Option)j.next();  newAnonymous.addAll(option.getPrefixes(),  options);  [CE]  illegal  start  of  expression  [FE]                OptionException      [CONTEXT]      if  (option  instanceof  Argument)  {  i.remove();  newAnonymous.add(option);  }  else  {  final  Set  triggers  =  option.getTriggers();  for  (Iterator  j  =  triggers.iterator();  j.hasNext();)  {      [BUGGY]  option  =(Option)j.next();  newAnonymous.addAll(option.getPrefixes(),  options);  [BUGGY]      newOptionMap.put(j.next(),  option);  }  newPrefixes.addAll(option.getPrefixes());  }  [CLASS]  GroupImpl  [METHOD]  <init>  [RETURN_TYPE]  String,int,int,boolean)  List  options  String  name  String  description  final  int  minimum  final  int  maximum  final  boolean  required  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  required  SortedMap  newOptionMap  optionMap  Iterator  i  j  List  anonymous  newAnonymous  options  Option  option  String  description  name  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	103	103	1	replace	option  =(Option)j.next();  newAnonymous.addAll(option.getPrefixes(),  options);	  Option    option    =(Option)j.next();    newAnonymous.addAll(option.getPrefixes(),    options);    	non-compiled	[CE]  illegal  start  of  expression	1	None	replace
5	[BUG]  [BUGGY]  Option  option  =  options.getOption(i,  j,  required);  [CE]  illegal  start  of  expression  [FE]                  OptionException      [CONTEXT]      if  (option  instanceof  Argument)  {  i.remove();  newAnonymous.add(option);  }  else  {  final  Set  triggers  =  option.getTriggers();  for  (Iterator  j  =  triggers.iterator();  j.hasNext();)  {      [BUGGY]  Option  option  =  options.getOption(i,  j,  required);  [BUGGY]      newOptionMap.put(j.next(),  option);  }  newPrefixes.addAll(option.getPrefixes());  }  [CLASS]  GroupImpl  [METHOD]  <init>  [RETURN_TYPE]  String,int,int,boolean)  List  options  String  name  String  description  final  int  minimum  final  int  maximum  final  boolean  required  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  required  SortedMap  newOptionMap  optionMap  Iterator  i  j  List  anonymous  newAnonymous  options  Option  option  String  description  name  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	103	103	1	replace	Option  option  =  options.getOption(i,  j,  required);	  Option    option    =    options.getOption(i,    j);    	non-compiled	[CE]  illegal  start  of  expression	12	None	replace
6	[BUG]  [BUGGY]  Option  option  =  options.getOption(i,  j,  description);  [CE]  illegal  start  of  expression  [FE]                    OptionException      [CONTEXT]      if  (option  instanceof  Argument)  {  i.remove();  newAnonymous.add(option);  }  else  {  final  Set  triggers  =  option.getTriggers();  for  (Iterator  j  =  triggers.iterator();  j.hasNext();)  {      [BUGGY]  Option  option  =  options.getOption(i,  j,  description);  [BUGGY]      newOptionMap.put(j.next(),  option);  }  newPrefixes.addAll(option.getPrefixes());  }  [CLASS]  GroupImpl  [METHOD]  <init>  [RETURN_TYPE]  String,int,int,boolean)  List  options  String  name  String  description  final  int  minimum  final  int  maximum  final  boolean  required  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  required  SortedMap  newOptionMap  optionMap  Iterator  i  j  List  anonymous  newAnonymous  options  Option  option  String  description  name  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	103	103	1	replace	Option  option  =  options.getOption(i,  j,  description);	  Option    option    =    options.getOption(i,    j);    	non-compiled	[CE]  illegal  start  of  expression	12	None	replace
7	[BUG]  [BUGGY]  Option  option  =  options.getOption(i,  j,  newAnonymous);  [CE]  illegal  start  of  expression  [FE]                      OptionException      [CONTEXT]      if  (option  instanceof  Argument)  {  i.remove();  newAnonymous.add(option);  }  else  {  final  Set  triggers  =  option.getTriggers();  for  (Iterator  j  =  triggers.iterator();  j.hasNext();)  {      [BUGGY]  Option  option  =  options.getOption(i,  j,  newAnonymous);  [BUGGY]      newOptionMap.put(j.next(),  option);  }  newPrefixes.addAll(option.getPrefixes());  }  [CLASS]  GroupImpl  [METHOD]  <init>  [RETURN_TYPE]  String,int,int,boolean)  List  options  String  name  String  description  final  int  minimum  final  int  maximum  final  boolean  required  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  required  SortedMap  newOptionMap  optionMap  Iterator  i  j  List  anonymous  newAnonymous  options  Option  option  String  description  name  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	103	103	1	replace	Option  option  =  options.getOption(i,  j,  newAnonymous);	  Option    option    =    options.getOption(i,    j);    	non-compiled	[CE]  illegal  start  of  expression	12	None	replace
8	[BUG]  [BUGGY]  Option  option  =  i.getOption(description);  [CE]  illegal  start  of  expression  [FE]                OptionException      [CONTEXT]      if  (option  instanceof  Argument)  {  i.remove();  newAnonymous.add(option);  }  else  {  final  Set  triggers  =  option.getTriggers();  for  (Iterator  j  =  triggers.iterator();  j.hasNext();)  {      [BUGGY]  Option  option  =  i.getOption(description);  [BUGGY]      newOptionMap.put(j.next(),  option);  }  newPrefixes.addAll(option.getPrefixes());  }  [CLASS]  GroupImpl  [METHOD]  <init>  [RETURN_TYPE]  String,int,int,boolean)  List  options  String  name  String  description  final  int  minimum  final  int  maximum  final  boolean  required  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  required  SortedMap  newOptionMap  optionMap  Iterator  i  j  List  anonymous  newAnonymous  options  Option  option  String  description  name  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	103	103	1	replace	Option  option  =  i.getOption(description);	  Option    option    =    options.getOption(description);    	non-compiled	[CE]  illegal  start  of  expression	19	None	replace
9	[BUG]  [BUGGY]  Option  option  =  options.getOption(name,  j,  required);  [CE]  illegal  start  of  expression  [FE]                  OptionException      [CONTEXT]      if  (option  instanceof  Argument)  {  i.remove();  newAnonymous.add(option);  }  else  {  final  Set  triggers  =  option.getTriggers();  for  (Iterator  j  =  triggers.iterator();  j.hasNext();)  {      [BUGGY]  Option  option  =  options.getOption(name,  j,  required);  [BUGGY]      newOptionMap.put(j.next(),  option);  }  newPrefixes.addAll(option.getPrefixes());  }  [CLASS]  GroupImpl  [METHOD]  <init>  [RETURN_TYPE]  String,int,int,boolean)  List  options  String  name  String  description  final  int  minimum  final  int  maximum  final  boolean  required  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  required  SortedMap  newOptionMap  optionMap  Iterator  i  j  List  anonymous  newAnonymous  options  Option  option  String  description  name  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	103	103	1	replace	Option  option  =  options.getOption(name,  j,  required);	  Option    option    =    options.getOption(name,    j);    	non-compiled	[CE]  illegal  start  of  expression	20	None	replace
10	[BUG]  [BUGGY]  Option  option  =  options.getOption(name,  j,  description);  [CE]  illegal  start  of  expression  [FE]                    OptionException      [CONTEXT]      if  (option  instanceof  Argument)  {  i.remove();  newAnonymous.add(option);  }  else  {  final  Set  triggers  =  option.getTriggers();  for  (Iterator  j  =  triggers.iterator();  j.hasNext();)  {      [BUGGY]  Option  option  =  options.getOption(name,  j,  description);  [BUGGY]      newOptionMap.put(j.next(),  option);  }  newPrefixes.addAll(option.getPrefixes());  }  [CLASS]  GroupImpl  [METHOD]  <init>  [RETURN_TYPE]  String,int,int,boolean)  List  options  String  name  String  description  final  int  minimum  final  int  maximum  final  boolean  required  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  required  SortedMap  newOptionMap  optionMap  Iterator  i  j  List  anonymous  newAnonymous  options  Option  option  String  description  name  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	103	103	1	replace	Option  option  =  options.getOption(name,  j,  description);	  Option    option    =    options.getOption(name,    j);    	non-compiled	[CE]  illegal  start  of  expression	20	None	replace
11	[BUG]  [BUGGY]  Option  option  =  options.getOption(name,  j,  maximum);  [CE]  illegal  start  of  expression  [FE]                      OptionException      [CONTEXT]      if  (option  instanceof  Argument)  {  i.remove();  newAnonymous.add(option);  }  else  {  final  Set  triggers  =  option.getTriggers();  for  (Iterator  j  =  triggers.iterator();  j.hasNext();)  {      [BUGGY]  Option  option  =  options.getOption(name,  j,  maximum);  [BUGGY]      newOptionMap.put(j.next(),  option);  }  newPrefixes.addAll(option.getPrefixes());  }  [CLASS]  GroupImpl  [METHOD]  <init>  [RETURN_TYPE]  String,int,int,boolean)  List  options  String  name  String  description  final  int  minimum  final  int  maximum  final  boolean  required  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  required  SortedMap  newOptionMap  optionMap  Iterator  i  j  List  anonymous  newAnonymous  options  Option  option  String  description  name  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	103	103	1	replace	Option  option  =  options.getOption(name,  j,  maximum);	  Option    option    =    options.getOption(name,    j);    	non-compiled	[CE]  illegal  start  of  expression	20	None	replace
12	[BUG]  [BUGGY]  Option  option  =  j.getOption(name);  [CE]  illegal  start  of  expression  [FE]                OptionException      [CONTEXT]      if  (option  instanceof  Argument)  {  i.remove();  newAnonymous.add(option);  }  else  {  final  Set  triggers  =  option.getTriggers();  for  (Iterator  j  =  triggers.iterator();  j.hasNext();)  {      [BUGGY]  Option  option  =  j.getOption(name);  [BUGGY]      newOptionMap.put(j.next(),  option);  }  newPrefixes.addAll(option.getPrefixes());  }  [CLASS]  GroupImpl  [METHOD]  <init>  [RETURN_TYPE]  String,int,int,boolean)  List  options  String  name  String  description  final  int  minimum  final  int  maximum  final  boolean  required  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  required  SortedMap  newOptionMap  optionMap  Iterator  i  j  List  anonymous  newAnonymous  options  Option  option  String  description  name  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	103	103	1	replace	Option  option  =  j.getOption(name);	  Option    option    =    j.getOption(i);    	non-compiled	[CE]  illegal  start  of  expression	6	None	replace
13	[BUG]  [BUGGY]  Option  option  =  i.getOption(j);  [CE]  illegal  start  of  expression  [FE]                  OptionException      [CONTEXT]      if  (option  instanceof  Argument)  {  i.remove();  newAnonymous.add(option);  }  else  {  final  Set  triggers  =  option.getTriggers();  for  (Iterator  j  =  triggers.iterator();  j.hasNext();)  {      [BUGGY]  Option  option  =  i.getOption(j);  [BUGGY]      newOptionMap.put(j.next(),  option);  }  newPrefixes.addAll(option.getPrefixes());  }  [CLASS]  GroupImpl  [METHOD]  <init>  [RETURN_TYPE]  String,int,int,boolean)  List  options  String  name  String  description  final  int  minimum  final  int  maximum  final  boolean  required  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  required  SortedMap  newOptionMap  optionMap  Iterator  i  j  List  anonymous  newAnonymous  options  Option  option  String  description  name  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	103	103	1	replace	Option  option  =  i.getOption(j);	  Option    option    =    j.getOption(i);    	non-compiled	[CE]  illegal  start  of  expression	6	None	replace
14	[BUG]  [BUGGY]  Option  option  =  options.getOption(j,  name);  [CE]  illegal  start  of  expression  [FE]              OptionException      [CONTEXT]      if  (option  instanceof  Argument)  {  i.remove();  newAnonymous.add(option);  }  else  {  final  Set  triggers  =  option.getTriggers();  for  (Iterator  j  =  triggers.iterator();  j.hasNext();)  {      [BUGGY]  Option  option  =  options.getOption(j,  name);  [BUGGY]      newOptionMap.put(j.next(),  option);  }  newPrefixes.addAll(option.getPrefixes());  }  [CLASS]  GroupImpl  [METHOD]  <init>  [RETURN_TYPE]  String,int,int,boolean)  List  options  String  name  String  description  final  int  minimum  final  int  maximum  final  boolean  required  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  required  SortedMap  newOptionMap  optionMap  Iterator  i  j  List  anonymous  newAnonymous  options  Option  option  String  description  name  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	103	103	1	replace	Option  option  =  options.getOption(j,  name);	  Option    option    =    options.getOption(j,    description);    	non-compiled	[CE]  illegal  start  of  expression	8	None	replace
15	[BUG]  [BUGGY]  Option  option  =  options.getOption(i,  description);  [CE]  illegal  start  of  expression  [FE]                OptionException      [CONTEXT]      if  (option  instanceof  Argument)  {  i.remove();  newAnonymous.add(option);  }  else  {  final  Set  triggers  =  option.getTriggers();  for  (Iterator  j  =  triggers.iterator();  j.hasNext();)  {      [BUGGY]  Option  option  =  options.getOption(i,  description);  [BUGGY]      newOptionMap.put(j.next(),  option);  }  newPrefixes.addAll(option.getPrefixes());  }  [CLASS]  GroupImpl  [METHOD]  <init>  [RETURN_TYPE]  String,int,int,boolean)  List  options  String  name  String  description  final  int  minimum  final  int  maximum  final  boolean  required  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  required  SortedMap  newOptionMap  optionMap  Iterator  i  j  List  anonymous  newAnonymous  options  Option  option  String  description  name  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	103	103	1	replace	Option  option  =  options.getOption(i,  description);	  Option    option    =    options.getOption(j,    description);    	non-compiled	[CE]  illegal  start  of  expression	8	None	replace
16	[BUG]  [BUGGY]  Option  option  =  options.getOption(j,  description,  required);  [CE]  illegal  start  of  expression  [FE]                  OptionException      [CONTEXT]      if  (option  instanceof  Argument)  {  i.remove();  newAnonymous.add(option);  }  else  {  final  Set  triggers  =  option.getTriggers();  for  (Iterator  j  =  triggers.iterator();  j.hasNext();)  {      [BUGGY]  Option  option  =  options.getOption(j,  description,  required);  [BUGGY]      newOptionMap.put(j.next(),  option);  }  newPrefixes.addAll(option.getPrefixes());  }  [CLASS]  GroupImpl  [METHOD]  <init>  [RETURN_TYPE]  String,int,int,boolean)  List  options  String  name  String  description  final  int  minimum  final  int  maximum  final  boolean  required  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  required  SortedMap  newOptionMap  optionMap  Iterator  i  j  List  anonymous  newAnonymous  options  Option  option  String  description  name  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	103	103	1	replace	Option  option  =  options.getOption(j,  description,  required);	  Option    option    =    options.getOption(j,    description);    	non-compiled	[CE]  illegal  start  of  expression	8	None	replace
17	[BUG]  [BUGGY]  Option  option  =(Option)i.getAnonymous();  [CE]  illegal  start  of  expression  [FE]            OptionException      [CONTEXT]      if  (option  instanceof  Argument)  {  i.remove();  newAnonymous.add(option);  }  else  {  final  Set  triggers  =  option.getTriggers();  for  (Iterator  j  =  triggers.iterator();  j.hasNext();)  {      [BUGGY]  Option  option  =(Option)i.getAnonymous();  [BUGGY]      newOptionMap.put(j.next(),  option);  }  newPrefixes.addAll(option.getPrefixes());  }  [CLASS]  GroupImpl  [METHOD]  <init>  [RETURN_TYPE]  String,int,int,boolean)  List  options  String  name  String  description  final  int  minimum  final  int  maximum  final  boolean  required  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  required  SortedMap  newOptionMap  optionMap  Iterator  i  j  List  anonymous  newAnonymous  options  Option  option  String  description  name  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	103	103	1	replace	Option  option  =(Option)i.getAnonymous();	  Option    option    =(Option)j.getAnonymous();    	non-compiled	[CE]  illegal  start  of  expression	41	None	replace
18	[BUG]  [BUGGY]  newOptionMap.put(i.getKey(),  options);  [CE]  illegal  start  of  expression  [FE]              OptionException      [CONTEXT]      if  (option  instanceof  Argument)  {  i.remove();  newAnonymous.add(option);  }  else  {  final  Set  triggers  =  option.getTriggers();  for  (Iterator  j  =  triggers.iterator();  j.hasNext();)  {      [BUGGY]  newOptionMap.put(i.getKey(),  options);  [BUGGY]      }  newPrefixes.addAll(option.getPrefixes());  }  [CLASS]  GroupImpl  [METHOD]  <init>  [RETURN_TYPE]  String,int,int,boolean)  List  options  String  name  String  description  final  int  minimum  final  int  maximum  final  boolean  required  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  required  SortedMap  newOptionMap  optionMap  Iterator  i  j  List  anonymous  newAnonymous  options  Option  option  String  description  name  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	103	103	1	replace	newOptionMap.put(i.getKey(),  options);	  newOptionMap.put(j.getKey(),    options);    	non-compiled	[CE]  illegal  start  of  expression	4	None	replace
19	[BUG]  [BUGGY]  Option  option  =  options.getOption(j,  j.next());  [CE]  illegal  start  of  expression  [FE]            OptionException      [CONTEXT]      if  (option  instanceof  Argument)  {  i.remove();  newAnonymous.add(option);  }  else  {  final  Set  triggers  =  option.getTriggers();  for  (Iterator  j  =  triggers.iterator();  j.hasNext();)  {      [BUGGY]  Option  option  =  options.getOption(j,  j.next());  [BUGGY]      newOptionMap.put(j.next(),  option);  }  newPrefixes.addAll(option.getPrefixes());  }  [CLASS]  GroupImpl  [METHOD]  <init>  [RETURN_TYPE]  String,int,int,boolean)  List  options  String  name  String  description  final  int  minimum  final  int  maximum  final  boolean  required  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  required  SortedMap  newOptionMap  optionMap  Iterator  i  j  List  anonymous  newAnonymous  options  Option  option  String  description  name  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	103	103	1	replace	Option  option  =  options.getOption(j,  j.next());	  Option    option    =    options.getOption(j,    i);    	non-compiled	[CE]  illegal  start  of  expression	7	None	replace
20	[BUG]  [BUGGY]  Option  option  =  options.getOption(j,  i  +  1);  [CE]  illegal  start  of  expression  [FE]              OptionException      [CONTEXT]      if  (option  instanceof  Argument)  {  i.remove();  newAnonymous.add(option);  }  else  {  final  Set  triggers  =  option.getTriggers();  for  (Iterator  j  =  triggers.iterator();  j.hasNext();)  {      [BUGGY]  Option  option  =  options.getOption(j,  i  +  1);  [BUGGY]      newOptionMap.put(j.next(),  option);  }  newPrefixes.addAll(option.getPrefixes());  }  [CLASS]  GroupImpl  [METHOD]  <init>  [RETURN_TYPE]  String,int,int,boolean)  List  options  String  name  String  description  final  int  minimum  final  int  maximum  final  boolean  required  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  required  SortedMap  newOptionMap  optionMap  Iterator  i  j  List  anonymous  newAnonymous  options  Option  option  String  description  name  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	103	103	1	replace	Option  option  =  options.getOption(j,  i  +  1);	  Option    option    =    options.getOption(j,    i);    	non-compiled	[CE]  illegal  start  of  expression	7	None	replace
21	[BUG]  [BUGGY]  Option  option  =  options.getOption(j,  i,  description);  [CE]  illegal  start  of  expression  [FE]                OptionException      [CONTEXT]      if  (option  instanceof  Argument)  {  i.remove();  newAnonymous.add(option);  }  else  {  final  Set  triggers  =  option.getTriggers();  for  (Iterator  j  =  triggers.iterator();  j.hasNext();)  {      [BUGGY]  Option  option  =  options.getOption(j,  i,  description);  [BUGGY]      newOptionMap.put(j.next(),  option);  }  newPrefixes.addAll(option.getPrefixes());  }  [CLASS]  GroupImpl  [METHOD]  <init>  [RETURN_TYPE]  String,int,int,boolean)  List  options  String  name  String  description  final  int  minimum  final  int  maximum  final  boolean  required  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  required  SortedMap  newOptionMap  optionMap  Iterator  i  j  List  anonymous  newAnonymous  options  Option  option  String  description  name  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	103	103	1	replace	Option  option  =  options.getOption(j,  i,  description);	  Option    option    =    options.getOption(j,    i);    	non-compiled	[CE]  illegal  start  of  expression	7	None	replace
22	[BUG]  [BUGGY]  Option  option  =(Option)j.clone();  [CE]  illegal  start  of  expression  [FE]            OptionException      [CONTEXT]      if  (option  instanceof  Argument)  {  i.remove();  newAnonymous.add(option);  }  else  {  final  Set  triggers  =  option.getTriggers();  for  (Iterator  j  =  triggers.iterator();  j.hasNext();)  {      [BUGGY]  Option  option  =(Option)j.clone();  [BUGGY]      newOptionMap.put(j.next(),  option);  }  newPrefixes.addAll(option.getPrefixes());  }  [CLASS]  GroupImpl  [METHOD]  <init>  [RETURN_TYPE]  String,int,int,boolean)  List  options  String  name  String  description  final  int  minimum  final  int  maximum  final  boolean  required  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  required  SortedMap  newOptionMap  optionMap  Iterator  i  j  List  anonymous  newAnonymous  options  Option  option  String  description  name  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	103	103	1	replace	Option  option  =(Option)j.clone();	  Option    option    =(Option)j.getValue();    	non-compiled	[CE]  illegal  start  of  expression	17	None	replace
23	[BUG]  [BUGGY]  Option  option  =  j.getOptionalValue();  [CE]  illegal  start  of  expression  [FE]                    OptionException      [CONTEXT]      if  (option  instanceof  Argument)  {  i.remove();  newAnonymous.add(option);  }  else  {  final  Set  triggers  =  option.getTriggers();  for  (Iterator  j  =  triggers.iterator();  j.hasNext();)  {      [BUGGY]  Option  option  =  j.getOptionalValue();  [BUGGY]      newOptionMap.put(j.next(),  option);  }  newPrefixes.addAll(option.getPrefixes());  }  [CLASS]  GroupImpl  [METHOD]  <init>  [RETURN_TYPE]  String,int,int,boolean)  List  options  String  name  String  description  final  int  minimum  final  int  maximum  final  boolean  required  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  required  SortedMap  newOptionMap  optionMap  Iterator  i  j  List  anonymous  newAnonymous  options  Option  option  String  description  name  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	103	103	1	replace	Option  option  =  j.getOptionalValue();	  Option    option    =    j.getValue();    	non-compiled	[CE]  illegal  start  of  expression	15	None	replace
24	[BUG]  [BUGGY]  Option  option  =  j.getOption();  [CE]  illegal  start  of  expression  [FE]                      OptionException      [CONTEXT]      if  (option  instanceof  Argument)  {  i.remove();  newAnonymous.add(option);  }  else  {  final  Set  triggers  =  option.getTriggers();  for  (Iterator  j  =  triggers.iterator();  j.hasNext();)  {      [BUGGY]  Option  option  =  j.getOption();  [BUGGY]      newOptionMap.put(j.next(),  option);  }  newPrefixes.addAll(option.getPrefixes());  }  [CLASS]  GroupImpl  [METHOD]  <init>  [RETURN_TYPE]  String,int,int,boolean)  List  options  String  name  String  description  final  int  minimum  final  int  maximum  final  boolean  required  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  required  SortedMap  newOptionMap  optionMap  Iterator  i  j  List  anonymous  newAnonymous  options  Option  option  String  description  name  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	103	103	1	replace	Option  option  =  j.getOption();	  Option    option    =    j.getValue();    	non-compiled	[CE]  illegal  start  of  expression	15	None	replace
25	[BUG]  [BUGGY]  Option  option  =  j.getOptional();  [CE]  illegal  start  of  expression  [FE]                        OptionException      [CONTEXT]      if  (option  instanceof  Argument)  {  i.remove();  newAnonymous.add(option);  }  else  {  final  Set  triggers  =  option.getTriggers();  for  (Iterator  j  =  triggers.iterator();  j.hasNext();)  {      [BUGGY]  Option  option  =  j.getOptional();  [BUGGY]      newOptionMap.put(j.next(),  option);  }  newPrefixes.addAll(option.getPrefixes());  }  [CLASS]  GroupImpl  [METHOD]  <init>  [RETURN_TYPE]  String,int,int,boolean)  List  options  String  name  String  description  final  int  minimum  final  int  maximum  final  boolean  required  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  required  SortedMap  newOptionMap  optionMap  Iterator  i  j  List  anonymous  newAnonymous  options  Option  option  String  description  name  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	103	103	1	replace	Option  option  =  j.getOptional();	  Option    option    =    j.getValue();    	non-compiled	[CE]  illegal  start  of  expression	15	None	replace
26	[BUG]  [BUGGY]  option  =(Option)j.next();  newAnonymous.addAll(option.getPrefixes(),  option);  [CE]  illegal  start  of  expression  [FE]                OptionException      [CONTEXT]      if  (option  instanceof  Argument)  {  i.remove();  newAnonymous.add(option);  }  else  {  final  Set  triggers  =  option.getTriggers();  for  (Iterator  j  =  triggers.iterator();  j.hasNext();)  {      [BUGGY]  option  =(Option)j.next();  newAnonymous.addAll(option.getPrefixes(),  option);  [BUGGY]      newOptionMap.put(j.next(),  option);  }  newPrefixes.addAll(option.getPrefixes());  }  [CLASS]  GroupImpl  [METHOD]  <init>  [RETURN_TYPE]  String,int,int,boolean)  List  options  String  name  String  description  final  int  minimum  final  int  maximum  final  boolean  required  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  required  SortedMap  newOptionMap  optionMap  Iterator  i  j  List  anonymous  newAnonymous  options  Option  option  String  description  name  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	103	103	1	replace	option  =(Option)j.next();  newAnonymous.addAll(option.getPrefixes(),  option);	  Option    option    =(Option)j.next();    newAnonymous.addAll(option.getPrefixes(),    option);    	non-compiled	[CE]  illegal  start  of  expression	2	None	replace
27	[BUG]  [BUGGY]  Option  option  =(Option)j.next();  newAnonymous.add(option,  description);  [CE]  illegal  start  of  expression  [FE]                      OptionException      [CONTEXT]      if  (option  instanceof  Argument)  {  i.remove();  newAnonymous.add(option);  }  else  {  final  Set  triggers  =  option.getTriggers();  for  (Iterator  j  =  triggers.iterator();  j.hasNext();)  {      [BUGGY]  Option  option  =(Option)j.next();  newAnonymous.add(option,  description);  [BUGGY]      }  newPrefixes.addAll(option.getPrefixes());  }  [CLASS]  GroupImpl  [METHOD]  <init>  [RETURN_TYPE]  String,int,int,boolean)  List  options  String  name  String  description  final  int  minimum  final  int  maximum  final  boolean  required  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  required  SortedMap  newOptionMap  optionMap  Iterator  i  j  List  anonymous  newAnonymous  options  Option  option  String  description  name  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	103	103	1	replace	Option  option  =(Option)j.next();  newAnonymous.add(option,  description);	  Option    option    =(Option)j.next();    newAnonymous.add(option);    	non-compiled	[CE]  illegal  start  of  expression	14	None	replace
28	[BUG]  [BUGGY]  Option  option  =(Option)j.next();  newAnonymous.add(option,  required);  [CE]  illegal  start  of  expression  [FE]                        OptionException      [CONTEXT]      if  (option  instanceof  Argument)  {  i.remove();  newAnonymous.add(option);  }  else  {  final  Set  triggers  =  option.getTriggers();  for  (Iterator  j  =  triggers.iterator();  j.hasNext();)  {      [BUGGY]  Option  option  =(Option)j.next();  newAnonymous.add(option,  required);  [BUGGY]      }  newPrefixes.addAll(option.getPrefixes());  }  [CLASS]  GroupImpl  [METHOD]  <init>  [RETURN_TYPE]  String,int,int,boolean)  List  options  String  name  String  description  final  int  minimum  final  int  maximum  final  boolean  required  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  required  SortedMap  newOptionMap  optionMap  Iterator  i  j  List  anonymous  newAnonymous  options  Option  option  String  description  name  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	103	103	1	replace	Option  option  =(Option)j.next();  newAnonymous.add(option,  required);	  Option    option    =(Option)j.next();    newAnonymous.add(option);    	non-compiled	[CE]  illegal  start  of  expression	14	None	replace
29	[BUG]  [BUGGY]  option  =(Option)j.getValue();  [CE]  illegal  start  of  expression  [FE]              OptionException      [CONTEXT]      if  (option  instanceof  Argument)  {  i.remove();  newAnonymous.add(option);  }  else  {  final  Set  triggers  =  option.getTriggers();  for  (Iterator  j  =  triggers.iterator();  j.hasNext();)  {      [BUGGY]  option  =(Option)j.getValue();  [BUGGY]      newOptionMap.put(j.next(),  option);  }  newPrefixes.addAll(option.getPrefixes());  }  [CLASS]  GroupImpl  [METHOD]  <init>  [RETURN_TYPE]  String,int,int,boolean)  List  options  String  name  String  description  final  int  minimum  final  int  maximum  final  boolean  required  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  required  SortedMap  newOptionMap  optionMap  Iterator  i  j  List  anonymous  newAnonymous  options  Option  option  String  description  name  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	103	103	1	replace	option  =(Option)j.getValue();	  option    =(Option)j.next();    	non-compiled	[CE]  illegal  start  of  expression	23	None	replace
30	[BUG]  [BUGGY]  Option  option  =  option.getOption(i,  required);  [CE]  illegal  start  of  expression  [FE]                OptionException      [CONTEXT]      if  (option  instanceof  Argument)  {  i.remove();  newAnonymous.add(option);  }  else  {  final  Set  triggers  =  option.getTriggers();  for  (Iterator  j  =  triggers.iterator();  j.hasNext();)  {      [BUGGY]  Option  option  =  option.getOption(i,  required);  [BUGGY]      newOptionMap.put(j.next(),  option);  }  newPrefixes.addAll(option.getPrefixes());  }  [CLASS]  GroupImpl  [METHOD]  <init>  [RETURN_TYPE]  String,int,int,boolean)  List  options  String  name  String  description  final  int  minimum  final  int  maximum  final  boolean  required  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  required  SortedMap  newOptionMap  optionMap  Iterator  i  j  List  anonymous  newAnonymous  options  Option  option  String  description  name  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	103	103	1	replace	Option  option  =  option.getOption(i,  required);	  Option    option    =    option.getOption(j,    required);    	non-compiled	[CE]  illegal  start  of  expression	34	None	replace
31	[BUG]  [BUGGY]  Option  option  =  option.getOption(j,  minimum);  [CE]  illegal  start  of  expression  [FE]                  OptionException      [CONTEXT]      if  (option  instanceof  Argument)  {  i.remove();  newAnonymous.add(option);  }  else  {  final  Set  triggers  =  option.getTriggers();  for  (Iterator  j  =  triggers.iterator();  j.hasNext();)  {      [BUGGY]  Option  option  =  option.getOption(j,  minimum);  [BUGGY]      newOptionMap.put(j.next(),  option);  }  newPrefixes.addAll(option.getPrefixes());  }  [CLASS]  GroupImpl  [METHOD]  <init>  [RETURN_TYPE]  String,int,int,boolean)  List  options  String  name  String  description  final  int  minimum  final  int  maximum  final  boolean  required  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  required  SortedMap  newOptionMap  optionMap  Iterator  i  j  List  anonymous  newAnonymous  options  Option  option  String  description  name  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	103	103	1	replace	Option  option  =  option.getOption(j,  minimum);	  Option    option    =    option.getOption(j,    required);    	non-compiled	[CE]  illegal  start  of  expression	34	None	replace
32	[BUG]  [BUGGY]  Option  option  =  option.getOption(minor,  required);  [CE]  illegal  start  of  expression  [FE]                    OptionException      [CONTEXT]      if  (option  instanceof  Argument)  {  i.remove();  newAnonymous.add(option);  }  else  {  final  Set  triggers  =  option.getTriggers();  for  (Iterator  j  =  triggers.iterator();  j.hasNext();)  {      [BUGGY]  Option  option  =  option.getOption(minor,  required);  [BUGGY]      newOptionMap.put(j.next(),  option);  }  newPrefixes.addAll(option.getPrefixes());  }  [CLASS]  GroupImpl  [METHOD]  <init>  [RETURN_TYPE]  String,int,int,boolean)  List  options  String  name  String  description  final  int  minimum  final  int  maximum  final  boolean  required  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  required  SortedMap  newOptionMap  optionMap  Iterator  i  j  List  anonymous  newAnonymous  options  Option  option  String  description  name  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	103	103	1	replace	Option  option  =  option.getOption(minor,  required);	  Option    option    =    option.getOption(j,    required);    	non-compiled	[CE]  illegal  start  of  expression	34	None	replace
33	[BUG]  [BUGGY]  Option  option  =  option.getOption(j,  maximum);  [CE]  illegal  start  of  expression  [FE]                      OptionException      [CONTEXT]      if  (option  instanceof  Argument)  {  i.remove();  newAnonymous.add(option);  }  else  {  final  Set  triggers  =  option.getTriggers();  for  (Iterator  j  =  triggers.iterator();  j.hasNext();)  {      [BUGGY]  Option  option  =  option.getOption(j,  maximum);  [BUGGY]      newOptionMap.put(j.next(),  option);  }  newPrefixes.addAll(option.getPrefixes());  }  [CLASS]  GroupImpl  [METHOD]  <init>  [RETURN_TYPE]  String,int,int,boolean)  List  options  String  name  String  description  final  int  minimum  final  int  maximum  final  boolean  required  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  required  SortedMap  newOptionMap  optionMap  Iterator  i  j  List  anonymous  newAnonymous  options  Option  option  String  description  name  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	103	103	1	replace	Option  option  =  option.getOption(j,  maximum);	  Option    option    =    option.getOption(j,    required);    	non-compiled	[CE]  illegal  start  of  expression	34	None	replace
34	[BUG]  [BUGGY]  newOptionMap.put(option.getKey(),  i);  [CE]  illegal  start  of  expression  [FE]                OptionException      [CONTEXT]      if  (option  instanceof  Argument)  {  i.remove();  newAnonymous.add(option);  }  else  {  final  Set  triggers  =  option.getTriggers();  for  (Iterator  j  =  triggers.iterator();  j.hasNext();)  {      [BUGGY]  newOptionMap.put(option.getKey(),  i);  [BUGGY]      }  newPrefixes.addAll(option.getPrefixes());  }  [CLASS]  GroupImpl  [METHOD]  <init>  [RETURN_TYPE]  String,int,int,boolean)  List  options  String  name  String  description  final  int  minimum  final  int  maximum  final  boolean  required  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  required  SortedMap  newOptionMap  optionMap  Iterator  i  j  List  anonymous  newAnonymous  options  Option  option  String  description  name  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	103	103	1	replace	newOptionMap.put(option.getKey(),  i);	  newOptionMap.put(i.getKey(),    option);    	non-compiled	[CE]  illegal  start  of  expression	5	None	replace
35	[BUG]  [BUGGY]  Option  option  =  options.getOption(name,  j.next(),  description);  [CE]  illegal  start  of  expression  [FE]                OptionException      [CONTEXT]      if  (option  instanceof  Argument)  {  i.remove();  newAnonymous.add(option);  }  else  {  final  Set  triggers  =  option.getTriggers();  for  (Iterator  j  =  triggers.iterator();  j.hasNext();)  {      [BUGGY]  Option  option  =  options.getOption(name,  j.next(),  description);  [BUGGY]      newOptionMap.put(j.next(),  option);  }  newPrefixes.addAll(option.getPrefixes());  }  [CLASS]  GroupImpl  [METHOD]  <init>  [RETURN_TYPE]  String,int,int,boolean)  List  options  String  name  String  description  final  int  minimum  final  int  maximum  final  boolean  required  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  required  SortedMap  newOptionMap  optionMap  Iterator  i  j  List  anonymous  newAnonymous  options  Option  option  String  description  name  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	103	103	1	replace	Option  option  =  options.getOption(name,  j.next(),  description);	  Option    option    =    options.getOption(name,    j.next());    	non-compiled	[CE]  illegal  start  of  expression	44	None	replace
36	[BUG]  [BUGGY]  Option  option  =  options.getOption(name,  j.next(),  required);  [CE]  illegal  start  of  expression  [FE]                  OptionException      [CONTEXT]      if  (option  instanceof  Argument)  {  i.remove();  newAnonymous.add(option);  }  else  {  final  Set  triggers  =  option.getTriggers();  for  (Iterator  j  =  triggers.iterator();  j.hasNext();)  {      [BUGGY]  Option  option  =  options.getOption(name,  j.next(),  required);  [BUGGY]      newOptionMap.put(j.next(),  option);  }  newPrefixes.addAll(option.getPrefixes());  }  [CLASS]  GroupImpl  [METHOD]  <init>  [RETURN_TYPE]  String,int,int,boolean)  List  options  String  name  String  description  final  int  minimum  final  int  maximum  final  boolean  required  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  required  SortedMap  newOptionMap  optionMap  Iterator  i  j  List  anonymous  newAnonymous  options  Option  option  String  description  name  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	103	103	1	replace	Option  option  =  options.getOption(name,  j.next(),  required);	  Option    option    =    options.getOption(name,    j.next());    	non-compiled	[CE]  illegal  start  of  expression	44	None	replace
37	[BUG]  [BUGGY]  Option  option  =  options.getOption(name,  j.next()  +  1);  [CE]  illegal  start  of  expression  [FE]                    OptionException      [CONTEXT]      if  (option  instanceof  Argument)  {  i.remove();  newAnonymous.add(option);  }  else  {  final  Set  triggers  =  option.getTriggers();  for  (Iterator  j  =  triggers.iterator();  j.hasNext();)  {      [BUGGY]  Option  option  =  options.getOption(name,  j.next()  +  1);  [BUGGY]      newOptionMap.put(j.next(),  option);  }  newPrefixes.addAll(option.getPrefixes());  }  [CLASS]  GroupImpl  [METHOD]  <init>  [RETURN_TYPE]  String,int,int,boolean)  List  options  String  name  String  description  final  int  minimum  final  int  maximum  final  boolean  required  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  required  SortedMap  newOptionMap  optionMap  Iterator  i  j  List  anonymous  newAnonymous  options  Option  option  String  description  name  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	103	103	1	replace	Option  option  =  options.getOption(name,  j.next()  +  1);	  Option    option    =    options.getOption(name,    j.next());    	non-compiled	[CE]  illegal  start  of  expression	44	None	replace
38	[BUG]  [BUGGY]  newOptionMap.put(option.getPrefixes(),  j);  [CE]  illegal  start  of  expression  [FE]              OptionException      [CONTEXT]      if  (option  instanceof  Argument)  {  i.remove();  newAnonymous.add(option);  }  else  {  final  Set  triggers  =  option.getTriggers();  for  (Iterator  j  =  triggers.iterator();  j.hasNext();)  {      [BUGGY]  newOptionMap.put(option.getPrefixes(),  j);  [BUGGY]      }  newPrefixes.addAll(option.getPrefixes());  }  [CLASS]  GroupImpl  [METHOD]  <init>  [RETURN_TYPE]  String,int,int,boolean)  List  options  String  name  String  description  final  int  minimum  final  int  maximum  final  boolean  required  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  required  SortedMap  newOptionMap  optionMap  Iterator  i  j  List  anonymous  newAnonymous  options  Option  option  String  description  name  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	103	103	1	replace	newOptionMap.put(option.getPrefixes(),  j);	  newOptionMap.put(option.getTriggers(),    j);    	non-compiled	[CE]  illegal  start  of  expression	39	None	replace
39	[BUG]  [BUGGY]  newOptionMap.put(j.getTriggers(),  option);  [CE]  illegal  start  of  expression  [FE]                OptionException      [CONTEXT]      if  (option  instanceof  Argument)  {  i.remove();  newAnonymous.add(option);  }  else  {  final  Set  triggers  =  option.getTriggers();  for  (Iterator  j  =  triggers.iterator();  j.hasNext();)  {      [BUGGY]  newOptionMap.put(j.getTriggers(),  option);  [BUGGY]      }  newPrefixes.addAll(option.getPrefixes());  }  [CLASS]  GroupImpl  [METHOD]  <init>  [RETURN_TYPE]  String,int,int,boolean)  List  options  String  name  String  description  final  int  minimum  final  int  maximum  final  boolean  required  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  required  SortedMap  newOptionMap  optionMap  Iterator  i  j  List  anonymous  newAnonymous  options  Option  option  String  description  name  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	103	103	1	replace	newOptionMap.put(j.getTriggers(),  option);	  newOptionMap.put(option.getTriggers(),    j);    	non-compiled	[CE]  illegal  start  of  expression	39	None	replace
40	[BUG]  [BUGGY]  newOptionMap.put(option.getTriggers(),  j,  required);  [CE]  illegal  start  of  expression  [FE]                  OptionException      [CONTEXT]      if  (option  instanceof  Argument)  {  i.remove();  newAnonymous.add(option);  }  else  {  final  Set  triggers  =  option.getTriggers();  for  (Iterator  j  =  triggers.iterator();  j.hasNext();)  {      [BUGGY]  newOptionMap.put(option.getTriggers(),  j,  required);  [BUGGY]      }  newPrefixes.addAll(option.getPrefixes());  }  [CLASS]  GroupImpl  [METHOD]  <init>  [RETURN_TYPE]  String,int,int,boolean)  List  options  String  name  String  description  final  int  minimum  final  int  maximum  final  boolean  required  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  required  SortedMap  newOptionMap  optionMap  Iterator  i  j  List  anonymous  newAnonymous  options  Option  option  String  description  name  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	103	103	1	replace	newOptionMap.put(option.getTriggers(),  j,  required);	  newOptionMap.put(option.getTriggers(),    j);    	non-compiled	[CE]  illegal  start  of  expression	39	None	replace
41	[BUG]  [BUGGY]  newOptionMap.put(option.getTriggers(),  j,  minimum);  [CE]  illegal  start  of  expression  [FE]                    OptionException      [CONTEXT]      if  (option  instanceof  Argument)  {  i.remove();  newAnonymous.add(option);  }  else  {  final  Set  triggers  =  option.getTriggers();  for  (Iterator  j  =  triggers.iterator();  j.hasNext();)  {      [BUGGY]  newOptionMap.put(option.getTriggers(),  j,  minimum);  [BUGGY]      }  newPrefixes.addAll(option.getPrefixes());  }  [CLASS]  GroupImpl  [METHOD]  <init>  [RETURN_TYPE]  String,int,int,boolean)  List  options  String  name  String  description  final  int  minimum  final  int  maximum  final  boolean  required  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  required  SortedMap  newOptionMap  optionMap  Iterator  i  j  List  anonymous  newAnonymous  options  Option  option  String  description  name  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	103	103	1	replace	newOptionMap.put(option.getTriggers(),  j,  minimum);	  newOptionMap.put(option.getTriggers(),    j);    	non-compiled	[CE]  illegal  start  of  expression	39	None	replace
42	[BUG]  [BUGGY]  Option  option  =  options.getOption(j);  newAnonymous.add(option);  [CE]  illegal  start  of  expression  [FE]                    OptionException      [CONTEXT]      if  (option  instanceof  Argument)  {  i.remove();  newAnonymous.add(option);  }  else  {  final  Set  triggers  =  option.getTriggers();  for  (Iterator  j  =  triggers.iterator();  j.hasNext();)  {      [BUGGY]  Option  option  =  options.getOption(j);  newAnonymous.add(option);  [BUGGY]      }  newPrefixes.addAll(option.getPrefixes());  }  [CLASS]  GroupImpl  [METHOD]  <init>  [RETURN_TYPE]  String,int,int,boolean)  List  options  String  name  String  description  final  int  minimum  final  int  maximum  final  boolean  required  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  required  SortedMap  newOptionMap  optionMap  Iterator  i  j  List  anonymous  newAnonymous  options  Option  option  String  description  name  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	103	103	1	replace	Option  option  =  options.getOption(j);  newAnonymous.add(option);	  Option    option    =    option.getOption(j);    newAnonymous.add(option);    	non-compiled	[CE]  illegal  start  of  expression	40	None	replace
43	[BUG]  [BUGGY]  Option  option  =  j.getOption(option);  newAnonymous.add(option);  [CE]  illegal  start  of  expression  [FE]                      OptionException      [CONTEXT]      if  (option  instanceof  Argument)  {  i.remove();  newAnonymous.add(option);  }  else  {  final  Set  triggers  =  option.getTriggers();  for  (Iterator  j  =  triggers.iterator();  j.hasNext();)  {      [BUGGY]  Option  option  =  j.getOption(option);  newAnonymous.add(option);  [BUGGY]      }  newPrefixes.addAll(option.getPrefixes());  }  [CLASS]  GroupImpl  [METHOD]  <init>  [RETURN_TYPE]  String,int,int,boolean)  List  options  String  name  String  description  final  int  minimum  final  int  maximum  final  boolean  required  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  required  SortedMap  newOptionMap  optionMap  Iterator  i  j  List  anonymous  newAnonymous  options  Option  option  String  description  name  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	103	103	1	replace	Option  option  =  j.getOption(option);  newAnonymous.add(option);	  Option    option    =    option.getOption(j);    newAnonymous.add(option);    	non-compiled	[CE]  illegal  start  of  expression	40	None	replace
44	[BUG]  [BUGGY]  Option  option  =  options.getOption(prefixes,  j);  [CE]  illegal  start  of  expression  [FE]                      OptionException      [CONTEXT]      if  (option  instanceof  Argument)  {  i.remove();  newAnonymous.add(option);  }  else  {  final  Set  triggers  =  option.getTriggers();  for  (Iterator  j  =  triggers.iterator();  j.hasNext();)  {      [BUGGY]  Option  option  =  options.getOption(prefixes,  j);  [BUGGY]      newOptionMap.put(j.next(),  option);  }  newPrefixes.addAll(option.getPrefixes());  }  [CLASS]  GroupImpl  [METHOD]  <init>  [RETURN_TYPE]  String,int,int,boolean)  List  options  String  name  String  description  final  int  minimum  final  int  maximum  final  boolean  required  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  required  SortedMap  newOptionMap  optionMap  Iterator  i  j  List  anonymous  newAnonymous  options  Option  option  String  description  name  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	103	103	1	replace	Option  option  =  options.getOption(prefixes,  j);	  Option    option    =    options.getOption(prefixes);    	non-compiled	[CE]  illegal  start  of  expression	22	None	replace
45	[BUG]  [BUGGY]  Option  option  =  options.getOption(prefixes,  j.next());  [CE]  illegal  start  of  expression  [FE]                        OptionException      [CONTEXT]      if  (option  instanceof  Argument)  {  i.remove();  newAnonymous.add(option);  }  else  {  final  Set  triggers  =  option.getTriggers();  for  (Iterator  j  =  triggers.iterator();  j.hasNext();)  {      [BUGGY]  Option  option  =  options.getOption(prefixes,  j.next());  [BUGGY]      newOptionMap.put(j.next(),  option);  }  newPrefixes.addAll(option.getPrefixes());  }  [CLASS]  GroupImpl  [METHOD]  <init>  [RETURN_TYPE]  String,int,int,boolean)  List  options  String  name  String  description  final  int  minimum  final  int  maximum  final  boolean  required  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  required  SortedMap  newOptionMap  optionMap  Iterator  i  j  List  anonymous  newAnonymous  options  Option  option  String  description  name  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	103	103	1	replace	Option  option  =  options.getOption(prefixes,  j.next());	  Option    option    =    options.getOption(prefixes);    	non-compiled	[CE]  illegal  start  of  expression	22	None	replace
46	[BUG]  [BUGGY]  newAnonymous.addAll(j.getPrefixes());  [CE]  illegal  start  of  expression  [FE]                    OptionException      [CONTEXT]      if  (option  instanceof  Argument)  {  i.remove();  newAnonymous.add(option);  }  else  {  final  Set  triggers  =  option.getTriggers();  for  (Iterator  j  =  triggers.iterator();  j.hasNext();)  {      [BUGGY]  newAnonymous.addAll(j.getPrefixes());  [BUGGY]      }  newPrefixes.addAll(option.getPrefixes());  }  [CLASS]  GroupImpl  [METHOD]  <init>  [RETURN_TYPE]  String,int,int,boolean)  List  options  String  name  String  description  final  int  minimum  final  int  maximum  final  boolean  required  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  required  SortedMap  newOptionMap  optionMap  Iterator  i  j  List  anonymous  newAnonymous  options  Option  option  String  description  name  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	103	103	1	replace	newAnonymous.addAll(j.getPrefixes());	  newAnonymous.addAll(option.getPrefixes());    	non-compiled	[CE]  illegal  start  of  expression	13	None	replace
47	[BUG]  [BUGGY]  newAnonymous.addAll(option.getTriggers());  [CE]  illegal  start  of  expression  [FE]                      OptionException      [CONTEXT]      if  (option  instanceof  Argument)  {  i.remove();  newAnonymous.add(option);  }  else  {  final  Set  triggers  =  option.getTriggers();  for  (Iterator  j  =  triggers.iterator();  j.hasNext();)  {      [BUGGY]  newAnonymous.addAll(option.getTriggers());  [BUGGY]      }  newPrefixes.addAll(option.getPrefixes());  }  [CLASS]  GroupImpl  [METHOD]  <init>  [RETURN_TYPE]  String,int,int,boolean)  List  options  String  name  String  description  final  int  minimum  final  int  maximum  final  boolean  required  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  required  SortedMap  newOptionMap  optionMap  Iterator  i  j  List  anonymous  newAnonymous  options  Option  option  String  description  name  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	103	103	1	replace	newAnonymous.addAll(option.getTriggers());	  newAnonymous.addAll(option.getPrefixes());    	non-compiled	[CE]  illegal  start  of  expression	13	None	replace
48	[BUG]  [BUGGY]  newAnonymous.addAll(i.getPrefixes());  [CE]  illegal  start  of  expression  [FE]                        OptionException      [CONTEXT]      if  (option  instanceof  Argument)  {  i.remove();  newAnonymous.add(option);  }  else  {  final  Set  triggers  =  option.getTriggers();  for  (Iterator  j  =  triggers.iterator();  j.hasNext();)  {      [BUGGY]  newAnonymous.addAll(i.getPrefixes());  [BUGGY]      }  newPrefixes.addAll(option.getPrefixes());  }  [CLASS]  GroupImpl  [METHOD]  <init>  [RETURN_TYPE]  String,int,int,boolean)  List  options  String  name  String  description  final  int  minimum  final  int  maximum  final  boolean  required  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  required  SortedMap  newOptionMap  optionMap  Iterator  i  j  List  anonymous  newAnonymous  options  Option  option  String  description  name  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	103	103	1	replace	newAnonymous.addAll(i.getPrefixes());	  newAnonymous.addAll(option.getPrefixes());    	non-compiled	[CE]  illegal  start  of  expression	13	None	replace
49	[BUG]  [BUGGY]  newAnonymous.addAll(i.next());  [CE]  illegal  start  of  expression  [FE]                          OptionException      [CONTEXT]      if  (option  instanceof  Argument)  {  i.remove();  newAnonymous.add(option);  }  else  {  final  Set  triggers  =  option.getTriggers();  for  (Iterator  j  =  triggers.iterator();  j.hasNext();)  {      [BUGGY]  newAnonymous.addAll(i.next());  [BUGGY]      }  newPrefixes.addAll(option.getPrefixes());  }  [CLASS]  GroupImpl  [METHOD]  <init>  [RETURN_TYPE]  String,int,int,boolean)  List  options  String  name  String  description  final  int  minimum  final  int  maximum  final  boolean  required  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  required  SortedMap  newOptionMap  optionMap  Iterator  i  j  List  anonymous  newAnonymous  options  Option  option  String  description  name  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	103	103	1	replace	newAnonymous.addAll(i.next());	  newAnonymous.addAll(option.getPrefixes());    	non-compiled	[CE]  illegal  start  of  expression	13	None	replace
50	[BUG]  [BUGGY]  newOptionMap.put(option.getPrefix(),  j,  required);  [CE]  illegal  start  of  expression  [FE]              OptionException      [CONTEXT]      if  (option  instanceof  Argument)  {  i.remove();  newAnonymous.add(option);  }  else  {  final  Set  triggers  =  option.getTriggers();  for  (Iterator  j  =  triggers.iterator();  j.hasNext();)  {      [BUGGY]  newOptionMap.put(option.getPrefix(),  j,  required);  [BUGGY]      }  newPrefixes.addAll(option.getPrefixes());  }  [CLASS]  GroupImpl  [METHOD]  <init>  [RETURN_TYPE]  String,int,int,boolean)  List  options  String  name  String  description  final  int  minimum  final  int  maximum  final  boolean  required  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  required  SortedMap  newOptionMap  optionMap  Iterator  i  j  List  anonymous  newAnonymous  options  Option  option  String  description  name  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	103	103	1	replace	newOptionMap.put(option.getPrefix(),  j,  required);	  newOptionMap.put(option.getPrefix(),    j);    	non-compiled	[CE]  illegal  start  of  expression	30	None	replace
51	[BUG]  [BUGGY]  newOptionMap.put(option.getPrefix(),  j,  minimum);  [CE]  illegal  start  of  expression  [FE]                OptionException      [CONTEXT]      if  (option  instanceof  Argument)  {  i.remove();  newAnonymous.add(option);  }  else  {  final  Set  triggers  =  option.getTriggers();  for  (Iterator  j  =  triggers.iterator();  j.hasNext();)  {      [BUGGY]  newOptionMap.put(option.getPrefix(),  j,  minimum);  [BUGGY]      }  newPrefixes.addAll(option.getPrefixes());  }  [CLASS]  GroupImpl  [METHOD]  <init>  [RETURN_TYPE]  String,int,int,boolean)  List  options  String  name  String  description  final  int  minimum  final  int  maximum  final  boolean  required  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  required  SortedMap  newOptionMap  optionMap  Iterator  i  j  List  anonymous  newAnonymous  options  Option  option  String  description  name  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	103	103	1	replace	newOptionMap.put(option.getPrefix(),  j,  minimum);	  newOptionMap.put(option.getPrefix(),    j);    	non-compiled	[CE]  illegal  start  of  expression	30	None	replace
52	[BUG]  [BUGGY]  newOptionMap.put(option.getPrefix(),  j,  maximum);  [CE]  illegal  start  of  expression  [FE]                  OptionException      [CONTEXT]      if  (option  instanceof  Argument)  {  i.remove();  newAnonymous.add(option);  }  else  {  final  Set  triggers  =  option.getTriggers();  for  (Iterator  j  =  triggers.iterator();  j.hasNext();)  {      [BUGGY]  newOptionMap.put(option.getPrefix(),  j,  maximum);  [BUGGY]      }  newPrefixes.addAll(option.getPrefixes());  }  [CLASS]  GroupImpl  [METHOD]  <init>  [RETURN_TYPE]  String,int,int,boolean)  List  options  String  name  String  description  final  int  minimum  final  int  maximum  final  boolean  required  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  required  SortedMap  newOptionMap  optionMap  Iterator  i  j  List  anonymous  newAnonymous  options  Option  option  String  description  name  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	103	103	1	replace	newOptionMap.put(option.getPrefix(),  j,  maximum);	  newOptionMap.put(option.getPrefix(),    j);    	non-compiled	[CE]  illegal  start  of  expression	30	None	replace
53	[BUG]  [BUGGY]  newOptionMap.put(j.getPrefix(),  option);  [CE]  illegal  start  of  expression  [FE]                    OptionException      [CONTEXT]      if  (option  instanceof  Argument)  {  i.remove();  newAnonymous.add(option);  }  else  {  final  Set  triggers  =  option.getTriggers();  for  (Iterator  j  =  triggers.iterator();  j.hasNext();)  {      [BUGGY]  newOptionMap.put(j.getPrefix(),  option);  [BUGGY]      }  newPrefixes.addAll(option.getPrefixes());  }  [CLASS]  GroupImpl  [METHOD]  <init>  [RETURN_TYPE]  String,int,int,boolean)  List  options  String  name  String  description  final  int  minimum  final  int  maximum  final  boolean  required  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  required  SortedMap  newOptionMap  optionMap  Iterator  i  j  List  anonymous  newAnonymous  options  Option  option  String  description  name  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	103	103	1	replace	newOptionMap.put(j.getPrefix(),  option);	  newOptionMap.put(option.getPrefix(),    j);    	non-compiled	[CE]  illegal  start  of  expression	30	None	replace
54	[BUG]  [BUGGY]  newOptionMap.put(j.getKey(),  j.toString());  [CE]  illegal  start  of  expression  [FE]                  OptionException      [CONTEXT]      if  (option  instanceof  Argument)  {  i.remove();  newAnonymous.add(option);  }  else  {  final  Set  triggers  =  option.getTriggers();  for  (Iterator  j  =  triggers.iterator();  j.hasNext();)  {      [BUGGY]  newOptionMap.put(j.getKey(),  j.toString());  [BUGGY]      }  newPrefixes.addAll(option.getPrefixes());  }  [CLASS]  GroupImpl  [METHOD]  <init>  [RETURN_TYPE]  String,int,int,boolean)  List  options  String  name  String  description  final  int  minimum  final  int  maximum  final  boolean  required  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  required  SortedMap  newOptionMap  optionMap  Iterator  i  j  List  anonymous  newAnonymous  options  Option  option  String  description  name  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	103	103	1	replace	newOptionMap.put(j.getKey(),  j.toString());	  newOptionMap.put(j.getKey(),    j.next());    	non-compiled	[CE]  illegal  start  of  expression	28	None	replace
55	[BUG]  [BUGGY]  newOptionMap.put(j.getKey(),  j.getValue());  [CE]  illegal  start  of  expression  [FE]                    OptionException      [CONTEXT]      if  (option  instanceof  Argument)  {  i.remove();  newAnonymous.add(option);  }  else  {  final  Set  triggers  =  option.getTriggers();  for  (Iterator  j  =  triggers.iterator();  j.hasNext();)  {      [BUGGY]  newOptionMap.put(j.getKey(),  j.getValue());  [BUGGY]      }  newPrefixes.addAll(option.getPrefixes());  }  [CLASS]  GroupImpl  [METHOD]  <init>  [RETURN_TYPE]  String,int,int,boolean)  List  options  String  name  String  description  final  int  minimum  final  int  maximum  final  boolean  required  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  required  SortedMap  newOptionMap  optionMap  Iterator  i  j  List  anonymous  newAnonymous  options  Option  option  String  description  name  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	103	103	1	replace	newOptionMap.put(j.getKey(),  j.getValue());	  newOptionMap.put(j.getKey(),    j.next());    	non-compiled	[CE]  illegal  start  of  expression	28	None	replace
56	[BUG]  [BUGGY]  newOptionMap.put(j.getKey(),  i.next());  [CE]  illegal  start  of  expression  [FE]                      OptionException      [CONTEXT]      if  (option  instanceof  Argument)  {  i.remove();  newAnonymous.add(option);  }  else  {  final  Set  triggers  =  option.getTriggers();  for  (Iterator  j  =  triggers.iterator();  j.hasNext();)  {      [BUGGY]  newOptionMap.put(j.getKey(),  i.next());  [BUGGY]      }  newPrefixes.addAll(option.getPrefixes());  }  [CLASS]  GroupImpl  [METHOD]  <init>  [RETURN_TYPE]  String,int,int,boolean)  List  options  String  name  String  description  final  int  minimum  final  int  maximum  final  boolean  required  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  required  SortedMap  newOptionMap  optionMap  Iterator  i  j  List  anonymous  newAnonymous  options  Option  option  String  description  name  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	103	103	1	replace	newOptionMap.put(j.getKey(),  i.next());	  newOptionMap.put(j.getKey(),    j.next());    	non-compiled	[CE]  illegal  start  of  expression	28	None	replace
57	[BUG]  [BUGGY]  Option  option  =  options.getOption(name,  description,  required);  [CE]  illegal  start  of  expression  [FE]                    OptionException      [CONTEXT]      if  (option  instanceof  Argument)  {  i.remove();  newAnonymous.add(option);  }  else  {  final  Set  triggers  =  option.getTriggers();  for  (Iterator  j  =  triggers.iterator();  j.hasNext();)  {      [BUGGY]  Option  option  =  options.getOption(name,  description,  required);  [BUGGY]      newOptionMap.put(j.next(),  option);  }  newPrefixes.addAll(option.getPrefixes());  }  [CLASS]  GroupImpl  [METHOD]  <init>  [RETURN_TYPE]  String,int,int,boolean)  List  options  String  name  String  description  final  int  minimum  final  int  maximum  final  boolean  required  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  required  SortedMap  newOptionMap  optionMap  Iterator  i  j  List  anonymous  newAnonymous  options  Option  option  String  description  name  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	103	103	1	replace	Option  option  =  options.getOption(name,  description,  required);	  Option    option    =    options.getOption(name,    description);    	non-compiled	[CE]  illegal  start  of  expression	21	None	replace
58	[BUG]  [BUGGY]  Option  option  =  options.getOption(name,  description,  j);  [CE]  illegal  start  of  expression  [FE]                      OptionException      [CONTEXT]      if  (option  instanceof  Argument)  {  i.remove();  newAnonymous.add(option);  }  else  {  final  Set  triggers  =  option.getTriggers();  for  (Iterator  j  =  triggers.iterator();  j.hasNext();)  {      [BUGGY]  Option  option  =  options.getOption(name,  description,  j);  [BUGGY]      newOptionMap.put(j.next(),  option);  }  newPrefixes.addAll(option.getPrefixes());  }  [CLASS]  GroupImpl  [METHOD]  <init>  [RETURN_TYPE]  String,int,int,boolean)  List  options  String  name  String  description  final  int  minimum  final  int  maximum  final  boolean  required  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  required  SortedMap  newOptionMap  optionMap  Iterator  i  j  List  anonymous  newAnonymous  options  Option  option  String  description  name  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	103	103	1	replace	Option  option  =  options.getOption(name,  description,  j);	  Option    option    =    options.getOption(name,    description);    	non-compiled	[CE]  illegal  start  of  expression	21	None	replace
59	[BUG]  [BUGGY]  Option  option  =  options.getOption(name,  description,  minimum);  [CE]  illegal  start  of  expression  [FE]                        OptionException      [CONTEXT]      if  (option  instanceof  Argument)  {  i.remove();  newAnonymous.add(option);  }  else  {  final  Set  triggers  =  option.getTriggers();  for  (Iterator  j  =  triggers.iterator();  j.hasNext();)  {      [BUGGY]  Option  option  =  options.getOption(name,  description,  minimum);  [BUGGY]      newOptionMap.put(j.next(),  option);  }  newPrefixes.addAll(option.getPrefixes());  }  [CLASS]  GroupImpl  [METHOD]  <init>  [RETURN_TYPE]  String,int,int,boolean)  List  options  String  name  String  description  final  int  minimum  final  int  maximum  final  boolean  required  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  required  SortedMap  newOptionMap  optionMap  Iterator  i  j  List  anonymous  newAnonymous  options  Option  option  String  description  name  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	103	103	1	replace	Option  option  =  options.getOption(name,  description,  minimum);	  Option    option    =    options.getOption(name,    description);    	non-compiled	[CE]  illegal  start  of  expression	21	None	replace
60	[BUG]  [BUGGY]  Option  option  =  options.getOption(name,  description,  j.next());  [CE]  illegal  start  of  expression  [FE]                          OptionException      [CONTEXT]      if  (option  instanceof  Argument)  {  i.remove();  newAnonymous.add(option);  }  else  {  final  Set  triggers  =  option.getTriggers();  for  (Iterator  j  =  triggers.iterator();  j.hasNext();)  {      [BUGGY]  Option  option  =  options.getOption(name,  description,  j.next());  [BUGGY]      newOptionMap.put(j.next(),  option);  }  newPrefixes.addAll(option.getPrefixes());  }  [CLASS]  GroupImpl  [METHOD]  <init>  [RETURN_TYPE]  String,int,int,boolean)  List  options  String  name  String  description  final  int  minimum  final  int  maximum  final  boolean  required  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  required  SortedMap  newOptionMap  optionMap  Iterator  i  j  List  anonymous  newAnonymous  options  Option  option  String  description  name  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	103	103	1	replace	Option  option  =  options.getOption(name,  description,  j.next());	  Option    option    =    options.getOption(name,    description);    	non-compiled	[CE]  illegal  start  of  expression	21	None	replace
61	[BUG]  [BUGGY]  Option  option  =  option.getOption(name,  description);  [CE]  illegal  start  of  expression  [FE]              OptionException      [CONTEXT]      if  (option  instanceof  Argument)  {  i.remove();  newAnonymous.add(option);  }  else  {  final  Set  triggers  =  option.getTriggers();  for  (Iterator  j  =  triggers.iterator();  j.hasNext();)  {      [BUGGY]  Option  option  =  option.getOption(name,  description);  [BUGGY]      newOptionMap.put(j.next(),  option);  }  newPrefixes.addAll(option.getPrefixes());  }  [CLASS]  GroupImpl  [METHOD]  <init>  [RETURN_TYPE]  String,int,int,boolean)  List  options  String  name  String  description  final  int  minimum  final  int  maximum  final  boolean  required  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  required  SortedMap  newOptionMap  optionMap  Iterator  i  j  List  anonymous  newAnonymous  options  Option  option  String  description  name  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	103	103	1	replace	Option  option  =  option.getOption(name,  description);	  Option    option    =    option.getOption(j,    description);    	non-compiled	[CE]  illegal  start  of  expression	33	None	replace
62	[BUG]  [BUGGY]  Option  option  =  j.getOption(option,  description);  [CE]  illegal  start  of  expression  [FE]                OptionException      [CONTEXT]      if  (option  instanceof  Argument)  {  i.remove();  newAnonymous.add(option);  }  else  {  final  Set  triggers  =  option.getTriggers();  for  (Iterator  j  =  triggers.iterator();  j.hasNext();)  {      [BUGGY]  Option  option  =  j.getOption(option,  description);  [BUGGY]      newOptionMap.put(j.next(),  option);  }  newPrefixes.addAll(option.getPrefixes());  }  [CLASS]  GroupImpl  [METHOD]  <init>  [RETURN_TYPE]  String,int,int,boolean)  List  options  String  name  String  description  final  int  minimum  final  int  maximum  final  boolean  required  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  required  SortedMap  newOptionMap  optionMap  Iterator  i  j  List  anonymous  newAnonymous  options  Option  option  String  description  name  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	103	103	1	replace	Option  option  =  j.getOption(option,  description);	  Option    option    =    option.getOption(j,    description);    	non-compiled	[CE]  illegal  start  of  expression	33	None	replace
63	[BUG]  [BUGGY]  Option  option  =  i.getOption(j,  description);  [CE]  illegal  start  of  expression  [FE]                  OptionException      [CONTEXT]      if  (option  instanceof  Argument)  {  i.remove();  newAnonymous.add(option);  }  else  {  final  Set  triggers  =  option.getTriggers();  for  (Iterator  j  =  triggers.iterator();  j.hasNext();)  {      [BUGGY]  Option  option  =  i.getOption(j,  description);  [BUGGY]      newOptionMap.put(j.next(),  option);  }  newPrefixes.addAll(option.getPrefixes());  }  [CLASS]  GroupImpl  [METHOD]  <init>  [RETURN_TYPE]  String,int,int,boolean)  List  options  String  name  String  description  final  int  minimum  final  int  maximum  final  boolean  required  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  required  SortedMap  newOptionMap  optionMap  Iterator  i  j  List  anonymous  newAnonymous  options  Option  option  String  description  name  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	103	103	1	replace	Option  option  =  i.getOption(j,  description);	  Option    option    =    option.getOption(j,    description);    	non-compiled	[CE]  illegal  start  of  expression	33	None	replace
64	[BUG]  [BUGGY]  Option  option  =  options.get(j.next());  [CE]  illegal  start  of  expression  [FE]                      OptionException      [CONTEXT]      if  (option  instanceof  Argument)  {  i.remove();  newAnonymous.add(option);  }  else  {  final  Set  triggers  =  option.getTriggers();  for  (Iterator  j  =  triggers.iterator();  j.hasNext();)  {      [BUGGY]  Option  option  =  options.get(j.next());  [BUGGY]      newOptionMap.put(j.next(),  option);  }  newPrefixes.addAll(option.getPrefixes());  }  [CLASS]  GroupImpl  [METHOD]  <init>  [RETURN_TYPE]  String,int,int,boolean)  List  options  String  name  String  description  final  int  minimum  final  int  maximum  final  boolean  required  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  required  SortedMap  newOptionMap  optionMap  Iterator  i  j  List  anonymous  newAnonymous  options  Option  option  String  description  name  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	103	103	1	replace	Option  option  =  options.get(j.next());	  Option    option    =    options.next();    	non-compiled	[CE]  illegal  start  of  expression	16	None	replace
65	[BUG]  [BUGGY]  Option  option  =  options.getOption(j.next());  [CE]  illegal  start  of  expression  [FE]                        OptionException      [CONTEXT]      if  (option  instanceof  Argument)  {  i.remove();  newAnonymous.add(option);  }  else  {  final  Set  triggers  =  option.getTriggers();  for  (Iterator  j  =  triggers.iterator();  j.hasNext();)  {      [BUGGY]  Option  option  =  options.getOption(j.next());  [BUGGY]      newOptionMap.put(j.next(),  option);  }  newPrefixes.addAll(option.getPrefixes());  }  [CLASS]  GroupImpl  [METHOD]  <init>  [RETURN_TYPE]  String,int,int,boolean)  List  options  String  name  String  description  final  int  minimum  final  int  maximum  final  boolean  required  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  required  SortedMap  newOptionMap  optionMap  Iterator  i  j  List  anonymous  newAnonymous  options  Option  option  String  description  name  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	103	103	1	replace	Option  option  =  options.getOption(j.next());	  Option    option    =    options.next();    	non-compiled	[CE]  illegal  start  of  expression	16	None	replace
66	[BUG]  [BUGGY]  newOptionMap.put(j.next(),  i);  [CE]  illegal  start  of  expression  [FE]                OptionException      [CONTEXT]      if  (option  instanceof  Argument)  {  i.remove();  newAnonymous.add(option);  }  else  {  final  Set  triggers  =  option.getTriggers();  for  (Iterator  j  =  triggers.iterator();  j.hasNext();)  {      [BUGGY]  newOptionMap.put(j.next(),  i);  [BUGGY]      }  newPrefixes.addAll(option.getPrefixes());  }  [CLASS]  GroupImpl  [METHOD]  <init>  [RETURN_TYPE]  String,int,int,boolean)  List  options  String  name  String  description  final  int  minimum  final  int  maximum  final  boolean  required  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  required  SortedMap  newOptionMap  optionMap  Iterator  i  j  List  anonymous  newAnonymous  options  Option  option  String  description  name  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	103	103	1	replace	newOptionMap.put(j.next(),  i);	  newOptionMap.put(i.next(),    j);    	non-compiled	[CE]  illegal  start  of  expression	31	None	replace
67	[BUG]  [BUGGY]  newOptionMap.put(i.getKey(),  j);  [CE]  illegal  start  of  expression  [FE]                  OptionException      [CONTEXT]      if  (option  instanceof  Argument)  {  i.remove();  newAnonymous.add(option);  }  else  {  final  Set  triggers  =  option.getTriggers();  for  (Iterator  j  =  triggers.iterator();  j.hasNext();)  {      [BUGGY]  newOptionMap.put(i.getKey(),  j);  [BUGGY]      }  newPrefixes.addAll(option.getPrefixes());  }  [CLASS]  GroupImpl  [METHOD]  <init>  [RETURN_TYPE]  String,int,int,boolean)  List  options  String  name  String  description  final  int  minimum  final  int  maximum  final  boolean  required  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  required  SortedMap  newOptionMap  optionMap  Iterator  i  j  List  anonymous  newAnonymous  options  Option  option  String  description  name  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	103	103	1	replace	newOptionMap.put(i.getKey(),  j);	  newOptionMap.put(i.next(),    j);    	non-compiled	[CE]  illegal  start  of  expression	31	None	replace
68	[BUG]  [BUGGY]  newOptionMap.put(option.next(),  j,  minimum,  required);  [CE]  illegal  start  of  expression  [FE]                  OptionException      [CONTEXT]      if  (option  instanceof  Argument)  {  i.remove();  newAnonymous.add(option);  }  else  {  final  Set  triggers  =  option.getTriggers();  for  (Iterator  j  =  triggers.iterator();  j.hasNext();)  {      [BUGGY]  newOptionMap.put(option.next(),  j,  minimum,  required);  [BUGGY]      }  newPrefixes.addAll(option.getPrefixes());  }  [CLASS]  GroupImpl  [METHOD]  <init>  [RETURN_TYPE]  String,int,int,boolean)  List  options  String  name  String  description  final  int  minimum  final  int  maximum  final  boolean  required  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  required  SortedMap  newOptionMap  optionMap  Iterator  i  j  List  anonymous  newAnonymous  options  Option  option  String  description  name  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	103	103	1	replace	newOptionMap.put(option.next(),  j,  minimum,  required);	  newOptionMap.put(option.next(),    j,    required);    	non-compiled	[CE]  illegal  start  of  expression	32	None	replace
69	[BUG]  [BUGGY]  newOptionMap.put(option.next(),  j,  minimum);  [CE]  illegal  start  of  expression  [FE]                    OptionException      [CONTEXT]      if  (option  instanceof  Argument)  {  i.remove();  newAnonymous.add(option);  }  else  {  final  Set  triggers  =  option.getTriggers();  for  (Iterator  j  =  triggers.iterator();  j.hasNext();)  {      [BUGGY]  newOptionMap.put(option.next(),  j,  minimum);  [BUGGY]      }  newPrefixes.addAll(option.getPrefixes());  }  [CLASS]  GroupImpl  [METHOD]  <init>  [RETURN_TYPE]  String,int,int,boolean)  List  options  String  name  String  description  final  int  minimum  final  int  maximum  final  boolean  required  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  required  SortedMap  newOptionMap  optionMap  Iterator  i  j  List  anonymous  newAnonymous  options  Option  option  String  description  name  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	103	103	1	replace	newOptionMap.put(option.next(),  j,  minimum);	  newOptionMap.put(option.next(),    j,    required);    	non-compiled	[CE]  illegal  start  of  expression	32	None	replace
70	[BUG]  [BUGGY]  newOptionMap.put(option.next(),  j,  maximum);  [CE]  illegal  start  of  expression  [FE]                      OptionException      [CONTEXT]      if  (option  instanceof  Argument)  {  i.remove();  newAnonymous.add(option);  }  else  {  final  Set  triggers  =  option.getTriggers();  for  (Iterator  j  =  triggers.iterator();  j.hasNext();)  {      [BUGGY]  newOptionMap.put(option.next(),  j,  maximum);  [BUGGY]      }  newPrefixes.addAll(option.getPrefixes());  }  [CLASS]  GroupImpl  [METHOD]  <init>  [RETURN_TYPE]  String,int,int,boolean)  List  options  String  name  String  description  final  int  minimum  final  int  maximum  final  boolean  required  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  required  SortedMap  newOptionMap  optionMap  Iterator  i  j  List  anonymous  newAnonymous  options  Option  option  String  description  name  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	103	103	1	replace	newOptionMap.put(option.next(),  j,  maximum);	  newOptionMap.put(option.next(),    j,    required);    	non-compiled	[CE]  illegal  start  of  expression	32	None	replace
71	[BUG]  [BUGGY]  newOptionMap.put(option.getPrefix(),  i);  [CE]  illegal  start  of  expression  [FE]                OptionException      [CONTEXT]      if  (option  instanceof  Argument)  {  i.remove();  newAnonymous.add(option);  }  else  {  final  Set  triggers  =  option.getTriggers();  for  (Iterator  j  =  triggers.iterator();  j.hasNext();)  {      [BUGGY]  newOptionMap.put(option.getPrefix(),  i);  [BUGGY]      }  newPrefixes.addAll(option.getPrefixes());  }  [CLASS]  GroupImpl  [METHOD]  <init>  [RETURN_TYPE]  String,int,int,boolean)  List  options  String  name  String  description  final  int  minimum  final  int  maximum  final  boolean  required  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  required  SortedMap  newOptionMap  optionMap  Iterator  i  j  List  anonymous  newAnonymous  options  Option  option  String  description  name  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	103	103	1	replace	newOptionMap.put(option.getPrefix(),  i);	  newOptionMap.put(option.next(),    i);    	non-compiled	[CE]  illegal  start  of  expression	10	None	replace
72	[BUG]  [BUGGY]  newOptionMap.put(i.getKey(),  j.next());  [CE]  illegal  start  of  expression  [FE]                  OptionException      [CONTEXT]      if  (option  instanceof  Argument)  {  i.remove();  newAnonymous.add(option);  }  else  {  final  Set  triggers  =  option.getTriggers();  for  (Iterator  j  =  triggers.iterator();  j.hasNext();)  {      [BUGGY]  newOptionMap.put(i.getKey(),  j.next());  [BUGGY]      }  newPrefixes.addAll(option.getPrefixes());  }  [CLASS]  GroupImpl  [METHOD]  <init>  [RETURN_TYPE]  String,int,int,boolean)  List  options  String  name  String  description  final  int  minimum  final  int  maximum  final  boolean  required  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  required  SortedMap  newOptionMap  optionMap  Iterator  i  j  List  anonymous  newAnonymous  options  Option  option  String  description  name  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	103	103	1	replace	newOptionMap.put(i.getKey(),  j.next());	  newOptionMap.put(i.next(),    options);    	non-compiled	[CE]  illegal  start  of  expression	11	None	replace
73	[BUG]  [BUGGY]  Option  option  =(Option)j.next(),  triggers);  [CE]  illegal  start  of  expression  [FE]              OptionException      [CONTEXT]      if  (option  instanceof  Argument)  {  i.remove();  newAnonymous.add(option);  }  else  {  final  Set  triggers  =  option.getTriggers();  for  (Iterator  j  =  triggers.iterator();  j.hasNext();)  {      [BUGGY]  Option  option  =(Option)j.next(),  triggers);  [BUGGY]      newOptionMap.put(j.next(),  option);  }  newPrefixes.addAll(option.getPrefixes());  }  [CLASS]  GroupImpl  [METHOD]  <init>  [RETURN_TYPE]  String,int,int,boolean)  List  options  String  name  String  description  final  int  minimum  final  int  maximum  final  boolean  required  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  required  SortedMap  newOptionMap  optionMap  Iterator  i  j  List  anonymous  newAnonymous  options  Option  option  String  description  name  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	103	103	1	replace	Option  option  =(Option)j.next(),  triggers);	  Option    option    =(Option)j.next(),    options);    	non-compiled	[CE]  illegal  start  of  expression	18	None	replace
74	[BUG]  [BUGGY]  Option  option  =(Option)j.next(),  newAnonymous);  [CE]  illegal  start  of  expression  [FE]                OptionException      [CONTEXT]      if  (option  instanceof  Argument)  {  i.remove();  newAnonymous.add(option);  }  else  {  final  Set  triggers  =  option.getTriggers();  for  (Iterator  j  =  triggers.iterator();  j.hasNext();)  {      [BUGGY]  Option  option  =(Option)j.next(),  newAnonymous);  [BUGGY]      newOptionMap.put(j.next(),  option);  }  newPrefixes.addAll(option.getPrefixes());  }  [CLASS]  GroupImpl  [METHOD]  <init>  [RETURN_TYPE]  String,int,int,boolean)  List  options  String  name  String  description  final  int  minimum  final  int  maximum  final  boolean  required  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  required  SortedMap  newOptionMap  optionMap  Iterator  i  j  List  anonymous  newAnonymous  options  Option  option  String  description  name  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	103	103	1	replace	Option  option  =(Option)j.next(),  newAnonymous);	  Option    option    =(Option)j.next(),    options);    	non-compiled	[CE]  illegal  start  of  expression	18	None	replace
75	[BUG]  [BUGGY]  Option  option  =(Option)j.next(),  options,  required);  [CE]  illegal  start  of  expression  [FE]                  OptionException      [CONTEXT]      if  (option  instanceof  Argument)  {  i.remove();  newAnonymous.add(option);  }  else  {  final  Set  triggers  =  option.getTriggers();  for  (Iterator  j  =  triggers.iterator();  j.hasNext();)  {      [BUGGY]  Option  option  =(Option)j.next(),  options,  required);  [BUGGY]      newOptionMap.put(j.next(),  option);  }  newPrefixes.addAll(option.getPrefixes());  }  [CLASS]  GroupImpl  [METHOD]  <init>  [RETURN_TYPE]  String,int,int,boolean)  List  options  String  name  String  description  final  int  minimum  final  int  maximum  final  boolean  required  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  required  SortedMap  newOptionMap  optionMap  Iterator  i  j  List  anonymous  newAnonymous  options  Option  option  String  description  name  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	103	103	1	replace	Option  option  =(Option)j.next(),  options,  required);	  Option    option    =(Option)j.next(),    options);    	non-compiled	[CE]  illegal  start  of  expression	18	None	replace
76	[BUG]  [BUGGY]  Option  option  =  j.getOption(description);  [CE]  illegal  start  of  expression  [FE]              OptionException      [CONTEXT]      if  (option  instanceof  Argument)  {  i.remove();  newAnonymous.add(option);  }  else  {  final  Set  triggers  =  option.getTriggers();  for  (Iterator  j  =  triggers.iterator();  j.hasNext();)  {      [BUGGY]  Option  option  =  j.getOption(description);  [BUGGY]      newOptionMap.put(j.next(),  option);  }  newPrefixes.addAll(option.getPrefixes());  }  [CLASS]  GroupImpl  [METHOD]  <init>  [RETURN_TYPE]  String,int,int,boolean)  List  options  String  name  String  description  final  int  minimum  final  int  maximum  final  boolean  required  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  required  SortedMap  newOptionMap  optionMap  Iterator  i  j  List  anonymous  newAnonymous  options  Option  option  String  description  name  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	103	103	1	replace	Option  option  =  j.getOption(description);	  Option    option    =    j.getOption(option);    	non-compiled	[CE]  illegal  start  of  expression	26	None	replace
77	[BUG]  [BUGGY]  Option  option  =  options.getOption(i,  required);  [CE]  illegal  start  of  expression  [FE]                OptionException      [CONTEXT]      if  (option  instanceof  Argument)  {  i.remove();  newAnonymous.add(option);  }  else  {  final  Set  triggers  =  option.getTriggers();  for  (Iterator  j  =  triggers.iterator();  j.hasNext();)  {      [BUGGY]  Option  option  =  options.getOption(i,  required);  [BUGGY]      newOptionMap.put(j.next(),  option);  }  newPrefixes.addAll(option.getPrefixes());  }  [CLASS]  GroupImpl  [METHOD]  <init>  [RETURN_TYPE]  String,int,int,boolean)  List  options  String  name  String  description  final  int  minimum  final  int  maximum  final  boolean  required  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  required  SortedMap  newOptionMap  optionMap  Iterator  i  j  List  anonymous  newAnonymous  options  Option  option  String  description  name  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	103	103	1	replace	Option  option  =  options.getOption(i,  required);	  Option    option    =    options.getOption(j,    required);    	non-compiled	[CE]  illegal  start  of  expression	9	None	replace
78	[BUG]  [BUGGY]  Option  option  =  options.getOption(j,  minimum);  [CE]  illegal  start  of  expression  [FE]                  OptionException      [CONTEXT]      if  (option  instanceof  Argument)  {  i.remove();  newAnonymous.add(option);  }  else  {  final  Set  triggers  =  option.getTriggers();  for  (Iterator  j  =  triggers.iterator();  j.hasNext();)  {      [BUGGY]  Option  option  =  options.getOption(j,  minimum);  [BUGGY]      newOptionMap.put(j.next(),  option);  }  newPrefixes.addAll(option.getPrefixes());  }  [CLASS]  GroupImpl  [METHOD]  <init>  [RETURN_TYPE]  String,int,int,boolean)  List  options  String  name  String  description  final  int  minimum  final  int  maximum  final  boolean  required  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  required  SortedMap  newOptionMap  optionMap  Iterator  i  j  List  anonymous  newAnonymous  options  Option  option  String  description  name  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	103	103	1	replace	Option  option  =  options.getOption(j,  minimum);	  Option    option    =    options.getOption(j,    required);    	non-compiled	[CE]  illegal  start  of  expression	9	None	replace
79	[BUG]  [BUGGY]  Option  option  =  options.getOption(j,  maximum);  [CE]  illegal  start  of  expression  [FE]                    OptionException      [CONTEXT]      if  (option  instanceof  Argument)  {  i.remove();  newAnonymous.add(option);  }  else  {  final  Set  triggers  =  option.getTriggers();  for  (Iterator  j  =  triggers.iterator();  j.hasNext();)  {      [BUGGY]  Option  option  =  options.getOption(j,  maximum);  [BUGGY]      newOptionMap.put(j.next(),  option);  }  newPrefixes.addAll(option.getPrefixes());  }  [CLASS]  GroupImpl  [METHOD]  <init>  [RETURN_TYPE]  String,int,int,boolean)  List  options  String  name  String  description  final  int  minimum  final  int  maximum  final  boolean  required  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  required  SortedMap  newOptionMap  optionMap  Iterator  i  j  List  anonymous  newAnonymous  options  Option  option  String  description  name  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	103	103	1	replace	Option  option  =  options.getOption(j,  maximum);	  Option    option    =    options.getOption(j,    required);    	non-compiled	[CE]  illegal  start  of  expression	9	None	replace
80	[BUG]  [BUGGY]  Option  option  =  options.getOption(minor,  required);  [CE]  illegal  start  of  expression  [FE]                      OptionException      [CONTEXT]      if  (option  instanceof  Argument)  {  i.remove();  newAnonymous.add(option);  }  else  {  final  Set  triggers  =  option.getTriggers();  for  (Iterator  j  =  triggers.iterator();  j.hasNext();)  {      [BUGGY]  Option  option  =  options.getOption(minor,  required);  [BUGGY]      newOptionMap.put(j.next(),  option);  }  newPrefixes.addAll(option.getPrefixes());  }  [CLASS]  GroupImpl  [METHOD]  <init>  [RETURN_TYPE]  String,int,int,boolean)  List  options  String  name  String  description  final  int  minimum  final  int  maximum  final  boolean  required  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  required  SortedMap  newOptionMap  optionMap  Iterator  i  j  List  anonymous  newAnonymous  options  Option  option  String  description  name  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	103	103	1	replace	Option  option  =  options.getOption(minor,  required);	  Option    option    =    options.getOption(j,    required);    	non-compiled	[CE]  illegal  start  of  expression	9	None	replace
81	[BUG]  [BUGGY]  Option  option  =  option.getOption(i,  j);  [CE]  illegal  start  of  expression  [FE]                OptionException      [CONTEXT]      if  (option  instanceof  Argument)  {  i.remove();  newAnonymous.add(option);  }  else  {  final  Set  triggers  =  option.getTriggers();  for  (Iterator  j  =  triggers.iterator();  j.hasNext();)  {      [BUGGY]  Option  option  =  option.getOption(i,  j);  [BUGGY]      newOptionMap.put(j.next(),  option);  }  newPrefixes.addAll(option.getPrefixes());  }  [CLASS]  GroupImpl  [METHOD]  <init>  [RETURN_TYPE]  String,int,int,boolean)  List  options  String  name  String  description  final  int  minimum  final  int  maximum  final  boolean  required  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  required  SortedMap  newOptionMap  optionMap  Iterator  i  j  List  anonymous  newAnonymous  options  Option  option  String  description  name  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	103	103	1	replace	Option  option  =  option.getOption(i,  j);	  Option    option    =    option.getOption(j,    i);    	non-compiled	[CE]  illegal  start  of  expression	27	None	replace
82	[BUG]  [BUGGY]  Option  option  =  j.getOption(option,  i);  [CE]  illegal  start  of  expression  [FE]                  OptionException      [CONTEXT]      if  (option  instanceof  Argument)  {  i.remove();  newAnonymous.add(option);  }  else  {  final  Set  triggers  =  option.getTriggers();  for  (Iterator  j  =  triggers.iterator();  j.hasNext();)  {      [BUGGY]  Option  option  =  j.getOption(option,  i);  [BUGGY]      newOptionMap.put(j.next(),  option);  }  newPrefixes.addAll(option.getPrefixes());  }  [CLASS]  GroupImpl  [METHOD]  <init>  [RETURN_TYPE]  String,int,int,boolean)  List  options  String  name  String  description  final  int  minimum  final  int  maximum  final  boolean  required  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  required  SortedMap  newOptionMap  optionMap  Iterator  i  j  List  anonymous  newAnonymous  options  Option  option  String  description  name  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	103	103	1	replace	Option  option  =  j.getOption(option,  i);	  Option    option    =    option.getOption(j,    i);    	non-compiled	[CE]  illegal  start  of  expression	27	None	replace
83	[BUG]  [BUGGY]  Option  option  =  option.getOption(j,  i  +  1);  [CE]  illegal  start  of  expression  [FE]                    OptionException      [CONTEXT]      if  (option  instanceof  Argument)  {  i.remove();  newAnonymous.add(option);  }  else  {  final  Set  triggers  =  option.getTriggers();  for  (Iterator  j  =  triggers.iterator();  j.hasNext();)  {      [BUGGY]  Option  option  =  option.getOption(j,  i  +  1);  [BUGGY]      newOptionMap.put(j.next(),  option);  }  newPrefixes.addAll(option.getPrefixes());  }  [CLASS]  GroupImpl  [METHOD]  <init>  [RETURN_TYPE]  String,int,int,boolean)  List  options  String  name  String  description  final  int  minimum  final  int  maximum  final  boolean  required  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  required  SortedMap  newOptionMap  optionMap  Iterator  i  j  List  anonymous  newAnonymous  options  Option  option  String  description  name  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	103	103	1	replace	Option  option  =  option.getOption(j,  i  +  1);	  Option    option    =    option.getOption(j,    i);    	non-compiled	[CE]  illegal  start  of  expression	27	None	replace
84	[BUG]  [BUGGY]  newOptionMap.put(option.getKey(),  j,  required);  [CE]  illegal  start  of  expression  [FE]            OptionException      [CONTEXT]      if  (option  instanceof  Argument)  {  i.remove();  newAnonymous.add(option);  }  else  {  final  Set  triggers  =  option.getTriggers();  for  (Iterator  j  =  triggers.iterator();  j.hasNext();)  {      [BUGGY]  newOptionMap.put(option.getKey(),  j,  required);  [BUGGY]      }  newPrefixes.addAll(option.getPrefixes());  }  [CLASS]  GroupImpl  [METHOD]  <init>  [RETURN_TYPE]  String,int,int,boolean)  List  options  String  name  String  description  final  int  minimum  final  int  maximum  final  boolean  required  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  required  SortedMap  newOptionMap  optionMap  Iterator  i  j  List  anonymous  newAnonymous  options  Option  option  String  description  name  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	103	103	1	replace	newOptionMap.put(option.getKey(),  j,  required);	  newOptionMap.put(option.getKey(),    j);    	non-compiled	[CE]  illegal  start  of  expression	3	None	replace
85	[BUG]  [BUGGY]  newOptionMap.put(option.getKey(),  j,  description);  [CE]  illegal  start  of  expression  [FE]              OptionException      [CONTEXT]      if  (option  instanceof  Argument)  {  i.remove();  newAnonymous.add(option);  }  else  {  final  Set  triggers  =  option.getTriggers();  for  (Iterator  j  =  triggers.iterator();  j.hasNext();)  {      [BUGGY]  newOptionMap.put(option.getKey(),  j,  description);  [BUGGY]      }  newPrefixes.addAll(option.getPrefixes());  }  [CLASS]  GroupImpl  [METHOD]  <init>  [RETURN_TYPE]  String,int,int,boolean)  List  options  String  name  String  description  final  int  minimum  final  int  maximum  final  boolean  required  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  required  SortedMap  newOptionMap  optionMap  Iterator  i  j  List  anonymous  newAnonymous  options  Option  option  String  description  name  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	103	103	1	replace	newOptionMap.put(option.getKey(),  j,  description);	  newOptionMap.put(option.getKey(),    j);    	non-compiled	[CE]  illegal  start  of  expression	3	None	replace
86	[BUG]  [BUGGY]  newOptionMap.put(option.getKey(),  j,  minimum);  [CE]  illegal  start  of  expression  [FE]                OptionException      [CONTEXT]      if  (option  instanceof  Argument)  {  i.remove();  newAnonymous.add(option);  }  else  {  final  Set  triggers  =  option.getTriggers();  for  (Iterator  j  =  triggers.iterator();  j.hasNext();)  {      [BUGGY]  newOptionMap.put(option.getKey(),  j,  minimum);  [BUGGY]      }  newPrefixes.addAll(option.getPrefixes());  }  [CLASS]  GroupImpl  [METHOD]  <init>  [RETURN_TYPE]  String,int,int,boolean)  List  options  String  name  String  description  final  int  minimum  final  int  maximum  final  boolean  required  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  required  SortedMap  newOptionMap  optionMap  Iterator  i  j  List  anonymous  newAnonymous  options  Option  option  String  description  name  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	103	103	1	replace	newOptionMap.put(option.getKey(),  j,  minimum);	  newOptionMap.put(option.getKey(),    j);    	non-compiled	[CE]  illegal  start  of  expression	3	None	replace
87	[BUG]  [BUGGY]  newOptionMap.put(option.getTriggers(),  j,  maximum);  [CE]  illegal  start  of  expression  [FE]              OptionException      [CONTEXT]      if  (option  instanceof  Argument)  {  i.remove();  newAnonymous.add(option);  }  else  {  final  Set  triggers  =  option.getTriggers();  for  (Iterator  j  =  triggers.iterator();  j.hasNext();)  {      [BUGGY]  newOptionMap.put(option.getTriggers(),  j,  maximum);  [BUGGY]      }  newPrefixes.addAll(option.getPrefixes());  }  [CLASS]  GroupImpl  [METHOD]  <init>  [RETURN_TYPE]  String,int,int,boolean)  List  options  String  name  String  description  final  int  minimum  final  int  maximum  final  boolean  required  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  required  SortedMap  newOptionMap  optionMap  Iterator  i  j  List  anonymous  newAnonymous  options  Option  option  String  description  name  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	103	103	1	replace	newOptionMap.put(option.getTriggers(),  j,  maximum);	  newOptionMap.put(option.getTriggers(),    j);    	non-compiled	[CE]  illegal  start  of  expression	39	None	replace
88	[BUG]  [BUGGY]  Option  option  =  options.getOption(i,  j,  maximum);  [CE]  illegal  start  of  expression  [FE]                  OptionException      [CONTEXT]      if  (option  instanceof  Argument)  {  i.remove();  newAnonymous.add(option);  }  else  {  final  Set  triggers  =  option.getTriggers();  for  (Iterator  j  =  triggers.iterator();  j.hasNext();)  {      [BUGGY]  Option  option  =  options.getOption(i,  j,  maximum);  [BUGGY]      newOptionMap.put(j.next(),  option);  }  newPrefixes.addAll(option.getPrefixes());  }  [CLASS]  GroupImpl  [METHOD]  <init>  [RETURN_TYPE]  String,int,int,boolean)  List  options  String  name  String  description  final  int  minimum  final  int  maximum  final  boolean  required  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  required  SortedMap  newOptionMap  optionMap  Iterator  i  j  List  anonymous  newAnonymous  options  Option  option  String  description  name  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	103	103	1	replace	Option  option  =  options.getOption(i,  j,  maximum);	  Option    option    =    options.getOption(i,    j);    	non-compiled	[CE]  illegal  start  of  expression	12	None	replace
89	[BUG]  [BUGGY]  Option  option  =  options.getOption(name,  j,  minimum);  [CE]  illegal  start  of  expression  [FE]                  OptionException      [CONTEXT]      if  (option  instanceof  Argument)  {  i.remove();  newAnonymous.add(option);  }  else  {  final  Set  triggers  =  option.getTriggers();  for  (Iterator  j  =  triggers.iterator();  j.hasNext();)  {      [BUGGY]  Option  option  =  options.getOption(name,  j,  minimum);  [BUGGY]      newOptionMap.put(j.next(),  option);  }  newPrefixes.addAll(option.getPrefixes());  }  [CLASS]  GroupImpl  [METHOD]  <init>  [RETURN_TYPE]  String,int,int,boolean)  List  options  String  name  String  description  final  int  minimum  final  int  maximum  final  boolean  required  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  required  SortedMap  newOptionMap  optionMap  Iterator  i  j  List  anonymous  newAnonymous  options  Option  option  String  description  name  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	103	103	1	replace	Option  option  =  options.getOption(name,  j,  minimum);	  Option    option    =    options.getOption(name,    j);    	non-compiled	[CE]  illegal  start  of  expression	20	None	replace
90	[BUG]  [BUGGY]  Option  option  =(Option)j.next();  newAnonymous.addAll(option.getTriggers(),  option);  [CE]  illegal  start  of  expression  [FE]                OptionException      [CONTEXT]      if  (option  instanceof  Argument)  {  i.remove();  newAnonymous.add(option);  }  else  {  final  Set  triggers  =  option.getTriggers();  for  (Iterator  j  =  triggers.iterator();  j.hasNext();)  {      [BUGGY]  Option  option  =(Option)j.next();  newAnonymous.addAll(option.getTriggers(),  option);  [BUGGY]      newOptionMap.put(j.next(),  option);  }  newPrefixes.addAll(option.getPrefixes());  }  [CLASS]  GroupImpl  [METHOD]  <init>  [RETURN_TYPE]  String,int,int,boolean)  List  options  String  name  String  description  final  int  minimum  final  int  maximum  final  boolean  required  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  required  SortedMap  newOptionMap  optionMap  Iterator  i  j  List  anonymous  newAnonymous  options  Option  option  String  description  name  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	103	103	1	replace	Option  option  =(Option)j.next();  newAnonymous.addAll(option.getTriggers(),  option);	  Option    option    =(Option)j.next();    newAnonymous.addAll(option.getPrefixes(),    option);    	non-compiled	[CE]  illegal  start  of  expression	2	None	replace
91	[BUG]  [BUGGY]  Option  option  =  options.getOption(name,  j.next(),  options);  [CE]  illegal  start  of  expression  [FE]                OptionException      [CONTEXT]      if  (option  instanceof  Argument)  {  i.remove();  newAnonymous.add(option);  }  else  {  final  Set  triggers  =  option.getTriggers();  for  (Iterator  j  =  triggers.iterator();  j.hasNext();)  {      [BUGGY]  Option  option  =  options.getOption(name,  j.next(),  options);  [BUGGY]      newOptionMap.put(j.next(),  option);  }  newPrefixes.addAll(option.getPrefixes());  }  [CLASS]  GroupImpl  [METHOD]  <init>  [RETURN_TYPE]  String,int,int,boolean)  List  options  String  name  String  description  final  int  minimum  final  int  maximum  final  boolean  required  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  required  SortedMap  newOptionMap  optionMap  Iterator  i  j  List  anonymous  newAnonymous  options  Option  option  String  description  name  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	103	103	1	replace	Option  option  =  options.getOption(name,  j.next(),  options);	  Option    option    =    options.getOption(name,    j.next());    	non-compiled	[CE]  illegal  start  of  expression	44	None	replace
92	[BUG]  [BUGGY]  newOptionMap.put(option.getKey(),  options);  [CE]  illegal  start  of  expression  [FE]              OptionException      [CONTEXT]      if  (option  instanceof  Argument)  {  i.remove();  newAnonymous.add(option);  }  else  {  final  Set  triggers  =  option.getTriggers();  for  (Iterator  j  =  triggers.iterator();  j.hasNext();)  {      [BUGGY]  newOptionMap.put(option.getKey(),  options);  [BUGGY]      }  newPrefixes.addAll(option.getPrefixes());  }  [CLASS]  GroupImpl  [METHOD]  <init>  [RETURN_TYPE]  String,int,int,boolean)  List  options  String  name  String  description  final  int  minimum  final  int  maximum  final  boolean  required  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  required  SortedMap  newOptionMap  optionMap  Iterator  i  j  List  anonymous  newAnonymous  options  Option  option  String  description  name  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	103	103	1	replace	newOptionMap.put(option.getKey(),  options);	  newOptionMap.put(j.getKey(),    options);    	non-compiled	[CE]  illegal  start  of  expression	4	None	replace
93	[BUG]  [BUGGY]  newOptionMap.put(j.getValue(),  options);  [CE]  illegal  start  of  expression  [FE]                OptionException      [CONTEXT]      if  (option  instanceof  Argument)  {  i.remove();  newAnonymous.add(option);  }  else  {  final  Set  triggers  =  option.getTriggers();  for  (Iterator  j  =  triggers.iterator();  j.hasNext();)  {      [BUGGY]  newOptionMap.put(j.getValue(),  options);  [BUGGY]      }  newPrefixes.addAll(option.getPrefixes());  }  [CLASS]  GroupImpl  [METHOD]  <init>  [RETURN_TYPE]  String,int,int,boolean)  List  options  String  name  String  description  final  int  minimum  final  int  maximum  final  boolean  required  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  required  SortedMap  newOptionMap  optionMap  Iterator  i  j  List  anonymous  newAnonymous  options  Option  option  String  description  name  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	103	103	1	replace	newOptionMap.put(j.getValue(),  options);	  newOptionMap.put(j.getKey(),    options);    	non-compiled	[CE]  illegal  start  of  expression	4	None	replace
94	[BUG]  [BUGGY]  Option  option  =  options.getValue();  [CE]  illegal  start  of  expression  [FE]                    OptionException      [CONTEXT]      if  (option  instanceof  Argument)  {  i.remove();  newAnonymous.add(option);  }  else  {  final  Set  triggers  =  option.getTriggers();  for  (Iterator  j  =  triggers.iterator();  j.hasNext();)  {      [BUGGY]  Option  option  =  options.getValue();  [BUGGY]      newOptionMap.put(j.next(),  option);  }  newPrefixes.addAll(option.getPrefixes());  }  [CLASS]  GroupImpl  [METHOD]  <init>  [RETURN_TYPE]  String,int,int,boolean)  List  options  String  name  String  description  final  int  minimum  final  int  maximum  final  boolean  required  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  required  SortedMap  newOptionMap  optionMap  Iterator  i  j  List  anonymous  newAnonymous  options  Option  option  String  description  name  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	103	103	1	replace	Option  option  =  options.getValue();	  Option    option    =    j.getValue();    	non-compiled	[CE]  illegal  start  of  expression	15	None	replace
95	[BUG]  [BUGGY]  newOptionMap.put(option.getName(),  j);  [CE]  illegal  start  of  expression  [FE]              OptionException      [CONTEXT]      if  (option  instanceof  Argument)  {  i.remove();  newAnonymous.add(option);  }  else  {  final  Set  triggers  =  option.getTriggers();  for  (Iterator  j  =  triggers.iterator();  j.hasNext();)  {      [BUGGY]  newOptionMap.put(option.getName(),  j);  [BUGGY]      }  newPrefixes.addAll(option.getPrefixes());  }  [CLASS]  GroupImpl  [METHOD]  <init>  [RETURN_TYPE]  String,int,int,boolean)  List  options  String  name  String  description  final  int  minimum  final  int  maximum  final  boolean  required  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  required  SortedMap  newOptionMap  optionMap  Iterator  i  j  List  anonymous  newAnonymous  options  Option  option  String  description  name  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	103	103	1	replace	newOptionMap.put(option.getName(),  j);	  newOptionMap.put(option.getPrefix(),    j);    	non-compiled	[CE]  illegal  start  of  expression	30	None	replace
96	[BUG]  [BUGGY]  newOptionMap.put(option.next(),  options);  [CE]  illegal  start  of  expression  [FE]                  OptionException      [CONTEXT]      if  (option  instanceof  Argument)  {  i.remove();  newAnonymous.add(option);  }  else  {  final  Set  triggers  =  option.getTriggers();  for  (Iterator  j  =  triggers.iterator();  j.hasNext();)  {      [BUGGY]  newOptionMap.put(option.next(),  options);  [BUGGY]      }  newPrefixes.addAll(option.getPrefixes());  }  [CLASS]  GroupImpl  [METHOD]  <init>  [RETURN_TYPE]  String,int,int,boolean)  List  options  String  name  String  description  final  int  minimum  final  int  maximum  final  boolean  required  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  required  SortedMap  newOptionMap  optionMap  Iterator  i  j  List  anonymous  newAnonymous  options  Option  option  String  description  name  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	103	103	1	replace	newOptionMap.put(option.next(),  options);	  newOptionMap.put(i.next(),    options);    	non-compiled	[CE]  illegal  start  of  expression	11	None	replace
97	[BUG]  [BUGGY]  Option  option  =(Option)j.getAnonymousValue();  [CE]  illegal  start  of  expression  [FE]            OptionException      [CONTEXT]      if  (option  instanceof  Argument)  {  i.remove();  newAnonymous.add(option);  }  else  {  final  Set  triggers  =  option.getTriggers();  for  (Iterator  j  =  triggers.iterator();  j.hasNext();)  {      [BUGGY]  Option  option  =(Option)j.getAnonymousValue();  [BUGGY]      newOptionMap.put(j.next(),  option);  }  newPrefixes.addAll(option.getPrefixes());  }  [CLASS]  GroupImpl  [METHOD]  <init>  [RETURN_TYPE]  String,int,int,boolean)  List  options  String  name  String  description  final  int  minimum  final  int  maximum  final  boolean  required  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  required  SortedMap  newOptionMap  optionMap  Iterator  i  j  List  anonymous  newAnonymous  options  Option  option  String  description  name  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	103	103	1	replace	Option  option  =(Option)j.getAnonymousValue();	  Option    option    =(Option)j.getValue();    	non-compiled	[CE]  illegal  start  of  expression	17	None	replace
98	[BUG]  [BUGGY]  final  Option  option  =(Option)j.getNext();  [CE]  illegal  start  of  expression  [FE]                  OptionException      [CONTEXT]      if  (option  instanceof  Argument)  {  i.remove();  newAnonymous.add(option);  }  else  {  final  Set  triggers  =  option.getTriggers();  for  (Iterator  j  =  triggers.iterator();  j.hasNext();)  {      [BUGGY]  final  Option  option  =(Option)j.getNext();  [BUGGY]      newOptionMap.put(j.next(),  option);  }  newPrefixes.addAll(option.getPrefixes());  }  [CLASS]  GroupImpl  [METHOD]  <init>  [RETURN_TYPE]  String,int,int,boolean)  List  options  String  name  String  description  final  int  minimum  final  int  maximum  final  boolean  required  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  required  SortedMap  newOptionMap  optionMap  Iterator  i  j  List  anonymous  newAnonymous  options  Option  option  String  description  name  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	103	103	1	replace	final  Option  option  =(Option)j.getNext();	  final    Option    option    =(Option)i.next();    	non-compiled	[CE]  illegal  start  of  expression	25	None	replace
99	[BUG]  [BUGGY]  Option  option  =(Option)j.next();  newAnonymous.addAll(option.getTriggers(),  options);  [CE]  illegal  start  of  expression  [FE]              OptionException      [CONTEXT]      if  (option  instanceof  Argument)  {  i.remove();  newAnonymous.add(option);  }  else  {  final  Set  triggers  =  option.getTriggers();  for  (Iterator  j  =  triggers.iterator();  j.hasNext();)  {      [BUGGY]  Option  option  =(Option)j.next();  newAnonymous.addAll(option.getTriggers(),  options);  [BUGGY]      newOptionMap.put(j.next(),  option);  }  newPrefixes.addAll(option.getPrefixes());  }  [CLASS]  GroupImpl  [METHOD]  <init>  [RETURN_TYPE]  String,int,int,boolean)  List  options  String  name  String  description  final  int  minimum  final  int  maximum  final  boolean  required  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  required  SortedMap  newOptionMap  optionMap  Iterator  i  j  List  anonymous  newAnonymous  options  Option  option  String  description  name  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	103	103	1	replace	Option  option  =(Option)j.next();  newAnonymous.addAll(option.getTriggers(),  options);	  Option    option    =(Option)j.next();    newAnonymous.addAll(option.getPrefixes(),    options);    	non-compiled	[CE]  illegal  start  of  expression	1	None	replace
100	[BUG]  [BUGGY]  Option  option  =(Option)j.next();  newPrefixes.addAll(option.getPrefixes(),  options);  [CE]  illegal  start  of  expression  [FE]                OptionException      [CONTEXT]      if  (option  instanceof  Argument)  {  i.remove();  newAnonymous.add(option);  }  else  {  final  Set  triggers  =  option.getTriggers();  for  (Iterator  j  =  triggers.iterator();  j.hasNext();)  {      [BUGGY]  Option  option  =(Option)j.next();  newPrefixes.addAll(option.getPrefixes(),  options);  [BUGGY]      newOptionMap.put(j.next(),  option);  }  newPrefixes.addAll(option.getPrefixes());  }  [CLASS]  GroupImpl  [METHOD]  <init>  [RETURN_TYPE]  String,int,int,boolean)  List  options  String  name  String  description  final  int  minimum  final  int  maximum  final  boolean  required  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  required  SortedMap  newOptionMap  optionMap  Iterator  i  j  List  anonymous  newAnonymous  options  Option  option  String  description  name  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	103	103	1	replace	Option  option  =(Option)j.next();  newPrefixes.addAll(option.getPrefixes(),  options);	  Option    option    =(Option)j.next();    newAnonymous.addAll(option.getPrefixes(),    options);    	non-compiled	[CE]  illegal  start  of  expression	1	None	replace
101	[BUG]  [BUGGY]  Option  option  =(Option)j.getOption();  [CE]  illegal  start  of  expression  [FE]            OptionException      [CONTEXT]      if  (option  instanceof  Argument)  {  i.remove();  newAnonymous.add(option);  }  else  {  final  Set  triggers  =  option.getTriggers();  for  (Iterator  j  =  triggers.iterator();  j.hasNext();)  {      [BUGGY]  Option  option  =(Option)j.getOption();  [BUGGY]      newOptionMap.put(j.next(),  option);  }  newPrefixes.addAll(option.getPrefixes());  }  [CLASS]  GroupImpl  [METHOD]  <init>  [RETURN_TYPE]  String,int,int,boolean)  List  options  String  name  String  description  final  int  minimum  final  int  maximum  final  boolean  required  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  required  SortedMap  newOptionMap  optionMap  Iterator  i  j  List  anonymous  newAnonymous  options  Option  option  String  description  name  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	103	103	1	replace	Option  option  =(Option)j.getOption();	  Option    option    =(Option)j.getObject();    	non-compiled	[CE]  illegal  start  of  expression	35	None	replace
102	[BUG]  [BUGGY]  Option  option  =(Option)j.getValue(),  options);  [CE]  illegal  start  of  expression  [FE]              OptionException      [CONTEXT]      if  (option  instanceof  Argument)  {  i.remove();  newAnonymous.add(option);  }  else  {  final  Set  triggers  =  option.getTriggers();  for  (Iterator  j  =  triggers.iterator();  j.hasNext();)  {      [BUGGY]  Option  option  =(Option)j.getValue(),  options);  [BUGGY]      newOptionMap.put(j.next(),  option);  }  newPrefixes.addAll(option.getPrefixes());  }  [CLASS]  GroupImpl  [METHOD]  <init>  [RETURN_TYPE]  String,int,int,boolean)  List  options  String  name  String  description  final  int  minimum  final  int  maximum  final  boolean  required  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  required  SortedMap  newOptionMap  optionMap  Iterator  i  j  List  anonymous  newAnonymous  options  Option  option  String  description  name  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	103	103	1	replace	Option  option  =(Option)j.getValue(),  options);	  Option    option    =(Option)j.next(),    options);    	non-compiled	[CE]  illegal  start  of  expression	18	None	replace
103	[BUG]  [BUGGY]  newAnonymous.addAll(option.getArguments());  [CE]  illegal  start  of  expression  [FE]                    OptionException      [CONTEXT]      if  (option  instanceof  Argument)  {  i.remove();  newAnonymous.add(option);  }  else  {  final  Set  triggers  =  option.getTriggers();  for  (Iterator  j  =  triggers.iterator();  j.hasNext();)  {      [BUGGY]  newAnonymous.addAll(option.getArguments());  [BUGGY]      }  newPrefixes.addAll(option.getPrefixes());  }  [CLASS]  GroupImpl  [METHOD]  <init>  [RETURN_TYPE]  String,int,int,boolean)  List  options  String  name  String  description  final  int  minimum  final  int  maximum  final  boolean  required  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  required  SortedMap  newOptionMap  optionMap  Iterator  i  j  List  anonymous  newAnonymous  options  Option  option  String  description  name  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	103	103	1	replace	newAnonymous.addAll(option.getArguments());	  newAnonymous.addAll(option.getPrefixes());    	non-compiled	[CE]  illegal  start  of  expression	13	None	replace
104	[BUG]  [BUGGY]  newAnonymous.addAll(option.getDescription());  [CE]  illegal  start  of  expression  [FE]                      OptionException      [CONTEXT]      if  (option  instanceof  Argument)  {  i.remove();  newAnonymous.add(option);  }  else  {  final  Set  triggers  =  option.getTriggers();  for  (Iterator  j  =  triggers.iterator();  j.hasNext();)  {      [BUGGY]  newAnonymous.addAll(option.getDescription());  [BUGGY]      }  newPrefixes.addAll(option.getPrefixes());  }  [CLASS]  GroupImpl  [METHOD]  <init>  [RETURN_TYPE]  String,int,int,boolean)  List  options  String  name  String  description  final  int  minimum  final  int  maximum  final  boolean  required  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  required  SortedMap  newOptionMap  optionMap  Iterator  i  j  List  anonymous  newAnonymous  options  Option  option  String  description  name  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	103	103	1	replace	newAnonymous.addAll(option.getDescription());	  newAnonymous.addAll(option.getPrefixes());    	non-compiled	[CE]  illegal  start  of  expression	13	None	replace
105	[BUG]  [BUGGY]  Option  option  =  option.getOption(j,  i,  required);  [CE]  illegal  start  of  expression  [FE]                OptionException      [CONTEXT]      if  (option  instanceof  Argument)  {  i.remove();  newAnonymous.add(option);  }  else  {  final  Set  triggers  =  option.getTriggers();  for  (Iterator  j  =  triggers.iterator();  j.hasNext();)  {      [BUGGY]  Option  option  =  option.getOption(j,  i,  required);  [BUGGY]      newOptionMap.put(j.next(),  option);  }  newPrefixes.addAll(option.getPrefixes());  }  [CLASS]  GroupImpl  [METHOD]  <init>  [RETURN_TYPE]  String,int,int,boolean)  List  options  String  name  String  description  final  int  minimum  final  int  maximum  final  boolean  required  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  required  SortedMap  newOptionMap  optionMap  Iterator  i  j  List  anonymous  newAnonymous  options  Option  option  String  description  name  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	103	103	1	replace	Option  option  =  option.getOption(j,  i,  required);	  Option    option    =    option.getOption(j,    i);    	non-compiled	[CE]  illegal  start  of  expression	27	None	replace
106	[BUG]  [BUGGY]  newOptionMap.put(j.getKey(),  option.next());  [CE]  illegal  start  of  expression  [FE]                  OptionException      [CONTEXT]      if  (option  instanceof  Argument)  {  i.remove();  newAnonymous.add(option);  }  else  {  final  Set  triggers  =  option.getTriggers();  for  (Iterator  j  =  triggers.iterator();  j.hasNext();)  {      [BUGGY]  newOptionMap.put(j.getKey(),  option.next());  [BUGGY]      }  newPrefixes.addAll(option.getPrefixes());  }  [CLASS]  GroupImpl  [METHOD]  <init>  [RETURN_TYPE]  String,int,int,boolean)  List  options  String  name  String  description  final  int  minimum  final  int  maximum  final  boolean  required  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  required  SortedMap  newOptionMap  optionMap  Iterator  i  j  List  anonymous  newAnonymous  options  Option  option  String  description  name  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	103	103	1	replace	newOptionMap.put(j.getKey(),  option.next());	  newOptionMap.put(j.getKey(),    j.next());    	non-compiled	[CE]  illegal  start  of  expression	28	None	replace
107	[BUG]  [BUGGY]  newOptionMap.put(j.getKey(),  options.next());  [CE]  illegal  start  of  expression  [FE]                    OptionException      [CONTEXT]      if  (option  instanceof  Argument)  {  i.remove();  newAnonymous.add(option);  }  else  {  final  Set  triggers  =  option.getTriggers();  for  (Iterator  j  =  triggers.iterator();  j.hasNext();)  {      [BUGGY]  newOptionMap.put(j.getKey(),  options.next());  [BUGGY]      }  newPrefixes.addAll(option.getPrefixes());  }  [CLASS]  GroupImpl  [METHOD]  <init>  [RETURN_TYPE]  String,int,int,boolean)  List  options  String  name  String  description  final  int  minimum  final  int  maximum  final  boolean  required  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  required  SortedMap  newOptionMap  optionMap  Iterator  i  j  List  anonymous  newAnonymous  options  Option  option  String  description  name  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	103	103	1	replace	newOptionMap.put(j.getKey(),  options.next());	  newOptionMap.put(j.getKey(),    j.next());    	non-compiled	[CE]  illegal  start  of  expression	28	None	replace
108	[BUG]  [BUGGY]  Option  option  =  options.getOption(j,  j);  [CE]  illegal  start  of  expression  [FE]            OptionException      [CONTEXT]      if  (option  instanceof  Argument)  {  i.remove();  newAnonymous.add(option);  }  else  {  final  Set  triggers  =  option.getTriggers();  for  (Iterator  j  =  triggers.iterator();  j.hasNext();)  {      [BUGGY]  Option  option  =  options.getOption(j,  j);  [BUGGY]      newOptionMap.put(j.next(),  option);  }  newPrefixes.addAll(option.getPrefixes());  }  [CLASS]  GroupImpl  [METHOD]  <init>  [RETURN_TYPE]  String,int,int,boolean)  List  options  String  name  String  description  final  int  minimum  final  int  maximum  final  boolean  required  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  required  SortedMap  newOptionMap  optionMap  Iterator  i  j  List  anonymous  newAnonymous  options  Option  option  String  description  name  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	103	103	1	replace	Option  option  =  options.getOption(j,  j);	  Option    option    =    options.getOption(j,    i);    	non-compiled	[CE]  illegal  start  of  expression	7	None	replace
109	[BUG]  [BUGGY]  Option  option  =  options.getOption(j,  i,  required);  [CE]  illegal  start  of  expression  [FE]              OptionException      [CONTEXT]      if  (option  instanceof  Argument)  {  i.remove();  newAnonymous.add(option);  }  else  {  final  Set  triggers  =  option.getTriggers();  for  (Iterator  j  =  triggers.iterator();  j.hasNext();)  {      [BUGGY]  Option  option  =  options.getOption(j,  i,  required);  [BUGGY]      newOptionMap.put(j.next(),  option);  }  newPrefixes.addAll(option.getPrefixes());  }  [CLASS]  GroupImpl  [METHOD]  <init>  [RETURN_TYPE]  String,int,int,boolean)  List  options  String  name  String  description  final  int  minimum  final  int  maximum  final  boolean  required  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  required  SortedMap  newOptionMap  optionMap  Iterator  i  j  List  anonymous  newAnonymous  options  Option  option  String  description  name  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	103	103	1	replace	Option  option  =  options.getOption(j,  i,  required);	  Option    option    =    options.getOption(j,    i);    	non-compiled	[CE]  illegal  start  of  expression	7	None	replace
110	[BUG]  [BUGGY]  Option  option  =  option.getOption(i);  newAnonymous.add(option);  [CE]  illegal  start  of  expression  [FE]                    OptionException      [CONTEXT]      if  (option  instanceof  Argument)  {  i.remove();  newAnonymous.add(option);  }  else  {  final  Set  triggers  =  option.getTriggers();  for  (Iterator  j  =  triggers.iterator();  j.hasNext();)  {      [BUGGY]  Option  option  =  option.getOption(i);  newAnonymous.add(option);  [BUGGY]      }  newPrefixes.addAll(option.getPrefixes());  }  [CLASS]  GroupImpl  [METHOD]  <init>  [RETURN_TYPE]  String,int,int,boolean)  List  options  String  name  String  description  final  int  minimum  final  int  maximum  final  boolean  required  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  required  SortedMap  newOptionMap  optionMap  Iterator  i  j  List  anonymous  newAnonymous  options  Option  option  String  description  name  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	103	103	1	replace	Option  option  =  option.getOption(i);  newAnonymous.add(option);	  Option    option    =    option.getOption(j);    newAnonymous.add(option);    	non-compiled	[CE]  illegal  start  of  expression	40	None	replace
111	[BUG]  [BUGGY]  Option  option  =  options.getOption(i,  prefixes);  [CE]  illegal  start  of  expression  [FE]                      OptionException      [CONTEXT]      if  (option  instanceof  Argument)  {  i.remove();  newAnonymous.add(option);  }  else  {  final  Set  triggers  =  option.getTriggers();  for  (Iterator  j  =  triggers.iterator();  j.hasNext();)  {      [BUGGY]  Option  option  =  options.getOption(i,  prefixes);  [BUGGY]      newOptionMap.put(j.next(),  option);  }  newPrefixes.addAll(option.getPrefixes());  }  [CLASS]  GroupImpl  [METHOD]  <init>  [RETURN_TYPE]  String,int,int,boolean)  List  options  String  name  String  description  final  int  minimum  final  int  maximum  final  boolean  required  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  required  SortedMap  newOptionMap  optionMap  Iterator  i  j  List  anonymous  newAnonymous  options  Option  option  String  description  name  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	103	103	1	replace	Option  option  =  options.getOption(i,  prefixes);	  Option    option    =    options.getOption(prefixes);    	non-compiled	[CE]  illegal  start  of  expression	22	None	replace
112	[BUG]  [BUGGY]  Option  option  =(Option)j.getValue();  i.remove();  [CE]  illegal  start  of  expression  [FE]                    OptionException      [CONTEXT]      if  (option  instanceof  Argument)  {  i.remove();  newAnonymous.add(option);  }  else  {  final  Set  triggers  =  option.getTriggers();  for  (Iterator  j  =  triggers.iterator();  j.hasNext();)  {      [BUGGY]  Option  option  =(Option)j.getValue();  i.remove();  [BUGGY]      }  newPrefixes.addAll(option.getPrefixes());  }  [CLASS]  GroupImpl  [METHOD]  <init>  [RETURN_TYPE]  String,int,int,boolean)  List  options  String  name  String  description  final  int  minimum  final  int  maximum  final  boolean  required  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  required  SortedMap  newOptionMap  optionMap  Iterator  i  j  List  anonymous  newAnonymous  options  Option  option  String  description  name  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	103	103	1	replace	Option  option  =(Option)j.getValue();  i.remove();	  Option    option    =(Option)j.next();    i.remove();    	non-compiled	[CE]  illegal  start  of  expression	43	None	replace
113	[BUG]  [BUGGY]  Option  option  =(Option)j.next();  newAnonymous.add(option,  options);  [CE]  illegal  start  of  expression  [FE]                      OptionException      [CONTEXT]      if  (option  instanceof  Argument)  {  i.remove();  newAnonymous.add(option);  }  else  {  final  Set  triggers  =  option.getTriggers();  for  (Iterator  j  =  triggers.iterator();  j.hasNext();)  {      [BUGGY]  Option  option  =(Option)j.next();  newAnonymous.add(option,  options);  [BUGGY]      }  newPrefixes.addAll(option.getPrefixes());  }  [CLASS]  GroupImpl  [METHOD]  <init>  [RETURN_TYPE]  String,int,int,boolean)  List  options  String  name  String  description  final  int  minimum  final  int  maximum  final  boolean  required  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  required  SortedMap  newOptionMap  optionMap  Iterator  i  j  List  anonymous  newAnonymous  options  Option  option  String  description  name  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	103	103	1	replace	Option  option  =(Option)j.next();  newAnonymous.add(option,  options);	  Option    option    =(Option)j.next();    newAnonymous.add(option);    	non-compiled	[CE]  illegal  start  of  expression	14	None	replace
114	[BUG]  [BUGGY]  Option  option  =(Option)j.getValue();  newAnonymous.add(option);  [CE]  illegal  start  of  expression  [FE]                        OptionException      [CONTEXT]      if  (option  instanceof  Argument)  {  i.remove();  newAnonymous.add(option);  }  else  {  final  Set  triggers  =  option.getTriggers();  for  (Iterator  j  =  triggers.iterator();  j.hasNext();)  {      [BUGGY]  Option  option  =(Option)j.getValue();  newAnonymous.add(option);  [BUGGY]      }  newPrefixes.addAll(option.getPrefixes());  }  [CLASS]  GroupImpl  [METHOD]  <init>  [RETURN_TYPE]  String,int,int,boolean)  List  options  String  name  String  description  final  int  minimum  final  int  maximum  final  boolean  required  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  required  SortedMap  newOptionMap  optionMap  Iterator  i  j  List  anonymous  newAnonymous  options  Option  option  String  description  name  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	103	103	1	replace	Option  option  =(Option)j.getValue();  newAnonymous.add(option);	  Option    option    =(Option)j.next();    newAnonymous.add(option);    	non-compiled	[CE]  illegal  start  of  expression	14	None	replace
115	[BUG]  [BUGGY]  Option  option  =  options.getOption(option);  [CE]  illegal  start  of  expression  [FE]              OptionException      [CONTEXT]      if  (option  instanceof  Argument)  {  i.remove();  newAnonymous.add(option);  }  else  {  final  Set  triggers  =  option.getTriggers();  for  (Iterator  j  =  triggers.iterator();  j.hasNext();)  {      [BUGGY]  Option  option  =  options.getOption(option);  [BUGGY]      newOptionMap.put(j.next(),  option);  }  newPrefixes.addAll(option.getPrefixes());  }  [CLASS]  GroupImpl  [METHOD]  <init>  [RETURN_TYPE]  String,int,int,boolean)  List  options  String  name  String  description  final  int  minimum  final  int  maximum  final  boolean  required  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  required  SortedMap  newOptionMap  optionMap  Iterator  i  j  List  anonymous  newAnonymous  options  Option  option  String  description  name  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	103	103	1	replace	Option  option  =  options.getOption(option);	  Option    option    =    j.getOption(option);    	non-compiled	[CE]  illegal  start  of  expression	26	None	replace
116	[BUG]  [BUGGY]  Option  option  =  option.getOption();  [CE]  illegal  start  of  expression  [FE]                    OptionException      [CONTEXT]      if  (option  instanceof  Argument)  {  i.remove();  newAnonymous.add(option);  }  else  {  final  Set  triggers  =  option.getTriggers();  for  (Iterator  j  =  triggers.iterator();  j.hasNext();)  {      [BUGGY]  Option  option  =  option.getOption();  [BUGGY]      newOptionMap.put(j.next(),  option);  }  newPrefixes.addAll(option.getPrefixes());  }  [CLASS]  GroupImpl  [METHOD]  <init>  [RETURN_TYPE]  String,int,int,boolean)  List  options  String  name  String  description  final  int  minimum  final  int  maximum  final  boolean  required  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  required  SortedMap  newOptionMap  optionMap  Iterator  i  j  List  anonymous  newAnonymous  options  Option  option  String  description  name  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	103	103	1	replace	Option  option  =  option.getOption();	  Option    option    =    option.next();    	non-compiled	[CE]  illegal  start  of  expression	37	None	replace
117	[BUG]  [BUGGY]  Option  option  =  option.getOption(j,  description,  required);  [CE]  illegal  start  of  expression  [FE]              OptionException      [CONTEXT]      if  (option  instanceof  Argument)  {  i.remove();  newAnonymous.add(option);  }  else  {  final  Set  triggers  =  option.getTriggers();  for  (Iterator  j  =  triggers.iterator();  j.hasNext();)  {      [BUGGY]  Option  option  =  option.getOption(j,  description,  required);  [BUGGY]      newOptionMap.put(j.next(),  option);  }  newPrefixes.addAll(option.getPrefixes());  }  [CLASS]  GroupImpl  [METHOD]  <init>  [RETURN_TYPE]  String,int,int,boolean)  List  options  String  name  String  description  final  int  minimum  final  int  maximum  final  boolean  required  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  required  SortedMap  newOptionMap  optionMap  Iterator  i  j  List  anonymous  newAnonymous  options  Option  option  String  description  name  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	103	103	1	replace	Option  option  =  option.getOption(j,  description,  required);	  Option    option    =    option.getOption(j,    description);    	non-compiled	[CE]  illegal  start  of  expression	33	None	replace
118	[BUG]  [BUGGY]  Option  option  =  option.getOption(j,  description,  minimum);  [CE]  illegal  start  of  expression  [FE]                OptionException      [CONTEXT]      if  (option  instanceof  Argument)  {  i.remove();  newAnonymous.add(option);  }  else  {  final  Set  triggers  =  option.getTriggers();  for  (Iterator  j  =  triggers.iterator();  j.hasNext();)  {      [BUGGY]  Option  option  =  option.getOption(j,  description,  minimum);  [BUGGY]      newOptionMap.put(j.next(),  option);  }  newPrefixes.addAll(option.getPrefixes());  }  [CLASS]  GroupImpl  [METHOD]  <init>  [RETURN_TYPE]  String,int,int,boolean)  List  options  String  name  String  description  final  int  minimum  final  int  maximum  final  boolean  required  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  required  SortedMap  newOptionMap  optionMap  Iterator  i  j  List  anonymous  newAnonymous  options  Option  option  String  description  name  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	103	103	1	replace	Option  option  =  option.getOption(j,  description,  minimum);	  Option    option    =    option.getOption(j,    description);    	non-compiled	[CE]  illegal  start  of  expression	33	None	replace
119	[BUG]  [BUGGY]  Option  option  =  option.getOption(j,  description,  maximum);  [CE]  illegal  start  of  expression  [FE]                  OptionException      [CONTEXT]      if  (option  instanceof  Argument)  {  i.remove();  newAnonymous.add(option);  }  else  {  final  Set  triggers  =  option.getTriggers();  for  (Iterator  j  =  triggers.iterator();  j.hasNext();)  {      [BUGGY]  Option  option  =  option.getOption(j,  description,  maximum);  [BUGGY]      newOptionMap.put(j.next(),  option);  }  newPrefixes.addAll(option.getPrefixes());  }  [CLASS]  GroupImpl  [METHOD]  <init>  [RETURN_TYPE]  String,int,int,boolean)  List  options  String  name  String  description  final  int  minimum  final  int  maximum  final  boolean  required  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  required  SortedMap  newOptionMap  optionMap  Iterator  i  j  List  anonymous  newAnonymous  options  Option  option  String  description  name  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	103	103	1	replace	Option  option  =  option.getOption(j,  description,  maximum);	  Option    option    =    option.getOption(j,    description);    	non-compiled	[CE]  illegal  start  of  expression	33	None	replace
120	[BUG]  [BUGGY]  Option  option  =  options.getOption(j,  description,  minimum);  [CE]  illegal  start  of  expression  [FE]              OptionException      [CONTEXT]      if  (option  instanceof  Argument)  {  i.remove();  newAnonymous.add(option);  }  else  {  final  Set  triggers  =  option.getTriggers();  for  (Iterator  j  =  triggers.iterator();  j.hasNext();)  {      [BUGGY]  Option  option  =  options.getOption(j,  description,  minimum);  [BUGGY]      newOptionMap.put(j.next(),  option);  }  newPrefixes.addAll(option.getPrefixes());  }  [CLASS]  GroupImpl  [METHOD]  <init>  [RETURN_TYPE]  String,int,int,boolean)  List  options  String  name  String  description  final  int  minimum  final  int  maximum  final  boolean  required  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  required  SortedMap  newOptionMap  optionMap  Iterator  i  j  List  anonymous  newAnonymous  options  Option  option  String  description  name  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	103	103	1	replace	Option  option  =  options.getOption(j,  description,  minimum);	  Option    option    =    options.getOption(j,    description);    	non-compiled	[CE]  illegal  start  of  expression	8	None	replace
121	[BUG]  [BUGGY]  Option  option  =  optionMap.getOption(j,  i);  [CE]  illegal  start  of  expression  [FE]                OptionException      [CONTEXT]      if  (option  instanceof  Argument)  {  i.remove();  newAnonymous.add(option);  }  else  {  final  Set  triggers  =  option.getTriggers();  for  (Iterator  j  =  triggers.iterator();  j.hasNext();)  {      [BUGGY]  Option  option  =  optionMap.getOption(j,  i);  [BUGGY]      newOptionMap.put(j.next(),  option);  }  newPrefixes.addAll(option.getPrefixes());  }  [CLASS]  GroupImpl  [METHOD]  <init>  [RETURN_TYPE]  String,int,int,boolean)  List  options  String  name  String  description  final  int  minimum  final  int  maximum  final  boolean  required  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  required  SortedMap  newOptionMap  optionMap  Iterator  i  j  List  anonymous  newAnonymous  options  Option  option  String  description  name  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	103	103	1	replace	Option  option  =  optionMap.getOption(j,  i);	  Option    option    =    optionMap.getOption(i);    	non-compiled	[CE]  illegal  start  of  expression	36	None	replace
122	[BUG]  [BUGGY]  newOptionMap.put(j.next(),  option,  required);  [CE]  illegal  start  of  expression  [FE]                  OptionException      [CONTEXT]      if  (option  instanceof  Argument)  {  i.remove();  newAnonymous.add(option);  }  else  {  final  Set  triggers  =  option.getTriggers();  for  (Iterator  j  =  triggers.iterator();  j.hasNext();)  {      [BUGGY]  newOptionMap.put(j.next(),  option,  required);  [BUGGY]      }  newPrefixes.addAll(option.getPrefixes());  }  [CLASS]  GroupImpl  [METHOD]  <init>  [RETURN_TYPE]  String,int,int,boolean)  List  options  String  name  String  description  final  int  minimum  final  int  maximum  final  boolean  required  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  required  SortedMap  newOptionMap  optionMap  Iterator  i  j  List  anonymous  newAnonymous  options  Option  option  String  description  name  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	103	103	1	replace	newOptionMap.put(j.next(),  option,  required);	  newOptionMap.put(option.next(),    j,    required);    	non-compiled	[CE]  illegal  start  of  expression	32	None	replace
123	[BUG]  [BUGGY]  newOptionMap.put(option.getValue(),  j);  [CE]  illegal  start  of  expression  [FE]            OptionException      [CONTEXT]      if  (option  instanceof  Argument)  {  i.remove();  newAnonymous.add(option);  }  else  {  final  Set  triggers  =  option.getTriggers();  for  (Iterator  j  =  triggers.iterator();  j.hasNext();)  {      [BUGGY]  newOptionMap.put(option.getValue(),  j);  [BUGGY]      }  newPrefixes.addAll(option.getPrefixes());  }  [CLASS]  GroupImpl  [METHOD]  <init>  [RETURN_TYPE]  String,int,int,boolean)  List  options  String  name  String  description  final  int  minimum  final  int  maximum  final  boolean  required  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  required  SortedMap  newOptionMap  optionMap  Iterator  i  j  List  anonymous  newAnonymous  options  Option  option  String  description  name  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	103	103	1	replace	newOptionMap.put(option.getValue(),  j);	  newOptionMap.put(option.getKey(),    j);    	non-compiled	[CE]  illegal  start  of  expression	3	None	replace
124	[BUG]  [BUGGY]  newOptionMap.put(option.getKey(),  j,  maximum);  [CE]  illegal  start  of  expression  [FE]              OptionException      [CONTEXT]      if  (option  instanceof  Argument)  {  i.remove();  newAnonymous.add(option);  }  else  {  final  Set  triggers  =  option.getTriggers();  for  (Iterator  j  =  triggers.iterator();  j.hasNext();)  {      [BUGGY]  newOptionMap.put(option.getKey(),  j,  maximum);  [BUGGY]      }  newPrefixes.addAll(option.getPrefixes());  }  [CLASS]  GroupImpl  [METHOD]  <init>  [RETURN_TYPE]  String,int,int,boolean)  List  options  String  name  String  description  final  int  minimum  final  int  maximum  final  boolean  required  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  required  SortedMap  newOptionMap  optionMap  Iterator  i  j  List  anonymous  newAnonymous  options  Option  option  String  description  name  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	103	103	1	replace	newOptionMap.put(option.getKey(),  j,  maximum);	  newOptionMap.put(option.getKey(),    j);    	non-compiled	[CE]  illegal  start  of  expression	3	None	replace
125	[BUG]  [BUGGY]  Option  option  =  optionMap.getOption(j,  required);  [CE]  illegal  start  of  expression  [FE]                OptionException      [CONTEXT]      if  (option  instanceof  Argument)  {  i.remove();  newAnonymous.add(option);  }  else  {  final  Set  triggers  =  option.getTriggers();  for  (Iterator  j  =  triggers.iterator();  j.hasNext();)  {      [BUGGY]  Option  option  =  optionMap.getOption(j,  required);  [BUGGY]      newOptionMap.put(j.next(),  option);  }  newPrefixes.addAll(option.getPrefixes());  }  [CLASS]  GroupImpl  [METHOD]  <init>  [RETURN_TYPE]  String,int,int,boolean)  List  options  String  name  String  description  final  int  minimum  final  int  maximum  final  boolean  required  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  required  SortedMap  newOptionMap  optionMap  Iterator  i  j  List  anonymous  newAnonymous  options  Option  option  String  description  name  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	103	103	1	replace	Option  option  =  optionMap.getOption(j,  required);	  Option    option    =    option.getOption(j,    required);    	non-compiled	[CE]  illegal  start  of  expression	34	None	replace
126	[BUG]  [BUGGY]  newOptionMap.put(option.next(),  j,  description,  required);  [CE]  illegal  start  of  expression  [FE]                  OptionException      [CONTEXT]      if  (option  instanceof  Argument)  {  i.remove();  newAnonymous.add(option);  }  else  {  final  Set  triggers  =  option.getTriggers();  for  (Iterator  j  =  triggers.iterator();  j.hasNext();)  {      [BUGGY]  newOptionMap.put(option.next(),  j,  description,  required);  [BUGGY]      }  newPrefixes.addAll(option.getPrefixes());  }  [CLASS]  GroupImpl  [METHOD]  <init>  [RETURN_TYPE]  String,int,int,boolean)  List  options  String  name  String  description  final  int  minimum  final  int  maximum  final  boolean  required  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  required  SortedMap  newOptionMap  optionMap  Iterator  i  j  List  anonymous  newAnonymous  options  Option  option  String  description  name  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	103	103	1	replace	newOptionMap.put(option.next(),  j,  description,  required);	  newOptionMap.put(option.next(),    j,    required);    	non-compiled	[CE]  illegal  start  of  expression	32	None	replace
127	[BUG]  [BUGGY]  newOptionMap.put(option.next(),  j,  description);  [CE]  illegal  start  of  expression  [FE]                    OptionException      [CONTEXT]      if  (option  instanceof  Argument)  {  i.remove();  newAnonymous.add(option);  }  else  {  final  Set  triggers  =  option.getTriggers();  for  (Iterator  j  =  triggers.iterator();  j.hasNext();)  {      [BUGGY]  newOptionMap.put(option.next(),  j,  description);  [BUGGY]      }  newPrefixes.addAll(option.getPrefixes());  }  [CLASS]  GroupImpl  [METHOD]  <init>  [RETURN_TYPE]  String,int,int,boolean)  List  options  String  name  String  description  final  int  minimum  final  int  maximum  final  boolean  required  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  required  SortedMap  newOptionMap  optionMap  Iterator  i  j  List  anonymous  newAnonymous  options  Option  option  String  description  name  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	103	103	1	replace	newOptionMap.put(option.next(),  j,  description);	  newOptionMap.put(option.next(),    j,    required);    	non-compiled	[CE]  illegal  start  of  expression	32	None	replace
128	[BUG]  [BUGGY]  Option  option  =  options.getOption(name,  j.next(),  null);  [CE]  illegal  start  of  expression  [FE]                OptionException      [CONTEXT]      if  (option  instanceof  Argument)  {  i.remove();  newAnonymous.add(option);  }  else  {  final  Set  triggers  =  option.getTriggers();  for  (Iterator  j  =  triggers.iterator();  j.hasNext();)  {      [BUGGY]  Option  option  =  options.getOption(name,  j.next(),  null);  [BUGGY]      newOptionMap.put(j.next(),  option);  }  newPrefixes.addAll(option.getPrefixes());  }  [CLASS]  GroupImpl  [METHOD]  <init>  [RETURN_TYPE]  String,int,int,boolean)  List  options  String  name  String  description  final  int  minimum  final  int  maximum  final  boolean  required  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  required  SortedMap  newOptionMap  optionMap  Iterator  i  j  List  anonymous  newAnonymous  options  Option  option  String  description  name  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	103	103	1	replace	Option  option  =  options.getOption(name,  j.next(),  null);	  Option    option    =    options.getOption(name,    j.next());    	non-compiled	[CE]  illegal  start  of  expression	44	None	replace
129	[BUG]  [BUGGY]  Option  option  =  options.getOption(description,  j);  [CE]  illegal  start  of  expression  [FE]                OptionException      [CONTEXT]      if  (option  instanceof  Argument)  {  i.remove();  newAnonymous.add(option);  }  else  {  final  Set  triggers  =  option.getTriggers();  for  (Iterator  j  =  triggers.iterator();  j.hasNext();)  {      [BUGGY]  Option  option  =  options.getOption(description,  j);  [BUGGY]      newOptionMap.put(j.next(),  option);  }  newPrefixes.addAll(option.getPrefixes());  }  [CLASS]  GroupImpl  [METHOD]  <init>  [RETURN_TYPE]  String,int,int,boolean)  List  options  String  name  String  description  final  int  minimum  final  int  maximum  final  boolean  required  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  required  SortedMap  newOptionMap  optionMap  Iterator  i  j  List  anonymous  newAnonymous  options  Option  option  String  description  name  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	103	103	1	replace	Option  option  =  options.getOption(description,  j);	  Option    option    =    options.getOption(description);    	non-compiled	[CE]  illegal  start  of  expression	19	None	replace
130	[BUG]  [BUGGY]  Option  option  =(Option)j.next(),  description);  [CE]  illegal  start  of  expression  [FE]              OptionException      [CONTEXT]      if  (option  instanceof  Argument)  {  i.remove();  newAnonymous.add(option);  }  else  {  final  Set  triggers  =  option.getTriggers();  for  (Iterator  j  =  triggers.iterator();  j.hasNext();)  {      [BUGGY]  Option  option  =(Option)j.next(),  description);  [BUGGY]      newOptionMap.put(j.next(),  option);  }  newPrefixes.addAll(option.getPrefixes());  }  [CLASS]  GroupImpl  [METHOD]  <init>  [RETURN_TYPE]  String,int,int,boolean)  List  options  String  name  String  description  final  int  minimum  final  int  maximum  final  boolean  required  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  required  SortedMap  newOptionMap  optionMap  Iterator  i  j  List  anonymous  newAnonymous  options  Option  option  String  description  name  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	103	103	1	replace	Option  option  =(Option)j.next(),  description);	  Option    option    =(Option)j.next(),    options);    	non-compiled	[CE]  illegal  start  of  expression	18	None	replace
131	[BUG]  [BUGGY]  Option  option  =  option.getOption(j,  i,  description);  [CE]  illegal  start  of  expression  [FE]                OptionException      [CONTEXT]      if  (option  instanceof  Argument)  {  i.remove();  newAnonymous.add(option);  }  else  {  final  Set  triggers  =  option.getTriggers();  for  (Iterator  j  =  triggers.iterator();  j.hasNext();)  {      [BUGGY]  Option  option  =  option.getOption(j,  i,  description);  [BUGGY]      newOptionMap.put(j.next(),  option);  }  newPrefixes.addAll(option.getPrefixes());  }  [CLASS]  GroupImpl  [METHOD]  <init>  [RETURN_TYPE]  String,int,int,boolean)  List  options  String  name  String  description  final  int  minimum  final  int  maximum  final  boolean  required  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  required  SortedMap  newOptionMap  optionMap  Iterator  i  j  List  anonymous  newAnonymous  options  Option  option  String  description  name  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	103	103	1	replace	Option  option  =  option.getOption(j,  i,  description);	  Option    option    =    option.getOption(j,    i);    	non-compiled	[CE]  illegal  start  of  expression	27	None	replace
132	[BUG]  [BUGGY]  newOptionMap.put(option.getTriggers(),  j,  description);  [CE]  illegal  start  of  expression  [FE]              OptionException      [CONTEXT]      if  (option  instanceof  Argument)  {  i.remove();  newAnonymous.add(option);  }  else  {  final  Set  triggers  =  option.getTriggers();  for  (Iterator  j  =  triggers.iterator();  j.hasNext();)  {      [BUGGY]  newOptionMap.put(option.getTriggers(),  j,  description);  [BUGGY]      }  newPrefixes.addAll(option.getPrefixes());  }  [CLASS]  GroupImpl  [METHOD]  <init>  [RETURN_TYPE]  String,int,int,boolean)  List  options  String  name  String  description  final  int  minimum  final  int  maximum  final  boolean  required  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  required  SortedMap  newOptionMap  optionMap  Iterator  i  j  List  anonymous  newAnonymous  options  Option  option  String  description  name  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	103	103	1	replace	newOptionMap.put(option.getTriggers(),  j,  description);	  newOptionMap.put(option.getTriggers(),    j);    	non-compiled	[CE]  illegal  start  of  expression	39	None	replace
133	[BUG]  [BUGGY]  newOptionMap.put(option.getDescription(),  j);  [CE]  illegal  start  of  expression  [FE]                OptionException      [CONTEXT]      if  (option  instanceof  Argument)  {  i.remove();  newAnonymous.add(option);  }  else  {  final  Set  triggers  =  option.getTriggers();  for  (Iterator  j  =  triggers.iterator();  j.hasNext();)  {      [BUGGY]  newOptionMap.put(option.getDescription(),  j);  [BUGGY]      }  newPrefixes.addAll(option.getPrefixes());  }  [CLASS]  GroupImpl  [METHOD]  <init>  [RETURN_TYPE]  String,int,int,boolean)  List  options  String  name  String  description  final  int  minimum  final  int  maximum  final  boolean  required  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  required  SortedMap  newOptionMap  optionMap  Iterator  i  j  List  anonymous  newAnonymous  options  Option  option  String  description  name  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	103	103	1	replace	newOptionMap.put(option.getDescription(),  j);	  newOptionMap.put(option.getTriggers(),    j);    	non-compiled	[CE]  illegal  start  of  expression	39	None	replace
134	[BUG]  [BUGGY]  Option  option  =  option.getOption(name,  j);  [CE]  illegal  start  of  expression  [FE]              OptionException      [CONTEXT]      if  (option  instanceof  Argument)  {  i.remove();  newAnonymous.add(option);  }  else  {  final  Set  triggers  =  option.getTriggers();  for  (Iterator  j  =  triggers.iterator();  j.hasNext();)  {      [BUGGY]  Option  option  =  option.getOption(name,  j);  [BUGGY]      newOptionMap.put(j.next(),  option);  }  newPrefixes.addAll(option.getPrefixes());  }  [CLASS]  GroupImpl  [METHOD]  <init>  [RETURN_TYPE]  String,int,int,boolean)  List  options  String  name  String  description  final  int  minimum  final  int  maximum  final  boolean  required  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  required  SortedMap  newOptionMap  optionMap  Iterator  i  j  List  anonymous  newAnonymous  options  Option  option  String  description  name  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	103	103	1	replace	Option  option  =  option.getOption(name,  j);	  Option    option    =    option.getOption(j,    description);    	non-compiled	[CE]  illegal  start  of  expression	33	None	replace
135	[BUG]  [BUGGY]  Option  option  =  optionMap.getOption(j,  description);  [CE]  illegal  start  of  expression  [FE]                OptionException      [CONTEXT]      if  (option  instanceof  Argument)  {  i.remove();  newAnonymous.add(option);  }  else  {  final  Set  triggers  =  option.getTriggers();  for  (Iterator  j  =  triggers.iterator();  j.hasNext();)  {      [BUGGY]  Option  option  =  optionMap.getOption(j,  description);  [BUGGY]      newOptionMap.put(j.next(),  option);  }  newPrefixes.addAll(option.getPrefixes());  }  [CLASS]  GroupImpl  [METHOD]  <init>  [RETURN_TYPE]  String,int,int,boolean)  List  options  String  name  String  description  final  int  minimum  final  int  maximum  final  boolean  required  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  required  SortedMap  newOptionMap  optionMap  Iterator  i  j  List  anonymous  newAnonymous  options  Option  option  String  description  name  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	103	103	1	replace	Option  option  =  optionMap.getOption(j,  description);	  Option    option    =    option.getOption(j,    description);    	non-compiled	[CE]  illegal  start  of  expression	33	None	replace
136	[BUG]  [BUGGY]  Option  option  =  j.getOption(i,  description);  [CE]  illegal  start  of  expression  [FE]                OptionException      [CONTEXT]      if  (option  instanceof  Argument)  {  i.remove();  newAnonymous.add(option);  }  else  {  final  Set  triggers  =  option.getTriggers();  for  (Iterator  j  =  triggers.iterator();  j.hasNext();)  {      [BUGGY]  Option  option  =  j.getOption(i,  description);  [BUGGY]      newOptionMap.put(j.next(),  option);  }  newPrefixes.addAll(option.getPrefixes());  }  [CLASS]  GroupImpl  [METHOD]  <init>  [RETURN_TYPE]  String,int,int,boolean)  List  options  String  name  String  description  final  int  minimum  final  int  maximum  final  boolean  required  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  required  SortedMap  newOptionMap  optionMap  Iterator  i  j  List  anonymous  newAnonymous  options  Option  option  String  description  name  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	103	103	1	replace	Option  option  =  j.getOption(i,  description);	  Option    option    =    j.getOption(i);    	non-compiled	[CE]  illegal  start  of  expression	6	None	replace
137	[BUG]  [BUGGY]  newOptionMap.put(option.getKey(),  option);  [CE]  illegal  start  of  expression  [FE]                OptionException      [CONTEXT]      if  (option  instanceof  Argument)  {  i.remove();  newAnonymous.add(option);  }  else  {  final  Set  triggers  =  option.getTriggers();  for  (Iterator  j  =  triggers.iterator();  j.hasNext();)  {      [BUGGY]  newOptionMap.put(option.getKey(),  option);  [BUGGY]      }  newPrefixes.addAll(option.getPrefixes());  }  [CLASS]  GroupImpl  [METHOD]  <init>  [RETURN_TYPE]  String,int,int,boolean)  List  options  String  name  String  description  final  int  minimum  final  int  maximum  final  boolean  required  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  required  SortedMap  newOptionMap  optionMap  Iterator  i  j  List  anonymous  newAnonymous  options  Option  option  String  description  name  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	103	103	1	replace	newOptionMap.put(option.getKey(),  option);	  newOptionMap.put(i.getKey(),    option);    	non-compiled	[CE]  illegal  start  of  expression	5	None	replace
138	[BUG]  [BUGGY]  newOptionMap.put(j.getKey(),  j.removeFirst());  [CE]  illegal  start  of  expression  [FE]                  OptionException      [CONTEXT]      if  (option  instanceof  Argument)  {  i.remove();  newAnonymous.add(option);  }  else  {  final  Set  triggers  =  option.getTriggers();  for  (Iterator  j  =  triggers.iterator();  j.hasNext();)  {      [BUGGY]  newOptionMap.put(j.getKey(),  j.removeFirst());  [BUGGY]      }  newPrefixes.addAll(option.getPrefixes());  }  [CLASS]  GroupImpl  [METHOD]  <init>  [RETURN_TYPE]  String,int,int,boolean)  List  options  String  name  String  description  final  int  minimum  final  int  maximum  final  boolean  required  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  required  SortedMap  newOptionMap  optionMap  Iterator  i  j  List  anonymous  newAnonymous  options  Option  option  String  description  name  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	103	103	1	replace	newOptionMap.put(j.getKey(),  j.removeFirst());	  newOptionMap.put(j.getKey(),    j.next());    	non-compiled	[CE]  illegal  start  of  expression	28	None	replace
139	[BUG]  [BUGGY]  newAnonymous.addAll(option.getPrefixes(),  j);  [CE]  illegal  start  of  expression  [FE]                    OptionException      [CONTEXT]      if  (option  instanceof  Argument)  {  i.remove();  newAnonymous.add(option);  }  else  {  final  Set  triggers  =  option.getTriggers();  for  (Iterator  j  =  triggers.iterator();  j.hasNext();)  {      [BUGGY]  newAnonymous.addAll(option.getPrefixes(),  j);  [BUGGY]      }  newPrefixes.addAll(option.getPrefixes());  }  [CLASS]  GroupImpl  [METHOD]  <init>  [RETURN_TYPE]  String,int,int,boolean)  List  options  String  name  String  description  final  int  minimum  final  int  maximum  final  boolean  required  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  required  SortedMap  newOptionMap  optionMap  Iterator  i  j  List  anonymous  newAnonymous  options  Option  option  String  description  name  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	103	103	1	replace	newAnonymous.addAll(option.getPrefixes(),  j);	  newAnonymous.addAll(option.getPrefixes());    	non-compiled	[CE]  illegal  start  of  expression	13	None	replace
140	[BUG]  [BUGGY]  newOptionMap.put(option.getPrefix(),  j,  description);  [CE]  illegal  start  of  expression  [FE]              OptionException      [CONTEXT]      if  (option  instanceof  Argument)  {  i.remove();  newAnonymous.add(option);  }  else  {  final  Set  triggers  =  option.getTriggers();  for  (Iterator  j  =  triggers.iterator();  j.hasNext();)  {      [BUGGY]  newOptionMap.put(option.getPrefix(),  j,  description);  [BUGGY]      }  newPrefixes.addAll(option.getPrefixes());  }  [CLASS]  GroupImpl  [METHOD]  <init>  [RETURN_TYPE]  String,int,int,boolean)  List  options  String  name  String  description  final  int  minimum  final  int  maximum  final  boolean  required  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  required  SortedMap  newOptionMap  optionMap  Iterator  i  j  List  anonymous  newAnonymous  options  Option  option  String  description  name  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	103	103	1	replace	newOptionMap.put(option.getPrefix(),  j,  description);	  newOptionMap.put(option.getPrefix(),    j);    	non-compiled	[CE]  illegal  start  of  expression	30	None	replace
