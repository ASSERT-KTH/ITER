projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java76this.maximum=maximum;
projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java76this.maximum=maximum+1;
projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java76this.maximum=maximum-1;
projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java76this.maximum=minimum;
projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java76
projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java76this.options=Collections.unmodifiableList(options);
projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java76Optionoption=optionMap.getOption(required);
projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java76this.options=Collections.unmodifiableList(optionMap);
projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java76Optionoption=optionMap.getOption(name);
projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java76if(required){for(inti=0;i<minimum;i++){options.addOption(option);}
projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java76Optionoption=optionMap.getOption("option");
projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java76Optionoption=optionMap.getOption(this);
projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java76this.maximum=maximal;
projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java76this.prefixes=Collections.unmodifiableList(options);
projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java76this.prefixes=Collections.unmodifiableList(optionMap);
projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java76this.prefixes=Collections.unmodifiableList(prefixes);
projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java76this.defaultPrefixes=Collections.unmodifiableList(optionMap);
projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java76this.minimum=maximum;
projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java76this.maximum=minimum+1;
projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java76this.defaultPrefixes=Collections.unmodifiableList(prefixes);
projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java76this.defaultPrefixes=Collections.unmodifiableList(required);
projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java76this.defaultPrefixes=Collections.unmodifiableList(defaultPrefixes);
projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java76this.prefixes=Collections.unmodifiableList(required);
projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java76this.prefixes=Collections.unmodifiableList(default);
projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java76this.prefixes=Collections.unmodifiableList(optionMap,required);
projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java76if(required){for(inti=0;i<maximum;i++){options.addOption(option);}
projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java76Optionoption=options.getOption(option);
projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java76if(required){for(inti=0;i<minimal;i++){options.addOption(option);}
projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java76this.maximum=maximum-2;
projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java76this.maximum=maximum-required;
projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java76this.maximum=maximum/1;
projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java76Optionoption=optionMap.getOption(this,required);
projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java76Optionoption=options.getOption(this);
projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java76Optionoption=optionMap.getOption(this,description);
projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java76Optionoption=optionMap.getOption(name,required);
projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java76Optionoption=options.getOption(name);
projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java76this.maximum=maximum+2;
projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java76if(required){this.options=Collections.unmodifiableList(options);}
projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java76this.options=Collections.unmodifiableList(options,required);
projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java76Optionoption=optionMap.getOption("option",required);
projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java76Optionoption=options.getOption("option");
projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java76Optionoption=optionMap.getOption("option",description);
projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java76this.prefixes=Collections.unmodifiableList(defaultPrefixes);
projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java76this.prefixes=Collections.unmodifiableList(newPrefixes);
projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java76if(required){this.options=Collections.unmodifiableList(optionMap);}
projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java76this.options=Collections.unmodifiableList(optionMap,required);
projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java76if(optionMap!=null){this.options=Collections.unmodifiableList(optionMap);}
projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java76Optionoption=option.getOption(required);
projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java76Optionoption=option.getOption();
projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java76Optionoption=optionMap.getOption(default);
projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java76Optionoption=optionMap.getOption(prefixes);
projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java76Optionoption=optionMap.getOption(this.prefixes);
projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java76this.options=Collections.unmodifiableList(optionMap,options);
projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java76Optionoption=options.getOption(required);
projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java76Optionoption=optionMap.getOption(defaultValue);
projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java76this.prefixes=Collections.unmodifiableList(option);
projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java76Optionoption=optionsMap.getOption("option");
projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java76if(required){for(inti=0;i<limit;i++){options.addOption(option);}
projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java76this.maximum=maximum-minimum;
projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java76Iteratori=options.iterator();
projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java76Optionoption=optionMap.getOption(option);
projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java76this.prefixes=Collections.unmodifiableList(prefixes,required);
projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java76this.prefixes=Collections.unmodifiableList(defaultOptionMap);
projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java76if(optionMap!=null){this.options=Collections.unmodifiableList(options);}
projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java76this.options=Collections.unmodifiableList(options)+1;
projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java76Optionoption=optionMap.getOption(description);
projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java76if(optionMap==null){this.options=Collections.unmodifiableList(options);}
projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java76this.defaultPrefixes=Collections.unmodifiableList(default);
projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java76Optionoption=optionMap.getOption(defaultName);
projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java76Optionoption=optionMap.getOption(defaultPrefixes);
projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java76Optionoption=optionMap.getOption(name,description);
projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java76Optionoption=optionMap.getOption("option",null);
projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java76this.prefixes=Collections.unmodifiableList(optionals);
projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java76if(optionMap!=null){this.options=Collections.unmodifiableList(optionMap);}else{finalSortedMapnewOptionMap=newTreeMap(ReverseStringComparator.getInstance());options.addAll(newOptionMap);}
projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java76if(optionMap!=null){this.options=Collections.unmodifiableList(optionMap);}else{finalSortedMapnewOptionMap=newTreeMap(ReverseStringComparator.getInstance());returnnewOptionMap;}
projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java76Optionoption=optionMap.get(required);
projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java76this.minimum=maximum+1;
projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java76this.maximum=maximal+1;
projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java76this.defaultPrefixes=Collections.unmodifiableList(newPrefixes);
projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java76Optionoption=optionMap.getOption(prefixes,required);
projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java76Optionoption=options.getOption(prefixes);
projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java76Optionoption=optionMap.getOption(name,description,required);
projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java76Optionoption=options.getOption(name,description);
projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java76Optionoption=optionMap.getOption(name,description-1);
projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java76Optionoption=optionMap.getOption(defaultName,required);
projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java76Optionoption=options.getOption(defaultName);
projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java76Optionoption=options.getOption(default);
projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java76Optionoption=options.getOption(defaultValue);
projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java76Optionoption=options.get(required);
projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java76Optionoption=optionMap.get(minimum);
projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java76Optionoption=optionMap.get(default);
projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java76Optionoption=optionMap.getOption();
projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java76Optionoption=options.getOption();
projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java76This.options=Collections.unmodifiableList(options);
projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java76Iteratori=this.options.iterator();
projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java76Iterator<Option>i=options.iterator();
projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java76Iteratori=optionMap.iterator();
projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java76Optionoption=optionMap.getOption("option","description");
projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java76Optionoption=options.getOption("option","description");
projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java76this.maximum=maximum/2;
projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java76this.maximum=minimum/1;
projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java76this.options=Collections.unmodifiableList(options)/1;
projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java76this.options=Collections.unmodifiableList(options)+2;
projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java76this.options=Collections.unmodifiableList(options)+0;
projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java76finalSortedMapnewOptionMap=newTreeMap(ReverseStringComparator.getInstance());
projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java76finalSortedMapnewOptionMap=newTreeMap(ReverseStringComparator.getInstance());options.addAll(newOptionMap);
projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java76if(required){if(optionMap!=null){this.options=Collections.unmodifiableList(optionMap);}
projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java76Optionoption=optionMap.getOption(this,description,required);
projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java76Optionoption=options.getOption(this,description);
projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java76Optionoption=option.getOption(default);
projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java76Optionoption=option.getOption(maximum);
projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java76this.minimum=minimum;
projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java76this.minimum=maximum-minimum;
projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java76Set<String>newPrefixes=Sets.newHashSet(options);
projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java76Optionoption=optionMap.getOption("option","required");
projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java76Optionoption=optionMap.getOption("option,",required);
projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java76this.maximum=maximum-required+1;
projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java76this.maximum=maximum/required;
projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java76Optionoption=options.getOption(name,required);
projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java76Optionoption=options.getOption(description);
projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java76this.prefixes=Collections.unmodifiableList(optionMap,minimum);
projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java76this.prefixes=Collections.unmodifiableList(optionMap,maximum);
projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java76this.prefixes=Collections.unmodifiableList(optionMap,description);
projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java76Optionoption=optionMap.getOption(defaultValue,required);
projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java76Optionoption=optionMap.getOption(this.defaultValue);
projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java76Optionoption=optionMap.getOption("option","null");
projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java76Optionoption=options.getOption("option",null);
projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java76Optionoption=options.getOption(this,required);
projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java76Optionoption=options.getOption(this,j);
projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java76this.options=Collections.unmodifiableList(optionMap,newOptionMap);
projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java76Optionoption=optionMap.getOption(default,required);
projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java76this.prefixes=Collections.unmodifiableList(prefixes,minimum);
projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java76this.prefixes=Collections.unmodifiableList(prefixes,maximum);
projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java76this.prefixes=Collections.unmodifiableList(required,prefixes);
projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java76Optionoption=options.getOption("option",required);
projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java76Optionoption=options.getOption("option",description);
projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java76Optionoption=options.getOption("options");
projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java76Set<String>newPrefixes=Sets.newHashSet(optionMap);
projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java76Set<String>newPrefixes=Sets.unmodifiableSet(optionMap);
projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java76if(required){this.defaultPrefixes=Collections.unmodifiableList(required);}
projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java76Optionoption=optionMap.getOption(defaultPrefixes,required);
projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java76Optionoption=options.getOption(defaultPrefixes);
projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java76Optionoption=optionMap.getOption(this.prefixes,required);
projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java76Optionoption=options.getOption(this.prefixes);
projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java76Optionoption=this.optionMap.getOption(this.prefixes);
projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java76Optionoption=this.prefixes.getOption(optionMap);
projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java76this.maximum=maximum+3;
projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java76this.prefixes=Collections.unmodifiableList(newOptionMap);
projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java76Optionoption=optionMap.getOption(description,required);
projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java76Optionoption=optionMap.getOption(this.description);
projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java76Optionoption=options.getOption(required,maximum);
projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java76Optionoption=optionMap.getOption(name,minimum);
projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java76Optionoption=optionMap.getOption(name,maximum);
projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java76Optionoption=optionsMap.getOption("option",required);
projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java76Optionoption=optionsMap.getOption("option",description);
projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java76Optionoption=optionsMap.getOption("options");
projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java76if(optionMap==null){this.options=Collections.unmodifiableList(optionMap);}else{finalSortedMapnewOptionMap=newTreeMap(ReverseStringComparator.getInstance());returnnewOptionMap;}
projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java76if(required){if(optionMap!=null){this.options=Collections.unmodifiableList(optionMap);}else{finalSortedMapnewOptionMap=newTreeMap(ReverseStringComparator.getInstance());returnnewOpti
projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java76this.options=Collections.unmodifiableList(optionMap,minimum);
projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java76this.options=Collections.unmodifiableList(optionMap,description);
projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java76this.options=Collections.unmodifiableList(optionMap,maximum);
projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java76this.maximum=maximum-minimum+1;
projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java76this.maximum=minimum-maximum;
projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java76This.options=Collections.unmodifiableList(optionMap);
projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java76if(optionMap!=null){this.options=Collections.unmodifiableList(optionmap);}
projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java76Optionoption=optionMap.getOption(this,minimum);
projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java76Optionoption=optionMap.getOption(this,maximum);
projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java76Optionoption=optionMap.getOption(this,minimal);
projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java76this.options=Collections.unmodifiableList(options,minimum);
projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java76this.options=Collections.unmodifiableList(options,maximum);
projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java76Optionoption=options.getOption(optionMap);
projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java76this.defaultPrefixes=Collections.unmodifiableList(prefix);
projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java76this.options=Collections.unmodifiableList(options,description);
projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java76if(required){for(inti=0;i<maximal;i++){options.addOption(option);}
projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java76if(optionMap==null){this.options=Collections.unmodifiableList(optionMap);}else{finalSortedMapnewOptionMap=newTreeMap(ReverseStringComparator.getInstance());options.addAll(newOptionMap);}
projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java76this.prefixes=Collections.unmodifiableList(prefix);
projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java76finalSortedMapnewOptionMap=newOptionMap(ReverseStringComparator.getInstance());
projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java76Optionoption=optionMap.getOption(this,description-1);
projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java76this.maximum=maximum/3;
projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java76this.maximum=maximum/4;
projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java76Optionoption=optionsMap.get(required);
projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java76Optionoption=optionMap.get(defaultOption);
projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java76if(optionMap!=null){this.options=Collections.unmodifiableList(optionMap);}else{finalSortedMapnewOptionMap=newTreeMap(ReverseStringComparator.getInstance());return
projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java76Optionoption=options.getOption(this,true);
projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java76Iteratori=options.values().iterator();
projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java76this.minimum=maximum-1;
projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java76Optionoption=optionsMap.getOption("opt");
projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java76Optionoption=optionsMap.getOption("option",true);
projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java76Preconditions.checkNotNull(required);
projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java76this.maximum=maximum/minimum;
projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java76this.prefixes=Collections.unmodifiableList(prefixes,required+1);
projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java76this.prefixes=Collections.unmodifiableList(prefixes,required-1);
projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java76Optionoption=optionMap.getOption(this,required,description);
projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java76This.defaultPrefixes=Collections.unmodifiableList(prefixes);
projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java76this.options=Collections.unmodifiableList(options)-1;
projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java76Optionoption=optionMap.getOption(default,description);
projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java76Optionoption=optionMap.getOption(default,true);
projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java76Optionoption=optionMap.getOption(this.prefixes,this.maximum);
projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java76This.prefixes=Collections.unmodifiableList(prefixes);
projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java76if(defaultPrefixes!=null){this.defaultPrefixes=Collections.unmodifiableList(defaultPrefixes);}
projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java76this.prefixes=Collections.unmodifiableList(optional);
projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java76Optionoption=optionMap.getOption(defaultValue,defaultValue);
projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java76Optionoption=optionMap.getOption(defaultValue,false);
projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java76Optionoption=optionsMap.getOption("option",null);
projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java76this.defaultPrefixes=Collections.unmodifiableList(options);
projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java76this.defaultPrefixes=Collections.unmodifiableList(prefixes,required);
projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java76Optionoption=optionMap.getOption(name,description+1);
projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java76Optionoption=optionMap.getOption(defaultAnonymous);
projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java76Optionoption=optionMap.getOption(defaultPrefixes,defaultPrefixes);
projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java76Optionoption=optionMap.getOption(defaultName,false);
projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java76Optionoption=optionMap.getOption(defaultName,description);
projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java76Optionoption=option.getOption(defaultValue);
projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java76this.options=Collections.unmodifiableList(optionMap,option);
projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java76Optionoption=optionMap.get(description);
