bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  option  =(Option)i.next(),  newPrefixes);  [CE]  illegal  start  of  expression  [FE]        OptionException    [CONTEXT]    final  List  newAnonymous  =  new  ArrayList();  final  SortedMap  newOptionMap  =  new  TreeMap(ReverseStringComparator.getInstance());  final  Set  newPrefixes  =  new  HashSet();  for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {    [BUGGY]  option  =(Option)i.next(),  newPrefixes);  [BUGGY]    option.setParent(this);  if  (option  instanceof  Argument)  {  i.remove();  newAnonymous.add(option);  }  else  {  final  Set  triggers  =  option.getTriggers();  for  (Iterator  j  =  triggers.iterator();  j.hasNext();)  {  newOptionMap.put(j.next(),  option);  [CLASS]  GroupImpl  [METHOD]  <init>  [RETURN_TYPE]  String,int,int,boolean)  List  options  String  name  String  description  final  int  minimum  final  int  maximum  final  boolean  required  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  required  SortedMap  newOptionMap  optionMap  Iterator  i  j  List  anonymous  newAnonymous  options  Option  option  String  description  name  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	93	93	1	replace	option  =(Option)i.next(),  newPrefixes);	  option    =(Option)i.next();    	non-compiled	[CE]  illegal  start  of  expression	5	None	replace
2	[BUG]  [BUGGY]  Option  option  =(Option)i.next();  newAnonymous.add(option);  [CE]  illegal  start  of  expression  [FE]            OptionException    [CONTEXT]    final  List  newAnonymous  =  new  ArrayList();  final  SortedMap  newOptionMap  =  new  TreeMap(ReverseStringComparator.getInstance());  final  Set  newPrefixes  =  new  HashSet();  for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {    [BUGGY]  Option  option  =(Option)i.next();  newAnonymous.add(option);  [BUGGY]    final  Option  option  =  (Option)  i.next();  option.setParent(this);  if  (option  instanceof  Argument)  {  i.remove();  newAnonymous.add(option);  }  else  {  final  Set  triggers  =  option.getTriggers();  for  (Iterator  j  =  triggers.iterator();  j.hasNext();)  {  newOptionMap.put(j.next(),  option);  [CLASS]  GroupImpl  [METHOD]  <init>  [RETURN_TYPE]  String,int,int,boolean)  List  options  String  name  String  description  final  int  minimum  final  int  maximum  final  boolean  required  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  required  SortedMap  newOptionMap  optionMap  Iterator  i  j  List  anonymous  newAnonymous  options  Option  option  String  description  name  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	93	93	1	replace	Option  option  =(Option)i.next();  newAnonymous.add(option);	      final    Option    option    =(Option)i.next();    newAnonymous.add(option);    	non-compiled	[CE]  illegal  start  of  expression	3	None	replace
3	[BUG]  [BUGGY]  final  Option  option  =  options.getOption(name);  [CE]  illegal  start  of  expression  [FE]          OptionException    [CONTEXT]    final  List  newAnonymous  =  new  ArrayList();  final  SortedMap  newOptionMap  =  new  TreeMap(ReverseStringComparator.getInstance());  final  Set  newPrefixes  =  new  HashSet();  for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {    [BUGGY]  final  Option  option  =  options.getOption(name);  [BUGGY]    final  Option  option  =  (Option)  i.next();  option.setParent(this);  if  (option  instanceof  Argument)  {  i.remove();  newAnonymous.add(option);  }  else  {  final  Set  triggers  =  option.getTriggers();  for  (Iterator  j  =  triggers.iterator();  j.hasNext();)  {  newOptionMap.put(j.next(),  option);  [CLASS]  GroupImpl  [METHOD]  <init>  [RETURN_TYPE]  String,int,int,boolean)  List  options  String  name  String  description  final  int  minimum  final  int  maximum  final  boolean  required  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  required  SortedMap  newOptionMap  optionMap  Iterator  i  j  List  anonymous  newAnonymous  options  Option  option  String  description  name  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	93	93	1	replace	final  Option  option  =  options.getOption(name);	      final    Option    option    =    options.getOption(i);    	non-compiled	[CE]  illegal  start  of  expression	7	None	replace
4	[BUG]  [BUGGY]  final  Option  option  =  options.getOption(this);  [CE]  illegal  start  of  expression  [FE]            OptionException    [CONTEXT]    final  List  newAnonymous  =  new  ArrayList();  final  SortedMap  newOptionMap  =  new  TreeMap(ReverseStringComparator.getInstance());  final  Set  newPrefixes  =  new  HashSet();  for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {    [BUGGY]  final  Option  option  =  options.getOption(this);  [BUGGY]    final  Option  option  =  (Option)  i.next();  option.setParent(this);  if  (option  instanceof  Argument)  {  i.remove();  newAnonymous.add(option);  }  else  {  final  Set  triggers  =  option.getTriggers();  for  (Iterator  j  =  triggers.iterator();  j.hasNext();)  {  newOptionMap.put(j.next(),  option);  [CLASS]  GroupImpl  [METHOD]  <init>  [RETURN_TYPE]  String,int,int,boolean)  List  options  String  name  String  description  final  int  minimum  final  int  maximum  final  boolean  required  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  required  SortedMap  newOptionMap  optionMap  Iterator  i  j  List  anonymous  newAnonymous  options  Option  option  String  description  name  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	93	93	1	replace	final  Option  option  =  options.getOption(this);	      final    Option    option    =    options.getOption(i);    	non-compiled	[CE]  illegal  start  of  expression	7	None	replace
5	[BUG]  [BUGGY]  final  Option  option  =  options.getOption(i.next(),  newPrefixes);  [CE]  illegal  start  of  expression  [FE]        OptionException    [CONTEXT]    final  List  newAnonymous  =  new  ArrayList();  final  SortedMap  newOptionMap  =  new  TreeMap(ReverseStringComparator.getInstance());  final  Set  newPrefixes  =  new  HashSet();  for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {    [BUGGY]  final  Option  option  =  options.getOption(i.next(),  newPrefixes);  [BUGGY]    final  Option  option  =  (Option)  i.next();  option.setParent(this);  if  (option  instanceof  Argument)  {  i.remove();  newAnonymous.add(option);  }  else  {  final  Set  triggers  =  option.getTriggers();  for  (Iterator  j  =  triggers.iterator();  j.hasNext();)  {  newOptionMap.put(j.next(),  option);  [CLASS]  GroupImpl  [METHOD]  <init>  [RETURN_TYPE]  String,int,int,boolean)  List  options  String  name  String  description  final  int  minimum  final  int  maximum  final  boolean  required  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  required  SortedMap  newOptionMap  optionMap  Iterator  i  j  List  anonymous  newAnonymous  options  Option  option  String  description  name  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	93	93	1	replace	final  Option  option  =  options.getOption(i.next(),  newPrefixes);	      final    Option    option    =    options.getOption(i.next());    	non-compiled	[CE]  illegal  start  of  expression	6	None	replace
6	[BUG]  [BUGGY]  final  Option  option  =  options.getOption(i.next(),  this);  [CE]  illegal  start  of  expression  [FE]          OptionException    [CONTEXT]    final  List  newAnonymous  =  new  ArrayList();  final  SortedMap  newOptionMap  =  new  TreeMap(ReverseStringComparator.getInstance());  final  Set  newPrefixes  =  new  HashSet();  for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {    [BUGGY]  final  Option  option  =  options.getOption(i.next(),  this);  [BUGGY]    final  Option  option  =  (Option)  i.next();  option.setParent(this);  if  (option  instanceof  Argument)  {  i.remove();  newAnonymous.add(option);  }  else  {  final  Set  triggers  =  option.getTriggers();  for  (Iterator  j  =  triggers.iterator();  j.hasNext();)  {  newOptionMap.put(j.next(),  option);  [CLASS]  GroupImpl  [METHOD]  <init>  [RETURN_TYPE]  String,int,int,boolean)  List  options  String  name  String  description  final  int  minimum  final  int  maximum  final  boolean  required  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  required  SortedMap  newOptionMap  optionMap  Iterator  i  j  List  anonymous  newAnonymous  options  Option  option  String  description  name  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	93	93	1	replace	final  Option  option  =  options.getOption(i.next(),  this);	      final    Option    option    =    options.getOption(i.next());    	non-compiled	[CE]  illegal  start  of  expression	6	None	replace
7	[BUG]  [BUGGY]  final  Option  option  =  options.getOption(i.next(),  i.next());  [CE]  illegal  start  of  expression  [FE]            OptionException    [CONTEXT]    final  List  newAnonymous  =  new  ArrayList();  final  SortedMap  newOptionMap  =  new  TreeMap(ReverseStringComparator.getInstance());  final  Set  newPrefixes  =  new  HashSet();  for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {    [BUGGY]  final  Option  option  =  options.getOption(i.next(),  i.next());  [BUGGY]    final  Option  option  =  (Option)  i.next();  option.setParent(this);  if  (option  instanceof  Argument)  {  i.remove();  newAnonymous.add(option);  }  else  {  final  Set  triggers  =  option.getTriggers();  for  (Iterator  j  =  triggers.iterator();  j.hasNext();)  {  newOptionMap.put(j.next(),  option);  [CLASS]  GroupImpl  [METHOD]  <init>  [RETURN_TYPE]  String,int,int,boolean)  List  options  String  name  String  description  final  int  minimum  final  int  maximum  final  boolean  required  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  required  SortedMap  newOptionMap  optionMap  Iterator  i  j  List  anonymous  newAnonymous  options  Option  option  String  description  name  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	93	93	1	replace	final  Option  option  =  options.getOption(i.next(),  i.next());	      final    Option    option    =    options.getOption(i.next());    	non-compiled	[CE]  illegal  start  of  expression	6	None	replace
8	[BUG]  [BUGGY]  optionMap.put(i.next(),  option);  [CE]  illegal  start  of  expression  [FE]        OptionException    [CONTEXT]    final  List  newAnonymous  =  new  ArrayList();  final  SortedMap  newOptionMap  =  new  TreeMap(ReverseStringComparator.getInstance());  final  Set  newPrefixes  =  new  HashSet();  for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {    [BUGGY]  optionMap.put(i.next(),  option);  [BUGGY]    final  Option  option  =  (Option)  i.next();  option.setParent(this);  if  (option  instanceof  Argument)  {  i.remove();  newAnonymous.add(option);  }  else  {  final  Set  triggers  =  option.getTriggers();  for  (Iterator  j  =  triggers.iterator();  j.hasNext();)  {  newOptionMap.put(j.next(),  option);  [CLASS]  GroupImpl  [METHOD]  <init>  [RETURN_TYPE]  String,int,int,boolean)  List  options  String  name  String  description  final  int  minimum  final  int  maximum  final  boolean  required  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  required  SortedMap  newOptionMap  optionMap  Iterator  i  j  List  anonymous  newAnonymous  options  Option  option  String  description  name  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	93	93	1	replace	optionMap.put(i.next(),  option);	      final    Option    option    =(Option)i.next();    	non-compiled	[CE]  illegal  start  of  expression	1	None	replace
9	[BUG]  [BUGGY]  options  =(Option)i.next();  [CE]  illegal  start  of  expression  [FE]        OptionException    [CONTEXT]    final  List  newAnonymous  =  new  ArrayList();  final  SortedMap  newOptionMap  =  new  TreeMap(ReverseStringComparator.getInstance());  final  Set  newPrefixes  =  new  HashSet();  for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {    [BUGGY]  options  =(Option)i.next();  [BUGGY]    option.setParent(this);  if  (option  instanceof  Argument)  {  i.remove();  newAnonymous.add(option);  }  else  {  final  Set  triggers  =  option.getTriggers();  for  (Iterator  j  =  triggers.iterator();  j.hasNext();)  {  newOptionMap.put(j.next(),  option);  [CLASS]  GroupImpl  [METHOD]  <init>  [RETURN_TYPE]  String,int,int,boolean)  List  options  String  name  String  description  final  int  minimum  final  int  maximum  final  boolean  required  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  required  SortedMap  newOptionMap  optionMap  Iterator  i  j  List  anonymous  newAnonymous  options  Option  option  String  description  name  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	93	93	1	replace	options  =(Option)i.next();	  option    =(Option)i.next();    	non-compiled	[CE]  illegal  start  of  expression	5	None	replace
10	[BUG]  [BUGGY]  final  Option  option  =  options.getOption(i.next(),  options);  [CE]  illegal  start  of  expression  [FE]        OptionException    [CONTEXT]    final  List  newAnonymous  =  new  ArrayList();  final  SortedMap  newOptionMap  =  new  TreeMap(ReverseStringComparator.getInstance());  final  Set  newPrefixes  =  new  HashSet();  for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {    [BUGGY]  final  Option  option  =  options.getOption(i.next(),  options);  [BUGGY]    final  Option  option  =  (Option)  i.next();  option.setParent(this);  if  (option  instanceof  Argument)  {  i.remove();  newAnonymous.add(option);  }  else  {  final  Set  triggers  =  option.getTriggers();  for  (Iterator  j  =  triggers.iterator();  j.hasNext();)  {  newOptionMap.put(j.next(),  option);  [CLASS]  GroupImpl  [METHOD]  <init>  [RETURN_TYPE]  String,int,int,boolean)  List  options  String  name  String  description  final  int  minimum  final  int  maximum  final  boolean  required  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  required  SortedMap  newOptionMap  optionMap  Iterator  i  j  List  anonymous  newAnonymous  options  Option  option  String  description  name  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	93	93	1	replace	final  Option  option  =  options.getOption(i.next(),  options);	      final    Option    option    =    options.getOption(i.next());    	non-compiled	[CE]  illegal  start  of  expression	6	None	replace
11	[BUG]  [BUGGY]  final  Option  option  =  options.getOption(i,  newPrefixes);  [CE]  illegal  start  of  expression  [FE]          OptionException    [CONTEXT]    final  List  newAnonymous  =  new  ArrayList();  final  SortedMap  newOptionMap  =  new  TreeMap(ReverseStringComparator.getInstance());  final  Set  newPrefixes  =  new  HashSet();  for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {    [BUGGY]  final  Option  option  =  options.getOption(i,  newPrefixes);  [BUGGY]    final  Option  option  =  (Option)  i.next();  option.setParent(this);  if  (option  instanceof  Argument)  {  i.remove();  newAnonymous.add(option);  }  else  {  final  Set  triggers  =  option.getTriggers();  for  (Iterator  j  =  triggers.iterator();  j.hasNext();)  {  newOptionMap.put(j.next(),  option);  [CLASS]  GroupImpl  [METHOD]  <init>  [RETURN_TYPE]  String,int,int,boolean)  List  options  String  name  String  description  final  int  minimum  final  int  maximum  final  boolean  required  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  required  SortedMap  newOptionMap  optionMap  Iterator  i  j  List  anonymous  newAnonymous  options  Option  option  String  description  name  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	93	93	1	replace	final  Option  option  =  options.getOption(i,  newPrefixes);	      final    Option    option    =    options.getOption(i);    	non-compiled	[CE]  illegal  start  of  expression	7	None	replace
12	[BUG]  [BUGGY]  final  Option  option  =  options.getOption(i,  i.next());  [CE]  illegal  start  of  expression  [FE]            OptionException    [CONTEXT]    final  List  newAnonymous  =  new  ArrayList();  final  SortedMap  newOptionMap  =  new  TreeMap(ReverseStringComparator.getInstance());  final  Set  newPrefixes  =  new  HashSet();  for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {    [BUGGY]  final  Option  option  =  options.getOption(i,  i.next());  [BUGGY]    final  Option  option  =  (Option)  i.next();  option.setParent(this);  if  (option  instanceof  Argument)  {  i.remove();  newAnonymous.add(option);  }  else  {  final  Set  triggers  =  option.getTriggers();  for  (Iterator  j  =  triggers.iterator();  j.hasNext();)  {  newOptionMap.put(j.next(),  option);  [CLASS]  GroupImpl  [METHOD]  <init>  [RETURN_TYPE]  String,int,int,boolean)  List  options  String  name  String  description  final  int  minimum  final  int  maximum  final  boolean  required  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  required  SortedMap  newOptionMap  optionMap  Iterator  i  j  List  anonymous  newAnonymous  options  Option  option  String  description  name  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	93	93	1	replace	final  Option  option  =  options.getOption(i,  i.next());	      final    Option    option    =    options.getOption(i);    	non-compiled	[CE]  illegal  start  of  expression	7	None	replace
13	[BUG]  [BUGGY]  final  Option  option  =(Option)i.next();  i.setParent(this);  [CE]  illegal  start  of  expression  [FE]              OptionException    [CONTEXT]    final  List  newAnonymous  =  new  ArrayList();  final  SortedMap  newOptionMap  =  new  TreeMap(ReverseStringComparator.getInstance());  final  Set  newPrefixes  =  new  HashSet();  for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {    [BUGGY]  final  Option  option  =(Option)i.next();  i.setParent(this);  [BUGGY]    final  Option  option  =  (Option)  i.next();  option.setParent(this);  if  (option  instanceof  Argument)  {  i.remove();  newAnonymous.add(option);  }  else  {  final  Set  triggers  =  option.getTriggers();  for  (Iterator  j  =  triggers.iterator();  j.hasNext();)  {  newOptionMap.put(j.next(),  option);  [CLASS]  GroupImpl  [METHOD]  <init>  [RETURN_TYPE]  String,int,int,boolean)  List  options  String  name  String  description  final  int  minimum  final  int  maximum  final  boolean  required  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  required  SortedMap  newOptionMap  optionMap  Iterator  i  j  List  anonymous  newAnonymous  options  Option  option  String  description  name  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	93	93	1	replace	final  Option  option  =(Option)i.next();  i.setParent(this);	      final    Option    option    =(Option)i.next();    i.remove();    	non-compiled	[CE]  illegal  start  of  expression	4	None	replace
14	[BUG]  [BUGGY]  if(i.hasNext())  {  final  Option  option  =(Option)i.next();  i.remove();  }  [CE]  illegal  start  of  expression  [FE]              OptionException    [CONTEXT]    final  List  newAnonymous  =  new  ArrayList();  final  SortedMap  newOptionMap  =  new  TreeMap(ReverseStringComparator.getInstance());  final  Set  newPrefixes  =  new  HashSet();  for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {    [BUGGY]  if(i.hasNext())  {  final  Option  option  =(Option)i.next();  i.remove();  }  [BUGGY]    final  Option  option  =  (Option)  i.next();  option.setParent(this);  if  (option  instanceof  Argument)  {  i.remove();  newAnonymous.add(option);  }  else  {  final  Set  triggers  =  option.getTriggers();  for  (Iterator  j  =  triggers.iterator();  j.hasNext();)  {  newOptionMap.put(j.next(),  option);  [CLASS]  GroupImpl  [METHOD]  <init>  [RETURN_TYPE]  String,int,int,boolean)  List  options  String  name  String  description  final  int  minimum  final  int  maximum  final  boolean  required  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  required  SortedMap  newOptionMap  optionMap  Iterator  i  j  List  anonymous  newAnonymous  options  Option  option  String  description  name  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	93	93	1	replace	if(i.hasNext())  {  final  Option  option  =(Option)i.next();  i.remove();  }	      final    Option    option    =(Option)i.next();    i.remove();    	non-compiled	[CE]  illegal  start  of  expression	4	None	replace
15	[BUG]  [BUGGY]  final  Option  option  =  options.getOption(i.next(),  description);  [CE]  illegal  start  of  expression  [FE]        OptionException    [CONTEXT]    final  List  newAnonymous  =  new  ArrayList();  final  SortedMap  newOptionMap  =  new  TreeMap(ReverseStringComparator.getInstance());  final  Set  newPrefixes  =  new  HashSet();  for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {    [BUGGY]  final  Option  option  =  options.getOption(i.next(),  description);  [BUGGY]    final  Option  option  =  (Option)  i.next();  option.setParent(this);  if  (option  instanceof  Argument)  {  i.remove();  newAnonymous.add(option);  }  else  {  final  Set  triggers  =  option.getTriggers();  for  (Iterator  j  =  triggers.iterator();  j.hasNext();)  {  newOptionMap.put(j.next(),  option);  [CLASS]  GroupImpl  [METHOD]  <init>  [RETURN_TYPE]  String,int,int,boolean)  List  options  String  name  String  description  final  int  minimum  final  int  maximum  final  boolean  required  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  required  SortedMap  newOptionMap  optionMap  Iterator  i  j  List  anonymous  newAnonymous  options  Option  option  String  description  name  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	93	93	1	replace	final  Option  option  =  options.getOption(i.next(),  description);	      final    Option    option    =    options.getOption(i.next());    	non-compiled	[CE]  illegal  start  of  expression	6	None	replace
16	[BUG]  [BUGGY]  final  Option  option  =  options.getOption(i,  description);  [CE]  illegal  start  of  expression  [FE]          OptionException    [CONTEXT]    final  List  newAnonymous  =  new  ArrayList();  final  SortedMap  newOptionMap  =  new  TreeMap(ReverseStringComparator.getInstance());  final  Set  newPrefixes  =  new  HashSet();  for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {    [BUGGY]  final  Option  option  =  options.getOption(i,  description);  [BUGGY]    final  Option  option  =  (Option)  i.next();  option.setParent(this);  if  (option  instanceof  Argument)  {  i.remove();  newAnonymous.add(option);  }  else  {  final  Set  triggers  =  option.getTriggers();  for  (Iterator  j  =  triggers.iterator();  j.hasNext();)  {  newOptionMap.put(j.next(),  option);  [CLASS]  GroupImpl  [METHOD]  <init>  [RETURN_TYPE]  String,int,int,boolean)  List  options  String  name  String  description  final  int  minimum  final  int  maximum  final  boolean  required  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  required  SortedMap  newOptionMap  optionMap  Iterator  i  j  List  anonymous  newAnonymous  options  Option  option  String  description  name  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	93	93	1	replace	final  Option  option  =  options.getOption(i,  description);	      final    Option    option    =    options.getOption(i);    	non-compiled	[CE]  illegal  start  of  expression	7	None	replace
