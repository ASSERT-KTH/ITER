bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  if(looksLikeOption(commandLine,  null)&&  option.canProcess(commandLine,  arg))  {  [CE]  illegal  start  of  expression  [FE]              OptionException    [CONTEXT]      for  (final  Iterator  iter  =  tailMap.values().iterator();  iter.hasNext();)  {  final  Option  option  =  (Option)  iter.next();  if  (option.canProcess(commandLine,  arg))  {  return  true;  }  }    [BUGGY]  if(looksLikeOption(commandLine,  null)&&  option.canProcess(commandLine,  arg))  {  [BUGGY]    return  false;  }  if  (anonymous.size()  >  0)  {  return  true;  }  return  false;  }  [CLASS]  GroupImpl  [METHOD]  canProcess  [RETURN_TYPE]  boolean  WriteableCommandLine  commandLine  String  arg  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  SortedMap  newOptionMap  optionMap  WriteableCommandLine  commandLine  Iterator  iter  List  anonymous  newAnonymous  options  Option  option  String  arg  description  name  Map  tailMap  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	139	139	1	replace	if(looksLikeOption(commandLine,  null)&&  option.canProcess(commandLine,  arg))  {	  if(looksLikeOption(commandLine,    null))    {    	non-compiled	[CE]  illegal  start  of  expression	4	None	replace
2	[BUG]  [BUGGY]  if(canProcessOption(commandLine,  null))  {  [CE]  illegal  start  of  expression  [FE]                OptionException    [CONTEXT]      for  (final  Iterator  iter  =  tailMap.values().iterator();  iter.hasNext();)  {  final  Option  option  =  (Option)  iter.next();  if  (option.canProcess(commandLine,  arg))  {  return  true;  }  }    [BUGGY]  if(canProcessOption(commandLine,  null))  {  [BUGGY]    return  false;  }  if  (anonymous.size()  >  0)  {  return  true;  }  return  false;  }  [CLASS]  GroupImpl  [METHOD]  canProcess  [RETURN_TYPE]  boolean  WriteableCommandLine  commandLine  String  arg  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  SortedMap  newOptionMap  optionMap  WriteableCommandLine  commandLine  Iterator  iter  List  anonymous  newAnonymous  options  Option  option  String  arg  description  name  Map  tailMap  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	139	139	1	replace	if(canProcessOption(commandLine,  null))  {	  if(looksLikeOption(commandLine,    null))    {    	non-compiled	[CE]  illegal  start  of  expression	4	None	replace
3	[BUG]  [BUGGY]  if(looksLikeOption(commandLine,  null)&&  options.canProcess(commandLine,  arg))  {  [CE]  illegal  start  of  expression  [FE]                  OptionException    [CONTEXT]      for  (final  Iterator  iter  =  tailMap.values().iterator();  iter.hasNext();)  {  final  Option  option  =  (Option)  iter.next();  if  (option.canProcess(commandLine,  arg))  {  return  true;  }  }    [BUGGY]  if(looksLikeOption(commandLine,  null)&&  options.canProcess(commandLine,  arg))  {  [BUGGY]    return  false;  }  if  (anonymous.size()  >  0)  {  return  true;  }  return  false;  }  [CLASS]  GroupImpl  [METHOD]  canProcess  [RETURN_TYPE]  boolean  WriteableCommandLine  commandLine  String  arg  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  SortedMap  newOptionMap  optionMap  WriteableCommandLine  commandLine  Iterator  iter  List  anonymous  newAnonymous  options  Option  option  String  arg  description  name  Map  tailMap  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	139	139	1	replace	if(looksLikeOption(commandLine,  null)&&  options.canProcess(commandLine,  arg))  {	  if(looksLikeOption(commandLine,    null))    {    	non-compiled	[CE]  illegal  start  of  expression	4	None	replace
4	[BUG]  [BUGGY]  final  List  <  Option>  newAnonymous  =(List  <  Option>)iter.next();  [CE]  illegal  start  of  expression  [FE]              OptionException    [CONTEXT]      for  (final  Iterator  iter  =  tailMap.values().iterator();  iter.hasNext();)  {  final  Option  option  =  (Option)  iter.next();  if  (option.canProcess(commandLine,  arg))  {  return  true;  }  }    [BUGGY]  final  List  <  Option>  newAnonymous  =(List  <  Option>)iter.next();  [BUGGY]    if  (looksLikeOption(commandLine,  arg))  {  return  false;  }  if  (anonymous.size()  >  0)  {  return  true;  }  return  false;  }  [CLASS]  GroupImpl  [METHOD]  canProcess  [RETURN_TYPE]  boolean  WriteableCommandLine  commandLine  String  arg  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  SortedMap  newOptionMap  optionMap  WriteableCommandLine  commandLine  Iterator  iter  List  anonymous  newAnonymous  options  Option  option  String  arg  description  name  Map  tailMap  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	139	139	1	replace	final  List  <  Option>  newAnonymous  =(List  <  Option>)iter.next();	      List    <    Option>    newAnonymous    =(List    <    Option>)iter.next();    	non-compiled	[CE]  illegal  start  of  expression	9	None	replace
5	[BUG]  [BUGGY]  Set  <  Option>  newAnonymous  =(Set  <  Option>)iter.next();  [CE]  illegal  start  of  expression  [FE]                OptionException    [CONTEXT]      for  (final  Iterator  iter  =  tailMap.values().iterator();  iter.hasNext();)  {  final  Option  option  =  (Option)  iter.next();  if  (option.canProcess(commandLine,  arg))  {  return  true;  }  }    [BUGGY]  Set  <  Option>  newAnonymous  =(Set  <  Option>)iter.next();  [BUGGY]    if  (looksLikeOption(commandLine,  arg))  {  return  false;  }  if  (anonymous.size()  >  0)  {  return  true;  }  return  false;  }  [CLASS]  GroupImpl  [METHOD]  canProcess  [RETURN_TYPE]  boolean  WriteableCommandLine  commandLine  String  arg  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  SortedMap  newOptionMap  optionMap  WriteableCommandLine  commandLine  Iterator  iter  List  anonymous  newAnonymous  options  Option  option  String  arg  description  name  Map  tailMap  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	139	139	1	replace	Set  <  Option>  newAnonymous  =(Set  <  Option>)iter.next();	      List    <    Option>    newAnonymous    =(List    <    Option>)iter.next();    	non-compiled	[CE]  illegal  start  of  expression	9	None	replace
6	[BUG]  [BUGGY]  ArrayList  <  Option>  newAnonymous  =(ArrayList  <  Option>)iter.next();  [CE]  illegal  start  of  expression  [FE]                  OptionException    [CONTEXT]      for  (final  Iterator  iter  =  tailMap.values().iterator();  iter.hasNext();)  {  final  Option  option  =  (Option)  iter.next();  if  (option.canProcess(commandLine,  arg))  {  return  true;  }  }    [BUGGY]  ArrayList  <  Option>  newAnonymous  =(ArrayList  <  Option>)iter.next();  [BUGGY]    if  (looksLikeOption(commandLine,  arg))  {  return  false;  }  if  (anonymous.size()  >  0)  {  return  true;  }  return  false;  }  [CLASS]  GroupImpl  [METHOD]  canProcess  [RETURN_TYPE]  boolean  WriteableCommandLine  commandLine  String  arg  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  SortedMap  newOptionMap  optionMap  WriteableCommandLine  commandLine  Iterator  iter  List  anonymous  newAnonymous  options  Option  option  String  arg  description  name  Map  tailMap  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	139	139	1	replace	ArrayList  <  Option>  newAnonymous  =(ArrayList  <  Option>)iter.next();	      List    <    Option>    newAnonymous    =(List    <    Option>)iter.next();    	non-compiled	[CE]  illegal  start  of  expression	9	None	replace
7	[BUG]  [BUGGY]  if(option.canProcess(commandLine,  arg)||  options.canProcess(commandLine,  arg))  {  [CE]  illegal  start  of  expression  [FE]            OptionException    [CONTEXT]      for  (final  Iterator  iter  =  tailMap.values().iterator();  iter.hasNext();)  {  final  Option  option  =  (Option)  iter.next();  if  (option.canProcess(commandLine,  arg))  {  return  true;  }  }    [BUGGY]  if(option.canProcess(commandLine,  arg)||  options.canProcess(commandLine,  arg))  {  [BUGGY]    return  false;  }  if  (anonymous.size()  >  0)  {  return  true;  }  return  false;  }  [CLASS]  GroupImpl  [METHOD]  canProcess  [RETURN_TYPE]  boolean  WriteableCommandLine  commandLine  String  arg  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  SortedMap  newOptionMap  optionMap  WriteableCommandLine  commandLine  Iterator  iter  List  anonymous  newAnonymous  options  Option  option  String  arg  description  name  Map  tailMap  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	139	139	1	replace	if(option.canProcess(commandLine,  arg)||  options.canProcess(commandLine,  arg))  {	  if(looksLikeOption(commandLine,    arg)||    options.canProcess(commandLine,    arg))    {    	non-compiled	[CE]  illegal  start  of  expression	3	None	replace
8	[BUG]  [BUGGY]  if(looksLikeOption(commandLine,  arg)&&  options.canProcess(commandLine,  arg))  {  [CE]  illegal  start  of  expression  [FE]              OptionException    [CONTEXT]      for  (final  Iterator  iter  =  tailMap.values().iterator();  iter.hasNext();)  {  final  Option  option  =  (Option)  iter.next();  if  (option.canProcess(commandLine,  arg))  {  return  true;  }  }    [BUGGY]  if(looksLikeOption(commandLine,  arg)&&  options.canProcess(commandLine,  arg))  {  [BUGGY]    return  false;  }  if  (anonymous.size()  >  0)  {  return  true;  }  return  false;  }  [CLASS]  GroupImpl  [METHOD]  canProcess  [RETURN_TYPE]  boolean  WriteableCommandLine  commandLine  String  arg  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  SortedMap  newOptionMap  optionMap  WriteableCommandLine  commandLine  Iterator  iter  List  anonymous  newAnonymous  options  Option  option  String  arg  description  name  Map  tailMap  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	139	139	1	replace	if(looksLikeOption(commandLine,  arg)&&  options.canProcess(commandLine,  arg))  {	  if(looksLikeOption(commandLine,    arg)||    options.canProcess(commandLine,    arg))    {    	non-compiled	[CE]  illegal  start  of  expression	3	None	replace
9	[BUG]  [BUGGY]  if(hasOption(option,  commandLine)||  options.canProcess(commandLine,  arg))  {  [CE]  illegal  start  of  expression  [FE]                OptionException    [CONTEXT]      for  (final  Iterator  iter  =  tailMap.values().iterator();  iter.hasNext();)  {  final  Option  option  =  (Option)  iter.next();  if  (option.canProcess(commandLine,  arg))  {  return  true;  }  }    [BUGGY]  if(hasOption(option,  commandLine)||  options.canProcess(commandLine,  arg))  {  [BUGGY]    return  false;  }  if  (anonymous.size()  >  0)  {  return  true;  }  return  false;  }  [CLASS]  GroupImpl  [METHOD]  canProcess  [RETURN_TYPE]  boolean  WriteableCommandLine  commandLine  String  arg  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  SortedMap  newOptionMap  optionMap  WriteableCommandLine  commandLine  Iterator  iter  List  anonymous  newAnonymous  options  Option  option  String  arg  description  name  Map  tailMap  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	139	139	1	replace	if(hasOption(option,  commandLine)||  options.canProcess(commandLine,  arg))  {	  if(looksLikeOption(commandLine,    arg)||    options.canProcess(commandLine,    arg))    {    	non-compiled	[CE]  illegal  start  of  expression	3	None	replace
10	[BUG]  [BUGGY]  if(canProcessOption(commandLine,  arg))  {  [CE]  illegal  start  of  expression  [FE]        OptionException    [CONTEXT]      for  (final  Iterator  iter  =  tailMap.values().iterator();  iter.hasNext();)  {  final  Option  option  =  (Option)  iter.next();  if  (option.canProcess(commandLine,  arg))  {  return  true;  }  }    [BUGGY]  if(canProcessOption(commandLine,  arg))  {  [BUGGY]    return  false;  }  if  (anonymous.size()  >  0)  {  return  true;  }  return  false;  }  [CLASS]  GroupImpl  [METHOD]  canProcess  [RETURN_TYPE]  boolean  WriteableCommandLine  commandLine  String  arg  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  SortedMap  newOptionMap  optionMap  WriteableCommandLine  commandLine  Iterator  iter  List  anonymous  newAnonymous  options  Option  option  String  arg  description  name  Map  tailMap  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	139	139	1	replace	if(canProcessOption(commandLine,  arg))  {	  if(looksLikeOption(arg,    commandLine))    {    	non-compiled	[CE]  illegal  start  of  expression	11	None	replace
11	[BUG]  [BUGGY]  if(canProcessLikeOption(commandLine,  arg))  {  [CE]  illegal  start  of  expression  [FE]          OptionException    [CONTEXT]      for  (final  Iterator  iter  =  tailMap.values().iterator();  iter.hasNext();)  {  final  Option  option  =  (Option)  iter.next();  if  (option.canProcess(commandLine,  arg))  {  return  true;  }  }    [BUGGY]  if(canProcessLikeOption(commandLine,  arg))  {  [BUGGY]    return  false;  }  if  (anonymous.size()  >  0)  {  return  true;  }  return  false;  }  [CLASS]  GroupImpl  [METHOD]  canProcess  [RETURN_TYPE]  boolean  WriteableCommandLine  commandLine  String  arg  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  SortedMap  newOptionMap  optionMap  WriteableCommandLine  commandLine  Iterator  iter  List  anonymous  newAnonymous  options  Option  option  String  arg  description  name  Map  tailMap  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	139	139	1	replace	if(canProcessLikeOption(commandLine,  arg))  {	  if(looksLikeOption(arg,    commandLine))    {    	non-compiled	[CE]  illegal  start  of  expression	11	None	replace
12	[BUG]  [BUGGY]  Option  option  =  option.createOption(commandLine);  [CE]  illegal  start  of  expression  [FE]          OptionException    [CONTEXT]      for  (final  Iterator  iter  =  tailMap.values().iterator();  iter.hasNext();)  {  final  Option  option  =  (Option)  iter.next();  if  (option.canProcess(commandLine,  arg))  {  return  true;  }  }    [BUGGY]  Option  option  =  option.createOption(commandLine);  [BUGGY]    if  (looksLikeOption(commandLine,  arg))  {  return  false;  }  if  (anonymous.size()  >  0)  {  return  true;  }  return  false;  }  [CLASS]  GroupImpl  [METHOD]  canProcess  [RETURN_TYPE]  boolean  WriteableCommandLine  commandLine  String  arg  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  SortedMap  newOptionMap  optionMap  WriteableCommandLine  commandLine  Iterator  iter  List  anonymous  newAnonymous  options  Option  option  String  arg  description  name  Map  tailMap  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	139	139	1	replace	Option  option  =  option.createOption(commandLine);	      Option    option    =    option.createOption(arg);    	non-compiled	[CE]  illegal  start  of  expression	18	None	replace
13	[BUG]  [BUGGY]  Option  option  =  option.createOption(commandLine,  arg);  [CE]  illegal  start  of  expression  [FE]            OptionException    [CONTEXT]      for  (final  Iterator  iter  =  tailMap.values().iterator();  iter.hasNext();)  {  final  Option  option  =  (Option)  iter.next();  if  (option.canProcess(commandLine,  arg))  {  return  true;  }  }    [BUGGY]  Option  option  =  option.createOption(commandLine,  arg);  [BUGGY]    if  (looksLikeOption(commandLine,  arg))  {  return  false;  }  if  (anonymous.size()  >  0)  {  return  true;  }  return  false;  }  [CLASS]  GroupImpl  [METHOD]  canProcess  [RETURN_TYPE]  boolean  WriteableCommandLine  commandLine  String  arg  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  SortedMap  newOptionMap  optionMap  WriteableCommandLine  commandLine  Iterator  iter  List  anonymous  newAnonymous  options  Option  option  String  arg  description  name  Map  tailMap  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	139	139	1	replace	Option  option  =  option.createOption(commandLine,  arg);	      Option    option    =    option.createOption(arg);    	non-compiled	[CE]  illegal  start  of  expression	18	None	replace
14	[BUG]  [BUGGY]  Option  option  =  option.createOption(arg,  description);  [CE]  illegal  start  of  expression  [FE]              OptionException    [CONTEXT]      for  (final  Iterator  iter  =  tailMap.values().iterator();  iter.hasNext();)  {  final  Option  option  =  (Option)  iter.next();  if  (option.canProcess(commandLine,  arg))  {  return  true;  }  }    [BUGGY]  Option  option  =  option.createOption(arg,  description);  [BUGGY]    if  (looksLikeOption(commandLine,  arg))  {  return  false;  }  if  (anonymous.size()  >  0)  {  return  true;  }  return  false;  }  [CLASS]  GroupImpl  [METHOD]  canProcess  [RETURN_TYPE]  boolean  WriteableCommandLine  commandLine  String  arg  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  SortedMap  newOptionMap  optionMap  WriteableCommandLine  commandLine  Iterator  iter  List  anonymous  newAnonymous  options  Option  option  String  arg  description  name  Map  tailMap  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	139	139	1	replace	Option  option  =  option.createOption(arg,  description);	      Option    option    =    option.createOption(arg);    	non-compiled	[CE]  illegal  start  of  expression	18	None	replace
15	[BUG]  [BUGGY]  Option  option  =  optionMap.createOption(arg);  [CE]  illegal  start  of  expression  [FE]                OptionException    [CONTEXT]      for  (final  Iterator  iter  =  tailMap.values().iterator();  iter.hasNext();)  {  final  Option  option  =  (Option)  iter.next();  if  (option.canProcess(commandLine,  arg))  {  return  true;  }  }    [BUGGY]  Option  option  =  optionMap.createOption(arg);  [BUGGY]    if  (looksLikeOption(commandLine,  arg))  {  return  false;  }  if  (anonymous.size()  >  0)  {  return  true;  }  return  false;  }  [CLASS]  GroupImpl  [METHOD]  canProcess  [RETURN_TYPE]  boolean  WriteableCommandLine  commandLine  String  arg  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  SortedMap  newOptionMap  optionMap  WriteableCommandLine  commandLine  Iterator  iter  List  anonymous  newAnonymous  options  Option  option  String  arg  description  name  Map  tailMap  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	139	139	1	replace	Option  option  =  optionMap.createOption(arg);	      Option    option    =    option.createOption(arg);    	non-compiled	[CE]  illegal  start  of  expression	18	None	replace
16	[BUG]  [BUGGY]  List  <  Option>  newAnonymous  =(List  <  Option>)tailMap.values().iterator();  [CE]  illegal  start  of  expression  [FE]        OptionException    [CONTEXT]      for  (final  Iterator  iter  =  tailMap.values().iterator();  iter.hasNext();)  {  final  Option  option  =  (Option)  iter.next();  if  (option.canProcess(commandLine,  arg))  {  return  true;  }  }    [BUGGY]  List  <  Option>  newAnonymous  =(List  <  Option>)tailMap.values().iterator();  [BUGGY]    if  (looksLikeOption(commandLine,  arg))  {  return  false;  }  if  (anonymous.size()  >  0)  {  return  true;  }  return  false;  }  [CLASS]  GroupImpl  [METHOD]  canProcess  [RETURN_TYPE]  boolean  WriteableCommandLine  commandLine  String  arg  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  SortedMap  newOptionMap  optionMap  WriteableCommandLine  commandLine  Iterator  iter  List  anonymous  newAnonymous  options  Option  option  String  arg  description  name  Map  tailMap  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	139	139	1	replace	List  <  Option>  newAnonymous  =(List  <  Option>)tailMap.values().iterator();	      List    <    Option>    newAnonymous    =(List    <    Option>)optionMap.values().iterator();    	non-compiled	[CE]  illegal  start  of  expression	6	None	replace
17	[BUG]  [BUGGY]  List  <  Option>  newAnonymous  =(List  <  Option>)this.optionMap.values().iterator();  [CE]  illegal  start  of  expression  [FE]          OptionException    [CONTEXT]      for  (final  Iterator  iter  =  tailMap.values().iterator();  iter.hasNext();)  {  final  Option  option  =  (Option)  iter.next();  if  (option.canProcess(commandLine,  arg))  {  return  true;  }  }    [BUGGY]  List  <  Option>  newAnonymous  =(List  <  Option>)this.optionMap.values().iterator();  [BUGGY]    if  (looksLikeOption(commandLine,  arg))  {  return  false;  }  if  (anonymous.size()  >  0)  {  return  true;  }  return  false;  }  [CLASS]  GroupImpl  [METHOD]  canProcess  [RETURN_TYPE]  boolean  WriteableCommandLine  commandLine  String  arg  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  SortedMap  newOptionMap  optionMap  WriteableCommandLine  commandLine  Iterator  iter  List  anonymous  newAnonymous  options  Option  option  String  arg  description  name  Map  tailMap  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	139	139	1	replace	List  <  Option>  newAnonymous  =(List  <  Option>)this.optionMap.values().iterator();	      List    <    Option>    newAnonymous    =(List    <    Option>)optionMap.values().iterator();    	non-compiled	[CE]  illegal  start  of  expression	6	None	replace
18	[BUG]  [BUGGY]  List  <  Option>  newAnonymous  =(List  <  Option>)commandLine.values().iterator();  [CE]  illegal  start  of  expression  [FE]            OptionException    [CONTEXT]      for  (final  Iterator  iter  =  tailMap.values().iterator();  iter.hasNext();)  {  final  Option  option  =  (Option)  iter.next();  if  (option.canProcess(commandLine,  arg))  {  return  true;  }  }    [BUGGY]  List  <  Option>  newAnonymous  =(List  <  Option>)commandLine.values().iterator();  [BUGGY]    if  (looksLikeOption(commandLine,  arg))  {  return  false;  }  if  (anonymous.size()  >  0)  {  return  true;  }  return  false;  }  [CLASS]  GroupImpl  [METHOD]  canProcess  [RETURN_TYPE]  boolean  WriteableCommandLine  commandLine  String  arg  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  SortedMap  newOptionMap  optionMap  WriteableCommandLine  commandLine  Iterator  iter  List  anonymous  newAnonymous  options  Option  option  String  arg  description  name  Map  tailMap  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	139	139	1	replace	List  <  Option>  newAnonymous  =(List  <  Option>)commandLine.values().iterator();	      List    <    Option>    newAnonymous    =(List    <    Option>)optionMap.values().iterator();    	non-compiled	[CE]  illegal  start  of  expression	6	None	replace
19	[BUG]  [BUGGY]  List  <  Option>  newAnonymous  =  option.values().iterator();  [CE]  illegal  start  of  expression  [FE]        OptionException    [CONTEXT]      for  (final  Iterator  iter  =  tailMap.values().iterator();  iter.hasNext();)  {  final  Option  option  =  (Option)  iter.next();  if  (option.canProcess(commandLine,  arg))  {  return  true;  }  }    [BUGGY]  List  <  Option>  newAnonymous  =  option.values().iterator();  [BUGGY]    if  (looksLikeOption(commandLine,  arg))  {  return  false;  }  if  (anonymous.size()  >  0)  {  return  true;  }  return  false;  }  [CLASS]  GroupImpl  [METHOD]  canProcess  [RETURN_TYPE]  boolean  WriteableCommandLine  commandLine  String  arg  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  SortedMap  newOptionMap  optionMap  WriteableCommandLine  commandLine  Iterator  iter  List  anonymous  newAnonymous  options  Option  option  String  arg  description  name  Map  tailMap  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	139	139	1	replace	List  <  Option>  newAnonymous  =  option.values().iterator();	      List    <    Option>    newAnonymous    =    options.values().iterator();    	non-compiled	[CE]  illegal  start  of  expression	12	None	replace
20	[BUG]  [BUGGY]  List  <  Option>  newAnonymous  =  options.keySet().iterator();  [CE]  illegal  start  of  expression  [FE]          OptionException    [CONTEXT]      for  (final  Iterator  iter  =  tailMap.values().iterator();  iter.hasNext();)  {  final  Option  option  =  (Option)  iter.next();  if  (option.canProcess(commandLine,  arg))  {  return  true;  }  }    [BUGGY]  List  <  Option>  newAnonymous  =  options.keySet().iterator();  [BUGGY]    if  (looksLikeOption(commandLine,  arg))  {  return  false;  }  if  (anonymous.size()  >  0)  {  return  true;  }  return  false;  }  [CLASS]  GroupImpl  [METHOD]  canProcess  [RETURN_TYPE]  boolean  WriteableCommandLine  commandLine  String  arg  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  SortedMap  newOptionMap  optionMap  WriteableCommandLine  commandLine  Iterator  iter  List  anonymous  newAnonymous  options  Option  option  String  arg  description  name  Map  tailMap  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	139	139	1	replace	List  <  Option>  newAnonymous  =  options.keySet().iterator();	      List    <    Option>    newAnonymous    =    options.values().iterator();    	non-compiled	[CE]  illegal  start  of  expression	12	None	replace
21	[BUG]  [BUGGY]  option  =(Option)iter.next();  [CE]  illegal  start  of  expression  [FE]            OptionException    [CONTEXT]      for  (final  Iterator  iter  =  tailMap.values().iterator();  iter.hasNext();)  {  final  Option  option  =  (Option)  iter.next();  if  (option.canProcess(commandLine,  arg))  {  return  true;  }  }    [BUGGY]  option  =(Option)iter.next();  [BUGGY]    if  (looksLikeOption(commandLine,  arg))  {  return  false;  }  if  (anonymous.size()  >  0)  {  return  true;  }  return  false;  }  [CLASS]  GroupImpl  [METHOD]  canProcess  [RETURN_TYPE]  boolean  WriteableCommandLine  commandLine  String  arg  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  SortedMap  newOptionMap  optionMap  WriteableCommandLine  commandLine  Iterator  iter  List  anonymous  newAnonymous  options  Option  option  String  arg  description  name  Map  tailMap  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	139	139	1	replace	option  =(Option)iter.next();	      Option    option    =(Option)iter.next();    	non-compiled	[CE]  illegal  start  of  expression	8	None	replace
22	[BUG]  [BUGGY]  Option  option  =  optionMap.getOption(commandLine);  [CE]  illegal  start  of  expression  [FE]        OptionException    [CONTEXT]      for  (final  Iterator  iter  =  tailMap.values().iterator();  iter.hasNext();)  {  final  Option  option  =  (Option)  iter.next();  if  (option.canProcess(commandLine,  arg))  {  return  true;  }  }    [BUGGY]  Option  option  =  optionMap.getOption(commandLine);  [BUGGY]    if  (looksLikeOption(commandLine,  arg))  {  return  false;  }  if  (anonymous.size()  >  0)  {  return  true;  }  return  false;  }  [CLASS]  GroupImpl  [METHOD]  canProcess  [RETURN_TYPE]  boolean  WriteableCommandLine  commandLine  String  arg  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  SortedMap  newOptionMap  optionMap  WriteableCommandLine  commandLine  Iterator  iter  List  anonymous  newAnonymous  options  Option  option  String  arg  description  name  Map  tailMap  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	139	139	1	replace	Option  option  =  optionMap.getOption(commandLine);	      Option    option    =    option.getOption(commandLine);    	non-compiled	[CE]  illegal  start  of  expression	17	None	replace
23	[BUG]  [BUGGY]  Option  option  =  option.getOption(commandLine,  description);  [CE]  illegal  start  of  expression  [FE]          OptionException    [CONTEXT]      for  (final  Iterator  iter  =  tailMap.values().iterator();  iter.hasNext();)  {  final  Option  option  =  (Option)  iter.next();  if  (option.canProcess(commandLine,  arg))  {  return  true;  }  }    [BUGGY]  Option  option  =  option.getOption(commandLine,  description);  [BUGGY]    if  (looksLikeOption(commandLine,  arg))  {  return  false;  }  if  (anonymous.size()  >  0)  {  return  true;  }  return  false;  }  [CLASS]  GroupImpl  [METHOD]  canProcess  [RETURN_TYPE]  boolean  WriteableCommandLine  commandLine  String  arg  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  SortedMap  newOptionMap  optionMap  WriteableCommandLine  commandLine  Iterator  iter  List  anonymous  newAnonymous  options  Option  option  String  arg  description  name  Map  tailMap  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	139	139	1	replace	Option  option  =  option.getOption(commandLine,  description);	      Option    option    =    option.getOption(commandLine);    	non-compiled	[CE]  illegal  start  of  expression	17	None	replace
24	[BUG]  [BUGGY]  List  <  Option>  newAnonymous  =  options.values();  [CE]  illegal  start  of  expression  [FE]              OptionException    [CONTEXT]      for  (final  Iterator  iter  =  tailMap.values().iterator();  iter.hasNext();)  {  final  Option  option  =  (Option)  iter.next();  if  (option.canProcess(commandLine,  arg))  {  return  true;  }  }    [BUGGY]  List  <  Option>  newAnonymous  =  options.values();  [BUGGY]    if  (looksLikeOption(commandLine,  arg))  {  return  false;  }  if  (anonymous.size()  >  0)  {  return  true;  }  return  false;  }  [CLASS]  GroupImpl  [METHOD]  canProcess  [RETURN_TYPE]  boolean  WriteableCommandLine  commandLine  String  arg  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  SortedMap  newOptionMap  optionMap  WriteableCommandLine  commandLine  Iterator  iter  List  anonymous  newAnonymous  options  Option  option  String  arg  description  name  Map  tailMap  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	139	139	1	replace	List  <  Option>  newAnonymous  =  options.values();	      List    <    Option>    newAnonymous    =    optionMap.values();    	non-compiled	[CE]  illegal  start  of  expression	15	None	replace
25	[BUG]  [BUGGY]  List  <  Option>  newAnonymous  =  tailMap.values();  [CE]  illegal  start  of  expression  [FE]                OptionException    [CONTEXT]      for  (final  Iterator  iter  =  tailMap.values().iterator();  iter.hasNext();)  {  final  Option  option  =  (Option)  iter.next();  if  (option.canProcess(commandLine,  arg))  {  return  true;  }  }    [BUGGY]  List  <  Option>  newAnonymous  =  tailMap.values();  [BUGGY]    if  (looksLikeOption(commandLine,  arg))  {  return  false;  }  if  (anonymous.size()  >  0)  {  return  true;  }  return  false;  }  [CLASS]  GroupImpl  [METHOD]  canProcess  [RETURN_TYPE]  boolean  WriteableCommandLine  commandLine  String  arg  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  SortedMap  newOptionMap  optionMap  WriteableCommandLine  commandLine  Iterator  iter  List  anonymous  newAnonymous  options  Option  option  String  arg  description  name  Map  tailMap  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	139	139	1	replace	List  <  Option>  newAnonymous  =  tailMap.values();	      List    <    Option>    newAnonymous    =    optionMap.values();    	non-compiled	[CE]  illegal  start  of  expression	15	None	replace
26	[BUG]  [BUGGY]  List  <  Option>  newAnonymous  =  optionMap.newAnonymous();  [CE]  illegal  start  of  expression  [FE]                  OptionException    [CONTEXT]      for  (final  Iterator  iter  =  tailMap.values().iterator();  iter.hasNext();)  {  final  Option  option  =  (Option)  iter.next();  if  (option.canProcess(commandLine,  arg))  {  return  true;  }  }    [BUGGY]  List  <  Option>  newAnonymous  =  optionMap.newAnonymous();  [BUGGY]    if  (looksLikeOption(commandLine,  arg))  {  return  false;  }  if  (anonymous.size()  >  0)  {  return  true;  }  return  false;  }  [CLASS]  GroupImpl  [METHOD]  canProcess  [RETURN_TYPE]  boolean  WriteableCommandLine  commandLine  String  arg  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  SortedMap  newOptionMap  optionMap  WriteableCommandLine  commandLine  Iterator  iter  List  anonymous  newAnonymous  options  Option  option  String  arg  description  name  Map  tailMap  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	139	139	1	replace	List  <  Option>  newAnonymous  =  optionMap.newAnonymous();	      List    <    Option>    newAnonymous    =    optionMap.values();    	non-compiled	[CE]  illegal  start  of  expression	15	None	replace
27	[BUG]  [BUGGY]  if(!canProcessOption(commandLine,  arg))  {  [CE]  illegal  start  of  expression  [FE]        OptionException    [CONTEXT]      for  (final  Iterator  iter  =  tailMap.values().iterator();  iter.hasNext();)  {  final  Option  option  =  (Option)  iter.next();  if  (option.canProcess(commandLine,  arg))  {  return  true;  }  }    [BUGGY]  if(!canProcessOption(commandLine,  arg))  {  [BUGGY]    return  false;  }  if  (anonymous.size()  >  0)  {  return  true;  }  return  false;  }  [CLASS]  GroupImpl  [METHOD]  canProcess  [RETURN_TYPE]  boolean  WriteableCommandLine  commandLine  String  arg  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  SortedMap  newOptionMap  optionMap  WriteableCommandLine  commandLine  Iterator  iter  List  anonymous  newAnonymous  options  Option  option  String  arg  description  name  Map  tailMap  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	139	139	1	replace	if(!canProcessOption(commandLine,  arg))  {	  if(!looksLikeOption(commandLine,    arg))    {    	non-compiled	[CE]  illegal  start  of  expression	1	None	replace
28	[BUG]  [BUGGY]  if(!looksLikeOption(commandLine,  arg)||!option.canProcess(commandLine,  arg))  {  [CE]  illegal  start  of  expression  [FE]          OptionException    [CONTEXT]      for  (final  Iterator  iter  =  tailMap.values().iterator();  iter.hasNext();)  {  final  Option  option  =  (Option)  iter.next();  if  (option.canProcess(commandLine,  arg))  {  return  true;  }  }    [BUGGY]  if(!looksLikeOption(commandLine,  arg)||!option.canProcess(commandLine,  arg))  {  [BUGGY]    return  false;  }  if  (anonymous.size()  >  0)  {  return  true;  }  return  false;  }  [CLASS]  GroupImpl  [METHOD]  canProcess  [RETURN_TYPE]  boolean  WriteableCommandLine  commandLine  String  arg  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  SortedMap  newOptionMap  optionMap  WriteableCommandLine  commandLine  Iterator  iter  List  anonymous  newAnonymous  options  Option  option  String  arg  description  name  Map  tailMap  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	139	139	1	replace	if(!looksLikeOption(commandLine,  arg)||!option.canProcess(commandLine,  arg))  {	  if(!looksLikeOption(commandLine,    arg))    {    	non-compiled	[CE]  illegal  start  of  expression	1	None	replace
29	[BUG]  [BUGGY]  if(!looksLikeOption(commandLine,  arg)&&!option.canProcess(commandLine,  arg))  {  [CE]  illegal  start  of  expression  [FE]            OptionException    [CONTEXT]      for  (final  Iterator  iter  =  tailMap.values().iterator();  iter.hasNext();)  {  final  Option  option  =  (Option)  iter.next();  if  (option.canProcess(commandLine,  arg))  {  return  true;  }  }    [BUGGY]  if(!looksLikeOption(commandLine,  arg)&&!option.canProcess(commandLine,  arg))  {  [BUGGY]    return  false;  }  if  (anonymous.size()  >  0)  {  return  true;  }  return  false;  }  [CLASS]  GroupImpl  [METHOD]  canProcess  [RETURN_TYPE]  boolean  WriteableCommandLine  commandLine  String  arg  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  SortedMap  newOptionMap  optionMap  WriteableCommandLine  commandLine  Iterator  iter  List  anonymous  newAnonymous  options  Option  option  String  arg  description  name  Map  tailMap  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	139	139	1	replace	if(!looksLikeOption(commandLine,  arg)&&!option.canProcess(commandLine,  arg))  {	  if(!looksLikeOption(commandLine,    arg))    {    	non-compiled	[CE]  illegal  start  of  expression	1	None	replace
30	[BUG]  [BUGGY]  if(!looksLikeOption(commandLine,  arg)&&  option.canProcess(commandLine,  arg))  {  [CE]  illegal  start  of  expression  [FE]              OptionException    [CONTEXT]      for  (final  Iterator  iter  =  tailMap.values().iterator();  iter.hasNext();)  {  final  Option  option  =  (Option)  iter.next();  if  (option.canProcess(commandLine,  arg))  {  return  true;  }  }    [BUGGY]  if(!looksLikeOption(commandLine,  arg)&&  option.canProcess(commandLine,  arg))  {  [BUGGY]    return  false;  }  if  (anonymous.size()  >  0)  {  return  true;  }  return  false;  }  [CLASS]  GroupImpl  [METHOD]  canProcess  [RETURN_TYPE]  boolean  WriteableCommandLine  commandLine  String  arg  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  SortedMap  newOptionMap  optionMap  WriteableCommandLine  commandLine  Iterator  iter  List  anonymous  newAnonymous  options  Option  option  String  arg  description  name  Map  tailMap  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	139	139	1	replace	if(!looksLikeOption(commandLine,  arg)&&  option.canProcess(commandLine,  arg))  {	  if(!looksLikeOption(commandLine,    arg))    {    	non-compiled	[CE]  illegal  start  of  expression	1	None	replace
31	[BUG]  [BUGGY]  if(looksLikeOption(commandLine,  true))  {  [CE]  illegal  start  of  expression  [FE]          OptionException    [CONTEXT]      for  (final  Iterator  iter  =  tailMap.values().iterator();  iter.hasNext();)  {  final  Option  option  =  (Option)  iter.next();  if  (option.canProcess(commandLine,  arg))  {  return  true;  }  }    [BUGGY]  if(looksLikeOption(commandLine,  true))  {  [BUGGY]    return  false;  }  if  (anonymous.size()  >  0)  {  return  true;  }  return  false;  }  [CLASS]  GroupImpl  [METHOD]  canProcess  [RETURN_TYPE]  boolean  WriteableCommandLine  commandLine  String  arg  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  SortedMap  newOptionMap  optionMap  WriteableCommandLine  commandLine  Iterator  iter  List  anonymous  newAnonymous  options  Option  option  String  arg  description  name  Map  tailMap  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	139	139	1	replace	if(looksLikeOption(commandLine,  true))  {	  if(looksLikeOption(commandLine,    false))    {    	non-compiled	[CE]  illegal  start  of  expression	2	None	replace
32	[BUG]  [BUGGY]  if(!looksLikeOption(commandLine,  false))  {  [CE]  illegal  start  of  expression  [FE]            OptionException    [CONTEXT]      for  (final  Iterator  iter  =  tailMap.values().iterator();  iter.hasNext();)  {  final  Option  option  =  (Option)  iter.next();  if  (option.canProcess(commandLine,  arg))  {  return  true;  }  }    [BUGGY]  if(!looksLikeOption(commandLine,  false))  {  [BUGGY]    return  false;  }  if  (anonymous.size()  >  0)  {  return  true;  }  return  false;  }  [CLASS]  GroupImpl  [METHOD]  canProcess  [RETURN_TYPE]  boolean  WriteableCommandLine  commandLine  String  arg  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  SortedMap  newOptionMap  optionMap  WriteableCommandLine  commandLine  Iterator  iter  List  anonymous  newAnonymous  options  Option  option  String  arg  description  name  Map  tailMap  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	139	139	1	replace	if(!looksLikeOption(commandLine,  false))  {	  if(looksLikeOption(commandLine,    false))    {    	non-compiled	[CE]  illegal  start  of  expression	2	None	replace
33	[BUG]  [BUGGY]  if(looksLikeOption(commandLine,  true)||  isEnabled(iter.next()))  {  [CE]  illegal  start  of  expression  [FE]              OptionException    [CONTEXT]      for  (final  Iterator  iter  =  tailMap.values().iterator();  iter.hasNext();)  {  final  Option  option  =  (Option)  iter.next();  if  (option.canProcess(commandLine,  arg))  {  return  true;  }  }    [BUGGY]  if(looksLikeOption(commandLine,  true)||  isEnabled(iter.next()))  {  [BUGGY]    return  false;  }  if  (anonymous.size()  >  0)  {  return  true;  }  return  false;  }  [CLASS]  GroupImpl  [METHOD]  canProcess  [RETURN_TYPE]  boolean  WriteableCommandLine  commandLine  String  arg  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  SortedMap  newOptionMap  optionMap  WriteableCommandLine  commandLine  Iterator  iter  List  anonymous  newAnonymous  options  Option  option  String  arg  description  name  Map  tailMap  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	139	139	1	replace	if(looksLikeOption(commandLine,  true)||  isEnabled(iter.next()))  {	  if(looksLikeOption(commandLine,    false))    {    	non-compiled	[CE]  illegal  start  of  expression	2	None	replace
34	[BUG]  [BUGGY]  if(looksLikeOption(commandLine,  false)||  isEnabled(iter.next()))  {  [CE]  illegal  start  of  expression  [FE]                OptionException    [CONTEXT]      for  (final  Iterator  iter  =  tailMap.values().iterator();  iter.hasNext();)  {  final  Option  option  =  (Option)  iter.next();  if  (option.canProcess(commandLine,  arg))  {  return  true;  }  }    [BUGGY]  if(looksLikeOption(commandLine,  false)||  isEnabled(iter.next()))  {  [BUGGY]    return  false;  }  if  (anonymous.size()  >  0)  {  return  true;  }  return  false;  }  [CLASS]  GroupImpl  [METHOD]  canProcess  [RETURN_TYPE]  boolean  WriteableCommandLine  commandLine  String  arg  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  SortedMap  newOptionMap  optionMap  WriteableCommandLine  commandLine  Iterator  iter  List  anonymous  newAnonymous  options  Option  option  String  arg  description  name  Map  tailMap  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	139	139	1	replace	if(looksLikeOption(commandLine,  false)||  isEnabled(iter.next()))  {	  if(looksLikeOption(commandLine,    false))    {    	non-compiled	[CE]  illegal  start  of  expression	2	None	replace
35	[BUG]  [BUGGY]  List  <  Option>  options  =  tailMap.values().iterator();  [CE]  illegal  start  of  expression  [FE]          OptionException    [CONTEXT]      for  (final  Iterator  iter  =  tailMap.values().iterator();  iter.hasNext();)  {  final  Option  option  =  (Option)  iter.next();  if  (option.canProcess(commandLine,  arg))  {  return  true;  }  }    [BUGGY]  List  <  Option>  options  =  tailMap.values().iterator();  [BUGGY]    if  (looksLikeOption(commandLine,  arg))  {  return  false;  }  if  (anonymous.size()  >  0)  {  return  true;  }  return  false;  }  [CLASS]  GroupImpl  [METHOD]  canProcess  [RETURN_TYPE]  boolean  WriteableCommandLine  commandLine  String  arg  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  SortedMap  newOptionMap  optionMap  WriteableCommandLine  commandLine  Iterator  iter  List  anonymous  newAnonymous  options  Option  option  String  arg  description  name  Map  tailMap  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	139	139	1	replace	List  <  Option>  options  =  tailMap.values().iterator();	      List    <    Option>    options    =    optionMap.values().iterator();    	non-compiled	[CE]  illegal  start  of  expression	13	None	replace
36	[BUG]  [BUGGY]  List  <  Option>  options  =  newAnonymous.values().iterator();  [CE]  illegal  start  of  expression  [FE]            OptionException    [CONTEXT]      for  (final  Iterator  iter  =  tailMap.values().iterator();  iter.hasNext();)  {  final  Option  option  =  (Option)  iter.next();  if  (option.canProcess(commandLine,  arg))  {  return  true;  }  }    [BUGGY]  List  <  Option>  options  =  newAnonymous.values().iterator();  [BUGGY]    if  (looksLikeOption(commandLine,  arg))  {  return  false;  }  if  (anonymous.size()  >  0)  {  return  true;  }  return  false;  }  [CLASS]  GroupImpl  [METHOD]  canProcess  [RETURN_TYPE]  boolean  WriteableCommandLine  commandLine  String  arg  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  SortedMap  newOptionMap  optionMap  WriteableCommandLine  commandLine  Iterator  iter  List  anonymous  newAnonymous  options  Option  option  String  arg  description  name  Map  tailMap  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	139	139	1	replace	List  <  Option>  options  =  newAnonymous.values().iterator();	      List    <    Option>    options    =    optionMap.values().iterator();    	non-compiled	[CE]  illegal  start  of  expression	13	None	replace
37	[BUG]  [BUGGY]  final  List  <  Option>  options  =  optionMap.values().iterator();  [CE]  illegal  start  of  expression  [FE]              OptionException    [CONTEXT]      for  (final  Iterator  iter  =  tailMap.values().iterator();  iter.hasNext();)  {  final  Option  option  =  (Option)  iter.next();  if  (option.canProcess(commandLine,  arg))  {  return  true;  }  }    [BUGGY]  final  List  <  Option>  options  =  optionMap.values().iterator();  [BUGGY]    if  (looksLikeOption(commandLine,  arg))  {  return  false;  }  if  (anonymous.size()  >  0)  {  return  true;  }  return  false;  }  [CLASS]  GroupImpl  [METHOD]  canProcess  [RETURN_TYPE]  boolean  WriteableCommandLine  commandLine  String  arg  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  SortedMap  newOptionMap  optionMap  WriteableCommandLine  commandLine  Iterator  iter  List  anonymous  newAnonymous  options  Option  option  String  arg  description  name  Map  tailMap  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	139	139	1	replace	final  List  <  Option>  options  =  optionMap.values().iterator();	      List    <    Option>    options    =    optionMap.values().iterator();    	non-compiled	[CE]  illegal  start  of  expression	13	None	replace
38	[BUG]  [BUGGY]  Option  option  =  optionMap.getOption(arg);  [CE]  illegal  start  of  expression  [FE]            OptionException    [CONTEXT]      for  (final  Iterator  iter  =  tailMap.values().iterator();  iter.hasNext();)  {  final  Option  option  =  (Option)  iter.next();  if  (option.canProcess(commandLine,  arg))  {  return  true;  }  }    [BUGGY]  Option  option  =  optionMap.getOption(arg);  [BUGGY]    if  (looksLikeOption(commandLine,  arg))  {  return  false;  }  if  (anonymous.size()  >  0)  {  return  true;  }  return  false;  }  [CLASS]  GroupImpl  [METHOD]  canProcess  [RETURN_TYPE]  boolean  WriteableCommandLine  commandLine  String  arg  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  SortedMap  newOptionMap  optionMap  WriteableCommandLine  commandLine  Iterator  iter  List  anonymous  newAnonymous  options  Option  option  String  arg  description  name  Map  tailMap  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	139	139	1	replace	Option  option  =  optionMap.getOption(arg);	      Option    option    =    option.getOption(arg);    	non-compiled	[CE]  illegal  start  of  expression	14	None	replace
39	[BUG]  [BUGGY]  Option  option  =  options.getOption(arg);  [CE]  illegal  start  of  expression  [FE]              OptionException    [CONTEXT]      for  (final  Iterator  iter  =  tailMap.values().iterator();  iter.hasNext();)  {  final  Option  option  =  (Option)  iter.next();  if  (option.canProcess(commandLine,  arg))  {  return  true;  }  }    [BUGGY]  Option  option  =  options.getOption(arg);  [BUGGY]    if  (looksLikeOption(commandLine,  arg))  {  return  false;  }  if  (anonymous.size()  >  0)  {  return  true;  }  return  false;  }  [CLASS]  GroupImpl  [METHOD]  canProcess  [RETURN_TYPE]  boolean  WriteableCommandLine  commandLine  String  arg  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  SortedMap  newOptionMap  optionMap  WriteableCommandLine  commandLine  Iterator  iter  List  anonymous  newAnonymous  options  Option  option  String  arg  description  name  Map  tailMap  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	139	139	1	replace	Option  option  =  options.getOption(arg);	      Option    option    =    option.getOption(arg);    	non-compiled	[CE]  illegal  start  of  expression	14	None	replace
40	[BUG]  [BUGGY]  Option  option  =  option.getOption(commandLine,  arg);  [CE]  illegal  start  of  expression  [FE]                OptionException    [CONTEXT]      for  (final  Iterator  iter  =  tailMap.values().iterator();  iter.hasNext();)  {  final  Option  option  =  (Option)  iter.next();  if  (option.canProcess(commandLine,  arg))  {  return  true;  }  }    [BUGGY]  Option  option  =  option.getOption(commandLine,  arg);  [BUGGY]    if  (looksLikeOption(commandLine,  arg))  {  return  false;  }  if  (anonymous.size()  >  0)  {  return  true;  }  return  false;  }  [CLASS]  GroupImpl  [METHOD]  canProcess  [RETURN_TYPE]  boolean  WriteableCommandLine  commandLine  String  arg  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  SortedMap  newOptionMap  optionMap  WriteableCommandLine  commandLine  Iterator  iter  List  anonymous  newAnonymous  options  Option  option  String  arg  description  name  Map  tailMap  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	139	139	1	replace	Option  option  =  option.getOption(commandLine,  arg);	      Option    option    =    option.getOption(arg);    	non-compiled	[CE]  illegal  start  of  expression	14	None	replace
41	[BUG]  [BUGGY]  if(!hasProcessOption(commandLine,  arg))  {  [CE]  illegal  start  of  expression  [FE]        OptionException    [CONTEXT]      for  (final  Iterator  iter  =  tailMap.values().iterator();  iter.hasNext();)  {  final  Option  option  =  (Option)  iter.next();  if  (option.canProcess(commandLine,  arg))  {  return  true;  }  }    [BUGGY]  if(!hasProcessOption(commandLine,  arg))  {  [BUGGY]    return  false;  }  if  (anonymous.size()  >  0)  {  return  true;  }  return  false;  }  [CLASS]  GroupImpl  [METHOD]  canProcess  [RETURN_TYPE]  boolean  WriteableCommandLine  commandLine  String  arg  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  SortedMap  newOptionMap  optionMap  WriteableCommandLine  commandLine  Iterator  iter  List  anonymous  newAnonymous  options  Option  option  String  arg  description  name  Map  tailMap  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	139	139	1	replace	if(!hasProcessOption(commandLine,  arg))  {	  if(!looksLikeOption(arg,    commandLine))    {    	non-compiled	[CE]  illegal  start  of  expression	16	None	replace
42	[BUG]  [BUGGY]  if(!canProcessLikeOption(commandLine,  arg))  {  [CE]  illegal  start  of  expression  [FE]          OptionException    [CONTEXT]      for  (final  Iterator  iter  =  tailMap.values().iterator();  iter.hasNext();)  {  final  Option  option  =  (Option)  iter.next();  if  (option.canProcess(commandLine,  arg))  {  return  true;  }  }    [BUGGY]  if(!canProcessLikeOption(commandLine,  arg))  {  [BUGGY]    return  false;  }  if  (anonymous.size()  >  0)  {  return  true;  }  return  false;  }  [CLASS]  GroupImpl  [METHOD]  canProcess  [RETURN_TYPE]  boolean  WriteableCommandLine  commandLine  String  arg  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  SortedMap  newOptionMap  optionMap  WriteableCommandLine  commandLine  Iterator  iter  List  anonymous  newAnonymous  options  Option  option  String  arg  description  name  Map  tailMap  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	139	139	1	replace	if(!canProcessLikeOption(commandLine,  arg))  {	  if(!looksLikeOption(arg,    commandLine))    {    	non-compiled	[CE]  illegal  start  of  expression	16	None	replace
43	[BUG]  [BUGGY]  List  <  Option>  newAnonymous  =(List  <  Option>)this.optionMap.get(arg);  [CE]  illegal  start  of  expression  [FE]                OptionException    [CONTEXT]      for  (final  Iterator  iter  =  tailMap.values().iterator();  iter.hasNext();)  {  final  Option  option  =  (Option)  iter.next();  if  (option.canProcess(commandLine,  arg))  {  return  true;  }  }    [BUGGY]  List  <  Option>  newAnonymous  =(List  <  Option>)this.optionMap.get(arg);  [BUGGY]    if  (looksLikeOption(commandLine,  arg))  {  return  false;  }  if  (anonymous.size()  >  0)  {  return  true;  }  return  false;  }  [CLASS]  GroupImpl  [METHOD]  canProcess  [RETURN_TYPE]  boolean  WriteableCommandLine  commandLine  String  arg  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  SortedMap  newOptionMap  optionMap  WriteableCommandLine  commandLine  Iterator  iter  List  anonymous  newAnonymous  options  Option  option  String  arg  description  name  Map  tailMap  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	139	139	1	replace	List  <  Option>  newAnonymous  =(List  <  Option>)this.optionMap.get(arg);	      List    <    Option>    newAnonymous    =(List    <    Option>)optionMap.get(arg);    	non-compiled	[CE]  illegal  start  of  expression	10	None	replace
44	[BUG]  [BUGGY]  List  <  Option>  newAnonymous  =(List  <  Option>)tailMap.get(arg);  [CE]  illegal  start  of  expression  [FE]                  OptionException    [CONTEXT]      for  (final  Iterator  iter  =  tailMap.values().iterator();  iter.hasNext();)  {  final  Option  option  =  (Option)  iter.next();  if  (option.canProcess(commandLine,  arg))  {  return  true;  }  }    [BUGGY]  List  <  Option>  newAnonymous  =(List  <  Option>)tailMap.get(arg);  [BUGGY]    if  (looksLikeOption(commandLine,  arg))  {  return  false;  }  if  (anonymous.size()  >  0)  {  return  true;  }  return  false;  }  [CLASS]  GroupImpl  [METHOD]  canProcess  [RETURN_TYPE]  boolean  WriteableCommandLine  commandLine  String  arg  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  SortedMap  newOptionMap  optionMap  WriteableCommandLine  commandLine  Iterator  iter  List  anonymous  newAnonymous  options  Option  option  String  arg  description  name  Map  tailMap  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	139	139	1	replace	List  <  Option>  newAnonymous  =(List  <  Option>)tailMap.get(arg);	      List    <    Option>    newAnonymous    =(List    <    Option>)optionMap.get(arg);    	non-compiled	[CE]  illegal  start  of  expression	10	None	replace
45	[BUG]  [BUGGY]  List  <  Option>  newAnonymous  =(List  <  Option>)commandLine.get(arg);  [CE]  illegal  start  of  expression  [FE]                    OptionException    [CONTEXT]      for  (final  Iterator  iter  =  tailMap.values().iterator();  iter.hasNext();)  {  final  Option  option  =  (Option)  iter.next();  if  (option.canProcess(commandLine,  arg))  {  return  true;  }  }    [BUGGY]  List  <  Option>  newAnonymous  =(List  <  Option>)commandLine.get(arg);  [BUGGY]    if  (looksLikeOption(commandLine,  arg))  {  return  false;  }  if  (anonymous.size()  >  0)  {  return  true;  }  return  false;  }  [CLASS]  GroupImpl  [METHOD]  canProcess  [RETURN_TYPE]  boolean  WriteableCommandLine  commandLine  String  arg  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  SortedMap  newOptionMap  optionMap  WriteableCommandLine  commandLine  Iterator  iter  List  anonymous  newAnonymous  options  Option  option  String  arg  description  name  Map  tailMap  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	139	139	1	replace	List  <  Option>  newAnonymous  =(List  <  Option>)commandLine.get(arg);	      List    <    Option>    newAnonymous    =(List    <    Option>)optionMap.get(arg);    	non-compiled	[CE]  illegal  start  of  expression	10	None	replace
46	[BUG]  [BUGGY]  List  <  Option>  newAnonymous  =(List  <  Option>)optionMap.get(commandLine);  [CE]  illegal  start  of  expression  [FE]                      OptionException    [CONTEXT]      for  (final  Iterator  iter  =  tailMap.values().iterator();  iter.hasNext();)  {  final  Option  option  =  (Option)  iter.next();  if  (option.canProcess(commandLine,  arg))  {  return  true;  }  }    [BUGGY]  List  <  Option>  newAnonymous  =(List  <  Option>)optionMap.get(commandLine);  [BUGGY]    if  (looksLikeOption(commandLine,  arg))  {  return  false;  }  if  (anonymous.size()  >  0)  {  return  true;  }  return  false;  }  [CLASS]  GroupImpl  [METHOD]  canProcess  [RETURN_TYPE]  boolean  WriteableCommandLine  commandLine  String  arg  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  SortedMap  newOptionMap  optionMap  WriteableCommandLine  commandLine  Iterator  iter  List  anonymous  newAnonymous  options  Option  option  String  arg  description  name  Map  tailMap  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	139	139	1	replace	List  <  Option>  newAnonymous  =(List  <  Option>)optionMap.get(commandLine);	      List    <    Option>    newAnonymous    =(List    <    Option>)optionMap.get(arg);    	non-compiled	[CE]  illegal  start  of  expression	10	None	replace
47	[BUG]  [BUGGY]  List  <  Option>  newAnonymous  =  tailMap.values().iterator();  [CE]  illegal  start  of  expression  [FE]          OptionException    [CONTEXT]      for  (final  Iterator  iter  =  tailMap.values().iterator();  iter.hasNext();)  {  final  Option  option  =  (Option)  iter.next();  if  (option.canProcess(commandLine,  arg))  {  return  true;  }  }    [BUGGY]  List  <  Option>  newAnonymous  =  tailMap.values().iterator();  [BUGGY]    if  (looksLikeOption(commandLine,  arg))  {  return  false;  }  if  (anonymous.size()  >  0)  {  return  true;  }  return  false;  }  [CLASS]  GroupImpl  [METHOD]  canProcess  [RETURN_TYPE]  boolean  WriteableCommandLine  commandLine  String  arg  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  SortedMap  newOptionMap  optionMap  WriteableCommandLine  commandLine  Iterator  iter  List  anonymous  newAnonymous  options  Option  option  String  arg  description  name  Map  tailMap  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	139	139	1	replace	List  <  Option>  newAnonymous  =  tailMap.values().iterator();	      List    <    Option>    newAnonymous    =    optionMap.values().iterator();    	non-compiled	[CE]  illegal  start  of  expression	7	None	replace
48	[BUG]  [BUGGY]  Set  <  Option>  newAnonymous  =  optionMap.values().iterator();  [CE]  illegal  start  of  expression  [FE]            OptionException    [CONTEXT]      for  (final  Iterator  iter  =  tailMap.values().iterator();  iter.hasNext();)  {  final  Option  option  =  (Option)  iter.next();  if  (option.canProcess(commandLine,  arg))  {  return  true;  }  }    [BUGGY]  Set  <  Option>  newAnonymous  =  optionMap.values().iterator();  [BUGGY]    if  (looksLikeOption(commandLine,  arg))  {  return  false;  }  if  (anonymous.size()  >  0)  {  return  true;  }  return  false;  }  [CLASS]  GroupImpl  [METHOD]  canProcess  [RETURN_TYPE]  boolean  WriteableCommandLine  commandLine  String  arg  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  SortedMap  newOptionMap  optionMap  WriteableCommandLine  commandLine  Iterator  iter  List  anonymous  newAnonymous  options  Option  option  String  arg  description  name  Map  tailMap  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	139	139	1	replace	Set  <  Option>  newAnonymous  =  optionMap.values().iterator();	      List    <    Option>    newAnonymous    =    optionMap.values().iterator();    	non-compiled	[CE]  illegal  start  of  expression	7	None	replace
49	[BUG]  [BUGGY]  List  <  Option>  options  =  newOptionMap.values().iterator();  [CE]  illegal  start  of  expression  [FE]          OptionException    [CONTEXT]      for  (final  Iterator  iter  =  tailMap.values().iterator();  iter.hasNext();)  {  final  Option  option  =  (Option)  iter.next();  if  (option.canProcess(commandLine,  arg))  {  return  true;  }  }    [BUGGY]  List  <  Option>  options  =  newOptionMap.values().iterator();  [BUGGY]    if  (looksLikeOption(commandLine,  arg))  {  return  false;  }  if  (anonymous.size()  >  0)  {  return  true;  }  return  false;  }  [CLASS]  GroupImpl  [METHOD]  canProcess  [RETURN_TYPE]  boolean  WriteableCommandLine  commandLine  String  arg  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  SortedMap  newOptionMap  optionMap  WriteableCommandLine  commandLine  Iterator  iter  List  anonymous  newAnonymous  options  Option  option  String  arg  description  name  Map  tailMap  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	139	139	1	replace	List  <  Option>  options  =  newOptionMap.values().iterator();	      List    <    Option>    options    =    optionMap.values().iterator();    	non-compiled	[CE]  illegal  start  of  expression	13	None	replace
50	[BUG]  [BUGGY]  Set  <  Option>  options  =  optionMap.values().iterator();  [CE]  illegal  start  of  expression  [FE]            OptionException    [CONTEXT]      for  (final  Iterator  iter  =  tailMap.values().iterator();  iter.hasNext();)  {  final  Option  option  =  (Option)  iter.next();  if  (option.canProcess(commandLine,  arg))  {  return  true;  }  }    [BUGGY]  Set  <  Option>  options  =  optionMap.values().iterator();  [BUGGY]    if  (looksLikeOption(commandLine,  arg))  {  return  false;  }  if  (anonymous.size()  >  0)  {  return  true;  }  return  false;  }  [CLASS]  GroupImpl  [METHOD]  canProcess  [RETURN_TYPE]  boolean  WriteableCommandLine  commandLine  String  arg  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  SortedMap  newOptionMap  optionMap  WriteableCommandLine  commandLine  Iterator  iter  List  anonymous  newAnonymous  options  Option  option  String  arg  description  name  Map  tailMap  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	139	139	1	replace	Set  <  Option>  options  =  optionMap.values().iterator();	      List    <    Option>    options    =    optionMap.values().iterator();    	non-compiled	[CE]  illegal  start  of  expression	13	None	replace
51	[BUG]  [BUGGY]  List  <  Option>  newAnonymous  =  option.canProcess(commandLine);  [CE]  illegal  start  of  expression  [FE]                OptionException    [CONTEXT]      for  (final  Iterator  iter  =  tailMap.values().iterator();  iter.hasNext();)  {  final  Option  option  =  (Option)  iter.next();  if  (option.canProcess(commandLine,  arg))  {  return  true;  }  }    [BUGGY]  List  <  Option>  newAnonymous  =  option.canProcess(commandLine);  [BUGGY]    return  false;  }  if  (anonymous.size()  >  0)  {  return  true;  }  return  false;  }  [CLASS]  GroupImpl  [METHOD]  canProcess  [RETURN_TYPE]  boolean  WriteableCommandLine  commandLine  String  arg  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  SortedMap  newOptionMap  optionMap  WriteableCommandLine  commandLine  Iterator  iter  List  anonymous  newAnonymous  options  Option  option  String  arg  description  name  Map  tailMap  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	139	139	1	replace	List  <  Option>  newAnonymous  =  option.canProcess(commandLine);	      	non-compiled	[CE]  illegal  start  of  expression	5	None	replace
52	[BUG]  [BUGGY]  List  <  Option>  newAnonymous  =  optionMap.keySet();  [CE]  illegal  start  of  expression  [FE]              OptionException    [CONTEXT]      for  (final  Iterator  iter  =  tailMap.values().iterator();  iter.hasNext();)  {  final  Option  option  =  (Option)  iter.next();  if  (option.canProcess(commandLine,  arg))  {  return  true;  }  }    [BUGGY]  List  <  Option>  newAnonymous  =  optionMap.keySet();  [BUGGY]    if  (looksLikeOption(commandLine,  arg))  {  return  false;  }  if  (anonymous.size()  >  0)  {  return  true;  }  return  false;  }  [CLASS]  GroupImpl  [METHOD]  canProcess  [RETURN_TYPE]  boolean  WriteableCommandLine  commandLine  String  arg  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  SortedMap  newOptionMap  optionMap  WriteableCommandLine  commandLine  Iterator  iter  List  anonymous  newAnonymous  options  Option  option  String  arg  description  name  Map  tailMap  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	139	139	1	replace	List  <  Option>  newAnonymous  =  optionMap.keySet();	      List    <    Option>    newAnonymous    =    optionMap.values();    	non-compiled	[CE]  illegal  start  of  expression	15	None	replace
53	[BUG]  [BUGGY]  if(option.canProcess(commandLine,  arg))  {  [CE]  illegal  start  of  expression  [FE]        OptionException    [CONTEXT]      for  (final  Iterator  iter  =  tailMap.values().iterator();  iter.hasNext();)  {  final  Option  option  =  (Option)  iter.next();  if  (option.canProcess(commandLine,  arg))  {  return  true;  }  }    [BUGGY]  if(option.canProcess(commandLine,  arg))  {  [BUGGY]    return  false;  }  if  (anonymous.size()  >  0)  {  return  true;  }  return  false;  }  [CLASS]  GroupImpl  [METHOD]  canProcess  [RETURN_TYPE]  boolean  WriteableCommandLine  commandLine  String  arg  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  SortedMap  newOptionMap  optionMap  WriteableCommandLine  commandLine  Iterator  iter  List  anonymous  newAnonymous  options  Option  option  String  arg  description  name  Map  tailMap  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	139	139	1	replace	if(option.canProcess(commandLine,  arg))  {	  if(!looksLikeOption(arg,    commandLine))    {    	non-compiled	[CE]  illegal  start  of  expression	16	None	replace
54	[BUG]  [BUGGY]  if(!canProcessOption(arg,  commandLine))  {  [CE]  illegal  start  of  expression  [FE]          OptionException    [CONTEXT]      for  (final  Iterator  iter  =  tailMap.values().iterator();  iter.hasNext();)  {  final  Option  option  =  (Option)  iter.next();  if  (option.canProcess(commandLine,  arg))  {  return  true;  }  }    [BUGGY]  if(!canProcessOption(arg,  commandLine))  {  [BUGGY]    return  false;  }  if  (anonymous.size()  >  0)  {  return  true;  }  return  false;  }  [CLASS]  GroupImpl  [METHOD]  canProcess  [RETURN_TYPE]  boolean  WriteableCommandLine  commandLine  String  arg  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  SortedMap  newOptionMap  optionMap  WriteableCommandLine  commandLine  Iterator  iter  List  anonymous  newAnonymous  options  Option  option  String  arg  description  name  Map  tailMap  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	139	139	1	replace	if(!canProcessOption(arg,  commandLine))  {	  if(!looksLikeOption(arg,    commandLine))    {    	non-compiled	[CE]  illegal  start  of  expression	16	None	replace
55	[BUG]  [BUGGY]  Set  <  Option>  newAnonymous  =(Set  <  Option>)optionMap.values().iterator();  [CE]  illegal  start  of  expression  [FE]        OptionException    [CONTEXT]      for  (final  Iterator  iter  =  tailMap.values().iterator();  iter.hasNext();)  {  final  Option  option  =  (Option)  iter.next();  if  (option.canProcess(commandLine,  arg))  {  return  true;  }  }    [BUGGY]  Set  <  Option>  newAnonymous  =(Set  <  Option>)optionMap.values().iterator();  [BUGGY]    if  (looksLikeOption(commandLine,  arg))  {  return  false;  }  if  (anonymous.size()  >  0)  {  return  true;  }  return  false;  }  [CLASS]  GroupImpl  [METHOD]  canProcess  [RETURN_TYPE]  boolean  WriteableCommandLine  commandLine  String  arg  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  SortedMap  newOptionMap  optionMap  WriteableCommandLine  commandLine  Iterator  iter  List  anonymous  newAnonymous  options  Option  option  String  arg  description  name  Map  tailMap  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	139	139	1	replace	Set  <  Option>  newAnonymous  =(Set  <  Option>)optionMap.values().iterator();	      List    <    Option>    newAnonymous    =(List    <    Option>)optionMap.values().iterator();    	non-compiled	[CE]  illegal  start  of  expression	6	None	replace
56	[BUG]  [BUGGY]  ArrayList  <  Option>  newAnonymous  =(ArrayList  <  Option>)optionMap.values().iterator();  [CE]  illegal  start  of  expression  [FE]          OptionException    [CONTEXT]      for  (final  Iterator  iter  =  tailMap.values().iterator();  iter.hasNext();)  {  final  Option  option  =  (Option)  iter.next();  if  (option.canProcess(commandLine,  arg))  {  return  true;  }  }    [BUGGY]  ArrayList  <  Option>  newAnonymous  =(ArrayList  <  Option>)optionMap.values().iterator();  [BUGGY]    if  (looksLikeOption(commandLine,  arg))  {  return  false;  }  if  (anonymous.size()  >  0)  {  return  true;  }  return  false;  }  [CLASS]  GroupImpl  [METHOD]  canProcess  [RETURN_TYPE]  boolean  WriteableCommandLine  commandLine  String  arg  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  SortedMap  newOptionMap  optionMap  WriteableCommandLine  commandLine  Iterator  iter  List  anonymous  newAnonymous  options  Option  option  String  arg  description  name  Map  tailMap  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	139	139	1	replace	ArrayList  <  Option>  newAnonymous  =(ArrayList  <  Option>)optionMap.values().iterator();	      List    <    Option>    newAnonymous    =(List    <    Option>)optionMap.values().iterator();    	non-compiled	[CE]  illegal  start  of  expression	6	None	replace
57	[BUG]  [BUGGY]  if(looksLikeOption(arg,  false))  {  [CE]  illegal  start  of  expression  [FE]          OptionException    [CONTEXT]      for  (final  Iterator  iter  =  tailMap.values().iterator();  iter.hasNext();)  {  final  Option  option  =  (Option)  iter.next();  if  (option.canProcess(commandLine,  arg))  {  return  true;  }  }    [BUGGY]  if(looksLikeOption(arg,  false))  {  [BUGGY]    return  false;  }  if  (anonymous.size()  >  0)  {  return  true;  }  return  false;  }  [CLASS]  GroupImpl  [METHOD]  canProcess  [RETURN_TYPE]  boolean  WriteableCommandLine  commandLine  String  arg  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  SortedMap  newOptionMap  optionMap  WriteableCommandLine  commandLine  Iterator  iter  List  anonymous  newAnonymous  options  Option  option  String  arg  description  name  Map  tailMap  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	139	139	1	replace	if(looksLikeOption(arg,  false))  {	  if(looksLikeOption(commandLine,    false))    {    	non-compiled	[CE]  illegal  start  of  expression	2	None	replace
58	[BUG]  [BUGGY]  if(looksLikeOption(commandLine,  true)||  options.canProcess(commandLine,  false))  {  [CE]  illegal  start  of  expression  [FE]            OptionException    [CONTEXT]      for  (final  Iterator  iter  =  tailMap.values().iterator();  iter.hasNext();)  {  final  Option  option  =  (Option)  iter.next();  if  (option.canProcess(commandLine,  arg))  {  return  true;  }  }    [BUGGY]  if(looksLikeOption(commandLine,  true)||  options.canProcess(commandLine,  false))  {  [BUGGY]    return  false;  }  if  (anonymous.size()  >  0)  {  return  true;  }  return  false;  }  [CLASS]  GroupImpl  [METHOD]  canProcess  [RETURN_TYPE]  boolean  WriteableCommandLine  commandLine  String  arg  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  SortedMap  newOptionMap  optionMap  WriteableCommandLine  commandLine  Iterator  iter  List  anonymous  newAnonymous  options  Option  option  String  arg  description  name  Map  tailMap  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	139	139	1	replace	if(looksLikeOption(commandLine,  true)||  options.canProcess(commandLine,  false))  {	  if(looksLikeOption(commandLine,    false))    {    	non-compiled	[CE]  illegal  start  of  expression	2	None	replace
59	[BUG]  [BUGGY]  if(canProcessOption(arg,  commandLine))  {  [CE]  illegal  start  of  expression  [FE]        OptionException    [CONTEXT]      for  (final  Iterator  iter  =  tailMap.values().iterator();  iter.hasNext();)  {  final  Option  option  =  (Option)  iter.next();  if  (option.canProcess(commandLine,  arg))  {  return  true;  }  }    [BUGGY]  if(canProcessOption(arg,  commandLine))  {  [BUGGY]    return  false;  }  if  (anonymous.size()  >  0)  {  return  true;  }  return  false;  }  [CLASS]  GroupImpl  [METHOD]  canProcess  [RETURN_TYPE]  boolean  WriteableCommandLine  commandLine  String  arg  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  SortedMap  newOptionMap  optionMap  WriteableCommandLine  commandLine  Iterator  iter  List  anonymous  newAnonymous  options  Option  option  String  arg  description  name  Map  tailMap  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	139	139	1	replace	if(canProcessOption(arg,  commandLine))  {	  if(looksLikeOption(arg,    commandLine))    {    	non-compiled	[CE]  illegal  start  of  expression	11	None	replace
60	[BUG]  [BUGGY]  if(!looksLikeOption(option,  arg))  {  [CE]  illegal  start  of  expression  [FE]        OptionException    [CONTEXT]      for  (final  Iterator  iter  =  tailMap.values().iterator();  iter.hasNext();)  {  final  Option  option  =  (Option)  iter.next();  if  (option.canProcess(commandLine,  arg))  {  return  true;  }  }    [BUGGY]  if(!looksLikeOption(option,  arg))  {  [BUGGY]    return  false;  }  if  (anonymous.size()  >  0)  {  return  true;  }  return  false;  }  [CLASS]  GroupImpl  [METHOD]  canProcess  [RETURN_TYPE]  boolean  WriteableCommandLine  commandLine  String  arg  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  SortedMap  newOptionMap  optionMap  WriteableCommandLine  commandLine  Iterator  iter  List  anonymous  newAnonymous  options  Option  option  String  arg  description  name  Map  tailMap  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	139	139	1	replace	if(!looksLikeOption(option,  arg))  {	  if(!looksLikeOption(commandLine,    arg))    {    	non-compiled	[CE]  illegal  start  of  expression	1	None	replace
61	[BUG]  [BUGGY]  if(!looksLikeOption(commandLine,  options))  {  [CE]  illegal  start  of  expression  [FE]          OptionException    [CONTEXT]      for  (final  Iterator  iter  =  tailMap.values().iterator();  iter.hasNext();)  {  final  Option  option  =  (Option)  iter.next();  if  (option.canProcess(commandLine,  arg))  {  return  true;  }  }    [BUGGY]  if(!looksLikeOption(commandLine,  options))  {  [BUGGY]    return  false;  }  if  (anonymous.size()  >  0)  {  return  true;  }  return  false;  }  [CLASS]  GroupImpl  [METHOD]  canProcess  [RETURN_TYPE]  boolean  WriteableCommandLine  commandLine  String  arg  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  SortedMap  newOptionMap  optionMap  WriteableCommandLine  commandLine  Iterator  iter  List  anonymous  newAnonymous  options  Option  option  String  arg  description  name  Map  tailMap  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	139	139	1	replace	if(!looksLikeOption(commandLine,  options))  {	  if(!looksLikeOption(commandLine,    arg))    {    	non-compiled	[CE]  illegal  start  of  expression	1	None	replace
62	[BUG]  [BUGGY]  if(!looksLikeOption(commandLine,  option))  {  [CE]  illegal  start  of  expression  [FE]            OptionException    [CONTEXT]      for  (final  Iterator  iter  =  tailMap.values().iterator();  iter.hasNext();)  {  final  Option  option  =  (Option)  iter.next();  if  (option.canProcess(commandLine,  arg))  {  return  true;  }  }    [BUGGY]  if(!looksLikeOption(commandLine,  option))  {  [BUGGY]    return  false;  }  if  (anonymous.size()  >  0)  {  return  true;  }  return  false;  }  [CLASS]  GroupImpl  [METHOD]  canProcess  [RETURN_TYPE]  boolean  WriteableCommandLine  commandLine  String  arg  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  SortedMap  newOptionMap  optionMap  WriteableCommandLine  commandLine  Iterator  iter  List  anonymous  newAnonymous  options  Option  option  String  arg  description  name  Map  tailMap  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	139	139	1	replace	if(!looksLikeOption(commandLine,  option))  {	  if(!looksLikeOption(commandLine,    arg))    {    	non-compiled	[CE]  illegal  start  of  expression	1	None	replace
63	[BUG]  [BUGGY]  List  <  Option>  newAnonymous  =  optionMap.keySet().iterator();  [CE]  illegal  start  of  expression  [FE]          OptionException    [CONTEXT]      for  (final  Iterator  iter  =  tailMap.values().iterator();  iter.hasNext();)  {  final  Option  option  =  (Option)  iter.next();  if  (option.canProcess(commandLine,  arg))  {  return  true;  }  }    [BUGGY]  List  <  Option>  newAnonymous  =  optionMap.keySet().iterator();  [BUGGY]    if  (looksLikeOption(commandLine,  arg))  {  return  false;  }  if  (anonymous.size()  >  0)  {  return  true;  }  return  false;  }  [CLASS]  GroupImpl  [METHOD]  canProcess  [RETURN_TYPE]  boolean  WriteableCommandLine  commandLine  String  arg  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  SortedMap  newOptionMap  optionMap  WriteableCommandLine  commandLine  Iterator  iter  List  anonymous  newAnonymous  options  Option  option  String  arg  description  name  Map  tailMap  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	139	139	1	replace	List  <  Option>  newAnonymous  =  optionMap.keySet().iterator();	      List    <    Option>    newAnonymous    =    optionMap.values().iterator();    	non-compiled	[CE]  illegal  start  of  expression	7	None	replace
64	[BUG]  [BUGGY]  Option  option  =(Option)iter.getValue();  [CE]  illegal  start  of  expression  [FE]            OptionException    [CONTEXT]      for  (final  Iterator  iter  =  tailMap.values().iterator();  iter.hasNext();)  {  final  Option  option  =  (Option)  iter.next();  if  (option.canProcess(commandLine,  arg))  {  return  true;  }  }    [BUGGY]  Option  option  =(Option)iter.getValue();  [BUGGY]    if  (looksLikeOption(commandLine,  arg))  {  return  false;  }  if  (anonymous.size()  >  0)  {  return  true;  }  return  false;  }  [CLASS]  GroupImpl  [METHOD]  canProcess  [RETURN_TYPE]  boolean  WriteableCommandLine  commandLine  String  arg  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  SortedMap  newOptionMap  optionMap  WriteableCommandLine  commandLine  Iterator  iter  List  anonymous  newAnonymous  options  Option  option  String  arg  description  name  Map  tailMap  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	139	139	1	replace	Option  option  =(Option)iter.getValue();	      Option    option    =(Option)iter.next();    	non-compiled	[CE]  illegal  start  of  expression	8	None	replace
65	[BUG]  [BUGGY]  Option  option  =(Option)option.next();  [CE]  illegal  start  of  expression  [FE]              OptionException    [CONTEXT]      for  (final  Iterator  iter  =  tailMap.values().iterator();  iter.hasNext();)  {  final  Option  option  =  (Option)  iter.next();  if  (option.canProcess(commandLine,  arg))  {  return  true;  }  }    [BUGGY]  Option  option  =(Option)option.next();  [BUGGY]    if  (looksLikeOption(commandLine,  arg))  {  return  false;  }  if  (anonymous.size()  >  0)  {  return  true;  }  return  false;  }  [CLASS]  GroupImpl  [METHOD]  canProcess  [RETURN_TYPE]  boolean  WriteableCommandLine  commandLine  String  arg  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  SortedMap  newOptionMap  optionMap  WriteableCommandLine  commandLine  Iterator  iter  List  anonymous  newAnonymous  options  Option  option  String  arg  description  name  Map  tailMap  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	139	139	1	replace	Option  option  =(Option)option.next();	      Option    option    =(Option)iter.next();    	non-compiled	[CE]  illegal  start  of  expression	8	None	replace
66	[BUG]  [BUGGY]  if(hasOption(option,  null))  {  [CE]  illegal  start  of  expression  [FE]              OptionException    [CONTEXT]      for  (final  Iterator  iter  =  tailMap.values().iterator();  iter.hasNext();)  {  final  Option  option  =  (Option)  iter.next();  if  (option.canProcess(commandLine,  arg))  {  return  true;  }  }    [BUGGY]  if(hasOption(option,  null))  {  [BUGGY]    return  false;  }  if  (anonymous.size()  >  0)  {  return  true;  }  return  false;  }  [CLASS]  GroupImpl  [METHOD]  canProcess  [RETURN_TYPE]  boolean  WriteableCommandLine  commandLine  String  arg  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  SortedMap  newOptionMap  optionMap  WriteableCommandLine  commandLine  Iterator  iter  List  anonymous  newAnonymous  options  Option  option  String  arg  description  name  Map  tailMap  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	139	139	1	replace	if(hasOption(option,  null))  {	  if(looksLikeOption(commandLine,    null))    {    	non-compiled	[CE]  illegal  start  of  expression	4	None	replace
67	[BUG]  [BUGGY]  if(hasOption(option)||  options.canProcess(commandLine,  arg))  {  [CE]  illegal  start  of  expression  [FE]            OptionException    [CONTEXT]      for  (final  Iterator  iter  =  tailMap.values().iterator();  iter.hasNext();)  {  final  Option  option  =  (Option)  iter.next();  if  (option.canProcess(commandLine,  arg))  {  return  true;  }  }    [BUGGY]  if(hasOption(option)||  options.canProcess(commandLine,  arg))  {  [BUGGY]    return  false;  }  if  (anonymous.size()  >  0)  {  return  true;  }  return  false;  }  [CLASS]  GroupImpl  [METHOD]  canProcess  [RETURN_TYPE]  boolean  WriteableCommandLine  commandLine  String  arg  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  SortedMap  newOptionMap  optionMap  WriteableCommandLine  commandLine  Iterator  iter  List  anonymous  newAnonymous  options  Option  option  String  arg  description  name  Map  tailMap  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	139	139	1	replace	if(hasOption(option)||  options.canProcess(commandLine,  arg))  {	  if(looksLikeOption(commandLine,    arg)||    options.canProcess(commandLine,    arg))    {    	non-compiled	[CE]  illegal  start  of  expression	3	None	replace
68	[BUG]  [BUGGY]  List  <  Option>  newAnonymous  =(List  <  Option>)option.next();  [CE]  illegal  start  of  expression  [FE]              OptionException    [CONTEXT]      for  (final  Iterator  iter  =  tailMap.values().iterator();  iter.hasNext();)  {  final  Option  option  =  (Option)  iter.next();  if  (option.canProcess(commandLine,  arg))  {  return  true;  }  }    [BUGGY]  List  <  Option>  newAnonymous  =(List  <  Option>)option.next();  [BUGGY]    if  (looksLikeOption(commandLine,  arg))  {  return  false;  }  if  (anonymous.size()  >  0)  {  return  true;  }  return  false;  }  [CLASS]  GroupImpl  [METHOD]  canProcess  [RETURN_TYPE]  boolean  WriteableCommandLine  commandLine  String  arg  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  SortedMap  newOptionMap  optionMap  WriteableCommandLine  commandLine  Iterator  iter  List  anonymous  newAnonymous  options  Option  option  String  arg  description  name  Map  tailMap  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	139	139	1	replace	List  <  Option>  newAnonymous  =(List  <  Option>)option.next();	      List    <    Option>    newAnonymous    =(List    <    Option>)iter.next();    	non-compiled	[CE]  illegal  start  of  expression	9	None	replace
69	[BUG]  [BUGGY]  if(hasOption(option,  false))  {  [CE]  illegal  start  of  expression  [FE]          OptionException    [CONTEXT]      for  (final  Iterator  iter  =  tailMap.values().iterator();  iter.hasNext();)  {  final  Option  option  =  (Option)  iter.next();  if  (option.canProcess(commandLine,  arg))  {  return  true;  }  }    [BUGGY]  if(hasOption(option,  false))  {  [BUGGY]    return  false;  }  if  (anonymous.size()  >  0)  {  return  true;  }  return  false;  }  [CLASS]  GroupImpl  [METHOD]  canProcess  [RETURN_TYPE]  boolean  WriteableCommandLine  commandLine  String  arg  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  SortedMap  newOptionMap  optionMap  WriteableCommandLine  commandLine  Iterator  iter  List  anonymous  newAnonymous  options  Option  option  String  arg  description  name  Map  tailMap  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	139	139	1	replace	if(hasOption(option,  false))  {	  if(looksLikeOption(commandLine,    false))    {    	non-compiled	[CE]  illegal  start  of  expression	2	None	replace
70	[BUG]  [BUGGY]  if(looksLikeOption(commandLine,  true)||  isEnabled(Feature.QUOTE_FIELD_NAMES))  {  [CE]  illegal  start  of  expression  [FE]            OptionException    [CONTEXT]      for  (final  Iterator  iter  =  tailMap.values().iterator();  iter.hasNext();)  {  final  Option  option  =  (Option)  iter.next();  if  (option.canProcess(commandLine,  arg))  {  return  true;  }  }    [BUGGY]  if(looksLikeOption(commandLine,  true)||  isEnabled(Feature.QUOTE_FIELD_NAMES))  {  [BUGGY]    return  false;  }  if  (anonymous.size()  >  0)  {  return  true;  }  return  false;  }  [CLASS]  GroupImpl  [METHOD]  canProcess  [RETURN_TYPE]  boolean  WriteableCommandLine  commandLine  String  arg  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  SortedMap  newOptionMap  optionMap  WriteableCommandLine  commandLine  Iterator  iter  List  anonymous  newAnonymous  options  Option  option  String  arg  description  name  Map  tailMap  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	139	139	1	replace	if(looksLikeOption(commandLine,  true)||  isEnabled(Feature.QUOTE_FIELD_NAMES))  {	  if(looksLikeOption(commandLine,    false))    {    	non-compiled	[CE]  illegal  start  of  expression	2	None	replace
71	[BUG]  [BUGGY]  if(looksLikeOption(arg,  null))  {  [CE]  illegal  start  of  expression  [FE]              OptionException    [CONTEXT]      for  (final  Iterator  iter  =  tailMap.values().iterator();  iter.hasNext();)  {  final  Option  option  =  (Option)  iter.next();  if  (option.canProcess(commandLine,  arg))  {  return  true;  }  }    [BUGGY]  if(looksLikeOption(arg,  null))  {  [BUGGY]    return  false;  }  if  (anonymous.size()  >  0)  {  return  true;  }  return  false;  }  [CLASS]  GroupImpl  [METHOD]  canProcess  [RETURN_TYPE]  boolean  WriteableCommandLine  commandLine  String  arg  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  SortedMap  newOptionMap  optionMap  WriteableCommandLine  commandLine  Iterator  iter  List  anonymous  newAnonymous  options  Option  option  String  arg  description  name  Map  tailMap  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	139	139	1	replace	if(looksLikeOption(arg,  null))  {	  if(looksLikeOption(commandLine,    null))    {    	non-compiled	[CE]  illegal  start  of  expression	4	None	replace
72	[BUG]  [BUGGY]  if(looksLikeOption(commandLine,  null)||  options.canProcess(commandLine,  arg))  {  [CE]  illegal  start  of  expression  [FE]                OptionException    [CONTEXT]      for  (final  Iterator  iter  =  tailMap.values().iterator();  iter.hasNext();)  {  final  Option  option  =  (Option)  iter.next();  if  (option.canProcess(commandLine,  arg))  {  return  true;  }  }    [BUGGY]  if(looksLikeOption(commandLine,  null)||  options.canProcess(commandLine,  arg))  {  [BUGGY]    return  false;  }  if  (anonymous.size()  >  0)  {  return  true;  }  return  false;  }  [CLASS]  GroupImpl  [METHOD]  canProcess  [RETURN_TYPE]  boolean  WriteableCommandLine  commandLine  String  arg  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  SortedMap  newOptionMap  optionMap  WriteableCommandLine  commandLine  Iterator  iter  List  anonymous  newAnonymous  options  Option  option  String  arg  description  name  Map  tailMap  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	139	139	1	replace	if(looksLikeOption(commandLine,  null)||  options.canProcess(commandLine,  arg))  {	  if(looksLikeOption(commandLine,    null))    {    	non-compiled	[CE]  illegal  start  of  expression	4	None	replace
73	[BUG]  [BUGGY]  Option  option  =  option.getOption(commandLine);  if(option!=  null)  {  return  false;  }  [CE]  illegal  start  of  expression  [FE]                OptionException    [CONTEXT]      for  (final  Iterator  iter  =  tailMap.values().iterator();  iter.hasNext();)  {  final  Option  option  =  (Option)  iter.next();  if  (option.canProcess(commandLine,  arg))  {  return  true;  }  }    [BUGGY]  Option  option  =  option.getOption(commandLine);  if(option!=  null)  {  return  false;  }  [BUGGY]    return  false;  }  if  (anonymous.size()  >  0)  {  return  true;  }  return  false;  }  [CLASS]  GroupImpl  [METHOD]  canProcess  [RETURN_TYPE]  boolean  WriteableCommandLine  commandLine  String  arg  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  SortedMap  newOptionMap  optionMap  WriteableCommandLine  commandLine  Iterator  iter  List  anonymous  newAnonymous  options  Option  option  String  arg  description  name  Map  tailMap  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	139	139	1	replace	Option  option  =  option.getOption(commandLine);  if(option!=  null)  {  return  false;  }	      	non-compiled	[CE]  illegal  start  of  expression	5	None	replace
74	[BUG]  [BUGGY]  Option  option  =  option.getOption(commandLine);  if(option!=  null)  {  return  true;  }  [CE]  illegal  start  of  expression  [FE]                  OptionException    [CONTEXT]      for  (final  Iterator  iter  =  tailMap.values().iterator();  iter.hasNext();)  {  final  Option  option  =  (Option)  iter.next();  if  (option.canProcess(commandLine,  arg))  {  return  true;  }  }    [BUGGY]  Option  option  =  option.getOption(commandLine);  if(option!=  null)  {  return  true;  }  [BUGGY]    return  false;  }  if  (anonymous.size()  >  0)  {  return  true;  }  return  false;  }  [CLASS]  GroupImpl  [METHOD]  canProcess  [RETURN_TYPE]  boolean  WriteableCommandLine  commandLine  String  arg  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  SortedMap  newOptionMap  optionMap  WriteableCommandLine  commandLine  Iterator  iter  List  anonymous  newAnonymous  options  Option  option  String  arg  description  name  Map  tailMap  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	139	139	1	replace	Option  option  =  option.getOption(commandLine);  if(option!=  null)  {  return  true;  }	      	non-compiled	[CE]  illegal  start  of  expression	5	None	replace
75	[BUG]  [BUGGY]  List  <  Option>  newAnonymous  =(List  <  Option>)commandMap.values().iterator();  [CE]  illegal  start  of  expression  [FE]        OptionException    [CONTEXT]      for  (final  Iterator  iter  =  tailMap.values().iterator();  iter.hasNext();)  {  final  Option  option  =  (Option)  iter.next();  if  (option.canProcess(commandLine,  arg))  {  return  true;  }  }    [BUGGY]  List  <  Option>  newAnonymous  =(List  <  Option>)commandMap.values().iterator();  [BUGGY]    if  (looksLikeOption(commandLine,  arg))  {  return  false;  }  if  (anonymous.size()  >  0)  {  return  true;  }  return  false;  }  [CLASS]  GroupImpl  [METHOD]  canProcess  [RETURN_TYPE]  boolean  WriteableCommandLine  commandLine  String  arg  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  SortedMap  newOptionMap  optionMap  WriteableCommandLine  commandLine  Iterator  iter  List  anonymous  newAnonymous  options  Option  option  String  arg  description  name  Map  tailMap  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	139	139	1	replace	List  <  Option>  newAnonymous  =(List  <  Option>)commandMap.values().iterator();	      List    <    Option>    newAnonymous    =(List    <    Option>)optionMap.values().iterator();    	non-compiled	[CE]  illegal  start  of  expression	6	None	replace
76	[BUG]  [BUGGY]  if(!hasOption(option,  commandLine))  {  [CE]  illegal  start  of  expression  [FE]        OptionException    [CONTEXT]      for  (final  Iterator  iter  =  tailMap.values().iterator();  iter.hasNext();)  {  final  Option  option  =  (Option)  iter.next();  if  (option.canProcess(commandLine,  arg))  {  return  true;  }  }    [BUGGY]  if(!hasOption(option,  commandLine))  {  [BUGGY]    return  false;  }  if  (anonymous.size()  >  0)  {  return  true;  }  return  false;  }  [CLASS]  GroupImpl  [METHOD]  canProcess  [RETURN_TYPE]  boolean  WriteableCommandLine  commandLine  String  arg  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  SortedMap  newOptionMap  optionMap  WriteableCommandLine  commandLine  Iterator  iter  List  anonymous  newAnonymous  options  Option  option  String  arg  description  name  Map  tailMap  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	139	139	1	replace	if(!hasOption(option,  commandLine))  {	  if(!looksLikeOption(arg,    commandLine))    {    	non-compiled	[CE]  illegal  start  of  expression	16	None	replace
77	[BUG]  [BUGGY]  if(!looksLikeOption(arg,  description))  {  [CE]  illegal  start  of  expression  [FE]          OptionException    [CONTEXT]      for  (final  Iterator  iter  =  tailMap.values().iterator();  iter.hasNext();)  {  final  Option  option  =  (Option)  iter.next();  if  (option.canProcess(commandLine,  arg))  {  return  true;  }  }    [BUGGY]  if(!looksLikeOption(arg,  description))  {  [BUGGY]    return  false;  }  if  (anonymous.size()  >  0)  {  return  true;  }  return  false;  }  [CLASS]  GroupImpl  [METHOD]  canProcess  [RETURN_TYPE]  boolean  WriteableCommandLine  commandLine  String  arg  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  SortedMap  newOptionMap  optionMap  WriteableCommandLine  commandLine  Iterator  iter  List  anonymous  newAnonymous  options  Option  option  String  arg  description  name  Map  tailMap  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	139	139	1	replace	if(!looksLikeOption(arg,  description))  {	  if(!looksLikeOption(arg,    commandLine))    {    	non-compiled	[CE]  illegal  start  of  expression	16	None	replace
78	[BUG]  [BUGGY]  List  <  Option>  anonymous  =(List  <  Option>)iter.next();  [CE]  illegal  start  of  expression  [FE]              OptionException    [CONTEXT]      for  (final  Iterator  iter  =  tailMap.values().iterator();  iter.hasNext();)  {  final  Option  option  =  (Option)  iter.next();  if  (option.canProcess(commandLine,  arg))  {  return  true;  }  }    [BUGGY]  List  <  Option>  anonymous  =(List  <  Option>)iter.next();  [BUGGY]    if  (looksLikeOption(commandLine,  arg))  {  return  false;  }  if  (anonymous.size()  >  0)  {  return  true;  }  return  false;  }  [CLASS]  GroupImpl  [METHOD]  canProcess  [RETURN_TYPE]  boolean  WriteableCommandLine  commandLine  String  arg  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  SortedMap  newOptionMap  optionMap  WriteableCommandLine  commandLine  Iterator  iter  List  anonymous  newAnonymous  options  Option  option  String  arg  description  name  Map  tailMap  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	139	139	1	replace	List  <  Option>  anonymous  =(List  <  Option>)iter.next();	      List    <    Option>    newAnonymous    =(List    <    Option>)iter.next();    	non-compiled	[CE]  illegal  start  of  expression	9	None	replace
79	[BUG]  [BUGGY]  if(hasOption(option,  commandLine))  {  [CE]  illegal  start  of  expression  [FE]        OptionException    [CONTEXT]      for  (final  Iterator  iter  =  tailMap.values().iterator();  iter.hasNext();)  {  final  Option  option  =  (Option)  iter.next();  if  (option.canProcess(commandLine,  arg))  {  return  true;  }  }    [BUGGY]  if(hasOption(option,  commandLine))  {  [BUGGY]    return  false;  }  if  (anonymous.size()  >  0)  {  return  true;  }  return  false;  }  [CLASS]  GroupImpl  [METHOD]  canProcess  [RETURN_TYPE]  boolean  WriteableCommandLine  commandLine  String  arg  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  SortedMap  newOptionMap  optionMap  WriteableCommandLine  commandLine  Iterator  iter  List  anonymous  newAnonymous  options  Option  option  String  arg  description  name  Map  tailMap  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	139	139	1	replace	if(hasOption(option,  commandLine))  {	  if(looksLikeOption(arg,    commandLine))    {    	non-compiled	[CE]  illegal  start  of  expression	11	None	replace
80	[BUG]  [BUGGY]  if(hasArg()  &&  isLikeOption(commandLine,  arg))  {  [CE]  illegal  start  of  expression  [FE]          OptionException    [CONTEXT]      for  (final  Iterator  iter  =  tailMap.values().iterator();  iter.hasNext();)  {  final  Option  option  =  (Option)  iter.next();  if  (option.canProcess(commandLine,  arg))  {  return  true;  }  }    [BUGGY]  if(hasArg()  &&  isLikeOption(commandLine,  arg))  {  [BUGGY]    return  false;  }  if  (anonymous.size()  >  0)  {  return  true;  }  return  false;  }  [CLASS]  GroupImpl  [METHOD]  canProcess  [RETURN_TYPE]  boolean  WriteableCommandLine  commandLine  String  arg  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  SortedMap  newOptionMap  optionMap  WriteableCommandLine  commandLine  Iterator  iter  List  anonymous  newAnonymous  options  Option  option  String  arg  description  name  Map  tailMap  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	139	139	1	replace	if(hasArg()  &&  isLikeOption(commandLine,  arg))  {	  if(looksLikeOption(arg,    commandLine))    {    	non-compiled	[CE]  illegal  start  of  expression	11	None	replace
81	[BUG]  [BUGGY]  List  <  Option>  options  =  optionMap.keySet().iterator();  [CE]  illegal  start  of  expression  [FE]          OptionException    [CONTEXT]      for  (final  Iterator  iter  =  tailMap.values().iterator();  iter.hasNext();)  {  final  Option  option  =  (Option)  iter.next();  if  (option.canProcess(commandLine,  arg))  {  return  true;  }  }    [BUGGY]  List  <  Option>  options  =  optionMap.keySet().iterator();  [BUGGY]    if  (looksLikeOption(commandLine,  arg))  {  return  false;  }  if  (anonymous.size()  >  0)  {  return  true;  }  return  false;  }  [CLASS]  GroupImpl  [METHOD]  canProcess  [RETURN_TYPE]  boolean  WriteableCommandLine  commandLine  String  arg  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  SortedMap  newOptionMap  optionMap  WriteableCommandLine  commandLine  Iterator  iter  List  anonymous  newAnonymous  options  Option  option  String  arg  description  name  Map  tailMap  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	139	139	1	replace	List  <  Option>  options  =  optionMap.keySet().iterator();	      List    <    Option>    options    =    optionMap.values().iterator();    	non-compiled	[CE]  illegal  start  of  expression	13	None	replace
