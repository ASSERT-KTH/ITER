bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  Option  option  =  option.getOption(arg,  description);  [CE]  illegal  start  of  expression  [FE]              OptionException      [CONTEXT]        for  (final  Iterator  iter  =  tailMap.values().iterator();  iter.hasNext();)  {  final  Option  option  =  (Option)  iter.next();  if  (option.canProcess(commandLine,  arg))  {  return  true;  }  }      [BUGGY]  Option  option  =  option.getOption(arg,  description);  [BUGGY]      if  (looksLikeOption(commandLine,  arg))  {  return  false;  }  if  (anonymous.size()  >  0)  {  return  true;  }  return  false;  }  [CLASS]  GroupImpl  [METHOD]  canProcess  [RETURN_TYPE]  boolean  WriteableCommandLine  commandLine  String  arg  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  SortedMap  newOptionMap  optionMap  WriteableCommandLine  commandLine  Iterator  iter  List  anonymous  newAnonymous  options  Option  option  String  arg  description  name  Map  tailMap  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	139	139	1	replace	Option  option  =  option.getOption(arg,  description);	  Option    option    =    option.getOption(commandLine,    description);    	non-compiled	[CE]  illegal  start  of  expression	23	None	replace
2	[BUG]  [BUGGY]  Option  option  =  option.getOption(description,  commandLine);  [CE]  illegal  start  of  expression  [FE]                OptionException      [CONTEXT]        for  (final  Iterator  iter  =  tailMap.values().iterator();  iter.hasNext();)  {  final  Option  option  =  (Option)  iter.next();  if  (option.canProcess(commandLine,  arg))  {  return  true;  }  }      [BUGGY]  Option  option  =  option.getOption(description,  commandLine);  [BUGGY]      if  (looksLikeOption(commandLine,  arg))  {  return  false;  }  if  (anonymous.size()  >  0)  {  return  true;  }  return  false;  }  [CLASS]  GroupImpl  [METHOD]  canProcess  [RETURN_TYPE]  boolean  WriteableCommandLine  commandLine  String  arg  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  SortedMap  newOptionMap  optionMap  WriteableCommandLine  commandLine  Iterator  iter  List  anonymous  newAnonymous  options  Option  option  String  arg  description  name  Map  tailMap  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	139	139	1	replace	Option  option  =  option.getOption(description,  commandLine);	  Option    option    =    option.getOption(commandLine,    description);    	non-compiled	[CE]  illegal  start  of  expression	23	None	replace
3	[BUG]  [BUGGY]  Option  option  =  options.getOption(commandLine,  arg);  [CE]  illegal  start  of  expression  [FE]                  OptionException      [CONTEXT]        for  (final  Iterator  iter  =  tailMap.values().iterator();  iter.hasNext();)  {  final  Option  option  =  (Option)  iter.next();  if  (option.canProcess(commandLine,  arg))  {  return  true;  }  }      [BUGGY]  Option  option  =  options.getOption(commandLine,  arg);  [BUGGY]      if  (looksLikeOption(commandLine,  arg))  {  return  false;  }  if  (anonymous.size()  >  0)  {  return  true;  }  return  false;  }  [CLASS]  GroupImpl  [METHOD]  canProcess  [RETURN_TYPE]  boolean  WriteableCommandLine  commandLine  String  arg  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  SortedMap  newOptionMap  optionMap  WriteableCommandLine  commandLine  Iterator  iter  List  anonymous  newAnonymous  options  Option  option  String  arg  description  name  Map  tailMap  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	139	139	1	replace	Option  option  =  options.getOption(commandLine,  arg);	  Option    option    =    option.getOption(commandLine,    description);    	non-compiled	[CE]  illegal  start  of  expression	23	None	replace
4	[BUG]  [BUGGY]  if(hasProcessOption(commandLine,  null))  {  [CE]  illegal  start  of  expression  [FE]                  OptionException      [CONTEXT]        for  (final  Iterator  iter  =  tailMap.values().iterator();  iter.hasNext();)  {  final  Option  option  =  (Option)  iter.next();  if  (option.canProcess(commandLine,  arg))  {  return  true;  }  }      [BUGGY]  if(hasProcessOption(commandLine,  null))  {  [BUGGY]      return  false;  }  if  (anonymous.size()  >  0)  {  return  true;  }  return  false;  }  [CLASS]  GroupImpl  [METHOD]  canProcess  [RETURN_TYPE]  boolean  WriteableCommandLine  commandLine  String  arg  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  SortedMap  newOptionMap  optionMap  WriteableCommandLine  commandLine  Iterator  iter  List  anonymous  newAnonymous  options  Option  option  String  arg  description  name  Map  tailMap  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	139	139	1	replace	if(hasProcessOption(commandLine,  null))  {	  if(looksLikeOption(arg,    null))    {    	non-compiled	[CE]  illegal  start  of  expression	71	None	replace
5	[BUG]  [BUGGY]  Set  <  Option>  newAnonymous  =(Set  <  Option>)tailMap.values().iterator();  [CE]  illegal  start  of  expression  [FE]            OptionException      [CONTEXT]        for  (final  Iterator  iter  =  tailMap.values().iterator();  iter.hasNext();)  {  final  Option  option  =  (Option)  iter.next();  if  (option.canProcess(commandLine,  arg))  {  return  true;  }  }      [BUGGY]  Set  <  Option>  newAnonymous  =(Set  <  Option>)tailMap.values().iterator();  [BUGGY]      if  (looksLikeOption(commandLine,  arg))  {  return  false;  }  if  (anonymous.size()  >  0)  {  return  true;  }  return  false;  }  [CLASS]  GroupImpl  [METHOD]  canProcess  [RETURN_TYPE]  boolean  WriteableCommandLine  commandLine  String  arg  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  SortedMap  newOptionMap  optionMap  WriteableCommandLine  commandLine  Iterator  iter  List  anonymous  newAnonymous  options  Option  option  String  arg  description  name  Map  tailMap  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	139	139	1	replace	Set  <  Option>  newAnonymous  =(Set  <  Option>)tailMap.values().iterator();	  Set    <    Option>    newAnonymous    =(Set    <    Option>)optionMap.values().iterator();    	non-compiled	[CE]  illegal  start  of  expression	55	None	replace
6	[BUG]  [BUGGY]  Set  <  Option>  newAnonymous  =(Set  <  Option>)commandLine.values().iterator();  [CE]  illegal  start  of  expression  [FE]              OptionException      [CONTEXT]        for  (final  Iterator  iter  =  tailMap.values().iterator();  iter.hasNext();)  {  final  Option  option  =  (Option)  iter.next();  if  (option.canProcess(commandLine,  arg))  {  return  true;  }  }      [BUGGY]  Set  <  Option>  newAnonymous  =(Set  <  Option>)commandLine.values().iterator();  [BUGGY]      if  (looksLikeOption(commandLine,  arg))  {  return  false;  }  if  (anonymous.size()  >  0)  {  return  true;  }  return  false;  }  [CLASS]  GroupImpl  [METHOD]  canProcess  [RETURN_TYPE]  boolean  WriteableCommandLine  commandLine  String  arg  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  SortedMap  newOptionMap  optionMap  WriteableCommandLine  commandLine  Iterator  iter  List  anonymous  newAnonymous  options  Option  option  String  arg  description  name  Map  tailMap  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	139	139	1	replace	Set  <  Option>  newAnonymous  =(Set  <  Option>)commandLine.values().iterator();	  Set    <    Option>    newAnonymous    =(Set    <    Option>)optionMap.values().iterator();    	non-compiled	[CE]  illegal  start  of  expression	55	None	replace
7	[BUG]  [BUGGY]  if(!hasOption(commandLine,  option))  {  [CE]  illegal  start  of  expression  [FE]            OptionException      [CONTEXT]        for  (final  Iterator  iter  =  tailMap.values().iterator();  iter.hasNext();)  {  final  Option  option  =  (Option)  iter.next();  if  (option.canProcess(commandLine,  arg))  {  return  true;  }  }      [BUGGY]  if(!hasOption(commandLine,  option))  {  [BUGGY]      return  false;  }  if  (anonymous.size()  >  0)  {  return  true;  }  return  false;  }  [CLASS]  GroupImpl  [METHOD]  canProcess  [RETURN_TYPE]  boolean  WriteableCommandLine  commandLine  String  arg  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  SortedMap  newOptionMap  optionMap  WriteableCommandLine  commandLine  Iterator  iter  List  anonymous  newAnonymous  options  Option  option  String  arg  description  name  Map  tailMap  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	139	139	1	replace	if(!hasOption(commandLine,  option))  {	  if(!hasOption(option,    commandLine))    {    	non-compiled	[CE]  illegal  start  of  expression	76	None	replace
8	[BUG]  [BUGGY]  if(hasOption(commandLine,  option))  {  [CE]  illegal  start  of  expression  [FE]              OptionException      [CONTEXT]        for  (final  Iterator  iter  =  tailMap.values().iterator();  iter.hasNext();)  {  final  Option  option  =  (Option)  iter.next();  if  (option.canProcess(commandLine,  arg))  {  return  true;  }  }      [BUGGY]  if(hasOption(commandLine,  option))  {  [BUGGY]      return  false;  }  if  (anonymous.size()  >  0)  {  return  true;  }  return  false;  }  [CLASS]  GroupImpl  [METHOD]  canProcess  [RETURN_TYPE]  boolean  WriteableCommandLine  commandLine  String  arg  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  SortedMap  newOptionMap  optionMap  WriteableCommandLine  commandLine  Iterator  iter  List  anonymous  newAnonymous  options  Option  option  String  arg  description  name  Map  tailMap  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	139	139	1	replace	if(hasOption(commandLine,  option))  {	  if(!hasOption(option,    commandLine))    {    	non-compiled	[CE]  illegal  start  of  expression	76	None	replace
9	[BUG]  [BUGGY]  if(!hasOption(option,  commandLine)&&!anonymous.isEmpty())  {  [CE]  illegal  start  of  expression  [FE]                OptionException      [CONTEXT]        for  (final  Iterator  iter  =  tailMap.values().iterator();  iter.hasNext();)  {  final  Option  option  =  (Option)  iter.next();  if  (option.canProcess(commandLine,  arg))  {  return  true;  }  }      [BUGGY]  if(!hasOption(option,  commandLine)&&!anonymous.isEmpty())  {  [BUGGY]      return  false;  }  if  (anonymous.size()  >  0)  {  return  true;  }  return  false;  }  [CLASS]  GroupImpl  [METHOD]  canProcess  [RETURN_TYPE]  boolean  WriteableCommandLine  commandLine  String  arg  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  SortedMap  newOptionMap  optionMap  WriteableCommandLine  commandLine  Iterator  iter  List  anonymous  newAnonymous  options  Option  option  String  arg  description  name  Map  tailMap  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	139	139	1	replace	if(!hasOption(option,  commandLine)&&!anonymous.isEmpty())  {	  if(!hasOption(option,    commandLine))    {    	non-compiled	[CE]  illegal  start  of  expression	76	None	replace
10	[BUG]  [BUGGY]  if(!hasOption(option,  commandLine)&&!anonymous.contains(arg))  {  [CE]  illegal  start  of  expression  [FE]                  OptionException      [CONTEXT]        for  (final  Iterator  iter  =  tailMap.values().iterator();  iter.hasNext();)  {  final  Option  option  =  (Option)  iter.next();  if  (option.canProcess(commandLine,  arg))  {  return  true;  }  }      [BUGGY]  if(!hasOption(option,  commandLine)&&!anonymous.contains(arg))  {  [BUGGY]      return  false;  }  if  (anonymous.size()  >  0)  {  return  true;  }  return  false;  }  [CLASS]  GroupImpl  [METHOD]  canProcess  [RETURN_TYPE]  boolean  WriteableCommandLine  commandLine  String  arg  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  SortedMap  newOptionMap  optionMap  WriteableCommandLine  commandLine  Iterator  iter  List  anonymous  newAnonymous  options  Option  option  String  arg  description  name  Map  tailMap  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	139	139	1	replace	if(!hasOption(option,  commandLine)&&!anonymous.contains(arg))  {	  if(!hasOption(option,    commandLine))    {    	non-compiled	[CE]  illegal  start  of  expression	76	None	replace
11	[BUG]  [BUGGY]  Option  option  =  options.getOption(commandLine);  [CE]  illegal  start  of  expression  [FE]            OptionException      [CONTEXT]        for  (final  Iterator  iter  =  tailMap.values().iterator();  iter.hasNext();)  {  final  Option  option  =  (Option)  iter.next();  if  (option.canProcess(commandLine,  arg))  {  return  true;  }  }      [BUGGY]  Option  option  =  options.getOption(commandLine);  [BUGGY]      if  (looksLikeOption(commandLine,  arg))  {  return  false;  }  if  (anonymous.size()  >  0)  {  return  true;  }  return  false;  }  [CLASS]  GroupImpl  [METHOD]  canProcess  [RETURN_TYPE]  boolean  WriteableCommandLine  commandLine  String  arg  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  SortedMap  newOptionMap  optionMap  WriteableCommandLine  commandLine  Iterator  iter  List  anonymous  newAnonymous  options  Option  option  String  arg  description  name  Map  tailMap  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	139	139	1	replace	Option  option  =  options.getOption(commandLine);	  Option    option    =    optionMap.getOption(commandLine);    	non-compiled	[CE]  illegal  start  of  expression	22	None	replace
12	[BUG]  [BUGGY]  Option  option  =  optionMap.getOption(commandLine,  description);  [CE]  illegal  start  of  expression  [FE]              OptionException      [CONTEXT]        for  (final  Iterator  iter  =  tailMap.values().iterator();  iter.hasNext();)  {  final  Option  option  =  (Option)  iter.next();  if  (option.canProcess(commandLine,  arg))  {  return  true;  }  }      [BUGGY]  Option  option  =  optionMap.getOption(commandLine,  description);  [BUGGY]      if  (looksLikeOption(commandLine,  arg))  {  return  false;  }  if  (anonymous.size()  >  0)  {  return  true;  }  return  false;  }  [CLASS]  GroupImpl  [METHOD]  canProcess  [RETURN_TYPE]  boolean  WriteableCommandLine  commandLine  String  arg  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  SortedMap  newOptionMap  optionMap  WriteableCommandLine  commandLine  Iterator  iter  List  anonymous  newAnonymous  options  Option  option  String  arg  description  name  Map  tailMap  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	139	139	1	replace	Option  option  =  optionMap.getOption(commandLine,  description);	  Option    option    =    optionMap.getOption(commandLine);    	non-compiled	[CE]  illegal  start  of  expression	22	None	replace
13	[BUG]  [BUGGY]  if(!looksLikeOption(commandLine,  true))  {  [CE]  illegal  start  of  expression  [FE]                OptionException      [CONTEXT]        for  (final  Iterator  iter  =  tailMap.values().iterator();  iter.hasNext();)  {  final  Option  option  =  (Option)  iter.next();  if  (option.canProcess(commandLine,  arg))  {  return  true;  }  }      [BUGGY]  if(!looksLikeOption(commandLine,  true))  {  [BUGGY]      return  false;  }  if  (anonymous.size()  >  0)  {  return  true;  }  return  false;  }  [CLASS]  GroupImpl  [METHOD]  canProcess  [RETURN_TYPE]  boolean  WriteableCommandLine  commandLine  String  arg  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  SortedMap  newOptionMap  optionMap  WriteableCommandLine  commandLine  Iterator  iter  List  anonymous  newAnonymous  options  Option  option  String  arg  description  name  Map  tailMap  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	139	139	1	replace	if(!looksLikeOption(commandLine,  true))  {	  if(!looksLikeOption(commandLine,    false))    {    	non-compiled	[CE]  illegal  start  of  expression	32	None	replace
14	[BUG]  [BUGGY]  if(!canProcessOption(commandLine,  false))  {  [CE]  illegal  start  of  expression  [FE]                  OptionException      [CONTEXT]        for  (final  Iterator  iter  =  tailMap.values().iterator();  iter.hasNext();)  {  final  Option  option  =  (Option)  iter.next();  if  (option.canProcess(commandLine,  arg))  {  return  true;  }  }      [BUGGY]  if(!canProcessOption(commandLine,  false))  {  [BUGGY]      return  false;  }  if  (anonymous.size()  >  0)  {  return  true;  }  return  false;  }  [CLASS]  GroupImpl  [METHOD]  canProcess  [RETURN_TYPE]  boolean  WriteableCommandLine  commandLine  String  arg  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  SortedMap  newOptionMap  optionMap  WriteableCommandLine  commandLine  Iterator  iter  List  anonymous  newAnonymous  options  Option  option  String  arg  description  name  Map  tailMap  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	139	139	1	replace	if(!canProcessOption(commandLine,  false))  {	  if(!looksLikeOption(commandLine,    false))    {    	non-compiled	[CE]  illegal  start  of  expression	32	None	replace
15	[BUG]  [BUGGY]  if(!looksLikeOption(arg,  false))  {  [CE]  illegal  start  of  expression  [FE]                    OptionException      [CONTEXT]        for  (final  Iterator  iter  =  tailMap.values().iterator();  iter.hasNext();)  {  final  Option  option  =  (Option)  iter.next();  if  (option.canProcess(commandLine,  arg))  {  return  true;  }  }      [BUGGY]  if(!looksLikeOption(arg,  false))  {  [BUGGY]      return  false;  }  if  (anonymous.size()  >  0)  {  return  true;  }  return  false;  }  [CLASS]  GroupImpl  [METHOD]  canProcess  [RETURN_TYPE]  boolean  WriteableCommandLine  commandLine  String  arg  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  SortedMap  newOptionMap  optionMap  WriteableCommandLine  commandLine  Iterator  iter  List  anonymous  newAnonymous  options  Option  option  String  arg  description  name  Map  tailMap  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	139	139	1	replace	if(!looksLikeOption(arg,  false))  {	  if(!looksLikeOption(commandLine,    false))    {    	non-compiled	[CE]  illegal  start  of  expression	32	None	replace
16	[BUG]  [BUGGY]  if(!looksLikeOption(commandLine,  true)&&!option.canProcess(commandLine,  arg))  {  [CE]  illegal  start  of  expression  [FE]                      OptionException      [CONTEXT]        for  (final  Iterator  iter  =  tailMap.values().iterator();  iter.hasNext();)  {  final  Option  option  =  (Option)  iter.next();  if  (option.canProcess(commandLine,  arg))  {  return  true;  }  }      [BUGGY]  if(!looksLikeOption(commandLine,  true)&&!option.canProcess(commandLine,  arg))  {  [BUGGY]      return  false;  }  if  (anonymous.size()  >  0)  {  return  true;  }  return  false;  }  [CLASS]  GroupImpl  [METHOD]  canProcess  [RETURN_TYPE]  boolean  WriteableCommandLine  commandLine  String  arg  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  SortedMap  newOptionMap  optionMap  WriteableCommandLine  commandLine  Iterator  iter  List  anonymous  newAnonymous  options  Option  option  String  arg  description  name  Map  tailMap  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	139	139	1	replace	if(!looksLikeOption(commandLine,  true)&&!option.canProcess(commandLine,  arg))  {	  if(!looksLikeOption(commandLine,    false))    {    	non-compiled	[CE]  illegal  start  of  expression	32	None	replace
17	[BUG]  [BUGGY]  if(looksLikeOption(commandLine,  true)&&  isEnabled(iter.next()))  {  [CE]  illegal  start  of  expression  [FE]                    OptionException      [CONTEXT]        for  (final  Iterator  iter  =  tailMap.values().iterator();  iter.hasNext();)  {  final  Option  option  =  (Option)  iter.next();  if  (option.canProcess(commandLine,  arg))  {  return  true;  }  }      [BUGGY]  if(looksLikeOption(commandLine,  true)&&  isEnabled(iter.next()))  {  [BUGGY]      return  false;  }  if  (anonymous.size()  >  0)  {  return  true;  }  return  false;  }  [CLASS]  GroupImpl  [METHOD]  canProcess  [RETURN_TYPE]  boolean  WriteableCommandLine  commandLine  String  arg  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  SortedMap  newOptionMap  optionMap  WriteableCommandLine  commandLine  Iterator  iter  List  anonymous  newAnonymous  options  Option  option  String  arg  description  name  Map  tailMap  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	139	139	1	replace	if(looksLikeOption(commandLine,  true)&&  isEnabled(iter.next()))  {	  if(looksLikeOption(commandLine,    false)||    isEnabled(iter.next()))    {    	non-compiled	[CE]  illegal  start  of  expression	34	None	replace
18	[BUG]  [BUGGY]  if(looksLikeOption(commandLine,  false)&&  isEnabled(iter.next()))  {  [CE]  illegal  start  of  expression  [FE]                      OptionException      [CONTEXT]        for  (final  Iterator  iter  =  tailMap.values().iterator();  iter.hasNext();)  {  final  Option  option  =  (Option)  iter.next();  if  (option.canProcess(commandLine,  arg))  {  return  true;  }  }      [BUGGY]  if(looksLikeOption(commandLine,  false)&&  isEnabled(iter.next()))  {  [BUGGY]      return  false;  }  if  (anonymous.size()  >  0)  {  return  true;  }  return  false;  }  [CLASS]  GroupImpl  [METHOD]  canProcess  [RETURN_TYPE]  boolean  WriteableCommandLine  commandLine  String  arg  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  SortedMap  newOptionMap  optionMap  WriteableCommandLine  commandLine  Iterator  iter  List  anonymous  newAnonymous  options  Option  option  String  arg  description  name  Map  tailMap  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	139	139	1	replace	if(looksLikeOption(commandLine,  false)&&  isEnabled(iter.next()))  {	  if(looksLikeOption(commandLine,    false)||    isEnabled(iter.next()))    {    	non-compiled	[CE]  illegal  start  of  expression	34	None	replace
19	[BUG]  [BUGGY]  if(isEnabled(iter.next())||  looksLikeOption(commandLine,  false)||  isEnabled(iter.next()))  {  [CE]  illegal  start  of  expression  [FE]                        OptionException      [CONTEXT]        for  (final  Iterator  iter  =  tailMap.values().iterator();  iter.hasNext();)  {  final  Option  option  =  (Option)  iter.next();  if  (option.canProcess(commandLine,  arg))  {  return  true;  }  }      [BUGGY]  if(isEnabled(iter.next())||  looksLikeOption(commandLine,  false)||  isEnabled(iter.next()))  {  [BUGGY]      return  false;  }  if  (anonymous.size()  >  0)  {  return  true;  }  return  false;  }  [CLASS]  GroupImpl  [METHOD]  canProcess  [RETURN_TYPE]  boolean  WriteableCommandLine  commandLine  String  arg  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  SortedMap  newOptionMap  optionMap  WriteableCommandLine  commandLine  Iterator  iter  List  anonymous  newAnonymous  options  Option  option  String  arg  description  name  Map  tailMap  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	139	139	1	replace	if(isEnabled(iter.next())||  looksLikeOption(commandLine,  false)||  isEnabled(iter.next()))  {	  if(looksLikeOption(commandLine,    false)||    isEnabled(iter.next()))    {    	non-compiled	[CE]  illegal  start  of  expression	34	None	replace
20	[BUG]  [BUGGY]  if(!canProcessLikeOption(arg,  commandLine))  {  [CE]  illegal  start  of  expression  [FE]              OptionException      [CONTEXT]        for  (final  Iterator  iter  =  tailMap.values().iterator();  iter.hasNext();)  {  final  Option  option  =  (Option)  iter.next();  if  (option.canProcess(commandLine,  arg))  {  return  true;  }  }      [BUGGY]  if(!canProcessLikeOption(arg,  commandLine))  {  [BUGGY]      return  false;  }  if  (anonymous.size()  >  0)  {  return  true;  }  return  false;  }  [CLASS]  GroupImpl  [METHOD]  canProcess  [RETURN_TYPE]  boolean  WriteableCommandLine  commandLine  String  arg  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  SortedMap  newOptionMap  optionMap  WriteableCommandLine  commandLine  Iterator  iter  List  anonymous  newAnonymous  options  Option  option  String  arg  description  name  Map  tailMap  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	139	139	1	replace	if(!canProcessLikeOption(arg,  commandLine))  {	  if(!canProcessLikeOption(commandLine,    arg))    {    	non-compiled	[CE]  illegal  start  of  expression	42	None	replace
21	[BUG]  [BUGGY]  if(canProcessLikeOption(option,  arg))  {  [CE]  illegal  start  of  expression  [FE]                OptionException      [CONTEXT]        for  (final  Iterator  iter  =  tailMap.values().iterator();  iter.hasNext();)  {  final  Option  option  =  (Option)  iter.next();  if  (option.canProcess(commandLine,  arg))  {  return  true;  }  }      [BUGGY]  if(canProcessLikeOption(option,  arg))  {  [BUGGY]      return  false;  }  if  (anonymous.size()  >  0)  {  return  true;  }  return  false;  }  [CLASS]  GroupImpl  [METHOD]  canProcess  [RETURN_TYPE]  boolean  WriteableCommandLine  commandLine  String  arg  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  SortedMap  newOptionMap  optionMap  WriteableCommandLine  commandLine  Iterator  iter  List  anonymous  newAnonymous  options  Option  option  String  arg  description  name  Map  tailMap  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	139	139	1	replace	if(canProcessLikeOption(option,  arg))  {	  if(!canProcessLikeOption(commandLine,    arg))    {    	non-compiled	[CE]  illegal  start  of  expression	42	None	replace
22	[BUG]  [BUGGY]  if(!canProcessLikeOption(option,  commandLine))  {  [CE]  illegal  start  of  expression  [FE]                  OptionException      [CONTEXT]        for  (final  Iterator  iter  =  tailMap.values().iterator();  iter.hasNext();)  {  final  Option  option  =  (Option)  iter.next();  if  (option.canProcess(commandLine,  arg))  {  return  true;  }  }      [BUGGY]  if(!canProcessLikeOption(option,  commandLine))  {  [BUGGY]      return  false;  }  if  (anonymous.size()  >  0)  {  return  true;  }  return  false;  }  [CLASS]  GroupImpl  [METHOD]  canProcess  [RETURN_TYPE]  boolean  WriteableCommandLine  commandLine  String  arg  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  SortedMap  newOptionMap  optionMap  WriteableCommandLine  commandLine  Iterator  iter  List  anonymous  newAnonymous  options  Option  option  String  arg  description  name  Map  tailMap  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	139	139	1	replace	if(!canProcessLikeOption(option,  commandLine))  {	  if(!canProcessLikeOption(commandLine,    arg))    {    	non-compiled	[CE]  illegal  start  of  expression	42	None	replace
23	[BUG]  [BUGGY]  if(!canProcessLikeOption(commandLine,  arg)&&!anonymous.size()  >  0)  {  [CE]  illegal  start  of  expression  [FE]                    OptionException      [CONTEXT]        for  (final  Iterator  iter  =  tailMap.values().iterator();  iter.hasNext();)  {  final  Option  option  =  (Option)  iter.next();  if  (option.canProcess(commandLine,  arg))  {  return  true;  }  }      [BUGGY]  if(!canProcessLikeOption(commandLine,  arg)&&!anonymous.size()  >  0)  {  [BUGGY]      return  false;  }  if  (anonymous.size()  >  0)  {  return  true;  }  return  false;  }  [CLASS]  GroupImpl  [METHOD]  canProcess  [RETURN_TYPE]  boolean  WriteableCommandLine  commandLine  String  arg  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  SortedMap  newOptionMap  optionMap  WriteableCommandLine  commandLine  Iterator  iter  List  anonymous  newAnonymous  options  Option  option  String  arg  description  name  Map  tailMap  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	139	139	1	replace	if(!canProcessLikeOption(commandLine,  arg)&&!anonymous.size()  >  0)  {	  if(!canProcessLikeOption(commandLine,    arg))    {    	non-compiled	[CE]  illegal  start  of  expression	42	None	replace
24	[BUG]  [BUGGY]  if(!looksLikeOption(commandLine,  description)&&  option.canProcess(commandLine,  arg))  {  [CE]  illegal  start  of  expression  [FE]                  OptionException      [CONTEXT]        for  (final  Iterator  iter  =  tailMap.values().iterator();  iter.hasNext();)  {  final  Option  option  =  (Option)  iter.next();  if  (option.canProcess(commandLine,  arg))  {  return  true;  }  }      [BUGGY]  if(!looksLikeOption(commandLine,  description)&&  option.canProcess(commandLine,  arg))  {  [BUGGY]      return  false;  }  if  (anonymous.size()  >  0)  {  return  true;  }  return  false;  }  [CLASS]  GroupImpl  [METHOD]  canProcess  [RETURN_TYPE]  boolean  WriteableCommandLine  commandLine  String  arg  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  SortedMap  newOptionMap  optionMap  WriteableCommandLine  commandLine  Iterator  iter  List  anonymous  newAnonymous  options  Option  option  String  arg  description  name  Map  tailMap  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	139	139	1	replace	if(!looksLikeOption(commandLine,  description)&&  option.canProcess(commandLine,  arg))  {	  if(!looksLikeOption(commandLine,    arg)&&    option.canProcess(commandLine,    arg))    {    	non-compiled	[CE]  illegal  start  of  expression	30	None	replace
25	[BUG]  [BUGGY]  if(!canProcessOption(commandLine,  arg)&&  option.canProcess(commandLine,  arg))  {  [CE]  illegal  start  of  expression  [FE]                    OptionException      [CONTEXT]        for  (final  Iterator  iter  =  tailMap.values().iterator();  iter.hasNext();)  {  final  Option  option  =  (Option)  iter.next();  if  (option.canProcess(commandLine,  arg))  {  return  true;  }  }      [BUGGY]  if(!canProcessOption(commandLine,  arg)&&  option.canProcess(commandLine,  arg))  {  [BUGGY]      return  false;  }  if  (anonymous.size()  >  0)  {  return  true;  }  return  false;  }  [CLASS]  GroupImpl  [METHOD]  canProcess  [RETURN_TYPE]  boolean  WriteableCommandLine  commandLine  String  arg  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  SortedMap  newOptionMap  optionMap  WriteableCommandLine  commandLine  Iterator  iter  List  anonymous  newAnonymous  options  Option  option  String  arg  description  name  Map  tailMap  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	139	139	1	replace	if(!canProcessOption(commandLine,  arg)&&  option.canProcess(commandLine,  arg))  {	  if(!looksLikeOption(commandLine,    arg)&&    option.canProcess(commandLine,    arg))    {    	non-compiled	[CE]  illegal  start  of  expression	30	None	replace
26	[BUG]  [BUGGY]  if(option.canProcess(commandLine,  arg)&&!looksLikeOption(commandLine,  arg))  {  [CE]  illegal  start  of  expression  [FE]                      OptionException      [CONTEXT]        for  (final  Iterator  iter  =  tailMap.values().iterator();  iter.hasNext();)  {  final  Option  option  =  (Option)  iter.next();  if  (option.canProcess(commandLine,  arg))  {  return  true;  }  }      [BUGGY]  if(option.canProcess(commandLine,  arg)&&!looksLikeOption(commandLine,  arg))  {  [BUGGY]      return  false;  }  if  (anonymous.size()  >  0)  {  return  true;  }  return  false;  }  [CLASS]  GroupImpl  [METHOD]  canProcess  [RETURN_TYPE]  boolean  WriteableCommandLine  commandLine  String  arg  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  SortedMap  newOptionMap  optionMap  WriteableCommandLine  commandLine  Iterator  iter  List  anonymous  newAnonymous  options  Option  option  String  arg  description  name  Map  tailMap  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	139	139	1	replace	if(option.canProcess(commandLine,  arg)&&!looksLikeOption(commandLine,  arg))  {	  if(!looksLikeOption(commandLine,    arg)&&    option.canProcess(commandLine,    arg))    {    	non-compiled	[CE]  illegal  start  of  expression	30	None	replace
27	[BUG]  [BUGGY]  ArrayList  <  Option>  newAnonymous  =(ArrayList  <  Option>)tailMap.values().iterator();  [CE]  illegal  start  of  expression  [FE]              OptionException      [CONTEXT]        for  (final  Iterator  iter  =  tailMap.values().iterator();  iter.hasNext();)  {  final  Option  option  =  (Option)  iter.next();  if  (option.canProcess(commandLine,  arg))  {  return  true;  }  }      [BUGGY]  ArrayList  <  Option>  newAnonymous  =(ArrayList  <  Option>)tailMap.values().iterator();  [BUGGY]      if  (looksLikeOption(commandLine,  arg))  {  return  false;  }  if  (anonymous.size()  >  0)  {  return  true;  }  return  false;  }  [CLASS]  GroupImpl  [METHOD]  canProcess  [RETURN_TYPE]  boolean  WriteableCommandLine  commandLine  String  arg  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  SortedMap  newOptionMap  optionMap  WriteableCommandLine  commandLine  Iterator  iter  List  anonymous  newAnonymous  options  Option  option  String  arg  description  name  Map  tailMap  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	139	139	1	replace	ArrayList  <  Option>  newAnonymous  =(ArrayList  <  Option>)tailMap.values().iterator();	  ArrayList    <    Option>    newAnonymous    =(ArrayList    <    Option>)optionMap.values().iterator();    	non-compiled	[CE]  illegal  start  of  expression	56	None	replace
28	[BUG]  [BUGGY]  ArrayList  <  Option>  newAnonymous  =(ArrayList  <  Option>)this.optionMap.values().iterator();  [CE]  illegal  start  of  expression  [FE]                OptionException      [CONTEXT]        for  (final  Iterator  iter  =  tailMap.values().iterator();  iter.hasNext();)  {  final  Option  option  =  (Option)  iter.next();  if  (option.canProcess(commandLine,  arg))  {  return  true;  }  }      [BUGGY]  ArrayList  <  Option>  newAnonymous  =(ArrayList  <  Option>)this.optionMap.values().iterator();  [BUGGY]      if  (looksLikeOption(commandLine,  arg))  {  return  false;  }  if  (anonymous.size()  >  0)  {  return  true;  }  return  false;  }  [CLASS]  GroupImpl  [METHOD]  canProcess  [RETURN_TYPE]  boolean  WriteableCommandLine  commandLine  String  arg  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  SortedMap  newOptionMap  optionMap  WriteableCommandLine  commandLine  Iterator  iter  List  anonymous  newAnonymous  options  Option  option  String  arg  description  name  Map  tailMap  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	139	139	1	replace	ArrayList  <  Option>  newAnonymous  =(ArrayList  <  Option>)this.optionMap.values().iterator();	  ArrayList    <    Option>    newAnonymous    =(ArrayList    <    Option>)optionMap.values().iterator();    	non-compiled	[CE]  illegal  start  of  expression	56	None	replace
29	[BUG]  [BUGGY]  List  <  Option>  newAnonymous  =  options.keySet();  [CE]  illegal  start  of  expression  [FE]                  OptionException      [CONTEXT]        for  (final  Iterator  iter  =  tailMap.values().iterator();  iter.hasNext();)  {  final  Option  option  =  (Option)  iter.next();  if  (option.canProcess(commandLine,  arg))  {  return  true;  }  }      [BUGGY]  List  <  Option>  newAnonymous  =  options.keySet();  [BUGGY]      if  (looksLikeOption(commandLine,  arg))  {  return  false;  }  if  (anonymous.size()  >  0)  {  return  true;  }  return  false;  }  [CLASS]  GroupImpl  [METHOD]  canProcess  [RETURN_TYPE]  boolean  WriteableCommandLine  commandLine  String  arg  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  SortedMap  newOptionMap  optionMap  WriteableCommandLine  commandLine  Iterator  iter  List  anonymous  newAnonymous  options  Option  option  String  arg  description  name  Map  tailMap  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	139	139	1	replace	List  <  Option>  newAnonymous  =  options.keySet();	  List    <    Option>    newAnonymous    =    optionMap.keySet();    	non-compiled	[CE]  illegal  start  of  expression	52	None	replace
30	[BUG]  [BUGGY]  List  <  Option>  newAnonymous  =  optionMap.newArrayList();  [CE]  illegal  start  of  expression  [FE]                    OptionException      [CONTEXT]        for  (final  Iterator  iter  =  tailMap.values().iterator();  iter.hasNext();)  {  final  Option  option  =  (Option)  iter.next();  if  (option.canProcess(commandLine,  arg))  {  return  true;  }  }      [BUGGY]  List  <  Option>  newAnonymous  =  optionMap.newArrayList();  [BUGGY]      if  (looksLikeOption(commandLine,  arg))  {  return  false;  }  if  (anonymous.size()  >  0)  {  return  true;  }  return  false;  }  [CLASS]  GroupImpl  [METHOD]  canProcess  [RETURN_TYPE]  boolean  WriteableCommandLine  commandLine  String  arg  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  SortedMap  newOptionMap  optionMap  WriteableCommandLine  commandLine  Iterator  iter  List  anonymous  newAnonymous  options  Option  option  String  arg  description  name  Map  tailMap  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	139	139	1	replace	List  <  Option>  newAnonymous  =  optionMap.newArrayList();	  List    <    Option>    newAnonymous    =    optionMap.keySet();    	non-compiled	[CE]  illegal  start  of  expression	52	None	replace
31	[BUG]  [BUGGY]  Option  option  =  options.getOption(arg,  description);  [CE]  illegal  start  of  expression  [FE]                  OptionException      [CONTEXT]        for  (final  Iterator  iter  =  tailMap.values().iterator();  iter.hasNext();)  {  final  Option  option  =  (Option)  iter.next();  if  (option.canProcess(commandLine,  arg))  {  return  true;  }  }      [BUGGY]  Option  option  =  options.getOption(arg,  description);  [BUGGY]      if  (looksLikeOption(commandLine,  arg))  {  return  false;  }  if  (anonymous.size()  >  0)  {  return  true;  }  return  false;  }  [CLASS]  GroupImpl  [METHOD]  canProcess  [RETURN_TYPE]  boolean  WriteableCommandLine  commandLine  String  arg  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  SortedMap  newOptionMap  optionMap  WriteableCommandLine  commandLine  Iterator  iter  List  anonymous  newAnonymous  options  Option  option  String  arg  description  name  Map  tailMap  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	139	139	1	replace	Option  option  =  options.getOption(arg,  description);	  Option    option    =    options.getOption(arg);    	non-compiled	[CE]  illegal  start  of  expression	39	None	replace
32	[BUG]  [BUGGY]  Option  option  =  options.getOption(commandline);  [CE]  illegal  start  of  expression  [FE]                    OptionException      [CONTEXT]        for  (final  Iterator  iter  =  tailMap.values().iterator();  iter.hasNext();)  {  final  Option  option  =  (Option)  iter.next();  if  (option.canProcess(commandLine,  arg))  {  return  true;  }  }      [BUGGY]  Option  option  =  options.getOption(commandline);  [BUGGY]      if  (looksLikeOption(commandLine,  arg))  {  return  false;  }  if  (anonymous.size()  >  0)  {  return  true;  }  return  false;  }  [CLASS]  GroupImpl  [METHOD]  canProcess  [RETURN_TYPE]  boolean  WriteableCommandLine  commandLine  String  arg  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  SortedMap  newOptionMap  optionMap  WriteableCommandLine  commandLine  Iterator  iter  List  anonymous  newAnonymous  options  Option  option  String  arg  description  name  Map  tailMap  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	139	139	1	replace	Option  option  =  options.getOption(commandline);	  Option    option    =    options.getOption(arg);    	non-compiled	[CE]  illegal  start  of  expression	39	None	replace
33	[BUG]  [BUGGY]  final  Set  <  Option>  newAnonymous  =(Set  <  Option>)iter.next();  [CE]  illegal  start  of  expression  [FE]                  OptionException      [CONTEXT]        for  (final  Iterator  iter  =  tailMap.values().iterator();  iter.hasNext();)  {  final  Option  option  =  (Option)  iter.next();  if  (option.canProcess(commandLine,  arg))  {  return  true;  }  }      [BUGGY]  final  Set  <  Option>  newAnonymous  =(Set  <  Option>)iter.next();  [BUGGY]      if  (looksLikeOption(commandLine,  arg))  {  return  false;  }  if  (anonymous.size()  >  0)  {  return  true;  }  return  false;  }  [CLASS]  GroupImpl  [METHOD]  canProcess  [RETURN_TYPE]  boolean  WriteableCommandLine  commandLine  String  arg  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  SortedMap  newOptionMap  optionMap  WriteableCommandLine  commandLine  Iterator  iter  List  anonymous  newAnonymous  options  Option  option  String  arg  description  name  Map  tailMap  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	139	139	1	replace	final  Set  <  Option>  newAnonymous  =(Set  <  Option>)iter.next();	  final    List    <    Option>    newAnonymous    =(List    <    Option>)iter.next();    	non-compiled	[CE]  illegal  start  of  expression	4	None	replace
34	[BUG]  [BUGGY]  List  <  Option>  newAnonymous  =  option.values();  [CE]  illegal  start  of  expression  [FE]                  OptionException      [CONTEXT]        for  (final  Iterator  iter  =  tailMap.values().iterator();  iter.hasNext();)  {  final  Option  option  =  (Option)  iter.next();  if  (option.canProcess(commandLine,  arg))  {  return  true;  }  }      [BUGGY]  List  <  Option>  newAnonymous  =  option.values();  [BUGGY]      if  (looksLikeOption(commandLine,  arg))  {  return  false;  }  if  (anonymous.size()  >  0)  {  return  true;  }  return  false;  }  [CLASS]  GroupImpl  [METHOD]  canProcess  [RETURN_TYPE]  boolean  WriteableCommandLine  commandLine  String  arg  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  SortedMap  newOptionMap  optionMap  WriteableCommandLine  commandLine  Iterator  iter  List  anonymous  newAnonymous  options  Option  option  String  arg  description  name  Map  tailMap  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	139	139	1	replace	List  <  Option>  newAnonymous  =  option.values();	  List    <    Option>    newAnonymous    =    options.values();    	non-compiled	[CE]  illegal  start  of  expression	24	None	replace
35	[BUG]  [BUGGY]  Option  option  =(Option)option.clone();  [CE]  illegal  start  of  expression  [FE]                  OptionException      [CONTEXT]        for  (final  Iterator  iter  =  tailMap.values().iterator();  iter.hasNext();)  {  final  Option  option  =  (Option)  iter.next();  if  (option.canProcess(commandLine,  arg))  {  return  true;  }  }      [BUGGY]  Option  option  =(Option)option.clone();  [BUGGY]      if  (looksLikeOption(commandLine,  arg))  {  return  false;  }  if  (anonymous.size()  >  0)  {  return  true;  }  return  false;  }  [CLASS]  GroupImpl  [METHOD]  canProcess  [RETURN_TYPE]  boolean  WriteableCommandLine  commandLine  String  arg  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  SortedMap  newOptionMap  optionMap  WriteableCommandLine  commandLine  Iterator  iter  List  anonymous  newAnonymous  options  Option  option  String  arg  description  name  Map  tailMap  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	139	139	1	replace	Option  option  =(Option)option.clone();	  Option    option    =(Option)option.next();    	non-compiled	[CE]  illegal  start  of  expression	65	None	replace
36	[BUG]  [BUGGY]  Option  option  =(Option)option.getValue();  [CE]  illegal  start  of  expression  [FE]                    OptionException      [CONTEXT]        for  (final  Iterator  iter  =  tailMap.values().iterator();  iter.hasNext();)  {  final  Option  option  =  (Option)  iter.next();  if  (option.canProcess(commandLine,  arg))  {  return  true;  }  }      [BUGGY]  Option  option  =(Option)option.getValue();  [BUGGY]      if  (looksLikeOption(commandLine,  arg))  {  return  false;  }  if  (anonymous.size()  >  0)  {  return  true;  }  return  false;  }  [CLASS]  GroupImpl  [METHOD]  canProcess  [RETURN_TYPE]  boolean  WriteableCommandLine  commandLine  String  arg  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  SortedMap  newOptionMap  optionMap  WriteableCommandLine  commandLine  Iterator  iter  List  anonymous  newAnonymous  options  Option  option  String  arg  description  name  Map  tailMap  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	139	139	1	replace	Option  option  =(Option)option.getValue();	  Option    option    =(Option)option.next();    	non-compiled	[CE]  illegal  start  of  expression	65	None	replace
37	[BUG]  [BUGGY]  options  =(Option)iter.next();  [CE]  illegal  start  of  expression  [FE]                OptionException      [CONTEXT]        for  (final  Iterator  iter  =  tailMap.values().iterator();  iter.hasNext();)  {  final  Option  option  =  (Option)  iter.next();  if  (option.canProcess(commandLine,  arg))  {  return  true;  }  }      [BUGGY]  options  =(Option)iter.next();  [BUGGY]      if  (looksLikeOption(commandLine,  arg))  {  return  false;  }  if  (anonymous.size()  >  0)  {  return  true;  }  return  false;  }  [CLASS]  GroupImpl  [METHOD]  canProcess  [RETURN_TYPE]  boolean  WriteableCommandLine  commandLine  String  arg  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  SortedMap  newOptionMap  optionMap  WriteableCommandLine  commandLine  Iterator  iter  List  anonymous  newAnonymous  options  Option  option  String  arg  description  name  Map  tailMap  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	139	139	1	replace	options  =(Option)iter.next();	  option    =(Option)iter.next();    	non-compiled	[CE]  illegal  start  of  expression	21	None	replace
38	[BUG]  [BUGGY]  if(looksLikeOption(commandLine,  false)||  isEnabled(Feature.QUOTE_FIELD_NAMES))  {  [CE]  illegal  start  of  expression  [FE]                OptionException      [CONTEXT]        for  (final  Iterator  iter  =  tailMap.values().iterator();  iter.hasNext();)  {  final  Option  option  =  (Option)  iter.next();  if  (option.canProcess(commandLine,  arg))  {  return  true;  }  }      [BUGGY]  if(looksLikeOption(commandLine,  false)||  isEnabled(Feature.QUOTE_FIELD_NAMES))  {  [BUGGY]      return  false;  }  if  (anonymous.size()  >  0)  {  return  true;  }  return  false;  }  [CLASS]  GroupImpl  [METHOD]  canProcess  [RETURN_TYPE]  boolean  WriteableCommandLine  commandLine  String  arg  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  SortedMap  newOptionMap  optionMap  WriteableCommandLine  commandLine  Iterator  iter  List  anonymous  newAnonymous  options  Option  option  String  arg  description  name  Map  tailMap  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	139	139	1	replace	if(looksLikeOption(commandLine,  false)||  isEnabled(Feature.QUOTE_FIELD_NAMES))  {	  if(looksLikeOption(commandLine,    true)||    isEnabled(Feature.QUOTE_FIELD_NAMES))    {    	non-compiled	[CE]  illegal  start  of  expression	70	None	replace
39	[BUG]  [BUGGY]  if(looksLikeOption(commandLine,  false)&&  isEnabled(Feature.QUOTE_FIELD_NAMES))  {  [CE]  illegal  start  of  expression  [FE]                  OptionException      [CONTEXT]        for  (final  Iterator  iter  =  tailMap.values().iterator();  iter.hasNext();)  {  final  Option  option  =  (Option)  iter.next();  if  (option.canProcess(commandLine,  arg))  {  return  true;  }  }      [BUGGY]  if(looksLikeOption(commandLine,  false)&&  isEnabled(Feature.QUOTE_FIELD_NAMES))  {  [BUGGY]      return  false;  }  if  (anonymous.size()  >  0)  {  return  true;  }  return  false;  }  [CLASS]  GroupImpl  [METHOD]  canProcess  [RETURN_TYPE]  boolean  WriteableCommandLine  commandLine  String  arg  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  SortedMap  newOptionMap  optionMap  WriteableCommandLine  commandLine  Iterator  iter  List  anonymous  newAnonymous  options  Option  option  String  arg  description  name  Map  tailMap  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	139	139	1	replace	if(looksLikeOption(commandLine,  false)&&  isEnabled(Feature.QUOTE_FIELD_NAMES))  {	  if(looksLikeOption(commandLine,    true)||    isEnabled(Feature.QUOTE_FIELD_NAMES))    {    	non-compiled	[CE]  illegal  start  of  expression	70	None	replace
40	[BUG]  [BUGGY]  if(isEnabled(Feature.QUOTE_FIELD_NAMES)||  looksLikeOption(commandLine,  true)||  isEnabled(Feature.QUOTE_FIELD_NAMES))  {  [CE]  illegal  start  of  expression  [FE]                    OptionException      [CONTEXT]        for  (final  Iterator  iter  =  tailMap.values().iterator();  iter.hasNext();)  {  final  Option  option  =  (Option)  iter.next();  if  (option.canProcess(commandLine,  arg))  {  return  true;  }  }      [BUGGY]  if(isEnabled(Feature.QUOTE_FIELD_NAMES)||  looksLikeOption(commandLine,  true)||  isEnabled(Feature.QUOTE_FIELD_NAMES))  {  [BUGGY]      return  false;  }  if  (anonymous.size()  >  0)  {  return  true;  }  return  false;  }  [CLASS]  GroupImpl  [METHOD]  canProcess  [RETURN_TYPE]  boolean  WriteableCommandLine  commandLine  String  arg  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  SortedMap  newOptionMap  optionMap  WriteableCommandLine  commandLine  Iterator  iter  List  anonymous  newAnonymous  options  Option  option  String  arg  description  name  Map  tailMap  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	139	139	1	replace	if(isEnabled(Feature.QUOTE_FIELD_NAMES)||  looksLikeOption(commandLine,  true)||  isEnabled(Feature.QUOTE_FIELD_NAMES))  {	  if(looksLikeOption(commandLine,    true)||    isEnabled(Feature.QUOTE_FIELD_NAMES))    {    	non-compiled	[CE]  illegal  start  of  expression	70	None	replace
41	[BUG]  [BUGGY]  if(isEnabled(Feature.QUOTE_FIELD_NAMES)||  isLikeOption(commandLine,  true))  {  [CE]  illegal  start  of  expression  [FE]                      OptionException      [CONTEXT]        for  (final  Iterator  iter  =  tailMap.values().iterator();  iter.hasNext();)  {  final  Option  option  =  (Option)  iter.next();  if  (option.canProcess(commandLine,  arg))  {  return  true;  }  }      [BUGGY]  if(isEnabled(Feature.QUOTE_FIELD_NAMES)||  isLikeOption(commandLine,  true))  {  [BUGGY]      return  false;  }  if  (anonymous.size()  >  0)  {  return  true;  }  return  false;  }  [CLASS]  GroupImpl  [METHOD]  canProcess  [RETURN_TYPE]  boolean  WriteableCommandLine  commandLine  String  arg  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  SortedMap  newOptionMap  optionMap  WriteableCommandLine  commandLine  Iterator  iter  List  anonymous  newAnonymous  options  Option  option  String  arg  description  name  Map  tailMap  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	139	139	1	replace	if(isEnabled(Feature.QUOTE_FIELD_NAMES)||  isLikeOption(commandLine,  true))  {	  if(looksLikeOption(commandLine,    true)||    isEnabled(Feature.QUOTE_FIELD_NAMES))    {    	non-compiled	[CE]  illegal  start  of  expression	70	None	replace
42	[BUG]  [BUGGY]  if(hasOption(commandLine,  false))  {  [CE]  illegal  start  of  expression  [FE]              OptionException      [CONTEXT]        for  (final  Iterator  iter  =  tailMap.values().iterator();  iter.hasNext();)  {  final  Option  option  =  (Option)  iter.next();  if  (option.canProcess(commandLine,  arg))  {  return  true;  }  }      [BUGGY]  if(hasOption(commandLine,  false))  {  [BUGGY]      return  false;  }  if  (anonymous.size()  >  0)  {  return  true;  }  return  false;  }  [CLASS]  GroupImpl  [METHOD]  canProcess  [RETURN_TYPE]  boolean  WriteableCommandLine  commandLine  String  arg  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  SortedMap  newOptionMap  optionMap  WriteableCommandLine  commandLine  Iterator  iter  List  anonymous  newAnonymous  options  Option  option  String  arg  description  name  Map  tailMap  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	139	139	1	replace	if(hasOption(commandLine,  false))  {	  if(hasOption(option,    false))    {    	non-compiled	[CE]  illegal  start  of  expression	69	None	replace
43	[BUG]  [BUGGY]  if(hasOption(option,  true))  {  [CE]  illegal  start  of  expression  [FE]                OptionException      [CONTEXT]        for  (final  Iterator  iter  =  tailMap.values().iterator();  iter.hasNext();)  {  final  Option  option  =  (Option)  iter.next();  if  (option.canProcess(commandLine,  arg))  {  return  true;  }  }      [BUGGY]  if(hasOption(option,  true))  {  [BUGGY]      return  false;  }  if  (anonymous.size()  >  0)  {  return  true;  }  return  false;  }  [CLASS]  GroupImpl  [METHOD]  canProcess  [RETURN_TYPE]  boolean  WriteableCommandLine  commandLine  String  arg  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  SortedMap  newOptionMap  optionMap  WriteableCommandLine  commandLine  Iterator  iter  List  anonymous  newAnonymous  options  Option  option  String  arg  description  name  Map  tailMap  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	139	139	1	replace	if(hasOption(option,  true))  {	  if(hasOption(option,    false))    {    	non-compiled	[CE]  illegal  start  of  expression	69	None	replace
44	[BUG]  [BUGGY]  if(hasOption(option,  true)||  hasOption(commandLine,  false))  {  [CE]  illegal  start  of  expression  [FE]                  OptionException      [CONTEXT]        for  (final  Iterator  iter  =  tailMap.values().iterator();  iter.hasNext();)  {  final  Option  option  =  (Option)  iter.next();  if  (option.canProcess(commandLine,  arg))  {  return  true;  }  }      [BUGGY]  if(hasOption(option,  true)||  hasOption(commandLine,  false))  {  [BUGGY]      return  false;  }  if  (anonymous.size()  >  0)  {  return  true;  }  return  false;  }  [CLASS]  GroupImpl  [METHOD]  canProcess  [RETURN_TYPE]  boolean  WriteableCommandLine  commandLine  String  arg  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  SortedMap  newOptionMap  optionMap  WriteableCommandLine  commandLine  Iterator  iter  List  anonymous  newAnonymous  options  Option  option  String  arg  description  name  Map  tailMap  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	139	139	1	replace	if(hasOption(option,  true)||  hasOption(commandLine,  false))  {	  if(hasOption(option,    false))    {    	non-compiled	[CE]  illegal  start  of  expression	69	None	replace
45	[BUG]  [BUGGY]  if(hasOption(option,  true)||  hasOption(arg,  false))  {  [CE]  illegal  start  of  expression  [FE]                    OptionException      [CONTEXT]        for  (final  Iterator  iter  =  tailMap.values().iterator();  iter.hasNext();)  {  final  Option  option  =  (Option)  iter.next();  if  (option.canProcess(commandLine,  arg))  {  return  true;  }  }      [BUGGY]  if(hasOption(option,  true)||  hasOption(arg,  false))  {  [BUGGY]      return  false;  }  if  (anonymous.size()  >  0)  {  return  true;  }  return  false;  }  [CLASS]  GroupImpl  [METHOD]  canProcess  [RETURN_TYPE]  boolean  WriteableCommandLine  commandLine  String  arg  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  SortedMap  newOptionMap  optionMap  WriteableCommandLine  commandLine  Iterator  iter  List  anonymous  newAnonymous  options  Option  option  String  arg  description  name  Map  tailMap  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	139	139	1	replace	if(hasOption(option,  true)||  hasOption(arg,  false))  {	  if(hasOption(option,    false))    {    	non-compiled	[CE]  illegal  start  of  expression	69	None	replace
46	[BUG]  [BUGGY]  if(canProcessOption(commandLine,  arg,  description))  {  [CE]  illegal  start  of  expression  [FE]            OptionException      [CONTEXT]        for  (final  Iterator  iter  =  tailMap.values().iterator();  iter.hasNext();)  {  final  Option  option  =  (Option)  iter.next();  if  (option.canProcess(commandLine,  arg))  {  return  true;  }  }      [BUGGY]  if(canProcessOption(commandLine,  arg,  description))  {  [BUGGY]      return  false;  }  if  (anonymous.size()  >  0)  {  return  true;  }  return  false;  }  [CLASS]  GroupImpl  [METHOD]  canProcess  [RETURN_TYPE]  boolean  WriteableCommandLine  commandLine  String  arg  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  SortedMap  newOptionMap  optionMap  WriteableCommandLine  commandLine  Iterator  iter  List  anonymous  newAnonymous  options  Option  option  String  arg  description  name  Map  tailMap  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	139	139	1	replace	if(canProcessOption(commandLine,  arg,  description))  {	  if(canProcessOption(commandLine,    arg))    {    	non-compiled	[CE]  illegal  start  of  expression	10	None	replace
47	[BUG]  [BUGGY]  if(canProcessOption(option,  arg))  {  [CE]  illegal  start  of  expression  [FE]              OptionException      [CONTEXT]        for  (final  Iterator  iter  =  tailMap.values().iterator();  iter.hasNext();)  {  final  Option  option  =  (Option)  iter.next();  if  (option.canProcess(commandLine,  arg))  {  return  true;  }  }      [BUGGY]  if(canProcessOption(option,  arg))  {  [BUGGY]      return  false;  }  if  (anonymous.size()  >  0)  {  return  true;  }  return  false;  }  [CLASS]  GroupImpl  [METHOD]  canProcess  [RETURN_TYPE]  boolean  WriteableCommandLine  commandLine  String  arg  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  SortedMap  newOptionMap  optionMap  WriteableCommandLine  commandLine  Iterator  iter  List  anonymous  newAnonymous  options  Option  option  String  arg  description  name  Map  tailMap  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	139	139	1	replace	if(canProcessOption(option,  arg))  {	  if(canProcessOption(commandLine,    arg))    {    	non-compiled	[CE]  illegal  start  of  expression	10	None	replace
48	[BUG]  [BUGGY]  if(hasProcessOption(commandLine,  arg))  {  [CE]  illegal  start  of  expression  [FE]            OptionException      [CONTEXT]        for  (final  Iterator  iter  =  tailMap.values().iterator();  iter.hasNext();)  {  final  Option  option  =  (Option)  iter.next();  if  (option.canProcess(commandLine,  arg))  {  return  true;  }  }      [BUGGY]  if(hasProcessOption(commandLine,  arg))  {  [BUGGY]      return  false;  }  if  (anonymous.size()  >  0)  {  return  true;  }  return  false;  }  [CLASS]  GroupImpl  [METHOD]  canProcess  [RETURN_TYPE]  boolean  WriteableCommandLine  commandLine  String  arg  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  SortedMap  newOptionMap  optionMap  WriteableCommandLine  commandLine  Iterator  iter  List  anonymous  newAnonymous  options  Option  option  String  arg  description  name  Map  tailMap  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	139	139	1	replace	if(hasProcessOption(commandLine,  arg))  {	  if(canProcessOption(arg,    commandLine))    {    	non-compiled	[CE]  illegal  start  of  expression	59	None	replace
49	[BUG]  [BUGGY]  if(canProcessOption(commandLine,  arg)||  canProcessOption(commandLine))  {  [CE]  illegal  start  of  expression  [FE]              OptionException      [CONTEXT]        for  (final  Iterator  iter  =  tailMap.values().iterator();  iter.hasNext();)  {  final  Option  option  =  (Option)  iter.next();  if  (option.canProcess(commandLine,  arg))  {  return  true;  }  }      [BUGGY]  if(canProcessOption(commandLine,  arg)||  canProcessOption(commandLine))  {  [BUGGY]      return  false;  }  if  (anonymous.size()  >  0)  {  return  true;  }  return  false;  }  [CLASS]  GroupImpl  [METHOD]  canProcess  [RETURN_TYPE]  boolean  WriteableCommandLine  commandLine  String  arg  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  SortedMap  newOptionMap  optionMap  WriteableCommandLine  commandLine  Iterator  iter  List  anonymous  newAnonymous  options  Option  option  String  arg  description  name  Map  tailMap  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	139	139	1	replace	if(canProcessOption(commandLine,  arg)||  canProcessOption(commandLine))  {	  if(canProcessOption(arg,    commandLine))    {    	non-compiled	[CE]  illegal  start  of  expression	59	None	replace
50	[BUG]  [BUGGY]  if(!canProcessOption(commandline,  arg))  {  [CE]  illegal  start  of  expression  [FE]              OptionException      [CONTEXT]        for  (final  Iterator  iter  =  tailMap.values().iterator();  iter.hasNext();)  {  final  Option  option  =  (Option)  iter.next();  if  (option.canProcess(commandLine,  arg))  {  return  true;  }  }      [BUGGY]  if(!canProcessOption(commandline,  arg))  {  [BUGGY]      return  false;  }  if  (anonymous.size()  >  0)  {  return  true;  }  return  false;  }  [CLASS]  GroupImpl  [METHOD]  canProcess  [RETURN_TYPE]  boolean  WriteableCommandLine  commandLine  String  arg  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  SortedMap  newOptionMap  optionMap  WriteableCommandLine  commandLine  Iterator  iter  List  anonymous  newAnonymous  options  Option  option  String  arg  description  name  Map  tailMap  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	139	139	1	replace	if(!canProcessOption(commandline,  arg))  {	  if(!canProcessOption(arg,    commandLine))    {    	non-compiled	[CE]  illegal  start  of  expression	54	None	replace
51	[BUG]  [BUGGY]  if(!canProcessOption(arg,  description))  {  [CE]  illegal  start  of  expression  [FE]                OptionException      [CONTEXT]        for  (final  Iterator  iter  =  tailMap.values().iterator();  iter.hasNext();)  {  final  Option  option  =  (Option)  iter.next();  if  (option.canProcess(commandLine,  arg))  {  return  true;  }  }      [BUGGY]  if(!canProcessOption(arg,  description))  {  [BUGGY]      return  false;  }  if  (anonymous.size()  >  0)  {  return  true;  }  return  false;  }  [CLASS]  GroupImpl  [METHOD]  canProcess  [RETURN_TYPE]  boolean  WriteableCommandLine  commandLine  String  arg  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  SortedMap  newOptionMap  optionMap  WriteableCommandLine  commandLine  Iterator  iter  List  anonymous  newAnonymous  options  Option  option  String  arg  description  name  Map  tailMap  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	139	139	1	replace	if(!canProcessOption(arg,  description))  {	  if(!canProcessOption(arg,    commandLine))    {    	non-compiled	[CE]  illegal  start  of  expression	54	None	replace
52	[BUG]  [BUGGY]  if(hasOption(commandLine,  null))  {  [CE]  illegal  start  of  expression  [FE]                  OptionException      [CONTEXT]        for  (final  Iterator  iter  =  tailMap.values().iterator();  iter.hasNext();)  {  final  Option  option  =  (Option)  iter.next();  if  (option.canProcess(commandLine,  arg))  {  return  true;  }  }      [BUGGY]  if(hasOption(commandLine,  null))  {  [BUGGY]      return  false;  }  if  (anonymous.size()  >  0)  {  return  true;  }  return  false;  }  [CLASS]  GroupImpl  [METHOD]  canProcess  [RETURN_TYPE]  boolean  WriteableCommandLine  commandLine  String  arg  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  SortedMap  newOptionMap  optionMap  WriteableCommandLine  commandLine  Iterator  iter  List  anonymous  newAnonymous  options  Option  option  String  arg  description  name  Map  tailMap  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	139	139	1	replace	if(hasOption(commandLine,  null))  {	  if(hasOption(option,    null))    {    	non-compiled	[CE]  illegal  start  of  expression	66	None	replace
53	[BUG]  [BUGGY]  if(hasOption(option,  null)||  hasOption(commandLine,  null))  {  [CE]  illegal  start  of  expression  [FE]                    OptionException      [CONTEXT]        for  (final  Iterator  iter  =  tailMap.values().iterator();  iter.hasNext();)  {  final  Option  option  =  (Option)  iter.next();  if  (option.canProcess(commandLine,  arg))  {  return  true;  }  }      [BUGGY]  if(hasOption(option,  null)||  hasOption(commandLine,  null))  {  [BUGGY]      return  false;  }  if  (anonymous.size()  >  0)  {  return  true;  }  return  false;  }  [CLASS]  GroupImpl  [METHOD]  canProcess  [RETURN_TYPE]  boolean  WriteableCommandLine  commandLine  String  arg  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  SortedMap  newOptionMap  optionMap  WriteableCommandLine  commandLine  Iterator  iter  List  anonymous  newAnonymous  options  Option  option  String  arg  description  name  Map  tailMap  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	139	139	1	replace	if(hasOption(option,  null)||  hasOption(commandLine,  null))  {	  if(hasOption(option,    null))    {    	non-compiled	[CE]  illegal  start  of  expression	66	None	replace
54	[BUG]  [BUGGY]  if(hasOption(option,  null)&&  hasOption(commandLine,  null))  {  [CE]  illegal  start  of  expression  [FE]                      OptionException      [CONTEXT]        for  (final  Iterator  iter  =  tailMap.values().iterator();  iter.hasNext();)  {  final  Option  option  =  (Option)  iter.next();  if  (option.canProcess(commandLine,  arg))  {  return  true;  }  }      [BUGGY]  if(hasOption(option,  null)&&  hasOption(commandLine,  null))  {  [BUGGY]      return  false;  }  if  (anonymous.size()  >  0)  {  return  true;  }  return  false;  }  [CLASS]  GroupImpl  [METHOD]  canProcess  [RETURN_TYPE]  boolean  WriteableCommandLine  commandLine  String  arg  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  SortedMap  newOptionMap  optionMap  WriteableCommandLine  commandLine  Iterator  iter  List  anonymous  newAnonymous  options  Option  option  String  arg  description  name  Map  tailMap  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	139	139	1	replace	if(hasOption(option,  null)&&  hasOption(commandLine,  null))  {	  if(hasOption(option,    null))    {    	non-compiled	[CE]  illegal  start  of  expression	66	None	replace
55	[BUG]  [BUGGY]  if(hasOption(arg,  null))  {  [CE]  illegal  start  of  expression  [FE]                        OptionException      [CONTEXT]        for  (final  Iterator  iter  =  tailMap.values().iterator();  iter.hasNext();)  {  final  Option  option  =  (Option)  iter.next();  if  (option.canProcess(commandLine,  arg))  {  return  true;  }  }      [BUGGY]  if(hasOption(arg,  null))  {  [BUGGY]      return  false;  }  if  (anonymous.size()  >  0)  {  return  true;  }  return  false;  }  [CLASS]  GroupImpl  [METHOD]  canProcess  [RETURN_TYPE]  boolean  WriteableCommandLine  commandLine  String  arg  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  SortedMap  newOptionMap  optionMap  WriteableCommandLine  commandLine  Iterator  iter  List  anonymous  newAnonymous  options  Option  option  String  arg  description  name  Map  tailMap  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	139	139	1	replace	if(hasOption(arg,  null))  {	  if(hasOption(option,    null))    {    	non-compiled	[CE]  illegal  start  of  expression	66	None	replace
56	[BUG]  [BUGGY]  List  <  Option>  newAnonymous  =(List  <  Option>)this.optionMap.get(commandLine);  [CE]  illegal  start  of  expression  [FE]                    OptionException      [CONTEXT]        for  (final  Iterator  iter  =  tailMap.values().iterator();  iter.hasNext();)  {  final  Option  option  =  (Option)  iter.next();  if  (option.canProcess(commandLine,  arg))  {  return  true;  }  }      [BUGGY]  List  <  Option>  newAnonymous  =(List  <  Option>)this.optionMap.get(commandLine);  [BUGGY]      if  (looksLikeOption(commandLine,  arg))  {  return  false;  }  if  (anonymous.size()  >  0)  {  return  true;  }  return  false;  }  [CLASS]  GroupImpl  [METHOD]  canProcess  [RETURN_TYPE]  boolean  WriteableCommandLine  commandLine  String  arg  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  SortedMap  newOptionMap  optionMap  WriteableCommandLine  commandLine  Iterator  iter  List  anonymous  newAnonymous  options  Option  option  String  arg  description  name  Map  tailMap  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	139	139	1	replace	List  <  Option>  newAnonymous  =(List  <  Option>)this.optionMap.get(commandLine);	  List    <    Option>    newAnonymous    =(List    <    Option>)this.optionMap.get(arg);    	non-compiled	[CE]  illegal  start  of  expression	43	None	replace
57	[BUG]  [BUGGY]  Set  <  Option>  newAnonymous  =(Set  <  Option>)this.optionMap.get(arg);  [CE]  illegal  start  of  expression  [FE]                      OptionException      [CONTEXT]        for  (final  Iterator  iter  =  tailMap.values().iterator();  iter.hasNext();)  {  final  Option  option  =  (Option)  iter.next();  if  (option.canProcess(commandLine,  arg))  {  return  true;  }  }      [BUGGY]  Set  <  Option>  newAnonymous  =(Set  <  Option>)this.optionMap.get(arg);  [BUGGY]      if  (looksLikeOption(commandLine,  arg))  {  return  false;  }  if  (anonymous.size()  >  0)  {  return  true;  }  return  false;  }  [CLASS]  GroupImpl  [METHOD]  canProcess  [RETURN_TYPE]  boolean  WriteableCommandLine  commandLine  String  arg  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  SortedMap  newOptionMap  optionMap  WriteableCommandLine  commandLine  Iterator  iter  List  anonymous  newAnonymous  options  Option  option  String  arg  description  name  Map  tailMap  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	139	139	1	replace	Set  <  Option>  newAnonymous  =(Set  <  Option>)this.optionMap.get(arg);	  List    <    Option>    newAnonymous    =(List    <    Option>)this.optionMap.get(arg);    	non-compiled	[CE]  illegal  start  of  expression	43	None	replace
58	[BUG]  [BUGGY]  List  <  Option>  newAnonymous  =(List  <  Option>)this.optionMap.get(option);  [CE]  illegal  start  of  expression  [FE]                        OptionException      [CONTEXT]        for  (final  Iterator  iter  =  tailMap.values().iterator();  iter.hasNext();)  {  final  Option  option  =  (Option)  iter.next();  if  (option.canProcess(commandLine,  arg))  {  return  true;  }  }      [BUGGY]  List  <  Option>  newAnonymous  =(List  <  Option>)this.optionMap.get(option);  [BUGGY]      if  (looksLikeOption(commandLine,  arg))  {  return  false;  }  if  (anonymous.size()  >  0)  {  return  true;  }  return  false;  }  [CLASS]  GroupImpl  [METHOD]  canProcess  [RETURN_TYPE]  boolean  WriteableCommandLine  commandLine  String  arg  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  SortedMap  newOptionMap  optionMap  WriteableCommandLine  commandLine  Iterator  iter  List  anonymous  newAnonymous  options  Option  option  String  arg  description  name  Map  tailMap  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	139	139	1	replace	List  <  Option>  newAnonymous  =(List  <  Option>)this.optionMap.get(option);	  List    <    Option>    newAnonymous    =(List    <    Option>)this.optionMap.get(arg);    	non-compiled	[CE]  illegal  start  of  expression	43	None	replace
59	[BUG]  [BUGGY]  List  <  Option>  newAnonymous  =(List  <  Option>)option.clone();  [CE]  illegal  start  of  expression  [FE]                  OptionException      [CONTEXT]        for  (final  Iterator  iter  =  tailMap.values().iterator();  iter.hasNext();)  {  final  Option  option  =  (Option)  iter.next();  if  (option.canProcess(commandLine,  arg))  {  return  true;  }  }      [BUGGY]  List  <  Option>  newAnonymous  =(List  <  Option>)option.clone();  [BUGGY]      if  (looksLikeOption(commandLine,  arg))  {  return  false;  }  if  (anonymous.size()  >  0)  {  return  true;  }  return  false;  }  [CLASS]  GroupImpl  [METHOD]  canProcess  [RETURN_TYPE]  boolean  WriteableCommandLine  commandLine  String  arg  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  SortedMap  newOptionMap  optionMap  WriteableCommandLine  commandLine  Iterator  iter  List  anonymous  newAnonymous  options  Option  option  String  arg  description  name  Map  tailMap  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	139	139	1	replace	List  <  Option>  newAnonymous  =(List  <  Option>)option.clone();	  List    <    Option>    newAnonymous    =(List    <    Option>)option.next();    	non-compiled	[CE]  illegal  start  of  expression	68	None	replace
60	[BUG]  [BUGGY]  List  <  Option>  newAnonymous  =(List  <  Option>)option.getValue();  [CE]  illegal  start  of  expression  [FE]                    OptionException      [CONTEXT]        for  (final  Iterator  iter  =  tailMap.values().iterator();  iter.hasNext();)  {  final  Option  option  =  (Option)  iter.next();  if  (option.canProcess(commandLine,  arg))  {  return  true;  }  }      [BUGGY]  List  <  Option>  newAnonymous  =(List  <  Option>)option.getValue();  [BUGGY]      if  (looksLikeOption(commandLine,  arg))  {  return  false;  }  if  (anonymous.size()  >  0)  {  return  true;  }  return  false;  }  [CLASS]  GroupImpl  [METHOD]  canProcess  [RETURN_TYPE]  boolean  WriteableCommandLine  commandLine  String  arg  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  SortedMap  newOptionMap  optionMap  WriteableCommandLine  commandLine  Iterator  iter  List  anonymous  newAnonymous  options  Option  option  String  arg  description  name  Map  tailMap  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	139	139	1	replace	List  <  Option>  newAnonymous  =(List  <  Option>)option.getValue();	  List    <    Option>    newAnonymous    =(List    <    Option>)option.next();    	non-compiled	[CE]  illegal  start  of  expression	68	None	replace
61	[BUG]  [BUGGY]  Set  <  Option>  newAnonymous  =(Set  <  Option>)option.next();  [CE]  illegal  start  of  expression  [FE]                      OptionException      [CONTEXT]        for  (final  Iterator  iter  =  tailMap.values().iterator();  iter.hasNext();)  {  final  Option  option  =  (Option)  iter.next();  if  (option.canProcess(commandLine,  arg))  {  return  true;  }  }      [BUGGY]  Set  <  Option>  newAnonymous  =(Set  <  Option>)option.next();  [BUGGY]      if  (looksLikeOption(commandLine,  arg))  {  return  false;  }  if  (anonymous.size()  >  0)  {  return  true;  }  return  false;  }  [CLASS]  GroupImpl  [METHOD]  canProcess  [RETURN_TYPE]  boolean  WriteableCommandLine  commandLine  String  arg  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  SortedMap  newOptionMap  optionMap  WriteableCommandLine  commandLine  Iterator  iter  List  anonymous  newAnonymous  options  Option  option  String  arg  description  name  Map  tailMap  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	139	139	1	replace	Set  <  Option>  newAnonymous  =(Set  <  Option>)option.next();	  List    <    Option>    newAnonymous    =(List    <    Option>)option.next();    	non-compiled	[CE]  illegal  start  of  expression	68	None	replace
62	[BUG]  [BUGGY]  if(option.canProcess(commandLine,  arg)&&  options.canProcess(commandLine,  arg))  {  [CE]  illegal  start  of  expression  [FE]                OptionException      [CONTEXT]        for  (final  Iterator  iter  =  tailMap.values().iterator();  iter.hasNext();)  {  final  Option  option  =  (Option)  iter.next();  if  (option.canProcess(commandLine,  arg))  {  return  true;  }  }      [BUGGY]  if(option.canProcess(commandLine,  arg)&&  options.canProcess(commandLine,  arg))  {  [BUGGY]      return  false;  }  if  (anonymous.size()  >  0)  {  return  true;  }  return  false;  }  [CLASS]  GroupImpl  [METHOD]  canProcess  [RETURN_TYPE]  boolean  WriteableCommandLine  commandLine  String  arg  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  SortedMap  newOptionMap  optionMap  WriteableCommandLine  commandLine  Iterator  iter  List  anonymous  newAnonymous  options  Option  option  String  arg  description  name  Map  tailMap  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	139	139	1	replace	if(option.canProcess(commandLine,  arg)&&  options.canProcess(commandLine,  arg))  {	  if(option.canProcess(commandLine,    arg)||    options.canProcess(commandLine,    arg))    {    	non-compiled	[CE]  illegal  start  of  expression	7	None	replace
63	[BUG]  [BUGGY]  if(option.canProcess(commandLine,  arg)||  options.canProcess(commandLine,  description))  {  [CE]  illegal  start  of  expression  [FE]                  OptionException      [CONTEXT]        for  (final  Iterator  iter  =  tailMap.values().iterator();  iter.hasNext();)  {  final  Option  option  =  (Option)  iter.next();  if  (option.canProcess(commandLine,  arg))  {  return  true;  }  }      [BUGGY]  if(option.canProcess(commandLine,  arg)||  options.canProcess(commandLine,  description))  {  [BUGGY]      return  false;  }  if  (anonymous.size()  >  0)  {  return  true;  }  return  false;  }  [CLASS]  GroupImpl  [METHOD]  canProcess  [RETURN_TYPE]  boolean  WriteableCommandLine  commandLine  String  arg  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  SortedMap  newOptionMap  optionMap  WriteableCommandLine  commandLine  Iterator  iter  List  anonymous  newAnonymous  options  Option  option  String  arg  description  name  Map  tailMap  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	139	139	1	replace	if(option.canProcess(commandLine,  arg)||  options.canProcess(commandLine,  description))  {	  if(option.canProcess(commandLine,    arg)||    options.canProcess(commandLine,    arg))    {    	non-compiled	[CE]  illegal  start  of  expression	7	None	replace
64	[BUG]  [BUGGY]  if(option.canProcess(commandLine,  arg)||  option.canProcess(commandLine,  arg))  {  [CE]  illegal  start  of  expression  [FE]                    OptionException      [CONTEXT]        for  (final  Iterator  iter  =  tailMap.values().iterator();  iter.hasNext();)  {  final  Option  option  =  (Option)  iter.next();  if  (option.canProcess(commandLine,  arg))  {  return  true;  }  }      [BUGGY]  if(option.canProcess(commandLine,  arg)||  option.canProcess(commandLine,  arg))  {  [BUGGY]      return  false;  }  if  (anonymous.size()  >  0)  {  return  true;  }  return  false;  }  [CLASS]  GroupImpl  [METHOD]  canProcess  [RETURN_TYPE]  boolean  WriteableCommandLine  commandLine  String  arg  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  SortedMap  newOptionMap  optionMap  WriteableCommandLine  commandLine  Iterator  iter  List  anonymous  newAnonymous  options  Option  option  String  arg  description  name  Map  tailMap  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	139	139	1	replace	if(option.canProcess(commandLine,  arg)||  option.canProcess(commandLine,  arg))  {	  if(option.canProcess(commandLine,    arg)||    options.canProcess(commandLine,    arg))    {    	non-compiled	[CE]  illegal  start  of  expression	7	None	replace
65	[BUG]  [BUGGY]  Option  option  =  optionsMap.getOption(arg);  [CE]  illegal  start  of  expression  [FE]                OptionException      [CONTEXT]        for  (final  Iterator  iter  =  tailMap.values().iterator();  iter.hasNext();)  {  final  Option  option  =  (Option)  iter.next();  if  (option.canProcess(commandLine,  arg))  {  return  true;  }  }      [BUGGY]  Option  option  =  optionsMap.getOption(arg);  [BUGGY]      if  (looksLikeOption(commandLine,  arg))  {  return  false;  }  if  (anonymous.size()  >  0)  {  return  true;  }  return  false;  }  [CLASS]  GroupImpl  [METHOD]  canProcess  [RETURN_TYPE]  boolean  WriteableCommandLine  commandLine  String  arg  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  SortedMap  newOptionMap  optionMap  WriteableCommandLine  commandLine  Iterator  iter  List  anonymous  newAnonymous  options  Option  option  String  arg  description  name  Map  tailMap  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	139	139	1	replace	Option  option  =  optionsMap.getOption(arg);	  Option    option    =    optionMap.getOption(arg);    	non-compiled	[CE]  illegal  start  of  expression	38	None	replace
66	[BUG]  [BUGGY]  Option  option  =  optionMap.getOption(commandLine,  arg);  [CE]  illegal  start  of  expression  [FE]                  OptionException      [CONTEXT]        for  (final  Iterator  iter  =  tailMap.values().iterator();  iter.hasNext();)  {  final  Option  option  =  (Option)  iter.next();  if  (option.canProcess(commandLine,  arg))  {  return  true;  }  }      [BUGGY]  Option  option  =  optionMap.getOption(commandLine,  arg);  [BUGGY]      if  (looksLikeOption(commandLine,  arg))  {  return  false;  }  if  (anonymous.size()  >  0)  {  return  true;  }  return  false;  }  [CLASS]  GroupImpl  [METHOD]  canProcess  [RETURN_TYPE]  boolean  WriteableCommandLine  commandLine  String  arg  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  SortedMap  newOptionMap  optionMap  WriteableCommandLine  commandLine  Iterator  iter  List  anonymous  newAnonymous  options  Option  option  String  arg  description  name  Map  tailMap  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	139	139	1	replace	Option  option  =  optionMap.getOption(commandLine,  arg);	  Option    option    =    optionMap.getOption(arg);    	non-compiled	[CE]  illegal  start  of  expression	38	None	replace
67	[BUG]  [BUGGY]  if(hasOption(option)&&  options.canProcess(commandLine,  arg))  {  [CE]  illegal  start  of  expression  [FE]                OptionException      [CONTEXT]        for  (final  Iterator  iter  =  tailMap.values().iterator();  iter.hasNext();)  {  final  Option  option  =  (Option)  iter.next();  if  (option.canProcess(commandLine,  arg))  {  return  true;  }  }      [BUGGY]  if(hasOption(option)&&  options.canProcess(commandLine,  arg))  {  [BUGGY]      return  false;  }  if  (anonymous.size()  >  0)  {  return  true;  }  return  false;  }  [CLASS]  GroupImpl  [METHOD]  canProcess  [RETURN_TYPE]  boolean  WriteableCommandLine  commandLine  String  arg  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  SortedMap  newOptionMap  optionMap  WriteableCommandLine  commandLine  Iterator  iter  List  anonymous  newAnonymous  options  Option  option  String  arg  description  name  Map  tailMap  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	139	139	1	replace	if(hasOption(option)&&  options.canProcess(commandLine,  arg))  {	  if(hasOption(option)||    options.canProcess(commandLine,    arg))    {    	non-compiled	[CE]  illegal  start  of  expression	67	None	replace
68	[BUG]  [BUGGY]  if(!hasOption(option)&&  options.canProcess(commandLine,  arg))  {  [CE]  illegal  start  of  expression  [FE]                  OptionException      [CONTEXT]        for  (final  Iterator  iter  =  tailMap.values().iterator();  iter.hasNext();)  {  final  Option  option  =  (Option)  iter.next();  if  (option.canProcess(commandLine,  arg))  {  return  true;  }  }      [BUGGY]  if(!hasOption(option)&&  options.canProcess(commandLine,  arg))  {  [BUGGY]      return  false;  }  if  (anonymous.size()  >  0)  {  return  true;  }  return  false;  }  [CLASS]  GroupImpl  [METHOD]  canProcess  [RETURN_TYPE]  boolean  WriteableCommandLine  commandLine  String  arg  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  SortedMap  newOptionMap  optionMap  WriteableCommandLine  commandLine  Iterator  iter  List  anonymous  newAnonymous  options  Option  option  String  arg  description  name  Map  tailMap  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	139	139	1	replace	if(!hasOption(option)&&  options.canProcess(commandLine,  arg))  {	  if(hasOption(option)||    options.canProcess(commandLine,    arg))    {    	non-compiled	[CE]  illegal  start  of  expression	67	None	replace
69	[BUG]  [BUGGY]  if(hasOption(commandLine)||  options.canProcess(commandLine,  arg))  {  [CE]  illegal  start  of  expression  [FE]                    OptionException      [CONTEXT]        for  (final  Iterator  iter  =  tailMap.values().iterator();  iter.hasNext();)  {  final  Option  option  =  (Option)  iter.next();  if  (option.canProcess(commandLine,  arg))  {  return  true;  }  }      [BUGGY]  if(hasOption(commandLine)||  options.canProcess(commandLine,  arg))  {  [BUGGY]      return  false;  }  if  (anonymous.size()  >  0)  {  return  true;  }  return  false;  }  [CLASS]  GroupImpl  [METHOD]  canProcess  [RETURN_TYPE]  boolean  WriteableCommandLine  commandLine  String  arg  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  SortedMap  newOptionMap  optionMap  WriteableCommandLine  commandLine  Iterator  iter  List  anonymous  newAnonymous  options  Option  option  String  arg  description  name  Map  tailMap  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	139	139	1	replace	if(hasOption(commandLine)||  options.canProcess(commandLine,  arg))  {	  if(hasOption(option)||    options.canProcess(commandLine,    arg))    {    	non-compiled	[CE]  illegal  start  of  expression	67	None	replace
70	[BUG]  [BUGGY]  List  <  Option>  newAnonymous  =  options.newAnonymous();  [CE]  illegal  start  of  expression  [FE]                      OptionException      [CONTEXT]        for  (final  Iterator  iter  =  tailMap.values().iterator();  iter.hasNext();)  {  final  Option  option  =  (Option)  iter.next();  if  (option.canProcess(commandLine,  arg))  {  return  true;  }  }      [BUGGY]  List  <  Option>  newAnonymous  =  options.newAnonymous();  [BUGGY]      if  (looksLikeOption(commandLine,  arg))  {  return  false;  }  if  (anonymous.size()  >  0)  {  return  true;  }  return  false;  }  [CLASS]  GroupImpl  [METHOD]  canProcess  [RETURN_TYPE]  boolean  WriteableCommandLine  commandLine  String  arg  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  SortedMap  newOptionMap  optionMap  WriteableCommandLine  commandLine  Iterator  iter  List  anonymous  newAnonymous  options  Option  option  String  arg  description  name  Map  tailMap  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	139	139	1	replace	List  <  Option>  newAnonymous  =  options.newAnonymous();	  List    <    Option>    newAnonymous    =    optionMap.newAnonymous();    	non-compiled	[CE]  illegal  start  of  expression	26	None	replace
71	[BUG]  [BUGGY]  List  <  Option>  newAnonymous  =  optionMap.newAnonymous(commandLine);  [CE]  illegal  start  of  expression  [FE]                        OptionException      [CONTEXT]        for  (final  Iterator  iter  =  tailMap.values().iterator();  iter.hasNext();)  {  final  Option  option  =  (Option)  iter.next();  if  (option.canProcess(commandLine,  arg))  {  return  true;  }  }      [BUGGY]  List  <  Option>  newAnonymous  =  optionMap.newAnonymous(commandLine);  [BUGGY]      if  (looksLikeOption(commandLine,  arg))  {  return  false;  }  if  (anonymous.size()  >  0)  {  return  true;  }  return  false;  }  [CLASS]  GroupImpl  [METHOD]  canProcess  [RETURN_TYPE]  boolean  WriteableCommandLine  commandLine  String  arg  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  SortedMap  newOptionMap  optionMap  WriteableCommandLine  commandLine  Iterator  iter  List  anonymous  newAnonymous  options  Option  option  String  arg  description  name  Map  tailMap  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	139	139	1	replace	List  <  Option>  newAnonymous  =  optionMap.newAnonymous(commandLine);	  List    <    Option>    newAnonymous    =    optionMap.newAnonymous();    	non-compiled	[CE]  illegal  start  of  expression	26	None	replace
72	[BUG]  [BUGGY]  List  <  Option>  newAnonymous  =  optionMap.newArray();  [CE]  illegal  start  of  expression  [FE]                          OptionException      [CONTEXT]        for  (final  Iterator  iter  =  tailMap.values().iterator();  iter.hasNext();)  {  final  Option  option  =  (Option)  iter.next();  if  (option.canProcess(commandLine,  arg))  {  return  true;  }  }      [BUGGY]  List  <  Option>  newAnonymous  =  optionMap.newArray();  [BUGGY]      if  (looksLikeOption(commandLine,  arg))  {  return  false;  }  if  (anonymous.size()  >  0)  {  return  true;  }  return  false;  }  [CLASS]  GroupImpl  [METHOD]  canProcess  [RETURN_TYPE]  boolean  WriteableCommandLine  commandLine  String  arg  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  SortedMap  newOptionMap  optionMap  WriteableCommandLine  commandLine  Iterator  iter  List  anonymous  newAnonymous  options  Option  option  String  arg  description  name  Map  tailMap  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	139	139	1	replace	List  <  Option>  newAnonymous  =  optionMap.newArray();	  List    <    Option>    newAnonymous    =    optionMap.newAnonymous();    	non-compiled	[CE]  illegal  start  of  expression	26	None	replace
73	[BUG]  [BUGGY]  Option  option  =  option.getOption(arg);  if(option!=  null)  {  return  false;  }  [CE]  illegal  start  of  expression  [FE]                    OptionException      [CONTEXT]        for  (final  Iterator  iter  =  tailMap.values().iterator();  iter.hasNext();)  {  final  Option  option  =  (Option)  iter.next();  if  (option.canProcess(commandLine,  arg))  {  return  true;  }  }      [BUGGY]  Option  option  =  option.getOption(arg);  if(option!=  null)  {  return  false;  }  [BUGGY]      return  false;  }  if  (anonymous.size()  >  0)  {  return  true;  }  return  false;  }  [CLASS]  GroupImpl  [METHOD]  canProcess  [RETURN_TYPE]  boolean  WriteableCommandLine  commandLine  String  arg  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  SortedMap  newOptionMap  optionMap  WriteableCommandLine  commandLine  Iterator  iter  List  anonymous  newAnonymous  options  Option  option  String  arg  description  name  Map  tailMap  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	139	139	1	replace	Option  option  =  option.getOption(arg);  if(option!=  null)  {  return  false;  }	  Option    option    =    option.getOption(commandLine);    if(option!=    null)    {    return    false;    }    	non-compiled	[CE]  illegal  start  of  expression	73	None	replace
74	[BUG]  [BUGGY]  Option  option  =  optionMap.getOption(commandLine);  if(option!=  null)  {  return  false;  }  [CE]  illegal  start  of  expression  [FE]                      OptionException      [CONTEXT]        for  (final  Iterator  iter  =  tailMap.values().iterator();  iter.hasNext();)  {  final  Option  option  =  (Option)  iter.next();  if  (option.canProcess(commandLine,  arg))  {  return  true;  }  }      [BUGGY]  Option  option  =  optionMap.getOption(commandLine);  if(option!=  null)  {  return  false;  }  [BUGGY]      return  false;  }  if  (anonymous.size()  >  0)  {  return  true;  }  return  false;  }  [CLASS]  GroupImpl  [METHOD]  canProcess  [RETURN_TYPE]  boolean  WriteableCommandLine  commandLine  String  arg  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  SortedMap  newOptionMap  optionMap  WriteableCommandLine  commandLine  Iterator  iter  List  anonymous  newAnonymous  options  Option  option  String  arg  description  name  Map  tailMap  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	139	139	1	replace	Option  option  =  optionMap.getOption(commandLine);  if(option!=  null)  {  return  false;  }	  Option    option    =    option.getOption(commandLine);    if(option!=    null)    {    return    false;    }    	non-compiled	[CE]  illegal  start  of  expression	73	None	replace
75	[BUG]  [BUGGY]  if(!canProcessOption(commandLine,  options))  {  [CE]  illegal  start  of  expression  [FE]              OptionException      [CONTEXT]        for  (final  Iterator  iter  =  tailMap.values().iterator();  iter.hasNext();)  {  final  Option  option  =  (Option)  iter.next();  if  (option.canProcess(commandLine,  arg))  {  return  true;  }  }      [BUGGY]  if(!canProcessOption(commandLine,  options))  {  [BUGGY]      return  false;  }  if  (anonymous.size()  >  0)  {  return  true;  }  return  false;  }  [CLASS]  GroupImpl  [METHOD]  canProcess  [RETURN_TYPE]  boolean  WriteableCommandLine  commandLine  String  arg  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  SortedMap  newOptionMap  optionMap  WriteableCommandLine  commandLine  Iterator  iter  List  anonymous  newAnonymous  options  Option  option  String  arg  description  name  Map  tailMap  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	139	139	1	replace	if(!canProcessOption(commandLine,  options))  {	  if(!looksLikeOption(commandLine,    options))    {    	non-compiled	[CE]  illegal  start  of  expression	61	None	replace
76	[BUG]  [BUGGY]  if(!hasProcessOption(commandLine,  options))  {  [CE]  illegal  start  of  expression  [FE]                OptionException      [CONTEXT]        for  (final  Iterator  iter  =  tailMap.values().iterator();  iter.hasNext();)  {  final  Option  option  =  (Option)  iter.next();  if  (option.canProcess(commandLine,  arg))  {  return  true;  }  }      [BUGGY]  if(!hasProcessOption(commandLine,  options))  {  [BUGGY]      return  false;  }  if  (anonymous.size()  >  0)  {  return  true;  }  return  false;  }  [CLASS]  GroupImpl  [METHOD]  canProcess  [RETURN_TYPE]  boolean  WriteableCommandLine  commandLine  String  arg  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  SortedMap  newOptionMap  optionMap  WriteableCommandLine  commandLine  Iterator  iter  List  anonymous  newAnonymous  options  Option  option  String  arg  description  name  Map  tailMap  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	139	139	1	replace	if(!hasProcessOption(commandLine,  options))  {	  if(!looksLikeOption(commandLine,    options))    {    	non-compiled	[CE]  illegal  start  of  expression	61	None	replace
77	[BUG]  [BUGGY]  if(!looksLikeOption(commandLine,  options)||!option.canProcess(commandLine,  arg))  {  [CE]  illegal  start  of  expression  [FE]                  OptionException      [CONTEXT]        for  (final  Iterator  iter  =  tailMap.values().iterator();  iter.hasNext();)  {  final  Option  option  =  (Option)  iter.next();  if  (option.canProcess(commandLine,  arg))  {  return  true;  }  }      [BUGGY]  if(!looksLikeOption(commandLine,  options)||!option.canProcess(commandLine,  arg))  {  [BUGGY]      return  false;  }  if  (anonymous.size()  >  0)  {  return  true;  }  return  false;  }  [CLASS]  GroupImpl  [METHOD]  canProcess  [RETURN_TYPE]  boolean  WriteableCommandLine  commandLine  String  arg  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  SortedMap  newOptionMap  optionMap  WriteableCommandLine  commandLine  Iterator  iter  List  anonymous  newAnonymous  options  Option  option  String  arg  description  name  Map  tailMap  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	139	139	1	replace	if(!looksLikeOption(commandLine,  options)||!option.canProcess(commandLine,  arg))  {	  if(!looksLikeOption(commandLine,    options))    {    	non-compiled	[CE]  illegal  start  of  expression	61	None	replace
78	[BUG]  [BUGGY]  if(hasOption(option,  commandLine)&&  options.canProcess(commandLine,  arg))  {  [CE]  illegal  start  of  expression  [FE]                    OptionException      [CONTEXT]        for  (final  Iterator  iter  =  tailMap.values().iterator();  iter.hasNext();)  {  final  Option  option  =  (Option)  iter.next();  if  (option.canProcess(commandLine,  arg))  {  return  true;  }  }      [BUGGY]  if(hasOption(option,  commandLine)&&  options.canProcess(commandLine,  arg))  {  [BUGGY]      return  false;  }  if  (anonymous.size()  >  0)  {  return  true;  }  return  false;  }  [CLASS]  GroupImpl  [METHOD]  canProcess  [RETURN_TYPE]  boolean  WriteableCommandLine  commandLine  String  arg  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  SortedMap  newOptionMap  optionMap  WriteableCommandLine  commandLine  Iterator  iter  List  anonymous  newAnonymous  options  Option  option  String  arg  description  name  Map  tailMap  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	139	139	1	replace	if(hasOption(option,  commandLine)&&  options.canProcess(commandLine,  arg))  {	  if(hasOption(option,    commandLine)||    options.canProcess(commandLine,    arg))    {    	non-compiled	[CE]  illegal  start  of  expression	9	None	replace
79	[BUG]  [BUGGY]  if(hasOption(option,  description)||  options.canProcess(commandLine,  arg))  {  [CE]  illegal  start  of  expression  [FE]                      OptionException      [CONTEXT]        for  (final  Iterator  iter  =  tailMap.values().iterator();  iter.hasNext();)  {  final  Option  option  =  (Option)  iter.next();  if  (option.canProcess(commandLine,  arg))  {  return  true;  }  }      [BUGGY]  if(hasOption(option,  description)||  options.canProcess(commandLine,  arg))  {  [BUGGY]      return  false;  }  if  (anonymous.size()  >  0)  {  return  true;  }  return  false;  }  [CLASS]  GroupImpl  [METHOD]  canProcess  [RETURN_TYPE]  boolean  WriteableCommandLine  commandLine  String  arg  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  SortedMap  newOptionMap  optionMap  WriteableCommandLine  commandLine  Iterator  iter  List  anonymous  newAnonymous  options  Option  option  String  arg  description  name  Map  tailMap  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	139	139	1	replace	if(hasOption(option,  description)||  options.canProcess(commandLine,  arg))  {	  if(hasOption(option,    commandLine)||    options.canProcess(commandLine,    arg))    {    	non-compiled	[CE]  illegal  start  of  expression	9	None	replace
80	[BUG]  [BUGGY]  if(!hasOption(option,  commandLine)&&  options.canProcess(commandLine,  arg))  {  [CE]  illegal  start  of  expression  [FE]                        OptionException      [CONTEXT]        for  (final  Iterator  iter  =  tailMap.values().iterator();  iter.hasNext();)  {  final  Option  option  =  (Option)  iter.next();  if  (option.canProcess(commandLine,  arg))  {  return  true;  }  }      [BUGGY]  if(!hasOption(option,  commandLine)&&  options.canProcess(commandLine,  arg))  {  [BUGGY]      return  false;  }  if  (anonymous.size()  >  0)  {  return  true;  }  return  false;  }  [CLASS]  GroupImpl  [METHOD]  canProcess  [RETURN_TYPE]  boolean  WriteableCommandLine  commandLine  String  arg  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  SortedMap  newOptionMap  optionMap  WriteableCommandLine  commandLine  Iterator  iter  List  anonymous  newAnonymous  options  Option  option  String  arg  description  name  Map  tailMap  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	139	139	1	replace	if(!hasOption(option,  commandLine)&&  options.canProcess(commandLine,  arg))  {	  if(hasOption(option,    commandLine)||    options.canProcess(commandLine,    arg))    {    	non-compiled	[CE]  illegal  start  of  expression	9	None	replace
81	[BUG]  [BUGGY]  if(!canProcessOption(commandLine,  option))  {  [CE]  illegal  start  of  expression  [FE]                OptionException      [CONTEXT]        for  (final  Iterator  iter  =  tailMap.values().iterator();  iter.hasNext();)  {  final  Option  option  =  (Option)  iter.next();  if  (option.canProcess(commandLine,  arg))  {  return  true;  }  }      [BUGGY]  if(!canProcessOption(commandLine,  option))  {  [BUGGY]      return  false;  }  if  (anonymous.size()  >  0)  {  return  true;  }  return  false;  }  [CLASS]  GroupImpl  [METHOD]  canProcess  [RETURN_TYPE]  boolean  WriteableCommandLine  commandLine  String  arg  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  SortedMap  newOptionMap  optionMap  WriteableCommandLine  commandLine  Iterator  iter  List  anonymous  newAnonymous  options  Option  option  String  arg  description  name  Map  tailMap  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	139	139	1	replace	if(!canProcessOption(commandLine,  option))  {	  if(!looksLikeOption(commandLine,    option))    {    	non-compiled	[CE]  illegal  start  of  expression	62	None	replace
82	[BUG]  [BUGGY]  if(!hasProcessOption(commandLine,  option))  {  [CE]  illegal  start  of  expression  [FE]                  OptionException      [CONTEXT]        for  (final  Iterator  iter  =  tailMap.values().iterator();  iter.hasNext();)  {  final  Option  option  =  (Option)  iter.next();  if  (option.canProcess(commandLine,  arg))  {  return  true;  }  }      [BUGGY]  if(!hasProcessOption(commandLine,  option))  {  [BUGGY]      return  false;  }  if  (anonymous.size()  >  0)  {  return  true;  }  return  false;  }  [CLASS]  GroupImpl  [METHOD]  canProcess  [RETURN_TYPE]  boolean  WriteableCommandLine  commandLine  String  arg  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  SortedMap  newOptionMap  optionMap  WriteableCommandLine  commandLine  Iterator  iter  List  anonymous  newAnonymous  options  Option  option  String  arg  description  name  Map  tailMap  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	139	139	1	replace	if(!hasProcessOption(commandLine,  option))  {	  if(!looksLikeOption(commandLine,    option))    {    	non-compiled	[CE]  illegal  start  of  expression	62	None	replace
83	[BUG]  [BUGGY]  if(!looksLikeOption(commandLine,  option)&&!option.canProcess(commandLine,  arg))  {  [CE]  illegal  start  of  expression  [FE]                    OptionException      [CONTEXT]        for  (final  Iterator  iter  =  tailMap.values().iterator();  iter.hasNext();)  {  final  Option  option  =  (Option)  iter.next();  if  (option.canProcess(commandLine,  arg))  {  return  true;  }  }      [BUGGY]  if(!looksLikeOption(commandLine,  option)&&!option.canProcess(commandLine,  arg))  {  [BUGGY]      return  false;  }  if  (anonymous.size()  >  0)  {  return  true;  }  return  false;  }  [CLASS]  GroupImpl  [METHOD]  canProcess  [RETURN_TYPE]  boolean  WriteableCommandLine  commandLine  String  arg  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  SortedMap  newOptionMap  optionMap  WriteableCommandLine  commandLine  Iterator  iter  List  anonymous  newAnonymous  options  Option  option  String  arg  description  name  Map  tailMap  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	139	139	1	replace	if(!looksLikeOption(commandLine,  option)&&!option.canProcess(commandLine,  arg))  {	  if(!looksLikeOption(commandLine,    option))    {    	non-compiled	[CE]  illegal  start  of  expression	62	None	replace
84	[BUG]  [BUGGY]  Option  option  =  option.createOption(commandLine,  description);  [CE]  illegal  start  of  expression  [FE]                OptionException      [CONTEXT]        for  (final  Iterator  iter  =  tailMap.values().iterator();  iter.hasNext();)  {  final  Option  option  =  (Option)  iter.next();  if  (option.canProcess(commandLine,  arg))  {  return  true;  }  }      [BUGGY]  Option  option  =  option.createOption(commandLine,  description);  [BUGGY]      if  (looksLikeOption(commandLine,  arg))  {  return  false;  }  if  (anonymous.size()  >  0)  {  return  true;  }  return  false;  }  [CLASS]  GroupImpl  [METHOD]  canProcess  [RETURN_TYPE]  boolean  WriteableCommandLine  commandLine  String  arg  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  SortedMap  newOptionMap  optionMap  WriteableCommandLine  commandLine  Iterator  iter  List  anonymous  newAnonymous  options  Option  option  String  arg  description  name  Map  tailMap  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	139	139	1	replace	Option  option  =  option.createOption(commandLine,  description);	  Option    option    =    option.createOption(commandLine,    arg);    	non-compiled	[CE]  illegal  start  of  expression	13	None	replace
85	[BUG]  [BUGGY]  Option  option  =  option.createOption(commandLine,  arg,  description);  [CE]  illegal  start  of  expression  [FE]                  OptionException      [CONTEXT]        for  (final  Iterator  iter  =  tailMap.values().iterator();  iter.hasNext();)  {  final  Option  option  =  (Option)  iter.next();  if  (option.canProcess(commandLine,  arg))  {  return  true;  }  }      [BUGGY]  Option  option  =  option.createOption(commandLine,  arg,  description);  [BUGGY]      if  (looksLikeOption(commandLine,  arg))  {  return  false;  }  if  (anonymous.size()  >  0)  {  return  true;  }  return  false;  }  [CLASS]  GroupImpl  [METHOD]  canProcess  [RETURN_TYPE]  boolean  WriteableCommandLine  commandLine  String  arg  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  SortedMap  newOptionMap  optionMap  WriteableCommandLine  commandLine  Iterator  iter  List  anonymous  newAnonymous  options  Option  option  String  arg  description  name  Map  tailMap  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	139	139	1	replace	Option  option  =  option.createOption(commandLine,  arg,  description);	  Option    option    =    option.createOption(commandLine,    arg);    	non-compiled	[CE]  illegal  start  of  expression	13	None	replace
86	[BUG]  [BUGGY]  Option  option  =  option.createOption(description,  arg);  [CE]  illegal  start  of  expression  [FE]                    OptionException      [CONTEXT]        for  (final  Iterator  iter  =  tailMap.values().iterator();  iter.hasNext();)  {  final  Option  option  =  (Option)  iter.next();  if  (option.canProcess(commandLine,  arg))  {  return  true;  }  }      [BUGGY]  Option  option  =  option.createOption(description,  arg);  [BUGGY]      if  (looksLikeOption(commandLine,  arg))  {  return  false;  }  if  (anonymous.size()  >  0)  {  return  true;  }  return  false;  }  [CLASS]  GroupImpl  [METHOD]  canProcess  [RETURN_TYPE]  boolean  WriteableCommandLine  commandLine  String  arg  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  SortedMap  newOptionMap  optionMap  WriteableCommandLine  commandLine  Iterator  iter  List  anonymous  newAnonymous  options  Option  option  String  arg  description  name  Map  tailMap  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	139	139	1	replace	Option  option  =  option.createOption(description,  arg);	  Option    option    =    option.createOption(commandLine,    arg);    	non-compiled	[CE]  illegal  start  of  expression	13	None	replace
87	[BUG]  [BUGGY]  final  List  <  Option>  options  =  tailMap.values().iterator();  [CE]  illegal  start  of  expression  [FE]                  OptionException      [CONTEXT]        for  (final  Iterator  iter  =  tailMap.values().iterator();  iter.hasNext();)  {  final  Option  option  =  (Option)  iter.next();  if  (option.canProcess(commandLine,  arg))  {  return  true;  }  }      [BUGGY]  final  List  <  Option>  options  =  tailMap.values().iterator();  [BUGGY]      if  (looksLikeOption(commandLine,  arg))  {  return  false;  }  if  (anonymous.size()  >  0)  {  return  true;  }  return  false;  }  [CLASS]  GroupImpl  [METHOD]  canProcess  [RETURN_TYPE]  boolean  WriteableCommandLine  commandLine  String  arg  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  SortedMap  newOptionMap  optionMap  WriteableCommandLine  commandLine  Iterator  iter  List  anonymous  newAnonymous  options  Option  option  String  arg  description  name  Map  tailMap  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	139	139	1	replace	final  List  <  Option>  options  =  tailMap.values().iterator();	  final    List    <    Option>    options    =    optionMap.values().iterator();    	non-compiled	[CE]  illegal  start  of  expression	37	None	replace
88	[BUG]  [BUGGY]  final  Set  <  Option>  options  =  optionMap.values().iterator();  [CE]  illegal  start  of  expression  [FE]                    OptionException      [CONTEXT]        for  (final  Iterator  iter  =  tailMap.values().iterator();  iter.hasNext();)  {  final  Option  option  =  (Option)  iter.next();  if  (option.canProcess(commandLine,  arg))  {  return  true;  }  }      [BUGGY]  final  Set  <  Option>  options  =  optionMap.values().iterator();  [BUGGY]      if  (looksLikeOption(commandLine,  arg))  {  return  false;  }  if  (anonymous.size()  >  0)  {  return  true;  }  return  false;  }  [CLASS]  GroupImpl  [METHOD]  canProcess  [RETURN_TYPE]  boolean  WriteableCommandLine  commandLine  String  arg  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  SortedMap  newOptionMap  optionMap  WriteableCommandLine  commandLine  Iterator  iter  List  anonymous  newAnonymous  options  Option  option  String  arg  description  name  Map  tailMap  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	139	139	1	replace	final  Set  <  Option>  options  =  optionMap.values().iterator();	  final    List    <    Option>    options    =    optionMap.values().iterator();    	non-compiled	[CE]  illegal  start  of  expression	37	None	replace
89	[BUG]  [BUGGY]  if(hasProcessOption(commandLine,  false))  {  [CE]  illegal  start  of  expression  [FE]              OptionException      [CONTEXT]        for  (final  Iterator  iter  =  tailMap.values().iterator();  iter.hasNext();)  {  final  Option  option  =  (Option)  iter.next();  if  (option.canProcess(commandLine,  arg))  {  return  true;  }  }      [BUGGY]  if(hasProcessOption(commandLine,  false))  {  [BUGGY]      return  false;  }  if  (anonymous.size()  >  0)  {  return  true;  }  return  false;  }  [CLASS]  GroupImpl  [METHOD]  canProcess  [RETURN_TYPE]  boolean  WriteableCommandLine  commandLine  String  arg  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  SortedMap  newOptionMap  optionMap  WriteableCommandLine  commandLine  Iterator  iter  List  anonymous  newAnonymous  options  Option  option  String  arg  description  name  Map  tailMap  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	139	139	1	replace	if(hasProcessOption(commandLine,  false))  {	  if(looksLikeOption(arg,    false))    {    	non-compiled	[CE]  illegal  start  of  expression	57	None	replace
90	[BUG]  [BUGGY]  if(canProcessOption(commandLine,  false))  {  [CE]  illegal  start  of  expression  [FE]                OptionException      [CONTEXT]        for  (final  Iterator  iter  =  tailMap.values().iterator();  iter.hasNext();)  {  final  Option  option  =  (Option)  iter.next();  if  (option.canProcess(commandLine,  arg))  {  return  true;  }  }      [BUGGY]  if(canProcessOption(commandLine,  false))  {  [BUGGY]      return  false;  }  if  (anonymous.size()  >  0)  {  return  true;  }  return  false;  }  [CLASS]  GroupImpl  [METHOD]  canProcess  [RETURN_TYPE]  boolean  WriteableCommandLine  commandLine  String  arg  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  SortedMap  newOptionMap  optionMap  WriteableCommandLine  commandLine  Iterator  iter  List  anonymous  newAnonymous  options  Option  option  String  arg  description  name  Map  tailMap  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	139	139	1	replace	if(canProcessOption(commandLine,  false))  {	  if(looksLikeOption(arg,    false))    {    	non-compiled	[CE]  illegal  start  of  expression	57	None	replace
91	[BUG]  [BUGGY]  if(isEnabled(iter.next())||  looksLikeOption(commandLine,  true)||  isEnabled(iter.next()))  {  [CE]  illegal  start  of  expression  [FE]                  OptionException      [CONTEXT]        for  (final  Iterator  iter  =  tailMap.values().iterator();  iter.hasNext();)  {  final  Option  option  =  (Option)  iter.next();  if  (option.canProcess(commandLine,  arg))  {  return  true;  }  }      [BUGGY]  if(isEnabled(iter.next())||  looksLikeOption(commandLine,  true)||  isEnabled(iter.next()))  {  [BUGGY]      return  false;  }  if  (anonymous.size()  >  0)  {  return  true;  }  return  false;  }  [CLASS]  GroupImpl  [METHOD]  canProcess  [RETURN_TYPE]  boolean  WriteableCommandLine  commandLine  String  arg  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  SortedMap  newOptionMap  optionMap  WriteableCommandLine  commandLine  Iterator  iter  List  anonymous  newAnonymous  options  Option  option  String  arg  description  name  Map  tailMap  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	139	139	1	replace	if(isEnabled(iter.next())||  looksLikeOption(commandLine,  true)||  isEnabled(iter.next()))  {	  if(looksLikeOption(commandLine,    true)||    isEnabled(iter.next()))    {    	non-compiled	[CE]  illegal  start  of  expression	33	None	replace
92	[BUG]  [BUGGY]  if(isEnabled(iter.next())||  isLikeOption(commandLine,  true))  {  [CE]  illegal  start  of  expression  [FE]                    OptionException      [CONTEXT]        for  (final  Iterator  iter  =  tailMap.values().iterator();  iter.hasNext();)  {  final  Option  option  =  (Option)  iter.next();  if  (option.canProcess(commandLine,  arg))  {  return  true;  }  }      [BUGGY]  if(isEnabled(iter.next())||  isLikeOption(commandLine,  true))  {  [BUGGY]      return  false;  }  if  (anonymous.size()  >  0)  {  return  true;  }  return  false;  }  [CLASS]  GroupImpl  [METHOD]  canProcess  [RETURN_TYPE]  boolean  WriteableCommandLine  commandLine  String  arg  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  SortedMap  newOptionMap  optionMap  WriteableCommandLine  commandLine  Iterator  iter  List  anonymous  newAnonymous  options  Option  option  String  arg  description  name  Map  tailMap  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	139	139	1	replace	if(isEnabled(iter.next())||  isLikeOption(commandLine,  true))  {	  if(looksLikeOption(commandLine,    true)||    isEnabled(iter.next()))    {    	non-compiled	[CE]  illegal  start  of  expression	33	None	replace
93	[BUG]  [BUGGY]  if(!option.canProcess(commandLine,  arg)||!option.canProcess(commandLine,  arg))  {  [CE]  illegal  start  of  expression  [FE]              OptionException      [CONTEXT]        for  (final  Iterator  iter  =  tailMap.values().iterator();  iter.hasNext();)  {  final  Option  option  =  (Option)  iter.next();  if  (option.canProcess(commandLine,  arg))  {  return  true;  }  }      [BUGGY]  if(!option.canProcess(commandLine,  arg)||!option.canProcess(commandLine,  arg))  {  [BUGGY]      return  false;  }  if  (anonymous.size()  >  0)  {  return  true;  }  return  false;  }  [CLASS]  GroupImpl  [METHOD]  canProcess  [RETURN_TYPE]  boolean  WriteableCommandLine  commandLine  String  arg  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  SortedMap  newOptionMap  optionMap  WriteableCommandLine  commandLine  Iterator  iter  List  anonymous  newAnonymous  options  Option  option  String  arg  description  name  Map  tailMap  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	139	139	1	replace	if(!option.canProcess(commandLine,  arg)||!option.canProcess(commandLine,  arg))  {	  if(!looksLikeOption(commandLine,    arg)||!option.canProcess(commandLine,    arg))    {    	non-compiled	[CE]  illegal  start  of  expression	28	None	replace
94	[BUG]  [BUGGY]  if(!option.canProcess(commandLine,  arg)||!looksLikeOption(commandLine,  arg))  {  [CE]  illegal  start  of  expression  [FE]                OptionException      [CONTEXT]        for  (final  Iterator  iter  =  tailMap.values().iterator();  iter.hasNext();)  {  final  Option  option  =  (Option)  iter.next();  if  (option.canProcess(commandLine,  arg))  {  return  true;  }  }      [BUGGY]  if(!option.canProcess(commandLine,  arg)||!looksLikeOption(commandLine,  arg))  {  [BUGGY]      return  false;  }  if  (anonymous.size()  >  0)  {  return  true;  }  return  false;  }  [CLASS]  GroupImpl  [METHOD]  canProcess  [RETURN_TYPE]  boolean  WriteableCommandLine  commandLine  String  arg  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  SortedMap  newOptionMap  optionMap  WriteableCommandLine  commandLine  Iterator  iter  List  anonymous  newAnonymous  options  Option  option  String  arg  description  name  Map  tailMap  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	139	139	1	replace	if(!option.canProcess(commandLine,  arg)||!looksLikeOption(commandLine,  arg))  {	  if(!looksLikeOption(commandLine,    arg)||!option.canProcess(commandLine,    arg))    {    	non-compiled	[CE]  illegal  start  of  expression	28	None	replace
95	[BUG]  [BUGGY]  List  <  Option>  options  =  tailMap.keySet().iterator();  [CE]  illegal  start  of  expression  [FE]              OptionException      [CONTEXT]        for  (final  Iterator  iter  =  tailMap.values().iterator();  iter.hasNext();)  {  final  Option  option  =  (Option)  iter.next();  if  (option.canProcess(commandLine,  arg))  {  return  true;  }  }      [BUGGY]  List  <  Option>  options  =  tailMap.keySet().iterator();  [BUGGY]      if  (looksLikeOption(commandLine,  arg))  {  return  false;  }  if  (anonymous.size()  >  0)  {  return  true;  }  return  false;  }  [CLASS]  GroupImpl  [METHOD]  canProcess  [RETURN_TYPE]  boolean  WriteableCommandLine  commandLine  String  arg  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  SortedMap  newOptionMap  optionMap  WriteableCommandLine  commandLine  Iterator  iter  List  anonymous  newAnonymous  options  Option  option  String  arg  description  name  Map  tailMap  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	139	139	1	replace	List  <  Option>  options  =  tailMap.keySet().iterator();	  List    <    Option>    options    =    optionMap.keySet().iterator();    	non-compiled	[CE]  illegal  start  of  expression	81	None	replace
96	[BUG]  [BUGGY]  List  <  Option>  options  =  newAnonymous.keySet().iterator();  [CE]  illegal  start  of  expression  [FE]                OptionException      [CONTEXT]        for  (final  Iterator  iter  =  tailMap.values().iterator();  iter.hasNext();)  {  final  Option  option  =  (Option)  iter.next();  if  (option.canProcess(commandLine,  arg))  {  return  true;  }  }      [BUGGY]  List  <  Option>  options  =  newAnonymous.keySet().iterator();  [BUGGY]      if  (looksLikeOption(commandLine,  arg))  {  return  false;  }  if  (anonymous.size()  >  0)  {  return  true;  }  return  false;  }  [CLASS]  GroupImpl  [METHOD]  canProcess  [RETURN_TYPE]  boolean  WriteableCommandLine  commandLine  String  arg  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  SortedMap  newOptionMap  optionMap  WriteableCommandLine  commandLine  Iterator  iter  List  anonymous  newAnonymous  options  Option  option  String  arg  description  name  Map  tailMap  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	139	139	1	replace	List  <  Option>  options  =  newAnonymous.keySet().iterator();	  List    <    Option>    options    =    optionMap.keySet().iterator();    	non-compiled	[CE]  illegal  start  of  expression	81	None	replace
97	[BUG]  [BUGGY]  Set  <  Option>  options  =  tailMap.values().iterator();  [CE]  illegal  start  of  expression  [FE]                OptionException      [CONTEXT]        for  (final  Iterator  iter  =  tailMap.values().iterator();  iter.hasNext();)  {  final  Option  option  =  (Option)  iter.next();  if  (option.canProcess(commandLine,  arg))  {  return  true;  }  }      [BUGGY]  Set  <  Option>  options  =  tailMap.values().iterator();  [BUGGY]      if  (looksLikeOption(commandLine,  arg))  {  return  false;  }  if  (anonymous.size()  >  0)  {  return  true;  }  return  false;  }  [CLASS]  GroupImpl  [METHOD]  canProcess  [RETURN_TYPE]  boolean  WriteableCommandLine  commandLine  String  arg  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  SortedMap  newOptionMap  optionMap  WriteableCommandLine  commandLine  Iterator  iter  List  anonymous  newAnonymous  options  Option  option  String  arg  description  name  Map  tailMap  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	139	139	1	replace	Set  <  Option>  options  =  tailMap.values().iterator();	  Set    <    Option>    options    =    optionMap.values().iterator();    	non-compiled	[CE]  illegal  start  of  expression	50	None	replace
98	[BUG]  [BUGGY]  Set  <  Option>  options  =  optionMap.keySet().iterator();  [CE]  illegal  start  of  expression  [FE]                  OptionException      [CONTEXT]        for  (final  Iterator  iter  =  tailMap.values().iterator();  iter.hasNext();)  {  final  Option  option  =  (Option)  iter.next();  if  (option.canProcess(commandLine,  arg))  {  return  true;  }  }      [BUGGY]  Set  <  Option>  options  =  optionMap.keySet().iterator();  [BUGGY]      if  (looksLikeOption(commandLine,  arg))  {  return  false;  }  if  (anonymous.size()  >  0)  {  return  true;  }  return  false;  }  [CLASS]  GroupImpl  [METHOD]  canProcess  [RETURN_TYPE]  boolean  WriteableCommandLine  commandLine  String  arg  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  SortedMap  newOptionMap  optionMap  WriteableCommandLine  commandLine  Iterator  iter  List  anonymous  newAnonymous  options  Option  option  String  arg  description  name  Map  tailMap  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	139	139	1	replace	Set  <  Option>  options  =  optionMap.keySet().iterator();	  Set    <    Option>    options    =    optionMap.values().iterator();    	non-compiled	[CE]  illegal  start  of  expression	50	None	replace
99	[BUG]  [BUGGY]  Set  <  Option>  newAnonymous  =  option.values().iterator();  [CE]  illegal  start  of  expression  [FE]            OptionException      [CONTEXT]        for  (final  Iterator  iter  =  tailMap.values().iterator();  iter.hasNext();)  {  final  Option  option  =  (Option)  iter.next();  if  (option.canProcess(commandLine,  arg))  {  return  true;  }  }      [BUGGY]  Set  <  Option>  newAnonymous  =  option.values().iterator();  [BUGGY]      if  (looksLikeOption(commandLine,  arg))  {  return  false;  }  if  (anonymous.size()  >  0)  {  return  true;  }  return  false;  }  [CLASS]  GroupImpl  [METHOD]  canProcess  [RETURN_TYPE]  boolean  WriteableCommandLine  commandLine  String  arg  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  SortedMap  newOptionMap  optionMap  WriteableCommandLine  commandLine  Iterator  iter  List  anonymous  newAnonymous  options  Option  option  String  arg  description  name  Map  tailMap  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	139	139	1	replace	Set  <  Option>  newAnonymous  =  option.values().iterator();	  List    <    Option>    newAnonymous    =    option.values().iterator();    	non-compiled	[CE]  illegal  start  of  expression	19	None	replace
100	[BUG]  [BUGGY]  List  <  Option>  newAnonymous  =  option.keys().iterator();  [CE]  illegal  start  of  expression  [FE]              OptionException      [CONTEXT]        for  (final  Iterator  iter  =  tailMap.values().iterator();  iter.hasNext();)  {  final  Option  option  =  (Option)  iter.next();  if  (option.canProcess(commandLine,  arg))  {  return  true;  }  }      [BUGGY]  List  <  Option>  newAnonymous  =  option.keys().iterator();  [BUGGY]      if  (looksLikeOption(commandLine,  arg))  {  return  false;  }  if  (anonymous.size()  >  0)  {  return  true;  }  return  false;  }  [CLASS]  GroupImpl  [METHOD]  canProcess  [RETURN_TYPE]  boolean  WriteableCommandLine  commandLine  String  arg  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  SortedMap  newOptionMap  optionMap  WriteableCommandLine  commandLine  Iterator  iter  List  anonymous  newAnonymous  options  Option  option  String  arg  description  name  Map  tailMap  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	139	139	1	replace	List  <  Option>  newAnonymous  =  option.keys().iterator();	  List    <    Option>    newAnonymous    =    option.values().iterator();    	non-compiled	[CE]  illegal  start  of  expression	19	None	replace
101	[BUG]  [BUGGY]  Option  option  =  optionMap.createOption(commandLine);  [CE]  illegal  start  of  expression  [FE]                    OptionException      [CONTEXT]        for  (final  Iterator  iter  =  tailMap.values().iterator();  iter.hasNext();)  {  final  Option  option  =  (Option)  iter.next();  if  (option.canProcess(commandLine,  arg))  {  return  true;  }  }      [BUGGY]  Option  option  =  optionMap.createOption(commandLine);  [BUGGY]      if  (looksLikeOption(commandLine,  arg))  {  return  false;  }  if  (anonymous.size()  >  0)  {  return  true;  }  return  false;  }  [CLASS]  GroupImpl  [METHOD]  canProcess  [RETURN_TYPE]  boolean  WriteableCommandLine  commandLine  String  arg  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  SortedMap  newOptionMap  optionMap  WriteableCommandLine  commandLine  Iterator  iter  List  anonymous  newAnonymous  options  Option  option  String  arg  description  name  Map  tailMap  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	139	139	1	replace	Option  option  =  optionMap.createOption(commandLine);	  Option    option    =    optionMap.createOption(arg);    	non-compiled	[CE]  illegal  start  of  expression	15	None	replace
102	[BUG]  [BUGGY]  Option  option  =  optionMap.createOption(commandLine,  arg);  [CE]  illegal  start  of  expression  [FE]                      OptionException      [CONTEXT]        for  (final  Iterator  iter  =  tailMap.values().iterator();  iter.hasNext();)  {  final  Option  option  =  (Option)  iter.next();  if  (option.canProcess(commandLine,  arg))  {  return  true;  }  }      [BUGGY]  Option  option  =  optionMap.createOption(commandLine,  arg);  [BUGGY]      if  (looksLikeOption(commandLine,  arg))  {  return  false;  }  if  (anonymous.size()  >  0)  {  return  true;  }  return  false;  }  [CLASS]  GroupImpl  [METHOD]  canProcess  [RETURN_TYPE]  boolean  WriteableCommandLine  commandLine  String  arg  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  SortedMap  newOptionMap  optionMap  WriteableCommandLine  commandLine  Iterator  iter  List  anonymous  newAnonymous  options  Option  option  String  arg  description  name  Map  tailMap  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	139	139	1	replace	Option  option  =  optionMap.createOption(commandLine,  arg);	  Option    option    =    optionMap.createOption(arg);    	non-compiled	[CE]  illegal  start  of  expression	15	None	replace
103	[BUG]  [BUGGY]  Option  option  =  optionMap.createOption(arg,  description);  [CE]  illegal  start  of  expression  [FE]                        OptionException      [CONTEXT]        for  (final  Iterator  iter  =  tailMap.values().iterator();  iter.hasNext();)  {  final  Option  option  =  (Option)  iter.next();  if  (option.canProcess(commandLine,  arg))  {  return  true;  }  }      [BUGGY]  Option  option  =  optionMap.createOption(arg,  description);  [BUGGY]      if  (looksLikeOption(commandLine,  arg))  {  return  false;  }  if  (anonymous.size()  >  0)  {  return  true;  }  return  false;  }  [CLASS]  GroupImpl  [METHOD]  canProcess  [RETURN_TYPE]  boolean  WriteableCommandLine  commandLine  String  arg  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  SortedMap  newOptionMap  optionMap  WriteableCommandLine  commandLine  Iterator  iter  List  anonymous  newAnonymous  options  Option  option  String  arg  description  name  Map  tailMap  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	139	139	1	replace	Option  option  =  optionMap.createOption(arg,  description);	  Option    option    =    optionMap.createOption(arg);    	non-compiled	[CE]  illegal  start  of  expression	15	None	replace
104	[BUG]  [BUGGY]  Option  option  =  options.createOption(arg);  [CE]  illegal  start  of  expression  [FE]                          OptionException      [CONTEXT]        for  (final  Iterator  iter  =  tailMap.values().iterator();  iter.hasNext();)  {  final  Option  option  =  (Option)  iter.next();  if  (option.canProcess(commandLine,  arg))  {  return  true;  }  }      [BUGGY]  Option  option  =  options.createOption(arg);  [BUGGY]      if  (looksLikeOption(commandLine,  arg))  {  return  false;  }  if  (anonymous.size()  >  0)  {  return  true;  }  return  false;  }  [CLASS]  GroupImpl  [METHOD]  canProcess  [RETURN_TYPE]  boolean  WriteableCommandLine  commandLine  String  arg  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  SortedMap  newOptionMap  optionMap  WriteableCommandLine  commandLine  Iterator  iter  List  anonymous  newAnonymous  options  Option  option  String  arg  description  name  Map  tailMap  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	139	139	1	replace	Option  option  =  options.createOption(arg);	  Option    option    =    optionMap.createOption(arg);    	non-compiled	[CE]  illegal  start  of  expression	15	None	replace
105	[BUG]  [BUGGY]  if(canProcessOption(commandLine,  option))  {  [CE]  illegal  start  of  expression  [FE]                    OptionException      [CONTEXT]        for  (final  Iterator  iter  =  tailMap.values().iterator();  iter.hasNext();)  {  final  Option  option  =  (Option)  iter.next();  if  (option.canProcess(commandLine,  arg))  {  return  true;  }  }      [BUGGY]  if(canProcessOption(commandLine,  option))  {  [BUGGY]      return  false;  }  if  (anonymous.size()  >  0)  {  return  true;  }  return  false;  }  [CLASS]  GroupImpl  [METHOD]  canProcess  [RETURN_TYPE]  boolean  WriteableCommandLine  commandLine  String  arg  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  SortedMap  newOptionMap  optionMap  WriteableCommandLine  commandLine  Iterator  iter  List  anonymous  newAnonymous  options  Option  option  String  arg  description  name  Map  tailMap  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	139	139	1	replace	if(canProcessOption(commandLine,  option))  {	  if(canProcessOption(commandLine,    null))    {    	non-compiled	[CE]  illegal  start  of  expression	2	None	replace
106	[BUG]  [BUGGY]  if(canProcessOption(commandLine,  null)&&  option.canProcess(commandLine,  arg))  {  [CE]  illegal  start  of  expression  [FE]                      OptionException      [CONTEXT]        for  (final  Iterator  iter  =  tailMap.values().iterator();  iter.hasNext();)  {  final  Option  option  =  (Option)  iter.next();  if  (option.canProcess(commandLine,  arg))  {  return  true;  }  }      [BUGGY]  if(canProcessOption(commandLine,  null)&&  option.canProcess(commandLine,  arg))  {  [BUGGY]      return  false;  }  if  (anonymous.size()  >  0)  {  return  true;  }  return  false;  }  [CLASS]  GroupImpl  [METHOD]  canProcess  [RETURN_TYPE]  boolean  WriteableCommandLine  commandLine  String  arg  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  SortedMap  newOptionMap  optionMap  WriteableCommandLine  commandLine  Iterator  iter  List  anonymous  newAnonymous  options  Option  option  String  arg  description  name  Map  tailMap  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	139	139	1	replace	if(canProcessOption(commandLine,  null)&&  option.canProcess(commandLine,  arg))  {	  if(canProcessOption(commandLine,    null))    {    	non-compiled	[CE]  illegal  start  of  expression	2	None	replace
107	[BUG]  [BUGGY]  if(canProcessOption(commandLine,  options))  {  [CE]  illegal  start  of  expression  [FE]                        OptionException      [CONTEXT]        for  (final  Iterator  iter  =  tailMap.values().iterator();  iter.hasNext();)  {  final  Option  option  =  (Option)  iter.next();  if  (option.canProcess(commandLine,  arg))  {  return  true;  }  }      [BUGGY]  if(canProcessOption(commandLine,  options))  {  [BUGGY]      return  false;  }  if  (anonymous.size()  >  0)  {  return  true;  }  return  false;  }  [CLASS]  GroupImpl  [METHOD]  canProcess  [RETURN_TYPE]  boolean  WriteableCommandLine  commandLine  String  arg  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  SortedMap  newOptionMap  optionMap  WriteableCommandLine  commandLine  Iterator  iter  List  anonymous  newAnonymous  options  Option  option  String  arg  description  name  Map  tailMap  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	139	139	1	replace	if(canProcessOption(commandLine,  options))  {	  if(canProcessOption(commandLine,    null))    {    	non-compiled	[CE]  illegal  start  of  expression	2	None	replace
108	[BUG]  [BUGGY]  if(canProcessOption(arg,  null))  {  [CE]  illegal  start  of  expression  [FE]                          OptionException      [CONTEXT]        for  (final  Iterator  iter  =  tailMap.values().iterator();  iter.hasNext();)  {  final  Option  option  =  (Option)  iter.next();  if  (option.canProcess(commandLine,  arg))  {  return  true;  }  }      [BUGGY]  if(canProcessOption(arg,  null))  {  [BUGGY]      return  false;  }  if  (anonymous.size()  >  0)  {  return  true;  }  return  false;  }  [CLASS]  GroupImpl  [METHOD]  canProcess  [RETURN_TYPE]  boolean  WriteableCommandLine  commandLine  String  arg  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  SortedMap  newOptionMap  optionMap  WriteableCommandLine  commandLine  Iterator  iter  List  anonymous  newAnonymous  options  Option  option  String  arg  description  name  Map  tailMap  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	139	139	1	replace	if(canProcessOption(arg,  null))  {	  if(canProcessOption(commandLine,    null))    {    	non-compiled	[CE]  illegal  start  of  expression	2	None	replace
109	[BUG]  [BUGGY]  if(hasProcess(option,  commandLine))  {  [CE]  illegal  start  of  expression  [FE]            OptionException      [CONTEXT]        for  (final  Iterator  iter  =  tailMap.values().iterator();  iter.hasNext();)  {  final  Option  option  =  (Option)  iter.next();  if  (option.canProcess(commandLine,  arg))  {  return  true;  }  }      [BUGGY]  if(hasProcess(option,  commandLine))  {  [BUGGY]      return  false;  }  if  (anonymous.size()  >  0)  {  return  true;  }  return  false;  }  [CLASS]  GroupImpl  [METHOD]  canProcess  [RETURN_TYPE]  boolean  WriteableCommandLine  commandLine  String  arg  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  SortedMap  newOptionMap  optionMap  WriteableCommandLine  commandLine  Iterator  iter  List  anonymous  newAnonymous  options  Option  option  String  arg  description  name  Map  tailMap  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	139	139	1	replace	if(hasProcess(option,  commandLine))  {	  if(hasOption(option,    commandLine))    {    	non-compiled	[CE]  illegal  start  of  expression	79	None	replace
110	[BUG]  [BUGGY]  if(canProcess(option,  commandLine))  {  [CE]  illegal  start  of  expression  [FE]              OptionException      [CONTEXT]        for  (final  Iterator  iter  =  tailMap.values().iterator();  iter.hasNext();)  {  final  Option  option  =  (Option)  iter.next();  if  (option.canProcess(commandLine,  arg))  {  return  true;  }  }      [BUGGY]  if(canProcess(option,  commandLine))  {  [BUGGY]      return  false;  }  if  (anonymous.size()  >  0)  {  return  true;  }  return  false;  }  [CLASS]  GroupImpl  [METHOD]  canProcess  [RETURN_TYPE]  boolean  WriteableCommandLine  commandLine  String  arg  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  SortedMap  newOptionMap  optionMap  WriteableCommandLine  commandLine  Iterator  iter  List  anonymous  newAnonymous  options  Option  option  String  arg  description  name  Map  tailMap  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	139	139	1	replace	if(canProcess(option,  commandLine))  {	  if(hasOption(option,    commandLine))    {    	non-compiled	[CE]  illegal  start  of  expression	79	None	replace
111	[BUG]  [BUGGY]  if(!option.canProcess(commandLine,  arg))  {  [CE]  illegal  start  of  expression  [FE]            OptionException      [CONTEXT]        for  (final  Iterator  iter  =  tailMap.values().iterator();  iter.hasNext();)  {  final  Option  option  =  (Option)  iter.next();  if  (option.canProcess(commandLine,  arg))  {  return  true;  }  }      [BUGGY]  if(!option.canProcess(commandLine,  arg))  {  [BUGGY]      return  false;  }  if  (anonymous.size()  >  0)  {  return  true;  }  return  false;  }  [CLASS]  GroupImpl  [METHOD]  canProcess  [RETURN_TYPE]  boolean  WriteableCommandLine  commandLine  String  arg  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  SortedMap  newOptionMap  optionMap  WriteableCommandLine  commandLine  Iterator  iter  List  anonymous  newAnonymous  options  Option  option  String  arg  description  name  Map  tailMap  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	139	139	1	replace	if(!option.canProcess(commandLine,  arg))  {	  if(option.canProcess(commandLine,    arg))    {    	non-compiled	[CE]  illegal  start  of  expression	53	None	replace
112	[BUG]  [BUGGY]  if(option.canProcess(commandLine,  description))  {  [CE]  illegal  start  of  expression  [FE]              OptionException      [CONTEXT]        for  (final  Iterator  iter  =  tailMap.values().iterator();  iter.hasNext();)  {  final  Option  option  =  (Option)  iter.next();  if  (option.canProcess(commandLine,  arg))  {  return  true;  }  }      [BUGGY]  if(option.canProcess(commandLine,  description))  {  [BUGGY]      return  false;  }  if  (anonymous.size()  >  0)  {  return  true;  }  return  false;  }  [CLASS]  GroupImpl  [METHOD]  canProcess  [RETURN_TYPE]  boolean  WriteableCommandLine  commandLine  String  arg  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  SortedMap  newOptionMap  optionMap  WriteableCommandLine  commandLine  Iterator  iter  List  anonymous  newAnonymous  options  Option  option  String  arg  description  name  Map  tailMap  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	139	139	1	replace	if(option.canProcess(commandLine,  description))  {	  if(option.canProcess(commandLine,    arg))    {    	non-compiled	[CE]  illegal  start  of  expression	53	None	replace
113	[BUG]  [BUGGY]  if(option.canProcess(commandLine,  false))  {  [CE]  illegal  start  of  expression  [FE]                OptionException      [CONTEXT]        for  (final  Iterator  iter  =  tailMap.values().iterator();  iter.hasNext();)  {  final  Option  option  =  (Option)  iter.next();  if  (option.canProcess(commandLine,  arg))  {  return  true;  }  }      [BUGGY]  if(option.canProcess(commandLine,  false))  {  [BUGGY]      return  false;  }  if  (anonymous.size()  >  0)  {  return  true;  }  return  false;  }  [CLASS]  GroupImpl  [METHOD]  canProcess  [RETURN_TYPE]  boolean  WriteableCommandLine  commandLine  String  arg  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  SortedMap  newOptionMap  optionMap  WriteableCommandLine  commandLine  Iterator  iter  List  anonymous  newAnonymous  options  Option  option  String  arg  description  name  Map  tailMap  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	139	139	1	replace	if(option.canProcess(commandLine,  false))  {	  if(option.canProcess(commandLine,    arg))    {    	non-compiled	[CE]  illegal  start  of  expression	53	None	replace
114	[BUG]  [BUGGY]  if(canProcessLikeOption(arg,  commandLine))  {  [CE]  illegal  start  of  expression  [FE]              OptionException      [CONTEXT]        for  (final  Iterator  iter  =  tailMap.values().iterator();  iter.hasNext();)  {  final  Option  option  =  (Option)  iter.next();  if  (option.canProcess(commandLine,  arg))  {  return  true;  }  }      [BUGGY]  if(canProcessLikeOption(arg,  commandLine))  {  [BUGGY]      return  false;  }  if  (anonymous.size()  >  0)  {  return  true;  }  return  false;  }  [CLASS]  GroupImpl  [METHOD]  canProcess  [RETURN_TYPE]  boolean  WriteableCommandLine  commandLine  String  arg  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  SortedMap  newOptionMap  optionMap  WriteableCommandLine  commandLine  Iterator  iter  List  anonymous  newAnonymous  options  Option  option  String  arg  description  name  Map  tailMap  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	139	139	1	replace	if(canProcessLikeOption(arg,  commandLine))  {	  if(canProcessLikeOption(commandLine,    arg))    {    	non-compiled	[CE]  illegal  start  of  expression	11	None	replace
115	[BUG]  [BUGGY]  if(canProcessLikeOption(commandLine,  arg,  description))  {  [CE]  illegal  start  of  expression  [FE]                OptionException      [CONTEXT]        for  (final  Iterator  iter  =  tailMap.values().iterator();  iter.hasNext();)  {  final  Option  option  =  (Option)  iter.next();  if  (option.canProcess(commandLine,  arg))  {  return  true;  }  }      [BUGGY]  if(canProcessLikeOption(commandLine,  arg,  description))  {  [BUGGY]      return  false;  }  if  (anonymous.size()  >  0)  {  return  true;  }  return  false;  }  [CLASS]  GroupImpl  [METHOD]  canProcess  [RETURN_TYPE]  boolean  WriteableCommandLine  commandLine  String  arg  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  SortedMap  newOptionMap  optionMap  WriteableCommandLine  commandLine  Iterator  iter  List  anonymous  newAnonymous  options  Option  option  String  arg  description  name  Map  tailMap  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	139	139	1	replace	if(canProcessLikeOption(commandLine,  arg,  description))  {	  if(canProcessLikeOption(commandLine,    arg))    {    	non-compiled	[CE]  illegal  start  of  expression	11	None	replace
116	[BUG]  [BUGGY]  if(canProcessLikeOption(commandLine,  arg)&&  option.canProcess(commandLine,  arg))  {  [CE]  illegal  start  of  expression  [FE]                  OptionException      [CONTEXT]        for  (final  Iterator  iter  =  tailMap.values().iterator();  iter.hasNext();)  {  final  Option  option  =  (Option)  iter.next();  if  (option.canProcess(commandLine,  arg))  {  return  true;  }  }      [BUGGY]  if(canProcessLikeOption(commandLine,  arg)&&  option.canProcess(commandLine,  arg))  {  [BUGGY]      return  false;  }  if  (anonymous.size()  >  0)  {  return  true;  }  return  false;  }  [CLASS]  GroupImpl  [METHOD]  canProcess  [RETURN_TYPE]  boolean  WriteableCommandLine  commandLine  String  arg  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  SortedMap  newOptionMap  optionMap  WriteableCommandLine  commandLine  Iterator  iter  List  anonymous  newAnonymous  options  Option  option  String  arg  description  name  Map  tailMap  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	139	139	1	replace	if(canProcessLikeOption(commandLine,  arg)&&  option.canProcess(commandLine,  arg))  {	  if(canProcessLikeOption(commandLine,    arg))    {    	non-compiled	[CE]  illegal  start  of  expression	11	None	replace
117	[BUG]  [BUGGY]  final  ArrayList  <  Option>  newAnonymous  =(ArrayList  <  Option>)iter.next();  [CE]  illegal  start  of  expression  [FE]                      OptionException      [CONTEXT]        for  (final  Iterator  iter  =  tailMap.values().iterator();  iter.hasNext();)  {  final  Option  option  =  (Option)  iter.next();  if  (option.canProcess(commandLine,  arg))  {  return  true;  }  }      [BUGGY]  final  ArrayList  <  Option>  newAnonymous  =(ArrayList  <  Option>)iter.next();  [BUGGY]      if  (looksLikeOption(commandLine,  arg))  {  return  false;  }  if  (anonymous.size()  >  0)  {  return  true;  }  return  false;  }  [CLASS]  GroupImpl  [METHOD]  canProcess  [RETURN_TYPE]  boolean  WriteableCommandLine  commandLine  String  arg  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  SortedMap  newOptionMap  optionMap  WriteableCommandLine  commandLine  Iterator  iter  List  anonymous  newAnonymous  options  Option  option  String  arg  description  name  Map  tailMap  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	139	139	1	replace	final  ArrayList  <  Option>  newAnonymous  =(ArrayList  <  Option>)iter.next();	  ArrayList    <    Option>    newAnonymous    =(ArrayList    <    Option>)iter.next();    	non-compiled	[CE]  illegal  start  of  expression	6	None	replace
118	[BUG]  [BUGGY]  Option  option  =  options.createOption(arg,  description);  [CE]  illegal  start  of  expression  [FE]                  OptionException      [CONTEXT]        for  (final  Iterator  iter  =  tailMap.values().iterator();  iter.hasNext();)  {  final  Option  option  =  (Option)  iter.next();  if  (option.canProcess(commandLine,  arg))  {  return  true;  }  }      [BUGGY]  Option  option  =  options.createOption(arg,  description);  [BUGGY]      if  (looksLikeOption(commandLine,  arg))  {  return  false;  }  if  (anonymous.size()  >  0)  {  return  true;  }  return  false;  }  [CLASS]  GroupImpl  [METHOD]  canProcess  [RETURN_TYPE]  boolean  WriteableCommandLine  commandLine  String  arg  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  SortedMap  newOptionMap  optionMap  WriteableCommandLine  commandLine  Iterator  iter  List  anonymous  newAnonymous  options  Option  option  String  arg  description  name  Map  tailMap  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	139	139	1	replace	Option  option  =  options.createOption(arg,  description);	  Option    option    =    option.createOption(arg,    description);    	non-compiled	[CE]  illegal  start  of  expression	14	None	replace
119	[BUG]  [BUGGY]  Option  option  =  option.createOption(name,  description);  [CE]  illegal  start  of  expression  [FE]                    OptionException      [CONTEXT]        for  (final  Iterator  iter  =  tailMap.values().iterator();  iter.hasNext();)  {  final  Option  option  =  (Option)  iter.next();  if  (option.canProcess(commandLine,  arg))  {  return  true;  }  }      [BUGGY]  Option  option  =  option.createOption(name,  description);  [BUGGY]      if  (looksLikeOption(commandLine,  arg))  {  return  false;  }  if  (anonymous.size()  >  0)  {  return  true;  }  return  false;  }  [CLASS]  GroupImpl  [METHOD]  canProcess  [RETURN_TYPE]  boolean  WriteableCommandLine  commandLine  String  arg  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  SortedMap  newOptionMap  optionMap  WriteableCommandLine  commandLine  Iterator  iter  List  anonymous  newAnonymous  options  Option  option  String  arg  description  name  Map  tailMap  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	139	139	1	replace	Option  option  =  option.createOption(name,  description);	  Option    option    =    option.createOption(arg,    description);    	non-compiled	[CE]  illegal  start  of  expression	14	None	replace
120	[BUG]  [BUGGY]  List  <  Option>  newAnonymous  =  option.keySet().iterator();  [CE]  illegal  start  of  expression  [FE]              OptionException      [CONTEXT]        for  (final  Iterator  iter  =  tailMap.values().iterator();  iter.hasNext();)  {  final  Option  option  =  (Option)  iter.next();  if  (option.canProcess(commandLine,  arg))  {  return  true;  }  }      [BUGGY]  List  <  Option>  newAnonymous  =  option.keySet().iterator();  [BUGGY]      if  (looksLikeOption(commandLine,  arg))  {  return  false;  }  if  (anonymous.size()  >  0)  {  return  true;  }  return  false;  }  [CLASS]  GroupImpl  [METHOD]  canProcess  [RETURN_TYPE]  boolean  WriteableCommandLine  commandLine  String  arg  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  SortedMap  newOptionMap  optionMap  WriteableCommandLine  commandLine  Iterator  iter  List  anonymous  newAnonymous  options  Option  option  String  arg  description  name  Map  tailMap  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	139	139	1	replace	List  <  Option>  newAnonymous  =  option.keySet().iterator();	  List    <    Option>    newAnonymous    =    options.keySet().iterator();    	non-compiled	[CE]  illegal  start  of  expression	20	None	replace
121	[BUG]  [BUGGY]  List  <  Option>  newAnonymous  =  option.canProcess(commandLine,  arg);  [CE]  illegal  start  of  expression  [FE]                    OptionException      [CONTEXT]        for  (final  Iterator  iter  =  tailMap.values().iterator();  iter.hasNext();)  {  final  Option  option  =  (Option)  iter.next();  if  (option.canProcess(commandLine,  arg))  {  return  true;  }  }      [BUGGY]  List  <  Option>  newAnonymous  =  option.canProcess(commandLine,  arg);  [BUGGY]      return  false;  }  if  (anonymous.size()  >  0)  {  return  true;  }  return  false;  }  [CLASS]  GroupImpl  [METHOD]  canProcess  [RETURN_TYPE]  boolean  WriteableCommandLine  commandLine  String  arg  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  SortedMap  newOptionMap  optionMap  WriteableCommandLine  commandLine  Iterator  iter  List  anonymous  newAnonymous  options  Option  option  String  arg  description  name  Map  tailMap  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	139	139	1	replace	List  <  Option>  newAnonymous  =  option.canProcess(commandLine,  arg);	  List    <    Option>    newAnonymous    =    option.canProcess(commandLine);    	non-compiled	[CE]  illegal  start  of  expression	51	None	replace
122	[BUG]  [BUGGY]  List  <  Option>  newAnonymous  =  option.canProcess(arg);  [CE]  illegal  start  of  expression  [FE]                      OptionException      [CONTEXT]        for  (final  Iterator  iter  =  tailMap.values().iterator();  iter.hasNext();)  {  final  Option  option  =  (Option)  iter.next();  if  (option.canProcess(commandLine,  arg))  {  return  true;  }  }      [BUGGY]  List  <  Option>  newAnonymous  =  option.canProcess(arg);  [BUGGY]      return  false;  }  if  (anonymous.size()  >  0)  {  return  true;  }  return  false;  }  [CLASS]  GroupImpl  [METHOD]  canProcess  [RETURN_TYPE]  boolean  WriteableCommandLine  commandLine  String  arg  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  SortedMap  newOptionMap  optionMap  WriteableCommandLine  commandLine  Iterator  iter  List  anonymous  newAnonymous  options  Option  option  String  arg  description  name  Map  tailMap  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	139	139	1	replace	List  <  Option>  newAnonymous  =  option.canProcess(arg);	  List    <    Option>    newAnonymous    =    option.canProcess(commandLine);    	non-compiled	[CE]  illegal  start  of  expression	51	None	replace
123	[BUG]  [BUGGY]  final  List  <  Option>  newAnonymous  =  option.canProcess(commandLine);  [CE]  illegal  start  of  expression  [FE]                        OptionException      [CONTEXT]        for  (final  Iterator  iter  =  tailMap.values().iterator();  iter.hasNext();)  {  final  Option  option  =  (Option)  iter.next();  if  (option.canProcess(commandLine,  arg))  {  return  true;  }  }      [BUGGY]  final  List  <  Option>  newAnonymous  =  option.canProcess(commandLine);  [BUGGY]      return  false;  }  if  (anonymous.size()  >  0)  {  return  true;  }  return  false;  }  [CLASS]  GroupImpl  [METHOD]  canProcess  [RETURN_TYPE]  boolean  WriteableCommandLine  commandLine  String  arg  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  SortedMap  newOptionMap  optionMap  WriteableCommandLine  commandLine  Iterator  iter  List  anonymous  newAnonymous  options  Option  option  String  arg  description  name  Map  tailMap  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	139	139	1	replace	final  List  <  Option>  newAnonymous  =  option.canProcess(commandLine);	  List    <    Option>    newAnonymous    =    option.canProcess(commandLine);    	non-compiled	[CE]  illegal  start  of  expression	51	None	replace
124	[BUG]  [BUGGY]  if(option.canProcess(commandLine,  arg)&&  looksLikeOption(commandLine,  arg))  {  [CE]  illegal  start  of  expression  [FE]                  OptionException      [CONTEXT]        for  (final  Iterator  iter  =  tailMap.values().iterator();  iter.hasNext();)  {  final  Option  option  =  (Option)  iter.next();  if  (option.canProcess(commandLine,  arg))  {  return  true;  }  }      [BUGGY]  if(option.canProcess(commandLine,  arg)&&  looksLikeOption(commandLine,  arg))  {  [BUGGY]      return  false;  }  if  (anonymous.size()  >  0)  {  return  true;  }  return  false;  }  [CLASS]  GroupImpl  [METHOD]  canProcess  [RETURN_TYPE]  boolean  WriteableCommandLine  commandLine  String  arg  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  SortedMap  newOptionMap  optionMap  WriteableCommandLine  commandLine  Iterator  iter  List  anonymous  newAnonymous  options  Option  option  String  arg  description  name  Map  tailMap  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	139	139	1	replace	if(option.canProcess(commandLine,  arg)&&  looksLikeOption(commandLine,  arg))  {	  if(looksLikeOption(commandLine,    arg)&&    options.canProcess(commandLine,    arg))    {    	non-compiled	[CE]  illegal  start  of  expression	8	None	replace
125	[BUG]  [BUGGY]  List  <  Option>  options  =  list.values().iterator();  [CE]  illegal  start  of  expression  [FE]                OptionException      [CONTEXT]        for  (final  Iterator  iter  =  tailMap.values().iterator();  iter.hasNext();)  {  final  Option  option  =  (Option)  iter.next();  if  (option.canProcess(commandLine,  arg))  {  return  true;  }  }      [BUGGY]  List  <  Option>  options  =  list.values().iterator();  [BUGGY]      if  (looksLikeOption(commandLine,  arg))  {  return  false;  }  if  (anonymous.size()  >  0)  {  return  true;  }  return  false;  }  [CLASS]  GroupImpl  [METHOD]  canProcess  [RETURN_TYPE]  boolean  WriteableCommandLine  commandLine  String  arg  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  SortedMap  newOptionMap  optionMap  WriteableCommandLine  commandLine  Iterator  iter  List  anonymous  newAnonymous  options  Option  option  String  arg  description  name  Map  tailMap  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	139	139	1	replace	List  <  Option>  options  =  list.values().iterator();	  List    <    Option>    options    =    newAnonymous.values().iterator();    	non-compiled	[CE]  illegal  start  of  expression	36	None	replace
126	[BUG]  [BUGGY]  List  <  Option>  newAnonymous  =(List  <  Option>)this.tailMap.values().iterator();  [CE]  illegal  start  of  expression  [FE]            OptionException      [CONTEXT]        for  (final  Iterator  iter  =  tailMap.values().iterator();  iter.hasNext();)  {  final  Option  option  =  (Option)  iter.next();  if  (option.canProcess(commandLine,  arg))  {  return  true;  }  }      [BUGGY]  List  <  Option>  newAnonymous  =(List  <  Option>)this.tailMap.values().iterator();  [BUGGY]      if  (looksLikeOption(commandLine,  arg))  {  return  false;  }  if  (anonymous.size()  >  0)  {  return  true;  }  return  false;  }  [CLASS]  GroupImpl  [METHOD]  canProcess  [RETURN_TYPE]  boolean  WriteableCommandLine  commandLine  String  arg  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  SortedMap  newOptionMap  optionMap  WriteableCommandLine  commandLine  Iterator  iter  List  anonymous  newAnonymous  options  Option  option  String  arg  description  name  Map  tailMap  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	139	139	1	replace	List  <  Option>  newAnonymous  =(List  <  Option>)this.tailMap.values().iterator();	  List    <    Option>    newAnonymous    =(List    <    Option>)tailMap.values().iterator();    	non-compiled	[CE]  illegal  start  of  expression	16	None	replace
127	[BUG]  [BUGGY]  List  <  Option>  newAnonymous  =  tailMap.keySet().iterator();  [CE]  illegal  start  of  expression  [FE]              OptionException      [CONTEXT]        for  (final  Iterator  iter  =  tailMap.values().iterator();  iter.hasNext();)  {  final  Option  option  =  (Option)  iter.next();  if  (option.canProcess(commandLine,  arg))  {  return  true;  }  }      [BUGGY]  List  <  Option>  newAnonymous  =  tailMap.keySet().iterator();  [BUGGY]      if  (looksLikeOption(commandLine,  arg))  {  return  false;  }  if  (anonymous.size()  >  0)  {  return  true;  }  return  false;  }  [CLASS]  GroupImpl  [METHOD]  canProcess  [RETURN_TYPE]  boolean  WriteableCommandLine  commandLine  String  arg  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  SortedMap  newOptionMap  optionMap  WriteableCommandLine  commandLine  Iterator  iter  List  anonymous  newAnonymous  options  Option  option  String  arg  description  name  Map  tailMap  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	139	139	1	replace	List  <  Option>  newAnonymous  =  tailMap.keySet().iterator();	  List    <    Option>    newAnonymous    =    optionMap.keySet().iterator();    	non-compiled	[CE]  illegal  start  of  expression	63	None	replace
128	[BUG]  [BUGGY]  if(looksLikeOption(commandLine,  false)||  options.canProcess(commandLine,  false))  {  [CE]  illegal  start  of  expression  [FE]                OptionException      [CONTEXT]        for  (final  Iterator  iter  =  tailMap.values().iterator();  iter.hasNext();)  {  final  Option  option  =  (Option)  iter.next();  if  (option.canProcess(commandLine,  arg))  {  return  true;  }  }      [BUGGY]  if(looksLikeOption(commandLine,  false)||  options.canProcess(commandLine,  false))  {  [BUGGY]      return  false;  }  if  (anonymous.size()  >  0)  {  return  true;  }  return  false;  }  [CLASS]  GroupImpl  [METHOD]  canProcess  [RETURN_TYPE]  boolean  WriteableCommandLine  commandLine  String  arg  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  SortedMap  newOptionMap  optionMap  WriteableCommandLine  commandLine  Iterator  iter  List  anonymous  newAnonymous  options  Option  option  String  arg  description  name  Map  tailMap  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	139	139	1	replace	if(looksLikeOption(commandLine,  false)||  options.canProcess(commandLine,  false))  {	  if(looksLikeOption(commandLine,    true)||    options.canProcess(commandLine,    false))    {    	non-compiled	[CE]  illegal  start  of  expression	58	None	replace
129	[BUG]  [BUGGY]  if(looksLikeOption(commandLine,  false)&&  options.canProcess(commandLine,  false))  {  [CE]  illegal  start  of  expression  [FE]                  OptionException      [CONTEXT]        for  (final  Iterator  iter  =  tailMap.values().iterator();  iter.hasNext();)  {  final  Option  option  =  (Option)  iter.next();  if  (option.canProcess(commandLine,  arg))  {  return  true;  }  }      [BUGGY]  if(looksLikeOption(commandLine,  false)&&  options.canProcess(commandLine,  false))  {  [BUGGY]      return  false;  }  if  (anonymous.size()  >  0)  {  return  true;  }  return  false;  }  [CLASS]  GroupImpl  [METHOD]  canProcess  [RETURN_TYPE]  boolean  WriteableCommandLine  commandLine  String  arg  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  SortedMap  newOptionMap  optionMap  WriteableCommandLine  commandLine  Iterator  iter  List  anonymous  newAnonymous  options  Option  option  String  arg  description  name  Map  tailMap  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	139	139	1	replace	if(looksLikeOption(commandLine,  false)&&  options.canProcess(commandLine,  false))  {	  if(looksLikeOption(commandLine,    true)||    options.canProcess(commandLine,    false))    {    	non-compiled	[CE]  illegal  start  of  expression	58	None	replace
130	[BUG]  [BUGGY]  if(looksLikeOption(commandLine,  true)&&  options.canProcess(commandLine,  false))  {  [CE]  illegal  start  of  expression  [FE]                    OptionException      [CONTEXT]        for  (final  Iterator  iter  =  tailMap.values().iterator();  iter.hasNext();)  {  final  Option  option  =  (Option)  iter.next();  if  (option.canProcess(commandLine,  arg))  {  return  true;  }  }      [BUGGY]  if(looksLikeOption(commandLine,  true)&&  options.canProcess(commandLine,  false))  {  [BUGGY]      return  false;  }  if  (anonymous.size()  >  0)  {  return  true;  }  return  false;  }  [CLASS]  GroupImpl  [METHOD]  canProcess  [RETURN_TYPE]  boolean  WriteableCommandLine  commandLine  String  arg  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  SortedMap  newOptionMap  optionMap  WriteableCommandLine  commandLine  Iterator  iter  List  anonymous  newAnonymous  options  Option  option  String  arg  description  name  Map  tailMap  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	139	139	1	replace	if(looksLikeOption(commandLine,  true)&&  options.canProcess(commandLine,  false))  {	  if(looksLikeOption(commandLine,    true)||    options.canProcess(commandLine,    false))    {    	non-compiled	[CE]  illegal  start  of  expression	58	None	replace
131	[BUG]  [BUGGY]  if(looksLikeOption(arg,  true))  {  [CE]  illegal  start  of  expression  [FE]              OptionException      [CONTEXT]        for  (final  Iterator  iter  =  tailMap.values().iterator();  iter.hasNext();)  {  final  Option  option  =  (Option)  iter.next();  if  (option.canProcess(commandLine,  arg))  {  return  true;  }  }      [BUGGY]  if(looksLikeOption(arg,  true))  {  [BUGGY]      return  false;  }  if  (anonymous.size()  >  0)  {  return  true;  }  return  false;  }  [CLASS]  GroupImpl  [METHOD]  canProcess  [RETURN_TYPE]  boolean  WriteableCommandLine  commandLine  String  arg  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  SortedMap  newOptionMap  optionMap  WriteableCommandLine  commandLine  Iterator  iter  List  anonymous  newAnonymous  options  Option  option  String  arg  description  name  Map  tailMap  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	139	139	1	replace	if(looksLikeOption(arg,  true))  {	  if(looksLikeOption(commandLine,    true))    {    	non-compiled	[CE]  illegal  start  of  expression	31	None	replace
132	[BUG]  [BUGGY]  if(hasProcessOption(commandLine,  true))  {  [CE]  illegal  start  of  expression  [FE]                OptionException      [CONTEXT]        for  (final  Iterator  iter  =  tailMap.values().iterator();  iter.hasNext();)  {  final  Option  option  =  (Option)  iter.next();  if  (option.canProcess(commandLine,  arg))  {  return  true;  }  }      [BUGGY]  if(hasProcessOption(commandLine,  true))  {  [BUGGY]      return  false;  }  if  (anonymous.size()  >  0)  {  return  true;  }  return  false;  }  [CLASS]  GroupImpl  [METHOD]  canProcess  [RETURN_TYPE]  boolean  WriteableCommandLine  commandLine  String  arg  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  SortedMap  newOptionMap  optionMap  WriteableCommandLine  commandLine  Iterator  iter  List  anonymous  newAnonymous  options  Option  option  String  arg  description  name  Map  tailMap  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	139	139	1	replace	if(hasProcessOption(commandLine,  true))  {	  if(looksLikeOption(commandLine,    true))    {    	non-compiled	[CE]  illegal  start  of  expression	31	None	replace
133	[BUG]  [BUGGY]  Option  option  =  option.createOption(description);  [CE]  illegal  start  of  expression  [FE]              OptionException      [CONTEXT]        for  (final  Iterator  iter  =  tailMap.values().iterator();  iter.hasNext();)  {  final  Option  option  =  (Option)  iter.next();  if  (option.canProcess(commandLine,  arg))  {  return  true;  }  }      [BUGGY]  Option  option  =  option.createOption(description);  [BUGGY]      if  (looksLikeOption(commandLine,  arg))  {  return  false;  }  if  (anonymous.size()  >  0)  {  return  true;  }  return  false;  }  [CLASS]  GroupImpl  [METHOD]  canProcess  [RETURN_TYPE]  boolean  WriteableCommandLine  commandLine  String  arg  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  SortedMap  newOptionMap  optionMap  WriteableCommandLine  commandLine  Iterator  iter  List  anonymous  newAnonymous  options  Option  option  String  arg  description  name  Map  tailMap  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	139	139	1	replace	Option  option  =  option.createOption(description);	  Option    option    =    option.createOption(commandLine);    	non-compiled	[CE]  illegal  start  of  expression	12	None	replace
134	[BUG]  [BUGGY]  Set  <  Option>  newAnonymous  =  options.values().iterator();  [CE]  illegal  start  of  expression  [FE]                OptionException      [CONTEXT]        for  (final  Iterator  iter  =  tailMap.values().iterator();  iter.hasNext();)  {  final  Option  option  =  (Option)  iter.next();  if  (option.canProcess(commandLine,  arg))  {  return  true;  }  }      [BUGGY]  Set  <  Option>  newAnonymous  =  options.values().iterator();  [BUGGY]      if  (looksLikeOption(commandLine,  arg))  {  return  false;  }  if  (anonymous.size()  >  0)  {  return  true;  }  return  false;  }  [CLASS]  GroupImpl  [METHOD]  canProcess  [RETURN_TYPE]  boolean  WriteableCommandLine  commandLine  String  arg  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  SortedMap  newOptionMap  optionMap  WriteableCommandLine  commandLine  Iterator  iter  List  anonymous  newAnonymous  options  Option  option  String  arg  description  name  Map  tailMap  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	139	139	1	replace	Set  <  Option>  newAnonymous  =  options.values().iterator();	  Set    <    Option>    newAnonymous    =    optionMap.values().iterator();    	non-compiled	[CE]  illegal  start  of  expression	48	None	replace
135	[BUG]  [BUGGY]  Set  <  Option>  newAnonymous  =  tailMap.values().iterator();  [CE]  illegal  start  of  expression  [FE]                  OptionException      [CONTEXT]        for  (final  Iterator  iter  =  tailMap.values().iterator();  iter.hasNext();)  {  final  Option  option  =  (Option)  iter.next();  if  (option.canProcess(commandLine,  arg))  {  return  true;  }  }      [BUGGY]  Set  <  Option>  newAnonymous  =  tailMap.values().iterator();  [BUGGY]      if  (looksLikeOption(commandLine,  arg))  {  return  false;  }  if  (anonymous.size()  >  0)  {  return  true;  }  return  false;  }  [CLASS]  GroupImpl  [METHOD]  canProcess  [RETURN_TYPE]  boolean  WriteableCommandLine  commandLine  String  arg  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  SortedMap  newOptionMap  optionMap  WriteableCommandLine  commandLine  Iterator  iter  List  anonymous  newAnonymous  options  Option  option  String  arg  description  name  Map  tailMap  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	139	139	1	replace	Set  <  Option>  newAnonymous  =  tailMap.values().iterator();	  Set    <    Option>    newAnonymous    =    optionMap.values().iterator();    	non-compiled	[CE]  illegal  start  of  expression	48	None	replace
136	[BUG]  [BUGGY]  if(!canProcessOption(commandLine,  arg,  description))  {  [CE]  illegal  start  of  expression  [FE]            OptionException      [CONTEXT]        for  (final  Iterator  iter  =  tailMap.values().iterator();  iter.hasNext();)  {  final  Option  option  =  (Option)  iter.next();  if  (option.canProcess(commandLine,  arg))  {  return  true;  }  }      [BUGGY]  if(!canProcessOption(commandLine,  arg,  description))  {  [BUGGY]      return  false;  }  if  (anonymous.size()  >  0)  {  return  true;  }  return  false;  }  [CLASS]  GroupImpl  [METHOD]  canProcess  [RETURN_TYPE]  boolean  WriteableCommandLine  commandLine  String  arg  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  SortedMap  newOptionMap  optionMap  WriteableCommandLine  commandLine  Iterator  iter  List  anonymous  newAnonymous  options  Option  option  String  arg  description  name  Map  tailMap  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	139	139	1	replace	if(!canProcessOption(commandLine,  arg,  description))  {	  if(!canProcessOption(commandLine,    arg))    {    	non-compiled	[CE]  illegal  start  of  expression	27	None	replace
137	[BUG]  [BUGGY]  if(!canProcessOption(option,  commandLine))  {  [CE]  illegal  start  of  expression  [FE]              OptionException      [CONTEXT]        for  (final  Iterator  iter  =  tailMap.values().iterator();  iter.hasNext();)  {  final  Option  option  =  (Option)  iter.next();  if  (option.canProcess(commandLine,  arg))  {  return  true;  }  }      [BUGGY]  if(!canProcessOption(option,  commandLine))  {  [BUGGY]      return  false;  }  if  (anonymous.size()  >  0)  {  return  true;  }  return  false;  }  [CLASS]  GroupImpl  [METHOD]  canProcess  [RETURN_TYPE]  boolean  WriteableCommandLine  commandLine  String  arg  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  SortedMap  newOptionMap  optionMap  WriteableCommandLine  commandLine  Iterator  iter  List  anonymous  newAnonymous  options  Option  option  String  arg  description  name  Map  tailMap  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	139	139	1	replace	if(!canProcessOption(option,  commandLine))  {	  if(!canProcessOption(commandLine,    arg))    {    	non-compiled	[CE]  illegal  start  of  expression	27	None	replace
138	[BUG]  [BUGGY]  Option  option  =  option.getOption(arg);  if(option!=  null)  {  return  true;  }  [CE]  illegal  start  of  expression  [FE]                      OptionException      [CONTEXT]        for  (final  Iterator  iter  =  tailMap.values().iterator();  iter.hasNext();)  {  final  Option  option  =  (Option)  iter.next();  if  (option.canProcess(commandLine,  arg))  {  return  true;  }  }      [BUGGY]  Option  option  =  option.getOption(arg);  if(option!=  null)  {  return  true;  }  [BUGGY]      return  false;  }  if  (anonymous.size()  >  0)  {  return  true;  }  return  false;  }  [CLASS]  GroupImpl  [METHOD]  canProcess  [RETURN_TYPE]  boolean  WriteableCommandLine  commandLine  String  arg  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  SortedMap  newOptionMap  optionMap  WriteableCommandLine  commandLine  Iterator  iter  List  anonymous  newAnonymous  options  Option  option  String  arg  description  name  Map  tailMap  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	139	139	1	replace	Option  option  =  option.getOption(arg);  if(option!=  null)  {  return  true;  }	  Option    option    =    option.getOption(commandLine);    if(option!=    null)    {    return    true;    }    	non-compiled	[CE]  illegal  start  of  expression	74	None	replace
139	[BUG]  [BUGGY]  Option  option  =  optionMap.getOption(commandLine);  if(option!=  null)  {  return  true;  }  [CE]  illegal  start  of  expression  [FE]                        OptionException      [CONTEXT]        for  (final  Iterator  iter  =  tailMap.values().iterator();  iter.hasNext();)  {  final  Option  option  =  (Option)  iter.next();  if  (option.canProcess(commandLine,  arg))  {  return  true;  }  }      [BUGGY]  Option  option  =  optionMap.getOption(commandLine);  if(option!=  null)  {  return  true;  }  [BUGGY]      return  false;  }  if  (anonymous.size()  >  0)  {  return  true;  }  return  false;  }  [CLASS]  GroupImpl  [METHOD]  canProcess  [RETURN_TYPE]  boolean  WriteableCommandLine  commandLine  String  arg  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  SortedMap  newOptionMap  optionMap  WriteableCommandLine  commandLine  Iterator  iter  List  anonymous  newAnonymous  options  Option  option  String  arg  description  name  Map  tailMap  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	139	139	1	replace	Option  option  =  optionMap.getOption(commandLine);  if(option!=  null)  {  return  true;  }	  Option    option    =    option.getOption(commandLine);    if(option!=    null)    {    return    true;    }    	non-compiled	[CE]  illegal  start  of  expression	74	None	replace
140	[BUG]  [BUGGY]  List  <  Option>  newAnonymous  =(List  <  Option>)tailMap.get(commandLine);  [CE]  illegal  start  of  expression  [FE]                      OptionException      [CONTEXT]        for  (final  Iterator  iter  =  tailMap.values().iterator();  iter.hasNext();)  {  final  Option  option  =  (Option)  iter.next();  if  (option.canProcess(commandLine,  arg))  {  return  true;  }  }      [BUGGY]  List  <  Option>  newAnonymous  =(List  <  Option>)tailMap.get(commandLine);  [BUGGY]      if  (looksLikeOption(commandLine,  arg))  {  return  false;  }  if  (anonymous.size()  >  0)  {  return  true;  }  return  false;  }  [CLASS]  GroupImpl  [METHOD]  canProcess  [RETURN_TYPE]  boolean  WriteableCommandLine  commandLine  String  arg  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  SortedMap  newOptionMap  optionMap  WriteableCommandLine  commandLine  Iterator  iter  List  anonymous  newAnonymous  options  Option  option  String  arg  description  name  Map  tailMap  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	139	139	1	replace	List  <  Option>  newAnonymous  =(List  <  Option>)tailMap.get(commandLine);	  List    <    Option>    newAnonymous    =(List    <    Option>)tailMap.get(arg);    	non-compiled	[CE]  illegal  start  of  expression	44	None	replace
141	[BUG]  [BUGGY]  List  <  Option>  newAnonymous  =(List  <  Option>)tailMap.get(option);  [CE]  illegal  start  of  expression  [FE]                        OptionException      [CONTEXT]        for  (final  Iterator  iter  =  tailMap.values().iterator();  iter.hasNext();)  {  final  Option  option  =  (Option)  iter.next();  if  (option.canProcess(commandLine,  arg))  {  return  true;  }  }      [BUGGY]  List  <  Option>  newAnonymous  =(List  <  Option>)tailMap.get(option);  [BUGGY]      if  (looksLikeOption(commandLine,  arg))  {  return  false;  }  if  (anonymous.size()  >  0)  {  return  true;  }  return  false;  }  [CLASS]  GroupImpl  [METHOD]  canProcess  [RETURN_TYPE]  boolean  WriteableCommandLine  commandLine  String  arg  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  SortedMap  newOptionMap  optionMap  WriteableCommandLine  commandLine  Iterator  iter  List  anonymous  newAnonymous  options  Option  option  String  arg  description  name  Map  tailMap  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	139	139	1	replace	List  <  Option>  newAnonymous  =(List  <  Option>)tailMap.get(option);	  List    <    Option>    newAnonymous    =(List    <    Option>)tailMap.get(arg);    	non-compiled	[CE]  illegal  start  of  expression	44	None	replace
142	[BUG]  [BUGGY]  List  <  Option>  newAnonymous  =(List  <  Option>)this.tailMap.get(arg);  [CE]  illegal  start  of  expression  [FE]                          OptionException      [CONTEXT]        for  (final  Iterator  iter  =  tailMap.values().iterator();  iter.hasNext();)  {  final  Option  option  =  (Option)  iter.next();  if  (option.canProcess(commandLine,  arg))  {  return  true;  }  }      [BUGGY]  List  <  Option>  newAnonymous  =(List  <  Option>)this.tailMap.get(arg);  [BUGGY]      if  (looksLikeOption(commandLine,  arg))  {  return  false;  }  if  (anonymous.size()  >  0)  {  return  true;  }  return  false;  }  [CLASS]  GroupImpl  [METHOD]  canProcess  [RETURN_TYPE]  boolean  WriteableCommandLine  commandLine  String  arg  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  SortedMap  newOptionMap  optionMap  WriteableCommandLine  commandLine  Iterator  iter  List  anonymous  newAnonymous  options  Option  option  String  arg  description  name  Map  tailMap  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	139	139	1	replace	List  <  Option>  newAnonymous  =(List  <  Option>)this.tailMap.get(arg);	  List    <    Option>    newAnonymous    =(List    <    Option>)tailMap.get(arg);    	non-compiled	[CE]  illegal  start  of  expression	44	None	replace
143	[BUG]  [BUGGY]  List  <  Option>  newAnonymous  =(List  <  Option>)commandLine.getValues().iterator();  [CE]  illegal  start  of  expression  [FE]                OptionException      [CONTEXT]        for  (final  Iterator  iter  =  tailMap.values().iterator();  iter.hasNext();)  {  final  Option  option  =  (Option)  iter.next();  if  (option.canProcess(commandLine,  arg))  {  return  true;  }  }      [BUGGY]  List  <  Option>  newAnonymous  =(List  <  Option>)commandLine.getValues().iterator();  [BUGGY]      if  (looksLikeOption(commandLine,  arg))  {  return  false;  }  if  (anonymous.size()  >  0)  {  return  true;  }  return  false;  }  [CLASS]  GroupImpl  [METHOD]  canProcess  [RETURN_TYPE]  boolean  WriteableCommandLine  commandLine  String  arg  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  SortedMap  newOptionMap  optionMap  WriteableCommandLine  commandLine  Iterator  iter  List  anonymous  newAnonymous  options  Option  option  String  arg  description  name  Map  tailMap  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	139	139	1	replace	List  <  Option>  newAnonymous  =(List  <  Option>)commandLine.getValues().iterator();	  List    <    Option>    newAnonymous    =(List    <    Option>)commandLine.values().iterator();    	non-compiled	[CE]  illegal  start  of  expression	18	None	replace
144	[BUG]  [BUGGY]  List  <  Option>  newAnonymous  =(List  <  Option>)commandLine.keySet().iterator();  [CE]  illegal  start  of  expression  [FE]                  OptionException      [CONTEXT]        for  (final  Iterator  iter  =  tailMap.values().iterator();  iter.hasNext();)  {  final  Option  option  =  (Option)  iter.next();  if  (option.canProcess(commandLine,  arg))  {  return  true;  }  }      [BUGGY]  List  <  Option>  newAnonymous  =(List  <  Option>)commandLine.keySet().iterator();  [BUGGY]      if  (looksLikeOption(commandLine,  arg))  {  return  false;  }  if  (anonymous.size()  >  0)  {  return  true;  }  return  false;  }  [CLASS]  GroupImpl  [METHOD]  canProcess  [RETURN_TYPE]  boolean  WriteableCommandLine  commandLine  String  arg  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  SortedMap  newOptionMap  optionMap  WriteableCommandLine  commandLine  Iterator  iter  List  anonymous  newAnonymous  options  Option  option  String  arg  description  name  Map  tailMap  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	139	139	1	replace	List  <  Option>  newAnonymous  =(List  <  Option>)commandLine.keySet().iterator();	  List    <    Option>    newAnonymous    =(List    <    Option>)commandLine.values().iterator();    	non-compiled	[CE]  illegal  start  of  expression	18	None	replace
145	[BUG]  [BUGGY]  if(hasArg()  ||  isLikeOption(commandLine,  arg))  {  [CE]  illegal  start  of  expression  [FE]              OptionException      [CONTEXT]        for  (final  Iterator  iter  =  tailMap.values().iterator();  iter.hasNext();)  {  final  Option  option  =  (Option)  iter.next();  if  (option.canProcess(commandLine,  arg))  {  return  true;  }  }      [BUGGY]  if(hasArg()  ||  isLikeOption(commandLine,  arg))  {  [BUGGY]      return  false;  }  if  (anonymous.size()  >  0)  {  return  true;  }  return  false;  }  [CLASS]  GroupImpl  [METHOD]  canProcess  [RETURN_TYPE]  boolean  WriteableCommandLine  commandLine  String  arg  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  SortedMap  newOptionMap  optionMap  WriteableCommandLine  commandLine  Iterator  iter  List  anonymous  newAnonymous  options  Option  option  String  arg  description  name  Map  tailMap  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	139	139	1	replace	if(hasArg()  ||  isLikeOption(commandLine,  arg))  {	  if(hasArg()    &&    isLikeOption(commandLine,    arg))    {    	non-compiled	[CE]  illegal  start  of  expression	80	None	replace
146	[BUG]  [BUGGY]  if(!hasArg()  &&  isLikeOption(commandLine,  arg))  {  [CE]  illegal  start  of  expression  [FE]                OptionException      [CONTEXT]        for  (final  Iterator  iter  =  tailMap.values().iterator();  iter.hasNext();)  {  final  Option  option  =  (Option)  iter.next();  if  (option.canProcess(commandLine,  arg))  {  return  true;  }  }      [BUGGY]  if(!hasArg()  &&  isLikeOption(commandLine,  arg))  {  [BUGGY]      return  false;  }  if  (anonymous.size()  >  0)  {  return  true;  }  return  false;  }  [CLASS]  GroupImpl  [METHOD]  canProcess  [RETURN_TYPE]  boolean  WriteableCommandLine  commandLine  String  arg  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  SortedMap  newOptionMap  optionMap  WriteableCommandLine  commandLine  Iterator  iter  List  anonymous  newAnonymous  options  Option  option  String  arg  description  name  Map  tailMap  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	139	139	1	replace	if(!hasArg()  &&  isLikeOption(commandLine,  arg))  {	  if(hasArg()    &&    isLikeOption(commandLine,    arg))    {    	non-compiled	[CE]  illegal  start  of  expression	80	None	replace
147	[BUG]  [BUGGY]  if(hasArg()  &&  isLikeOption(commandLine,  option))  {  [CE]  illegal  start  of  expression  [FE]                  OptionException      [CONTEXT]        for  (final  Iterator  iter  =  tailMap.values().iterator();  iter.hasNext();)  {  final  Option  option  =  (Option)  iter.next();  if  (option.canProcess(commandLine,  arg))  {  return  true;  }  }      [BUGGY]  if(hasArg()  &&  isLikeOption(commandLine,  option))  {  [BUGGY]      return  false;  }  if  (anonymous.size()  >  0)  {  return  true;  }  return  false;  }  [CLASS]  GroupImpl  [METHOD]  canProcess  [RETURN_TYPE]  boolean  WriteableCommandLine  commandLine  String  arg  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  SortedMap  newOptionMap  optionMap  WriteableCommandLine  commandLine  Iterator  iter  List  anonymous  newAnonymous  options  Option  option  String  arg  description  name  Map  tailMap  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	139	139	1	replace	if(hasArg()  &&  isLikeOption(commandLine,  option))  {	  if(hasArg()    &&    isLikeOption(commandLine,    arg))    {    	non-compiled	[CE]  illegal  start  of  expression	80	None	replace
148	[BUG]  [BUGGY]  List  <  Option>  newAnonymous  =(List  <  Option>)commandLine.get(option);  [CE]  illegal  start  of  expression  [FE]                          OptionException      [CONTEXT]        for  (final  Iterator  iter  =  tailMap.values().iterator();  iter.hasNext();)  {  final  Option  option  =  (Option)  iter.next();  if  (option.canProcess(commandLine,  arg))  {  return  true;  }  }      [BUGGY]  List  <  Option>  newAnonymous  =(List  <  Option>)commandLine.get(option);  [BUGGY]      if  (looksLikeOption(commandLine,  arg))  {  return  false;  }  if  (anonymous.size()  >  0)  {  return  true;  }  return  false;  }  [CLASS]  GroupImpl  [METHOD]  canProcess  [RETURN_TYPE]  boolean  WriteableCommandLine  commandLine  String  arg  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  SortedMap  newOptionMap  optionMap  WriteableCommandLine  commandLine  Iterator  iter  List  anonymous  newAnonymous  options  Option  option  String  arg  description  name  Map  tailMap  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	139	139	1	replace	List  <  Option>  newAnonymous  =(List  <  Option>)commandLine.get(option);	  List    <    Option>    newAnonymous    =(List    <    Option>)optionMap.get(commandLine);    	non-compiled	[CE]  illegal  start  of  expression	46	None	replace
149	[BUG]  [BUGGY]  List  <  Option>  newAnonymous  =(List  <  Option>)commandLines.get(option);  [CE]  illegal  start  of  expression  [FE]                            OptionException      [CONTEXT]        for  (final  Iterator  iter  =  tailMap.values().iterator();  iter.hasNext();)  {  final  Option  option  =  (Option)  iter.next();  if  (option.canProcess(commandLine,  arg))  {  return  true;  }  }      [BUGGY]  List  <  Option>  newAnonymous  =(List  <  Option>)commandLines.get(option);  [BUGGY]      if  (looksLikeOption(commandLine,  arg))  {  return  false;  }  if  (anonymous.size()  >  0)  {  return  true;  }  return  false;  }  [CLASS]  GroupImpl  [METHOD]  canProcess  [RETURN_TYPE]  boolean  WriteableCommandLine  commandLine  String  arg  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  SortedMap  newOptionMap  optionMap  WriteableCommandLine  commandLine  Iterator  iter  List  anonymous  newAnonymous  options  Option  option  String  arg  description  name  Map  tailMap  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	139	139	1	replace	List  <  Option>  newAnonymous  =(List  <  Option>)commandLines.get(option);	  List    <    Option>    newAnonymous    =(List    <    Option>)optionMap.get(commandLine);    	non-compiled	[CE]  illegal  start  of  expression	46	None	replace
150	[BUG]  [BUGGY]  Option  option  =(Option)optionMap.getValue();  [CE]  illegal  start  of  expression  [FE]                OptionException      [CONTEXT]        for  (final  Iterator  iter  =  tailMap.values().iterator();  iter.hasNext();)  {  final  Option  option  =  (Option)  iter.next();  if  (option.canProcess(commandLine,  arg))  {  return  true;  }  }      [BUGGY]  Option  option  =(Option)optionMap.getValue();  [BUGGY]      if  (looksLikeOption(commandLine,  arg))  {  return  false;  }  if  (anonymous.size()  >  0)  {  return  true;  }  return  false;  }  [CLASS]  GroupImpl  [METHOD]  canProcess  [RETURN_TYPE]  boolean  WriteableCommandLine  commandLine  String  arg  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  SortedMap  newOptionMap  optionMap  WriteableCommandLine  commandLine  Iterator  iter  List  anonymous  newAnonymous  options  Option  option  String  arg  description  name  Map  tailMap  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	139	139	1	replace	Option  option  =(Option)optionMap.getValue();	  Option    option    =(Option)iter.getValue();    	non-compiled	[CE]  illegal  start  of  expression	64	None	replace
151	[BUG]  [BUGGY]  List  <  Option>  newAnonymous  =(List  <  Option>)this.commandLine.get(arg);  [CE]  illegal  start  of  expression  [FE]                        OptionException      [CONTEXT]        for  (final  Iterator  iter  =  tailMap.values().iterator();  iter.hasNext();)  {  final  Option  option  =  (Option)  iter.next();  if  (option.canProcess(commandLine,  arg))  {  return  true;  }  }      [BUGGY]  List  <  Option>  newAnonymous  =(List  <  Option>)this.commandLine.get(arg);  [BUGGY]      if  (looksLikeOption(commandLine,  arg))  {  return  false;  }  if  (anonymous.size()  >  0)  {  return  true;  }  return  false;  }  [CLASS]  GroupImpl  [METHOD]  canProcess  [RETURN_TYPE]  boolean  WriteableCommandLine  commandLine  String  arg  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  SortedMap  newOptionMap  optionMap  WriteableCommandLine  commandLine  Iterator  iter  List  anonymous  newAnonymous  options  Option  option  String  arg  description  name  Map  tailMap  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	139	139	1	replace	List  <  Option>  newAnonymous  =(List  <  Option>)this.commandLine.get(arg);	  List    <    Option>    newAnonymous    =(List    <    Option>)commandLine.get(arg);    	non-compiled	[CE]  illegal  start  of  expression	45	None	replace
152	[BUG]  [BUGGY]  List  <  Option>  newAnonymous  =(List  <  Option>)commandLine.get(arg  +  1);  [CE]  illegal  start  of  expression  [FE]                          OptionException      [CONTEXT]        for  (final  Iterator  iter  =  tailMap.values().iterator();  iter.hasNext();)  {  final  Option  option  =  (Option)  iter.next();  if  (option.canProcess(commandLine,  arg))  {  return  true;  }  }      [BUGGY]  List  <  Option>  newAnonymous  =(List  <  Option>)commandLine.get(arg  +  1);  [BUGGY]      if  (looksLikeOption(commandLine,  arg))  {  return  false;  }  if  (anonymous.size()  >  0)  {  return  true;  }  return  false;  }  [CLASS]  GroupImpl  [METHOD]  canProcess  [RETURN_TYPE]  boolean  WriteableCommandLine  commandLine  String  arg  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  SortedMap  newOptionMap  optionMap  WriteableCommandLine  commandLine  Iterator  iter  List  anonymous  newAnonymous  options  Option  option  String  arg  description  name  Map  tailMap  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	139	139	1	replace	List  <  Option>  newAnonymous  =(List  <  Option>)commandLine.get(arg  +  1);	  List    <    Option>    newAnonymous    =(List    <    Option>)commandLine.get(arg);    	non-compiled	[CE]  illegal  start  of  expression	45	None	replace
153	[BUG]  [BUGGY]  if(looksLikeOption(commandLine,  false)&&  option.canProcess(commandLine,  arg))  {  [CE]  illegal  start  of  expression  [FE]                  OptionException      [CONTEXT]        for  (final  Iterator  iter  =  tailMap.values().iterator();  iter.hasNext();)  {  final  Option  option  =  (Option)  iter.next();  if  (option.canProcess(commandLine,  arg))  {  return  true;  }  }      [BUGGY]  if(looksLikeOption(commandLine,  false)&&  option.canProcess(commandLine,  arg))  {  [BUGGY]      return  false;  }  if  (anonymous.size()  >  0)  {  return  true;  }  return  false;  }  [CLASS]  GroupImpl  [METHOD]  canProcess  [RETURN_TYPE]  boolean  WriteableCommandLine  commandLine  String  arg  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  SortedMap  newOptionMap  optionMap  WriteableCommandLine  commandLine  Iterator  iter  List  anonymous  newAnonymous  options  Option  option  String  arg  description  name  Map  tailMap  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	139	139	1	replace	if(looksLikeOption(commandLine,  false)&&  option.canProcess(commandLine,  arg))  {	  if(looksLikeOption(commandLine,    null)&&    option.canProcess(commandLine,    arg))    {    	non-compiled	[CE]  illegal  start  of  expression	1	None	replace
154	[BUG]  [BUGGY]  if(looksLikeOption(arg,  null)&&  option.canProcess(commandLine,  arg))  {  [CE]  illegal  start  of  expression  [FE]                    OptionException      [CONTEXT]        for  (final  Iterator  iter  =  tailMap.values().iterator();  iter.hasNext();)  {  final  Option  option  =  (Option)  iter.next();  if  (option.canProcess(commandLine,  arg))  {  return  true;  }  }      [BUGGY]  if(looksLikeOption(arg,  null)&&  option.canProcess(commandLine,  arg))  {  [BUGGY]      return  false;  }  if  (anonymous.size()  >  0)  {  return  true;  }  return  false;  }  [CLASS]  GroupImpl  [METHOD]  canProcess  [RETURN_TYPE]  boolean  WriteableCommandLine  commandLine  String  arg  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  SortedMap  newOptionMap  optionMap  WriteableCommandLine  commandLine  Iterator  iter  List  anonymous  newAnonymous  options  Option  option  String  arg  description  name  Map  tailMap  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	139	139	1	replace	if(looksLikeOption(arg,  null)&&  option.canProcess(commandLine,  arg))  {	  if(looksLikeOption(commandLine,    null)&&    option.canProcess(commandLine,    arg))    {    	non-compiled	[CE]  illegal  start  of  expression	1	None	replace
155	[BUG]  [BUGGY]  if(option.canProcess(commandLine,  null)||  options.canProcess(commandLine,  arg))  {  [CE]  illegal  start  of  expression  [FE]                    OptionException      [CONTEXT]        for  (final  Iterator  iter  =  tailMap.values().iterator();  iter.hasNext();)  {  final  Option  option  =  (Option)  iter.next();  if  (option.canProcess(commandLine,  arg))  {  return  true;  }  }      [BUGGY]  if(option.canProcess(commandLine,  null)||  options.canProcess(commandLine,  arg))  {  [BUGGY]      return  false;  }  if  (anonymous.size()  >  0)  {  return  true;  }  return  false;  }  [CLASS]  GroupImpl  [METHOD]  canProcess  [RETURN_TYPE]  boolean  WriteableCommandLine  commandLine  String  arg  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  SortedMap  newOptionMap  optionMap  WriteableCommandLine  commandLine  Iterator  iter  List  anonymous  newAnonymous  options  Option  option  String  arg  description  name  Map  tailMap  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	139	139	1	replace	if(option.canProcess(commandLine,  null)||  options.canProcess(commandLine,  arg))  {	  if(looksLikeOption(commandLine,    null)||    options.canProcess(commandLine,    arg))    {    	non-compiled	[CE]  illegal  start  of  expression	72	None	replace
156	[BUG]  [BUGGY]  if(looksLikeOption(arg,  null)||  options.canProcess(commandLine,  arg))  {  [CE]  illegal  start  of  expression  [FE]                      OptionException      [CONTEXT]        for  (final  Iterator  iter  =  tailMap.values().iterator();  iter.hasNext();)  {  final  Option  option  =  (Option)  iter.next();  if  (option.canProcess(commandLine,  arg))  {  return  true;  }  }      [BUGGY]  if(looksLikeOption(arg,  null)||  options.canProcess(commandLine,  arg))  {  [BUGGY]      return  false;  }  if  (anonymous.size()  >  0)  {  return  true;  }  return  false;  }  [CLASS]  GroupImpl  [METHOD]  canProcess  [RETURN_TYPE]  boolean  WriteableCommandLine  commandLine  String  arg  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  SortedMap  newOptionMap  optionMap  WriteableCommandLine  commandLine  Iterator  iter  List  anonymous  newAnonymous  options  Option  option  String  arg  description  name  Map  tailMap  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	139	139	1	replace	if(looksLikeOption(arg,  null)||  options.canProcess(commandLine,  arg))  {	  if(looksLikeOption(commandLine,    null)||    options.canProcess(commandLine,    arg))    {    	non-compiled	[CE]  illegal  start  of  expression	72	None	replace
157	[BUG]  [BUGGY]  List  <  Option>  newAnonymous  =(List  <  Option>)this.commandMap.values().iterator();  [CE]  illegal  start  of  expression  [FE]            OptionException      [CONTEXT]        for  (final  Iterator  iter  =  tailMap.values().iterator();  iter.hasNext();)  {  final  Option  option  =  (Option)  iter.next();  if  (option.canProcess(commandLine,  arg))  {  return  true;  }  }      [BUGGY]  List  <  Option>  newAnonymous  =(List  <  Option>)this.commandMap.values().iterator();  [BUGGY]      if  (looksLikeOption(commandLine,  arg))  {  return  false;  }  if  (anonymous.size()  >  0)  {  return  true;  }  return  false;  }  [CLASS]  GroupImpl  [METHOD]  canProcess  [RETURN_TYPE]  boolean  WriteableCommandLine  commandLine  String  arg  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  SortedMap  newOptionMap  optionMap  WriteableCommandLine  commandLine  Iterator  iter  List  anonymous  newAnonymous  options  Option  option  String  arg  description  name  Map  tailMap  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	139	139	1	replace	List  <  Option>  newAnonymous  =(List  <  Option>)this.commandMap.values().iterator();	  List    <    Option>    newAnonymous    =(List    <    Option>)commandMap.values().iterator();    	non-compiled	[CE]  illegal  start  of  expression	75	None	replace
158	[BUG]  [BUGGY]  Set  <  Option>  newAnonymous  =(Set  <  Option>)commandMap.values().iterator();  [CE]  illegal  start  of  expression  [FE]              OptionException      [CONTEXT]        for  (final  Iterator  iter  =  tailMap.values().iterator();  iter.hasNext();)  {  final  Option  option  =  (Option)  iter.next();  if  (option.canProcess(commandLine,  arg))  {  return  true;  }  }      [BUGGY]  Set  <  Option>  newAnonymous  =(Set  <  Option>)commandMap.values().iterator();  [BUGGY]      if  (looksLikeOption(commandLine,  arg))  {  return  false;  }  if  (anonymous.size()  >  0)  {  return  true;  }  return  false;  }  [CLASS]  GroupImpl  [METHOD]  canProcess  [RETURN_TYPE]  boolean  WriteableCommandLine  commandLine  String  arg  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  SortedMap  newOptionMap  optionMap  WriteableCommandLine  commandLine  Iterator  iter  List  anonymous  newAnonymous  options  Option  option  String  arg  description  name  Map  tailMap  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	139	139	1	replace	Set  <  Option>  newAnonymous  =(Set  <  Option>)commandMap.values().iterator();	  List    <    Option>    newAnonymous    =(List    <    Option>)commandMap.values().iterator();    	non-compiled	[CE]  illegal  start  of  expression	75	None	replace
159	[BUG]  [BUGGY]  Set  <  Option>  newAnonymous  =(Set  <  Option>)this.optionMap.values().iterator();  [CE]  illegal  start  of  expression  [FE]              OptionException      [CONTEXT]        for  (final  Iterator  iter  =  tailMap.values().iterator();  iter.hasNext();)  {  final  Option  option  =  (Option)  iter.next();  if  (option.canProcess(commandLine,  arg))  {  return  true;  }  }      [BUGGY]  Set  <  Option>  newAnonymous  =(Set  <  Option>)this.optionMap.values().iterator();  [BUGGY]      if  (looksLikeOption(commandLine,  arg))  {  return  false;  }  if  (anonymous.size()  >  0)  {  return  true;  }  return  false;  }  [CLASS]  GroupImpl  [METHOD]  canProcess  [RETURN_TYPE]  boolean  WriteableCommandLine  commandLine  String  arg  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  SortedMap  newOptionMap  optionMap  WriteableCommandLine  commandLine  Iterator  iter  List  anonymous  newAnonymous  options  Option  option  String  arg  description  name  Map  tailMap  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	139	139	1	replace	Set  <  Option>  newAnonymous  =(Set  <  Option>)this.optionMap.values().iterator();	  List    <    Option>    newAnonymous    =(List    <    Option>)this.optionMap.values().iterator();    	non-compiled	[CE]  illegal  start  of  expression	17	None	replace
160	[BUG]  [BUGGY]  Option  option  =  option.getOption(commandLine,  arg,  description);  [CE]  illegal  start  of  expression  [FE]                    OptionException      [CONTEXT]        for  (final  Iterator  iter  =  tailMap.values().iterator();  iter.hasNext();)  {  final  Option  option  =  (Option)  iter.next();  if  (option.canProcess(commandLine,  arg))  {  return  true;  }  }      [BUGGY]  Option  option  =  option.getOption(commandLine,  arg,  description);  [BUGGY]      if  (looksLikeOption(commandLine,  arg))  {  return  false;  }  if  (anonymous.size()  >  0)  {  return  true;  }  return  false;  }  [CLASS]  GroupImpl  [METHOD]  canProcess  [RETURN_TYPE]  boolean  WriteableCommandLine  commandLine  String  arg  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  SortedMap  newOptionMap  optionMap  WriteableCommandLine  commandLine  Iterator  iter  List  anonymous  newAnonymous  options  Option  option  String  arg  description  name  Map  tailMap  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	139	139	1	replace	Option  option  =  option.getOption(commandLine,  arg,  description);	  Option    option    =    option.getOption(commandLine,    arg);    	non-compiled	[CE]  illegal  start  of  expression	40	None	replace
161	[BUG]  [BUGGY]  if(!hasProcessOption(arg,  commandLine))  {  [CE]  illegal  start  of  expression  [FE]            OptionException      [CONTEXT]        for  (final  Iterator  iter  =  tailMap.values().iterator();  iter.hasNext();)  {  final  Option  option  =  (Option)  iter.next();  if  (option.canProcess(commandLine,  arg))  {  return  true;  }  }      [BUGGY]  if(!hasProcessOption(arg,  commandLine))  {  [BUGGY]      return  false;  }  if  (anonymous.size()  >  0)  {  return  true;  }  return  false;  }  [CLASS]  GroupImpl  [METHOD]  canProcess  [RETURN_TYPE]  boolean  WriteableCommandLine  commandLine  String  arg  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  SortedMap  newOptionMap  optionMap  WriteableCommandLine  commandLine  Iterator  iter  List  anonymous  newAnonymous  options  Option  option  String  arg  description  name  Map  tailMap  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	139	139	1	replace	if(!hasProcessOption(arg,  commandLine))  {	  if(!hasProcessOption(commandLine,    arg))    {    	non-compiled	[CE]  illegal  start  of  expression	41	None	replace
162	[BUG]  [BUGGY]  if(!hasProcessOption(option,  arg))  {  [CE]  illegal  start  of  expression  [FE]              OptionException      [CONTEXT]        for  (final  Iterator  iter  =  tailMap.values().iterator();  iter.hasNext();)  {  final  Option  option  =  (Option)  iter.next();  if  (option.canProcess(commandLine,  arg))  {  return  true;  }  }      [BUGGY]  if(!hasProcessOption(option,  arg))  {  [BUGGY]      return  false;  }  if  (anonymous.size()  >  0)  {  return  true;  }  return  false;  }  [CLASS]  GroupImpl  [METHOD]  canProcess  [RETURN_TYPE]  boolean  WriteableCommandLine  commandLine  String  arg  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  SortedMap  newOptionMap  optionMap  WriteableCommandLine  commandLine  Iterator  iter  List  anonymous  newAnonymous  options  Option  option  String  arg  description  name  Map  tailMap  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	139	139	1	replace	if(!hasProcessOption(option,  arg))  {	  if(!hasProcessOption(commandLine,    arg))    {    	non-compiled	[CE]  illegal  start  of  expression	41	None	replace
163	[BUG]  [BUGGY]  if(!hasProcessOption(commandLine,  arg)&&  option.canProcess(commandLine,  arg))  {  [CE]  illegal  start  of  expression  [FE]                OptionException      [CONTEXT]        for  (final  Iterator  iter  =  tailMap.values().iterator();  iter.hasNext();)  {  final  Option  option  =  (Option)  iter.next();  if  (option.canProcess(commandLine,  arg))  {  return  true;  }  }      [BUGGY]  if(!hasProcessOption(commandLine,  arg)&&  option.canProcess(commandLine,  arg))  {  [BUGGY]      return  false;  }  if  (anonymous.size()  >  0)  {  return  true;  }  return  false;  }  [CLASS]  GroupImpl  [METHOD]  canProcess  [RETURN_TYPE]  boolean  WriteableCommandLine  commandLine  String  arg  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  SortedMap  newOptionMap  optionMap  WriteableCommandLine  commandLine  Iterator  iter  List  anonymous  newAnonymous  options  Option  option  String  arg  description  name  Map  tailMap  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	139	139	1	replace	if(!hasProcessOption(commandLine,  arg)&&  option.canProcess(commandLine,  arg))  {	  if(!hasProcessOption(commandLine,    arg))    {    	non-compiled	[CE]  illegal  start  of  expression	41	None	replace
164	[BUG]  [BUGGY]  if(!option.canProcess(commandLine,  arg)&&!looksLikeOption(commandLine,  arg))  {  [CE]  illegal  start  of  expression  [FE]                OptionException      [CONTEXT]        for  (final  Iterator  iter  =  tailMap.values().iterator();  iter.hasNext();)  {  final  Option  option  =  (Option)  iter.next();  if  (option.canProcess(commandLine,  arg))  {  return  true;  }  }      [BUGGY]  if(!option.canProcess(commandLine,  arg)&&!looksLikeOption(commandLine,  arg))  {  [BUGGY]      return  false;  }  if  (anonymous.size()  >  0)  {  return  true;  }  return  false;  }  [CLASS]  GroupImpl  [METHOD]  canProcess  [RETURN_TYPE]  boolean  WriteableCommandLine  commandLine  String  arg  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  SortedMap  newOptionMap  optionMap  WriteableCommandLine  commandLine  Iterator  iter  List  anonymous  newAnonymous  options  Option  option  String  arg  description  name  Map  tailMap  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	139	139	1	replace	if(!option.canProcess(commandLine,  arg)&&!looksLikeOption(commandLine,  arg))  {	  if(!looksLikeOption(commandLine,    arg)&&!option.canProcess(commandLine,    arg))    {    	non-compiled	[CE]  illegal  start  of  expression	29	None	replace
165	[BUG]  [BUGGY]  if(!canProcessOption(commandLine,  arg)&&!option.canProcess(commandLine,  arg))  {  [CE]  illegal  start  of  expression  [FE]                  OptionException      [CONTEXT]        for  (final  Iterator  iter  =  tailMap.values().iterator();  iter.hasNext();)  {  final  Option  option  =  (Option)  iter.next();  if  (option.canProcess(commandLine,  arg))  {  return  true;  }  }      [BUGGY]  if(!canProcessOption(commandLine,  arg)&&!option.canProcess(commandLine,  arg))  {  [BUGGY]      return  false;  }  if  (anonymous.size()  >  0)  {  return  true;  }  return  false;  }  [CLASS]  GroupImpl  [METHOD]  canProcess  [RETURN_TYPE]  boolean  WriteableCommandLine  commandLine  String  arg  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  SortedMap  newOptionMap  optionMap  WriteableCommandLine  commandLine  Iterator  iter  List  anonymous  newAnonymous  options  Option  option  String  arg  description  name  Map  tailMap  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	139	139	1	replace	if(!canProcessOption(commandLine,  arg)&&!option.canProcess(commandLine,  arg))  {	  if(!looksLikeOption(commandLine,    arg)&&!option.canProcess(commandLine,    arg))    {    	non-compiled	[CE]  illegal  start  of  expression	29	None	replace
166	[BUG]  [BUGGY]  if(looksLikeOption(commandLine,  null)&&  options.canProcess(option,  arg))  {  [CE]  illegal  start  of  expression  [FE]                      OptionException      [CONTEXT]        for  (final  Iterator  iter  =  tailMap.values().iterator();  iter.hasNext();)  {  final  Option  option  =  (Option)  iter.next();  if  (option.canProcess(commandLine,  arg))  {  return  true;  }  }      [BUGGY]  if(looksLikeOption(commandLine,  null)&&  options.canProcess(option,  arg))  {  [BUGGY]      return  false;  }  if  (anonymous.size()  >  0)  {  return  true;  }  return  false;  }  [CLASS]  GroupImpl  [METHOD]  canProcess  [RETURN_TYPE]  boolean  WriteableCommandLine  commandLine  String  arg  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  SortedMap  newOptionMap  optionMap  WriteableCommandLine  commandLine  Iterator  iter  List  anonymous  newAnonymous  options  Option  option  String  arg  description  name  Map  tailMap  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	139	139	1	replace	if(looksLikeOption(commandLine,  null)&&  options.canProcess(option,  arg))  {	  if(looksLikeOption(commandLine,    null)&&    options.canProcess(commandLine,    arg))    {    	non-compiled	[CE]  illegal  start  of  expression	3	None	replace
167	[BUG]  [BUGGY]  if(looksLikeOption(commandLine,  false)&&  options.canProcess(commandLine,  arg))  {  [CE]  illegal  start  of  expression  [FE]                        OptionException      [CONTEXT]        for  (final  Iterator  iter  =  tailMap.values().iterator();  iter.hasNext();)  {  final  Option  option  =  (Option)  iter.next();  if  (option.canProcess(commandLine,  arg))  {  return  true;  }  }      [BUGGY]  if(looksLikeOption(commandLine,  false)&&  options.canProcess(commandLine,  arg))  {  [BUGGY]      return  false;  }  if  (anonymous.size()  >  0)  {  return  true;  }  return  false;  }  [CLASS]  GroupImpl  [METHOD]  canProcess  [RETURN_TYPE]  boolean  WriteableCommandLine  commandLine  String  arg  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  SortedMap  newOptionMap  optionMap  WriteableCommandLine  commandLine  Iterator  iter  List  anonymous  newAnonymous  options  Option  option  String  arg  description  name  Map  tailMap  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	139	139	1	replace	if(looksLikeOption(commandLine,  false)&&  options.canProcess(commandLine,  arg))  {	  if(looksLikeOption(commandLine,    null)&&    options.canProcess(commandLine,    arg))    {    	non-compiled	[CE]  illegal  start  of  expression	3	None	replace
168	[BUG]  [BUGGY]  if(option.canProcess(commandLine,  null)&&  looksLikeOption(commandLine,  arg))  {  [CE]  illegal  start  of  expression  [FE]                          OptionException      [CONTEXT]        for  (final  Iterator  iter  =  tailMap.values().iterator();  iter.hasNext();)  {  final  Option  option  =  (Option)  iter.next();  if  (option.canProcess(commandLine,  arg))  {  return  true;  }  }      [BUGGY]  if(option.canProcess(commandLine,  null)&&  looksLikeOption(commandLine,  arg))  {  [BUGGY]      return  false;  }  if  (anonymous.size()  >  0)  {  return  true;  }  return  false;  }  [CLASS]  GroupImpl  [METHOD]  canProcess  [RETURN_TYPE]  boolean  WriteableCommandLine  commandLine  String  arg  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  SortedMap  newOptionMap  optionMap  WriteableCommandLine  commandLine  Iterator  iter  List  anonymous  newAnonymous  options  Option  option  String  arg  description  name  Map  tailMap  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	139	139	1	replace	if(option.canProcess(commandLine,  null)&&  looksLikeOption(commandLine,  arg))  {	  if(looksLikeOption(commandLine,    null)&&    options.canProcess(commandLine,    arg))    {    	non-compiled	[CE]  illegal  start  of  expression	3	None	replace
169	[BUG]  [BUGGY]  if(!looksLikeOption(commandLine,  description))  {  [CE]  illegal  start  of  expression  [FE]              OptionException      [CONTEXT]        for  (final  Iterator  iter  =  tailMap.values().iterator();  iter.hasNext();)  {  final  Option  option  =  (Option)  iter.next();  if  (option.canProcess(commandLine,  arg))  {  return  true;  }  }      [BUGGY]  if(!looksLikeOption(commandLine,  description))  {  [BUGGY]      return  false;  }  if  (anonymous.size()  >  0)  {  return  true;  }  return  false;  }  [CLASS]  GroupImpl  [METHOD]  canProcess  [RETURN_TYPE]  boolean  WriteableCommandLine  commandLine  String  arg  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  SortedMap  newOptionMap  optionMap  WriteableCommandLine  commandLine  Iterator  iter  List  anonymous  newAnonymous  options  Option  option  String  arg  description  name  Map  tailMap  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	139	139	1	replace	if(!looksLikeOption(commandLine,  description))  {	  if(!looksLikeOption(arg,    description))    {    	non-compiled	[CE]  illegal  start  of  expression	77	None	replace
170	[BUG]  [BUGGY]  if(!looksBooleanOption(arg,  description))  {  [CE]  illegal  start  of  expression  [FE]                OptionException      [CONTEXT]        for  (final  Iterator  iter  =  tailMap.values().iterator();  iter.hasNext();)  {  final  Option  option  =  (Option)  iter.next();  if  (option.canProcess(commandLine,  arg))  {  return  true;  }  }      [BUGGY]  if(!looksBooleanOption(arg,  description))  {  [BUGGY]      return  false;  }  if  (anonymous.size()  >  0)  {  return  true;  }  return  false;  }  [CLASS]  GroupImpl  [METHOD]  canProcess  [RETURN_TYPE]  boolean  WriteableCommandLine  commandLine  String  arg  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  SortedMap  newOptionMap  optionMap  WriteableCommandLine  commandLine  Iterator  iter  List  anonymous  newAnonymous  options  Option  option  String  arg  description  name  Map  tailMap  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	139	139	1	replace	if(!looksBooleanOption(arg,  description))  {	  if(!looksLikeOption(arg,    description))    {    	non-compiled	[CE]  illegal  start  of  expression	77	None	replace
171	[BUG]  [BUGGY]  List  <  Option>  anonym  =(List  <  Option>)iter.next();  [CE]  illegal  start  of  expression  [FE]                  OptionException      [CONTEXT]        for  (final  Iterator  iter  =  tailMap.values().iterator();  iter.hasNext();)  {  final  Option  option  =  (Option)  iter.next();  if  (option.canProcess(commandLine,  arg))  {  return  true;  }  }      [BUGGY]  List  <  Option>  anonym  =(List  <  Option>)iter.next();  [BUGGY]      if  (looksLikeOption(commandLine,  arg))  {  return  false;  }  if  (anonymous.size()  >  0)  {  return  true;  }  return  false;  }  [CLASS]  GroupImpl  [METHOD]  canProcess  [RETURN_TYPE]  boolean  WriteableCommandLine  commandLine  String  arg  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  SortedMap  newOptionMap  optionMap  WriteableCommandLine  commandLine  Iterator  iter  List  anonymous  newAnonymous  options  Option  option  String  arg  description  name  Map  tailMap  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	139	139	1	replace	List  <  Option>  anonym  =(List  <  Option>)iter.next();	  List    <    Option>    anonymous    =(List    <    Option>)iter.next();    	non-compiled	[CE]  illegal  start  of  expression	78	None	replace
172	[BUG]  [BUGGY]  final  List  <  Option>  anonymous  =(List  <  Option>)iter.next();  [CE]  illegal  start  of  expression  [FE]                    OptionException      [CONTEXT]        for  (final  Iterator  iter  =  tailMap.values().iterator();  iter.hasNext();)  {  final  Option  option  =  (Option)  iter.next();  if  (option.canProcess(commandLine,  arg))  {  return  true;  }  }      [BUGGY]  final  List  <  Option>  anonymous  =(List  <  Option>)iter.next();  [BUGGY]      if  (looksLikeOption(commandLine,  arg))  {  return  false;  }  if  (anonymous.size()  >  0)  {  return  true;  }  return  false;  }  [CLASS]  GroupImpl  [METHOD]  canProcess  [RETURN_TYPE]  boolean  WriteableCommandLine  commandLine  String  arg  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  SortedMap  newOptionMap  optionMap  WriteableCommandLine  commandLine  Iterator  iter  List  anonymous  newAnonymous  options  Option  option  String  arg  description  name  Map  tailMap  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	139	139	1	replace	final  List  <  Option>  anonymous  =(List  <  Option>)iter.next();	  List    <    Option>    anonymous    =(List    <    Option>)iter.next();    	non-compiled	[CE]  illegal  start  of  expression	78	None	replace
173	[BUG]  [BUGGY]  Set  <  Option>  anonymous  =(Set  <  Option>)iter.next();  [CE]  illegal  start  of  expression  [FE]                      OptionException      [CONTEXT]        for  (final  Iterator  iter  =  tailMap.values().iterator();  iter.hasNext();)  {  final  Option  option  =  (Option)  iter.next();  if  (option.canProcess(commandLine,  arg))  {  return  true;  }  }      [BUGGY]  Set  <  Option>  anonymous  =(Set  <  Option>)iter.next();  [BUGGY]      if  (looksLikeOption(commandLine,  arg))  {  return  false;  }  if  (anonymous.size()  >  0)  {  return  true;  }  return  false;  }  [CLASS]  GroupImpl  [METHOD]  canProcess  [RETURN_TYPE]  boolean  WriteableCommandLine  commandLine  String  arg  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  SortedMap  newOptionMap  optionMap  WriteableCommandLine  commandLine  Iterator  iter  List  anonymous  newAnonymous  options  Option  option  String  arg  description  name  Map  tailMap  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	139	139	1	replace	Set  <  Option>  anonymous  =(Set  <  Option>)iter.next();	  List    <    Option>    anonymous    =(List    <    Option>)iter.next();    	non-compiled	[CE]  illegal  start  of  expression	78	None	replace
174	[BUG]  [BUGGY]  List  <  Option>  newAnonymous  =  this.tailMap.values().iterator();  [CE]  illegal  start  of  expression  [FE]              OptionException      [CONTEXT]        for  (final  Iterator  iter  =  tailMap.values().iterator();  iter.hasNext();)  {  final  Option  option  =  (Option)  iter.next();  if  (option.canProcess(commandLine,  arg))  {  return  true;  }  }      [BUGGY]  List  <  Option>  newAnonymous  =  this.tailMap.values().iterator();  [BUGGY]      if  (looksLikeOption(commandLine,  arg))  {  return  false;  }  if  (anonymous.size()  >  0)  {  return  true;  }  return  false;  }  [CLASS]  GroupImpl  [METHOD]  canProcess  [RETURN_TYPE]  boolean  WriteableCommandLine  commandLine  String  arg  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  SortedMap  newOptionMap  optionMap  WriteableCommandLine  commandLine  Iterator  iter  List  anonymous  newAnonymous  options  Option  option  String  arg  description  name  Map  tailMap  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	139	139	1	replace	List  <  Option>  newAnonymous  =  this.tailMap.values().iterator();	  List    <    Option>    newAnonymous    =    tailMap.values().iterator();    	non-compiled	[CE]  illegal  start  of  expression	47	None	replace
175	[BUG]  [BUGGY]  List  <  Option>  options  =  this.tailMap.values().iterator();  [CE]  illegal  start  of  expression  [FE]              OptionException      [CONTEXT]        for  (final  Iterator  iter  =  tailMap.values().iterator();  iter.hasNext();)  {  final  Option  option  =  (Option)  iter.next();  if  (option.canProcess(commandLine,  arg))  {  return  true;  }  }      [BUGGY]  List  <  Option>  options  =  this.tailMap.values().iterator();  [BUGGY]      if  (looksLikeOption(commandLine,  arg))  {  return  false;  }  if  (anonymous.size()  >  0)  {  return  true;  }  return  false;  }  [CLASS]  GroupImpl  [METHOD]  canProcess  [RETURN_TYPE]  boolean  WriteableCommandLine  commandLine  String  arg  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  SortedMap  newOptionMap  optionMap  WriteableCommandLine  commandLine  Iterator  iter  List  anonymous  newAnonymous  options  Option  option  String  arg  description  name  Map  tailMap  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	139	139	1	replace	List  <  Option>  options  =  this.tailMap.values().iterator();	  List    <    Option>    options    =    tailMap.values().iterator();    	non-compiled	[CE]  illegal  start  of  expression	35	None	replace
176	[BUG]  [BUGGY]  List  <  Option>  newAnonymous  =(List  <  Option>)commandLine.get(arg  -  1);  [CE]  illegal  start  of  expression  [FE]                        OptionException      [CONTEXT]        for  (final  Iterator  iter  =  tailMap.values().iterator();  iter.hasNext();)  {  final  Option  option  =  (Option)  iter.next();  if  (option.canProcess(commandLine,  arg))  {  return  true;  }  }      [BUGGY]  List  <  Option>  newAnonymous  =(List  <  Option>)commandLine.get(arg  -  1);  [BUGGY]      if  (looksLikeOption(commandLine,  arg))  {  return  false;  }  if  (anonymous.size()  >  0)  {  return  true;  }  return  false;  }  [CLASS]  GroupImpl  [METHOD]  canProcess  [RETURN_TYPE]  boolean  WriteableCommandLine  commandLine  String  arg  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  SortedMap  newOptionMap  optionMap  WriteableCommandLine  commandLine  Iterator  iter  List  anonymous  newAnonymous  options  Option  option  String  arg  description  name  Map  tailMap  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	139	139	1	replace	List  <  Option>  newAnonymous  =(List  <  Option>)commandLine.get(arg  -  1);	  List    <    Option>    newAnonymous    =(List    <    Option>)commandLine.get(arg);    	non-compiled	[CE]  illegal  start  of  expression	45	None	replace
177	[BUG]  [BUGGY]  if(canProcessLikeOption(commandLine,  option))  {  [CE]  illegal  start  of  expression  [FE]              OptionException      [CONTEXT]        for  (final  Iterator  iter  =  tailMap.values().iterator();  iter.hasNext();)  {  final  Option  option  =  (Option)  iter.next();  if  (option.canProcess(commandLine,  arg))  {  return  true;  }  }      [BUGGY]  if(canProcessLikeOption(commandLine,  option))  {  [BUGGY]      return  false;  }  if  (anonymous.size()  >  0)  {  return  true;  }  return  false;  }  [CLASS]  GroupImpl  [METHOD]  canProcess  [RETURN_TYPE]  boolean  WriteableCommandLine  commandLine  String  arg  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  SortedMap  newOptionMap  optionMap  WriteableCommandLine  commandLine  Iterator  iter  List  anonymous  newAnonymous  options  Option  option  String  arg  description  name  Map  tailMap  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	139	139	1	replace	if(canProcessLikeOption(commandLine,  option))  {	  if(canProcessLikeOption(commandLine,    arg))    {    	non-compiled	[CE]  illegal  start  of  expression	11	None	replace
178	[BUG]  [BUGGY]  if(looksLikeOption(optionMap,  true)||  options.canProcess(commandLine,  false))  {  [CE]  illegal  start  of  expression  [FE]                OptionException      [CONTEXT]        for  (final  Iterator  iter  =  tailMap.values().iterator();  iter.hasNext();)  {  final  Option  option  =  (Option)  iter.next();  if  (option.canProcess(commandLine,  arg))  {  return  true;  }  }      [BUGGY]  if(looksLikeOption(optionMap,  true)||  options.canProcess(commandLine,  false))  {  [BUGGY]      return  false;  }  if  (anonymous.size()  >  0)  {  return  true;  }  return  false;  }  [CLASS]  GroupImpl  [METHOD]  canProcess  [RETURN_TYPE]  boolean  WriteableCommandLine  commandLine  String  arg  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  SortedMap  newOptionMap  optionMap  WriteableCommandLine  commandLine  Iterator  iter  List  anonymous  newAnonymous  options  Option  option  String  arg  description  name  Map  tailMap  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	139	139	1	replace	if(looksLikeOption(optionMap,  true)||  options.canProcess(commandLine,  false))  {	  if(looksLikeOption(commandLine,    true)||    options.canProcess(commandLine,    false))    {    	non-compiled	[CE]  illegal  start  of  expression	58	None	replace
179	[BUG]  [BUGGY]  if(!looksLikeOption(commandLine,  false)&&  options.canProcess(commandLine,  false))  {  [CE]  illegal  start  of  expression  [FE]                  OptionException      [CONTEXT]        for  (final  Iterator  iter  =  tailMap.values().iterator();  iter.hasNext();)  {  final  Option  option  =  (Option)  iter.next();  if  (option.canProcess(commandLine,  arg))  {  return  true;  }  }      [BUGGY]  if(!looksLikeOption(commandLine,  false)&&  options.canProcess(commandLine,  false))  {  [BUGGY]      return  false;  }  if  (anonymous.size()  >  0)  {  return  true;  }  return  false;  }  [CLASS]  GroupImpl  [METHOD]  canProcess  [RETURN_TYPE]  boolean  WriteableCommandLine  commandLine  String  arg  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  SortedMap  newOptionMap  optionMap  WriteableCommandLine  commandLine  Iterator  iter  List  anonymous  newAnonymous  options  Option  option  String  arg  description  name  Map  tailMap  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	139	139	1	replace	if(!looksLikeOption(commandLine,  false)&&  options.canProcess(commandLine,  false))  {	  if(looksLikeOption(commandLine,    true)||    options.canProcess(commandLine,    false))    {    	non-compiled	[CE]  illegal  start  of  expression	58	None	replace
180	[BUG]  [BUGGY]  if(option.canProcess(arg,  commandLine)||  options.canProcess(commandLine,  arg))  {  [CE]  illegal  start  of  expression  [FE]                OptionException      [CONTEXT]        for  (final  Iterator  iter  =  tailMap.values().iterator();  iter.hasNext();)  {  final  Option  option  =  (Option)  iter.next();  if  (option.canProcess(commandLine,  arg))  {  return  true;  }  }      [BUGGY]  if(option.canProcess(arg,  commandLine)||  options.canProcess(commandLine,  arg))  {  [BUGGY]      return  false;  }  if  (anonymous.size()  >  0)  {  return  true;  }  return  false;  }  [CLASS]  GroupImpl  [METHOD]  canProcess  [RETURN_TYPE]  boolean  WriteableCommandLine  commandLine  String  arg  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  SortedMap  newOptionMap  optionMap  WriteableCommandLine  commandLine  Iterator  iter  List  anonymous  newAnonymous  options  Option  option  String  arg  description  name  Map  tailMap  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	139	139	1	replace	if(option.canProcess(arg,  commandLine)||  options.canProcess(commandLine,  arg))  {	  if(option.canProcess(commandLine,    arg)||    options.canProcess(commandLine,    arg))    {    	non-compiled	[CE]  illegal  start  of  expression	7	None	replace
181	[BUG]  [BUGGY]  if(option.canProcess(commandLine)||  options.canProcess(commandLine,  arg))  {  [CE]  illegal  start  of  expression  [FE]                  OptionException      [CONTEXT]        for  (final  Iterator  iter  =  tailMap.values().iterator();  iter.hasNext();)  {  final  Option  option  =  (Option)  iter.next();  if  (option.canProcess(commandLine,  arg))  {  return  true;  }  }      [BUGGY]  if(option.canProcess(commandLine)||  options.canProcess(commandLine,  arg))  {  [BUGGY]      return  false;  }  if  (anonymous.size()  >  0)  {  return  true;  }  return  false;  }  [CLASS]  GroupImpl  [METHOD]  canProcess  [RETURN_TYPE]  boolean  WriteableCommandLine  commandLine  String  arg  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  SortedMap  newOptionMap  optionMap  WriteableCommandLine  commandLine  Iterator  iter  List  anonymous  newAnonymous  options  Option  option  String  arg  description  name  Map  tailMap  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	139	139	1	replace	if(option.canProcess(commandLine)||  options.canProcess(commandLine,  arg))  {	  if(option.canProcess(commandLine,    arg)||    options.canProcess(commandLine,    arg))    {    	non-compiled	[CE]  illegal  start  of  expression	7	None	replace
182	[BUG]  [BUGGY]  Set  <  Option>  newAnonymous  =  optionMap.newAnonymous();  [CE]  illegal  start  of  expression  [FE]                      OptionException      [CONTEXT]        for  (final  Iterator  iter  =  tailMap.values().iterator();  iter.hasNext();)  {  final  Option  option  =  (Option)  iter.next();  if  (option.canProcess(commandLine,  arg))  {  return  true;  }  }      [BUGGY]  Set  <  Option>  newAnonymous  =  optionMap.newAnonymous();  [BUGGY]      if  (looksLikeOption(commandLine,  arg))  {  return  false;  }  if  (anonymous.size()  >  0)  {  return  true;  }  return  false;  }  [CLASS]  GroupImpl  [METHOD]  canProcess  [RETURN_TYPE]  boolean  WriteableCommandLine  commandLine  String  arg  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  SortedMap  newOptionMap  optionMap  WriteableCommandLine  commandLine  Iterator  iter  List  anonymous  newAnonymous  options  Option  option  String  arg  description  name  Map  tailMap  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	139	139	1	replace	Set  <  Option>  newAnonymous  =  optionMap.newAnonymous();	  List    <    Option>    newAnonymous    =    optionMap.newAnonymous();    	non-compiled	[CE]  illegal  start  of  expression	26	None	replace
183	[BUG]  [BUGGY]  if(hasProcessOption(commandLine,  option))  {  [CE]  illegal  start  of  expression  [FE]            OptionException      [CONTEXT]        for  (final  Iterator  iter  =  tailMap.values().iterator();  iter.hasNext();)  {  final  Option  option  =  (Option)  iter.next();  if  (option.canProcess(commandLine,  arg))  {  return  true;  }  }      [BUGGY]  if(hasProcessOption(commandLine,  option))  {  [BUGGY]      return  false;  }  if  (anonymous.size()  >  0)  {  return  true;  }  return  false;  }  [CLASS]  GroupImpl  [METHOD]  canProcess  [RETURN_TYPE]  boolean  WriteableCommandLine  commandLine  String  arg  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  SortedMap  newOptionMap  optionMap  WriteableCommandLine  commandLine  Iterator  iter  List  anonymous  newAnonymous  options  Option  option  String  arg  description  name  Map  tailMap  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	139	139	1	replace	if(hasProcessOption(commandLine,  option))  {	  if(hasOption(option,    commandLine))    {    	non-compiled	[CE]  illegal  start  of  expression	79	None	replace
184	[BUG]  [BUGGY]  if(hasArg()  &&  options.canProcess(commandLine,  arg))  {  [CE]  illegal  start  of  expression  [FE]                  OptionException      [CONTEXT]        for  (final  Iterator  iter  =  tailMap.values().iterator();  iter.hasNext();)  {  final  Option  option  =  (Option)  iter.next();  if  (option.canProcess(commandLine,  arg))  {  return  true;  }  }      [BUGGY]  if(hasArg()  &&  options.canProcess(commandLine,  arg))  {  [BUGGY]      return  false;  }  if  (anonymous.size()  >  0)  {  return  true;  }  return  false;  }  [CLASS]  GroupImpl  [METHOD]  canProcess  [RETURN_TYPE]  boolean  WriteableCommandLine  commandLine  String  arg  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  SortedMap  newOptionMap  optionMap  WriteableCommandLine  commandLine  Iterator  iter  List  anonymous  newAnonymous  options  Option  option  String  arg  description  name  Map  tailMap  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	139	139	1	replace	if(hasArg()  &&  options.canProcess(commandLine,  arg))  {	  if(looksLikeOption(commandLine,    arg)&&    options.canProcess(commandLine,    arg))    {    	non-compiled	[CE]  illegal  start  of  expression	8	None	replace
185	[BUG]  [BUGGY]  if(canProcess(option,  null))  {  [CE]  illegal  start  of  expression  [FE]                  OptionException      [CONTEXT]        for  (final  Iterator  iter  =  tailMap.values().iterator();  iter.hasNext();)  {  final  Option  option  =  (Option)  iter.next();  if  (option.canProcess(commandLine,  arg))  {  return  true;  }  }      [BUGGY]  if(canProcess(option,  null))  {  [BUGGY]      return  false;  }  if  (anonymous.size()  >  0)  {  return  true;  }  return  false;  }  [CLASS]  GroupImpl  [METHOD]  canProcess  [RETURN_TYPE]  boolean  WriteableCommandLine  commandLine  String  arg  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  SortedMap  newOptionMap  optionMap  WriteableCommandLine  commandLine  Iterator  iter  List  anonymous  newAnonymous  options  Option  option  String  arg  description  name  Map  tailMap  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	139	139	1	replace	if(canProcess(option,  null))  {	  if(hasOption(option,    null))    {    	non-compiled	[CE]  illegal  start  of  expression	66	None	replace
186	[BUG]  [BUGGY]  if(hasOption(arg,  false))  {  [CE]  illegal  start  of  expression  [FE]              OptionException      [CONTEXT]        for  (final  Iterator  iter  =  tailMap.values().iterator();  iter.hasNext();)  {  final  Option  option  =  (Option)  iter.next();  if  (option.canProcess(commandLine,  arg))  {  return  true;  }  }      [BUGGY]  if(hasOption(arg,  false))  {  [BUGGY]      return  false;  }  if  (anonymous.size()  >  0)  {  return  true;  }  return  false;  }  [CLASS]  GroupImpl  [METHOD]  canProcess  [RETURN_TYPE]  boolean  WriteableCommandLine  commandLine  String  arg  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  SortedMap  newOptionMap  optionMap  WriteableCommandLine  commandLine  Iterator  iter  List  anonymous  newAnonymous  options  Option  option  String  arg  description  name  Map  tailMap  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	139	139	1	replace	if(hasOption(arg,  false))  {	  if(hasOption(option,    false))    {    	non-compiled	[CE]  illegal  start  of  expression	69	None	replace
187	[BUG]  [BUGGY]  List  <  Option>  newAnonymous  =  option.names().iterator();  [CE]  illegal  start  of  expression  [FE]            OptionException      [CONTEXT]        for  (final  Iterator  iter  =  tailMap.values().iterator();  iter.hasNext();)  {  final  Option  option  =  (Option)  iter.next();  if  (option.canProcess(commandLine,  arg))  {  return  true;  }  }      [BUGGY]  List  <  Option>  newAnonymous  =  option.names().iterator();  [BUGGY]      if  (looksLikeOption(commandLine,  arg))  {  return  false;  }  if  (anonymous.size()  >  0)  {  return  true;  }  return  false;  }  [CLASS]  GroupImpl  [METHOD]  canProcess  [RETURN_TYPE]  boolean  WriteableCommandLine  commandLine  String  arg  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  SortedMap  newOptionMap  optionMap  WriteableCommandLine  commandLine  Iterator  iter  List  anonymous  newAnonymous  options  Option  option  String  arg  description  name  Map  tailMap  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	139	139	1	replace	List  <  Option>  newAnonymous  =  option.names().iterator();	  List    <    Option>    newAnonymous    =    option.values().iterator();    	non-compiled	[CE]  illegal  start  of  expression	19	None	replace
188	[BUG]  [BUGGY]  if(looksLikeOption(option,  null)||  options.canProcess(commandLine,  arg))  {  [CE]  illegal  start  of  expression  [FE]                    OptionException      [CONTEXT]        for  (final  Iterator  iter  =  tailMap.values().iterator();  iter.hasNext();)  {  final  Option  option  =  (Option)  iter.next();  if  (option.canProcess(commandLine,  arg))  {  return  true;  }  }      [BUGGY]  if(looksLikeOption(option,  null)||  options.canProcess(commandLine,  arg))  {  [BUGGY]      return  false;  }  if  (anonymous.size()  >  0)  {  return  true;  }  return  false;  }  [CLASS]  GroupImpl  [METHOD]  canProcess  [RETURN_TYPE]  boolean  WriteableCommandLine  commandLine  String  arg  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  SortedMap  newOptionMap  optionMap  WriteableCommandLine  commandLine  Iterator  iter  List  anonymous  newAnonymous  options  Option  option  String  arg  description  name  Map  tailMap  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	139	139	1	replace	if(looksLikeOption(option,  null)||  options.canProcess(commandLine,  arg))  {	  if(looksLikeOption(commandLine,    null)||    options.canProcess(commandLine,    arg))    {    	non-compiled	[CE]  illegal  start  of  expression	72	None	replace
189	[BUG]  [BUGGY]  Option  option  =(Option)optionMap.next();  [CE]  illegal  start  of  expression  [FE]                  OptionException      [CONTEXT]        for  (final  Iterator  iter  =  tailMap.values().iterator();  iter.hasNext();)  {  final  Option  option  =  (Option)  iter.next();  if  (option.canProcess(commandLine,  arg))  {  return  true;  }  }      [BUGGY]  Option  option  =(Option)optionMap.next();  [BUGGY]      if  (looksLikeOption(commandLine,  arg))  {  return  false;  }  if  (anonymous.size()  >  0)  {  return  true;  }  return  false;  }  [CLASS]  GroupImpl  [METHOD]  canProcess  [RETURN_TYPE]  boolean  WriteableCommandLine  commandLine  String  arg  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  SortedMap  newOptionMap  optionMap  WriteableCommandLine  commandLine  Iterator  iter  List  anonymous  newAnonymous  options  Option  option  String  arg  description  name  Map  tailMap  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	139	139	1	replace	Option  option  =(Option)optionMap.next();	  Option    option    =(Option)option.next();    	non-compiled	[CE]  illegal  start  of  expression	65	None	replace
190	[BUG]  [BUGGY]  Option  option  =  option.createOption(arg,  name);  [CE]  illegal  start  of  expression  [FE]                  OptionException      [CONTEXT]        for  (final  Iterator  iter  =  tailMap.values().iterator();  iter.hasNext();)  {  final  Option  option  =  (Option)  iter.next();  if  (option.canProcess(commandLine,  arg))  {  return  true;  }  }      [BUGGY]  Option  option  =  option.createOption(arg,  name);  [BUGGY]      if  (looksLikeOption(commandLine,  arg))  {  return  false;  }  if  (anonymous.size()  >  0)  {  return  true;  }  return  false;  }  [CLASS]  GroupImpl  [METHOD]  canProcess  [RETURN_TYPE]  boolean  WriteableCommandLine  commandLine  String  arg  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  SortedMap  newOptionMap  optionMap  WriteableCommandLine  commandLine  Iterator  iter  List  anonymous  newAnonymous  options  Option  option  String  arg  description  name  Map  tailMap  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	139	139	1	replace	Option  option  =  option.createOption(arg,  name);	  Option    option    =    option.createOption(arg,    description);    	non-compiled	[CE]  illegal  start  of  expression	14	None	replace
191	[BUG]  [BUGGY]  if(option.canProcessOption(commandLine,  arg))  {  [CE]  illegal  start  of  expression  [FE]            OptionException      [CONTEXT]        for  (final  Iterator  iter  =  tailMap.values().iterator();  iter.hasNext();)  {  final  Option  option  =  (Option)  iter.next();  if  (option.canProcess(commandLine,  arg))  {  return  true;  }  }      [BUGGY]  if(option.canProcessOption(commandLine,  arg))  {  [BUGGY]      return  false;  }  if  (anonymous.size()  >  0)  {  return  true;  }  return  false;  }  [CLASS]  GroupImpl  [METHOD]  canProcess  [RETURN_TYPE]  boolean  WriteableCommandLine  commandLine  String  arg  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  SortedMap  newOptionMap  optionMap  WriteableCommandLine  commandLine  Iterator  iter  List  anonymous  newAnonymous  options  Option  option  String  arg  description  name  Map  tailMap  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	139	139	1	replace	if(option.canProcessOption(commandLine,  arg))  {	  if(canProcessOption(commandLine,    arg))    {    	non-compiled	[CE]  illegal  start  of  expression	10	None	replace
192	[BUG]  [BUGGY]  List  <  Option>  newAnonymous  =(List  <  Option>)commandMap.keySet().iterator();  [CE]  illegal  start  of  expression  [FE]            OptionException      [CONTEXT]        for  (final  Iterator  iter  =  tailMap.values().iterator();  iter.hasNext();)  {  final  Option  option  =  (Option)  iter.next();  if  (option.canProcess(commandLine,  arg))  {  return  true;  }  }      [BUGGY]  List  <  Option>  newAnonymous  =(List  <  Option>)commandMap.keySet().iterator();  [BUGGY]      if  (looksLikeOption(commandLine,  arg))  {  return  false;  }  if  (anonymous.size()  >  0)  {  return  true;  }  return  false;  }  [CLASS]  GroupImpl  [METHOD]  canProcess  [RETURN_TYPE]  boolean  WriteableCommandLine  commandLine  String  arg  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  SortedMap  newOptionMap  optionMap  WriteableCommandLine  commandLine  Iterator  iter  List  anonymous  newAnonymous  options  Option  option  String  arg  description  name  Map  tailMap  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	139	139	1	replace	List  <  Option>  newAnonymous  =(List  <  Option>)commandMap.keySet().iterator();	  List    <    Option>    newAnonymous    =(List    <    Option>)commandMap.values().iterator();    	non-compiled	[CE]  illegal  start  of  expression	75	None	replace
193	[BUG]  [BUGGY]  if(canProcessOption(arg,  description))  {  [CE]  illegal  start  of  expression  [FE]              OptionException      [CONTEXT]        for  (final  Iterator  iter  =  tailMap.values().iterator();  iter.hasNext();)  {  final  Option  option  =  (Option)  iter.next();  if  (option.canProcess(commandLine,  arg))  {  return  true;  }  }      [BUGGY]  if(canProcessOption(arg,  description))  {  [BUGGY]      return  false;  }  if  (anonymous.size()  >  0)  {  return  true;  }  return  false;  }  [CLASS]  GroupImpl  [METHOD]  canProcess  [RETURN_TYPE]  boolean  WriteableCommandLine  commandLine  String  arg  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  SortedMap  newOptionMap  optionMap  WriteableCommandLine  commandLine  Iterator  iter  List  anonymous  newAnonymous  options  Option  option  String  arg  description  name  Map  tailMap  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	139	139	1	replace	if(canProcessOption(arg,  description))  {	  if(!canProcessOption(arg,    commandLine))    {    	non-compiled	[CE]  illegal  start  of  expression	54	None	replace
194	[BUG]  [BUGGY]  final  List  <  Option>  newAnonymous  =(List  <  Option>)option.next();  [CE]  illegal  start  of  expression  [FE]                  OptionException      [CONTEXT]        for  (final  Iterator  iter  =  tailMap.values().iterator();  iter.hasNext();)  {  final  Option  option  =  (Option)  iter.next();  if  (option.canProcess(commandLine,  arg))  {  return  true;  }  }      [BUGGY]  final  List  <  Option>  newAnonymous  =(List  <  Option>)option.next();  [BUGGY]      if  (looksLikeOption(commandLine,  arg))  {  return  false;  }  if  (anonymous.size()  >  0)  {  return  true;  }  return  false;  }  [CLASS]  GroupImpl  [METHOD]  canProcess  [RETURN_TYPE]  boolean  WriteableCommandLine  commandLine  String  arg  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  SortedMap  newOptionMap  optionMap  WriteableCommandLine  commandLine  Iterator  iter  List  anonymous  newAnonymous  options  Option  option  String  arg  description  name  Map  tailMap  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	139	139	1	replace	final  List  <  Option>  newAnonymous  =(List  <  Option>)option.next();	  final    List    <    Option>    newAnonymous    =(List    <    Option>)iter.next();    	non-compiled	[CE]  illegal  start  of  expression	4	None	replace
195	[BUG]  [BUGGY]  ArrayList  <  Option>  newAnonymous  =(ArrayList  <  Option>)commandLine.values().iterator();  [CE]  illegal  start  of  expression  [FE]                OptionException      [CONTEXT]        for  (final  Iterator  iter  =  tailMap.values().iterator();  iter.hasNext();)  {  final  Option  option  =  (Option)  iter.next();  if  (option.canProcess(commandLine,  arg))  {  return  true;  }  }      [BUGGY]  ArrayList  <  Option>  newAnonymous  =(ArrayList  <  Option>)commandLine.values().iterator();  [BUGGY]      if  (looksLikeOption(commandLine,  arg))  {  return  false;  }  if  (anonymous.size()  >  0)  {  return  true;  }  return  false;  }  [CLASS]  GroupImpl  [METHOD]  canProcess  [RETURN_TYPE]  boolean  WriteableCommandLine  commandLine  String  arg  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  SortedMap  newOptionMap  optionMap  WriteableCommandLine  commandLine  Iterator  iter  List  anonymous  newAnonymous  options  Option  option  String  arg  description  name  Map  tailMap  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	139	139	1	replace	ArrayList  <  Option>  newAnonymous  =(ArrayList  <  Option>)commandLine.values().iterator();	  List    <    Option>    newAnonymous    =(List    <    Option>)commandLine.values().iterator();    	non-compiled	[CE]  illegal  start  of  expression	18	None	replace
196	[BUG]  [BUGGY]  if(looksLikeOption(option,  null)&&  option.canProcess(commandLine,  arg))  {  [CE]  illegal  start  of  expression  [FE]                  OptionException      [CONTEXT]        for  (final  Iterator  iter  =  tailMap.values().iterator();  iter.hasNext();)  {  final  Option  option  =  (Option)  iter.next();  if  (option.canProcess(commandLine,  arg))  {  return  true;  }  }      [BUGGY]  if(looksLikeOption(option,  null)&&  option.canProcess(commandLine,  arg))  {  [BUGGY]      return  false;  }  if  (anonymous.size()  >  0)  {  return  true;  }  return  false;  }  [CLASS]  GroupImpl  [METHOD]  canProcess  [RETURN_TYPE]  boolean  WriteableCommandLine  commandLine  String  arg  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  SortedMap  newOptionMap  optionMap  WriteableCommandLine  commandLine  Iterator  iter  List  anonymous  newAnonymous  options  Option  option  String  arg  description  name  Map  tailMap  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	139	139	1	replace	if(looksLikeOption(option,  null)&&  option.canProcess(commandLine,  arg))  {	  if(looksLikeOption(commandLine,    null)&&    option.canProcess(commandLine,    arg))    {    	non-compiled	[CE]  illegal  start  of  expression	1	None	replace
197	[BUG]  [BUGGY]  if(looksLikeOption(option,  null)&&  commandLine.canProcess(option,  arg))  {  [CE]  illegal  start  of  expression  [FE]                    OptionException      [CONTEXT]        for  (final  Iterator  iter  =  tailMap.values().iterator();  iter.hasNext();)  {  final  Option  option  =  (Option)  iter.next();  if  (option.canProcess(commandLine,  arg))  {  return  true;  }  }      [BUGGY]  if(looksLikeOption(option,  null)&&  commandLine.canProcess(option,  arg))  {  [BUGGY]      return  false;  }  if  (anonymous.size()  >  0)  {  return  true;  }  return  false;  }  [CLASS]  GroupImpl  [METHOD]  canProcess  [RETURN_TYPE]  boolean  WriteableCommandLine  commandLine  String  arg  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  SortedMap  newOptionMap  optionMap  WriteableCommandLine  commandLine  Iterator  iter  List  anonymous  newAnonymous  options  Option  option  String  arg  description  name  Map  tailMap  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	139	139	1	replace	if(looksLikeOption(option,  null)&&  commandLine.canProcess(option,  arg))  {	  if(looksLikeOption(commandLine,    null)&&    option.canProcess(commandLine,    arg))    {    	non-compiled	[CE]  illegal  start  of  expression	1	None	replace
198	[BUG]  [BUGGY]  List  <  Option>  newAnonymous  =(List  <  Option>)tailMap.keySet().iterator();  [CE]  illegal  start  of  expression  [FE]            OptionException      [CONTEXT]        for  (final  Iterator  iter  =  tailMap.values().iterator();  iter.hasNext();)  {  final  Option  option  =  (Option)  iter.next();  if  (option.canProcess(commandLine,  arg))  {  return  true;  }  }      [BUGGY]  List  <  Option>  newAnonymous  =(List  <  Option>)tailMap.keySet().iterator();  [BUGGY]      if  (looksLikeOption(commandLine,  arg))  {  return  false;  }  if  (anonymous.size()  >  0)  {  return  true;  }  return  false;  }  [CLASS]  GroupImpl  [METHOD]  canProcess  [RETURN_TYPE]  boolean  WriteableCommandLine  commandLine  String  arg  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  SortedMap  newOptionMap  optionMap  WriteableCommandLine  commandLine  Iterator  iter  List  anonymous  newAnonymous  options  Option  option  String  arg  description  name  Map  tailMap  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	139	139	1	replace	List  <  Option>  newAnonymous  =(List  <  Option>)tailMap.keySet().iterator();	  List    <    Option>    newAnonymous    =(List    <    Option>)tailMap.values().iterator();    	non-compiled	[CE]  illegal  start  of  expression	16	None	replace
199	[BUG]  [BUGGY]  if(!looksLikeOption(option,  description))  {  [CE]  illegal  start  of  expression  [FE]              OptionException      [CONTEXT]        for  (final  Iterator  iter  =  tailMap.values().iterator();  iter.hasNext();)  {  final  Option  option  =  (Option)  iter.next();  if  (option.canProcess(commandLine,  arg))  {  return  true;  }  }      [BUGGY]  if(!looksLikeOption(option,  description))  {  [BUGGY]      return  false;  }  if  (anonymous.size()  >  0)  {  return  true;  }  return  false;  }  [CLASS]  GroupImpl  [METHOD]  canProcess  [RETURN_TYPE]  boolean  WriteableCommandLine  commandLine  String  arg  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  SortedMap  newOptionMap  optionMap  WriteableCommandLine  commandLine  Iterator  iter  List  anonymous  newAnonymous  options  Option  option  String  arg  description  name  Map  tailMap  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	139	139	1	replace	if(!looksLikeOption(option,  description))  {	  if(!looksLikeOption(arg,    description))    {    	non-compiled	[CE]  illegal  start  of  expression	77	None	replace
200	[BUG]  [BUGGY]  if(canProcessOption(option,  null))  {  [CE]  illegal  start  of  expression  [FE]                    OptionException      [CONTEXT]        for  (final  Iterator  iter  =  tailMap.values().iterator();  iter.hasNext();)  {  final  Option  option  =  (Option)  iter.next();  if  (option.canProcess(commandLine,  arg))  {  return  true;  }  }      [BUGGY]  if(canProcessOption(option,  null))  {  [BUGGY]      return  false;  }  if  (anonymous.size()  >  0)  {  return  true;  }  return  false;  }  [CLASS]  GroupImpl  [METHOD]  canProcess  [RETURN_TYPE]  boolean  WriteableCommandLine  commandLine  String  arg  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  SortedMap  newOptionMap  optionMap  WriteableCommandLine  commandLine  Iterator  iter  List  anonymous  newAnonymous  options  Option  option  String  arg  description  name  Map  tailMap  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	139	139	1	replace	if(canProcessOption(option,  null))  {	  if(canProcessOption(commandLine,    null))    {    	non-compiled	[CE]  illegal  start  of  expression	2	None	replace
201	[BUG]  [BUGGY]  if(!looksLikeOption(option,  options))  {  [CE]  illegal  start  of  expression  [FE]              OptionException      [CONTEXT]        for  (final  Iterator  iter  =  tailMap.values().iterator();  iter.hasNext();)  {  final  Option  option  =  (Option)  iter.next();  if  (option.canProcess(commandLine,  arg))  {  return  true;  }  }      [BUGGY]  if(!looksLikeOption(option,  options))  {  [BUGGY]      return  false;  }  if  (anonymous.size()  >  0)  {  return  true;  }  return  false;  }  [CLASS]  GroupImpl  [METHOD]  canProcess  [RETURN_TYPE]  boolean  WriteableCommandLine  commandLine  String  arg  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  SortedMap  newOptionMap  optionMap  WriteableCommandLine  commandLine  Iterator  iter  List  anonymous  newAnonymous  options  Option  option  String  arg  description  name  Map  tailMap  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	139	139	1	replace	if(!looksLikeOption(option,  options))  {	  if(!looksLikeOption(commandLine,    options))    {    	non-compiled	[CE]  illegal  start  of  expression	61	None	replace
202	[BUG]  [BUGGY]  if(!looksLikeOption(arg,  options))  {  [CE]  illegal  start  of  expression  [FE]                OptionException      [CONTEXT]        for  (final  Iterator  iter  =  tailMap.values().iterator();  iter.hasNext();)  {  final  Option  option  =  (Option)  iter.next();  if  (option.canProcess(commandLine,  arg))  {  return  true;  }  }      [BUGGY]  if(!looksLikeOption(arg,  options))  {  [BUGGY]      return  false;  }  if  (anonymous.size()  >  0)  {  return  true;  }  return  false;  }  [CLASS]  GroupImpl  [METHOD]  canProcess  [RETURN_TYPE]  boolean  WriteableCommandLine  commandLine  String  arg  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  SortedMap  newOptionMap  optionMap  WriteableCommandLine  commandLine  Iterator  iter  List  anonymous  newAnonymous  options  Option  option  String  arg  description  name  Map  tailMap  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	139	139	1	replace	if(!looksLikeOption(arg,  options))  {	  if(!looksLikeOption(commandLine,    options))    {    	non-compiled	[CE]  illegal  start  of  expression	61	None	replace
203	[BUG]  [BUGGY]  if(!looksLikeOption(commandLine,  options)&&  option.canProcess(commandLine,  arg))  {  [CE]  illegal  start  of  expression  [FE]                  OptionException      [CONTEXT]        for  (final  Iterator  iter  =  tailMap.values().iterator();  iter.hasNext();)  {  final  Option  option  =  (Option)  iter.next();  if  (option.canProcess(commandLine,  arg))  {  return  true;  }  }      [BUGGY]  if(!looksLikeOption(commandLine,  options)&&  option.canProcess(commandLine,  arg))  {  [BUGGY]      return  false;  }  if  (anonymous.size()  >  0)  {  return  true;  }  return  false;  }  [CLASS]  GroupImpl  [METHOD]  canProcess  [RETURN_TYPE]  boolean  WriteableCommandLine  commandLine  String  arg  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  SortedMap  newOptionMap  optionMap  WriteableCommandLine  commandLine  Iterator  iter  List  anonymous  newAnonymous  options  Option  option  String  arg  description  name  Map  tailMap  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	139	139	1	replace	if(!looksLikeOption(commandLine,  options)&&  option.canProcess(commandLine,  arg))  {	  if(!looksLikeOption(commandLine,    options))    {    	non-compiled	[CE]  illegal  start  of  expression	61	None	replace
204	[BUG]  [BUGGY]  if(!option.canProcess(commandLine,  arg)&&!option.canProcess(commandLine,  arg))  {  [CE]  illegal  start  of  expression  [FE]                OptionException      [CONTEXT]        for  (final  Iterator  iter  =  tailMap.values().iterator();  iter.hasNext();)  {  final  Option  option  =  (Option)  iter.next();  if  (option.canProcess(commandLine,  arg))  {  return  true;  }  }      [BUGGY]  if(!option.canProcess(commandLine,  arg)&&!option.canProcess(commandLine,  arg))  {  [BUGGY]      return  false;  }  if  (anonymous.size()  >  0)  {  return  true;  }  return  false;  }  [CLASS]  GroupImpl  [METHOD]  canProcess  [RETURN_TYPE]  boolean  WriteableCommandLine  commandLine  String  arg  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  SortedMap  newOptionMap  optionMap  WriteableCommandLine  commandLine  Iterator  iter  List  anonymous  newAnonymous  options  Option  option  String  arg  description  name  Map  tailMap  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	139	139	1	replace	if(!option.canProcess(commandLine,  arg)&&!option.canProcess(commandLine,  arg))  {	  if(!looksLikeOption(commandLine,    arg)&&!option.canProcess(commandLine,    arg))    {    	non-compiled	[CE]  illegal  start  of  expression	29	None	replace
205	[BUG]  [BUGGY]  if(!looksLikeOption(commandLine)&&!option.canProcess(commandLine,  arg))  {  [CE]  illegal  start  of  expression  [FE]                  OptionException      [CONTEXT]        for  (final  Iterator  iter  =  tailMap.values().iterator();  iter.hasNext();)  {  final  Option  option  =  (Option)  iter.next();  if  (option.canProcess(commandLine,  arg))  {  return  true;  }  }      [BUGGY]  if(!looksLikeOption(commandLine)&&!option.canProcess(commandLine,  arg))  {  [BUGGY]      return  false;  }  if  (anonymous.size()  >  0)  {  return  true;  }  return  false;  }  [CLASS]  GroupImpl  [METHOD]  canProcess  [RETURN_TYPE]  boolean  WriteableCommandLine  commandLine  String  arg  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  SortedMap  newOptionMap  optionMap  WriteableCommandLine  commandLine  Iterator  iter  List  anonymous  newAnonymous  options  Option  option  String  arg  description  name  Map  tailMap  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	139	139	1	replace	if(!looksLikeOption(commandLine)&&!option.canProcess(commandLine,  arg))  {	  if(!looksLikeOption(commandLine,    arg)&&!option.canProcess(commandLine,    arg))    {    	non-compiled	[CE]  illegal  start  of  expression	29	None	replace
206	[BUG]  [BUGGY]  List  <  Option>  newAnonymous  =  optionMap.canProcess(commandLine);  [CE]  illegal  start  of  expression  [FE]                    OptionException      [CONTEXT]        for  (final  Iterator  iter  =  tailMap.values().iterator();  iter.hasNext();)  {  final  Option  option  =  (Option)  iter.next();  if  (option.canProcess(commandLine,  arg))  {  return  true;  }  }      [BUGGY]  List  <  Option>  newAnonymous  =  optionMap.canProcess(commandLine);  [BUGGY]      return  false;  }  if  (anonymous.size()  >  0)  {  return  true;  }  return  false;  }  [CLASS]  GroupImpl  [METHOD]  canProcess  [RETURN_TYPE]  boolean  WriteableCommandLine  commandLine  String  arg  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  SortedMap  newOptionMap  optionMap  WriteableCommandLine  commandLine  Iterator  iter  List  anonymous  newAnonymous  options  Option  option  String  arg  description  name  Map  tailMap  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	139	139	1	replace	List  <  Option>  newAnonymous  =  optionMap.canProcess(commandLine);	  List    <    Option>    newAnonymous    =    option.canProcess(commandLine);    	non-compiled	[CE]  illegal  start  of  expression	51	None	replace
207	[BUG]  [BUGGY]  Set  <  Option>  newAnonymous  =(Set  <  Option>)tailMap.get(arg);  [CE]  illegal  start  of  expression  [FE]                      OptionException      [CONTEXT]        for  (final  Iterator  iter  =  tailMap.values().iterator();  iter.hasNext();)  {  final  Option  option  =  (Option)  iter.next();  if  (option.canProcess(commandLine,  arg))  {  return  true;  }  }      [BUGGY]  Set  <  Option>  newAnonymous  =(Set  <  Option>)tailMap.get(arg);  [BUGGY]      if  (looksLikeOption(commandLine,  arg))  {  return  false;  }  if  (anonymous.size()  >  0)  {  return  true;  }  return  false;  }  [CLASS]  GroupImpl  [METHOD]  canProcess  [RETURN_TYPE]  boolean  WriteableCommandLine  commandLine  String  arg  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  SortedMap  newOptionMap  optionMap  WriteableCommandLine  commandLine  Iterator  iter  List  anonymous  newAnonymous  options  Option  option  String  arg  description  name  Map  tailMap  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	139	139	1	replace	Set  <  Option>  newAnonymous  =(Set  <  Option>)tailMap.get(arg);	  List    <    Option>    newAnonymous    =(List    <    Option>)tailMap.get(arg);    	non-compiled	[CE]  illegal  start  of  expression	44	None	replace
208	[BUG]  [BUGGY]  List  <  Option>  options  =  selectionMap.keySet().iterator();  [CE]  illegal  start  of  expression  [FE]              OptionException      [CONTEXT]        for  (final  Iterator  iter  =  tailMap.values().iterator();  iter.hasNext();)  {  final  Option  option  =  (Option)  iter.next();  if  (option.canProcess(commandLine,  arg))  {  return  true;  }  }      [BUGGY]  List  <  Option>  options  =  selectionMap.keySet().iterator();  [BUGGY]      if  (looksLikeOption(commandLine,  arg))  {  return  false;  }  if  (anonymous.size()  >  0)  {  return  true;  }  return  false;  }  [CLASS]  GroupImpl  [METHOD]  canProcess  [RETURN_TYPE]  boolean  WriteableCommandLine  commandLine  String  arg  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  SortedMap  newOptionMap  optionMap  WriteableCommandLine  commandLine  Iterator  iter  List  anonymous  newAnonymous  options  Option  option  String  arg  description  name  Map  tailMap  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	139	139	1	replace	List  <  Option>  options  =  selectionMap.keySet().iterator();	  List    <    Option>    options    =    optionMap.keySet().iterator();    	non-compiled	[CE]  illegal  start  of  expression	81	None	replace
209	[BUG]  [BUGGY]  if(looksLikeOption(option,  false)||  isEnabled(iter.next()))  {  [CE]  illegal  start  of  expression  [FE]                    OptionException      [CONTEXT]        for  (final  Iterator  iter  =  tailMap.values().iterator();  iter.hasNext();)  {  final  Option  option  =  (Option)  iter.next();  if  (option.canProcess(commandLine,  arg))  {  return  true;  }  }      [BUGGY]  if(looksLikeOption(option,  false)||  isEnabled(iter.next()))  {  [BUGGY]      return  false;  }  if  (anonymous.size()  >  0)  {  return  true;  }  return  false;  }  [CLASS]  GroupImpl  [METHOD]  canProcess  [RETURN_TYPE]  boolean  WriteableCommandLine  commandLine  String  arg  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  SortedMap  newOptionMap  optionMap  WriteableCommandLine  commandLine  Iterator  iter  List  anonymous  newAnonymous  options  Option  option  String  arg  description  name  Map  tailMap  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	139	139	1	replace	if(looksLikeOption(option,  false)||  isEnabled(iter.next()))  {	  if(looksLikeOption(commandLine,    false)||    isEnabled(iter.next()))    {    	non-compiled	[CE]  illegal  start  of  expression	34	None	replace
210	[BUG]  [BUGGY]  if(looksLikeOption(option,  false)&&  isEnabled(iter.next()))  {  [CE]  illegal  start  of  expression  [FE]                      OptionException      [CONTEXT]        for  (final  Iterator  iter  =  tailMap.values().iterator();  iter.hasNext();)  {  final  Option  option  =  (Option)  iter.next();  if  (option.canProcess(commandLine,  arg))  {  return  true;  }  }      [BUGGY]  if(looksLikeOption(option,  false)&&  isEnabled(iter.next()))  {  [BUGGY]      return  false;  }  if  (anonymous.size()  >  0)  {  return  true;  }  return  false;  }  [CLASS]  GroupImpl  [METHOD]  canProcess  [RETURN_TYPE]  boolean  WriteableCommandLine  commandLine  String  arg  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  SortedMap  newOptionMap  optionMap  WriteableCommandLine  commandLine  Iterator  iter  List  anonymous  newAnonymous  options  Option  option  String  arg  description  name  Map  tailMap  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	139	139	1	replace	if(looksLikeOption(option,  false)&&  isEnabled(iter.next()))  {	  if(looksLikeOption(commandLine,    false)||    isEnabled(iter.next()))    {    	non-compiled	[CE]  illegal  start  of  expression	34	None	replace
211	[BUG]  [BUGGY]  final  List  <  Option>  options  =  optionMap.keySet().iterator();  [CE]  illegal  start  of  expression  [FE]                  OptionException      [CONTEXT]        for  (final  Iterator  iter  =  tailMap.values().iterator();  iter.hasNext();)  {  final  Option  option  =  (Option)  iter.next();  if  (option.canProcess(commandLine,  arg))  {  return  true;  }  }      [BUGGY]  final  List  <  Option>  options  =  optionMap.keySet().iterator();  [BUGGY]      if  (looksLikeOption(commandLine,  arg))  {  return  false;  }  if  (anonymous.size()  >  0)  {  return  true;  }  return  false;  }  [CLASS]  GroupImpl  [METHOD]  canProcess  [RETURN_TYPE]  boolean  WriteableCommandLine  commandLine  String  arg  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  SortedMap  newOptionMap  optionMap  WriteableCommandLine  commandLine  Iterator  iter  List  anonymous  newAnonymous  options  Option  option  String  arg  description  name  Map  tailMap  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	139	139	1	replace	final  List  <  Option>  options  =  optionMap.keySet().iterator();	  final    List    <    Option>    options    =    optionMap.values().iterator();    	non-compiled	[CE]  illegal  start  of  expression	37	None	replace
212	[BUG]  [BUGGY]  List  <  Option>  newAnonymous  =(List  <  Option>)optionMap.next();  [CE]  illegal  start  of  expression  [FE]                  OptionException      [CONTEXT]        for  (final  Iterator  iter  =  tailMap.values().iterator();  iter.hasNext();)  {  final  Option  option  =  (Option)  iter.next();  if  (option.canProcess(commandLine,  arg))  {  return  true;  }  }      [BUGGY]  List  <  Option>  newAnonymous  =(List  <  Option>)optionMap.next();  [BUGGY]      if  (looksLikeOption(commandLine,  arg))  {  return  false;  }  if  (anonymous.size()  >  0)  {  return  true;  }  return  false;  }  [CLASS]  GroupImpl  [METHOD]  canProcess  [RETURN_TYPE]  boolean  WriteableCommandLine  commandLine  String  arg  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  SortedMap  newOptionMap  optionMap  WriteableCommandLine  commandLine  Iterator  iter  List  anonymous  newAnonymous  options  Option  option  String  arg  description  name  Map  tailMap  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	139	139	1	replace	List  <  Option>  newAnonymous  =(List  <  Option>)optionMap.next();	  List    <    Option>    newAnonymous    =(List    <    Option>)option.next();    	non-compiled	[CE]  illegal  start  of  expression	68	None	replace
213	[BUG]  [BUGGY]  if(looksLikeOption(option,  null)&&  options.canProcess(commandLine,  arg))  {  [CE]  illegal  start  of  expression  [FE]                      OptionException      [CONTEXT]        for  (final  Iterator  iter  =  tailMap.values().iterator();  iter.hasNext();)  {  final  Option  option  =  (Option)  iter.next();  if  (option.canProcess(commandLine,  arg))  {  return  true;  }  }      [BUGGY]  if(looksLikeOption(option,  null)&&  options.canProcess(commandLine,  arg))  {  [BUGGY]      return  false;  }  if  (anonymous.size()  >  0)  {  return  true;  }  return  false;  }  [CLASS]  GroupImpl  [METHOD]  canProcess  [RETURN_TYPE]  boolean  WriteableCommandLine  commandLine  String  arg  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  SortedMap  newOptionMap  optionMap  WriteableCommandLine  commandLine  Iterator  iter  List  anonymous  newAnonymous  options  Option  option  String  arg  description  name  Map  tailMap  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	139	139	1	replace	if(looksLikeOption(option,  null)&&  options.canProcess(commandLine,  arg))  {	  if(looksLikeOption(commandLine,    null)&&    options.canProcess(commandLine,    arg))    {    	non-compiled	[CE]  illegal  start  of  expression	3	None	replace
214	[BUG]  [BUGGY]  if(hasOption(option,  null)&&  options.canProcess(commandLine,  arg))  {  [CE]  illegal  start  of  expression  [FE]                        OptionException      [CONTEXT]        for  (final  Iterator  iter  =  tailMap.values().iterator();  iter.hasNext();)  {  final  Option  option  =  (Option)  iter.next();  if  (option.canProcess(commandLine,  arg))  {  return  true;  }  }      [BUGGY]  if(hasOption(option,  null)&&  options.canProcess(commandLine,  arg))  {  [BUGGY]      return  false;  }  if  (anonymous.size()  >  0)  {  return  true;  }  return  false;  }  [CLASS]  GroupImpl  [METHOD]  canProcess  [RETURN_TYPE]  boolean  WriteableCommandLine  commandLine  String  arg  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  SortedMap  newOptionMap  optionMap  WriteableCommandLine  commandLine  Iterator  iter  List  anonymous  newAnonymous  options  Option  option  String  arg  description  name  Map  tailMap  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	139	139	1	replace	if(hasOption(option,  null)&&  options.canProcess(commandLine,  arg))  {	  if(looksLikeOption(commandLine,    null)&&    options.canProcess(commandLine,    arg))    {    	non-compiled	[CE]  illegal  start  of  expression	3	None	replace
215	[BUG]  [BUGGY]  if(looksLikeOption(arg,  null)&&  options.canProcess(commandLine,  arg))  {  [CE]  illegal  start  of  expression  [FE]                          OptionException      [CONTEXT]        for  (final  Iterator  iter  =  tailMap.values().iterator();  iter.hasNext();)  {  final  Option  option  =  (Option)  iter.next();  if  (option.canProcess(commandLine,  arg))  {  return  true;  }  }      [BUGGY]  if(looksLikeOption(arg,  null)&&  options.canProcess(commandLine,  arg))  {  [BUGGY]      return  false;  }  if  (anonymous.size()  >  0)  {  return  true;  }  return  false;  }  [CLASS]  GroupImpl  [METHOD]  canProcess  [RETURN_TYPE]  boolean  WriteableCommandLine  commandLine  String  arg  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  SortedMap  newOptionMap  optionMap  WriteableCommandLine  commandLine  Iterator  iter  List  anonymous  newAnonymous  options  Option  option  String  arg  description  name  Map  tailMap  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	139	139	1	replace	if(looksLikeOption(arg,  null)&&  options.canProcess(commandLine,  arg))  {	  if(looksLikeOption(commandLine,    null)&&    options.canProcess(commandLine,    arg))    {    	non-compiled	[CE]  illegal  start  of  expression	3	None	replace
216	[BUG]  [BUGGY]  if(!looksLikeOption(option,  commandLine))  {  [CE]  illegal  start  of  expression  [FE]                OptionException      [CONTEXT]        for  (final  Iterator  iter  =  tailMap.values().iterator();  iter.hasNext();)  {  final  Option  option  =  (Option)  iter.next();  if  (option.canProcess(commandLine,  arg))  {  return  true;  }  }      [BUGGY]  if(!looksLikeOption(option,  commandLine))  {  [BUGGY]      return  false;  }  if  (anonymous.size()  >  0)  {  return  true;  }  return  false;  }  [CLASS]  GroupImpl  [METHOD]  canProcess  [RETURN_TYPE]  boolean  WriteableCommandLine  commandLine  String  arg  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  SortedMap  newOptionMap  optionMap  WriteableCommandLine  commandLine  Iterator  iter  List  anonymous  newAnonymous  options  Option  option  String  arg  description  name  Map  tailMap  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	139	139	1	replace	if(!looksLikeOption(option,  commandLine))  {	  if(!looksLikeOption(commandLine,    option))    {    	non-compiled	[CE]  illegal  start  of  expression	62	None	replace
217	[BUG]  [BUGGY]  if(!looksLikeOption(arg,  option))  {  [CE]  illegal  start  of  expression  [FE]                  OptionException      [CONTEXT]        for  (final  Iterator  iter  =  tailMap.values().iterator();  iter.hasNext();)  {  final  Option  option  =  (Option)  iter.next();  if  (option.canProcess(commandLine,  arg))  {  return  true;  }  }      [BUGGY]  if(!looksLikeOption(arg,  option))  {  [BUGGY]      return  false;  }  if  (anonymous.size()  >  0)  {  return  true;  }  return  false;  }  [CLASS]  GroupImpl  [METHOD]  canProcess  [RETURN_TYPE]  boolean  WriteableCommandLine  commandLine  String  arg  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  SortedMap  newOptionMap  optionMap  WriteableCommandLine  commandLine  Iterator  iter  List  anonymous  newAnonymous  options  Option  option  String  arg  description  name  Map  tailMap  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	139	139	1	replace	if(!looksLikeOption(arg,  option))  {	  if(!looksLikeOption(commandLine,    option))    {    	non-compiled	[CE]  illegal  start  of  expression	62	None	replace
218	[BUG]  [BUGGY]  if(!looksLikeOption(commandLine)&&  option.canProcess(commandLine,  arg))  {  [CE]  illegal  start  of  expression  [FE]                  OptionException      [CONTEXT]        for  (final  Iterator  iter  =  tailMap.values().iterator();  iter.hasNext();)  {  final  Option  option  =  (Option)  iter.next();  if  (option.canProcess(commandLine,  arg))  {  return  true;  }  }      [BUGGY]  if(!looksLikeOption(commandLine)&&  option.canProcess(commandLine,  arg))  {  [BUGGY]      return  false;  }  if  (anonymous.size()  >  0)  {  return  true;  }  return  false;  }  [CLASS]  GroupImpl  [METHOD]  canProcess  [RETURN_TYPE]  boolean  WriteableCommandLine  commandLine  String  arg  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  SortedMap  newOptionMap  optionMap  WriteableCommandLine  commandLine  Iterator  iter  List  anonymous  newAnonymous  options  Option  option  String  arg  description  name  Map  tailMap  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	139	139	1	replace	if(!looksLikeOption(commandLine)&&  option.canProcess(commandLine,  arg))  {	  if(!looksLikeOption(commandLine,    arg)&&    option.canProcess(commandLine,    arg))    {    	non-compiled	[CE]  illegal  start  of  expression	30	None	replace
219	[BUG]  [BUGGY]  if(!optionMap.canProcess(commandLine,  arg)||!option.canProcess(commandLine,  arg))  {  [CE]  illegal  start  of  expression  [FE]              OptionException      [CONTEXT]        for  (final  Iterator  iter  =  tailMap.values().iterator();  iter.hasNext();)  {  final  Option  option  =  (Option)  iter.next();  if  (option.canProcess(commandLine,  arg))  {  return  true;  }  }      [BUGGY]  if(!optionMap.canProcess(commandLine,  arg)||!option.canProcess(commandLine,  arg))  {  [BUGGY]      return  false;  }  if  (anonymous.size()  >  0)  {  return  true;  }  return  false;  }  [CLASS]  GroupImpl  [METHOD]  canProcess  [RETURN_TYPE]  boolean  WriteableCommandLine  commandLine  String  arg  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  SortedMap  newOptionMap  optionMap  WriteableCommandLine  commandLine  Iterator  iter  List  anonymous  newAnonymous  options  Option  option  String  arg  description  name  Map  tailMap  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	139	139	1	replace	if(!optionMap.canProcess(commandLine,  arg)||!option.canProcess(commandLine,  arg))  {	  if(!looksLikeOption(commandLine,    arg)||!option.canProcess(commandLine,    arg))    {    	non-compiled	[CE]  illegal  start  of  expression	28	None	replace
220	[BUG]  [BUGGY]  if(!looksLikeOption(option,  false))  {  [CE]  illegal  start  of  expression  [FE]                OptionException      [CONTEXT]        for  (final  Iterator  iter  =  tailMap.values().iterator();  iter.hasNext();)  {  final  Option  option  =  (Option)  iter.next();  if  (option.canProcess(commandLine,  arg))  {  return  true;  }  }      [BUGGY]  if(!looksLikeOption(option,  false))  {  [BUGGY]      return  false;  }  if  (anonymous.size()  >  0)  {  return  true;  }  return  false;  }  [CLASS]  GroupImpl  [METHOD]  canProcess  [RETURN_TYPE]  boolean  WriteableCommandLine  commandLine  String  arg  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  SortedMap  newOptionMap  optionMap  WriteableCommandLine  commandLine  Iterator  iter  List  anonymous  newAnonymous  options  Option  option  String  arg  description  name  Map  tailMap  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	139	139	1	replace	if(!looksLikeOption(option,  false))  {	  if(!looksLikeOption(commandLine,    false))    {    	non-compiled	[CE]  illegal  start  of  expression	32	None	replace
221	[BUG]  [BUGGY]  List  <  Option>  options  =  option.values().iterator();  [CE]  illegal  start  of  expression  [FE]                OptionException      [CONTEXT]        for  (final  Iterator  iter  =  tailMap.values().iterator();  iter.hasNext();)  {  final  Option  option  =  (Option)  iter.next();  if  (option.canProcess(commandLine,  arg))  {  return  true;  }  }      [BUGGY]  List  <  Option>  options  =  option.values().iterator();  [BUGGY]      if  (looksLikeOption(commandLine,  arg))  {  return  false;  }  if  (anonymous.size()  >  0)  {  return  true;  }  return  false;  }  [CLASS]  GroupImpl  [METHOD]  canProcess  [RETURN_TYPE]  boolean  WriteableCommandLine  commandLine  String  arg  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  SortedMap  newOptionMap  optionMap  WriteableCommandLine  commandLine  Iterator  iter  List  anonymous  newAnonymous  options  Option  option  String  arg  description  name  Map  tailMap  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	139	139	1	replace	List  <  Option>  options  =  option.values().iterator();	  List    <    Option>    options    =    newAnonymous.values().iterator();    	non-compiled	[CE]  illegal  start  of  expression	36	None	replace
222	[BUG]  [BUGGY]  if(!canProcessLikeOption(option,  arg))  {  [CE]  illegal  start  of  expression  [FE]              OptionException      [CONTEXT]        for  (final  Iterator  iter  =  tailMap.values().iterator();  iter.hasNext();)  {  final  Option  option  =  (Option)  iter.next();  if  (option.canProcess(commandLine,  arg))  {  return  true;  }  }      [BUGGY]  if(!canProcessLikeOption(option,  arg))  {  [BUGGY]      return  false;  }  if  (anonymous.size()  >  0)  {  return  true;  }  return  false;  }  [CLASS]  GroupImpl  [METHOD]  canProcess  [RETURN_TYPE]  boolean  WriteableCommandLine  commandLine  String  arg  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  SortedMap  newOptionMap  optionMap  WriteableCommandLine  commandLine  Iterator  iter  List  anonymous  newAnonymous  options  Option  option  String  arg  description  name  Map  tailMap  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	139	139	1	replace	if(!canProcessLikeOption(option,  arg))  {	  if(!canProcessLikeOption(commandLine,    arg))    {    	non-compiled	[CE]  illegal  start  of  expression	42	None	replace
223	[BUG]  [BUGGY]  if(hasArg()  &&  isLikeOption(arg,  false))  {  [CE]  illegal  start  of  expression  [FE]              OptionException      [CONTEXT]        for  (final  Iterator  iter  =  tailMap.values().iterator();  iter.hasNext();)  {  final  Option  option  =  (Option)  iter.next();  if  (option.canProcess(commandLine,  arg))  {  return  true;  }  }      [BUGGY]  if(hasArg()  &&  isLikeOption(arg,  false))  {  [BUGGY]      return  false;  }  if  (anonymous.size()  >  0)  {  return  true;  }  return  false;  }  [CLASS]  GroupImpl  [METHOD]  canProcess  [RETURN_TYPE]  boolean  WriteableCommandLine  commandLine  String  arg  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  SortedMap  newOptionMap  optionMap  WriteableCommandLine  commandLine  Iterator  iter  List  anonymous  newAnonymous  options  Option  option  String  arg  description  name  Map  tailMap  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	139	139	1	replace	if(hasArg()  &&  isLikeOption(arg,  false))  {	  if(looksLikeOption(arg,    false))    {    	non-compiled	[CE]  illegal  start  of  expression	57	None	replace
224	[BUG]  [BUGGY]  if(option.canProcess(arg,  commandLine))  {  [CE]  illegal  start  of  expression  [FE]            OptionException      [CONTEXT]        for  (final  Iterator  iter  =  tailMap.values().iterator();  iter.hasNext();)  {  final  Option  option  =  (Option)  iter.next();  if  (option.canProcess(commandLine,  arg))  {  return  true;  }  }      [BUGGY]  if(option.canProcess(arg,  commandLine))  {  [BUGGY]      return  false;  }  if  (anonymous.size()  >  0)  {  return  true;  }  return  false;  }  [CLASS]  GroupImpl  [METHOD]  canProcess  [RETURN_TYPE]  boolean  WriteableCommandLine  commandLine  String  arg  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  SortedMap  newOptionMap  optionMap  WriteableCommandLine  commandLine  Iterator  iter  List  anonymous  newAnonymous  options  Option  option  String  arg  description  name  Map  tailMap  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	139	139	1	replace	if(option.canProcess(arg,  commandLine))  {	  if(option.canProcess(commandLine,    arg))    {    	non-compiled	[CE]  illegal  start  of  expression	53	None	replace
225	[BUG]  [BUGGY]  if(option.canProcess(commandLine,  null))  {  [CE]  illegal  start  of  expression  [FE]              OptionException      [CONTEXT]        for  (final  Iterator  iter  =  tailMap.values().iterator();  iter.hasNext();)  {  final  Option  option  =  (Option)  iter.next();  if  (option.canProcess(commandLine,  arg))  {  return  true;  }  }      [BUGGY]  if(option.canProcess(commandLine,  null))  {  [BUGGY]      return  false;  }  if  (anonymous.size()  >  0)  {  return  true;  }  return  false;  }  [CLASS]  GroupImpl  [METHOD]  canProcess  [RETURN_TYPE]  boolean  WriteableCommandLine  commandLine  String  arg  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  SortedMap  newOptionMap  optionMap  WriteableCommandLine  commandLine  Iterator  iter  List  anonymous  newAnonymous  options  Option  option  String  arg  description  name  Map  tailMap  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	139	139	1	replace	if(option.canProcess(commandLine,  null))  {	  if(option.canProcess(commandLine,    arg))    {    	non-compiled	[CE]  illegal  start  of  expression	53	None	replace
226	[BUG]  [BUGGY]  if(option.canProcess(commandLine,  name))  {  [CE]  illegal  start  of  expression  [FE]                OptionException      [CONTEXT]        for  (final  Iterator  iter  =  tailMap.values().iterator();  iter.hasNext();)  {  final  Option  option  =  (Option)  iter.next();  if  (option.canProcess(commandLine,  arg))  {  return  true;  }  }      [BUGGY]  if(option.canProcess(commandLine,  name))  {  [BUGGY]      return  false;  }  if  (anonymous.size()  >  0)  {  return  true;  }  return  false;  }  [CLASS]  GroupImpl  [METHOD]  canProcess  [RETURN_TYPE]  boolean  WriteableCommandLine  commandLine  String  arg  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  SortedMap  newOptionMap  optionMap  WriteableCommandLine  commandLine  Iterator  iter  List  anonymous  newAnonymous  options  Option  option  String  arg  description  name  Map  tailMap  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	139	139	1	replace	if(option.canProcess(commandLine,  name))  {	  if(option.canProcess(commandLine,    arg))    {    	non-compiled	[CE]  illegal  start  of  expression	53	None	replace
227	[BUG]  [BUGGY]  if(hasOption(option,  description)&&  options.canProcess(commandLine,  arg))  {  [CE]  illegal  start  of  expression  [FE]                    OptionException      [CONTEXT]        for  (final  Iterator  iter  =  tailMap.values().iterator();  iter.hasNext();)  {  final  Option  option  =  (Option)  iter.next();  if  (option.canProcess(commandLine,  arg))  {  return  true;  }  }      [BUGGY]  if(hasOption(option,  description)&&  options.canProcess(commandLine,  arg))  {  [BUGGY]      return  false;  }  if  (anonymous.size()  >  0)  {  return  true;  }  return  false;  }  [CLASS]  GroupImpl  [METHOD]  canProcess  [RETURN_TYPE]  boolean  WriteableCommandLine  commandLine  String  arg  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  SortedMap  newOptionMap  optionMap  WriteableCommandLine  commandLine  Iterator  iter  List  anonymous  newAnonymous  options  Option  option  String  arg  description  name  Map  tailMap  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	139	139	1	replace	if(hasOption(option,  description)&&  options.canProcess(commandLine,  arg))  {	  if(hasOption(option,    commandLine)||    options.canProcess(commandLine,    arg))    {    	non-compiled	[CE]  illegal  start  of  expression	9	None	replace
228	[BUG]  [BUGGY]  if(hasOption(option,  name)&&  options.canProcess(commandLine,  arg))  {  [CE]  illegal  start  of  expression  [FE]                      OptionException      [CONTEXT]        for  (final  Iterator  iter  =  tailMap.values().iterator();  iter.hasNext();)  {  final  Option  option  =  (Option)  iter.next();  if  (option.canProcess(commandLine,  arg))  {  return  true;  }  }      [BUGGY]  if(hasOption(option,  name)&&  options.canProcess(commandLine,  arg))  {  [BUGGY]      return  false;  }  if  (anonymous.size()  >  0)  {  return  true;  }  return  false;  }  [CLASS]  GroupImpl  [METHOD]  canProcess  [RETURN_TYPE]  boolean  WriteableCommandLine  commandLine  String  arg  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  SortedMap  newOptionMap  optionMap  WriteableCommandLine  commandLine  Iterator  iter  List  anonymous  newAnonymous  options  Option  option  String  arg  description  name  Map  tailMap  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	139	139	1	replace	if(hasOption(option,  name)&&  options.canProcess(commandLine,  arg))  {	  if(hasOption(option,    commandLine)||    options.canProcess(commandLine,    arg))    {    	non-compiled	[CE]  illegal  start  of  expression	9	None	replace
229	[BUG]  [BUGGY]  if(hasArg()  &&  isLikeOption(option,  commandLine))  {  [CE]  illegal  start  of  expression  [FE]              OptionException      [CONTEXT]        for  (final  Iterator  iter  =  tailMap.values().iterator();  iter.hasNext();)  {  final  Option  option  =  (Option)  iter.next();  if  (option.canProcess(commandLine,  arg))  {  return  true;  }  }      [BUGGY]  if(hasArg()  &&  isLikeOption(option,  commandLine))  {  [BUGGY]      return  false;  }  if  (anonymous.size()  >  0)  {  return  true;  }  return  false;  }  [CLASS]  GroupImpl  [METHOD]  canProcess  [RETURN_TYPE]  boolean  WriteableCommandLine  commandLine  String  arg  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  SortedMap  newOptionMap  optionMap  WriteableCommandLine  commandLine  Iterator  iter  List  anonymous  newAnonymous  options  Option  option  String  arg  description  name  Map  tailMap  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	139	139	1	replace	if(hasArg()  &&  isLikeOption(option,  commandLine))  {	  if(hasArg()    &&    isLikeOption(commandLine,    arg))    {    	non-compiled	[CE]  illegal  start  of  expression	80	None	replace
230	[BUG]  [BUGGY]  Option  option  =  optionMap.getOption(arg,  description);  [CE]  illegal  start  of  expression  [FE]                OptionException      [CONTEXT]        for  (final  Iterator  iter  =  tailMap.values().iterator();  iter.hasNext();)  {  final  Option  option  =  (Option)  iter.next();  if  (option.canProcess(commandLine,  arg))  {  return  true;  }  }      [BUGGY]  Option  option  =  optionMap.getOption(arg,  description);  [BUGGY]      if  (looksLikeOption(commandLine,  arg))  {  return  false;  }  if  (anonymous.size()  >  0)  {  return  true;  }  return  false;  }  [CLASS]  GroupImpl  [METHOD]  canProcess  [RETURN_TYPE]  boolean  WriteableCommandLine  commandLine  String  arg  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  SortedMap  newOptionMap  optionMap  WriteableCommandLine  commandLine  Iterator  iter  List  anonymous  newAnonymous  options  Option  option  String  arg  description  name  Map  tailMap  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	139	139	1	replace	Option  option  =  optionMap.getOption(arg,  description);	  Option    option    =    optionMap.getOption(arg);    	non-compiled	[CE]  illegal  start  of  expression	38	None	replace
231	[BUG]  [BUGGY]  Option  option  =  option.getOption(commandLine,  null);  [CE]  illegal  start  of  expression  [FE]              OptionException      [CONTEXT]        for  (final  Iterator  iter  =  tailMap.values().iterator();  iter.hasNext();)  {  final  Option  option  =  (Option)  iter.next();  if  (option.canProcess(commandLine,  arg))  {  return  true;  }  }      [BUGGY]  Option  option  =  option.getOption(commandLine,  null);  [BUGGY]      if  (looksLikeOption(commandLine,  arg))  {  return  false;  }  if  (anonymous.size()  >  0)  {  return  true;  }  return  false;  }  [CLASS]  GroupImpl  [METHOD]  canProcess  [RETURN_TYPE]  boolean  WriteableCommandLine  commandLine  String  arg  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  SortedMap  newOptionMap  optionMap  WriteableCommandLine  commandLine  Iterator  iter  List  anonymous  newAnonymous  options  Option  option  String  arg  description  name  Map  tailMap  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	139	139	1	replace	Option  option  =  option.getOption(commandLine,  null);	  Option    option    =    option.getOption(commandLine,    description);    	non-compiled	[CE]  illegal  start  of  expression	23	None	replace
232	[BUG]  [BUGGY]  Option  option  =  option.getOption(commandLine,  name);  [CE]  illegal  start  of  expression  [FE]                    OptionException      [CONTEXT]        for  (final  Iterator  iter  =  tailMap.values().iterator();  iter.hasNext();)  {  final  Option  option  =  (Option)  iter.next();  if  (option.canProcess(commandLine,  arg))  {  return  true;  }  }      [BUGGY]  Option  option  =  option.getOption(commandLine,  name);  [BUGGY]      if  (looksLikeOption(commandLine,  arg))  {  return  false;  }  if  (anonymous.size()  >  0)  {  return  true;  }  return  false;  }  [CLASS]  GroupImpl  [METHOD]  canProcess  [RETURN_TYPE]  boolean  WriteableCommandLine  commandLine  String  arg  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  SortedMap  newOptionMap  optionMap  WriteableCommandLine  commandLine  Iterator  iter  List  anonymous  newAnonymous  options  Option  option  String  arg  description  name  Map  tailMap  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	139	139	1	replace	Option  option  =  option.getOption(commandLine,  name);	  Option    option    =    option.getOption(commandLine,    arg);    	non-compiled	[CE]  illegal  start  of  expression	40	None	replace
233	[BUG]  [BUGGY]  if(canProcess(option)||  options.canProcess(commandLine,  arg))  {  [CE]  illegal  start  of  expression  [FE]                OptionException      [CONTEXT]        for  (final  Iterator  iter  =  tailMap.values().iterator();  iter.hasNext();)  {  final  Option  option  =  (Option)  iter.next();  if  (option.canProcess(commandLine,  arg))  {  return  true;  }  }      [BUGGY]  if(canProcess(option)||  options.canProcess(commandLine,  arg))  {  [BUGGY]      return  false;  }  if  (anonymous.size()  >  0)  {  return  true;  }  return  false;  }  [CLASS]  GroupImpl  [METHOD]  canProcess  [RETURN_TYPE]  boolean  WriteableCommandLine  commandLine  String  arg  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  SortedMap  newOptionMap  optionMap  WriteableCommandLine  commandLine  Iterator  iter  List  anonymous  newAnonymous  options  Option  option  String  arg  description  name  Map  tailMap  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	139	139	1	replace	if(canProcess(option)||  options.canProcess(commandLine,  arg))  {	  if(hasOption(option)||    options.canProcess(commandLine,    arg))    {    	non-compiled	[CE]  illegal  start  of  expression	67	None	replace
234	[BUG]  [BUGGY]  if(hasOption(option)||  options.canProcess(commandLine,  null))  {  [CE]  illegal  start  of  expression  [FE]                  OptionException      [CONTEXT]        for  (final  Iterator  iter  =  tailMap.values().iterator();  iter.hasNext();)  {  final  Option  option  =  (Option)  iter.next();  if  (option.canProcess(commandLine,  arg))  {  return  true;  }  }      [BUGGY]  if(hasOption(option)||  options.canProcess(commandLine,  null))  {  [BUGGY]      return  false;  }  if  (anonymous.size()  >  0)  {  return  true;  }  return  false;  }  [CLASS]  GroupImpl  [METHOD]  canProcess  [RETURN_TYPE]  boolean  WriteableCommandLine  commandLine  String  arg  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  SortedMap  newOptionMap  optionMap  WriteableCommandLine  commandLine  Iterator  iter  List  anonymous  newAnonymous  options  Option  option  String  arg  description  name  Map  tailMap  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	139	139	1	replace	if(hasOption(option)||  options.canProcess(commandLine,  null))  {	  if(hasOption(option)||    options.canProcess(commandLine,    arg))    {    	non-compiled	[CE]  illegal  start  of  expression	67	None	replace
235	[BUG]  [BUGGY]  if(!hasArg()  &&!looksLikeOption(option,  arg))  {  [CE]  illegal  start  of  expression  [FE]            OptionException      [CONTEXT]        for  (final  Iterator  iter  =  tailMap.values().iterator();  iter.hasNext();)  {  final  Option  option  =  (Option)  iter.next();  if  (option.canProcess(commandLine,  arg))  {  return  true;  }  }      [BUGGY]  if(!hasArg()  &&!looksLikeOption(option,  arg))  {  [BUGGY]      return  false;  }  if  (anonymous.size()  >  0)  {  return  true;  }  return  false;  }  [CLASS]  GroupImpl  [METHOD]  canProcess  [RETURN_TYPE]  boolean  WriteableCommandLine  commandLine  String  arg  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  SortedMap  newOptionMap  optionMap  WriteableCommandLine  commandLine  Iterator  iter  List  anonymous  newAnonymous  options  Option  option  String  arg  description  name  Map  tailMap  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	139	139	1	replace	if(!hasArg()  &&!looksLikeOption(option,  arg))  {	  if(!looksLikeOption(option,    arg))    {    	non-compiled	[CE]  illegal  start  of  expression	60	None	replace
236	[BUG]  [BUGGY]  if(!hasArg()  &&!looksLikeOption(commandLine,  arg))  {  [CE]  illegal  start  of  expression  [FE]              OptionException      [CONTEXT]        for  (final  Iterator  iter  =  tailMap.values().iterator();  iter.hasNext();)  {  final  Option  option  =  (Option)  iter.next();  if  (option.canProcess(commandLine,  arg))  {  return  true;  }  }      [BUGGY]  if(!hasArg()  &&!looksLikeOption(commandLine,  arg))  {  [BUGGY]      return  false;  }  if  (anonymous.size()  >  0)  {  return  true;  }  return  false;  }  [CLASS]  GroupImpl  [METHOD]  canProcess  [RETURN_TYPE]  boolean  WriteableCommandLine  commandLine  String  arg  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  SortedMap  newOptionMap  optionMap  WriteableCommandLine  commandLine  Iterator  iter  List  anonymous  newAnonymous  options  Option  option  String  arg  description  name  Map  tailMap  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	139	139	1	replace	if(!hasArg()  &&!looksLikeOption(commandLine,  arg))  {	  if(!looksLikeOption(option,    arg))    {    	non-compiled	[CE]  illegal  start  of  expression	60	None	replace
237	[BUG]  [BUGGY]  if(!canProcessOption(option,  arg))  {  [CE]  illegal  start  of  expression  [FE]            OptionException      [CONTEXT]        for  (final  Iterator  iter  =  tailMap.values().iterator();  iter.hasNext();)  {  final  Option  option  =  (Option)  iter.next();  if  (option.canProcess(commandLine,  arg))  {  return  true;  }  }      [BUGGY]  if(!canProcessOption(option,  arg))  {  [BUGGY]      return  false;  }  if  (anonymous.size()  >  0)  {  return  true;  }  return  false;  }  [CLASS]  GroupImpl  [METHOD]  canProcess  [RETURN_TYPE]  boolean  WriteableCommandLine  commandLine  String  arg  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  SortedMap  newOptionMap  optionMap  WriteableCommandLine  commandLine  Iterator  iter  List  anonymous  newAnonymous  options  Option  option  String  arg  description  name  Map  tailMap  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	139	139	1	replace	if(!canProcessOption(option,  arg))  {	  if(!canProcessOption(commandLine,    arg))    {    	non-compiled	[CE]  illegal  start  of  expression	27	None	replace
238	[BUG]  [BUGGY]  if(looksLikeOption(commandLine)&&  isEnabled(iter.next()))  {  [CE]  illegal  start  of  expression  [FE]                  OptionException      [CONTEXT]        for  (final  Iterator  iter  =  tailMap.values().iterator();  iter.hasNext();)  {  final  Option  option  =  (Option)  iter.next();  if  (option.canProcess(commandLine,  arg))  {  return  true;  }  }      [BUGGY]  if(looksLikeOption(commandLine)&&  isEnabled(iter.next()))  {  [BUGGY]      return  false;  }  if  (anonymous.size()  >  0)  {  return  true;  }  return  false;  }  [CLASS]  GroupImpl  [METHOD]  canProcess  [RETURN_TYPE]  boolean  WriteableCommandLine  commandLine  String  arg  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  SortedMap  newOptionMap  optionMap  WriteableCommandLine  commandLine  Iterator  iter  List  anonymous  newAnonymous  options  Option  option  String  arg  description  name  Map  tailMap  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	139	139	1	replace	if(looksLikeOption(commandLine)&&  isEnabled(iter.next()))  {	  if(looksLikeOption(commandLine,    true)||    isEnabled(iter.next()))    {    	non-compiled	[CE]  illegal  start  of  expression	33	None	replace
239	[BUG]  [BUGGY]  if(isEnabled(iter.next()))  {  [CE]  illegal  start  of  expression  [FE]                    OptionException      [CONTEXT]        for  (final  Iterator  iter  =  tailMap.values().iterator();  iter.hasNext();)  {  final  Option  option  =  (Option)  iter.next();  if  (option.canProcess(commandLine,  arg))  {  return  true;  }  }      [BUGGY]  if(isEnabled(iter.next()))  {  [BUGGY]      return  false;  }  if  (anonymous.size()  >  0)  {  return  true;  }  return  false;  }  [CLASS]  GroupImpl  [METHOD]  canProcess  [RETURN_TYPE]  boolean  WriteableCommandLine  commandLine  String  arg  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  SortedMap  newOptionMap  optionMap  WriteableCommandLine  commandLine  Iterator  iter  List  anonymous  newAnonymous  options  Option  option  String  arg  description  name  Map  tailMap  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	139	139	1	replace	if(isEnabled(iter.next()))  {	  if(looksLikeOption(commandLine,    true)||    isEnabled(iter.next()))    {    	non-compiled	[CE]  illegal  start  of  expression	33	None	replace
240	[BUG]  [BUGGY]  List  <  Option>  anonymous  =(List  <  Option>)commandLine.get(arg);  [CE]  illegal  start  of  expression  [FE]                        OptionException      [CONTEXT]        for  (final  Iterator  iter  =  tailMap.values().iterator();  iter.hasNext();)  {  final  Option  option  =  (Option)  iter.next();  if  (option.canProcess(commandLine,  arg))  {  return  true;  }  }      [BUGGY]  List  <  Option>  anonymous  =(List  <  Option>)commandLine.get(arg);  [BUGGY]      if  (looksLikeOption(commandLine,  arg))  {  return  false;  }  if  (anonymous.size()  >  0)  {  return  true;  }  return  false;  }  [CLASS]  GroupImpl  [METHOD]  canProcess  [RETURN_TYPE]  boolean  WriteableCommandLine  commandLine  String  arg  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  SortedMap  newOptionMap  optionMap  WriteableCommandLine  commandLine  Iterator  iter  List  anonymous  newAnonymous  options  Option  option  String  arg  description  name  Map  tailMap  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	139	139	1	replace	List  <  Option>  anonymous  =(List  <  Option>)commandLine.get(arg);	  List    <    Option>    newAnonymous    =(List    <    Option>)commandLine.get(arg);    	non-compiled	[CE]  illegal  start  of  expression	45	None	replace
241	[BUG]  [BUGGY]  if(looksLikeOption(arg,  true)||  options.canProcess(commandLine,  false))  {  [CE]  illegal  start  of  expression  [FE]                OptionException      [CONTEXT]        for  (final  Iterator  iter  =  tailMap.values().iterator();  iter.hasNext();)  {  final  Option  option  =  (Option)  iter.next();  if  (option.canProcess(commandLine,  arg))  {  return  true;  }  }      [BUGGY]  if(looksLikeOption(arg,  true)||  options.canProcess(commandLine,  false))  {  [BUGGY]      return  false;  }  if  (anonymous.size()  >  0)  {  return  true;  }  return  false;  }  [CLASS]  GroupImpl  [METHOD]  canProcess  [RETURN_TYPE]  boolean  WriteableCommandLine  commandLine  String  arg  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  SortedMap  newOptionMap  optionMap  WriteableCommandLine  commandLine  Iterator  iter  List  anonymous  newAnonymous  options  Option  option  String  arg  description  name  Map  tailMap  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	139	139	1	replace	if(looksLikeOption(arg,  true)||  options.canProcess(commandLine,  false))  {	  if(looksLikeOption(commandLine,    true)||    options.canProcess(commandLine,    false))    {    	non-compiled	[CE]  illegal  start  of  expression	58	None	replace
242	[BUG]  [BUGGY]  if(hasOption(option,  false)||  options.canProcess(commandLine,  false))  {  [CE]  illegal  start  of  expression  [FE]                  OptionException      [CONTEXT]        for  (final  Iterator  iter  =  tailMap.values().iterator();  iter.hasNext();)  {  final  Option  option  =  (Option)  iter.next();  if  (option.canProcess(commandLine,  arg))  {  return  true;  }  }      [BUGGY]  if(hasOption(option,  false)||  options.canProcess(commandLine,  false))  {  [BUGGY]      return  false;  }  if  (anonymous.size()  >  0)  {  return  true;  }  return  false;  }  [CLASS]  GroupImpl  [METHOD]  canProcess  [RETURN_TYPE]  boolean  WriteableCommandLine  commandLine  String  arg  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  SortedMap  newOptionMap  optionMap  WriteableCommandLine  commandLine  Iterator  iter  List  anonymous  newAnonymous  options  Option  option  String  arg  description  name  Map  tailMap  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	139	139	1	replace	if(hasOption(option,  false)||  options.canProcess(commandLine,  false))  {	  if(looksLikeOption(commandLine,    true)||    options.canProcess(commandLine,    false))    {    	non-compiled	[CE]  illegal  start  of  expression	58	None	replace
243	[BUG]  [BUGGY]  List  <  Option>  newAnonymous  =(List  <  Option>)this.optionMap.keySet().iterator();  [CE]  illegal  start  of  expression  [FE]              OptionException      [CONTEXT]        for  (final  Iterator  iter  =  tailMap.values().iterator();  iter.hasNext();)  {  final  Option  option  =  (Option)  iter.next();  if  (option.canProcess(commandLine,  arg))  {  return  true;  }  }      [BUGGY]  List  <  Option>  newAnonymous  =(List  <  Option>)this.optionMap.keySet().iterator();  [BUGGY]      if  (looksLikeOption(commandLine,  arg))  {  return  false;  }  if  (anonymous.size()  >  0)  {  return  true;  }  return  false;  }  [CLASS]  GroupImpl  [METHOD]  canProcess  [RETURN_TYPE]  boolean  WriteableCommandLine  commandLine  String  arg  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  SortedMap  newOptionMap  optionMap  WriteableCommandLine  commandLine  Iterator  iter  List  anonymous  newAnonymous  options  Option  option  String  arg  description  name  Map  tailMap  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	139	139	1	replace	List  <  Option>  newAnonymous  =(List  <  Option>)this.optionMap.keySet().iterator();	  List    <    Option>    newAnonymous    =(List    <    Option>)this.optionMap.values().iterator();    	non-compiled	[CE]  illegal  start  of  expression	17	None	replace
244	[BUG]  [BUGGY]  if(looksLikeOption(commandLine,  null)||  option.canProcess(commandLine,  arg))  {  [CE]  illegal  start  of  expression  [FE]                  OptionException      [CONTEXT]        for  (final  Iterator  iter  =  tailMap.values().iterator();  iter.hasNext();)  {  final  Option  option  =  (Option)  iter.next();  if  (option.canProcess(commandLine,  arg))  {  return  true;  }  }      [BUGGY]  if(looksLikeOption(commandLine,  null)||  option.canProcess(commandLine,  arg))  {  [BUGGY]      return  false;  }  if  (anonymous.size()  >  0)  {  return  true;  }  return  false;  }  [CLASS]  GroupImpl  [METHOD]  canProcess  [RETURN_TYPE]  boolean  WriteableCommandLine  commandLine  String  arg  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  SortedMap  newOptionMap  optionMap  WriteableCommandLine  commandLine  Iterator  iter  List  anonymous  newAnonymous  options  Option  option  String  arg  description  name  Map  tailMap  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	139	139	1	replace	if(looksLikeOption(commandLine,  null)||  option.canProcess(commandLine,  arg))  {	  if(looksLikeOption(commandLine,    null)&&    option.canProcess(commandLine,    arg))    {    	non-compiled	[CE]  illegal  start  of  expression	1	None	replace
245	[BUG]  [BUGGY]  if(hasArg()  &&  option.canProcess(commandLine,  arg))  {  [CE]  illegal  start  of  expression  [FE]                    OptionException      [CONTEXT]        for  (final  Iterator  iter  =  tailMap.values().iterator();  iter.hasNext();)  {  final  Option  option  =  (Option)  iter.next();  if  (option.canProcess(commandLine,  arg))  {  return  true;  }  }      [BUGGY]  if(hasArg()  &&  option.canProcess(commandLine,  arg))  {  [BUGGY]      return  false;  }  if  (anonymous.size()  >  0)  {  return  true;  }  return  false;  }  [CLASS]  GroupImpl  [METHOD]  canProcess  [RETURN_TYPE]  boolean  WriteableCommandLine  commandLine  String  arg  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  SortedMap  newOptionMap  optionMap  WriteableCommandLine  commandLine  Iterator  iter  List  anonymous  newAnonymous  options  Option  option  String  arg  description  name  Map  tailMap  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	139	139	1	replace	if(hasArg()  &&  option.canProcess(commandLine,  arg))  {	  if(looksLikeOption(commandLine,    null)&&    option.canProcess(commandLine,    arg))    {    	non-compiled	[CE]  illegal  start  of  expression	1	None	replace
246	[BUG]  [BUGGY]  if(looksLikeOption(arg,  true)||  isEnabled(Feature.QUOTE_FIELD_NAMES))  {  [CE]  illegal  start  of  expression  [FE]                OptionException      [CONTEXT]        for  (final  Iterator  iter  =  tailMap.values().iterator();  iter.hasNext();)  {  final  Option  option  =  (Option)  iter.next();  if  (option.canProcess(commandLine,  arg))  {  return  true;  }  }      [BUGGY]  if(looksLikeOption(arg,  true)||  isEnabled(Feature.QUOTE_FIELD_NAMES))  {  [BUGGY]      return  false;  }  if  (anonymous.size()  >  0)  {  return  true;  }  return  false;  }  [CLASS]  GroupImpl  [METHOD]  canProcess  [RETURN_TYPE]  boolean  WriteableCommandLine  commandLine  String  arg  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  SortedMap  newOptionMap  optionMap  WriteableCommandLine  commandLine  Iterator  iter  List  anonymous  newAnonymous  options  Option  option  String  arg  description  name  Map  tailMap  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	139	139	1	replace	if(looksLikeOption(arg,  true)||  isEnabled(Feature.QUOTE_FIELD_NAMES))  {	  if(looksLikeOption(commandLine,    true)||    isEnabled(Feature.QUOTE_FIELD_NAMES))    {    	non-compiled	[CE]  illegal  start  of  expression	70	None	replace
247	[BUG]  [BUGGY]  if(hasOption(option,  false)&&  isEnabled(Feature.QUOTE_FIELD_NAMES))  {  [CE]  illegal  start  of  expression  [FE]              OptionException      [CONTEXT]        for  (final  Iterator  iter  =  tailMap.values().iterator();  iter.hasNext();)  {  final  Option  option  =  (Option)  iter.next();  if  (option.canProcess(commandLine,  arg))  {  return  true;  }  }      [BUGGY]  if(hasOption(option,  false)&&  isEnabled(Feature.QUOTE_FIELD_NAMES))  {  [BUGGY]      return  false;  }  if  (anonymous.size()  >  0)  {  return  true;  }  return  false;  }  [CLASS]  GroupImpl  [METHOD]  canProcess  [RETURN_TYPE]  boolean  WriteableCommandLine  commandLine  String  arg  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  SortedMap  newOptionMap  optionMap  WriteableCommandLine  commandLine  Iterator  iter  List  anonymous  newAnonymous  options  Option  option  String  arg  description  name  Map  tailMap  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	139	139	1	replace	if(hasOption(option,  false)&&  isEnabled(Feature.QUOTE_FIELD_NAMES))  {	  if(hasOption(option,    false))    {    	non-compiled	[CE]  illegal  start  of  expression	69	None	replace
248	[BUG]  [BUGGY]  if(hasProcessOption(arg,  commandLine))  {  [CE]  illegal  start  of  expression  [FE]            OptionException      [CONTEXT]        for  (final  Iterator  iter  =  tailMap.values().iterator();  iter.hasNext();)  {  final  Option  option  =  (Option)  iter.next();  if  (option.canProcess(commandLine,  arg))  {  return  true;  }  }      [BUGGY]  if(hasProcessOption(arg,  commandLine))  {  [BUGGY]      return  false;  }  if  (anonymous.size()  >  0)  {  return  true;  }  return  false;  }  [CLASS]  GroupImpl  [METHOD]  canProcess  [RETURN_TYPE]  boolean  WriteableCommandLine  commandLine  String  arg  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  SortedMap  newOptionMap  optionMap  WriteableCommandLine  commandLine  Iterator  iter  List  anonymous  newAnonymous  options  Option  option  String  arg  description  name  Map  tailMap  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	139	139	1	replace	if(hasProcessOption(arg,  commandLine))  {	  if(!hasProcessOption(commandLine,    arg))    {    	non-compiled	[CE]  illegal  start  of  expression	41	None	replace
249	[BUG]  [BUGGY]  List  <  Option>  anonymous  =(List  <  Option>)commandMap.values().iterator();  [CE]  illegal  start  of  expression  [FE]            OptionException      [CONTEXT]        for  (final  Iterator  iter  =  tailMap.values().iterator();  iter.hasNext();)  {  final  Option  option  =  (Option)  iter.next();  if  (option.canProcess(commandLine,  arg))  {  return  true;  }  }      [BUGGY]  List  <  Option>  anonymous  =(List  <  Option>)commandMap.values().iterator();  [BUGGY]      if  (looksLikeOption(commandLine,  arg))  {  return  false;  }  if  (anonymous.size()  >  0)  {  return  true;  }  return  false;  }  [CLASS]  GroupImpl  [METHOD]  canProcess  [RETURN_TYPE]  boolean  WriteableCommandLine  commandLine  String  arg  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  SortedMap  newOptionMap  optionMap  WriteableCommandLine  commandLine  Iterator  iter  List  anonymous  newAnonymous  options  Option  option  String  arg  description  name  Map  tailMap  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	139	139	1	replace	List  <  Option>  anonymous  =(List  <  Option>)commandMap.values().iterator();	  List    <    Option>    newAnonymous    =(List    <    Option>)commandMap.values().iterator();    	non-compiled	[CE]  illegal  start  of  expression	75	None	replace
250	[BUG]  [BUGGY]  if(!hasArg()  &&!looksLikeOption(arg,  option))  {  [CE]  illegal  start  of  expression  [FE]            OptionException      [CONTEXT]        for  (final  Iterator  iter  =  tailMap.values().iterator();  iter.hasNext();)  {  final  Option  option  =  (Option)  iter.next();  if  (option.canProcess(commandLine,  arg))  {  return  true;  }  }      [BUGGY]  if(!hasArg()  &&!looksLikeOption(arg,  option))  {  [BUGGY]      return  false;  }  if  (anonymous.size()  >  0)  {  return  true;  }  return  false;  }  [CLASS]  GroupImpl  [METHOD]  canProcess  [RETURN_TYPE]  boolean  WriteableCommandLine  commandLine  String  arg  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  SortedMap  newOptionMap  optionMap  WriteableCommandLine  commandLine  Iterator  iter  List  anonymous  newAnonymous  options  Option  option  String  arg  description  name  Map  tailMap  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	139	139	1	replace	if(!hasArg()  &&!looksLikeOption(arg,  option))  {	  if(!looksLikeOption(option,    arg))    {    	non-compiled	[CE]  illegal  start  of  expression	60	None	replace
251	[BUG]  [BUGGY]  if(hasArg()  &&  isLikeOption(option,  commandLine,  arg))  {  [CE]  illegal  start  of  expression  [FE]              OptionException      [CONTEXT]        for  (final  Iterator  iter  =  tailMap.values().iterator();  iter.hasNext();)  {  final  Option  option  =  (Option)  iter.next();  if  (option.canProcess(commandLine,  arg))  {  return  true;  }  }      [BUGGY]  if(hasArg()  &&  isLikeOption(option,  commandLine,  arg))  {  [BUGGY]      return  false;  }  if  (anonymous.size()  >  0)  {  return  true;  }  return  false;  }  [CLASS]  GroupImpl  [METHOD]  canProcess  [RETURN_TYPE]  boolean  WriteableCommandLine  commandLine  String  arg  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  SortedMap  newOptionMap  optionMap  WriteableCommandLine  commandLine  Iterator  iter  List  anonymous  newAnonymous  options  Option  option  String  arg  description  name  Map  tailMap  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	139	139	1	replace	if(hasArg()  &&  isLikeOption(option,  commandLine,  arg))  {	  if(hasArg()    &&    isLikeOption(commandLine,    arg))    {    	non-compiled	[CE]  illegal  start  of  expression	80	None	replace
252	[BUG]  [BUGGY]  if(hasArg()  ||  isLikeOption(arg,  commandLine))  {  [CE]  illegal  start  of  expression  [FE]                OptionException      [CONTEXT]        for  (final  Iterator  iter  =  tailMap.values().iterator();  iter.hasNext();)  {  final  Option  option  =  (Option)  iter.next();  if  (option.canProcess(commandLine,  arg))  {  return  true;  }  }      [BUGGY]  if(hasArg()  ||  isLikeOption(arg,  commandLine))  {  [BUGGY]      return  false;  }  if  (anonymous.size()  >  0)  {  return  true;  }  return  false;  }  [CLASS]  GroupImpl  [METHOD]  canProcess  [RETURN_TYPE]  boolean  WriteableCommandLine  commandLine  String  arg  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  SortedMap  newOptionMap  optionMap  WriteableCommandLine  commandLine  Iterator  iter  List  anonymous  newAnonymous  options  Option  option  String  arg  description  name  Map  tailMap  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	139	139	1	replace	if(hasArg()  ||  isLikeOption(arg,  commandLine))  {	  if(hasArg()    &&    isLikeOption(commandLine,    arg))    {    	non-compiled	[CE]  illegal  start  of  expression	80	None	replace
253	[BUG]  [BUGGY]  Option  option  =  optionMap.getOption(arg);  if(option!=  null)  {  return  false;  }  [CE]  illegal  start  of  expression  [FE]                    OptionException      [CONTEXT]        for  (final  Iterator  iter  =  tailMap.values().iterator();  iter.hasNext();)  {  final  Option  option  =  (Option)  iter.next();  if  (option.canProcess(commandLine,  arg))  {  return  true;  }  }      [BUGGY]  Option  option  =  optionMap.getOption(arg);  if(option!=  null)  {  return  false;  }  [BUGGY]      return  false;  }  if  (anonymous.size()  >  0)  {  return  true;  }  return  false;  }  [CLASS]  GroupImpl  [METHOD]  canProcess  [RETURN_TYPE]  boolean  WriteableCommandLine  commandLine  String  arg  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  SortedMap  newOptionMap  optionMap  WriteableCommandLine  commandLine  Iterator  iter  List  anonymous  newAnonymous  options  Option  option  String  arg  description  name  Map  tailMap  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	139	139	1	replace	Option  option  =  optionMap.getOption(arg);  if(option!=  null)  {  return  false;  }	  Option    option    =    option.getOption(commandLine);    if(option!=    null)    {    return    false;    }    	non-compiled	[CE]  illegal  start  of  expression	73	None	replace
254	[BUG]  [BUGGY]  if(hasArg()  ||  options.canProcess(commandLine,  arg))  {  [CE]  illegal  start  of  expression  [FE]                OptionException      [CONTEXT]        for  (final  Iterator  iter  =  tailMap.values().iterator();  iter.hasNext();)  {  final  Option  option  =  (Option)  iter.next();  if  (option.canProcess(commandLine,  arg))  {  return  true;  }  }      [BUGGY]  if(hasArg()  ||  options.canProcess(commandLine,  arg))  {  [BUGGY]      return  false;  }  if  (anonymous.size()  >  0)  {  return  true;  }  return  false;  }  [CLASS]  GroupImpl  [METHOD]  canProcess  [RETURN_TYPE]  boolean  WriteableCommandLine  commandLine  String  arg  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  SortedMap  newOptionMap  optionMap  WriteableCommandLine  commandLine  Iterator  iter  List  anonymous  newAnonymous  options  Option  option  String  arg  description  name  Map  tailMap  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	139	139	1	replace	if(hasArg()  ||  options.canProcess(commandLine,  arg))  {	  if(hasOption(option)||    options.canProcess(commandLine,    arg))    {    	non-compiled	[CE]  illegal  start  of  expression	67	None	replace
255	[BUG]  [BUGGY]  Option  option  =  option.createOption(commandLine,  name);  [CE]  illegal  start  of  expression  [FE]                  OptionException      [CONTEXT]        for  (final  Iterator  iter  =  tailMap.values().iterator();  iter.hasNext();)  {  final  Option  option  =  (Option)  iter.next();  if  (option.canProcess(commandLine,  arg))  {  return  true;  }  }      [BUGGY]  Option  option  =  option.createOption(commandLine,  name);  [BUGGY]      if  (looksLikeOption(commandLine,  arg))  {  return  false;  }  if  (anonymous.size()  >  0)  {  return  true;  }  return  false;  }  [CLASS]  GroupImpl  [METHOD]  canProcess  [RETURN_TYPE]  boolean  WriteableCommandLine  commandLine  String  arg  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  SortedMap  newOptionMap  optionMap  WriteableCommandLine  commandLine  Iterator  iter  List  anonymous  newAnonymous  options  Option  option  String  arg  description  name  Map  tailMap  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	139	139	1	replace	Option  option  =  option.createOption(commandLine,  name);	  Option    option    =    option.createOption(arg,    description);    	non-compiled	[CE]  illegal  start  of  expression	14	None	replace
256	[BUG]  [BUGGY]  if(!hasOption(arg,  option))  {  [CE]  illegal  start  of  expression  [FE]            OptionException      [CONTEXT]        for  (final  Iterator  iter  =  tailMap.values().iterator();  iter.hasNext();)  {  final  Option  option  =  (Option)  iter.next();  if  (option.canProcess(commandLine,  arg))  {  return  true;  }  }      [BUGGY]  if(!hasOption(arg,  option))  {  [BUGGY]      return  false;  }  if  (anonymous.size()  >  0)  {  return  true;  }  return  false;  }  [CLASS]  GroupImpl  [METHOD]  canProcess  [RETURN_TYPE]  boolean  WriteableCommandLine  commandLine  String  arg  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  SortedMap  newOptionMap  optionMap  WriteableCommandLine  commandLine  Iterator  iter  List  anonymous  newAnonymous  options  Option  option  String  arg  description  name  Map  tailMap  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	139	139	1	replace	if(!hasOption(arg,  option))  {	  if(!hasOption(option,    commandLine))    {    	non-compiled	[CE]  illegal  start  of  expression	76	None	replace
257	[BUG]  [BUGGY]  if(!hasOption(option,  commandLine)&&  arg.length()  >  0)  {  [CE]  illegal  start  of  expression  [FE]              OptionException      [CONTEXT]        for  (final  Iterator  iter  =  tailMap.values().iterator();  iter.hasNext();)  {  final  Option  option  =  (Option)  iter.next();  if  (option.canProcess(commandLine,  arg))  {  return  true;  }  }      [BUGGY]  if(!hasOption(option,  commandLine)&&  arg.length()  >  0)  {  [BUGGY]      return  false;  }  if  (anonymous.size()  >  0)  {  return  true;  }  return  false;  }  [CLASS]  GroupImpl  [METHOD]  canProcess  [RETURN_TYPE]  boolean  WriteableCommandLine  commandLine  String  arg  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  SortedMap  newOptionMap  optionMap  WriteableCommandLine  commandLine  Iterator  iter  List  anonymous  newAnonymous  options  Option  option  String  arg  description  name  Map  tailMap  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	139	139	1	replace	if(!hasOption(option,  commandLine)&&  arg.length()  >  0)  {	  if(!hasOption(option,    commandLine))    {    	non-compiled	[CE]  illegal  start  of  expression	76	None	replace
258	[BUG]  [BUGGY]  Option  option  =  optionMap.getOption(arg);  if(option!=  null)  {  return  true;  }  [CE]  illegal  start  of  expression  [FE]                      OptionException      [CONTEXT]        for  (final  Iterator  iter  =  tailMap.values().iterator();  iter.hasNext();)  {  final  Option  option  =  (Option)  iter.next();  if  (option.canProcess(commandLine,  arg))  {  return  true;  }  }      [BUGGY]  Option  option  =  optionMap.getOption(arg);  if(option!=  null)  {  return  true;  }  [BUGGY]      return  false;  }  if  (anonymous.size()  >  0)  {  return  true;  }  return  false;  }  [CLASS]  GroupImpl  [METHOD]  canProcess  [RETURN_TYPE]  boolean  WriteableCommandLine  commandLine  String  arg  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  SortedMap  newOptionMap  optionMap  WriteableCommandLine  commandLine  Iterator  iter  List  anonymous  newAnonymous  options  Option  option  String  arg  description  name  Map  tailMap  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	139	139	1	replace	Option  option  =  optionMap.getOption(arg);  if(option!=  null)  {  return  true;  }	  Option    option    =    option.getOption(commandLine);    if(option!=    null)    {    return    true;    }    	non-compiled	[CE]  illegal  start  of  expression	74	None	replace
259	[BUG]  [BUGGY]  if(!hasOption(option,  options))  {  [CE]  illegal  start  of  expression  [FE]              OptionException      [CONTEXT]        for  (final  Iterator  iter  =  tailMap.values().iterator();  iter.hasNext();)  {  final  Option  option  =  (Option)  iter.next();  if  (option.canProcess(commandLine,  arg))  {  return  true;  }  }      [BUGGY]  if(!hasOption(option,  options))  {  [BUGGY]      return  false;  }  if  (anonymous.size()  >  0)  {  return  true;  }  return  false;  }  [CLASS]  GroupImpl  [METHOD]  canProcess  [RETURN_TYPE]  boolean  WriteableCommandLine  commandLine  String  arg  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  SortedMap  newOptionMap  optionMap  WriteableCommandLine  commandLine  Iterator  iter  List  anonymous  newAnonymous  options  Option  option  String  arg  description  name  Map  tailMap  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	139	139	1	replace	if(!hasOption(option,  options))  {	  if(!looksLikeOption(commandLine,    options))    {    	non-compiled	[CE]  illegal  start  of  expression	61	None	replace
260	[BUG]  [BUGGY]  if(canProcessOption(commandLine,  null)||  option.canProcess(commandLine,  arg))  {  [CE]  illegal  start  of  expression  [FE]                    OptionException      [CONTEXT]        for  (final  Iterator  iter  =  tailMap.values().iterator();  iter.hasNext();)  {  final  Option  option  =  (Option)  iter.next();  if  (option.canProcess(commandLine,  arg))  {  return  true;  }  }      [BUGGY]  if(canProcessOption(commandLine,  null)||  option.canProcess(commandLine,  arg))  {  [BUGGY]      return  false;  }  if  (anonymous.size()  >  0)  {  return  true;  }  return  false;  }  [CLASS]  GroupImpl  [METHOD]  canProcess  [RETURN_TYPE]  boolean  WriteableCommandLine  commandLine  String  arg  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  SortedMap  newOptionMap  optionMap  WriteableCommandLine  commandLine  Iterator  iter  List  anonymous  newAnonymous  options  Option  option  String  arg  description  name  Map  tailMap  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	139	139	1	replace	if(canProcessOption(commandLine,  null)||  option.canProcess(commandLine,  arg))  {	  if(canProcessOption(commandLine,    null))    {    	non-compiled	[CE]  illegal  start  of  expression	2	None	replace
261	[BUG]  [BUGGY]  List  <  Option>  anonymous  =(List  <  Option>)commandLine.values().iterator();  [CE]  illegal  start  of  expression  [FE]                OptionException      [CONTEXT]        for  (final  Iterator  iter  =  tailMap.values().iterator();  iter.hasNext();)  {  final  Option  option  =  (Option)  iter.next();  if  (option.canProcess(commandLine,  arg))  {  return  true;  }  }      [BUGGY]  List  <  Option>  anonymous  =(List  <  Option>)commandLine.values().iterator();  [BUGGY]      if  (looksLikeOption(commandLine,  arg))  {  return  false;  }  if  (anonymous.size()  >  0)  {  return  true;  }  return  false;  }  [CLASS]  GroupImpl  [METHOD]  canProcess  [RETURN_TYPE]  boolean  WriteableCommandLine  commandLine  String  arg  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  SortedMap  newOptionMap  optionMap  WriteableCommandLine  commandLine  Iterator  iter  List  anonymous  newAnonymous  options  Option  option  String  arg  description  name  Map  tailMap  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	139	139	1	replace	List  <  Option>  anonymous  =(List  <  Option>)commandLine.values().iterator();	  List    <    Option>    newAnonymous    =(List    <    Option>)commandLine.values().iterator();    	non-compiled	[CE]  illegal  start  of  expression	18	None	replace
262	[BUG]  [BUGGY]  if(hasOption(option,  commandLine)&&  isEnabled(Feature.QUOTE_FIELD_NAMES))  {  [CE]  illegal  start  of  expression  [FE]            OptionException      [CONTEXT]        for  (final  Iterator  iter  =  tailMap.values().iterator();  iter.hasNext();)  {  final  Option  option  =  (Option)  iter.next();  if  (option.canProcess(commandLine,  arg))  {  return  true;  }  }      [BUGGY]  if(hasOption(option,  commandLine)&&  isEnabled(Feature.QUOTE_FIELD_NAMES))  {  [BUGGY]      return  false;  }  if  (anonymous.size()  >  0)  {  return  true;  }  return  false;  }  [CLASS]  GroupImpl  [METHOD]  canProcess  [RETURN_TYPE]  boolean  WriteableCommandLine  commandLine  String  arg  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  SortedMap  newOptionMap  optionMap  WriteableCommandLine  commandLine  Iterator  iter  List  anonymous  newAnonymous  options  Option  option  String  arg  description  name  Map  tailMap  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	139	139	1	replace	if(hasOption(option,  commandLine)&&  isEnabled(Feature.QUOTE_FIELD_NAMES))  {	  if(hasOption(option,    commandLine))    {    	non-compiled	[CE]  illegal  start  of  expression	79	None	replace
263	[BUG]  [BUGGY]  ArrayList  <  Option>  anonymous  =(ArrayList  <  Option>)iter.next();  [CE]  illegal  start  of  expression  [FE]                      OptionException      [CONTEXT]        for  (final  Iterator  iter  =  tailMap.values().iterator();  iter.hasNext();)  {  final  Option  option  =  (Option)  iter.next();  if  (option.canProcess(commandLine,  arg))  {  return  true;  }  }      [BUGGY]  ArrayList  <  Option>  anonymous  =(ArrayList  <  Option>)iter.next();  [BUGGY]      if  (looksLikeOption(commandLine,  arg))  {  return  false;  }  if  (anonymous.size()  >  0)  {  return  true;  }  return  false;  }  [CLASS]  GroupImpl  [METHOD]  canProcess  [RETURN_TYPE]  boolean  WriteableCommandLine  commandLine  String  arg  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  SortedMap  newOptionMap  optionMap  WriteableCommandLine  commandLine  Iterator  iter  List  anonymous  newAnonymous  options  Option  option  String  arg  description  name  Map  tailMap  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	139	139	1	replace	ArrayList  <  Option>  anonymous  =(ArrayList  <  Option>)iter.next();	  ArrayList    <    Option>    newAnonymous    =(ArrayList    <    Option>)iter.next();    	non-compiled	[CE]  illegal  start  of  expression	6	None	replace
264	[BUG]  [BUGGY]  if(!looksLikeOption(arg,  commandLine)&&  option.canProcess(commandLine,  arg))  {  [CE]  illegal  start  of  expression  [FE]                  OptionException      [CONTEXT]        for  (final  Iterator  iter  =  tailMap.values().iterator();  iter.hasNext();)  {  final  Option  option  =  (Option)  iter.next();  if  (option.canProcess(commandLine,  arg))  {  return  true;  }  }      [BUGGY]  if(!looksLikeOption(arg,  commandLine)&&  option.canProcess(commandLine,  arg))  {  [BUGGY]      return  false;  }  if  (anonymous.size()  >  0)  {  return  true;  }  return  false;  }  [CLASS]  GroupImpl  [METHOD]  canProcess  [RETURN_TYPE]  boolean  WriteableCommandLine  commandLine  String  arg  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  SortedMap  newOptionMap  optionMap  WriteableCommandLine  commandLine  Iterator  iter  List  anonymous  newAnonymous  options  Option  option  String  arg  description  name  Map  tailMap  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	139	139	1	replace	if(!looksLikeOption(arg,  commandLine)&&  option.canProcess(commandLine,  arg))  {	  if(!looksLikeOption(commandLine,    arg)&&    option.canProcess(commandLine,    arg))    {    	non-compiled	[CE]  illegal  start  of  expression	30	None	replace
265	[BUG]  [BUGGY]  if(!looksLikeOption(arg,  commandLine)&&!option.canProcess(commandLine,  arg))  {  [CE]  illegal  start  of  expression  [FE]              OptionException      [CONTEXT]        for  (final  Iterator  iter  =  tailMap.values().iterator();  iter.hasNext();)  {  final  Option  option  =  (Option)  iter.next();  if  (option.canProcess(commandLine,  arg))  {  return  true;  }  }      [BUGGY]  if(!looksLikeOption(arg,  commandLine)&&!option.canProcess(commandLine,  arg))  {  [BUGGY]      return  false;  }  if  (anonymous.size()  >  0)  {  return  true;  }  return  false;  }  [CLASS]  GroupImpl  [METHOD]  canProcess  [RETURN_TYPE]  boolean  WriteableCommandLine  commandLine  String  arg  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  SortedMap  newOptionMap  optionMap  WriteableCommandLine  commandLine  Iterator  iter  List  anonymous  newAnonymous  options  Option  option  String  arg  description  name  Map  tailMap  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	139	139	1	replace	if(!looksLikeOption(arg,  commandLine)&&!option.canProcess(commandLine,  arg))  {	  if(!looksLikeOption(commandLine,    arg)||!option.canProcess(commandLine,    arg))    {    	non-compiled	[CE]  illegal  start  of  expression	28	None	replace
266	[BUG]  [BUGGY]  if(!hasArg()  &&!option.canProcess(commandLine,  arg))  {  [CE]  illegal  start  of  expression  [FE]                OptionException      [CONTEXT]        for  (final  Iterator  iter  =  tailMap.values().iterator();  iter.hasNext();)  {  final  Option  option  =  (Option)  iter.next();  if  (option.canProcess(commandLine,  arg))  {  return  true;  }  }      [BUGGY]  if(!hasArg()  &&!option.canProcess(commandLine,  arg))  {  [BUGGY]      return  false;  }  if  (anonymous.size()  >  0)  {  return  true;  }  return  false;  }  [CLASS]  GroupImpl  [METHOD]  canProcess  [RETURN_TYPE]  boolean  WriteableCommandLine  commandLine  String  arg  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  SortedMap  newOptionMap  optionMap  WriteableCommandLine  commandLine  Iterator  iter  List  anonymous  newAnonymous  options  Option  option  String  arg  description  name  Map  tailMap  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	139	139	1	replace	if(!hasArg()  &&!option.canProcess(commandLine,  arg))  {	  if(!looksLikeOption(commandLine,    arg)&&!option.canProcess(commandLine,    arg))    {    	non-compiled	[CE]  illegal  start  of  expression	29	None	replace
267	[BUG]  [BUGGY]  if(option.canProcess(commandLine,  arg)&&!option.canProcess(commandLine,  arg))  {  [CE]  illegal  start  of  expression  [FE]                  OptionException      [CONTEXT]        for  (final  Iterator  iter  =  tailMap.values().iterator();  iter.hasNext();)  {  final  Option  option  =  (Option)  iter.next();  if  (option.canProcess(commandLine,  arg))  {  return  true;  }  }      [BUGGY]  if(option.canProcess(commandLine,  arg)&&!option.canProcess(commandLine,  arg))  {  [BUGGY]      return  false;  }  if  (anonymous.size()  >  0)  {  return  true;  }  return  false;  }  [CLASS]  GroupImpl  [METHOD]  canProcess  [RETURN_TYPE]  boolean  WriteableCommandLine  commandLine  String  arg  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  SortedMap  newOptionMap  optionMap  WriteableCommandLine  commandLine  Iterator  iter  List  anonymous  newAnonymous  options  Option  option  String  arg  description  name  Map  tailMap  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	139	139	1	replace	if(option.canProcess(commandLine,  arg)&&!option.canProcess(commandLine,  arg))  {	  if(!looksLikeOption(commandLine,    arg)&&!option.canProcess(commandLine,    arg))    {    	non-compiled	[CE]  illegal  start  of  expression	29	None	replace
268	[BUG]  [BUGGY]  List  <  Option>  anonymous  =(List  <  Option>)option.next();  [CE]  illegal  start  of  expression  [FE]                  OptionException      [CONTEXT]        for  (final  Iterator  iter  =  tailMap.values().iterator();  iter.hasNext();)  {  final  Option  option  =  (Option)  iter.next();  if  (option.canProcess(commandLine,  arg))  {  return  true;  }  }      [BUGGY]  List  <  Option>  anonymous  =(List  <  Option>)option.next();  [BUGGY]      if  (looksLikeOption(commandLine,  arg))  {  return  false;  }  if  (anonymous.size()  >  0)  {  return  true;  }  return  false;  }  [CLASS]  GroupImpl  [METHOD]  canProcess  [RETURN_TYPE]  boolean  WriteableCommandLine  commandLine  String  arg  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  SortedMap  newOptionMap  optionMap  WriteableCommandLine  commandLine  Iterator  iter  List  anonymous  newAnonymous  options  Option  option  String  arg  description  name  Map  tailMap  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	139	139	1	replace	List  <  Option>  anonymous  =(List  <  Option>)option.next();	  List    <    Option>    newAnonymous    =(List    <    Option>)option.next();    	non-compiled	[CE]  illegal  start  of  expression	68	None	replace
269	[BUG]  [BUGGY]  Option  option  =(Option)optionMap.get(arg);  [CE]  illegal  start  of  expression  [FE]                OptionException      [CONTEXT]        for  (final  Iterator  iter  =  tailMap.values().iterator();  iter.hasNext();)  {  final  Option  option  =  (Option)  iter.next();  if  (option.canProcess(commandLine,  arg))  {  return  true;  }  }      [BUGGY]  Option  option  =(Option)optionMap.get(arg);  [BUGGY]      if  (looksLikeOption(commandLine,  arg))  {  return  false;  }  if  (anonymous.size()  >  0)  {  return  true;  }  return  false;  }  [CLASS]  GroupImpl  [METHOD]  canProcess  [RETURN_TYPE]  boolean  WriteableCommandLine  commandLine  String  arg  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  SortedMap  newOptionMap  optionMap  WriteableCommandLine  commandLine  Iterator  iter  List  anonymous  newAnonymous  options  Option  option  String  arg  description  name  Map  tailMap  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	139	139	1	replace	Option  option  =(Option)optionMap.get(arg);	  Option    option    =(Option)iter.getValue();    	non-compiled	[CE]  illegal  start  of  expression	64	None	replace
270	[BUG]  [BUGGY]  if(!hasOption(option,  false))  {  [CE]  illegal  start  of  expression  [FE]                OptionException      [CONTEXT]        for  (final  Iterator  iter  =  tailMap.values().iterator();  iter.hasNext();)  {  final  Option  option  =  (Option)  iter.next();  if  (option.canProcess(commandLine,  arg))  {  return  true;  }  }      [BUGGY]  if(!hasOption(option,  false))  {  [BUGGY]      return  false;  }  if  (anonymous.size()  >  0)  {  return  true;  }  return  false;  }  [CLASS]  GroupImpl  [METHOD]  canProcess  [RETURN_TYPE]  boolean  WriteableCommandLine  commandLine  String  arg  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  SortedMap  newOptionMap  optionMap  WriteableCommandLine  commandLine  Iterator  iter  List  anonymous  newAnonymous  options  Option  option  String  arg  description  name  Map  tailMap  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	139	139	1	replace	if(!hasOption(option,  false))  {	  if(!looksLikeOption(commandLine,    false))    {    	non-compiled	[CE]  illegal  start  of  expression	32	None	replace
271	[BUG]  [BUGGY]  if(!canProcessOption(arg,  false))  {  [CE]  illegal  start  of  expression  [FE]                  OptionException      [CONTEXT]        for  (final  Iterator  iter  =  tailMap.values().iterator();  iter.hasNext();)  {  final  Option  option  =  (Option)  iter.next();  if  (option.canProcess(commandLine,  arg))  {  return  true;  }  }      [BUGGY]  if(!canProcessOption(arg,  false))  {  [BUGGY]      return  false;  }  if  (anonymous.size()  >  0)  {  return  true;  }  return  false;  }  [CLASS]  GroupImpl  [METHOD]  canProcess  [RETURN_TYPE]  boolean  WriteableCommandLine  commandLine  String  arg  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  SortedMap  newOptionMap  optionMap  WriteableCommandLine  commandLine  Iterator  iter  List  anonymous  newAnonymous  options  Option  option  String  arg  description  name  Map  tailMap  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	139	139	1	replace	if(!canProcessOption(arg,  false))  {	  if(!looksLikeOption(commandLine,    false))    {    	non-compiled	[CE]  illegal  start  of  expression	32	None	replace
272	[BUG]  [BUGGY]  if(!hasArgs()  &&!looksLikeOption(arg,  description))  {  [CE]  illegal  start  of  expression  [FE]              OptionException      [CONTEXT]        for  (final  Iterator  iter  =  tailMap.values().iterator();  iter.hasNext();)  {  final  Option  option  =  (Option)  iter.next();  if  (option.canProcess(commandLine,  arg))  {  return  true;  }  }      [BUGGY]  if(!hasArgs()  &&!looksLikeOption(arg,  description))  {  [BUGGY]      return  false;  }  if  (anonymous.size()  >  0)  {  return  true;  }  return  false;  }  [CLASS]  GroupImpl  [METHOD]  canProcess  [RETURN_TYPE]  boolean  WriteableCommandLine  commandLine  String  arg  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  SortedMap  newOptionMap  optionMap  WriteableCommandLine  commandLine  Iterator  iter  List  anonymous  newAnonymous  options  Option  option  String  arg  description  name  Map  tailMap  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	139	139	1	replace	if(!hasArgs()  &&!looksLikeOption(arg,  description))  {	  if(!looksLikeOption(arg,    description))    {    	non-compiled	[CE]  illegal  start  of  expression	77	None	replace
273	[BUG]  [BUGGY]  if(!hasOption(arg,  description))  {  [CE]  illegal  start  of  expression  [FE]                OptionException      [CONTEXT]        for  (final  Iterator  iter  =  tailMap.values().iterator();  iter.hasNext();)  {  final  Option  option  =  (Option)  iter.next();  if  (option.canProcess(commandLine,  arg))  {  return  true;  }  }      [BUGGY]  if(!hasOption(arg,  description))  {  [BUGGY]      return  false;  }  if  (anonymous.size()  >  0)  {  return  true;  }  return  false;  }  [CLASS]  GroupImpl  [METHOD]  canProcess  [RETURN_TYPE]  boolean  WriteableCommandLine  commandLine  String  arg  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  SortedMap  newOptionMap  optionMap  WriteableCommandLine  commandLine  Iterator  iter  List  anonymous  newAnonymous  options  Option  option  String  arg  description  name  Map  tailMap  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	139	139	1	replace	if(!hasOption(arg,  description))  {	  if(!looksLikeOption(arg,    description))    {    	non-compiled	[CE]  illegal  start  of  expression	77	None	replace
274	[BUG]  [BUGGY]  if(!looksLikeOption(arg,  description)&&!option.canProcess(commandLine,  arg))  {  [CE]  illegal  start  of  expression  [FE]                  OptionException      [CONTEXT]        for  (final  Iterator  iter  =  tailMap.values().iterator();  iter.hasNext();)  {  final  Option  option  =  (Option)  iter.next();  if  (option.canProcess(commandLine,  arg))  {  return  true;  }  }      [BUGGY]  if(!looksLikeOption(arg,  description)&&!option.canProcess(commandLine,  arg))  {  [BUGGY]      return  false;  }  if  (anonymous.size()  >  0)  {  return  true;  }  return  false;  }  [CLASS]  GroupImpl  [METHOD]  canProcess  [RETURN_TYPE]  boolean  WriteableCommandLine  commandLine  String  arg  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  SortedMap  newOptionMap  optionMap  WriteableCommandLine  commandLine  Iterator  iter  List  anonymous  newAnonymous  options  Option  option  String  arg  description  name  Map  tailMap  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	139	139	1	replace	if(!looksLikeOption(arg,  description)&&!option.canProcess(commandLine,  arg))  {	  if(!looksLikeOption(arg,    description))    {    	non-compiled	[CE]  illegal  start  of  expression	77	None	replace
275	[BUG]  [BUGGY]  List  <  Option>  anonymous  =  optionMap.newAnonymous();  [CE]  illegal  start  of  expression  [FE]                      OptionException      [CONTEXT]        for  (final  Iterator  iter  =  tailMap.values().iterator();  iter.hasNext();)  {  final  Option  option  =  (Option)  iter.next();  if  (option.canProcess(commandLine,  arg))  {  return  true;  }  }      [BUGGY]  List  <  Option>  anonymous  =  optionMap.newAnonymous();  [BUGGY]      if  (looksLikeOption(commandLine,  arg))  {  return  false;  }  if  (anonymous.size()  >  0)  {  return  true;  }  return  false;  }  [CLASS]  GroupImpl  [METHOD]  canProcess  [RETURN_TYPE]  boolean  WriteableCommandLine  commandLine  String  arg  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  SortedMap  newOptionMap  optionMap  WriteableCommandLine  commandLine  Iterator  iter  List  anonymous  newAnonymous  options  Option  option  String  arg  description  name  Map  tailMap  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	139	139	1	replace	List  <  Option>  anonymous  =  optionMap.newAnonymous();	  List    <    Option>    newAnonymous    =    optionMap.newAnonymous();    	non-compiled	[CE]  illegal  start  of  expression	26	None	replace
276	[BUG]  [BUGGY]  if(hasOption(option,  null)&&  option.canProcess(commandLine,  arg))  {  [CE]  illegal  start  of  expression  [FE]                  OptionException      [CONTEXT]        for  (final  Iterator  iter  =  tailMap.values().iterator();  iter.hasNext();)  {  final  Option  option  =  (Option)  iter.next();  if  (option.canProcess(commandLine,  arg))  {  return  true;  }  }      [BUGGY]  if(hasOption(option,  null)&&  option.canProcess(commandLine,  arg))  {  [BUGGY]      return  false;  }  if  (anonymous.size()  >  0)  {  return  true;  }  return  false;  }  [CLASS]  GroupImpl  [METHOD]  canProcess  [RETURN_TYPE]  boolean  WriteableCommandLine  commandLine  String  arg  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  SortedMap  newOptionMap  optionMap  WriteableCommandLine  commandLine  Iterator  iter  List  anonymous  newAnonymous  options  Option  option  String  arg  description  name  Map  tailMap  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	139	139	1	replace	if(hasOption(option,  null)&&  option.canProcess(commandLine,  arg))  {	  if(hasOption(option,    null))    {    	non-compiled	[CE]  illegal  start  of  expression	66	None	replace
277	[BUG]  [BUGGY]  if(canProcessLikeOption(commandLine,  arg)||  option.canProcess(commandLine,  arg))  {  [CE]  illegal  start  of  expression  [FE]              OptionException      [CONTEXT]        for  (final  Iterator  iter  =  tailMap.values().iterator();  iter.hasNext();)  {  final  Option  option  =  (Option)  iter.next();  if  (option.canProcess(commandLine,  arg))  {  return  true;  }  }      [BUGGY]  if(canProcessLikeOption(commandLine,  arg)||  option.canProcess(commandLine,  arg))  {  [BUGGY]      return  false;  }  if  (anonymous.size()  >  0)  {  return  true;  }  return  false;  }  [CLASS]  GroupImpl  [METHOD]  canProcess  [RETURN_TYPE]  boolean  WriteableCommandLine  commandLine  String  arg  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  SortedMap  newOptionMap  optionMap  WriteableCommandLine  commandLine  Iterator  iter  List  anonymous  newAnonymous  options  Option  option  String  arg  description  name  Map  tailMap  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	139	139	1	replace	if(canProcessLikeOption(commandLine,  arg)||  option.canProcess(commandLine,  arg))  {	  if(canProcessLikeOption(commandLine,    arg))    {    	non-compiled	[CE]  illegal  start  of  expression	11	None	replace
278	[BUG]  [BUGGY]  List  <  Option>  newAnonymous  =  tailMap.keySet();  [CE]  illegal  start  of  expression  [FE]                  OptionException      [CONTEXT]        for  (final  Iterator  iter  =  tailMap.values().iterator();  iter.hasNext();)  {  final  Option  option  =  (Option)  iter.next();  if  (option.canProcess(commandLine,  arg))  {  return  true;  }  }      [BUGGY]  List  <  Option>  newAnonymous  =  tailMap.keySet();  [BUGGY]      if  (looksLikeOption(commandLine,  arg))  {  return  false;  }  if  (anonymous.size()  >  0)  {  return  true;  }  return  false;  }  [CLASS]  GroupImpl  [METHOD]  canProcess  [RETURN_TYPE]  boolean  WriteableCommandLine  commandLine  String  arg  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  SortedMap  newOptionMap  optionMap  WriteableCommandLine  commandLine  Iterator  iter  List  anonymous  newAnonymous  options  Option  option  String  arg  description  name  Map  tailMap  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	139	139	1	replace	List  <  Option>  newAnonymous  =  tailMap.keySet();	  List    <    Option>    newAnonymous    =    optionMap.keySet();    	non-compiled	[CE]  illegal  start  of  expression	52	None	replace
279	[BUG]  [BUGGY]  if(canProcessOption(commandLine,  arg,  null))  {  [CE]  illegal  start  of  expression  [FE]                  OptionException      [CONTEXT]        for  (final  Iterator  iter  =  tailMap.values().iterator();  iter.hasNext();)  {  final  Option  option  =  (Option)  iter.next();  if  (option.canProcess(commandLine,  arg))  {  return  true;  }  }      [BUGGY]  if(canProcessOption(commandLine,  arg,  null))  {  [BUGGY]      return  false;  }  if  (anonymous.size()  >  0)  {  return  true;  }  return  false;  }  [CLASS]  GroupImpl  [METHOD]  canProcess  [RETURN_TYPE]  boolean  WriteableCommandLine  commandLine  String  arg  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  SortedMap  newOptionMap  optionMap  WriteableCommandLine  commandLine  Iterator  iter  List  anonymous  newAnonymous  options  Option  option  String  arg  description  name  Map  tailMap  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	139	139	1	replace	if(canProcessOption(commandLine,  arg,  null))  {	  if(looksLikeOption(arg,    null))    {    	non-compiled	[CE]  illegal  start  of  expression	71	None	replace
280	[BUG]  [BUGGY]  if(looksLikeOption(arg,  true)||  isEnabled(iter.next()))  {  [CE]  illegal  start  of  expression  [FE]                  OptionException      [CONTEXT]        for  (final  Iterator  iter  =  tailMap.values().iterator();  iter.hasNext();)  {  final  Option  option  =  (Option)  iter.next();  if  (option.canProcess(commandLine,  arg))  {  return  true;  }  }      [BUGGY]  if(looksLikeOption(arg,  true)||  isEnabled(iter.next()))  {  [BUGGY]      return  false;  }  if  (anonymous.size()  >  0)  {  return  true;  }  return  false;  }  [CLASS]  GroupImpl  [METHOD]  canProcess  [RETURN_TYPE]  boolean  WriteableCommandLine  commandLine  String  arg  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  SortedMap  newOptionMap  optionMap  WriteableCommandLine  commandLine  Iterator  iter  List  anonymous  newAnonymous  options  Option  option  String  arg  description  name  Map  tailMap  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	139	139	1	replace	if(looksLikeOption(arg,  true)||  isEnabled(iter.next()))  {	  if(looksLikeOption(commandLine,    true)||    isEnabled(iter.next()))    {    	non-compiled	[CE]  illegal  start  of  expression	33	None	replace
281	[BUG]  [BUGGY]  if(option.canProcess(commandLine,  arg)||  options.canProcess(commandLine,  arg  +  1))  {  [CE]  illegal  start  of  expression  [FE]                OptionException      [CONTEXT]        for  (final  Iterator  iter  =  tailMap.values().iterator();  iter.hasNext();)  {  final  Option  option  =  (Option)  iter.next();  if  (option.canProcess(commandLine,  arg))  {  return  true;  }  }      [BUGGY]  if(option.canProcess(commandLine,  arg)||  options.canProcess(commandLine,  arg  +  1))  {  [BUGGY]      return  false;  }  if  (anonymous.size()  >  0)  {  return  true;  }  return  false;  }  [CLASS]  GroupImpl  [METHOD]  canProcess  [RETURN_TYPE]  boolean  WriteableCommandLine  commandLine  String  arg  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  SortedMap  newOptionMap  optionMap  WriteableCommandLine  commandLine  Iterator  iter  List  anonymous  newAnonymous  options  Option  option  String  arg  description  name  Map  tailMap  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	139	139	1	replace	if(option.canProcess(commandLine,  arg)||  options.canProcess(commandLine,  arg  +  1))  {	  if(option.canProcess(commandLine,    arg)||    options.canProcess(commandLine,    arg))    {    	non-compiled	[CE]  illegal  start  of  expression	7	None	replace
