projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java124
projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java124Optionoption=optionMap.get(arg);
projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java124if(optionMap.containsKey(arg)){returntrue;}
projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java124Optionoption=optionMap.getOption(commandLine);
projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java124if(optionMap.containsKey(arg)){returnfalse;}
projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java124Optionoption=optionMap.getOption(arg);
projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java124returntrue;
projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java124returnfalse;
projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java124if(commandLine==null||commandLine.equals("")){returnfalse;}
projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java124if(commandLine==null||commandLine.equals(arg)){returnfalse;}
projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java124thrownewIllegalArgumentException("");
projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java124Optionoption=optionMap.values().iterator();
projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java124Optionoption=optionsMap.get(arg);
projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java124if(!optionMap.containsKey(arg)){returnfalse;}
projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java124thrownewCommandLineException("");
projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java124thrownewCommandLinesException("");
projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java124Optionoption=optionMap.get(arg);if(option!=null){returnfalse;}
projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java124Optionoption=optionMap.getOption(arg);if(option!=null){returnfalse;}
projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java124||commandLine.equals("")){returnfalse;}
projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java124if(commandLine==null||commandLine.equals("null")){returnfalse;}
projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java124Optionoption=optionMap.keySet().iterator();
projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java124Optionoption=options.values().iterator();
projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java124Optionoption=optionMap.get(arg).values().iterator();
projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java124if(commandLine.equals(arg)){returnfalse;}
projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java124if(commandLine==null){returnfalse;}
projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java124if(commandLine!=null){returnfalse;}
projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java124||commandLine.equals(arg)){returnfalse;}
projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java124OptioncommandLine=optionMap.get(arg);
projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java124Throwables.thrownewCommandLinesException("");
projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java124thrownewCommandLinesException("Thecommandlinemustbeavalidcommandline.");
projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java124thrownewCommandLinesException("Thecommandlineisnotavalidcommandline.");
projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java124Optionoption=optionMap.get(commandLine);
projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java124Optionoption=optionMap.get(arg)+1;
projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java124Optionoption=optionMap.get(arg+1);
projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java124Optionoption=optionMap.getOption(commandLine,arg);
projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java124Optionoption=optionMap.getOption(commandLine,null);
projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java124Optionoption=optionMap.getOption(arg,description);
projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java124Optionoption=optionMap.getOption(arg)+1;
projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java124Optionoption=optionMap.getOption(commandLine);if(option!=null){returnfalse;}
projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java124Optionoption=optionMap.getOption(arg);if(option==null){returnfalse;}
projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java124Optionoption=optionsMap.get(commandLine);
projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java124Optionoption=optionsMap.get(arg+1);
projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java124optionMap.containsKey(arg)){returnfalse;}
projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java124OptionoptionMap=optionMap.get(arg);
projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java124Throwables.thrownewIllegalArgumentException("");
projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java124thrownewIllegalStateException("");
projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java124thrownewIllegalArgumentException("".equals(arg));
projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java124||optionMap.containsKey(arg)){returnfalse;}
projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java124OptionoptionMap=optionMap.tailMap(arg);
projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java124Optionoption=optionMap.tailMap(arg);
projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java124Optionoption=optionMap.get(arg);if(option==null){returnfalse;}
projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java124finalOptionoption=optionMap.get(arg);if(option!=null){returnfalse;}
projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java124Throwables.thrownewCommandLineException("");
projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java124thrownewCommandLineException("Failedtoparsecommandline:"+arg);
projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java124thrownewCommandLineException("Thecommandlinemustbeavalidcommandline.");
projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java124OptionoptionMap=optionMap.values().iterator();
projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java124finalStringcommandLine=optionMap.get(arg);
projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java124if(commandLine!=null||commandLine.equals("")){returnfalse;}
projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java124if(commandLine==null||commandLine.equals("-")){returnfalse;}
projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java124thrownewCommandLineException("Couldnotfindcommandline:"+arg);
projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java124thrownewCommandLineException("Couldnotinstantiatecommandline:"+arg);
projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java124Optionoption=optionsMap.get(arg)+1;
projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java124OptionoptionMap=optionMap.getOptionMap();
projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java124Optionoption=optionMap.get(arg-1);
projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java124Optionoption=optionMap.get(arg);if(option>=null){returnfalse;}
projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java124Optionoption=optionsMap.values().iterator();
projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java124thrownewCommandLinesException("Thecommandlinecannotbenull.");
projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java124thrownewCommandLinesException("Cannotfindcommandline:"+arg);
projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java124if(optionMap.containsKey(arg)||optionMap.containsKey(arg)){returnfalse;}
projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java124if(optionMap.containsKey(arg)||options.canProcess(commandLine,arg)){returnfalse;}
projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java124Optionoption=optionMap.getOption(commandLine-1);
projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java124thrownewCommandLinesException("Thecommandlinemustbeintherange["+commandLine+"]");
projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java124Optionoption=optionMap.get(arg);if(option!=null||optionMap.containsKey(arg)){returnfalse;}
projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java124Optionoption=optionMap.getOption(arg);if(option!=null||optionMap.containsKey(arg)){returnfalse;}
projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java124Optionoption=optionMap.getKey(arg);
projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java124if(commandLine!=null||commandLine.equals(arg)){returnfalse;}
projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java124return(optionMap!=null)?null:optionMap.values().iterator();
projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java124return(optionMap!=null)?null:optionMap.values().iterator().next();
projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java124thrownewCommandLineException("Unabletoparsecommandline:"+arg);
projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java124thrownewCommandLineException("Couldnotfindcommandlineforoption:"+arg);
projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java124return(optionMap.containsKey(arg))?null:optionMap.values().iterator();
projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java124if(optionMap.canProcess(commandLine,arg)){returnfalse;}
projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java124Optionoption=optionMap.narrow(arg);
