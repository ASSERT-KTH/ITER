bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  Option  option  =(Option)newAnonymous.get(i.next(),  options);  [CE]  illegal  start  of  expression  [FE]                OptionException      [CONTEXT]      if  (option  instanceof  Argument)  {  i.remove();  newAnonymous.add(option);  }  else  {      [BUGGY]  Option  option  =(Option)newAnonymous.get(i.next(),  options);  [BUGGY]      final  Set  triggers  =  option.getTriggers();  for  (Iterator  j  =  triggers.iterator();  j.hasNext();)  {  newOptionMap.put(j.next(),  option);  }  newPrefixes.addAll(option.getPrefixes());  }  [CLASS]  GroupImpl  [METHOD]  <init>  [RETURN_TYPE]  String,int,int,boolean)  List  options  String  name  String  description  final  int  minimum  final  int  maximum  final  boolean  required  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  required  SortedMap  newOptionMap  optionMap  Iterator  i  j  List  anonymous  newAnonymous  options  Option  option  String  description  name  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	100	100	1	replace	Option  option  =(Option)newAnonymous.get(i.next(),  options);	  Option    option    =(Option)newAnonymous.get(i.next());    	non-compiled	[CE]  illegal  start  of  expression	21	None	replace
2	[BUG]  [BUGGY]  Option  option  =(Option)newAnonymous.get(option.next());  [CE]  illegal  start  of  expression  [FE]                  OptionException      [CONTEXT]      if  (option  instanceof  Argument)  {  i.remove();  newAnonymous.add(option);  }  else  {      [BUGGY]  Option  option  =(Option)newAnonymous.get(option.next());  [BUGGY]      final  Set  triggers  =  option.getTriggers();  for  (Iterator  j  =  triggers.iterator();  j.hasNext();)  {  newOptionMap.put(j.next(),  option);  }  newPrefixes.addAll(option.getPrefixes());  }  [CLASS]  GroupImpl  [METHOD]  <init>  [RETURN_TYPE]  String,int,int,boolean)  List  options  String  name  String  description  final  int  minimum  final  int  maximum  final  boolean  required  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  required  SortedMap  newOptionMap  optionMap  Iterator  i  j  List  anonymous  newAnonymous  options  Option  option  String  description  name  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	100	100	1	replace	Option  option  =(Option)newAnonymous.get(option.next());	  Option    option    =(Option)newAnonymous.get(i.next());    	non-compiled	[CE]  illegal  start  of  expression	21	None	replace
3	[BUG]  [BUGGY]  Option  option  =(Option)optionMap.get(i.next(),  newAnonymous);  [CE]  illegal  start  of  expression  [FE]              OptionException      [CONTEXT]      if  (option  instanceof  Argument)  {  i.remove();  newAnonymous.add(option);  }  else  {      [BUGGY]  Option  option  =(Option)optionMap.get(i.next(),  newAnonymous);  [BUGGY]      final  Set  triggers  =  option.getTriggers();  for  (Iterator  j  =  triggers.iterator();  j.hasNext();)  {  newOptionMap.put(j.next(),  option);  }  newPrefixes.addAll(option.getPrefixes());  }  [CLASS]  GroupImpl  [METHOD]  <init>  [RETURN_TYPE]  String,int,int,boolean)  List  options  String  name  String  description  final  int  minimum  final  int  maximum  final  boolean  required  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  required  SortedMap  newOptionMap  optionMap  Iterator  i  j  List  anonymous  newAnonymous  options  Option  option  String  description  name  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	100	100	1	replace	Option  option  =(Option)optionMap.get(i.next(),  newAnonymous);	  Option    option    =(Option)optionMap.get(i.next(),    options);    	non-compiled	[CE]  illegal  start  of  expression	20	None	replace
4	[BUG]  [BUGGY]  Option  option  =(Option)this.optionMap.get(i.next(),  options);  [CE]  illegal  start  of  expression  [FE]                OptionException      [CONTEXT]      if  (option  instanceof  Argument)  {  i.remove();  newAnonymous.add(option);  }  else  {      [BUGGY]  Option  option  =(Option)this.optionMap.get(i.next(),  options);  [BUGGY]      final  Set  triggers  =  option.getTriggers();  for  (Iterator  j  =  triggers.iterator();  j.hasNext();)  {  newOptionMap.put(j.next(),  option);  }  newPrefixes.addAll(option.getPrefixes());  }  [CLASS]  GroupImpl  [METHOD]  <init>  [RETURN_TYPE]  String,int,int,boolean)  List  options  String  name  String  description  final  int  minimum  final  int  maximum  final  boolean  required  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  required  SortedMap  newOptionMap  optionMap  Iterator  i  j  List  anonymous  newAnonymous  options  Option  option  String  description  name  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	100	100	1	replace	Option  option  =(Option)this.optionMap.get(i.next(),  options);	  Option    option    =(Option)optionMap.get(i.next(),    options);    	non-compiled	[CE]  illegal  start  of  expression	20	None	replace
5	[BUG]  [BUGGY]  final  List  triggers  =  options.getAnonymousTriggers();  [CE]  illegal  start  of  expression  [FE]                OptionException      [CONTEXT]      if  (option  instanceof  Argument)  {  i.remove();  newAnonymous.add(option);  }  else  {      [BUGGY]  final  List  triggers  =  options.getAnonymousTriggers();  [BUGGY]        for  (Iterator  j  =  triggers.iterator();  j.hasNext();)  {  newOptionMap.put(j.next(),  option);  }  newPrefixes.addAll(option.getPrefixes());  }  [CLASS]  GroupImpl  [METHOD]  <init>  [RETURN_TYPE]  String,int,int,boolean)  List  options  String  name  String  description  final  int  minimum  final  int  maximum  final  boolean  required  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  required  SortedMap  newOptionMap  optionMap  Iterator  i  j  List  anonymous  newAnonymous  options  Option  option  String  description  name  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	100	100	1	replace	final  List  triggers  =  options.getAnonymousTriggers();	  final    List    triggers    =    options.getTriggers();    	non-compiled	[CE]  illegal  start  of  expression	22	None	replace
6	[BUG]  [BUGGY]  Option  option  =  options.getOption(i  +  1);  [CE]  illegal  start  of  expression  [FE]                  OptionException      [CONTEXT]      if  (option  instanceof  Argument)  {  i.remove();  newAnonymous.add(option);  }  else  {      [BUGGY]  Option  option  =  options.getOption(i  +  1);  [BUGGY]      final  Set  triggers  =  option.getTriggers();  for  (Iterator  j  =  triggers.iterator();  j.hasNext();)  {  newOptionMap.put(j.next(),  option);  }  newPrefixes.addAll(option.getPrefixes());  }  [CLASS]  GroupImpl  [METHOD]  <init>  [RETURN_TYPE]  String,int,int,boolean)  List  options  String  name  String  description  final  int  minimum  final  int  maximum  final  boolean  required  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  required  SortedMap  newOptionMap  optionMap  Iterator  i  j  List  anonymous  newAnonymous  options  Option  option  String  description  name  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	100	100	1	replace	Option  option  =  options.getOption(i  +  1);	  Option    option    =    option.getOption(i    +    1);    	non-compiled	[CE]  illegal  start  of  expression	19	None	replace
7	[BUG]  [BUGGY]  Option  option  =  option.getOption(i  -  1);  [CE]  illegal  start  of  expression  [FE]                    OptionException      [CONTEXT]      if  (option  instanceof  Argument)  {  i.remove();  newAnonymous.add(option);  }  else  {      [BUGGY]  Option  option  =  option.getOption(i  -  1);  [BUGGY]      final  Set  triggers  =  option.getTriggers();  for  (Iterator  j  =  triggers.iterator();  j.hasNext();)  {  newOptionMap.put(j.next(),  option);  }  newPrefixes.addAll(option.getPrefixes());  }  [CLASS]  GroupImpl  [METHOD]  <init>  [RETURN_TYPE]  String,int,int,boolean)  List  options  String  name  String  description  final  int  minimum  final  int  maximum  final  boolean  required  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  required  SortedMap  newOptionMap  optionMap  Iterator  i  j  List  anonymous  newAnonymous  options  Option  option  String  description  name  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	100	100	1	replace	Option  option  =  option.getOption(i  -  1);	  Option    option    =    option.getOption(i    +    1);    	non-compiled	[CE]  illegal  start  of  expression	19	None	replace
8	[BUG]  [BUGGY]  List  triggers  =  options.getAnonymousTriggers();  [CE]  illegal  start  of  expression  [FE]                OptionException      [CONTEXT]      if  (option  instanceof  Argument)  {  i.remove();  newAnonymous.add(option);  }  else  {      [BUGGY]  List  triggers  =  options.getAnonymousTriggers();  [BUGGY]        for  (Iterator  j  =  triggers.iterator();  j.hasNext();)  {  newOptionMap.put(j.next(),  option);  }  newPrefixes.addAll(option.getPrefixes());  }  [CLASS]  GroupImpl  [METHOD]  <init>  [RETURN_TYPE]  String,int,int,boolean)  List  options  String  name  String  description  final  int  minimum  final  int  maximum  final  boolean  required  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  required  SortedMap  newOptionMap  optionMap  Iterator  i  j  List  anonymous  newAnonymous  options  Option  option  String  description  name  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	100	100	1	replace	List  triggers  =  options.getAnonymousTriggers();	  List    triggers    =    options.getTriggers();    	non-compiled	[CE]  illegal  start  of  expression	46	None	replace
9	[BUG]  [BUGGY]  List  triggers  =  options.getArguments();  [CE]  illegal  start  of  expression  [FE]                  OptionException      [CONTEXT]      if  (option  instanceof  Argument)  {  i.remove();  newAnonymous.add(option);  }  else  {      [BUGGY]  List  triggers  =  options.getArguments();  [BUGGY]        for  (Iterator  j  =  triggers.iterator();  j.hasNext();)  {  newOptionMap.put(j.next(),  option);  }  newPrefixes.addAll(option.getPrefixes());  }  [CLASS]  GroupImpl  [METHOD]  <init>  [RETURN_TYPE]  String,int,int,boolean)  List  options  String  name  String  description  final  int  minimum  final  int  maximum  final  boolean  required  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  required  SortedMap  newOptionMap  optionMap  Iterator  i  j  List  anonymous  newAnonymous  options  Option  option  String  description  name  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	100	100	1	replace	List  triggers  =  options.getArguments();	  List    triggers    =    options.getTriggers();    	non-compiled	[CE]  illegal  start  of  expression	46	None	replace
10	[BUG]  [BUGGY]  List  triggers  =  options.getDescription();  [CE]  illegal  start  of  expression  [FE]                    OptionException      [CONTEXT]      if  (option  instanceof  Argument)  {  i.remove();  newAnonymous.add(option);  }  else  {      [BUGGY]  List  triggers  =  options.getDescription();  [BUGGY]        for  (Iterator  j  =  triggers.iterator();  j.hasNext();)  {  newOptionMap.put(j.next(),  option);  }  newPrefixes.addAll(option.getPrefixes());  }  [CLASS]  GroupImpl  [METHOD]  <init>  [RETURN_TYPE]  String,int,int,boolean)  List  options  String  name  String  description  final  int  minimum  final  int  maximum  final  boolean  required  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  required  SortedMap  newOptionMap  optionMap  Iterator  i  j  List  anonymous  newAnonymous  options  Option  option  String  description  name  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	100	100	1	replace	List  triggers  =  options.getDescription();	  List    triggers    =    options.getTriggers();    	non-compiled	[CE]  illegal  start  of  expression	46	None	replace
11	[BUG]  [BUGGY]  Option  option  =(Option)this.optionMap.next();  [CE]  illegal  start  of  expression  [FE]            OptionException      [CONTEXT]      if  (option  instanceof  Argument)  {  i.remove();  newAnonymous.add(option);  }  else  {      [BUGGY]  Option  option  =(Option)this.optionMap.next();  [BUGGY]      final  Set  triggers  =  option.getTriggers();  for  (Iterator  j  =  triggers.iterator();  j.hasNext();)  {  newOptionMap.put(j.next(),  option);  }  newPrefixes.addAll(option.getPrefixes());  }  [CLASS]  GroupImpl  [METHOD]  <init>  [RETURN_TYPE]  String,int,int,boolean)  List  options  String  name  String  description  final  int  minimum  final  int  maximum  final  boolean  required  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  required  SortedMap  newOptionMap  optionMap  Iterator  i  j  List  anonymous  newAnonymous  options  Option  option  String  description  name  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	100	100	1	replace	Option  option  =(Option)this.optionMap.next();	  Option    option    =(Option)optionMap.next();    	non-compiled	[CE]  illegal  start  of  expression	31	None	replace
12	[BUG]  [BUGGY]  Option  option  =  options.getOption(i.next(),  description);  [CE]  illegal  start  of  expression  [FE]              OptionException      [CONTEXT]      if  (option  instanceof  Argument)  {  i.remove();  newAnonymous.add(option);  }  else  {      [BUGGY]  Option  option  =  options.getOption(i.next(),  description);  [BUGGY]      final  Set  triggers  =  option.getTriggers();  for  (Iterator  j  =  triggers.iterator();  j.hasNext();)  {  newOptionMap.put(j.next(),  option);  }  newPrefixes.addAll(option.getPrefixes());  }  [CLASS]  GroupImpl  [METHOD]  <init>  [RETURN_TYPE]  String,int,int,boolean)  List  options  String  name  String  description  final  int  minimum  final  int  maximum  final  boolean  required  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  required  SortedMap  newOptionMap  optionMap  Iterator  i  j  List  anonymous  newAnonymous  options  Option  option  String  description  name  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	100	100	1	replace	Option  option  =  options.getOption(i.next(),  description);	  Option    option    =    options.getOption(i.next());    	non-compiled	[CE]  illegal  start  of  expression	44	None	replace
13	[BUG]  [BUGGY]  Option  option  =  options.getOption(i.next(),  name);  [CE]  illegal  start  of  expression  [FE]                OptionException      [CONTEXT]      if  (option  instanceof  Argument)  {  i.remove();  newAnonymous.add(option);  }  else  {      [BUGGY]  Option  option  =  options.getOption(i.next(),  name);  [BUGGY]      final  Set  triggers  =  option.getTriggers();  for  (Iterator  j  =  triggers.iterator();  j.hasNext();)  {  newOptionMap.put(j.next(),  option);  }  newPrefixes.addAll(option.getPrefixes());  }  [CLASS]  GroupImpl  [METHOD]  <init>  [RETURN_TYPE]  String,int,int,boolean)  List  options  String  name  String  description  final  int  minimum  final  int  maximum  final  boolean  required  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  required  SortedMap  newOptionMap  optionMap  Iterator  i  j  List  anonymous  newAnonymous  options  Option  option  String  description  name  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	100	100	1	replace	Option  option  =  options.getOption(i.next(),  name);	  Option    option    =    options.getOption(i.next());    	non-compiled	[CE]  illegal  start  of  expression	44	None	replace
14	[BUG]  [BUGGY]  Option  option  =  options.getOption(i.next(),  newAnonymous);  [CE]  illegal  start  of  expression  [FE]                  OptionException      [CONTEXT]      if  (option  instanceof  Argument)  {  i.remove();  newAnonymous.add(option);  }  else  {      [BUGGY]  Option  option  =  options.getOption(i.next(),  newAnonymous);  [BUGGY]      final  Set  triggers  =  option.getTriggers();  for  (Iterator  j  =  triggers.iterator();  j.hasNext();)  {  newOptionMap.put(j.next(),  option);  }  newPrefixes.addAll(option.getPrefixes());  }  [CLASS]  GroupImpl  [METHOD]  <init>  [RETURN_TYPE]  String,int,int,boolean)  List  options  String  name  String  description  final  int  minimum  final  int  maximum  final  boolean  required  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  required  SortedMap  newOptionMap  optionMap  Iterator  i  j  List  anonymous  newAnonymous  options  Option  option  String  description  name  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	100	100	1	replace	Option  option  =  options.getOption(i.next(),  newAnonymous);	  Option    option    =    options.getOption(i.next());    	non-compiled	[CE]  illegal  start  of  expression	44	None	replace
15	[BUG]  [BUGGY]  final  Set  <  Option>  triggers  =  option.getAnonymousTriggers();  [CE]  illegal  start  of  expression  [FE]                OptionException      [CONTEXT]      if  (option  instanceof  Argument)  {  i.remove();  newAnonymous.add(option);  }  else  {      [BUGGY]  final  Set  <  Option>  triggers  =  option.getAnonymousTriggers();  [BUGGY]        for  (Iterator  j  =  triggers.iterator();  j.hasNext();)  {  newOptionMap.put(j.next(),  option);  }  newPrefixes.addAll(option.getPrefixes());  }  [CLASS]  GroupImpl  [METHOD]  <init>  [RETURN_TYPE]  String,int,int,boolean)  List  options  String  name  String  description  final  int  minimum  final  int  maximum  final  boolean  required  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  required  SortedMap  newOptionMap  optionMap  Iterator  i  j  List  anonymous  newAnonymous  options  Option  option  String  description  name  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	100	100	1	replace	final  Set  <  Option>  triggers  =  option.getAnonymousTriggers();	  final    ArrayList    triggers    =    option.getAnonymousTriggers();    	non-compiled	[CE]  illegal  start  of  expression	10	None	replace
16	[BUG]  [BUGGY]  newAnonymous.clear();  [CE]  illegal  start  of  expression  [FE]                        OptionException      [CONTEXT]      if  (option  instanceof  Argument)  {  i.remove();  newAnonymous.add(option);  }  else  {      [BUGGY]  newAnonymous.clear();  [BUGGY]      final  Set  triggers  =  option.getTriggers();  for  (Iterator  j  =  triggers.iterator();  j.hasNext();)  {  newOptionMap.put(j.next(),  option);  }  newPrefixes.addAll(option.getPrefixes());  }  [CLASS]  GroupImpl  [METHOD]  <init>  [RETURN_TYPE]  String,int,int,boolean)  List  options  String  name  String  description  final  int  minimum  final  int  maximum  final  boolean  required  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  required  SortedMap  newOptionMap  optionMap  Iterator  i  j  List  anonymous  newAnonymous  options  Option  option  String  description  name  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	100	100	1	replace	newAnonymous.clear();	  i.clear();    	non-compiled	[CE]  illegal  start  of  expression	28	None	replace
17	[BUG]  [BUGGY]  Option  option  =(Option)this.newAnonymous.get(i);  [CE]  illegal  start  of  expression  [FE]                    OptionException      [CONTEXT]      if  (option  instanceof  Argument)  {  i.remove();  newAnonymous.add(option);  }  else  {      [BUGGY]  Option  option  =(Option)this.newAnonymous.get(i);  [BUGGY]      final  Set  triggers  =  option.getTriggers();  for  (Iterator  j  =  triggers.iterator();  j.hasNext();)  {  newOptionMap.put(j.next(),  option);  }  newPrefixes.addAll(option.getPrefixes());  }  [CLASS]  GroupImpl  [METHOD]  <init>  [RETURN_TYPE]  String,int,int,boolean)  List  options  String  name  String  description  final  int  minimum  final  int  maximum  final  boolean  required  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  required  SortedMap  newOptionMap  optionMap  Iterator  i  j  List  anonymous  newAnonymous  options  Option  option  String  description  name  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	100	100	1	replace	Option  option  =(Option)this.newAnonymous.get(i);	  Option    option    =(Option)newAnonymous.get(i);    	non-compiled	[CE]  illegal  start  of  expression	14	None	replace
18	[BUG]  [BUGGY]  Option  option  =  options.getOptionMap();  [CE]  illegal  start  of  expression  [FE]            OptionException      [CONTEXT]      if  (option  instanceof  Argument)  {  i.remove();  newAnonymous.add(option);  }  else  {      [BUGGY]  Option  option  =  options.getOptionMap();  [BUGGY]      final  Set  triggers  =  option.getTriggers();  for  (Iterator  j  =  triggers.iterator();  j.hasNext();)  {  newOptionMap.put(j.next(),  option);  }  newPrefixes.addAll(option.getPrefixes());  }  [CLASS]  GroupImpl  [METHOD]  <init>  [RETURN_TYPE]  String,int,int,boolean)  List  options  String  name  String  description  final  int  minimum  final  int  maximum  final  boolean  required  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  required  SortedMap  newOptionMap  optionMap  Iterator  i  j  List  anonymous  newAnonymous  options  Option  option  String  description  name  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	100	100	1	replace	Option  option  =  options.getOptionMap();	  Option    option    =    options.getOption();    	non-compiled	[CE]  illegal  start  of  expression	1	None	replace
19	[BUG]  [BUGGY]  newAnonymous.addAll(option);  [CE]  illegal  start  of  expression  [FE]                    OptionException      [CONTEXT]      if  (option  instanceof  Argument)  {  i.remove();  newAnonymous.add(option);  }  else  {      [BUGGY]  newAnonymous.addAll(option);  [BUGGY]      final  Set  triggers  =  option.getTriggers();  for  (Iterator  j  =  triggers.iterator();  j.hasNext();)  {  newOptionMap.put(j.next(),  option);  }  newPrefixes.addAll(option.getPrefixes());  }  [CLASS]  GroupImpl  [METHOD]  <init>  [RETURN_TYPE]  String,int,int,boolean)  List  options  String  name  String  description  final  int  minimum  final  int  maximum  final  boolean  required  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  required  SortedMap  newOptionMap  optionMap  Iterator  i  j  List  anonymous  newAnonymous  options  Option  option  String  description  name  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	100	100	1	replace	newAnonymous.addAll(option);	  newAnonymous.add(option);    	non-compiled	[CE]  illegal  start  of  expression	5	None	replace
20	[BUG]  [BUGGY]  newAnonymous.addAll(option.getPrefixes());  [CE]  illegal  start  of  expression  [FE]                      OptionException      [CONTEXT]      if  (option  instanceof  Argument)  {  i.remove();  newAnonymous.add(option);  }  else  {      [BUGGY]  newAnonymous.addAll(option.getPrefixes());  [BUGGY]      final  Set  triggers  =  option.getTriggers();  for  (Iterator  j  =  triggers.iterator();  j.hasNext();)  {  newOptionMap.put(j.next(),  option);  }  newPrefixes.addAll(option.getPrefixes());  }  [CLASS]  GroupImpl  [METHOD]  <init>  [RETURN_TYPE]  String,int,int,boolean)  List  options  String  name  String  description  final  int  minimum  final  int  maximum  final  boolean  required  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  required  SortedMap  newOptionMap  optionMap  Iterator  i  j  List  anonymous  newAnonymous  options  Option  option  String  description  name  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	100	100	1	replace	newAnonymous.addAll(option.getPrefixes());	  newAnonymous.add(option);    	non-compiled	[CE]  illegal  start  of  expression	5	None	replace
21	[BUG]  [BUGGY]  newAnonymous.add(i);  [CE]  illegal  start  of  expression  [FE]                        OptionException      [CONTEXT]      if  (option  instanceof  Argument)  {  i.remove();  newAnonymous.add(option);  }  else  {      [BUGGY]  newAnonymous.add(i);  [BUGGY]      final  Set  triggers  =  option.getTriggers();  for  (Iterator  j  =  triggers.iterator();  j.hasNext();)  {  newOptionMap.put(j.next(),  option);  }  newPrefixes.addAll(option.getPrefixes());  }  [CLASS]  GroupImpl  [METHOD]  <init>  [RETURN_TYPE]  String,int,int,boolean)  List  options  String  name  String  description  final  int  minimum  final  int  maximum  final  boolean  required  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  required  SortedMap  newOptionMap  optionMap  Iterator  i  j  List  anonymous  newAnonymous  options  Option  option  String  description  name  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	100	100	1	replace	newAnonymous.add(i);	  newAnonymous.add(option);    	non-compiled	[CE]  illegal  start  of  expression	5	None	replace
22	[BUG]  [BUGGY]  option  =(Option)optionMap.get(i.next());  [CE]  illegal  start  of  expression  [FE]              OptionException      [CONTEXT]      if  (option  instanceof  Argument)  {  i.remove();  newAnonymous.add(option);  }  else  {      [BUGGY]  option  =(Option)optionMap.get(i.next());  [BUGGY]      final  Set  triggers  =  option.getTriggers();  for  (Iterator  j  =  triggers.iterator();  j.hasNext();)  {  newOptionMap.put(j.next(),  option);  }  newPrefixes.addAll(option.getPrefixes());  }  [CLASS]  GroupImpl  [METHOD]  <init>  [RETURN_TYPE]  String,int,int,boolean)  List  options  String  name  String  description  final  int  minimum  final  int  maximum  final  boolean  required  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  required  SortedMap  newOptionMap  optionMap  Iterator  i  j  List  anonymous  newAnonymous  options  Option  option  String  description  name  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	100	100	1	replace	option  =(Option)optionMap.get(i.next());	  option    =(Option)i.next();    	non-compiled	[CE]  illegal  start  of  expression	12	None	replace
23	[BUG]  [BUGGY]  Option  option  =  option.getOption(i,  j);  [CE]  illegal  start  of  expression  [FE]                OptionException      [CONTEXT]      if  (option  instanceof  Argument)  {  i.remove();  newAnonymous.add(option);  }  else  {      [BUGGY]  Option  option  =  option.getOption(i,  j);  [BUGGY]      final  Set  triggers  =  option.getTriggers();  for  (Iterator  j  =  triggers.iterator();  j.hasNext();)  {  newOptionMap.put(j.next(),  option);  }  newPrefixes.addAll(option.getPrefixes());  }  [CLASS]  GroupImpl  [METHOD]  <init>  [RETURN_TYPE]  String,int,int,boolean)  List  options  String  name  String  description  final  int  minimum  final  int  maximum  final  boolean  required  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  required  SortedMap  newOptionMap  optionMap  Iterator  i  j  List  anonymous  newAnonymous  options  Option  option  String  description  name  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	100	100	1	replace	Option  option  =  option.getOption(i,  j);	  Option    option    =    option.getOption(i,    newAnonymous);    	non-compiled	[CE]  illegal  start  of  expression	36	None	replace
24	[BUG]  [BUGGY]  Option  option  =  option.getOption(i,  newAnonymous,  required);  [CE]  illegal  start  of  expression  [FE]                  OptionException      [CONTEXT]      if  (option  instanceof  Argument)  {  i.remove();  newAnonymous.add(option);  }  else  {      [BUGGY]  Option  option  =  option.getOption(i,  newAnonymous,  required);  [BUGGY]      final  Set  triggers  =  option.getTriggers();  for  (Iterator  j  =  triggers.iterator();  j.hasNext();)  {  newOptionMap.put(j.next(),  option);  }  newPrefixes.addAll(option.getPrefixes());  }  [CLASS]  GroupImpl  [METHOD]  <init>  [RETURN_TYPE]  String,int,int,boolean)  List  options  String  name  String  description  final  int  minimum  final  int  maximum  final  boolean  required  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  required  SortedMap  newOptionMap  optionMap  Iterator  i  j  List  anonymous  newAnonymous  options  Option  option  String  description  name  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	100	100	1	replace	Option  option  =  option.getOption(i,  newAnonymous,  required);	  Option    option    =    option.getOption(i,    newAnonymous);    	non-compiled	[CE]  illegal  start  of  expression	36	None	replace
25	[BUG]  [BUGGY]  option  =  options.getOption(name,  description);  [CE]  illegal  start  of  expression  [FE]              OptionException      [CONTEXT]      if  (option  instanceof  Argument)  {  i.remove();  newAnonymous.add(option);  }  else  {      [BUGGY]  option  =  options.getOption(name,  description);  [BUGGY]      final  Set  triggers  =  option.getTriggers();  for  (Iterator  j  =  triggers.iterator();  j.hasNext();)  {  newOptionMap.put(j.next(),  option);  }  newPrefixes.addAll(option.getPrefixes());  }  [CLASS]  GroupImpl  [METHOD]  <init>  [RETURN_TYPE]  String,int,int,boolean)  List  options  String  name  String  description  final  int  minimum  final  int  maximum  final  boolean  required  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  required  SortedMap  newOptionMap  optionMap  Iterator  i  j  List  anonymous  newAnonymous  options  Option  option  String  description  name  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	100	100	1	replace	option  =  options.getOption(name,  description);	  Option    option    =    options.getOption(i,    description);    	non-compiled	[CE]  illegal  start  of  expression	24	None	replace
26	[BUG]  [BUGGY]  Option  option  =(Option)newAnonymous.get(i.next(),  option);  [CE]  illegal  start  of  expression  [FE]              OptionException      [CONTEXT]      if  (option  instanceof  Argument)  {  i.remove();  newAnonymous.add(option);  }  else  {      [BUGGY]  Option  option  =(Option)newAnonymous.get(i.next(),  option);  [BUGGY]      final  Set  triggers  =  option.getTriggers();  for  (Iterator  j  =  triggers.iterator();  j.hasNext();)  {  newOptionMap.put(j.next(),  option);  }  newPrefixes.addAll(option.getPrefixes());  }  [CLASS]  GroupImpl  [METHOD]  <init>  [RETURN_TYPE]  String,int,int,boolean)  List  options  String  name  String  description  final  int  minimum  final  int  maximum  final  boolean  required  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  required  SortedMap  newOptionMap  optionMap  Iterator  i  j  List  anonymous  newAnonymous  options  Option  option  String  description  name  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	100	100	1	replace	Option  option  =(Option)newAnonymous.get(i.next(),  option);	  Option    option    =(Option)optionMap.get(i.next(),    option);    	non-compiled	[CE]  illegal  start  of  expression	37	None	replace
27	[BUG]  [BUGGY]  Option  option  =(Option)this.optionMap.get(i.next(),  option);  [CE]  illegal  start  of  expression  [FE]                OptionException      [CONTEXT]      if  (option  instanceof  Argument)  {  i.remove();  newAnonymous.add(option);  }  else  {      [BUGGY]  Option  option  =(Option)this.optionMap.get(i.next(),  option);  [BUGGY]      final  Set  triggers  =  option.getTriggers();  for  (Iterator  j  =  triggers.iterator();  j.hasNext();)  {  newOptionMap.put(j.next(),  option);  }  newPrefixes.addAll(option.getPrefixes());  }  [CLASS]  GroupImpl  [METHOD]  <init>  [RETURN_TYPE]  String,int,int,boolean)  List  options  String  name  String  description  final  int  minimum  final  int  maximum  final  boolean  required  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  required  SortedMap  newOptionMap  optionMap  Iterator  i  j  List  anonymous  newAnonymous  options  Option  option  String  description  name  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	100	100	1	replace	Option  option  =(Option)this.optionMap.get(i.next(),  option);	  Option    option    =(Option)optionMap.get(i.next(),    option);    	non-compiled	[CE]  illegal  start  of  expression	37	None	replace
28	[BUG]  [BUGGY]  final  ArrayList  triggers  =  options.getAnonymousTriggers();  [CE]  illegal  start  of  expression  [FE]              OptionException      [CONTEXT]      if  (option  instanceof  Argument)  {  i.remove();  newAnonymous.add(option);  }  else  {      [BUGGY]  final  ArrayList  triggers  =  options.getAnonymousTriggers();  [BUGGY]        for  (Iterator  j  =  triggers.iterator();  j.hasNext();)  {  newOptionMap.put(j.next(),  option);  }  newPrefixes.addAll(option.getPrefixes());  }  [CLASS]  GroupImpl  [METHOD]  <init>  [RETURN_TYPE]  String,int,int,boolean)  List  options  String  name  String  description  final  int  minimum  final  int  maximum  final  boolean  required  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  required  SortedMap  newOptionMap  optionMap  Iterator  i  j  List  anonymous  newAnonymous  options  Option  option  String  description  name  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	100	100	1	replace	final  ArrayList  triggers  =  options.getAnonymousTriggers();	  final    Set    triggers    =    options.getAnonymousTriggers();    	non-compiled	[CE]  illegal  start  of  expression	9	None	replace
29	[BUG]  [BUGGY]  final  Set  triggers  =  options.getAnonymousTriggers(i);  [CE]  illegal  start  of  expression  [FE]                OptionException      [CONTEXT]      if  (option  instanceof  Argument)  {  i.remove();  newAnonymous.add(option);  }  else  {      [BUGGY]  final  Set  triggers  =  options.getAnonymousTriggers(i);  [BUGGY]        for  (Iterator  j  =  triggers.iterator();  j.hasNext();)  {  newOptionMap.put(j.next(),  option);  }  newPrefixes.addAll(option.getPrefixes());  }  [CLASS]  GroupImpl  [METHOD]  <init>  [RETURN_TYPE]  String,int,int,boolean)  List  options  String  name  String  description  final  int  minimum  final  int  maximum  final  boolean  required  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  required  SortedMap  newOptionMap  optionMap  Iterator  i  j  List  anonymous  newAnonymous  options  Option  option  String  description  name  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	100	100	1	replace	final  Set  triggers  =  options.getAnonymousTriggers(i);	  final    Set    triggers    =    options.getAnonymousTriggers();    	non-compiled	[CE]  illegal  start  of  expression	9	None	replace
30	[BUG]  [BUGGY]  Option  option  =(Option)this.optionMap.get(option.next());  [CE]  illegal  start  of  expression  [FE]                OptionException      [CONTEXT]      if  (option  instanceof  Argument)  {  i.remove();  newAnonymous.add(option);  }  else  {      [BUGGY]  Option  option  =(Option)this.optionMap.get(option.next());  [BUGGY]      final  Set  triggers  =  option.getTriggers();  for  (Iterator  j  =  triggers.iterator();  j.hasNext();)  {  newOptionMap.put(j.next(),  option);  }  newPrefixes.addAll(option.getPrefixes());  }  [CLASS]  GroupImpl  [METHOD]  <init>  [RETURN_TYPE]  String,int,int,boolean)  List  options  String  name  String  description  final  int  minimum  final  int  maximum  final  boolean  required  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  required  SortedMap  newOptionMap  optionMap  Iterator  i  j  List  anonymous  newAnonymous  options  Option  option  String  description  name  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	100	100	1	replace	Option  option  =(Option)this.optionMap.get(option.next());	  Option    option    =(Option)optionMap.get(option.next());    	non-compiled	[CE]  illegal  start  of  expression	38	None	replace
31	[BUG]  [BUGGY]  Option  option  =(Option)i.getOption();  [CE]  illegal  start  of  expression  [FE]              OptionException      [CONTEXT]      if  (option  instanceof  Argument)  {  i.remove();  newAnonymous.add(option);  }  else  {      [BUGGY]  Option  option  =(Option)i.getOption();  [BUGGY]      final  Set  triggers  =  option.getTriggers();  for  (Iterator  j  =  triggers.iterator();  j.hasNext();)  {  newOptionMap.put(j.next(),  option);  }  newPrefixes.addAll(option.getPrefixes());  }  [CLASS]  GroupImpl  [METHOD]  <init>  [RETURN_TYPE]  String,int,int,boolean)  List  options  String  name  String  description  final  int  minimum  final  int  maximum  final  boolean  required  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  required  SortedMap  newOptionMap  optionMap  Iterator  i  j  List  anonymous  newAnonymous  options  Option  option  String  description  name  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	100	100	1	replace	Option  option  =(Option)i.getOption();	  Option    option    =    i.getOption();    	non-compiled	[CE]  illegal  start  of  expression	2	None	replace
32	[BUG]  [BUGGY]  List  triggers  =  option.getArguments();  [CE]  illegal  start  of  expression  [FE]                OptionException      [CONTEXT]      if  (option  instanceof  Argument)  {  i.remove();  newAnonymous.add(option);  }  else  {      [BUGGY]  List  triggers  =  option.getArguments();  [BUGGY]        for  (Iterator  j  =  triggers.iterator();  j.hasNext();)  {  newOptionMap.put(j.next(),  option);  }  newPrefixes.addAll(option.getPrefixes());  }  [CLASS]  GroupImpl  [METHOD]  <init>  [RETURN_TYPE]  String,int,int,boolean)  List  options  String  name  String  description  final  int  minimum  final  int  maximum  final  boolean  required  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  required  SortedMap  newOptionMap  optionMap  Iterator  i  j  List  anonymous  newAnonymous  options  Option  option  String  description  name  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	100	100	1	replace	List  triggers  =  option.getArguments();	  List    triggers    =    option.getTriggers();    	non-compiled	[CE]  illegal  start  of  expression	47	None	replace
33	[BUG]  [BUGGY]  Option  option  =(Option)this.allOptionMap.get(i);  [CE]  illegal  start  of  expression  [FE]                    OptionException      [CONTEXT]      if  (option  instanceof  Argument)  {  i.remove();  newAnonymous.add(option);  }  else  {      [BUGGY]  Option  option  =(Option)this.allOptionMap.get(i);  [BUGGY]      final  Set  triggers  =  option.getTriggers();  for  (Iterator  j  =  triggers.iterator();  j.hasNext();)  {  newOptionMap.put(j.next(),  option);  }  newPrefixes.addAll(option.getPrefixes());  }  [CLASS]  GroupImpl  [METHOD]  <init>  [RETURN_TYPE]  String,int,int,boolean)  List  options  String  name  String  description  final  int  minimum  final  int  maximum  final  boolean  required  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  required  SortedMap  newOptionMap  optionMap  Iterator  i  j  List  anonymous  newAnonymous  options  Option  option  String  description  name  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	100	100	1	replace	Option  option  =(Option)this.allOptionMap.get(i);	  Option    option    =(Option)allOptionMap.get(i);    	non-compiled	[CE]  illegal  start  of  expression	34	None	replace
34	[BUG]  [BUGGY]  Option  option  =  option.getAnonymousOptionMap();  [CE]  illegal  start  of  expression  [FE]                OptionException      [CONTEXT]      if  (option  instanceof  Argument)  {  i.remove();  newAnonymous.add(option);  }  else  {      [BUGGY]  Option  option  =  option.getAnonymousOptionMap();  [BUGGY]      final  Set  triggers  =  option.getTriggers();  for  (Iterator  j  =  triggers.iterator();  j.hasNext();)  {  newOptionMap.put(j.next(),  option);  }  newPrefixes.addAll(option.getPrefixes());  }  [CLASS]  GroupImpl  [METHOD]  <init>  [RETURN_TYPE]  String,int,int,boolean)  List  options  String  name  String  description  final  int  minimum  final  int  maximum  final  boolean  required  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  required  SortedMap  newOptionMap  optionMap  Iterator  i  j  List  anonymous  newAnonymous  options  Option  option  String  description  name  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	100	100	1	replace	Option  option  =  option.getAnonymousOptionMap();	  Option    option    =    option.getOptionMap();    	non-compiled	[CE]  illegal  start  of  expression	42	None	replace
35	[BUG]  [BUGGY]  Option  option  =  option.getAnonymousOption();  [CE]  illegal  start  of  expression  [FE]                  OptionException      [CONTEXT]      if  (option  instanceof  Argument)  {  i.remove();  newAnonymous.add(option);  }  else  {      [BUGGY]  Option  option  =  option.getAnonymousOption();  [BUGGY]      final  Set  triggers  =  option.getTriggers();  for  (Iterator  j  =  triggers.iterator();  j.hasNext();)  {  newOptionMap.put(j.next(),  option);  }  newPrefixes.addAll(option.getPrefixes());  }  [CLASS]  GroupImpl  [METHOD]  <init>  [RETURN_TYPE]  String,int,int,boolean)  List  options  String  name  String  description  final  int  minimum  final  int  maximum  final  boolean  required  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  required  SortedMap  newOptionMap  optionMap  Iterator  i  j  List  anonymous  newAnonymous  options  Option  option  String  description  name  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	100	100	1	replace	Option  option  =  option.getAnonymousOption();	  Option    option    =    option.getOptionMap();    	non-compiled	[CE]  illegal  start  of  expression	42	None	replace
36	[BUG]  [BUGGY]  Iterator  <  Option>  triggers  =  options.entrySet().iterator();  [CE]  illegal  start  of  expression  [FE]                  OptionException      [CONTEXT]      if  (option  instanceof  Argument)  {  i.remove();  newAnonymous.add(option);  }  else  {      [BUGGY]  Iterator  <  Option>  triggers  =  options.entrySet().iterator();  [BUGGY]        for  (Iterator  j  =  triggers.iterator();  j.hasNext();)  {  newOptionMap.put(j.next(),  option);  }  newPrefixes.addAll(option.getPrefixes());  }  [CLASS]  GroupImpl  [METHOD]  <init>  [RETURN_TYPE]  String,int,int,boolean)  List  options  String  name  String  description  final  int  minimum  final  int  maximum  final  boolean  required  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  required  SortedMap  newOptionMap  optionMap  Iterator  i  j  List  anonymous  newAnonymous  options  Option  option  String  description  name  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	100	100	1	replace	Iterator  <  Option>  triggers  =  options.entrySet().iterator();	  Iterator    <    Option>    triggers    =    optionMap.entrySet().iterator();    	non-compiled	[CE]  illegal  start  of  expression	43	None	replace
37	[BUG]  [BUGGY]  Iterator  <  Option>  triggers  =  optionMap.iterator();  [CE]  illegal  start  of  expression  [FE]                    OptionException      [CONTEXT]      if  (option  instanceof  Argument)  {  i.remove();  newAnonymous.add(option);  }  else  {      [BUGGY]  Iterator  <  Option>  triggers  =  optionMap.iterator();  [BUGGY]        for  (Iterator  j  =  triggers.iterator();  j.hasNext();)  {  newOptionMap.put(j.next(),  option);  }  newPrefixes.addAll(option.getPrefixes());  }  [CLASS]  GroupImpl  [METHOD]  <init>  [RETURN_TYPE]  String,int,int,boolean)  List  options  String  name  String  description  final  int  minimum  final  int  maximum  final  boolean  required  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  required  SortedMap  newOptionMap  optionMap  Iterator  i  j  List  anonymous  newAnonymous  options  Option  option  String  description  name  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	100	100	1	replace	Iterator  <  Option>  triggers  =  optionMap.iterator();	  Iterator    <    Option>    triggers    =    optionMap.entrySet().iterator();    	non-compiled	[CE]  illegal  start  of  expression	43	None	replace
38	[BUG]  [BUGGY]  Option  option  =  option.getOption(name,  description);  [CE]  illegal  start  of  expression  [FE]                OptionException      [CONTEXT]      if  (option  instanceof  Argument)  {  i.remove();  newAnonymous.add(option);  }  else  {      [BUGGY]  Option  option  =  option.getOption(name,  description);  [BUGGY]      final  Set  triggers  =  option.getTriggers();  for  (Iterator  j  =  triggers.iterator();  j.hasNext();)  {  newOptionMap.put(j.next(),  option);  }  newPrefixes.addAll(option.getPrefixes());  }  [CLASS]  GroupImpl  [METHOD]  <init>  [RETURN_TYPE]  String,int,int,boolean)  List  options  String  name  String  description  final  int  minimum  final  int  maximum  final  boolean  required  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  required  SortedMap  newOptionMap  optionMap  Iterator  i  j  List  anonymous  newAnonymous  options  Option  option  String  description  name  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	100	100	1	replace	Option  option  =  option.getOption(name,  description);	  Option    option    =    option.getOption(i,    description);    	non-compiled	[CE]  illegal  start  of  expression	18	None	replace
39	[BUG]  [BUGGY]  Option  option  =  i.getOption(option,  description);  [CE]  illegal  start  of  expression  [FE]                  OptionException      [CONTEXT]      if  (option  instanceof  Argument)  {  i.remove();  newAnonymous.add(option);  }  else  {      [BUGGY]  Option  option  =  i.getOption(option,  description);  [BUGGY]      final  Set  triggers  =  option.getTriggers();  for  (Iterator  j  =  triggers.iterator();  j.hasNext();)  {  newOptionMap.put(j.next(),  option);  }  newPrefixes.addAll(option.getPrefixes());  }  [CLASS]  GroupImpl  [METHOD]  <init>  [RETURN_TYPE]  String,int,int,boolean)  List  options  String  name  String  description  final  int  minimum  final  int  maximum  final  boolean  required  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  required  SortedMap  newOptionMap  optionMap  Iterator  i  j  List  anonymous  newAnonymous  options  Option  option  String  description  name  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	100	100	1	replace	Option  option  =  i.getOption(option,  description);	  Option    option    =    option.getOption(i,    description);    	non-compiled	[CE]  illegal  start  of  expression	18	None	replace
40	[BUG]  [BUGGY]  Option  option  =  options.getOption(name,  description,  minimum);  [CE]  illegal  start  of  expression  [FE]                  OptionException      [CONTEXT]      if  (option  instanceof  Argument)  {  i.remove();  newAnonymous.add(option);  }  else  {      [BUGGY]  Option  option  =  options.getOption(name,  description,  minimum);  [BUGGY]      final  Set  triggers  =  option.getTriggers();  for  (Iterator  j  =  triggers.iterator();  j.hasNext();)  {  newOptionMap.put(j.next(),  option);  }  newPrefixes.addAll(option.getPrefixes());  }  [CLASS]  GroupImpl  [METHOD]  <init>  [RETURN_TYPE]  String,int,int,boolean)  List  options  String  name  String  description  final  int  minimum  final  int  maximum  final  boolean  required  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  required  SortedMap  newOptionMap  optionMap  Iterator  i  j  List  anonymous  newAnonymous  options  Option  option  String  description  name  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	100	100	1	replace	Option  option  =  options.getOption(name,  description,  minimum);	  Option    option    =    options.getOption(name,    description);    	non-compiled	[CE]  illegal  start  of  expression	16	None	replace
41	[BUG]  [BUGGY]  Option  option  =  options.getOption(name,  description,  required);  [CE]  illegal  start  of  expression  [FE]                    OptionException      [CONTEXT]      if  (option  instanceof  Argument)  {  i.remove();  newAnonymous.add(option);  }  else  {      [BUGGY]  Option  option  =  options.getOption(name,  description,  required);  [BUGGY]      final  Set  triggers  =  option.getTriggers();  for  (Iterator  j  =  triggers.iterator();  j.hasNext();)  {  newOptionMap.put(j.next(),  option);  }  newPrefixes.addAll(option.getPrefixes());  }  [CLASS]  GroupImpl  [METHOD]  <init>  [RETURN_TYPE]  String,int,int,boolean)  List  options  String  name  String  description  final  int  minimum  final  int  maximum  final  boolean  required  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  required  SortedMap  newOptionMap  optionMap  Iterator  i  j  List  anonymous  newAnonymous  options  Option  option  String  description  name  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	100	100	1	replace	Option  option  =  options.getOption(name,  description,  required);	  Option    option    =    options.getOption(name,    description);    	non-compiled	[CE]  illegal  start  of  expression	16	None	replace
42	[BUG]  [BUGGY]  Option  option  =  options.getOption(name,  description,  maximum);  [CE]  illegal  start  of  expression  [FE]                      OptionException      [CONTEXT]      if  (option  instanceof  Argument)  {  i.remove();  newAnonymous.add(option);  }  else  {      [BUGGY]  Option  option  =  options.getOption(name,  description,  maximum);  [BUGGY]      final  Set  triggers  =  option.getTriggers();  for  (Iterator  j  =  triggers.iterator();  j.hasNext();)  {  newOptionMap.put(j.next(),  option);  }  newPrefixes.addAll(option.getPrefixes());  }  [CLASS]  GroupImpl  [METHOD]  <init>  [RETURN_TYPE]  String,int,int,boolean)  List  options  String  name  String  description  final  int  minimum  final  int  maximum  final  boolean  required  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  required  SortedMap  newOptionMap  optionMap  Iterator  i  j  List  anonymous  newAnonymous  options  Option  option  String  description  name  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	100	100	1	replace	Option  option  =  options.getOption(name,  description,  maximum);	  Option    option    =    options.getOption(name,    description);    	non-compiled	[CE]  illegal  start  of  expression	16	None	replace
43	[BUG]  [BUGGY]  Option  option  =(Option)option.clone();  [CE]  illegal  start  of  expression  [FE]              OptionException      [CONTEXT]      if  (option  instanceof  Argument)  {  i.remove();  newAnonymous.add(option);  }  else  {      [BUGGY]  Option  option  =(Option)option.clone();  [BUGGY]      final  Set  triggers  =  option.getTriggers();  for  (Iterator  j  =  triggers.iterator();  j.hasNext();)  {  newOptionMap.put(j.next(),  option);  }  newPrefixes.addAll(option.getPrefixes());  }  [CLASS]  GroupImpl  [METHOD]  <init>  [RETURN_TYPE]  String,int,int,boolean)  List  options  String  name  String  description  final  int  minimum  final  int  maximum  final  boolean  required  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  required  SortedMap  newOptionMap  optionMap  Iterator  i  j  List  anonymous  newAnonymous  options  Option  option  String  description  name  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	100	100	1	replace	Option  option  =(Option)option.clone();	  Option    option    =(Option)option.next();    	non-compiled	[CE]  illegal  start  of  expression	32	None	replace
44	[BUG]  [BUGGY]  i.add(option.getDescription());  [CE]  illegal  start  of  expression  [FE]                      OptionException      [CONTEXT]      if  (option  instanceof  Argument)  {  i.remove();  newAnonymous.add(option);  }  else  {      [BUGGY]  i.add(option.getDescription());  [BUGGY]      final  Set  triggers  =  option.getTriggers();  for  (Iterator  j  =  triggers.iterator();  j.hasNext();)  {  newOptionMap.put(j.next(),  option);  }  newPrefixes.addAll(option.getPrefixes());  }  [CLASS]  GroupImpl  [METHOD]  <init>  [RETURN_TYPE]  String,int,int,boolean)  List  options  String  name  String  description  final  int  minimum  final  int  maximum  final  boolean  required  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  required  SortedMap  newOptionMap  optionMap  Iterator  i  j  List  anonymous  newAnonymous  options  Option  option  String  description  name  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	100	100	1	replace	i.add(option.getDescription());	  i.add(option.getAnonymous());    	non-compiled	[CE]  illegal  start  of  expression	27	None	replace
45	[BUG]  [BUGGY]  i.addAll(option.getAnonymous());  [CE]  illegal  start  of  expression  [FE]                        OptionException      [CONTEXT]      if  (option  instanceof  Argument)  {  i.remove();  newAnonymous.add(option);  }  else  {      [BUGGY]  i.addAll(option.getAnonymous());  [BUGGY]      final  Set  triggers  =  option.getTriggers();  for  (Iterator  j  =  triggers.iterator();  j.hasNext();)  {  newOptionMap.put(j.next(),  option);  }  newPrefixes.addAll(option.getPrefixes());  }  [CLASS]  GroupImpl  [METHOD]  <init>  [RETURN_TYPE]  String,int,int,boolean)  List  options  String  name  String  description  final  int  minimum  final  int  maximum  final  boolean  required  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  required  SortedMap  newOptionMap  optionMap  Iterator  i  j  List  anonymous  newAnonymous  options  Option  option  String  description  name  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	100	100	1	replace	i.addAll(option.getAnonymous());	  i.add(option.getAnonymous());    	non-compiled	[CE]  illegal  start  of  expression	27	None	replace
46	[BUG]  [BUGGY]  Option  option  =(Option)this.optionMap.get(i  -  1);  [CE]  illegal  start  of  expression  [FE]                  OptionException      [CONTEXT]      if  (option  instanceof  Argument)  {  i.remove();  newAnonymous.add(option);  }  else  {      [BUGGY]  Option  option  =(Option)this.optionMap.get(i  -  1);  [BUGGY]      final  Set  triggers  =  option.getTriggers();  for  (Iterator  j  =  triggers.iterator();  j.hasNext();)  {  newOptionMap.put(j.next(),  option);  }  newPrefixes.addAll(option.getPrefixes());  }  [CLASS]  GroupImpl  [METHOD]  <init>  [RETURN_TYPE]  String,int,int,boolean)  List  options  String  name  String  description  final  int  minimum  final  int  maximum  final  boolean  required  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  required  SortedMap  newOptionMap  optionMap  Iterator  i  j  List  anonymous  newAnonymous  options  Option  option  String  description  name  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	100	100	1	replace	Option  option  =(Option)this.optionMap.get(i  -  1);	  Option    option    =(Option)optionMap.get(i    -    1);    	non-compiled	[CE]  illegal  start  of  expression	33	None	replace
47	[BUG]  [BUGGY]  Option  option  =(Option)newAnonymous.get(i  -  1);  [CE]  illegal  start  of  expression  [FE]                    OptionException      [CONTEXT]      if  (option  instanceof  Argument)  {  i.remove();  newAnonymous.add(option);  }  else  {      [BUGGY]  Option  option  =(Option)newAnonymous.get(i  -  1);  [BUGGY]      final  Set  triggers  =  option.getTriggers();  for  (Iterator  j  =  triggers.iterator();  j.hasNext();)  {  newOptionMap.put(j.next(),  option);  }  newPrefixes.addAll(option.getPrefixes());  }  [CLASS]  GroupImpl  [METHOD]  <init>  [RETURN_TYPE]  String,int,int,boolean)  List  options  String  name  String  description  final  int  minimum  final  int  maximum  final  boolean  required  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  required  SortedMap  newOptionMap  optionMap  Iterator  i  j  List  anonymous  newAnonymous  options  Option  option  String  description  name  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	100	100	1	replace	Option  option  =(Option)newAnonymous.get(i  -  1);	  Option    option    =(Option)optionMap.get(i    -    1);    	non-compiled	[CE]  illegal  start  of  expression	33	None	replace
48	[BUG]  [BUGGY]  i.addAll(option.getArgument());  [CE]  illegal  start  of  expression  [FE]                    OptionException      [CONTEXT]      if  (option  instanceof  Argument)  {  i.remove();  newAnonymous.add(option);  }  else  {      [BUGGY]  i.addAll(option.getArgument());  [BUGGY]      final  Set  triggers  =  option.getTriggers();  for  (Iterator  j  =  triggers.iterator();  j.hasNext();)  {  newOptionMap.put(j.next(),  option);  }  newPrefixes.addAll(option.getPrefixes());  }  [CLASS]  GroupImpl  [METHOD]  <init>  [RETURN_TYPE]  String,int,int,boolean)  List  options  String  name  String  description  final  int  minimum  final  int  maximum  final  boolean  required  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  required  SortedMap  newOptionMap  optionMap  Iterator  i  j  List  anonymous  newAnonymous  options  Option  option  String  description  name  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	100	100	1	replace	i.addAll(option.getArgument());	  i.add(option.getArgument());    	non-compiled	[CE]  illegal  start  of  expression	26	None	replace
49	[BUG]  [BUGGY]  Option  option  =  options.getOption(name,  maximum);  [CE]  illegal  start  of  expression  [FE]                OptionException      [CONTEXT]      if  (option  instanceof  Argument)  {  i.remove();  newAnonymous.add(option);  }  else  {      [BUGGY]  Option  option  =  options.getOption(name,  maximum);  [BUGGY]      final  Set  triggers  =  option.getTriggers();  for  (Iterator  j  =  triggers.iterator();  j.hasNext();)  {  newOptionMap.put(j.next(),  option);  }  newPrefixes.addAll(option.getPrefixes());  }  [CLASS]  GroupImpl  [METHOD]  <init>  [RETURN_TYPE]  String,int,int,boolean)  List  options  String  name  String  description  final  int  minimum  final  int  maximum  final  boolean  required  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  required  SortedMap  newOptionMap  optionMap  Iterator  i  j  List  anonymous  newAnonymous  options  Option  option  String  description  name  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	100	100	1	replace	Option  option  =  options.getOption(name,  maximum);	  Option    option    =    options.getOption(name,    required);    	non-compiled	[CE]  illegal  start  of  expression	30	None	replace
50	[BUG]  [BUGGY]  Option  option  =  options.getOption(name,  minimum,  required);  [CE]  illegal  start  of  expression  [FE]                  OptionException      [CONTEXT]      if  (option  instanceof  Argument)  {  i.remove();  newAnonymous.add(option);  }  else  {      [BUGGY]  Option  option  =  options.getOption(name,  minimum,  required);  [BUGGY]      final  Set  triggers  =  option.getTriggers();  for  (Iterator  j  =  triggers.iterator();  j.hasNext();)  {  newOptionMap.put(j.next(),  option);  }  newPrefixes.addAll(option.getPrefixes());  }  [CLASS]  GroupImpl  [METHOD]  <init>  [RETURN_TYPE]  String,int,int,boolean)  List  options  String  name  String  description  final  int  minimum  final  int  maximum  final  boolean  required  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  required  SortedMap  newOptionMap  optionMap  Iterator  i  j  List  anonymous  newAnonymous  options  Option  option  String  description  name  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	100	100	1	replace	Option  option  =  options.getOption(name,  minimum,  required);	  Option    option    =    options.getOption(name,    required);    	non-compiled	[CE]  illegal  start  of  expression	30	None	replace
51	[BUG]  [BUGGY]  Iterator  <  Option>  triggers  =  this.options.iterator();  [CE]  illegal  start  of  expression  [FE]                  OptionException      [CONTEXT]      if  (option  instanceof  Argument)  {  i.remove();  newAnonymous.add(option);  }  else  {      [BUGGY]  Iterator  <  Option>  triggers  =  this.options.iterator();  [BUGGY]        for  (Iterator  j  =  triggers.iterator();  j.hasNext();)  {  newOptionMap.put(j.next(),  option);  }  newPrefixes.addAll(option.getPrefixes());  }  [CLASS]  GroupImpl  [METHOD]  <init>  [RETURN_TYPE]  String,int,int,boolean)  List  options  String  name  String  description  final  int  minimum  final  int  maximum  final  boolean  required  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  required  SortedMap  newOptionMap  optionMap  Iterator  i  j  List  anonymous  newAnonymous  options  Option  option  String  description  name  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	100	100	1	replace	Iterator  <  Option>  triggers  =  this.options.iterator();	  Iterator    <    Option>    triggers    =    options.iterator();    	non-compiled	[CE]  illegal  start  of  expression	3	None	replace
52	[BUG]  [BUGGY]  Iterator  <  Option>  triggers  =  newAnonymous.iterator();  [CE]  illegal  start  of  expression  [FE]                    OptionException      [CONTEXT]      if  (option  instanceof  Argument)  {  i.remove();  newAnonymous.add(option);  }  else  {      [BUGGY]  Iterator  <  Option>  triggers  =  newAnonymous.iterator();  [BUGGY]        for  (Iterator  j  =  triggers.iterator();  j.hasNext();)  {  newOptionMap.put(j.next(),  option);  }  newPrefixes.addAll(option.getPrefixes());  }  [CLASS]  GroupImpl  [METHOD]  <init>  [RETURN_TYPE]  String,int,int,boolean)  List  options  String  name  String  description  final  int  minimum  final  int  maximum  final  boolean  required  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  required  SortedMap  newOptionMap  optionMap  Iterator  i  j  List  anonymous  newAnonymous  options  Option  option  String  description  name  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	100	100	1	replace	Iterator  <  Option>  triggers  =  newAnonymous.iterator();	  Iterator    <    Option>    triggers    =    options.iterator();    	non-compiled	[CE]  illegal  start  of  expression	3	None	replace
53	[BUG]  [BUGGY]  optionMap.put(name,  options);  [CE]  illegal  start  of  expression  [FE]                      OptionException      [CONTEXT]      if  (option  instanceof  Argument)  {  i.remove();  newAnonymous.add(option);  }  else  {      [BUGGY]  optionMap.put(name,  options);  [BUGGY]      final  Set  triggers  =  option.getTriggers();  for  (Iterator  j  =  triggers.iterator();  j.hasNext();)  {  newOptionMap.put(j.next(),  option);  }  newPrefixes.addAll(option.getPrefixes());  }  [CLASS]  GroupImpl  [METHOD]  <init>  [RETURN_TYPE]  String,int,int,boolean)  List  options  String  name  String  description  final  int  minimum  final  int  maximum  final  boolean  required  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  required  SortedMap  newOptionMap  optionMap  Iterator  i  j  List  anonymous  newAnonymous  options  Option  option  String  description  name  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	100	100	1	replace	optionMap.put(name,  options);	  optionMap.put(name,    option);    	non-compiled	[CE]  illegal  start  of  expression	6	None	replace
54	[BUG]  [BUGGY]  final  Set  triggers  =  options.getTriggers(i);  [CE]  illegal  start  of  expression  [FE]              OptionException      [CONTEXT]      if  (option  instanceof  Argument)  {  i.remove();  newAnonymous.add(option);  }  else  {      [BUGGY]  final  Set  triggers  =  options.getTriggers(i);  [BUGGY]        for  (Iterator  j  =  triggers.iterator();  j.hasNext();)  {  newOptionMap.put(j.next(),  option);  }  newPrefixes.addAll(option.getPrefixes());  }  [CLASS]  GroupImpl  [METHOD]  <init>  [RETURN_TYPE]  String,int,int,boolean)  List  options  String  name  String  description  final  int  minimum  final  int  maximum  final  boolean  required  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  required  SortedMap  newOptionMap  optionMap  Iterator  i  j  List  anonymous  newAnonymous  options  Option  option  String  description  name  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	100	100	1	replace	final  Set  triggers  =  options.getTriggers(i);	  final    Set    triggers    =    options.getTriggers(option);    	non-compiled	[CE]  illegal  start  of  expression	45	None	replace
55	[BUG]  [BUGGY]  final  List  triggers  =  options.getTriggers(option);  [CE]  illegal  start  of  expression  [FE]                OptionException      [CONTEXT]      if  (option  instanceof  Argument)  {  i.remove();  newAnonymous.add(option);  }  else  {      [BUGGY]  final  List  triggers  =  options.getTriggers(option);  [BUGGY]        for  (Iterator  j  =  triggers.iterator();  j.hasNext();)  {  newOptionMap.put(j.next(),  option);  }  newPrefixes.addAll(option.getPrefixes());  }  [CLASS]  GroupImpl  [METHOD]  <init>  [RETURN_TYPE]  String,int,int,boolean)  List  options  String  name  String  description  final  int  minimum  final  int  maximum  final  boolean  required  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  required  SortedMap  newOptionMap  optionMap  Iterator  i  j  List  anonymous  newAnonymous  options  Option  option  String  description  name  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	100	100	1	replace	final  List  triggers  =  options.getTriggers(option);	  final    Set    triggers    =    options.getTriggers(option);    	non-compiled	[CE]  illegal  start  of  expression	45	None	replace
56	[BUG]  [BUGGY]  final  Set  triggers  =  options.getTriggers(required);  [CE]  illegal  start  of  expression  [FE]                  OptionException      [CONTEXT]      if  (option  instanceof  Argument)  {  i.remove();  newAnonymous.add(option);  }  else  {      [BUGGY]  final  Set  triggers  =  options.getTriggers(required);  [BUGGY]        for  (Iterator  j  =  triggers.iterator();  j.hasNext();)  {  newOptionMap.put(j.next(),  option);  }  newPrefixes.addAll(option.getPrefixes());  }  [CLASS]  GroupImpl  [METHOD]  <init>  [RETURN_TYPE]  String,int,int,boolean)  List  options  String  name  String  description  final  int  minimum  final  int  maximum  final  boolean  required  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  required  SortedMap  newOptionMap  optionMap  Iterator  i  j  List  anonymous  newAnonymous  options  Option  option  String  description  name  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	100	100	1	replace	final  Set  triggers  =  options.getTriggers(required);	  final    Set    triggers    =    options.getTriggers(option);    	non-compiled	[CE]  illegal  start  of  expression	45	None	replace
57	[BUG]  [BUGGY]  Iterator  <  Option>  triggers  =  options.keySet().iterator();  [CE]  illegal  start  of  expression  [FE]                    OptionException      [CONTEXT]      if  (option  instanceof  Argument)  {  i.remove();  newAnonymous.add(option);  }  else  {      [BUGGY]  Iterator  <  Option>  triggers  =  options.keySet().iterator();  [BUGGY]        for  (Iterator  j  =  triggers.iterator();  j.hasNext();)  {  newOptionMap.put(j.next(),  option);  }  newPrefixes.addAll(option.getPrefixes());  }  [CLASS]  GroupImpl  [METHOD]  <init>  [RETURN_TYPE]  String,int,int,boolean)  List  options  String  name  String  description  final  int  minimum  final  int  maximum  final  boolean  required  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  required  SortedMap  newOptionMap  optionMap  Iterator  i  j  List  anonymous  newAnonymous  options  Option  option  String  description  name  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	100	100	1	replace	Iterator  <  Option>  triggers  =  options.keySet().iterator();	  Iterator    <    Option>    triggers    =    optionMap.keySet().iterator();    	non-compiled	[CE]  illegal  start  of  expression	4	None	replace
58	[BUG]  [BUGGY]  Iterator  <  Option>  triggers  =  optionMap.values().iterator();  [CE]  illegal  start  of  expression  [FE]                      OptionException      [CONTEXT]      if  (option  instanceof  Argument)  {  i.remove();  newAnonymous.add(option);  }  else  {      [BUGGY]  Iterator  <  Option>  triggers  =  optionMap.values().iterator();  [BUGGY]        for  (Iterator  j  =  triggers.iterator();  j.hasNext();)  {  newOptionMap.put(j.next(),  option);  }  newPrefixes.addAll(option.getPrefixes());  }  [CLASS]  GroupImpl  [METHOD]  <init>  [RETURN_TYPE]  String,int,int,boolean)  List  options  String  name  String  description  final  int  minimum  final  int  maximum  final  boolean  required  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  required  SortedMap  newOptionMap  optionMap  Iterator  i  j  List  anonymous  newAnonymous  options  Option  option  String  description  name  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	100	100	1	replace	Iterator  <  Option>  triggers  =  optionMap.values().iterator();	  Iterator    <    Option>    triggers    =    optionMap.keySet().iterator();    	non-compiled	[CE]  illegal  start  of  expression	4	None	replace
59	[BUG]  [BUGGY]  Iterator  <  Option>  triggers  =  this.optionMap.keySet().iterator();  [CE]  illegal  start  of  expression  [FE]                        OptionException      [CONTEXT]      if  (option  instanceof  Argument)  {  i.remove();  newAnonymous.add(option);  }  else  {      [BUGGY]  Iterator  <  Option>  triggers  =  this.optionMap.keySet().iterator();  [BUGGY]        for  (Iterator  j  =  triggers.iterator();  j.hasNext();)  {  newOptionMap.put(j.next(),  option);  }  newPrefixes.addAll(option.getPrefixes());  }  [CLASS]  GroupImpl  [METHOD]  <init>  [RETURN_TYPE]  String,int,int,boolean)  List  options  String  name  String  description  final  int  minimum  final  int  maximum  final  boolean  required  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  required  SortedMap  newOptionMap  optionMap  Iterator  i  j  List  anonymous  newAnonymous  options  Option  option  String  description  name  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	100	100	1	replace	Iterator  <  Option>  triggers  =  this.optionMap.keySet().iterator();	  Iterator    <    Option>    triggers    =    optionMap.keySet().iterator();    	non-compiled	[CE]  illegal  start  of  expression	4	None	replace
60	[BUG]  [BUGGY]  final  List  triggers  =  options.getArguments();  [CE]  illegal  start  of  expression  [FE]              OptionException      [CONTEXT]      if  (option  instanceof  Argument)  {  i.remove();  newAnonymous.add(option);  }  else  {      [BUGGY]  final  List  triggers  =  options.getArguments();  [BUGGY]        for  (Iterator  j  =  triggers.iterator();  j.hasNext();)  {  newOptionMap.put(j.next(),  option);  }  newPrefixes.addAll(option.getPrefixes());  }  [CLASS]  GroupImpl  [METHOD]  <init>  [RETURN_TYPE]  String,int,int,boolean)  List  options  String  name  String  description  final  int  minimum  final  int  maximum  final  boolean  required  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  required  SortedMap  newOptionMap  optionMap  Iterator  i  j  List  anonymous  newAnonymous  options  Option  option  String  description  name  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	100	100	1	replace	final  List  triggers  =  options.getArguments();	  final    Set    triggers    =    options.getArguments();    	non-compiled	[CE]  illegal  start  of  expression	29	None	replace
61	[BUG]  [BUGGY]  final  Set  triggers  =  options.getAnonymousArguments();  [CE]  illegal  start  of  expression  [FE]                OptionException      [CONTEXT]      if  (option  instanceof  Argument)  {  i.remove();  newAnonymous.add(option);  }  else  {      [BUGGY]  final  Set  triggers  =  options.getAnonymousArguments();  [BUGGY]        for  (Iterator  j  =  triggers.iterator();  j.hasNext();)  {  newOptionMap.put(j.next(),  option);  }  newPrefixes.addAll(option.getPrefixes());  }  [CLASS]  GroupImpl  [METHOD]  <init>  [RETURN_TYPE]  String,int,int,boolean)  List  options  String  name  String  description  final  int  minimum  final  int  maximum  final  boolean  required  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  required  SortedMap  newOptionMap  optionMap  Iterator  i  j  List  anonymous  newAnonymous  options  Option  option  String  description  name  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	100	100	1	replace	final  Set  triggers  =  options.getAnonymousArguments();	  final    Set    triggers    =    options.getArguments();    	non-compiled	[CE]  illegal  start  of  expression	29	None	replace
62	[BUG]  [BUGGY]  final  Set  triggers  =  options.getDescription();  [CE]  illegal  start  of  expression  [FE]                  OptionException      [CONTEXT]      if  (option  instanceof  Argument)  {  i.remove();  newAnonymous.add(option);  }  else  {      [BUGGY]  final  Set  triggers  =  options.getDescription();  [BUGGY]        for  (Iterator  j  =  triggers.iterator();  j.hasNext();)  {  newOptionMap.put(j.next(),  option);  }  newPrefixes.addAll(option.getPrefixes());  }  [CLASS]  GroupImpl  [METHOD]  <init>  [RETURN_TYPE]  String,int,int,boolean)  List  options  String  name  String  description  final  int  minimum  final  int  maximum  final  boolean  required  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  required  SortedMap  newOptionMap  optionMap  Iterator  i  j  List  anonymous  newAnonymous  options  Option  option  String  description  name  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	100	100	1	replace	final  Set  triggers  =  options.getDescription();	  final    Set    triggers    =    options.getArguments();    	non-compiled	[CE]  illegal  start  of  expression	29	None	replace
63	[BUG]  [BUGGY]  optionMap.put(name,  newAnonymous,  option);  [CE]  illegal  start  of  expression  [FE]                        OptionException      [CONTEXT]      if  (option  instanceof  Argument)  {  i.remove();  newAnonymous.add(option);  }  else  {      [BUGGY]  optionMap.put(name,  newAnonymous,  option);  [BUGGY]      final  Set  triggers  =  option.getTriggers();  for  (Iterator  j  =  triggers.iterator();  j.hasNext();)  {  newOptionMap.put(j.next(),  option);  }  newPrefixes.addAll(option.getPrefixes());  }  [CLASS]  GroupImpl  [METHOD]  <init>  [RETURN_TYPE]  String,int,int,boolean)  List  options  String  name  String  description  final  int  minimum  final  int  maximum  final  boolean  required  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  required  SortedMap  newOptionMap  optionMap  Iterator  i  j  List  anonymous  newAnonymous  options  Option  option  String  description  name  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	100	100	1	replace	optionMap.put(name,  newAnonymous,  option);	  optionMap.put(name,    newAnonymous);    	non-compiled	[CE]  illegal  start  of  expression	7	None	replace
64	[BUG]  [BUGGY]  Option  option  =  option.getOption(description);  [CE]  illegal  start  of  expression  [FE]                    OptionException      [CONTEXT]      if  (option  instanceof  Argument)  {  i.remove();  newAnonymous.add(option);  }  else  {      [BUGGY]  Option  option  =  option.getOption(description);  [BUGGY]      final  Set  triggers  =  option.getTriggers();  for  (Iterator  j  =  triggers.iterator();  j.hasNext();)  {  newOptionMap.put(j.next(),  option);  }  newPrefixes.addAll(option.getPrefixes());  }  [CLASS]  GroupImpl  [METHOD]  <init>  [RETURN_TYPE]  String,int,int,boolean)  List  options  String  name  String  description  final  int  minimum  final  int  maximum  final  boolean  required  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  required  SortedMap  newOptionMap  optionMap  Iterator  i  j  List  anonymous  newAnonymous  options  Option  option  String  description  name  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	100	100	1	replace	Option  option  =  option.getOption(description);	  Option    option    =    option.getOption(name);    	non-compiled	[CE]  illegal  start  of  expression	41	None	replace
65	[BUG]  [BUGGY]  Option  option  =  option.getOption(name,  minimum);  [CE]  illegal  start  of  expression  [FE]                      OptionException      [CONTEXT]      if  (option  instanceof  Argument)  {  i.remove();  newAnonymous.add(option);  }  else  {      [BUGGY]  Option  option  =  option.getOption(name,  minimum);  [BUGGY]      final  Set  triggers  =  option.getTriggers();  for  (Iterator  j  =  triggers.iterator();  j.hasNext();)  {  newOptionMap.put(j.next(),  option);  }  newPrefixes.addAll(option.getPrefixes());  }  [CLASS]  GroupImpl  [METHOD]  <init>  [RETURN_TYPE]  String,int,int,boolean)  List  options  String  name  String  description  final  int  minimum  final  int  maximum  final  boolean  required  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  required  SortedMap  newOptionMap  optionMap  Iterator  i  j  List  anonymous  newAnonymous  options  Option  option  String  description  name  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	100	100	1	replace	Option  option  =  option.getOption(name,  minimum);	  Option    option    =    option.getOption(name);    	non-compiled	[CE]  illegal  start  of  expression	41	None	replace
66	[BUG]  [BUGGY]  Option  option  =(Option)this.optionMap.get(i.next(),  newAnonymous);  [CE]  illegal  start  of  expression  [FE]            OptionException      [CONTEXT]      if  (option  instanceof  Argument)  {  i.remove();  newAnonymous.add(option);  }  else  {      [BUGGY]  Option  option  =(Option)this.optionMap.get(i.next(),  newAnonymous);  [BUGGY]      final  Set  triggers  =  option.getTriggers();  for  (Iterator  j  =  triggers.iterator();  j.hasNext();)  {  newOptionMap.put(j.next(),  option);  }  newPrefixes.addAll(option.getPrefixes());  }  [CLASS]  GroupImpl  [METHOD]  <init>  [RETURN_TYPE]  String,int,int,boolean)  List  options  String  name  String  description  final  int  minimum  final  int  maximum  final  boolean  required  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  required  SortedMap  newOptionMap  optionMap  Iterator  i  j  List  anonymous  newAnonymous  options  Option  option  String  description  name  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	100	100	1	replace	Option  option  =(Option)this.optionMap.get(i.next(),  newAnonymous);	  Option    option    =(Option)this.optionMap.get(i.next());    	non-compiled	[CE]  illegal  start  of  expression	11	None	replace
67	[BUG]  [BUGGY]  Option  option  =(Option)this.optionMap.get(i.next()  -  1);  [CE]  illegal  start  of  expression  [FE]              OptionException      [CONTEXT]      if  (option  instanceof  Argument)  {  i.remove();  newAnonymous.add(option);  }  else  {      [BUGGY]  Option  option  =(Option)this.optionMap.get(i.next()  -  1);  [BUGGY]      final  Set  triggers  =  option.getTriggers();  for  (Iterator  j  =  triggers.iterator();  j.hasNext();)  {  newOptionMap.put(j.next(),  option);  }  newPrefixes.addAll(option.getPrefixes());  }  [CLASS]  GroupImpl  [METHOD]  <init>  [RETURN_TYPE]  String,int,int,boolean)  List  options  String  name  String  description  final  int  minimum  final  int  maximum  final  boolean  required  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  required  SortedMap  newOptionMap  optionMap  Iterator  i  j  List  anonymous  newAnonymous  options  Option  option  String  description  name  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	100	100	1	replace	Option  option  =(Option)this.optionMap.get(i.next()  -  1);	  Option    option    =(Option)this.optionMap.get(i.next());    	non-compiled	[CE]  illegal  start  of  expression	11	None	replace
68	[BUG]  [BUGGY]  Option  option  =  options.getOption(name,  i);  [CE]  illegal  start  of  expression  [FE]                OptionException      [CONTEXT]      if  (option  instanceof  Argument)  {  i.remove();  newAnonymous.add(option);  }  else  {      [BUGGY]  Option  option  =  options.getOption(name,  i);  [BUGGY]      final  Set  triggers  =  option.getTriggers();  for  (Iterator  j  =  triggers.iterator();  j.hasNext();)  {  newOptionMap.put(j.next(),  option);  }  newPrefixes.addAll(option.getPrefixes());  }  [CLASS]  GroupImpl  [METHOD]  <init>  [RETURN_TYPE]  String,int,int,boolean)  List  options  String  name  String  description  final  int  minimum  final  int  maximum  final  boolean  required  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  required  SortedMap  newOptionMap  optionMap  Iterator  i  j  List  anonymous  newAnonymous  options  Option  option  String  description  name  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	100	100	1	replace	Option  option  =  options.getOption(name,  i);	  Option    option    =    options.getOption(i,    name);    	non-compiled	[CE]  illegal  start  of  expression	25	None	replace
69	[BUG]  [BUGGY]  Option  option  =(Option)this.optionMap.get(i  +  1);  [CE]  illegal  start  of  expression  [FE]                  OptionException      [CONTEXT]      if  (option  instanceof  Argument)  {  i.remove();  newAnonymous.add(option);  }  else  {      [BUGGY]  Option  option  =(Option)this.optionMap.get(i  +  1);  [BUGGY]      final  Set  triggers  =  option.getTriggers();  for  (Iterator  j  =  triggers.iterator();  j.hasNext();)  {  newOptionMap.put(j.next(),  option);  }  newPrefixes.addAll(option.getPrefixes());  }  [CLASS]  GroupImpl  [METHOD]  <init>  [RETURN_TYPE]  String,int,int,boolean)  List  options  String  name  String  description  final  int  minimum  final  int  maximum  final  boolean  required  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  required  SortedMap  newOptionMap  optionMap  Iterator  i  j  List  anonymous  newAnonymous  options  Option  option  String  description  name  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	100	100	1	replace	Option  option  =(Option)this.optionMap.get(i  +  1);	  Option    option    =(Option)this.optionMap.get(i);    	non-compiled	[CE]  illegal  start  of  expression	13	None	replace
70	[BUG]  [BUGGY]  Option  option  =(Option)this.optionMap.get(0);  [CE]  illegal  start  of  expression  [FE]                    OptionException      [CONTEXT]      if  (option  instanceof  Argument)  {  i.remove();  newAnonymous.add(option);  }  else  {      [BUGGY]  Option  option  =(Option)this.optionMap.get(0);  [BUGGY]      final  Set  triggers  =  option.getTriggers();  for  (Iterator  j  =  triggers.iterator();  j.hasNext();)  {  newOptionMap.put(j.next(),  option);  }  newPrefixes.addAll(option.getPrefixes());  }  [CLASS]  GroupImpl  [METHOD]  <init>  [RETURN_TYPE]  String,int,int,boolean)  List  options  String  name  String  description  final  int  minimum  final  int  maximum  final  boolean  required  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  required  SortedMap  newOptionMap  optionMap  Iterator  i  j  List  anonymous  newAnonymous  options  Option  option  String  description  name  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	100	100	1	replace	Option  option  =(Option)this.optionMap.get(0);	  Option    option    =(Option)this.optionMap.get(i);    	non-compiled	[CE]  illegal  start  of  expression	13	None	replace
71	[BUG]  [BUGGY]  Option  option  =  options.getOption(name,  minimum,  maximum);  [CE]  illegal  start  of  expression  [FE]                    OptionException      [CONTEXT]      if  (option  instanceof  Argument)  {  i.remove();  newAnonymous.add(option);  }  else  {      [BUGGY]  Option  option  =  options.getOption(name,  minimum,  maximum);  [BUGGY]      final  Set  triggers  =  option.getTriggers();  for  (Iterator  j  =  triggers.iterator();  j.hasNext();)  {  newOptionMap.put(j.next(),  option);  }  newPrefixes.addAll(option.getPrefixes());  }  [CLASS]  GroupImpl  [METHOD]  <init>  [RETURN_TYPE]  String,int,int,boolean)  List  options  String  name  String  description  final  int  minimum  final  int  maximum  final  boolean  required  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  required  SortedMap  newOptionMap  optionMap  Iterator  i  j  List  anonymous  newAnonymous  options  Option  option  String  description  name  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	100	100	1	replace	Option  option  =  options.getOption(name,  minimum,  maximum);	  Option    option    =    options.getOption(name,    minimum);    	non-compiled	[CE]  illegal  start  of  expression	17	None	replace
72	[BUG]  [BUGGY]  Option  option  =  options.getOption(description,  minimum);  [CE]  illegal  start  of  expression  [FE]                      OptionException      [CONTEXT]      if  (option  instanceof  Argument)  {  i.remove();  newAnonymous.add(option);  }  else  {      [BUGGY]  Option  option  =  options.getOption(description,  minimum);  [BUGGY]      final  Set  triggers  =  option.getTriggers();  for  (Iterator  j  =  triggers.iterator();  j.hasNext();)  {  newOptionMap.put(j.next(),  option);  }  newPrefixes.addAll(option.getPrefixes());  }  [CLASS]  GroupImpl  [METHOD]  <init>  [RETURN_TYPE]  String,int,int,boolean)  List  options  String  name  String  description  final  int  minimum  final  int  maximum  final  boolean  required  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  required  SortedMap  newOptionMap  optionMap  Iterator  i  j  List  anonymous  newAnonymous  options  Option  option  String  description  name  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	100	100	1	replace	Option  option  =  options.getOption(description,  minimum);	  Option    option    =    options.getOption(name,    minimum);    	non-compiled	[CE]  illegal  start  of  expression	17	None	replace
73	[BUG]  [BUGGY]  option  =  options.getOption(name);  [CE]  illegal  start  of  expression  [FE]                OptionException      [CONTEXT]      if  (option  instanceof  Argument)  {  i.remove();  newAnonymous.add(option);  }  else  {      [BUGGY]  option  =  options.getOption(name);  [BUGGY]      final  Set  triggers  =  option.getTriggers();  for  (Iterator  j  =  triggers.iterator();  j.hasNext();)  {  newOptionMap.put(j.next(),  option);  }  newPrefixes.addAll(option.getPrefixes());  }  [CLASS]  GroupImpl  [METHOD]  <init>  [RETURN_TYPE]  String,int,int,boolean)  List  options  String  name  String  description  final  int  minimum  final  int  maximum  final  boolean  required  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  required  SortedMap  newOptionMap  optionMap  Iterator  i  j  List  anonymous  newAnonymous  options  Option  option  String  description  name  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	100	100	1	replace	option  =  options.getOption(name);	  Option    option    =    options.getOption(description);    	non-compiled	[CE]  illegal  start  of  expression	15	None	replace
74	[BUG]  [BUGGY]  Option  option  =  options.getOption(i,  j);  [CE]  illegal  start  of  expression  [FE]              OptionException      [CONTEXT]      if  (option  instanceof  Argument)  {  i.remove();  newAnonymous.add(option);  }  else  {      [BUGGY]  Option  option  =  options.getOption(i,  j);  [BUGGY]      final  Set  triggers  =  option.getTriggers();  for  (Iterator  j  =  triggers.iterator();  j.hasNext();)  {  newOptionMap.put(j.next(),  option);  }  newPrefixes.addAll(option.getPrefixes());  }  [CLASS]  GroupImpl  [METHOD]  <init>  [RETURN_TYPE]  String,int,int,boolean)  List  options  String  name  String  description  final  int  minimum  final  int  maximum  final  boolean  required  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  required  SortedMap  newOptionMap  optionMap  Iterator  i  j  List  anonymous  newAnonymous  options  Option  option  String  description  name  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	100	100	1	replace	Option  option  =  options.getOption(i,  j);	  Option    option    =    options.getOption(i,    newAnonymous);    	non-compiled	[CE]  illegal  start  of  expression	35	None	replace
75	[BUG]  [BUGGY]  Option  option  =  options.getOption(i,  i);  [CE]  illegal  start  of  expression  [FE]                OptionException      [CONTEXT]      if  (option  instanceof  Argument)  {  i.remove();  newAnonymous.add(option);  }  else  {      [BUGGY]  Option  option  =  options.getOption(i,  i);  [BUGGY]      final  Set  triggers  =  option.getTriggers();  for  (Iterator  j  =  triggers.iterator();  j.hasNext();)  {  newOptionMap.put(j.next(),  option);  }  newPrefixes.addAll(option.getPrefixes());  }  [CLASS]  GroupImpl  [METHOD]  <init>  [RETURN_TYPE]  String,int,int,boolean)  List  options  String  name  String  description  final  int  minimum  final  int  maximum  final  boolean  required  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  required  SortedMap  newOptionMap  optionMap  Iterator  i  j  List  anonymous  newAnonymous  options  Option  option  String  description  name  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	100	100	1	replace	Option  option  =  options.getOption(i,  i);	  Option    option    =    options.getOption(i,    newAnonymous);    	non-compiled	[CE]  illegal  start  of  expression	35	None	replace
76	[BUG]  [BUGGY]  List  triggers  =  option.getAnonymousTriggers(newAnonymous);  [CE]  illegal  start  of  expression  [FE]            OptionException      [CONTEXT]      if  (option  instanceof  Argument)  {  i.remove();  newAnonymous.add(option);  }  else  {      [BUGGY]  List  triggers  =  option.getAnonymousTriggers(newAnonymous);  [BUGGY]        for  (Iterator  j  =  triggers.iterator();  j.hasNext();)  {  newOptionMap.put(j.next(),  option);  }  newPrefixes.addAll(option.getPrefixes());  }  [CLASS]  GroupImpl  [METHOD]  <init>  [RETURN_TYPE]  String,int,int,boolean)  List  options  String  name  String  description  final  int  minimum  final  int  maximum  final  boolean  required  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  required  SortedMap  newOptionMap  optionMap  Iterator  i  j  List  anonymous  newAnonymous  options  Option  option  String  description  name  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	100	100	1	replace	List  triggers  =  option.getAnonymousTriggers(newAnonymous);	  List    triggers    =    option.getAnonymousTriggers();    	non-compiled	[CE]  illegal  start  of  expression	40	None	replace
77	[BUG]  [BUGGY]  List  triggers  =  option.getAnonymousTriggers(i);  [CE]  illegal  start  of  expression  [FE]              OptionException      [CONTEXT]      if  (option  instanceof  Argument)  {  i.remove();  newAnonymous.add(option);  }  else  {      [BUGGY]  List  triggers  =  option.getAnonymousTriggers(i);  [BUGGY]        for  (Iterator  j  =  triggers.iterator();  j.hasNext();)  {  newOptionMap.put(j.next(),  option);  }  newPrefixes.addAll(option.getPrefixes());  }  [CLASS]  GroupImpl  [METHOD]  <init>  [RETURN_TYPE]  String,int,int,boolean)  List  options  String  name  String  description  final  int  minimum  final  int  maximum  final  boolean  required  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  required  SortedMap  newOptionMap  optionMap  Iterator  i  j  List  anonymous  newAnonymous  options  Option  option  String  description  name  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	100	100	1	replace	List  triggers  =  option.getAnonymousTriggers(i);	  List    triggers    =    option.getAnonymousTriggers();    	non-compiled	[CE]  illegal  start  of  expression	40	None	replace
78	[BUG]  [BUGGY]  Option  option  =  options.cloneOption();  [CE]  illegal  start  of  expression  [FE]            OptionException      [CONTEXT]      if  (option  instanceof  Argument)  {  i.remove();  newAnonymous.add(option);  }  else  {      [BUGGY]  Option  option  =  options.cloneOption();  [BUGGY]      final  Set  triggers  =  option.getTriggers();  for  (Iterator  j  =  triggers.iterator();  j.hasNext();)  {  newOptionMap.put(j.next(),  option);  }  newPrefixes.addAll(option.getPrefixes());  }  [CLASS]  GroupImpl  [METHOD]  <init>  [RETURN_TYPE]  String,int,int,boolean)  List  options  String  name  String  description  final  int  minimum  final  int  maximum  final  boolean  required  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  required  SortedMap  newOptionMap  optionMap  Iterator  i  j  List  anonymous  newAnonymous  options  Option  option  String  description  name  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	100	100	1	replace	Option  option  =  options.cloneOption();	  Option    option    =    option.cloneOption();    	non-compiled	[CE]  illegal  start  of  expression	39	None	replace
79	[BUG]  [BUGGY]  Option  option  =  option.clone();  [CE]  illegal  start  of  expression  [FE]              OptionException      [CONTEXT]      if  (option  instanceof  Argument)  {  i.remove();  newAnonymous.add(option);  }  else  {      [BUGGY]  Option  option  =  option.clone();  [BUGGY]      final  Set  triggers  =  option.getTriggers();  for  (Iterator  j  =  triggers.iterator();  j.hasNext();)  {  newOptionMap.put(j.next(),  option);  }  newPrefixes.addAll(option.getPrefixes());  }  [CLASS]  GroupImpl  [METHOD]  <init>  [RETURN_TYPE]  String,int,int,boolean)  List  options  String  name  String  description  final  int  minimum  final  int  maximum  final  boolean  required  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  required  SortedMap  newOptionMap  optionMap  Iterator  i  j  List  anonymous  newAnonymous  options  Option  option  String  description  name  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	100	100	1	replace	Option  option  =  option.clone();	  Option    option    =    option.cloneOption();    	non-compiled	[CE]  illegal  start  of  expression	39	None	replace
80	[BUG]  [BUGGY]  Option  option  =  option.cloneTree();  [CE]  illegal  start  of  expression  [FE]                OptionException      [CONTEXT]      if  (option  instanceof  Argument)  {  i.remove();  newAnonymous.add(option);  }  else  {      [BUGGY]  Option  option  =  option.cloneTree();  [BUGGY]      final  Set  triggers  =  option.getTriggers();  for  (Iterator  j  =  triggers.iterator();  j.hasNext();)  {  newOptionMap.put(j.next(),  option);  }  newPrefixes.addAll(option.getPrefixes());  }  [CLASS]  GroupImpl  [METHOD]  <init>  [RETURN_TYPE]  String,int,int,boolean)  List  options  String  name  String  description  final  int  minimum  final  int  maximum  final  boolean  required  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  required  SortedMap  newOptionMap  optionMap  Iterator  i  j  List  anonymous  newAnonymous  options  Option  option  String  description  name  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	100	100	1	replace	Option  option  =  option.cloneTree();	  Option    option    =    option.cloneOption();    	non-compiled	[CE]  illegal  start  of  expression	39	None	replace
81	[BUG]  [BUGGY]  Option  option  =(Option)i.get(newAnonymous);  [CE]  illegal  start  of  expression  [FE]                    OptionException      [CONTEXT]      if  (option  instanceof  Argument)  {  i.remove();  newAnonymous.add(option);  }  else  {      [BUGGY]  Option  option  =(Option)i.get(newAnonymous);  [BUGGY]      final  Set  triggers  =  option.getTriggers();  for  (Iterator  j  =  triggers.iterator();  j.hasNext();)  {  newOptionMap.put(j.next(),  option);  }  newPrefixes.addAll(option.getPrefixes());  }  [CLASS]  GroupImpl  [METHOD]  <init>  [RETURN_TYPE]  String,int,int,boolean)  List  options  String  name  String  description  final  int  minimum  final  int  maximum  final  boolean  required  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  required  SortedMap  newOptionMap  optionMap  Iterator  i  j  List  anonymous  newAnonymous  options  Option  option  String  description  name  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	100	100	1	replace	Option  option  =(Option)i.get(newAnonymous);	  Option    option    =(Option)newAnonymous.get(i);    	non-compiled	[CE]  illegal  start  of  expression	14	None	replace
82	[BUG]  [BUGGY]  Option  option  =  option.getOption(i,  i);  [CE]  illegal  start  of  expression  [FE]                OptionException      [CONTEXT]      if  (option  instanceof  Argument)  {  i.remove();  newAnonymous.add(option);  }  else  {      [BUGGY]  Option  option  =  option.getOption(i,  i);  [BUGGY]      final  Set  triggers  =  option.getTriggers();  for  (Iterator  j  =  triggers.iterator();  j.hasNext();)  {  newOptionMap.put(j.next(),  option);  }  newPrefixes.addAll(option.getPrefixes());  }  [CLASS]  GroupImpl  [METHOD]  <init>  [RETURN_TYPE]  String,int,int,boolean)  List  options  String  name  String  description  final  int  minimum  final  int  maximum  final  boolean  required  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  required  SortedMap  newOptionMap  optionMap  Iterator  i  j  List  anonymous  newAnonymous  options  Option  option  String  description  name  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	100	100	1	replace	Option  option  =  option.getOption(i,  i);	  Option    option    =    option.getOption(i,    newAnonymous);    	non-compiled	[CE]  illegal  start  of  expression	36	None	replace
83	[BUG]  [BUGGY]  Option  option  =  options.getOption(Name,  description);  [CE]  illegal  start  of  expression  [FE]              OptionException      [CONTEXT]      if  (option  instanceof  Argument)  {  i.remove();  newAnonymous.add(option);  }  else  {      [BUGGY]  Option  option  =  options.getOption(Name,  description);  [BUGGY]      final  Set  triggers  =  option.getTriggers();  for  (Iterator  j  =  triggers.iterator();  j.hasNext();)  {  newOptionMap.put(j.next(),  option);  }  newPrefixes.addAll(option.getPrefixes());  }  [CLASS]  GroupImpl  [METHOD]  <init>  [RETURN_TYPE]  String,int,int,boolean)  List  options  String  name  String  description  final  int  minimum  final  int  maximum  final  boolean  required  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  required  SortedMap  newOptionMap  optionMap  Iterator  i  j  List  anonymous  newAnonymous  options  Option  option  String  description  name  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	100	100	1	replace	Option  option  =  options.getOption(Name,  description);	  Option    option    =    options.getOption(i,    description);    	non-compiled	[CE]  illegal  start  of  expression	24	None	replace
84	[BUG]  [BUGGY]  Option  option  =(Option)optionMap.get(option.next(),  options);  [CE]  illegal  start  of  expression  [FE]                OptionException      [CONTEXT]      if  (option  instanceof  Argument)  {  i.remove();  newAnonymous.add(option);  }  else  {      [BUGGY]  Option  option  =(Option)optionMap.get(option.next(),  options);  [BUGGY]      final  Set  triggers  =  option.getTriggers();  for  (Iterator  j  =  triggers.iterator();  j.hasNext();)  {  newOptionMap.put(j.next(),  option);  }  newPrefixes.addAll(option.getPrefixes());  }  [CLASS]  GroupImpl  [METHOD]  <init>  [RETURN_TYPE]  String,int,int,boolean)  List  options  String  name  String  description  final  int  minimum  final  int  maximum  final  boolean  required  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  required  SortedMap  newOptionMap  optionMap  Iterator  i  j  List  anonymous  newAnonymous  options  Option  option  String  description  name  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	100	100	1	replace	Option  option  =(Option)optionMap.get(option.next(),  options);	  Option    option    =(Option)optionMap.get(option.next());    	non-compiled	[CE]  illegal  start  of  expression	38	None	replace
85	[BUG]  [BUGGY]  Option  option  =(Option)optionMap.get(option.next()  -  1);  [CE]  illegal  start  of  expression  [FE]                  OptionException      [CONTEXT]      if  (option  instanceof  Argument)  {  i.remove();  newAnonymous.add(option);  }  else  {      [BUGGY]  Option  option  =(Option)optionMap.get(option.next()  -  1);  [BUGGY]      final  Set  triggers  =  option.getTriggers();  for  (Iterator  j  =  triggers.iterator();  j.hasNext();)  {  newOptionMap.put(j.next(),  option);  }  newPrefixes.addAll(option.getPrefixes());  }  [CLASS]  GroupImpl  [METHOD]  <init>  [RETURN_TYPE]  String,int,int,boolean)  List  options  String  name  String  description  final  int  minimum  final  int  maximum  final  boolean  required  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  required  SortedMap  newOptionMap  optionMap  Iterator  i  j  List  anonymous  newAnonymous  options  Option  option  String  description  name  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	100	100	1	replace	Option  option  =(Option)optionMap.get(option.next()  -  1);	  Option    option    =(Option)optionMap.get(option.next());    	non-compiled	[CE]  illegal  start  of  expression	38	None	replace
86	[BUG]  [BUGGY]  Option  option  =(Option)optionMap.get(option.next(),  option);  [CE]  illegal  start  of  expression  [FE]                    OptionException      [CONTEXT]      if  (option  instanceof  Argument)  {  i.remove();  newAnonymous.add(option);  }  else  {      [BUGGY]  Option  option  =(Option)optionMap.get(option.next(),  option);  [BUGGY]      final  Set  triggers  =  option.getTriggers();  for  (Iterator  j  =  triggers.iterator();  j.hasNext();)  {  newOptionMap.put(j.next(),  option);  }  newPrefixes.addAll(option.getPrefixes());  }  [CLASS]  GroupImpl  [METHOD]  <init>  [RETURN_TYPE]  String,int,int,boolean)  List  options  String  name  String  description  final  int  minimum  final  int  maximum  final  boolean  required  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  required  SortedMap  newOptionMap  optionMap  Iterator  i  j  List  anonymous  newAnonymous  options  Option  option  String  description  name  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	100	100	1	replace	Option  option  =(Option)optionMap.get(option.next(),  option);	  Option    option    =(Option)optionMap.get(option.next());    	non-compiled	[CE]  illegal  start  of  expression	38	None	replace
87	[BUG]  [BUGGY]  Option  option  =  options.getOptions();  [CE]  illegal  start  of  expression  [FE]            OptionException      [CONTEXT]      if  (option  instanceof  Argument)  {  i.remove();  newAnonymous.add(option);  }  else  {      [BUGGY]  Option  option  =  options.getOptions();  [BUGGY]      final  Set  triggers  =  option.getTriggers();  for  (Iterator  j  =  triggers.iterator();  j.hasNext();)  {  newOptionMap.put(j.next(),  option);  }  newPrefixes.addAll(option.getPrefixes());  }  [CLASS]  GroupImpl  [METHOD]  <init>  [RETURN_TYPE]  String,int,int,boolean)  List  options  String  name  String  description  final  int  minimum  final  int  maximum  final  boolean  required  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  required  SortedMap  newOptionMap  optionMap  Iterator  i  j  List  anonymous  newAnonymous  options  Option  option  String  description  name  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	100	100	1	replace	Option  option  =  options.getOptions();	  Option    option    =    options.getOption();    	non-compiled	[CE]  illegal  start  of  expression	1	None	replace
88	[BUG]  [BUGGY]  final  ArrayList  triggers  =  options.getArguments();  [CE]  illegal  start  of  expression  [FE]              OptionException      [CONTEXT]      if  (option  instanceof  Argument)  {  i.remove();  newAnonymous.add(option);  }  else  {      [BUGGY]  final  ArrayList  triggers  =  options.getArguments();  [BUGGY]        for  (Iterator  j  =  triggers.iterator();  j.hasNext();)  {  newOptionMap.put(j.next(),  option);  }  newPrefixes.addAll(option.getPrefixes());  }  [CLASS]  GroupImpl  [METHOD]  <init>  [RETURN_TYPE]  String,int,int,boolean)  List  options  String  name  String  description  final  int  minimum  final  int  maximum  final  boolean  required  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  required  SortedMap  newOptionMap  optionMap  Iterator  i  j  List  anonymous  newAnonymous  options  Option  option  String  description  name  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	100	100	1	replace	final  ArrayList  triggers  =  options.getArguments();	  final    Set    triggers    =    options.getArguments();    	non-compiled	[CE]  illegal  start  of  expression	29	None	replace
89	[BUG]  [BUGGY]  Option  option  =(Option)this.optionMap.get(i,  options);  [CE]  illegal  start  of  expression  [FE]                  OptionException      [CONTEXT]      if  (option  instanceof  Argument)  {  i.remove();  newAnonymous.add(option);  }  else  {      [BUGGY]  Option  option  =(Option)this.optionMap.get(i,  options);  [BUGGY]      final  Set  triggers  =  option.getTriggers();  for  (Iterator  j  =  triggers.iterator();  j.hasNext();)  {  newOptionMap.put(j.next(),  option);  }  newPrefixes.addAll(option.getPrefixes());  }  [CLASS]  GroupImpl  [METHOD]  <init>  [RETURN_TYPE]  String,int,int,boolean)  List  options  String  name  String  description  final  int  minimum  final  int  maximum  final  boolean  required  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  required  SortedMap  newOptionMap  optionMap  Iterator  i  j  List  anonymous  newAnonymous  options  Option  option  String  description  name  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	100	100	1	replace	Option  option  =(Option)this.optionMap.get(i,  options);	  Option    option    =(Option)this.optionMap.get(i);    	non-compiled	[CE]  illegal  start  of  expression	13	None	replace
90	[BUG]  [BUGGY]  Option  option  =  option.getOption(name,  required);  [CE]  illegal  start  of  expression  [FE]                    OptionException      [CONTEXT]      if  (option  instanceof  Argument)  {  i.remove();  newAnonymous.add(option);  }  else  {      [BUGGY]  Option  option  =  option.getOption(name,  required);  [BUGGY]      final  Set  triggers  =  option.getTriggers();  for  (Iterator  j  =  triggers.iterator();  j.hasNext();)  {  newOptionMap.put(j.next(),  option);  }  newPrefixes.addAll(option.getPrefixes());  }  [CLASS]  GroupImpl  [METHOD]  <init>  [RETURN_TYPE]  String,int,int,boolean)  List  options  String  name  String  description  final  int  minimum  final  int  maximum  final  boolean  required  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  required  SortedMap  newOptionMap  optionMap  Iterator  i  j  List  anonymous  newAnonymous  options  Option  option  String  description  name  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	100	100	1	replace	Option  option  =  option.getOption(name,  required);	  Option    option    =    option.getOption(name);    	non-compiled	[CE]  illegal  start  of  expression	41	None	replace
91	[BUG]  [BUGGY]  final  Set  triggers  =  options.getAnonymousTriggers(option);  [CE]  illegal  start  of  expression  [FE]              OptionException      [CONTEXT]      if  (option  instanceof  Argument)  {  i.remove();  newAnonymous.add(option);  }  else  {      [BUGGY]  final  Set  triggers  =  options.getAnonymousTriggers(option);  [BUGGY]        for  (Iterator  j  =  triggers.iterator();  j.hasNext();)  {  newOptionMap.put(j.next(),  option);  }  newPrefixes.addAll(option.getPrefixes());  }  [CLASS]  GroupImpl  [METHOD]  <init>  [RETURN_TYPE]  String,int,int,boolean)  List  options  String  name  String  description  final  int  minimum  final  int  maximum  final  boolean  required  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  required  SortedMap  newOptionMap  optionMap  Iterator  i  j  List  anonymous  newAnonymous  options  Option  option  String  description  name  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	100	100	1	replace	final  Set  triggers  =  options.getAnonymousTriggers(option);	  final    Set    triggers    =    options.getAnonymousTriggers();    	non-compiled	[CE]  illegal  start  of  expression	9	None	replace
92	[BUG]  [BUGGY]  final  Set  triggers  =  options.getAnonymousTriggers(newAnonymous);  [CE]  illegal  start  of  expression  [FE]                OptionException      [CONTEXT]      if  (option  instanceof  Argument)  {  i.remove();  newAnonymous.add(option);  }  else  {      [BUGGY]  final  Set  triggers  =  options.getAnonymousTriggers(newAnonymous);  [BUGGY]        for  (Iterator  j  =  triggers.iterator();  j.hasNext();)  {  newOptionMap.put(j.next(),  option);  }  newPrefixes.addAll(option.getPrefixes());  }  [CLASS]  GroupImpl  [METHOD]  <init>  [RETURN_TYPE]  String,int,int,boolean)  List  options  String  name  String  description  final  int  minimum  final  int  maximum  final  boolean  required  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  required  SortedMap  newOptionMap  optionMap  Iterator  i  j  List  anonymous  newAnonymous  options  Option  option  String  description  name  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	100	100	1	replace	final  Set  triggers  =  options.getAnonymousTriggers(newAnonymous);	  final    Set    triggers    =    options.getAnonymousTriggers();    	non-compiled	[CE]  illegal  start  of  expression	9	None	replace
93	[BUG]  [BUGGY]  option  =(Option)option.next();  [CE]  illegal  start  of  expression  [FE]              OptionException      [CONTEXT]      if  (option  instanceof  Argument)  {  i.remove();  newAnonymous.add(option);  }  else  {      [BUGGY]  option  =(Option)option.next();  [BUGGY]      final  Set  triggers  =  option.getTriggers();  for  (Iterator  j  =  triggers.iterator();  j.hasNext();)  {  newOptionMap.put(j.next(),  option);  }  newPrefixes.addAll(option.getPrefixes());  }  [CLASS]  GroupImpl  [METHOD]  <init>  [RETURN_TYPE]  String,int,int,boolean)  List  options  String  name  String  description  final  int  minimum  final  int  maximum  final  boolean  required  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  required  SortedMap  newOptionMap  optionMap  Iterator  i  j  List  anonymous  newAnonymous  options  Option  option  String  description  name  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	100	100	1	replace	option  =(Option)option.next();	  option    =(Option)i.next();    	non-compiled	[CE]  illegal  start  of  expression	12	None	replace
94	[BUG]  [BUGGY]  i.remove(option.getArgument());  [CE]  illegal  start  of  expression  [FE]                    OptionException      [CONTEXT]      if  (option  instanceof  Argument)  {  i.remove();  newAnonymous.add(option);  }  else  {      [BUGGY]  i.remove(option.getArgument());  [BUGGY]      final  Set  triggers  =  option.getTriggers();  for  (Iterator  j  =  triggers.iterator();  j.hasNext();)  {  newOptionMap.put(j.next(),  option);  }  newPrefixes.addAll(option.getPrefixes());  }  [CLASS]  GroupImpl  [METHOD]  <init>  [RETURN_TYPE]  String,int,int,boolean)  List  options  String  name  String  description  final  int  minimum  final  int  maximum  final  boolean  required  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  required  SortedMap  newOptionMap  optionMap  Iterator  i  j  List  anonymous  newAnonymous  options  Option  option  String  description  name  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	100	100	1	replace	i.remove(option.getArgument());	  i.add(option.getArgument());    	non-compiled	[CE]  illegal  start  of  expression	26	None	replace
95	[BUG]  [BUGGY]  final  Set  triggers  =  options.getTriggers(option,  newAnonymous);  [CE]  illegal  start  of  expression  [FE]              OptionException      [CONTEXT]      if  (option  instanceof  Argument)  {  i.remove();  newAnonymous.add(option);  }  else  {      [BUGGY]  final  Set  triggers  =  options.getTriggers(option,  newAnonymous);  [BUGGY]        for  (Iterator  j  =  triggers.iterator();  j.hasNext();)  {  newOptionMap.put(j.next(),  option);  }  newPrefixes.addAll(option.getPrefixes());  }  [CLASS]  GroupImpl  [METHOD]  <init>  [RETURN_TYPE]  String,int,int,boolean)  List  options  String  name  String  description  final  int  minimum  final  int  maximum  final  boolean  required  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  required  SortedMap  newOptionMap  optionMap  Iterator  i  j  List  anonymous  newAnonymous  options  Option  option  String  description  name  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	100	100	1	replace	final  Set  triggers  =  options.getTriggers(option,  newAnonymous);	  final    Set    triggers    =    options.getTriggers(option);    	non-compiled	[CE]  illegal  start  of  expression	45	None	replace
96	[BUG]  [BUGGY]  final  Set  triggers  =  options.getTriggers(option.getPrefixes());  [CE]  illegal  start  of  expression  [FE]                OptionException      [CONTEXT]      if  (option  instanceof  Argument)  {  i.remove();  newAnonymous.add(option);  }  else  {      [BUGGY]  final  Set  triggers  =  options.getTriggers(option.getPrefixes());  [BUGGY]        for  (Iterator  j  =  triggers.iterator();  j.hasNext();)  {  newOptionMap.put(j.next(),  option);  }  newPrefixes.addAll(option.getPrefixes());  }  [CLASS]  GroupImpl  [METHOD]  <init>  [RETURN_TYPE]  String,int,int,boolean)  List  options  String  name  String  description  final  int  minimum  final  int  maximum  final  boolean  required  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  required  SortedMap  newOptionMap  optionMap  Iterator  i  j  List  anonymous  newAnonymous  options  Option  option  String  description  name  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	100	100	1	replace	final  Set  triggers  =  options.getTriggers(option.getPrefixes());	  final    Set    triggers    =    options.getTriggers(option);    	non-compiled	[CE]  illegal  start  of  expression	45	None	replace
97	[BUG]  [BUGGY]  Option  option  =  optionMap.get(name);  [CE]  illegal  start  of  expression  [FE]                      OptionException      [CONTEXT]      if  (option  instanceof  Argument)  {  i.remove();  newAnonymous.add(option);  }  else  {      [BUGGY]  Option  option  =  optionMap.get(name);  [BUGGY]      final  Set  triggers  =  option.getTriggers();  for  (Iterator  j  =  triggers.iterator();  j.hasNext();)  {  newOptionMap.put(j.next(),  option);  }  newPrefixes.addAll(option.getPrefixes());  }  [CLASS]  GroupImpl  [METHOD]  <init>  [RETURN_TYPE]  String,int,int,boolean)  List  options  String  name  String  description  final  int  minimum  final  int  maximum  final  boolean  required  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  required  SortedMap  newOptionMap  optionMap  Iterator  i  j  List  anonymous  newAnonymous  options  Option  option  String  description  name  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	100	100	1	replace	Option  option  =  optionMap.get(name);	  optionMap.put(name,    option);    	non-compiled	[CE]  illegal  start  of  expression	6	None	replace
98	[BUG]  [BUGGY]  List  triggers  =  option.getAnonymousTriggers(required);  [CE]  illegal  start  of  expression  [FE]            OptionException      [CONTEXT]      if  (option  instanceof  Argument)  {  i.remove();  newAnonymous.add(option);  }  else  {      [BUGGY]  List  triggers  =  option.getAnonymousTriggers(required);  [BUGGY]        for  (Iterator  j  =  triggers.iterator();  j.hasNext();)  {  newOptionMap.put(j.next(),  option);  }  newPrefixes.addAll(option.getPrefixes());  }  [CLASS]  GroupImpl  [METHOD]  <init>  [RETURN_TYPE]  String,int,int,boolean)  List  options  String  name  String  description  final  int  minimum  final  int  maximum  final  boolean  required  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  required  SortedMap  newOptionMap  optionMap  Iterator  i  j  List  anonymous  newAnonymous  options  Option  option  String  description  name  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	100	100	1	replace	List  triggers  =  option.getAnonymousTriggers(required);	  List    triggers    =    option.getAnonymousTriggers();    	non-compiled	[CE]  illegal  start  of  expression	40	None	replace
99	[BUG]  [BUGGY]  List  triggers  =  options.getTriggers(option);  [CE]  illegal  start  of  expression  [FE]                OptionException      [CONTEXT]      if  (option  instanceof  Argument)  {  i.remove();  newAnonymous.add(option);  }  else  {      [BUGGY]  List  triggers  =  options.getTriggers(option);  [BUGGY]        for  (Iterator  j  =  triggers.iterator();  j.hasNext();)  {  newOptionMap.put(j.next(),  option);  }  newPrefixes.addAll(option.getPrefixes());  }  [CLASS]  GroupImpl  [METHOD]  <init>  [RETURN_TYPE]  String,int,int,boolean)  List  options  String  name  String  description  final  int  minimum  final  int  maximum  final  boolean  required  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  required  SortedMap  newOptionMap  optionMap  Iterator  i  j  List  anonymous  newAnonymous  options  Option  option  String  description  name  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	100	100	1	replace	List  triggers  =  options.getTriggers(option);	  List    triggers    =    options.getTriggers();    	non-compiled	[CE]  illegal  start  of  expression	46	None	replace
100	[BUG]  [BUGGY]  List  triggers  =  options.getOptions();  [CE]  illegal  start  of  expression  [FE]                  OptionException      [CONTEXT]      if  (option  instanceof  Argument)  {  i.remove();  newAnonymous.add(option);  }  else  {      [BUGGY]  List  triggers  =  options.getOptions();  [BUGGY]        for  (Iterator  j  =  triggers.iterator();  j.hasNext();)  {  newOptionMap.put(j.next(),  option);  }  newPrefixes.addAll(option.getPrefixes());  }  [CLASS]  GroupImpl  [METHOD]  <init>  [RETURN_TYPE]  String,int,int,boolean)  List  options  String  name  String  description  final  int  minimum  final  int  maximum  final  boolean  required  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  required  SortedMap  newOptionMap  optionMap  Iterator  i  j  List  anonymous  newAnonymous  options  Option  option  String  description  name  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	100	100	1	replace	List  triggers  =  options.getOptions();	  List    triggers    =    options.getTriggers();    	non-compiled	[CE]  illegal  start  of  expression	46	None	replace
101	[BUG]  [BUGGY]  Option  option  =  option.cloneOptionMap();  [CE]  illegal  start  of  expression  [FE]            OptionException      [CONTEXT]      if  (option  instanceof  Argument)  {  i.remove();  newAnonymous.add(option);  }  else  {      [BUGGY]  Option  option  =  option.cloneOptionMap();  [BUGGY]      final  Set  triggers  =  option.getTriggers();  for  (Iterator  j  =  triggers.iterator();  j.hasNext();)  {  newOptionMap.put(j.next(),  option);  }  newPrefixes.addAll(option.getPrefixes());  }  [CLASS]  GroupImpl  [METHOD]  <init>  [RETURN_TYPE]  String,int,int,boolean)  List  options  String  name  String  description  final  int  minimum  final  int  maximum  final  boolean  required  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  required  SortedMap  newOptionMap  optionMap  Iterator  i  j  List  anonymous  newAnonymous  options  Option  option  String  description  name  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	100	100	1	replace	Option  option  =  option.cloneOptionMap();	  Option    option    =    option.cloneOption();    	non-compiled	[CE]  illegal  start  of  expression	39	None	replace
102	[BUG]  [BUGGY]  newAnonymous.addAll(option.getArguments());  [CE]  illegal  start  of  expression  [FE]                    OptionException      [CONTEXT]      if  (option  instanceof  Argument)  {  i.remove();  newAnonymous.add(option);  }  else  {      [BUGGY]  newAnonymous.addAll(option.getArguments());  [BUGGY]      final  Set  triggers  =  option.getTriggers();  for  (Iterator  j  =  triggers.iterator();  j.hasNext();)  {  newOptionMap.put(j.next(),  option);  }  newPrefixes.addAll(option.getPrefixes());  }  [CLASS]  GroupImpl  [METHOD]  <init>  [RETURN_TYPE]  String,int,int,boolean)  List  options  String  name  String  description  final  int  minimum  final  int  maximum  final  boolean  required  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  required  SortedMap  newOptionMap  optionMap  Iterator  i  j  List  anonymous  newAnonymous  options  Option  option  String  description  name  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	100	100	1	replace	newAnonymous.addAll(option.getArguments());	  newAnonymous.add(option);    	non-compiled	[CE]  illegal  start  of  expression	5	None	replace
103	[BUG]  [BUGGY]  Option  option  =  optionMap.get(name,  newAnonymous);  [CE]  illegal  start  of  expression  [FE]                        OptionException      [CONTEXT]      if  (option  instanceof  Argument)  {  i.remove();  newAnonymous.add(option);  }  else  {      [BUGGY]  Option  option  =  optionMap.get(name,  newAnonymous);  [BUGGY]      final  Set  triggers  =  option.getTriggers();  for  (Iterator  j  =  triggers.iterator();  j.hasNext();)  {  newOptionMap.put(j.next(),  option);  }  newPrefixes.addAll(option.getPrefixes());  }  [CLASS]  GroupImpl  [METHOD]  <init>  [RETURN_TYPE]  String,int,int,boolean)  List  options  String  name  String  description  final  int  minimum  final  int  maximum  final  boolean  required  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  required  SortedMap  newOptionMap  optionMap  Iterator  i  j  List  anonymous  newAnonymous  options  Option  option  String  description  name  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	100	100	1	replace	Option  option  =  optionMap.get(name,  newAnonymous);	  optionMap.put(name,    newAnonymous);    	non-compiled	[CE]  illegal  start  of  expression	7	None	replace
104	[BUG]  [BUGGY]  Option  option  =(Option)i.get(i.next());  [CE]  illegal  start  of  expression  [FE]                OptionException      [CONTEXT]      if  (option  instanceof  Argument)  {  i.remove();  newAnonymous.add(option);  }  else  {      [BUGGY]  Option  option  =(Option)i.get(i.next());  [BUGGY]      final  Set  triggers  =  option.getTriggers();  for  (Iterator  j  =  triggers.iterator();  j.hasNext();)  {  newOptionMap.put(j.next(),  option);  }  newPrefixes.addAll(option.getPrefixes());  }  [CLASS]  GroupImpl  [METHOD]  <init>  [RETURN_TYPE]  String,int,int,boolean)  List  options  String  name  String  description  final  int  minimum  final  int  maximum  final  boolean  required  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  required  SortedMap  newOptionMap  optionMap  Iterator  i  j  List  anonymous  newAnonymous  options  Option  option  String  description  name  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	100	100	1	replace	Option  option  =(Option)i.get(i.next());	  Option    option    =(Option)newAnonymous.get(i.next());    	non-compiled	[CE]  illegal  start  of  expression	21	None	replace
105	[BUG]  [BUGGY]  final  List  triggers  =  option.getAnonymousTriggers(newAnonymous);  [CE]  illegal  start  of  expression  [FE]            OptionException      [CONTEXT]      if  (option  instanceof  Argument)  {  i.remove();  newAnonymous.add(option);  }  else  {      [BUGGY]  final  List  triggers  =  option.getAnonymousTriggers(newAnonymous);  [BUGGY]        for  (Iterator  j  =  triggers.iterator();  j.hasNext();)  {  newOptionMap.put(j.next(),  option);  }  newPrefixes.addAll(option.getPrefixes());  }  [CLASS]  GroupImpl  [METHOD]  <init>  [RETURN_TYPE]  String,int,int,boolean)  List  options  String  name  String  description  final  int  minimum  final  int  maximum  final  boolean  required  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  required  SortedMap  newOptionMap  optionMap  Iterator  i  j  List  anonymous  newAnonymous  options  Option  option  String  description  name  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	100	100	1	replace	final  List  triggers  =  option.getAnonymousTriggers(newAnonymous);	  final    List    triggers    =    option.getAnonymousTriggers();    	non-compiled	[CE]  illegal  start  of  expression	8	None	replace
106	[BUG]  [BUGGY]  Option  option  =(Option)optionMap.get(option);  [CE]  illegal  start  of  expression  [FE]            OptionException      [CONTEXT]      if  (option  instanceof  Argument)  {  i.remove();  newAnonymous.add(option);  }  else  {      [BUGGY]  Option  option  =(Option)optionMap.get(option);  [BUGGY]      final  Set  triggers  =  option.getTriggers();  for  (Iterator  j  =  triggers.iterator();  j.hasNext();)  {  newOptionMap.put(j.next(),  option);  }  newPrefixes.addAll(option.getPrefixes());  }  [CLASS]  GroupImpl  [METHOD]  <init>  [RETURN_TYPE]  String,int,int,boolean)  List  options  String  name  String  description  final  int  minimum  final  int  maximum  final  boolean  required  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  required  SortedMap  newOptionMap  optionMap  Iterator  i  j  List  anonymous  newAnonymous  options  Option  option  String  description  name  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	100	100	1	replace	Option  option  =(Option)optionMap.get(option);	  Option    option    =(Option)optionMap.next();    	non-compiled	[CE]  illegal  start  of  expression	31	None	replace
107	[BUG]  [BUGGY]  option  =(Option)optionMap.get(i.next(),  options);  [CE]  illegal  start  of  expression  [FE]              OptionException      [CONTEXT]      if  (option  instanceof  Argument)  {  i.remove();  newAnonymous.add(option);  }  else  {      [BUGGY]  option  =(Option)optionMap.get(i.next(),  options);  [BUGGY]      final  Set  triggers  =  option.getTriggers();  for  (Iterator  j  =  triggers.iterator();  j.hasNext();)  {  newOptionMap.put(j.next(),  option);  }  newPrefixes.addAll(option.getPrefixes());  }  [CLASS]  GroupImpl  [METHOD]  <init>  [RETURN_TYPE]  String,int,int,boolean)  List  options  String  name  String  description  final  int  minimum  final  int  maximum  final  boolean  required  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  required  SortedMap  newOptionMap  optionMap  Iterator  i  j  List  anonymous  newAnonymous  options  Option  option  String  description  name  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	100	100	1	replace	option  =(Option)optionMap.get(i.next(),  options);	  Option    option    =(Option)optionMap.get(i.next(),    options);    	non-compiled	[CE]  illegal  start  of  expression	20	None	replace
108	[BUG]  [BUGGY]  Option  option  =  option.getOption(i,  name);  [CE]  illegal  start  of  expression  [FE]                OptionException      [CONTEXT]      if  (option  instanceof  Argument)  {  i.remove();  newAnonymous.add(option);  }  else  {      [BUGGY]  Option  option  =  option.getOption(i,  name);  [BUGGY]      final  Set  triggers  =  option.getTriggers();  for  (Iterator  j  =  triggers.iterator();  j.hasNext();)  {  newOptionMap.put(j.next(),  option);  }  newPrefixes.addAll(option.getPrefixes());  }  [CLASS]  GroupImpl  [METHOD]  <init>  [RETURN_TYPE]  String,int,int,boolean)  List  options  String  name  String  description  final  int  minimum  final  int  maximum  final  boolean  required  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  required  SortedMap  newOptionMap  optionMap  Iterator  i  j  List  anonymous  newAnonymous  options  Option  option  String  description  name  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	100	100	1	replace	Option  option  =  option.getOption(i,  name);	  Option    option    =    option.getOption(i,    description);    	non-compiled	[CE]  illegal  start  of  expression	18	None	replace
109	[BUG]  [BUGGY]  Option  option  =  options.getOption(name,  minimal);  [CE]  illegal  start  of  expression  [FE]                OptionException      [CONTEXT]      if  (option  instanceof  Argument)  {  i.remove();  newAnonymous.add(option);  }  else  {      [BUGGY]  Option  option  =  options.getOption(name,  minimal);  [BUGGY]      final  Set  triggers  =  option.getTriggers();  for  (Iterator  j  =  triggers.iterator();  j.hasNext();)  {  newOptionMap.put(j.next(),  option);  }  newPrefixes.addAll(option.getPrefixes());  }  [CLASS]  GroupImpl  [METHOD]  <init>  [RETURN_TYPE]  String,int,int,boolean)  List  options  String  name  String  description  final  int  minimum  final  int  maximum  final  boolean  required  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  required  SortedMap  newOptionMap  optionMap  Iterator  i  j  List  anonymous  newAnonymous  options  Option  option  String  description  name  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	100	100	1	replace	Option  option  =  options.getOption(name,  minimal);	  Option    option    =    options.getOption(name,    required);    	non-compiled	[CE]  illegal  start  of  expression	30	None	replace
110	[BUG]  [BUGGY]  Option  option  =  options.getOption(i,  argument);  [CE]  illegal  start  of  expression  [FE]              OptionException      [CONTEXT]      if  (option  instanceof  Argument)  {  i.remove();  newAnonymous.add(option);  }  else  {      [BUGGY]  Option  option  =  options.getOption(i,  argument);  [BUGGY]      final  Set  triggers  =  option.getTriggers();  for  (Iterator  j  =  triggers.iterator();  j.hasNext();)  {  newOptionMap.put(j.next(),  option);  }  newPrefixes.addAll(option.getPrefixes());  }  [CLASS]  GroupImpl  [METHOD]  <init>  [RETURN_TYPE]  String,int,int,boolean)  List  options  String  name  String  description  final  int  minimum  final  int  maximum  final  boolean  required  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  required  SortedMap  newOptionMap  optionMap  Iterator  i  j  List  anonymous  newAnonymous  options  Option  option  String  description  name  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	100	100	1	replace	Option  option  =  options.getOption(i,  argument);	  Option    option    =    options.getOption(i,    newAnonymous);    	non-compiled	[CE]  illegal  start  of  expression	35	None	replace
111	[BUG]  [BUGGY]  Option  option  =  options.getOption(i.next(),  options);  [CE]  illegal  start  of  expression  [FE]              OptionException      [CONTEXT]      if  (option  instanceof  Argument)  {  i.remove();  newAnonymous.add(option);  }  else  {      [BUGGY]  Option  option  =  options.getOption(i.next(),  options);  [BUGGY]      final  Set  triggers  =  option.getTriggers();  for  (Iterator  j  =  triggers.iterator();  j.hasNext();)  {  newOptionMap.put(j.next(),  option);  }  newPrefixes.addAll(option.getPrefixes());  }  [CLASS]  GroupImpl  [METHOD]  <init>  [RETURN_TYPE]  String,int,int,boolean)  List  options  String  name  String  description  final  int  minimum  final  int  maximum  final  boolean  required  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  required  SortedMap  newOptionMap  optionMap  Iterator  i  j  List  anonymous  newAnonymous  options  Option  option  String  description  name  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	100	100	1	replace	Option  option  =  options.getOption(i.next(),  options);	  Option    option    =    options.getOption(i.next());    	non-compiled	[CE]  illegal  start  of  expression	44	None	replace
112	[BUG]  [BUGGY]  Option  option  =  options.getOption(option.next());  [CE]  illegal  start  of  expression  [FE]                OptionException      [CONTEXT]      if  (option  instanceof  Argument)  {  i.remove();  newAnonymous.add(option);  }  else  {      [BUGGY]  Option  option  =  options.getOption(option.next());  [BUGGY]      final  Set  triggers  =  option.getTriggers();  for  (Iterator  j  =  triggers.iterator();  j.hasNext();)  {  newOptionMap.put(j.next(),  option);  }  newPrefixes.addAll(option.getPrefixes());  }  [CLASS]  GroupImpl  [METHOD]  <init>  [RETURN_TYPE]  String,int,int,boolean)  List  options  String  name  String  description  final  int  minimum  final  int  maximum  final  boolean  required  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  required  SortedMap  newOptionMap  optionMap  Iterator  i  j  List  anonymous  newAnonymous  options  Option  option  String  description  name  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	100	100	1	replace	Option  option  =  options.getOption(option.next());	  Option    option    =    options.getOption(i.next());    	non-compiled	[CE]  illegal  start  of  expression	44	None	replace
113	[BUG]  [BUGGY]  Option  option  =  options.getOption(i.next(),  option);  [CE]  illegal  start  of  expression  [FE]                  OptionException      [CONTEXT]      if  (option  instanceof  Argument)  {  i.remove();  newAnonymous.add(option);  }  else  {      [BUGGY]  Option  option  =  options.getOption(i.next(),  option);  [BUGGY]      final  Set  triggers  =  option.getTriggers();  for  (Iterator  j  =  triggers.iterator();  j.hasNext();)  {  newOptionMap.put(j.next(),  option);  }  newPrefixes.addAll(option.getPrefixes());  }  [CLASS]  GroupImpl  [METHOD]  <init>  [RETURN_TYPE]  String,int,int,boolean)  List  options  String  name  String  description  final  int  minimum  final  int  maximum  final  boolean  required  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  required  SortedMap  newOptionMap  optionMap  Iterator  i  j  List  anonymous  newAnonymous  options  Option  option  String  description  name  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	100	100	1	replace	Option  option  =  options.getOption(i.next(),  option);	  Option    option    =    options.getOption(i.next());    	non-compiled	[CE]  illegal  start  of  expression	44	None	replace
114	[BUG]  [BUGGY]  Iterator  <  Option>  triggers  =  options.values().iterator();  [CE]  illegal  start  of  expression  [FE]                  OptionException      [CONTEXT]      if  (option  instanceof  Argument)  {  i.remove();  newAnonymous.add(option);  }  else  {      [BUGGY]  Iterator  <  Option>  triggers  =  options.values().iterator();  [BUGGY]        for  (Iterator  j  =  triggers.iterator();  j.hasNext();)  {  newOptionMap.put(j.next(),  option);  }  newPrefixes.addAll(option.getPrefixes());  }  [CLASS]  GroupImpl  [METHOD]  <init>  [RETURN_TYPE]  String,int,int,boolean)  List  options  String  name  String  description  final  int  minimum  final  int  maximum  final  boolean  required  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  required  SortedMap  newOptionMap  optionMap  Iterator  i  j  List  anonymous  newAnonymous  options  Option  option  String  description  name  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	100	100	1	replace	Iterator  <  Option>  triggers  =  options.values().iterator();	  Iterator    <    Option>    triggers    =    options.iterator();    	non-compiled	[CE]  illegal  start  of  expression	3	None	replace
115	[BUG]  [BUGGY]  final  List  triggers  =  options.getOptions();  [CE]  illegal  start  of  expression  [FE]                OptionException      [CONTEXT]      if  (option  instanceof  Argument)  {  i.remove();  newAnonymous.add(option);  }  else  {      [BUGGY]  final  List  triggers  =  options.getOptions();  [BUGGY]        for  (Iterator  j  =  triggers.iterator();  j.hasNext();)  {  newOptionMap.put(j.next(),  option);  }  newPrefixes.addAll(option.getPrefixes());  }  [CLASS]  GroupImpl  [METHOD]  <init>  [RETURN_TYPE]  String,int,int,boolean)  List  options  String  name  String  description  final  int  minimum  final  int  maximum  final  boolean  required  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  required  SortedMap  newOptionMap  optionMap  Iterator  i  j  List  anonymous  newAnonymous  options  Option  option  String  description  name  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	100	100	1	replace	final  List  triggers  =  options.getOptions();	  final    List    triggers    =    options.getTriggers();    	non-compiled	[CE]  illegal  start  of  expression	22	None	replace
116	[BUG]  [BUGGY]  Option  option  =  options.getOption(name,  options);  [CE]  illegal  start  of  expression  [FE]                OptionException      [CONTEXT]      if  (option  instanceof  Argument)  {  i.remove();  newAnonymous.add(option);  }  else  {      [BUGGY]  Option  option  =  options.getOption(name,  options);  [BUGGY]      final  Set  triggers  =  option.getTriggers();  for  (Iterator  j  =  triggers.iterator();  j.hasNext();)  {  newOptionMap.put(j.next(),  option);  }  newPrefixes.addAll(option.getPrefixes());  }  [CLASS]  GroupImpl  [METHOD]  <init>  [RETURN_TYPE]  String,int,int,boolean)  List  options  String  name  String  description  final  int  minimum  final  int  maximum  final  boolean  required  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  required  SortedMap  newOptionMap  optionMap  Iterator  i  j  List  anonymous  newAnonymous  options  Option  option  String  description  name  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	100	100	1	replace	Option  option  =  options.getOption(name,  options);	  Option    option    =    options.getOption(i,    name);    	non-compiled	[CE]  illegal  start  of  expression	25	None	replace
117	[BUG]  [BUGGY]  Option  option  =  options.getOption(name,  minimum  +  1);  [CE]  illegal  start  of  expression  [FE]                    OptionException      [CONTEXT]      if  (option  instanceof  Argument)  {  i.remove();  newAnonymous.add(option);  }  else  {      [BUGGY]  Option  option  =  options.getOption(name,  minimum  +  1);  [BUGGY]      final  Set  triggers  =  option.getTriggers();  for  (Iterator  j  =  triggers.iterator();  j.hasNext();)  {  newOptionMap.put(j.next(),  option);  }  newPrefixes.addAll(option.getPrefixes());  }  [CLASS]  GroupImpl  [METHOD]  <init>  [RETURN_TYPE]  String,int,int,boolean)  List  options  String  name  String  description  final  int  minimum  final  int  maximum  final  boolean  required  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  required  SortedMap  newOptionMap  optionMap  Iterator  i  j  List  anonymous  newAnonymous  options  Option  option  String  description  name  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	100	100	1	replace	Option  option  =  options.getOption(name,  minimum  +  1);	  Option    option    =    options.getOption(name,    minimum);    	non-compiled	[CE]  illegal  start  of  expression	17	None	replace
118	[BUG]  [BUGGY]  Option  option  =  option.createOptionMap();  [CE]  illegal  start  of  expression  [FE]                OptionException      [CONTEXT]      if  (option  instanceof  Argument)  {  i.remove();  newAnonymous.add(option);  }  else  {      [BUGGY]  Option  option  =  option.createOptionMap();  [BUGGY]      final  Set  triggers  =  option.getTriggers();  for  (Iterator  j  =  triggers.iterator();  j.hasNext();)  {  newOptionMap.put(j.next(),  option);  }  newPrefixes.addAll(option.getPrefixes());  }  [CLASS]  GroupImpl  [METHOD]  <init>  [RETURN_TYPE]  String,int,int,boolean)  List  options  String  name  String  description  final  int  minimum  final  int  maximum  final  boolean  required  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  required  SortedMap  newOptionMap  optionMap  Iterator  i  j  List  anonymous  newAnonymous  options  Option  option  String  description  name  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	100	100	1	replace	Option  option  =  option.createOptionMap();	  Option    option    =    option.getOptionMap();    	non-compiled	[CE]  illegal  start  of  expression	42	None	replace
119	[BUG]  [BUGGY]  final  ArrayList  triggers  =  options.getOptions();  [CE]  illegal  start  of  expression  [FE]              OptionException      [CONTEXT]      if  (option  instanceof  Argument)  {  i.remove();  newAnonymous.add(option);  }  else  {      [BUGGY]  final  ArrayList  triggers  =  options.getOptions();  [BUGGY]        for  (Iterator  j  =  triggers.iterator();  j.hasNext();)  {  newOptionMap.put(j.next(),  option);  }  newPrefixes.addAll(option.getPrefixes());  }  [CLASS]  GroupImpl  [METHOD]  <init>  [RETURN_TYPE]  String,int,int,boolean)  List  options  String  name  String  description  final  int  minimum  final  int  maximum  final  boolean  required  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  required  SortedMap  newOptionMap  optionMap  Iterator  i  j  List  anonymous  newAnonymous  options  Option  option  String  description  name  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	100	100	1	replace	final  ArrayList  triggers  =  options.getOptions();	  final    ArrayList    triggers    =    options.getTriggers();    	non-compiled	[CE]  illegal  start  of  expression	23	None	replace
120	[BUG]  [BUGGY]  final  ArrayList  triggers  =  options.getAllTriggers();  [CE]  illegal  start  of  expression  [FE]                OptionException      [CONTEXT]      if  (option  instanceof  Argument)  {  i.remove();  newAnonymous.add(option);  }  else  {      [BUGGY]  final  ArrayList  triggers  =  options.getAllTriggers();  [BUGGY]        for  (Iterator  j  =  triggers.iterator();  j.hasNext();)  {  newOptionMap.put(j.next(),  option);  }  newPrefixes.addAll(option.getPrefixes());  }  [CLASS]  GroupImpl  [METHOD]  <init>  [RETURN_TYPE]  String,int,int,boolean)  List  options  String  name  String  description  final  int  minimum  final  int  maximum  final  boolean  required  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  required  SortedMap  newOptionMap  optionMap  Iterator  i  j  List  anonymous  newAnonymous  options  Option  option  String  description  name  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	100	100	1	replace	final  ArrayList  triggers  =  options.getAllTriggers();	  final    ArrayList    triggers    =    options.getTriggers();    	non-compiled	[CE]  illegal  start  of  expression	23	None	replace
121	[BUG]  [BUGGY]  Option  option  =(Option)allOptionMap.get(i  -  1);  [CE]  illegal  start  of  expression  [FE]                  OptionException      [CONTEXT]      if  (option  instanceof  Argument)  {  i.remove();  newAnonymous.add(option);  }  else  {      [BUGGY]  Option  option  =(Option)allOptionMap.get(i  -  1);  [BUGGY]      final  Set  triggers  =  option.getTriggers();  for  (Iterator  j  =  triggers.iterator();  j.hasNext();)  {  newOptionMap.put(j.next(),  option);  }  newPrefixes.addAll(option.getPrefixes());  }  [CLASS]  GroupImpl  [METHOD]  <init>  [RETURN_TYPE]  String,int,int,boolean)  List  options  String  name  String  description  final  int  minimum  final  int  maximum  final  boolean  required  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  required  SortedMap  newOptionMap  optionMap  Iterator  i  j  List  anonymous  newAnonymous  options  Option  option  String  description  name  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	100	100	1	replace	Option  option  =(Option)allOptionMap.get(i  -  1);	  Option    option    =(Option)optionMap.get(i    -    1);    	non-compiled	[CE]  illegal  start  of  expression	33	None	replace
122	[BUG]  [BUGGY]  Option  option  =(Option)optionMap.get(i  +  1);  [CE]  illegal  start  of  expression  [FE]                    OptionException      [CONTEXT]      if  (option  instanceof  Argument)  {  i.remove();  newAnonymous.add(option);  }  else  {      [BUGGY]  Option  option  =(Option)optionMap.get(i  +  1);  [BUGGY]      final  Set  triggers  =  option.getTriggers();  for  (Iterator  j  =  triggers.iterator();  j.hasNext();)  {  newOptionMap.put(j.next(),  option);  }  newPrefixes.addAll(option.getPrefixes());  }  [CLASS]  GroupImpl  [METHOD]  <init>  [RETURN_TYPE]  String,int,int,boolean)  List  options  String  name  String  description  final  int  minimum  final  int  maximum  final  boolean  required  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  required  SortedMap  newOptionMap  optionMap  Iterator  i  j  List  anonymous  newAnonymous  options  Option  option  String  description  name  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	100	100	1	replace	Option  option  =(Option)optionMap.get(i  +  1);	  Option    option    =(Option)optionMap.get(i    -    1);    	non-compiled	[CE]  illegal  start  of  expression	33	None	replace
123	[BUG]  [BUGGY]  List  triggers  =  optionMap.getTriggers();  [CE]  illegal  start  of  expression  [FE]                OptionException      [CONTEXT]      if  (option  instanceof  Argument)  {  i.remove();  newAnonymous.add(option);  }  else  {      [BUGGY]  List  triggers  =  optionMap.getTriggers();  [BUGGY]        for  (Iterator  j  =  triggers.iterator();  j.hasNext();)  {  newOptionMap.put(j.next(),  option);  }  newPrefixes.addAll(option.getPrefixes());  }  [CLASS]  GroupImpl  [METHOD]  <init>  [RETURN_TYPE]  String,int,int,boolean)  List  options  String  name  String  description  final  int  minimum  final  int  maximum  final  boolean  required  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  required  SortedMap  newOptionMap  optionMap  Iterator  i  j  List  anonymous  newAnonymous  options  Option  option  String  description  name  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	100	100	1	replace	List  triggers  =  optionMap.getTriggers();	  List    triggers    =    options.getTriggers();    	non-compiled	[CE]  illegal  start  of  expression	46	None	replace
124	[BUG]  [BUGGY]  Set  triggers  =  options.getTriggers();  [CE]  illegal  start  of  expression  [FE]                  OptionException      [CONTEXT]      if  (option  instanceof  Argument)  {  i.remove();  newAnonymous.add(option);  }  else  {      [BUGGY]  Set  triggers  =  options.getTriggers();  [BUGGY]        for  (Iterator  j  =  triggers.iterator();  j.hasNext();)  {  newOptionMap.put(j.next(),  option);  }  newPrefixes.addAll(option.getPrefixes());  }  [CLASS]  GroupImpl  [METHOD]  <init>  [RETURN_TYPE]  String,int,int,boolean)  List  options  String  name  String  description  final  int  minimum  final  int  maximum  final  boolean  required  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  required  SortedMap  newOptionMap  optionMap  Iterator  i  j  List  anonymous  newAnonymous  options  Option  option  String  description  name  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	100	100	1	replace	Set  triggers  =  options.getTriggers();	  List    triggers    =    options.getTriggers();    	non-compiled	[CE]  illegal  start  of  expression	46	None	replace
125	[BUG]  [BUGGY]  Set  triggers  =  options.getArguments();  [CE]  illegal  start  of  expression  [FE]              OptionException      [CONTEXT]      if  (option  instanceof  Argument)  {  i.remove();  newAnonymous.add(option);  }  else  {      [BUGGY]  Set  triggers  =  options.getArguments();  [BUGGY]        for  (Iterator  j  =  triggers.iterator();  j.hasNext();)  {  newOptionMap.put(j.next(),  option);  }  newPrefixes.addAll(option.getPrefixes());  }  [CLASS]  GroupImpl  [METHOD]  <init>  [RETURN_TYPE]  String,int,int,boolean)  List  options  String  name  String  description  final  int  minimum  final  int  maximum  final  boolean  required  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  required  SortedMap  newOptionMap  optionMap  Iterator  i  j  List  anonymous  newAnonymous  options  Option  option  String  description  name  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	100	100	1	replace	Set  triggers  =  options.getArguments();	  final    Set    triggers    =    options.getArguments();    	non-compiled	[CE]  illegal  start  of  expression	29	None	replace
126	[BUG]  [BUGGY]  Option  option  =  option.getOption(i,  newAnonymous,  description);  [CE]  illegal  start  of  expression  [FE]                OptionException      [CONTEXT]      if  (option  instanceof  Argument)  {  i.remove();  newAnonymous.add(option);  }  else  {      [BUGGY]  Option  option  =  option.getOption(i,  newAnonymous,  description);  [BUGGY]      final  Set  triggers  =  option.getTriggers();  for  (Iterator  j  =  triggers.iterator();  j.hasNext();)  {  newOptionMap.put(j.next(),  option);  }  newPrefixes.addAll(option.getPrefixes());  }  [CLASS]  GroupImpl  [METHOD]  <init>  [RETURN_TYPE]  String,int,int,boolean)  List  options  String  name  String  description  final  int  minimum  final  int  maximum  final  boolean  required  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  required  SortedMap  newOptionMap  optionMap  Iterator  i  j  List  anonymous  newAnonymous  options  Option  option  String  description  name  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	100	100	1	replace	Option  option  =  option.getOption(i,  newAnonymous,  description);	  Option    option    =    option.getOption(i,    newAnonymous);    	non-compiled	[CE]  illegal  start  of  expression	36	None	replace
127	[BUG]  [BUGGY]  option  =(Option)optionMap.get(i.next(),  option);  [CE]  illegal  start  of  expression  [FE]              OptionException      [CONTEXT]      if  (option  instanceof  Argument)  {  i.remove();  newAnonymous.add(option);  }  else  {      [BUGGY]  option  =(Option)optionMap.get(i.next(),  option);  [BUGGY]      final  Set  triggers  =  option.getTriggers();  for  (Iterator  j  =  triggers.iterator();  j.hasNext();)  {  newOptionMap.put(j.next(),  option);  }  newPrefixes.addAll(option.getPrefixes());  }  [CLASS]  GroupImpl  [METHOD]  <init>  [RETURN_TYPE]  String,int,int,boolean)  List  options  String  name  String  description  final  int  minimum  final  int  maximum  final  boolean  required  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  required  SortedMap  newOptionMap  optionMap  Iterator  i  j  List  anonymous  newAnonymous  options  Option  option  String  description  name  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	100	100	1	replace	option  =(Option)optionMap.get(i.next(),  option);	  Option    option    =(Option)optionMap.get(i.next(),    option);    	non-compiled	[CE]  illegal  start  of  expression	37	None	replace
128	[BUG]  [BUGGY]  Option  option  =  optionMap.get(i.getOption());  [CE]  illegal  start  of  expression  [FE]              OptionException      [CONTEXT]      if  (option  instanceof  Argument)  {  i.remove();  newAnonymous.add(option);  }  else  {      [BUGGY]  Option  option  =  optionMap.get(i.getOption());  [BUGGY]      final  Set  triggers  =  option.getTriggers();  for  (Iterator  j  =  triggers.iterator();  j.hasNext();)  {  newOptionMap.put(j.next(),  option);  }  newPrefixes.addAll(option.getPrefixes());  }  [CLASS]  GroupImpl  [METHOD]  <init>  [RETURN_TYPE]  String,int,int,boolean)  List  options  String  name  String  description  final  int  minimum  final  int  maximum  final  boolean  required  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  required  SortedMap  newOptionMap  optionMap  Iterator  i  j  List  anonymous  newAnonymous  options  Option  option  String  description  name  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	100	100	1	replace	Option  option  =  optionMap.get(i.getOption());	  Option    option    =    i.getOption();    	non-compiled	[CE]  illegal  start  of  expression	2	None	replace
129	[BUG]  [BUGGY]  Option  option  =  options.getOption(name,  required,  description);  [CE]  illegal  start  of  expression  [FE]                OptionException      [CONTEXT]      if  (option  instanceof  Argument)  {  i.remove();  newAnonymous.add(option);  }  else  {      [BUGGY]  Option  option  =  options.getOption(name,  required,  description);  [BUGGY]      final  Set  triggers  =  option.getTriggers();  for  (Iterator  j  =  triggers.iterator();  j.hasNext();)  {  newOptionMap.put(j.next(),  option);  }  newPrefixes.addAll(option.getPrefixes());  }  [CLASS]  GroupImpl  [METHOD]  <init>  [RETURN_TYPE]  String,int,int,boolean)  List  options  String  name  String  description  final  int  minimum  final  int  maximum  final  boolean  required  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  required  SortedMap  newOptionMap  optionMap  Iterator  i  j  List  anonymous  newAnonymous  options  Option  option  String  description  name  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	100	100	1	replace	Option  option  =  options.getOption(name,  required,  description);	  Option    option    =    options.getOption(name,    required);    	non-compiled	[CE]  illegal  start  of  expression	30	None	replace
130	[BUG]  [BUGGY]  List  triggers  =  option.getTriggers(required);  [CE]  illegal  start  of  expression  [FE]                OptionException      [CONTEXT]      if  (option  instanceof  Argument)  {  i.remove();  newAnonymous.add(option);  }  else  {      [BUGGY]  List  triggers  =  option.getTriggers(required);  [BUGGY]        for  (Iterator  j  =  triggers.iterator();  j.hasNext();)  {  newOptionMap.put(j.next(),  option);  }  newPrefixes.addAll(option.getPrefixes());  }  [CLASS]  GroupImpl  [METHOD]  <init>  [RETURN_TYPE]  String,int,int,boolean)  List  options  String  name  String  description  final  int  minimum  final  int  maximum  final  boolean  required  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  required  SortedMap  newOptionMap  optionMap  Iterator  i  j  List  anonymous  newAnonymous  options  Option  option  String  description  name  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	100	100	1	replace	List  triggers  =  option.getTriggers(required);	  List    triggers    =    option.getTriggers();    	non-compiled	[CE]  illegal  start  of  expression	47	None	replace
131	[BUG]  [BUGGY]  List  triggers  =  option.getDescription();  [CE]  illegal  start  of  expression  [FE]                  OptionException      [CONTEXT]      if  (option  instanceof  Argument)  {  i.remove();  newAnonymous.add(option);  }  else  {      [BUGGY]  List  triggers  =  option.getDescription();  [BUGGY]        for  (Iterator  j  =  triggers.iterator();  j.hasNext();)  {  newOptionMap.put(j.next(),  option);  }  newPrefixes.addAll(option.getPrefixes());  }  [CLASS]  GroupImpl  [METHOD]  <init>  [RETURN_TYPE]  String,int,int,boolean)  List  options  String  name  String  description  final  int  minimum  final  int  maximum  final  boolean  required  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  required  SortedMap  newOptionMap  optionMap  Iterator  i  j  List  anonymous  newAnonymous  options  Option  option  String  description  name  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	100	100	1	replace	List  triggers  =  option.getDescription();	  List    triggers    =    option.getTriggers();    	non-compiled	[CE]  illegal  start  of  expression	47	None	replace
132	[BUG]  [BUGGY]  Option  option  =  options.getOption(i,  newAnonymous,  description);  [CE]  illegal  start  of  expression  [FE]              OptionException      [CONTEXT]      if  (option  instanceof  Argument)  {  i.remove();  newAnonymous.add(option);  }  else  {      [BUGGY]  Option  option  =  options.getOption(i,  newAnonymous,  description);  [BUGGY]      final  Set  triggers  =  option.getTriggers();  for  (Iterator  j  =  triggers.iterator();  j.hasNext();)  {  newOptionMap.put(j.next(),  option);  }  newPrefixes.addAll(option.getPrefixes());  }  [CLASS]  GroupImpl  [METHOD]  <init>  [RETURN_TYPE]  String,int,int,boolean)  List  options  String  name  String  description  final  int  minimum  final  int  maximum  final  boolean  required  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  required  SortedMap  newOptionMap  optionMap  Iterator  i  j  List  anonymous  newAnonymous  options  Option  option  String  description  name  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	100	100	1	replace	Option  option  =  options.getOption(i,  newAnonymous,  description);	  Option    option    =    options.getOption(i,    newAnonymous);    	non-compiled	[CE]  illegal  start  of  expression	35	None	replace
133	[BUG]  [BUGGY]  Iterator  <  Option>  triggers  =  this.optionMap.entrySet().iterator();  [CE]  illegal  start  of  expression  [FE]                  OptionException      [CONTEXT]      if  (option  instanceof  Argument)  {  i.remove();  newAnonymous.add(option);  }  else  {      [BUGGY]  Iterator  <  Option>  triggers  =  this.optionMap.entrySet().iterator();  [BUGGY]        for  (Iterator  j  =  triggers.iterator();  j.hasNext();)  {  newOptionMap.put(j.next(),  option);  }  newPrefixes.addAll(option.getPrefixes());  }  [CLASS]  GroupImpl  [METHOD]  <init>  [RETURN_TYPE]  String,int,int,boolean)  List  options  String  name  String  description  final  int  minimum  final  int  maximum  final  boolean  required  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  required  SortedMap  newOptionMap  optionMap  Iterator  i  j  List  anonymous  newAnonymous  options  Option  option  String  description  name  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	100	100	1	replace	Iterator  <  Option>  triggers  =  this.optionMap.entrySet().iterator();	  Iterator    <    Option>    triggers    =    optionMap.entrySet().iterator();    	non-compiled	[CE]  illegal  start  of  expression	43	None	replace
134	[BUG]  [BUGGY]  Option  option  =(Option)i.get(0);  [CE]  illegal  start  of  expression  [FE]                  OptionException      [CONTEXT]      if  (option  instanceof  Argument)  {  i.remove();  newAnonymous.add(option);  }  else  {      [BUGGY]  Option  option  =(Option)i.get(0);  [BUGGY]      final  Set  triggers  =  option.getTriggers();  for  (Iterator  j  =  triggers.iterator();  j.hasNext();)  {  newOptionMap.put(j.next(),  option);  }  newPrefixes.addAll(option.getPrefixes());  }  [CLASS]  GroupImpl  [METHOD]  <init>  [RETURN_TYPE]  String,int,int,boolean)  List  options  String  name  String  description  final  int  minimum  final  int  maximum  final  boolean  required  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  required  SortedMap  newOptionMap  optionMap  Iterator  i  j  List  anonymous  newAnonymous  options  Option  option  String  description  name  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	100	100	1	replace	Option  option  =(Option)i.get(0);	  Option    option    =(Option)optionMap.get(i    -    1);    	non-compiled	[CE]  illegal  start  of  expression	33	None	replace
135	[BUG]  [BUGGY]  Option  option  =  options.getOption(name,  description  +  1);  [CE]  illegal  start  of  expression  [FE]                  OptionException      [CONTEXT]      if  (option  instanceof  Argument)  {  i.remove();  newAnonymous.add(option);  }  else  {      [BUGGY]  Option  option  =  options.getOption(name,  description  +  1);  [BUGGY]      final  Set  triggers  =  option.getTriggers();  for  (Iterator  j  =  triggers.iterator();  j.hasNext();)  {  newOptionMap.put(j.next(),  option);  }  newPrefixes.addAll(option.getPrefixes());  }  [CLASS]  GroupImpl  [METHOD]  <init>  [RETURN_TYPE]  String,int,int,boolean)  List  options  String  name  String  description  final  int  minimum  final  int  maximum  final  boolean  required  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  required  SortedMap  newOptionMap  optionMap  Iterator  i  j  List  anonymous  newAnonymous  options  Option  option  String  description  name  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	100	100	1	replace	Option  option  =  options.getOption(name,  description  +  1);	  Option    option    =    options.getOption(name,    description);    	non-compiled	[CE]  illegal  start  of  expression	16	None	replace
