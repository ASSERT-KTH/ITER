bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]    Option  option  =(Option)optionMap.get(arg);  [CE]  illegal  start  of  expression  [FE]    OptionException  [CONTEXT]  break;  }  previous  =  arg;  final  Option  opt  =  (Option)  optionMap.get(arg);    [BUGGY]    Option  option  =(Option)optionMap.get(arg);  [BUGGY]  if  (opt  !=  null)  {  arguments.previous();  opt.process(commandLine,  arguments);  }  else  {    if  (looksLikeOption(commandLine,  arg))  {  final  Collection  values  =  optionMap.tailMap(arg).values();  [CLASS]  GroupImpl  [METHOD]  process  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  foundMemberOption  Argument  argument  SortedMap  newOptionMap  optionMap  WriteableCommandLine  commandLine  Iterator  i  Collection  values  List  anonymous  newAnonymous  options  Option  opt  option  String  arg  description  name  previous  ListIterator  arguments  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	183	183	1	replace	    Option  option  =(Option)optionMap.get(arg);		non-compiled	[CE]  illegal  start  of  expression	80	None	add
2	[BUG]  [BUGGY]    Argument  argument  =(Argument)optionMap.get(arg);  [CE]  illegal  start  of  expression  [FE]      OptionException  [CONTEXT]  break;  }  previous  =  arg;  final  Option  opt  =  (Option)  optionMap.get(arg);    [BUGGY]    Argument  argument  =(Argument)optionMap.get(arg);  [BUGGY]  if  (opt  !=  null)  {  arguments.previous();  opt.process(commandLine,  arguments);  }  else  {    if  (looksLikeOption(commandLine,  arg))  {  final  Collection  values  =  optionMap.tailMap(arg).values();  [CLASS]  GroupImpl  [METHOD]  process  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  foundMemberOption  Argument  argument  SortedMap  newOptionMap  optionMap  WriteableCommandLine  commandLine  Iterator  i  Collection  values  List  anonymous  newAnonymous  options  Option  opt  option  String  arg  description  name  previous  ListIterator  arguments  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	183	183	1	replace	    Argument  argument  =(Argument)optionMap.get(arg);		non-compiled	[CE]  illegal  start  of  expression	80	None	add
3	[BUG]  [BUGGY]    Argument  argument  =(Option)optionMap.get(arg);  [CE]  illegal  start  of  expression  [FE]        OptionException  [CONTEXT]  break;  }  previous  =  arg;  final  Option  opt  =  (Option)  optionMap.get(arg);    [BUGGY]    Argument  argument  =(Option)optionMap.get(arg);  [BUGGY]  if  (opt  !=  null)  {  arguments.previous();  opt.process(commandLine,  arguments);  }  else  {    if  (looksLikeOption(commandLine,  arg))  {  final  Collection  values  =  optionMap.tailMap(arg).values();  [CLASS]  GroupImpl  [METHOD]  process  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  foundMemberOption  Argument  argument  SortedMap  newOptionMap  optionMap  WriteableCommandLine  commandLine  Iterator  i  Collection  values  List  anonymous  newAnonymous  options  Option  opt  option  String  arg  description  name  previous  ListIterator  arguments  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	183	183	1	replace	    Argument  argument  =(Option)optionMap.get(arg);		non-compiled	[CE]  illegal  start  of  expression	80	None	add
4	[BUG]  [BUGGY]    Option  option  =(Option)optionMap.get(opt);  [CE]  illegal  start  of  expression  [FE]          OptionException  [CONTEXT]  break;  }  previous  =  arg;  final  Option  opt  =  (Option)  optionMap.get(arg);    [BUGGY]    Option  option  =(Option)optionMap.get(opt);  [BUGGY]  if  (opt  !=  null)  {  arguments.previous();  opt.process(commandLine,  arguments);  }  else  {    if  (looksLikeOption(commandLine,  arg))  {  final  Collection  values  =  optionMap.tailMap(arg).values();  [CLASS]  GroupImpl  [METHOD]  process  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  foundMemberOption  Argument  argument  SortedMap  newOptionMap  optionMap  WriteableCommandLine  commandLine  Iterator  i  Collection  values  List  anonymous  newAnonymous  options  Option  opt  option  String  arg  description  name  previous  ListIterator  arguments  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	183	183	1	replace	    Option  option  =(Option)optionMap.get(opt);		non-compiled	[CE]  illegal  start  of  expression	80	None	add
5	[BUG]  [BUGGY]    Argument  argument  =(Option)optionMap.get(opt);  [CE]  illegal  start  of  expression  [FE]            OptionException  [CONTEXT]  break;  }  previous  =  arg;  final  Option  opt  =  (Option)  optionMap.get(arg);    [BUGGY]    Argument  argument  =(Option)optionMap.get(opt);  [BUGGY]  if  (opt  !=  null)  {  arguments.previous();  opt.process(commandLine,  arguments);  }  else  {    if  (looksLikeOption(commandLine,  arg))  {  final  Collection  values  =  optionMap.tailMap(arg).values();  [CLASS]  GroupImpl  [METHOD]  process  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  foundMemberOption  Argument  argument  SortedMap  newOptionMap  optionMap  WriteableCommandLine  commandLine  Iterator  i  Collection  values  List  anonymous  newAnonymous  options  Option  opt  option  String  arg  description  name  previous  ListIterator  arguments  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	183	183	1	replace	    Argument  argument  =(Option)optionMap.get(opt);		non-compiled	[CE]  illegal  start  of  expression	80	None	add
6	[BUG]  [BUGGY]  if(opt  ==  null)  {  [CE]  illegal  start  of  expression  [FE]    OptionException  [CONTEXT]  break;  }  previous  =  arg;  final  Option  opt  =  (Option)  optionMap.get(arg);    [BUGGY]  if(opt  ==  null)  {  [BUGGY]  arguments.previous();  opt.process(commandLine,  arguments);  }  else  {    if  (looksLikeOption(commandLine,  arg))  {  final  Collection  values  =  optionMap.tailMap(arg).values();  [CLASS]  GroupImpl  [METHOD]  process  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  foundMemberOption  Argument  argument  SortedMap  newOptionMap  optionMap  WriteableCommandLine  commandLine  Iterator  i  Collection  values  List  anonymous  newAnonymous  options  Option  opt  option  String  arg  description  name  previous  ListIterator  arguments  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	183	183	1	replace	if(opt  ==  null)  {	if  (opt  !=  null)  {  	non-compiled	[CE]  illegal  start  of  expression	79	None	replace
7	[BUG]  [BUGGY]  if(option!=  null)  {  [CE]  illegal  start  of  expression  [FE]      OptionException  [CONTEXT]  break;  }  previous  =  arg;  final  Option  opt  =  (Option)  optionMap.get(arg);    [BUGGY]  if(option!=  null)  {  [BUGGY]  arguments.previous();  opt.process(commandLine,  arguments);  }  else  {    if  (looksLikeOption(commandLine,  arg))  {  final  Collection  values  =  optionMap.tailMap(arg).values();  [CLASS]  GroupImpl  [METHOD]  process  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  foundMemberOption  Argument  argument  SortedMap  newOptionMap  optionMap  WriteableCommandLine  commandLine  Iterator  i  Collection  values  List  anonymous  newAnonymous  options  Option  opt  option  String  arg  description  name  previous  ListIterator  arguments  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	183	183	1	replace	if(option!=  null)  {	if  (opt  !=  null)  {  	non-compiled	[CE]  illegal  start  of  expression	79	None	replace
8	[BUG]  [BUGGY]  if(option  ==  null)  {  [CE]  illegal  start  of  expression  [FE]    OptionException  [CONTEXT]  break;  }  previous  =  arg;  final  Option  opt  =  (Option)  optionMap.get(arg);    [BUGGY]  if(option  ==  null)  {  [BUGGY]  arguments.previous();  opt.process(commandLine,  arguments);  }  else  {    if  (looksLikeOption(commandLine,  arg))  {  final  Collection  values  =  optionMap.tailMap(arg).values();  [CLASS]  GroupImpl  [METHOD]  process  [RETURN_TYPE]  void  WriteableCommandLine  commandLine  ListIterator  arguments  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  foundMemberOption  Argument  argument  SortedMap  newOptionMap  optionMap  WriteableCommandLine  commandLine  Iterator  i  Collection  values  List  anonymous  newAnonymous  options  Option  opt  option  String  arg  description  name  previous  ListIterator  arguments  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	183	183	1	replace	if(option  ==  null)  {	if  (opt  !=  null)  {  	non-compiled	[CE]  illegal  start  of  expression	79	None	replace
