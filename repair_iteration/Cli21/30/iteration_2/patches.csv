bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  final  Iterator  iter  =  optionMap.values().iterator();  iter.hasNext();)  {  final  Option  option  =(Option)iter.next();  if(option.canProcess(commandLine,  arg))  {  return  false  [CE]  illegal  start  of  expression  [FE]                    OptionException      [CONTEXT]        final  Map  tailMap  =  optionMap.tailMap(arg);  for  (final  Iterator  iter  =  tailMap.values().iterator();  iter.hasNext();)  {  final  Option  option  =  (Option)  iter.next();  if  (option.canProcess(commandLine,  arg))  {  return  true;  }      [BUGGY]  final  Iterator  iter  =  optionMap.values().iterator();  iter.hasNext();)  {  final  Option  option  =(Option)iter.next();  if(option.canProcess(commandLine,  arg))  {  return  false  [BUGGY]      }  if  (looksLikeOption(commandLine,  arg))  {  return  false;  }  if  (anonymous.size()  >  0)  {  return  true;  }  [CLASS]  GroupImpl  [METHOD]  canProcess  [RETURN_TYPE]  boolean  WriteableCommandLine  commandLine  String  arg  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  SortedMap  newOptionMap  optionMap  WriteableCommandLine  commandLine  Iterator  iter  List  anonymous  newAnonymous  options  Option  option  String  arg  description  name  Map  tailMap  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	137	137	1	replace	final  Iterator  iter  =  optionMap.values().iterator();  iter.hasNext();)  {  final  Option  option  =(Option)iter.next();  if(option.canProcess(commandLine,  arg))  {  return  false	  final    Iterator    iter    =    optionMap.values().iterator();    iter.hasNext();)    {    final    Option    option    =(Option)iter.next();    if(option.canProcess(commandLine,    arg))    {    return    true    	non-compiled	[CE]  illegal  start  of  expression	56	None	replace
2	[BUG]  [BUGGY]  final  Iterator  iter  =  optionMap.keySet().iterator();  iter.hasNext();)  {  final  Option  option  =(Option)iter.next();  if(option.canProcess(commandLine,  arg))  {  return  true  [CE]  illegal  start  of  expression  [FE]                      OptionException      [CONTEXT]        final  Map  tailMap  =  optionMap.tailMap(arg);  for  (final  Iterator  iter  =  tailMap.values().iterator();  iter.hasNext();)  {  final  Option  option  =  (Option)  iter.next();  if  (option.canProcess(commandLine,  arg))  {  return  true;  }      [BUGGY]  final  Iterator  iter  =  optionMap.keySet().iterator();  iter.hasNext();)  {  final  Option  option  =(Option)iter.next();  if(option.canProcess(commandLine,  arg))  {  return  true  [BUGGY]      }  if  (looksLikeOption(commandLine,  arg))  {  return  false;  }  if  (anonymous.size()  >  0)  {  return  true;  }  [CLASS]  GroupImpl  [METHOD]  canProcess  [RETURN_TYPE]  boolean  WriteableCommandLine  commandLine  String  arg  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  SortedMap  newOptionMap  optionMap  WriteableCommandLine  commandLine  Iterator  iter  List  anonymous  newAnonymous  options  Option  option  String  arg  description  name  Map  tailMap  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	137	137	1	replace	final  Iterator  iter  =  optionMap.keySet().iterator();  iter.hasNext();)  {  final  Option  option  =(Option)iter.next();  if(option.canProcess(commandLine,  arg))  {  return  true	  final    Iterator    iter    =    optionMap.values().iterator();    iter.hasNext();)    {    final    Option    option    =(Option)iter.next();    if(option.canProcess(commandLine,    arg))    {    return    true    	non-compiled	[CE]  illegal  start  of  expression	56	None	replace
3	[BUG]  [BUGGY]  final  List  <  Option>  newAnonymous  =  optionMap.values().iterator();  if(newAnonymous  ==  null)  {  return  false;  }  [CE]  illegal  start  of  expression  [FE]              OptionException      [CONTEXT]        final  Map  tailMap  =  optionMap.tailMap(arg);  for  (final  Iterator  iter  =  tailMap.values().iterator();  iter.hasNext();)  {  final  Option  option  =  (Option)  iter.next();  if  (option.canProcess(commandLine,  arg))  {  return  true;  }      [BUGGY]  final  List  <  Option>  newAnonymous  =  optionMap.values().iterator();  if(newAnonymous  ==  null)  {  return  false;  }  [BUGGY]      }  if  (looksLikeOption(commandLine,  arg))  {  return  false;  }  if  (anonymous.size()  >  0)  {  return  true;  }  [CLASS]  GroupImpl  [METHOD]  canProcess  [RETURN_TYPE]  boolean  WriteableCommandLine  commandLine  String  arg  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  SortedMap  newOptionMap  optionMap  WriteableCommandLine  commandLine  Iterator  iter  List  anonymous  newAnonymous  options  Option  option  String  arg  description  name  Map  tailMap  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	137	137	1	replace	final  List  <  Option>  newAnonymous  =  optionMap.values().iterator();  if(newAnonymous  ==  null)  {  return  false;  }	  final    List    <    Option>    newAnonymous    =    optionMap.values().iterator();    if(newAnonymous!=    null)    {    return    false;    }    	non-compiled	[CE]  illegal  start  of  expression	15	None	replace
4	[BUG]  [BUGGY]  if(optionMap.values()!=  null)  {  final  List  <  Option>  newAnonymous  =  optionMap.values().iterator();  if(newAnonymous!=  null)  {  return  false;  }  [CE]  illegal  start  of  expression  [FE]                OptionException      [CONTEXT]        final  Map  tailMap  =  optionMap.tailMap(arg);  for  (final  Iterator  iter  =  tailMap.values().iterator();  iter.hasNext();)  {  final  Option  option  =  (Option)  iter.next();  if  (option.canProcess(commandLine,  arg))  {  return  true;  }      [BUGGY]  if(optionMap.values()!=  null)  {  final  List  <  Option>  newAnonymous  =  optionMap.values().iterator();  if(newAnonymous!=  null)  {  return  false;  }  [BUGGY]      }  if  (looksLikeOption(commandLine,  arg))  {  return  false;  }  if  (anonymous.size()  >  0)  {  return  true;  }  [CLASS]  GroupImpl  [METHOD]  canProcess  [RETURN_TYPE]  boolean  WriteableCommandLine  commandLine  String  arg  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  SortedMap  newOptionMap  optionMap  WriteableCommandLine  commandLine  Iterator  iter  List  anonymous  newAnonymous  options  Option  option  String  arg  description  name  Map  tailMap  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	137	137	1	replace	if(optionMap.values()!=  null)  {  final  List  <  Option>  newAnonymous  =  optionMap.values().iterator();  if(newAnonymous!=  null)  {  return  false;  }	  final    List    <    Option>    newAnonymous    =    optionMap.values().iterator();    if(newAnonymous!=    null)    {    return    false;    }    	non-compiled	[CE]  illegal  start  of  expression	15	None	replace
5	[BUG]  [BUGGY]  final  Iterator  <  Option>  iter  =  optionMap.values().iterator();  iter.hasNext();)  {  final  Option  option  =(Option)iter.next();  if(option.canProcess(commandLine,  arg))  {  return  true  [CE]  illegal  start  of  expression  [FE]                      OptionException      [CONTEXT]        final  Map  tailMap  =  optionMap.tailMap(arg);  for  (final  Iterator  iter  =  tailMap.values().iterator();  iter.hasNext();)  {  final  Option  option  =  (Option)  iter.next();  if  (option.canProcess(commandLine,  arg))  {  return  true;  }      [BUGGY]  final  Iterator  <  Option>  iter  =  optionMap.values().iterator();  iter.hasNext();)  {  final  Option  option  =(Option)iter.next();  if(option.canProcess(commandLine,  arg))  {  return  true  [BUGGY]      }  if  (looksLikeOption(commandLine,  arg))  {  return  false;  }  if  (anonymous.size()  >  0)  {  return  true;  }  [CLASS]  GroupImpl  [METHOD]  canProcess  [RETURN_TYPE]  boolean  WriteableCommandLine  commandLine  String  arg  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  SortedMap  newOptionMap  optionMap  WriteableCommandLine  commandLine  Iterator  iter  List  anonymous  newAnonymous  options  Option  option  String  arg  description  name  Map  tailMap  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	137	137	1	replace	final  Iterator  <  Option>  iter  =  optionMap.values().iterator();  iter.hasNext();)  {  final  Option  option  =(Option)iter.next();  if(option.canProcess(commandLine,  arg))  {  return  true	  final    Iterator    <    Option>    iter    =    options.values().iterator();    iter.hasNext();)    {    final    Option    option    =(Option)iter.next();    if(option.canProcess(commandLine,    arg))    {    return    true    	non-compiled	[CE]  illegal  start  of  expression	57	None	replace
6	[BUG]  [BUGGY]  Iterator  <  Option>  iter  =  options.values().iterator();  iter.hasNext();)  {  final  Option  option  =(Option)iter.next();  if(option.canProcess(commandLine,  arg))  {  return  true  [CE]  illegal  start  of  expression  [FE]                        OptionException      [CONTEXT]        final  Map  tailMap  =  optionMap.tailMap(arg);  for  (final  Iterator  iter  =  tailMap.values().iterator();  iter.hasNext();)  {  final  Option  option  =  (Option)  iter.next();  if  (option.canProcess(commandLine,  arg))  {  return  true;  }      [BUGGY]  Iterator  <  Option>  iter  =  options.values().iterator();  iter.hasNext();)  {  final  Option  option  =(Option)iter.next();  if(option.canProcess(commandLine,  arg))  {  return  true  [BUGGY]      }  if  (looksLikeOption(commandLine,  arg))  {  return  false;  }  if  (anonymous.size()  >  0)  {  return  true;  }  [CLASS]  GroupImpl  [METHOD]  canProcess  [RETURN_TYPE]  boolean  WriteableCommandLine  commandLine  String  arg  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  SortedMap  newOptionMap  optionMap  WriteableCommandLine  commandLine  Iterator  iter  List  anonymous  newAnonymous  options  Option  option  String  arg  description  name  Map  tailMap  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	137	137	1	replace	Iterator  <  Option>  iter  =  options.values().iterator();  iter.hasNext();)  {  final  Option  option  =(Option)iter.next();  if(option.canProcess(commandLine,  arg))  {  return  true	  final    Iterator    <    Option>    iter    =    options.values().iterator();    iter.hasNext();)    {    final    Option    option    =(Option)iter.next();    if(option.canProcess(commandLine,    arg))    {    return    true    	non-compiled	[CE]  illegal  start  of  expression	57	None	replace
7	[BUG]  [BUGGY]  final  Iterator  <  Option>  iter  =  options.values().iterator();  iter.hasNext();)  {  final  Option  option  =(Option)iter.next();  if(option.canProcess(commandLine,  arg))  {  return  false  [CE]  illegal  start  of  expression  [FE]                          OptionException      [CONTEXT]        final  Map  tailMap  =  optionMap.tailMap(arg);  for  (final  Iterator  iter  =  tailMap.values().iterator();  iter.hasNext();)  {  final  Option  option  =  (Option)  iter.next();  if  (option.canProcess(commandLine,  arg))  {  return  true;  }      [BUGGY]  final  Iterator  <  Option>  iter  =  options.values().iterator();  iter.hasNext();)  {  final  Option  option  =(Option)iter.next();  if(option.canProcess(commandLine,  arg))  {  return  false  [BUGGY]      }  if  (looksLikeOption(commandLine,  arg))  {  return  false;  }  if  (anonymous.size()  >  0)  {  return  true;  }  [CLASS]  GroupImpl  [METHOD]  canProcess  [RETURN_TYPE]  boolean  WriteableCommandLine  commandLine  String  arg  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  SortedMap  newOptionMap  optionMap  WriteableCommandLine  commandLine  Iterator  iter  List  anonymous  newAnonymous  options  Option  option  String  arg  description  name  Map  tailMap  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	137	137	1	replace	final  Iterator  <  Option>  iter  =  options.values().iterator();  iter.hasNext();)  {  final  Option  option  =(Option)iter.next();  if(option.canProcess(commandLine,  arg))  {  return  false	  final    Iterator    <    Option>    iter    =    options.values().iterator();    iter.hasNext();)    {    final    Option    option    =(Option)iter.next();    if(option.canProcess(commandLine,    arg))    {    return    true    	non-compiled	[CE]  illegal  start  of  expression	57	None	replace
8	[BUG]  [BUGGY]  Option  commandLine  =  optionMap.get(command);  [CE]  illegal  start  of  expression  [FE]                    OptionException      [CONTEXT]        final  Map  tailMap  =  optionMap.tailMap(arg);  for  (final  Iterator  iter  =  tailMap.values().iterator();  iter.hasNext();)  {  final  Option  option  =  (Option)  iter.next();  if  (option.canProcess(commandLine,  arg))  {  return  true;  }      [BUGGY]  Option  commandLine  =  optionMap.get(command);  [BUGGY]        if  (looksLikeOption(commandLine,  arg))  {  return  false;  }  if  (anonymous.size()  >  0)  {  return  true;  }  [CLASS]  GroupImpl  [METHOD]  canProcess  [RETURN_TYPE]  boolean  WriteableCommandLine  commandLine  String  arg  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  SortedMap  newOptionMap  optionMap  WriteableCommandLine  commandLine  Iterator  iter  List  anonymous  newAnonymous  options  Option  option  String  arg  description  name  Map  tailMap  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	137	137	1	replace	Option  commandLine  =  optionMap.get(command);	  Option    commandLine    =    optionMap.get(arg);    	non-compiled	[CE]  illegal  start  of  expression	49	None	replace
9	[BUG]  [BUGGY]  Option  commandLine  =  optionMap.get(commandline);  [CE]  illegal  start  of  expression  [FE]                      OptionException      [CONTEXT]        final  Map  tailMap  =  optionMap.tailMap(arg);  for  (final  Iterator  iter  =  tailMap.values().iterator();  iter.hasNext();)  {  final  Option  option  =  (Option)  iter.next();  if  (option.canProcess(commandLine,  arg))  {  return  true;  }      [BUGGY]  Option  commandLine  =  optionMap.get(commandline);  [BUGGY]        if  (looksLikeOption(commandLine,  arg))  {  return  false;  }  if  (anonymous.size()  >  0)  {  return  true;  }  [CLASS]  GroupImpl  [METHOD]  canProcess  [RETURN_TYPE]  boolean  WriteableCommandLine  commandLine  String  arg  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  SortedMap  newOptionMap  optionMap  WriteableCommandLine  commandLine  Iterator  iter  List  anonymous  newAnonymous  options  Option  option  String  arg  description  name  Map  tailMap  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	137	137	1	replace	Option  commandLine  =  optionMap.get(commandline);	  Option    commandLine    =    optionMap.get(arg);    	non-compiled	[CE]  illegal  start  of  expression	49	None	replace
10	[BUG]  [BUGGY]  final  Iterator  iter  =  optionMap.keySet().iterator();  [CE]  illegal  start  of  expression  [FE]                      OptionException      [CONTEXT]        final  Map  tailMap  =  optionMap.tailMap(arg);  for  (final  Iterator  iter  =  tailMap.values().iterator();  iter.hasNext();)  {  final  Option  option  =  (Option)  iter.next();  if  (option.canProcess(commandLine,  arg))  {  return  true;  }      [BUGGY]  final  Iterator  iter  =  optionMap.keySet().iterator();  [BUGGY]      }  if  (looksLikeOption(commandLine,  arg))  {  return  false;  }  if  (anonymous.size()  >  0)  {  return  true;  }  [CLASS]  GroupImpl  [METHOD]  canProcess  [RETURN_TYPE]  boolean  WriteableCommandLine  commandLine  String  arg  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  SortedMap  newOptionMap  optionMap  WriteableCommandLine  commandLine  Iterator  iter  List  anonymous  newAnonymous  options  Option  option  String  arg  description  name  Map  tailMap  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	137	137	1	replace	final  Iterator  iter  =  optionMap.keySet().iterator();	  final    Iterator    iter    =    optionMap.values().iterator();    	non-compiled	[CE]  illegal  start  of  expression	26	None	replace
11	[BUG]  [BUGGY]  final  Iterator  iter  =  tailMap.values().iterator();  [CE]  illegal  start  of  expression  [FE]                        OptionException      [CONTEXT]        final  Map  tailMap  =  optionMap.tailMap(arg);  for  (final  Iterator  iter  =  tailMap.values().iterator();  iter.hasNext();)  {  final  Option  option  =  (Option)  iter.next();  if  (option.canProcess(commandLine,  arg))  {  return  true;  }      [BUGGY]  final  Iterator  iter  =  tailMap.values().iterator();  [BUGGY]      }  if  (looksLikeOption(commandLine,  arg))  {  return  false;  }  if  (anonymous.size()  >  0)  {  return  true;  }  [CLASS]  GroupImpl  [METHOD]  canProcess  [RETURN_TYPE]  boolean  WriteableCommandLine  commandLine  String  arg  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  SortedMap  newOptionMap  optionMap  WriteableCommandLine  commandLine  Iterator  iter  List  anonymous  newAnonymous  options  Option  option  String  arg  description  name  Map  tailMap  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	137	137	1	replace	final  Iterator  iter  =  tailMap.values().iterator();	  final    Iterator    iter    =    optionMap.values().iterator();    	non-compiled	[CE]  illegal  start  of  expression	26	None	replace
12	[BUG]  [BUGGY]  List  <  Option>  anonym  =(List  <  Option>)iter.next();  [CE]  illegal  start  of  expression  [FE]            OptionException      [CONTEXT]        final  Map  tailMap  =  optionMap.tailMap(arg);  for  (final  Iterator  iter  =  tailMap.values().iterator();  iter.hasNext();)  {  final  Option  option  =  (Option)  iter.next();  if  (option.canProcess(commandLine,  arg))  {  return  true;  }      [BUGGY]  List  <  Option>  anonym  =(List  <  Option>)iter.next();  [BUGGY]        if  (looksLikeOption(commandLine,  arg))  {  return  false;  }  if  (anonymous.size()  >  0)  {  return  true;  }  [CLASS]  GroupImpl  [METHOD]  canProcess  [RETURN_TYPE]  boolean  WriteableCommandLine  commandLine  String  arg  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  SortedMap  newOptionMap  optionMap  WriteableCommandLine  commandLine  Iterator  iter  List  anonymous  newAnonymous  options  Option  option  String  arg  description  name  Map  tailMap  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	137	137	1	replace	List  <  Option>  anonym  =(List  <  Option>)iter.next();	  List    <    Option>    anonymous    =(List    <    Option>)iter.next();    	non-compiled	[CE]  illegal  start  of  expression	62	None	replace
13	[BUG]  [BUGGY]  Set  <  Option>  anonymous  =(Set  <  Option>)iter.next();  [CE]  illegal  start  of  expression  [FE]              OptionException      [CONTEXT]        final  Map  tailMap  =  optionMap.tailMap(arg);  for  (final  Iterator  iter  =  tailMap.values().iterator();  iter.hasNext();)  {  final  Option  option  =  (Option)  iter.next();  if  (option.canProcess(commandLine,  arg))  {  return  true;  }      [BUGGY]  Set  <  Option>  anonymous  =(Set  <  Option>)iter.next();  [BUGGY]        if  (looksLikeOption(commandLine,  arg))  {  return  false;  }  if  (anonymous.size()  >  0)  {  return  true;  }  [CLASS]  GroupImpl  [METHOD]  canProcess  [RETURN_TYPE]  boolean  WriteableCommandLine  commandLine  String  arg  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  SortedMap  newOptionMap  optionMap  WriteableCommandLine  commandLine  Iterator  iter  List  anonymous  newAnonymous  options  Option  option  String  arg  description  name  Map  tailMap  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	137	137	1	replace	Set  <  Option>  anonymous  =(Set  <  Option>)iter.next();	  List    <    Option>    anonymous    =(List    <    Option>)iter.next();    	non-compiled	[CE]  illegal  start  of  expression	62	None	replace
14	[BUG]  [BUGGY]  Option  commandLine  =  option.getCommandLine(arg,  description);  [CE]  illegal  start  of  expression  [FE]              OptionException      [CONTEXT]        final  Map  tailMap  =  optionMap.tailMap(arg);  for  (final  Iterator  iter  =  tailMap.values().iterator();  iter.hasNext();)  {  final  Option  option  =  (Option)  iter.next();  if  (option.canProcess(commandLine,  arg))  {  return  true;  }      [BUGGY]  Option  commandLine  =  option.getCommandLine(arg,  description);  [BUGGY]        if  (looksLikeOption(commandLine,  arg))  {  return  false;  }  if  (anonymous.size()  >  0)  {  return  true;  }  [CLASS]  GroupImpl  [METHOD]  canProcess  [RETURN_TYPE]  boolean  WriteableCommandLine  commandLine  String  arg  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  SortedMap  newOptionMap  optionMap  WriteableCommandLine  commandLine  Iterator  iter  List  anonymous  newAnonymous  options  Option  option  String  arg  description  name  Map  tailMap  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	137	137	1	replace	Option  commandLine  =  option.getCommandLine(arg,  description);	  Option    commandLine    =    option.getCommandLine(arg);    	non-compiled	[CE]  illegal  start  of  expression	48	None	replace
15	[BUG]  [BUGGY]  Option  commandLine  =  option.getCommandLine(commandline);  [CE]  illegal  start  of  expression  [FE]                OptionException      [CONTEXT]        final  Map  tailMap  =  optionMap.tailMap(arg);  for  (final  Iterator  iter  =  tailMap.values().iterator();  iter.hasNext();)  {  final  Option  option  =  (Option)  iter.next();  if  (option.canProcess(commandLine,  arg))  {  return  true;  }      [BUGGY]  Option  commandLine  =  option.getCommandLine(commandline);  [BUGGY]        if  (looksLikeOption(commandLine,  arg))  {  return  false;  }  if  (anonymous.size()  >  0)  {  return  true;  }  [CLASS]  GroupImpl  [METHOD]  canProcess  [RETURN_TYPE]  boolean  WriteableCommandLine  commandLine  String  arg  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  SortedMap  newOptionMap  optionMap  WriteableCommandLine  commandLine  Iterator  iter  List  anonymous  newAnonymous  options  Option  option  String  arg  description  name  Map  tailMap  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	137	137	1	replace	Option  commandLine  =  option.getCommandLine(commandline);	  Option    commandLine    =    option.getCommandLine(arg);    	non-compiled	[CE]  illegal  start  of  expression	48	None	replace
16	[BUG]  [BUGGY]  final  Iterator  <  Option>  iter  =  optionMap.values().iterator();  iter.hasNext();)  {  final  Option  option  =(Option)iter.next();  if(option.canProcess(commandLine,  arg))  {  return  true;  }  [CE]  illegal  start  of  expression  [FE]                      OptionException      [CONTEXT]        final  Map  tailMap  =  optionMap.tailMap(arg);  for  (final  Iterator  iter  =  tailMap.values().iterator();  iter.hasNext();)  {  final  Option  option  =  (Option)  iter.next();  if  (option.canProcess(commandLine,  arg))  {  return  true;  }      [BUGGY]  final  Iterator  <  Option>  iter  =  optionMap.values().iterator();  iter.hasNext();)  {  final  Option  option  =(Option)iter.next();  if(option.canProcess(commandLine,  arg))  {  return  true;  }  [BUGGY]      }  if  (looksLikeOption(commandLine,  arg))  {  return  false;  }  if  (anonymous.size()  >  0)  {  return  true;  }  [CLASS]  GroupImpl  [METHOD]  canProcess  [RETURN_TYPE]  boolean  WriteableCommandLine  commandLine  String  arg  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  SortedMap  newOptionMap  optionMap  WriteableCommandLine  commandLine  Iterator  iter  List  anonymous  newAnonymous  options  Option  option  String  arg  description  name  Map  tailMap  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	137	137	1	replace	final  Iterator  <  Option>  iter  =  optionMap.values().iterator();  iter.hasNext();)  {  final  Option  option  =(Option)iter.next();  if(option.canProcess(commandLine,  arg))  {  return  true;  }	  final    Iterator    <    Option>    iter    =    options.values().iterator();    iter.hasNext();)    {    final    Option    option    =(Option)iter.next();    if(option.canProcess(commandLine,    arg))    {    return    true;    }    	non-compiled	[CE]  illegal  start  of  expression	19	None	replace
17	[BUG]  [BUGGY]  Iterator  <  Option>  iter  =  options.values().iterator();  iter.hasNext();)  {  final  Option  option  =(Option)iter.next();  if(option.canProcess(commandLine,  arg))  {  return  true;  }  [CE]  illegal  start  of  expression  [FE]                        OptionException      [CONTEXT]        final  Map  tailMap  =  optionMap.tailMap(arg);  for  (final  Iterator  iter  =  tailMap.values().iterator();  iter.hasNext();)  {  final  Option  option  =  (Option)  iter.next();  if  (option.canProcess(commandLine,  arg))  {  return  true;  }      [BUGGY]  Iterator  <  Option>  iter  =  options.values().iterator();  iter.hasNext();)  {  final  Option  option  =(Option)iter.next();  if(option.canProcess(commandLine,  arg))  {  return  true;  }  [BUGGY]      }  if  (looksLikeOption(commandLine,  arg))  {  return  false;  }  if  (anonymous.size()  >  0)  {  return  true;  }  [CLASS]  GroupImpl  [METHOD]  canProcess  [RETURN_TYPE]  boolean  WriteableCommandLine  commandLine  String  arg  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  SortedMap  newOptionMap  optionMap  WriteableCommandLine  commandLine  Iterator  iter  List  anonymous  newAnonymous  options  Option  option  String  arg  description  name  Map  tailMap  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	137	137	1	replace	Iterator  <  Option>  iter  =  options.values().iterator();  iter.hasNext();)  {  final  Option  option  =(Option)iter.next();  if(option.canProcess(commandLine,  arg))  {  return  true;  }	  final    Iterator    <    Option>    iter    =    options.values().iterator();    iter.hasNext();)    {    final    Option    option    =(Option)iter.next();    if(option.canProcess(commandLine,    arg))    {    return    true;    }    	non-compiled	[CE]  illegal  start  of  expression	19	None	replace
18	[BUG]  [BUGGY]  final  Iterator  iter  =  options.keySet().iterator();  [CE]  illegal  start  of  expression  [FE]                  OptionException      [CONTEXT]        final  Map  tailMap  =  optionMap.tailMap(arg);  for  (final  Iterator  iter  =  tailMap.values().iterator();  iter.hasNext();)  {  final  Option  option  =  (Option)  iter.next();  if  (option.canProcess(commandLine,  arg))  {  return  true;  }      [BUGGY]  final  Iterator  iter  =  options.keySet().iterator();  [BUGGY]      }  if  (looksLikeOption(commandLine,  arg))  {  return  false;  }  if  (anonymous.size()  >  0)  {  return  true;  }  [CLASS]  GroupImpl  [METHOD]  canProcess  [RETURN_TYPE]  boolean  WriteableCommandLine  commandLine  String  arg  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  SortedMap  newOptionMap  optionMap  WriteableCommandLine  commandLine  Iterator  iter  List  anonymous  newAnonymous  options  Option  option  String  arg  description  name  Map  tailMap  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	137	137	1	replace	final  Iterator  iter  =  options.keySet().iterator();	  final    Iterator    iter    =    options.values().iterator();    	non-compiled	[CE]  illegal  start  of  expression	53	None	replace
19	[BUG]  [BUGGY]  final  Iterator  iter  =  option.values().iterator();  [CE]  illegal  start  of  expression  [FE]                    OptionException      [CONTEXT]        final  Map  tailMap  =  optionMap.tailMap(arg);  for  (final  Iterator  iter  =  tailMap.values().iterator();  iter.hasNext();)  {  final  Option  option  =  (Option)  iter.next();  if  (option.canProcess(commandLine,  arg))  {  return  true;  }      [BUGGY]  final  Iterator  iter  =  option.values().iterator();  [BUGGY]      }  if  (looksLikeOption(commandLine,  arg))  {  return  false;  }  if  (anonymous.size()  >  0)  {  return  true;  }  [CLASS]  GroupImpl  [METHOD]  canProcess  [RETURN_TYPE]  boolean  WriteableCommandLine  commandLine  String  arg  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  SortedMap  newOptionMap  optionMap  WriteableCommandLine  commandLine  Iterator  iter  List  anonymous  newAnonymous  options  Option  option  String  arg  description  name  Map  tailMap  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	137	137	1	replace	final  Iterator  iter  =  option.values().iterator();	  final    Iterator    iter    =    options.values().iterator();    	non-compiled	[CE]  illegal  start  of  expression	53	None	replace
20	[BUG]  [BUGGY]  Option  option  =  option.canProcess(commandLine,  arg)||  option.canProcess(commandLine,  arg))  {  return  false;  }  [CE]  illegal  start  of  expression  [FE]            OptionException      [CONTEXT]        final  Map  tailMap  =  optionMap.tailMap(arg);  for  (final  Iterator  iter  =  tailMap.values().iterator();  iter.hasNext();)  {  final  Option  option  =  (Option)  iter.next();  if  (option.canProcess(commandLine,  arg))  {  return  true;  }      [BUGGY]  Option  option  =  option.canProcess(commandLine,  arg)||  option.canProcess(commandLine,  arg))  {  return  false;  }  [BUGGY]      }  if  (looksLikeOption(commandLine,  arg))  {  return  false;  }  if  (anonymous.size()  >  0)  {  return  true;  }  [CLASS]  GroupImpl  [METHOD]  canProcess  [RETURN_TYPE]  boolean  WriteableCommandLine  commandLine  String  arg  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  SortedMap  newOptionMap  optionMap  WriteableCommandLine  commandLine  Iterator  iter  List  anonymous  newAnonymous  options  Option  option  String  arg  description  name  Map  tailMap  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	137	137	1	replace	Option  option  =  option.canProcess(commandLine,  arg)||  option.canProcess(commandLine,  arg))  {  return  false;  }	  if(option.canProcess(commandLine,    arg)||    option.canProcess(commandLine,    arg))    {    return    false;    }    	non-compiled	[CE]  illegal  start  of  expression	63	None	replace
21	[BUG]  [BUGGY]  Option  commandLine  =  option.canProcess(commandLine,  arg)||  option.canProcess(commandLine,  arg))  {  return  false;  }  [CE]  illegal  start  of  expression  [FE]              OptionException      [CONTEXT]        final  Map  tailMap  =  optionMap.tailMap(arg);  for  (final  Iterator  iter  =  tailMap.values().iterator();  iter.hasNext();)  {  final  Option  option  =  (Option)  iter.next();  if  (option.canProcess(commandLine,  arg))  {  return  true;  }      [BUGGY]  Option  commandLine  =  option.canProcess(commandLine,  arg)||  option.canProcess(commandLine,  arg))  {  return  false;  }  [BUGGY]      }  if  (looksLikeOption(commandLine,  arg))  {  return  false;  }  if  (anonymous.size()  >  0)  {  return  true;  }  [CLASS]  GroupImpl  [METHOD]  canProcess  [RETURN_TYPE]  boolean  WriteableCommandLine  commandLine  String  arg  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  SortedMap  newOptionMap  optionMap  WriteableCommandLine  commandLine  Iterator  iter  List  anonymous  newAnonymous  options  Option  option  String  arg  description  name  Map  tailMap  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	137	137	1	replace	Option  commandLine  =  option.canProcess(commandLine,  arg)||  option.canProcess(commandLine,  arg))  {  return  false;  }	  if(option.canProcess(commandLine,    arg)||    option.canProcess(commandLine,    arg))    {    return    false;    }    	non-compiled	[CE]  illegal  start  of  expression	63	None	replace
22	[BUG]  [BUGGY]  Option  option  =  option.canProcess(commandLine,  arg);  [CE]  illegal  start  of  expression  [FE]                OptionException      [CONTEXT]        final  Map  tailMap  =  optionMap.tailMap(arg);  for  (final  Iterator  iter  =  tailMap.values().iterator();  iter.hasNext();)  {  final  Option  option  =  (Option)  iter.next();  if  (option.canProcess(commandLine,  arg))  {  return  true;  }      [BUGGY]  Option  option  =  option.canProcess(commandLine,  arg);  [BUGGY]      }  if  (looksLikeOption(commandLine,  arg))  {  return  false;  }  if  (anonymous.size()  >  0)  {  return  true;  }  [CLASS]  GroupImpl  [METHOD]  canProcess  [RETURN_TYPE]  boolean  WriteableCommandLine  commandLine  String  arg  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  SortedMap  newOptionMap  optionMap  WriteableCommandLine  commandLine  Iterator  iter  List  anonymous  newAnonymous  options  Option  option  String  arg  description  name  Map  tailMap  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	137	137	1	replace	Option  option  =  option.canProcess(commandLine,  arg);	  if(option.canProcess(commandLine,    arg)||    option.canProcess(commandLine,    arg))    {    return    false;    }    	non-compiled	[CE]  illegal  start  of  expression	63	None	replace
23	[BUG]  [BUGGY]  Option  option  =  option.getOption(commandLine,  arg,  description);  [CE]  illegal  start  of  expression  [FE]              OptionException      [CONTEXT]        final  Map  tailMap  =  optionMap.tailMap(arg);  for  (final  Iterator  iter  =  tailMap.values().iterator();  iter.hasNext();)  {  final  Option  option  =  (Option)  iter.next();  if  (option.canProcess(commandLine,  arg))  {  return  true;  }      [BUGGY]  Option  option  =  option.getOption(commandLine,  arg,  description);  [BUGGY]        if  (looksLikeOption(commandLine,  arg))  {  return  false;  }  if  (anonymous.size()  >  0)  {  return  true;  }  [CLASS]  GroupImpl  [METHOD]  canProcess  [RETURN_TYPE]  boolean  WriteableCommandLine  commandLine  String  arg  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  SortedMap  newOptionMap  optionMap  WriteableCommandLine  commandLine  Iterator  iter  List  anonymous  newAnonymous  options  Option  option  String  arg  description  name  Map  tailMap  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	137	137	1	replace	Option  option  =  option.getOption(commandLine,  arg,  description);	  Option    option    =    option.getOption(commandLine,    arg);    	non-compiled	[CE]  illegal  start  of  expression	44	None	replace
24	[BUG]  [BUGGY]  Option  option  =  option.getOption(commandLine,  description);  [CE]  illegal  start  of  expression  [FE]                OptionException      [CONTEXT]        final  Map  tailMap  =  optionMap.tailMap(arg);  for  (final  Iterator  iter  =  tailMap.values().iterator();  iter.hasNext();)  {  final  Option  option  =  (Option)  iter.next();  if  (option.canProcess(commandLine,  arg))  {  return  true;  }      [BUGGY]  Option  option  =  option.getOption(commandLine,  description);  [BUGGY]        if  (looksLikeOption(commandLine,  arg))  {  return  false;  }  if  (anonymous.size()  >  0)  {  return  true;  }  [CLASS]  GroupImpl  [METHOD]  canProcess  [RETURN_TYPE]  boolean  WriteableCommandLine  commandLine  String  arg  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  SortedMap  newOptionMap  optionMap  WriteableCommandLine  commandLine  Iterator  iter  List  anonymous  newAnonymous  options  Option  option  String  arg  description  name  Map  tailMap  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	137	137	1	replace	Option  option  =  option.getOption(commandLine,  description);	  Option    option    =    option.getOption(commandLine,    arg);    	non-compiled	[CE]  illegal  start  of  expression	44	None	replace
25	[BUG]  [BUGGY]  Option  option  =  option.getOption(commandLine,  arg  +  1);  [CE]  illegal  start  of  expression  [FE]                  OptionException      [CONTEXT]        final  Map  tailMap  =  optionMap.tailMap(arg);  for  (final  Iterator  iter  =  tailMap.values().iterator();  iter.hasNext();)  {  final  Option  option  =  (Option)  iter.next();  if  (option.canProcess(commandLine,  arg))  {  return  true;  }      [BUGGY]  Option  option  =  option.getOption(commandLine,  arg  +  1);  [BUGGY]        if  (looksLikeOption(commandLine,  arg))  {  return  false;  }  if  (anonymous.size()  >  0)  {  return  true;  }  [CLASS]  GroupImpl  [METHOD]  canProcess  [RETURN_TYPE]  boolean  WriteableCommandLine  commandLine  String  arg  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  SortedMap  newOptionMap  optionMap  WriteableCommandLine  commandLine  Iterator  iter  List  anonymous  newAnonymous  options  Option  option  String  arg  description  name  Map  tailMap  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	137	137	1	replace	Option  option  =  option.getOption(commandLine,  arg  +  1);	  Option    option    =    option.getOption(commandLine,    arg);    	non-compiled	[CE]  illegal  start  of  expression	44	None	replace
26	[BUG]  [BUGGY]  Option  commandLine  =  option.canProcess(commandLine,  description);  [CE]  illegal  start  of  expression  [FE]              OptionException      [CONTEXT]        final  Map  tailMap  =  optionMap.tailMap(arg);  for  (final  Iterator  iter  =  tailMap.values().iterator();  iter.hasNext();)  {  final  Option  option  =  (Option)  iter.next();  if  (option.canProcess(commandLine,  arg))  {  return  true;  }      [BUGGY]  Option  commandLine  =  option.canProcess(commandLine,  description);  [BUGGY]        if  (looksLikeOption(commandLine,  arg))  {  return  false;  }  if  (anonymous.size()  >  0)  {  return  true;  }  [CLASS]  GroupImpl  [METHOD]  canProcess  [RETURN_TYPE]  boolean  WriteableCommandLine  commandLine  String  arg  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  SortedMap  newOptionMap  optionMap  WriteableCommandLine  commandLine  Iterator  iter  List  anonymous  newAnonymous  options  Option  option  String  arg  description  name  Map  tailMap  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	137	137	1	replace	Option  commandLine  =  option.canProcess(commandLine,  description);	  Option    commandLine    =    option.canProcess(commandLine,    arg);    	non-compiled	[CE]  illegal  start  of  expression	34	None	replace
27	[BUG]  [BUGGY]  Option  commandLine  =  option.canProcess(arg,  commandLine);  [CE]  illegal  start  of  expression  [FE]                OptionException      [CONTEXT]        final  Map  tailMap  =  optionMap.tailMap(arg);  for  (final  Iterator  iter  =  tailMap.values().iterator();  iter.hasNext();)  {  final  Option  option  =  (Option)  iter.next();  if  (option.canProcess(commandLine,  arg))  {  return  true;  }      [BUGGY]  Option  commandLine  =  option.canProcess(arg,  commandLine);  [BUGGY]        if  (looksLikeOption(commandLine,  arg))  {  return  false;  }  if  (anonymous.size()  >  0)  {  return  true;  }  [CLASS]  GroupImpl  [METHOD]  canProcess  [RETURN_TYPE]  boolean  WriteableCommandLine  commandLine  String  arg  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  SortedMap  newOptionMap  optionMap  WriteableCommandLine  commandLine  Iterator  iter  List  anonymous  newAnonymous  options  Option  option  String  arg  description  name  Map  tailMap  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	137	137	1	replace	Option  commandLine  =  option.canProcess(arg,  commandLine);	  Option    commandLine    =    option.canProcess(commandLine,    arg);    	non-compiled	[CE]  illegal  start  of  expression	34	None	replace
28	[BUG]  [BUGGY]  Option  commandLine  =  option.canProcess(commandLine,  arg  +  1);  [CE]  illegal  start  of  expression  [FE]                  OptionException      [CONTEXT]        final  Map  tailMap  =  optionMap.tailMap(arg);  for  (final  Iterator  iter  =  tailMap.values().iterator();  iter.hasNext();)  {  final  Option  option  =  (Option)  iter.next();  if  (option.canProcess(commandLine,  arg))  {  return  true;  }      [BUGGY]  Option  commandLine  =  option.canProcess(commandLine,  arg  +  1);  [BUGGY]        if  (looksLikeOption(commandLine,  arg))  {  return  false;  }  if  (anonymous.size()  >  0)  {  return  true;  }  [CLASS]  GroupImpl  [METHOD]  canProcess  [RETURN_TYPE]  boolean  WriteableCommandLine  commandLine  String  arg  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  SortedMap  newOptionMap  optionMap  WriteableCommandLine  commandLine  Iterator  iter  List  anonymous  newAnonymous  options  Option  option  String  arg  description  name  Map  tailMap  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	137	137	1	replace	Option  commandLine  =  option.canProcess(commandLine,  arg  +  1);	  Option    commandLine    =    option.canProcess(commandLine,    arg);    	non-compiled	[CE]  illegal  start  of  expression	34	None	replace
29	[BUG]  [BUGGY]  Option  option  =  options.getOption(commandLine);  [CE]  illegal  start  of  expression  [FE]            OptionException      [CONTEXT]        final  Map  tailMap  =  optionMap.tailMap(arg);  for  (final  Iterator  iter  =  tailMap.values().iterator();  iter.hasNext();)  {  final  Option  option  =  (Option)  iter.next();  if  (option.canProcess(commandLine,  arg))  {  return  true;  }      [BUGGY]  Option  option  =  options.getOption(commandLine);  [BUGGY]        if  (looksLikeOption(commandLine,  arg))  {  return  false;  }  if  (anonymous.size()  >  0)  {  return  true;  }  [CLASS]  GroupImpl  [METHOD]  canProcess  [RETURN_TYPE]  boolean  WriteableCommandLine  commandLine  String  arg  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  SortedMap  newOptionMap  optionMap  WriteableCommandLine  commandLine  Iterator  iter  List  anonymous  newAnonymous  options  Option  option  String  arg  description  name  Map  tailMap  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	137	137	1	replace	Option  option  =  options.getOption(commandLine);	  Option    option    =    options.getOption(arg);    	non-compiled	[CE]  illegal  start  of  expression	43	None	replace
30	[BUG]  [BUGGY]  Option  option  =  options.getOption(commandLine,  arg);  [CE]  illegal  start  of  expression  [FE]              OptionException      [CONTEXT]        final  Map  tailMap  =  optionMap.tailMap(arg);  for  (final  Iterator  iter  =  tailMap.values().iterator();  iter.hasNext();)  {  final  Option  option  =  (Option)  iter.next();  if  (option.canProcess(commandLine,  arg))  {  return  true;  }      [BUGGY]  Option  option  =  options.getOption(commandLine,  arg);  [BUGGY]        if  (looksLikeOption(commandLine,  arg))  {  return  false;  }  if  (anonymous.size()  >  0)  {  return  true;  }  [CLASS]  GroupImpl  [METHOD]  canProcess  [RETURN_TYPE]  boolean  WriteableCommandLine  commandLine  String  arg  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  SortedMap  newOptionMap  optionMap  WriteableCommandLine  commandLine  Iterator  iter  List  anonymous  newAnonymous  options  Option  option  String  arg  description  name  Map  tailMap  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	137	137	1	replace	Option  option  =  options.getOption(commandLine,  arg);	  Option    option    =    options.getOption(arg);    	non-compiled	[CE]  illegal  start  of  expression	43	None	replace
31	[BUG]  [BUGGY]  Option  option  =  options.getOption(commandline);  [CE]  illegal  start  of  expression  [FE]                OptionException      [CONTEXT]        final  Map  tailMap  =  optionMap.tailMap(arg);  for  (final  Iterator  iter  =  tailMap.values().iterator();  iter.hasNext();)  {  final  Option  option  =  (Option)  iter.next();  if  (option.canProcess(commandLine,  arg))  {  return  true;  }      [BUGGY]  Option  option  =  options.getOption(commandline);  [BUGGY]        if  (looksLikeOption(commandLine,  arg))  {  return  false;  }  if  (anonymous.size()  >  0)  {  return  true;  }  [CLASS]  GroupImpl  [METHOD]  canProcess  [RETURN_TYPE]  boolean  WriteableCommandLine  commandLine  String  arg  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  SortedMap  newOptionMap  optionMap  WriteableCommandLine  commandLine  Iterator  iter  List  anonymous  newAnonymous  options  Option  option  String  arg  description  name  Map  tailMap  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	137	137	1	replace	Option  option  =  options.getOption(commandline);	  Option    option    =    options.getOption(arg);    	non-compiled	[CE]  illegal  start  of  expression	43	None	replace
32	[BUG]  [BUGGY]  Option  option  =  options.getOption(arg,  description);  [CE]  illegal  start  of  expression  [FE]                  OptionException      [CONTEXT]        final  Map  tailMap  =  optionMap.tailMap(arg);  for  (final  Iterator  iter  =  tailMap.values().iterator();  iter.hasNext();)  {  final  Option  option  =  (Option)  iter.next();  if  (option.canProcess(commandLine,  arg))  {  return  true;  }      [BUGGY]  Option  option  =  options.getOption(arg,  description);  [BUGGY]        if  (looksLikeOption(commandLine,  arg))  {  return  false;  }  if  (anonymous.size()  >  0)  {  return  true;  }  [CLASS]  GroupImpl  [METHOD]  canProcess  [RETURN_TYPE]  boolean  WriteableCommandLine  commandLine  String  arg  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  SortedMap  newOptionMap  optionMap  WriteableCommandLine  commandLine  Iterator  iter  List  anonymous  newAnonymous  options  Option  option  String  arg  description  name  Map  tailMap  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	137	137	1	replace	Option  option  =  options.getOption(arg,  description);	  Option    option    =    options.getOption(arg);    	non-compiled	[CE]  illegal  start  of  expression	43	None	replace
33	[BUG]  [BUGGY]  List  <  Option>  newAnonymous  =  options.values().iterator();  if(newAnonymous  ==  null)  {  return  false;  }  [CE]  illegal  start  of  expression  [FE]                  OptionException      [CONTEXT]        final  Map  tailMap  =  optionMap.tailMap(arg);  for  (final  Iterator  iter  =  tailMap.values().iterator();  iter.hasNext();)  {  final  Option  option  =  (Option)  iter.next();  if  (option.canProcess(commandLine,  arg))  {  return  true;  }      [BUGGY]  List  <  Option>  newAnonymous  =  options.values().iterator();  if(newAnonymous  ==  null)  {  return  false;  }  [BUGGY]      }  if  (looksLikeOption(commandLine,  arg))  {  return  false;  }  if  (anonymous.size()  >  0)  {  return  true;  }  [CLASS]  GroupImpl  [METHOD]  canProcess  [RETURN_TYPE]  boolean  WriteableCommandLine  commandLine  String  arg  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  SortedMap  newOptionMap  optionMap  WriteableCommandLine  commandLine  Iterator  iter  List  anonymous  newAnonymous  options  Option  option  String  arg  description  name  Map  tailMap  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	137	137	1	replace	List  <  Option>  newAnonymous  =  options.values().iterator();  if(newAnonymous  ==  null)  {  return  false;  }	  List    <    Option>    newAnonymous    =    optionMap.values().iterator();    if(newAnonymous    ==    null)    {    return    false;    }    	non-compiled	[CE]  illegal  start  of  expression	17	None	replace
34	[BUG]  [BUGGY]  Option  commandLine  =  option.canProcess(arg);  [CE]  illegal  start  of  expression  [FE]              OptionException      [CONTEXT]        final  Map  tailMap  =  optionMap.tailMap(arg);  for  (final  Iterator  iter  =  tailMap.values().iterator();  iter.hasNext();)  {  final  Option  option  =  (Option)  iter.next();  if  (option.canProcess(commandLine,  arg))  {  return  true;  }      [BUGGY]  Option  commandLine  =  option.canProcess(arg);  [BUGGY]        if  (looksLikeOption(commandLine,  arg))  {  return  false;  }  if  (anonymous.size()  >  0)  {  return  true;  }  [CLASS]  GroupImpl  [METHOD]  canProcess  [RETURN_TYPE]  boolean  WriteableCommandLine  commandLine  String  arg  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  SortedMap  newOptionMap  optionMap  WriteableCommandLine  commandLine  Iterator  iter  List  anonymous  newAnonymous  options  Option  option  String  arg  description  name  Map  tailMap  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	137	137	1	replace	Option  commandLine  =  option.canProcess(arg);	  Option    commandLine    =    option.canProcess(commandLine);    	non-compiled	[CE]  illegal  start  of  expression	10	None	replace
35	[BUG]  [BUGGY]  final  Iterator  <  Option>  iter  =  optionMap.values().iterator();  [CE]  illegal  start  of  expression  [FE]                    OptionException      [CONTEXT]        final  Map  tailMap  =  optionMap.tailMap(arg);  for  (final  Iterator  iter  =  tailMap.values().iterator();  iter.hasNext();)  {  final  Option  option  =  (Option)  iter.next();  if  (option.canProcess(commandLine,  arg))  {  return  true;  }      [BUGGY]  final  Iterator  <  Option>  iter  =  optionMap.values().iterator();  [BUGGY]      }  if  (looksLikeOption(commandLine,  arg))  {  return  false;  }  if  (anonymous.size()  >  0)  {  return  true;  }  [CLASS]  GroupImpl  [METHOD]  canProcess  [RETURN_TYPE]  boolean  WriteableCommandLine  commandLine  String  arg  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  SortedMap  newOptionMap  optionMap  WriteableCommandLine  commandLine  Iterator  iter  List  anonymous  newAnonymous  options  Option  option  String  arg  description  name  Map  tailMap  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	137	137	1	replace	final  Iterator  <  Option>  iter  =  optionMap.values().iterator();	  final    Iterator    <    Option>    iter    =    options.values().iterator();    	non-compiled	[CE]  illegal  start  of  expression	54	None	replace
36	[BUG]  [BUGGY]  final  Iterator  <  Option>  iter  =  options.keySet().iterator();  [CE]  illegal  start  of  expression  [FE]                      OptionException      [CONTEXT]        final  Map  tailMap  =  optionMap.tailMap(arg);  for  (final  Iterator  iter  =  tailMap.values().iterator();  iter.hasNext();)  {  final  Option  option  =  (Option)  iter.next();  if  (option.canProcess(commandLine,  arg))  {  return  true;  }      [BUGGY]  final  Iterator  <  Option>  iter  =  options.keySet().iterator();  [BUGGY]      }  if  (looksLikeOption(commandLine,  arg))  {  return  false;  }  if  (anonymous.size()  >  0)  {  return  true;  }  [CLASS]  GroupImpl  [METHOD]  canProcess  [RETURN_TYPE]  boolean  WriteableCommandLine  commandLine  String  arg  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  SortedMap  newOptionMap  optionMap  WriteableCommandLine  commandLine  Iterator  iter  List  anonymous  newAnonymous  options  Option  option  String  arg  description  name  Map  tailMap  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	137	137	1	replace	final  Iterator  <  Option>  iter  =  options.keySet().iterator();	  final    Iterator    <    Option>    iter    =    options.values().iterator();    	non-compiled	[CE]  illegal  start  of  expression	54	None	replace
37	[BUG]  [BUGGY]  final  Iterator  <  Option>  iter  =  option.values().iterator();  [CE]  illegal  start  of  expression  [FE]                        OptionException      [CONTEXT]        final  Map  tailMap  =  optionMap.tailMap(arg);  for  (final  Iterator  iter  =  tailMap.values().iterator();  iter.hasNext();)  {  final  Option  option  =  (Option)  iter.next();  if  (option.canProcess(commandLine,  arg))  {  return  true;  }      [BUGGY]  final  Iterator  <  Option>  iter  =  option.values().iterator();  [BUGGY]      }  if  (looksLikeOption(commandLine,  arg))  {  return  false;  }  if  (anonymous.size()  >  0)  {  return  true;  }  [CLASS]  GroupImpl  [METHOD]  canProcess  [RETURN_TYPE]  boolean  WriteableCommandLine  commandLine  String  arg  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  SortedMap  newOptionMap  optionMap  WriteableCommandLine  commandLine  Iterator  iter  List  anonymous  newAnonymous  options  Option  option  String  arg  description  name  Map  tailMap  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	137	137	1	replace	final  Iterator  <  Option>  iter  =  option.values().iterator();	  final    Iterator    <    Option>    iter    =    options.values().iterator();    	non-compiled	[CE]  illegal  start  of  expression	54	None	replace
38	[BUG]  [BUGGY]  final  Iterator  <  Option>  iter  =  optionMap.values().iterator();  iter.hasNext();)  {  final  Option  option  =(Option)iter.next();  if(option.canProcess(commandLine,  option))  {  return  false;  }  [CE]  illegal  start  of  expression  [FE]                OptionException      [CONTEXT]        final  Map  tailMap  =  optionMap.tailMap(arg);  for  (final  Iterator  iter  =  tailMap.values().iterator();  iter.hasNext();)  {  final  Option  option  =  (Option)  iter.next();  if  (option.canProcess(commandLine,  arg))  {  return  true;  }      [BUGGY]  final  Iterator  <  Option>  iter  =  optionMap.values().iterator();  iter.hasNext();)  {  final  Option  option  =(Option)iter.next();  if(option.canProcess(commandLine,  option))  {  return  false;  }  [BUGGY]      }  if  (looksLikeOption(commandLine,  arg))  {  return  false;  }  if  (anonymous.size()  >  0)  {  return  true;  }  [CLASS]  GroupImpl  [METHOD]  canProcess  [RETURN_TYPE]  boolean  WriteableCommandLine  commandLine  String  arg  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  SortedMap  newOptionMap  optionMap  WriteableCommandLine  commandLine  Iterator  iter  List  anonymous  newAnonymous  options  Option  option  String  arg  description  name  Map  tailMap  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	137	137	1	replace	final  Iterator  <  Option>  iter  =  optionMap.values().iterator();  iter.hasNext();)  {  final  Option  option  =(Option)iter.next();  if(option.canProcess(commandLine,  option))  {  return  false;  }	  final    Iterator    <    Option>    iter    =    options.values().iterator();    iter.hasNext();)    {    final    Option    option    =(Option)iter.next();    if(option.canProcess(commandLine,    option))    {    return    false;    }    	non-compiled	[CE]  illegal  start  of  expression	3	None	replace
39	[BUG]  [BUGGY]  Iterator  <  Option>  iter  =  options.values().iterator();  iter.hasNext();)  {  final  Option  option  =(Option)iter.next();  if(option.canProcess(commandLine,  option))  {  return  false;  }  [CE]  illegal  start  of  expression  [FE]                  OptionException      [CONTEXT]        final  Map  tailMap  =  optionMap.tailMap(arg);  for  (final  Iterator  iter  =  tailMap.values().iterator();  iter.hasNext();)  {  final  Option  option  =  (Option)  iter.next();  if  (option.canProcess(commandLine,  arg))  {  return  true;  }      [BUGGY]  Iterator  <  Option>  iter  =  options.values().iterator();  iter.hasNext();)  {  final  Option  option  =(Option)iter.next();  if(option.canProcess(commandLine,  option))  {  return  false;  }  [BUGGY]      }  if  (looksLikeOption(commandLine,  arg))  {  return  false;  }  if  (anonymous.size()  >  0)  {  return  true;  }  [CLASS]  GroupImpl  [METHOD]  canProcess  [RETURN_TYPE]  boolean  WriteableCommandLine  commandLine  String  arg  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  SortedMap  newOptionMap  optionMap  WriteableCommandLine  commandLine  Iterator  iter  List  anonymous  newAnonymous  options  Option  option  String  arg  description  name  Map  tailMap  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	137	137	1	replace	Iterator  <  Option>  iter  =  options.values().iterator();  iter.hasNext();)  {  final  Option  option  =(Option)iter.next();  if(option.canProcess(commandLine,  option))  {  return  false;  }	  final    Iterator    <    Option>    iter    =    options.values().iterator();    iter.hasNext();)    {    final    Option    option    =(Option)iter.next();    if(option.canProcess(commandLine,    option))    {    return    false;    }    	non-compiled	[CE]  illegal  start  of  expression	3	None	replace
40	[BUG]  [BUGGY]  final  Iterator  <  Option>  iter  =  options.values().iterator();  iter.hasNext();)  {  final  Option  option  =(Option)iter.next();  if(option.canProcess(commandLine,  option))  {  return  true;  }  [CE]  illegal  start  of  expression  [FE]                    OptionException      [CONTEXT]        final  Map  tailMap  =  optionMap.tailMap(arg);  for  (final  Iterator  iter  =  tailMap.values().iterator();  iter.hasNext();)  {  final  Option  option  =  (Option)  iter.next();  if  (option.canProcess(commandLine,  arg))  {  return  true;  }      [BUGGY]  final  Iterator  <  Option>  iter  =  options.values().iterator();  iter.hasNext();)  {  final  Option  option  =(Option)iter.next();  if(option.canProcess(commandLine,  option))  {  return  true;  }  [BUGGY]      }  if  (looksLikeOption(commandLine,  arg))  {  return  false;  }  if  (anonymous.size()  >  0)  {  return  true;  }  [CLASS]  GroupImpl  [METHOD]  canProcess  [RETURN_TYPE]  boolean  WriteableCommandLine  commandLine  String  arg  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  SortedMap  newOptionMap  optionMap  WriteableCommandLine  commandLine  Iterator  iter  List  anonymous  newAnonymous  options  Option  option  String  arg  description  name  Map  tailMap  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	137	137	1	replace	final  Iterator  <  Option>  iter  =  options.values().iterator();  iter.hasNext();)  {  final  Option  option  =(Option)iter.next();  if(option.canProcess(commandLine,  option))  {  return  true;  }	  final    Iterator    <    Option>    iter    =    options.values().iterator();    iter.hasNext();)    {    final    Option    option    =(Option)iter.next();    if(option.canProcess(commandLine,    option))    {    return    false;    }    	non-compiled	[CE]  illegal  start  of  expression	3	None	replace
41	[BUG]  [BUGGY]  final  Iterator  <  Option>  iter  =  optionMap.values().iterator();  iter.hasNext();)  {  final  Option  option  =(Option)iter.next();  if(!option.canProcess(commandLine,  option))  {  return  false;  }  [CE]  illegal  start  of  expression  [FE]                  OptionException      [CONTEXT]        final  Map  tailMap  =  optionMap.tailMap(arg);  for  (final  Iterator  iter  =  tailMap.values().iterator();  iter.hasNext();)  {  final  Option  option  =  (Option)  iter.next();  if  (option.canProcess(commandLine,  arg))  {  return  true;  }      [BUGGY]  final  Iterator  <  Option>  iter  =  optionMap.values().iterator();  iter.hasNext();)  {  final  Option  option  =(Option)iter.next();  if(!option.canProcess(commandLine,  option))  {  return  false;  }  [BUGGY]      }  if  (looksLikeOption(commandLine,  arg))  {  return  false;  }  if  (anonymous.size()  >  0)  {  return  true;  }  [CLASS]  GroupImpl  [METHOD]  canProcess  [RETURN_TYPE]  boolean  WriteableCommandLine  commandLine  String  arg  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  SortedMap  newOptionMap  optionMap  WriteableCommandLine  commandLine  Iterator  iter  List  anonymous  newAnonymous  options  Option  option  String  arg  description  name  Map  tailMap  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	137	137	1	replace	final  Iterator  <  Option>  iter  =  optionMap.values().iterator();  iter.hasNext();)  {  final  Option  option  =(Option)iter.next();  if(!option.canProcess(commandLine,  option))  {  return  false;  }	  final    Iterator    <    Option>    iter    =    options.values().iterator();    iter.hasNext();)    {    final    Option    option    =(Option)iter.next();    if(!option.canProcess(commandLine,    option))    {    return    false;    }    	non-compiled	[CE]  illegal  start  of  expression	13	None	replace
42	[BUG]  [BUGGY]  Iterator  <  Option>  iter  =  options.values().iterator();  iter.hasNext();)  {  final  Option  option  =(Option)iter.next();  if(!option.canProcess(commandLine,  option))  {  return  false;  }  [CE]  illegal  start  of  expression  [FE]                    OptionException      [CONTEXT]        final  Map  tailMap  =  optionMap.tailMap(arg);  for  (final  Iterator  iter  =  tailMap.values().iterator();  iter.hasNext();)  {  final  Option  option  =  (Option)  iter.next();  if  (option.canProcess(commandLine,  arg))  {  return  true;  }      [BUGGY]  Iterator  <  Option>  iter  =  options.values().iterator();  iter.hasNext();)  {  final  Option  option  =(Option)iter.next();  if(!option.canProcess(commandLine,  option))  {  return  false;  }  [BUGGY]      }  if  (looksLikeOption(commandLine,  arg))  {  return  false;  }  if  (anonymous.size()  >  0)  {  return  true;  }  [CLASS]  GroupImpl  [METHOD]  canProcess  [RETURN_TYPE]  boolean  WriteableCommandLine  commandLine  String  arg  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  SortedMap  newOptionMap  optionMap  WriteableCommandLine  commandLine  Iterator  iter  List  anonymous  newAnonymous  options  Option  option  String  arg  description  name  Map  tailMap  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	137	137	1	replace	Iterator  <  Option>  iter  =  options.values().iterator();  iter.hasNext();)  {  final  Option  option  =(Option)iter.next();  if(!option.canProcess(commandLine,  option))  {  return  false;  }	  final    Iterator    <    Option>    iter    =    options.values().iterator();    iter.hasNext();)    {    final    Option    option    =(Option)iter.next();    if(!option.canProcess(commandLine,    option))    {    return    false;    }    	non-compiled	[CE]  illegal  start  of  expression	13	None	replace
43	[BUG]  [BUGGY]  Set  <  Option>  newAnonymous  =(Set  <  Option>)commandLine.values().iterator();  [CE]  illegal  start  of  expression  [FE]                OptionException      [CONTEXT]        final  Map  tailMap  =  optionMap.tailMap(arg);  for  (final  Iterator  iter  =  tailMap.values().iterator();  iter.hasNext();)  {  final  Option  option  =  (Option)  iter.next();  if  (option.canProcess(commandLine,  arg))  {  return  true;  }      [BUGGY]  Set  <  Option>  newAnonymous  =(Set  <  Option>)commandLine.values().iterator();  [BUGGY]        if  (looksLikeOption(commandLine,  arg))  {  return  false;  }  if  (anonymous.size()  >  0)  {  return  true;  }  [CLASS]  GroupImpl  [METHOD]  canProcess  [RETURN_TYPE]  boolean  WriteableCommandLine  commandLine  String  arg  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  SortedMap  newOptionMap  optionMap  WriteableCommandLine  commandLine  Iterator  iter  List  anonymous  newAnonymous  options  Option  option  String  arg  description  name  Map  tailMap  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	137	137	1	replace	Set  <  Option>  newAnonymous  =(Set  <  Option>)commandLine.values().iterator();	  List    <    Option>    newAnonymous    =(List    <    Option>)commandLine.values().iterator();    	non-compiled	[CE]  illegal  start  of  expression	8	None	replace
44	[BUG]  [BUGGY]  List  <  Option>  newAnonymous  =(List  <  Option>)commandLine.keySet().iterator();  [CE]  illegal  start  of  expression  [FE]                  OptionException      [CONTEXT]        final  Map  tailMap  =  optionMap.tailMap(arg);  for  (final  Iterator  iter  =  tailMap.values().iterator();  iter.hasNext();)  {  final  Option  option  =  (Option)  iter.next();  if  (option.canProcess(commandLine,  arg))  {  return  true;  }      [BUGGY]  List  <  Option>  newAnonymous  =(List  <  Option>)commandLine.keySet().iterator();  [BUGGY]        if  (looksLikeOption(commandLine,  arg))  {  return  false;  }  if  (anonymous.size()  >  0)  {  return  true;  }  [CLASS]  GroupImpl  [METHOD]  canProcess  [RETURN_TYPE]  boolean  WriteableCommandLine  commandLine  String  arg  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  SortedMap  newOptionMap  optionMap  WriteableCommandLine  commandLine  Iterator  iter  List  anonymous  newAnonymous  options  Option  option  String  arg  description  name  Map  tailMap  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	137	137	1	replace	List  <  Option>  newAnonymous  =(List  <  Option>)commandLine.keySet().iterator();	  List    <    Option>    newAnonymous    =(List    <    Option>)commandLine.values().iterator();    	non-compiled	[CE]  illegal  start  of  expression	8	None	replace
45	[BUG]  [BUGGY]  List  <  Option>  newAnonymous  =(List  <  Option>)commandLine.getValues().iterator();  [CE]  illegal  start  of  expression  [FE]                    OptionException      [CONTEXT]        final  Map  tailMap  =  optionMap.tailMap(arg);  for  (final  Iterator  iter  =  tailMap.values().iterator();  iter.hasNext();)  {  final  Option  option  =  (Option)  iter.next();  if  (option.canProcess(commandLine,  arg))  {  return  true;  }      [BUGGY]  List  <  Option>  newAnonymous  =(List  <  Option>)commandLine.getValues().iterator();  [BUGGY]        if  (looksLikeOption(commandLine,  arg))  {  return  false;  }  if  (anonymous.size()  >  0)  {  return  true;  }  [CLASS]  GroupImpl  [METHOD]  canProcess  [RETURN_TYPE]  boolean  WriteableCommandLine  commandLine  String  arg  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  SortedMap  newOptionMap  optionMap  WriteableCommandLine  commandLine  Iterator  iter  List  anonymous  newAnonymous  options  Option  option  String  arg  description  name  Map  tailMap  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	137	137	1	replace	List  <  Option>  newAnonymous  =(List  <  Option>)commandLine.getValues().iterator();	  List    <    Option>    newAnonymous    =(List    <    Option>)commandLine.values().iterator();    	non-compiled	[CE]  illegal  start  of  expression	8	None	replace
46	[BUG]  [BUGGY]  final  Iterator  iter  =  options.values().iterator();  iter.hasNext();)  {  final  Option  option  =(Option)option.next();  if(option.canProcess(commandLine,  arg))  {  return  false;  }  [CE]  illegal  start  of  expression  [FE]            OptionException      [CONTEXT]        final  Map  tailMap  =  optionMap.tailMap(arg);  for  (final  Iterator  iter  =  tailMap.values().iterator();  iter.hasNext();)  {  final  Option  option  =  (Option)  iter.next();  if  (option.canProcess(commandLine,  arg))  {  return  true;  }      [BUGGY]  final  Iterator  iter  =  options.values().iterator();  iter.hasNext();)  {  final  Option  option  =(Option)option.next();  if(option.canProcess(commandLine,  arg))  {  return  false;  }  [BUGGY]      }  if  (looksLikeOption(commandLine,  arg))  {  return  false;  }  if  (anonymous.size()  >  0)  {  return  true;  }  [CLASS]  GroupImpl  [METHOD]  canProcess  [RETURN_TYPE]  boolean  WriteableCommandLine  commandLine  String  arg  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  SortedMap  newOptionMap  optionMap  WriteableCommandLine  commandLine  Iterator  iter  List  anonymous  newAnonymous  options  Option  option  String  arg  description  name  Map  tailMap  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	137	137	1	replace	final  Iterator  iter  =  options.values().iterator();  iter.hasNext();)  {  final  Option  option  =(Option)option.next();  if(option.canProcess(commandLine,  arg))  {  return  false;  }	  final    Iterator    iter    =    options.values().iterator();    iter.hasNext();)    {    final    Option    option    =(Option)iter.next();    if(option.canProcess(commandLine,    arg))    {    return    false;    }    	non-compiled	[CE]  illegal  start  of  expression	31	None	replace
47	[BUG]  [BUGGY]  final  List  <  Option>  anonym  =(List  <  Option>)iter.next();  [CE]  illegal  start  of  expression  [FE]                  OptionException      [CONTEXT]        final  Map  tailMap  =  optionMap.tailMap(arg);  for  (final  Iterator  iter  =  tailMap.values().iterator();  iter.hasNext();)  {  final  Option  option  =  (Option)  iter.next();  if  (option.canProcess(commandLine,  arg))  {  return  true;  }      [BUGGY]  final  List  <  Option>  anonym  =(List  <  Option>)iter.next();  [BUGGY]        if  (looksLikeOption(commandLine,  arg))  {  return  false;  }  if  (anonymous.size()  >  0)  {  return  true;  }  [CLASS]  GroupImpl  [METHOD]  canProcess  [RETURN_TYPE]  boolean  WriteableCommandLine  commandLine  String  arg  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  SortedMap  newOptionMap  optionMap  WriteableCommandLine  commandLine  Iterator  iter  List  anonymous  newAnonymous  options  Option  option  String  arg  description  name  Map  tailMap  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	137	137	1	replace	final  List  <  Option>  anonym  =(List  <  Option>)iter.next();	  final    List    <    Option>    anonymous    =(List    <    Option>)iter.next();    	non-compiled	[CE]  illegal  start  of  expression	52	None	replace
48	[BUG]  [BUGGY]  final  Set  <  Option>  anonymous  =(Set  <  Option>)iter.next();  [CE]  illegal  start  of  expression  [FE]                    OptionException      [CONTEXT]        final  Map  tailMap  =  optionMap.tailMap(arg);  for  (final  Iterator  iter  =  tailMap.values().iterator();  iter.hasNext();)  {  final  Option  option  =  (Option)  iter.next();  if  (option.canProcess(commandLine,  arg))  {  return  true;  }      [BUGGY]  final  Set  <  Option>  anonymous  =(Set  <  Option>)iter.next();  [BUGGY]        if  (looksLikeOption(commandLine,  arg))  {  return  false;  }  if  (anonymous.size()  >  0)  {  return  true;  }  [CLASS]  GroupImpl  [METHOD]  canProcess  [RETURN_TYPE]  boolean  WriteableCommandLine  commandLine  String  arg  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  SortedMap  newOptionMap  optionMap  WriteableCommandLine  commandLine  Iterator  iter  List  anonymous  newAnonymous  options  Option  option  String  arg  description  name  Map  tailMap  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	137	137	1	replace	final  Set  <  Option>  anonymous  =(Set  <  Option>)iter.next();	  final    List    <    Option>    anonymous    =(List    <    Option>)iter.next();    	non-compiled	[CE]  illegal  start  of  expression	52	None	replace
49	[BUG]  [BUGGY]  Option  commandLine  =  option.getDescription();  [CE]  illegal  start  of  expression  [FE]                        OptionException      [CONTEXT]        final  Map  tailMap  =  optionMap.tailMap(arg);  for  (final  Iterator  iter  =  tailMap.values().iterator();  iter.hasNext();)  {  final  Option  option  =  (Option)  iter.next();  if  (option.canProcess(commandLine,  arg))  {  return  true;  }      [BUGGY]  Option  commandLine  =  option.getDescription();  [BUGGY]        if  (looksLikeOption(commandLine,  arg))  {  return  false;  }  if  (anonymous.size()  >  0)  {  return  true;  }  [CLASS]  GroupImpl  [METHOD]  canProcess  [RETURN_TYPE]  boolean  WriteableCommandLine  commandLine  String  arg  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  SortedMap  newOptionMap  optionMap  WriteableCommandLine  commandLine  Iterator  iter  List  anonymous  newAnonymous  options  Option  option  String  arg  description  name  Map  tailMap  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	137	137	1	replace	Option  commandLine  =  option.getDescription();	  Option    commandLine    =    option.getArgument();    	non-compiled	[CE]  illegal  start  of  expression	30	None	replace
50	[BUG]  [BUGGY]  Option  option  =  optionMap.getOption(commandLine);  if(option!=  null)  {  return  false;  }  [CE]  illegal  start  of  expression  [FE]            OptionException      [CONTEXT]        final  Map  tailMap  =  optionMap.tailMap(arg);  for  (final  Iterator  iter  =  tailMap.values().iterator();  iter.hasNext();)  {  final  Option  option  =  (Option)  iter.next();  if  (option.canProcess(commandLine,  arg))  {  return  true;  }      [BUGGY]  Option  option  =  optionMap.getOption(commandLine);  if(option!=  null)  {  return  false;  }  [BUGGY]      }  if  (looksLikeOption(commandLine,  arg))  {  return  false;  }  if  (anonymous.size()  >  0)  {  return  true;  }  [CLASS]  GroupImpl  [METHOD]  canProcess  [RETURN_TYPE]  boolean  WriteableCommandLine  commandLine  String  arg  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  SortedMap  newOptionMap  optionMap  WriteableCommandLine  commandLine  Iterator  iter  List  anonymous  newAnonymous  options  Option  option  String  arg  description  name  Map  tailMap  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	137	137	1	replace	Option  option  =  optionMap.getOption(commandLine);  if(option!=  null)  {  return  false;  }	  Option    option    =    optionMap.getOption(arg);    if(option!=    null)    {    return    false;    }    	non-compiled	[CE]  illegal  start  of  expression	38	None	replace
51	[BUG]  [BUGGY]  Option  option  =  optionMap.getOption(commandLine);  [CE]  illegal  start  of  expression  [FE]              OptionException      [CONTEXT]        final  Map  tailMap  =  optionMap.tailMap(arg);  for  (final  Iterator  iter  =  tailMap.values().iterator();  iter.hasNext();)  {  final  Option  option  =  (Option)  iter.next();  if  (option.canProcess(commandLine,  arg))  {  return  true;  }      [BUGGY]  Option  option  =  optionMap.getOption(commandLine);  [BUGGY]      }  if  (looksLikeOption(commandLine,  arg))  {  return  false;  }  if  (anonymous.size()  >  0)  {  return  true;  }  [CLASS]  GroupImpl  [METHOD]  canProcess  [RETURN_TYPE]  boolean  WriteableCommandLine  commandLine  String  arg  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  SortedMap  newOptionMap  optionMap  WriteableCommandLine  commandLine  Iterator  iter  List  anonymous  newAnonymous  options  Option  option  String  arg  description  name  Map  tailMap  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	137	137	1	replace	Option  option  =  optionMap.getOption(commandLine);	  Option    option    =    optionMap.getOption(arg);    if(option!=    null)    {    return    false;    }    	non-compiled	[CE]  illegal  start  of  expression	38	None	replace
52	[BUG]  [BUGGY]  Option  option  =  optionMap.getOption(commandLine);  if(option  ==  null)  {  return  false;  }  [CE]  illegal  start  of  expression  [FE]                OptionException      [CONTEXT]        final  Map  tailMap  =  optionMap.tailMap(arg);  for  (final  Iterator  iter  =  tailMap.values().iterator();  iter.hasNext();)  {  final  Option  option  =  (Option)  iter.next();  if  (option.canProcess(commandLine,  arg))  {  return  true;  }      [BUGGY]  Option  option  =  optionMap.getOption(commandLine);  if(option  ==  null)  {  return  false;  }  [BUGGY]      }  if  (looksLikeOption(commandLine,  arg))  {  return  false;  }  if  (anonymous.size()  >  0)  {  return  true;  }  [CLASS]  GroupImpl  [METHOD]  canProcess  [RETURN_TYPE]  boolean  WriteableCommandLine  commandLine  String  arg  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  SortedMap  newOptionMap  optionMap  WriteableCommandLine  commandLine  Iterator  iter  List  anonymous  newAnonymous  options  Option  option  String  arg  description  name  Map  tailMap  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	137	137	1	replace	Option  option  =  optionMap.getOption(commandLine);  if(option  ==  null)  {  return  false;  }	  Option    option    =    optionMap.getOption(arg);    if(option!=    null)    {    return    false;    }    	non-compiled	[CE]  illegal  start  of  expression	38	None	replace
53	[BUG]  [BUGGY]  final  Option  option  =  optionMap.getOption(arg);  if(option!=  null)  {  return  false;  }  [CE]  illegal  start  of  expression  [FE]                  OptionException      [CONTEXT]        final  Map  tailMap  =  optionMap.tailMap(arg);  for  (final  Iterator  iter  =  tailMap.values().iterator();  iter.hasNext();)  {  final  Option  option  =  (Option)  iter.next();  if  (option.canProcess(commandLine,  arg))  {  return  true;  }      [BUGGY]  final  Option  option  =  optionMap.getOption(arg);  if(option!=  null)  {  return  false;  }  [BUGGY]      }  if  (looksLikeOption(commandLine,  arg))  {  return  false;  }  if  (anonymous.size()  >  0)  {  return  true;  }  [CLASS]  GroupImpl  [METHOD]  canProcess  [RETURN_TYPE]  boolean  WriteableCommandLine  commandLine  String  arg  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  SortedMap  newOptionMap  optionMap  WriteableCommandLine  commandLine  Iterator  iter  List  anonymous  newAnonymous  options  Option  option  String  arg  description  name  Map  tailMap  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	137	137	1	replace	final  Option  option  =  optionMap.getOption(arg);  if(option!=  null)  {  return  false;  }	  Option    option    =    optionMap.getOption(arg);    if(option!=    null)    {    return    false;    }    	non-compiled	[CE]  illegal  start  of  expression	38	None	replace
54	[BUG]  [BUGGY]  Iterator  iter  =  optionMap.values().iterator();  iter.hasNext();)  {  final  Option  option  =(Option)iter.next();  if(!option.canProcess(commandLine,  option))  {  return  false;  }  [CE]  illegal  start  of  expression  [FE]                    OptionException      [CONTEXT]        final  Map  tailMap  =  optionMap.tailMap(arg);  for  (final  Iterator  iter  =  tailMap.values().iterator();  iter.hasNext();)  {  final  Option  option  =  (Option)  iter.next();  if  (option.canProcess(commandLine,  arg))  {  return  true;  }      [BUGGY]  Iterator  iter  =  optionMap.values().iterator();  iter.hasNext();)  {  final  Option  option  =(Option)iter.next();  if(!option.canProcess(commandLine,  option))  {  return  false;  }  [BUGGY]      }  if  (looksLikeOption(commandLine,  arg))  {  return  false;  }  if  (anonymous.size()  >  0)  {  return  true;  }  [CLASS]  GroupImpl  [METHOD]  canProcess  [RETURN_TYPE]  boolean  WriteableCommandLine  commandLine  String  arg  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  SortedMap  newOptionMap  optionMap  WriteableCommandLine  commandLine  Iterator  iter  List  anonymous  newAnonymous  options  Option  option  String  arg  description  name  Map  tailMap  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	137	137	1	replace	Iterator  iter  =  optionMap.values().iterator();  iter.hasNext();)  {  final  Option  option  =(Option)iter.next();  if(!option.canProcess(commandLine,  option))  {  return  false;  }	  final    Iterator    iter    =    optionMap.values().iterator();    iter.hasNext();)    {    final    Option    option    =(Option)iter.next();    if(!option.canProcess(commandLine,    option))    {    return    false;    }    	non-compiled	[CE]  illegal  start  of  expression	14	None	replace
55	[BUG]  [BUGGY]  final  Iterator  <  Option>  iter  =  optionMap.values().iterator();  iter.hasNext();)  {  final  Option  option  =(Option)iter.next();  if(option.canProcess(commandLine,  arg))  {  return  false;  }  [CE]  illegal  start  of  expression  [FE]              OptionException      [CONTEXT]        final  Map  tailMap  =  optionMap.tailMap(arg);  for  (final  Iterator  iter  =  tailMap.values().iterator();  iter.hasNext();)  {  final  Option  option  =  (Option)  iter.next();  if  (option.canProcess(commandLine,  arg))  {  return  true;  }      [BUGGY]  final  Iterator  <  Option>  iter  =  optionMap.values().iterator();  iter.hasNext();)  {  final  Option  option  =(Option)iter.next();  if(option.canProcess(commandLine,  arg))  {  return  false;  }  [BUGGY]      }  if  (looksLikeOption(commandLine,  arg))  {  return  false;  }  if  (anonymous.size()  >  0)  {  return  true;  }  [CLASS]  GroupImpl  [METHOD]  canProcess  [RETURN_TYPE]  boolean  WriteableCommandLine  commandLine  String  arg  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  SortedMap  newOptionMap  optionMap  WriteableCommandLine  commandLine  Iterator  iter  List  anonymous  newAnonymous  options  Option  option  String  arg  description  name  Map  tailMap  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	137	137	1	replace	final  Iterator  <  Option>  iter  =  optionMap.values().iterator();  iter.hasNext();)  {  final  Option  option  =(Option)iter.next();  if(option.canProcess(commandLine,  arg))  {  return  false;  }	  final    Iterator    <    Option>    iter    =    options.values().iterator();    iter.hasNext();)    {    final    Option    option    =(Option)iter.next();    if(option.canProcess(commandLine,    arg))    {    return    false;    }    	non-compiled	[CE]  illegal  start  of  expression	32	None	replace
56	[BUG]  [BUGGY]  Iterator  <  Option>  iter  =  options.values().iterator();  iter.hasNext();)  {  final  Option  option  =(Option)iter.next();  if(option.canProcess(commandLine,  arg))  {  return  false;  }  [CE]  illegal  start  of  expression  [FE]                OptionException      [CONTEXT]        final  Map  tailMap  =  optionMap.tailMap(arg);  for  (final  Iterator  iter  =  tailMap.values().iterator();  iter.hasNext();)  {  final  Option  option  =  (Option)  iter.next();  if  (option.canProcess(commandLine,  arg))  {  return  true;  }      [BUGGY]  Iterator  <  Option>  iter  =  options.values().iterator();  iter.hasNext();)  {  final  Option  option  =(Option)iter.next();  if(option.canProcess(commandLine,  arg))  {  return  false;  }  [BUGGY]      }  if  (looksLikeOption(commandLine,  arg))  {  return  false;  }  if  (anonymous.size()  >  0)  {  return  true;  }  [CLASS]  GroupImpl  [METHOD]  canProcess  [RETURN_TYPE]  boolean  WriteableCommandLine  commandLine  String  arg  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  SortedMap  newOptionMap  optionMap  WriteableCommandLine  commandLine  Iterator  iter  List  anonymous  newAnonymous  options  Option  option  String  arg  description  name  Map  tailMap  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	137	137	1	replace	Iterator  <  Option>  iter  =  options.values().iterator();  iter.hasNext();)  {  final  Option  option  =(Option)iter.next();  if(option.canProcess(commandLine,  arg))  {  return  false;  }	  final    Iterator    <    Option>    iter    =    options.values().iterator();    iter.hasNext();)    {    final    Option    option    =(Option)iter.next();    if(option.canProcess(commandLine,    arg))    {    return    false;    }    	non-compiled	[CE]  illegal  start  of  expression	32	None	replace
57	[BUG]  [BUGGY]  List  <  Option>  newAnonymous  =(List  <  Option>)option.clone();  [CE]  illegal  start  of  expression  [FE]            OptionException      [CONTEXT]        final  Map  tailMap  =  optionMap.tailMap(arg);  for  (final  Iterator  iter  =  tailMap.values().iterator();  iter.hasNext();)  {  final  Option  option  =  (Option)  iter.next();  if  (option.canProcess(commandLine,  arg))  {  return  true;  }      [BUGGY]  List  <  Option>  newAnonymous  =(List  <  Option>)option.clone();  [BUGGY]        if  (looksLikeOption(commandLine,  arg))  {  return  false;  }  if  (anonymous.size()  >  0)  {  return  true;  }  [CLASS]  GroupImpl  [METHOD]  canProcess  [RETURN_TYPE]  boolean  WriteableCommandLine  commandLine  String  arg  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  SortedMap  newOptionMap  optionMap  WriteableCommandLine  commandLine  Iterator  iter  List  anonymous  newAnonymous  options  Option  option  String  arg  description  name  Map  tailMap  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	137	137	1	replace	List  <  Option>  newAnonymous  =(List  <  Option>)option.clone();	  List    <    Option>    newAnonymous    =(List    <    Option>)option.next();    	non-compiled	[CE]  illegal  start  of  expression	55	None	replace
58	[BUG]  [BUGGY]  List  <  Option>  newAnonymous  =(List  <  Option>)option.getValue();  [CE]  illegal  start  of  expression  [FE]              OptionException      [CONTEXT]        final  Map  tailMap  =  optionMap.tailMap(arg);  for  (final  Iterator  iter  =  tailMap.values().iterator();  iter.hasNext();)  {  final  Option  option  =  (Option)  iter.next();  if  (option.canProcess(commandLine,  arg))  {  return  true;  }      [BUGGY]  List  <  Option>  newAnonymous  =(List  <  Option>)option.getValue();  [BUGGY]        if  (looksLikeOption(commandLine,  arg))  {  return  false;  }  if  (anonymous.size()  >  0)  {  return  true;  }  [CLASS]  GroupImpl  [METHOD]  canProcess  [RETURN_TYPE]  boolean  WriteableCommandLine  commandLine  String  arg  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  SortedMap  newOptionMap  optionMap  WriteableCommandLine  commandLine  Iterator  iter  List  anonymous  newAnonymous  options  Option  option  String  arg  description  name  Map  tailMap  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	137	137	1	replace	List  <  Option>  newAnonymous  =(List  <  Option>)option.getValue();	  List    <    Option>    newAnonymous    =(List    <    Option>)option.next();    	non-compiled	[CE]  illegal  start  of  expression	55	None	replace
59	[BUG]  [BUGGY]  final  List  <  Option>  newAnonymous  =(List  <  Option>)optionMap.values().get(commandLine);  [CE]  illegal  start  of  expression  [FE]                  OptionException      [CONTEXT]        final  Map  tailMap  =  optionMap.tailMap(arg);  for  (final  Iterator  iter  =  tailMap.values().iterator();  iter.hasNext();)  {  final  Option  option  =  (Option)  iter.next();  if  (option.canProcess(commandLine,  arg))  {  return  true;  }      [BUGGY]  final  List  <  Option>  newAnonymous  =(List  <  Option>)optionMap.values().get(commandLine);  [BUGGY]        if  (looksLikeOption(commandLine,  arg))  {  return  false;  }  if  (anonymous.size()  >  0)  {  return  true;  }  [CLASS]  GroupImpl  [METHOD]  canProcess  [RETURN_TYPE]  boolean  WriteableCommandLine  commandLine  String  arg  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  SortedMap  newOptionMap  optionMap  WriteableCommandLine  commandLine  Iterator  iter  List  anonymous  newAnonymous  options  Option  option  String  arg  description  name  Map  tailMap  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	137	137	1	replace	final  List  <  Option>  newAnonymous  =(List  <  Option>)optionMap.values().get(commandLine);	  final    List    <    Option>    newAnonymous    =(List    <    Option>)optionMap.values().get(arg);    	non-compiled	[CE]  illegal  start  of  expression	59	None	replace
60	[BUG]  [BUGGY]  final  Set  <  Option>  newAnonymous  =(Set  <  Option>)optionMap.values().get(arg);  [CE]  illegal  start  of  expression  [FE]                    OptionException      [CONTEXT]        final  Map  tailMap  =  optionMap.tailMap(arg);  for  (final  Iterator  iter  =  tailMap.values().iterator();  iter.hasNext();)  {  final  Option  option  =  (Option)  iter.next();  if  (option.canProcess(commandLine,  arg))  {  return  true;  }      [BUGGY]  final  Set  <  Option>  newAnonymous  =(Set  <  Option>)optionMap.values().get(arg);  [BUGGY]        if  (looksLikeOption(commandLine,  arg))  {  return  false;  }  if  (anonymous.size()  >  0)  {  return  true;  }  [CLASS]  GroupImpl  [METHOD]  canProcess  [RETURN_TYPE]  boolean  WriteableCommandLine  commandLine  String  arg  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  SortedMap  newOptionMap  optionMap  WriteableCommandLine  commandLine  Iterator  iter  List  anonymous  newAnonymous  options  Option  option  String  arg  description  name  Map  tailMap  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	137	137	1	replace	final  Set  <  Option>  newAnonymous  =(Set  <  Option>)optionMap.values().get(arg);	  final    List    <    Option>    newAnonymous    =(List    <    Option>)optionMap.values().get(arg);    	non-compiled	[CE]  illegal  start  of  expression	59	None	replace
61	[BUG]  [BUGGY]  final  List  <  Option>  newAnonymous  =(List  <  Option>)tailMap.values().get(arg);  [CE]  illegal  start  of  expression  [FE]                      OptionException      [CONTEXT]        final  Map  tailMap  =  optionMap.tailMap(arg);  for  (final  Iterator  iter  =  tailMap.values().iterator();  iter.hasNext();)  {  final  Option  option  =  (Option)  iter.next();  if  (option.canProcess(commandLine,  arg))  {  return  true;  }      [BUGGY]  final  List  <  Option>  newAnonymous  =(List  <  Option>)tailMap.values().get(arg);  [BUGGY]        if  (looksLikeOption(commandLine,  arg))  {  return  false;  }  if  (anonymous.size()  >  0)  {  return  true;  }  [CLASS]  GroupImpl  [METHOD]  canProcess  [RETURN_TYPE]  boolean  WriteableCommandLine  commandLine  String  arg  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  SortedMap  newOptionMap  optionMap  WriteableCommandLine  commandLine  Iterator  iter  List  anonymous  newAnonymous  options  Option  option  String  arg  description  name  Map  tailMap  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	137	137	1	replace	final  List  <  Option>  newAnonymous  =(List  <  Option>)tailMap.values().get(arg);	  final    List    <    Option>    newAnonymous    =(List    <    Option>)optionMap.values().get(arg);    	non-compiled	[CE]  illegal  start  of  expression	59	None	replace
62	[BUG]  [BUGGY]  Iterator  iter  =  optionMap.values().iterator();  iter.hasNext();)  {  final  Option  option  =(Option)iter.next();  if(option.canProcess(commandLine,  arg))  {  return  false;  }  [CE]  illegal  start  of  expression  [FE]                OptionException      [CONTEXT]        final  Map  tailMap  =  optionMap.tailMap(arg);  for  (final  Iterator  iter  =  tailMap.values().iterator();  iter.hasNext();)  {  final  Option  option  =  (Option)  iter.next();  if  (option.canProcess(commandLine,  arg))  {  return  true;  }      [BUGGY]  Iterator  iter  =  optionMap.values().iterator();  iter.hasNext();)  {  final  Option  option  =(Option)iter.next();  if(option.canProcess(commandLine,  arg))  {  return  false;  }  [BUGGY]      }  if  (looksLikeOption(commandLine,  arg))  {  return  false;  }  if  (anonymous.size()  >  0)  {  return  true;  }  [CLASS]  GroupImpl  [METHOD]  canProcess  [RETURN_TYPE]  boolean  WriteableCommandLine  commandLine  String  arg  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  SortedMap  newOptionMap  optionMap  WriteableCommandLine  commandLine  Iterator  iter  List  anonymous  newAnonymous  options  Option  option  String  arg  description  name  Map  tailMap  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	137	137	1	replace	Iterator  iter  =  optionMap.values().iterator();  iter.hasNext();)  {  final  Option  option  =(Option)iter.next();  if(option.canProcess(commandLine,  arg))  {  return  false;  }	  final    Iterator    iter    =    optionMap.values().iterator();    iter.hasNext();)    {    final    Option    option    =(Option)iter.next();    if(option.canProcess(commandLine,    arg))    {    return    false;    }    	non-compiled	[CE]  illegal  start  of  expression	33	None	replace
63	[BUG]  [BUGGY]  Option  option  =  optionMap.getOption(commandLine,  arg);  [CE]  illegal  start  of  expression  [FE]                OptionException      [CONTEXT]        final  Map  tailMap  =  optionMap.tailMap(arg);  for  (final  Iterator  iter  =  tailMap.values().iterator();  iter.hasNext();)  {  final  Option  option  =  (Option)  iter.next();  if  (option.canProcess(commandLine,  arg))  {  return  true;  }      [BUGGY]  Option  option  =  optionMap.getOption(commandLine,  arg);  [BUGGY]      }  if  (looksLikeOption(commandLine,  arg))  {  return  false;  }  if  (anonymous.size()  >  0)  {  return  true;  }  [CLASS]  GroupImpl  [METHOD]  canProcess  [RETURN_TYPE]  boolean  WriteableCommandLine  commandLine  String  arg  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  SortedMap  newOptionMap  optionMap  WriteableCommandLine  commandLine  Iterator  iter  List  anonymous  newAnonymous  options  Option  option  String  arg  description  name  Map  tailMap  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	137	137	1	replace	Option  option  =  optionMap.getOption(commandLine,  arg);	  Option    option    =    optionMap.getOption(arg);    	non-compiled	[CE]  illegal  start  of  expression	40	None	replace
64	[BUG]  [BUGGY]  Option  option  =  optionMap.getOption(commandline);  [CE]  illegal  start  of  expression  [FE]                  OptionException      [CONTEXT]        final  Map  tailMap  =  optionMap.tailMap(arg);  for  (final  Iterator  iter  =  tailMap.values().iterator();  iter.hasNext();)  {  final  Option  option  =  (Option)  iter.next();  if  (option.canProcess(commandLine,  arg))  {  return  true;  }      [BUGGY]  Option  option  =  optionMap.getOption(commandline);  [BUGGY]      }  if  (looksLikeOption(commandLine,  arg))  {  return  false;  }  if  (anonymous.size()  >  0)  {  return  true;  }  [CLASS]  GroupImpl  [METHOD]  canProcess  [RETURN_TYPE]  boolean  WriteableCommandLine  commandLine  String  arg  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  SortedMap  newOptionMap  optionMap  WriteableCommandLine  commandLine  Iterator  iter  List  anonymous  newAnonymous  options  Option  option  String  arg  description  name  Map  tailMap  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	137	137	1	replace	Option  option  =  optionMap.getOption(commandline);	  Option    option    =    optionMap.getOption(arg);    	non-compiled	[CE]  illegal  start  of  expression	40	None	replace
65	[BUG]  [BUGGY]  List  <  Option>  newAnonymous  =  option.keySet().iterator();  [CE]  illegal  start  of  expression  [FE]                      OptionException      [CONTEXT]        final  Map  tailMap  =  optionMap.tailMap(arg);  for  (final  Iterator  iter  =  tailMap.values().iterator();  iter.hasNext();)  {  final  Option  option  =  (Option)  iter.next();  if  (option.canProcess(commandLine,  arg))  {  return  true;  }      [BUGGY]  List  <  Option>  newAnonymous  =  option.keySet().iterator();  [BUGGY]        if  (looksLikeOption(commandLine,  arg))  {  return  false;  }  if  (anonymous.size()  >  0)  {  return  true;  }  [CLASS]  GroupImpl  [METHOD]  canProcess  [RETURN_TYPE]  boolean  WriteableCommandLine  commandLine  String  arg  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  SortedMap  newOptionMap  optionMap  WriteableCommandLine  commandLine  Iterator  iter  List  anonymous  newAnonymous  options  Option  option  String  arg  description  name  Map  tailMap  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	137	137	1	replace	List  <  Option>  newAnonymous  =  option.keySet().iterator();	  List    <    Option>    newAnonymous    =    options.keySet().iterator();    	non-compiled	[CE]  illegal  start  of  expression	37	None	replace
66	[BUG]  [BUGGY]  final  List  <  Option>  newAnonymous  =  options.keySet().iterator();  [CE]  illegal  start  of  expression  [FE]                        OptionException      [CONTEXT]        final  Map  tailMap  =  optionMap.tailMap(arg);  for  (final  Iterator  iter  =  tailMap.values().iterator();  iter.hasNext();)  {  final  Option  option  =  (Option)  iter.next();  if  (option.canProcess(commandLine,  arg))  {  return  true;  }      [BUGGY]  final  List  <  Option>  newAnonymous  =  options.keySet().iterator();  [BUGGY]        if  (looksLikeOption(commandLine,  arg))  {  return  false;  }  if  (anonymous.size()  >  0)  {  return  true;  }  [CLASS]  GroupImpl  [METHOD]  canProcess  [RETURN_TYPE]  boolean  WriteableCommandLine  commandLine  String  arg  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  SortedMap  newOptionMap  optionMap  WriteableCommandLine  commandLine  Iterator  iter  List  anonymous  newAnonymous  options  Option  option  String  arg  description  name  Map  tailMap  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	137	137	1	replace	final  List  <  Option>  newAnonymous  =  options.keySet().iterator();	  List    <    Option>    newAnonymous    =    options.keySet().iterator();    	non-compiled	[CE]  illegal  start  of  expression	37	None	replace
67	[BUG]  [BUGGY]  final  Set  <  Option>  newAnonymous  =(Set  <  Option>)optionMap.keySet().iterator();  [CE]  illegal  start  of  expression  [FE]                    OptionException      [CONTEXT]        final  Map  tailMap  =  optionMap.tailMap(arg);  for  (final  Iterator  iter  =  tailMap.values().iterator();  iter.hasNext();)  {  final  Option  option  =  (Option)  iter.next();  if  (option.canProcess(commandLine,  arg))  {  return  true;  }      [BUGGY]  final  Set  <  Option>  newAnonymous  =(Set  <  Option>)optionMap.keySet().iterator();  [BUGGY]        if  (looksLikeOption(commandLine,  arg))  {  return  false;  }  if  (anonymous.size()  >  0)  {  return  true;  }  [CLASS]  GroupImpl  [METHOD]  canProcess  [RETURN_TYPE]  boolean  WriteableCommandLine  commandLine  String  arg  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  SortedMap  newOptionMap  optionMap  WriteableCommandLine  commandLine  Iterator  iter  List  anonymous  newAnonymous  options  Option  option  String  arg  description  name  Map  tailMap  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	137	137	1	replace	final  Set  <  Option>  newAnonymous  =(Set  <  Option>)optionMap.keySet().iterator();	  final    List    <    Option>    newAnonymous    =(List    <    Option>)optionMap.keySet().iterator();    	non-compiled	[CE]  illegal  start  of  expression	60	None	replace
68	[BUG]  [BUGGY]  final  List  <  Option>  newAnonymous  =(List  <  Option>)optionMap.get(commandLine).keySet().iterator();  [CE]  illegal  start  of  expression  [FE]                      OptionException      [CONTEXT]        final  Map  tailMap  =  optionMap.tailMap(arg);  for  (final  Iterator  iter  =  tailMap.values().iterator();  iter.hasNext();)  {  final  Option  option  =  (Option)  iter.next();  if  (option.canProcess(commandLine,  arg))  {  return  true;  }      [BUGGY]  final  List  <  Option>  newAnonymous  =(List  <  Option>)optionMap.get(commandLine).keySet().iterator();  [BUGGY]        if  (looksLikeOption(commandLine,  arg))  {  return  false;  }  if  (anonymous.size()  >  0)  {  return  true;  }  [CLASS]  GroupImpl  [METHOD]  canProcess  [RETURN_TYPE]  boolean  WriteableCommandLine  commandLine  String  arg  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  SortedMap  newOptionMap  optionMap  WriteableCommandLine  commandLine  Iterator  iter  List  anonymous  newAnonymous  options  Option  option  String  arg  description  name  Map  tailMap  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	137	137	1	replace	final  List  <  Option>  newAnonymous  =(List  <  Option>)optionMap.get(commandLine).keySet().iterator();	  final    List    <    Option>    newAnonymous    =(List    <    Option>)optionMap.keySet().iterator();    	non-compiled	[CE]  illegal  start  of  expression	60	None	replace
69	[BUG]  [BUGGY]  final  Set  <  Option>  newAnonymous  =(Set  <  Option>)option.next();  [CE]  illegal  start  of  expression  [FE]                OptionException      [CONTEXT]        final  Map  tailMap  =  optionMap.tailMap(arg);  for  (final  Iterator  iter  =  tailMap.values().iterator();  iter.hasNext();)  {  final  Option  option  =  (Option)  iter.next();  if  (option.canProcess(commandLine,  arg))  {  return  true;  }      [BUGGY]  final  Set  <  Option>  newAnonymous  =(Set  <  Option>)option.next();  [BUGGY]        if  (looksLikeOption(commandLine,  arg))  {  return  false;  }  if  (anonymous.size()  >  0)  {  return  true;  }  [CLASS]  GroupImpl  [METHOD]  canProcess  [RETURN_TYPE]  boolean  WriteableCommandLine  commandLine  String  arg  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  SortedMap  newOptionMap  optionMap  WriteableCommandLine  commandLine  Iterator  iter  List  anonymous  newAnonymous  options  Option  option  String  arg  description  name  Map  tailMap  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	137	137	1	replace	final  Set  <  Option>  newAnonymous  =(Set  <  Option>)option.next();	  final    List    <    Option>    newAnonymous    =(List    <    Option>)option.next();    	non-compiled	[CE]  illegal  start  of  expression	51	None	replace
70	[BUG]  [BUGGY]  final  List  <  Option>  newAnonymous  =(List  <  Option>)option.getValue();  [CE]  illegal  start  of  expression  [FE]                  OptionException      [CONTEXT]        final  Map  tailMap  =  optionMap.tailMap(arg);  for  (final  Iterator  iter  =  tailMap.values().iterator();  iter.hasNext();)  {  final  Option  option  =  (Option)  iter.next();  if  (option.canProcess(commandLine,  arg))  {  return  true;  }      [BUGGY]  final  List  <  Option>  newAnonymous  =(List  <  Option>)option.getValue();  [BUGGY]        if  (looksLikeOption(commandLine,  arg))  {  return  false;  }  if  (anonymous.size()  >  0)  {  return  true;  }  [CLASS]  GroupImpl  [METHOD]  canProcess  [RETURN_TYPE]  boolean  WriteableCommandLine  commandLine  String  arg  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  SortedMap  newOptionMap  optionMap  WriteableCommandLine  commandLine  Iterator  iter  List  anonymous  newAnonymous  options  Option  option  String  arg  description  name  Map  tailMap  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	137	137	1	replace	final  List  <  Option>  newAnonymous  =(List  <  Option>)option.getValue();	  final    List    <    Option>    newAnonymous    =(List    <    Option>)option.next();    	non-compiled	[CE]  illegal  start  of  expression	51	None	replace
71	[BUG]  [BUGGY]  final  List  <  Option>  newAnonymous  =(List  <  Option>)option.clone();  [CE]  illegal  start  of  expression  [FE]                    OptionException      [CONTEXT]        final  Map  tailMap  =  optionMap.tailMap(arg);  for  (final  Iterator  iter  =  tailMap.values().iterator();  iter.hasNext();)  {  final  Option  option  =  (Option)  iter.next();  if  (option.canProcess(commandLine,  arg))  {  return  true;  }      [BUGGY]  final  List  <  Option>  newAnonymous  =(List  <  Option>)option.clone();  [BUGGY]        if  (looksLikeOption(commandLine,  arg))  {  return  false;  }  if  (anonymous.size()  >  0)  {  return  true;  }  [CLASS]  GroupImpl  [METHOD]  canProcess  [RETURN_TYPE]  boolean  WriteableCommandLine  commandLine  String  arg  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  SortedMap  newOptionMap  optionMap  WriteableCommandLine  commandLine  Iterator  iter  List  anonymous  newAnonymous  options  Option  option  String  arg  description  name  Map  tailMap  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	137	137	1	replace	final  List  <  Option>  newAnonymous  =(List  <  Option>)option.clone();	  final    List    <    Option>    newAnonymous    =(List    <    Option>)option.next();    	non-compiled	[CE]  illegal  start  of  expression	51	None	replace
72	[BUG]  [BUGGY]  Option  commandLine  =  optionMap.get(commandLine  -  1);  [CE]  illegal  start  of  expression  [FE]              OptionException      [CONTEXT]        final  Map  tailMap  =  optionMap.tailMap(arg);  for  (final  Iterator  iter  =  tailMap.values().iterator();  iter.hasNext();)  {  final  Option  option  =  (Option)  iter.next();  if  (option.canProcess(commandLine,  arg))  {  return  true;  }      [BUGGY]  Option  commandLine  =  optionMap.get(commandLine  -  1);  [BUGGY]      }  if  (looksLikeOption(commandLine,  arg))  {  return  false;  }  if  (anonymous.size()  >  0)  {  return  true;  }  [CLASS]  GroupImpl  [METHOD]  canProcess  [RETURN_TYPE]  boolean  WriteableCommandLine  commandLine  String  arg  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  SortedMap  newOptionMap  optionMap  WriteableCommandLine  commandLine  Iterator  iter  List  anonymous  newAnonymous  options  Option  option  String  arg  description  name  Map  tailMap  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	137	137	1	replace	Option  commandLine  =  optionMap.get(commandLine  -  1);	  Option    commandLine    =    optionMap.get(commandLine);    	non-compiled	[CE]  illegal  start  of  expression	65	None	replace
73	[BUG]  [BUGGY]  final  Iterator  iter  =  optionMap.values().iterator();  iter.hasNext();)  {  final  Option  option  =(Option)iter.next();  if(option.canProcess(commandLine,  option))  {  return  true;  }  [CE]  illegal  start  of  expression  [FE]                    OptionException      [CONTEXT]        final  Map  tailMap  =  optionMap.tailMap(arg);  for  (final  Iterator  iter  =  tailMap.values().iterator();  iter.hasNext();)  {  final  Option  option  =  (Option)  iter.next();  if  (option.canProcess(commandLine,  arg))  {  return  true;  }      [BUGGY]  final  Iterator  iter  =  optionMap.values().iterator();  iter.hasNext();)  {  final  Option  option  =(Option)iter.next();  if(option.canProcess(commandLine,  option))  {  return  true;  }  [BUGGY]      }  if  (looksLikeOption(commandLine,  arg))  {  return  false;  }  if  (anonymous.size()  >  0)  {  return  true;  }  [CLASS]  GroupImpl  [METHOD]  canProcess  [RETURN_TYPE]  boolean  WriteableCommandLine  commandLine  String  arg  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  SortedMap  newOptionMap  optionMap  WriteableCommandLine  commandLine  Iterator  iter  List  anonymous  newAnonymous  options  Option  option  String  arg  description  name  Map  tailMap  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	137	137	1	replace	final  Iterator  iter  =  optionMap.values().iterator();  iter.hasNext();)  {  final  Option  option  =(Option)iter.next();  if(option.canProcess(commandLine,  option))  {  return  true;  }	  final    Iterator    iter    =    options.values().iterator();    iter.hasNext();)    {    final    Option    option    =(Option)iter.next();    if(option.canProcess(commandLine,    option))    {    return    true;    }    	non-compiled	[CE]  illegal  start  of  expression	5	None	replace
74	[BUG]  [BUGGY]  final  Iterator  iter  =  options.values().iterator();  iter.hasNext();)  {  final  Option  option  =(Option)iter.next();  if(option.canProcess(commandLine,  option))  {  return  true  [CE]  illegal  start  of  expression  [FE]                      OptionException      [CONTEXT]        final  Map  tailMap  =  optionMap.tailMap(arg);  for  (final  Iterator  iter  =  tailMap.values().iterator();  iter.hasNext();)  {  final  Option  option  =  (Option)  iter.next();  if  (option.canProcess(commandLine,  arg))  {  return  true;  }      [BUGGY]  final  Iterator  iter  =  options.values().iterator();  iter.hasNext();)  {  final  Option  option  =(Option)iter.next();  if(option.canProcess(commandLine,  option))  {  return  true  [BUGGY]      }  if  (looksLikeOption(commandLine,  arg))  {  return  false;  }  if  (anonymous.size()  >  0)  {  return  true;  }  [CLASS]  GroupImpl  [METHOD]  canProcess  [RETURN_TYPE]  boolean  WriteableCommandLine  commandLine  String  arg  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  SortedMap  newOptionMap  optionMap  WriteableCommandLine  commandLine  Iterator  iter  List  anonymous  newAnonymous  options  Option  option  String  arg  description  name  Map  tailMap  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	137	137	1	replace	final  Iterator  iter  =  options.values().iterator();  iter.hasNext();)  {  final  Option  option  =(Option)iter.next();  if(option.canProcess(commandLine,  option))  {  return  true	  final    Iterator    iter    =    options.values().iterator();    iter.hasNext();)    {    final    Option    option    =(Option)iter.next();    if(option.canProcess(commandLine,    option))    {    return    true;    }    	non-compiled	[CE]  illegal  start  of  expression	5	None	replace
75	[BUG]  [BUGGY]  final  Iterator  iter  =  optionMap.values().iterator();  iter.hasNext();)  {  final  Option  option  =(Option)iter.next();  if(option.canProcess(commandLine,  option))  {  return  true  [CE]  illegal  start  of  expression  [FE]                        OptionException      [CONTEXT]        final  Map  tailMap  =  optionMap.tailMap(arg);  for  (final  Iterator  iter  =  tailMap.values().iterator();  iter.hasNext();)  {  final  Option  option  =  (Option)  iter.next();  if  (option.canProcess(commandLine,  arg))  {  return  true;  }      [BUGGY]  final  Iterator  iter  =  optionMap.values().iterator();  iter.hasNext();)  {  final  Option  option  =(Option)iter.next();  if(option.canProcess(commandLine,  option))  {  return  true  [BUGGY]      }  if  (looksLikeOption(commandLine,  arg))  {  return  false;  }  if  (anonymous.size()  >  0)  {  return  true;  }  [CLASS]  GroupImpl  [METHOD]  canProcess  [RETURN_TYPE]  boolean  WriteableCommandLine  commandLine  String  arg  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  SortedMap  newOptionMap  optionMap  WriteableCommandLine  commandLine  Iterator  iter  List  anonymous  newAnonymous  options  Option  option  String  arg  description  name  Map  tailMap  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	137	137	1	replace	final  Iterator  iter  =  optionMap.values().iterator();  iter.hasNext();)  {  final  Option  option  =(Option)iter.next();  if(option.canProcess(commandLine,  option))  {  return  true	  final    Iterator    iter    =    options.values().iterator();    iter.hasNext();)    {    final    Option    option    =(Option)iter.next();    if(option.canProcess(commandLine,    option))    {    return    true;    }    	non-compiled	[CE]  illegal  start  of  expression	5	None	replace
76	[BUG]  [BUGGY]  final  Iterator  iter  =  options.values().iterator();  iter.hasNext();)  {  final  Option  option  =(Option)iter.next();  if(option.canProcess(commandLine,  arg))  {  return  false  [CE]  illegal  start  of  expression  [FE]                        OptionException      [CONTEXT]        final  Map  tailMap  =  optionMap.tailMap(arg);  for  (final  Iterator  iter  =  tailMap.values().iterator();  iter.hasNext();)  {  final  Option  option  =  (Option)  iter.next();  if  (option.canProcess(commandLine,  arg))  {  return  true;  }      [BUGGY]  final  Iterator  iter  =  options.values().iterator();  iter.hasNext();)  {  final  Option  option  =(Option)iter.next();  if(option.canProcess(commandLine,  arg))  {  return  false  [BUGGY]      }  if  (looksLikeOption(commandLine,  arg))  {  return  false;  }  if  (anonymous.size()  >  0)  {  return  true;  }  [CLASS]  GroupImpl  [METHOD]  canProcess  [RETURN_TYPE]  boolean  WriteableCommandLine  commandLine  String  arg  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  SortedMap  newOptionMap  optionMap  WriteableCommandLine  commandLine  Iterator  iter  List  anonymous  newAnonymous  options  Option  option  String  arg  description  name  Map  tailMap  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	137	137	1	replace	final  Iterator  iter  =  options.values().iterator();  iter.hasNext();)  {  final  Option  option  =(Option)iter.next();  if(option.canProcess(commandLine,  arg))  {  return  false	  final    Iterator    iter    =    options.values().iterator();    iter.hasNext();)    {    final    Option    option    =(Option)iter.next();    if(option.canProcess(commandLine,    arg))    {    return    true    	non-compiled	[CE]  illegal  start  of  expression	20	None	replace
77	[BUG]  [BUGGY]  final  Iterator  iter  =  options.values().iterator();  iter.hasNext();)  {  final  Option  option  =(Option)option.next();  if(option.canProcess(commandLine,  arg))  {  return  true  [CE]  illegal  start  of  expression  [FE]                          OptionException      [CONTEXT]        final  Map  tailMap  =  optionMap.tailMap(arg);  for  (final  Iterator  iter  =  tailMap.values().iterator();  iter.hasNext();)  {  final  Option  option  =  (Option)  iter.next();  if  (option.canProcess(commandLine,  arg))  {  return  true;  }      [BUGGY]  final  Iterator  iter  =  options.values().iterator();  iter.hasNext();)  {  final  Option  option  =(Option)option.next();  if(option.canProcess(commandLine,  arg))  {  return  true  [BUGGY]      }  if  (looksLikeOption(commandLine,  arg))  {  return  false;  }  if  (anonymous.size()  >  0)  {  return  true;  }  [CLASS]  GroupImpl  [METHOD]  canProcess  [RETURN_TYPE]  boolean  WriteableCommandLine  commandLine  String  arg  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  SortedMap  newOptionMap  optionMap  WriteableCommandLine  commandLine  Iterator  iter  List  anonymous  newAnonymous  options  Option  option  String  arg  description  name  Map  tailMap  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	137	137	1	replace	final  Iterator  iter  =  options.values().iterator();  iter.hasNext();)  {  final  Option  option  =(Option)option.next();  if(option.canProcess(commandLine,  arg))  {  return  true	  final    Iterator    iter    =    options.values().iterator();    iter.hasNext();)    {    final    Option    option    =(Option)iter.next();    if(option.canProcess(commandLine,    arg))    {    return    true    	non-compiled	[CE]  illegal  start  of  expression	20	None	replace
78	[BUG]  [BUGGY]  final  Iterator  <  Option>  iter  =  this.options.iterator();  [CE]  illegal  start  of  expression  [FE]                        OptionException      [CONTEXT]        final  Map  tailMap  =  optionMap.tailMap(arg);  for  (final  Iterator  iter  =  tailMap.values().iterator();  iter.hasNext();)  {  final  Option  option  =  (Option)  iter.next();  if  (option.canProcess(commandLine,  arg))  {  return  true;  }      [BUGGY]  final  Iterator  <  Option>  iter  =  this.options.iterator();  [BUGGY]      }  if  (looksLikeOption(commandLine,  arg))  {  return  false;  }  if  (anonymous.size()  >  0)  {  return  true;  }  [CLASS]  GroupImpl  [METHOD]  canProcess  [RETURN_TYPE]  boolean  WriteableCommandLine  commandLine  String  arg  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  SortedMap  newOptionMap  optionMap  WriteableCommandLine  commandLine  Iterator  iter  List  anonymous  newAnonymous  options  Option  option  String  arg  description  name  Map  tailMap  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	137	137	1	replace	final  Iterator  <  Option>  iter  =  this.options.iterator();	  final    Iterator    <    Option>    iter    =    options.iterator();    	non-compiled	[CE]  illegal  start  of  expression	27	None	replace
79	[BUG]  [BUGGY]  final  Iterator  <  Option>  iter  =  optionMap.iterator();  [CE]  illegal  start  of  expression  [FE]                          OptionException      [CONTEXT]        final  Map  tailMap  =  optionMap.tailMap(arg);  for  (final  Iterator  iter  =  tailMap.values().iterator();  iter.hasNext();)  {  final  Option  option  =  (Option)  iter.next();  if  (option.canProcess(commandLine,  arg))  {  return  true;  }      [BUGGY]  final  Iterator  <  Option>  iter  =  optionMap.iterator();  [BUGGY]      }  if  (looksLikeOption(commandLine,  arg))  {  return  false;  }  if  (anonymous.size()  >  0)  {  return  true;  }  [CLASS]  GroupImpl  [METHOD]  canProcess  [RETURN_TYPE]  boolean  WriteableCommandLine  commandLine  String  arg  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  SortedMap  newOptionMap  optionMap  WriteableCommandLine  commandLine  Iterator  iter  List  anonymous  newAnonymous  options  Option  option  String  arg  description  name  Map  tailMap  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	137	137	1	replace	final  Iterator  <  Option>  iter  =  optionMap.iterator();	  final    Iterator    <    Option>    iter    =    options.iterator();    	non-compiled	[CE]  illegal  start  of  expression	27	None	replace
80	[BUG]  [BUGGY]  final  Iterator  iter  =  options.values().iterator();  iter.hasNext();)  {  final  Option  option  =(Option)option.next();  if(option.canProcess(commandLine,  option))  {  return  false;  }  [CE]  illegal  start  of  expression  [FE]              OptionException      [CONTEXT]        final  Map  tailMap  =  optionMap.tailMap(arg);  for  (final  Iterator  iter  =  tailMap.values().iterator();  iter.hasNext();)  {  final  Option  option  =  (Option)  iter.next();  if  (option.canProcess(commandLine,  arg))  {  return  true;  }      [BUGGY]  final  Iterator  iter  =  options.values().iterator();  iter.hasNext();)  {  final  Option  option  =(Option)option.next();  if(option.canProcess(commandLine,  option))  {  return  false;  }  [BUGGY]      }  if  (looksLikeOption(commandLine,  arg))  {  return  false;  }  if  (anonymous.size()  >  0)  {  return  true;  }  [CLASS]  GroupImpl  [METHOD]  canProcess  [RETURN_TYPE]  boolean  WriteableCommandLine  commandLine  String  arg  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  SortedMap  newOptionMap  optionMap  WriteableCommandLine  commandLine  Iterator  iter  List  anonymous  newAnonymous  options  Option  option  String  arg  description  name  Map  tailMap  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	137	137	1	replace	final  Iterator  iter  =  options.values().iterator();  iter.hasNext();)  {  final  Option  option  =(Option)option.next();  if(option.canProcess(commandLine,  option))  {  return  false;  }	  final    Iterator    iter    =    options.values().iterator();    iter.hasNext();)    {    final    Option    option    =(Option)iter.next();    if(option.canProcess(commandLine,    option))    {    return    false;    }    	non-compiled	[CE]  illegal  start  of  expression	2	None	replace
81	[BUG]  [BUGGY]  final  Set  <  Option>  newAnonymous  =  optionMap.values().iterator();  if(newAnonymous!=  null)  {  return  false;  }  [CE]  illegal  start  of  expression  [FE]              OptionException      [CONTEXT]        final  Map  tailMap  =  optionMap.tailMap(arg);  for  (final  Iterator  iter  =  tailMap.values().iterator();  iter.hasNext();)  {  final  Option  option  =  (Option)  iter.next();  if  (option.canProcess(commandLine,  arg))  {  return  true;  }      [BUGGY]  final  Set  <  Option>  newAnonymous  =  optionMap.values().iterator();  if(newAnonymous!=  null)  {  return  false;  }  [BUGGY]      }  if  (looksLikeOption(commandLine,  arg))  {  return  false;  }  if  (anonymous.size()  >  0)  {  return  true;  }  [CLASS]  GroupImpl  [METHOD]  canProcess  [RETURN_TYPE]  boolean  WriteableCommandLine  commandLine  String  arg  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  SortedMap  newOptionMap  optionMap  WriteableCommandLine  commandLine  Iterator  iter  List  anonymous  newAnonymous  options  Option  option  String  arg  description  name  Map  tailMap  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	137	137	1	replace	final  Set  <  Option>  newAnonymous  =  optionMap.values().iterator();  if(newAnonymous!=  null)  {  return  false;  }	  Set    <    Option>    newAnonymous    =    optionMap.values().iterator();    if(newAnonymous!=    null)    {    return    false;    }    	non-compiled	[CE]  illegal  start  of  expression	66	None	replace
82	[BUG]  [BUGGY]  ArrayList  <  Option>  newAnonymous  =  optionMap.values().iterator();  if(newAnonymous!=  null)  {  return  false;  }  [CE]  illegal  start  of  expression  [FE]                OptionException      [CONTEXT]        final  Map  tailMap  =  optionMap.tailMap(arg);  for  (final  Iterator  iter  =  tailMap.values().iterator();  iter.hasNext();)  {  final  Option  option  =  (Option)  iter.next();  if  (option.canProcess(commandLine,  arg))  {  return  true;  }      [BUGGY]  ArrayList  <  Option>  newAnonymous  =  optionMap.values().iterator();  if(newAnonymous!=  null)  {  return  false;  }  [BUGGY]      }  if  (looksLikeOption(commandLine,  arg))  {  return  false;  }  if  (anonymous.size()  >  0)  {  return  true;  }  [CLASS]  GroupImpl  [METHOD]  canProcess  [RETURN_TYPE]  boolean  WriteableCommandLine  commandLine  String  arg  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  SortedMap  newOptionMap  optionMap  WriteableCommandLine  commandLine  Iterator  iter  List  anonymous  newAnonymous  options  Option  option  String  arg  description  name  Map  tailMap  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	137	137	1	replace	ArrayList  <  Option>  newAnonymous  =  optionMap.values().iterator();  if(newAnonymous!=  null)  {  return  false;  }	  Set    <    Option>    newAnonymous    =    optionMap.values().iterator();    if(newAnonymous!=    null)    {    return    false;    }    	non-compiled	[CE]  illegal  start  of  expression	66	None	replace
83	[BUG]  [BUGGY]  Option  commandLine  =  options.values().iterator();  [CE]  illegal  start  of  expression  [FE]                    OptionException      [CONTEXT]        final  Map  tailMap  =  optionMap.tailMap(arg);  for  (final  Iterator  iter  =  tailMap.values().iterator();  iter.hasNext();)  {  final  Option  option  =  (Option)  iter.next();  if  (option.canProcess(commandLine,  arg))  {  return  true;  }      [BUGGY]  Option  commandLine  =  options.values().iterator();  [BUGGY]      }  if  (looksLikeOption(commandLine,  arg))  {  return  false;  }  if  (anonymous.size()  >  0)  {  return  true;  }  [CLASS]  GroupImpl  [METHOD]  canProcess  [RETURN_TYPE]  boolean  WriteableCommandLine  commandLine  String  arg  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  SortedMap  newOptionMap  optionMap  WriteableCommandLine  commandLine  Iterator  iter  List  anonymous  newAnonymous  options  Option  option  String  arg  description  name  Map  tailMap  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	137	137	1	replace	Option  commandLine  =  options.values().iterator();	  Option    commandLine    =    optionMap.values().iterator();    	non-compiled	[CE]  illegal  start  of  expression	25	None	replace
84	[BUG]  [BUGGY]  Option  commandLine  =  optionMap.keySet().iterator();  [CE]  illegal  start  of  expression  [FE]                      OptionException      [CONTEXT]        final  Map  tailMap  =  optionMap.tailMap(arg);  for  (final  Iterator  iter  =  tailMap.values().iterator();  iter.hasNext();)  {  final  Option  option  =  (Option)  iter.next();  if  (option.canProcess(commandLine,  arg))  {  return  true;  }      [BUGGY]  Option  commandLine  =  optionMap.keySet().iterator();  [BUGGY]      }  if  (looksLikeOption(commandLine,  arg))  {  return  false;  }  if  (anonymous.size()  >  0)  {  return  true;  }  [CLASS]  GroupImpl  [METHOD]  canProcess  [RETURN_TYPE]  boolean  WriteableCommandLine  commandLine  String  arg  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  SortedMap  newOptionMap  optionMap  WriteableCommandLine  commandLine  Iterator  iter  List  anonymous  newAnonymous  options  Option  option  String  arg  description  name  Map  tailMap  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	137	137	1	replace	Option  commandLine  =  optionMap.keySet().iterator();	  Option    commandLine    =    optionMap.values().iterator();    	non-compiled	[CE]  illegal  start  of  expression	25	None	replace
85	[BUG]  [BUGGY]  Option  commandLine  =  optionMap.commandLines().iterator();  [CE]  illegal  start  of  expression  [FE]                        OptionException      [CONTEXT]        final  Map  tailMap  =  optionMap.tailMap(arg);  for  (final  Iterator  iter  =  tailMap.values().iterator();  iter.hasNext();)  {  final  Option  option  =  (Option)  iter.next();  if  (option.canProcess(commandLine,  arg))  {  return  true;  }      [BUGGY]  Option  commandLine  =  optionMap.commandLines().iterator();  [BUGGY]      }  if  (looksLikeOption(commandLine,  arg))  {  return  false;  }  if  (anonymous.size()  >  0)  {  return  true;  }  [CLASS]  GroupImpl  [METHOD]  canProcess  [RETURN_TYPE]  boolean  WriteableCommandLine  commandLine  String  arg  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  SortedMap  newOptionMap  optionMap  WriteableCommandLine  commandLine  Iterator  iter  List  anonymous  newAnonymous  options  Option  option  String  arg  description  name  Map  tailMap  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	137	137	1	replace	Option  commandLine  =  optionMap.commandLines().iterator();	  Option    commandLine    =    optionMap.values().iterator();    	non-compiled	[CE]  illegal  start  of  expression	25	None	replace
86	[BUG]  [BUGGY]  final  ArrayList  <  Option>  newAnonymous  =(ArrayList  <  Option>)iter.next();  [CE]  illegal  start  of  expression  [FE]                OptionException      [CONTEXT]        final  Map  tailMap  =  optionMap.tailMap(arg);  for  (final  Iterator  iter  =  tailMap.values().iterator();  iter.hasNext();)  {  final  Option  option  =  (Option)  iter.next();  if  (option.canProcess(commandLine,  arg))  {  return  true;  }      [BUGGY]  final  ArrayList  <  Option>  newAnonymous  =(ArrayList  <  Option>)iter.next();  [BUGGY]        if  (looksLikeOption(commandLine,  arg))  {  return  false;  }  if  (anonymous.size()  >  0)  {  return  true;  }  [CLASS]  GroupImpl  [METHOD]  canProcess  [RETURN_TYPE]  boolean  WriteableCommandLine  commandLine  String  arg  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  SortedMap  newOptionMap  optionMap  WriteableCommandLine  commandLine  Iterator  iter  List  anonymous  newAnonymous  options  Option  option  String  arg  description  name  Map  tailMap  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	137	137	1	replace	final  ArrayList  <  Option>  newAnonymous  =(ArrayList  <  Option>)iter.next();	  final    Set    <    Option>    newAnonymous    =(Set    <    Option>)iter.next();    	non-compiled	[CE]  illegal  start  of  expression	1	None	replace
87	[BUG]  [BUGGY]  Option  option  =  option.createOption(commandLine);  [CE]  illegal  start  of  expression  [FE]            OptionException      [CONTEXT]        final  Map  tailMap  =  optionMap.tailMap(arg);  for  (final  Iterator  iter  =  tailMap.values().iterator();  iter.hasNext();)  {  final  Option  option  =  (Option)  iter.next();  if  (option.canProcess(commandLine,  arg))  {  return  true;  }      [BUGGY]  Option  option  =  option.createOption(commandLine);  [BUGGY]      }  if  (looksLikeOption(commandLine,  arg))  {  return  false;  }  if  (anonymous.size()  >  0)  {  return  true;  }  [CLASS]  GroupImpl  [METHOD]  canProcess  [RETURN_TYPE]  boolean  WriteableCommandLine  commandLine  String  arg  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  SortedMap  newOptionMap  optionMap  WriteableCommandLine  commandLine  Iterator  iter  List  anonymous  newAnonymous  options  Option  option  String  arg  description  name  Map  tailMap  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	137	137	1	replace	Option  option  =  option.createOption(commandLine);	  Option    option    =    option.createOption(arg);    	non-compiled	[CE]  illegal  start  of  expression	45	None	replace
88	[BUG]  [BUGGY]  Option  option  =  optionMap.createOption(arg);  [CE]  illegal  start  of  expression  [FE]              OptionException      [CONTEXT]        final  Map  tailMap  =  optionMap.tailMap(arg);  for  (final  Iterator  iter  =  tailMap.values().iterator();  iter.hasNext();)  {  final  Option  option  =  (Option)  iter.next();  if  (option.canProcess(commandLine,  arg))  {  return  true;  }      [BUGGY]  Option  option  =  optionMap.createOption(arg);  [BUGGY]      }  if  (looksLikeOption(commandLine,  arg))  {  return  false;  }  if  (anonymous.size()  >  0)  {  return  true;  }  [CLASS]  GroupImpl  [METHOD]  canProcess  [RETURN_TYPE]  boolean  WriteableCommandLine  commandLine  String  arg  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  SortedMap  newOptionMap  optionMap  WriteableCommandLine  commandLine  Iterator  iter  List  anonymous  newAnonymous  options  Option  option  String  arg  description  name  Map  tailMap  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	137	137	1	replace	Option  option  =  optionMap.createOption(arg);	  Option    option    =    option.createOption(arg);    	non-compiled	[CE]  illegal  start  of  expression	45	None	replace
89	[BUG]  [BUGGY]  Option  option  =  option.createOption(commandLine,  arg);  [CE]  illegal  start  of  expression  [FE]                OptionException      [CONTEXT]        final  Map  tailMap  =  optionMap.tailMap(arg);  for  (final  Iterator  iter  =  tailMap.values().iterator();  iter.hasNext();)  {  final  Option  option  =  (Option)  iter.next();  if  (option.canProcess(commandLine,  arg))  {  return  true;  }      [BUGGY]  Option  option  =  option.createOption(commandLine,  arg);  [BUGGY]      }  if  (looksLikeOption(commandLine,  arg))  {  return  false;  }  if  (anonymous.size()  >  0)  {  return  true;  }  [CLASS]  GroupImpl  [METHOD]  canProcess  [RETURN_TYPE]  boolean  WriteableCommandLine  commandLine  String  arg  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  SortedMap  newOptionMap  optionMap  WriteableCommandLine  commandLine  Iterator  iter  List  anonymous  newAnonymous  options  Option  option  String  arg  description  name  Map  tailMap  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	137	137	1	replace	Option  option  =  option.createOption(commandLine,  arg);	  Option    option    =    option.createOption(arg);    	non-compiled	[CE]  illegal  start  of  expression	45	None	replace
90	[BUG]  [BUGGY]  Option  option  =  option.createOption(arg,  description);  [CE]  illegal  start  of  expression  [FE]                  OptionException      [CONTEXT]        final  Map  tailMap  =  optionMap.tailMap(arg);  for  (final  Iterator  iter  =  tailMap.values().iterator();  iter.hasNext();)  {  final  Option  option  =  (Option)  iter.next();  if  (option.canProcess(commandLine,  arg))  {  return  true;  }      [BUGGY]  Option  option  =  option.createOption(arg,  description);  [BUGGY]      }  if  (looksLikeOption(commandLine,  arg))  {  return  false;  }  if  (anonymous.size()  >  0)  {  return  true;  }  [CLASS]  GroupImpl  [METHOD]  canProcess  [RETURN_TYPE]  boolean  WriteableCommandLine  commandLine  String  arg  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  SortedMap  newOptionMap  optionMap  WriteableCommandLine  commandLine  Iterator  iter  List  anonymous  newAnonymous  options  Option  option  String  arg  description  name  Map  tailMap  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	137	137	1	replace	Option  option  =  option.createOption(arg,  description);	  Option    option    =    option.createOption(arg);    	non-compiled	[CE]  illegal  start  of  expression	45	None	replace
91	[BUG]  [BUGGY]  final  Set  <  Option>  newAnonymous  =  options.values().iterator();  [CE]  illegal  start  of  expression  [FE]                OptionException      [CONTEXT]        final  Map  tailMap  =  optionMap.tailMap(arg);  for  (final  Iterator  iter  =  tailMap.values().iterator();  iter.hasNext();)  {  final  Option  option  =  (Option)  iter.next();  if  (option.canProcess(commandLine,  arg))  {  return  true;  }      [BUGGY]  final  Set  <  Option>  newAnonymous  =  options.values().iterator();  [BUGGY]        if  (looksLikeOption(commandLine,  arg))  {  return  false;  }  if  (anonymous.size()  >  0)  {  return  true;  }  [CLASS]  GroupImpl  [METHOD]  canProcess  [RETURN_TYPE]  boolean  WriteableCommandLine  commandLine  String  arg  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  SortedMap  newOptionMap  optionMap  WriteableCommandLine  commandLine  Iterator  iter  List  anonymous  newAnonymous  options  Option  option  String  arg  description  name  Map  tailMap  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	137	137	1	replace	final  Set  <  Option>  newAnonymous  =  options.values().iterator();	  final    Set    <    Option>    newAnonymous    =    optionMap.values().iterator();    	non-compiled	[CE]  illegal  start  of  expression	46	None	replace
92	[BUG]  [BUGGY]  final  Set  <  Option>  newAnonymous  =  optionMap.keySet().iterator();  [CE]  illegal  start  of  expression  [FE]                  OptionException      [CONTEXT]        final  Map  tailMap  =  optionMap.tailMap(arg);  for  (final  Iterator  iter  =  tailMap.values().iterator();  iter.hasNext();)  {  final  Option  option  =  (Option)  iter.next();  if  (option.canProcess(commandLine,  arg))  {  return  true;  }      [BUGGY]  final  Set  <  Option>  newAnonymous  =  optionMap.keySet().iterator();  [BUGGY]        if  (looksLikeOption(commandLine,  arg))  {  return  false;  }  if  (anonymous.size()  >  0)  {  return  true;  }  [CLASS]  GroupImpl  [METHOD]  canProcess  [RETURN_TYPE]  boolean  WriteableCommandLine  commandLine  String  arg  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  SortedMap  newOptionMap  optionMap  WriteableCommandLine  commandLine  Iterator  iter  List  anonymous  newAnonymous  options  Option  option  String  arg  description  name  Map  tailMap  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	137	137	1	replace	final  Set  <  Option>  newAnonymous  =  optionMap.keySet().iterator();	  final    Set    <    Option>    newAnonymous    =    optionMap.values().iterator();    	non-compiled	[CE]  illegal  start  of  expression	46	None	replace
93	[BUG]  [BUGGY]  final  Set  <  Option>  newAnonymous  =(Set  <  Option>)commandLine.values().iterator();  [CE]  illegal  start  of  expression  [FE]                  OptionException      [CONTEXT]        final  Map  tailMap  =  optionMap.tailMap(arg);  for  (final  Iterator  iter  =  tailMap.values().iterator();  iter.hasNext();)  {  final  Option  option  =  (Option)  iter.next();  if  (option.canProcess(commandLine,  arg))  {  return  true;  }      [BUGGY]  final  Set  <  Option>  newAnonymous  =(Set  <  Option>)commandLine.values().iterator();  [BUGGY]        if  (looksLikeOption(commandLine,  arg))  {  return  false;  }  if  (anonymous.size()  >  0)  {  return  true;  }  [CLASS]  GroupImpl  [METHOD]  canProcess  [RETURN_TYPE]  boolean  WriteableCommandLine  commandLine  String  arg  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  SortedMap  newOptionMap  optionMap  WriteableCommandLine  commandLine  Iterator  iter  List  anonymous  newAnonymous  options  Option  option  String  arg  description  name  Map  tailMap  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	137	137	1	replace	final  Set  <  Option>  newAnonymous  =(Set  <  Option>)commandLine.values().iterator();	  final    Set    <    Option>    newAnonymous    =(Set    <    Option>)optionMap.values().iterator();    	non-compiled	[CE]  illegal  start  of  expression	41	None	replace
94	[BUG]  [BUGGY]  final  List  <  Option>  newAnonymous  =  options.values().iterator();  if(newAnonymous!=  null)  {  return  false;  }  [CE]  illegal  start  of  expression  [FE]                OptionException      [CONTEXT]        final  Map  tailMap  =  optionMap.tailMap(arg);  for  (final  Iterator  iter  =  tailMap.values().iterator();  iter.hasNext();)  {  final  Option  option  =  (Option)  iter.next();  if  (option.canProcess(commandLine,  arg))  {  return  true;  }      [BUGGY]  final  List  <  Option>  newAnonymous  =  options.values().iterator();  if(newAnonymous!=  null)  {  return  false;  }  [BUGGY]      }  if  (looksLikeOption(commandLine,  arg))  {  return  false;  }  if  (anonymous.size()  >  0)  {  return  true;  }  [CLASS]  GroupImpl  [METHOD]  canProcess  [RETURN_TYPE]  boolean  WriteableCommandLine  commandLine  String  arg  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  SortedMap  newOptionMap  optionMap  WriteableCommandLine  commandLine  Iterator  iter  List  anonymous  newAnonymous  options  Option  option  String  arg  description  name  Map  tailMap  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	137	137	1	replace	final  List  <  Option>  newAnonymous  =  options.values().iterator();  if(newAnonymous!=  null)  {  return  false;  }	  List    <    Option>    newAnonymous    =    options.values().iterator();    if(newAnonymous!=    null)    {    return    false;    }    	non-compiled	[CE]  illegal  start  of  expression	16	None	replace
95	[BUG]  [BUGGY]  Set  <  Option>  newAnonymous  =  options.values().iterator();  if(newAnonymous!=  null)  {  return  false;  }  [CE]  illegal  start  of  expression  [FE]                  OptionException      [CONTEXT]        final  Map  tailMap  =  optionMap.tailMap(arg);  for  (final  Iterator  iter  =  tailMap.values().iterator();  iter.hasNext();)  {  final  Option  option  =  (Option)  iter.next();  if  (option.canProcess(commandLine,  arg))  {  return  true;  }      [BUGGY]  Set  <  Option>  newAnonymous  =  options.values().iterator();  if(newAnonymous!=  null)  {  return  false;  }  [BUGGY]      }  if  (looksLikeOption(commandLine,  arg))  {  return  false;  }  if  (anonymous.size()  >  0)  {  return  true;  }  [CLASS]  GroupImpl  [METHOD]  canProcess  [RETURN_TYPE]  boolean  WriteableCommandLine  commandLine  String  arg  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  SortedMap  newOptionMap  optionMap  WriteableCommandLine  commandLine  Iterator  iter  List  anonymous  newAnonymous  options  Option  option  String  arg  description  name  Map  tailMap  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	137	137	1	replace	Set  <  Option>  newAnonymous  =  options.values().iterator();  if(newAnonymous!=  null)  {  return  false;  }	  List    <    Option>    newAnonymous    =    options.values().iterator();    if(newAnonymous!=    null)    {    return    false;    }    	non-compiled	[CE]  illegal  start  of  expression	16	None	replace
96	[BUG]  [BUGGY]  Option  option  =  optionMap.get(commandLine);  [CE]  illegal  start  of  expression  [FE]            OptionException      [CONTEXT]        final  Map  tailMap  =  optionMap.tailMap(arg);  for  (final  Iterator  iter  =  tailMap.values().iterator();  iter.hasNext();)  {  final  Option  option  =  (Option)  iter.next();  if  (option.canProcess(commandLine,  arg))  {  return  true;  }      [BUGGY]  Option  option  =  optionMap.get(commandLine);  [BUGGY]      }  if  (looksLikeOption(commandLine,  arg))  {  return  false;  }  if  (anonymous.size()  >  0)  {  return  true;  }  [CLASS]  GroupImpl  [METHOD]  canProcess  [RETURN_TYPE]  boolean  WriteableCommandLine  commandLine  String  arg  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  SortedMap  newOptionMap  optionMap  WriteableCommandLine  commandLine  Iterator  iter  List  anonymous  newAnonymous  options  Option  option  String  arg  description  name  Map  tailMap  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	137	137	1	replace	Option  option  =  optionMap.get(commandLine);	  Option    option    =    optionMap.get(arg);    	non-compiled	[CE]  illegal  start  of  expression	50	None	replace
97	[BUG]  [BUGGY]  Option  option  =  options.get(arg);  [CE]  illegal  start  of  expression  [FE]              OptionException      [CONTEXT]        final  Map  tailMap  =  optionMap.tailMap(arg);  for  (final  Iterator  iter  =  tailMap.values().iterator();  iter.hasNext();)  {  final  Option  option  =  (Option)  iter.next();  if  (option.canProcess(commandLine,  arg))  {  return  true;  }      [BUGGY]  Option  option  =  options.get(arg);  [BUGGY]      }  if  (looksLikeOption(commandLine,  arg))  {  return  false;  }  if  (anonymous.size()  >  0)  {  return  true;  }  [CLASS]  GroupImpl  [METHOD]  canProcess  [RETURN_TYPE]  boolean  WriteableCommandLine  commandLine  String  arg  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  SortedMap  newOptionMap  optionMap  WriteableCommandLine  commandLine  Iterator  iter  List  anonymous  newAnonymous  options  Option  option  String  arg  description  name  Map  tailMap  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	137	137	1	replace	Option  option  =  options.get(arg);	  Option    option    =    optionMap.get(arg);    	non-compiled	[CE]  illegal  start  of  expression	50	None	replace
98	[BUG]  [BUGGY]  Option  option  =  optionMap.get(commandline);  [CE]  illegal  start  of  expression  [FE]                OptionException      [CONTEXT]        final  Map  tailMap  =  optionMap.tailMap(arg);  for  (final  Iterator  iter  =  tailMap.values().iterator();  iter.hasNext();)  {  final  Option  option  =  (Option)  iter.next();  if  (option.canProcess(commandLine,  arg))  {  return  true;  }      [BUGGY]  Option  option  =  optionMap.get(commandline);  [BUGGY]      }  if  (looksLikeOption(commandLine,  arg))  {  return  false;  }  if  (anonymous.size()  >  0)  {  return  true;  }  [CLASS]  GroupImpl  [METHOD]  canProcess  [RETURN_TYPE]  boolean  WriteableCommandLine  commandLine  String  arg  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  SortedMap  newOptionMap  optionMap  WriteableCommandLine  commandLine  Iterator  iter  List  anonymous  newAnonymous  options  Option  option  String  arg  description  name  Map  tailMap  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	137	137	1	replace	Option  option  =  optionMap.get(commandline);	  Option    option    =    optionMap.get(arg);    	non-compiled	[CE]  illegal  start  of  expression	50	None	replace
99	[BUG]  [BUGGY]  option  =(Option)iter.next();  [CE]  illegal  start  of  expression  [FE]              OptionException      [CONTEXT]        final  Map  tailMap  =  optionMap.tailMap(arg);  for  (final  Iterator  iter  =  tailMap.values().iterator();  iter.hasNext();)  {  final  Option  option  =  (Option)  iter.next();  if  (option.canProcess(commandLine,  arg))  {  return  true;  }      [BUGGY]  option  =(Option)iter.next();  [BUGGY]      }  if  (looksLikeOption(commandLine,  arg))  {  return  false;  }  if  (anonymous.size()  >  0)  {  return  true;  }  [CLASS]  GroupImpl  [METHOD]  canProcess  [RETURN_TYPE]  boolean  WriteableCommandLine  commandLine  String  arg  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  SortedMap  newOptionMap  optionMap  WriteableCommandLine  commandLine  Iterator  iter  List  anonymous  newAnonymous  options  Option  option  String  arg  description  name  Map  tailMap  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	137	137	1	replace	option  =(Option)iter.next();	  Option    option    =(Option)iter.next();    	non-compiled	[CE]  illegal  start  of  expression	6	None	replace
100	[BUG]  [BUGGY]  final  Iterator  iter  =  this.options.iterator();  [CE]  illegal  start  of  expression  [FE]                  OptionException      [CONTEXT]        final  Map  tailMap  =  optionMap.tailMap(arg);  for  (final  Iterator  iter  =  tailMap.values().iterator();  iter.hasNext();)  {  final  Option  option  =  (Option)  iter.next();  if  (option.canProcess(commandLine,  arg))  {  return  true;  }      [BUGGY]  final  Iterator  iter  =  this.options.iterator();  [BUGGY]      }  if  (looksLikeOption(commandLine,  arg))  {  return  false;  }  if  (anonymous.size()  >  0)  {  return  true;  }  [CLASS]  GroupImpl  [METHOD]  canProcess  [RETURN_TYPE]  boolean  WriteableCommandLine  commandLine  String  arg  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  SortedMap  newOptionMap  optionMap  WriteableCommandLine  commandLine  Iterator  iter  List  anonymous  newAnonymous  options  Option  option  String  arg  description  name  Map  tailMap  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	137	137	1	replace	final  Iterator  iter  =  this.options.iterator();	  final    Iterator    iter    =    options.iterator();    	non-compiled	[CE]  illegal  start  of  expression	24	None	replace
101	[BUG]  [BUGGY]  final  List  <  Option>  newAnonymous  =  option.values().iterator();  [CE]  illegal  start  of  expression  [FE]                  OptionException      [CONTEXT]        final  Map  tailMap  =  optionMap.tailMap(arg);  for  (final  Iterator  iter  =  tailMap.values().iterator();  iter.hasNext();)  {  final  Option  option  =  (Option)  iter.next();  if  (option.canProcess(commandLine,  arg))  {  return  true;  }      [BUGGY]  final  List  <  Option>  newAnonymous  =  option.values().iterator();  [BUGGY]        if  (looksLikeOption(commandLine,  arg))  {  return  false;  }  if  (anonymous.size()  >  0)  {  return  true;  }  [CLASS]  GroupImpl  [METHOD]  canProcess  [RETURN_TYPE]  boolean  WriteableCommandLine  commandLine  String  arg  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  SortedMap  newOptionMap  optionMap  WriteableCommandLine  commandLine  Iterator  iter  List  anonymous  newAnonymous  options  Option  option  String  arg  description  name  Map  tailMap  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	137	137	1	replace	final  List  <  Option>  newAnonymous  =  option.values().iterator();	  List    <    Option>    newAnonymous    =    option.values().iterator();    	non-compiled	[CE]  illegal  start  of  expression	35	None	replace
102	[BUG]  [BUGGY]  List  <  Option>  newAnonymous  =  option.names().iterator();  [CE]  illegal  start  of  expression  [FE]                    OptionException      [CONTEXT]        final  Map  tailMap  =  optionMap.tailMap(arg);  for  (final  Iterator  iter  =  tailMap.values().iterator();  iter.hasNext();)  {  final  Option  option  =  (Option)  iter.next();  if  (option.canProcess(commandLine,  arg))  {  return  true;  }      [BUGGY]  List  <  Option>  newAnonymous  =  option.names().iterator();  [BUGGY]        if  (looksLikeOption(commandLine,  arg))  {  return  false;  }  if  (anonymous.size()  >  0)  {  return  true;  }  [CLASS]  GroupImpl  [METHOD]  canProcess  [RETURN_TYPE]  boolean  WriteableCommandLine  commandLine  String  arg  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  SortedMap  newOptionMap  optionMap  WriteableCommandLine  commandLine  Iterator  iter  List  anonymous  newAnonymous  options  Option  option  String  arg  description  name  Map  tailMap  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	137	137	1	replace	List  <  Option>  newAnonymous  =  option.names().iterator();	  List    <    Option>    newAnonymous    =    option.values().iterator();    	non-compiled	[CE]  illegal  start  of  expression	35	None	replace
103	[BUG]  [BUGGY]  Option  commandLine  =  option.getCommandLine(commandLine,  description);  [CE]  illegal  start  of  expression  [FE]                      OptionException      [CONTEXT]        final  Map  tailMap  =  optionMap.tailMap(arg);  for  (final  Iterator  iter  =  tailMap.values().iterator();  iter.hasNext();)  {  final  Option  option  =  (Option)  iter.next();  if  (option.canProcess(commandLine,  arg))  {  return  true;  }      [BUGGY]  Option  commandLine  =  option.getCommandLine(commandLine,  description);  [BUGGY]        if  (looksLikeOption(commandLine,  arg))  {  return  false;  }  if  (anonymous.size()  >  0)  {  return  true;  }  [CLASS]  GroupImpl  [METHOD]  canProcess  [RETURN_TYPE]  boolean  WriteableCommandLine  commandLine  String  arg  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  SortedMap  newOptionMap  optionMap  WriteableCommandLine  commandLine  Iterator  iter  List  anonymous  newAnonymous  options  Option  option  String  arg  description  name  Map  tailMap  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	137	137	1	replace	Option  commandLine  =  option.getCommandLine(commandLine,  description);	  Option    commandLine    =    option.getCommandLine(commandLine);    	non-compiled	[CE]  illegal  start  of  expression	29	None	replace
104	[BUG]  [BUGGY]  Option  commandLine  =  option.getCommandLine(commandLine,  arg);  [CE]  illegal  start  of  expression  [FE]                        OptionException      [CONTEXT]        final  Map  tailMap  =  optionMap.tailMap(arg);  for  (final  Iterator  iter  =  tailMap.values().iterator();  iter.hasNext();)  {  final  Option  option  =  (Option)  iter.next();  if  (option.canProcess(commandLine,  arg))  {  return  true;  }      [BUGGY]  Option  commandLine  =  option.getCommandLine(commandLine,  arg);  [BUGGY]        if  (looksLikeOption(commandLine,  arg))  {  return  false;  }  if  (anonymous.size()  >  0)  {  return  true;  }  [CLASS]  GroupImpl  [METHOD]  canProcess  [RETURN_TYPE]  boolean  WriteableCommandLine  commandLine  String  arg  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  SortedMap  newOptionMap  optionMap  WriteableCommandLine  commandLine  Iterator  iter  List  anonymous  newAnonymous  options  Option  option  String  arg  description  name  Map  tailMap  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	137	137	1	replace	Option  commandLine  =  option.getCommandLine(commandLine,  arg);	  Option    commandLine    =    option.getCommandLine(commandLine);    	non-compiled	[CE]  illegal  start  of  expression	29	None	replace
105	[BUG]  [BUGGY]  Iterator  iter  =  optionMap.values().iterator();  iter.hasNext();)  {  final  Option  option  =(Option)iter.next();  if(option.canProcess(commandLine,  option))  {  return  false;  }  [CE]  illegal  start  of  expression  [FE]                  OptionException      [CONTEXT]        final  Map  tailMap  =  optionMap.tailMap(arg);  for  (final  Iterator  iter  =  tailMap.values().iterator();  iter.hasNext();)  {  final  Option  option  =  (Option)  iter.next();  if  (option.canProcess(commandLine,  arg))  {  return  true;  }      [BUGGY]  Iterator  iter  =  optionMap.values().iterator();  iter.hasNext();)  {  final  Option  option  =(Option)iter.next();  if(option.canProcess(commandLine,  option))  {  return  false;  }  [BUGGY]      }  if  (looksLikeOption(commandLine,  arg))  {  return  false;  }  if  (anonymous.size()  >  0)  {  return  true;  }  [CLASS]  GroupImpl  [METHOD]  canProcess  [RETURN_TYPE]  boolean  WriteableCommandLine  commandLine  String  arg  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  SortedMap  newOptionMap  optionMap  WriteableCommandLine  commandLine  Iterator  iter  List  anonymous  newAnonymous  options  Option  option  String  arg  description  name  Map  tailMap  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	137	137	1	replace	Iterator  iter  =  optionMap.values().iterator();  iter.hasNext();)  {  final  Option  option  =(Option)iter.next();  if(option.canProcess(commandLine,  option))  {  return  false;  }	  final    Iterator    iter    =    optionMap.values().iterator();    iter.hasNext();)    {    final    Option    option    =(Option)iter.next();    if(option.canProcess(commandLine,    option))    {    return    false;    }    	non-compiled	[CE]  illegal  start  of  expression	4	None	replace
106	[BUG]  [BUGGY]  Option  commandLine  =(Option)iter.getValue();  [CE]  illegal  start  of  expression  [FE]                    OptionException      [CONTEXT]        final  Map  tailMap  =  optionMap.tailMap(arg);  for  (final  Iterator  iter  =  tailMap.values().iterator();  iter.hasNext();)  {  final  Option  option  =  (Option)  iter.next();  if  (option.canProcess(commandLine,  arg))  {  return  true;  }      [BUGGY]  Option  commandLine  =(Option)iter.getValue();  [BUGGY]        if  (looksLikeOption(commandLine,  arg))  {  return  false;  }  if  (anonymous.size()  >  0)  {  return  true;  }  [CLASS]  GroupImpl  [METHOD]  canProcess  [RETURN_TYPE]  boolean  WriteableCommandLine  commandLine  String  arg  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  SortedMap  newOptionMap  optionMap  WriteableCommandLine  commandLine  Iterator  iter  List  anonymous  newAnonymous  options  Option  option  String  arg  description  name  Map  tailMap  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	137	137	1	replace	Option  commandLine  =(Option)iter.getValue();	  Option    commandLine    =(Option)iter.next();    	non-compiled	[CE]  illegal  start  of  expression	28	None	replace
107	[BUG]  [BUGGY]  List  <  Option>  newAnonymous  =  optionMap.newAnonymous(commandLine);  [CE]  illegal  start  of  expression  [FE]            OptionException      [CONTEXT]        final  Map  tailMap  =  optionMap.tailMap(arg);  for  (final  Iterator  iter  =  tailMap.values().iterator();  iter.hasNext();)  {  final  Option  option  =  (Option)  iter.next();  if  (option.canProcess(commandLine,  arg))  {  return  true;  }      [BUGGY]  List  <  Option>  newAnonymous  =  optionMap.newAnonymous(commandLine);  [BUGGY]        if  (looksLikeOption(commandLine,  arg))  {  return  false;  }  if  (anonymous.size()  >  0)  {  return  true;  }  [CLASS]  GroupImpl  [METHOD]  canProcess  [RETURN_TYPE]  boolean  WriteableCommandLine  commandLine  String  arg  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  SortedMap  newOptionMap  optionMap  WriteableCommandLine  commandLine  Iterator  iter  List  anonymous  newAnonymous  options  Option  option  String  arg  description  name  Map  tailMap  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	137	137	1	replace	List  <  Option>  newAnonymous  =  optionMap.newAnonymous(commandLine);	  List    <    Option>    newAnonymous    =    optionMap.newAnonymous();    	non-compiled	[CE]  illegal  start  of  expression	64	None	replace
108	[BUG]  [BUGGY]  List  <  Option>  newAnonymous  =  options.newAnonymous();  [CE]  illegal  start  of  expression  [FE]              OptionException      [CONTEXT]        final  Map  tailMap  =  optionMap.tailMap(arg);  for  (final  Iterator  iter  =  tailMap.values().iterator();  iter.hasNext();)  {  final  Option  option  =  (Option)  iter.next();  if  (option.canProcess(commandLine,  arg))  {  return  true;  }      [BUGGY]  List  <  Option>  newAnonymous  =  options.newAnonymous();  [BUGGY]        if  (looksLikeOption(commandLine,  arg))  {  return  false;  }  if  (anonymous.size()  >  0)  {  return  true;  }  [CLASS]  GroupImpl  [METHOD]  canProcess  [RETURN_TYPE]  boolean  WriteableCommandLine  commandLine  String  arg  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  SortedMap  newOptionMap  optionMap  WriteableCommandLine  commandLine  Iterator  iter  List  anonymous  newAnonymous  options  Option  option  String  arg  description  name  Map  tailMap  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	137	137	1	replace	List  <  Option>  newAnonymous  =  options.newAnonymous();	  List    <    Option>    newAnonymous    =    optionMap.newAnonymous();    	non-compiled	[CE]  illegal  start  of  expression	64	None	replace
109	[BUG]  [BUGGY]  final  List  <  Option>  newAnonymous  =  optionMap.newAnonymous();  [CE]  illegal  start  of  expression  [FE]                OptionException      [CONTEXT]        final  Map  tailMap  =  optionMap.tailMap(arg);  for  (final  Iterator  iter  =  tailMap.values().iterator();  iter.hasNext();)  {  final  Option  option  =  (Option)  iter.next();  if  (option.canProcess(commandLine,  arg))  {  return  true;  }      [BUGGY]  final  List  <  Option>  newAnonymous  =  optionMap.newAnonymous();  [BUGGY]        if  (looksLikeOption(commandLine,  arg))  {  return  false;  }  if  (anonymous.size()  >  0)  {  return  true;  }  [CLASS]  GroupImpl  [METHOD]  canProcess  [RETURN_TYPE]  boolean  WriteableCommandLine  commandLine  String  arg  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  SortedMap  newOptionMap  optionMap  WriteableCommandLine  commandLine  Iterator  iter  List  anonymous  newAnonymous  options  Option  option  String  arg  description  name  Map  tailMap  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	137	137	1	replace	final  List  <  Option>  newAnonymous  =  optionMap.newAnonymous();	  List    <    Option>    newAnonymous    =    optionMap.newAnonymous();    	non-compiled	[CE]  illegal  start  of  expression	64	None	replace
110	[BUG]  [BUGGY]  Option  option  =  optionMap.get(option);  [CE]  illegal  start  of  expression  [FE]            OptionException      [CONTEXT]        final  Map  tailMap  =  optionMap.tailMap(arg);  for  (final  Iterator  iter  =  tailMap.values().iterator();  iter.hasNext();)  {  final  Option  option  =  (Option)  iter.next();  if  (option.canProcess(commandLine,  arg))  {  return  true;  }      [BUGGY]  Option  option  =  optionMap.get(option);  [BUGGY]      }  if  (looksLikeOption(commandLine,  arg))  {  return  false;  }  if  (anonymous.size()  >  0)  {  return  true;  }  [CLASS]  GroupImpl  [METHOD]  canProcess  [RETURN_TYPE]  boolean  WriteableCommandLine  commandLine  String  arg  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  SortedMap  newOptionMap  optionMap  WriteableCommandLine  commandLine  Iterator  iter  List  anonymous  newAnonymous  options  Option  option  String  arg  description  name  Map  tailMap  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	137	137	1	replace	Option  option  =  optionMap.get(option);	  Option    option    =    optionMap.get(arg);    	non-compiled	[CE]  illegal  start  of  expression	50	None	replace
111	[BUG]  [BUGGY]  final  List  <  Option>  newAnonymous  =(List  <  Option>)optionMap.keySet().values().iterator();  [CE]  illegal  start  of  expression  [FE]                    OptionException      [CONTEXT]        final  Map  tailMap  =  optionMap.tailMap(arg);  for  (final  Iterator  iter  =  tailMap.values().iterator();  iter.hasNext();)  {  final  Option  option  =  (Option)  iter.next();  if  (option.canProcess(commandLine,  arg))  {  return  true;  }      [BUGGY]  final  List  <  Option>  newAnonymous  =(List  <  Option>)optionMap.keySet().values().iterator();  [BUGGY]        if  (looksLikeOption(commandLine,  arg))  {  return  false;  }  if  (anonymous.size()  >  0)  {  return  true;  }  [CLASS]  GroupImpl  [METHOD]  canProcess  [RETURN_TYPE]  boolean  WriteableCommandLine  commandLine  String  arg  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  SortedMap  newOptionMap  optionMap  WriteableCommandLine  commandLine  Iterator  iter  List  anonymous  newAnonymous  options  Option  option  String  arg  description  name  Map  tailMap  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	137	137	1	replace	final  List  <  Option>  newAnonymous  =(List  <  Option>)optionMap.keySet().values().iterator();	  final    List    <    Option>    newAnonymous    =(List    <    Option>)optionMap.keySet().iterator();    	non-compiled	[CE]  illegal  start  of  expression	60	None	replace
112	[BUG]  [BUGGY]  Iterator  <  Option>  iter  =  optionMap.values().iterator();  iter.hasNext();)  {  final  Option  option  =(Option)iter.next();  if(option.canProcess(commandLine,  arg))  {  return  true  [CE]  illegal  start  of  expression  [FE]                      OptionException      [CONTEXT]        final  Map  tailMap  =  optionMap.tailMap(arg);  for  (final  Iterator  iter  =  tailMap.values().iterator();  iter.hasNext();)  {  final  Option  option  =  (Option)  iter.next();  if  (option.canProcess(commandLine,  arg))  {  return  true;  }      [BUGGY]  Iterator  <  Option>  iter  =  optionMap.values().iterator();  iter.hasNext();)  {  final  Option  option  =(Option)iter.next();  if(option.canProcess(commandLine,  arg))  {  return  true  [BUGGY]      }  if  (looksLikeOption(commandLine,  arg))  {  return  false;  }  if  (anonymous.size()  >  0)  {  return  true;  }  [CLASS]  GroupImpl  [METHOD]  canProcess  [RETURN_TYPE]  boolean  WriteableCommandLine  commandLine  String  arg  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  SortedMap  newOptionMap  optionMap  WriteableCommandLine  commandLine  Iterator  iter  List  anonymous  newAnonymous  options  Option  option  String  arg  description  name  Map  tailMap  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	137	137	1	replace	Iterator  <  Option>  iter  =  optionMap.values().iterator();  iter.hasNext();)  {  final  Option  option  =(Option)iter.next();  if(option.canProcess(commandLine,  arg))  {  return  true	  final    Iterator    <    Option>    iter    =    options.values().iterator();    iter.hasNext();)    {    final    Option    option    =(Option)iter.next();    if(option.canProcess(commandLine,    arg))    {    return    true    	non-compiled	[CE]  illegal  start  of  expression	57	None	replace
113	[BUG]  [BUGGY]  final  Iterator  <  Option>  iter  =  options.values().iterator();  iter.hasNext();)  {  final  Option  option  =(Option)option.next();  if(option.canProcess(commandLine,  arg))  {  return  true  [CE]  illegal  start  of  expression  [FE]                        OptionException      [CONTEXT]        final  Map  tailMap  =  optionMap.tailMap(arg);  for  (final  Iterator  iter  =  tailMap.values().iterator();  iter.hasNext();)  {  final  Option  option  =  (Option)  iter.next();  if  (option.canProcess(commandLine,  arg))  {  return  true;  }      [BUGGY]  final  Iterator  <  Option>  iter  =  options.values().iterator();  iter.hasNext();)  {  final  Option  option  =(Option)option.next();  if(option.canProcess(commandLine,  arg))  {  return  true  [BUGGY]      }  if  (looksLikeOption(commandLine,  arg))  {  return  false;  }  if  (anonymous.size()  >  0)  {  return  true;  }  [CLASS]  GroupImpl  [METHOD]  canProcess  [RETURN_TYPE]  boolean  WriteableCommandLine  commandLine  String  arg  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  SortedMap  newOptionMap  optionMap  WriteableCommandLine  commandLine  Iterator  iter  List  anonymous  newAnonymous  options  Option  option  String  arg  description  name  Map  tailMap  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	137	137	1	replace	final  Iterator  <  Option>  iter  =  options.values().iterator();  iter.hasNext();)  {  final  Option  option  =(Option)option.next();  if(option.canProcess(commandLine,  arg))  {  return  true	  final    Iterator    <    Option>    iter    =    options.values().iterator();    iter.hasNext();)    {    final    Option    option    =(Option)iter.next();    if(option.canProcess(commandLine,    arg))    {    return    true    	non-compiled	[CE]  illegal  start  of  expression	57	None	replace
114	[BUG]  [BUGGY]  Option  commandLine  =  optionMap.getCommandLine(arg);  [CE]  illegal  start  of  expression  [FE]              OptionException      [CONTEXT]        final  Map  tailMap  =  optionMap.tailMap(arg);  for  (final  Iterator  iter  =  tailMap.values().iterator();  iter.hasNext();)  {  final  Option  option  =  (Option)  iter.next();  if  (option.canProcess(commandLine,  arg))  {  return  true;  }      [BUGGY]  Option  commandLine  =  optionMap.getCommandLine(arg);  [BUGGY]        if  (looksLikeOption(commandLine,  arg))  {  return  false;  }  if  (anonymous.size()  >  0)  {  return  true;  }  [CLASS]  GroupImpl  [METHOD]  canProcess  [RETURN_TYPE]  boolean  WriteableCommandLine  commandLine  String  arg  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  SortedMap  newOptionMap  optionMap  WriteableCommandLine  commandLine  Iterator  iter  List  anonymous  newAnonymous  options  Option  option  String  arg  description  name  Map  tailMap  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	137	137	1	replace	Option  commandLine  =  optionMap.getCommandLine(arg);	  Option    commandLine    =    option.getCommandLine(arg);    	non-compiled	[CE]  illegal  start  of  expression	48	None	replace
115	[BUG]  [BUGGY]  Option  option  =  option.getOption(commandLine,  name);  [CE]  illegal  start  of  expression  [FE]              OptionException      [CONTEXT]        final  Map  tailMap  =  optionMap.tailMap(arg);  for  (final  Iterator  iter  =  tailMap.values().iterator();  iter.hasNext();)  {  final  Option  option  =  (Option)  iter.next();  if  (option.canProcess(commandLine,  arg))  {  return  true;  }      [BUGGY]  Option  option  =  option.getOption(commandLine,  name);  [BUGGY]        if  (looksLikeOption(commandLine,  arg))  {  return  false;  }  if  (anonymous.size()  >  0)  {  return  true;  }  [CLASS]  GroupImpl  [METHOD]  canProcess  [RETURN_TYPE]  boolean  WriteableCommandLine  commandLine  String  arg  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  SortedMap  newOptionMap  optionMap  WriteableCommandLine  commandLine  Iterator  iter  List  anonymous  newAnonymous  options  Option  option  String  arg  description  name  Map  tailMap  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	137	137	1	replace	Option  option  =  option.getOption(commandLine,  name);	  Option    option    =    option.getOption(commandLine,    arg);    	non-compiled	[CE]  illegal  start  of  expression	44	None	replace
116	[BUG]  [BUGGY]  Option  option  =  option.getOption(commandLine,  null);  [CE]  illegal  start  of  expression  [FE]                OptionException      [CONTEXT]        final  Map  tailMap  =  optionMap.tailMap(arg);  for  (final  Iterator  iter  =  tailMap.values().iterator();  iter.hasNext();)  {  final  Option  option  =  (Option)  iter.next();  if  (option.canProcess(commandLine,  arg))  {  return  true;  }      [BUGGY]  Option  option  =  option.getOption(commandLine,  null);  [BUGGY]        if  (looksLikeOption(commandLine,  arg))  {  return  false;  }  if  (anonymous.size()  >  0)  {  return  true;  }  [CLASS]  GroupImpl  [METHOD]  canProcess  [RETURN_TYPE]  boolean  WriteableCommandLine  commandLine  String  arg  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  SortedMap  newOptionMap  optionMap  WriteableCommandLine  commandLine  Iterator  iter  List  anonymous  newAnonymous  options  Option  option  String  arg  description  name  Map  tailMap  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	137	137	1	replace	Option  option  =  option.getOption(commandLine,  null);	  Option    option    =    option.getOption(commandLine,    arg);    	non-compiled	[CE]  illegal  start  of  expression	44	None	replace
117	[BUG]  [BUGGY]  Option  commandLine  =  optionMap.get(commandLine  +  1);  [CE]  illegal  start  of  expression  [FE]              OptionException      [CONTEXT]        final  Map  tailMap  =  optionMap.tailMap(arg);  for  (final  Iterator  iter  =  tailMap.values().iterator();  iter.hasNext();)  {  final  Option  option  =  (Option)  iter.next();  if  (option.canProcess(commandLine,  arg))  {  return  true;  }      [BUGGY]  Option  commandLine  =  optionMap.get(commandLine  +  1);  [BUGGY]      }  if  (looksLikeOption(commandLine,  arg))  {  return  false;  }  if  (anonymous.size()  >  0)  {  return  true;  }  [CLASS]  GroupImpl  [METHOD]  canProcess  [RETURN_TYPE]  boolean  WriteableCommandLine  commandLine  String  arg  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  SortedMap  newOptionMap  optionMap  WriteableCommandLine  commandLine  Iterator  iter  List  anonymous  newAnonymous  options  Option  option  String  arg  description  name  Map  tailMap  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	137	137	1	replace	Option  commandLine  =  optionMap.get(commandLine  +  1);	  Option    commandLine    =    optionMap.get(commandLine);    	non-compiled	[CE]  illegal  start  of  expression	65	None	replace
118	[BUG]  [BUGGY]  ArrayList  <  Option>  newAnonymous  =(ArrayList  <  Option>)tailMap.values().iterator();  [CE]  illegal  start  of  expression  [FE]              OptionException      [CONTEXT]        final  Map  tailMap  =  optionMap.tailMap(arg);  for  (final  Iterator  iter  =  tailMap.values().iterator();  iter.hasNext();)  {  final  Option  option  =  (Option)  iter.next();  if  (option.canProcess(commandLine,  arg))  {  return  true;  }      [BUGGY]  ArrayList  <  Option>  newAnonymous  =(ArrayList  <  Option>)tailMap.values().iterator();  [BUGGY]        if  (looksLikeOption(commandLine,  arg))  {  return  false;  }  if  (anonymous.size()  >  0)  {  return  true;  }  [CLASS]  GroupImpl  [METHOD]  canProcess  [RETURN_TYPE]  boolean  WriteableCommandLine  commandLine  String  arg  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  SortedMap  newOptionMap  optionMap  WriteableCommandLine  commandLine  Iterator  iter  List  anonymous  newAnonymous  options  Option  option  String  arg  description  name  Map  tailMap  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	137	137	1	replace	ArrayList  <  Option>  newAnonymous  =(ArrayList  <  Option>)tailMap.values().iterator();	  ArrayList    <    Option>    newAnonymous    =(ArrayList    <    Option>)optionMap.values().iterator();    	non-compiled	[CE]  illegal  start  of  expression	61	None	replace
119	[BUG]  [BUGGY]  Option  commandLine  =  option.canProcess(commandLine,  name);  [CE]  illegal  start  of  expression  [FE]              OptionException      [CONTEXT]        final  Map  tailMap  =  optionMap.tailMap(arg);  for  (final  Iterator  iter  =  tailMap.values().iterator();  iter.hasNext();)  {  final  Option  option  =  (Option)  iter.next();  if  (option.canProcess(commandLine,  arg))  {  return  true;  }      [BUGGY]  Option  commandLine  =  option.canProcess(commandLine,  name);  [BUGGY]        if  (looksLikeOption(commandLine,  arg))  {  return  false;  }  if  (anonymous.size()  >  0)  {  return  true;  }  [CLASS]  GroupImpl  [METHOD]  canProcess  [RETURN_TYPE]  boolean  WriteableCommandLine  commandLine  String  arg  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  SortedMap  newOptionMap  optionMap  WriteableCommandLine  commandLine  Iterator  iter  List  anonymous  newAnonymous  options  Option  option  String  arg  description  name  Map  tailMap  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	137	137	1	replace	Option  commandLine  =  option.canProcess(commandLine,  name);	  Option    commandLine    =    option.canProcess(commandLine,    arg);    	non-compiled	[CE]  illegal  start  of  expression	34	None	replace
120	[BUG]  [BUGGY]  Option  commandLine  =(Option)option.next();  [CE]  illegal  start  of  expression  [FE]                    OptionException      [CONTEXT]        final  Map  tailMap  =  optionMap.tailMap(arg);  for  (final  Iterator  iter  =  tailMap.values().iterator();  iter.hasNext();)  {  final  Option  option  =  (Option)  iter.next();  if  (option.canProcess(commandLine,  arg))  {  return  true;  }      [BUGGY]  Option  commandLine  =(Option)option.next();  [BUGGY]        if  (looksLikeOption(commandLine,  arg))  {  return  false;  }  if  (anonymous.size()  >  0)  {  return  true;  }  [CLASS]  GroupImpl  [METHOD]  canProcess  [RETURN_TYPE]  boolean  WriteableCommandLine  commandLine  String  arg  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  SortedMap  newOptionMap  optionMap  WriteableCommandLine  commandLine  Iterator  iter  List  anonymous  newAnonymous  options  Option  option  String  arg  description  name  Map  tailMap  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	137	137	1	replace	Option  commandLine  =(Option)option.next();	  Option    commandLine    =(Option)iter.next();    	non-compiled	[CE]  illegal  start  of  expression	28	None	replace
121	[BUG]  [BUGGY]  Option  option  =  options.getOption(option);  [CE]  illegal  start  of  expression  [FE]            OptionException      [CONTEXT]        final  Map  tailMap  =  optionMap.tailMap(arg);  for  (final  Iterator  iter  =  tailMap.values().iterator();  iter.hasNext();)  {  final  Option  option  =  (Option)  iter.next();  if  (option.canProcess(commandLine,  arg))  {  return  true;  }      [BUGGY]  Option  option  =  options.getOption(option);  [BUGGY]        if  (looksLikeOption(commandLine,  arg))  {  return  false;  }  if  (anonymous.size()  >  0)  {  return  true;  }  [CLASS]  GroupImpl  [METHOD]  canProcess  [RETURN_TYPE]  boolean  WriteableCommandLine  commandLine  String  arg  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  SortedMap  newOptionMap  optionMap  WriteableCommandLine  commandLine  Iterator  iter  List  anonymous  newAnonymous  options  Option  option  String  arg  description  name  Map  tailMap  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	137	137	1	replace	Option  option  =  options.getOption(option);	  Option    option    =    options.getOption(arg);    	non-compiled	[CE]  illegal  start  of  expression	43	None	replace
122	[BUG]  [BUGGY]  List  <  Option>  anonymous  =(List  <  Option>)option.next();  [CE]  illegal  start  of  expression  [FE]            OptionException      [CONTEXT]        final  Map  tailMap  =  optionMap.tailMap(arg);  for  (final  Iterator  iter  =  tailMap.values().iterator();  iter.hasNext();)  {  final  Option  option  =  (Option)  iter.next();  if  (option.canProcess(commandLine,  arg))  {  return  true;  }      [BUGGY]  List  <  Option>  anonymous  =(List  <  Option>)option.next();  [BUGGY]        if  (looksLikeOption(commandLine,  arg))  {  return  false;  }  if  (anonymous.size()  >  0)  {  return  true;  }  [CLASS]  GroupImpl  [METHOD]  canProcess  [RETURN_TYPE]  boolean  WriteableCommandLine  commandLine  String  arg  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  SortedMap  newOptionMap  optionMap  WriteableCommandLine  commandLine  Iterator  iter  List  anonymous  newAnonymous  options  Option  option  String  arg  description  name  Map  tailMap  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	137	137	1	replace	List  <  Option>  anonymous  =(List  <  Option>)option.next();	  List    <    Option>    anonymous    =(List    <    Option>)iter.next();    	non-compiled	[CE]  illegal  start  of  expression	62	None	replace
123	[BUG]  [BUGGY]  final  List  <  Option>  newAnonymous  =(ArrayList  <  Option>)optionMap.values().iterator();  [CE]  illegal  start  of  expression  [FE]                    OptionException      [CONTEXT]        final  Map  tailMap  =  optionMap.tailMap(arg);  for  (final  Iterator  iter  =  tailMap.values().iterator();  iter.hasNext();)  {  final  Option  option  =  (Option)  iter.next();  if  (option.canProcess(commandLine,  arg))  {  return  true;  }      [BUGGY]  final  List  <  Option>  newAnonymous  =(ArrayList  <  Option>)optionMap.values().iterator();  [BUGGY]        if  (looksLikeOption(commandLine,  arg))  {  return  false;  }  if  (anonymous.size()  >  0)  {  return  true;  }  [CLASS]  GroupImpl  [METHOD]  canProcess  [RETURN_TYPE]  boolean  WriteableCommandLine  commandLine  String  arg  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  SortedMap  newOptionMap  optionMap  WriteableCommandLine  commandLine  Iterator  iter  List  anonymous  newAnonymous  options  Option  option  String  arg  description  name  Map  tailMap  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	137	137	1	replace	final  List  <  Option>  newAnonymous  =(ArrayList  <  Option>)optionMap.values().iterator();	  final    ArrayList    <    Option>    newAnonymous    =(ArrayList    <    Option>)optionMap.values().iterator();    	non-compiled	[CE]  illegal  start  of  expression	42	None	replace
124	[BUG]  [BUGGY]  Iterator  <  Option>  iter  =  optionMap.values().iterator();  iter.hasNext();)  {  final  Option  option  =(Option)iter.next();  if(option.canProcess(commandLine,  arg))  {  return  false;  }  [CE]  illegal  start  of  expression  [FE]              OptionException      [CONTEXT]        final  Map  tailMap  =  optionMap.tailMap(arg);  for  (final  Iterator  iter  =  tailMap.values().iterator();  iter.hasNext();)  {  final  Option  option  =  (Option)  iter.next();  if  (option.canProcess(commandLine,  arg))  {  return  true;  }      [BUGGY]  Iterator  <  Option>  iter  =  optionMap.values().iterator();  iter.hasNext();)  {  final  Option  option  =(Option)iter.next();  if(option.canProcess(commandLine,  arg))  {  return  false;  }  [BUGGY]      }  if  (looksLikeOption(commandLine,  arg))  {  return  false;  }  if  (anonymous.size()  >  0)  {  return  true;  }  [CLASS]  GroupImpl  [METHOD]  canProcess  [RETURN_TYPE]  boolean  WriteableCommandLine  commandLine  String  arg  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  SortedMap  newOptionMap  optionMap  WriteableCommandLine  commandLine  Iterator  iter  List  anonymous  newAnonymous  options  Option  option  String  arg  description  name  Map  tailMap  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	137	137	1	replace	Iterator  <  Option>  iter  =  optionMap.values().iterator();  iter.hasNext();)  {  final  Option  option  =(Option)iter.next();  if(option.canProcess(commandLine,  arg))  {  return  false;  }	  final    Iterator    <    Option>    iter    =    options.values().iterator();    iter.hasNext();)    {    final    Option    option    =(Option)iter.next();    if(option.canProcess(commandLine,    arg))    {    return    false;    }    	non-compiled	[CE]  illegal  start  of  expression	32	None	replace
125	[BUG]  [BUGGY]  ArrayList  <  Option>  newAnonymous  =(ArrayList  <  Option>)option.next();  [CE]  illegal  start  of  expression  [FE]              OptionException      [CONTEXT]        final  Map  tailMap  =  optionMap.tailMap(arg);  for  (final  Iterator  iter  =  tailMap.values().iterator();  iter.hasNext();)  {  final  Option  option  =  (Option)  iter.next();  if  (option.canProcess(commandLine,  arg))  {  return  true;  }      [BUGGY]  ArrayList  <  Option>  newAnonymous  =(ArrayList  <  Option>)option.next();  [BUGGY]        if  (looksLikeOption(commandLine,  arg))  {  return  false;  }  if  (anonymous.size()  >  0)  {  return  true;  }  [CLASS]  GroupImpl  [METHOD]  canProcess  [RETURN_TYPE]  boolean  WriteableCommandLine  commandLine  String  arg  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  SortedMap  newOptionMap  optionMap  WriteableCommandLine  commandLine  Iterator  iter  List  anonymous  newAnonymous  options  Option  option  String  arg  description  name  Map  tailMap  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	137	137	1	replace	ArrayList  <  Option>  newAnonymous  =(ArrayList  <  Option>)option.next();	  ArrayList    <    Option>    newAnonymous    =(ArrayList    <    Option>)iter.next();    	non-compiled	[CE]  illegal  start  of  expression	23	None	replace
126	[BUG]  [BUGGY]  if(option.canProcess(commandLine,  arg)&&  option.canProcess(commandLine,  arg))  {  return  false;  }  [CE]  illegal  start  of  expression  [FE]            OptionException      [CONTEXT]        final  Map  tailMap  =  optionMap.tailMap(arg);  for  (final  Iterator  iter  =  tailMap.values().iterator();  iter.hasNext();)  {  final  Option  option  =  (Option)  iter.next();  if  (option.canProcess(commandLine,  arg))  {  return  true;  }      [BUGGY]  if(option.canProcess(commandLine,  arg)&&  option.canProcess(commandLine,  arg))  {  return  false;  }  [BUGGY]      }  if  (looksLikeOption(commandLine,  arg))  {  return  false;  }  if  (anonymous.size()  >  0)  {  return  true;  }  [CLASS]  GroupImpl  [METHOD]  canProcess  [RETURN_TYPE]  boolean  WriteableCommandLine  commandLine  String  arg  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  SortedMap  newOptionMap  optionMap  WriteableCommandLine  commandLine  Iterator  iter  List  anonymous  newAnonymous  options  Option  option  String  arg  description  name  Map  tailMap  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	137	137	1	replace	if(option.canProcess(commandLine,  arg)&&  option.canProcess(commandLine,  arg))  {  return  false;  }	  if(option.canProcess(commandLine,    arg)||    option.canProcess(commandLine,    arg))    {    return    false;    }    	non-compiled	[CE]  illegal  start  of  expression	63	None	replace
127	[BUG]  [BUGGY]  final  Iterator  iter  =  optionMap.values().iterator();  iter.hasNext();)  {  final  Option  option  =(Option)iter.next();  if(option.canProcess(commandLine,  option))  {  return  false  [CE]  illegal  start  of  expression  [FE]              OptionException      [CONTEXT]        final  Map  tailMap  =  optionMap.tailMap(arg);  for  (final  Iterator  iter  =  tailMap.values().iterator();  iter.hasNext();)  {  final  Option  option  =  (Option)  iter.next();  if  (option.canProcess(commandLine,  arg))  {  return  true;  }      [BUGGY]  final  Iterator  iter  =  optionMap.values().iterator();  iter.hasNext();)  {  final  Option  option  =(Option)iter.next();  if(option.canProcess(commandLine,  option))  {  return  false  [BUGGY]      }  if  (looksLikeOption(commandLine,  arg))  {  return  false;  }  if  (anonymous.size()  >  0)  {  return  true;  }  [CLASS]  GroupImpl  [METHOD]  canProcess  [RETURN_TYPE]  boolean  WriteableCommandLine  commandLine  String  arg  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  SortedMap  newOptionMap  optionMap  WriteableCommandLine  commandLine  Iterator  iter  List  anonymous  newAnonymous  options  Option  option  String  arg  description  name  Map  tailMap  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	137	137	1	replace	final  Iterator  iter  =  optionMap.values().iterator();  iter.hasNext();)  {  final  Option  option  =(Option)iter.next();  if(option.canProcess(commandLine,  option))  {  return  false	  final    Iterator    iter    =    options.values().iterator();    iter.hasNext();)    {    final    Option    option    =(Option)iter.next();    if(option.canProcess(commandLine,    option))    {    return    false;    }    	non-compiled	[CE]  illegal  start  of  expression	2	None	replace
128	[BUG]  [BUGGY]  final  List  <  Option>  newAnonymous  =(List  <  Option>)option.getOptions().next();  [CE]  illegal  start  of  expression  [FE]                OptionException      [CONTEXT]        final  Map  tailMap  =  optionMap.tailMap(arg);  for  (final  Iterator  iter  =  tailMap.values().iterator();  iter.hasNext();)  {  final  Option  option  =  (Option)  iter.next();  if  (option.canProcess(commandLine,  arg))  {  return  true;  }      [BUGGY]  final  List  <  Option>  newAnonymous  =(List  <  Option>)option.getOptions().next();  [BUGGY]        if  (looksLikeOption(commandLine,  arg))  {  return  false;  }  if  (anonymous.size()  >  0)  {  return  true;  }  [CLASS]  GroupImpl  [METHOD]  canProcess  [RETURN_TYPE]  boolean  WriteableCommandLine  commandLine  String  arg  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  SortedMap  newOptionMap  optionMap  WriteableCommandLine  commandLine  Iterator  iter  List  anonymous  newAnonymous  options  Option  option  String  arg  description  name  Map  tailMap  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	137	137	1	replace	final  List  <  Option>  newAnonymous  =(List  <  Option>)option.getOptions().next();	  final    List    <    Option>    newAnonymous    =(List    <    Option>)option.next();    	non-compiled	[CE]  illegal  start  of  expression	51	None	replace
129	[BUG]  [BUGGY]  Option  option  =(Option)option.next();  [CE]  illegal  start  of  expression  [FE]              OptionException      [CONTEXT]        final  Map  tailMap  =  optionMap.tailMap(arg);  for  (final  Iterator  iter  =  tailMap.values().iterator();  iter.hasNext();)  {  final  Option  option  =  (Option)  iter.next();  if  (option.canProcess(commandLine,  arg))  {  return  true;  }      [BUGGY]  Option  option  =(Option)option.next();  [BUGGY]      }  if  (looksLikeOption(commandLine,  arg))  {  return  false;  }  if  (anonymous.size()  >  0)  {  return  true;  }  [CLASS]  GroupImpl  [METHOD]  canProcess  [RETURN_TYPE]  boolean  WriteableCommandLine  commandLine  String  arg  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  SortedMap  newOptionMap  optionMap  WriteableCommandLine  commandLine  Iterator  iter  List  anonymous  newAnonymous  options  Option  option  String  arg  description  name  Map  tailMap  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	137	137	1	replace	Option  option  =(Option)option.next();	  Option    option    =(Option)iter.next();    	non-compiled	[CE]  illegal  start  of  expression	6	None	replace
130	[BUG]  [BUGGY]  Option  option  =(Option)iter.getValue();  [CE]  illegal  start  of  expression  [FE]                OptionException      [CONTEXT]        final  Map  tailMap  =  optionMap.tailMap(arg);  for  (final  Iterator  iter  =  tailMap.values().iterator();  iter.hasNext();)  {  final  Option  option  =  (Option)  iter.next();  if  (option.canProcess(commandLine,  arg))  {  return  true;  }      [BUGGY]  Option  option  =(Option)iter.getValue();  [BUGGY]      }  if  (looksLikeOption(commandLine,  arg))  {  return  false;  }  if  (anonymous.size()  >  0)  {  return  true;  }  [CLASS]  GroupImpl  [METHOD]  canProcess  [RETURN_TYPE]  boolean  WriteableCommandLine  commandLine  String  arg  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  SortedMap  newOptionMap  optionMap  WriteableCommandLine  commandLine  Iterator  iter  List  anonymous  newAnonymous  options  Option  option  String  arg  description  name  Map  tailMap  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	137	137	1	replace	Option  option  =(Option)iter.getValue();	  Option    option    =(Option)iter.next();    	non-compiled	[CE]  illegal  start  of  expression	6	None	replace
131	[BUG]  [BUGGY]  Option  option  =  optionMap.getOption(option);  [CE]  illegal  start  of  expression  [FE]                OptionException      [CONTEXT]        final  Map  tailMap  =  optionMap.tailMap(arg);  for  (final  Iterator  iter  =  tailMap.values().iterator();  iter.hasNext();)  {  final  Option  option  =  (Option)  iter.next();  if  (option.canProcess(commandLine,  arg))  {  return  true;  }      [BUGGY]  Option  option  =  optionMap.getOption(option);  [BUGGY]      }  if  (looksLikeOption(commandLine,  arg))  {  return  false;  }  if  (anonymous.size()  >  0)  {  return  true;  }  [CLASS]  GroupImpl  [METHOD]  canProcess  [RETURN_TYPE]  boolean  WriteableCommandLine  commandLine  String  arg  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  SortedMap  newOptionMap  optionMap  WriteableCommandLine  commandLine  Iterator  iter  List  anonymous  newAnonymous  options  Option  option  String  arg  description  name  Map  tailMap  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	137	137	1	replace	Option  option  =  optionMap.getOption(option);	  Option    option    =    optionMap.getOption(arg);    	non-compiled	[CE]  illegal  start  of  expression	40	None	replace
132	[BUG]  [BUGGY]  final  List  <  Option>  anonymous  =(List  <  Option>)option.next();  [CE]  illegal  start  of  expression  [FE]                  OptionException      [CONTEXT]        final  Map  tailMap  =  optionMap.tailMap(arg);  for  (final  Iterator  iter  =  tailMap.values().iterator();  iter.hasNext();)  {  final  Option  option  =  (Option)  iter.next();  if  (option.canProcess(commandLine,  arg))  {  return  true;  }      [BUGGY]  final  List  <  Option>  anonymous  =(List  <  Option>)option.next();  [BUGGY]        if  (looksLikeOption(commandLine,  arg))  {  return  false;  }  if  (anonymous.size()  >  0)  {  return  true;  }  [CLASS]  GroupImpl  [METHOD]  canProcess  [RETURN_TYPE]  boolean  WriteableCommandLine  commandLine  String  arg  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  SortedMap  newOptionMap  optionMap  WriteableCommandLine  commandLine  Iterator  iter  List  anonymous  newAnonymous  options  Option  option  String  arg  description  name  Map  tailMap  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	137	137	1	replace	final  List  <  Option>  anonymous  =(List  <  Option>)option.next();	  final    List    <    Option>    anonymous    =(List    <    Option>)iter.next();    	non-compiled	[CE]  illegal  start  of  expression	52	None	replace
133	[BUG]  [BUGGY]  final  List  <  Option>  newAnonymous  =(List  <  Option>)optionMap.values().get(arg  +  1);  [CE]  illegal  start  of  expression  [FE]                  OptionException      [CONTEXT]        final  Map  tailMap  =  optionMap.tailMap(arg);  for  (final  Iterator  iter  =  tailMap.values().iterator();  iter.hasNext();)  {  final  Option  option  =  (Option)  iter.next();  if  (option.canProcess(commandLine,  arg))  {  return  true;  }      [BUGGY]  final  List  <  Option>  newAnonymous  =(List  <  Option>)optionMap.values().get(arg  +  1);  [BUGGY]        if  (looksLikeOption(commandLine,  arg))  {  return  false;  }  if  (anonymous.size()  >  0)  {  return  true;  }  [CLASS]  GroupImpl  [METHOD]  canProcess  [RETURN_TYPE]  boolean  WriteableCommandLine  commandLine  String  arg  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  SortedMap  newOptionMap  optionMap  WriteableCommandLine  commandLine  Iterator  iter  List  anonymous  newAnonymous  options  Option  option  String  arg  description  name  Map  tailMap  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	137	137	1	replace	final  List  <  Option>  newAnonymous  =(List  <  Option>)optionMap.values().get(arg  +  1);	  final    List    <    Option>    newAnonymous    =(List    <    Option>)optionMap.values().get(arg);    	non-compiled	[CE]  illegal  start  of  expression	59	None	replace
134	[BUG]  [BUGGY]  Option  commandLine  =  option.getArg1();  [CE]  illegal  start  of  expression  [FE]                        OptionException      [CONTEXT]        final  Map  tailMap  =  optionMap.tailMap(arg);  for  (final  Iterator  iter  =  tailMap.values().iterator();  iter.hasNext();)  {  final  Option  option  =  (Option)  iter.next();  if  (option.canProcess(commandLine,  arg))  {  return  true;  }      [BUGGY]  Option  commandLine  =  option.getArg1();  [BUGGY]        if  (looksLikeOption(commandLine,  arg))  {  return  false;  }  if  (anonymous.size()  >  0)  {  return  true;  }  [CLASS]  GroupImpl  [METHOD]  canProcess  [RETURN_TYPE]  boolean  WriteableCommandLine  commandLine  String  arg  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  SortedMap  newOptionMap  optionMap  WriteableCommandLine  commandLine  Iterator  iter  List  anonymous  newAnonymous  options  Option  option  String  arg  description  name  Map  tailMap  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	137	137	1	replace	Option  commandLine  =  option.getArg1();	  Option    commandLine    =    option.getArgument();    	non-compiled	[CE]  illegal  start  of  expression	30	None	replace
135	[BUG]  [BUGGY]  final  ArrayList  <  Option>  newAnonymous  =  optionMap.values().iterator();  [CE]  illegal  start  of  expression  [FE]                OptionException      [CONTEXT]        final  Map  tailMap  =  optionMap.tailMap(arg);  for  (final  Iterator  iter  =  tailMap.values().iterator();  iter.hasNext();)  {  final  Option  option  =  (Option)  iter.next();  if  (option.canProcess(commandLine,  arg))  {  return  true;  }      [BUGGY]  final  ArrayList  <  Option>  newAnonymous  =  optionMap.values().iterator();  [BUGGY]        if  (looksLikeOption(commandLine,  arg))  {  return  false;  }  if  (anonymous.size()  >  0)  {  return  true;  }  [CLASS]  GroupImpl  [METHOD]  canProcess  [RETURN_TYPE]  boolean  WriteableCommandLine  commandLine  String  arg  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  SortedMap  newOptionMap  optionMap  WriteableCommandLine  commandLine  Iterator  iter  List  anonymous  newAnonymous  options  Option  option  String  arg  description  name  Map  tailMap  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	137	137	1	replace	final  ArrayList  <  Option>  newAnonymous  =  optionMap.values().iterator();	  final    Set    <    Option>    newAnonymous    =    optionMap.values().iterator();    	non-compiled	[CE]  illegal  start  of  expression	46	None	replace
136	[BUG]  [BUGGY]  Iterator  <  Option>  iter  =  optionMap.values().iterator();  iter.hasNext();)  {  final  Option  option  =(Option)iter.next();  if(option.canProcess(commandLine,  option))  {  return  false;  }  [CE]  illegal  start  of  expression  [FE]                OptionException      [CONTEXT]        final  Map  tailMap  =  optionMap.tailMap(arg);  for  (final  Iterator  iter  =  tailMap.values().iterator();  iter.hasNext();)  {  final  Option  option  =  (Option)  iter.next();  if  (option.canProcess(commandLine,  arg))  {  return  true;  }      [BUGGY]  Iterator  <  Option>  iter  =  optionMap.values().iterator();  iter.hasNext();)  {  final  Option  option  =(Option)iter.next();  if(option.canProcess(commandLine,  option))  {  return  false;  }  [BUGGY]      }  if  (looksLikeOption(commandLine,  arg))  {  return  false;  }  if  (anonymous.size()  >  0)  {  return  true;  }  [CLASS]  GroupImpl  [METHOD]  canProcess  [RETURN_TYPE]  boolean  WriteableCommandLine  commandLine  String  arg  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  SortedMap  newOptionMap  optionMap  WriteableCommandLine  commandLine  Iterator  iter  List  anonymous  newAnonymous  options  Option  option  String  arg  description  name  Map  tailMap  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	137	137	1	replace	Iterator  <  Option>  iter  =  optionMap.values().iterator();  iter.hasNext();)  {  final  Option  option  =(Option)iter.next();  if(option.canProcess(commandLine,  option))  {  return  false;  }	  final    Iterator    <    Option>    iter    =    options.values().iterator();    iter.hasNext();)    {    final    Option    option    =(Option)iter.next();    if(option.canProcess(commandLine,    option))    {    return    false;    }    	non-compiled	[CE]  illegal  start  of  expression	3	None	replace
137	[BUG]  [BUGGY]  final  List  <  Option>  newAnonymous  =(ArrayList  <  Option>)iter.next();  [CE]  illegal  start  of  expression  [FE]                OptionException      [CONTEXT]        final  Map  tailMap  =  optionMap.tailMap(arg);  for  (final  Iterator  iter  =  tailMap.values().iterator();  iter.hasNext();)  {  final  Option  option  =  (Option)  iter.next();  if  (option.canProcess(commandLine,  arg))  {  return  true;  }      [BUGGY]  final  List  <  Option>  newAnonymous  =(ArrayList  <  Option>)iter.next();  [BUGGY]        if  (looksLikeOption(commandLine,  arg))  {  return  false;  }  if  (anonymous.size()  >  0)  {  return  true;  }  [CLASS]  GroupImpl  [METHOD]  canProcess  [RETURN_TYPE]  boolean  WriteableCommandLine  commandLine  String  arg  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  SortedMap  newOptionMap  optionMap  WriteableCommandLine  commandLine  Iterator  iter  List  anonymous  newAnonymous  options  Option  option  String  arg  description  name  Map  tailMap  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	137	137	1	replace	final  List  <  Option>  newAnonymous  =(ArrayList  <  Option>)iter.next();	  final    Set    <    Option>    newAnonymous    =(Set    <    Option>)iter.next();    	non-compiled	[CE]  illegal  start  of  expression	1	None	replace
138	[BUG]  [BUGGY]  List  <  Option>  newAnonymous  =(List  <  Option>)option.values().iterator();  [CE]  illegal  start  of  expression  [FE]                OptionException      [CONTEXT]        final  Map  tailMap  =  optionMap.tailMap(arg);  for  (final  Iterator  iter  =  tailMap.values().iterator();  iter.hasNext();)  {  final  Option  option  =  (Option)  iter.next();  if  (option.canProcess(commandLine,  arg))  {  return  true;  }      [BUGGY]  List  <  Option>  newAnonymous  =(List  <  Option>)option.values().iterator();  [BUGGY]        if  (looksLikeOption(commandLine,  arg))  {  return  false;  }  if  (anonymous.size()  >  0)  {  return  true;  }  [CLASS]  GroupImpl  [METHOD]  canProcess  [RETURN_TYPE]  boolean  WriteableCommandLine  commandLine  String  arg  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  SortedMap  newOptionMap  optionMap  WriteableCommandLine  commandLine  Iterator  iter  List  anonymous  newAnonymous  options  Option  option  String  arg  description  name  Map  tailMap  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	137	137	1	replace	List  <  Option>  newAnonymous  =(List  <  Option>)option.values().iterator();	  List    <    Option>    newAnonymous    =(List    <    Option>)commandLine.values().iterator();    	non-compiled	[CE]  illegal  start  of  expression	8	None	replace
139	[BUG]  [BUGGY]  ArrayList  <  Option>  anonymous  =(ArrayList  <  Option>)iter.next();  [CE]  illegal  start  of  expression  [FE]              OptionException      [CONTEXT]        final  Map  tailMap  =  optionMap.tailMap(arg);  for  (final  Iterator  iter  =  tailMap.values().iterator();  iter.hasNext();)  {  final  Option  option  =  (Option)  iter.next();  if  (option.canProcess(commandLine,  arg))  {  return  true;  }      [BUGGY]  ArrayList  <  Option>  anonymous  =(ArrayList  <  Option>)iter.next();  [BUGGY]        if  (looksLikeOption(commandLine,  arg))  {  return  false;  }  if  (anonymous.size()  >  0)  {  return  true;  }  [CLASS]  GroupImpl  [METHOD]  canProcess  [RETURN_TYPE]  boolean  WriteableCommandLine  commandLine  String  arg  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  SortedMap  newOptionMap  optionMap  WriteableCommandLine  commandLine  Iterator  iter  List  anonymous  newAnonymous  options  Option  option  String  arg  description  name  Map  tailMap  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	137	137	1	replace	ArrayList  <  Option>  anonymous  =(ArrayList  <  Option>)iter.next();	  ArrayList    <    Option>    newAnonymous    =(ArrayList    <    Option>)iter.next();    	non-compiled	[CE]  illegal  start  of  expression	23	None	replace
140	[BUG]  [BUGGY]  List  <  Option>  newAnonymous  =  option.newAnonymous();  [CE]  illegal  start  of  expression  [FE]                  OptionException      [CONTEXT]        final  Map  tailMap  =  optionMap.tailMap(arg);  for  (final  Iterator  iter  =  tailMap.values().iterator();  iter.hasNext();)  {  final  Option  option  =  (Option)  iter.next();  if  (option.canProcess(commandLine,  arg))  {  return  true;  }      [BUGGY]  List  <  Option>  newAnonymous  =  option.newAnonymous();  [BUGGY]        if  (looksLikeOption(commandLine,  arg))  {  return  false;  }  if  (anonymous.size()  >  0)  {  return  true;  }  [CLASS]  GroupImpl  [METHOD]  canProcess  [RETURN_TYPE]  boolean  WriteableCommandLine  commandLine  String  arg  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  SortedMap  newOptionMap  optionMap  WriteableCommandLine  commandLine  Iterator  iter  List  anonymous  newAnonymous  options  Option  option  String  arg  description  name  Map  tailMap  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	137	137	1	replace	List  <  Option>  newAnonymous  =  option.newAnonymous();	  List    <    Option>    newAnonymous    =    option.values().iterator();    	non-compiled	[CE]  illegal  start  of  expression	35	None	replace
141	[BUG]  [BUGGY]  List  <  Option>  newAnonymous  =  option.commandLines().iterator();  [CE]  illegal  start  of  expression  [FE]                    OptionException      [CONTEXT]        final  Map  tailMap  =  optionMap.tailMap(arg);  for  (final  Iterator  iter  =  tailMap.values().iterator();  iter.hasNext();)  {  final  Option  option  =  (Option)  iter.next();  if  (option.canProcess(commandLine,  arg))  {  return  true;  }      [BUGGY]  List  <  Option>  newAnonymous  =  option.commandLines().iterator();  [BUGGY]        if  (looksLikeOption(commandLine,  arg))  {  return  false;  }  if  (anonymous.size()  >  0)  {  return  true;  }  [CLASS]  GroupImpl  [METHOD]  canProcess  [RETURN_TYPE]  boolean  WriteableCommandLine  commandLine  String  arg  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  SortedMap  newOptionMap  optionMap  WriteableCommandLine  commandLine  Iterator  iter  List  anonymous  newAnonymous  options  Option  option  String  arg  description  name  Map  tailMap  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	137	137	1	replace	List  <  Option>  newAnonymous  =  option.commandLines().iterator();	  List    <    Option>    newAnonymous    =    option.values().iterator();    	non-compiled	[CE]  illegal  start  of  expression	35	None	replace
142	[BUG]  [BUGGY]  final  Iterator  iter  =  optionMap.values().iterator();  iter.hasNext();)  {  final  Option  commandLine  =(Option)iter.next();  if(option.canProcess(commandLine,  arg))  {  return  true  [CE]  illegal  start  of  expression  [FE]                    OptionException      [CONTEXT]        final  Map  tailMap  =  optionMap.tailMap(arg);  for  (final  Iterator  iter  =  tailMap.values().iterator();  iter.hasNext();)  {  final  Option  option  =  (Option)  iter.next();  if  (option.canProcess(commandLine,  arg))  {  return  true;  }      [BUGGY]  final  Iterator  iter  =  optionMap.values().iterator();  iter.hasNext();)  {  final  Option  commandLine  =(Option)iter.next();  if(option.canProcess(commandLine,  arg))  {  return  true  [BUGGY]      }  if  (looksLikeOption(commandLine,  arg))  {  return  false;  }  if  (anonymous.size()  >  0)  {  return  true;  }  [CLASS]  GroupImpl  [METHOD]  canProcess  [RETURN_TYPE]  boolean  WriteableCommandLine  commandLine  String  arg  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  SortedMap  newOptionMap  optionMap  WriteableCommandLine  commandLine  Iterator  iter  List  anonymous  newAnonymous  options  Option  option  String  arg  description  name  Map  tailMap  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	137	137	1	replace	final  Iterator  iter  =  optionMap.values().iterator();  iter.hasNext();)  {  final  Option  commandLine  =(Option)iter.next();  if(option.canProcess(commandLine,  arg))  {  return  true	  final    Iterator    iter    =    optionMap.values().iterator();    iter.hasNext();)    {    final    Option    option    =(Option)iter.next();    if(option.canProcess(commandLine,    arg))    {    return    true    	non-compiled	[CE]  illegal  start  of  expression	56	None	replace
143	[BUG]  [BUGGY]  final  Iterator  iter  =  optionMap.values().iterator();  iter.hasNext();)  {  final  Option  commandLine  =(Option)iter.next();  [CE]  illegal  start  of  expression  [FE]                      OptionException      [CONTEXT]        final  Map  tailMap  =  optionMap.tailMap(arg);  for  (final  Iterator  iter  =  tailMap.values().iterator();  iter.hasNext();)  {  final  Option  option  =  (Option)  iter.next();  if  (option.canProcess(commandLine,  arg))  {  return  true;  }      [BUGGY]  final  Iterator  iter  =  optionMap.values().iterator();  iter.hasNext();)  {  final  Option  commandLine  =(Option)iter.next();  [BUGGY]      }  if  (looksLikeOption(commandLine,  arg))  {  return  false;  }  if  (anonymous.size()  >  0)  {  return  true;  }  [CLASS]  GroupImpl  [METHOD]  canProcess  [RETURN_TYPE]  boolean  WriteableCommandLine  commandLine  String  arg  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  SortedMap  newOptionMap  optionMap  WriteableCommandLine  commandLine  Iterator  iter  List  anonymous  newAnonymous  options  Option  option  String  arg  description  name  Map  tailMap  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	137	137	1	replace	final  Iterator  iter  =  optionMap.values().iterator();  iter.hasNext();)  {  final  Option  commandLine  =(Option)iter.next();	  final    Iterator    iter    =    optionMap.values().iterator();    iter.hasNext();)    {    final    Option    option    =(Option)iter.next();    if(option.canProcess(commandLine,    arg))    {    return    true    	non-compiled	[CE]  illegal  start  of  expression	56	None	replace
144	[BUG]  [BUGGY]  final  Iterator  iter  =  optionMap.values().iterator();  iter.hasNext();)  {  final  Option  commandLine  =(Option)iter.next();  if(option.canProcess(commandLine,  arg))  {  return  true;  }  [CE]  illegal  start  of  expression  [FE]                          OptionException      [CONTEXT]        final  Map  tailMap  =  optionMap.tailMap(arg);  for  (final  Iterator  iter  =  tailMap.values().iterator();  iter.hasNext();)  {  final  Option  option  =  (Option)  iter.next();  if  (option.canProcess(commandLine,  arg))  {  return  true;  }      [BUGGY]  final  Iterator  iter  =  optionMap.values().iterator();  iter.hasNext();)  {  final  Option  commandLine  =(Option)iter.next();  if(option.canProcess(commandLine,  arg))  {  return  true;  }  [BUGGY]      }  if  (looksLikeOption(commandLine,  arg))  {  return  false;  }  if  (anonymous.size()  >  0)  {  return  true;  }  [CLASS]  GroupImpl  [METHOD]  canProcess  [RETURN_TYPE]  boolean  WriteableCommandLine  commandLine  String  arg  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  SortedMap  newOptionMap  optionMap  WriteableCommandLine  commandLine  Iterator  iter  List  anonymous  newAnonymous  options  Option  option  String  arg  description  name  Map  tailMap  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	137	137	1	replace	final  Iterator  iter  =  optionMap.values().iterator();  iter.hasNext();)  {  final  Option  commandLine  =(Option)iter.next();  if(option.canProcess(commandLine,  arg))  {  return  true;  }	  final    Iterator    iter    =    optionMap.values().iterator();    iter.hasNext();)    {    final    Option    option    =(Option)iter.next();    if(option.canProcess(commandLine,    arg))    {    return    true;    }    	non-compiled	[CE]  illegal  start  of  expression	21	None	replace
145	[BUG]  [BUGGY]  final  Iterator  iter  =  optionMap.values().iterator();  iter.hasNext();)  {  final  Option  commandLine  =(Option)iter.next();  if(option.canProcess(commandLine,  option))  {  return  false;  }  [CE]  illegal  start  of  expression  [FE]                  OptionException      [CONTEXT]        final  Map  tailMap  =  optionMap.tailMap(arg);  for  (final  Iterator  iter  =  tailMap.values().iterator();  iter.hasNext();)  {  final  Option  option  =  (Option)  iter.next();  if  (option.canProcess(commandLine,  arg))  {  return  true;  }      [BUGGY]  final  Iterator  iter  =  optionMap.values().iterator();  iter.hasNext();)  {  final  Option  commandLine  =(Option)iter.next();  if(option.canProcess(commandLine,  option))  {  return  false;  }  [BUGGY]      }  if  (looksLikeOption(commandLine,  arg))  {  return  false;  }  if  (anonymous.size()  >  0)  {  return  true;  }  [CLASS]  GroupImpl  [METHOD]  canProcess  [RETURN_TYPE]  boolean  WriteableCommandLine  commandLine  String  arg  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  SortedMap  newOptionMap  optionMap  WriteableCommandLine  commandLine  Iterator  iter  List  anonymous  newAnonymous  options  Option  option  String  arg  description  name  Map  tailMap  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	137	137	1	replace	final  Iterator  iter  =  optionMap.values().iterator();  iter.hasNext();)  {  final  Option  commandLine  =(Option)iter.next();  if(option.canProcess(commandLine,  option))  {  return  false;  }	  final    Iterator    iter    =    optionMap.values().iterator();    iter.hasNext();)    {    final    Option    option    =(Option)iter.next();    if(option.canProcess(commandLine,    option))    {    return    false;    }    	non-compiled	[CE]  illegal  start  of  expression	4	None	replace
146	[BUG]  [BUGGY]  final  Iterator  iter  =  options.commandLines().iterator();  [CE]  illegal  start  of  expression  [FE]                  OptionException      [CONTEXT]        final  Map  tailMap  =  optionMap.tailMap(arg);  for  (final  Iterator  iter  =  tailMap.values().iterator();  iter.hasNext();)  {  final  Option  option  =  (Option)  iter.next();  if  (option.canProcess(commandLine,  arg))  {  return  true;  }      [BUGGY]  final  Iterator  iter  =  options.commandLines().iterator();  [BUGGY]      }  if  (looksLikeOption(commandLine,  arg))  {  return  false;  }  if  (anonymous.size()  >  0)  {  return  true;  }  [CLASS]  GroupImpl  [METHOD]  canProcess  [RETURN_TYPE]  boolean  WriteableCommandLine  commandLine  String  arg  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  SortedMap  newOptionMap  optionMap  WriteableCommandLine  commandLine  Iterator  iter  List  anonymous  newAnonymous  options  Option  option  String  arg  description  name  Map  tailMap  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	137	137	1	replace	final  Iterator  iter  =  options.commandLines().iterator();	  final    Iterator    iter    =    options.values().iterator();    	non-compiled	[CE]  illegal  start  of  expression	53	None	replace
147	[BUG]  [BUGGY]  List  <  Option>  anonymous  =(List  <  Option>)optionMap.values().iterator();  [CE]  illegal  start  of  expression  [FE]              OptionException      [CONTEXT]        final  Map  tailMap  =  optionMap.tailMap(arg);  for  (final  Iterator  iter  =  tailMap.values().iterator();  iter.hasNext();)  {  final  Option  option  =  (Option)  iter.next();  if  (option.canProcess(commandLine,  arg))  {  return  true;  }      [BUGGY]  List  <  Option>  anonymous  =(List  <  Option>)optionMap.values().iterator();  [BUGGY]        if  (looksLikeOption(commandLine,  arg))  {  return  false;  }  if  (anonymous.size()  >  0)  {  return  true;  }  [CLASS]  GroupImpl  [METHOD]  canProcess  [RETURN_TYPE]  boolean  WriteableCommandLine  commandLine  String  arg  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  SortedMap  newOptionMap  optionMap  WriteableCommandLine  commandLine  Iterator  iter  List  anonymous  newAnonymous  options  Option  option  String  arg  description  name  Map  tailMap  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	137	137	1	replace	List  <  Option>  anonymous  =(List  <  Option>)optionMap.values().iterator();	  ArrayList    <    Option>    newAnonymous    =(ArrayList    <    Option>)optionMap.values().iterator();    	non-compiled	[CE]  illegal  start  of  expression	61	None	replace
148	[BUG]  [BUGGY]  final  Iterator  <  Option>  iter  =  options.values().iterator();  iter.hasNext();)  {  final  Option  option  =(Option)iter.next();  [CE]  illegal  start  of  expression  [FE]                      OptionException      [CONTEXT]        final  Map  tailMap  =  optionMap.tailMap(arg);  for  (final  Iterator  iter  =  tailMap.values().iterator();  iter.hasNext();)  {  final  Option  option  =  (Option)  iter.next();  if  (option.canProcess(commandLine,  arg))  {  return  true;  }      [BUGGY]  final  Iterator  <  Option>  iter  =  options.values().iterator();  iter.hasNext();)  {  final  Option  option  =(Option)iter.next();  [BUGGY]      }  if  (looksLikeOption(commandLine,  arg))  {  return  false;  }  if  (anonymous.size()  >  0)  {  return  true;  }  [CLASS]  GroupImpl  [METHOD]  canProcess  [RETURN_TYPE]  boolean  WriteableCommandLine  commandLine  String  arg  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  SortedMap  newOptionMap  optionMap  WriteableCommandLine  commandLine  Iterator  iter  List  anonymous  newAnonymous  options  Option  option  String  arg  description  name  Map  tailMap  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	137	137	1	replace	final  Iterator  <  Option>  iter  =  options.values().iterator();  iter.hasNext();)  {  final  Option  option  =(Option)iter.next();	  final    Iterator    <    Option>    iter    =    options.values().iterator();    iter.hasNext();)    {    final    Option    option    =(Option)iter.next();    if(option.canProcess(commandLine,    arg))    {    return    true    	non-compiled	[CE]  illegal  start  of  expression	57	None	replace
149	[BUG]  [BUGGY]  final  Iterator  iter  =  optionMap.values().iterator();  iter.hasNext();)  {  final  Option  commandLine  =(Option)iter.next();  if(!option.canProcess(commandLine,  option))  {  return  false;  }  [CE]  illegal  start  of  expression  [FE]                    OptionException      [CONTEXT]        final  Map  tailMap  =  optionMap.tailMap(arg);  for  (final  Iterator  iter  =  tailMap.values().iterator();  iter.hasNext();)  {  final  Option  option  =  (Option)  iter.next();  if  (option.canProcess(commandLine,  arg))  {  return  true;  }      [BUGGY]  final  Iterator  iter  =  optionMap.values().iterator();  iter.hasNext();)  {  final  Option  commandLine  =(Option)iter.next();  if(!option.canProcess(commandLine,  option))  {  return  false;  }  [BUGGY]      }  if  (looksLikeOption(commandLine,  arg))  {  return  false;  }  if  (anonymous.size()  >  0)  {  return  true;  }  [CLASS]  GroupImpl  [METHOD]  canProcess  [RETURN_TYPE]  boolean  WriteableCommandLine  commandLine  String  arg  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  SortedMap  newOptionMap  optionMap  WriteableCommandLine  commandLine  Iterator  iter  List  anonymous  newAnonymous  options  Option  option  String  arg  description  name  Map  tailMap  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	137	137	1	replace	final  Iterator  iter  =  optionMap.values().iterator();  iter.hasNext();)  {  final  Option  commandLine  =(Option)iter.next();  if(!option.canProcess(commandLine,  option))  {  return  false;  }	  final    Iterator    iter    =    optionMap.values().iterator();    iter.hasNext();)    {    final    Option    option    =(Option)iter.next();    if(!option.canProcess(commandLine,    option))    {    return    false;    }    	non-compiled	[CE]  illegal  start  of  expression	14	None	replace
150	[BUG]  [BUGGY]  final  Iterator  iter  =  optionMap.values().iterator();  iter.hasNext();)  {  final  Option  commandLine  =(Option)iter.next();  if(option.canProcess(commandLine,  arg))  {  return  false;  }  [CE]  illegal  start  of  expression  [FE]                OptionException      [CONTEXT]        final  Map  tailMap  =  optionMap.tailMap(arg);  for  (final  Iterator  iter  =  tailMap.values().iterator();  iter.hasNext();)  {  final  Option  option  =  (Option)  iter.next();  if  (option.canProcess(commandLine,  arg))  {  return  true;  }      [BUGGY]  final  Iterator  iter  =  optionMap.values().iterator();  iter.hasNext();)  {  final  Option  commandLine  =(Option)iter.next();  if(option.canProcess(commandLine,  arg))  {  return  false;  }  [BUGGY]      }  if  (looksLikeOption(commandLine,  arg))  {  return  false;  }  if  (anonymous.size()  >  0)  {  return  true;  }  [CLASS]  GroupImpl  [METHOD]  canProcess  [RETURN_TYPE]  boolean  WriteableCommandLine  commandLine  String  arg  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  SortedMap  newOptionMap  optionMap  WriteableCommandLine  commandLine  Iterator  iter  List  anonymous  newAnonymous  options  Option  option  String  arg  description  name  Map  tailMap  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	137	137	1	replace	final  Iterator  iter  =  optionMap.values().iterator();  iter.hasNext();)  {  final  Option  commandLine  =(Option)iter.next();  if(option.canProcess(commandLine,  arg))  {  return  false;  }	  final    Iterator    iter    =    optionMap.values().iterator();    iter.hasNext();)    {    final    Option    option    =(Option)iter.next();    if(option.canProcess(commandLine,    arg))    {    return    false;    }    	non-compiled	[CE]  illegal  start  of  expression	33	None	replace
151	[BUG]  [BUGGY]  Option  commandLine  =  optionMap.get(arg).values().iterator();  [CE]  illegal  start  of  expression  [FE]                    OptionException      [CONTEXT]        final  Map  tailMap  =  optionMap.tailMap(arg);  for  (final  Iterator  iter  =  tailMap.values().iterator();  iter.hasNext();)  {  final  Option  option  =  (Option)  iter.next();  if  (option.canProcess(commandLine,  arg))  {  return  true;  }      [BUGGY]  Option  commandLine  =  optionMap.get(arg).values().iterator();  [BUGGY]      }  if  (looksLikeOption(commandLine,  arg))  {  return  false;  }  if  (anonymous.size()  >  0)  {  return  true;  }  [CLASS]  GroupImpl  [METHOD]  canProcess  [RETURN_TYPE]  boolean  WriteableCommandLine  commandLine  String  arg  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  SortedMap  newOptionMap  optionMap  WriteableCommandLine  commandLine  Iterator  iter  List  anonymous  newAnonymous  options  Option  option  String  arg  description  name  Map  tailMap  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	137	137	1	replace	Option  commandLine  =  optionMap.get(arg).values().iterator();	  Option    commandLine    =    optionMap.values().iterator();    	non-compiled	[CE]  illegal  start  of  expression	25	None	replace
152	[BUG]  [BUGGY]  final  Iterator  iter  =  options.values().iterator();  iter.hasNext();)  {  final  Option  option  =(Option)iter.next();  if(option.canProcess(commandLine,  option))  {  return  false  [CE]  illegal  start  of  expression  [FE]              OptionException      [CONTEXT]        final  Map  tailMap  =  optionMap.tailMap(arg);  for  (final  Iterator  iter  =  tailMap.values().iterator();  iter.hasNext();)  {  final  Option  option  =  (Option)  iter.next();  if  (option.canProcess(commandLine,  arg))  {  return  true;  }      [BUGGY]  final  Iterator  iter  =  options.values().iterator();  iter.hasNext();)  {  final  Option  option  =(Option)iter.next();  if(option.canProcess(commandLine,  option))  {  return  false  [BUGGY]      }  if  (looksLikeOption(commandLine,  arg))  {  return  false;  }  if  (anonymous.size()  >  0)  {  return  true;  }  [CLASS]  GroupImpl  [METHOD]  canProcess  [RETURN_TYPE]  boolean  WriteableCommandLine  commandLine  String  arg  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  SortedMap  newOptionMap  optionMap  WriteableCommandLine  commandLine  Iterator  iter  List  anonymous  newAnonymous  options  Option  option  String  arg  description  name  Map  tailMap  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	137	137	1	replace	final  Iterator  iter  =  options.values().iterator();  iter.hasNext();)  {  final  Option  option  =(Option)iter.next();  if(option.canProcess(commandLine,  option))  {  return  false	  final    Iterator    iter    =    options.values().iterator();    iter.hasNext();)    {    final    Option    option    =(Option)iter.next();    if(option.canProcess(commandLine,    option))    {    return    false;    }    	non-compiled	[CE]  illegal  start  of  expression	2	None	replace
153	[BUG]  [BUGGY]  final  Iterator  iter  =  optionMap.commandLines().iterator();  [CE]  illegal  start  of  expression  [FE]                      OptionException      [CONTEXT]        final  Map  tailMap  =  optionMap.tailMap(arg);  for  (final  Iterator  iter  =  tailMap.values().iterator();  iter.hasNext();)  {  final  Option  option  =  (Option)  iter.next();  if  (option.canProcess(commandLine,  arg))  {  return  true;  }      [BUGGY]  final  Iterator  iter  =  optionMap.commandLines().iterator();  [BUGGY]      }  if  (looksLikeOption(commandLine,  arg))  {  return  false;  }  if  (anonymous.size()  >  0)  {  return  true;  }  [CLASS]  GroupImpl  [METHOD]  canProcess  [RETURN_TYPE]  boolean  WriteableCommandLine  commandLine  String  arg  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  SortedMap  newOptionMap  optionMap  WriteableCommandLine  commandLine  Iterator  iter  List  anonymous  newAnonymous  options  Option  option  String  arg  description  name  Map  tailMap  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	137	137	1	replace	final  Iterator  iter  =  optionMap.commandLines().iterator();	  final    Iterator    iter    =    optionMap.values().iterator();    	non-compiled	[CE]  illegal  start  of  expression	26	None	replace
154	[BUG]  [BUGGY]  Option  commandLine  =  optionMap.get(arg)+  1;  [CE]  illegal  start  of  expression  [FE]                    OptionException      [CONTEXT]        final  Map  tailMap  =  optionMap.tailMap(arg);  for  (final  Iterator  iter  =  tailMap.values().iterator();  iter.hasNext();)  {  final  Option  option  =  (Option)  iter.next();  if  (option.canProcess(commandLine,  arg))  {  return  true;  }      [BUGGY]  Option  commandLine  =  optionMap.get(arg)+  1;  [BUGGY]        if  (looksLikeOption(commandLine,  arg))  {  return  false;  }  if  (anonymous.size()  >  0)  {  return  true;  }  [CLASS]  GroupImpl  [METHOD]  canProcess  [RETURN_TYPE]  boolean  WriteableCommandLine  commandLine  String  arg  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  SortedMap  newOptionMap  optionMap  WriteableCommandLine  commandLine  Iterator  iter  List  anonymous  newAnonymous  options  Option  option  String  arg  description  name  Map  tailMap  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	137	137	1	replace	Option  commandLine  =  optionMap.get(arg)+  1;	  Option    commandLine    =    optionMap.get(arg);    	non-compiled	[CE]  illegal  start  of  expression	49	None	replace
155	[BUG]  [BUGGY]  if(option.canProcess(commandLine,  arg))  {  List  <  Option>  newAnonymous  =  options.values().iterator();  if(newAnonymous!=  null)  {  return  false;  }  [CE]  illegal  start  of  expression  [FE]                OptionException      [CONTEXT]        final  Map  tailMap  =  optionMap.tailMap(arg);  for  (final  Iterator  iter  =  tailMap.values().iterator();  iter.hasNext();)  {  final  Option  option  =  (Option)  iter.next();  if  (option.canProcess(commandLine,  arg))  {  return  true;  }      [BUGGY]  if(option.canProcess(commandLine,  arg))  {  List  <  Option>  newAnonymous  =  options.values().iterator();  if(newAnonymous!=  null)  {  return  false;  }  [BUGGY]      }  if  (looksLikeOption(commandLine,  arg))  {  return  false;  }  if  (anonymous.size()  >  0)  {  return  true;  }  [CLASS]  GroupImpl  [METHOD]  canProcess  [RETURN_TYPE]  boolean  WriteableCommandLine  commandLine  String  arg  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  SortedMap  newOptionMap  optionMap  WriteableCommandLine  commandLine  Iterator  iter  List  anonymous  newAnonymous  options  Option  option  String  arg  description  name  Map  tailMap  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	137	137	1	replace	if(option.canProcess(commandLine,  arg))  {  List  <  Option>  newAnonymous  =  options.values().iterator();  if(newAnonymous!=  null)  {  return  false;  }	  List    <    Option>    newAnonymous    =    options.values().iterator();    if(newAnonymous!=    null)    {    return    false;    }    	non-compiled	[CE]  illegal  start  of  expression	16	None	replace
156	[BUG]  [BUGGY]  if(optionMap.canProcess(commandLine,  arg))  {  final  List  <  Option>  newAnonymous  =  optionMap.values().iterator();  if(newAnonymous!=  null)  {  return  false;  }  [CE]  illegal  start  of  expression  [FE]              OptionException      [CONTEXT]        final  Map  tailMap  =  optionMap.tailMap(arg);  for  (final  Iterator  iter  =  tailMap.values().iterator();  iter.hasNext();)  {  final  Option  option  =  (Option)  iter.next();  if  (option.canProcess(commandLine,  arg))  {  return  true;  }      [BUGGY]  if(optionMap.canProcess(commandLine,  arg))  {  final  List  <  Option>  newAnonymous  =  optionMap.values().iterator();  if(newAnonymous!=  null)  {  return  false;  }  [BUGGY]      }  if  (looksLikeOption(commandLine,  arg))  {  return  false;  }  if  (anonymous.size()  >  0)  {  return  true;  }  [CLASS]  GroupImpl  [METHOD]  canProcess  [RETURN_TYPE]  boolean  WriteableCommandLine  commandLine  String  arg  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  SortedMap  newOptionMap  optionMap  WriteableCommandLine  commandLine  Iterator  iter  List  anonymous  newAnonymous  options  Option  option  String  arg  description  name  Map  tailMap  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	137	137	1	replace	if(optionMap.canProcess(commandLine,  arg))  {  final  List  <  Option>  newAnonymous  =  optionMap.values().iterator();  if(newAnonymous!=  null)  {  return  false;  }	  final    List    <    Option>    newAnonymous    =    optionMap.values().iterator();    if(newAnonymous!=    null)    {    return    false;    }    	non-compiled	[CE]  illegal  start  of  expression	15	None	replace
157	[BUG]  [BUGGY]  if(optionMap.hasOption(arg))  {  final  List  <  Option>  newAnonymous  =  optionMap.values().iterator();  if(newAnonymous!=  null)  {  return  false;  }  [CE]  illegal  start  of  expression  [FE]                OptionException      [CONTEXT]        final  Map  tailMap  =  optionMap.tailMap(arg);  for  (final  Iterator  iter  =  tailMap.values().iterator();  iter.hasNext();)  {  final  Option  option  =  (Option)  iter.next();  if  (option.canProcess(commandLine,  arg))  {  return  true;  }      [BUGGY]  if(optionMap.hasOption(arg))  {  final  List  <  Option>  newAnonymous  =  optionMap.values().iterator();  if(newAnonymous!=  null)  {  return  false;  }  [BUGGY]      }  if  (looksLikeOption(commandLine,  arg))  {  return  false;  }  if  (anonymous.size()  >  0)  {  return  true;  }  [CLASS]  GroupImpl  [METHOD]  canProcess  [RETURN_TYPE]  boolean  WriteableCommandLine  commandLine  String  arg  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  SortedMap  newOptionMap  optionMap  WriteableCommandLine  commandLine  Iterator  iter  List  anonymous  newAnonymous  options  Option  option  String  arg  description  name  Map  tailMap  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	137	137	1	replace	if(optionMap.hasOption(arg))  {  final  List  <  Option>  newAnonymous  =  optionMap.values().iterator();  if(newAnonymous!=  null)  {  return  false;  }	  final    List    <    Option>    newAnonymous    =    optionMap.values().iterator();    if(newAnonymous!=    null)    {    return    false;    }    	non-compiled	[CE]  illegal  start  of  expression	15	None	replace
158	[BUG]  [BUGGY]  if(optionMap.hasArg())  {  final  List  <  Option>  newAnonymous  =  optionMap.values().iterator();  if(newAnonymous!=  null)  {  return  false;  }  [CE]  illegal  start  of  expression  [FE]                  OptionException      [CONTEXT]        final  Map  tailMap  =  optionMap.tailMap(arg);  for  (final  Iterator  iter  =  tailMap.values().iterator();  iter.hasNext();)  {  final  Option  option  =  (Option)  iter.next();  if  (option.canProcess(commandLine,  arg))  {  return  true;  }      [BUGGY]  if(optionMap.hasArg())  {  final  List  <  Option>  newAnonymous  =  optionMap.values().iterator();  if(newAnonymous!=  null)  {  return  false;  }  [BUGGY]      }  if  (looksLikeOption(commandLine,  arg))  {  return  false;  }  if  (anonymous.size()  >  0)  {  return  true;  }  [CLASS]  GroupImpl  [METHOD]  canProcess  [RETURN_TYPE]  boolean  WriteableCommandLine  commandLine  String  arg  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  SortedMap  newOptionMap  optionMap  WriteableCommandLine  commandLine  Iterator  iter  List  anonymous  newAnonymous  options  Option  option  String  arg  description  name  Map  tailMap  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	137	137	1	replace	if(optionMap.hasArg())  {  final  List  <  Option>  newAnonymous  =  optionMap.values().iterator();  if(newAnonymous!=  null)  {  return  false;  }	  final    List    <    Option>    newAnonymous    =    optionMap.values().iterator();    if(newAnonymous!=    null)    {    return    false;    }    	non-compiled	[CE]  illegal  start  of  expression	15	None	replace
159	[BUG]  [BUGGY]  Option  option  =  optionMap.getOption(arg,  description);  [CE]  illegal  start  of  expression  [FE]                OptionException      [CONTEXT]        final  Map  tailMap  =  optionMap.tailMap(arg);  for  (final  Iterator  iter  =  tailMap.values().iterator();  iter.hasNext();)  {  final  Option  option  =  (Option)  iter.next();  if  (option.canProcess(commandLine,  arg))  {  return  true;  }      [BUGGY]  Option  option  =  optionMap.getOption(arg,  description);  [BUGGY]      }  if  (looksLikeOption(commandLine,  arg))  {  return  false;  }  if  (anonymous.size()  >  0)  {  return  true;  }  [CLASS]  GroupImpl  [METHOD]  canProcess  [RETURN_TYPE]  boolean  WriteableCommandLine  commandLine  String  arg  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  SortedMap  newOptionMap  optionMap  WriteableCommandLine  commandLine  Iterator  iter  List  anonymous  newAnonymous  options  Option  option  String  arg  description  name  Map  tailMap  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	137	137	1	replace	Option  option  =  optionMap.getOption(arg,  description);	  Option    option    =    optionMap.getOption(arg);    	non-compiled	[CE]  illegal  start  of  expression	40	None	replace
160	[BUG]  [BUGGY]  List  <  Option>  anonymous  =(List  <  Option>)commandLine.values().iterator();  [CE]  illegal  start  of  expression  [FE]                OptionException      [CONTEXT]        final  Map  tailMap  =  optionMap.tailMap(arg);  for  (final  Iterator  iter  =  tailMap.values().iterator();  iter.hasNext();)  {  final  Option  option  =  (Option)  iter.next();  if  (option.canProcess(commandLine,  arg))  {  return  true;  }      [BUGGY]  List  <  Option>  anonymous  =(List  <  Option>)commandLine.values().iterator();  [BUGGY]        if  (looksLikeOption(commandLine,  arg))  {  return  false;  }  if  (anonymous.size()  >  0)  {  return  true;  }  [CLASS]  GroupImpl  [METHOD]  canProcess  [RETURN_TYPE]  boolean  WriteableCommandLine  commandLine  String  arg  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  SortedMap  newOptionMap  optionMap  WriteableCommandLine  commandLine  Iterator  iter  List  anonymous  newAnonymous  options  Option  option  String  arg  description  name  Map  tailMap  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	137	137	1	replace	List  <  Option>  anonymous  =(List  <  Option>)commandLine.values().iterator();	  List    <    Option>    newAnonymous    =(List    <    Option>)commandLine.values().iterator();    	non-compiled	[CE]  illegal  start  of  expression	8	None	replace
161	[BUG]  [BUGGY]  Option  commandLine  =  options.get(commandLine);  [CE]  illegal  start  of  expression  [FE]              OptionException      [CONTEXT]        final  Map  tailMap  =  optionMap.tailMap(arg);  for  (final  Iterator  iter  =  tailMap.values().iterator();  iter.hasNext();)  {  final  Option  option  =  (Option)  iter.next();  if  (option.canProcess(commandLine,  arg))  {  return  true;  }      [BUGGY]  Option  commandLine  =  options.get(commandLine);  [BUGGY]      }  if  (looksLikeOption(commandLine,  arg))  {  return  false;  }  if  (anonymous.size()  >  0)  {  return  true;  }  [CLASS]  GroupImpl  [METHOD]  canProcess  [RETURN_TYPE]  boolean  WriteableCommandLine  commandLine  String  arg  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  SortedMap  newOptionMap  optionMap  WriteableCommandLine  commandLine  Iterator  iter  List  anonymous  newAnonymous  options  Option  option  String  arg  description  name  Map  tailMap  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	137	137	1	replace	Option  commandLine  =  options.get(commandLine);	  Option    commandLine    =    optionMap.get(commandLine);    	non-compiled	[CE]  illegal  start  of  expression	65	None	replace
