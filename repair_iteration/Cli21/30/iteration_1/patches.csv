bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  final  Set  <  Option>  newAnonymous  =(Set  <  Option>)iter.next();  [CE]  illegal  start  of  expression  [FE]            OptionException    [CONTEXT]      final  Map  tailMap  =  optionMap.tailMap(arg);  for  (final  Iterator  iter  =  tailMap.values().iterator();  iter.hasNext();)  {  final  Option  option  =  (Option)  iter.next();  if  (option.canProcess(commandLine,  arg))  {  return  true;  }    [BUGGY]  final  Set  <  Option>  newAnonymous  =(Set  <  Option>)iter.next();  [BUGGY]      if  (looksLikeOption(commandLine,  arg))  {  return  false;  }  if  (anonymous.size()  >  0)  {  return  true;  }  [CLASS]  GroupImpl  [METHOD]  canProcess  [RETURN_TYPE]  boolean  WriteableCommandLine  commandLine  String  arg  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  SortedMap  newOptionMap  optionMap  WriteableCommandLine  commandLine  Iterator  iter  List  anonymous  newAnonymous  options  Option  option  String  arg  description  name  Map  tailMap  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	137	137	1	replace	final  Set  <  Option>  newAnonymous  =(Set  <  Option>)iter.next();	  final    List    <    Option>    newAnonymous    =(List    <    Option>)iter.next();    	non-compiled	[CE]  illegal  start  of  expression	3	None	replace
2	[BUG]  [BUGGY]  final  Iterator  iter  =  options.values().iterator();  iter.hasNext();)  {  final  Option  option  =(Option)iter.next();  if(option.canProcess(commandLine,  option))  {  return  false;  }  [CE]  illegal  start  of  expression  [FE]          OptionException    [CONTEXT]      final  Map  tailMap  =  optionMap.tailMap(arg);  for  (final  Iterator  iter  =  tailMap.values().iterator();  iter.hasNext();)  {  final  Option  option  =  (Option)  iter.next();  if  (option.canProcess(commandLine,  arg))  {  return  true;  }    [BUGGY]  final  Iterator  iter  =  options.values().iterator();  iter.hasNext();)  {  final  Option  option  =(Option)iter.next();  if(option.canProcess(commandLine,  option))  {  return  false;  }  [BUGGY]    }  if  (looksLikeOption(commandLine,  arg))  {  return  false;  }  if  (anonymous.size()  >  0)  {  return  true;  }  [CLASS]  GroupImpl  [METHOD]  canProcess  [RETURN_TYPE]  boolean  WriteableCommandLine  commandLine  String  arg  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  SortedMap  newOptionMap  optionMap  WriteableCommandLine  commandLine  Iterator  iter  List  anonymous  newAnonymous  options  Option  option  String  arg  description  name  Map  tailMap  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	137	137	1	replace	final  Iterator  iter  =  options.values().iterator();  iter.hasNext();)  {  final  Option  option  =(Option)iter.next();  if(option.canProcess(commandLine,  option))  {  return  false;  }	      for(final    Iterator    iter    =    options.values().iterator();    iter.hasNext();)    {    final    Option    option    =(Option)iter.next();    if(option.canProcess(commandLine,    option))    {    return    false;    }    	non-compiled	[CE]  illegal  start  of  expression	7	None	replace
3	[BUG]  [BUGGY]  final  Iterator  <  Option>  iter  =  options.values().iterator();  iter.hasNext();)  {  final  Option  option  =(Option)iter.next();  if(option.canProcess(commandLine,  option))  {  return  false;  }  [CE]  illegal  start  of  expression  [FE]            OptionException    [CONTEXT]      final  Map  tailMap  =  optionMap.tailMap(arg);  for  (final  Iterator  iter  =  tailMap.values().iterator();  iter.hasNext();)  {  final  Option  option  =  (Option)  iter.next();  if  (option.canProcess(commandLine,  arg))  {  return  true;  }    [BUGGY]  final  Iterator  <  Option>  iter  =  options.values().iterator();  iter.hasNext();)  {  final  Option  option  =(Option)iter.next();  if(option.canProcess(commandLine,  option))  {  return  false;  }  [BUGGY]    }  if  (looksLikeOption(commandLine,  arg))  {  return  false;  }  if  (anonymous.size()  >  0)  {  return  true;  }  [CLASS]  GroupImpl  [METHOD]  canProcess  [RETURN_TYPE]  boolean  WriteableCommandLine  commandLine  String  arg  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  SortedMap  newOptionMap  optionMap  WriteableCommandLine  commandLine  Iterator  iter  List  anonymous  newAnonymous  options  Option  option  String  arg  description  name  Map  tailMap  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	137	137	1	replace	final  Iterator  <  Option>  iter  =  options.values().iterator();  iter.hasNext();)  {  final  Option  option  =(Option)iter.next();  if(option.canProcess(commandLine,  option))  {  return  false;  }	      for(final    Iterator    iter    =    options.values().iterator();    iter.hasNext();)    {    final    Option    option    =(Option)iter.next();    if(option.canProcess(commandLine,    option))    {    return    false;    }    	non-compiled	[CE]  illegal  start  of  expression	7	None	replace
4	[BUG]  [BUGGY]  final  Iterator  iter  =  optionMap.values().iterator();  iter.hasNext();)  {  final  Option  option  =(Option)iter.next();  if(option.canProcess(commandLine,  option))  {  return  false;  }  [CE]  illegal  start  of  expression  [FE]              OptionException    [CONTEXT]      final  Map  tailMap  =  optionMap.tailMap(arg);  for  (final  Iterator  iter  =  tailMap.values().iterator();  iter.hasNext();)  {  final  Option  option  =  (Option)  iter.next();  if  (option.canProcess(commandLine,  arg))  {  return  true;  }    [BUGGY]  final  Iterator  iter  =  optionMap.values().iterator();  iter.hasNext();)  {  final  Option  option  =(Option)iter.next();  if(option.canProcess(commandLine,  option))  {  return  false;  }  [BUGGY]    }  if  (looksLikeOption(commandLine,  arg))  {  return  false;  }  if  (anonymous.size()  >  0)  {  return  true;  }  [CLASS]  GroupImpl  [METHOD]  canProcess  [RETURN_TYPE]  boolean  WriteableCommandLine  commandLine  String  arg  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  SortedMap  newOptionMap  optionMap  WriteableCommandLine  commandLine  Iterator  iter  List  anonymous  newAnonymous  options  Option  option  String  arg  description  name  Map  tailMap  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	137	137	1	replace	final  Iterator  iter  =  optionMap.values().iterator();  iter.hasNext();)  {  final  Option  option  =(Option)iter.next();  if(option.canProcess(commandLine,  option))  {  return  false;  }	      for(final    Iterator    iter    =    options.values().iterator();    iter.hasNext();)    {    final    Option    option    =(Option)iter.next();    if(option.canProcess(commandLine,    option))    {    return    false;    }    	non-compiled	[CE]  illegal  start  of  expression	7	None	replace
5	[BUG]  [BUGGY]  final  Iterator  iter  =  options.values().iterator();  iter.hasNext();)  {  final  Option  option  =(Option)iter.next();  if(option.canProcess(commandLine,  option))  {  return  true;  }  [CE]  illegal  start  of  expression  [FE]                OptionException    [CONTEXT]      final  Map  tailMap  =  optionMap.tailMap(arg);  for  (final  Iterator  iter  =  tailMap.values().iterator();  iter.hasNext();)  {  final  Option  option  =  (Option)  iter.next();  if  (option.canProcess(commandLine,  arg))  {  return  true;  }    [BUGGY]  final  Iterator  iter  =  options.values().iterator();  iter.hasNext();)  {  final  Option  option  =(Option)iter.next();  if(option.canProcess(commandLine,  option))  {  return  true;  }  [BUGGY]    }  if  (looksLikeOption(commandLine,  arg))  {  return  false;  }  if  (anonymous.size()  >  0)  {  return  true;  }  [CLASS]  GroupImpl  [METHOD]  canProcess  [RETURN_TYPE]  boolean  WriteableCommandLine  commandLine  String  arg  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  SortedMap  newOptionMap  optionMap  WriteableCommandLine  commandLine  Iterator  iter  List  anonymous  newAnonymous  options  Option  option  String  arg  description  name  Map  tailMap  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	137	137	1	replace	final  Iterator  iter  =  options.values().iterator();  iter.hasNext();)  {  final  Option  option  =(Option)iter.next();  if(option.canProcess(commandLine,  option))  {  return  true;  }	      for(final    Iterator    iter    =    options.values().iterator();    iter.hasNext();)    {    final    Option    option    =(Option)iter.next();    if(option.canProcess(commandLine,    option))    {    return    false;    }    	non-compiled	[CE]  illegal  start  of  expression	7	None	replace
6	[BUG]  [BUGGY]  Option  option  =(Option)iter.next();  [CE]  illegal  start  of  expression  [FE]          OptionException    [CONTEXT]      final  Map  tailMap  =  optionMap.tailMap(arg);  for  (final  Iterator  iter  =  tailMap.values().iterator();  iter.hasNext();)  {  final  Option  option  =  (Option)  iter.next();  if  (option.canProcess(commandLine,  arg))  {  return  true;  }    [BUGGY]  Option  option  =(Option)iter.next();  [BUGGY]    }  if  (looksLikeOption(commandLine,  arg))  {  return  false;  }  if  (anonymous.size()  >  0)  {  return  true;  }  [CLASS]  GroupImpl  [METHOD]  canProcess  [RETURN_TYPE]  boolean  WriteableCommandLine  commandLine  String  arg  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  SortedMap  newOptionMap  optionMap  WriteableCommandLine  commandLine  Iterator  iter  List  anonymous  newAnonymous  options  Option  option  String  arg  description  name  Map  tailMap  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	137	137	1	replace	Option  option  =(Option)iter.next();	      if(option.canProcess(commandLine,    null))    {    return    false;    }    	non-compiled	[CE]  illegal  start  of  expression	20	None	replace
7	[BUG]  [BUGGY]  Set  <  Option>  newAnonymous  =(Set  <  Option>)optionMap.values().iterator();  [CE]  illegal  start  of  expression  [FE]          OptionException    [CONTEXT]      final  Map  tailMap  =  optionMap.tailMap(arg);  for  (final  Iterator  iter  =  tailMap.values().iterator();  iter.hasNext();)  {  final  Option  option  =  (Option)  iter.next();  if  (option.canProcess(commandLine,  arg))  {  return  true;  }    [BUGGY]  Set  <  Option>  newAnonymous  =(Set  <  Option>)optionMap.values().iterator();  [BUGGY]      if  (looksLikeOption(commandLine,  arg))  {  return  false;  }  if  (anonymous.size()  >  0)  {  return  true;  }  [CLASS]  GroupImpl  [METHOD]  canProcess  [RETURN_TYPE]  boolean  WriteableCommandLine  commandLine  String  arg  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  SortedMap  newOptionMap  optionMap  WriteableCommandLine  commandLine  Iterator  iter  List  anonymous  newAnonymous  options  Option  option  String  arg  description  name  Map  tailMap  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	137	137	1	replace	Set  <  Option>  newAnonymous  =(Set  <  Option>)optionMap.values().iterator();	  List    <    Option>    newAnonymous    =(List    <    Option>)optionMap.values().iterator();    	non-compiled	[CE]  illegal  start  of  expression	2	None	replace
8	[BUG]  [BUGGY]  List  <  Option>  newAnonymous  =(List  <  Option>)commandLine.values().iterator();  [CE]  illegal  start  of  expression  [FE]            OptionException    [CONTEXT]      final  Map  tailMap  =  optionMap.tailMap(arg);  for  (final  Iterator  iter  =  tailMap.values().iterator();  iter.hasNext();)  {  final  Option  option  =  (Option)  iter.next();  if  (option.canProcess(commandLine,  arg))  {  return  true;  }    [BUGGY]  List  <  Option>  newAnonymous  =(List  <  Option>)commandLine.values().iterator();  [BUGGY]      if  (looksLikeOption(commandLine,  arg))  {  return  false;  }  if  (anonymous.size()  >  0)  {  return  true;  }  [CLASS]  GroupImpl  [METHOD]  canProcess  [RETURN_TYPE]  boolean  WriteableCommandLine  commandLine  String  arg  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  SortedMap  newOptionMap  optionMap  WriteableCommandLine  commandLine  Iterator  iter  List  anonymous  newAnonymous  options  Option  option  String  arg  description  name  Map  tailMap  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	137	137	1	replace	List  <  Option>  newAnonymous  =(List  <  Option>)commandLine.values().iterator();	  List    <    Option>    newAnonymous    =(List    <    Option>)optionMap.values().iterator();    	non-compiled	[CE]  illegal  start  of  expression	2	None	replace
9	[BUG]  [BUGGY]  List  <  Option>  newAnonymous  =  optionMap.keySet().iterator();  [CE]  illegal  start  of  expression  [FE]        OptionException    [CONTEXT]      final  Map  tailMap  =  optionMap.tailMap(arg);  for  (final  Iterator  iter  =  tailMap.values().iterator();  iter.hasNext();)  {  final  Option  option  =  (Option)  iter.next();  if  (option.canProcess(commandLine,  arg))  {  return  true;  }    [BUGGY]  List  <  Option>  newAnonymous  =  optionMap.keySet().iterator();  [BUGGY]      if  (looksLikeOption(commandLine,  arg))  {  return  false;  }  if  (anonymous.size()  >  0)  {  return  true;  }  [CLASS]  GroupImpl  [METHOD]  canProcess  [RETURN_TYPE]  boolean  WriteableCommandLine  commandLine  String  arg  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  SortedMap  newOptionMap  optionMap  WriteableCommandLine  commandLine  Iterator  iter  List  anonymous  newAnonymous  options  Option  option  String  arg  description  name  Map  tailMap  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	137	137	1	replace	List  <  Option>  newAnonymous  =  optionMap.keySet().iterator();	  List    <    Option>    newAnonymous    =    optionMap.values().iterator();    	non-compiled	[CE]  illegal  start  of  expression	11	None	replace
10	[BUG]  [BUGGY]  Option  commandLine  =  option.canProcess(commandLine);  [CE]  illegal  start  of  expression  [FE]          OptionException    [CONTEXT]      final  Map  tailMap  =  optionMap.tailMap(arg);  for  (final  Iterator  iter  =  tailMap.values().iterator();  iter.hasNext();)  {  final  Option  option  =  (Option)  iter.next();  if  (option.canProcess(commandLine,  arg))  {  return  true;  }    [BUGGY]  Option  commandLine  =  option.canProcess(commandLine);  [BUGGY]      if  (looksLikeOption(commandLine,  arg))  {  return  false;  }  if  (anonymous.size()  >  0)  {  return  true;  }  [CLASS]  GroupImpl  [METHOD]  canProcess  [RETURN_TYPE]  boolean  WriteableCommandLine  commandLine  String  arg  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  SortedMap  newOptionMap  optionMap  WriteableCommandLine  commandLine  Iterator  iter  List  anonymous  newAnonymous  options  Option  option  String  arg  description  name  Map  tailMap  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	137	137	1	replace	Option  commandLine  =  option.canProcess(commandLine);	  if(option.canProcess(commandLine))    {    return    false;    }    	non-compiled	[CE]  illegal  start  of  expression	12	None	replace
11	[BUG]  [BUGGY]  Option  option  =  option.getOption(commandLine);  [CE]  illegal  start  of  expression  [FE]            OptionException    [CONTEXT]      final  Map  tailMap  =  optionMap.tailMap(arg);  for  (final  Iterator  iter  =  tailMap.values().iterator();  iter.hasNext();)  {  final  Option  option  =  (Option)  iter.next();  if  (option.canProcess(commandLine,  arg))  {  return  true;  }    [BUGGY]  Option  option  =  option.getOption(commandLine);  [BUGGY]      if  (looksLikeOption(commandLine,  arg))  {  return  false;  }  if  (anonymous.size()  >  0)  {  return  true;  }  [CLASS]  GroupImpl  [METHOD]  canProcess  [RETURN_TYPE]  boolean  WriteableCommandLine  commandLine  String  arg  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  SortedMap  newOptionMap  optionMap  WriteableCommandLine  commandLine  Iterator  iter  List  anonymous  newAnonymous  options  Option  option  String  arg  description  name  Map  tailMap  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	137	137	1	replace	Option  option  =  option.getOption(commandLine);	  if(option.canProcess(commandLine))    {    return    false;    }    	non-compiled	[CE]  illegal  start  of  expression	12	None	replace
12	[BUG]  [BUGGY]  final  Iterator  iter  =  options.values().iterator();  iter.hasNext();)  {  final  Option  option  =(Option)iter.next();  if(!option.canProcess(commandLine,  option))  {  return  false;  }  [CE]  illegal  start  of  expression  [FE]            OptionException    [CONTEXT]      final  Map  tailMap  =  optionMap.tailMap(arg);  for  (final  Iterator  iter  =  tailMap.values().iterator();  iter.hasNext();)  {  final  Option  option  =  (Option)  iter.next();  if  (option.canProcess(commandLine,  arg))  {  return  true;  }    [BUGGY]  final  Iterator  iter  =  options.values().iterator();  iter.hasNext();)  {  final  Option  option  =(Option)iter.next();  if(!option.canProcess(commandLine,  option))  {  return  false;  }  [BUGGY]    }  if  (looksLikeOption(commandLine,  arg))  {  return  false;  }  if  (anonymous.size()  >  0)  {  return  true;  }  [CLASS]  GroupImpl  [METHOD]  canProcess  [RETURN_TYPE]  boolean  WriteableCommandLine  commandLine  String  arg  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  SortedMap  newOptionMap  optionMap  WriteableCommandLine  commandLine  Iterator  iter  List  anonymous  newAnonymous  options  Option  option  String  arg  description  name  Map  tailMap  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	137	137	1	replace	final  Iterator  iter  =  options.values().iterator();  iter.hasNext();)  {  final  Option  option  =(Option)iter.next();  if(!option.canProcess(commandLine,  option))  {  return  false;  }	      for(final    Iterator    iter    =    options.values().iterator();    iter.hasNext();)    {    final    Option    option    =(Option)iter.next();    if(!option.canProcess(commandLine,    option))    {    return    false;    }    	non-compiled	[CE]  illegal  start  of  expression	8	None	replace
13	[BUG]  [BUGGY]  final  Iterator  <  Option>  iter  =  options.values().iterator();  iter.hasNext();)  {  final  Option  option  =(Option)iter.next();  if(!option.canProcess(commandLine,  option))  {  return  false;  }  [CE]  illegal  start  of  expression  [FE]              OptionException    [CONTEXT]      final  Map  tailMap  =  optionMap.tailMap(arg);  for  (final  Iterator  iter  =  tailMap.values().iterator();  iter.hasNext();)  {  final  Option  option  =  (Option)  iter.next();  if  (option.canProcess(commandLine,  arg))  {  return  true;  }    [BUGGY]  final  Iterator  <  Option>  iter  =  options.values().iterator();  iter.hasNext();)  {  final  Option  option  =(Option)iter.next();  if(!option.canProcess(commandLine,  option))  {  return  false;  }  [BUGGY]    }  if  (looksLikeOption(commandLine,  arg))  {  return  false;  }  if  (anonymous.size()  >  0)  {  return  true;  }  [CLASS]  GroupImpl  [METHOD]  canProcess  [RETURN_TYPE]  boolean  WriteableCommandLine  commandLine  String  arg  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  SortedMap  newOptionMap  optionMap  WriteableCommandLine  commandLine  Iterator  iter  List  anonymous  newAnonymous  options  Option  option  String  arg  description  name  Map  tailMap  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	137	137	1	replace	final  Iterator  <  Option>  iter  =  options.values().iterator();  iter.hasNext();)  {  final  Option  option  =(Option)iter.next();  if(!option.canProcess(commandLine,  option))  {  return  false;  }	      for(final    Iterator    iter    =    options.values().iterator();    iter.hasNext();)    {    final    Option    option    =(Option)iter.next();    if(!option.canProcess(commandLine,    option))    {    return    false;    }    	non-compiled	[CE]  illegal  start  of  expression	8	None	replace
14	[BUG]  [BUGGY]  final  Iterator  iter  =  optionMap.values().iterator();  iter.hasNext();)  {  final  Option  option  =(Option)iter.next();  if(!option.canProcess(commandLine,  option))  {  return  false;  }  [CE]  illegal  start  of  expression  [FE]                OptionException    [CONTEXT]      final  Map  tailMap  =  optionMap.tailMap(arg);  for  (final  Iterator  iter  =  tailMap.values().iterator();  iter.hasNext();)  {  final  Option  option  =  (Option)  iter.next();  if  (option.canProcess(commandLine,  arg))  {  return  true;  }    [BUGGY]  final  Iterator  iter  =  optionMap.values().iterator();  iter.hasNext();)  {  final  Option  option  =(Option)iter.next();  if(!option.canProcess(commandLine,  option))  {  return  false;  }  [BUGGY]    }  if  (looksLikeOption(commandLine,  arg))  {  return  false;  }  if  (anonymous.size()  >  0)  {  return  true;  }  [CLASS]  GroupImpl  [METHOD]  canProcess  [RETURN_TYPE]  boolean  WriteableCommandLine  commandLine  String  arg  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  SortedMap  newOptionMap  optionMap  WriteableCommandLine  commandLine  Iterator  iter  List  anonymous  newAnonymous  options  Option  option  String  arg  description  name  Map  tailMap  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	137	137	1	replace	final  Iterator  iter  =  optionMap.values().iterator();  iter.hasNext();)  {  final  Option  option  =(Option)iter.next();  if(!option.canProcess(commandLine,  option))  {  return  false;  }	      for(final    Iterator    iter    =    options.values().iterator();    iter.hasNext();)    {    final    Option    option    =(Option)iter.next();    if(!option.canProcess(commandLine,    option))    {    return    false;    }    	non-compiled	[CE]  illegal  start  of  expression	8	None	replace
15	[BUG]  [BUGGY]  final  List  <  Option>  newAnonymous  =  optionMap.values().iterator();  if(newAnonymous!=  null)  {  return  false;  }  [CE]  illegal  start  of  expression  [FE]          OptionException    [CONTEXT]      final  Map  tailMap  =  optionMap.tailMap(arg);  for  (final  Iterator  iter  =  tailMap.values().iterator();  iter.hasNext();)  {  final  Option  option  =  (Option)  iter.next();  if  (option.canProcess(commandLine,  arg))  {  return  true;  }    [BUGGY]  final  List  <  Option>  newAnonymous  =  optionMap.values().iterator();  if(newAnonymous!=  null)  {  return  false;  }  [BUGGY]    }  if  (looksLikeOption(commandLine,  arg))  {  return  false;  }  if  (anonymous.size()  >  0)  {  return  true;  }  [CLASS]  GroupImpl  [METHOD]  canProcess  [RETURN_TYPE]  boolean  WriteableCommandLine  commandLine  String  arg  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  SortedMap  newOptionMap  optionMap  WriteableCommandLine  commandLine  Iterator  iter  List  anonymous  newAnonymous  options  Option  option  String  arg  description  name  Map  tailMap  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	137	137	1	replace	final  List  <  Option>  newAnonymous  =  optionMap.values().iterator();  if(newAnonymous!=  null)  {  return  false;  }	      List    <    Option>    newAnonymous    =    optionMap.values().iterator();    if(newAnonymous!=    null)    {    return    false;    }    	non-compiled	[CE]  illegal  start  of  expression	16	None	replace
16	[BUG]  [BUGGY]  List  <  Option>  newAnonymous  =  options.values().iterator();  if(newAnonymous!=  null)  {  return  false;  }  [CE]  illegal  start  of  expression  [FE]            OptionException    [CONTEXT]      final  Map  tailMap  =  optionMap.tailMap(arg);  for  (final  Iterator  iter  =  tailMap.values().iterator();  iter.hasNext();)  {  final  Option  option  =  (Option)  iter.next();  if  (option.canProcess(commandLine,  arg))  {  return  true;  }    [BUGGY]  List  <  Option>  newAnonymous  =  options.values().iterator();  if(newAnonymous!=  null)  {  return  false;  }  [BUGGY]    }  if  (looksLikeOption(commandLine,  arg))  {  return  false;  }  if  (anonymous.size()  >  0)  {  return  true;  }  [CLASS]  GroupImpl  [METHOD]  canProcess  [RETURN_TYPE]  boolean  WriteableCommandLine  commandLine  String  arg  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  SortedMap  newOptionMap  optionMap  WriteableCommandLine  commandLine  Iterator  iter  List  anonymous  newAnonymous  options  Option  option  String  arg  description  name  Map  tailMap  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	137	137	1	replace	List  <  Option>  newAnonymous  =  options.values().iterator();  if(newAnonymous!=  null)  {  return  false;  }	      List    <    Option>    newAnonymous    =    optionMap.values().iterator();    if(newAnonymous!=    null)    {    return    false;    }    	non-compiled	[CE]  illegal  start  of  expression	16	None	replace
17	[BUG]  [BUGGY]  List  <  Option>  newAnonymous  =  optionMap.values().iterator();  if(newAnonymous  ==  null)  {  return  false;  }  [CE]  illegal  start  of  expression  [FE]              OptionException    [CONTEXT]      final  Map  tailMap  =  optionMap.tailMap(arg);  for  (final  Iterator  iter  =  tailMap.values().iterator();  iter.hasNext();)  {  final  Option  option  =  (Option)  iter.next();  if  (option.canProcess(commandLine,  arg))  {  return  true;  }    [BUGGY]  List  <  Option>  newAnonymous  =  optionMap.values().iterator();  if(newAnonymous  ==  null)  {  return  false;  }  [BUGGY]    }  if  (looksLikeOption(commandLine,  arg))  {  return  false;  }  if  (anonymous.size()  >  0)  {  return  true;  }  [CLASS]  GroupImpl  [METHOD]  canProcess  [RETURN_TYPE]  boolean  WriteableCommandLine  commandLine  String  arg  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  SortedMap  newOptionMap  optionMap  WriteableCommandLine  commandLine  Iterator  iter  List  anonymous  newAnonymous  options  Option  option  String  arg  description  name  Map  tailMap  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	137	137	1	replace	List  <  Option>  newAnonymous  =  optionMap.values().iterator();  if(newAnonymous  ==  null)  {  return  false;  }	      List    <    Option>    newAnonymous    =    optionMap.values().iterator();    if(newAnonymous!=    null)    {    return    false;    }    	non-compiled	[CE]  illegal  start  of  expression	16	None	replace
18	[BUG]  [BUGGY]  final  Iterator  iter  =  options.values().iterator();  iter.hasNext();)  {  final  Option  option  =(Option)iter.next();  if(option.canProcess(commandLine,  arg))  {  return  true;  }  [CE]  illegal  start  of  expression  [FE]                OptionException    [CONTEXT]      final  Map  tailMap  =  optionMap.tailMap(arg);  for  (final  Iterator  iter  =  tailMap.values().iterator();  iter.hasNext();)  {  final  Option  option  =  (Option)  iter.next();  if  (option.canProcess(commandLine,  arg))  {  return  true;  }    [BUGGY]  final  Iterator  iter  =  options.values().iterator();  iter.hasNext();)  {  final  Option  option  =(Option)iter.next();  if(option.canProcess(commandLine,  arg))  {  return  true;  }  [BUGGY]    }  if  (looksLikeOption(commandLine,  arg))  {  return  false;  }  if  (anonymous.size()  >  0)  {  return  true;  }  [CLASS]  GroupImpl  [METHOD]  canProcess  [RETURN_TYPE]  boolean  WriteableCommandLine  commandLine  String  arg  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  SortedMap  newOptionMap  optionMap  WriteableCommandLine  commandLine  Iterator  iter  List  anonymous  newAnonymous  options  Option  option  String  arg  description  name  Map  tailMap  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	137	137	1	replace	final  Iterator  iter  =  options.values().iterator();  iter.hasNext();)  {  final  Option  option  =(Option)iter.next();  if(option.canProcess(commandLine,  arg))  {  return  true;  }	      for(final    Iterator    iter    =    options.values().iterator();    iter.hasNext();)    {    final    Option    option    =(Option)iter.next();    if(option.canProcess(commandLine,    arg))    {    return    true;    }    	non-compiled	[CE]  illegal  start  of  expression	10	None	replace
19	[BUG]  [BUGGY]  final  Iterator  <  Option>  iter  =  options.values().iterator();  iter.hasNext();)  {  final  Option  option  =(Option)iter.next();  if(option.canProcess(commandLine,  arg))  {  return  true;  }  [CE]  illegal  start  of  expression  [FE]                  OptionException    [CONTEXT]      final  Map  tailMap  =  optionMap.tailMap(arg);  for  (final  Iterator  iter  =  tailMap.values().iterator();  iter.hasNext();)  {  final  Option  option  =  (Option)  iter.next();  if  (option.canProcess(commandLine,  arg))  {  return  true;  }    [BUGGY]  final  Iterator  <  Option>  iter  =  options.values().iterator();  iter.hasNext();)  {  final  Option  option  =(Option)iter.next();  if(option.canProcess(commandLine,  arg))  {  return  true;  }  [BUGGY]    }  if  (looksLikeOption(commandLine,  arg))  {  return  false;  }  if  (anonymous.size()  >  0)  {  return  true;  }  [CLASS]  GroupImpl  [METHOD]  canProcess  [RETURN_TYPE]  boolean  WriteableCommandLine  commandLine  String  arg  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  SortedMap  newOptionMap  optionMap  WriteableCommandLine  commandLine  Iterator  iter  List  anonymous  newAnonymous  options  Option  option  String  arg  description  name  Map  tailMap  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	137	137	1	replace	final  Iterator  <  Option>  iter  =  options.values().iterator();  iter.hasNext();)  {  final  Option  option  =(Option)iter.next();  if(option.canProcess(commandLine,  arg))  {  return  true;  }	      for(final    Iterator    iter    =    options.values().iterator();    iter.hasNext();)    {    final    Option    option    =(Option)iter.next();    if(option.canProcess(commandLine,    arg))    {    return    true;    }    	non-compiled	[CE]  illegal  start  of  expression	10	None	replace
20	[BUG]  [BUGGY]  final  Iterator  iter  =  options.values().iterator();  iter.hasNext();)  {  final  Option  option  =(Option)iter.next();  if(option.canProcess(commandLine,  arg))  {  return  true  [CE]  illegal  start  of  expression  [FE]                    OptionException    [CONTEXT]      final  Map  tailMap  =  optionMap.tailMap(arg);  for  (final  Iterator  iter  =  tailMap.values().iterator();  iter.hasNext();)  {  final  Option  option  =  (Option)  iter.next();  if  (option.canProcess(commandLine,  arg))  {  return  true;  }    [BUGGY]  final  Iterator  iter  =  options.values().iterator();  iter.hasNext();)  {  final  Option  option  =(Option)iter.next();  if(option.canProcess(commandLine,  arg))  {  return  true  [BUGGY]    }  if  (looksLikeOption(commandLine,  arg))  {  return  false;  }  if  (anonymous.size()  >  0)  {  return  true;  }  [CLASS]  GroupImpl  [METHOD]  canProcess  [RETURN_TYPE]  boolean  WriteableCommandLine  commandLine  String  arg  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  SortedMap  newOptionMap  optionMap  WriteableCommandLine  commandLine  Iterator  iter  List  anonymous  newAnonymous  options  Option  option  String  arg  description  name  Map  tailMap  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	137	137	1	replace	final  Iterator  iter  =  options.values().iterator();  iter.hasNext();)  {  final  Option  option  =(Option)iter.next();  if(option.canProcess(commandLine,  arg))  {  return  true	      for(final    Iterator    iter    =    options.values().iterator();    iter.hasNext();)    {    final    Option    option    =(Option)iter.next();    if(option.canProcess(commandLine,    arg))    {    return    true;    }    	non-compiled	[CE]  illegal  start  of  expression	10	None	replace
21	[BUG]  [BUGGY]  final  Iterator  iter  =  optionMap.values().iterator();  iter.hasNext();)  {  final  Option  option  =(Option)iter.next();  if(option.canProcess(commandLine,  arg))  {  return  true;  }  [CE]  illegal  start  of  expression  [FE]                      OptionException    [CONTEXT]      final  Map  tailMap  =  optionMap.tailMap(arg);  for  (final  Iterator  iter  =  tailMap.values().iterator();  iter.hasNext();)  {  final  Option  option  =  (Option)  iter.next();  if  (option.canProcess(commandLine,  arg))  {  return  true;  }    [BUGGY]  final  Iterator  iter  =  optionMap.values().iterator();  iter.hasNext();)  {  final  Option  option  =(Option)iter.next();  if(option.canProcess(commandLine,  arg))  {  return  true;  }  [BUGGY]    }  if  (looksLikeOption(commandLine,  arg))  {  return  false;  }  if  (anonymous.size()  >  0)  {  return  true;  }  [CLASS]  GroupImpl  [METHOD]  canProcess  [RETURN_TYPE]  boolean  WriteableCommandLine  commandLine  String  arg  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  SortedMap  newOptionMap  optionMap  WriteableCommandLine  commandLine  Iterator  iter  List  anonymous  newAnonymous  options  Option  option  String  arg  description  name  Map  tailMap  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	137	137	1	replace	final  Iterator  iter  =  optionMap.values().iterator();  iter.hasNext();)  {  final  Option  option  =(Option)iter.next();  if(option.canProcess(commandLine,  arg))  {  return  true;  }	      for(final    Iterator    iter    =    options.values().iterator();    iter.hasNext();)    {    final    Option    option    =(Option)iter.next();    if(option.canProcess(commandLine,    arg))    {    return    true;    }    	non-compiled	[CE]  illegal  start  of  expression	10	None	replace
22	[BUG]  [BUGGY]  Set  <  Option>  newAnonymous  =(Set  <  Option>)iter.next();  [CE]  illegal  start  of  expression  [FE]        OptionException    [CONTEXT]      final  Map  tailMap  =  optionMap.tailMap(arg);  for  (final  Iterator  iter  =  tailMap.values().iterator();  iter.hasNext();)  {  final  Option  option  =  (Option)  iter.next();  if  (option.canProcess(commandLine,  arg))  {  return  true;  }    [BUGGY]  Set  <  Option>  newAnonymous  =(Set  <  Option>)iter.next();  [BUGGY]      if  (looksLikeOption(commandLine,  arg))  {  return  false;  }  if  (anonymous.size()  >  0)  {  return  true;  }  [CLASS]  GroupImpl  [METHOD]  canProcess  [RETURN_TYPE]  boolean  WriteableCommandLine  commandLine  String  arg  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  SortedMap  newOptionMap  optionMap  WriteableCommandLine  commandLine  Iterator  iter  List  anonymous  newAnonymous  options  Option  option  String  arg  description  name  Map  tailMap  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	137	137	1	replace	Set  <  Option>  newAnonymous  =(Set  <  Option>)iter.next();	  List    <    Option>    newAnonymous    =(List    <    Option>)iter.next();    	non-compiled	[CE]  illegal  start  of  expression	1	None	replace
23	[BUG]  [BUGGY]  ArrayList  <  Option>  newAnonymous  =(ArrayList  <  Option>)iter.next();  [CE]  illegal  start  of  expression  [FE]          OptionException    [CONTEXT]      final  Map  tailMap  =  optionMap.tailMap(arg);  for  (final  Iterator  iter  =  tailMap.values().iterator();  iter.hasNext();)  {  final  Option  option  =  (Option)  iter.next();  if  (option.canProcess(commandLine,  arg))  {  return  true;  }    [BUGGY]  ArrayList  <  Option>  newAnonymous  =(ArrayList  <  Option>)iter.next();  [BUGGY]      if  (looksLikeOption(commandLine,  arg))  {  return  false;  }  if  (anonymous.size()  >  0)  {  return  true;  }  [CLASS]  GroupImpl  [METHOD]  canProcess  [RETURN_TYPE]  boolean  WriteableCommandLine  commandLine  String  arg  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  SortedMap  newOptionMap  optionMap  WriteableCommandLine  commandLine  Iterator  iter  List  anonymous  newAnonymous  options  Option  option  String  arg  description  name  Map  tailMap  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	137	137	1	replace	ArrayList  <  Option>  newAnonymous  =(ArrayList  <  Option>)iter.next();	  List    <    Option>    newAnonymous    =(List    <    Option>)iter.next();    	non-compiled	[CE]  illegal  start  of  expression	1	None	replace
24	[BUG]  [BUGGY]  final  Iterator  iter  =  options.iterator();  [CE]  illegal  start  of  expression  [FE]              OptionException    [CONTEXT]      final  Map  tailMap  =  optionMap.tailMap(arg);  for  (final  Iterator  iter  =  tailMap.values().iterator();  iter.hasNext();)  {  final  Option  option  =  (Option)  iter.next();  if  (option.canProcess(commandLine,  arg))  {  return  true;  }    [BUGGY]  final  Iterator  iter  =  options.iterator();  [BUGGY]    }  if  (looksLikeOption(commandLine,  arg))  {  return  false;  }  if  (anonymous.size()  >  0)  {  return  true;  }  [CLASS]  GroupImpl  [METHOD]  canProcess  [RETURN_TYPE]  boolean  WriteableCommandLine  commandLine  String  arg  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  SortedMap  newOptionMap  optionMap  WriteableCommandLine  commandLine  Iterator  iter  List  anonymous  newAnonymous  options  Option  option  String  arg  description  name  Map  tailMap  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	137	137	1	replace	final  Iterator  iter  =  options.iterator();	      for(final    Iterator    iter    =    options.iterator();    iter.hasNext();)    {    final    Option    option    =(Option)iter.next();    if(option.canProcess(commandLine,    option))    {    return    false;    }    	non-compiled	[CE]  illegal  start  of  expression	9	None	replace
25	[BUG]  [BUGGY]  Option  commandLine  =  optionMap.values().iterator();  [CE]  illegal  start  of  expression  [FE]                OptionException    [CONTEXT]      final  Map  tailMap  =  optionMap.tailMap(arg);  for  (final  Iterator  iter  =  tailMap.values().iterator();  iter.hasNext();)  {  final  Option  option  =  (Option)  iter.next();  if  (option.canProcess(commandLine,  arg))  {  return  true;  }    [BUGGY]  Option  commandLine  =  optionMap.values().iterator();  [BUGGY]    }  if  (looksLikeOption(commandLine,  arg))  {  return  false;  }  if  (anonymous.size()  >  0)  {  return  true;  }  [CLASS]  GroupImpl  [METHOD]  canProcess  [RETURN_TYPE]  boolean  WriteableCommandLine  commandLine  String  arg  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  SortedMap  newOptionMap  optionMap  WriteableCommandLine  commandLine  Iterator  iter  List  anonymous  newAnonymous  options  Option  option  String  arg  description  name  Map  tailMap  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	137	137	1	replace	Option  commandLine  =  optionMap.values().iterator();	      for(final    Iterator    iter    =    options.iterator();    iter.hasNext();)    {    final    Option    option    =(Option)iter.next();    if(option.canProcess(commandLine,    option))    {    return    false;    }    	non-compiled	[CE]  illegal  start  of  expression	9	None	replace
26	[BUG]  [BUGGY]  final  Iterator  iter  =  optionMap.values().iterator();  [CE]  illegal  start  of  expression  [FE]                  OptionException    [CONTEXT]      final  Map  tailMap  =  optionMap.tailMap(arg);  for  (final  Iterator  iter  =  tailMap.values().iterator();  iter.hasNext();)  {  final  Option  option  =  (Option)  iter.next();  if  (option.canProcess(commandLine,  arg))  {  return  true;  }    [BUGGY]  final  Iterator  iter  =  optionMap.values().iterator();  [BUGGY]    }  if  (looksLikeOption(commandLine,  arg))  {  return  false;  }  if  (anonymous.size()  >  0)  {  return  true;  }  [CLASS]  GroupImpl  [METHOD]  canProcess  [RETURN_TYPE]  boolean  WriteableCommandLine  commandLine  String  arg  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  SortedMap  newOptionMap  optionMap  WriteableCommandLine  commandLine  Iterator  iter  List  anonymous  newAnonymous  options  Option  option  String  arg  description  name  Map  tailMap  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	137	137	1	replace	final  Iterator  iter  =  optionMap.values().iterator();	      for(final    Iterator    iter    =    options.iterator();    iter.hasNext();)    {    final    Option    option    =(Option)iter.next();    if(option.canProcess(commandLine,    option))    {    return    false;    }    	non-compiled	[CE]  illegal  start  of  expression	9	None	replace
27	[BUG]  [BUGGY]  final  Iterator  <  Option>  iter  =  options.iterator();  [CE]  illegal  start  of  expression  [FE]                    OptionException    [CONTEXT]      final  Map  tailMap  =  optionMap.tailMap(arg);  for  (final  Iterator  iter  =  tailMap.values().iterator();  iter.hasNext();)  {  final  Option  option  =  (Option)  iter.next();  if  (option.canProcess(commandLine,  arg))  {  return  true;  }    [BUGGY]  final  Iterator  <  Option>  iter  =  options.iterator();  [BUGGY]    }  if  (looksLikeOption(commandLine,  arg))  {  return  false;  }  if  (anonymous.size()  >  0)  {  return  true;  }  [CLASS]  GroupImpl  [METHOD]  canProcess  [RETURN_TYPE]  boolean  WriteableCommandLine  commandLine  String  arg  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  SortedMap  newOptionMap  optionMap  WriteableCommandLine  commandLine  Iterator  iter  List  anonymous  newAnonymous  options  Option  option  String  arg  description  name  Map  tailMap  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	137	137	1	replace	final  Iterator  <  Option>  iter  =  options.iterator();	      for(final    Iterator    iter    =    options.iterator();    iter.hasNext();)    {    final    Option    option    =(Option)iter.next();    if(option.canProcess(commandLine,    option))    {    return    false;    }    	non-compiled	[CE]  illegal  start  of  expression	9	None	replace
28	[BUG]  [BUGGY]  Option  commandLine  =(Option)iter.next();  [CE]  illegal  start  of  expression  [FE]                OptionException    [CONTEXT]      final  Map  tailMap  =  optionMap.tailMap(arg);  for  (final  Iterator  iter  =  tailMap.values().iterator();  iter.hasNext();)  {  final  Option  option  =  (Option)  iter.next();  if  (option.canProcess(commandLine,  arg))  {  return  true;  }    [BUGGY]  Option  commandLine  =(Option)iter.next();  [BUGGY]      if  (looksLikeOption(commandLine,  arg))  {  return  false;  }  if  (anonymous.size()  >  0)  {  return  true;  }  [CLASS]  GroupImpl  [METHOD]  canProcess  [RETURN_TYPE]  boolean  WriteableCommandLine  commandLine  String  arg  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  SortedMap  newOptionMap  optionMap  WriteableCommandLine  commandLine  Iterator  iter  List  anonymous  newAnonymous  options  Option  option  String  arg  description  name  Map  tailMap  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	137	137	1	replace	Option  commandLine  =(Option)iter.next();	      	non-compiled	[CE]  illegal  start  of  expression	5	None	replace
29	[BUG]  [BUGGY]  Option  commandLine  =  option.getCommandLine(commandLine);  [CE]  illegal  start  of  expression  [FE]                  OptionException    [CONTEXT]      final  Map  tailMap  =  optionMap.tailMap(arg);  for  (final  Iterator  iter  =  tailMap.values().iterator();  iter.hasNext();)  {  final  Option  option  =  (Option)  iter.next();  if  (option.canProcess(commandLine,  arg))  {  return  true;  }    [BUGGY]  Option  commandLine  =  option.getCommandLine(commandLine);  [BUGGY]      if  (looksLikeOption(commandLine,  arg))  {  return  false;  }  if  (anonymous.size()  >  0)  {  return  true;  }  [CLASS]  GroupImpl  [METHOD]  canProcess  [RETURN_TYPE]  boolean  WriteableCommandLine  commandLine  String  arg  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  SortedMap  newOptionMap  optionMap  WriteableCommandLine  commandLine  Iterator  iter  List  anonymous  newAnonymous  options  Option  option  String  arg  description  name  Map  tailMap  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	137	137	1	replace	Option  commandLine  =  option.getCommandLine(commandLine);	      	non-compiled	[CE]  illegal  start  of  expression	5	None	replace
30	[BUG]  [BUGGY]  Option  commandLine  =  option.getArgument();  [CE]  illegal  start  of  expression  [FE]                    OptionException    [CONTEXT]      final  Map  tailMap  =  optionMap.tailMap(arg);  for  (final  Iterator  iter  =  tailMap.values().iterator();  iter.hasNext();)  {  final  Option  option  =  (Option)  iter.next();  if  (option.canProcess(commandLine,  arg))  {  return  true;  }    [BUGGY]  Option  commandLine  =  option.getArgument();  [BUGGY]      if  (looksLikeOption(commandLine,  arg))  {  return  false;  }  if  (anonymous.size()  >  0)  {  return  true;  }  [CLASS]  GroupImpl  [METHOD]  canProcess  [RETURN_TYPE]  boolean  WriteableCommandLine  commandLine  String  arg  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  SortedMap  newOptionMap  optionMap  WriteableCommandLine  commandLine  Iterator  iter  List  anonymous  newAnonymous  options  Option  option  String  arg  description  name  Map  tailMap  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	137	137	1	replace	Option  commandLine  =  option.getArgument();	      	non-compiled	[CE]  illegal  start  of  expression	5	None	replace
31	[BUG]  [BUGGY]  final  Iterator  iter  =  options.values().iterator();  iter.hasNext();)  {  final  Option  option  =(Option)iter.next();  if(option.canProcess(commandLine,  arg))  {  return  false;  }  [CE]  illegal  start  of  expression  [FE]        OptionException    [CONTEXT]      final  Map  tailMap  =  optionMap.tailMap(arg);  for  (final  Iterator  iter  =  tailMap.values().iterator();  iter.hasNext();)  {  final  Option  option  =  (Option)  iter.next();  if  (option.canProcess(commandLine,  arg))  {  return  true;  }    [BUGGY]  final  Iterator  iter  =  options.values().iterator();  iter.hasNext();)  {  final  Option  option  =(Option)iter.next();  if(option.canProcess(commandLine,  arg))  {  return  false;  }  [BUGGY]    }  if  (looksLikeOption(commandLine,  arg))  {  return  false;  }  if  (anonymous.size()  >  0)  {  return  true;  }  [CLASS]  GroupImpl  [METHOD]  canProcess  [RETURN_TYPE]  boolean  WriteableCommandLine  commandLine  String  arg  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  SortedMap  newOptionMap  optionMap  WriteableCommandLine  commandLine  Iterator  iter  List  anonymous  newAnonymous  options  Option  option  String  arg  description  name  Map  tailMap  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	137	137	1	replace	final  Iterator  iter  =  options.values().iterator();  iter.hasNext();)  {  final  Option  option  =(Option)iter.next();  if(option.canProcess(commandLine,  arg))  {  return  false;  }	      for(final    Iterator    iter    =    options.values().iterator();    iter.hasNext();)    {    final    Option    option    =(Option)iter.next();    if(option.canProcess(commandLine,    arg))    {    return    false;    }    	non-compiled	[CE]  illegal  start  of  expression	6	None	replace
32	[BUG]  [BUGGY]  final  Iterator  <  Option>  iter  =  options.values().iterator();  iter.hasNext();)  {  final  Option  option  =(Option)iter.next();  if(option.canProcess(commandLine,  arg))  {  return  false;  }  [CE]  illegal  start  of  expression  [FE]          OptionException    [CONTEXT]      final  Map  tailMap  =  optionMap.tailMap(arg);  for  (final  Iterator  iter  =  tailMap.values().iterator();  iter.hasNext();)  {  final  Option  option  =  (Option)  iter.next();  if  (option.canProcess(commandLine,  arg))  {  return  true;  }    [BUGGY]  final  Iterator  <  Option>  iter  =  options.values().iterator();  iter.hasNext();)  {  final  Option  option  =(Option)iter.next();  if(option.canProcess(commandLine,  arg))  {  return  false;  }  [BUGGY]    }  if  (looksLikeOption(commandLine,  arg))  {  return  false;  }  if  (anonymous.size()  >  0)  {  return  true;  }  [CLASS]  GroupImpl  [METHOD]  canProcess  [RETURN_TYPE]  boolean  WriteableCommandLine  commandLine  String  arg  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  SortedMap  newOptionMap  optionMap  WriteableCommandLine  commandLine  Iterator  iter  List  anonymous  newAnonymous  options  Option  option  String  arg  description  name  Map  tailMap  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	137	137	1	replace	final  Iterator  <  Option>  iter  =  options.values().iterator();  iter.hasNext();)  {  final  Option  option  =(Option)iter.next();  if(option.canProcess(commandLine,  arg))  {  return  false;  }	      for(final    Iterator    iter    =    options.values().iterator();    iter.hasNext();)    {    final    Option    option    =(Option)iter.next();    if(option.canProcess(commandLine,    arg))    {    return    false;    }    	non-compiled	[CE]  illegal  start  of  expression	6	None	replace
33	[BUG]  [BUGGY]  final  Iterator  iter  =  optionMap.values().iterator();  iter.hasNext();)  {  final  Option  option  =(Option)iter.next();  if(option.canProcess(commandLine,  arg))  {  return  false;  }  [CE]  illegal  start  of  expression  [FE]            OptionException    [CONTEXT]      final  Map  tailMap  =  optionMap.tailMap(arg);  for  (final  Iterator  iter  =  tailMap.values().iterator();  iter.hasNext();)  {  final  Option  option  =  (Option)  iter.next();  if  (option.canProcess(commandLine,  arg))  {  return  true;  }    [BUGGY]  final  Iterator  iter  =  optionMap.values().iterator();  iter.hasNext();)  {  final  Option  option  =(Option)iter.next();  if(option.canProcess(commandLine,  arg))  {  return  false;  }  [BUGGY]    }  if  (looksLikeOption(commandLine,  arg))  {  return  false;  }  if  (anonymous.size()  >  0)  {  return  true;  }  [CLASS]  GroupImpl  [METHOD]  canProcess  [RETURN_TYPE]  boolean  WriteableCommandLine  commandLine  String  arg  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  SortedMap  newOptionMap  optionMap  WriteableCommandLine  commandLine  Iterator  iter  List  anonymous  newAnonymous  options  Option  option  String  arg  description  name  Map  tailMap  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	137	137	1	replace	final  Iterator  iter  =  optionMap.values().iterator();  iter.hasNext();)  {  final  Option  option  =(Option)iter.next();  if(option.canProcess(commandLine,  arg))  {  return  false;  }	      for(final    Iterator    iter    =    options.values().iterator();    iter.hasNext();)    {    final    Option    option    =(Option)iter.next();    if(option.canProcess(commandLine,    arg))    {    return    false;    }    	non-compiled	[CE]  illegal  start  of  expression	6	None	replace
34	[BUG]  [BUGGY]  Option  commandLine  =  option.canProcess(commandLine,  arg);  [CE]  illegal  start  of  expression  [FE]          OptionException    [CONTEXT]      final  Map  tailMap  =  optionMap.tailMap(arg);  for  (final  Iterator  iter  =  tailMap.values().iterator();  iter.hasNext();)  {  final  Option  option  =  (Option)  iter.next();  if  (option.canProcess(commandLine,  arg))  {  return  true;  }    [BUGGY]  Option  commandLine  =  option.canProcess(commandLine,  arg);  [BUGGY]      if  (looksLikeOption(commandLine,  arg))  {  return  false;  }  if  (anonymous.size()  >  0)  {  return  true;  }  [CLASS]  GroupImpl  [METHOD]  canProcess  [RETURN_TYPE]  boolean  WriteableCommandLine  commandLine  String  arg  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  SortedMap  newOptionMap  optionMap  WriteableCommandLine  commandLine  Iterator  iter  List  anonymous  newAnonymous  options  Option  option  String  arg  description  name  Map  tailMap  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	137	137	1	replace	Option  commandLine  =  option.canProcess(commandLine,  arg);	  Option    commandLine    =    option.getCommandLine();    	non-compiled	[CE]  illegal  start  of  expression	18	None	replace
35	[BUG]  [BUGGY]  List  <  Option>  newAnonymous  =  option.values().iterator();  [CE]  illegal  start  of  expression  [FE]              OptionException    [CONTEXT]      final  Map  tailMap  =  optionMap.tailMap(arg);  for  (final  Iterator  iter  =  tailMap.values().iterator();  iter.hasNext();)  {  final  Option  option  =  (Option)  iter.next();  if  (option.canProcess(commandLine,  arg))  {  return  true;  }    [BUGGY]  List  <  Option>  newAnonymous  =  option.values().iterator();  [BUGGY]      if  (looksLikeOption(commandLine,  arg))  {  return  false;  }  if  (anonymous.size()  >  0)  {  return  true;  }  [CLASS]  GroupImpl  [METHOD]  canProcess  [RETURN_TYPE]  boolean  WriteableCommandLine  commandLine  String  arg  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  SortedMap  newOptionMap  optionMap  WriteableCommandLine  commandLine  Iterator  iter  List  anonymous  newAnonymous  options  Option  option  String  arg  description  name  Map  tailMap  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	137	137	1	replace	List  <  Option>  newAnonymous  =  option.values().iterator();	  List    <    Option>    newAnonymous    =    options.values().iterator();    	non-compiled	[CE]  illegal  start  of  expression	14	None	replace
36	[BUG]  [BUGGY]  final  List  <  Option>  newAnonymous  =  options.values().iterator();  [CE]  illegal  start  of  expression  [FE]                OptionException    [CONTEXT]      final  Map  tailMap  =  optionMap.tailMap(arg);  for  (final  Iterator  iter  =  tailMap.values().iterator();  iter.hasNext();)  {  final  Option  option  =  (Option)  iter.next();  if  (option.canProcess(commandLine,  arg))  {  return  true;  }    [BUGGY]  final  List  <  Option>  newAnonymous  =  options.values().iterator();  [BUGGY]      if  (looksLikeOption(commandLine,  arg))  {  return  false;  }  if  (anonymous.size()  >  0)  {  return  true;  }  [CLASS]  GroupImpl  [METHOD]  canProcess  [RETURN_TYPE]  boolean  WriteableCommandLine  commandLine  String  arg  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  SortedMap  newOptionMap  optionMap  WriteableCommandLine  commandLine  Iterator  iter  List  anonymous  newAnonymous  options  Option  option  String  arg  description  name  Map  tailMap  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	137	137	1	replace	final  List  <  Option>  newAnonymous  =  options.values().iterator();	  List    <    Option>    newAnonymous    =    options.values().iterator();    	non-compiled	[CE]  illegal  start  of  expression	14	None	replace
37	[BUG]  [BUGGY]  List  <  Option>  newAnonymous  =  options.keySet().iterator();  [CE]  illegal  start  of  expression  [FE]                  OptionException    [CONTEXT]      final  Map  tailMap  =  optionMap.tailMap(arg);  for  (final  Iterator  iter  =  tailMap.values().iterator();  iter.hasNext();)  {  final  Option  option  =  (Option)  iter.next();  if  (option.canProcess(commandLine,  arg))  {  return  true;  }    [BUGGY]  List  <  Option>  newAnonymous  =  options.keySet().iterator();  [BUGGY]      if  (looksLikeOption(commandLine,  arg))  {  return  false;  }  if  (anonymous.size()  >  0)  {  return  true;  }  [CLASS]  GroupImpl  [METHOD]  canProcess  [RETURN_TYPE]  boolean  WriteableCommandLine  commandLine  String  arg  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  SortedMap  newOptionMap  optionMap  WriteableCommandLine  commandLine  Iterator  iter  List  anonymous  newAnonymous  options  Option  option  String  arg  description  name  Map  tailMap  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	137	137	1	replace	List  <  Option>  newAnonymous  =  options.keySet().iterator();	  List    <    Option>    newAnonymous    =    options.values().iterator();    	non-compiled	[CE]  illegal  start  of  expression	14	None	replace
38	[BUG]  [BUGGY]  Option  option  =  optionMap.getOption(arg);  if(option!=  null)  {  return  false;  }  [CE]  illegal  start  of  expression  [FE]        OptionException    [CONTEXT]      final  Map  tailMap  =  optionMap.tailMap(arg);  for  (final  Iterator  iter  =  tailMap.values().iterator();  iter.hasNext();)  {  final  Option  option  =  (Option)  iter.next();  if  (option.canProcess(commandLine,  arg))  {  return  true;  }    [BUGGY]  Option  option  =  optionMap.getOption(arg);  if(option!=  null)  {  return  false;  }  [BUGGY]    }  if  (looksLikeOption(commandLine,  arg))  {  return  false;  }  if  (anonymous.size()  >  0)  {  return  true;  }  [CLASS]  GroupImpl  [METHOD]  canProcess  [RETURN_TYPE]  boolean  WriteableCommandLine  commandLine  String  arg  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  SortedMap  newOptionMap  optionMap  WriteableCommandLine  commandLine  Iterator  iter  List  anonymous  newAnonymous  options  Option  option  String  arg  description  name  Map  tailMap  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	137	137	1	replace	Option  option  =  optionMap.getOption(arg);  if(option!=  null)  {  return  false;  }	      Option    option    =    option.getOption(arg);    if(option!=    null)    {    return    false;    }    	non-compiled	[CE]  illegal  start  of  expression	19	None	replace
39	[BUG]  [BUGGY]  Option  option  =  option.getOption(commandLine);  if(option!=  null)  {  return  false;  }  [CE]  illegal  start  of  expression  [FE]          OptionException    [CONTEXT]      final  Map  tailMap  =  optionMap.tailMap(arg);  for  (final  Iterator  iter  =  tailMap.values().iterator();  iter.hasNext();)  {  final  Option  option  =  (Option)  iter.next();  if  (option.canProcess(commandLine,  arg))  {  return  true;  }    [BUGGY]  Option  option  =  option.getOption(commandLine);  if(option!=  null)  {  return  false;  }  [BUGGY]    }  if  (looksLikeOption(commandLine,  arg))  {  return  false;  }  if  (anonymous.size()  >  0)  {  return  true;  }  [CLASS]  GroupImpl  [METHOD]  canProcess  [RETURN_TYPE]  boolean  WriteableCommandLine  commandLine  String  arg  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  SortedMap  newOptionMap  optionMap  WriteableCommandLine  commandLine  Iterator  iter  List  anonymous  newAnonymous  options  Option  option  String  arg  description  name  Map  tailMap  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	137	137	1	replace	Option  option  =  option.getOption(commandLine);  if(option!=  null)  {  return  false;  }	      Option    option    =    option.getOption(arg);    if(option!=    null)    {    return    false;    }    	non-compiled	[CE]  illegal  start  of  expression	19	None	replace
40	[BUG]  [BUGGY]  Option  option  =  optionMap.getOption(arg);  [CE]  illegal  start  of  expression  [FE]            OptionException    [CONTEXT]      final  Map  tailMap  =  optionMap.tailMap(arg);  for  (final  Iterator  iter  =  tailMap.values().iterator();  iter.hasNext();)  {  final  Option  option  =  (Option)  iter.next();  if  (option.canProcess(commandLine,  arg))  {  return  true;  }    [BUGGY]  Option  option  =  optionMap.getOption(arg);  [BUGGY]    }  if  (looksLikeOption(commandLine,  arg))  {  return  false;  }  if  (anonymous.size()  >  0)  {  return  true;  }  [CLASS]  GroupImpl  [METHOD]  canProcess  [RETURN_TYPE]  boolean  WriteableCommandLine  commandLine  String  arg  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  SortedMap  newOptionMap  optionMap  WriteableCommandLine  commandLine  Iterator  iter  List  anonymous  newAnonymous  options  Option  option  String  arg  description  name  Map  tailMap  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	137	137	1	replace	Option  option  =  optionMap.getOption(arg);	      Option    option    =    option.getOption(arg);    if(option!=    null)    {    return    false;    }    	non-compiled	[CE]  illegal  start  of  expression	19	None	replace
41	[BUG]  [BUGGY]  final  Set  <  Option>  newAnonymous  =(Set  <  Option>)optionMap.values().iterator();  [CE]  illegal  start  of  expression  [FE]              OptionException    [CONTEXT]      final  Map  tailMap  =  optionMap.tailMap(arg);  for  (final  Iterator  iter  =  tailMap.values().iterator();  iter.hasNext();)  {  final  Option  option  =  (Option)  iter.next();  if  (option.canProcess(commandLine,  arg))  {  return  true;  }    [BUGGY]  final  Set  <  Option>  newAnonymous  =(Set  <  Option>)optionMap.values().iterator();  [BUGGY]      if  (looksLikeOption(commandLine,  arg))  {  return  false;  }  if  (anonymous.size()  >  0)  {  return  true;  }  [CLASS]  GroupImpl  [METHOD]  canProcess  [RETURN_TYPE]  boolean  WriteableCommandLine  commandLine  String  arg  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  SortedMap  newOptionMap  optionMap  WriteableCommandLine  commandLine  Iterator  iter  List  anonymous  newAnonymous  options  Option  option  String  arg  description  name  Map  tailMap  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	137	137	1	replace	final  Set  <  Option>  newAnonymous  =(Set  <  Option>)optionMap.values().iterator();	  final    List    <    Option>    newAnonymous    =(List    <    Option>)optionMap.values().iterator();    	non-compiled	[CE]  illegal  start  of  expression	4	None	replace
42	[BUG]  [BUGGY]  final  ArrayList  <  Option>  newAnonymous  =(ArrayList  <  Option>)optionMap.values().iterator();  [CE]  illegal  start  of  expression  [FE]                OptionException    [CONTEXT]      final  Map  tailMap  =  optionMap.tailMap(arg);  for  (final  Iterator  iter  =  tailMap.values().iterator();  iter.hasNext();)  {  final  Option  option  =  (Option)  iter.next();  if  (option.canProcess(commandLine,  arg))  {  return  true;  }    [BUGGY]  final  ArrayList  <  Option>  newAnonymous  =(ArrayList  <  Option>)optionMap.values().iterator();  [BUGGY]      if  (looksLikeOption(commandLine,  arg))  {  return  false;  }  if  (anonymous.size()  >  0)  {  return  true;  }  [CLASS]  GroupImpl  [METHOD]  canProcess  [RETURN_TYPE]  boolean  WriteableCommandLine  commandLine  String  arg  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  SortedMap  newOptionMap  optionMap  WriteableCommandLine  commandLine  Iterator  iter  List  anonymous  newAnonymous  options  Option  option  String  arg  description  name  Map  tailMap  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	137	137	1	replace	final  ArrayList  <  Option>  newAnonymous  =(ArrayList  <  Option>)optionMap.values().iterator();	  final    List    <    Option>    newAnonymous    =(List    <    Option>)optionMap.values().iterator();    	non-compiled	[CE]  illegal  start  of  expression	4	None	replace
43	[BUG]  [BUGGY]  Option  option  =  options.getOption(arg);  [CE]  illegal  start  of  expression  [FE]        OptionException    [CONTEXT]      final  Map  tailMap  =  optionMap.tailMap(arg);  for  (final  Iterator  iter  =  tailMap.values().iterator();  iter.hasNext();)  {  final  Option  option  =  (Option)  iter.next();  if  (option.canProcess(commandLine,  arg))  {  return  true;  }    [BUGGY]  Option  option  =  options.getOption(arg);  [BUGGY]      if  (looksLikeOption(commandLine,  arg))  {  return  false;  }  if  (anonymous.size()  >  0)  {  return  true;  }  [CLASS]  GroupImpl  [METHOD]  canProcess  [RETURN_TYPE]  boolean  WriteableCommandLine  commandLine  String  arg  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  SortedMap  newOptionMap  optionMap  WriteableCommandLine  commandLine  Iterator  iter  List  anonymous  newAnonymous  options  Option  option  String  arg  description  name  Map  tailMap  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	137	137	1	replace	Option  option  =  options.getOption(arg);	  Option    option    =    option.getOption(arg);    	non-compiled	[CE]  illegal  start  of  expression	17	None	replace
44	[BUG]  [BUGGY]  Option  option  =  option.getOption(commandLine,  arg);  [CE]  illegal  start  of  expression  [FE]          OptionException    [CONTEXT]      final  Map  tailMap  =  optionMap.tailMap(arg);  for  (final  Iterator  iter  =  tailMap.values().iterator();  iter.hasNext();)  {  final  Option  option  =  (Option)  iter.next();  if  (option.canProcess(commandLine,  arg))  {  return  true;  }    [BUGGY]  Option  option  =  option.getOption(commandLine,  arg);  [BUGGY]      if  (looksLikeOption(commandLine,  arg))  {  return  false;  }  if  (anonymous.size()  >  0)  {  return  true;  }  [CLASS]  GroupImpl  [METHOD]  canProcess  [RETURN_TYPE]  boolean  WriteableCommandLine  commandLine  String  arg  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  SortedMap  newOptionMap  optionMap  WriteableCommandLine  commandLine  Iterator  iter  List  anonymous  newAnonymous  options  Option  option  String  arg  description  name  Map  tailMap  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	137	137	1	replace	Option  option  =  option.getOption(commandLine,  arg);	  Option    option    =    option.getOption(arg);    	non-compiled	[CE]  illegal  start  of  expression	17	None	replace
45	[BUG]  [BUGGY]  Option  option  =  option.createOption(arg);  [CE]  illegal  start  of  expression  [FE]        OptionException    [CONTEXT]      final  Map  tailMap  =  optionMap.tailMap(arg);  for  (final  Iterator  iter  =  tailMap.values().iterator();  iter.hasNext();)  {  final  Option  option  =  (Option)  iter.next();  if  (option.canProcess(commandLine,  arg))  {  return  true;  }    [BUGGY]  Option  option  =  option.createOption(arg);  [BUGGY]    }  if  (looksLikeOption(commandLine,  arg))  {  return  false;  }  if  (anonymous.size()  >  0)  {  return  true;  }  [CLASS]  GroupImpl  [METHOD]  canProcess  [RETURN_TYPE]  boolean  WriteableCommandLine  commandLine  String  arg  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  SortedMap  newOptionMap  optionMap  WriteableCommandLine  commandLine  Iterator  iter  List  anonymous  newAnonymous  options  Option  option  String  arg  description  name  Map  tailMap  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	137	137	1	replace	Option  option  =  option.createOption(arg);	      if(option.canProcess(commandLine,    arg))    {    return    false;    }    	non-compiled	[CE]  illegal  start  of  expression	15	None	replace
46	[BUG]  [BUGGY]  final  Set  <  Option>  newAnonymous  =  optionMap.values().iterator();  [CE]  illegal  start  of  expression  [FE]            OptionException    [CONTEXT]      final  Map  tailMap  =  optionMap.tailMap(arg);  for  (final  Iterator  iter  =  tailMap.values().iterator();  iter.hasNext();)  {  final  Option  option  =  (Option)  iter.next();  if  (option.canProcess(commandLine,  arg))  {  return  true;  }    [BUGGY]  final  Set  <  Option>  newAnonymous  =  optionMap.values().iterator();  [BUGGY]      if  (looksLikeOption(commandLine,  arg))  {  return  false;  }  if  (anonymous.size()  >  0)  {  return  true;  }  [CLASS]  GroupImpl  [METHOD]  canProcess  [RETURN_TYPE]  boolean  WriteableCommandLine  commandLine  String  arg  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  SortedMap  newOptionMap  optionMap  WriteableCommandLine  commandLine  Iterator  iter  List  anonymous  newAnonymous  options  Option  option  String  arg  description  name  Map  tailMap  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	137	137	1	replace	final  Set  <  Option>  newAnonymous  =  optionMap.values().iterator();	  final    List    <    Option>    newAnonymous    =    optionMap.values().iterator();    	non-compiled	[CE]  illegal  start  of  expression	13	None	replace
47	[BUG]  [BUGGY]  final  List  <  Option>  newAnonymous  =  optionMap.keySet().iterator();  [CE]  illegal  start  of  expression  [FE]              OptionException    [CONTEXT]      final  Map  tailMap  =  optionMap.tailMap(arg);  for  (final  Iterator  iter  =  tailMap.values().iterator();  iter.hasNext();)  {  final  Option  option  =  (Option)  iter.next();  if  (option.canProcess(commandLine,  arg))  {  return  true;  }    [BUGGY]  final  List  <  Option>  newAnonymous  =  optionMap.keySet().iterator();  [BUGGY]      if  (looksLikeOption(commandLine,  arg))  {  return  false;  }  if  (anonymous.size()  >  0)  {  return  true;  }  [CLASS]  GroupImpl  [METHOD]  canProcess  [RETURN_TYPE]  boolean  WriteableCommandLine  commandLine  String  arg  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  SortedMap  newOptionMap  optionMap  WriteableCommandLine  commandLine  Iterator  iter  List  anonymous  newAnonymous  options  Option  option  String  arg  description  name  Map  tailMap  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	137	137	1	replace	final  List  <  Option>  newAnonymous  =  optionMap.keySet().iterator();	  final    List    <    Option>    newAnonymous    =    optionMap.values().iterator();    	non-compiled	[CE]  illegal  start  of  expression	13	None	replace
48	[BUG]  [BUGGY]  Option  commandLine  =  option.getCommandLine(arg);  [CE]  illegal  start  of  expression  [FE]          OptionException    [CONTEXT]      final  Map  tailMap  =  optionMap.tailMap(arg);  for  (final  Iterator  iter  =  tailMap.values().iterator();  iter.hasNext();)  {  final  Option  option  =  (Option)  iter.next();  if  (option.canProcess(commandLine,  arg))  {  return  true;  }    [BUGGY]  Option  commandLine  =  option.getCommandLine(arg);  [BUGGY]      if  (looksLikeOption(commandLine,  arg))  {  return  false;  }  if  (anonymous.size()  >  0)  {  return  true;  }  [CLASS]  GroupImpl  [METHOD]  canProcess  [RETURN_TYPE]  boolean  WriteableCommandLine  commandLine  String  arg  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  SortedMap  newOptionMap  optionMap  WriteableCommandLine  commandLine  Iterator  iter  List  anonymous  newAnonymous  options  Option  option  String  arg  description  name  Map  tailMap  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	137	137	1	replace	Option  commandLine  =  option.getCommandLine(arg);	  Option    commandLine    =    option.getCommandLine();    	non-compiled	[CE]  illegal  start  of  expression	18	None	replace
49	[BUG]  [BUGGY]  Option  commandLine  =  optionMap.get(arg);  [CE]  illegal  start  of  expression  [FE]                OptionException    [CONTEXT]      final  Map  tailMap  =  optionMap.tailMap(arg);  for  (final  Iterator  iter  =  tailMap.values().iterator();  iter.hasNext();)  {  final  Option  option  =  (Option)  iter.next();  if  (option.canProcess(commandLine,  arg))  {  return  true;  }    [BUGGY]  Option  commandLine  =  optionMap.get(arg);  [BUGGY]      if  (looksLikeOption(commandLine,  arg))  {  return  false;  }  if  (anonymous.size()  >  0)  {  return  true;  }  [CLASS]  GroupImpl  [METHOD]  canProcess  [RETURN_TYPE]  boolean  WriteableCommandLine  commandLine  String  arg  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  SortedMap  newOptionMap  optionMap  WriteableCommandLine  commandLine  Iterator  iter  List  anonymous  newAnonymous  options  Option  option  String  arg  description  name  Map  tailMap  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	137	137	1	replace	Option  commandLine  =  optionMap.get(arg);	      	non-compiled	[CE]  illegal  start  of  expression	5	None	replace
50	[BUG]  [BUGGY]  Option  option  =  optionMap.get(arg);  [CE]  illegal  start  of  expression  [FE]        OptionException    [CONTEXT]      final  Map  tailMap  =  optionMap.tailMap(arg);  for  (final  Iterator  iter  =  tailMap.values().iterator();  iter.hasNext();)  {  final  Option  option  =  (Option)  iter.next();  if  (option.canProcess(commandLine,  arg))  {  return  true;  }    [BUGGY]  Option  option  =  optionMap.get(arg);  [BUGGY]    }  if  (looksLikeOption(commandLine,  arg))  {  return  false;  }  if  (anonymous.size()  >  0)  {  return  true;  }  [CLASS]  GroupImpl  [METHOD]  canProcess  [RETURN_TYPE]  boolean  WriteableCommandLine  commandLine  String  arg  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  SortedMap  newOptionMap  optionMap  WriteableCommandLine  commandLine  Iterator  iter  List  anonymous  newAnonymous  options  Option  option  String  arg  description  name  Map  tailMap  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	137	137	1	replace	Option  option  =  optionMap.get(arg);	      if(option.canProcess(commandLine,    arg))    {    return    false;    }    	non-compiled	[CE]  illegal  start  of  expression	15	None	replace
51	[BUG]  [BUGGY]  final  List  <  Option>  newAnonymous  =(List  <  Option>)option.next();  [CE]  illegal  start  of  expression  [FE]            OptionException    [CONTEXT]      final  Map  tailMap  =  optionMap.tailMap(arg);  for  (final  Iterator  iter  =  tailMap.values().iterator();  iter.hasNext();)  {  final  Option  option  =  (Option)  iter.next();  if  (option.canProcess(commandLine,  arg))  {  return  true;  }    [BUGGY]  final  List  <  Option>  newAnonymous  =(List  <  Option>)option.next();  [BUGGY]      if  (looksLikeOption(commandLine,  arg))  {  return  false;  }  if  (anonymous.size()  >  0)  {  return  true;  }  [CLASS]  GroupImpl  [METHOD]  canProcess  [RETURN_TYPE]  boolean  WriteableCommandLine  commandLine  String  arg  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  SortedMap  newOptionMap  optionMap  WriteableCommandLine  commandLine  Iterator  iter  List  anonymous  newAnonymous  options  Option  option  String  arg  description  name  Map  tailMap  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	137	137	1	replace	final  List  <  Option>  newAnonymous  =(List  <  Option>)option.next();	  final    List    <    Option>    newAnonymous    =(List    <    Option>)iter.next();    	non-compiled	[CE]  illegal  start  of  expression	3	None	replace
52	[BUG]  [BUGGY]  final  List  <  Option>  anonymous  =(List  <  Option>)iter.next();  [CE]  illegal  start  of  expression  [FE]              OptionException    [CONTEXT]      final  Map  tailMap  =  optionMap.tailMap(arg);  for  (final  Iterator  iter  =  tailMap.values().iterator();  iter.hasNext();)  {  final  Option  option  =  (Option)  iter.next();  if  (option.canProcess(commandLine,  arg))  {  return  true;  }    [BUGGY]  final  List  <  Option>  anonymous  =(List  <  Option>)iter.next();  [BUGGY]      if  (looksLikeOption(commandLine,  arg))  {  return  false;  }  if  (anonymous.size()  >  0)  {  return  true;  }  [CLASS]  GroupImpl  [METHOD]  canProcess  [RETURN_TYPE]  boolean  WriteableCommandLine  commandLine  String  arg  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  SortedMap  newOptionMap  optionMap  WriteableCommandLine  commandLine  Iterator  iter  List  anonymous  newAnonymous  options  Option  option  String  arg  description  name  Map  tailMap  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	137	137	1	replace	final  List  <  Option>  anonymous  =(List  <  Option>)iter.next();	  final    List    <    Option>    newAnonymous    =(List    <    Option>)iter.next();    	non-compiled	[CE]  illegal  start  of  expression	3	None	replace
53	[BUG]  [BUGGY]  final  Iterator  iter  =  options.values().iterator();  [CE]  illegal  start  of  expression  [FE]              OptionException    [CONTEXT]      final  Map  tailMap  =  optionMap.tailMap(arg);  for  (final  Iterator  iter  =  tailMap.values().iterator();  iter.hasNext();)  {  final  Option  option  =  (Option)  iter.next();  if  (option.canProcess(commandLine,  arg))  {  return  true;  }    [BUGGY]  final  Iterator  iter  =  options.values().iterator();  [BUGGY]    }  if  (looksLikeOption(commandLine,  arg))  {  return  false;  }  if  (anonymous.size()  >  0)  {  return  true;  }  [CLASS]  GroupImpl  [METHOD]  canProcess  [RETURN_TYPE]  boolean  WriteableCommandLine  commandLine  String  arg  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  SortedMap  newOptionMap  optionMap  WriteableCommandLine  commandLine  Iterator  iter  List  anonymous  newAnonymous  options  Option  option  String  arg  description  name  Map  tailMap  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	137	137	1	replace	final  Iterator  iter  =  options.values().iterator();	      for(final    Iterator    iter    =    options.iterator();    iter.hasNext();)    {    final    Option    option    =(Option)iter.next();    if(option.canProcess(commandLine,    option))    {    return    false;    }    	non-compiled	[CE]  illegal  start  of  expression	9	None	replace
54	[BUG]  [BUGGY]  final  Iterator  <  Option>  iter  =  options.values().iterator();  [CE]  illegal  start  of  expression  [FE]                OptionException    [CONTEXT]      final  Map  tailMap  =  optionMap.tailMap(arg);  for  (final  Iterator  iter  =  tailMap.values().iterator();  iter.hasNext();)  {  final  Option  option  =  (Option)  iter.next();  if  (option.canProcess(commandLine,  arg))  {  return  true;  }    [BUGGY]  final  Iterator  <  Option>  iter  =  options.values().iterator();  [BUGGY]    }  if  (looksLikeOption(commandLine,  arg))  {  return  false;  }  if  (anonymous.size()  >  0)  {  return  true;  }  [CLASS]  GroupImpl  [METHOD]  canProcess  [RETURN_TYPE]  boolean  WriteableCommandLine  commandLine  String  arg  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  SortedMap  newOptionMap  optionMap  WriteableCommandLine  commandLine  Iterator  iter  List  anonymous  newAnonymous  options  Option  option  String  arg  description  name  Map  tailMap  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	137	137	1	replace	final  Iterator  <  Option>  iter  =  options.values().iterator();	      for(final    Iterator    iter    =    options.iterator();    iter.hasNext();)    {    final    Option    option    =(Option)iter.next();    if(option.canProcess(commandLine,    option))    {    return    false;    }    	non-compiled	[CE]  illegal  start  of  expression	9	None	replace
55	[BUG]  [BUGGY]  List  <  Option>  newAnonymous  =(List  <  Option>)option.next();  [CE]  illegal  start  of  expression  [FE]        OptionException    [CONTEXT]      final  Map  tailMap  =  optionMap.tailMap(arg);  for  (final  Iterator  iter  =  tailMap.values().iterator();  iter.hasNext();)  {  final  Option  option  =  (Option)  iter.next();  if  (option.canProcess(commandLine,  arg))  {  return  true;  }    [BUGGY]  List  <  Option>  newAnonymous  =(List  <  Option>)option.next();  [BUGGY]      if  (looksLikeOption(commandLine,  arg))  {  return  false;  }  if  (anonymous.size()  >  0)  {  return  true;  }  [CLASS]  GroupImpl  [METHOD]  canProcess  [RETURN_TYPE]  boolean  WriteableCommandLine  commandLine  String  arg  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  SortedMap  newOptionMap  optionMap  WriteableCommandLine  commandLine  Iterator  iter  List  anonymous  newAnonymous  options  Option  option  String  arg  description  name  Map  tailMap  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	137	137	1	replace	List  <  Option>  newAnonymous  =(List  <  Option>)option.next();	  List    <    Option>    newAnonymous    =(List    <    Option>)iter.next();    	non-compiled	[CE]  illegal  start  of  expression	1	None	replace
56	[BUG]  [BUGGY]  final  Iterator  iter  =  optionMap.values().iterator();  iter.hasNext();)  {  final  Option  option  =(Option)iter.next();  if(option.canProcess(commandLine,  arg))  {  return  true  [CE]  illegal  start  of  expression  [FE]                OptionException    [CONTEXT]      final  Map  tailMap  =  optionMap.tailMap(arg);  for  (final  Iterator  iter  =  tailMap.values().iterator();  iter.hasNext();)  {  final  Option  option  =  (Option)  iter.next();  if  (option.canProcess(commandLine,  arg))  {  return  true;  }    [BUGGY]  final  Iterator  iter  =  optionMap.values().iterator();  iter.hasNext();)  {  final  Option  option  =(Option)iter.next();  if(option.canProcess(commandLine,  arg))  {  return  true  [BUGGY]    }  if  (looksLikeOption(commandLine,  arg))  {  return  false;  }  if  (anonymous.size()  >  0)  {  return  true;  }  [CLASS]  GroupImpl  [METHOD]  canProcess  [RETURN_TYPE]  boolean  WriteableCommandLine  commandLine  String  arg  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  SortedMap  newOptionMap  optionMap  WriteableCommandLine  commandLine  Iterator  iter  List  anonymous  newAnonymous  options  Option  option  String  arg  description  name  Map  tailMap  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	137	137	1	replace	final  Iterator  iter  =  optionMap.values().iterator();  iter.hasNext();)  {  final  Option  option  =(Option)iter.next();  if(option.canProcess(commandLine,  arg))  {  return  true	      for(final    Iterator    iter    =    options.values().iterator();    iter.hasNext();)    {    final    Option    option    =(Option)iter.next();    if(option.canProcess(commandLine,    arg))    {    return    true;    }    	non-compiled	[CE]  illegal  start  of  expression	10	None	replace
57	[BUG]  [BUGGY]  final  Iterator  <  Option>  iter  =  options.values().iterator();  iter.hasNext();)  {  final  Option  option  =(Option)iter.next();  if(option.canProcess(commandLine,  arg))  {  return  true  [CE]  illegal  start  of  expression  [FE]                  OptionException    [CONTEXT]      final  Map  tailMap  =  optionMap.tailMap(arg);  for  (final  Iterator  iter  =  tailMap.values().iterator();  iter.hasNext();)  {  final  Option  option  =  (Option)  iter.next();  if  (option.canProcess(commandLine,  arg))  {  return  true;  }    [BUGGY]  final  Iterator  <  Option>  iter  =  options.values().iterator();  iter.hasNext();)  {  final  Option  option  =(Option)iter.next();  if(option.canProcess(commandLine,  arg))  {  return  true  [BUGGY]    }  if  (looksLikeOption(commandLine,  arg))  {  return  false;  }  if  (anonymous.size()  >  0)  {  return  true;  }  [CLASS]  GroupImpl  [METHOD]  canProcess  [RETURN_TYPE]  boolean  WriteableCommandLine  commandLine  String  arg  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  SortedMap  newOptionMap  optionMap  WriteableCommandLine  commandLine  Iterator  iter  List  anonymous  newAnonymous  options  Option  option  String  arg  description  name  Map  tailMap  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	137	137	1	replace	final  Iterator  <  Option>  iter  =  options.values().iterator();  iter.hasNext();)  {  final  Option  option  =(Option)iter.next();  if(option.canProcess(commandLine,  arg))  {  return  true	      for(final    Iterator    iter    =    options.values().iterator();    iter.hasNext();)    {    final    Option    option    =(Option)iter.next();    if(option.canProcess(commandLine,    arg))    {    return    true;    }    	non-compiled	[CE]  illegal  start  of  expression	10	None	replace
58	[BUG]  [BUGGY]  Option  option  =  optionMap.getOption(arg);  if(option  ==  null)  {  return  false;  }  [CE]  illegal  start  of  expression  [FE]        OptionException    [CONTEXT]      final  Map  tailMap  =  optionMap.tailMap(arg);  for  (final  Iterator  iter  =  tailMap.values().iterator();  iter.hasNext();)  {  final  Option  option  =  (Option)  iter.next();  if  (option.canProcess(commandLine,  arg))  {  return  true;  }    [BUGGY]  Option  option  =  optionMap.getOption(arg);  if(option  ==  null)  {  return  false;  }  [BUGGY]    }  if  (looksLikeOption(commandLine,  arg))  {  return  false;  }  if  (anonymous.size()  >  0)  {  return  true;  }  [CLASS]  GroupImpl  [METHOD]  canProcess  [RETURN_TYPE]  boolean  WriteableCommandLine  commandLine  String  arg  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  SortedMap  newOptionMap  optionMap  WriteableCommandLine  commandLine  Iterator  iter  List  anonymous  newAnonymous  options  Option  option  String  arg  description  name  Map  tailMap  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	137	137	1	replace	Option  option  =  optionMap.getOption(arg);  if(option  ==  null)  {  return  false;  }	      Option    option    =    option.getOption(arg);    if(option!=    null)    {    return    false;    }    	non-compiled	[CE]  illegal  start  of  expression	19	None	replace
59	[BUG]  [BUGGY]  final  List  <  Option>  newAnonymous  =(List  <  Option>)optionMap.values().get(arg);  [CE]  illegal  start  of  expression  [FE]              OptionException    [CONTEXT]      final  Map  tailMap  =  optionMap.tailMap(arg);  for  (final  Iterator  iter  =  tailMap.values().iterator();  iter.hasNext();)  {  final  Option  option  =  (Option)  iter.next();  if  (option.canProcess(commandLine,  arg))  {  return  true;  }    [BUGGY]  final  List  <  Option>  newAnonymous  =(List  <  Option>)optionMap.values().get(arg);  [BUGGY]      if  (looksLikeOption(commandLine,  arg))  {  return  false;  }  if  (anonymous.size()  >  0)  {  return  true;  }  [CLASS]  GroupImpl  [METHOD]  canProcess  [RETURN_TYPE]  boolean  WriteableCommandLine  commandLine  String  arg  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  SortedMap  newOptionMap  optionMap  WriteableCommandLine  commandLine  Iterator  iter  List  anonymous  newAnonymous  options  Option  option  String  arg  description  name  Map  tailMap  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	137	137	1	replace	final  List  <  Option>  newAnonymous  =(List  <  Option>)optionMap.values().get(arg);	  final    List    <    Option>    newAnonymous    =(List    <    Option>)optionMap.values().iterator();    	non-compiled	[CE]  illegal  start  of  expression	4	None	replace
60	[BUG]  [BUGGY]  final  List  <  Option>  newAnonymous  =(List  <  Option>)optionMap.keySet().iterator();  [CE]  illegal  start  of  expression  [FE]                OptionException    [CONTEXT]      final  Map  tailMap  =  optionMap.tailMap(arg);  for  (final  Iterator  iter  =  tailMap.values().iterator();  iter.hasNext();)  {  final  Option  option  =  (Option)  iter.next();  if  (option.canProcess(commandLine,  arg))  {  return  true;  }    [BUGGY]  final  List  <  Option>  newAnonymous  =(List  <  Option>)optionMap.keySet().iterator();  [BUGGY]      if  (looksLikeOption(commandLine,  arg))  {  return  false;  }  if  (anonymous.size()  >  0)  {  return  true;  }  [CLASS]  GroupImpl  [METHOD]  canProcess  [RETURN_TYPE]  boolean  WriteableCommandLine  commandLine  String  arg  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  SortedMap  newOptionMap  optionMap  WriteableCommandLine  commandLine  Iterator  iter  List  anonymous  newAnonymous  options  Option  option  String  arg  description  name  Map  tailMap  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	137	137	1	replace	final  List  <  Option>  newAnonymous  =(List  <  Option>)optionMap.keySet().iterator();	  final    List    <    Option>    newAnonymous    =(List    <    Option>)optionMap.values().iterator();    	non-compiled	[CE]  illegal  start  of  expression	4	None	replace
61	[BUG]  [BUGGY]  ArrayList  <  Option>  newAnonymous  =(ArrayList  <  Option>)optionMap.values().iterator();  [CE]  illegal  start  of  expression  [FE]          OptionException    [CONTEXT]      final  Map  tailMap  =  optionMap.tailMap(arg);  for  (final  Iterator  iter  =  tailMap.values().iterator();  iter.hasNext();)  {  final  Option  option  =  (Option)  iter.next();  if  (option.canProcess(commandLine,  arg))  {  return  true;  }    [BUGGY]  ArrayList  <  Option>  newAnonymous  =(ArrayList  <  Option>)optionMap.values().iterator();  [BUGGY]      if  (looksLikeOption(commandLine,  arg))  {  return  false;  }  if  (anonymous.size()  >  0)  {  return  true;  }  [CLASS]  GroupImpl  [METHOD]  canProcess  [RETURN_TYPE]  boolean  WriteableCommandLine  commandLine  String  arg  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  SortedMap  newOptionMap  optionMap  WriteableCommandLine  commandLine  Iterator  iter  List  anonymous  newAnonymous  options  Option  option  String  arg  description  name  Map  tailMap  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	137	137	1	replace	ArrayList  <  Option>  newAnonymous  =(ArrayList  <  Option>)optionMap.values().iterator();	  List    <    Option>    newAnonymous    =(List    <    Option>)optionMap.values().iterator();    	non-compiled	[CE]  illegal  start  of  expression	2	None	replace
62	[BUG]  [BUGGY]  List  <  Option>  anonymous  =(List  <  Option>)iter.next();  [CE]  illegal  start  of  expression  [FE]        OptionException    [CONTEXT]      final  Map  tailMap  =  optionMap.tailMap(arg);  for  (final  Iterator  iter  =  tailMap.values().iterator();  iter.hasNext();)  {  final  Option  option  =  (Option)  iter.next();  if  (option.canProcess(commandLine,  arg))  {  return  true;  }    [BUGGY]  List  <  Option>  anonymous  =(List  <  Option>)iter.next();  [BUGGY]      if  (looksLikeOption(commandLine,  arg))  {  return  false;  }  if  (anonymous.size()  >  0)  {  return  true;  }  [CLASS]  GroupImpl  [METHOD]  canProcess  [RETURN_TYPE]  boolean  WriteableCommandLine  commandLine  String  arg  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  SortedMap  newOptionMap  optionMap  WriteableCommandLine  commandLine  Iterator  iter  List  anonymous  newAnonymous  options  Option  option  String  arg  description  name  Map  tailMap  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	137	137	1	replace	List  <  Option>  anonymous  =(List  <  Option>)iter.next();	  List    <    Option>    newAnonymous    =(List    <    Option>)iter.next();    	non-compiled	[CE]  illegal  start  of  expression	1	None	replace
63	[BUG]  [BUGGY]  if(option.canProcess(commandLine,  arg)||  option.canProcess(commandLine,  arg))  {  return  false;  }  [CE]  illegal  start  of  expression  [FE]        OptionException    [CONTEXT]      final  Map  tailMap  =  optionMap.tailMap(arg);  for  (final  Iterator  iter  =  tailMap.values().iterator();  iter.hasNext();)  {  final  Option  option  =  (Option)  iter.next();  if  (option.canProcess(commandLine,  arg))  {  return  true;  }    [BUGGY]  if(option.canProcess(commandLine,  arg)||  option.canProcess(commandLine,  arg))  {  return  false;  }  [BUGGY]    }  if  (looksLikeOption(commandLine,  arg))  {  return  false;  }  if  (anonymous.size()  >  0)  {  return  true;  }  [CLASS]  GroupImpl  [METHOD]  canProcess  [RETURN_TYPE]  boolean  WriteableCommandLine  commandLine  String  arg  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  SortedMap  newOptionMap  optionMap  WriteableCommandLine  commandLine  Iterator  iter  List  anonymous  newAnonymous  options  Option  option  String  arg  description  name  Map  tailMap  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	137	137	1	replace	if(option.canProcess(commandLine,  arg)||  option.canProcess(commandLine,  arg))  {  return  false;  }	      if(option.canProcess(commandLine,    arg))    {    return    false;    }    	non-compiled	[CE]  illegal  start  of  expression	15	None	replace
64	[BUG]  [BUGGY]  List  <  Option>  newAnonymous  =  optionMap.newAnonymous();  [CE]  illegal  start  of  expression  [FE]        OptionException    [CONTEXT]      final  Map  tailMap  =  optionMap.tailMap(arg);  for  (final  Iterator  iter  =  tailMap.values().iterator();  iter.hasNext();)  {  final  Option  option  =  (Option)  iter.next();  if  (option.canProcess(commandLine,  arg))  {  return  true;  }    [BUGGY]  List  <  Option>  newAnonymous  =  optionMap.newAnonymous();  [BUGGY]      if  (looksLikeOption(commandLine,  arg))  {  return  false;  }  if  (anonymous.size()  >  0)  {  return  true;  }  [CLASS]  GroupImpl  [METHOD]  canProcess  [RETURN_TYPE]  boolean  WriteableCommandLine  commandLine  String  arg  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  SortedMap  newOptionMap  optionMap  WriteableCommandLine  commandLine  Iterator  iter  List  anonymous  newAnonymous  options  Option  option  String  arg  description  name  Map  tailMap  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	137	137	1	replace	List  <  Option>  newAnonymous  =  optionMap.newAnonymous();	  List    <    Option>    newAnonymous    =    optionMap.values().iterator();    	non-compiled	[CE]  illegal  start  of  expression	11	None	replace
65	[BUG]  [BUGGY]  Option  commandLine  =  optionMap.get(commandLine);  [CE]  illegal  start  of  expression  [FE]          OptionException    [CONTEXT]      final  Map  tailMap  =  optionMap.tailMap(arg);  for  (final  Iterator  iter  =  tailMap.values().iterator();  iter.hasNext();)  {  final  Option  option  =  (Option)  iter.next();  if  (option.canProcess(commandLine,  arg))  {  return  true;  }    [BUGGY]  Option  commandLine  =  optionMap.get(commandLine);  [BUGGY]    }  if  (looksLikeOption(commandLine,  arg))  {  return  false;  }  if  (anonymous.size()  >  0)  {  return  true;  }  [CLASS]  GroupImpl  [METHOD]  canProcess  [RETURN_TYPE]  boolean  WriteableCommandLine  commandLine  String  arg  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  SortedMap  newOptionMap  optionMap  WriteableCommandLine  commandLine  Iterator  iter  List  anonymous  newAnonymous  options  Option  option  String  arg  description  name  Map  tailMap  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	137	137	1	replace	Option  commandLine  =  optionMap.get(commandLine);	      for(final    Iterator    iter    =    options.values().iterator();    iter.hasNext();)    {    final    Option    option    =(Option)iter.next();    if(option.canProcess(commandLine,    option))    {    return    false;    }    	non-compiled	[CE]  illegal  start  of  expression	7	None	replace
66	[BUG]  [BUGGY]  Set  <  Option>  newAnonymous  =  optionMap.values().iterator();  if(newAnonymous!=  null)  {  return  false;  }  [CE]  illegal  start  of  expression  [FE]          OptionException    [CONTEXT]      final  Map  tailMap  =  optionMap.tailMap(arg);  for  (final  Iterator  iter  =  tailMap.values().iterator();  iter.hasNext();)  {  final  Option  option  =  (Option)  iter.next();  if  (option.canProcess(commandLine,  arg))  {  return  true;  }    [BUGGY]  Set  <  Option>  newAnonymous  =  optionMap.values().iterator();  if(newAnonymous!=  null)  {  return  false;  }  [BUGGY]    }  if  (looksLikeOption(commandLine,  arg))  {  return  false;  }  if  (anonymous.size()  >  0)  {  return  true;  }  [CLASS]  GroupImpl  [METHOD]  canProcess  [RETURN_TYPE]  boolean  WriteableCommandLine  commandLine  String  arg  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  SortedMap  newOptionMap  optionMap  WriteableCommandLine  commandLine  Iterator  iter  List  anonymous  newAnonymous  options  Option  option  String  arg  description  name  Map  tailMap  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	137	137	1	replace	Set  <  Option>  newAnonymous  =  optionMap.values().iterator();  if(newAnonymous!=  null)  {  return  false;  }	      List    <    Option>    newAnonymous    =    optionMap.values().iterator();    if(newAnonymous!=    null)    {    return    false;    }    	non-compiled	[CE]  illegal  start  of  expression	16	None	replace
