bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  List  <  Option>  newAnonymous  =(List  <  Option>)iter.next();  [CE]  illegal  start  of  expression  [FE]    OptionException  [CONTEXT]    final  Map  tailMap  =  optionMap.tailMap(arg);  for  (final  Iterator  iter  =  tailMap.values().iterator();  iter.hasNext();)  {  final  Option  option  =  (Option)  iter.next();  if  (option.canProcess(commandLine,  arg))  {  return  true;  }  [BUGGY]  List  <  Option>  newAnonymous  =(List  <  Option>)iter.next();  [BUGGY]    if  (looksLikeOption(commandLine,  arg))  {  return  false;  }  if  (anonymous.size()  >  0)  {  return  true;  }  [CLASS]  GroupImpl  [METHOD]  canProcess  [RETURN_TYPE]  boolean  WriteableCommandLine  commandLine  String  arg  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  SortedMap  newOptionMap  optionMap  WriteableCommandLine  commandLine  Iterator  iter  List  anonymous  newAnonymous  options  Option  option  String  arg  description  name  Map  tailMap  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	137	137	1	replace	List  <  Option>  newAnonymous  =(List  <  Option>)iter.next();	}  	non-compiled	[CE]  illegal  start  of  expression	59	None	replace
2	[BUG]  [BUGGY]  List  <  Option>  newAnonymous  =(List  <  Option>)optionMap.values().iterator();  [CE]  illegal  start  of  expression  [FE]      OptionException  [CONTEXT]    final  Map  tailMap  =  optionMap.tailMap(arg);  for  (final  Iterator  iter  =  tailMap.values().iterator();  iter.hasNext();)  {  final  Option  option  =  (Option)  iter.next();  if  (option.canProcess(commandLine,  arg))  {  return  true;  }  [BUGGY]  List  <  Option>  newAnonymous  =(List  <  Option>)optionMap.values().iterator();  [BUGGY]    if  (looksLikeOption(commandLine,  arg))  {  return  false;  }  if  (anonymous.size()  >  0)  {  return  true;  }  [CLASS]  GroupImpl  [METHOD]  canProcess  [RETURN_TYPE]  boolean  WriteableCommandLine  commandLine  String  arg  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  SortedMap  newOptionMap  optionMap  WriteableCommandLine  commandLine  Iterator  iter  List  anonymous  newAnonymous  options  Option  option  String  arg  description  name  Map  tailMap  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	137	137	1	replace	List  <  Option>  newAnonymous  =(List  <  Option>)optionMap.values().iterator();	}  	non-compiled	[CE]  illegal  start  of  expression	59	None	replace
3	[BUG]  [BUGGY]  final  List  <  Option>  newAnonymous  =(List  <  Option>)iter.next();  [CE]  illegal  start  of  expression  [FE]        OptionException  [CONTEXT]    final  Map  tailMap  =  optionMap.tailMap(arg);  for  (final  Iterator  iter  =  tailMap.values().iterator();  iter.hasNext();)  {  final  Option  option  =  (Option)  iter.next();  if  (option.canProcess(commandLine,  arg))  {  return  true;  }  [BUGGY]  final  List  <  Option>  newAnonymous  =(List  <  Option>)iter.next();  [BUGGY]    if  (looksLikeOption(commandLine,  arg))  {  return  false;  }  if  (anonymous.size()  >  0)  {  return  true;  }  [CLASS]  GroupImpl  [METHOD]  canProcess  [RETURN_TYPE]  boolean  WriteableCommandLine  commandLine  String  arg  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  SortedMap  newOptionMap  optionMap  WriteableCommandLine  commandLine  Iterator  iter  List  anonymous  newAnonymous  options  Option  option  String  arg  description  name  Map  tailMap  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	137	137	1	replace	final  List  <  Option>  newAnonymous  =(List  <  Option>)iter.next();	}  	non-compiled	[CE]  illegal  start  of  expression	59	None	replace
4	[BUG]  [BUGGY]  final  List  <  Option>  newAnonymous  =(List  <  Option>)optionMap.values().iterator();  [CE]  illegal  start  of  expression  [FE]          OptionException  [CONTEXT]    final  Map  tailMap  =  optionMap.tailMap(arg);  for  (final  Iterator  iter  =  tailMap.values().iterator();  iter.hasNext();)  {  final  Option  option  =  (Option)  iter.next();  if  (option.canProcess(commandLine,  arg))  {  return  true;  }  [BUGGY]  final  List  <  Option>  newAnonymous  =(List  <  Option>)optionMap.values().iterator();  [BUGGY]    if  (looksLikeOption(commandLine,  arg))  {  return  false;  }  if  (anonymous.size()  >  0)  {  return  true;  }  [CLASS]  GroupImpl  [METHOD]  canProcess  [RETURN_TYPE]  boolean  WriteableCommandLine  commandLine  String  arg  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  SortedMap  newOptionMap  optionMap  WriteableCommandLine  commandLine  Iterator  iter  List  anonymous  newAnonymous  options  Option  option  String  arg  description  name  Map  tailMap  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	137	137	1	replace	final  List  <  Option>  newAnonymous  =(List  <  Option>)optionMap.values().iterator();	}  	non-compiled	[CE]  illegal  start  of  expression	59	None	replace
5	[BUG]  [BUGGY]    [CE]  illegal  start  of  expression  [FE]            OptionException  [CONTEXT]    final  Map  tailMap  =  optionMap.tailMap(arg);  for  (final  Iterator  iter  =  tailMap.values().iterator();  iter.hasNext();)  {  final  Option  option  =  (Option)  iter.next();  if  (option.canProcess(commandLine,  arg))  {  return  true;  }  [BUGGY]    [BUGGY]    if  (looksLikeOption(commandLine,  arg))  {  return  false;  }  if  (anonymous.size()  >  0)  {  return  true;  }  [CLASS]  GroupImpl  [METHOD]  canProcess  [RETURN_TYPE]  boolean  WriteableCommandLine  commandLine  String  arg  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  SortedMap  newOptionMap  optionMap  WriteableCommandLine  commandLine  Iterator  iter  List  anonymous  newAnonymous  options  Option  option  String  arg  description  name  Map  tailMap  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	137	137	1	replace	  	}  	non-compiled	[CE]  illegal  start  of  expression	59	None	replace
6	[BUG]  [BUGGY]    for(final  Iterator  iter  =  options.values().iterator();  iter.hasNext();)  {  final  Option  option  =(Option)iter.next();  if(option.canProcess(commandLine,  arg))  {  return  false;  }  [CE]  illegal  start  of  expression  [FE]    OptionException  [CONTEXT]    final  Map  tailMap  =  optionMap.tailMap(arg);  for  (final  Iterator  iter  =  tailMap.values().iterator();  iter.hasNext();)  {  final  Option  option  =  (Option)  iter.next();  if  (option.canProcess(commandLine,  arg))  {  return  true;  }  [BUGGY]    for(final  Iterator  iter  =  options.values().iterator();  iter.hasNext();)  {  final  Option  option  =(Option)iter.next();  if(option.canProcess(commandLine,  arg))  {  return  false;  }  [BUGGY]  }  if  (looksLikeOption(commandLine,  arg))  {  return  false;  }  if  (anonymous.size()  >  0)  {  return  true;  }  [CLASS]  GroupImpl  [METHOD]  canProcess  [RETURN_TYPE]  boolean  WriteableCommandLine  commandLine  String  arg  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  SortedMap  newOptionMap  optionMap  WriteableCommandLine  commandLine  Iterator  iter  List  anonymous  newAnonymous  options  Option  option  String  arg  description  name  Map  tailMap  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	137	137	1	replace	    for(final  Iterator  iter  =  options.values().iterator();  iter.hasNext();)  {  final  Option  option  =(Option)iter.next();  if(option.canProcess(commandLine,  arg))  {  return  false;  }		non-compiled	[CE]  illegal  start  of  expression	60	None	add
7	[BUG]  [BUGGY]    for(final  Iterator  iter  =  options.values().iterator();  iter.hasNext();)  {  final  Option  option  =(Option)iter.next();  if(option.canProcess(commandLine,  option))  {  return  false;  }  [CE]  illegal  start  of  expression  [FE]      OptionException  [CONTEXT]    final  Map  tailMap  =  optionMap.tailMap(arg);  for  (final  Iterator  iter  =  tailMap.values().iterator();  iter.hasNext();)  {  final  Option  option  =  (Option)  iter.next();  if  (option.canProcess(commandLine,  arg))  {  return  true;  }  [BUGGY]    for(final  Iterator  iter  =  options.values().iterator();  iter.hasNext();)  {  final  Option  option  =(Option)iter.next();  if(option.canProcess(commandLine,  option))  {  return  false;  }  [BUGGY]  }  if  (looksLikeOption(commandLine,  arg))  {  return  false;  }  if  (anonymous.size()  >  0)  {  return  true;  }  [CLASS]  GroupImpl  [METHOD]  canProcess  [RETURN_TYPE]  boolean  WriteableCommandLine  commandLine  String  arg  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  SortedMap  newOptionMap  optionMap  WriteableCommandLine  commandLine  Iterator  iter  List  anonymous  newAnonymous  options  Option  option  String  arg  description  name  Map  tailMap  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	137	137	1	replace	    for(final  Iterator  iter  =  options.values().iterator();  iter.hasNext();)  {  final  Option  option  =(Option)iter.next();  if(option.canProcess(commandLine,  option))  {  return  false;  }		non-compiled	[CE]  illegal  start  of  expression	60	None	add
8	[BUG]  [BUGGY]    for(final  Iterator  iter  =  options.values().iterator();  iter.hasNext();)  {  final  Option  option  =(Option)iter.next();  if(!option.canProcess(commandLine,  option))  {  return  false;  }  [CE]  illegal  start  of  expression  [FE]        OptionException  [CONTEXT]    final  Map  tailMap  =  optionMap.tailMap(arg);  for  (final  Iterator  iter  =  tailMap.values().iterator();  iter.hasNext();)  {  final  Option  option  =  (Option)  iter.next();  if  (option.canProcess(commandLine,  arg))  {  return  true;  }  [BUGGY]    for(final  Iterator  iter  =  options.values().iterator();  iter.hasNext();)  {  final  Option  option  =(Option)iter.next();  if(!option.canProcess(commandLine,  option))  {  return  false;  }  [BUGGY]  }  if  (looksLikeOption(commandLine,  arg))  {  return  false;  }  if  (anonymous.size()  >  0)  {  return  true;  }  [CLASS]  GroupImpl  [METHOD]  canProcess  [RETURN_TYPE]  boolean  WriteableCommandLine  commandLine  String  arg  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  SortedMap  newOptionMap  optionMap  WriteableCommandLine  commandLine  Iterator  iter  List  anonymous  newAnonymous  options  Option  option  String  arg  description  name  Map  tailMap  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	137	137	1	replace	    for(final  Iterator  iter  =  options.values().iterator();  iter.hasNext();)  {  final  Option  option  =(Option)iter.next();  if(!option.canProcess(commandLine,  option))  {  return  false;  }		non-compiled	[CE]  illegal  start  of  expression	60	None	add
9	[BUG]  [BUGGY]    for(final  Iterator  iter  =  options.iterator();  iter.hasNext();)  {  final  Option  option  =(Option)iter.next();  if(option.canProcess(commandLine,  option))  {  return  false;  }  [CE]  illegal  start  of  expression  [FE]          OptionException  [CONTEXT]    final  Map  tailMap  =  optionMap.tailMap(arg);  for  (final  Iterator  iter  =  tailMap.values().iterator();  iter.hasNext();)  {  final  Option  option  =  (Option)  iter.next();  if  (option.canProcess(commandLine,  arg))  {  return  true;  }  [BUGGY]    for(final  Iterator  iter  =  options.iterator();  iter.hasNext();)  {  final  Option  option  =(Option)iter.next();  if(option.canProcess(commandLine,  option))  {  return  false;  }  [BUGGY]  }  if  (looksLikeOption(commandLine,  arg))  {  return  false;  }  if  (anonymous.size()  >  0)  {  return  true;  }  [CLASS]  GroupImpl  [METHOD]  canProcess  [RETURN_TYPE]  boolean  WriteableCommandLine  commandLine  String  arg  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  SortedMap  newOptionMap  optionMap  WriteableCommandLine  commandLine  Iterator  iter  List  anonymous  newAnonymous  options  Option  option  String  arg  description  name  Map  tailMap  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	137	137	1	replace	    for(final  Iterator  iter  =  options.iterator();  iter.hasNext();)  {  final  Option  option  =(Option)iter.next();  if(option.canProcess(commandLine,  option))  {  return  false;  }		non-compiled	[CE]  illegal  start  of  expression	60	None	add
10	[BUG]  [BUGGY]    for(final  Iterator  iter  =  options.values().iterator();  iter.hasNext();)  {  final  Option  option  =(Option)iter.next();  if(option.canProcess(commandLine,  arg))  {  return  true;  }  [CE]  illegal  start  of  expression  [FE]            OptionException  [CONTEXT]    final  Map  tailMap  =  optionMap.tailMap(arg);  for  (final  Iterator  iter  =  tailMap.values().iterator();  iter.hasNext();)  {  final  Option  option  =  (Option)  iter.next();  if  (option.canProcess(commandLine,  arg))  {  return  true;  }  [BUGGY]    for(final  Iterator  iter  =  options.values().iterator();  iter.hasNext();)  {  final  Option  option  =(Option)iter.next();  if(option.canProcess(commandLine,  arg))  {  return  true;  }  [BUGGY]  }  if  (looksLikeOption(commandLine,  arg))  {  return  false;  }  if  (anonymous.size()  >  0)  {  return  true;  }  [CLASS]  GroupImpl  [METHOD]  canProcess  [RETURN_TYPE]  boolean  WriteableCommandLine  commandLine  String  arg  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  SortedMap  newOptionMap  optionMap  WriteableCommandLine  commandLine  Iterator  iter  List  anonymous  newAnonymous  options  Option  option  String  arg  description  name  Map  tailMap  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	137	137	1	replace	    for(final  Iterator  iter  =  options.values().iterator();  iter.hasNext();)  {  final  Option  option  =(Option)iter.next();  if(option.canProcess(commandLine,  arg))  {  return  true;  }		non-compiled	[CE]  illegal  start  of  expression	60	None	add
11	[BUG]  [BUGGY]  List  <  Option>  newAnonymous  =  optionMap.values().iterator();  [CE]  illegal  start  of  expression  [FE]    OptionException  [CONTEXT]    final  Map  tailMap  =  optionMap.tailMap(arg);  for  (final  Iterator  iter  =  tailMap.values().iterator();  iter.hasNext();)  {  final  Option  option  =  (Option)  iter.next();  if  (option.canProcess(commandLine,  arg))  {  return  true;  }  [BUGGY]  List  <  Option>  newAnonymous  =  optionMap.values().iterator();  [BUGGY]    if  (looksLikeOption(commandLine,  arg))  {  return  false;  }  if  (anonymous.size()  >  0)  {  return  true;  }  [CLASS]  GroupImpl  [METHOD]  canProcess  [RETURN_TYPE]  boolean  WriteableCommandLine  commandLine  String  arg  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  SortedMap  newOptionMap  optionMap  WriteableCommandLine  commandLine  Iterator  iter  List  anonymous  newAnonymous  options  Option  option  String  arg  description  name  Map  tailMap  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	137	137	1	replace	List  <  Option>  newAnonymous  =  optionMap.values().iterator();	}  	non-compiled	[CE]  illegal  start  of  expression	59	None	replace
12	[BUG]  [BUGGY]  if(option.canProcess(commandLine))  {  return  false;  }  [CE]  illegal  start  of  expression  [FE]      OptionException  [CONTEXT]    final  Map  tailMap  =  optionMap.tailMap(arg);  for  (final  Iterator  iter  =  tailMap.values().iterator();  iter.hasNext();)  {  final  Option  option  =  (Option)  iter.next();  if  (option.canProcess(commandLine,  arg))  {  return  true;  }  [BUGGY]  if(option.canProcess(commandLine))  {  return  false;  }  [BUGGY]    if  (looksLikeOption(commandLine,  arg))  {  return  false;  }  if  (anonymous.size()  >  0)  {  return  true;  }  [CLASS]  GroupImpl  [METHOD]  canProcess  [RETURN_TYPE]  boolean  WriteableCommandLine  commandLine  String  arg  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  SortedMap  newOptionMap  optionMap  WriteableCommandLine  commandLine  Iterator  iter  List  anonymous  newAnonymous  options  Option  option  String  arg  description  name  Map  tailMap  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	137	137	1	replace	if(option.canProcess(commandLine))  {  return  false;  }	}  	non-compiled	[CE]  illegal  start  of  expression	59	None	replace
13	[BUG]  [BUGGY]  final  List  <  Option>  newAnonymous  =  optionMap.values().iterator();  [CE]  illegal  start  of  expression  [FE]        OptionException  [CONTEXT]    final  Map  tailMap  =  optionMap.tailMap(arg);  for  (final  Iterator  iter  =  tailMap.values().iterator();  iter.hasNext();)  {  final  Option  option  =  (Option)  iter.next();  if  (option.canProcess(commandLine,  arg))  {  return  true;  }  [BUGGY]  final  List  <  Option>  newAnonymous  =  optionMap.values().iterator();  [BUGGY]    if  (looksLikeOption(commandLine,  arg))  {  return  false;  }  if  (anonymous.size()  >  0)  {  return  true;  }  [CLASS]  GroupImpl  [METHOD]  canProcess  [RETURN_TYPE]  boolean  WriteableCommandLine  commandLine  String  arg  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  SortedMap  newOptionMap  optionMap  WriteableCommandLine  commandLine  Iterator  iter  List  anonymous  newAnonymous  options  Option  option  String  arg  description  name  Map  tailMap  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	137	137	1	replace	final  List  <  Option>  newAnonymous  =  optionMap.values().iterator();	}  	non-compiled	[CE]  illegal  start  of  expression	59	None	replace
14	[BUG]  [BUGGY]  List  <  Option>  newAnonymous  =  options.values().iterator();  [CE]  illegal  start  of  expression  [FE]          OptionException  [CONTEXT]    final  Map  tailMap  =  optionMap.tailMap(arg);  for  (final  Iterator  iter  =  tailMap.values().iterator();  iter.hasNext();)  {  final  Option  option  =  (Option)  iter.next();  if  (option.canProcess(commandLine,  arg))  {  return  true;  }  [BUGGY]  List  <  Option>  newAnonymous  =  options.values().iterator();  [BUGGY]    if  (looksLikeOption(commandLine,  arg))  {  return  false;  }  if  (anonymous.size()  >  0)  {  return  true;  }  [CLASS]  GroupImpl  [METHOD]  canProcess  [RETURN_TYPE]  boolean  WriteableCommandLine  commandLine  String  arg  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  SortedMap  newOptionMap  optionMap  WriteableCommandLine  commandLine  Iterator  iter  List  anonymous  newAnonymous  options  Option  option  String  arg  description  name  Map  tailMap  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	137	137	1	replace	List  <  Option>  newAnonymous  =  options.values().iterator();	}  	non-compiled	[CE]  illegal  start  of  expression	59	None	replace
15	[BUG]  [BUGGY]    if(option.canProcess(commandLine,  arg))  {  return  false;  }  [CE]  illegal  start  of  expression  [FE]    OptionException  [CONTEXT]    final  Map  tailMap  =  optionMap.tailMap(arg);  for  (final  Iterator  iter  =  tailMap.values().iterator();  iter.hasNext();)  {  final  Option  option  =  (Option)  iter.next();  if  (option.canProcess(commandLine,  arg))  {  return  true;  }  [BUGGY]    if(option.canProcess(commandLine,  arg))  {  return  false;  }  [BUGGY]  }  if  (looksLikeOption(commandLine,  arg))  {  return  false;  }  if  (anonymous.size()  >  0)  {  return  true;  }  [CLASS]  GroupImpl  [METHOD]  canProcess  [RETURN_TYPE]  boolean  WriteableCommandLine  commandLine  String  arg  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  SortedMap  newOptionMap  optionMap  WriteableCommandLine  commandLine  Iterator  iter  List  anonymous  newAnonymous  options  Option  option  String  arg  description  name  Map  tailMap  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	137	137	1	replace	    if(option.canProcess(commandLine,  arg))  {  return  false;  }		non-compiled	[CE]  illegal  start  of  expression	60	None	add
16	[BUG]  [BUGGY]    List  <  Option>  newAnonymous  =  optionMap.values().iterator();  if(newAnonymous!=  null)  {  return  false;  }  [CE]  illegal  start  of  expression  [FE]      OptionException  [CONTEXT]    final  Map  tailMap  =  optionMap.tailMap(arg);  for  (final  Iterator  iter  =  tailMap.values().iterator();  iter.hasNext();)  {  final  Option  option  =  (Option)  iter.next();  if  (option.canProcess(commandLine,  arg))  {  return  true;  }  [BUGGY]    List  <  Option>  newAnonymous  =  optionMap.values().iterator();  if(newAnonymous!=  null)  {  return  false;  }  [BUGGY]  }  if  (looksLikeOption(commandLine,  arg))  {  return  false;  }  if  (anonymous.size()  >  0)  {  return  true;  }  [CLASS]  GroupImpl  [METHOD]  canProcess  [RETURN_TYPE]  boolean  WriteableCommandLine  commandLine  String  arg  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  SortedMap  newOptionMap  optionMap  WriteableCommandLine  commandLine  Iterator  iter  List  anonymous  newAnonymous  options  Option  option  String  arg  description  name  Map  tailMap  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	137	137	1	replace	    List  <  Option>  newAnonymous  =  optionMap.values().iterator();  if(newAnonymous!=  null)  {  return  false;  }		non-compiled	[CE]  illegal  start  of  expression	60	None	add
17	[BUG]  [BUGGY]  Option  option  =  option.getOption(arg);  [CE]  illegal  start  of  expression  [FE]    OptionException  [CONTEXT]    final  Map  tailMap  =  optionMap.tailMap(arg);  for  (final  Iterator  iter  =  tailMap.values().iterator();  iter.hasNext();)  {  final  Option  option  =  (Option)  iter.next();  if  (option.canProcess(commandLine,  arg))  {  return  true;  }  [BUGGY]  Option  option  =  option.getOption(arg);  [BUGGY]    if  (looksLikeOption(commandLine,  arg))  {  return  false;  }  if  (anonymous.size()  >  0)  {  return  true;  }  [CLASS]  GroupImpl  [METHOD]  canProcess  [RETURN_TYPE]  boolean  WriteableCommandLine  commandLine  String  arg  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  SortedMap  newOptionMap  optionMap  WriteableCommandLine  commandLine  Iterator  iter  List  anonymous  newAnonymous  options  Option  option  String  arg  description  name  Map  tailMap  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	137	137	1	replace	Option  option  =  option.getOption(arg);	}  	non-compiled	[CE]  illegal  start  of  expression	59	None	replace
18	[BUG]  [BUGGY]  Option  commandLine  =  option.getCommandLine();  [CE]  illegal  start  of  expression  [FE]      OptionException  [CONTEXT]    final  Map  tailMap  =  optionMap.tailMap(arg);  for  (final  Iterator  iter  =  tailMap.values().iterator();  iter.hasNext();)  {  final  Option  option  =  (Option)  iter.next();  if  (option.canProcess(commandLine,  arg))  {  return  true;  }  [BUGGY]  Option  commandLine  =  option.getCommandLine();  [BUGGY]    if  (looksLikeOption(commandLine,  arg))  {  return  false;  }  if  (anonymous.size()  >  0)  {  return  true;  }  [CLASS]  GroupImpl  [METHOD]  canProcess  [RETURN_TYPE]  boolean  WriteableCommandLine  commandLine  String  arg  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  SortedMap  newOptionMap  optionMap  WriteableCommandLine  commandLine  Iterator  iter  List  anonymous  newAnonymous  options  Option  option  String  arg  description  name  Map  tailMap  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	137	137	1	replace	Option  commandLine  =  option.getCommandLine();	}  	non-compiled	[CE]  illegal  start  of  expression	59	None	replace
19	[BUG]  [BUGGY]    Option  option  =  option.getOption(arg);  if(option!=  null)  {  return  false;  }  [CE]  illegal  start  of  expression  [FE]    OptionException  [CONTEXT]    final  Map  tailMap  =  optionMap.tailMap(arg);  for  (final  Iterator  iter  =  tailMap.values().iterator();  iter.hasNext();)  {  final  Option  option  =  (Option)  iter.next();  if  (option.canProcess(commandLine,  arg))  {  return  true;  }  [BUGGY]    Option  option  =  option.getOption(arg);  if(option!=  null)  {  return  false;  }  [BUGGY]  }  if  (looksLikeOption(commandLine,  arg))  {  return  false;  }  if  (anonymous.size()  >  0)  {  return  true;  }  [CLASS]  GroupImpl  [METHOD]  canProcess  [RETURN_TYPE]  boolean  WriteableCommandLine  commandLine  String  arg  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  SortedMap  newOptionMap  optionMap  WriteableCommandLine  commandLine  Iterator  iter  List  anonymous  newAnonymous  options  Option  option  String  arg  description  name  Map  tailMap  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	137	137	1	replace	    Option  option  =  option.getOption(arg);  if(option!=  null)  {  return  false;  }		non-compiled	[CE]  illegal  start  of  expression	60	None	add
20	[BUG]  [BUGGY]    if(option.canProcess(commandLine,  null))  {  return  false;  }  [CE]  illegal  start  of  expression  [FE]      OptionException  [CONTEXT]    final  Map  tailMap  =  optionMap.tailMap(arg);  for  (final  Iterator  iter  =  tailMap.values().iterator();  iter.hasNext();)  {  final  Option  option  =  (Option)  iter.next();  if  (option.canProcess(commandLine,  arg))  {  return  true;  }  [BUGGY]    if(option.canProcess(commandLine,  null))  {  return  false;  }  [BUGGY]  }  if  (looksLikeOption(commandLine,  arg))  {  return  false;  }  if  (anonymous.size()  >  0)  {  return  true;  }  [CLASS]  GroupImpl  [METHOD]  canProcess  [RETURN_TYPE]  boolean  WriteableCommandLine  commandLine  String  arg  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  SortedMap  newOptionMap  optionMap  WriteableCommandLine  commandLine  Iterator  iter  List  anonymous  newAnonymous  options  Option  option  String  arg  description  name  Map  tailMap  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	137	137	1	replace	    if(option.canProcess(commandLine,  null))  {  return  false;  }		non-compiled	[CE]  illegal  start  of  expression	60	None	add
