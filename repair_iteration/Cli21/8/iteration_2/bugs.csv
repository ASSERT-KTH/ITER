bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  Option  option  =  options.getOption(name);  [CE]  illegal  start  of  expression  [FE]        OptionException    [CONTEXT]    this.maximum  =  maximum;    this.options  =  Collections.unmodifiableList(options);  final  List  newAnonymous  =  new  ArrayList();      [BUGGY]  Option  option  =  options.getOption(name);  [BUGGY]    final  SortedMap  newOptionMap  =  new  TreeMap(ReverseStringComparator.getInstance());  final  Set  newPrefixes  =  new  HashSet();  for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {  final  Option  option  =  (Option)  i.next();  option.setParent(this);  if  (option  instanceof  Argument)  {  [CLASS]  GroupImpl  [METHOD]  <init>  [RETURN_TYPE]  String,int,int,boolean)  List  options  String  name  String  description  final  int  minimum  final  int  maximum  final  boolean  required  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  required  SortedMap  newOptionMap  optionMap  Iterator  i  j  List  anonymous  newAnonymous  options  Option  option  String  description  name  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	86	86	1	replace	Option  option  =  options.getOption(name);	      Option    option    =    optionMap.getOption(name);    	non-compiled	[CE]  illegal  start  of  expression	10	None	replace
2	[BUG]  [BUGGY]  Option  option  =  optionMap.getOption(description);  [CE]  illegal  start  of  expression  [FE]          OptionException    [CONTEXT]    this.maximum  =  maximum;    this.options  =  Collections.unmodifiableList(options);  final  List  newAnonymous  =  new  ArrayList();      [BUGGY]  Option  option  =  optionMap.getOption(description);  [BUGGY]    final  SortedMap  newOptionMap  =  new  TreeMap(ReverseStringComparator.getInstance());  final  Set  newPrefixes  =  new  HashSet();  for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {  final  Option  option  =  (Option)  i.next();  option.setParent(this);  if  (option  instanceof  Argument)  {  [CLASS]  GroupImpl  [METHOD]  <init>  [RETURN_TYPE]  String,int,int,boolean)  List  options  String  name  String  description  final  int  minimum  final  int  maximum  final  boolean  required  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  required  SortedMap  newOptionMap  optionMap  Iterator  i  j  List  anonymous  newAnonymous  options  Option  option  String  description  name  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	86	86	1	replace	Option  option  =  optionMap.getOption(description);	      Option    option    =    optionMap.getOption(name);    	non-compiled	[CE]  illegal  start  of  expression	10	None	replace
3	[BUG]  [BUGGY]  Option  option  =  optionMap.getOption(name,  description);  [CE]  illegal  start  of  expression  [FE]            OptionException    [CONTEXT]    this.maximum  =  maximum;    this.options  =  Collections.unmodifiableList(options);  final  List  newAnonymous  =  new  ArrayList();      [BUGGY]  Option  option  =  optionMap.getOption(name,  description);  [BUGGY]    final  SortedMap  newOptionMap  =  new  TreeMap(ReverseStringComparator.getInstance());  final  Set  newPrefixes  =  new  HashSet();  for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {  final  Option  option  =  (Option)  i.next();  option.setParent(this);  if  (option  instanceof  Argument)  {  [CLASS]  GroupImpl  [METHOD]  <init>  [RETURN_TYPE]  String,int,int,boolean)  List  options  String  name  String  description  final  int  minimum  final  int  maximum  final  boolean  required  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  required  SortedMap  newOptionMap  optionMap  Iterator  i  j  List  anonymous  newAnonymous  options  Option  option  String  description  name  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	86	86	1	replace	Option  option  =  optionMap.getOption(name,  description);	      Option    option    =    optionMap.getOption(name);    	non-compiled	[CE]  illegal  start  of  expression	10	None	replace
4	[BUG]  [BUGGY]  Option  option  =  optionMap.getOption(name,  newAnonymous);  [CE]  illegal  start  of  expression  [FE]              OptionException    [CONTEXT]    this.maximum  =  maximum;    this.options  =  Collections.unmodifiableList(options);  final  List  newAnonymous  =  new  ArrayList();      [BUGGY]  Option  option  =  optionMap.getOption(name,  newAnonymous);  [BUGGY]    final  SortedMap  newOptionMap  =  new  TreeMap(ReverseStringComparator.getInstance());  final  Set  newPrefixes  =  new  HashSet();  for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {  final  Option  option  =  (Option)  i.next();  option.setParent(this);  if  (option  instanceof  Argument)  {  [CLASS]  GroupImpl  [METHOD]  <init>  [RETURN_TYPE]  String,int,int,boolean)  List  options  String  name  String  description  final  int  minimum  final  int  maximum  final  boolean  required  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  required  SortedMap  newOptionMap  optionMap  Iterator  i  j  List  anonymous  newAnonymous  options  Option  option  String  description  name  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	86	86	1	replace	Option  option  =  optionMap.getOption(name,  newAnonymous);	      Option    option    =    optionMap.getOption(name);    	non-compiled	[CE]  illegal  start  of  expression	10	None	replace
5	[BUG]  [BUGGY]  Option  option  =  options.get(name);  [CE]  illegal  start  of  expression  [FE]        OptionException    [CONTEXT]    this.maximum  =  maximum;    this.options  =  Collections.unmodifiableList(options);  final  List  newAnonymous  =  new  ArrayList();      [BUGGY]  Option  option  =  options.get(name);  [BUGGY]    final  SortedMap  newOptionMap  =  new  TreeMap(ReverseStringComparator.getInstance());  final  Set  newPrefixes  =  new  HashSet();  for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {  final  Option  option  =  (Option)  i.next();  option.setParent(this);  if  (option  instanceof  Argument)  {  [CLASS]  GroupImpl  [METHOD]  <init>  [RETURN_TYPE]  String,int,int,boolean)  List  options  String  name  String  description  final  int  minimum  final  int  maximum  final  boolean  required  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  required  SortedMap  newOptionMap  optionMap  Iterator  i  j  List  anonymous  newAnonymous  options  Option  option  String  description  name  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	86	86	1	replace	Option  option  =  options.get(name);	      Option    option    =    optionMap.get(name);    	non-compiled	[CE]  illegal  start  of  expression	13	None	replace
6	[BUG]  [BUGGY]  Option  option  =  newOptionMap.get(name);  [CE]  illegal  start  of  expression  [FE]          OptionException    [CONTEXT]    this.maximum  =  maximum;    this.options  =  Collections.unmodifiableList(options);  final  List  newAnonymous  =  new  ArrayList();      [BUGGY]  Option  option  =  newOptionMap.get(name);  [BUGGY]    final  SortedMap  newOptionMap  =  new  TreeMap(ReverseStringComparator.getInstance());  final  Set  newPrefixes  =  new  HashSet();  for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {  final  Option  option  =  (Option)  i.next();  option.setParent(this);  if  (option  instanceof  Argument)  {  [CLASS]  GroupImpl  [METHOD]  <init>  [RETURN_TYPE]  String,int,int,boolean)  List  options  String  name  String  description  final  int  minimum  final  int  maximum  final  boolean  required  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  required  SortedMap  newOptionMap  optionMap  Iterator  i  j  List  anonymous  newAnonymous  options  Option  option  String  description  name  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	86	86	1	replace	Option  option  =  newOptionMap.get(name);	      Option    option    =    optionMap.get(name);    	non-compiled	[CE]  illegal  start  of  expression	13	None	replace
7	[BUG]  [BUGGY]  optionMap.put(name,  newAnonymous);  [CE]  illegal  start  of  expression  [FE]            OptionException    [CONTEXT]    this.maximum  =  maximum;    this.options  =  Collections.unmodifiableList(options);  final  List  newAnonymous  =  new  ArrayList();      [BUGGY]  optionMap.put(name,  newAnonymous);  [BUGGY]    final  SortedMap  newOptionMap  =  new  TreeMap(ReverseStringComparator.getInstance());  final  Set  newPrefixes  =  new  HashSet();  for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {  final  Option  option  =  (Option)  i.next();  option.setParent(this);  if  (option  instanceof  Argument)  {  [CLASS]  GroupImpl  [METHOD]  <init>  [RETURN_TYPE]  String,int,int,boolean)  List  options  String  name  String  description  final  int  minimum  final  int  maximum  final  boolean  required  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  required  SortedMap  newOptionMap  optionMap  Iterator  i  j  List  anonymous  newAnonymous  options  Option  option  String  description  name  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	86	86	1	replace	optionMap.put(name,  newAnonymous);	      Option    option    =    optionMap.get(name);    	non-compiled	[CE]  illegal  start  of  expression	13	None	replace
8	[BUG]  [BUGGY]  Option  option  =  newAnonymous.getOption(name);  [CE]  illegal  start  of  expression  [FE]              OptionException    [CONTEXT]    this.maximum  =  maximum;    this.options  =  Collections.unmodifiableList(options);  final  List  newAnonymous  =  new  ArrayList();      [BUGGY]  Option  option  =  newAnonymous.getOption(name);  [BUGGY]    final  SortedMap  newOptionMap  =  new  TreeMap(ReverseStringComparator.getInstance());  final  Set  newPrefixes  =  new  HashSet();  for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {  final  Option  option  =  (Option)  i.next();  option.setParent(this);  if  (option  instanceof  Argument)  {  [CLASS]  GroupImpl  [METHOD]  <init>  [RETURN_TYPE]  String,int,int,boolean)  List  options  String  name  String  description  final  int  minimum  final  int  maximum  final  boolean  required  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  required  SortedMap  newOptionMap  optionMap  Iterator  i  j  List  anonymous  newAnonymous  options  Option  option  String  description  name  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	86	86	1	replace	Option  option  =  newAnonymous.getOption(name);	      Option    option    =    optionMap.get(name);    	non-compiled	[CE]  illegal  start  of  expression	13	None	replace
9	[BUG]  [BUGGY]  Option  option  =(Option)this.options.get(name);  [CE]  illegal  start  of  expression  [FE]              OptionException    [CONTEXT]    this.maximum  =  maximum;    this.options  =  Collections.unmodifiableList(options);  final  List  newAnonymous  =  new  ArrayList();      [BUGGY]  Option  option  =(Option)this.options.get(name);  [BUGGY]    final  SortedMap  newOptionMap  =  new  TreeMap(ReverseStringComparator.getInstance());  final  Set  newPrefixes  =  new  HashSet();  for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {  final  Option  option  =  (Option)  i.next();  option.setParent(this);  if  (option  instanceof  Argument)  {  [CLASS]  GroupImpl  [METHOD]  <init>  [RETURN_TYPE]  String,int,int,boolean)  List  options  String  name  String  description  final  int  minimum  final  int  maximum  final  boolean  required  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  required  SortedMap  newOptionMap  optionMap  Iterator  i  j  List  anonymous  newAnonymous  options  Option  option  String  description  name  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	86	86	1	replace	Option  option  =(Option)this.options.get(name);	      Option    option    =(Option)optionMap.get(name);    	non-compiled	[CE]  illegal  start  of  expression	4	None	replace
10	[BUG]  [BUGGY]  Option  option  =(Option)newAnonymous.get(name);  [CE]  illegal  start  of  expression  [FE]                OptionException    [CONTEXT]    this.maximum  =  maximum;    this.options  =  Collections.unmodifiableList(options);  final  List  newAnonymous  =  new  ArrayList();      [BUGGY]  Option  option  =(Option)newAnonymous.get(name);  [BUGGY]    final  SortedMap  newOptionMap  =  new  TreeMap(ReverseStringComparator.getInstance());  final  Set  newPrefixes  =  new  HashSet();  for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {  final  Option  option  =  (Option)  i.next();  option.setParent(this);  if  (option  instanceof  Argument)  {  [CLASS]  GroupImpl  [METHOD]  <init>  [RETURN_TYPE]  String,int,int,boolean)  List  options  String  name  String  description  final  int  minimum  final  int  maximum  final  boolean  required  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  required  SortedMap  newOptionMap  optionMap  Iterator  i  j  List  anonymous  newAnonymous  options  Option  option  String  description  name  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	86	86	1	replace	Option  option  =(Option)newAnonymous.get(name);	      Option    option    =(Option)optionMap.get(name);    	non-compiled	[CE]  illegal  start  of  expression	4	None	replace
11	[BUG]  [BUGGY]  Option  option  =(Option)this.optionMap.get(name);  [CE]  illegal  start  of  expression  [FE]                  OptionException    [CONTEXT]    this.maximum  =  maximum;    this.options  =  Collections.unmodifiableList(options);  final  List  newAnonymous  =  new  ArrayList();      [BUGGY]  Option  option  =(Option)this.optionMap.get(name);  [BUGGY]    final  SortedMap  newOptionMap  =  new  TreeMap(ReverseStringComparator.getInstance());  final  Set  newPrefixes  =  new  HashSet();  for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {  final  Option  option  =  (Option)  i.next();  option.setParent(this);  if  (option  instanceof  Argument)  {  [CLASS]  GroupImpl  [METHOD]  <init>  [RETURN_TYPE]  String,int,int,boolean)  List  options  String  name  String  description  final  int  minimum  final  int  maximum  final  boolean  required  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  required  SortedMap  newOptionMap  optionMap  Iterator  i  j  List  anonymous  newAnonymous  options  Option  option  String  description  name  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	86	86	1	replace	Option  option  =(Option)this.optionMap.get(name);	      Option    option    =(Option)optionMap.get(name);    	non-compiled	[CE]  illegal  start  of  expression	4	None	replace
12	[BUG]  [BUGGY]  newAnonymous.addAll(this.options);  [CE]  illegal  start  of  expression  [FE]          OptionException    [CONTEXT]    this.maximum  =  maximum;    this.options  =  Collections.unmodifiableList(options);  final  List  newAnonymous  =  new  ArrayList();      [BUGGY]  newAnonymous.addAll(this.options);  [BUGGY]    final  SortedMap  newOptionMap  =  new  TreeMap(ReverseStringComparator.getInstance());  final  Set  newPrefixes  =  new  HashSet();  for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {  final  Option  option  =  (Option)  i.next();  option.setParent(this);  if  (option  instanceof  Argument)  {  [CLASS]  GroupImpl  [METHOD]  <init>  [RETURN_TYPE]  String,int,int,boolean)  List  options  String  name  String  description  final  int  minimum  final  int  maximum  final  boolean  required  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  required  SortedMap  newOptionMap  optionMap  Iterator  i  j  List  anonymous  newAnonymous  options  Option  option  String  description  name  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	86	86	1	replace	newAnonymous.addAll(this.options);	      newAnonymous.addAll(newAnonymous);    	non-compiled	[CE]  illegal  start  of  expression	2	None	replace
13	[BUG]  [BUGGY]  newAnonymous.addAll(newPrefixes);  [CE]  illegal  start  of  expression  [FE]            OptionException    [CONTEXT]    this.maximum  =  maximum;    this.options  =  Collections.unmodifiableList(options);  final  List  newAnonymous  =  new  ArrayList();      [BUGGY]  newAnonymous.addAll(newPrefixes);  [BUGGY]    final  SortedMap  newOptionMap  =  new  TreeMap(ReverseStringComparator.getInstance());  final  Set  newPrefixes  =  new  HashSet();  for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {  final  Option  option  =  (Option)  i.next();  option.setParent(this);  if  (option  instanceof  Argument)  {  [CLASS]  GroupImpl  [METHOD]  <init>  [RETURN_TYPE]  String,int,int,boolean)  List  options  String  name  String  description  final  int  minimum  final  int  maximum  final  boolean  required  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  required  SortedMap  newOptionMap  optionMap  Iterator  i  j  List  anonymous  newAnonymous  options  Option  option  String  description  name  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	86	86	1	replace	newAnonymous.addAll(newPrefixes);	      newAnonymous.addAll(newAnonymous);    	non-compiled	[CE]  illegal  start  of  expression	2	None	replace
14	[BUG]  [BUGGY]  newAnonymous.addAll(optionMap.values());  [CE]  illegal  start  of  expression  [FE]        OptionException    [CONTEXT]    this.maximum  =  maximum;    this.options  =  Collections.unmodifiableList(options);  final  List  newAnonymous  =  new  ArrayList();      [BUGGY]  newAnonymous.addAll(optionMap.values());  [BUGGY]    final  SortedMap  newOptionMap  =  new  TreeMap(ReverseStringComparator.getInstance());  final  Set  newPrefixes  =  new  HashSet();  for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {  final  Option  option  =  (Option)  i.next();  option.setParent(this);  if  (option  instanceof  Argument)  {  [CLASS]  GroupImpl  [METHOD]  <init>  [RETURN_TYPE]  String,int,int,boolean)  List  options  String  name  String  description  final  int  minimum  final  int  maximum  final  boolean  required  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  required  SortedMap  newOptionMap  optionMap  Iterator  i  j  List  anonymous  newAnonymous  options  Option  option  String  description  name  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	86	86	1	replace	newAnonymous.addAll(optionMap.values());	      newAnonymous.addAll(optionMap);    	non-compiled	[CE]  illegal  start  of  expression	1	None	replace
15	[BUG]  [BUGGY]  Option  option  =  options.getOption(this);  [CE]  illegal  start  of  expression  [FE]            OptionException    [CONTEXT]    this.maximum  =  maximum;    this.options  =  Collections.unmodifiableList(options);  final  List  newAnonymous  =  new  ArrayList();      [BUGGY]  Option  option  =  options.getOption(this);  [BUGGY]    final  SortedMap  newOptionMap  =  new  TreeMap(ReverseStringComparator.getInstance());  final  Set  newPrefixes  =  new  HashSet();  for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {  final  Option  option  =  (Option)  i.next();  option.setParent(this);  if  (option  instanceof  Argument)  {  [CLASS]  GroupImpl  [METHOD]  <init>  [RETURN_TYPE]  String,int,int,boolean)  List  options  String  name  String  description  final  int  minimum  final  int  maximum  final  boolean  required  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  required  SortedMap  newOptionMap  optionMap  Iterator  i  j  List  anonymous  newAnonymous  options  Option  option  String  description  name  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	86	86	1	replace	Option  option  =  options.getOption(this);	      Option    option    =    optionMap.getOption(this);    	non-compiled	[CE]  illegal  start  of  expression	12	None	replace
16	[BUG]  [BUGGY]  Option  option  =  optionMap.getOption(this,  newAnonymous);  [CE]  illegal  start  of  expression  [FE]              OptionException    [CONTEXT]    this.maximum  =  maximum;    this.options  =  Collections.unmodifiableList(options);  final  List  newAnonymous  =  new  ArrayList();      [BUGGY]  Option  option  =  optionMap.getOption(this,  newAnonymous);  [BUGGY]    final  SortedMap  newOptionMap  =  new  TreeMap(ReverseStringComparator.getInstance());  final  Set  newPrefixes  =  new  HashSet();  for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {  final  Option  option  =  (Option)  i.next();  option.setParent(this);  if  (option  instanceof  Argument)  {  [CLASS]  GroupImpl  [METHOD]  <init>  [RETURN_TYPE]  String,int,int,boolean)  List  options  String  name  String  description  final  int  minimum  final  int  maximum  final  boolean  required  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  required  SortedMap  newOptionMap  optionMap  Iterator  i  j  List  anonymous  newAnonymous  options  Option  option  String  description  name  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	86	86	1	replace	Option  option  =  optionMap.getOption(this,  newAnonymous);	      Option    option    =    optionMap.getOption(this);    	non-compiled	[CE]  illegal  start  of  expression	12	None	replace
17	[BUG]  [BUGGY]  Option  option  =  this.options.getOption(this);  [CE]  illegal  start  of  expression  [FE]                OptionException    [CONTEXT]    this.maximum  =  maximum;    this.options  =  Collections.unmodifiableList(options);  final  List  newAnonymous  =  new  ArrayList();      [BUGGY]  Option  option  =  this.options.getOption(this);  [BUGGY]    final  SortedMap  newOptionMap  =  new  TreeMap(ReverseStringComparator.getInstance());  final  Set  newPrefixes  =  new  HashSet();  for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {  final  Option  option  =  (Option)  i.next();  option.setParent(this);  if  (option  instanceof  Argument)  {  [CLASS]  GroupImpl  [METHOD]  <init>  [RETURN_TYPE]  String,int,int,boolean)  List  options  String  name  String  description  final  int  minimum  final  int  maximum  final  boolean  required  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  required  SortedMap  newOptionMap  optionMap  Iterator  i  j  List  anonymous  newAnonymous  options  Option  option  String  description  name  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	86	86	1	replace	Option  option  =  this.options.getOption(this);	      Option    option    =    optionMap.getOption(this);    	non-compiled	[CE]  illegal  start  of  expression	12	None	replace
18	[BUG]  [BUGGY]  Option  option  =  this.optionMap.getOption(this);  [CE]  illegal  start  of  expression  [FE]                  OptionException    [CONTEXT]    this.maximum  =  maximum;    this.options  =  Collections.unmodifiableList(options);  final  List  newAnonymous  =  new  ArrayList();      [BUGGY]  Option  option  =  this.optionMap.getOption(this);  [BUGGY]    final  SortedMap  newOptionMap  =  new  TreeMap(ReverseStringComparator.getInstance());  final  Set  newPrefixes  =  new  HashSet();  for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {  final  Option  option  =  (Option)  i.next();  option.setParent(this);  if  (option  instanceof  Argument)  {  [CLASS]  GroupImpl  [METHOD]  <init>  [RETURN_TYPE]  String,int,int,boolean)  List  options  String  name  String  description  final  int  minimum  final  int  maximum  final  boolean  required  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  required  SortedMap  newOptionMap  optionMap  Iterator  i  j  List  anonymous  newAnonymous  options  Option  option  String  description  name  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	86	86	1	replace	Option  option  =  this.optionMap.getOption(this);	      Option    option    =    optionMap.getOption(this);    	non-compiled	[CE]  illegal  start  of  expression	12	None	replace
19	[BUG]  [BUGGY]  newAnonymous.add(options);  [CE]  illegal  start  of  expression  [FE]                OptionException    [CONTEXT]    this.maximum  =  maximum;    this.options  =  Collections.unmodifiableList(options);  final  List  newAnonymous  =  new  ArrayList();      [BUGGY]  newAnonymous.add(options);  [BUGGY]    final  SortedMap  newOptionMap  =  new  TreeMap(ReverseStringComparator.getInstance());  final  Set  newPrefixes  =  new  HashSet();  for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {  final  Option  option  =  (Option)  i.next();  option.setParent(this);  if  (option  instanceof  Argument)  {  [CLASS]  GroupImpl  [METHOD]  <init>  [RETURN_TYPE]  String,int,int,boolean)  List  options  String  name  String  description  final  int  minimum  final  int  maximum  final  boolean  required  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  required  SortedMap  newOptionMap  optionMap  Iterator  i  j  List  anonymous  newAnonymous  options  Option  option  String  description  name  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	86	86	1	replace	newAnonymous.add(options);	      newAnonymous.addAll(options);    	non-compiled	[CE]  illegal  start  of  expression	5	None	replace
20	[BUG]  [BUGGY]  final  SortedMap  newOptionMap  =  new  TreeMap(ReverseStringComparator.getInstance(),  newAnonymous,  this.options);  [CE]  illegal  start  of  expression  [FE]        OptionException    [CONTEXT]    this.maximum  =  maximum;    this.options  =  Collections.unmodifiableList(options);  final  List  newAnonymous  =  new  ArrayList();      [BUGGY]  final  SortedMap  newOptionMap  =  new  TreeMap(ReverseStringComparator.getInstance(),  newAnonymous,  this.options);  [BUGGY]      final  Set  newPrefixes  =  new  HashSet();  for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {  final  Option  option  =  (Option)  i.next();  option.setParent(this);  if  (option  instanceof  Argument)  {  [CLASS]  GroupImpl  [METHOD]  <init>  [RETURN_TYPE]  String,int,int,boolean)  List  options  String  name  String  description  final  int  minimum  final  int  maximum  final  boolean  required  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  required  SortedMap  newOptionMap  optionMap  Iterator  i  j  List  anonymous  newAnonymous  options  Option  option  String  description  name  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	86	86	1	replace	final  SortedMap  newOptionMap  =  new  TreeMap(ReverseStringComparator.getInstance(),  newAnonymous,  this.options);	  final    SortedMap    newOptionMap    =    new    TreeMap(ReverseStringComparator.getInstance(),    newAnonymous);    	non-compiled	[CE]  illegal  start  of  expression	6	None	replace
21	[BUG]  [BUGGY]  final  SortedMap  newOptionMap  =  new  TreeMap(ReverseStringComparator.getInstance(),  this.options);  [CE]  illegal  start  of  expression  [FE]          OptionException    [CONTEXT]    this.maximum  =  maximum;    this.options  =  Collections.unmodifiableList(options);  final  List  newAnonymous  =  new  ArrayList();      [BUGGY]  final  SortedMap  newOptionMap  =  new  TreeMap(ReverseStringComparator.getInstance(),  this.options);  [BUGGY]      final  Set  newPrefixes  =  new  HashSet();  for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {  final  Option  option  =  (Option)  i.next();  option.setParent(this);  if  (option  instanceof  Argument)  {  [CLASS]  GroupImpl  [METHOD]  <init>  [RETURN_TYPE]  String,int,int,boolean)  List  options  String  name  String  description  final  int  minimum  final  int  maximum  final  boolean  required  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  required  SortedMap  newOptionMap  optionMap  Iterator  i  j  List  anonymous  newAnonymous  options  Option  option  String  description  name  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	86	86	1	replace	final  SortedMap  newOptionMap  =  new  TreeMap(ReverseStringComparator.getInstance(),  this.options);	  final    SortedMap    newOptionMap    =    new    TreeMap(ReverseStringComparator.getInstance(),    newAnonymous);    	non-compiled	[CE]  illegal  start  of  expression	6	None	replace
22	[BUG]  [BUGGY]  final  SortedMap  newOptionMap  =  new  TreeMap(ReverseStringComparator.getInstance(),  newAnonymous,  false);  [CE]  illegal  start  of  expression  [FE]            OptionException    [CONTEXT]    this.maximum  =  maximum;    this.options  =  Collections.unmodifiableList(options);  final  List  newAnonymous  =  new  ArrayList();      [BUGGY]  final  SortedMap  newOptionMap  =  new  TreeMap(ReverseStringComparator.getInstance(),  newAnonymous,  false);  [BUGGY]      final  Set  newPrefixes  =  new  HashSet();  for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {  final  Option  option  =  (Option)  i.next();  option.setParent(this);  if  (option  instanceof  Argument)  {  [CLASS]  GroupImpl  [METHOD]  <init>  [RETURN_TYPE]  String,int,int,boolean)  List  options  String  name  String  description  final  int  minimum  final  int  maximum  final  boolean  required  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  required  SortedMap  newOptionMap  optionMap  Iterator  i  j  List  anonymous  newAnonymous  options  Option  option  String  description  name  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	86	86	1	replace	final  SortedMap  newOptionMap  =  new  TreeMap(ReverseStringComparator.getInstance(),  newAnonymous,  false);	  final    SortedMap    newOptionMap    =    new    TreeMap(ReverseStringComparator.getInstance(),    newAnonymous);    	non-compiled	[CE]  illegal  start  of  expression	6	None	replace
23	[BUG]  [BUGGY]  final  SortedMap  newOptionMap  =  new  TreeMap(ReverseStringComparator.getInstance(),  newAnonymous,  true);  [CE]  illegal  start  of  expression  [FE]              OptionException    [CONTEXT]    this.maximum  =  maximum;    this.options  =  Collections.unmodifiableList(options);  final  List  newAnonymous  =  new  ArrayList();      [BUGGY]  final  SortedMap  newOptionMap  =  new  TreeMap(ReverseStringComparator.getInstance(),  newAnonymous,  true);  [BUGGY]      final  Set  newPrefixes  =  new  HashSet();  for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {  final  Option  option  =  (Option)  i.next();  option.setParent(this);  if  (option  instanceof  Argument)  {  [CLASS]  GroupImpl  [METHOD]  <init>  [RETURN_TYPE]  String,int,int,boolean)  List  options  String  name  String  description  final  int  minimum  final  int  maximum  final  boolean  required  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  required  SortedMap  newOptionMap  optionMap  Iterator  i  j  List  anonymous  newAnonymous  options  Option  option  String  description  name  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	86	86	1	replace	final  SortedMap  newOptionMap  =  new  TreeMap(ReverseStringComparator.getInstance(),  newAnonymous,  true);	  final    SortedMap    newOptionMap    =    new    TreeMap(ReverseStringComparator.getInstance(),    newAnonymous);    	non-compiled	[CE]  illegal  start  of  expression	6	None	replace
24	[BUG]  [BUGGY]  final  SortedMap  newOptionMap  =  new  TreeMap(ReverseStringComparator.class,  newAnonymous);  [CE]  illegal  start  of  expression  [FE]        OptionException    [CONTEXT]    this.maximum  =  maximum;    this.options  =  Collections.unmodifiableList(options);  final  List  newAnonymous  =  new  ArrayList();      [BUGGY]  final  SortedMap  newOptionMap  =  new  TreeMap(ReverseStringComparator.class,  newAnonymous);  [BUGGY]      final  Set  newPrefixes  =  new  HashSet();  for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {  final  Option  option  =  (Option)  i.next();  option.setParent(this);  if  (option  instanceof  Argument)  {  [CLASS]  GroupImpl  [METHOD]  <init>  [RETURN_TYPE]  String,int,int,boolean)  List  options  String  name  String  description  final  int  minimum  final  int  maximum  final  boolean  required  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  required  SortedMap  newOptionMap  optionMap  Iterator  i  j  List  anonymous  newAnonymous  options  Option  option  String  description  name  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	86	86	1	replace	final  SortedMap  newOptionMap  =  new  TreeMap(ReverseStringComparator.class,  newAnonymous);	  final    SortedMap    newOptionMap    =    new    TreeMap(ReverseStringComparator.class);    	non-compiled	[CE]  illegal  start  of  expression	9	None	replace
25	[BUG]  [BUGGY]  final  SortedMap  newOptionMap  =  new  TreeMap(newAnonymous.class);  [CE]  illegal  start  of  expression  [FE]          OptionException    [CONTEXT]    this.maximum  =  maximum;    this.options  =  Collections.unmodifiableList(options);  final  List  newAnonymous  =  new  ArrayList();      [BUGGY]  final  SortedMap  newOptionMap  =  new  TreeMap(newAnonymous.class);  [BUGGY]      final  Set  newPrefixes  =  new  HashSet();  for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {  final  Option  option  =  (Option)  i.next();  option.setParent(this);  if  (option  instanceof  Argument)  {  [CLASS]  GroupImpl  [METHOD]  <init>  [RETURN_TYPE]  String,int,int,boolean)  List  options  String  name  String  description  final  int  minimum  final  int  maximum  final  boolean  required  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  required  SortedMap  newOptionMap  optionMap  Iterator  i  j  List  anonymous  newAnonymous  options  Option  option  String  description  name  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	86	86	1	replace	final  SortedMap  newOptionMap  =  new  TreeMap(newAnonymous.class);	  final    SortedMap    newOptionMap    =    new    TreeMap(ReverseStringComparator.class);    	non-compiled	[CE]  illegal  start  of  expression	9	None	replace
26	[BUG]  [BUGGY]  newAnonymous.add(newAnonymous,  description);  [CE]  illegal  start  of  expression  [FE]            OptionException    [CONTEXT]    this.maximum  =  maximum;    this.options  =  Collections.unmodifiableList(options);  final  List  newAnonymous  =  new  ArrayList();      [BUGGY]  newAnonymous.add(newAnonymous,  description);  [BUGGY]    final  SortedMap  newOptionMap  =  new  TreeMap(ReverseStringComparator.getInstance());  final  Set  newPrefixes  =  new  HashSet();  for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {  final  Option  option  =  (Option)  i.next();  option.setParent(this);  if  (option  instanceof  Argument)  {  [CLASS]  GroupImpl  [METHOD]  <init>  [RETURN_TYPE]  String,int,int,boolean)  List  options  String  name  String  description  final  int  minimum  final  int  maximum  final  boolean  required  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  required  SortedMap  newOptionMap  optionMap  Iterator  i  j  List  anonymous  newAnonymous  options  Option  option  String  description  name  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	86	86	1	replace	newAnonymous.add(newAnonymous,  description);	      newAnonymous.add(newAnonymous);    	non-compiled	[CE]  illegal  start  of  expression	3	None	replace
27	[BUG]  [BUGGY]  newAnonymous.add(name);  [CE]  illegal  start  of  expression  [FE]              OptionException    [CONTEXT]    this.maximum  =  maximum;    this.options  =  Collections.unmodifiableList(options);  final  List  newAnonymous  =  new  ArrayList();      [BUGGY]  newAnonymous.add(name);  [BUGGY]    final  SortedMap  newOptionMap  =  new  TreeMap(ReverseStringComparator.getInstance());  final  Set  newPrefixes  =  new  HashSet();  for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {  final  Option  option  =  (Option)  i.next();  option.setParent(this);  if  (option  instanceof  Argument)  {  [CLASS]  GroupImpl  [METHOD]  <init>  [RETURN_TYPE]  String,int,int,boolean)  List  options  String  name  String  description  final  int  minimum  final  int  maximum  final  boolean  required  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  required  SortedMap  newOptionMap  optionMap  Iterator  i  j  List  anonymous  newAnonymous  options  Option  option  String  description  name  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	86	86	1	replace	newAnonymous.add(name);	      newAnonymous.add(newAnonymous);    	non-compiled	[CE]  illegal  start  of  expression	3	None	replace
28	[BUG]  [BUGGY]  newAnonymous.add(this.options);  [CE]  illegal  start  of  expression  [FE]                OptionException    [CONTEXT]    this.maximum  =  maximum;    this.options  =  Collections.unmodifiableList(options);  final  List  newAnonymous  =  new  ArrayList();      [BUGGY]  newAnonymous.add(this.options);  [BUGGY]    final  SortedMap  newOptionMap  =  new  TreeMap(ReverseStringComparator.getInstance());  final  Set  newPrefixes  =  new  HashSet();  for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {  final  Option  option  =  (Option)  i.next();  option.setParent(this);  if  (option  instanceof  Argument)  {  [CLASS]  GroupImpl  [METHOD]  <init>  [RETURN_TYPE]  String,int,int,boolean)  List  options  String  name  String  description  final  int  minimum  final  int  maximum  final  boolean  required  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  required  SortedMap  newOptionMap  optionMap  Iterator  i  j  List  anonymous  newAnonymous  options  Option  option  String  description  name  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	86	86	1	replace	newAnonymous.add(this.options);	      newAnonymous.add(newAnonymous);    	non-compiled	[CE]  illegal  start  of  expression	3	None	replace
29	[BUG]  [BUGGY]  final  SortedMap  newOptionMap  =  new  TreeMap(ReverseStringComparator.INSTANCE,  newAnonymous);  [CE]  illegal  start  of  expression  [FE]          OptionException    [CONTEXT]    this.maximum  =  maximum;    this.options  =  Collections.unmodifiableList(options);  final  List  newAnonymous  =  new  ArrayList();      [BUGGY]  final  SortedMap  newOptionMap  =  new  TreeMap(ReverseStringComparator.INSTANCE,  newAnonymous);  [BUGGY]      final  Set  newPrefixes  =  new  HashSet();  for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {  final  Option  option  =  (Option)  i.next();  option.setParent(this);  if  (option  instanceof  Argument)  {  [CLASS]  GroupImpl  [METHOD]  <init>  [RETURN_TYPE]  String,int,int,boolean)  List  options  String  name  String  description  final  int  minimum  final  int  maximum  final  boolean  required  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  required  SortedMap  newOptionMap  optionMap  Iterator  i  j  List  anonymous  newAnonymous  options  Option  option  String  description  name  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	86	86	1	replace	final  SortedMap  newOptionMap  =  new  TreeMap(ReverseStringComparator.INSTANCE,  newAnonymous);	  final    SortedMap    newOptionMap    =    new    TreeMap(ReverseStringComparator.INSTANCE);    	non-compiled	[CE]  illegal  start  of  expression	7	None	replace
30	[BUG]  [BUGGY]  final  SortedMap  newOptionMap  =  new  TreeMap(newAnonymous);  [CE]  illegal  start  of  expression  [FE]            OptionException    [CONTEXT]    this.maximum  =  maximum;    this.options  =  Collections.unmodifiableList(options);  final  List  newAnonymous  =  new  ArrayList();      [BUGGY]  final  SortedMap  newOptionMap  =  new  TreeMap(newAnonymous);  [BUGGY]      final  Set  newPrefixes  =  new  HashSet();  for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {  final  Option  option  =  (Option)  i.next();  option.setParent(this);  if  (option  instanceof  Argument)  {  [CLASS]  GroupImpl  [METHOD]  <init>  [RETURN_TYPE]  String,int,int,boolean)  List  options  String  name  String  description  final  int  minimum  final  int  maximum  final  boolean  required  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  required  SortedMap  newOptionMap  optionMap  Iterator  i  j  List  anonymous  newAnonymous  options  Option  option  String  description  name  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	86	86	1	replace	final  SortedMap  newOptionMap  =  new  TreeMap(newAnonymous);	  final    SortedMap    newOptionMap    =    new    TreeMap(ReverseStringComparator.INSTANCE);    	non-compiled	[CE]  illegal  start  of  expression	7	None	replace
31	[BUG]  [BUGGY]  final  SortedMap  newOptionMap  =  new  TreeMap(Anonymous.INSTANCE);  [CE]  illegal  start  of  expression  [FE]              OptionException    [CONTEXT]    this.maximum  =  maximum;    this.options  =  Collections.unmodifiableList(options);  final  List  newAnonymous  =  new  ArrayList();      [BUGGY]  final  SortedMap  newOptionMap  =  new  TreeMap(Anonymous.INSTANCE);  [BUGGY]      final  Set  newPrefixes  =  new  HashSet();  for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {  final  Option  option  =  (Option)  i.next();  option.setParent(this);  if  (option  instanceof  Argument)  {  [CLASS]  GroupImpl  [METHOD]  <init>  [RETURN_TYPE]  String,int,int,boolean)  List  options  String  name  String  description  final  int  minimum  final  int  maximum  final  boolean  required  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  required  SortedMap  newOptionMap  optionMap  Iterator  i  j  List  anonymous  newAnonymous  options  Option  option  String  description  name  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	86	86	1	replace	final  SortedMap  newOptionMap  =  new  TreeMap(Anonymous.INSTANCE);	  final    SortedMap    newOptionMap    =    new    TreeMap(ReverseStringComparator.INSTANCE);    	non-compiled	[CE]  illegal  start  of  expression	7	None	replace
32	[BUG]  [BUGGY]  final  SortedMap  newOptionMap  =  new  TreeMap(ReverseStringComparator.getDefault(),  newAnonymous);  [CE]  illegal  start  of  expression  [FE]            OptionException    [CONTEXT]    this.maximum  =  maximum;    this.options  =  Collections.unmodifiableList(options);  final  List  newAnonymous  =  new  ArrayList();      [BUGGY]  final  SortedMap  newOptionMap  =  new  TreeMap(ReverseStringComparator.getDefault(),  newAnonymous);  [BUGGY]      final  Set  newPrefixes  =  new  HashSet();  for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {  final  Option  option  =  (Option)  i.next();  option.setParent(this);  if  (option  instanceof  Argument)  {  [CLASS]  GroupImpl  [METHOD]  <init>  [RETURN_TYPE]  String,int,int,boolean)  List  options  String  name  String  description  final  int  minimum  final  int  maximum  final  boolean  required  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  required  SortedMap  newOptionMap  optionMap  Iterator  i  j  List  anonymous  newAnonymous  options  Option  option  String  description  name  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	86	86	1	replace	final  SortedMap  newOptionMap  =  new  TreeMap(ReverseStringComparator.getDefault(),  newAnonymous);	  final    SortedMap    newOptionMap    =    new    TreeMap(ReverseStringComparator.getDefault());    	non-compiled	[CE]  illegal  start  of  expression	8	None	replace
33	[BUG]  [BUGGY]  final  SortedMap  newOptionMap  =  new  TreeMap(ReverseStringComparator.this);  [CE]  illegal  start  of  expression  [FE]              OptionException    [CONTEXT]    this.maximum  =  maximum;    this.options  =  Collections.unmodifiableList(options);  final  List  newAnonymous  =  new  ArrayList();      [BUGGY]  final  SortedMap  newOptionMap  =  new  TreeMap(ReverseStringComparator.this);  [BUGGY]      final  Set  newPrefixes  =  new  HashSet();  for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {  final  Option  option  =  (Option)  i.next();  option.setParent(this);  if  (option  instanceof  Argument)  {  [CLASS]  GroupImpl  [METHOD]  <init>  [RETURN_TYPE]  String,int,int,boolean)  List  options  String  name  String  description  final  int  minimum  final  int  maximum  final  boolean  required  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  required  SortedMap  newOptionMap  optionMap  Iterator  i  j  List  anonymous  newAnonymous  options  Option  option  String  description  name  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	86	86	1	replace	final  SortedMap  newOptionMap  =  new  TreeMap(ReverseStringComparator.this);	  final    SortedMap    newOptionMap    =    new    TreeMap(ReverseStringComparator.getDefault());    	non-compiled	[CE]  illegal  start  of  expression	8	None	replace
34	[BUG]  [BUGGY]  final  SortedMap  newOptionMap  =  new  TreeMap(ReverseStringComparator.INSTANCE.getDefault());  [CE]  illegal  start  of  expression  [FE]                OptionException    [CONTEXT]    this.maximum  =  maximum;    this.options  =  Collections.unmodifiableList(options);  final  List  newAnonymous  =  new  ArrayList();      [BUGGY]  final  SortedMap  newOptionMap  =  new  TreeMap(ReverseStringComparator.INSTANCE.getDefault());  [BUGGY]      final  Set  newPrefixes  =  new  HashSet();  for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {  final  Option  option  =  (Option)  i.next();  option.setParent(this);  if  (option  instanceof  Argument)  {  [CLASS]  GroupImpl  [METHOD]  <init>  [RETURN_TYPE]  String,int,int,boolean)  List  options  String  name  String  description  final  int  minimum  final  int  maximum  final  boolean  required  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  required  SortedMap  newOptionMap  optionMap  Iterator  i  j  List  anonymous  newAnonymous  options  Option  option  String  description  name  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	86	86	1	replace	final  SortedMap  newOptionMap  =  new  TreeMap(ReverseStringComparator.INSTANCE.getDefault());	  final    SortedMap    newOptionMap    =    new    TreeMap(ReverseStringComparator.getDefault());    	non-compiled	[CE]  illegal  start  of  expression	8	None	replace
35	[BUG]  [BUGGY]  final  Option  option  =  options.getOption(name);  [CE]  illegal  start  of  expression  [FE]          OptionException    [CONTEXT]    this.maximum  =  maximum;    this.options  =  Collections.unmodifiableList(options);  final  List  newAnonymous  =  new  ArrayList();      [BUGGY]  final  Option  option  =  options.getOption(name);  [BUGGY]    final  SortedMap  newOptionMap  =  new  TreeMap(ReverseStringComparator.getInstance());  final  Set  newPrefixes  =  new  HashSet();  for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {  final  Option  option  =  (Option)  i.next();  option.setParent(this);  if  (option  instanceof  Argument)  {  [CLASS]  GroupImpl  [METHOD]  <init>  [RETURN_TYPE]  String,int,int,boolean)  List  options  String  name  String  description  final  int  minimum  final  int  maximum  final  boolean  required  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  required  SortedMap  newOptionMap  optionMap  Iterator  i  j  List  anonymous  newAnonymous  options  Option  option  String  description  name  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	86	86	1	replace	final  Option  option  =  options.getOption(name);	      final    Option    option    =    optionMap.getOption(name);    	non-compiled	[CE]  illegal  start  of  expression	11	None	replace
36	[BUG]  [BUGGY]  final  Option  option  =  optionMap.getOption(name,  description);  [CE]  illegal  start  of  expression  [FE]            OptionException    [CONTEXT]    this.maximum  =  maximum;    this.options  =  Collections.unmodifiableList(options);  final  List  newAnonymous  =  new  ArrayList();      [BUGGY]  final  Option  option  =  optionMap.getOption(name,  description);  [BUGGY]    final  SortedMap  newOptionMap  =  new  TreeMap(ReverseStringComparator.getInstance());  final  Set  newPrefixes  =  new  HashSet();  for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {  final  Option  option  =  (Option)  i.next();  option.setParent(this);  if  (option  instanceof  Argument)  {  [CLASS]  GroupImpl  [METHOD]  <init>  [RETURN_TYPE]  String,int,int,boolean)  List  options  String  name  String  description  final  int  minimum  final  int  maximum  final  boolean  required  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  required  SortedMap  newOptionMap  optionMap  Iterator  i  j  List  anonymous  newAnonymous  options  Option  option  String  description  name  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	86	86	1	replace	final  Option  option  =  optionMap.getOption(name,  description);	      final    Option    option    =    optionMap.getOption(name);    	non-compiled	[CE]  illegal  start  of  expression	11	None	replace
37	[BUG]  [BUGGY]  final  Option  option  =  optionMap.getOption(name,  newAnonymous);  [CE]  illegal  start  of  expression  [FE]              OptionException    [CONTEXT]    this.maximum  =  maximum;    this.options  =  Collections.unmodifiableList(options);  final  List  newAnonymous  =  new  ArrayList();      [BUGGY]  final  Option  option  =  optionMap.getOption(name,  newAnonymous);  [BUGGY]    final  SortedMap  newOptionMap  =  new  TreeMap(ReverseStringComparator.getInstance());  final  Set  newPrefixes  =  new  HashSet();  for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {  final  Option  option  =  (Option)  i.next();  option.setParent(this);  if  (option  instanceof  Argument)  {  [CLASS]  GroupImpl  [METHOD]  <init>  [RETURN_TYPE]  String,int,int,boolean)  List  options  String  name  String  description  final  int  minimum  final  int  maximum  final  boolean  required  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  required  SortedMap  newOptionMap  optionMap  Iterator  i  j  List  anonymous  newAnonymous  options  Option  option  String  description  name  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	86	86	1	replace	final  Option  option  =  optionMap.getOption(name,  newAnonymous);	      final    Option    option    =    optionMap.getOption(name);    	non-compiled	[CE]  illegal  start  of  expression	11	None	replace
38	[BUG]  [BUGGY]  newAnonymous.addAll(optionMap,  options);  [CE]  illegal  start  of  expression  [FE]        OptionException    [CONTEXT]    this.maximum  =  maximum;    this.options  =  Collections.unmodifiableList(options);  final  List  newAnonymous  =  new  ArrayList();      [BUGGY]  newAnonymous.addAll(optionMap,  options);  [BUGGY]    final  SortedMap  newOptionMap  =  new  TreeMap(ReverseStringComparator.getInstance());  final  Set  newPrefixes  =  new  HashSet();  for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {  final  Option  option  =  (Option)  i.next();  option.setParent(this);  if  (option  instanceof  Argument)  {  [CLASS]  GroupImpl  [METHOD]  <init>  [RETURN_TYPE]  String,int,int,boolean)  List  options  String  name  String  description  final  int  minimum  final  int  maximum  final  boolean  required  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  required  SortedMap  newOptionMap  optionMap  Iterator  i  j  List  anonymous  newAnonymous  options  Option  option  String  description  name  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	86	86	1	replace	newAnonymous.addAll(optionMap,  options);	      newAnonymous.addAll(optionMap);    	non-compiled	[CE]  illegal  start  of  expression	1	None	replace
39	[BUG]  [BUGGY]  Option  option  =  optionsMap.getOption(this);  [CE]  illegal  start  of  expression  [FE]            OptionException    [CONTEXT]    this.maximum  =  maximum;    this.options  =  Collections.unmodifiableList(options);  final  List  newAnonymous  =  new  ArrayList();      [BUGGY]  Option  option  =  optionsMap.getOption(this);  [BUGGY]    final  SortedMap  newOptionMap  =  new  TreeMap(ReverseStringComparator.getInstance());  final  Set  newPrefixes  =  new  HashSet();  for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {  final  Option  option  =  (Option)  i.next();  option.setParent(this);  if  (option  instanceof  Argument)  {  [CLASS]  GroupImpl  [METHOD]  <init>  [RETURN_TYPE]  String,int,int,boolean)  List  options  String  name  String  description  final  int  minimum  final  int  maximum  final  boolean  required  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  required  SortedMap  newOptionMap  optionMap  Iterator  i  j  List  anonymous  newAnonymous  options  Option  option  String  description  name  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	86	86	1	replace	Option  option  =  optionsMap.getOption(this);	      Option    option    =    optionMap.getOption(this);    	non-compiled	[CE]  illegal  start  of  expression	12	None	replace
40	[BUG]  [BUGGY]  Option  option  =  optionMap.getOption(this.description);  [CE]  illegal  start  of  expression  [FE]        OptionException    [CONTEXT]    this.maximum  =  maximum;    this.options  =  Collections.unmodifiableList(options);  final  List  newAnonymous  =  new  ArrayList();      [BUGGY]  Option  option  =  optionMap.getOption(this.description);  [BUGGY]    final  SortedMap  newOptionMap  =  new  TreeMap(ReverseStringComparator.getInstance());  final  Set  newPrefixes  =  new  HashSet();  for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {  final  Option  option  =  (Option)  i.next();  option.setParent(this);  if  (option  instanceof  Argument)  {  [CLASS]  GroupImpl  [METHOD]  <init>  [RETURN_TYPE]  String,int,int,boolean)  List  options  String  name  String  description  final  int  minimum  final  int  maximum  final  boolean  required  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  required  SortedMap  newOptionMap  optionMap  Iterator  i  j  List  anonymous  newAnonymous  options  Option  option  String  description  name  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	86	86	1	replace	Option  option  =  optionMap.getOption(this.description);	      Option    option    =    optionMap.getOption(name);    	non-compiled	[CE]  illegal  start  of  expression	10	None	replace
41	[BUG]  [BUGGY]  final  SortedMap  newOptionMap  =  new  TreeMap(ReverseStringComparator.getInstance(),  newAnonymous,  options);  [CE]  illegal  start  of  expression  [FE]        OptionException    [CONTEXT]    this.maximum  =  maximum;    this.options  =  Collections.unmodifiableList(options);  final  List  newAnonymous  =  new  ArrayList();      [BUGGY]  final  SortedMap  newOptionMap  =  new  TreeMap(ReverseStringComparator.getInstance(),  newAnonymous,  options);  [BUGGY]      final  Set  newPrefixes  =  new  HashSet();  for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {  final  Option  option  =  (Option)  i.next();  option.setParent(this);  if  (option  instanceof  Argument)  {  [CLASS]  GroupImpl  [METHOD]  <init>  [RETURN_TYPE]  String,int,int,boolean)  List  options  String  name  String  description  final  int  minimum  final  int  maximum  final  boolean  required  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  required  SortedMap  newOptionMap  optionMap  Iterator  i  j  List  anonymous  newAnonymous  options  Option  option  String  description  name  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	86	86	1	replace	final  SortedMap  newOptionMap  =  new  TreeMap(ReverseStringComparator.getInstance(),  newAnonymous,  options);	  final    SortedMap    newOptionMap    =    new    TreeMap(ReverseStringComparator.getInstance(),    newAnonymous);    	non-compiled	[CE]  illegal  start  of  expression	6	None	replace
42	[BUG]  [BUGGY]  final  SortedMap  newOptionMap  =  new  TreeMap(ReverseStringComparator.getInstance(),  newAnonymous,  optionMap);  [CE]  illegal  start  of  expression  [FE]          OptionException    [CONTEXT]    this.maximum  =  maximum;    this.options  =  Collections.unmodifiableList(options);  final  List  newAnonymous  =  new  ArrayList();      [BUGGY]  final  SortedMap  newOptionMap  =  new  TreeMap(ReverseStringComparator.getInstance(),  newAnonymous,  optionMap);  [BUGGY]      final  Set  newPrefixes  =  new  HashSet();  for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {  final  Option  option  =  (Option)  i.next();  option.setParent(this);  if  (option  instanceof  Argument)  {  [CLASS]  GroupImpl  [METHOD]  <init>  [RETURN_TYPE]  String,int,int,boolean)  List  options  String  name  String  description  final  int  minimum  final  int  maximum  final  boolean  required  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  required  SortedMap  newOptionMap  optionMap  Iterator  i  j  List  anonymous  newAnonymous  options  Option  option  String  description  name  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	86	86	1	replace	final  SortedMap  newOptionMap  =  new  TreeMap(ReverseStringComparator.getInstance(),  newAnonymous,  optionMap);	  final    SortedMap    newOptionMap    =    new    TreeMap(ReverseStringComparator.getInstance(),    newAnonymous);    	non-compiled	[CE]  illegal  start  of  expression	6	None	replace
43	[BUG]  [BUGGY]  Option  option  =(Option)optionMap.get(this.description);  [CE]  illegal  start  of  expression  [FE]              OptionException    [CONTEXT]    this.maximum  =  maximum;    this.options  =  Collections.unmodifiableList(options);  final  List  newAnonymous  =  new  ArrayList();      [BUGGY]  Option  option  =(Option)optionMap.get(this.description);  [BUGGY]    final  SortedMap  newOptionMap  =  new  TreeMap(ReverseStringComparator.getInstance());  final  Set  newPrefixes  =  new  HashSet();  for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {  final  Option  option  =  (Option)  i.next();  option.setParent(this);  if  (option  instanceof  Argument)  {  [CLASS]  GroupImpl  [METHOD]  <init>  [RETURN_TYPE]  String,int,int,boolean)  List  options  String  name  String  description  final  int  minimum  final  int  maximum  final  boolean  required  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  required  SortedMap  newOptionMap  optionMap  Iterator  i  j  List  anonymous  newAnonymous  options  Option  option  String  description  name  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	86	86	1	replace	Option  option  =(Option)optionMap.get(this.description);	      Option    option    =(Option)optionMap.get(name);    	non-compiled	[CE]  illegal  start  of  expression	4	None	replace
44	[BUG]  [BUGGY]  Option  option  =(Option)optionMap.get(name  +  1);  [CE]  illegal  start  of  expression  [FE]                OptionException    [CONTEXT]    this.maximum  =  maximum;    this.options  =  Collections.unmodifiableList(options);  final  List  newAnonymous  =  new  ArrayList();      [BUGGY]  Option  option  =(Option)optionMap.get(name  +  1);  [BUGGY]    final  SortedMap  newOptionMap  =  new  TreeMap(ReverseStringComparator.getInstance());  final  Set  newPrefixes  =  new  HashSet();  for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {  final  Option  option  =  (Option)  i.next();  option.setParent(this);  if  (option  instanceof  Argument)  {  [CLASS]  GroupImpl  [METHOD]  <init>  [RETURN_TYPE]  String,int,int,boolean)  List  options  String  name  String  description  final  int  minimum  final  int  maximum  final  boolean  required  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  required  SortedMap  newOptionMap  optionMap  Iterator  i  j  List  anonymous  newAnonymous  options  Option  option  String  description  name  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	86	86	1	replace	Option  option  =(Option)optionMap.get(name  +  1);	      Option    option    =(Option)optionMap.get(name);    	non-compiled	[CE]  illegal  start  of  expression	4	None	replace
45	[BUG]  [BUGGY]  newAnonymous.add(optionMap);  [CE]  illegal  start  of  expression  [FE]                OptionException    [CONTEXT]    this.maximum  =  maximum;    this.options  =  Collections.unmodifiableList(options);  final  List  newAnonymous  =  new  ArrayList();      [BUGGY]  newAnonymous.add(optionMap);  [BUGGY]    final  SortedMap  newOptionMap  =  new  TreeMap(ReverseStringComparator.getInstance());  final  Set  newPrefixes  =  new  HashSet();  for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {  final  Option  option  =  (Option)  i.next();  option.setParent(this);  if  (option  instanceof  Argument)  {  [CLASS]  GroupImpl  [METHOD]  <init>  [RETURN_TYPE]  String,int,int,boolean)  List  options  String  name  String  description  final  int  minimum  final  int  maximum  final  boolean  required  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  required  SortedMap  newOptionMap  optionMap  Iterator  i  j  List  anonymous  newAnonymous  options  Option  option  String  description  name  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	86	86	1	replace	newAnonymous.add(optionMap);	      newAnonymous.addAll(options);    	non-compiled	[CE]  illegal  start  of  expression	5	None	replace
46	[BUG]  [BUGGY]  newAnonymous.add(this.optionMap);  [CE]  illegal  start  of  expression  [FE]            OptionException    [CONTEXT]    this.maximum  =  maximum;    this.options  =  Collections.unmodifiableList(options);  final  List  newAnonymous  =  new  ArrayList();      [BUGGY]  newAnonymous.add(this.optionMap);  [BUGGY]    final  SortedMap  newOptionMap  =  new  TreeMap(ReverseStringComparator.getInstance());  final  Set  newPrefixes  =  new  HashSet();  for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {  final  Option  option  =  (Option)  i.next();  option.setParent(this);  if  (option  instanceof  Argument)  {  [CLASS]  GroupImpl  [METHOD]  <init>  [RETURN_TYPE]  String,int,int,boolean)  List  options  String  name  String  description  final  int  minimum  final  int  maximum  final  boolean  required  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  required  SortedMap  newOptionMap  optionMap  Iterator  i  j  List  anonymous  newAnonymous  options  Option  option  String  description  name  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	86	86	1	replace	newAnonymous.add(this.optionMap);	      newAnonymous.add(newAnonymous);    	non-compiled	[CE]  illegal  start  of  expression	3	None	replace
47	[BUG]  [BUGGY]  final  SortedMap  newOptionMap  =  new  TreeMap(ReverseStringComparator.INSTANCE,  options);  [CE]  illegal  start  of  expression  [FE]          OptionException    [CONTEXT]    this.maximum  =  maximum;    this.options  =  Collections.unmodifiableList(options);  final  List  newAnonymous  =  new  ArrayList();      [BUGGY]  final  SortedMap  newOptionMap  =  new  TreeMap(ReverseStringComparator.INSTANCE,  options);  [BUGGY]      final  Set  newPrefixes  =  new  HashSet();  for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {  final  Option  option  =  (Option)  i.next();  option.setParent(this);  if  (option  instanceof  Argument)  {  [CLASS]  GroupImpl  [METHOD]  <init>  [RETURN_TYPE]  String,int,int,boolean)  List  options  String  name  String  description  final  int  minimum  final  int  maximum  final  boolean  required  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  required  SortedMap  newOptionMap  optionMap  Iterator  i  j  List  anonymous  newAnonymous  options  Option  option  String  description  name  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	86	86	1	replace	final  SortedMap  newOptionMap  =  new  TreeMap(ReverseStringComparator.INSTANCE,  options);	  final    SortedMap    newOptionMap    =    new    TreeMap(ReverseStringComparator.INSTANCE);    	non-compiled	[CE]  illegal  start  of  expression	7	None	replace
48	[BUG]  [BUGGY]  final  SortedMap  newOptionMap  =  new  TreeMap(ReverseStringComparator.getDefault(),  options);  [CE]  illegal  start  of  expression  [FE]            OptionException    [CONTEXT]    this.maximum  =  maximum;    this.options  =  Collections.unmodifiableList(options);  final  List  newAnonymous  =  new  ArrayList();      [BUGGY]  final  SortedMap  newOptionMap  =  new  TreeMap(ReverseStringComparator.getDefault(),  options);  [BUGGY]      final  Set  newPrefixes  =  new  HashSet();  for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {  final  Option  option  =  (Option)  i.next();  option.setParent(this);  if  (option  instanceof  Argument)  {  [CLASS]  GroupImpl  [METHOD]  <init>  [RETURN_TYPE]  String,int,int,boolean)  List  options  String  name  String  description  final  int  minimum  final  int  maximum  final  boolean  required  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  required  SortedMap  newOptionMap  optionMap  Iterator  i  j  List  anonymous  newAnonymous  options  Option  option  String  description  name  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	86	86	1	replace	final  SortedMap  newOptionMap  =  new  TreeMap(ReverseStringComparator.getDefault(),  options);	  final    SortedMap    newOptionMap    =    new    TreeMap(ReverseStringComparator.getDefault());    	non-compiled	[CE]  illegal  start  of  expression	8	None	replace
49	[BUG]  [BUGGY]  final  Option  option  =  optionMap.getOption(this.description);  [CE]  illegal  start  of  expression  [FE]          OptionException    [CONTEXT]    this.maximum  =  maximum;    this.options  =  Collections.unmodifiableList(options);  final  List  newAnonymous  =  new  ArrayList();      [BUGGY]  final  Option  option  =  optionMap.getOption(this.description);  [BUGGY]    final  SortedMap  newOptionMap  =  new  TreeMap(ReverseStringComparator.getInstance());  final  Set  newPrefixes  =  new  HashSet();  for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {  final  Option  option  =  (Option)  i.next();  option.setParent(this);  if  (option  instanceof  Argument)  {  [CLASS]  GroupImpl  [METHOD]  <init>  [RETURN_TYPE]  String,int,int,boolean)  List  options  String  name  String  description  final  int  minimum  final  int  maximum  final  boolean  required  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  required  SortedMap  newOptionMap  optionMap  Iterator  i  j  List  anonymous  newAnonymous  options  Option  option  String  description  name  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	86	86	1	replace	final  Option  option  =  optionMap.getOption(this.description);	      final    Option    option    =    optionMap.getOption(name);    	non-compiled	[CE]  illegal  start  of  expression	11	None	replace
50	[BUG]  [BUGGY]  final  SortedMap  newOptionMap  =  new  TreeMap(ReverseStringComparator.class,  options);  [CE]  illegal  start  of  expression  [FE]        OptionException    [CONTEXT]    this.maximum  =  maximum;    this.options  =  Collections.unmodifiableList(options);  final  List  newAnonymous  =  new  ArrayList();      [BUGGY]  final  SortedMap  newOptionMap  =  new  TreeMap(ReverseStringComparator.class,  options);  [BUGGY]      final  Set  newPrefixes  =  new  HashSet();  for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {  final  Option  option  =  (Option)  i.next();  option.setParent(this);  if  (option  instanceof  Argument)  {  [CLASS]  GroupImpl  [METHOD]  <init>  [RETURN_TYPE]  String,int,int,boolean)  List  options  String  name  String  description  final  int  minimum  final  int  maximum  final  boolean  required  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  required  SortedMap  newOptionMap  optionMap  Iterator  i  j  List  anonymous  newAnonymous  options  Option  option  String  description  name  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	86	86	1	replace	final  SortedMap  newOptionMap  =  new  TreeMap(ReverseStringComparator.class,  options);	  final    SortedMap    newOptionMap    =    new    TreeMap(ReverseStringComparator.class);    	non-compiled	[CE]  illegal  start  of  expression	9	None	replace
51	[BUG]  [BUGGY]  Option  option  =  optionsMap.get(name);  [CE]  illegal  start  of  expression  [FE]        OptionException    [CONTEXT]    this.maximum  =  maximum;    this.options  =  Collections.unmodifiableList(options);  final  List  newAnonymous  =  new  ArrayList();      [BUGGY]  Option  option  =  optionsMap.get(name);  [BUGGY]    final  SortedMap  newOptionMap  =  new  TreeMap(ReverseStringComparator.getInstance());  final  Set  newPrefixes  =  new  HashSet();  for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {  final  Option  option  =  (Option)  i.next();  option.setParent(this);  if  (option  instanceof  Argument)  {  [CLASS]  GroupImpl  [METHOD]  <init>  [RETURN_TYPE]  String,int,int,boolean)  List  options  String  name  String  description  final  int  minimum  final  int  maximum  final  boolean  required  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  required  SortedMap  newOptionMap  optionMap  Iterator  i  j  List  anonymous  newAnonymous  options  Option  option  String  description  name  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	86	86	1	replace	Option  option  =  optionsMap.get(name);	      Option    option    =    optionMap.get(name);    	non-compiled	[CE]  illegal  start  of  expression	13	None	replace
52	[BUG]  [BUGGY]  optionMap.put(name,  option);  [CE]  illegal  start  of  expression  [FE]          OptionException    [CONTEXT]    this.maximum  =  maximum;    this.options  =  Collections.unmodifiableList(options);  final  List  newAnonymous  =  new  ArrayList();      [BUGGY]  optionMap.put(name,  option);  [BUGGY]    final  SortedMap  newOptionMap  =  new  TreeMap(ReverseStringComparator.getInstance());  final  Set  newPrefixes  =  new  HashSet();  for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {  final  Option  option  =  (Option)  i.next();  option.setParent(this);  if  (option  instanceof  Argument)  {  [CLASS]  GroupImpl  [METHOD]  <init>  [RETURN_TYPE]  String,int,int,boolean)  List  options  String  name  String  description  final  int  minimum  final  int  maximum  final  boolean  required  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  required  SortedMap  newOptionMap  optionMap  Iterator  i  j  List  anonymous  newAnonymous  options  Option  option  String  description  name  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	86	86	1	replace	optionMap.put(name,  option);	      Option    option    =    optionMap.get(name);    	non-compiled	[CE]  illegal  start  of  expression	13	None	replace
53	[BUG]  [BUGGY]  Option  option  =  optionMap.getOption(this,  description);  [CE]  illegal  start  of  expression  [FE]            OptionException    [CONTEXT]    this.maximum  =  maximum;    this.options  =  Collections.unmodifiableList(options);  final  List  newAnonymous  =  new  ArrayList();      [BUGGY]  Option  option  =  optionMap.getOption(this,  description);  [BUGGY]    final  SortedMap  newOptionMap  =  new  TreeMap(ReverseStringComparator.getInstance());  final  Set  newPrefixes  =  new  HashSet();  for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {  final  Option  option  =  (Option)  i.next();  option.setParent(this);  if  (option  instanceof  Argument)  {  [CLASS]  GroupImpl  [METHOD]  <init>  [RETURN_TYPE]  String,int,int,boolean)  List  options  String  name  String  description  final  int  minimum  final  int  maximum  final  boolean  required  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  required  SortedMap  newOptionMap  optionMap  Iterator  i  j  List  anonymous  newAnonymous  options  Option  option  String  description  name  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	86	86	1	replace	Option  option  =  optionMap.getOption(this,  description);	      Option    option    =    optionMap.getOption(this);    	non-compiled	[CE]  illegal  start  of  expression	12	None	replace
54	[BUG]  [BUGGY]  Option  option  =  optionMap.get(description);  [CE]  illegal  start  of  expression  [FE]        OptionException    [CONTEXT]    this.maximum  =  maximum;    this.options  =  Collections.unmodifiableList(options);  final  List  newAnonymous  =  new  ArrayList();      [BUGGY]  Option  option  =  optionMap.get(description);  [BUGGY]    final  SortedMap  newOptionMap  =  new  TreeMap(ReverseStringComparator.getInstance());  final  Set  newPrefixes  =  new  HashSet();  for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {  final  Option  option  =  (Option)  i.next();  option.setParent(this);  if  (option  instanceof  Argument)  {  [CLASS]  GroupImpl  [METHOD]  <init>  [RETURN_TYPE]  String,int,int,boolean)  List  options  String  name  String  description  final  int  minimum  final  int  maximum  final  boolean  required  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  required  SortedMap  newOptionMap  optionMap  Iterator  i  j  List  anonymous  newAnonymous  options  Option  option  String  description  name  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	86	86	1	replace	Option  option  =  optionMap.get(description);	      Option    option    =    optionMap.get(name);    	non-compiled	[CE]  illegal  start  of  expression	13	None	replace
55	[BUG]  [BUGGY]  newAnonymous.add(description);  [CE]  illegal  start  of  expression  [FE]            OptionException    [CONTEXT]    this.maximum  =  maximum;    this.options  =  Collections.unmodifiableList(options);  final  List  newAnonymous  =  new  ArrayList();      [BUGGY]  newAnonymous.add(description);  [BUGGY]    final  SortedMap  newOptionMap  =  new  TreeMap(ReverseStringComparator.getInstance());  final  Set  newPrefixes  =  new  HashSet();  for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {  final  Option  option  =  (Option)  i.next();  option.setParent(this);  if  (option  instanceof  Argument)  {  [CLASS]  GroupImpl  [METHOD]  <init>  [RETURN_TYPE]  String,int,int,boolean)  List  options  String  name  String  description  final  int  minimum  final  int  maximum  final  boolean  required  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  required  SortedMap  newOptionMap  optionMap  Iterator  i  j  List  anonymous  newAnonymous  options  Option  option  String  description  name  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	86	86	1	replace	newAnonymous.add(description);	      newAnonymous.add(newAnonymous);    	non-compiled	[CE]  illegal  start  of  expression	3	None	replace
56	[BUG]  [BUGGY]  final  SortedMap  newOptionMap  =  new  TreeMap(ReverseStringComparator.INSTANCE,  name);  [CE]  illegal  start  of  expression  [FE]          OptionException    [CONTEXT]    this.maximum  =  maximum;    this.options  =  Collections.unmodifiableList(options);  final  List  newAnonymous  =  new  ArrayList();      [BUGGY]  final  SortedMap  newOptionMap  =  new  TreeMap(ReverseStringComparator.INSTANCE,  name);  [BUGGY]      final  Set  newPrefixes  =  new  HashSet();  for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {  final  Option  option  =  (Option)  i.next();  option.setParent(this);  if  (option  instanceof  Argument)  {  [CLASS]  GroupImpl  [METHOD]  <init>  [RETURN_TYPE]  String,int,int,boolean)  List  options  String  name  String  description  final  int  minimum  final  int  maximum  final  boolean  required  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  required  SortedMap  newOptionMap  optionMap  Iterator  i  j  List  anonymous  newAnonymous  options  Option  option  String  description  name  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	86	86	1	replace	final  SortedMap  newOptionMap  =  new  TreeMap(ReverseStringComparator.INSTANCE,  name);	  final    SortedMap    newOptionMap    =    new    TreeMap(ReverseStringComparator.INSTANCE);    	non-compiled	[CE]  illegal  start  of  expression	7	None	replace
57	[BUG]  [BUGGY]  final  SortedMap  newOptionMap  =  new  TreeMap(ReverseStringComparator.INSTANCE,  description);  [CE]  illegal  start  of  expression  [FE]            OptionException    [CONTEXT]    this.maximum  =  maximum;    this.options  =  Collections.unmodifiableList(options);  final  List  newAnonymous  =  new  ArrayList();      [BUGGY]  final  SortedMap  newOptionMap  =  new  TreeMap(ReverseStringComparator.INSTANCE,  description);  [BUGGY]      final  Set  newPrefixes  =  new  HashSet();  for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {  final  Option  option  =  (Option)  i.next();  option.setParent(this);  if  (option  instanceof  Argument)  {  [CLASS]  GroupImpl  [METHOD]  <init>  [RETURN_TYPE]  String,int,int,boolean)  List  options  String  name  String  description  final  int  minimum  final  int  maximum  final  boolean  required  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  required  SortedMap  newOptionMap  optionMap  Iterator  i  j  List  anonymous  newAnonymous  options  Option  option  String  description  name  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	86	86	1	replace	final  SortedMap  newOptionMap  =  new  TreeMap(ReverseStringComparator.INSTANCE,  description);	  final    SortedMap    newOptionMap    =    new    TreeMap(ReverseStringComparator.INSTANCE);    	non-compiled	[CE]  illegal  start  of  expression	7	None	replace
58	[BUG]  [BUGGY]  newAnonymous.addAll(optionMap.cloneTree());  [CE]  illegal  start  of  expression  [FE]        OptionException    [CONTEXT]    this.maximum  =  maximum;    this.options  =  Collections.unmodifiableList(options);  final  List  newAnonymous  =  new  ArrayList();      [BUGGY]  newAnonymous.addAll(optionMap.cloneTree());  [BUGGY]    final  SortedMap  newOptionMap  =  new  TreeMap(ReverseStringComparator.getInstance());  final  Set  newPrefixes  =  new  HashSet();  for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {  final  Option  option  =  (Option)  i.next();  option.setParent(this);  if  (option  instanceof  Argument)  {  [CLASS]  GroupImpl  [METHOD]  <init>  [RETURN_TYPE]  String,int,int,boolean)  List  options  String  name  String  description  final  int  minimum  final  int  maximum  final  boolean  required  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  required  SortedMap  newOptionMap  optionMap  Iterator  i  j  List  anonymous  newAnonymous  options  Option  option  String  description  name  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	86	86	1	replace	newAnonymous.addAll(optionMap.cloneTree());	      newAnonymous.addAll(optionMap);    	non-compiled	[CE]  illegal  start  of  expression	1	None	replace
59	[BUG]  [BUGGY]  final  SortedMap  newOptionMap  =  new  TreeMap(ReverseStringComparator.class,  description);  [CE]  illegal  start  of  expression  [FE]        OptionException    [CONTEXT]    this.maximum  =  maximum;    this.options  =  Collections.unmodifiableList(options);  final  List  newAnonymous  =  new  ArrayList();      [BUGGY]  final  SortedMap  newOptionMap  =  new  TreeMap(ReverseStringComparator.class,  description);  [BUGGY]      final  Set  newPrefixes  =  new  HashSet();  for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {  final  Option  option  =  (Option)  i.next();  option.setParent(this);  if  (option  instanceof  Argument)  {  [CLASS]  GroupImpl  [METHOD]  <init>  [RETURN_TYPE]  String,int,int,boolean)  List  options  String  name  String  description  final  int  minimum  final  int  maximum  final  boolean  required  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  required  SortedMap  newOptionMap  optionMap  Iterator  i  j  List  anonymous  newAnonymous  options  Option  option  String  description  name  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	86	86	1	replace	final  SortedMap  newOptionMap  =  new  TreeMap(ReverseStringComparator.class,  description);	  final    SortedMap    newOptionMap    =    new    TreeMap(ReverseStringComparator.class);    	non-compiled	[CE]  illegal  start  of  expression	9	None	replace
60	[BUG]  [BUGGY]  final  SortedMap  newOptionMap  =  new  TreeMap(ReverseStringComparator.class,  name);  [CE]  illegal  start  of  expression  [FE]          OptionException    [CONTEXT]    this.maximum  =  maximum;    this.options  =  Collections.unmodifiableList(options);  final  List  newAnonymous  =  new  ArrayList();      [BUGGY]  final  SortedMap  newOptionMap  =  new  TreeMap(ReverseStringComparator.class,  name);  [BUGGY]      final  Set  newPrefixes  =  new  HashSet();  for  (final  Iterator  i  =  options.iterator();  i.hasNext();)  {  final  Option  option  =  (Option)  i.next();  option.setParent(this);  if  (option  instanceof  Argument)  {  [CLASS]  GroupImpl  [METHOD]  <init>  [RETURN_TYPE]  String,int,int,boolean)  List  options  String  name  String  description  final  int  minimum  final  int  maximum  final  boolean  required  [VARIABLES]  Set  newPrefixes  prefixes  triggers  boolean  required  SortedMap  newOptionMap  optionMap  Iterator  i  j  List  anonymous  newAnonymous  options  Option  option  String  description  name  int  maximum  minimum  	projects/Cli21/src/java/org/apache/commons/cli2/option/GroupImpl.java	1.0	86	86	1	replace	final  SortedMap  newOptionMap  =  new  TreeMap(ReverseStringComparator.class,  name);	  final    SortedMap    newOptionMap    =    new    TreeMap(ReverseStringComparator.class);    	non-compiled	[CE]  illegal  start  of  expression	9	None	replace
