30	[BUG]    [BUGGY]    if(ancestorType    ==    Token.COMMA    ||    ancestorType    ==    Token.FOR)continue;    [CE]    'else'    without    'if'    [FE]                        junit.framework.AssertionFailedError:    There    should    be    one    warning    [CONTEXT]    if    (n    ==    parent.getFirstChild()    &&    parent.getChildCount()    ==    2    &&    n.getNext().isName()    &&       "eval   ".equals(n.getNext().getString()))    {    return;    }    }        if    (n    ==    parent.getLastChild())    {    for    (Node    an    :    parent.getAncestors())    {    int    ancestorType    =    an.getType();    [BUGGY]    if(ancestorType    ==    Token.COMMA    ||    ancestorType    ==    Token.FOR)continue;    [BUGGY]    continue;    if    (ancestorType    !=    Token.EXPR_RESULT    &&    ancestorType    !=    Token.BLOCK)    return;    else    break;    }    }    }    else    if    (parent.getType()    !=    Token.EXPR_RESULT    &&    parent.getType()    !=    Token.BLOCK)    {    if    (parent.getType()    ==    Token.FOR    &&    parent.getChildCount()    ==    4    &&    (n    ==    parent.getFirstChild()    ||    n    ==    parent.getFirstChild().getNext().getNext()))    {    [CLASS]    CheckSideEffects    StripProtection    [METHOD]    visit    [RETURN_TYPE]    void    NodeTraversal    t    Node    n    Node    parent    [VARIABLES]    AbstractCompiler    compiler    boolean    isResultUsed    isSimpleOp    protectSideEffectFreeCode    NodeTraversal    t    DiagnosticType    USELESS_CODE_ERROR    CheckLevel    level    Node    an    gramps    n    parent    List    problemNodes    String    PROTECTOR_FN    msg    int    ancestorType    	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	114	115	1	replace	if(ancestorType!=  Token.COMMA  ||  ancestorType  ==  Token.FOR)continue;	  if(ancestorType    ==    Token.COMMA    ||    ancestorType    ==    Token.FOR)continue;    	plausible		23	0
30	[BUG]    [BUGGY]    if(ancestorType    ==    Token.COMMA    ||    ancestorType    ==    Token.FOR)continue;    [CE]    'else'    without    'if'    [FE]                        junit.framework.AssertionFailedError:    There    should    be    one    warning    [CONTEXT]    if    (n    ==    parent.getFirstChild()    &&    parent.getChildCount()    ==    2    &&    n.getNext().isName()    &&       "eval   ".equals(n.getNext().getString()))    {    return;    }    }        if    (n    ==    parent.getLastChild())    {    for    (Node    an    :    parent.getAncestors())    {    int    ancestorType    =    an.getType();    [BUGGY]    if(ancestorType    ==    Token.COMMA    ||    ancestorType    ==    Token.FOR)continue;    [BUGGY]    continue;    if    (ancestorType    !=    Token.EXPR_RESULT    &&    ancestorType    !=    Token.BLOCK)    return;    else    break;    }    }    }    else    if    (parent.getType()    !=    Token.EXPR_RESULT    &&    parent.getType()    !=    Token.BLOCK)    {    if    (parent.getType()    ==    Token.FOR    &&    parent.getChildCount()    ==    4    &&    (n    ==    parent.getFirstChild()    ||    n    ==    parent.getFirstChild().getNext().getNext()))    {    [CLASS]    CheckSideEffects    StripProtection    [METHOD]    visit    [RETURN_TYPE]    void    NodeTraversal    t    Node    n    Node    parent    [VARIABLES]    AbstractCompiler    compiler    boolean    isResultUsed    isSimpleOp    protectSideEffectFreeCode    NodeTraversal    t    DiagnosticType    USELESS_CODE_ERROR    CheckLevel    level    Node    an    gramps    n    parent    List    problemNodes    String    PROTECTOR_FN    msg    int    ancestorType    	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	114	115	1	replace	if(ancestorType  ==  Token.COMMA  ||  ancestorType!=  Token.FOR)continue;	  if(ancestorType    ==    Token.COMMA    ||    ancestorType    ==    Token.FOR)continue;    	plausible		23	0
30	[BUG]    [BUGGY]    if(ancestorType    ==    Token.COMMA    ||    ancestorType    ==    Token.FOR)continue;    [CE]    'else'    without    'if'    [FE]                        junit.framework.AssertionFailedError:    There    should    be    one    warning    [CONTEXT]    if    (n    ==    parent.getFirstChild()    &&    parent.getChildCount()    ==    2    &&    n.getNext().isName()    &&       "eval   ".equals(n.getNext().getString()))    {    return;    }    }        if    (n    ==    parent.getLastChild())    {    for    (Node    an    :    parent.getAncestors())    {    int    ancestorType    =    an.getType();    [BUGGY]    if(ancestorType    ==    Token.COMMA    ||    ancestorType    ==    Token.FOR)continue;    [BUGGY]    continue;    if    (ancestorType    !=    Token.EXPR_RESULT    &&    ancestorType    !=    Token.BLOCK)    return;    else    break;    }    }    }    else    if    (parent.getType()    !=    Token.EXPR_RESULT    &&    parent.getType()    !=    Token.BLOCK)    {    if    (parent.getType()    ==    Token.FOR    &&    parent.getChildCount()    ==    4    &&    (n    ==    parent.getFirstChild()    ||    n    ==    parent.getFirstChild().getNext().getNext()))    {    [CLASS]    CheckSideEffects    StripProtection    [METHOD]    visit    [RETURN_TYPE]    void    NodeTraversal    t    Node    n    Node    parent    [VARIABLES]    AbstractCompiler    compiler    boolean    isResultUsed    isSimpleOp    protectSideEffectFreeCode    NodeTraversal    t    DiagnosticType    USELESS_CODE_ERROR    CheckLevel    level    Node    an    gramps    n    parent    List    problemNodes    String    PROTECTOR_FN    msg    int    ancestorType    	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	114	115	1	replace	if(ancestorType  >=  Token.COMMA  ||  ancestorType  ==  Token.FOR)continue;	  if(ancestorType    ==    Token.COMMA    ||    ancestorType    ==    Token.FOR)continue;    	plausible		23	0
31	[BUG]    [BUGGY]    if(ancestorType    ==    Token.COMMA    ||    ancestorType    ==    Token.FOR)continue;    [CE]    'else'    without    'if'    [FE]                        junit.framework.AssertionFailedError:    There    should    be    one    warning    [CONTEXT]    if    (n    ==    parent.getFirstChild()    &&    parent.getChildCount()    ==    2    &&    n.getNext().isName()    &&       "eval   ".equals(n.getNext().getString()))    {    return;    }    }        if    (n    ==    parent.getLastChild())    {    for    (Node    an    :    parent.getAncestors())    {    int    ancestorType    =    an.getType();    [BUGGY]    if(ancestorType    ==    Token.COMMA    ||    ancestorType    ==    Token.FOR)continue;    [BUGGY]    continue;    if    (ancestorType    !=    Token.EXPR_RESULT    &&    ancestorType    !=    Token.BLOCK)    return;    else    break;    }    }    }    else    if    (parent.getType()    !=    Token.EXPR_RESULT    &&    parent.getType()    !=    Token.BLOCK)    {    if    (parent.getType()    ==    Token.FOR    &&    parent.getChildCount()    ==    4    &&    (n    ==    parent.getFirstChild()    ||    n    ==    parent.getFirstChild().getNext().getNext()))    {    [CLASS]    CheckSideEffects    StripProtection    [METHOD]    visit    [RETURN_TYPE]    void    NodeTraversal    t    Node    n    Node    parent    [VARIABLES]    AbstractCompiler    compiler    boolean    isResultUsed    isSimpleOp    protectSideEffectFreeCode    NodeTraversal    t    DiagnosticType    USELESS_CODE_ERROR    CheckLevel    level    Node    an    gramps    n    parent    List    problemNodes    String    PROTECTOR_FN    msg    int    ancestorType    	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	114	115	1	replace	if(ancestorType  ==  Token.FOR  ||  ancestorType  ==  Token.COMMA)continue;	  if(ancestorType    ==    Token.COMMA    ||    ancestorType    ==    Token.FOR)continue;    	plausible		23	0
35	[BUG]    [BUGGY]    if(ancestorType!=    Token.COMMA    ||    ancestorType    ==    Token.EXPR_RESULT)continue;    [FE]    junit.framework.AssertionFailedError:    There    should    be    one    warning    [FE]            junit.framework.AssertionFailedError:    There    should    be    one    warning    [CONTEXT]    if    (n    ==    parent.getFirstChild()    &&    parent.getChildCount()    ==    2    &&    n.getNext().isName()    &&       "eval   ".equals(n.getNext().getString()))    {    return;    }    }        if    (n    ==    parent.getLastChild())    {    for    (Node    an    :    parent.getAncestors())    {    int    ancestorType    =    an.getType();    [BUGGY]    if(ancestorType!=    Token.COMMA    ||    ancestorType    ==    Token.EXPR_RESULT)continue;    [BUGGY]    continue;    if    (ancestorType    !=    Token.EXPR_RESULT    &&    ancestorType    !=    Token.BLOCK)    return;    else    break;    }    }    }    else    if    (parent.getType()    !=    Token.EXPR_RESULT    &&    parent.getType()    !=    Token.BLOCK)    {    if    (parent.getType()    ==    Token.FOR    &&    parent.getChildCount()    ==    4    &&    (n    ==    parent.getFirstChild()    ||    n    ==    parent.getFirstChild().getNext().getNext()))    {    [CLASS]    CheckSideEffects    StripProtection    [METHOD]    visit    [RETURN_TYPE]    void    NodeTraversal    t    Node    n    Node    parent    [VARIABLES]    AbstractCompiler    compiler    boolean    isResultUsed    isSimpleOp    protectSideEffectFreeCode    NodeTraversal    t    DiagnosticType    USELESS_CODE_ERROR    CheckLevel    level    Node    an    gramps    n    parent    List    problemNodes    String    PROTECTOR_FN    msg    int    ancestorType    	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	114	115	1	replace	if(ancestorType  ==  Token.COMMA  ||  ancestorType!=  Token.EXPR_RESULT)continue;	  if(ancestorType!=    Token.COMMA    ||    ancestorType    ==    Token.EXPR_RESULT)continue;    	plausible		4	0
35	[BUG]    [BUGGY]    if(ancestorType!=    Token.COMMA    ||    ancestorType    ==    Token.EXPR_RESULT)continue;    [FE]    junit.framework.AssertionFailedError:    There    should    be    one    warning    [FE]            junit.framework.AssertionFailedError:    There    should    be    one    warning    [CONTEXT]    if    (n    ==    parent.getFirstChild()    &&    parent.getChildCount()    ==    2    &&    n.getNext().isName()    &&       "eval   ".equals(n.getNext().getString()))    {    return;    }    }        if    (n    ==    parent.getLastChild())    {    for    (Node    an    :    parent.getAncestors())    {    int    ancestorType    =    an.getType();    [BUGGY]    if(ancestorType!=    Token.COMMA    ||    ancestorType    ==    Token.EXPR_RESULT)continue;    [BUGGY]    continue;    if    (ancestorType    !=    Token.EXPR_RESULT    &&    ancestorType    !=    Token.BLOCK)    return;    else    break;    }    }    }    else    if    (parent.getType()    !=    Token.EXPR_RESULT    &&    parent.getType()    !=    Token.BLOCK)    {    if    (parent.getType()    ==    Token.FOR    &&    parent.getChildCount()    ==    4    &&    (n    ==    parent.getFirstChild()    ||    n    ==    parent.getFirstChild().getNext().getNext()))    {    [CLASS]    CheckSideEffects    StripProtection    [METHOD]    visit    [RETURN_TYPE]    void    NodeTraversal    t    Node    n    Node    parent    [VARIABLES]    AbstractCompiler    compiler    boolean    isResultUsed    isSimpleOp    protectSideEffectFreeCode    NodeTraversal    t    DiagnosticType    USELESS_CODE_ERROR    CheckLevel    level    Node    an    gramps    n    parent    List    problemNodes    String    PROTECTOR_FN    msg    int    ancestorType    	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	114	115	1	replace	if(ancestorType  >=  Token.COMMA  ||  ancestorType  ==  Token.EXPR_RESULT)continue;	  if(ancestorType!=    Token.COMMA    ||    ancestorType    ==    Token.EXPR_RESULT)continue;    	plausible		4	0
36	[BUG]    [BUGGY]    if(ancestorType!=    Token.COMMA    ||    ancestorType    ==    Token.EXPR_RESULT)continue;    [FE]    junit.framework.AssertionFailedError:    There    should    be    one    warning    [FE]            junit.framework.AssertionFailedError:    There    should    be    one    warning    [CONTEXT]    if    (n    ==    parent.getFirstChild()    &&    parent.getChildCount()    ==    2    &&    n.getNext().isName()    &&       "eval   ".equals(n.getNext().getString()))    {    return;    }    }        if    (n    ==    parent.getLastChild())    {    for    (Node    an    :    parent.getAncestors())    {    int    ancestorType    =    an.getType();    [BUGGY]    if(ancestorType!=    Token.COMMA    ||    ancestorType    ==    Token.EXPR_RESULT)continue;    [BUGGY]    continue;    if    (ancestorType    !=    Token.EXPR_RESULT    &&    ancestorType    !=    Token.BLOCK)    return;    else    break;    }    }    }    else    if    (parent.getType()    !=    Token.EXPR_RESULT    &&    parent.getType()    !=    Token.BLOCK)    {    if    (parent.getType()    ==    Token.FOR    &&    parent.getChildCount()    ==    4    &&    (n    ==    parent.getFirstChild()    ||    n    ==    parent.getFirstChild().getNext().getNext()))    {    [CLASS]    CheckSideEffects    StripProtection    [METHOD]    visit    [RETURN_TYPE]    void    NodeTraversal    t    Node    n    Node    parent    [VARIABLES]    AbstractCompiler    compiler    boolean    isResultUsed    isSimpleOp    protectSideEffectFreeCode    NodeTraversal    t    DiagnosticType    USELESS_CODE_ERROR    CheckLevel    level    Node    an    gramps    n    parent    List    problemNodes    String    PROTECTOR_FN    msg    int    ancestorType    	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	114	115	1	replace	if(ancestorType!=  Token.COMMA  &&  ancestorType  ==  Token.EXPR_RESULT)continue;	  if(ancestorType!=    Token.COMMA    ||    ancestorType    ==    Token.EXPR_RESULT)continue;    	plausible		4	0
36	[BUG]    [BUGGY]    if(ancestorType    ==    Token.COMMA    ||    ancestorType    ==    Token.BLOCK)continue;    [CE]    'else'    without    'if'    [FE]                    junit.framework.AssertionFailedError:    There    should    be    one    warning    [CONTEXT]    if    (n    ==    parent.getFirstChild()    &&    parent.getChildCount()    ==    2    &&    n.getNext().isName()    &&       "eval   ".equals(n.getNext().getString()))    {    return;    }    }        if    (n    ==    parent.getLastChild())    {    for    (Node    an    :    parent.getAncestors())    {    int    ancestorType    =    an.getType();    [BUGGY]    if(ancestorType    ==    Token.COMMA    ||    ancestorType    ==    Token.BLOCK)continue;    [BUGGY]    continue;    if    (ancestorType    !=    Token.EXPR_RESULT    &&    ancestorType    !=    Token.BLOCK)    return;    else    break;    }    }    }    else    if    (parent.getType()    !=    Token.EXPR_RESULT    &&    parent.getType()    !=    Token.BLOCK)    {    if    (parent.getType()    ==    Token.FOR    &&    parent.getChildCount()    ==    4    &&    (n    ==    parent.getFirstChild()    ||    n    ==    parent.getFirstChild().getNext().getNext()))    {    [CLASS]    CheckSideEffects    StripProtection    [METHOD]    visit    [RETURN_TYPE]    void    NodeTraversal    t    Node    n    Node    parent    [VARIABLES]    AbstractCompiler    compiler    boolean    isResultUsed    isSimpleOp    protectSideEffectFreeCode    NodeTraversal    t    DiagnosticType    USELESS_CODE_ERROR    CheckLevel    level    Node    an    gramps    n    parent    List    problemNodes    String    PROTECTOR_FN    msg    int    ancestorType    	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	114	115	1	replace	if(ancestorType!=  Token.COMMA  ||  ancestorType  ==  Token.BLOCK)continue;	  if(ancestorType    ==    Token.COMMA    ||    ancestorType    ==    Token.BLOCK)continue;    	plausible		22	0
36	[BUG]    [BUGGY]    if(ancestorType    ==    Token.COMMA    ||    ancestorType    ==    Token.BLOCK)continue;    [CE]    'else'    without    'if'    [FE]                    junit.framework.AssertionFailedError:    There    should    be    one    warning    [CONTEXT]    if    (n    ==    parent.getFirstChild()    &&    parent.getChildCount()    ==    2    &&    n.getNext().isName()    &&       "eval   ".equals(n.getNext().getString()))    {    return;    }    }        if    (n    ==    parent.getLastChild())    {    for    (Node    an    :    parent.getAncestors())    {    int    ancestorType    =    an.getType();    [BUGGY]    if(ancestorType    ==    Token.COMMA    ||    ancestorType    ==    Token.BLOCK)continue;    [BUGGY]    continue;    if    (ancestorType    !=    Token.EXPR_RESULT    &&    ancestorType    !=    Token.BLOCK)    return;    else    break;    }    }    }    else    if    (parent.getType()    !=    Token.EXPR_RESULT    &&    parent.getType()    !=    Token.BLOCK)    {    if    (parent.getType()    ==    Token.FOR    &&    parent.getChildCount()    ==    4    &&    (n    ==    parent.getFirstChild()    ||    n    ==    parent.getFirstChild().getNext().getNext()))    {    [CLASS]    CheckSideEffects    StripProtection    [METHOD]    visit    [RETURN_TYPE]    void    NodeTraversal    t    Node    n    Node    parent    [VARIABLES]    AbstractCompiler    compiler    boolean    isResultUsed    isSimpleOp    protectSideEffectFreeCode    NodeTraversal    t    DiagnosticType    USELESS_CODE_ERROR    CheckLevel    level    Node    an    gramps    n    parent    List    problemNodes    String    PROTECTOR_FN    msg    int    ancestorType    	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	114	115	1	replace	if(ancestorType  ==  Token.COMMA  ||  ancestorType!=  Token.BLOCK)continue;	  if(ancestorType    ==    Token.COMMA    ||    ancestorType    ==    Token.BLOCK)continue;    	plausible		22	0
36	[BUG]    [BUGGY]    if(ancestorType    ==    Token.COMMA    ||    ancestorType    ==    Token.BLOCK)continue;    [CE]    'else'    without    'if'    [FE]                    junit.framework.AssertionFailedError:    There    should    be    one    warning    [CONTEXT]    if    (n    ==    parent.getFirstChild()    &&    parent.getChildCount()    ==    2    &&    n.getNext().isName()    &&       "eval   ".equals(n.getNext().getString()))    {    return;    }    }        if    (n    ==    parent.getLastChild())    {    for    (Node    an    :    parent.getAncestors())    {    int    ancestorType    =    an.getType();    [BUGGY]    if(ancestorType    ==    Token.COMMA    ||    ancestorType    ==    Token.BLOCK)continue;    [BUGGY]    continue;    if    (ancestorType    !=    Token.EXPR_RESULT    &&    ancestorType    !=    Token.BLOCK)    return;    else    break;    }    }    }    else    if    (parent.getType()    !=    Token.EXPR_RESULT    &&    parent.getType()    !=    Token.BLOCK)    {    if    (parent.getType()    ==    Token.FOR    &&    parent.getChildCount()    ==    4    &&    (n    ==    parent.getFirstChild()    ||    n    ==    parent.getFirstChild().getNext().getNext()))    {    [CLASS]    CheckSideEffects    StripProtection    [METHOD]    visit    [RETURN_TYPE]    void    NodeTraversal    t    Node    n    Node    parent    [VARIABLES]    AbstractCompiler    compiler    boolean    isResultUsed    isSimpleOp    protectSideEffectFreeCode    NodeTraversal    t    DiagnosticType    USELESS_CODE_ERROR    CheckLevel    level    Node    an    gramps    n    parent    List    problemNodes    String    PROTECTOR_FN    msg    int    ancestorType    	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	114	115	1	replace	if(ancestorType  ==  Token.COMMA  &&  ancestorType  ==  Token.BLOCK)continue;	  if(ancestorType    ==    Token.COMMA    ||    ancestorType    ==    Token.BLOCK)continue;    	plausible		22	0
36	[BUG]    [BUGGY]    if(ancestorType    ==    Token.COMMA    ||    ancestorType    ==    Token.BLOCK)continue;    [CE]    'else'    without    'if'    [FE]                    junit.framework.AssertionFailedError:    There    should    be    one    warning    [CONTEXT]    if    (n    ==    parent.getFirstChild()    &&    parent.getChildCount()    ==    2    &&    n.getNext().isName()    &&       "eval   ".equals(n.getNext().getString()))    {    return;    }    }        if    (n    ==    parent.getLastChild())    {    for    (Node    an    :    parent.getAncestors())    {    int    ancestorType    =    an.getType();    [BUGGY]    if(ancestorType    ==    Token.COMMA    ||    ancestorType    ==    Token.BLOCK)continue;    [BUGGY]    continue;    if    (ancestorType    !=    Token.EXPR_RESULT    &&    ancestorType    !=    Token.BLOCK)    return;    else    break;    }    }    }    else    if    (parent.getType()    !=    Token.EXPR_RESULT    &&    parent.getType()    !=    Token.BLOCK)    {    if    (parent.getType()    ==    Token.FOR    &&    parent.getChildCount()    ==    4    &&    (n    ==    parent.getFirstChild()    ||    n    ==    parent.getFirstChild().getNext().getNext()))    {    [CLASS]    CheckSideEffects    StripProtection    [METHOD]    visit    [RETURN_TYPE]    void    NodeTraversal    t    Node    n    Node    parent    [VARIABLES]    AbstractCompiler    compiler    boolean    isResultUsed    isSimpleOp    protectSideEffectFreeCode    NodeTraversal    t    DiagnosticType    USELESS_CODE_ERROR    CheckLevel    level    Node    an    gramps    n    parent    List    problemNodes    String    PROTECTOR_FN    msg    int    ancestorType    	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	114	115	1	replace	if(ancestorType  >=  Token.COMMA  ||  ancestorType  ==  Token.BLOCK)continue;	  if(ancestorType    ==    Token.COMMA    ||    ancestorType    ==    Token.BLOCK)continue;    	plausible		22	0
36	[BUG]    [BUGGY]    if(ancestorType    ==    Token.COMMA    ||    ancestorType    ==    Token.BLOCK)continue;    [CE]    'else'    without    'if'    [FE]                    junit.framework.AssertionFailedError:    There    should    be    one    warning    [CONTEXT]    if    (n    ==    parent.getFirstChild()    &&    parent.getChildCount()    ==    2    &&    n.getNext().isName()    &&       "eval   ".equals(n.getNext().getString()))    {    return;    }    }        if    (n    ==    parent.getLastChild())    {    for    (Node    an    :    parent.getAncestors())    {    int    ancestorType    =    an.getType();    [BUGGY]    if(ancestorType    ==    Token.COMMA    ||    ancestorType    ==    Token.BLOCK)continue;    [BUGGY]    continue;    if    (ancestorType    !=    Token.EXPR_RESULT    &&    ancestorType    !=    Token.BLOCK)    return;    else    break;    }    }    }    else    if    (parent.getType()    !=    Token.EXPR_RESULT    &&    parent.getType()    !=    Token.BLOCK)    {    if    (parent.getType()    ==    Token.FOR    &&    parent.getChildCount()    ==    4    &&    (n    ==    parent.getFirstChild()    ||    n    ==    parent.getFirstChild().getNext().getNext()))    {    [CLASS]    CheckSideEffects    StripProtection    [METHOD]    visit    [RETURN_TYPE]    void    NodeTraversal    t    Node    n    Node    parent    [VARIABLES]    AbstractCompiler    compiler    boolean    isResultUsed    isSimpleOp    protectSideEffectFreeCode    NodeTraversal    t    DiagnosticType    USELESS_CODE_ERROR    CheckLevel    level    Node    an    gramps    n    parent    List    problemNodes    String    PROTECTOR_FN    msg    int    ancestorType    	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	114	115	1	replace	if(ancestorType!=  Token.COMMA  &&  ancestorType  ==  Token.BLOCK)continue;	  if(ancestorType    ==    Token.COMMA    ||    ancestorType    ==    Token.BLOCK)continue;    	plausible		22	0
50	[BUG]    [BUGGY]    if(ancestorType    ==    Token.COMMA    ||    ancestorType    ==    Token.FUNCTION)continue;    [FE]    junit.framework.AssertionFailedError:    There    should    be    one    warning    [FE]                junit.framework.AssertionFailedError:    There    should    be    one    warning    [CONTEXT]    if    (n    ==    parent.getFirstChild()    &&    parent.getChildCount()    ==    2    &&    n.getNext().isName()    &&       "eval   ".equals(n.getNext().getString()))    {    return;    }    }        if    (n    ==    parent.getLastChild())    {    for    (Node    an    :    parent.getAncestors())    {    int    ancestorType    =    an.getType();    [BUGGY]    if(ancestorType    ==    Token.COMMA    ||    ancestorType    ==    Token.FUNCTION)continue;    [BUGGY]    continue;    if    (ancestorType    !=    Token.EXPR_RESULT    &&    ancestorType    !=    Token.BLOCK)    return;    else    break;    }    }    }    else    if    (parent.getType()    !=    Token.EXPR_RESULT    &&    parent.getType()    !=    Token.BLOCK)    {    if    (parent.getType()    ==    Token.FOR    &&    parent.getChildCount()    ==    4    &&    (n    ==    parent.getFirstChild()    ||    n    ==    parent.getFirstChild().getNext().getNext()))    {    [CLASS]    CheckSideEffects    StripProtection    [METHOD]    visit    [RETURN_TYPE]    void    NodeTraversal    t    Node    n    Node    parent    [VARIABLES]    AbstractCompiler    compiler    boolean    isResultUsed    isSimpleOp    protectSideEffectFreeCode    NodeTraversal    t    DiagnosticType    USELESS_CODE_ERROR    CheckLevel    level    Node    an    gramps    n    parent    List    problemNodes    String    PROTECTOR_FN    msg    int    ancestorType    	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	114	115	1	replace	if(ancestorType!=  Token.COMMA  &&  ancestorType  ==  Token.FUNCTION)continue;	  if(ancestorType    ==    Token.COMMA    ||    ancestorType    ==    Token.FUNCTION)continue;    	plausible		21	0
50	[BUG]    [BUGGY]    if(ancestorType    ==    Token.COMMA    ||    ancestorType    ==    Token.NAME)continue;    [FE]    junit.framework.AssertionFailedError:    There    should    be    one    warning    [FE]                            junit.framework.AssertionFailedError:    There    should    be    one    warning    [CONTEXT]    if    (n    ==    parent.getFirstChild()    &&    parent.getChildCount()    ==    2    &&    n.getNext().isName()    &&       "eval   ".equals(n.getNext().getString()))    {    return;    }    }        if    (n    ==    parent.getLastChild())    {    for    (Node    an    :    parent.getAncestors())    {    int    ancestorType    =    an.getType();    [BUGGY]    if(ancestorType    ==    Token.COMMA    ||    ancestorType    ==    Token.NAME)continue;    [BUGGY]    continue;    if    (ancestorType    !=    Token.EXPR_RESULT    &&    ancestorType    !=    Token.BLOCK)    return;    else    break;    }    }    }    else    if    (parent.getType()    !=    Token.EXPR_RESULT    &&    parent.getType()    !=    Token.BLOCK)    {    if    (parent.getType()    ==    Token.FOR    &&    parent.getChildCount()    ==    4    &&    (n    ==    parent.getFirstChild()    ||    n    ==    parent.getFirstChild().getNext().getNext()))    {    [CLASS]    CheckSideEffects    StripProtection    [METHOD]    visit    [RETURN_TYPE]    void    NodeTraversal    t    Node    n    Node    parent    [VARIABLES]    AbstractCompiler    compiler    boolean    isResultUsed    isSimpleOp    protectSideEffectFreeCode    NodeTraversal    t    DiagnosticType    USELESS_CODE_ERROR    CheckLevel    level    Node    an    gramps    n    parent    List    problemNodes    String    PROTECTOR_FN    msg    int    ancestorType    	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	114	115	1	replace	if(ancestorType  ==  Token.COMMA  ||  ancestorType!=  Token.NAME)continue;	  if(ancestorType    ==    Token.COMMA    ||    ancestorType    ==    Token.NAME)continue;    	plausible		12	0
50	[BUG]    [BUGGY]    if(ancestorType    ==    Token.COMMA    ||    ancestorType    ==    Token.NAME)continue;    [FE]    junit.framework.AssertionFailedError:    There    should    be    one    warning    [FE]                            junit.framework.AssertionFailedError:    There    should    be    one    warning    [CONTEXT]    if    (n    ==    parent.getFirstChild()    &&    parent.getChildCount()    ==    2    &&    n.getNext().isName()    &&       "eval   ".equals(n.getNext().getString()))    {    return;    }    }        if    (n    ==    parent.getLastChild())    {    for    (Node    an    :    parent.getAncestors())    {    int    ancestorType    =    an.getType();    [BUGGY]    if(ancestorType    ==    Token.COMMA    ||    ancestorType    ==    Token.NAME)continue;    [BUGGY]    continue;    if    (ancestorType    !=    Token.EXPR_RESULT    &&    ancestorType    !=    Token.BLOCK)    return;    else    break;    }    }    }    else    if    (parent.getType()    !=    Token.EXPR_RESULT    &&    parent.getType()    !=    Token.BLOCK)    {    if    (parent.getType()    ==    Token.FOR    &&    parent.getChildCount()    ==    4    &&    (n    ==    parent.getFirstChild()    ||    n    ==    parent.getFirstChild().getNext().getNext()))    {    [CLASS]    CheckSideEffects    StripProtection    [METHOD]    visit    [RETURN_TYPE]    void    NodeTraversal    t    Node    n    Node    parent    [VARIABLES]    AbstractCompiler    compiler    boolean    isResultUsed    isSimpleOp    protectSideEffectFreeCode    NodeTraversal    t    DiagnosticType    USELESS_CODE_ERROR    CheckLevel    level    Node    an    gramps    n    parent    List    problemNodes    String    PROTECTOR_FN    msg    int    ancestorType    	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	114	115	1	replace	if(ancestorType  >=  Token.COMMA  ||  ancestorType  ==  Token.NAME)continue;	  if(ancestorType    ==    Token.COMMA    ||    ancestorType    ==    Token.NAME)continue;    	plausible		12	0
50	[BUG]    [BUGGY]    if(ancestorType    ==    Token.COMMA    ||    ancestorType    ==    Token.NAME)continue;    [FE]    junit.framework.AssertionFailedError:    There    should    be    one    warning    [FE]                            junit.framework.AssertionFailedError:    There    should    be    one    warning    [CONTEXT]    if    (n    ==    parent.getFirstChild()    &&    parent.getChildCount()    ==    2    &&    n.getNext().isName()    &&       "eval   ".equals(n.getNext().getString()))    {    return;    }    }        if    (n    ==    parent.getLastChild())    {    for    (Node    an    :    parent.getAncestors())    {    int    ancestorType    =    an.getType();    [BUGGY]    if(ancestorType    ==    Token.COMMA    ||    ancestorType    ==    Token.NAME)continue;    [BUGGY]    continue;    if    (ancestorType    !=    Token.EXPR_RESULT    &&    ancestorType    !=    Token.BLOCK)    return;    else    break;    }    }    }    else    if    (parent.getType()    !=    Token.EXPR_RESULT    &&    parent.getType()    !=    Token.BLOCK)    {    if    (parent.getType()    ==    Token.FOR    &&    parent.getChildCount()    ==    4    &&    (n    ==    parent.getFirstChild()    ||    n    ==    parent.getFirstChild().getNext().getNext()))    {    [CLASS]    CheckSideEffects    StripProtection    [METHOD]    visit    [RETURN_TYPE]    void    NodeTraversal    t    Node    n    Node    parent    [VARIABLES]    AbstractCompiler    compiler    boolean    isResultUsed    isSimpleOp    protectSideEffectFreeCode    NodeTraversal    t    DiagnosticType    USELESS_CODE_ERROR    CheckLevel    level    Node    an    gramps    n    parent    List    problemNodes    String    PROTECTOR_FN    msg    int    ancestorType    	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	114	115	1	replace	if(ancestorType  ==  Token.COMMA  &&  ancestorType  ==  Token.NAME)continue;	  if(ancestorType    ==    Token.COMMA    ||    ancestorType    ==    Token.NAME)continue;    	plausible		12	0
50	[BUG]    [BUGGY]    if(ancestorType    ==    Token.COMMA    ||    ancestorType    ==    Token.NAME)continue;    [FE]    junit.framework.AssertionFailedError:    There    should    be    one    warning    [FE]                            junit.framework.AssertionFailedError:    There    should    be    one    warning    [CONTEXT]    if    (n    ==    parent.getFirstChild()    &&    parent.getChildCount()    ==    2    &&    n.getNext().isName()    &&       "eval   ".equals(n.getNext().getString()))    {    return;    }    }        if    (n    ==    parent.getLastChild())    {    for    (Node    an    :    parent.getAncestors())    {    int    ancestorType    =    an.getType();    [BUGGY]    if(ancestorType    ==    Token.COMMA    ||    ancestorType    ==    Token.NAME)continue;    [BUGGY]    continue;    if    (ancestorType    !=    Token.EXPR_RESULT    &&    ancestorType    !=    Token.BLOCK)    return;    else    break;    }    }    }    else    if    (parent.getType()    !=    Token.EXPR_RESULT    &&    parent.getType()    !=    Token.BLOCK)    {    if    (parent.getType()    ==    Token.FOR    &&    parent.getChildCount()    ==    4    &&    (n    ==    parent.getFirstChild()    ||    n    ==    parent.getFirstChild().getNext().getNext()))    {    [CLASS]    CheckSideEffects    StripProtection    [METHOD]    visit    [RETURN_TYPE]    void    NodeTraversal    t    Node    n    Node    parent    [VARIABLES]    AbstractCompiler    compiler    boolean    isResultUsed    isSimpleOp    protectSideEffectFreeCode    NodeTraversal    t    DiagnosticType    USELESS_CODE_ERROR    CheckLevel    level    Node    an    gramps    n    parent    List    problemNodes    String    PROTECTOR_FN    msg    int    ancestorType    	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	114	115	1	replace	if(ancestorType!=  Token.COMMA  &&  ancestorType  ==  Token.NAME)continue;	  if(ancestorType    ==    Token.COMMA    ||    ancestorType    ==    Token.NAME)continue;    	plausible		12	0
132	[BUG]    [BUGGY]    if(ancestorType!=    Token.COMMA)continue;    [FE]    junit.framework.AssertionFailedError:    There    should    be    one    warning    [FE]        junit.framework.AssertionFailedError:    There    should    be    one    warning    [CONTEXT]    if    (n    ==    parent.getFirstChild()    &&    parent.getChildCount()    ==    2    &&    n.getNext().isName()    &&       "eval   ".equals(n.getNext().getString()))    {    return;    }    }        if    (n    ==    parent.getLastChild())    {    for    (Node    an    :    parent.getAncestors())    {    int    ancestorType    =    an.getType();    [BUGGY]    if(ancestorType!=    Token.COMMA)continue;    [BUGGY]    continue;    if    (ancestorType    !=    Token.EXPR_RESULT    &&    ancestorType    !=    Token.BLOCK)    return;    else    break;    }    }    }    else    if    (parent.getType()    !=    Token.EXPR_RESULT    &&    parent.getType()    !=    Token.BLOCK)    {    if    (parent.getType()    ==    Token.FOR    &&    parent.getChildCount()    ==    4    &&    (n    ==    parent.getFirstChild()    ||    n    ==    parent.getFirstChild().getNext().getNext()))    {    [CLASS]    CheckSideEffects    StripProtection    [METHOD]    visit    [RETURN_TYPE]    void    NodeTraversal    t    Node    n    Node    parent    [VARIABLES]    AbstractCompiler    compiler    boolean    isResultUsed    isSimpleOp    protectSideEffectFreeCode    NodeTraversal    t    DiagnosticType    USELESS_CODE_ERROR    CheckLevel    level    Node    an    gramps    n    parent    List    problemNodes    String    PROTECTOR_FN    msg    int    ancestorType    	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	114	115	1	replace	if(ancestorType!=  Token.COMMA  ||  ancestorType!=  Token.NEW)continue;	  if(ancestorType!=    Token.COMMA)continue;    	plausible		2	0
