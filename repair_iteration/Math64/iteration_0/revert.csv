projects/Math64/src/main/java/org/apache/commons/math/optimization/general/LevenbergMarquardtOptimizer.java539
projects/Math64/src/main/java/org/apache/commons/math/optimization/general/LevenbergMarquardtOptimizer.java539sum+=diag[i][pj]*work1[permutation[i]];
projects/Math64/src/main/java/org/apache/commons/math/optimization/general/LevenbergMarquardtOptimizer.java539diagR[i]=work1[diagR[i]];
projects/Math64/src/main/java/org/apache/commons/math/optimization/general/LevenbergMarquardtOptimizer.java539sum+=diag[i][pj];
projects/Math64/src/main/java/org/apache/commons/math/optimization/general/LevenbergMarquardtOptimizer.java539sum+=diag[i][pj]-work1[permutation[i]];
projects/Math64/src/main/java/org/apache/commons/math/optimization/general/LevenbergMarquardtOptimizer.java539sum+=diag[i][pj]/diagR[i]];
projects/Math64/src/main/java/org/apache/commons/math/optimization/general/LevenbergMarquardtOptimizer.java537doublesum=0;
projects/Math64/src/main/java/org/apache/commons/math/optimization/general/LevenbergMarquardtOptimizer.java537doublesum=(work1[pj]-work2[pj])/diagR[pj];
projects/Math64/src/main/java/org/apache/commons/math/optimization/general/LevenbergMarquardtOptimizer.java537doublesum=(work1[pj]-work2)/diagR[pj];
projects/Math64/src/main/java/org/apache/commons/math/optimization/general/LevenbergMarquardtOptimizer.java537doublesum=1;
projects/Math64/src/main/java/org/apache/commons/math/optimization/general/LevenbergMarquardtOptimizer.java537
projects/Math64/src/main/java/org/apache/commons/math/optimization/general/LevenbergMarquardtOptimizer.java534sum2=0;
projects/Math64/src/main/java/org/apache/commons/math/optimization/general/LevenbergMarquardtOptimizer.java534sum2=parl;
projects/Math64/src/main/java/org/apache/commons/math/optimization/general/LevenbergMarquardtOptimizer.java534sum2=1;
projects/Math64/src/main/java/org/apache/commons/math/optimization/general/LevenbergMarquardtOptimizer.java534sum2=(work1[pj]-work1[pj])/diagR[pj];
projects/Math64/src/main/java/org/apache/commons/math/optimization/general/LevenbergMarquardtOptimizer.java534
projects/Math64/src/main/java/org/apache/commons/math/optimization/general/LevenbergMarquardtOptimizer.java541doubles=(work1[pj]-sum)/diagR[pj];
projects/Math64/src/main/java/org/apache/commons/math/optimization/general/LevenbergMarquardtOptimizer.java541doubles=(work1[pj]-sum)/diag[pj];
projects/Math64/src/main/java/org/apache/commons/math/optimization/general/LevenbergMarquardtOptimizer.java541doubles=(work1[pj]-work2)/diag[pj];
projects/Math64/src/main/java/org/apache/commons/math/optimization/general/LevenbergMarquardtOptimizer.java541doubles=(diag[pj]-work1)/diag[pj];
projects/Math64/src/main/java/org/apache/commons/math/optimization/general/LevenbergMarquardtOptimizer.java541doubles=(work1[pj]-delta)/diag[pj];
projects/Math64/src/main/java/org/apache/commons/math/optimization/general/LevenbergMarquardtOptimizer.java541
projects/Math64/src/main/java/org/apache/commons/math/optimization/general/LevenbergMarquardtOptimizer.java539sum+=jacobian[i][pj]*work1[permutation[i]];
projects/Math64/src/main/java/org/apache/commons/math/optimization/general/LevenbergMarquardtOptimizer.java539sum+=permutation[i][pj]*work1[permutation[i]];
projects/Math64/src/main/java/org/apache/commons/math/optimization/general/LevenbergMarquardtOptimizer.java539sum+=diagR[i][pj]*work1[permutation[i]];
projects/Math64/src/main/java/org/apache/commons/math/optimization/general/LevenbergMarquardtOptimizer.java539sum+=work1[i][pj]*diag[permutation[i]];
projects/Math64/src/main/java/org/apache/commons/math/optimization/general/LevenbergMarquardtOptimizer.java538
projects/Math64/src/main/java/org/apache/commons/math/optimization/general/LevenbergMarquardtOptimizer.java538work2[pj]*=diag[pj]/diagR[pj];
projects/Math64/src/main/java/org/apache/commons/math/optimization/general/LevenbergMarquardtOptimizer.java538work2[pj]*=diag[pj]/dxNorm;
projects/Math64/src/main/java/org/apache/commons/math/optimization/general/LevenbergMarquardtOptimizer.java538if(work1[pj]*=diag[pj]/diagR[pj]){sum2=0;for(inti=0;i<parl;++i){work1[pj]*=diag[pj]/diagR[
projects/Math64/src/main/java/org/apache/commons/math/optimization/general/LevenbergMarquardtOptimizer.java538if(work1[pj]*=diag[pj]/diagR[pj]){sum2=0;for(inti=0;i<parl;++i){work1[pj]*=diag[pj]/dxNorm;}
projects/Math64/src/main/java/org/apache/commons/math/optimization/general/LevenbergMarquardtOptimizer.java538work2[pj]*=diag[pj]/dxNorm;sum2=0;
projects/Math64/src/main/java/org/apache/commons/math/optimization/general/LevenbergMarquardtOptimizer.java530
projects/Math64/src/main/java/org/apache/commons/math/optimization/general/LevenbergMarquardtOptimizer.java530lmPar=Math.min(lmPar,parl);
projects/Math64/src/main/java/org/apache/commons/math/optimization/general/LevenbergMarquardtOptimizer.java530int[]dxNorm=Math.min(lmPar,parl);
projects/Math64/src/main/java/org/apache/commons/math/optimization/general/LevenbergMarquardtOptimizer.java530lmPar=Math.sqrt(work1,parl);
projects/Math64/src/main/java/org/apache/commons/math/optimization/general/LevenbergMarquardtOptimizer.java530lmPar=Math.min(lmPar,rank);
projects/Math64/src/main/java/org/apache/commons/math/optimization/general/LevenbergMarquardtOptimizer.java530lmPar=Math.sqrt(parl);
projects/Math64/src/main/java/org/apache/commons/math/optimization/general/LevenbergMarquardtOptimizer.java537work2[pj]*=diag[pj]/dxNorm;
projects/Math64/src/main/java/org/apache/commons/math/optimization/general/LevenbergMarquardtOptimizer.java537work1[pj]*=diag[pj]/dxNorm;
projects/Math64/src/main/java/org/apache/commons/math/optimization/general/LevenbergMarquardtOptimizer.java537if(work1[pj]*=diag[pj]/dxNorm){for(inti=0;i<pj;++i){work2[pj]*=diag[pj]/dxNorm;}
projects/Math64/src/main/java/org/apache/commons/math/optimization/general/LevenbergMarquardtOptimizer.java537if(work1[pj]*=diag[pj]/dxNorm){for(inti=0;i<pj;++i){work2[pj]*=diag[pj]/diagR[pj];}
projects/Math64/src/main/java/org/apache/commons/math/optimization/general/LevenbergMarquardtOptimizer.java536
projects/Math64/src/main/java/org/apache/commons/math/optimization/general/LevenbergMarquardtOptimizer.java536sum2+=diag[j]/diagR[pj];
projects/Math64/src/main/java/org/apache/commons/math/optimization/general/LevenbergMarquardtOptimizer.java536sum2+=diag[pj]/diagR[pj];
projects/Math64/src/main/java/org/apache/commons/math/optimization/general/LevenbergMarquardtOptimizer.java536sum2+=diag[pj]/dxNorm;
projects/Math64/src/main/java/org/apache/commons/math/optimization/general/LevenbergMarquardtOptimizer.java536sum2+=diag[j]/diagR[j];
projects/Math64/src/main/java/org/apache/commons/math/optimization/general/LevenbergMarquardtOptimizer.java536sum2+=diag[j]/dxNorm;
projects/Math64/src/main/java/org/apache/commons/math/optimization/general/LevenbergMarquardtOptimizer.java532work1[pj]*=diag[pj]/dxNorm;
projects/Math64/src/main/java/org/apache/commons/math/optimization/general/LevenbergMarquardtOptimizer.java532work1[pj]*=diag[pj]/parl;
projects/Math64/src/main/java/org/apache/commons/math/optimization/general/LevenbergMarquardtOptimizer.java532work1[pj]*=diagR[pj]/dxNorm;
projects/Math64/src/main/java/org/apache/commons/math/optimization/general/LevenbergMarquardtOptimizer.java532work1[pj]*=parl[pj]/diagR[pj];
projects/Math64/src/main/java/org/apache/commons/math/optimization/general/LevenbergMarquardtOptimizer.java532
projects/Math64/src/main/java/org/apache/commons/math/optimization/general/LevenbergMarquardtOptimizer.java530for(intj=0;j<solvedCols;++j){
projects/Math64/src/main/java/org/apache/commons/math/optimization/general/LevenbergMarquardtOptimizer.java530for(intj=0;j<parl;++j){
projects/Math64/src/main/java/org/apache/commons/math/optimization/general/LevenbergMarquardtOptimizer.java530for(intj=0;j<rank;++j){
