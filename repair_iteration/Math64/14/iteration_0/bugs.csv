bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	failing_test_number	action	patch
27	[BUG] [BUGGY] tmp = 0.1; [FE] AssertionFailedError [CONTEXT] double dirDer = -(coeff1 + coeff2);  ratio = (preRed == 0) ? 0 : (actRed / preRed);  if (ratio <= 0.25) { double tmp = (actRed < 0) ? (0.5 * dirDer / (dirDer + 0.5 * actRed)) : 0.5; if ((0.1 * cost >= previousCost) || (tmp < 0.1)) { [BUGGY] tmp = 0.1; [BUGGY] } delta = tmp * Math.min(delta, 10.0 * lmNorm); lmPar /= tmp; } else if ((lmPar == 0) || (ratio >= 0.75)) { delta = 2 * lmNorm; lmPar *= 0.5; }  if (ratio >= 1.0e-4) { [CLASS] LevenbergMarquardtOptimizer [METHOD] doOptimize [RETURN_TYPE] VectorialPointValuePair  [VARIABLES] VectorialPointValuePair current previous int[] permutation boolean firstIteration double[] beta diag diagR jacNorm lmDir oldRes oldX tmpVec work1 work2 work3 double actRed coeff1 coeff2 costRelativeTolerance delta dirDer dirJ dk initialStepBoundFactor lmNorm lmPar maxCosine orthoTolerance parRelativeTolerance pc2 preRed previousCost qrRankingThreshold r ratio s sum threshold tmp xK xNorm xk int i j k pj pk rank solvedCols  	projects/Math64/src/main/java/org/apache/commons/math/optimization/general/LevenbergMarquardtOptimizer.java	0.3779644730092272	402	402	2	replace	
28	[BUG] [BUGGY] [FE] AssertionFailedError [CONTEXT] double dirDer = -(coeff1 + coeff2);  ratio = (preRed == 0) ? 0 : (actRed / preRed);  if (ratio <= 0.25) { double tmp = (actRed < 0) ? (0.5 * dirDer / (dirDer + 0.5 * actRed)) : 0.5; if ((0.1 * cost >= previousCost) || (tmp < 0.1)) { [BUGGY] [BUGGY] tmp = 0.1; } delta = tmp * Math.min(delta, 10.0 * lmNorm); lmPar /= tmp; } else if ((lmPar == 0) || (ratio >= 0.75)) { delta = 2 * lmNorm; lmPar *= 0.5; }  if (ratio >= 1.0e-4) { [CLASS] LevenbergMarquardtOptimizer [METHOD] doOptimize [RETURN_TYPE] VectorialPointValuePair  [VARIABLES] VectorialPointValuePair current previous int[] permutation boolean firstIteration double[] beta diag diagR jacNorm lmDir oldRes oldX tmpVec work1 work2 work3 double actRed coeff1 coeff2 costRelativeTolerance delta dirDer dirJ dk initialStepBoundFactor lmNorm lmPar maxCosine orthoTolerance parRelativeTolerance pc2 preRed previousCost qrRankingThreshold r ratio s sum threshold tmp xK xNorm xk int i j k pj pk rank solvedCols  	projects/Math64/src/main/java/org/apache/commons/math/optimization/general/LevenbergMarquardtOptimizer.java	0.3779644730092272	402	402	2	add	
