projects/Math64/src/main/java/org/apache/commons/math/optimization/general/LevenbergMarquardtOptimizer.java569
projects/Math64/src/main/java/org/apache/commons/math/optimization/general/LevenbergMarquardtOptimizer.java569lmPar=Math.min(paru,Math.max(lmPar,parl));
projects/Math64/src/main/java/org/apache/commons/math/optimization/general/LevenbergMarquardtOptimizer.java569doublelmPar=Math.min(paru,Math.max(lmPar,parl));
projects/Math64/src/main/java/org/apache/commons/math/optimization/general/LevenbergMarquardtOptimizer.java569lmPar=Math.min(paru,Math.max(dxNorm,parl));
projects/Math64/src/main/java/org/apache/commons/math/optimization/general/LevenbergMarquardtOptimizer.java569lmPar=Math.min(paru,Math.max(gNorm,parl));
projects/Math64/src/main/java/org/apache/commons/math/optimization/general/LevenbergMarquardtOptimizer.java569if(lmPar==0){
projects/Math64/src/main/java/org/apache/commons/math/optimization/general/LevenbergMarquardtOptimizer.java569if(dxNorm!=0.0){
projects/Math64/src/main/java/org/apache/commons/math/optimization/general/LevenbergMarquardtOptimizer.java569if(dxNorm==0.0){
projects/Math64/src/main/java/org/apache/commons/math/optimization/general/LevenbergMarquardtOptimizer.java569if(dxNorm!=0){
projects/Math64/src/main/java/org/apache/commons/math/optimization/general/LevenbergMarquardtOptimizer.java569if(dxNorm==0){
projects/Math64/src/main/java/org/apache/commons/math/optimization/general/LevenbergMarquardtOptimizer.java569lmPar=Math.min(delta,Math.max(dxNorm,parl));
projects/Math64/src/main/java/org/apache/commons/math/optimization/general/LevenbergMarquardtOptimizer.java569lmPar=Math.min(paru,Math.max(sPar,parl));
projects/Math64/src/main/java/org/apache/commons/math/optimization/general/LevenbergMarquardtOptimizer.java569doubledxNorm=Math.sqrt(lmPar);
projects/Math64/src/main/java/org/apache/commons/math/optimization/general/LevenbergMarquardtOptimizer.java569lmPar=Math.min(paru,Math.max(sPar,dxNorm));
projects/Math64/src/main/java/org/apache/commons/math/optimization/general/LevenbergMarquardtOptimizer.java569if(dxNorm>=0.0){
projects/Math64/src/main/java/org/apache/commons/math/optimization/general/LevenbergMarquardtOptimizer.java569if(dxNorm!=null){
projects/Math64/src/main/java/org/apache/commons/math/optimization/general/LevenbergMarquardtOptimizer.java569lmPar=Math.max(2.2251e-308,0.001*paru);
projects/Math64/src/main/java/org/apache/commons/math/optimization/general/LevenbergMarquardtOptimizer.java569lmPar=Math.max(2.251e-308,0.001*paru);
projects/Math64/src/main/java/org/apache/commons/math/optimization/general/LevenbergMarquardtOptimizer.java569lmPar=Math.max(2.0,Math.max(1.0,parl));
