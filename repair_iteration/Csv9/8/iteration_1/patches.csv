bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  if(values!=  null)  {  values  =  new  String[values.length];  System.arraycopy(values,  0,  values,  0,  values.length);  }  [CE]  illegal  start  of  type  [FE]          NullPointerException    [CONTEXT]      [BUGGY]  if(values!=  null)  {  values  =  new  String[values.length];  System.arraycopy(values,  0,  values,  0,  values.length);  }  [BUGGY]      [CLASS]  CSVRecord  [METHOD]  <init>  [RETURN_TYPE]  String,long)  String[]  values  Integer>  mapping  String  comment  final  long  recordNumber  	projects/Csv9/src/main/java/org/apache/commons/csv/CSVRecord.java	0.24253562503633297	57	57	1	replace	if(values!=  null)  {  values  =  new  String[values.length];  System.arraycopy(values,  0,  values,  0,  values.length);  }	  if(values    ==    null)    {    values    =    new    String[values.length];    System.arraycopy(values,    0,    values,    0,    values.length);    }    	non-compiled	[CE]  illegal  start  of  type	10	None	replace
2	[BUG]  [BUGGY]  this.values  =  new  String[values.length];  System.arraycopy(values,  0,  values,  0,  values.length);  [CE]  illegal  start  of  type  [FE]            NullPointerException    [CONTEXT]      [BUGGY]  this.values  =  new  String[values.length];  System.arraycopy(values,  0,  values,  0,  values.length);  [BUGGY]      [CLASS]  CSVRecord  [METHOD]  <init>  [RETURN_TYPE]  String,long)  String[]  values  Integer>  mapping  String  comment  final  long  recordNumber  	projects/Csv9/src/main/java/org/apache/commons/csv/CSVRecord.java	0.24253562503633297	57	57	1	replace	this.values  =  new  String[values.length];  System.arraycopy(values,  0,  values,  0,  values.length);	  if(values    ==    null)    {    values    =    new    String[values.length];    System.arraycopy(values,    0,    values,    0,    values.length);    }    	non-compiled	[CE]  illegal  start  of  type	10	None	replace
3	[BUG]  [BUGGY]  System.arraycopy(values,  0,  values,  0,  values.length);  [CE]  illegal  start  of  type  [FE]              NullPointerException    [CONTEXT]      [BUGGY]  System.arraycopy(values,  0,  values,  0,  values.length);  [BUGGY]      [CLASS]  CSVRecord  [METHOD]  <init>  [RETURN_TYPE]  String,long)  String[]  values  Integer>  mapping  String  comment  final  long  recordNumber  	projects/Csv9/src/main/java/org/apache/commons/csv/CSVRecord.java	0.24253562503633297	57	57	1	replace	System.arraycopy(values,  0,  values,  0,  values.length);	  if(values    ==    null)    {    values    =    new    String[values.length];    System.arraycopy(values,    0,    values,    0,    values.length);    }    	non-compiled	[CE]  illegal  start  of  type	10	None	replace
4	[BUG]  [BUGGY]  if(values!=  null)  {  values  =  new  String[values.length  +  1];  System.arraycopy(values,  0,  values,  0,  values.length);  }  [CE]  illegal  start  of  type  [FE]                NullPointerException    [CONTEXT]      [BUGGY]  if(values!=  null)  {  values  =  new  String[values.length  +  1];  System.arraycopy(values,  0,  values,  0,  values.length);  }  [BUGGY]      [CLASS]  CSVRecord  [METHOD]  <init>  [RETURN_TYPE]  String,long)  String[]  values  Integer>  mapping  String  comment  final  long  recordNumber  	projects/Csv9/src/main/java/org/apache/commons/csv/CSVRecord.java	0.24253562503633297	57	57	1	replace	if(values!=  null)  {  values  =  new  String[values.length  +  1];  System.arraycopy(values,  0,  values,  0,  values.length);  }	  if(values    ==    null)    {    values    =    new    String[values.length];    System.arraycopy(values,    0,    values,    0,    values.length);    }    	non-compiled	[CE]  illegal  start  of  type	10	None	replace
5	[BUG]  [BUGGY]  if(values!=  null)  {  values  =  new  String[0];  System.arraycopy(values,  0,  values,  0,  values.length);  }  [CE]  illegal  start  of  type  [FE]                  NullPointerException    [CONTEXT]      [BUGGY]  if(values!=  null)  {  values  =  new  String[0];  System.arraycopy(values,  0,  values,  0,  values.length);  }  [BUGGY]      [CLASS]  CSVRecord  [METHOD]  <init>  [RETURN_TYPE]  String,long)  String[]  values  Integer>  mapping  String  comment  final  long  recordNumber  	projects/Csv9/src/main/java/org/apache/commons/csv/CSVRecord.java	0.24253562503633297	57	57	1	replace	if(values!=  null)  {  values  =  new  String[0];  System.arraycopy(values,  0,  values,  0,  values.length);  }	  if(values    ==    null)    {    values    =    new    String[values.length];    System.arraycopy(values,    0,    values,    0,    values.length);    }    	non-compiled	[CE]  illegal  start  of  type	10	None	replace
6	[BUG]  [BUGGY]  this.values  =  new  String[values.length];  System.arraycopy(this.values,  0,  values,  0,  values.length);  [CE]  illegal  start  of  type  [FE]                    NullPointerException    [CONTEXT]      [BUGGY]  this.values  =  new  String[values.length];  System.arraycopy(this.values,  0,  values,  0,  values.length);  [BUGGY]      [CLASS]  CSVRecord  [METHOD]  <init>  [RETURN_TYPE]  String,long)  String[]  values  Integer>  mapping  String  comment  final  long  recordNumber  	projects/Csv9/src/main/java/org/apache/commons/csv/CSVRecord.java	0.24253562503633297	57	57	1	replace	this.values  =  new  String[values.length];  System.arraycopy(this.values,  0,  values,  0,  values.length);	  if(values    ==    null)    {    values    =    new    String[values.length];    System.arraycopy(values,    0,    values,    0,    values.length);    }    	non-compiled	[CE]  illegal  start  of  type	10	None	replace
7	[BUG]  [BUGGY]  final  int  comment  =(int)Math.rint(comment);  [CE]  illegal  start  of  type  [FE]                      NullPointerException    [CONTEXT]      [BUGGY]  final  int  comment  =(int)Math.rint(comment);  [BUGGY]      [CLASS]  CSVRecord  [METHOD]  <init>  [RETURN_TYPE]  String,long)  String[]  values  Integer>  mapping  String  comment  final  long  recordNumber  	projects/Csv9/src/main/java/org/apache/commons/csv/CSVRecord.java	0.24253562503633297	57	57	1	replace	final  int  comment  =(int)Math.rint(comment);	      	non-compiled	[CE]  illegal  start  of  type	8	None	replace
8	[BUG]  [BUGGY]  final  int  comment  =  values.length();  [CE]  illegal  start  of  type  [FE]                        NullPointerException    [CONTEXT]      [BUGGY]  final  int  comment  =  values.length();  [BUGGY]      [CLASS]  CSVRecord  [METHOD]  <init>  [RETURN_TYPE]  String,long)  String[]  values  Integer>  mapping  String  comment  final  long  recordNumber  	projects/Csv9/src/main/java/org/apache/commons/csv/CSVRecord.java	0.24253562503633297	57	57	1	replace	final  int  comment  =  values.length();	      	non-compiled	[CE]  illegal  start  of  type	8	None	replace
9	[BUG]  [BUGGY]  final  int  comment  =  values.length();  if(comment  ==  null)  {  return  recordNumber;  }  [CE]  illegal  start  of  type  [FE]                          NullPointerException    [CONTEXT]      [BUGGY]  final  int  comment  =  values.length();  if(comment  ==  null)  {  return  recordNumber;  }  [BUGGY]      [CLASS]  CSVRecord  [METHOD]  <init>  [RETURN_TYPE]  String,long)  String[]  values  Integer>  mapping  String  comment  final  long  recordNumber  	projects/Csv9/src/main/java/org/apache/commons/csv/CSVRecord.java	0.24253562503633297	57	57	1	replace	final  int  comment  =  values.length();  if(comment  ==  null)  {  return  recordNumber;  }	      	non-compiled	[CE]  illegal  start  of  type	8	None	replace
10	[BUG]  [BUGGY]  final  int  comment  =(int)Math.rint(comment);  return  recordNumber;  [CE]  illegal  start  of  type  [FE]                            NullPointerException    [CONTEXT]      [BUGGY]  final  int  comment  =(int)Math.rint(comment);  return  recordNumber;  [BUGGY]      [CLASS]  CSVRecord  [METHOD]  <init>  [RETURN_TYPE]  String,long)  String[]  values  Integer>  mapping  String  comment  final  long  recordNumber  	projects/Csv9/src/main/java/org/apache/commons/csv/CSVRecord.java	0.24253562503633297	57	57	1	replace	final  int  comment  =(int)Math.rint(comment);  return  recordNumber;	      	non-compiled	[CE]  illegal  start  of  type	8	None	replace
11	[BUG]  [BUGGY]  final  int  comment  =  values.length();  if(comment!=  null)  {  return  recordNumber;  }  [CE]  illegal  start  of  type  [FE]                              NullPointerException    [CONTEXT]      [BUGGY]  final  int  comment  =  values.length();  if(comment!=  null)  {  return  recordNumber;  }  [BUGGY]      [CLASS]  CSVRecord  [METHOD]  <init>  [RETURN_TYPE]  String,long)  String[]  values  Integer>  mapping  String  comment  final  long  recordNumber  	projects/Csv9/src/main/java/org/apache/commons/csv/CSVRecord.java	0.24253562503633297	57	57	1	replace	final  int  comment  =  values.length();  if(comment!=  null)  {  return  recordNumber;  }	      	non-compiled	[CE]  illegal  start  of  type	8	None	replace
12	[BUG]  [BUGGY]  final  int  comment  =(int)Math.rint(recordNumber);  [CE]  illegal  start  of  type  [FE]                                NullPointerException    [CONTEXT]      [BUGGY]  final  int  comment  =(int)Math.rint(recordNumber);  [BUGGY]      [CLASS]  CSVRecord  [METHOD]  <init>  [RETURN_TYPE]  String,long)  String[]  values  Integer>  mapping  String  comment  final  long  recordNumber  	projects/Csv9/src/main/java/org/apache/commons/csv/CSVRecord.java	0.24253562503633297	57	57	1	replace	final  int  comment  =(int)Math.rint(recordNumber);	      	non-compiled	[CE]  illegal  start  of  type	8	None	replace
13	[BUG]  [BUGGY]  String[]  values  =  getValues();  if(values  ==  null)  {  return  values[0];  }  [CE]  illegal  start  of  type  [FE]                                  NullPointerException    [CONTEXT]      [BUGGY]  String[]  values  =  getValues();  if(values  ==  null)  {  return  values[0];  }  [BUGGY]      [CLASS]  CSVRecord  [METHOD]  <init>  [RETURN_TYPE]  String,long)  String[]  values  Integer>  mapping  String  comment  final  long  recordNumber  	projects/Csv9/src/main/java/org/apache/commons/csv/CSVRecord.java	0.24253562503633297	57	57	1	replace	String[]  values  =  getValues();  if(values  ==  null)  {  return  values[0];  }	      	non-compiled	[CE]  illegal  start  of  type	8	None	replace
14	[BUG]  [BUGGY]  while(values!=  null  &&  values.length  >  0)  {  for(int  i  =  0;  i  <  values.length;  ++i)  {  values[i]  =  values[i];  }  [CE]  illegal  start  of  type  [FE]                  NullPointerException    [CONTEXT]      [BUGGY]  while(values!=  null  &&  values.length  >  0)  {  for(int  i  =  0;  i  <  values.length;  ++i)  {  values[i]  =  values[i];  }  [BUGGY]      [CLASS]  CSVRecord  [METHOD]  <init>  [RETURN_TYPE]  String,long)  String[]  values  Integer>  mapping  String  comment  final  long  recordNumber  	projects/Csv9/src/main/java/org/apache/commons/csv/CSVRecord.java	0.24253562503633297	57	57	1	replace	while(values!=  null  &&  values.length  >  0)  {  for(int  i  =  0;  i  <  values.length;  ++i)  {  values[i]  =  values[i];  }	  if(values    ==    null)    {    for(int    i    =    0;    i    <    values.length;    ++i)    {    values[i]    =    values[i];    }    	non-compiled	[CE]  illegal  start  of  type	6	None	replace
15	[BUG]  [BUGGY]  while(values!=  null)  {  for(int  i  =  0;  i  <  values.length;  ++i)  {  values[i]  =  values[i];  }  [CE]  illegal  start  of  type  [FE]                    NullPointerException    [CONTEXT]      [BUGGY]  while(values!=  null)  {  for(int  i  =  0;  i  <  values.length;  ++i)  {  values[i]  =  values[i];  }  [BUGGY]      [CLASS]  CSVRecord  [METHOD]  <init>  [RETURN_TYPE]  String,long)  String[]  values  Integer>  mapping  String  comment  final  long  recordNumber  	projects/Csv9/src/main/java/org/apache/commons/csv/CSVRecord.java	0.24253562503633297	57	57	1	replace	while(values!=  null)  {  for(int  i  =  0;  i  <  values.length;  ++i)  {  values[i]  =  values[i];  }	  if(values    ==    null)    {    for(int    i    =    0;    i    <    values.length;    ++i)    {    values[i]    =    values[i];    }    	non-compiled	[CE]  illegal  start  of  type	6	None	replace
16	[BUG]  [BUGGY]  while(values!=  null)  {  for(int  i  =  0;  i  <  values.length;  ++i)  {  values[i]  =  value[i];  }  [CE]  illegal  start  of  type  [FE]                      NullPointerException    [CONTEXT]      [BUGGY]  while(values!=  null)  {  for(int  i  =  0;  i  <  values.length;  ++i)  {  values[i]  =  value[i];  }  [BUGGY]      [CLASS]  CSVRecord  [METHOD]  <init>  [RETURN_TYPE]  String,long)  String[]  values  Integer>  mapping  String  comment  final  long  recordNumber  	projects/Csv9/src/main/java/org/apache/commons/csv/CSVRecord.java	0.24253562503633297	57	57	1	replace	while(values!=  null)  {  for(int  i  =  0;  i  <  values.length;  ++i)  {  values[i]  =  value[i];  }	  if(values    ==    null)    {    for(int    i    =    0;    i    <    values.length;    ++i)    {    values[i]    =    values[i];    }    	non-compiled	[CE]  illegal  start  of  type	6	None	replace
17	[BUG]  [BUGGY]  while(values!=  null)  {  for(int  i  =  0;  i  <  values.length;  ++i)  {  values[i]  =  String.valueOf(values[i]);  }  [CE]  illegal  start  of  type  [FE]                        NullPointerException    [CONTEXT]      [BUGGY]  while(values!=  null)  {  for(int  i  =  0;  i  <  values.length;  ++i)  {  values[i]  =  String.valueOf(values[i]);  }  [BUGGY]      [CLASS]  CSVRecord  [METHOD]  <init>  [RETURN_TYPE]  String,long)  String[]  values  Integer>  mapping  String  comment  final  long  recordNumber  	projects/Csv9/src/main/java/org/apache/commons/csv/CSVRecord.java	0.24253562503633297	57	57	1	replace	while(values!=  null)  {  for(int  i  =  0;  i  <  values.length;  ++i)  {  values[i]  =  String.valueOf(values[i]);  }	  if(values    ==    null)    {    for(int    i    =    0;    i    <    values.length;    ++i)    {    values[i]    =    values[i];    }    	non-compiled	[CE]  illegal  start  of  type	6	None	replace
18	[BUG]  [BUGGY]  while(values!=  null  &&  values.length  >  0)  {  for(int  i  =  0;  i  <  values.length;  ++i)  {  values[i]  =  value[i];  }  [CE]  illegal  start  of  type  [FE]                          NullPointerException    [CONTEXT]      [BUGGY]  while(values!=  null  &&  values.length  >  0)  {  for(int  i  =  0;  i  <  values.length;  ++i)  {  values[i]  =  value[i];  }  [BUGGY]      [CLASS]  CSVRecord  [METHOD]  <init>  [RETURN_TYPE]  String,long)  String[]  values  Integer>  mapping  String  comment  final  long  recordNumber  	projects/Csv9/src/main/java/org/apache/commons/csv/CSVRecord.java	0.24253562503633297	57	57	1	replace	while(values!=  null  &&  values.length  >  0)  {  for(int  i  =  0;  i  <  values.length;  ++i)  {  values[i]  =  value[i];  }	  if(values    ==    null)    {    for(int    i    =    0;    i    <    values.length;    ++i)    {    values[i]    =    values[i];    }    	non-compiled	[CE]  illegal  start  of  type	6	None	replace
19	[BUG]  [BUGGY]  while(values!=  null)  {  for(int  i  =  0;  i  <  values.length;  ++i)  {  values[i]  =   " ";  }  [CE]  illegal  start  of  type  [FE]                            NullPointerException    [CONTEXT]      [BUGGY]  while(values!=  null)  {  for(int  i  =  0;  i  <  values.length;  ++i)  {  values[i]  =   " ";  }  [BUGGY]      [CLASS]  CSVRecord  [METHOD]  <init>  [RETURN_TYPE]  String,long)  String[]  values  Integer>  mapping  String  comment  final  long  recordNumber  	projects/Csv9/src/main/java/org/apache/commons/csv/CSVRecord.java	0.24253562503633297	57	57	1	replace	while(values!=  null)  {  for(int  i  =  0;  i  <  values.length;  ++i)  {  values[i]  =   " ";  }	  if(values    ==    null)    {    for(int    i    =    0;    i    <    values.length;    ++i)    {    values[i]    =    values[i];    }    	non-compiled	[CE]  illegal  start  of  type	6	None	replace
20	[BUG]  [BUGGY]  while(values!=  null)  {  for(int  i  =  0;  i  <  values.length;  ++i)  {  values[i]  =  StringUtils.toString(values[i]);  }  [CE]  illegal  start  of  type  [FE]                              NullPointerException    [CONTEXT]      [BUGGY]  while(values!=  null)  {  for(int  i  =  0;  i  <  values.length;  ++i)  {  values[i]  =  StringUtils.toString(values[i]);  }  [BUGGY]      [CLASS]  CSVRecord  [METHOD]  <init>  [RETURN_TYPE]  String,long)  String[]  values  Integer>  mapping  String  comment  final  long  recordNumber  	projects/Csv9/src/main/java/org/apache/commons/csv/CSVRecord.java	0.24253562503633297	57	57	1	replace	while(values!=  null)  {  for(int  i  =  0;  i  <  values.length;  ++i)  {  values[i]  =  StringUtils.toString(values[i]);  }	  if(values    ==    null)    {    for(int    i    =    0;    i    <    values.length;    ++i)    {    values[i]    =    values[i];    }    	non-compiled	[CE]  illegal  start  of  type	6	None	replace
21	[BUG]  [BUGGY]  for(int  i  =  0,  len  =  values.length;  i  <  len;  ++i)  {  if(values[i]!=  null)  {  return  values[i];  }  [CE]  illegal  start  of  type  [FE]        NullPointerException    [CONTEXT]      [BUGGY]  for(int  i  =  0,  len  =  values.length;  i  <  len;  ++i)  {  if(values[i]!=  null)  {  return  values[i];  }  [BUGGY]      [CLASS]  CSVRecord  [METHOD]  <init>  [RETURN_TYPE]  String,long)  String[]  values  Integer>  mapping  String  comment  final  long  recordNumber  	projects/Csv9/src/main/java/org/apache/commons/csv/CSVRecord.java	0.24253562503633297	57	57	1	replace	for(int  i  =  0,  len  =  values.length;  i  <  len;  ++i)  {  if(values[i]!=  null)  {  return  values[i];  }	  for(int    i    =    0,    isNumber();    i    <    values.length;    ++i)    {    if(values[i]!=    null)    {    return    values[i];    }    	non-compiled	[CE]  illegal  start  of  type	15	None	replace
22	[BUG]  [BUGGY]  for(int  i  =  0,  isEmpty();  i  <  values.length;  ++i)  {  if(values[i]!=  null)  {  return  values[i];  }  [CE]  illegal  start  of  type  [FE]          NullPointerException    [CONTEXT]      [BUGGY]  for(int  i  =  0,  isEmpty();  i  <  values.length;  ++i)  {  if(values[i]!=  null)  {  return  values[i];  }  [BUGGY]      [CLASS]  CSVRecord  [METHOD]  <init>  [RETURN_TYPE]  String,long)  String[]  values  Integer>  mapping  String  comment  final  long  recordNumber  	projects/Csv9/src/main/java/org/apache/commons/csv/CSVRecord.java	0.24253562503633297	57	57	1	replace	for(int  i  =  0,  isEmpty();  i  <  values.length;  ++i)  {  if(values[i]!=  null)  {  return  values[i];  }	  for(int    i    =    0,    isNumber();    i    <    values.length;    ++i)    {    if(values[i]!=    null)    {    return    values[i];    }    	non-compiled	[CE]  illegal  start  of  type	15	None	replace
23	[BUG]  [BUGGY]  for(int  i  =  0,  isMask();  i  <  values.length;  ++i)  {  if(values[i]!=  null)  {  return  values[i];  }  [CE]  illegal  start  of  type  [FE]            NullPointerException    [CONTEXT]      [BUGGY]  for(int  i  =  0,  isMask();  i  <  values.length;  ++i)  {  if(values[i]!=  null)  {  return  values[i];  }  [BUGGY]      [CLASS]  CSVRecord  [METHOD]  <init>  [RETURN_TYPE]  String,long)  String[]  values  Integer>  mapping  String  comment  final  long  recordNumber  	projects/Csv9/src/main/java/org/apache/commons/csv/CSVRecord.java	0.24253562503633297	57	57	1	replace	for(int  i  =  0,  isMask();  i  <  values.length;  ++i)  {  if(values[i]!=  null)  {  return  values[i];  }	  for(int    i    =    0,    isNumber();    i    <    values.length;    ++i)    {    if(values[i]!=    null)    {    return    values[i];    }    	non-compiled	[CE]  illegal  start  of  type	15	None	replace
24	[BUG]  [BUGGY]  for(int  i  =  0,  isIterable();  i  <  values.length;  ++i)  {  if(values[i]!=  null)  {  return  values[i];  }  [CE]  illegal  start  of  type  [FE]              NullPointerException    [CONTEXT]      [BUGGY]  for(int  i  =  0,  isIterable();  i  <  values.length;  ++i)  {  if(values[i]!=  null)  {  return  values[i];  }  [BUGGY]      [CLASS]  CSVRecord  [METHOD]  <init>  [RETURN_TYPE]  String,long)  String[]  values  Integer>  mapping  String  comment  final  long  recordNumber  	projects/Csv9/src/main/java/org/apache/commons/csv/CSVRecord.java	0.24253562503633297	57	57	1	replace	for(int  i  =  0,  isIterable();  i  <  values.length;  ++i)  {  if(values[i]!=  null)  {  return  values[i];  }	  for(int    i    =    0,    isNumber();    i    <    values.length;    ++i)    {    if(values[i]!=    null)    {    return    values[i];    }    	non-compiled	[CE]  illegal  start  of  type	15	None	replace
25	[BUG]  [BUGGY]  for(int  i  =  0,  isIterator();  i  <  values.length;  ++i)  {  if(values[i]!=  null)  {  return  values[i];  }  [CE]  illegal  start  of  type  [FE]                NullPointerException    [CONTEXT]      [BUGGY]  for(int  i  =  0,  isIterator();  i  <  values.length;  ++i)  {  if(values[i]!=  null)  {  return  values[i];  }  [BUGGY]      [CLASS]  CSVRecord  [METHOD]  <init>  [RETURN_TYPE]  String,long)  String[]  values  Integer>  mapping  String  comment  final  long  recordNumber  	projects/Csv9/src/main/java/org/apache/commons/csv/CSVRecord.java	0.24253562503633297	57	57	1	replace	for(int  i  =  0,  isIterator();  i  <  values.length;  ++i)  {  if(values[i]!=  null)  {  return  values[i];  }	  for(int    i    =    0,    isNumber();    i    <    values.length;    ++i)    {    if(values[i]!=    null)    {    return    values[i];    }    	non-compiled	[CE]  illegal  start  of  type	15	None	replace
26	[BUG]  [BUGGY]  for(int  i  =  0,  count  =  values.length;  i  <  count;  ++i)  {  if(values[i]!=  null)  {  return  values[i];  }  [CE]  illegal  start  of  type  [FE]                  NullPointerException    [CONTEXT]      [BUGGY]  for(int  i  =  0,  count  =  values.length;  i  <  count;  ++i)  {  if(values[i]!=  null)  {  return  values[i];  }  [BUGGY]      [CLASS]  CSVRecord  [METHOD]  <init>  [RETURN_TYPE]  String,long)  String[]  values  Integer>  mapping  String  comment  final  long  recordNumber  	projects/Csv9/src/main/java/org/apache/commons/csv/CSVRecord.java	0.24253562503633297	57	57	1	replace	for(int  i  =  0,  count  =  values.length;  i  <  count;  ++i)  {  if(values[i]!=  null)  {  return  values[i];  }	  for(int    i    =    0,    isNumber();    i    <    values.length;    ++i)    {    if(values[i]!=    null)    {    return    values[i];    }    	non-compiled	[CE]  illegal  start  of  type	15	None	replace
27	[BUG]  [BUGGY]  this.values  =  values.toArray(new  String[values.size()  +  1]);  [CE]  illegal  start  of  type  [FE]            NullPointerException    [CONTEXT]      [BUGGY]  this.values  =  values.toArray(new  String[values.size()  +  1]);  [BUGGY]      [CLASS]  CSVRecord  [METHOD]  <init>  [RETURN_TYPE]  String,long)  String[]  values  Integer>  mapping  String  comment  final  long  recordNumber  	projects/Csv9/src/main/java/org/apache/commons/csv/CSVRecord.java	0.24253562503633297	57	57	1	replace	this.values  =  values.toArray(new  String[values.size()  +  1]);	  this.values    =    values.toArray(new    String[values.size()    ]);    	non-compiled	[CE]  illegal  start  of  type	11	None	replace
28	[BUG]  [BUGGY]  this.values  =  values.toArray(new  String[this.values.size()  ]);  [CE]  illegal  start  of  type  [FE]              NullPointerException    [CONTEXT]      [BUGGY]  this.values  =  values.toArray(new  String[this.values.size()  ]);  [BUGGY]      [CLASS]  CSVRecord  [METHOD]  <init>  [RETURN_TYPE]  String,long)  String[]  values  Integer>  mapping  String  comment  final  long  recordNumber  	projects/Csv9/src/main/java/org/apache/commons/csv/CSVRecord.java	0.24253562503633297	57	57	1	replace	this.values  =  values.toArray(new  String[this.values.size()  ]);	  this.values    =    values.toArray(new    String[values.size()    ]);    	non-compiled	[CE]  illegal  start  of  type	11	None	replace
29	[BUG]  [BUGGY]  this.values  =  values.toArray(new  String[values.size()  -  1]);  [CE]  illegal  start  of  type  [FE]                NullPointerException    [CONTEXT]      [BUGGY]  this.values  =  values.toArray(new  String[values.size()  -  1]);  [BUGGY]      [CLASS]  CSVRecord  [METHOD]  <init>  [RETURN_TYPE]  String,long)  String[]  values  Integer>  mapping  String  comment  final  long  recordNumber  	projects/Csv9/src/main/java/org/apache/commons/csv/CSVRecord.java	0.24253562503633297	57	57	1	replace	this.values  =  values.toArray(new  String[values.size()  -  1]);	  this.values    =    values.toArray(new    String[values.size()    ]);    	non-compiled	[CE]  illegal  start  of  type	11	None	replace
30	[BUG]  [BUGGY]  this.values  =  values.toArray(new  String[values.size()  *  2]);  [CE]  illegal  start  of  type  [FE]                  NullPointerException    [CONTEXT]      [BUGGY]  this.values  =  values.toArray(new  String[values.size()  *  2]);  [BUGGY]      [CLASS]  CSVRecord  [METHOD]  <init>  [RETURN_TYPE]  String,long)  String[]  values  Integer>  mapping  String  comment  final  long  recordNumber  	projects/Csv9/src/main/java/org/apache/commons/csv/CSVRecord.java	0.24253562503633297	57	57	1	replace	this.values  =  values.toArray(new  String[values.size()  *  2]);	  this.values    =    values.toArray(new    String[values.size()    ]);    	non-compiled	[CE]  illegal  start  of  type	11	None	replace
31	[BUG]  [BUGGY]  this.values  =  values.toArray(new  String[values.size()  ]  +  1);  [CE]  illegal  start  of  type  [FE]                    NullPointerException    [CONTEXT]      [BUGGY]  this.values  =  values.toArray(new  String[values.size()  ]  +  1);  [BUGGY]      [CLASS]  CSVRecord  [METHOD]  <init>  [RETURN_TYPE]  String,long)  String[]  values  Integer>  mapping  String  comment  final  long  recordNumber  	projects/Csv9/src/main/java/org/apache/commons/csv/CSVRecord.java	0.24253562503633297	57	57	1	replace	this.values  =  values.toArray(new  String[values.size()  ]  +  1);	  this.values    =    values.toArray(new    String[values.size()    ]);    	non-compiled	[CE]  illegal  start  of  type	11	None	replace
32	[BUG]  [BUGGY]  this.values  =  values.toArray(new  String[size()  ]);  [CE]  illegal  start  of  type  [FE]                      NullPointerException    [CONTEXT]      [BUGGY]  this.values  =  values.toArray(new  String[size()  ]);  [BUGGY]      [CLASS]  CSVRecord  [METHOD]  <init>  [RETURN_TYPE]  String,long)  String[]  values  Integer>  mapping  String  comment  final  long  recordNumber  	projects/Csv9/src/main/java/org/apache/commons/csv/CSVRecord.java	0.24253562503633297	57	57	1	replace	this.values  =  values.toArray(new  String[size()  ]);	  this.values    =    values.toArray(new    String[values.size()    ]);    	non-compiled	[CE]  illegal  start  of  type	11	None	replace
33	[BUG]  [BUGGY]  for(int  i  =  0,  len  =  values.length;  i  <  len;  ++i)  {  if(values[i]!=  null)  {  return  values[i].toString();  }  [CE]  illegal  start  of  type  [FE]            NullPointerException    [CONTEXT]      [BUGGY]  for(int  i  =  0,  len  =  values.length;  i  <  len;  ++i)  {  if(values[i]!=  null)  {  return  values[i].toString();  }  [BUGGY]      [CLASS]  CSVRecord  [METHOD]  <init>  [RETURN_TYPE]  String,long)  String[]  values  Integer>  mapping  String  comment  final  long  recordNumber  	projects/Csv9/src/main/java/org/apache/commons/csv/CSVRecord.java	0.24253562503633297	57	57	1	replace	for(int  i  =  0,  len  =  values.length;  i  <  len;  ++i)  {  if(values[i]!=  null)  {  return  values[i].toString();  }	  for(int    i    =    0,    isNumber();    i    <    values.length;    ++i)    {    if(values[i]!=    null)    {    return    values[i].toString();    }    	non-compiled	[CE]  illegal  start  of  type	17	None	replace
34	[BUG]  [BUGGY]  for(int  i  =  0,  isEmpty();  i  <  values.length;  ++i)  {  if(values[i]!=  null)  {  return  values[i].toString();  }  [CE]  illegal  start  of  type  [FE]              NullPointerException    [CONTEXT]      [BUGGY]  for(int  i  =  0,  isEmpty();  i  <  values.length;  ++i)  {  if(values[i]!=  null)  {  return  values[i].toString();  }  [BUGGY]      [CLASS]  CSVRecord  [METHOD]  <init>  [RETURN_TYPE]  String,long)  String[]  values  Integer>  mapping  String  comment  final  long  recordNumber  	projects/Csv9/src/main/java/org/apache/commons/csv/CSVRecord.java	0.24253562503633297	57	57	1	replace	for(int  i  =  0,  isEmpty();  i  <  values.length;  ++i)  {  if(values[i]!=  null)  {  return  values[i].toString();  }	  for(int    i    =    0,    isNumber();    i    <    values.length;    ++i)    {    if(values[i]!=    null)    {    return    values[i].toString();    }    	non-compiled	[CE]  illegal  start  of  type	17	None	replace
35	[BUG]  [BUGGY]  for(int  i  =  0,  isIterable();  i  <  values.length;  ++i)  {  if(values[i]!=  null)  {  return  values[i].toString();  }  [CE]  illegal  start  of  type  [FE]                NullPointerException    [CONTEXT]      [BUGGY]  for(int  i  =  0,  isIterable();  i  <  values.length;  ++i)  {  if(values[i]!=  null)  {  return  values[i].toString();  }  [BUGGY]      [CLASS]  CSVRecord  [METHOD]  <init>  [RETURN_TYPE]  String,long)  String[]  values  Integer>  mapping  String  comment  final  long  recordNumber  	projects/Csv9/src/main/java/org/apache/commons/csv/CSVRecord.java	0.24253562503633297	57	57	1	replace	for(int  i  =  0,  isIterable();  i  <  values.length;  ++i)  {  if(values[i]!=  null)  {  return  values[i].toString();  }	  for(int    i    =    0,    isNumber();    i    <    values.length;    ++i)    {    if(values[i]!=    null)    {    return    values[i].toString();    }    	non-compiled	[CE]  illegal  start  of  type	17	None	replace
36	[BUG]  [BUGGY]  for(int  i  =  0,  isIterator();  i  <  values.length;  ++i)  {  if(values[i]!=  null)  {  return  values[i].toString();  }  [CE]  illegal  start  of  type  [FE]                  NullPointerException    [CONTEXT]      [BUGGY]  for(int  i  =  0,  isIterator();  i  <  values.length;  ++i)  {  if(values[i]!=  null)  {  return  values[i].toString();  }  [BUGGY]      [CLASS]  CSVRecord  [METHOD]  <init>  [RETURN_TYPE]  String,long)  String[]  values  Integer>  mapping  String  comment  final  long  recordNumber  	projects/Csv9/src/main/java/org/apache/commons/csv/CSVRecord.java	0.24253562503633297	57	57	1	replace	for(int  i  =  0,  isIterator();  i  <  values.length;  ++i)  {  if(values[i]!=  null)  {  return  values[i].toString();  }	  for(int    i    =    0,    isNumber();    i    <    values.length;    ++i)    {    if(values[i]!=    null)    {    return    values[i].toString();    }    	non-compiled	[CE]  illegal  start  of  type	17	None	replace
37	[BUG]  [BUGGY]  for(int  i  =  0,  isNumber();  i  <  values.length  -  1;  ++i)  {  if(values[i]!=  null)  {  return  values[i].toString();  }  [CE]  illegal  start  of  type  [FE]                    NullPointerException    [CONTEXT]      [BUGGY]  for(int  i  =  0,  isNumber();  i  <  values.length  -  1;  ++i)  {  if(values[i]!=  null)  {  return  values[i].toString();  }  [BUGGY]      [CLASS]  CSVRecord  [METHOD]  <init>  [RETURN_TYPE]  String,long)  String[]  values  Integer>  mapping  String  comment  final  long  recordNumber  	projects/Csv9/src/main/java/org/apache/commons/csv/CSVRecord.java	0.24253562503633297	57	57	1	replace	for(int  i  =  0,  isNumber();  i  <  values.length  -  1;  ++i)  {  if(values[i]!=  null)  {  return  values[i].toString();  }	  for(int    i    =    0,    isNumber();    i    <    values.length;    ++i)    {    if(values[i]!=    null)    {    return    values[i].toString();    }    	non-compiled	[CE]  illegal  start  of  type	17	None	replace
38	[BUG]  [BUGGY]  for(int  i  =  0,  length  =  values.length;  i  <  length;  ++i)  {  if(values[i]!=  null)  {  return  values[i].toString();  }  [CE]  illegal  start  of  type  [FE]                      NullPointerException    [CONTEXT]      [BUGGY]  for(int  i  =  0,  length  =  values.length;  i  <  length;  ++i)  {  if(values[i]!=  null)  {  return  values[i].toString();  }  [BUGGY]      [CLASS]  CSVRecord  [METHOD]  <init>  [RETURN_TYPE]  String,long)  String[]  values  Integer>  mapping  String  comment  final  long  recordNumber  	projects/Csv9/src/main/java/org/apache/commons/csv/CSVRecord.java	0.24253562503633297	57	57	1	replace	for(int  i  =  0,  length  =  values.length;  i  <  length;  ++i)  {  if(values[i]!=  null)  {  return  values[i].toString();  }	  for(int    i    =    0,    isNumber();    i    <    values.length;    ++i)    {    if(values[i]!=    null)    {    return    values[i].toString();    }    	non-compiled	[CE]  illegal  start  of  type	17	None	replace
39	[BUG]  [BUGGY]  for(int  i  =  0,  count  =  values.length;  i  <  count;  ++i)  {  if(values[i]!=  null)  {  return  values[i].toString();  }  [CE]  illegal  start  of  type  [FE]                        NullPointerException    [CONTEXT]      [BUGGY]  for(int  i  =  0,  count  =  values.length;  i  <  count;  ++i)  {  if(values[i]!=  null)  {  return  values[i].toString();  }  [BUGGY]      [CLASS]  CSVRecord  [METHOD]  <init>  [RETURN_TYPE]  String,long)  String[]  values  Integer>  mapping  String  comment  final  long  recordNumber  	projects/Csv9/src/main/java/org/apache/commons/csv/CSVRecord.java	0.24253562503633297	57	57	1	replace	for(int  i  =  0,  count  =  values.length;  i  <  count;  ++i)  {  if(values[i]!=  null)  {  return  values[i].toString();  }	  for(int    i    =    0,    isNumber();    i    <    values.length;    ++i)    {    if(values[i]!=    null)    {    return    values[i].toString();    }    	non-compiled	[CE]  illegal  start  of  type	17	None	replace
40	[BUG]  [BUGGY]  for(int  i  =  0,  len  =  values.length;  i  <  len;  ++i)  {  if(values[i]  ==  null)  {  return  values[i];  }  [CE]  illegal  start  of  type  [FE]          NullPointerException    [CONTEXT]      [BUGGY]  for(int  i  =  0,  len  =  values.length;  i  <  len;  ++i)  {  if(values[i]  ==  null)  {  return  values[i];  }  [BUGGY]      [CLASS]  CSVRecord  [METHOD]  <init>  [RETURN_TYPE]  String,long)  String[]  values  Integer>  mapping  String  comment  final  long  recordNumber  	projects/Csv9/src/main/java/org/apache/commons/csv/CSVRecord.java	0.24253562503633297	57	57	1	replace	for(int  i  =  0,  len  =  values.length;  i  <  len;  ++i)  {  if(values[i]  ==  null)  {  return  values[i];  }	  for(int    i    =    0,    isNumber();    i    <    values.length;    ++i)    {    if(values[i]    ==    null)    {    return    values[i];    }    	non-compiled	[CE]  illegal  start  of  type	16	None	replace
41	[BUG]  [BUGGY]  for(int  i  =  0,  isEmpty();  i  <  values.length;  ++i)  {  if(values[i]  ==  null)  {  return  values[i];  }  [CE]  illegal  start  of  type  [FE]            NullPointerException    [CONTEXT]      [BUGGY]  for(int  i  =  0,  isEmpty();  i  <  values.length;  ++i)  {  if(values[i]  ==  null)  {  return  values[i];  }  [BUGGY]      [CLASS]  CSVRecord  [METHOD]  <init>  [RETURN_TYPE]  String,long)  String[]  values  Integer>  mapping  String  comment  final  long  recordNumber  	projects/Csv9/src/main/java/org/apache/commons/csv/CSVRecord.java	0.24253562503633297	57	57	1	replace	for(int  i  =  0,  isEmpty();  i  <  values.length;  ++i)  {  if(values[i]  ==  null)  {  return  values[i];  }	  for(int    i    =    0,    isNumber();    i    <    values.length;    ++i)    {    if(values[i]    ==    null)    {    return    values[i];    }    	non-compiled	[CE]  illegal  start  of  type	16	None	replace
42	[BUG]  [BUGGY]  for(int  i  =  0,  isMask();  i  <  values.length;  ++i)  {  if(values[i]  ==  null)  {  return  values[i];  }  [CE]  illegal  start  of  type  [FE]              NullPointerException    [CONTEXT]      [BUGGY]  for(int  i  =  0,  isMask();  i  <  values.length;  ++i)  {  if(values[i]  ==  null)  {  return  values[i];  }  [BUGGY]      [CLASS]  CSVRecord  [METHOD]  <init>  [RETURN_TYPE]  String,long)  String[]  values  Integer>  mapping  String  comment  final  long  recordNumber  	projects/Csv9/src/main/java/org/apache/commons/csv/CSVRecord.java	0.24253562503633297	57	57	1	replace	for(int  i  =  0,  isMask();  i  <  values.length;  ++i)  {  if(values[i]  ==  null)  {  return  values[i];  }	  for(int    i    =    0,    isNumber();    i    <    values.length;    ++i)    {    if(values[i]    ==    null)    {    return    values[i];    }    	non-compiled	[CE]  illegal  start  of  type	16	None	replace
43	[BUG]  [BUGGY]  for(int  i  =  0,  isIterable();  i  <  values.length;  ++i)  {  if(values[i]  ==  null)  {  return  values[i];  }  [CE]  illegal  start  of  type  [FE]                NullPointerException    [CONTEXT]      [BUGGY]  for(int  i  =  0,  isIterable();  i  <  values.length;  ++i)  {  if(values[i]  ==  null)  {  return  values[i];  }  [BUGGY]      [CLASS]  CSVRecord  [METHOD]  <init>  [RETURN_TYPE]  String,long)  String[]  values  Integer>  mapping  String  comment  final  long  recordNumber  	projects/Csv9/src/main/java/org/apache/commons/csv/CSVRecord.java	0.24253562503633297	57	57	1	replace	for(int  i  =  0,  isIterable();  i  <  values.length;  ++i)  {  if(values[i]  ==  null)  {  return  values[i];  }	  for(int    i    =    0,    isNumber();    i    <    values.length;    ++i)    {    if(values[i]    ==    null)    {    return    values[i];    }    	non-compiled	[CE]  illegal  start  of  type	16	None	replace
44	[BUG]  [BUGGY]  for(int  i  =  0,  isIterator();  i  <  values.length;  ++i)  {  if(values[i]  ==  null)  {  return  values[i];  }  [CE]  illegal  start  of  type  [FE]                  NullPointerException    [CONTEXT]      [BUGGY]  for(int  i  =  0,  isIterator();  i  <  values.length;  ++i)  {  if(values[i]  ==  null)  {  return  values[i];  }  [BUGGY]      [CLASS]  CSVRecord  [METHOD]  <init>  [RETURN_TYPE]  String,long)  String[]  values  Integer>  mapping  String  comment  final  long  recordNumber  	projects/Csv9/src/main/java/org/apache/commons/csv/CSVRecord.java	0.24253562503633297	57	57	1	replace	for(int  i  =  0,  isIterator();  i  <  values.length;  ++i)  {  if(values[i]  ==  null)  {  return  values[i];  }	  for(int    i    =    0,    isNumber();    i    <    values.length;    ++i)    {    if(values[i]    ==    null)    {    return    values[i];    }    	non-compiled	[CE]  illegal  start  of  type	16	None	replace
45	[BUG]  [BUGGY]  for(int  i  =  0,  count  =  values.length;  i  <  count;  ++i)  {  if(values[i]  ==  null)  {  return  values[i];  }  [CE]  illegal  start  of  type  [FE]                    NullPointerException    [CONTEXT]      [BUGGY]  for(int  i  =  0,  count  =  values.length;  i  <  count;  ++i)  {  if(values[i]  ==  null)  {  return  values[i];  }  [BUGGY]      [CLASS]  CSVRecord  [METHOD]  <init>  [RETURN_TYPE]  String,long)  String[]  values  Integer>  mapping  String  comment  final  long  recordNumber  	projects/Csv9/src/main/java/org/apache/commons/csv/CSVRecord.java	0.24253562503633297	57	57	1	replace	for(int  i  =  0,  count  =  values.length;  i  <  count;  ++i)  {  if(values[i]  ==  null)  {  return  values[i];  }	  for(int    i    =    0,    isNumber();    i    <    values.length;    ++i)    {    if(values[i]    ==    null)    {    return    values[i];    }    	non-compiled	[CE]  illegal  start  of  type	16	None	replace
46	[BUG]  [BUGGY]  return(String[])values.toArray(new  String[values.size()  +  1]);  [CE]  illegal  start  of  type  [FE]        NullPointerException    [CONTEXT]      [BUGGY]  return(String[])values.toArray(new  String[values.size()  +  1]);  [BUGGY]      [CLASS]  CSVRecord  [METHOD]  <init>  [RETURN_TYPE]  String,long)  String[]  values  Integer>  mapping  String  comment  final  long  recordNumber  	projects/Csv9/src/main/java/org/apache/commons/csv/CSVRecord.java	0.24253562503633297	57	57	1	replace	return(String[])values.toArray(new  String[values.size()  +  1]);	  return(String[])values.toArray(new    String[values.size()    ]);    	non-compiled	[CE]  illegal  start  of  type	1	None	replace
47	[BUG]  [BUGGY]  return(String[])this.values.toArray(new  String[values.size()  ]);  [CE]  illegal  start  of  type  [FE]          NullPointerException    [CONTEXT]      [BUGGY]  return(String[])this.values.toArray(new  String[values.size()  ]);  [BUGGY]      [CLASS]  CSVRecord  [METHOD]  <init>  [RETURN_TYPE]  String,long)  String[]  values  Integer>  mapping  String  comment  final  long  recordNumber  	projects/Csv9/src/main/java/org/apache/commons/csv/CSVRecord.java	0.24253562503633297	57	57	1	replace	return(String[])this.values.toArray(new  String[values.size()  ]);	  return(String[])values.toArray(new    String[values.size()    ]);    	non-compiled	[CE]  illegal  start  of  type	1	None	replace
48	[BUG]  [BUGGY]  return(String[])values.toArray(new  String[values.size()  -  1]);  [CE]  illegal  start  of  type  [FE]            NullPointerException    [CONTEXT]      [BUGGY]  return(String[])values.toArray(new  String[values.size()  -  1]);  [BUGGY]      [CLASS]  CSVRecord  [METHOD]  <init>  [RETURN_TYPE]  String,long)  String[]  values  Integer>  mapping  String  comment  final  long  recordNumber  	projects/Csv9/src/main/java/org/apache/commons/csv/CSVRecord.java	0.24253562503633297	57	57	1	replace	return(String[])values.toArray(new  String[values.size()  -  1]);	  return(String[])values.toArray(new    String[values.size()    ]);    	non-compiled	[CE]  illegal  start  of  type	1	None	replace
49	[BUG]  [BUGGY]  if(values!=  null)  {  return(String[])values.toArray(new  String[values.size()  ]);  }  [CE]  illegal  start  of  type  [FE]              NullPointerException    [CONTEXT]      [BUGGY]  if(values!=  null)  {  return(String[])values.toArray(new  String[values.size()  ]);  }  [BUGGY]      [CLASS]  CSVRecord  [METHOD]  <init>  [RETURN_TYPE]  String,long)  String[]  values  Integer>  mapping  String  comment  final  long  recordNumber  	projects/Csv9/src/main/java/org/apache/commons/csv/CSVRecord.java	0.24253562503633297	57	57	1	replace	if(values!=  null)  {  return(String[])values.toArray(new  String[values.size()  ]);  }	  return(String[])values.toArray(new    String[values.size()    ]);    	non-compiled	[CE]  illegal  start  of  type	1	None	replace
50	[BUG]  [BUGGY]  return(String[])values.toArray(new  String[values.size()  *  2]);  [CE]  illegal  start  of  type  [FE]                NullPointerException    [CONTEXT]      [BUGGY]  return(String[])values.toArray(new  String[values.size()  *  2]);  [BUGGY]      [CLASS]  CSVRecord  [METHOD]  <init>  [RETURN_TYPE]  String,long)  String[]  values  Integer>  mapping  String  comment  final  long  recordNumber  	projects/Csv9/src/main/java/org/apache/commons/csv/CSVRecord.java	0.24253562503633297	57	57	1	replace	return(String[])values.toArray(new  String[values.size()  *  2]);	  return(String[])values.toArray(new    String[values.size()    ]);    	non-compiled	[CE]  illegal  start  of  type	1	None	replace
51	[BUG]  [BUGGY]  return(String[])values.toArray(new  String[values.size()  ],  recordNumber);  [CE]  illegal  start  of  type  [FE]                  NullPointerException    [CONTEXT]      [BUGGY]  return(String[])values.toArray(new  String[values.size()  ],  recordNumber);  [BUGGY]      [CLASS]  CSVRecord  [METHOD]  <init>  [RETURN_TYPE]  String,long)  String[]  values  Integer>  mapping  String  comment  final  long  recordNumber  	projects/Csv9/src/main/java/org/apache/commons/csv/CSVRecord.java	0.24253562503633297	57	57	1	replace	return(String[])values.toArray(new  String[values.size()  ],  recordNumber);	  return(String[])values.toArray(new    String[values.size()    ]);    	non-compiled	[CE]  illegal  start  of  type	1	None	replace
52	[BUG]  [BUGGY]  this.recordNumber  =(String[])this.recordNumber.toArray(new  String[values.size()  ]);  [CE]  illegal  start  of  type  [FE]                NullPointerException    [CONTEXT]      [BUGGY]  this.recordNumber  =(String[])this.recordNumber.toArray(new  String[values.size()  ]);  [BUGGY]      [CLASS]  CSVRecord  [METHOD]  <init>  [RETURN_TYPE]  String,long)  String[]  values  Integer>  mapping  String  comment  final  long  recordNumber  	projects/Csv9/src/main/java/org/apache/commons/csv/CSVRecord.java	0.24253562503633297	57	57	1	replace	this.recordNumber  =(String[])this.recordNumber.toArray(new  String[values.size()  ]);	  if(values    ==    null)    {    for(int    i    =    0;    i    <    values.length;    i++)    {    values[i]    =    values[i];    }    	non-compiled	[CE]  illegal  start  of  type	5	None	replace
53	[BUG]  [BUGGY]  this.recordNumber  =(String[])this.recordNumbers.toArray(new  String[values.size()  ]);  [CE]  illegal  start  of  type  [FE]                  NullPointerException    [CONTEXT]      [BUGGY]  this.recordNumber  =(String[])this.recordNumbers.toArray(new  String[values.size()  ]);  [BUGGY]      [CLASS]  CSVRecord  [METHOD]  <init>  [RETURN_TYPE]  String,long)  String[]  values  Integer>  mapping  String  comment  final  long  recordNumber  	projects/Csv9/src/main/java/org/apache/commons/csv/CSVRecord.java	0.24253562503633297	57	57	1	replace	this.recordNumber  =(String[])this.recordNumbers.toArray(new  String[values.size()  ]);	  if(values    ==    null)    {    for(int    i    =    0;    i    <    values.length;    i++)    {    values[i]    =    values[i];    }    	non-compiled	[CE]  illegal  start  of  type	5	None	replace
54	[BUG]  [BUGGY]  this.recordNumber  =  RecordNumber.getInstance().recordNumber(recordNumber);  [CE]  illegal  start  of  type  [FE]                    NullPointerException    [CONTEXT]      [BUGGY]  this.recordNumber  =  RecordNumber.getInstance().recordNumber(recordNumber);  [BUGGY]      [CLASS]  CSVRecord  [METHOD]  <init>  [RETURN_TYPE]  String,long)  String[]  values  Integer>  mapping  String  comment  final  long  recordNumber  	projects/Csv9/src/main/java/org/apache/commons/csv/CSVRecord.java	0.24253562503633297	57	57	1	replace	this.recordNumber  =  RecordNumber.getInstance().recordNumber(recordNumber);	  if(values    ==    null)    {    for(int    i    =    0;    i    <    values.length;    i++)    {    values[i]    =    values[i];    }    	non-compiled	[CE]  illegal  start  of  type	5	None	replace
55	[BUG]  [BUGGY]  this.recordNumber  =(String[])this.recordNumber.toArray(new  String[this.recordNumber]);  [CE]  illegal  start  of  type  [FE]                      NullPointerException    [CONTEXT]      [BUGGY]  this.recordNumber  =(String[])this.recordNumber.toArray(new  String[this.recordNumber]);  [BUGGY]      [CLASS]  CSVRecord  [METHOD]  <init>  [RETURN_TYPE]  String,long)  String[]  values  Integer>  mapping  String  comment  final  long  recordNumber  	projects/Csv9/src/main/java/org/apache/commons/csv/CSVRecord.java	0.24253562503633297	57	57	1	replace	this.recordNumber  =(String[])this.recordNumber.toArray(new  String[this.recordNumber]);	  if(values    ==    null)    {    for(int    i    =    0;    i    <    values.length;    i++)    {    values[i]    =    values[i];    }    	non-compiled	[CE]  illegal  start  of  type	5	None	replace
56	[BUG]  [BUGGY]  this.recordNumber  =(String[])this.recordNumber.clone();  [CE]  illegal  start  of  type  [FE]                        NullPointerException    [CONTEXT]      [BUGGY]  this.recordNumber  =(String[])this.recordNumber.clone();  [BUGGY]      [CLASS]  CSVRecord  [METHOD]  <init>  [RETURN_TYPE]  String,long)  String[]  values  Integer>  mapping  String  comment  final  long  recordNumber  	projects/Csv9/src/main/java/org/apache/commons/csv/CSVRecord.java	0.24253562503633297	57	57	1	replace	this.recordNumber  =(String[])this.recordNumber.clone();	  if(values    ==    null)    {    for(int    i    =    0;    i    <    values.length;    i++)    {    values[i]    =    values[i];    }    	non-compiled	[CE]  illegal  start  of  type	5	None	replace
57	[BUG]  [BUGGY]  this.recordNumber  =(String[])this.recordNumbers.toArray(new  String[this.recordNumber]);  [CE]  illegal  start  of  type  [FE]                          NullPointerException    [CONTEXT]      [BUGGY]  this.recordNumber  =(String[])this.recordNumbers.toArray(new  String[this.recordNumber]);  [BUGGY]      [CLASS]  CSVRecord  [METHOD]  <init>  [RETURN_TYPE]  String,long)  String[]  values  Integer>  mapping  String  comment  final  long  recordNumber  	projects/Csv9/src/main/java/org/apache/commons/csv/CSVRecord.java	0.24253562503633297	57	57	1	replace	this.recordNumber  =(String[])this.recordNumbers.toArray(new  String[this.recordNumber]);	  if(values    ==    null)    {    for(int    i    =    0;    i    <    values.length;    i++)    {    values[i]    =    values[i];    }    	non-compiled	[CE]  illegal  start  of  type	5	None	replace
58	[BUG]  [BUGGY]  Context.reportCodeChange();  [CE]  illegal  start  of  type  [FE]                            NullPointerException    [CONTEXT]      [BUGGY]  Context.reportCodeChange();  [BUGGY]      [CLASS]  CSVRecord  [METHOD]  <init>  [RETURN_TYPE]  String,long)  String[]  values  Integer>  mapping  String  comment  final  long  recordNumber  	projects/Csv9/src/main/java/org/apache/commons/csv/CSVRecord.java	0.24253562503633297	57	57	1	replace	Context.reportCodeChange();	  if(values    ==    null)    {    for(int    i    =    0;    i    <    values.length;    i++)    {    values[i]    =    values[i];    }    	non-compiled	[CE]  illegal  start  of  type	5	None	replace
59	[BUG]  [BUGGY]  while(values!=  null)  {  values  =  new  String[values.length];  for(int  i=0;  i  <  values.length;  i++)  {  values[i]  =  values[i];  }  [CE]  illegal  start  of  type  [FE]                  NullPointerException    [CONTEXT]      [BUGGY]  while(values!=  null)  {  values  =  new  String[values.length];  for(int  i=0;  i  <  values.length;  i++)  {  values[i]  =  values[i];  }  [BUGGY]      [CLASS]  CSVRecord  [METHOD]  <init>  [RETURN_TYPE]  String,long)  String[]  values  Integer>  mapping  String  comment  final  long  recordNumber  	projects/Csv9/src/main/java/org/apache/commons/csv/CSVRecord.java	0.24253562503633297	57	57	1	replace	while(values!=  null)  {  values  =  new  String[values.length];  for(int  i=0;  i  <  values.length;  i++)  {  values[i]  =  values[i];  }	  if(values    ==    null)    {    values    =    new    String[values.length];    for(int    i=0;    i    <    values.length;    i++)    {    values[i]    =    values[i];    }    	non-compiled	[CE]  illegal  start  of  type	14	None	replace
60	[BUG]  [BUGGY]  while(values!=  null  &&  values.length  >  0)  {  values[i]  =  new  String[values.length];  for(int  i=0;  i  <  values.length;  i++)  {  values[i]  =  values[i];  }  [CE]  illegal  start  of  type  [FE]                    NullPointerException    [CONTEXT]      [BUGGY]  while(values!=  null  &&  values.length  >  0)  {  values[i]  =  new  String[values.length];  for(int  i=0;  i  <  values.length;  i++)  {  values[i]  =  values[i];  }  [BUGGY]      [CLASS]  CSVRecord  [METHOD]  <init>  [RETURN_TYPE]  String,long)  String[]  values  Integer>  mapping  String  comment  final  long  recordNumber  	projects/Csv9/src/main/java/org/apache/commons/csv/CSVRecord.java	0.24253562503633297	57	57	1	replace	while(values!=  null  &&  values.length  >  0)  {  values[i]  =  new  String[values.length];  for(int  i=0;  i  <  values.length;  i++)  {  values[i]  =  values[i];  }	  if(values    ==    null)    {    values    =    new    String[values.length];    for(int    i=0;    i    <    values.length;    i++)    {    values[i]    =    values[i];    }    	non-compiled	[CE]  illegal  start  of  type	14	None	replace
61	[BUG]  [BUGGY]  while(values!=  null)  {  values[i]  =  new  String[values.length];  for(int  i=0;  i  <  values.length;  i++)  {  values[i]  =  values[i];  }  [CE]  illegal  start  of  type  [FE]                      NullPointerException    [CONTEXT]      [BUGGY]  while(values!=  null)  {  values[i]  =  new  String[values.length];  for(int  i=0;  i  <  values.length;  i++)  {  values[i]  =  values[i];  }  [BUGGY]      [CLASS]  CSVRecord  [METHOD]  <init>  [RETURN_TYPE]  String,long)  String[]  values  Integer>  mapping  String  comment  final  long  recordNumber  	projects/Csv9/src/main/java/org/apache/commons/csv/CSVRecord.java	0.24253562503633297	57	57	1	replace	while(values!=  null)  {  values[i]  =  new  String[values.length];  for(int  i=0;  i  <  values.length;  i++)  {  values[i]  =  values[i];  }	  if(values    ==    null)    {    values    =    new    String[values.length];    for(int    i=0;    i    <    values.length;    i++)    {    values[i]    =    values[i];    }    	non-compiled	[CE]  illegal  start  of  type	14	None	replace
62	[BUG]  [BUGGY]  while(values!=  null  &&  values.length  >  0)  {  values  =  new  String[values.length];  for(int  i=0;  i  <  values.length;  i++)  {  values[i]  =  values[i];  }  [CE]  illegal  start  of  type  [FE]                        NullPointerException    [CONTEXT]      [BUGGY]  while(values!=  null  &&  values.length  >  0)  {  values  =  new  String[values.length];  for(int  i=0;  i  <  values.length;  i++)  {  values[i]  =  values[i];  }  [BUGGY]      [CLASS]  CSVRecord  [METHOD]  <init>  [RETURN_TYPE]  String,long)  String[]  values  Integer>  mapping  String  comment  final  long  recordNumber  	projects/Csv9/src/main/java/org/apache/commons/csv/CSVRecord.java	0.24253562503633297	57	57	1	replace	while(values!=  null  &&  values.length  >  0)  {  values  =  new  String[values.length];  for(int  i=0;  i  <  values.length;  i++)  {  values[i]  =  values[i];  }	  if(values    ==    null)    {    values    =    new    String[values.length];    for(int    i=0;    i    <    values.length;    i++)    {    values[i]    =    values[i];    }    	non-compiled	[CE]  illegal  start  of  type	14	None	replace
63	[BUG]  [BUGGY]  while(values!=  null)  {  values[0]  =  new  String[values.length];  for(int  i=0;  i  <  values.length;  i++)  {  values[i]  =  values[i];  }  [CE]  illegal  start  of  type  [FE]                          NullPointerException    [CONTEXT]      [BUGGY]  while(values!=  null)  {  values[0]  =  new  String[values.length];  for(int  i=0;  i  <  values.length;  i++)  {  values[i]  =  values[i];  }  [BUGGY]      [CLASS]  CSVRecord  [METHOD]  <init>  [RETURN_TYPE]  String,long)  String[]  values  Integer>  mapping  String  comment  final  long  recordNumber  	projects/Csv9/src/main/java/org/apache/commons/csv/CSVRecord.java	0.24253562503633297	57	57	1	replace	while(values!=  null)  {  values[0]  =  new  String[values.length];  for(int  i=0;  i  <  values.length;  i++)  {  values[i]  =  values[i];  }	  if(values    ==    null)    {    values    =    new    String[values.length];    for(int    i=0;    i    <    values.length;    i++)    {    values[i]    =    values[i];    }    	non-compiled	[CE]  illegal  start  of  type	14	None	replace
64	[BUG]  [BUGGY]  while(values!=  null)  {  values  =  new  String[values.length];  for(int  i=0;  i  <  values.length;  i++)  {  values[i]  =  value[i];  }  [CE]  illegal  start  of  type  [FE]                            NullPointerException    [CONTEXT]      [BUGGY]  while(values!=  null)  {  values  =  new  String[values.length];  for(int  i=0;  i  <  values.length;  i++)  {  values[i]  =  value[i];  }  [BUGGY]      [CLASS]  CSVRecord  [METHOD]  <init>  [RETURN_TYPE]  String,long)  String[]  values  Integer>  mapping  String  comment  final  long  recordNumber  	projects/Csv9/src/main/java/org/apache/commons/csv/CSVRecord.java	0.24253562503633297	57	57	1	replace	while(values!=  null)  {  values  =  new  String[values.length];  for(int  i=0;  i  <  values.length;  i++)  {  values[i]  =  value[i];  }	  if(values    ==    null)    {    values    =    new    String[values.length];    for(int    i=0;    i    <    values.length;    i++)    {    values[i]    =    values[i];    }    	non-compiled	[CE]  illegal  start  of  type	14	None	replace
65	[BUG]  [BUGGY]  while(values!=  null  &&  values.length  >  0)  {  values[i]  =  new  String[values.length];  for(int  i=0;  i  <  values.length;  i++)  {  values[i]  =  value[i];  }  [CE]  illegal  start  of  type  [FE]                              NullPointerException    [CONTEXT]      [BUGGY]  while(values!=  null  &&  values.length  >  0)  {  values[i]  =  new  String[values.length];  for(int  i=0;  i  <  values.length;  i++)  {  values[i]  =  value[i];  }  [BUGGY]      [CLASS]  CSVRecord  [METHOD]  <init>  [RETURN_TYPE]  String,long)  String[]  values  Integer>  mapping  String  comment  final  long  recordNumber  	projects/Csv9/src/main/java/org/apache/commons/csv/CSVRecord.java	0.24253562503633297	57	57	1	replace	while(values!=  null  &&  values.length  >  0)  {  values[i]  =  new  String[values.length];  for(int  i=0;  i  <  values.length;  i++)  {  values[i]  =  value[i];  }	  if(values    ==    null)    {    values    =    new    String[values.length];    for(int    i=0;    i    <    values.length;    i++)    {    values[i]    =    values[i];    }    	non-compiled	[CE]  illegal  start  of  type	14	None	replace
66	[BUG]  [BUGGY]  this.recordNumber  =  recordNumber(recordNumber);  [CE]  illegal  start  of  type  [FE]                NullPointerException    [CONTEXT]      [BUGGY]  this.recordNumber  =  recordNumber(recordNumber);  [BUGGY]      [CLASS]  CSVRecord  [METHOD]  <init>  [RETURN_TYPE]  String,long)  String[]  values  Integer>  mapping  String  comment  final  long  recordNumber  	projects/Csv9/src/main/java/org/apache/commons/csv/CSVRecord.java	0.24253562503633297	57	57	1	replace	this.recordNumber  =  recordNumber(recordNumber);	  if(values    ==    null)    {    values    =    new    String[values.length];    for(int    i    =    0,    len    =    values.length;    i    <    len;    ++i)    {    values[i]    =    values[i];    }    	non-compiled	[CE]  illegal  start  of  type	13	None	replace
67	[BUG]  [BUGGY]  safeMultiply(values);  [CE]  illegal  start  of  type  [FE]                  NullPointerException    [CONTEXT]      [BUGGY]  safeMultiply(values);  [BUGGY]      [CLASS]  CSVRecord  [METHOD]  <init>  [RETURN_TYPE]  String,long)  String[]  values  Integer>  mapping  String  comment  final  long  recordNumber  	projects/Csv9/src/main/java/org/apache/commons/csv/CSVRecord.java	0.24253562503633297	57	57	1	replace	safeMultiply(values);	  if(values    ==    null)    {    values    =    new    String[values.length];    for(int    i    =    0,    len    =    values.length;    i    <    len;    ++i)    {    values[i]    =    values[i];    }    	non-compiled	[CE]  illegal  start  of  type	13	None	replace
68	[BUG]  [BUGGY]  this.recordNumber  =  recordNumber(values);  [CE]  illegal  start  of  type  [FE]                    NullPointerException    [CONTEXT]      [BUGGY]  this.recordNumber  =  recordNumber(values);  [BUGGY]      [CLASS]  CSVRecord  [METHOD]  <init>  [RETURN_TYPE]  String,long)  String[]  values  Integer>  mapping  String  comment  final  long  recordNumber  	projects/Csv9/src/main/java/org/apache/commons/csv/CSVRecord.java	0.24253562503633297	57	57	1	replace	this.recordNumber  =  recordNumber(values);	  if(values    ==    null)    {    values    =    new    String[values.length];    for(int    i    =    0,    len    =    values.length;    i    <    len;    ++i)    {    values[i]    =    values[i];    }    	non-compiled	[CE]  illegal  start  of  type	13	None	replace
69	[BUG]  [BUGGY]  nes.add(new  String[values.length]);  [CE]  illegal  start  of  type  [FE]                      NullPointerException    [CONTEXT]      [BUGGY]  nes.add(new  String[values.length]);  [BUGGY]      [CLASS]  CSVRecord  [METHOD]  <init>  [RETURN_TYPE]  String,long)  String[]  values  Integer>  mapping  String  comment  final  long  recordNumber  	projects/Csv9/src/main/java/org/apache/commons/csv/CSVRecord.java	0.24253562503633297	57	57	1	replace	nes.add(new  String[values.length]);	  if(values    ==    null)    {    values    =    new    String[values.length];    for(int    i    =    0,    len    =    values.length;    i    <    len;    ++i)    {    values[i]    =    values[i];    }    	non-compiled	[CE]  illegal  start  of  type	13	None	replace
70	[BUG]  [BUGGY]  this.recordNumber  =  recordNumber(recordNumber,  values.length);  [CE]  illegal  start  of  type  [FE]                        NullPointerException    [CONTEXT]      [BUGGY]  this.recordNumber  =  recordNumber(recordNumber,  values.length);  [BUGGY]      [CLASS]  CSVRecord  [METHOD]  <init>  [RETURN_TYPE]  String,long)  String[]  values  Integer>  mapping  String  comment  final  long  recordNumber  	projects/Csv9/src/main/java/org/apache/commons/csv/CSVRecord.java	0.24253562503633297	57	57	1	replace	this.recordNumber  =  recordNumber(recordNumber,  values.length);	  if(values    ==    null)    {    values    =    new    String[values.length];    for(int    i    =    0,    len    =    values.length;    i    <    len;    ++i)    {    values[i]    =    values[i];    }    	non-compiled	[CE]  illegal  start  of  type	13	None	replace
71	[BUG]  [BUGGY]  this.recordNumber  =  recordNumber(recordNumber,  values);  [CE]  illegal  start  of  type  [FE]                          NullPointerException    [CONTEXT]      [BUGGY]  this.recordNumber  =  recordNumber(recordNumber,  values);  [BUGGY]      [CLASS]  CSVRecord  [METHOD]  <init>  [RETURN_TYPE]  String,long)  String[]  values  Integer>  mapping  String  comment  final  long  recordNumber  	projects/Csv9/src/main/java/org/apache/commons/csv/CSVRecord.java	0.24253562503633297	57	57	1	replace	this.recordNumber  =  recordNumber(recordNumber,  values);	  if(values    ==    null)    {    values    =    new    String[values.length];    for(int    i    =    0,    len    =    values.length;    i    <    len;    ++i)    {    values[i]    =    values[i];    }    	non-compiled	[CE]  illegal  start  of  type	13	None	replace
72	[BUG]  [BUGGY]  while(values!=  null  &&  values.length  >  0)  {  for(int  i  =  0,  is  =  values.length;  i  <  is.size();  i++)  {  values[i]  =  values[i];  }  [CE]  illegal  start  of  type  [FE]          NullPointerException    [CONTEXT]      [BUGGY]  while(values!=  null  &&  values.length  >  0)  {  for(int  i  =  0,  is  =  values.length;  i  <  is.size();  i++)  {  values[i]  =  values[i];  }  [BUGGY]      [CLASS]  CSVRecord  [METHOD]  <init>  [RETURN_TYPE]  String,long)  String[]  values  Integer>  mapping  String  comment  final  long  recordNumber  	projects/Csv9/src/main/java/org/apache/commons/csv/CSVRecord.java	0.24253562503633297	57	57	1	replace	while(values!=  null  &&  values.length  >  0)  {  for(int  i  =  0,  is  =  values.length;  i  <  is.size();  i++)  {  values[i]  =  values[i];  }	  if(values    ==    null)    {    for(int    i    =    0,    is    =    values.length;    i    <    is.size();    i++)    {    values[i]    =    values[i];    }    	non-compiled	[CE]  illegal  start  of  type	2	None	replace
73	[BUG]  [BUGGY]  while(values!=  null)  {  for(int  i  =  0,  is  =  values.length;  i  <  is.size();  i++)  {  values[i]  =  values[i];  }  [CE]  illegal  start  of  type  [FE]            NullPointerException    [CONTEXT]      [BUGGY]  while(values!=  null)  {  for(int  i  =  0,  is  =  values.length;  i  <  is.size();  i++)  {  values[i]  =  values[i];  }  [BUGGY]      [CLASS]  CSVRecord  [METHOD]  <init>  [RETURN_TYPE]  String,long)  String[]  values  Integer>  mapping  String  comment  final  long  recordNumber  	projects/Csv9/src/main/java/org/apache/commons/csv/CSVRecord.java	0.24253562503633297	57	57	1	replace	while(values!=  null)  {  for(int  i  =  0,  is  =  values.length;  i  <  is.size();  i++)  {  values[i]  =  values[i];  }	  if(values    ==    null)    {    for(int    i    =    0,    is    =    values.length;    i    <    is.size();    i++)    {    values[i]    =    values[i];    }    	non-compiled	[CE]  illegal  start  of  type	2	None	replace
74	[BUG]  [BUGGY]  while(values!=  null  &&  is.size()  >  0)  {  for(int  i  =  0,  is  =  values.length;  i  <  is.size();  i++)  {  values[i]  =  values[i];  }  [CE]  illegal  start  of  type  [FE]              NullPointerException    [CONTEXT]      [BUGGY]  while(values!=  null  &&  is.size()  >  0)  {  for(int  i  =  0,  is  =  values.length;  i  <  is.size();  i++)  {  values[i]  =  values[i];  }  [BUGGY]      [CLASS]  CSVRecord  [METHOD]  <init>  [RETURN_TYPE]  String,long)  String[]  values  Integer>  mapping  String  comment  final  long  recordNumber  	projects/Csv9/src/main/java/org/apache/commons/csv/CSVRecord.java	0.24253562503633297	57	57	1	replace	while(values!=  null  &&  is.size()  >  0)  {  for(int  i  =  0,  is  =  values.length;  i  <  is.size();  i++)  {  values[i]  =  values[i];  }	  if(values    ==    null)    {    for(int    i    =    0,    is    =    values.length;    i    <    is.size();    i++)    {    values[i]    =    values[i];    }    	non-compiled	[CE]  illegal  start  of  type	2	None	replace
75	[BUG]  [BUGGY]  while(values!=  null  &&  values.length  >  0)  {  for(int  i  =  0,  is  =  values.length;  i  <  is.size();  i++)  {  values[i]  =  value[i];  }  [CE]  illegal  start  of  type  [FE]                NullPointerException    [CONTEXT]      [BUGGY]  while(values!=  null  &&  values.length  >  0)  {  for(int  i  =  0,  is  =  values.length;  i  <  is.size();  i++)  {  values[i]  =  value[i];  }  [BUGGY]      [CLASS]  CSVRecord  [METHOD]  <init>  [RETURN_TYPE]  String,long)  String[]  values  Integer>  mapping  String  comment  final  long  recordNumber  	projects/Csv9/src/main/java/org/apache/commons/csv/CSVRecord.java	0.24253562503633297	57	57	1	replace	while(values!=  null  &&  values.length  >  0)  {  for(int  i  =  0,  is  =  values.length;  i  <  is.size();  i++)  {  values[i]  =  value[i];  }	  if(values    ==    null)    {    for(int    i    =    0,    is    =    values.length;    i    <    is.size();    i++)    {    values[i]    =    values[i];    }    	non-compiled	[CE]  illegal  start  of  type	2	None	replace
76	[BUG]  [BUGGY]  while(values!=  null)  {  for(int  i  =  0,  is  =  values.length;  i  <  is.size();  i++)  {  values[i]  =  value[i];  }  [CE]  illegal  start  of  type  [FE]                  NullPointerException    [CONTEXT]      [BUGGY]  while(values!=  null)  {  for(int  i  =  0,  is  =  values.length;  i  <  is.size();  i++)  {  values[i]  =  value[i];  }  [BUGGY]      [CLASS]  CSVRecord  [METHOD]  <init>  [RETURN_TYPE]  String,long)  String[]  values  Integer>  mapping  String  comment  final  long  recordNumber  	projects/Csv9/src/main/java/org/apache/commons/csv/CSVRecord.java	0.24253562503633297	57	57	1	replace	while(values!=  null)  {  for(int  i  =  0,  is  =  values.length;  i  <  is.size();  i++)  {  values[i]  =  value[i];  }	  if(values    ==    null)    {    for(int    i    =    0,    is    =    values.length;    i    <    is.size();    i++)    {    values[i]    =    values[i];    }    	non-compiled	[CE]  illegal  start  of  type	2	None	replace
77	[BUG]  [BUGGY]  while(values!=  null  &&  values.length  >  0)  {  for(int  i  =  0,  is  =  values.length;  i  <  is.size();  i++)  {  values[i]  =  values[i].toString();  }  [CE]  illegal  start  of  type  [FE]                    NullPointerException    [CONTEXT]      [BUGGY]  while(values!=  null  &&  values.length  >  0)  {  for(int  i  =  0,  is  =  values.length;  i  <  is.size();  i++)  {  values[i]  =  values[i].toString();  }  [BUGGY]      [CLASS]  CSVRecord  [METHOD]  <init>  [RETURN_TYPE]  String,long)  String[]  values  Integer>  mapping  String  comment  final  long  recordNumber  	projects/Csv9/src/main/java/org/apache/commons/csv/CSVRecord.java	0.24253562503633297	57	57	1	replace	while(values!=  null  &&  values.length  >  0)  {  for(int  i  =  0,  is  =  values.length;  i  <  is.size();  i++)  {  values[i]  =  values[i].toString();  }	  if(values    ==    null)    {    for(int    i    =    0,    is    =    values.length;    i    <    is.size();    i++)    {    values[i]    =    values[i];    }    	non-compiled	[CE]  illegal  start  of  type	2	None	replace
78	[BUG]  [BUGGY]  while(values!=  null)  {  for(int  i  =  0,  is  =  values.length;  i  <  is.size();  i++)  {  values[i]  =  data[i];  }  [CE]  illegal  start  of  type  [FE]                      NullPointerException    [CONTEXT]      [BUGGY]  while(values!=  null)  {  for(int  i  =  0,  is  =  values.length;  i  <  is.size();  i++)  {  values[i]  =  data[i];  }  [BUGGY]      [CLASS]  CSVRecord  [METHOD]  <init>  [RETURN_TYPE]  String,long)  String[]  values  Integer>  mapping  String  comment  final  long  recordNumber  	projects/Csv9/src/main/java/org/apache/commons/csv/CSVRecord.java	0.24253562503633297	57	57	1	replace	while(values!=  null)  {  for(int  i  =  0,  is  =  values.length;  i  <  is.size();  i++)  {  values[i]  =  data[i];  }	  if(values    ==    null)    {    for(int    i    =    0,    is    =    values.length;    i    <    is.size();    i++)    {    values[i]    =    values[i];    }    	non-compiled	[CE]  illegal  start  of  type	2	None	replace
79	[BUG]  [BUGGY]  while(values!=  null  &&  values.length  >  0)  {  for(int  i  =  0,  is  =  values.size();  i  <  is.size();  i++)  {  values[i]  =  values[i];  }  [CE]  illegal  start  of  type  [FE]                    NullPointerException    [CONTEXT]      [BUGGY]  while(values!=  null  &&  values.length  >  0)  {  for(int  i  =  0,  is  =  values.size();  i  <  is.size();  i++)  {  values[i]  =  values[i];  }  [BUGGY]      [CLASS]  CSVRecord  [METHOD]  <init>  [RETURN_TYPE]  String,long)  String[]  values  Integer>  mapping  String  comment  final  long  recordNumber  	projects/Csv9/src/main/java/org/apache/commons/csv/CSVRecord.java	0.24253562503633297	57	57	1	replace	while(values!=  null  &&  values.length  >  0)  {  for(int  i  =  0,  is  =  values.size();  i  <  is.size();  i++)  {  values[i]  =  values[i];  }	  if(values    ==    null)    {    for(int    i    =    0,    is    =    values.size();    i    <    is.size();    i++)    {    values[i]    =    values[i];    }    	non-compiled	[CE]  illegal  start  of  type	7	None	replace
80	[BUG]  [BUGGY]  while(values!=  null)  {  for(int  i  =  0,  is  =  values.size();  i  <  is.size();  i++)  {  values[i]  =  values[i];  }  [CE]  illegal  start  of  type  [FE]                      NullPointerException    [CONTEXT]      [BUGGY]  while(values!=  null)  {  for(int  i  =  0,  is  =  values.size();  i  <  is.size();  i++)  {  values[i]  =  values[i];  }  [BUGGY]      [CLASS]  CSVRecord  [METHOD]  <init>  [RETURN_TYPE]  String,long)  String[]  values  Integer>  mapping  String  comment  final  long  recordNumber  	projects/Csv9/src/main/java/org/apache/commons/csv/CSVRecord.java	0.24253562503633297	57	57	1	replace	while(values!=  null)  {  for(int  i  =  0,  is  =  values.size();  i  <  is.size();  i++)  {  values[i]  =  values[i];  }	  if(values    ==    null)    {    for(int    i    =    0,    is    =    values.size();    i    <    is.size();    i++)    {    values[i]    =    values[i];    }    	non-compiled	[CE]  illegal  start  of  type	7	None	replace
81	[BUG]  [BUGGY]  while(values!=  null  &&  values.length  >  0)  {  for(int  i  =  0,  is  =  values.size();  i  <  is.size();  i++)  {  values[i]  =  value[i];  }  [CE]  illegal  start  of  type  [FE]                        NullPointerException    [CONTEXT]      [BUGGY]  while(values!=  null  &&  values.length  >  0)  {  for(int  i  =  0,  is  =  values.size();  i  <  is.size();  i++)  {  values[i]  =  value[i];  }  [BUGGY]      [CLASS]  CSVRecord  [METHOD]  <init>  [RETURN_TYPE]  String,long)  String[]  values  Integer>  mapping  String  comment  final  long  recordNumber  	projects/Csv9/src/main/java/org/apache/commons/csv/CSVRecord.java	0.24253562503633297	57	57	1	replace	while(values!=  null  &&  values.length  >  0)  {  for(int  i  =  0,  is  =  values.size();  i  <  is.size();  i++)  {  values[i]  =  value[i];  }	  if(values    ==    null)    {    for(int    i    =    0,    is    =    values.size();    i    <    is.size();    i++)    {    values[i]    =    values[i];    }    	non-compiled	[CE]  illegal  start  of  type	7	None	replace
82	[BUG]  [BUGGY]  while(values!=  null)  {  for(int  i  =  0,  is  =  values.size();  i  <  is.size();  i++)  {  values[i]  =  value[i];  }  [CE]  illegal  start  of  type  [FE]                          NullPointerException    [CONTEXT]      [BUGGY]  while(values!=  null)  {  for(int  i  =  0,  is  =  values.size();  i  <  is.size();  i++)  {  values[i]  =  value[i];  }  [BUGGY]      [CLASS]  CSVRecord  [METHOD]  <init>  [RETURN_TYPE]  String,long)  String[]  values  Integer>  mapping  String  comment  final  long  recordNumber  	projects/Csv9/src/main/java/org/apache/commons/csv/CSVRecord.java	0.24253562503633297	57	57	1	replace	while(values!=  null)  {  for(int  i  =  0,  is  =  values.size();  i  <  is.size();  i++)  {  values[i]  =  value[i];  }	  if(values    ==    null)    {    for(int    i    =    0,    is    =    values.size();    i    <    is.size();    i++)    {    values[i]    =    values[i];    }    	non-compiled	[CE]  illegal  start  of  type	7	None	replace
83	[BUG]  [BUGGY]  while(values!=  null)  {  for(int  i  =  0,  is  =  values.size();  i  <  is.size();  i++)  {  values[i]  =  values[0];  }  [CE]  illegal  start  of  type  [FE]                            NullPointerException    [CONTEXT]      [BUGGY]  while(values!=  null)  {  for(int  i  =  0,  is  =  values.size();  i  <  is.size();  i++)  {  values[i]  =  values[0];  }  [BUGGY]      [CLASS]  CSVRecord  [METHOD]  <init>  [RETURN_TYPE]  String,long)  String[]  values  Integer>  mapping  String  comment  final  long  recordNumber  	projects/Csv9/src/main/java/org/apache/commons/csv/CSVRecord.java	0.24253562503633297	57	57	1	replace	while(values!=  null)  {  for(int  i  =  0,  is  =  values.size();  i  <  is.size();  i++)  {  values[i]  =  values[0];  }	  if(values    ==    null)    {    for(int    i    =    0,    is    =    values.size();    i    <    is.size();    i++)    {    values[i]    =    values[i];    }    	non-compiled	[CE]  illegal  start  of  type	7	None	replace
84	[BUG]  [BUGGY]  while(values!=  null)  {  for(int  i  =  0,  is  =  values.size();  i  <  is.size();  i++)  {  values[i]  =  data[i];  }  [CE]  illegal  start  of  type  [FE]                              NullPointerException    [CONTEXT]      [BUGGY]  while(values!=  null)  {  for(int  i  =  0,  is  =  values.size();  i  <  is.size();  i++)  {  values[i]  =  data[i];  }  [BUGGY]      [CLASS]  CSVRecord  [METHOD]  <init>  [RETURN_TYPE]  String,long)  String[]  values  Integer>  mapping  String  comment  final  long  recordNumber  	projects/Csv9/src/main/java/org/apache/commons/csv/CSVRecord.java	0.24253562503633297	57	57	1	replace	while(values!=  null)  {  for(int  i  =  0,  is  =  values.size();  i  <  is.size();  i++)  {  values[i]  =  data[i];  }	  if(values    ==    null)    {    for(int    i    =    0,    is    =    values.size();    i    <    is.size();    i++)    {    values[i]    =    values[i];    }    	non-compiled	[CE]  illegal  start  of  type	7	None	replace
85	[BUG]  [BUGGY]  while(values!=  null)  {  for(int  i  =  0,  is  =  values.size();  i  <  is.size();  i++)  {  values[i]  =   " ";  }  [CE]  illegal  start  of  type  [FE]                                NullPointerException    [CONTEXT]      [BUGGY]  while(values!=  null)  {  for(int  i  =  0,  is  =  values.size();  i  <  is.size();  i++)  {  values[i]  =   " ";  }  [BUGGY]      [CLASS]  CSVRecord  [METHOD]  <init>  [RETURN_TYPE]  String,long)  String[]  values  Integer>  mapping  String  comment  final  long  recordNumber  	projects/Csv9/src/main/java/org/apache/commons/csv/CSVRecord.java	0.24253562503633297	57	57	1	replace	while(values!=  null)  {  for(int  i  =  0,  is  =  values.size();  i  <  is.size();  i++)  {  values[i]  =   " ";  }	  if(values    ==    null)    {    for(int    i    =    0,    is    =    values.size();    i    <    is.size();    i++)    {    values[i]    =    values[i];    }    	non-compiled	[CE]  illegal  start  of  type	7	None	replace
86	[BUG]  [BUGGY]  return  values!=  null?  null  :  values.toArray(new  String[values.size()  ]);  [CE]  illegal  start  of  type  [FE]              NullPointerException    [CONTEXT]      [BUGGY]  return  values!=  null?  null  :  values.toArray(new  String[values.size()  ]);  [BUGGY]      [CLASS]  CSVRecord  [METHOD]  <init>  [RETURN_TYPE]  String,long)  String[]  values  Integer>  mapping  String  comment  final  long  recordNumber  	projects/Csv9/src/main/java/org/apache/commons/csv/CSVRecord.java	0.24253562503633297	57	57	1	replace	return  values!=  null?  null  :  values.toArray(new  String[values.size()  ]);	  if(values    ==    null)    {    return    values.toArray(new    String[values.size()    ]);    }    	non-compiled	[CE]  illegal  start  of  type	12	None	replace
87	[BUG]  [BUGGY]  while(values!=  null  &&  values.size()  >  0)  {  return  values.toArray(new  String[values.size()  ]);  }  [CE]  illegal  start  of  type  [FE]                NullPointerException    [CONTEXT]      [BUGGY]  while(values!=  null  &&  values.size()  >  0)  {  return  values.toArray(new  String[values.size()  ]);  }  [BUGGY]      [CLASS]  CSVRecord  [METHOD]  <init>  [RETURN_TYPE]  String,long)  String[]  values  Integer>  mapping  String  comment  final  long  recordNumber  	projects/Csv9/src/main/java/org/apache/commons/csv/CSVRecord.java	0.24253562503633297	57	57	1	replace	while(values!=  null  &&  values.size()  >  0)  {  return  values.toArray(new  String[values.size()  ]);  }	  if(values    ==    null)    {    return    values.toArray(new    String[values.size()    ]);    }    	non-compiled	[CE]  illegal  start  of  type	12	None	replace
88	[BUG]  [BUGGY]  while(values!=  null  &&  values.size()  >  0)  {  return  values.toArray(new  String[values.size()  ]);  [CE]  illegal  start  of  type  [FE]                  NullPointerException    [CONTEXT]      [BUGGY]  while(values!=  null  &&  values.size()  >  0)  {  return  values.toArray(new  String[values.size()  ]);  [BUGGY]      [CLASS]  CSVRecord  [METHOD]  <init>  [RETURN_TYPE]  String,long)  String[]  values  Integer>  mapping  String  comment  final  long  recordNumber  	projects/Csv9/src/main/java/org/apache/commons/csv/CSVRecord.java	0.24253562503633297	57	57	1	replace	while(values!=  null  &&  values.size()  >  0)  {  return  values.toArray(new  String[values.size()  ]);	  if(values    ==    null)    {    return    values.toArray(new    String[values.size()    ]);    }    	non-compiled	[CE]  illegal  start  of  type	12	None	replace
89	[BUG]  [BUGGY]  if(values!=  null)  {  return  values.toArray(new  String[values.size()  ]);  }  [CE]  illegal  start  of  type  [FE]                    NullPointerException    [CONTEXT]      [BUGGY]  if(values!=  null)  {  return  values.toArray(new  String[values.size()  ]);  }  [BUGGY]      [CLASS]  CSVRecord  [METHOD]  <init>  [RETURN_TYPE]  String,long)  String[]  values  Integer>  mapping  String  comment  final  long  recordNumber  	projects/Csv9/src/main/java/org/apache/commons/csv/CSVRecord.java	0.24253562503633297	57	57	1	replace	if(values!=  null)  {  return  values.toArray(new  String[values.size()  ]);  }	  if(values    ==    null)    {    return    values.toArray(new    String[values.size()    ]);    }    	non-compiled	[CE]  illegal  start  of  type	12	None	replace
90	[BUG]  [BUGGY]  return  values  ==  null?  null  :  values.toArray(new  String[values.size()  ]);  [CE]  illegal  start  of  type  [FE]                      NullPointerException    [CONTEXT]      [BUGGY]  return  values  ==  null?  null  :  values.toArray(new  String[values.size()  ]);  [BUGGY]      [CLASS]  CSVRecord  [METHOD]  <init>  [RETURN_TYPE]  String,long)  String[]  values  Integer>  mapping  String  comment  final  long  recordNumber  	projects/Csv9/src/main/java/org/apache/commons/csv/CSVRecord.java	0.24253562503633297	57	57	1	replace	return  values  ==  null?  null  :  values.toArray(new  String[values.size()  ]);	  if(values    ==    null)    {    return    values.toArray(new    String[values.size()    ]);    }    	non-compiled	[CE]  illegal  start  of  type	12	None	replace
91	[BUG]  [BUGGY]  while(values!=  null  &&  values.length  >  0)  {  return  values.toArray(new  String[values.size()  ]);  [CE]  illegal  start  of  type  [FE]                        NullPointerException    [CONTEXT]      [BUGGY]  while(values!=  null  &&  values.length  >  0)  {  return  values.toArray(new  String[values.size()  ]);  [BUGGY]      [CLASS]  CSVRecord  [METHOD]  <init>  [RETURN_TYPE]  String,long)  String[]  values  Integer>  mapping  String  comment  final  long  recordNumber  	projects/Csv9/src/main/java/org/apache/commons/csv/CSVRecord.java	0.24253562503633297	57	57	1	replace	while(values!=  null  &&  values.length  >  0)  {  return  values.toArray(new  String[values.size()  ]);	  if(values    ==    null)    {    return    values.toArray(new    String[values.size()    ]);    }    	non-compiled	[CE]  illegal  start  of  type	12	None	replace
92	[BUG]  [BUGGY]  return(String[])values.toArray(new  String[values.length  -  1]);  [CE]  illegal  start  of  type  [FE]            NullPointerException    [CONTEXT]      [BUGGY]  return(String[])values.toArray(new  String[values.length  -  1]);  [BUGGY]      [CLASS]  CSVRecord  [METHOD]  <init>  [RETURN_TYPE]  String,long)  String[]  values  Integer>  mapping  String  comment  final  long  recordNumber  	projects/Csv9/src/main/java/org/apache/commons/csv/CSVRecord.java	0.24253562503633297	57	57	1	replace	return(String[])values.toArray(new  String[values.length  -  1]);	  return(String[])values.toArray(new    String[values.length]);    	non-compiled	[CE]  illegal  start  of  type	3	None	replace
93	[BUG]  [BUGGY]  return(String[])values.toArray(new  String[values.length  +  1]);  [CE]  illegal  start  of  type  [FE]              NullPointerException    [CONTEXT]      [BUGGY]  return(String[])values.toArray(new  String[values.length  +  1]);  [BUGGY]      [CLASS]  CSVRecord  [METHOD]  <init>  [RETURN_TYPE]  String,long)  String[]  values  Integer>  mapping  String  comment  final  long  recordNumber  	projects/Csv9/src/main/java/org/apache/commons/csv/CSVRecord.java	0.24253562503633297	57	57	1	replace	return(String[])values.toArray(new  String[values.length  +  1]);	  return(String[])values.toArray(new    String[values.length]);    	non-compiled	[CE]  illegal  start  of  type	3	None	replace
94	[BUG]  [BUGGY]  return(String[])this.values.toArray(new  String[values.length]);  [CE]  illegal  start  of  type  [FE]                NullPointerException    [CONTEXT]      [BUGGY]  return(String[])this.values.toArray(new  String[values.length]);  [BUGGY]      [CLASS]  CSVRecord  [METHOD]  <init>  [RETURN_TYPE]  String,long)  String[]  values  Integer>  mapping  String  comment  final  long  recordNumber  	projects/Csv9/src/main/java/org/apache/commons/csv/CSVRecord.java	0.24253562503633297	57	57	1	replace	return(String[])this.values.toArray(new  String[values.length]);	  return(String[])values.toArray(new    String[values.length]);    	non-compiled	[CE]  illegal  start  of  type	3	None	replace
95	[BUG]  [BUGGY]  if(values!=  null)  {  return(String[])values.toArray(new  String[values.length]);  }  [CE]  illegal  start  of  type  [FE]                  NullPointerException    [CONTEXT]      [BUGGY]  if(values!=  null)  {  return(String[])values.toArray(new  String[values.length]);  }  [BUGGY]      [CLASS]  CSVRecord  [METHOD]  <init>  [RETURN_TYPE]  String,long)  String[]  values  Integer>  mapping  String  comment  final  long  recordNumber  	projects/Csv9/src/main/java/org/apache/commons/csv/CSVRecord.java	0.24253562503633297	57	57	1	replace	if(values!=  null)  {  return(String[])values.toArray(new  String[values.length]);  }	  return(String[])values.toArray(new    String[values.length]);    	non-compiled	[CE]  illegal  start  of  type	3	None	replace
96	[BUG]  [BUGGY]  return(String[])values.toArray(new  String[values.length  *  2]);  [CE]  illegal  start  of  type  [FE]                    NullPointerException    [CONTEXT]      [BUGGY]  return(String[])values.toArray(new  String[values.length  *  2]);  [BUGGY]      [CLASS]  CSVRecord  [METHOD]  <init>  [RETURN_TYPE]  String,long)  String[]  values  Integer>  mapping  String  comment  final  long  recordNumber  	projects/Csv9/src/main/java/org/apache/commons/csv/CSVRecord.java	0.24253562503633297	57	57	1	replace	return(String[])values.toArray(new  String[values.length  *  2]);	  return(String[])values.toArray(new    String[values.length]);    	non-compiled	[CE]  illegal  start  of  type	3	None	replace
97	[BUG]  [BUGGY]  return(String[])values.toArray(new  String[values.length  /  2]);  [CE]  illegal  start  of  type  [FE]                      NullPointerException    [CONTEXT]      [BUGGY]  return(String[])values.toArray(new  String[values.length  /  2]);  [BUGGY]      [CLASS]  CSVRecord  [METHOD]  <init>  [RETURN_TYPE]  String,long)  String[]  values  Integer>  mapping  String  comment  final  long  recordNumber  	projects/Csv9/src/main/java/org/apache/commons/csv/CSVRecord.java	0.24253562503633297	57	57	1	replace	return(String[])values.toArray(new  String[values.length  /  2]);	  return(String[])values.toArray(new    String[values.length]);    	non-compiled	[CE]  illegal  start  of  type	3	None	replace
98	[BUG]  [BUGGY]  return  values.toArray(new  String[values.size()  +  1]);  [CE]  illegal  start  of  type  [FE]        NullPointerException    [CONTEXT]      [BUGGY]  return  values.toArray(new  String[values.size()  +  1]);  [BUGGY]      [CLASS]  CSVRecord  [METHOD]  <init>  [RETURN_TYPE]  String,long)  String[]  values  Integer>  mapping  String  comment  final  long  recordNumber  	projects/Csv9/src/main/java/org/apache/commons/csv/CSVRecord.java	0.24253562503633297	57	57	1	replace	return  values.toArray(new  String[values.size()  +  1]);	  return    values.toArray(new    String[values.size()    ]);    	non-compiled	[CE]  illegal  start  of  type	9	None	replace
99	[BUG]  [BUGGY]  return  this.values.toArray(new  String[values.size()  ]);  [CE]  illegal  start  of  type  [FE]          NullPointerException    [CONTEXT]      [BUGGY]  return  this.values.toArray(new  String[values.size()  ]);  [BUGGY]      [CLASS]  CSVRecord  [METHOD]  <init>  [RETURN_TYPE]  String,long)  String[]  values  Integer>  mapping  String  comment  final  long  recordNumber  	projects/Csv9/src/main/java/org/apache/commons/csv/CSVRecord.java	0.24253562503633297	57	57	1	replace	return  this.values.toArray(new  String[values.size()  ]);	  return    values.toArray(new    String[values.size()    ]);    	non-compiled	[CE]  illegal  start  of  type	9	None	replace
100	[BUG]  [BUGGY]  return  this.values.toArray(new  String[this.values.size()  ]);  [CE]  illegal  start  of  type  [FE]            NullPointerException    [CONTEXT]      [BUGGY]  return  this.values.toArray(new  String[this.values.size()  ]);  [BUGGY]      [CLASS]  CSVRecord  [METHOD]  <init>  [RETURN_TYPE]  String,long)  String[]  values  Integer>  mapping  String  comment  final  long  recordNumber  	projects/Csv9/src/main/java/org/apache/commons/csv/CSVRecord.java	0.24253562503633297	57	57	1	replace	return  this.values.toArray(new  String[this.values.size()  ]);	  return    values.toArray(new    String[values.size()    ]);    	non-compiled	[CE]  illegal  start  of  type	9	None	replace
101	[BUG]  [BUGGY]  return  values.toArray(new  String[this.values.size()  ]);  [CE]  illegal  start  of  type  [FE]              NullPointerException    [CONTEXT]      [BUGGY]  return  values.toArray(new  String[this.values.size()  ]);  [BUGGY]      [CLASS]  CSVRecord  [METHOD]  <init>  [RETURN_TYPE]  String,long)  String[]  values  Integer>  mapping  String  comment  final  long  recordNumber  	projects/Csv9/src/main/java/org/apache/commons/csv/CSVRecord.java	0.24253562503633297	57	57	1	replace	return  values.toArray(new  String[this.values.size()  ]);	  return    values.toArray(new    String[values.size()    ]);    	non-compiled	[CE]  illegal  start  of  type	9	None	replace
102	[BUG]  [BUGGY]  while(values!=  null  &&  values.length  >  0)  {  for(int  i  =  0,  is  =  values.length;  i  <  is.size();  ++i)  {  values[i]  =  values[i];  }  [CE]  illegal  start  of  type  [FE]              NullPointerException    [CONTEXT]      [BUGGY]  while(values!=  null  &&  values.length  >  0)  {  for(int  i  =  0,  is  =  values.length;  i  <  is.size();  ++i)  {  values[i]  =  values[i];  }  [BUGGY]      [CLASS]  CSVRecord  [METHOD]  <init>  [RETURN_TYPE]  String,long)  String[]  values  Integer>  mapping  String  comment  final  long  recordNumber  	projects/Csv9/src/main/java/org/apache/commons/csv/CSVRecord.java	0.24253562503633297	57	57	1	replace	while(values!=  null  &&  values.length  >  0)  {  for(int  i  =  0,  is  =  values.length;  i  <  is.size();  ++i)  {  values[i]  =  values[i];  }	  if(values    ==    null)    {    for(int    i    =    0,    is    =    values.length;    i    <    is.size();    ++i)    {    values[i]    =    values[i];    }    	non-compiled	[CE]  illegal  start  of  type	4	None	replace
103	[BUG]  [BUGGY]  while(values!=  null)  {  for(int  i  =  0,  is  =  values.length;  i  <  is.size();  ++i)  {  values[i]  =  values[i];  }  [CE]  illegal  start  of  type  [FE]                NullPointerException    [CONTEXT]      [BUGGY]  while(values!=  null)  {  for(int  i  =  0,  is  =  values.length;  i  <  is.size();  ++i)  {  values[i]  =  values[i];  }  [BUGGY]      [CLASS]  CSVRecord  [METHOD]  <init>  [RETURN_TYPE]  String,long)  String[]  values  Integer>  mapping  String  comment  final  long  recordNumber  	projects/Csv9/src/main/java/org/apache/commons/csv/CSVRecord.java	0.24253562503633297	57	57	1	replace	while(values!=  null)  {  for(int  i  =  0,  is  =  values.length;  i  <  is.size();  ++i)  {  values[i]  =  values[i];  }	  if(values    ==    null)    {    for(int    i    =    0,    is    =    values.length;    i    <    is.size();    ++i)    {    values[i]    =    values[i];    }    	non-compiled	[CE]  illegal  start  of  type	4	None	replace
104	[BUG]  [BUGGY]  while(values!=  null  &&  is.size()  >  0)  {  for(int  i  =  0,  is  =  values.length;  i  <  is.size();  ++i)  {  values[i]  =  values[i];  }  [CE]  illegal  start  of  type  [FE]                  NullPointerException    [CONTEXT]      [BUGGY]  while(values!=  null  &&  is.size()  >  0)  {  for(int  i  =  0,  is  =  values.length;  i  <  is.size();  ++i)  {  values[i]  =  values[i];  }  [BUGGY]      [CLASS]  CSVRecord  [METHOD]  <init>  [RETURN_TYPE]  String,long)  String[]  values  Integer>  mapping  String  comment  final  long  recordNumber  	projects/Csv9/src/main/java/org/apache/commons/csv/CSVRecord.java	0.24253562503633297	57	57	1	replace	while(values!=  null  &&  is.size()  >  0)  {  for(int  i  =  0,  is  =  values.length;  i  <  is.size();  ++i)  {  values[i]  =  values[i];  }	  if(values    ==    null)    {    for(int    i    =    0,    is    =    values.length;    i    <    is.size();    ++i)    {    values[i]    =    values[i];    }    	non-compiled	[CE]  illegal  start  of  type	4	None	replace
105	[BUG]  [BUGGY]  while(values!=  null  &&  values.length  >  0)  {  for(int  i  =  0,  is  =  values.length;  i  <  is.size();  ++i)  {  values[i]  =  value[i];  }  [CE]  illegal  start  of  type  [FE]                    NullPointerException    [CONTEXT]      [BUGGY]  while(values!=  null  &&  values.length  >  0)  {  for(int  i  =  0,  is  =  values.length;  i  <  is.size();  ++i)  {  values[i]  =  value[i];  }  [BUGGY]      [CLASS]  CSVRecord  [METHOD]  <init>  [RETURN_TYPE]  String,long)  String[]  values  Integer>  mapping  String  comment  final  long  recordNumber  	projects/Csv9/src/main/java/org/apache/commons/csv/CSVRecord.java	0.24253562503633297	57	57	1	replace	while(values!=  null  &&  values.length  >  0)  {  for(int  i  =  0,  is  =  values.length;  i  <  is.size();  ++i)  {  values[i]  =  value[i];  }	  if(values    ==    null)    {    for(int    i    =    0,    is    =    values.length;    i    <    is.size();    ++i)    {    values[i]    =    values[i];    }    	non-compiled	[CE]  illegal  start  of  type	4	None	replace
106	[BUG]  [BUGGY]  while(values!=  null)  {  for(int  i  =  0,  is  =  values.length;  i  <  is.size();  ++i)  {  values[i]  =  value[i];  }  [CE]  illegal  start  of  type  [FE]                      NullPointerException    [CONTEXT]      [BUGGY]  while(values!=  null)  {  for(int  i  =  0,  is  =  values.length;  i  <  is.size();  ++i)  {  values[i]  =  value[i];  }  [BUGGY]      [CLASS]  CSVRecord  [METHOD]  <init>  [RETURN_TYPE]  String,long)  String[]  values  Integer>  mapping  String  comment  final  long  recordNumber  	projects/Csv9/src/main/java/org/apache/commons/csv/CSVRecord.java	0.24253562503633297	57	57	1	replace	while(values!=  null)  {  for(int  i  =  0,  is  =  values.length;  i  <  is.size();  ++i)  {  values[i]  =  value[i];  }	  if(values    ==    null)    {    for(int    i    =    0,    is    =    values.length;    i    <    is.size();    ++i)    {    values[i]    =    values[i];    }    	non-compiled	[CE]  illegal  start  of  type	4	None	replace
107	[BUG]  [BUGGY]  while(values!=  null  &&  values.length  >  0)  {  for(int  i  =  0,  is  =  values.length;  i  <  is.size();  ++i)  {  values[i]  =  values[i].toString();  }  [CE]  illegal  start  of  type  [FE]                        NullPointerException    [CONTEXT]      [BUGGY]  while(values!=  null  &&  values.length  >  0)  {  for(int  i  =  0,  is  =  values.length;  i  <  is.size();  ++i)  {  values[i]  =  values[i].toString();  }  [BUGGY]      [CLASS]  CSVRecord  [METHOD]  <init>  [RETURN_TYPE]  String,long)  String[]  values  Integer>  mapping  String  comment  final  long  recordNumber  	projects/Csv9/src/main/java/org/apache/commons/csv/CSVRecord.java	0.24253562503633297	57	57	1	replace	while(values!=  null  &&  values.length  >  0)  {  for(int  i  =  0,  is  =  values.length;  i  <  is.size();  ++i)  {  values[i]  =  values[i].toString();  }	  if(values    ==    null)    {    for(int    i    =    0,    is    =    values.length;    i    <    is.size();    ++i)    {    values[i]    =    values[i];    }    	non-compiled	[CE]  illegal  start  of  type	4	None	replace
108	[BUG]  [BUGGY]  while(values!=  null  &&  values.length  >  0)  {  for(int  i  =  0,  is  =  values.length;  i  <  is.size();  ++i)  {  values[i]  =  this.values[i];  }  [CE]  illegal  start  of  type  [FE]                          NullPointerException    [CONTEXT]      [BUGGY]  while(values!=  null  &&  values.length  >  0)  {  for(int  i  =  0,  is  =  values.length;  i  <  is.size();  ++i)  {  values[i]  =  this.values[i];  }  [BUGGY]      [CLASS]  CSVRecord  [METHOD]  <init>  [RETURN_TYPE]  String,long)  String[]  values  Integer>  mapping  String  comment  final  long  recordNumber  	projects/Csv9/src/main/java/org/apache/commons/csv/CSVRecord.java	0.24253562503633297	57	57	1	replace	while(values!=  null  &&  values.length  >  0)  {  for(int  i  =  0,  is  =  values.length;  i  <  is.size();  ++i)  {  values[i]  =  this.values[i];  }	  if(values    ==    null)    {    for(int    i    =    0,    is    =    values.length;    i    <    is.size();    ++i)    {    values[i]    =    values[i];    }    	non-compiled	[CE]  illegal  start  of  type	4	None	replace
109	[BUG]  [BUGGY]  for(int  i  =  0,  len  =  values.length;  i  <  len;  ++i)  {  if(values[i]  ==  null)  {  return  values[i].toString();  }  [CE]  illegal  start  of  type  [FE]              NullPointerException    [CONTEXT]      [BUGGY]  for(int  i  =  0,  len  =  values.length;  i  <  len;  ++i)  {  if(values[i]  ==  null)  {  return  values[i].toString();  }  [BUGGY]      [CLASS]  CSVRecord  [METHOD]  <init>  [RETURN_TYPE]  String,long)  String[]  values  Integer>  mapping  String  comment  final  long  recordNumber  	projects/Csv9/src/main/java/org/apache/commons/csv/CSVRecord.java	0.24253562503633297	57	57	1	replace	for(int  i  =  0,  len  =  values.length;  i  <  len;  ++i)  {  if(values[i]  ==  null)  {  return  values[i].toString();  }	  for(int    i    =    0,    isNumber();    i    <    values.length;    ++i)    {    if(values[i]    ==    null)    {    return    values[i].toString();    }    	non-compiled	[CE]  illegal  start  of  type	18	None	replace
110	[BUG]  [BUGGY]  for(int  i  =  0,  isEmpty();  i  <  values.length;  ++i)  {  if(values[i]  ==  null)  {  return  values[i].toString();  }  [CE]  illegal  start  of  type  [FE]                NullPointerException    [CONTEXT]      [BUGGY]  for(int  i  =  0,  isEmpty();  i  <  values.length;  ++i)  {  if(values[i]  ==  null)  {  return  values[i].toString();  }  [BUGGY]      [CLASS]  CSVRecord  [METHOD]  <init>  [RETURN_TYPE]  String,long)  String[]  values  Integer>  mapping  String  comment  final  long  recordNumber  	projects/Csv9/src/main/java/org/apache/commons/csv/CSVRecord.java	0.24253562503633297	57	57	1	replace	for(int  i  =  0,  isEmpty();  i  <  values.length;  ++i)  {  if(values[i]  ==  null)  {  return  values[i].toString();  }	  for(int    i    =    0,    isNumber();    i    <    values.length;    ++i)    {    if(values[i]    ==    null)    {    return    values[i].toString();    }    	non-compiled	[CE]  illegal  start  of  type	18	None	replace
111	[BUG]  [BUGGY]  for(int  i  =  0,  isIterable();  i  <  values.length;  ++i)  {  if(values[i]  ==  null)  {  return  values[i].toString();  }  [CE]  illegal  start  of  type  [FE]                  NullPointerException    [CONTEXT]      [BUGGY]  for(int  i  =  0,  isIterable();  i  <  values.length;  ++i)  {  if(values[i]  ==  null)  {  return  values[i].toString();  }  [BUGGY]      [CLASS]  CSVRecord  [METHOD]  <init>  [RETURN_TYPE]  String,long)  String[]  values  Integer>  mapping  String  comment  final  long  recordNumber  	projects/Csv9/src/main/java/org/apache/commons/csv/CSVRecord.java	0.24253562503633297	57	57	1	replace	for(int  i  =  0,  isIterable();  i  <  values.length;  ++i)  {  if(values[i]  ==  null)  {  return  values[i].toString();  }	  for(int    i    =    0,    isNumber();    i    <    values.length;    ++i)    {    if(values[i]    ==    null)    {    return    values[i].toString();    }    	non-compiled	[CE]  illegal  start  of  type	18	None	replace
112	[BUG]  [BUGGY]  for(int  i  =  0,  isIterator();  i  <  values.length;  ++i)  {  if(values[i]  ==  null)  {  return  values[i].toString();  }  [CE]  illegal  start  of  type  [FE]                    NullPointerException    [CONTEXT]      [BUGGY]  for(int  i  =  0,  isIterator();  i  <  values.length;  ++i)  {  if(values[i]  ==  null)  {  return  values[i].toString();  }  [BUGGY]      [CLASS]  CSVRecord  [METHOD]  <init>  [RETURN_TYPE]  String,long)  String[]  values  Integer>  mapping  String  comment  final  long  recordNumber  	projects/Csv9/src/main/java/org/apache/commons/csv/CSVRecord.java	0.24253562503633297	57	57	1	replace	for(int  i  =  0,  isIterator();  i  <  values.length;  ++i)  {  if(values[i]  ==  null)  {  return  values[i].toString();  }	  for(int    i    =    0,    isNumber();    i    <    values.length;    ++i)    {    if(values[i]    ==    null)    {    return    values[i].toString();    }    	non-compiled	[CE]  illegal  start  of  type	18	None	replace
113	[BUG]  [BUGGY]  for(int  i  =  0,  isNumber();  i  <  values.length  -  1;  ++i)  {  if(values[i]  ==  null)  {  return  values[i].toString();  }  [CE]  illegal  start  of  type  [FE]                      NullPointerException    [CONTEXT]      [BUGGY]  for(int  i  =  0,  isNumber();  i  <  values.length  -  1;  ++i)  {  if(values[i]  ==  null)  {  return  values[i].toString();  }  [BUGGY]      [CLASS]  CSVRecord  [METHOD]  <init>  [RETURN_TYPE]  String,long)  String[]  values  Integer>  mapping  String  comment  final  long  recordNumber  	projects/Csv9/src/main/java/org/apache/commons/csv/CSVRecord.java	0.24253562503633297	57	57	1	replace	for(int  i  =  0,  isNumber();  i  <  values.length  -  1;  ++i)  {  if(values[i]  ==  null)  {  return  values[i].toString();  }	  for(int    i    =    0,    isNumber();    i    <    values.length;    ++i)    {    if(values[i]    ==    null)    {    return    values[i].toString();    }    	non-compiled	[CE]  illegal  start  of  type	18	None	replace
114	[BUG]  [BUGGY]  for(int  i  =  0,  length  =  values.length;  i  <  length;  ++i)  {  if(values[i]  ==  null)  {  return  values[i].toString();  }  [CE]  illegal  start  of  type  [FE]                        NullPointerException    [CONTEXT]      [BUGGY]  for(int  i  =  0,  length  =  values.length;  i  <  length;  ++i)  {  if(values[i]  ==  null)  {  return  values[i].toString();  }  [BUGGY]      [CLASS]  CSVRecord  [METHOD]  <init>  [RETURN_TYPE]  String,long)  String[]  values  Integer>  mapping  String  comment  final  long  recordNumber  	projects/Csv9/src/main/java/org/apache/commons/csv/CSVRecord.java	0.24253562503633297	57	57	1	replace	for(int  i  =  0,  length  =  values.length;  i  <  length;  ++i)  {  if(values[i]  ==  null)  {  return  values[i].toString();  }	  for(int    i    =    0,    isNumber();    i    <    values.length;    ++i)    {    if(values[i]    ==    null)    {    return    values[i].toString();    }    	non-compiled	[CE]  illegal  start  of  type	18	None	replace
115	[BUG]  [BUGGY]  for(int  i  =  0,  count  =  values.length;  i  <  count;  ++i)  {  if(values[i]  ==  null)  {  return  values[i].toString();  }  [CE]  illegal  start  of  type  [FE]                          NullPointerException    [CONTEXT]      [BUGGY]  for(int  i  =  0,  count  =  values.length;  i  <  count;  ++i)  {  if(values[i]  ==  null)  {  return  values[i].toString();  }  [BUGGY]      [CLASS]  CSVRecord  [METHOD]  <init>  [RETURN_TYPE]  String,long)  String[]  values  Integer>  mapping  String  comment  final  long  recordNumber  	projects/Csv9/src/main/java/org/apache/commons/csv/CSVRecord.java	0.24253562503633297	57	57	1	replace	for(int  i  =  0,  count  =  values.length;  i  <  count;  ++i)  {  if(values[i]  ==  null)  {  return  values[i].toString();  }	  for(int    i    =    0,    isNumber();    i    <    values.length;    ++i)    {    if(values[i]    ==    null)    {    return    values[i].toString();    }    	non-compiled	[CE]  illegal  start  of  type	18	None	replace
116	[BUG]  [BUGGY]  for(int  i  =  0,  len  =  isNumber();  i  <  values.length;  ++i)  {  if(values[i]  ==  null)  {  return  values[i];  }  [CE]  illegal  start  of  type  [FE]          NullPointerException    [CONTEXT]      [BUGGY]  for(int  i  =  0,  len  =  isNumber();  i  <  values.length;  ++i)  {  if(values[i]  ==  null)  {  return  values[i];  }  [BUGGY]      [CLASS]  CSVRecord  [METHOD]  <init>  [RETURN_TYPE]  String,long)  String[]  values  Integer>  mapping  String  comment  final  long  recordNumber  	projects/Csv9/src/main/java/org/apache/commons/csv/CSVRecord.java	0.24253562503633297	57	57	1	replace	for(int  i  =  0,  len  =  isNumber();  i  <  values.length;  ++i)  {  if(values[i]  ==  null)  {  return  values[i];  }	  for(int    i    =    0,    isNumber();    i    <    values.length;    ++i)    {    if(values[i]    ==    null)    {    return    values[i];    }    	non-compiled	[CE]  illegal  start  of  type	16	None	replace
117	[BUG]  [BUGGY]  for(int  i  =  0,  hashCode();  i  <  values.length;  ++i)  {  if(values[i]  ==  null)  {  return  values[i];  }  [CE]  illegal  start  of  type  [FE]            NullPointerException    [CONTEXT]      [BUGGY]  for(int  i  =  0,  hashCode();  i  <  values.length;  ++i)  {  if(values[i]  ==  null)  {  return  values[i];  }  [BUGGY]      [CLASS]  CSVRecord  [METHOD]  <init>  [RETURN_TYPE]  String,long)  String[]  values  Integer>  mapping  String  comment  final  long  recordNumber  	projects/Csv9/src/main/java/org/apache/commons/csv/CSVRecord.java	0.24253562503633297	57	57	1	replace	for(int  i  =  0,  hashCode();  i  <  values.length;  ++i)  {  if(values[i]  ==  null)  {  return  values[i];  }	  for(int    i    =    0,    isNumber();    i    <    values.length;    ++i)    {    if(values[i]    ==    null)    {    return    values[i];    }    	non-compiled	[CE]  illegal  start  of  type	16	None	replace
118	[BUG]  [BUGGY]  int  i  =  0,  isNumber();  i  <  values.length;  ++i)  {  if(values[i]  ==  null)  {  return  values[i];  }  [CE]  illegal  start  of  type  [FE]              NullPointerException    [CONTEXT]      [BUGGY]  int  i  =  0,  isNumber();  i  <  values.length;  ++i)  {  if(values[i]  ==  null)  {  return  values[i];  }  [BUGGY]      [CLASS]  CSVRecord  [METHOD]  <init>  [RETURN_TYPE]  String,long)  String[]  values  Integer>  mapping  String  comment  final  long  recordNumber  	projects/Csv9/src/main/java/org/apache/commons/csv/CSVRecord.java	0.24253562503633297	57	57	1	replace	int  i  =  0,  isNumber();  i  <  values.length;  ++i)  {  if(values[i]  ==  null)  {  return  values[i];  }	  for(int    i    =    0,    isNumber();    i    <    values.length;    ++i)    {    if(values[i]    ==    null)    {    return    values[i];    }    	non-compiled	[CE]  illegal  start  of  type	16	None	replace
119	[BUG]  [BUGGY]  for(int  i  =  0,  size  =  values.length;  i  <  size;  ++i)  {  if(values[i]  ==  null)  {  return  values[i];  }  [CE]  illegal  start  of  type  [FE]                NullPointerException    [CONTEXT]      [BUGGY]  for(int  i  =  0,  size  =  values.length;  i  <  size;  ++i)  {  if(values[i]  ==  null)  {  return  values[i];  }  [BUGGY]      [CLASS]  CSVRecord  [METHOD]  <init>  [RETURN_TYPE]  String,long)  String[]  values  Integer>  mapping  String  comment  final  long  recordNumber  	projects/Csv9/src/main/java/org/apache/commons/csv/CSVRecord.java	0.24253562503633297	57	57	1	replace	for(int  i  =  0,  size  =  values.length;  i  <  size;  ++i)  {  if(values[i]  ==  null)  {  return  values[i];  }	  for(int    i    =    0,    isNumber();    i    <    values.length;    ++i)    {    if(values[i]    ==    null)    {    return    values[i];    }    	non-compiled	[CE]  illegal  start  of  type	16	None	replace
120	[BUG]  [BUGGY]  return(String[])values.toArray(new  String[values.length],  recordNumber);  [CE]  illegal  start  of  type  [FE]            NullPointerException    [CONTEXT]      [BUGGY]  return(String[])values.toArray(new  String[values.length],  recordNumber);  [BUGGY]      [CLASS]  CSVRecord  [METHOD]  <init>  [RETURN_TYPE]  String,long)  String[]  values  Integer>  mapping  String  comment  final  long  recordNumber  	projects/Csv9/src/main/java/org/apache/commons/csv/CSVRecord.java	0.24253562503633297	57	57	1	replace	return(String[])values.toArray(new  String[values.length],  recordNumber);	  return(String[])values.toArray(new    String[values.length]);    	non-compiled	[CE]  illegal  start  of  type	3	None	replace
121	[BUG]  [BUGGY]  return(String[])values.toArray(new  String[values.length,  recordNumber]);  [CE]  illegal  start  of  type  [FE]              NullPointerException    [CONTEXT]      [BUGGY]  return(String[])values.toArray(new  String[values.length,  recordNumber]);  [BUGGY]      [CLASS]  CSVRecord  [METHOD]  <init>  [RETURN_TYPE]  String,long)  String[]  values  Integer>  mapping  String  comment  final  long  recordNumber  	projects/Csv9/src/main/java/org/apache/commons/csv/CSVRecord.java	0.24253562503633297	57	57	1	replace	return(String[])values.toArray(new  String[values.length,  recordNumber]);	  return(String[])values.toArray(new    String[values.length]);    	non-compiled	[CE]  illegal  start  of  type	3	None	replace
122	[BUG]  [BUGGY]  for(int  i  =  0,  len  =  isNumber();  i  <  values.length;  ++i)  {  if(values[i]!=  null)  {  return  values[i];  }  [CE]  illegal  start  of  type  [FE]        NullPointerException    [CONTEXT]      [BUGGY]  for(int  i  =  0,  len  =  isNumber();  i  <  values.length;  ++i)  {  if(values[i]!=  null)  {  return  values[i];  }  [BUGGY]      [CLASS]  CSVRecord  [METHOD]  <init>  [RETURN_TYPE]  String,long)  String[]  values  Integer>  mapping  String  comment  final  long  recordNumber  	projects/Csv9/src/main/java/org/apache/commons/csv/CSVRecord.java	0.24253562503633297	57	57	1	replace	for(int  i  =  0,  len  =  isNumber();  i  <  values.length;  ++i)  {  if(values[i]!=  null)  {  return  values[i];  }	  for(int    i    =    0,    isNumber();    i    <    values.length;    ++i)    {    if(values[i]!=    null)    {    return    values[i];    }    	non-compiled	[CE]  illegal  start  of  type	15	None	replace
123	[BUG]  [BUGGY]  for(int  i  =  0,  hashCode();  i  <  values.length;  ++i)  {  if(values[i]!=  null)  {  return  values[i];  }  [CE]  illegal  start  of  type  [FE]          NullPointerException    [CONTEXT]      [BUGGY]  for(int  i  =  0,  hashCode();  i  <  values.length;  ++i)  {  if(values[i]!=  null)  {  return  values[i];  }  [BUGGY]      [CLASS]  CSVRecord  [METHOD]  <init>  [RETURN_TYPE]  String,long)  String[]  values  Integer>  mapping  String  comment  final  long  recordNumber  	projects/Csv9/src/main/java/org/apache/commons/csv/CSVRecord.java	0.24253562503633297	57	57	1	replace	for(int  i  =  0,  hashCode();  i  <  values.length;  ++i)  {  if(values[i]!=  null)  {  return  values[i];  }	  for(int    i    =    0,    isNumber();    i    <    values.length;    ++i)    {    if(values[i]!=    null)    {    return    values[i];    }    	non-compiled	[CE]  illegal  start  of  type	15	None	replace
124	[BUG]  [BUGGY]  int  i  =  0,  isNumber();  i  <  values.length;  ++i)  {  if(values[i]!=  null)  {  return  values[i];  }  [CE]  illegal  start  of  type  [FE]            NullPointerException    [CONTEXT]      [BUGGY]  int  i  =  0,  isNumber();  i  <  values.length;  ++i)  {  if(values[i]!=  null)  {  return  values[i];  }  [BUGGY]      [CLASS]  CSVRecord  [METHOD]  <init>  [RETURN_TYPE]  String,long)  String[]  values  Integer>  mapping  String  comment  final  long  recordNumber  	projects/Csv9/src/main/java/org/apache/commons/csv/CSVRecord.java	0.24253562503633297	57	57	1	replace	int  i  =  0,  isNumber();  i  <  values.length;  ++i)  {  if(values[i]!=  null)  {  return  values[i];  }	  for(int    i    =    0,    isNumber();    i    <    values.length;    ++i)    {    if(values[i]!=    null)    {    return    values[i];    }    	non-compiled	[CE]  illegal  start  of  type	15	None	replace
125	[BUG]  [BUGGY]  for(int  i  =  0,  isNumber();  i  <  this.values.length;  ++i)  {  if(values[i]!=  null)  {  return  values[i];  }  [CE]  illegal  start  of  type  [FE]              NullPointerException    [CONTEXT]      [BUGGY]  for(int  i  =  0,  isNumber();  i  <  this.values.length;  ++i)  {  if(values[i]!=  null)  {  return  values[i];  }  [BUGGY]      [CLASS]  CSVRecord  [METHOD]  <init>  [RETURN_TYPE]  String,long)  String[]  values  Integer>  mapping  String  comment  final  long  recordNumber  	projects/Csv9/src/main/java/org/apache/commons/csv/CSVRecord.java	0.24253562503633297	57	57	1	replace	for(int  i  =  0,  isNumber();  i  <  this.values.length;  ++i)  {  if(values[i]!=  null)  {  return  values[i];  }	  for(int    i    =    0,    isNumber();    i    <    values.length;    ++i)    {    if(values[i]!=    null)    {    return    values[i];    }    	non-compiled	[CE]  illegal  start  of  type	15	None	replace
126	[BUG]  [BUGGY]  NullPointerException.printStackTrace();  [CE]  illegal  start  of  type  [FE]                NullPointerException    [CONTEXT]      [BUGGY]  NullPointerException.printStackTrace();  [BUGGY]      [CLASS]  CSVRecord  [METHOD]  <init>  [RETURN_TYPE]  String,long)  String[]  values  Integer>  mapping  String  comment  final  long  recordNumber  	projects/Csv9/src/main/java/org/apache/commons/csv/CSVRecord.java	0.24253562503633297	57	57	1	replace	NullPointerException.printStackTrace();	  if(values    ==    null)    {    values    =    new    String[values.length];    for(int    i    =    0,    len    =    values.length;    i    <    len;    ++i)    {    values[i]    =    values[i];    }    	non-compiled	[CE]  illegal  start  of  type	13	None	replace
127	[BUG]  [BUGGY]  NullPointerException.println( "Failed  to  parse  values: "  +  values.length);  [CE]  illegal  start  of  type  [FE]                  NullPointerException    [CONTEXT]      [BUGGY]  NullPointerException.println( "Failed  to  parse  values: "  +  values.length);  [BUGGY]      [CLASS]  CSVRecord  [METHOD]  <init>  [RETURN_TYPE]  String,long)  String[]  values  Integer>  mapping  String  comment  final  long  recordNumber  	projects/Csv9/src/main/java/org/apache/commons/csv/CSVRecord.java	0.24253562503633297	57	57	1	replace	NullPointerException.println( "Failed  to  parse  values: "  +  values.length);	  if(values    ==    null)    {    values    =    new    String[values.length];    for(int    i    =    0,    len    =    values.length;    i    <    len;    ++i)    {    values[i]    =    values[i];    }    	non-compiled	[CE]  illegal  start  of  type	13	None	replace
128	[BUG]  [BUGGY]  NullPointerException.println( "Unable  to  parse  values  of  type "+getClass().getName());  [CE]  illegal  start  of  type  [FE]                    NullPointerException    [CONTEXT]      [BUGGY]  NullPointerException.println( "Unable  to  parse  values  of  type "+getClass().getName());  [BUGGY]      [CLASS]  CSVRecord  [METHOD]  <init>  [RETURN_TYPE]  String,long)  String[]  values  Integer>  mapping  String  comment  final  long  recordNumber  	projects/Csv9/src/main/java/org/apache/commons/csv/CSVRecord.java	0.24253562503633297	57	57	1	replace	NullPointerException.println( "Unable  to  parse  values  of  type "+getClass().getName());	  if(values    ==    null)    {    values    =    new    String[values.length];    for(int    i    =    0,    len    =    values.length;    i    <    len;    ++i)    {    values[i]    =    values[i];    }    	non-compiled	[CE]  illegal  start  of  type	13	None	replace
129	[BUG]  [BUGGY]  NullPointerException.println( "Failed  to  parse  values  of  type "+getClass().getName());  [CE]  illegal  start  of  type  [FE]                      NullPointerException    [CONTEXT]      [BUGGY]  NullPointerException.println( "Failed  to  parse  values  of  type "+getClass().getName());  [BUGGY]      [CLASS]  CSVRecord  [METHOD]  <init>  [RETURN_TYPE]  String,long)  String[]  values  Integer>  mapping  String  comment  final  long  recordNumber  	projects/Csv9/src/main/java/org/apache/commons/csv/CSVRecord.java	0.24253562503633297	57	57	1	replace	NullPointerException.println( "Failed  to  parse  values  of  type "+getClass().getName());	  if(values    ==    null)    {    values    =    new    String[values.length];    for(int    i    =    0,    len    =    values.length;    i    <    len;    ++i)    {    values[i]    =    values[i];    }    	non-compiled	[CE]  illegal  start  of  type	13	None	replace
130	[BUG]  [BUGGY]  NullPointerException.println( "Failed  to  parse  values  of  type ");  [CE]  illegal  start  of  type  [FE]                        NullPointerException    [CONTEXT]      [BUGGY]  NullPointerException.println( "Failed  to  parse  values  of  type ");  [BUGGY]      [CLASS]  CSVRecord  [METHOD]  <init>  [RETURN_TYPE]  String,long)  String[]  values  Integer>  mapping  String  comment  final  long  recordNumber  	projects/Csv9/src/main/java/org/apache/commons/csv/CSVRecord.java	0.24253562503633297	57	57	1	replace	NullPointerException.println( "Failed  to  parse  values  of  type ");	  if(values    ==    null)    {    values    =    new    String[values.length];    for(int    i    =    0,    len    =    values.length;    i    <    len;    ++i)    {    values[i]    =    values[i];    }    	non-compiled	[CE]  illegal  start  of  type	13	None	replace
131	[BUG]  [BUGGY]  this.values  =  values.toArray(new  String[values.size()  ])+  1;  [CE]  illegal  start  of  type  [FE]            NullPointerException    [CONTEXT]      [BUGGY]  this.values  =  values.toArray(new  String[values.size()  ])+  1;  [BUGGY]      [CLASS]  CSVRecord  [METHOD]  <init>  [RETURN_TYPE]  String,long)  String[]  values  Integer>  mapping  String  comment  final  long  recordNumber  	projects/Csv9/src/main/java/org/apache/commons/csv/CSVRecord.java	0.24253562503633297	57	57	1	replace	this.values  =  values.toArray(new  String[values.size()  ])+  1;	  this.values    =    values.toArray(new    String[values.size()    ]);    	non-compiled	[CE]  illegal  start  of  type	11	None	replace
132	[BUG]  [BUGGY]  safeMultiply(values)  {  return  values.toArray(new  String[values.size()  ]);  }  [CE]  illegal  start  of  type  [FE]              NullPointerException    [CONTEXT]      [BUGGY]  safeMultiply(values)  {  return  values.toArray(new  String[values.size()  ]);  }  [BUGGY]      [CLASS]  CSVRecord  [METHOD]  <init>  [RETURN_TYPE]  String,long)  String[]  values  Integer>  mapping  String  comment  final  long  recordNumber  	projects/Csv9/src/main/java/org/apache/commons/csv/CSVRecord.java	0.24253562503633297	57	57	1	replace	safeMultiply(values)  {  return  values.toArray(new  String[values.size()  ]);  }	  if(values    ==    null)    {    return    values.toArray(new    String[values.size()    ]);    }    	non-compiled	[CE]  illegal  start  of  type	12	None	replace
133	[BUG]  [BUGGY]  if(values!=  null)  {  return  values.toArray(new  String[values.size()  +  1]);  }  [CE]  illegal  start  of  type  [FE]                NullPointerException    [CONTEXT]      [BUGGY]  if(values!=  null)  {  return  values.toArray(new  String[values.size()  +  1]);  }  [BUGGY]      [CLASS]  CSVRecord  [METHOD]  <init>  [RETURN_TYPE]  String,long)  String[]  values  Integer>  mapping  String  comment  final  long  recordNumber  	projects/Csv9/src/main/java/org/apache/commons/csv/CSVRecord.java	0.24253562503633297	57	57	1	replace	if(values!=  null)  {  return  values.toArray(new  String[values.size()  +  1]);  }	  if(values    ==    null)    {    return    values.toArray(new    String[values.size()    ]);    }    	non-compiled	[CE]  illegal  start  of  type	12	None	replace
134	[BUG]  [BUGGY]  return  values!=  null?  null  :  values.toArray(new  String[values.size()  +  1]);  [CE]  illegal  start  of  type  [FE]                  NullPointerException    [CONTEXT]      [BUGGY]  return  values!=  null?  null  :  values.toArray(new  String[values.size()  +  1]);  [BUGGY]      [CLASS]  CSVRecord  [METHOD]  <init>  [RETURN_TYPE]  String,long)  String[]  values  Integer>  mapping  String  comment  final  long  recordNumber  	projects/Csv9/src/main/java/org/apache/commons/csv/CSVRecord.java	0.24253562503633297	57	57	1	replace	return  values!=  null?  null  :  values.toArray(new  String[values.size()  +  1]);	  if(values    ==    null)    {    return    values.toArray(new    String[values.size()    ]);    }    	non-compiled	[CE]  illegal  start  of  type	12	None	replace
135	[BUG]  [BUGGY]  NullPointerException.start(recordNumber);  [CE]  illegal  start  of  type  [FE]                NullPointerException    [CONTEXT]      [BUGGY]  NullPointerException.start(recordNumber);  [BUGGY]      [CLASS]  CSVRecord  [METHOD]  <init>  [RETURN_TYPE]  String,long)  String[]  values  Integer>  mapping  String  comment  final  long  recordNumber  	projects/Csv9/src/main/java/org/apache/commons/csv/CSVRecord.java	0.24253562503633297	57	57	1	replace	NullPointerException.start(recordNumber);	  if(values    ==    null)    {    for(int    i    =    0;    i    <    values.length;    i++)    {    values[i]    =    values[i];    }    	non-compiled	[CE]  illegal  start  of  type	5	None	replace
136	[BUG]  [BUGGY]  NullPointerException.start(recordNumber,  values[i]);  [CE]  illegal  start  of  type  [FE]                  NullPointerException    [CONTEXT]      [BUGGY]  NullPointerException.start(recordNumber,  values[i]);  [BUGGY]      [CLASS]  CSVRecord  [METHOD]  <init>  [RETURN_TYPE]  String,long)  String[]  values  Integer>  mapping  String  comment  final  long  recordNumber  	projects/Csv9/src/main/java/org/apache/commons/csv/CSVRecord.java	0.24253562503633297	57	57	1	replace	NullPointerException.start(recordNumber,  values[i]);	  if(values    ==    null)    {    for(int    i    =    0;    i    <    values.length;    i++)    {    values[i]    =    values[i];    }    	non-compiled	[CE]  illegal  start  of  type	5	None	replace
137	[BUG]  [BUGGY]  NullPointerException.println( "Unable  to  parse  values  of  type ");  [CE]  illegal  start  of  type  [FE]                    NullPointerException    [CONTEXT]      [BUGGY]  NullPointerException.println( "Unable  to  parse  values  of  type ");  [BUGGY]      [CLASS]  CSVRecord  [METHOD]  <init>  [RETURN_TYPE]  String,long)  String[]  values  Integer>  mapping  String  comment  final  long  recordNumber  	projects/Csv9/src/main/java/org/apache/commons/csv/CSVRecord.java	0.24253562503633297	57	57	1	replace	NullPointerException.println( "Unable  to  parse  values  of  type ");	  if(values    ==    null)    {    for(int    i    =    0;    i    <    values.length;    i++)    {    values[i]    =    values[i];    }    	non-compiled	[CE]  illegal  start  of  type	5	None	replace
138	[BUG]  [BUGGY]  NullPointerException.println( "Failed  to  parse  values. ");  [CE]  illegal  start  of  type  [FE]                      NullPointerException    [CONTEXT]      [BUGGY]  NullPointerException.println( "Failed  to  parse  values. ");  [BUGGY]      [CLASS]  CSVRecord  [METHOD]  <init>  [RETURN_TYPE]  String,long)  String[]  values  Integer>  mapping  String  comment  final  long  recordNumber  	projects/Csv9/src/main/java/org/apache/commons/csv/CSVRecord.java	0.24253562503633297	57	57	1	replace	NullPointerException.println( "Failed  to  parse  values. ");	  if(values    ==    null)    {    for(int    i    =    0;    i    <    values.length;    i++)    {    values[i]    =    values[i];    }    	non-compiled	[CE]  illegal  start  of  type	5	None	replace
139	[BUG]  [BUGGY]  NullPointerException.println( "Unable  to  parse  values: "  +  values.length);  [CE]  illegal  start  of  type  [FE]          NullPointerException    [CONTEXT]      [BUGGY]  NullPointerException.println( "Unable  to  parse  values: "  +  values.length);  [BUGGY]      [CLASS]  CSVRecord  [METHOD]  <init>  [RETURN_TYPE]  String,long)  String[]  values  Integer>  mapping  String  comment  final  long  recordNumber  	projects/Csv9/src/main/java/org/apache/commons/csv/CSVRecord.java	0.24253562503633297	57	57	1	replace	NullPointerException.println( "Unable  to  parse  values: "  +  values.length);	  if(values    ==    null)    {    for(int    i    =    0,    is    =    values.length;    i    <    is.size();    i++)    {    values[i]    =    values[i];    }    	non-compiled	[CE]  illegal  start  of  type	2	None	replace
140	[BUG]  [BUGGY]  this.values  =  values.toArray(new  String[values.length]);  [CE]  illegal  start  of  type  [FE]                      NullPointerException    [CONTEXT]      [BUGGY]  this.values  =  values.toArray(new  String[values.length]);  [BUGGY]      [CLASS]  CSVRecord  [METHOD]  <init>  [RETURN_TYPE]  String,long)  String[]  values  Integer>  mapping  String  comment  final  long  recordNumber  	projects/Csv9/src/main/java/org/apache/commons/csv/CSVRecord.java	0.24253562503633297	57	57	1	replace	this.values  =  values.toArray(new  String[values.length]);	      	non-compiled	[CE]  illegal  start  of  type	8	None	replace
141	[BUG]  [BUGGY]  return  recordNumber.substring(0,  recordNumber.length()  -  1);  [CE]  illegal  start  of  type  [FE]                        NullPointerException    [CONTEXT]      [BUGGY]  return  recordNumber.substring(0,  recordNumber.length()  -  1);  [BUGGY]      [CLASS]  CSVRecord  [METHOD]  <init>  [RETURN_TYPE]  String,long)  String[]  values  Integer>  mapping  String  comment  final  long  recordNumber  	projects/Csv9/src/main/java/org/apache/commons/csv/CSVRecord.java	0.24253562503633297	57	57	1	replace	return  recordNumber.substring(0,  recordNumber.length()  -  1);	      	non-compiled	[CE]  illegal  start  of  type	8	None	replace
142	[BUG]  [BUGGY]  final  int  recordNumber  =  values.length();  [CE]  illegal  start  of  type  [FE]                          NullPointerException    [CONTEXT]      [BUGGY]  final  int  recordNumber  =  values.length();  [BUGGY]      [CLASS]  CSVRecord  [METHOD]  <init>  [RETURN_TYPE]  String,long)  String[]  values  Integer>  mapping  String  comment  final  long  recordNumber  	projects/Csv9/src/main/java/org/apache/commons/csv/CSVRecord.java	0.24253562503633297	57	57	1	replace	final  int  recordNumber  =  values.length();	      	non-compiled	[CE]  illegal  start  of  type	8	None	replace
143	[BUG]  [BUGGY]  this.values  =  values.toArray(new  String[recordNumber]);  [CE]  illegal  start  of  type  [FE]                            NullPointerException    [CONTEXT]      [BUGGY]  this.values  =  values.toArray(new  String[recordNumber]);  [BUGGY]      [CLASS]  CSVRecord  [METHOD]  <init>  [RETURN_TYPE]  String,long)  String[]  values  Integer>  mapping  String  comment  final  long  recordNumber  	projects/Csv9/src/main/java/org/apache/commons/csv/CSVRecord.java	0.24253562503633297	57	57	1	replace	this.values  =  values.toArray(new  String[recordNumber]);	      	non-compiled	[CE]  illegal  start  of  type	8	None	replace
144	[BUG]  [BUGGY]  for(int  i  =  0,  len  =  isNumber();  i  <  values.length;  ++i)  {  if(values[i]!=  null)  {  return  values[i].toString();  }  [CE]  illegal  start  of  type  [FE]            NullPointerException    [CONTEXT]      [BUGGY]  for(int  i  =  0,  len  =  isNumber();  i  <  values.length;  ++i)  {  if(values[i]!=  null)  {  return  values[i].toString();  }  [BUGGY]      [CLASS]  CSVRecord  [METHOD]  <init>  [RETURN_TYPE]  String,long)  String[]  values  Integer>  mapping  String  comment  final  long  recordNumber  	projects/Csv9/src/main/java/org/apache/commons/csv/CSVRecord.java	0.24253562503633297	57	57	1	replace	for(int  i  =  0,  len  =  isNumber();  i  <  values.length;  ++i)  {  if(values[i]!=  null)  {  return  values[i].toString();  }	  for(int    i    =    0,    isNumber();    i    <    values.length;    ++i)    {    if(values[i]!=    null)    {    return    values[i].toString();    }    	non-compiled	[CE]  illegal  start  of  type	17	None	replace
145	[BUG]  [BUGGY]  for(int  i  =  0,  size  =  values.length;  i  <  size;  ++i)  {  if(values[i]!=  null)  {  return  values[i].toString();  }  [CE]  illegal  start  of  type  [FE]              NullPointerException    [CONTEXT]      [BUGGY]  for(int  i  =  0,  size  =  values.length;  i  <  size;  ++i)  {  if(values[i]!=  null)  {  return  values[i].toString();  }  [BUGGY]      [CLASS]  CSVRecord  [METHOD]  <init>  [RETURN_TYPE]  String,long)  String[]  values  Integer>  mapping  String  comment  final  long  recordNumber  	projects/Csv9/src/main/java/org/apache/commons/csv/CSVRecord.java	0.24253562503633297	57	57	1	replace	for(int  i  =  0,  size  =  values.length;  i  <  size;  ++i)  {  if(values[i]!=  null)  {  return  values[i].toString();  }	  for(int    i    =    0,    isNumber();    i    <    values.length;    ++i)    {    if(values[i]!=    null)    {    return    values[i].toString();    }    	non-compiled	[CE]  illegal  start  of  type	17	None	replace
146	[BUG]  [BUGGY]  int  i  =  0,  isNumber();  i  <  values.length;  ++i)  {  if(values[i]!=  null)  {  return  values[i].toString();  }  [CE]  illegal  start  of  type  [FE]                NullPointerException    [CONTEXT]      [BUGGY]  int  i  =  0,  isNumber();  i  <  values.length;  ++i)  {  if(values[i]!=  null)  {  return  values[i].toString();  }  [BUGGY]      [CLASS]  CSVRecord  [METHOD]  <init>  [RETURN_TYPE]  String,long)  String[]  values  Integer>  mapping  String  comment  final  long  recordNumber  	projects/Csv9/src/main/java/org/apache/commons/csv/CSVRecord.java	0.24253562503633297	57	57	1	replace	int  i  =  0,  isNumber();  i  <  values.length;  ++i)  {  if(values[i]!=  null)  {  return  values[i].toString();  }	  for(int    i    =    0,    isNumber();    i    <    values.length;    ++i)    {    if(values[i]!=    null)    {    return    values[i].toString();    }    	non-compiled	[CE]  illegal  start  of  type	17	None	replace
147	[BUG]  [BUGGY]  safeLinkedList  <  String>  values  =  new  LinkedList  <  String>(values.length);  for(int  i=0;  i  <  values.length;  i++)  {  values[i]  =  values[i];  }  [CE]  illegal  start  of  type  [FE]                  NullPointerException    [CONTEXT]      [BUGGY]  safeLinkedList  <  String>  values  =  new  LinkedList  <  String>(values.length);  for(int  i=0;  i  <  values.length;  i++)  {  values[i]  =  values[i];  }  [BUGGY]      [CLASS]  CSVRecord  [METHOD]  <init>  [RETURN_TYPE]  String,long)  String[]  values  Integer>  mapping  String  comment  final  long  recordNumber  	projects/Csv9/src/main/java/org/apache/commons/csv/CSVRecord.java	0.24253562503633297	57	57	1	replace	safeLinkedList  <  String>  values  =  new  LinkedList  <  String>(values.length);  for(int  i=0;  i  <  values.length;  i++)  {  values[i]  =  values[i];  }	  if(values    ==    null)    {    values    =    new    String[values.length];    for(int    i=0;    i    <    values.length;    i++)    {    values[i]    =    values[i];    }    	non-compiled	[CE]  illegal  start  of  type	14	None	replace
148	[BUG]  [BUGGY]  safeLinkedList  <  String>  values  =  new  LinkedList  <  String>(values.length);  for(int  i=0;  i  <  values.length;  i++)  {  values[i]  =  value[i];  }  [CE]  illegal  start  of  type  [FE]                    NullPointerException    [CONTEXT]      [BUGGY]  safeLinkedList  <  String>  values  =  new  LinkedList  <  String>(values.length);  for(int  i=0;  i  <  values.length;  i++)  {  values[i]  =  value[i];  }  [BUGGY]      [CLASS]  CSVRecord  [METHOD]  <init>  [RETURN_TYPE]  String,long)  String[]  values  Integer>  mapping  String  comment  final  long  recordNumber  	projects/Csv9/src/main/java/org/apache/commons/csv/CSVRecord.java	0.24253562503633297	57	57	1	replace	safeLinkedList  <  String>  values  =  new  LinkedList  <  String>(values.length);  for(int  i=0;  i  <  values.length;  i++)  {  values[i]  =  value[i];  }	  if(values    ==    null)    {    values    =    new    String[values.length];    for(int    i=0;    i    <    values.length;    i++)    {    values[i]    =    values[i];    }    	non-compiled	[CE]  illegal  start  of  type	14	None	replace
149	[BUG]  [BUGGY]  safeLinkedList  <  String>  values  =  new  LinkedList  <  String>(values.length);  [CE]  illegal  start  of  type  [FE]                      NullPointerException    [CONTEXT]      [BUGGY]  safeLinkedList  <  String>  values  =  new  LinkedList  <  String>(values.length);  [BUGGY]      [CLASS]  CSVRecord  [METHOD]  <init>  [RETURN_TYPE]  String,long)  String[]  values  Integer>  mapping  String  comment  final  long  recordNumber  	projects/Csv9/src/main/java/org/apache/commons/csv/CSVRecord.java	0.24253562503633297	57	57	1	replace	safeLinkedList  <  String>  values  =  new  LinkedList  <  String>(values.length);	  if(values    ==    null)    {    values    =    new    String[values.length];    for(int    i=0;    i    <    values.length;    i++)    {    values[i]    =    values[i];    }    	non-compiled	[CE]  illegal  start  of  type	14	None	replace
150	[BUG]  [BUGGY]  safeLinkedList  <  String>  values  =  new  LinkedList  <  String>(values.length);  for(int  i=0;  i  <  values.length;  i++)  {  values[i]  =  null;  }  [CE]  illegal  start  of  type  [FE]                        NullPointerException    [CONTEXT]      [BUGGY]  safeLinkedList  <  String>  values  =  new  LinkedList  <  String>(values.length);  for(int  i=0;  i  <  values.length;  i++)  {  values[i]  =  null;  }  [BUGGY]      [CLASS]  CSVRecord  [METHOD]  <init>  [RETURN_TYPE]  String,long)  String[]  values  Integer>  mapping  String  comment  final  long  recordNumber  	projects/Csv9/src/main/java/org/apache/commons/csv/CSVRecord.java	0.24253562503633297	57	57	1	replace	safeLinkedList  <  String>  values  =  new  LinkedList  <  String>(values.length);  for(int  i=0;  i  <  values.length;  i++)  {  values[i]  =  null;  }	  if(values    ==    null)    {    values    =    new    String[values.length];    for(int    i=0;    i    <    values.length;    i++)    {    values[i]    =    values[i];    }    	non-compiled	[CE]  illegal  start  of  type	14	None	replace
151	[BUG]  [BUGGY]  safeLinkedList  <  String>  values  =  new  LinkedList  <  String>(values.length);  for(int  i=0;  i  <  values.length;  i++)  {  values[i]  =  values[i].toLowerCase();  }  [CE]  illegal  start  of  type  [FE]                          NullPointerException    [CONTEXT]      [BUGGY]  safeLinkedList  <  String>  values  =  new  LinkedList  <  String>(values.length);  for(int  i=0;  i  <  values.length;  i++)  {  values[i]  =  values[i].toLowerCase();  }  [BUGGY]      [CLASS]  CSVRecord  [METHOD]  <init>  [RETURN_TYPE]  String,long)  String[]  values  Integer>  mapping  String  comment  final  long  recordNumber  	projects/Csv9/src/main/java/org/apache/commons/csv/CSVRecord.java	0.24253562503633297	57	57	1	replace	safeLinkedList  <  String>  values  =  new  LinkedList  <  String>(values.length);  for(int  i=0;  i  <  values.length;  i++)  {  values[i]  =  values[i].toLowerCase();  }	  if(values    ==    null)    {    values    =    new    String[values.length];    for(int    i=0;    i    <    values.length;    i++)    {    values[i]    =    values[i];    }    	non-compiled	[CE]  illegal  start  of  type	14	None	replace
152	[BUG]  [BUGGY]  safeLinkedList  <  String>  values  =  new  LinkedList  <  String>(values.length);  for(int  i=0;  i  <  values.length;  i++)  {  values[i]  =  values[i].toString();  }  [CE]  illegal  start  of  type  [FE]                            NullPointerException    [CONTEXT]      [BUGGY]  safeLinkedList  <  String>  values  =  new  LinkedList  <  String>(values.length);  for(int  i=0;  i  <  values.length;  i++)  {  values[i]  =  values[i].toString();  }  [BUGGY]      [CLASS]  CSVRecord  [METHOD]  <init>  [RETURN_TYPE]  String,long)  String[]  values  Integer>  mapping  String  comment  final  long  recordNumber  	projects/Csv9/src/main/java/org/apache/commons/csv/CSVRecord.java	0.24253562503633297	57	57	1	replace	safeLinkedList  <  String>  values  =  new  LinkedList  <  String>(values.length);  for(int  i=0;  i  <  values.length;  i++)  {  values[i]  =  values[i].toString();  }	  if(values    ==    null)    {    values    =    new    String[values.length];    for(int    i=0;    i    <    values.length;    i++)    {    values[i]    =    values[i];    }    	non-compiled	[CE]  illegal  start  of  type	14	None	replace
153	[BUG]  [BUGGY]  safeLinkedList  <  String>  values  =  new  LinkedList  <  String>(values.length);  for(int  i=1;  i  <  values.length;  i++)  {  values[i]  =  values[i];  }  [CE]  illegal  start  of  type  [FE]                              NullPointerException    [CONTEXT]      [BUGGY]  safeLinkedList  <  String>  values  =  new  LinkedList  <  String>(values.length);  for(int  i=1;  i  <  values.length;  i++)  {  values[i]  =  values[i];  }  [BUGGY]      [CLASS]  CSVRecord  [METHOD]  <init>  [RETURN_TYPE]  String,long)  String[]  values  Integer>  mapping  String  comment  final  long  recordNumber  	projects/Csv9/src/main/java/org/apache/commons/csv/CSVRecord.java	0.24253562503633297	57	57	1	replace	safeLinkedList  <  String>  values  =  new  LinkedList  <  String>(values.length);  for(int  i=1;  i  <  values.length;  i++)  {  values[i]  =  values[i];  }	  if(values    ==    null)    {    values    =    new    String[values.length];    for(int    i=0;    i    <    values.length;    i++)    {    values[i]    =    values[i];    }    	non-compiled	[CE]  illegal  start  of  type	14	None	replace
154	[BUG]  [BUGGY]  NullPointerException.println( "Failed  to  parse  values: "+values.size());  [CE]  illegal  start  of  type  [FE]                    NullPointerException    [CONTEXT]      [BUGGY]  NullPointerException.println( "Failed  to  parse  values: "+values.size());  [BUGGY]      [CLASS]  CSVRecord  [METHOD]  <init>  [RETURN_TYPE]  String,long)  String[]  values  Integer>  mapping  String  comment  final  long  recordNumber  	projects/Csv9/src/main/java/org/apache/commons/csv/CSVRecord.java	0.24253562503633297	57	57	1	replace	NullPointerException.println( "Failed  to  parse  values: "+values.size());	  if(values    ==    null)    {    for(int    i    =    0,    is    =    values.size();    i    <    is.size();    i++)    {    values[i]    =    values[i];    }    	non-compiled	[CE]  illegal  start  of  type	7	None	replace
155	[BUG]  [BUGGY]  NullPointerException.println( "Unable  to  parse  values: "+values.size());  [CE]  illegal  start  of  type  [FE]                      NullPointerException    [CONTEXT]      [BUGGY]  NullPointerException.println( "Unable  to  parse  values: "+values.size());  [BUGGY]      [CLASS]  CSVRecord  [METHOD]  <init>  [RETURN_TYPE]  String,long)  String[]  values  Integer>  mapping  String  comment  final  long  recordNumber  	projects/Csv9/src/main/java/org/apache/commons/csv/CSVRecord.java	0.24253562503633297	57	57	1	replace	NullPointerException.println( "Unable  to  parse  values: "+values.size());	  if(values    ==    null)    {    for(int    i    =    0,    is    =    values.size();    i    <    is.size();    i++)    {    values[i]    =    values[i];    }    	non-compiled	[CE]  illegal  start  of  type	7	None	replace
156	[BUG]  [BUGGY]  NullPointerException.println( "Unable  to  parse  values: "  +  values.toString());  [CE]  illegal  start  of  type  [FE]                        NullPointerException    [CONTEXT]      [BUGGY]  NullPointerException.println( "Unable  to  parse  values: "  +  values.toString());  [BUGGY]      [CLASS]  CSVRecord  [METHOD]  <init>  [RETURN_TYPE]  String,long)  String[]  values  Integer>  mapping  String  comment  final  long  recordNumber  	projects/Csv9/src/main/java/org/apache/commons/csv/CSVRecord.java	0.24253562503633297	57	57	1	replace	NullPointerException.println( "Unable  to  parse  values: "  +  values.toString());	  if(values    ==    null)    {    for(int    i    =    0,    is    =    values.size();    i    <    is.size();    i++)    {    values[i]    =    values[i];    }    	non-compiled	[CE]  illegal  start  of  type	7	None	replace
157	[BUG]  [BUGGY]  if(values!=  null)  {  values  =  new  String[size()  ];  System.arraycopy(values,  0,  values,  0,  values.length);  }  [CE]  illegal  start  of  type  [FE]          NullPointerException    [CONTEXT]      [BUGGY]  if(values!=  null)  {  values  =  new  String[size()  ];  System.arraycopy(values,  0,  values,  0,  values.length);  }  [BUGGY]      [CLASS]  CSVRecord  [METHOD]  <init>  [RETURN_TYPE]  String,long)  String[]  values  Integer>  mapping  String  comment  final  long  recordNumber  	projects/Csv9/src/main/java/org/apache/commons/csv/CSVRecord.java	0.24253562503633297	57	57	1	replace	if(values!=  null)  {  values  =  new  String[size()  ];  System.arraycopy(values,  0,  values,  0,  values.length);  }	  if(values    ==    null)    {    values    =    new    String[values.length];    System.arraycopy(values,    0,    values,    0,    values.length);    }    	non-compiled	[CE]  illegal  start  of  type	10	None	replace
158	[BUG]  [BUGGY]  if(values  ==  null)  {  values  =  new  String[values.length  +  1];  System.arraycopy(values,  0,  values,  0,  values.length);  }  [CE]  illegal  start  of  type  [FE]            NullPointerException    [CONTEXT]      [BUGGY]  if(values  ==  null)  {  values  =  new  String[values.length  +  1];  System.arraycopy(values,  0,  values,  0,  values.length);  }  [BUGGY]      [CLASS]  CSVRecord  [METHOD]  <init>  [RETURN_TYPE]  String,long)  String[]  values  Integer>  mapping  String  comment  final  long  recordNumber  	projects/Csv9/src/main/java/org/apache/commons/csv/CSVRecord.java	0.24253562503633297	57	57	1	replace	if(values  ==  null)  {  values  =  new  String[values.length  +  1];  System.arraycopy(values,  0,  values,  0,  values.length);  }	  if(values    ==    null)    {    values    =    new    String[values.length];    System.arraycopy(values,    0,    values,    0,    values.length);    }    	non-compiled	[CE]  illegal  start  of  type	10	None	replace
159	[BUG]  [BUGGY]  return  values  >=  null?  null  :  values.toArray(new  String[values.size()  ]);  [CE]  illegal  start  of  type  [FE]        NullPointerException    [CONTEXT]      [BUGGY]  return  values  >=  null?  null  :  values.toArray(new  String[values.size()  ]);  [BUGGY]      [CLASS]  CSVRecord  [METHOD]  <init>  [RETURN_TYPE]  String,long)  String[]  values  Integer>  mapping  String  comment  final  long  recordNumber  	projects/Csv9/src/main/java/org/apache/commons/csv/CSVRecord.java	0.24253562503633297	57	57	1	replace	return  values  >=  null?  null  :  values.toArray(new  String[values.size()  ]);	  return    values.toArray(new    String[values.size()    ]);    	non-compiled	[CE]  illegal  start  of  type	9	None	replace
160	[BUG]  [BUGGY]  for(int  i  =  0,  len  =  isNumber();  i  <  values.length;  ++i)  {  if(values[i]  ==  null)  {  return  values[i].toString();  }  [CE]  illegal  start  of  type  [FE]              NullPointerException    [CONTEXT]      [BUGGY]  for(int  i  =  0,  len  =  isNumber();  i  <  values.length;  ++i)  {  if(values[i]  ==  null)  {  return  values[i].toString();  }  [BUGGY]      [CLASS]  CSVRecord  [METHOD]  <init>  [RETURN_TYPE]  String,long)  String[]  values  Integer>  mapping  String  comment  final  long  recordNumber  	projects/Csv9/src/main/java/org/apache/commons/csv/CSVRecord.java	0.24253562503633297	57	57	1	replace	for(int  i  =  0,  len  =  isNumber();  i  <  values.length;  ++i)  {  if(values[i]  ==  null)  {  return  values[i].toString();  }	  for(int    i    =    0,    isNumber();    i    <    values.length;    ++i)    {    if(values[i]    ==    null)    {    return    values[i].toString();    }    	non-compiled	[CE]  illegal  start  of  type	18	None	replace
161	[BUG]  [BUGGY]  for(int  i  =  0,  size  =  values.length;  i  <  size;  ++i)  {  if(values[i]  ==  null)  {  return  values[i].toString();  }  [CE]  illegal  start  of  type  [FE]                NullPointerException    [CONTEXT]      [BUGGY]  for(int  i  =  0,  size  =  values.length;  i  <  size;  ++i)  {  if(values[i]  ==  null)  {  return  values[i].toString();  }  [BUGGY]      [CLASS]  CSVRecord  [METHOD]  <init>  [RETURN_TYPE]  String,long)  String[]  values  Integer>  mapping  String  comment  final  long  recordNumber  	projects/Csv9/src/main/java/org/apache/commons/csv/CSVRecord.java	0.24253562503633297	57	57	1	replace	for(int  i  =  0,  size  =  values.length;  i  <  size;  ++i)  {  if(values[i]  ==  null)  {  return  values[i].toString();  }	  for(int    i    =    0,    isNumber();    i    <    values.length;    ++i)    {    if(values[i]    ==    null)    {    return    values[i].toString();    }    	non-compiled	[CE]  illegal  start  of  type	18	None	replace
162	[BUG]  [BUGGY]  for(int  i  =  0,  hashCode();  i  <  values.length;  ++i)  {  if(values[i]  ==  null)  {  return  values[i].toString();  }  [CE]  illegal  start  of  type  [FE]                  NullPointerException    [CONTEXT]      [BUGGY]  for(int  i  =  0,  hashCode();  i  <  values.length;  ++i)  {  if(values[i]  ==  null)  {  return  values[i].toString();  }  [BUGGY]      [CLASS]  CSVRecord  [METHOD]  <init>  [RETURN_TYPE]  String,long)  String[]  values  Integer>  mapping  String  comment  final  long  recordNumber  	projects/Csv9/src/main/java/org/apache/commons/csv/CSVRecord.java	0.24253562503633297	57	57	1	replace	for(int  i  =  0,  hashCode();  i  <  values.length;  ++i)  {  if(values[i]  ==  null)  {  return  values[i].toString();  }	  for(int    i    =    0,    isNumber();    i    <    values.length;    ++i)    {    if(values[i]    ==    null)    {    return    values[i].toString();    }    	non-compiled	[CE]  illegal  start  of  type	18	None	replace
163	[BUG]  [BUGGY]  return(String[])values.toArray(new  String[values.length],  comment);  [CE]  illegal  start  of  type  [FE]            NullPointerException    [CONTEXT]      [BUGGY]  return(String[])values.toArray(new  String[values.length],  comment);  [BUGGY]      [CLASS]  CSVRecord  [METHOD]  <init>  [RETURN_TYPE]  String,long)  String[]  values  Integer>  mapping  String  comment  final  long  recordNumber  	projects/Csv9/src/main/java/org/apache/commons/csv/CSVRecord.java	0.24253562503633297	57	57	1	replace	return(String[])values.toArray(new  String[values.length],  comment);	  return(String[])values.toArray(new    String[values.length]);    	non-compiled	[CE]  illegal  start  of  type	3	None	replace
164	[BUG]  [BUGGY]  int  i  =  0,  isNumber();  ++i)  {  if(values[i]  ==  null)  {  return  values[i].toString();  }  [CE]  illegal  start  of  type  [FE]              NullPointerException    [CONTEXT]      [BUGGY]  int  i  =  0,  isNumber();  ++i)  {  if(values[i]  ==  null)  {  return  values[i].toString();  }  [BUGGY]      [CLASS]  CSVRecord  [METHOD]  <init>  [RETURN_TYPE]  String,long)  String[]  values  Integer>  mapping  String  comment  final  long  recordNumber  	projects/Csv9/src/main/java/org/apache/commons/csv/CSVRecord.java	0.24253562503633297	57	57	1	replace	int  i  =  0,  isNumber();  ++i)  {  if(values[i]  ==  null)  {  return  values[i].toString();  }	  for(int    i    =    0,    isNumber();    i    <    values.length;    ++i)    {    if(values[i]    ==    null)    {    return    values[i].toString();    }    	non-compiled	[CE]  illegal  start  of  type	18	None	replace
165	[BUG]  [BUGGY]  for(int  i  =  0,  len  =  values.length;  ++i)  {  if(values[i]  ==  null)  {  return  values[i].toString();  }  [CE]  illegal  start  of  type  [FE]                NullPointerException    [CONTEXT]      [BUGGY]  for(int  i  =  0,  len  =  values.length;  ++i)  {  if(values[i]  ==  null)  {  return  values[i].toString();  }  [BUGGY]      [CLASS]  CSVRecord  [METHOD]  <init>  [RETURN_TYPE]  String,long)  String[]  values  Integer>  mapping  String  comment  final  long  recordNumber  	projects/Csv9/src/main/java/org/apache/commons/csv/CSVRecord.java	0.24253562503633297	57	57	1	replace	for(int  i  =  0,  len  =  values.length;  ++i)  {  if(values[i]  ==  null)  {  return  values[i].toString();  }	  for(int    i    =    0,    isNumber();    i    <    values.length;    ++i)    {    if(values[i]    ==    null)    {    return    values[i].toString();    }    	non-compiled	[CE]  illegal  start  of  type	18	None	replace
166	[BUG]  [BUGGY]  int  i  =  0,  isNumber();  i  <  values.length;  ++i)  {  if(values[i]  ==  null)  {  return  values[i].toString();  }  [CE]  illegal  start  of  type  [FE]                  NullPointerException    [CONTEXT]      [BUGGY]  int  i  =  0,  isNumber();  i  <  values.length;  ++i)  {  if(values[i]  ==  null)  {  return  values[i].toString();  }  [BUGGY]      [CLASS]  CSVRecord  [METHOD]  <init>  [RETURN_TYPE]  String,long)  String[]  values  Integer>  mapping  String  comment  final  long  recordNumber  	projects/Csv9/src/main/java/org/apache/commons/csv/CSVRecord.java	0.24253562503633297	57	57	1	replace	int  i  =  0,  isNumber();  i  <  values.length;  ++i)  {  if(values[i]  ==  null)  {  return  values[i].toString();  }	  for(int    i    =    0,    isNumber();    i    <    values.length;    ++i)    {    if(values[i]    ==    null)    {    return    values[i].toString();    }    	non-compiled	[CE]  illegal  start  of  type	18	None	replace
167	[BUG]  [BUGGY]  this.values  =  values!=  null?  values.toArray(new  String[values.size()  ]):  null;  [CE]  illegal  start  of  type  [FE]            NullPointerException    [CONTEXT]      [BUGGY]  this.values  =  values!=  null?  values.toArray(new  String[values.size()  ]):  null;  [BUGGY]      [CLASS]  CSVRecord  [METHOD]  <init>  [RETURN_TYPE]  String,long)  String[]  values  Integer>  mapping  String  comment  final  long  recordNumber  	projects/Csv9/src/main/java/org/apache/commons/csv/CSVRecord.java	0.24253562503633297	57	57	1	replace	this.values  =  values!=  null?  values.toArray(new  String[values.size()  ]):  null;	  this.values    =    values.toArray(new    String[values.size()    ]);    	non-compiled	[CE]  illegal  start  of  type	11	None	replace
168	[BUG]  [BUGGY]  int  i  =  0,  isNumber();  ++i)  {  if(values[i]  ==  null)  {  return  values[i];  }  [CE]  illegal  start  of  type  [FE]          NullPointerException    [CONTEXT]      [BUGGY]  int  i  =  0,  isNumber();  ++i)  {  if(values[i]  ==  null)  {  return  values[i];  }  [BUGGY]      [CLASS]  CSVRecord  [METHOD]  <init>  [RETURN_TYPE]  String,long)  String[]  values  Integer>  mapping  String  comment  final  long  recordNumber  	projects/Csv9/src/main/java/org/apache/commons/csv/CSVRecord.java	0.24253562503633297	57	57	1	replace	int  i  =  0,  isNumber();  ++i)  {  if(values[i]  ==  null)  {  return  values[i];  }	  for(int    i    =    0,    isNumber();    i    <    values.length;    ++i)    {    if(values[i]    ==    null)    {    return    values[i];    }    	non-compiled	[CE]  illegal  start  of  type	16	None	replace
169	[BUG]  [BUGGY]  for(int  i  =  0,  len  =  values.length;  ++i)  {  if(values[i]  ==  null)  {  return  values[i];  }  [CE]  illegal  start  of  type  [FE]            NullPointerException    [CONTEXT]      [BUGGY]  for(int  i  =  0,  len  =  values.length;  ++i)  {  if(values[i]  ==  null)  {  return  values[i];  }  [BUGGY]      [CLASS]  CSVRecord  [METHOD]  <init>  [RETURN_TYPE]  String,long)  String[]  values  Integer>  mapping  String  comment  final  long  recordNumber  	projects/Csv9/src/main/java/org/apache/commons/csv/CSVRecord.java	0.24253562503633297	57	57	1	replace	for(int  i  =  0,  len  =  values.length;  ++i)  {  if(values[i]  ==  null)  {  return  values[i];  }	  for(int    i    =    0,    isNumber();    i    <    values.length;    ++i)    {    if(values[i]    ==    null)    {    return    values[i];    }    	non-compiled	[CE]  illegal  start  of  type	16	None	replace
170	[BUG]  [BUGGY]  for(int  i  =  0,  count  =  values.length;  ++i)  {  if(values[i]  ==  null)  {  return  values[i];  }  [CE]  illegal  start  of  type  [FE]              NullPointerException    [CONTEXT]      [BUGGY]  for(int  i  =  0,  count  =  values.length;  ++i)  {  if(values[i]  ==  null)  {  return  values[i];  }  [BUGGY]      [CLASS]  CSVRecord  [METHOD]  <init>  [RETURN_TYPE]  String,long)  String[]  values  Integer>  mapping  String  comment  final  long  recordNumber  	projects/Csv9/src/main/java/org/apache/commons/csv/CSVRecord.java	0.24253562503633297	57	57	1	replace	for(int  i  =  0,  count  =  values.length;  ++i)  {  if(values[i]  ==  null)  {  return  values[i];  }	  for(int    i    =    0,    isNumber();    i    <    values.length;    ++i)    {    if(values[i]    ==    null)    {    return    values[i];    }    	non-compiled	[CE]  illegal  start  of  type	16	None	replace
171	[BUG]  [BUGGY]  this.recordNumber  =  recordNumber;  [CE]  illegal  start  of  type  [FE]                NullPointerException    [CONTEXT]      [BUGGY]  this.recordNumber  =  recordNumber;  [BUGGY]      [CLASS]  CSVRecord  [METHOD]  <init>  [RETURN_TYPE]  String,long)  String[]  values  Integer>  mapping  String  comment  final  long  recordNumber  	projects/Csv9/src/main/java/org/apache/commons/csv/CSVRecord.java	0.24253562503633297	57	57	1	replace	this.recordNumber  =  recordNumber;	  if(values    ==    null)    {    for(int    i    =    0;    i    <    values.length;    i++)    {    values[i]    =    values[i];    }    	non-compiled	[CE]  illegal  start  of  type	5	None	replace
172	[BUG]  [BUGGY]  this.recordNumber  =  recordNumber(values,  null);  [CE]  illegal  start  of  type  [FE]                  NullPointerException    [CONTEXT]      [BUGGY]  this.recordNumber  =  recordNumber(values,  null);  [BUGGY]      [CLASS]  CSVRecord  [METHOD]  <init>  [RETURN_TYPE]  String,long)  String[]  values  Integer>  mapping  String  comment  final  long  recordNumber  	projects/Csv9/src/main/java/org/apache/commons/csv/CSVRecord.java	0.24253562503633297	57	57	1	replace	this.recordNumber  =  recordNumber(values,  null);	  if(values    ==    null)    {    for(int    i    =    0;    i    <    values.length;    i++)    {    values[i]    =    values[i];    }    	non-compiled	[CE]  illegal  start  of  type	5	None	replace
173	[BUG]  [BUGGY]  Context.codeBug();  [CE]  illegal  start  of  type  [FE]                    NullPointerException    [CONTEXT]      [BUGGY]  Context.codeBug();  [BUGGY]      [CLASS]  CSVRecord  [METHOD]  <init>  [RETURN_TYPE]  String,long)  String[]  values  Integer>  mapping  String  comment  final  long  recordNumber  	projects/Csv9/src/main/java/org/apache/commons/csv/CSVRecord.java	0.24253562503633297	57	57	1	replace	Context.codeBug();	  if(values    ==    null)    {    for(int    i    =    0;    i    <    values.length;    i++)    {    values[i]    =    values[i];    }    	non-compiled	[CE]  illegal  start  of  type	5	None	replace
174	[BUG]  [BUGGY]  this.recordNumber  =  new  String[size()  ];  [CE]  illegal  start  of  type  [FE]                      NullPointerException    [CONTEXT]      [BUGGY]  this.recordNumber  =  new  String[size()  ];  [BUGGY]      [CLASS]  CSVRecord  [METHOD]  <init>  [RETURN_TYPE]  String,long)  String[]  values  Integer>  mapping  String  comment  final  long  recordNumber  	projects/Csv9/src/main/java/org/apache/commons/csv/CSVRecord.java	0.24253562503633297	57	57	1	replace	this.recordNumber  =  new  String[size()  ];	  if(values    ==    null)    {    for(int    i    =    0;    i    <    values.length;    i++)    {    values[i]    =    values[i];    }    	non-compiled	[CE]  illegal  start  of  type	5	None	replace
175	[BUG]  [BUGGY]  this.recordNumber  =  recordNumber();  [CE]  illegal  start  of  type  [FE]                        NullPointerException    [CONTEXT]      [BUGGY]  this.recordNumber  =  recordNumber();  [BUGGY]      [CLASS]  CSVRecord  [METHOD]  <init>  [RETURN_TYPE]  String,long)  String[]  values  Integer>  mapping  String  comment  final  long  recordNumber  	projects/Csv9/src/main/java/org/apache/commons/csv/CSVRecord.java	0.24253562503633297	57	57	1	replace	this.recordNumber  =  recordNumber();	  if(values    ==    null)    {    for(int    i    =    0;    i    <    values.length;    i++)    {    values[i]    =    values[i];    }    	non-compiled	[CE]  illegal  start  of  type	5	None	replace
176	[BUG]  [BUGGY]  return(String[])values.toArray(new  String[values.size()  ],  comment);  [CE]  illegal  start  of  type  [FE]        NullPointerException    [CONTEXT]      [BUGGY]  return(String[])values.toArray(new  String[values.size()  ],  comment);  [BUGGY]      [CLASS]  CSVRecord  [METHOD]  <init>  [RETURN_TYPE]  String,long)  String[]  values  Integer>  mapping  String  comment  final  long  recordNumber  	projects/Csv9/src/main/java/org/apache/commons/csv/CSVRecord.java	0.24253562503633297	57	57	1	replace	return(String[])values.toArray(new  String[values.size()  ],  comment);	  return(String[])values.toArray(new    String[values.size()    ]);    	non-compiled	[CE]  illegal  start  of  type	1	None	replace
177	[BUG]  [BUGGY]  return(String[])values.toArray(new  String[this.values.size()  ]);  [CE]  illegal  start  of  type  [FE]          NullPointerException    [CONTEXT]      [BUGGY]  return(String[])values.toArray(new  String[this.values.size()  ]);  [BUGGY]      [CLASS]  CSVRecord  [METHOD]  <init>  [RETURN_TYPE]  String,long)  String[]  values  Integer>  mapping  String  comment  final  long  recordNumber  	projects/Csv9/src/main/java/org/apache/commons/csv/CSVRecord.java	0.24253562503633297	57	57	1	replace	return(String[])values.toArray(new  String[this.values.size()  ]);	  return(String[])values.toArray(new    String[values.size()    ]);    	non-compiled	[CE]  illegal  start  of  type	1	None	replace
178	[BUG]  [BUGGY]  NullPointerException.println( "CSV  values  cannot  be  deprecated. ");  [CE]  illegal  start  of  type  [FE]                NullPointerException    [CONTEXT]      [BUGGY]  NullPointerException.println( "CSV  values  cannot  be  deprecated. ");  [BUGGY]      [CLASS]  CSVRecord  [METHOD]  <init>  [RETURN_TYPE]  String,long)  String[]  values  Integer>  mapping  String  comment  final  long  recordNumber  	projects/Csv9/src/main/java/org/apache/commons/csv/CSVRecord.java	0.24253562503633297	57	57	1	replace	NullPointerException.println( "CSV  values  cannot  be  deprecated. ");	  if(values    ==    null)    {    values    =    new    String[values.length];    for(int    i    =    0,    len    =    values.length;    i    <    len;    ++i)    {    values[i]    =    values[i];    }    	non-compiled	[CE]  illegal  start  of  type	13	None	replace
179	[BUG]  [BUGGY]  if(values  ==  null)  {  values  =  new  String[size()  ];  System.arraycopy(values,  0,  values,  0,  values.length);  }  [CE]  illegal  start  of  type  [FE]          NullPointerException    [CONTEXT]      [BUGGY]  if(values  ==  null)  {  values  =  new  String[size()  ];  System.arraycopy(values,  0,  values,  0,  values.length);  }  [BUGGY]      [CLASS]  CSVRecord  [METHOD]  <init>  [RETURN_TYPE]  String,long)  String[]  values  Integer>  mapping  String  comment  final  long  recordNumber  	projects/Csv9/src/main/java/org/apache/commons/csv/CSVRecord.java	0.24253562503633297	57	57	1	replace	if(values  ==  null)  {  values  =  new  String[size()  ];  System.arraycopy(values,  0,  values,  0,  values.length);  }	  if(values    ==    null)    {    values    =    new    String[values.length];    System.arraycopy(values,    0,    values,    0,    values.length);    }    	non-compiled	[CE]  illegal  start  of  type	10	None	replace
180	[BUG]  [BUGGY]  if(values!=  null)  {  values  =  new  String[values.length];  System.arraycopy(values,  0,  values,  1,  values.length);  }  [CE]  illegal  start  of  type  [FE]            NullPointerException    [CONTEXT]      [BUGGY]  if(values!=  null)  {  values  =  new  String[values.length];  System.arraycopy(values,  0,  values,  1,  values.length);  }  [BUGGY]      [CLASS]  CSVRecord  [METHOD]  <init>  [RETURN_TYPE]  String,long)  String[]  values  Integer>  mapping  String  comment  final  long  recordNumber  	projects/Csv9/src/main/java/org/apache/commons/csv/CSVRecord.java	0.24253562503633297	57	57	1	replace	if(values!=  null)  {  values  =  new  String[values.length];  System.arraycopy(values,  0,  values,  1,  values.length);  }	  if(values    ==    null)    {    values    =    new    String[values.length];    System.arraycopy(values,    0,    values,    0,    values.length);    }    	non-compiled	[CE]  illegal  start  of  type	10	None	replace
181	[BUG]  [BUGGY]  this.recordNumber  =  recordNumber(is,  values.length);  [CE]  illegal  start  of  type  [FE]              NullPointerException    [CONTEXT]      [BUGGY]  this.recordNumber  =  recordNumber(is,  values.length);  [BUGGY]      [CLASS]  CSVRecord  [METHOD]  <init>  [RETURN_TYPE]  String,long)  String[]  values  Integer>  mapping  String  comment  final  long  recordNumber  	projects/Csv9/src/main/java/org/apache/commons/csv/CSVRecord.java	0.24253562503633297	57	57	1	replace	this.recordNumber  =  recordNumber(is,  values.length);	  if(values    ==    null)    {    for(int    i    =    0,    is    =    values.length;    i    <    is.size();    ++i)    {    values[i]    =    values[i];    }    	non-compiled	[CE]  illegal  start  of  type	4	None	replace
182	[BUG]  [BUGGY]  this.recordNumber  =  recordNumber(is);  [CE]  illegal  start  of  type  [FE]                NullPointerException    [CONTEXT]      [BUGGY]  this.recordNumber  =  recordNumber(is);  [BUGGY]      [CLASS]  CSVRecord  [METHOD]  <init>  [RETURN_TYPE]  String,long)  String[]  values  Integer>  mapping  String  comment  final  long  recordNumber  	projects/Csv9/src/main/java/org/apache/commons/csv/CSVRecord.java	0.24253562503633297	57	57	1	replace	this.recordNumber  =  recordNumber(is);	  if(values    ==    null)    {    for(int    i    =    0,    is    =    values.length;    i    <    is.size();    ++i)    {    values[i]    =    values[i];    }    	non-compiled	[CE]  illegal  start  of  type	4	None	replace
183	[BUG]  [BUGGY]  this.recordNumber  =  recordNumber(values.length);  [CE]  illegal  start  of  type  [FE]                  NullPointerException    [CONTEXT]      [BUGGY]  this.recordNumber  =  recordNumber(values.length);  [BUGGY]      [CLASS]  CSVRecord  [METHOD]  <init>  [RETURN_TYPE]  String,long)  String[]  values  Integer>  mapping  String  comment  final  long  recordNumber  	projects/Csv9/src/main/java/org/apache/commons/csv/CSVRecord.java	0.24253562503633297	57	57	1	replace	this.recordNumber  =  recordNumber(values.length);	  if(values    ==    null)    {    for(int    i    =    0,    is    =    values.length;    i    <    is.size();    ++i)    {    values[i]    =    values[i];    }    	non-compiled	[CE]  illegal  start  of  type	4	None	replace
184	[BUG]  [BUGGY]  nisipTo(values.length))  {  for(int  i  =  0,  is  =  values.length;  i  <  is.size();  i++)  {  values[i]  =  values[i];  }  [CE]  illegal  start  of  type  [FE]          NullPointerException    [CONTEXT]      [BUGGY]  nisipTo(values.length))  {  for(int  i  =  0,  is  =  values.length;  i  <  is.size();  i++)  {  values[i]  =  values[i];  }  [BUGGY]      [CLASS]  CSVRecord  [METHOD]  <init>  [RETURN_TYPE]  String,long)  String[]  values  Integer>  mapping  String  comment  final  long  recordNumber  	projects/Csv9/src/main/java/org/apache/commons/csv/CSVRecord.java	0.24253562503633297	57	57	1	replace	nisipTo(values.length))  {  for(int  i  =  0,  is  =  values.length;  i  <  is.size();  i++)  {  values[i]  =  values[i];  }	  if(values    ==    null)    {    for(int    i    =    0,    is    =    values.length;    i    <    is.size();    i++)    {    values[i]    =    values[i];    }    	non-compiled	[CE]  illegal  start  of  type	2	None	replace
185	[BUG]  [BUGGY]  nisipTo(values.length))  {  for(int  i  =  0,  is  =  values.length;  i  <  is.size();  i++)  {  values[i]  =  value[i];  }  [CE]  illegal  start  of  type  [FE]            NullPointerException    [CONTEXT]      [BUGGY]  nisipTo(values.length))  {  for(int  i  =  0,  is  =  values.length;  i  <  is.size();  i++)  {  values[i]  =  value[i];  }  [BUGGY]      [CLASS]  CSVRecord  [METHOD]  <init>  [RETURN_TYPE]  String,long)  String[]  values  Integer>  mapping  String  comment  final  long  recordNumber  	projects/Csv9/src/main/java/org/apache/commons/csv/CSVRecord.java	0.24253562503633297	57	57	1	replace	nisipTo(values.length))  {  for(int  i  =  0,  is  =  values.length;  i  <  is.size();  i++)  {  values[i]  =  value[i];  }	  if(values    ==    null)    {    for(int    i    =    0,    is    =    values.length;    i    <    is.size();    i++)    {    values[i]    =    values[i];    }    	non-compiled	[CE]  illegal  start  of  type	2	None	replace
186	[BUG]  [BUGGY]  nisipTo(values.length))  {  for(int  i  =  0,  is  =  values.length;  i  <  is.size();  i++)  {  values[i]  =  null;  }  [CE]  illegal  start  of  type  [FE]              NullPointerException    [CONTEXT]      [BUGGY]  nisipTo(values.length))  {  for(int  i  =  0,  is  =  values.length;  i  <  is.size();  i++)  {  values[i]  =  null;  }  [BUGGY]      [CLASS]  CSVRecord  [METHOD]  <init>  [RETURN_TYPE]  String,long)  String[]  values  Integer>  mapping  String  comment  final  long  recordNumber  	projects/Csv9/src/main/java/org/apache/commons/csv/CSVRecord.java	0.24253562503633297	57	57	1	replace	nisipTo(values.length))  {  for(int  i  =  0,  is  =  values.length;  i  <  is.size();  i++)  {  values[i]  =  null;  }	  if(values    ==    null)    {    for(int    i    =    0,    is    =    values.length;    i    <    is.size();    i++)    {    values[i]    =    values[i];    }    	non-compiled	[CE]  illegal  start  of  type	2	None	replace
187	[BUG]  [BUGGY]  nisipTo(values.length))  {  for(int  i  =  0,  is  =  values.length;  i  <  is.size();  i++)  {  values[i]  =   " ";  }  [CE]  illegal  start  of  type  [FE]                NullPointerException    [CONTEXT]      [BUGGY]  nisipTo(values.length))  {  for(int  i  =  0,  is  =  values.length;  i  <  is.size();  i++)  {  values[i]  =   " ";  }  [BUGGY]      [CLASS]  CSVRecord  [METHOD]  <init>  [RETURN_TYPE]  String,long)  String[]  values  Integer>  mapping  String  comment  final  long  recordNumber  	projects/Csv9/src/main/java/org/apache/commons/csv/CSVRecord.java	0.24253562503633297	57	57	1	replace	nisipTo(values.length))  {  for(int  i  =  0,  is  =  values.length;  i  <  is.size();  i++)  {  values[i]  =   " ";  }	  if(values    ==    null)    {    for(int    i    =    0,    is    =    values.length;    i    <    is.size();    i++)    {    values[i]    =    values[i];    }    	non-compiled	[CE]  illegal  start  of  type	2	None	replace
188	[BUG]  [BUGGY]  nisipTo(values.length))  {  for(int  i  =  0,  is  =  values.length;  i  <  is.size();  i++)  {  values[i]  =  data[i];  }  [CE]  illegal  start  of  type  [FE]                  NullPointerException    [CONTEXT]      [BUGGY]  nisipTo(values.length))  {  for(int  i  =  0,  is  =  values.length;  i  <  is.size();  i++)  {  values[i]  =  data[i];  }  [BUGGY]      [CLASS]  CSVRecord  [METHOD]  <init>  [RETURN_TYPE]  String,long)  String[]  values  Integer>  mapping  String  comment  final  long  recordNumber  	projects/Csv9/src/main/java/org/apache/commons/csv/CSVRecord.java	0.24253562503633297	57	57	1	replace	nisipTo(values.length))  {  for(int  i  =  0,  is  =  values.length;  i  <  is.size();  i++)  {  values[i]  =  data[i];  }	  if(values    ==    null)    {    for(int    i    =    0,    is    =    values.length;    i    <    is.size();    i++)    {    values[i]    =    values[i];    }    	non-compiled	[CE]  illegal  start  of  type	2	None	replace
189	[BUG]  [BUGGY]  nisipTo(values.length))  {  for(int  i  =  0,  is  =  values.length;  i  <  is.size();  i++)  {  values[i]  =  new  String(values[i]);  }  [CE]  illegal  start  of  type  [FE]                    NullPointerException    [CONTEXT]      [BUGGY]  nisipTo(values.length))  {  for(int  i  =  0,  is  =  values.length;  i  <  is.size();  i++)  {  values[i]  =  new  String(values[i]);  }  [BUGGY]      [CLASS]  CSVRecord  [METHOD]  <init>  [RETURN_TYPE]  String,long)  String[]  values  Integer>  mapping  String  comment  final  long  recordNumber  	projects/Csv9/src/main/java/org/apache/commons/csv/CSVRecord.java	0.24253562503633297	57	57	1	replace	nisipTo(values.length))  {  for(int  i  =  0,  is  =  values.length;  i  <  is.size();  i++)  {  values[i]  =  new  String(values[i]);  }	  if(values    ==    null)    {    for(int    i    =    0,    is    =    values.length;    i    <    is.size();    i++)    {    values[i]    =    values[i];    }    	non-compiled	[CE]  illegal  start  of  type	2	None	replace
190	[BUG]  [BUGGY]  nisipTo(values.length))  {  for(int  i  =  0,  is  =  values.length;  i  <  is.size();  i++)  {  values[i]  =  getText();  }  [CE]  illegal  start  of  type  [FE]                      NullPointerException    [CONTEXT]      [BUGGY]  nisipTo(values.length))  {  for(int  i  =  0,  is  =  values.length;  i  <  is.size();  i++)  {  values[i]  =  getText();  }  [BUGGY]      [CLASS]  CSVRecord  [METHOD]  <init>  [RETURN_TYPE]  String,long)  String[]  values  Integer>  mapping  String  comment  final  long  recordNumber  	projects/Csv9/src/main/java/org/apache/commons/csv/CSVRecord.java	0.24253562503633297	57	57	1	replace	nisipTo(values.length))  {  for(int  i  =  0,  is  =  values.length;  i  <  is.size();  i++)  {  values[i]  =  getText();  }	  if(values    ==    null)    {    for(int    i    =    0,    is    =    values.length;    i    <    is.size();    i++)    {    values[i]    =    values[i];    }    	non-compiled	[CE]  illegal  start  of  type	2	None	replace
191	[BUG]  [BUGGY]  NullPointerException.println( "CSV  values  not  in  the  range  [ "  +  getClass().getName()  + "] ");  [CE]  illegal  start  of  type  [FE]                    NullPointerException    [CONTEXT]      [BUGGY]  NullPointerException.println( "CSV  values  not  in  the  range  [ "  +  getClass().getName()  + "] ");  [BUGGY]      [CLASS]  CSVRecord  [METHOD]  <init>  [RETURN_TYPE]  String,long)  String[]  values  Integer>  mapping  String  comment  final  long  recordNumber  	projects/Csv9/src/main/java/org/apache/commons/csv/CSVRecord.java	0.24253562503633297	57	57	1	replace	NullPointerException.println( "CSV  values  not  in  the  range  [ "  +  getClass().getName()  + "] ");	  if(values    ==    null)    {    for(int    i    =    0,    is    =    values.size();    i    <    is.size();    i++)    {    values[i]    =    values[i];    }    	non-compiled	[CE]  illegal  start  of  type	7	None	replace
192	[BUG]  [BUGGY]  NullPointerException.println( "CSV  values  not  in  the  range  [ "  +  getClass().getName()  + ") ");  [CE]  illegal  start  of  type  [FE]                      NullPointerException    [CONTEXT]      [BUGGY]  NullPointerException.println( "CSV  values  not  in  the  range  [ "  +  getClass().getName()  + ") ");  [BUGGY]      [CLASS]  CSVRecord  [METHOD]  <init>  [RETURN_TYPE]  String,long)  String[]  values  Integer>  mapping  String  comment  final  long  recordNumber  	projects/Csv9/src/main/java/org/apache/commons/csv/CSVRecord.java	0.24253562503633297	57	57	1	replace	NullPointerException.println( "CSV  values  not  in  the  range  [ "  +  getClass().getName()  + ") ");	  if(values    ==    null)    {    for(int    i    =    0,    is    =    values.size();    i    <    is.size();    i++)    {    values[i]    =    values[i];    }    	non-compiled	[CE]  illegal  start  of  type	7	None	replace
193	[BUG]  [BUGGY]  return  values!=  null?  values.toArray(new  String[values.size()  ]):  null;  [CE]  illegal  start  of  type  [FE]              NullPointerException    [CONTEXT]      [BUGGY]  return  values!=  null?  values.toArray(new  String[values.size()  ]):  null;  [BUGGY]      [CLASS]  CSVRecord  [METHOD]  <init>  [RETURN_TYPE]  String,long)  String[]  values  Integer>  mapping  String  comment  final  long  recordNumber  	projects/Csv9/src/main/java/org/apache/commons/csv/CSVRecord.java	0.24253562503633297	57	57	1	replace	return  values!=  null?  values.toArray(new  String[values.size()  ]):  null;	  if(values    ==    null)    {    return    values.toArray(new    String[values.size()    ]);    }    	non-compiled	[CE]  illegal  start  of  type	12	None	replace
194	[BUG]  [BUGGY]  return  values!=  null?  values.toArray(new  String[values.size()  ]):  new  String[values.size()  ];  [CE]  illegal  start  of  type  [FE]                NullPointerException    [CONTEXT]      [BUGGY]  return  values!=  null?  values.toArray(new  String[values.size()  ]):  new  String[values.size()  ];  [BUGGY]      [CLASS]  CSVRecord  [METHOD]  <init>  [RETURN_TYPE]  String,long)  String[]  values  Integer>  mapping  String  comment  final  long  recordNumber  	projects/Csv9/src/main/java/org/apache/commons/csv/CSVRecord.java	0.24253562503633297	57	57	1	replace	return  values!=  null?  values.toArray(new  String[values.size()  ]):  new  String[values.size()  ];	  if(values    ==    null)    {    return    values.toArray(new    String[values.size()    ]);    }    	non-compiled	[CE]  illegal  start  of  type	12	None	replace
195	[BUG]  [BUGGY]  return  values!=  null?  values.toArray(new  String[values.size()  ]):  Collections.EMPTY_LIST;  [CE]  illegal  start  of  type  [FE]                  NullPointerException    [CONTEXT]      [BUGGY]  return  values!=  null?  values.toArray(new  String[values.size()  ]):  Collections.EMPTY_LIST;  [BUGGY]      [CLASS]  CSVRecord  [METHOD]  <init>  [RETURN_TYPE]  String,long)  String[]  values  Integer>  mapping  String  comment  final  long  recordNumber  	projects/Csv9/src/main/java/org/apache/commons/csv/CSVRecord.java	0.24253562503633297	57	57	1	replace	return  values!=  null?  values.toArray(new  String[values.size()  ]):  Collections.EMPTY_LIST;	  if(values    ==    null)    {    return    values.toArray(new    String[values.size()    ]);    }    	non-compiled	[CE]  illegal  start  of  type	12	None	replace
196	[BUG]  [BUGGY]  final  int  recordNumber  =  values.length;  [CE]  illegal  start  of  type  [FE]                      NullPointerException    [CONTEXT]      [BUGGY]  final  int  recordNumber  =  values.length;  [BUGGY]      [CLASS]  CSVRecord  [METHOD]  <init>  [RETURN_TYPE]  String,long)  String[]  values  Integer>  mapping  String  comment  final  long  recordNumber  	projects/Csv9/src/main/java/org/apache/commons/csv/CSVRecord.java	0.24253562503633297	57	57	1	replace	final  int  recordNumber  =  values.length;	      	non-compiled	[CE]  illegal  start  of  type	8	None	replace
197	[BUG]  [BUGGY]  final  int  recordNumber  =  values.size();  [CE]  illegal  start  of  type  [FE]                        NullPointerException    [CONTEXT]      [BUGGY]  final  int  recordNumber  =  values.size();  [BUGGY]      [CLASS]  CSVRecord  [METHOD]  <init>  [RETURN_TYPE]  String,long)  String[]  values  Integer>  mapping  String  comment  final  long  recordNumber  	projects/Csv9/src/main/java/org/apache/commons/csv/CSVRecord.java	0.24253562503633297	57	57	1	replace	final  int  recordNumber  =  values.size();	      	non-compiled	[CE]  illegal  start  of  type	8	None	replace
198	[BUG]  [BUGGY]  int  recordNumber  =  values.length;  [CE]  illegal  start  of  type  [FE]                          NullPointerException    [CONTEXT]      [BUGGY]  int  recordNumber  =  values.length;  [BUGGY]      [CLASS]  CSVRecord  [METHOD]  <init>  [RETURN_TYPE]  String,long)  String[]  values  Integer>  mapping  String  comment  final  long  recordNumber  	projects/Csv9/src/main/java/org/apache/commons/csv/CSVRecord.java	0.24253562503633297	57	57	1	replace	int  recordNumber  =  values.length;	      	non-compiled	[CE]  illegal  start  of  type	8	None	replace
199	[BUG]  [BUGGY]  final  int  recordNumber  =  values.indexOf('.');  [CE]  illegal  start  of  type  [FE]                            NullPointerException    [CONTEXT]      [BUGGY]  final  int  recordNumber  =  values.indexOf('.');  [BUGGY]      [CLASS]  CSVRecord  [METHOD]  <init>  [RETURN_TYPE]  String,long)  String[]  values  Integer>  mapping  String  comment  final  long  recordNumber  	projects/Csv9/src/main/java/org/apache/commons/csv/CSVRecord.java	0.24253562503633297	57	57	1	replace	final  int  recordNumber  =  values.indexOf('.');	      	non-compiled	[CE]  illegal  start  of  type	8	None	replace
200	[BUG]  [BUGGY]  int  recordNumber  =  values.size();  [CE]  illegal  start  of  type  [FE]                              NullPointerException    [CONTEXT]      [BUGGY]  int  recordNumber  =  values.size();  [BUGGY]      [CLASS]  CSVRecord  [METHOD]  <init>  [RETURN_TYPE]  String,long)  String[]  values  Integer>  mapping  String  comment  final  long  recordNumber  	projects/Csv9/src/main/java/org/apache/commons/csv/CSVRecord.java	0.24253562503633297	57	57	1	replace	int  recordNumber  =  values.size();	      	non-compiled	[CE]  illegal  start  of  type	8	None	replace
201	[BUG]  [BUGGY]  int  i  =  0,  isNumber();  ++i)  {  if(values[i]!=  null)  {  return  values[i];  }  [CE]  illegal  start  of  type  [FE]        NullPointerException    [CONTEXT]      [BUGGY]  int  i  =  0,  isNumber();  ++i)  {  if(values[i]!=  null)  {  return  values[i];  }  [BUGGY]      [CLASS]  CSVRecord  [METHOD]  <init>  [RETURN_TYPE]  String,long)  String[]  values  Integer>  mapping  String  comment  final  long  recordNumber  	projects/Csv9/src/main/java/org/apache/commons/csv/CSVRecord.java	0.24253562503633297	57	57	1	replace	int  i  =  0,  isNumber();  ++i)  {  if(values[i]!=  null)  {  return  values[i];  }	  for(int    i    =    0,    isNumber();    i    <    values.length;    ++i)    {    if(values[i]!=    null)    {    return    values[i];    }    	non-compiled	[CE]  illegal  start  of  type	15	None	replace
202	[BUG]  [BUGGY]  for(int  i  =  0,  count  =  values.length;  ++i)  {  if(values[i]!=  null)  {  return  values[i];  }  [CE]  illegal  start  of  type  [FE]          NullPointerException    [CONTEXT]      [BUGGY]  for(int  i  =  0,  count  =  values.length;  ++i)  {  if(values[i]!=  null)  {  return  values[i];  }  [BUGGY]      [CLASS]  CSVRecord  [METHOD]  <init>  [RETURN_TYPE]  String,long)  String[]  values  Integer>  mapping  String  comment  final  long  recordNumber  	projects/Csv9/src/main/java/org/apache/commons/csv/CSVRecord.java	0.24253562503633297	57	57	1	replace	for(int  i  =  0,  count  =  values.length;  ++i)  {  if(values[i]!=  null)  {  return  values[i];  }	  for(int    i    =    0,    isNumber();    i    <    values.length;    ++i)    {    if(values[i]!=    null)    {    return    values[i];    }    	non-compiled	[CE]  illegal  start  of  type	15	None	replace
203	[BUG]  [BUGGY]  int  i  =  0,  isNumber();  ++i)  {  if(values[i]!=  null)  {  return  values[i].toString();  }  [CE]  illegal  start  of  type  [FE]            NullPointerException    [CONTEXT]      [BUGGY]  int  i  =  0,  isNumber();  ++i)  {  if(values[i]!=  null)  {  return  values[i].toString();  }  [BUGGY]      [CLASS]  CSVRecord  [METHOD]  <init>  [RETURN_TYPE]  String,long)  String[]  values  Integer>  mapping  String  comment  final  long  recordNumber  	projects/Csv9/src/main/java/org/apache/commons/csv/CSVRecord.java	0.24253562503633297	57	57	1	replace	int  i  =  0,  isNumber();  ++i)  {  if(values[i]!=  null)  {  return  values[i].toString();  }	  for(int    i    =    0,    isNumber();    i    <    values.length;    ++i)    {    if(values[i]!=    null)    {    return    values[i].toString();    }    	non-compiled	[CE]  illegal  start  of  type	17	None	replace
204	[BUG]  [BUGGY]  for(int  i  =  0,  hashCode();  i  <  values.length;  ++i)  {  if(values[i]!=  null)  {  return  values[i].toString();  }  [CE]  illegal  start  of  type  [FE]              NullPointerException    [CONTEXT]      [BUGGY]  for(int  i  =  0,  hashCode();  i  <  values.length;  ++i)  {  if(values[i]!=  null)  {  return  values[i].toString();  }  [BUGGY]      [CLASS]  CSVRecord  [METHOD]  <init>  [RETURN_TYPE]  String,long)  String[]  values  Integer>  mapping  String  comment  final  long  recordNumber  	projects/Csv9/src/main/java/org/apache/commons/csv/CSVRecord.java	0.24253562503633297	57	57	1	replace	for(int  i  =  0,  hashCode();  i  <  values.length;  ++i)  {  if(values[i]!=  null)  {  return  values[i].toString();  }	  for(int    i    =    0,    isNumber();    i    <    values.length;    ++i)    {    if(values[i]!=    null)    {    return    values[i].toString();    }    	non-compiled	[CE]  illegal  start  of  type	17	None	replace
205	[BUG]  [BUGGY]  for(int  i  =  0,  len  =  values.length;  ++i)  {  if(values[i]!=  null)  {  return  values[i].toString();  }  [CE]  illegal  start  of  type  [FE]                NullPointerException    [CONTEXT]      [BUGGY]  for(int  i  =  0,  len  =  values.length;  ++i)  {  if(values[i]!=  null)  {  return  values[i].toString();  }  [BUGGY]      [CLASS]  CSVRecord  [METHOD]  <init>  [RETURN_TYPE]  String,long)  String[]  values  Integer>  mapping  String  comment  final  long  recordNumber  	projects/Csv9/src/main/java/org/apache/commons/csv/CSVRecord.java	0.24253562503633297	57	57	1	replace	for(int  i  =  0,  len  =  values.length;  ++i)  {  if(values[i]!=  null)  {  return  values[i].toString();  }	  for(int    i    =    0,    isNumber();    i    <    values.length;    ++i)    {    if(values[i]!=    null)    {    return    values[i].toString();    }    	non-compiled	[CE]  illegal  start  of  type	17	None	replace
206	[BUG]  [BUGGY]  for(int  i  =  0,  length  =  isNumber();  i  <  values.length;  ++i)  {  if(values[i]!=  null)  {  return  values[i].toString();  }  [CE]  illegal  start  of  type  [FE]                  NullPointerException    [CONTEXT]      [BUGGY]  for(int  i  =  0,  length  =  isNumber();  i  <  values.length;  ++i)  {  if(values[i]!=  null)  {  return  values[i].toString();  }  [BUGGY]      [CLASS]  CSVRecord  [METHOD]  <init>  [RETURN_TYPE]  String,long)  String[]  values  Integer>  mapping  String  comment  final  long  recordNumber  	projects/Csv9/src/main/java/org/apache/commons/csv/CSVRecord.java	0.24253562503633297	57	57	1	replace	for(int  i  =  0,  length  =  isNumber();  i  <  values.length;  ++i)  {  if(values[i]!=  null)  {  return  values[i].toString();  }	  for(int    i    =    0,    isNumber();    i    <    values.length;    ++i)    {    if(values[i]!=    null)    {    return    values[i].toString();    }    	non-compiled	[CE]  illegal  start  of  type	17	None	replace
207	[BUG]  [BUGGY]  return  values.toArray(new  String[values.size()  -  1]);  [CE]  illegal  start  of  type  [FE]        NullPointerException    [CONTEXT]      [BUGGY]  return  values.toArray(new  String[values.size()  -  1]);  [BUGGY]      [CLASS]  CSVRecord  [METHOD]  <init>  [RETURN_TYPE]  String,long)  String[]  values  Integer>  mapping  String  comment  final  long  recordNumber  	projects/Csv9/src/main/java/org/apache/commons/csv/CSVRecord.java	0.24253562503633297	57	57	1	replace	return  values.toArray(new  String[values.size()  -  1]);	  return    values.toArray(new    String[values.size()    ]);    	non-compiled	[CE]  illegal  start  of  type	9	None	replace
