bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  return(String[])values.toArray(new  String[values.size()  ]);  [CE]  illegal  start  of  type  [FE]    NullPointerException  [CONTEXT]    [BUGGY]  return(String[])values.toArray(new  String[values.size()  ]);  [BUGGY]    [CLASS]  CSVRecord  [METHOD]  <init>  [RETURN_TYPE]  String,long)  String[]  values  Integer>  mapping  String  comment  final  long  recordNumber  	projects/Csv9/src/main/java/org/apache/commons/csv/CSVRecord.java	0.24253562503633297	57	57	1	replace	return(String[])values.toArray(new  String[values.size()  ]);	}  	non-compiled	[CE]  illegal  start  of  type	15	None	replace
2	[BUG]  [BUGGY]  if(values  ==  null)  {  for(int  i  =  0,  is  =  values.length;  i  <  is.size();  i++)  {  values[i]  =  values[i];  }  [CE]  illegal  start  of  type  [FE]      NullPointerException  [CONTEXT]    [BUGGY]  if(values  ==  null)  {  for(int  i  =  0,  is  =  values.length;  i  <  is.size();  i++)  {  values[i]  =  values[i];  }  [BUGGY]    [CLASS]  CSVRecord  [METHOD]  <init>  [RETURN_TYPE]  String,long)  String[]  values  Integer>  mapping  String  comment  final  long  recordNumber  	projects/Csv9/src/main/java/org/apache/commons/csv/CSVRecord.java	0.24253562503633297	57	57	1	replace	if(values  ==  null)  {  for(int  i  =  0,  is  =  values.length;  i  <  is.size();  i++)  {  values[i]  =  values[i];  }	}  	non-compiled	[CE]  illegal  start  of  type	15	None	replace
3	[BUG]  [BUGGY]  return(String[])values.toArray(new  String[values.length]);  [CE]  illegal  start  of  type  [FE]        NullPointerException  [CONTEXT]    [BUGGY]  return(String[])values.toArray(new  String[values.length]);  [BUGGY]    [CLASS]  CSVRecord  [METHOD]  <init>  [RETURN_TYPE]  String,long)  String[]  values  Integer>  mapping  String  comment  final  long  recordNumber  	projects/Csv9/src/main/java/org/apache/commons/csv/CSVRecord.java	0.24253562503633297	57	57	1	replace	return(String[])values.toArray(new  String[values.length]);	}  	non-compiled	[CE]  illegal  start  of  type	15	None	replace
4	[BUG]  [BUGGY]  if(values  ==  null)  {  for(int  i  =  0,  is  =  values.length;  i  <  is.size();  ++i)  {  values[i]  =  values[i];  }  [CE]  illegal  start  of  type  [FE]          NullPointerException  [CONTEXT]    [BUGGY]  if(values  ==  null)  {  for(int  i  =  0,  is  =  values.length;  i  <  is.size();  ++i)  {  values[i]  =  values[i];  }  [BUGGY]    [CLASS]  CSVRecord  [METHOD]  <init>  [RETURN_TYPE]  String,long)  String[]  values  Integer>  mapping  String  comment  final  long  recordNumber  	projects/Csv9/src/main/java/org/apache/commons/csv/CSVRecord.java	0.24253562503633297	57	57	1	replace	if(values  ==  null)  {  for(int  i  =  0,  is  =  values.length;  i  <  is.size();  ++i)  {  values[i]  =  values[i];  }	}  	non-compiled	[CE]  illegal  start  of  type	15	None	replace
5	[BUG]  [BUGGY]  if(values  ==  null)  {  for(int  i  =  0;  i  <  values.length;  i++)  {  values[i]  =  values[i];  }  [CE]  illegal  start  of  type  [FE]            NullPointerException  [CONTEXT]    [BUGGY]  if(values  ==  null)  {  for(int  i  =  0;  i  <  values.length;  i++)  {  values[i]  =  values[i];  }  [BUGGY]    [CLASS]  CSVRecord  [METHOD]  <init>  [RETURN_TYPE]  String,long)  String[]  values  Integer>  mapping  String  comment  final  long  recordNumber  	projects/Csv9/src/main/java/org/apache/commons/csv/CSVRecord.java	0.24253562503633297	57	57	1	replace	if(values  ==  null)  {  for(int  i  =  0;  i  <  values.length;  i++)  {  values[i]  =  values[i];  }	}  	non-compiled	[CE]  illegal  start  of  type	15	None	replace
6	[BUG]  [BUGGY]  if(values  ==  null)  {  for(int  i  =  0;  i  <  values.length;  ++i)  {  values[i]  =  values[i];  }  [CE]  illegal  start  of  type  [FE]              NullPointerException  [CONTEXT]    [BUGGY]  if(values  ==  null)  {  for(int  i  =  0;  i  <  values.length;  ++i)  {  values[i]  =  values[i];  }  [BUGGY]    [CLASS]  CSVRecord  [METHOD]  <init>  [RETURN_TYPE]  String,long)  String[]  values  Integer>  mapping  String  comment  final  long  recordNumber  	projects/Csv9/src/main/java/org/apache/commons/csv/CSVRecord.java	0.24253562503633297	57	57	1	replace	if(values  ==  null)  {  for(int  i  =  0;  i  <  values.length;  ++i)  {  values[i]  =  values[i];  }	}  	non-compiled	[CE]  illegal  start  of  type	15	None	replace
7	[BUG]  [BUGGY]  if(values  ==  null)  {  for(int  i  =  0,  is  =  values.size();  i  <  is.size();  i++)  {  values[i]  =  values[i];  }  [CE]  illegal  start  of  type  [FE]                NullPointerException  [CONTEXT]    [BUGGY]  if(values  ==  null)  {  for(int  i  =  0,  is  =  values.size();  i  <  is.size();  i++)  {  values[i]  =  values[i];  }  [BUGGY]    [CLASS]  CSVRecord  [METHOD]  <init>  [RETURN_TYPE]  String,long)  String[]  values  Integer>  mapping  String  comment  final  long  recordNumber  	projects/Csv9/src/main/java/org/apache/commons/csv/CSVRecord.java	0.24253562503633297	57	57	1	replace	if(values  ==  null)  {  for(int  i  =  0,  is  =  values.size();  i  <  is.size();  i++)  {  values[i]  =  values[i];  }	}  	non-compiled	[CE]  illegal  start  of  type	15	None	replace
8	[BUG]  [BUGGY]    [CE]  illegal  start  of  type  [FE]                  NullPointerException  [CONTEXT]    [BUGGY]    [BUGGY]    [CLASS]  CSVRecord  [METHOD]  <init>  [RETURN_TYPE]  String,long)  String[]  values  Integer>  mapping  String  comment  final  long  recordNumber  	projects/Csv9/src/main/java/org/apache/commons/csv/CSVRecord.java	0.24253562503633297	57	57	1	replace	  	}  	non-compiled	[CE]  illegal  start  of  type	15	None	replace
9	[BUG]  [BUGGY]  return  values.toArray(new  String[values.size()  ]);  [CE]  illegal  start  of  type  [FE]    NullPointerException  [CONTEXT]    [BUGGY]  return  values.toArray(new  String[values.size()  ]);  [BUGGY]    [CLASS]  CSVRecord  [METHOD]  <init>  [RETURN_TYPE]  String,long)  String[]  values  Integer>  mapping  String  comment  final  long  recordNumber  	projects/Csv9/src/main/java/org/apache/commons/csv/CSVRecord.java	0.24253562503633297	57	57	1	replace	return  values.toArray(new  String[values.size()  ]);	}  	non-compiled	[CE]  illegal  start  of  type	15	None	replace
10	[BUG]  [BUGGY]  if(values  ==  null)  {  values  =  new  String[values.length];  System.arraycopy(values,  0,  values,  0,  values.length);  }  [CE]  illegal  start  of  type  [FE]      NullPointerException  [CONTEXT]    [BUGGY]  if(values  ==  null)  {  values  =  new  String[values.length];  System.arraycopy(values,  0,  values,  0,  values.length);  }  [BUGGY]    [CLASS]  CSVRecord  [METHOD]  <init>  [RETURN_TYPE]  String,long)  String[]  values  Integer>  mapping  String  comment  final  long  recordNumber  	projects/Csv9/src/main/java/org/apache/commons/csv/CSVRecord.java	0.24253562503633297	57	57	1	replace	if(values  ==  null)  {  values  =  new  String[values.length];  System.arraycopy(values,  0,  values,  0,  values.length);  }	}  	non-compiled	[CE]  illegal  start  of  type	15	None	replace
11	[BUG]  [BUGGY]  this.values  =  values.toArray(new  String[values.size()  ]);  [CE]  illegal  start  of  type  [FE]        NullPointerException  [CONTEXT]    [BUGGY]  this.values  =  values.toArray(new  String[values.size()  ]);  [BUGGY]    [CLASS]  CSVRecord  [METHOD]  <init>  [RETURN_TYPE]  String,long)  String[]  values  Integer>  mapping  String  comment  final  long  recordNumber  	projects/Csv9/src/main/java/org/apache/commons/csv/CSVRecord.java	0.24253562503633297	57	57	1	replace	this.values  =  values.toArray(new  String[values.size()  ]);	}  	non-compiled	[CE]  illegal  start  of  type	15	None	replace
12	[BUG]  [BUGGY]  if(values  ==  null)  {  return  values.toArray(new  String[values.size()  ]);  }  [CE]  illegal  start  of  type  [FE]          NullPointerException  [CONTEXT]    [BUGGY]  if(values  ==  null)  {  return  values.toArray(new  String[values.size()  ]);  }  [BUGGY]    [CLASS]  CSVRecord  [METHOD]  <init>  [RETURN_TYPE]  String,long)  String[]  values  Integer>  mapping  String  comment  final  long  recordNumber  	projects/Csv9/src/main/java/org/apache/commons/csv/CSVRecord.java	0.24253562503633297	57	57	1	replace	if(values  ==  null)  {  return  values.toArray(new  String[values.size()  ]);  }	}  	non-compiled	[CE]  illegal  start  of  type	15	None	replace
13	[BUG]  [BUGGY]  if(values  ==  null)  {  values  =  new  String[values.length];  for(int  i  =  0,  len  =  values.length;  i  <  len;  ++i)  {  values[i]  =  values[i];  }  [CE]  illegal  start  of  type  [FE]            NullPointerException  [CONTEXT]    [BUGGY]  if(values  ==  null)  {  values  =  new  String[values.length];  for(int  i  =  0,  len  =  values.length;  i  <  len;  ++i)  {  values[i]  =  values[i];  }  [BUGGY]    [CLASS]  CSVRecord  [METHOD]  <init>  [RETURN_TYPE]  String,long)  String[]  values  Integer>  mapping  String  comment  final  long  recordNumber  	projects/Csv9/src/main/java/org/apache/commons/csv/CSVRecord.java	0.24253562503633297	57	57	1	replace	if(values  ==  null)  {  values  =  new  String[values.length];  for(int  i  =  0,  len  =  values.length;  i  <  len;  ++i)  {  values[i]  =  values[i];  }	}  	non-compiled	[CE]  illegal  start  of  type	15	None	replace
14	[BUG]  [BUGGY]  if(values  ==  null)  {  values  =  new  String[values.length];  for(int  i=0;  i  <  values.length;  i++)  {  values[i]  =  values[i];  }  [CE]  illegal  start  of  type  [FE]              NullPointerException  [CONTEXT]    [BUGGY]  if(values  ==  null)  {  values  =  new  String[values.length];  for(int  i=0;  i  <  values.length;  i++)  {  values[i]  =  values[i];  }  [BUGGY]    [CLASS]  CSVRecord  [METHOD]  <init>  [RETURN_TYPE]  String,long)  String[]  values  Integer>  mapping  String  comment  final  long  recordNumber  	projects/Csv9/src/main/java/org/apache/commons/csv/CSVRecord.java	0.24253562503633297	57	57	1	replace	if(values  ==  null)  {  values  =  new  String[values.length];  for(int  i=0;  i  <  values.length;  i++)  {  values[i]  =  values[i];  }	}  	non-compiled	[CE]  illegal  start  of  type	15	None	replace
15	[BUG]  [BUGGY]  for(int  i  =  0,  isNumber();  i  <  values.length;  ++i)  {  if(values[i]!=  null)  {  return  values[i];  }  [CE]  illegal  start  of  type  [FE]    NullPointerException  [CONTEXT]    [BUGGY]  for(int  i  =  0,  isNumber();  i  <  values.length;  ++i)  {  if(values[i]!=  null)  {  return  values[i];  }  [BUGGY]    [CLASS]  CSVRecord  [METHOD]  <init>  [RETURN_TYPE]  String,long)  String[]  values  Integer>  mapping  String  comment  final  long  recordNumber  	projects/Csv9/src/main/java/org/apache/commons/csv/CSVRecord.java	0.24253562503633297	57	57	1	replace	for(int  i  =  0,  isNumber();  i  <  values.length;  ++i)  {  if(values[i]!=  null)  {  return  values[i];  }	}  	non-compiled	[CE]  illegal  start  of  type	15	None	replace
16	[BUG]  [BUGGY]  for(int  i  =  0,  isNumber();  i  <  values.length;  ++i)  {  if(values[i]  ==  null)  {  return  values[i];  }  [CE]  illegal  start  of  type  [FE]      NullPointerException  [CONTEXT]    [BUGGY]  for(int  i  =  0,  isNumber();  i  <  values.length;  ++i)  {  if(values[i]  ==  null)  {  return  values[i];  }  [BUGGY]    [CLASS]  CSVRecord  [METHOD]  <init>  [RETURN_TYPE]  String,long)  String[]  values  Integer>  mapping  String  comment  final  long  recordNumber  	projects/Csv9/src/main/java/org/apache/commons/csv/CSVRecord.java	0.24253562503633297	57	57	1	replace	for(int  i  =  0,  isNumber();  i  <  values.length;  ++i)  {  if(values[i]  ==  null)  {  return  values[i];  }	}  	non-compiled	[CE]  illegal  start  of  type	15	None	replace
17	[BUG]  [BUGGY]  for(int  i  =  0,  isNumber();  i  <  values.length;  ++i)  {  if(values[i]!=  null)  {  return  values[i].toString();  }  [CE]  illegal  start  of  type  [FE]        NullPointerException  [CONTEXT]    [BUGGY]  for(int  i  =  0,  isNumber();  i  <  values.length;  ++i)  {  if(values[i]!=  null)  {  return  values[i].toString();  }  [BUGGY]    [CLASS]  CSVRecord  [METHOD]  <init>  [RETURN_TYPE]  String,long)  String[]  values  Integer>  mapping  String  comment  final  long  recordNumber  	projects/Csv9/src/main/java/org/apache/commons/csv/CSVRecord.java	0.24253562503633297	57	57	1	replace	for(int  i  =  0,  isNumber();  i  <  values.length;  ++i)  {  if(values[i]!=  null)  {  return  values[i].toString();  }	}  	non-compiled	[CE]  illegal  start  of  type	15	None	replace
18	[BUG]  [BUGGY]  for(int  i  =  0,  isNumber();  i  <  values.length;  ++i)  {  if(values[i]  ==  null)  {  return  values[i].toString();  }  [CE]  illegal  start  of  type  [FE]          NullPointerException  [CONTEXT]    [BUGGY]  for(int  i  =  0,  isNumber();  i  <  values.length;  ++i)  {  if(values[i]  ==  null)  {  return  values[i].toString();  }  [BUGGY]    [CLASS]  CSVRecord  [METHOD]  <init>  [RETURN_TYPE]  String,long)  String[]  values  Integer>  mapping  String  comment  final  long  recordNumber  	projects/Csv9/src/main/java/org/apache/commons/csv/CSVRecord.java	0.24253562503633297	57	57	1	replace	for(int  i  =  0,  isNumber();  i  <  values.length;  ++i)  {  if(values[i]  ==  null)  {  return  values[i].toString();  }	}  	non-compiled	[CE]  illegal  start  of  type	15	None	replace
