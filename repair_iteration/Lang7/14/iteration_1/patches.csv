bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  char  hexDigits  =  str.length();  [CE]  ')'  expected  [FE]        AssertionError    [CONTEXT]    throw  new  NumberFormatException(   "A  blank  string  is  not  a  valid  number   ");  }  if  (str.startsWith(   "--   "))  {  return  null;  }  if  (str.startsWith(   "0x   ")  ||  str.startsWith(   "-0x   ")  ||  str.startsWith(   "0X   ")  ||  str.startsWith(   "-0X   "))  {  int  hexDigits  =  str.length()  -  2;  //  drop  0x  if  (str.startsWith(   "-   "))  {  //  drop  -  hexDigits--;  }    [BUGGY]  char  hexDigits  =  str.length();  [BUGGY]    if  (hexDigits  >  8)  {  //  too  many  for  an  int    return  createLong(str);  return  createLong(str);  }  return  createInteger(str);  }  char  lastChar  =  str.charAt(str.length()  -  1);  String  mant;  String  dec;  String  exp;  int  decPos  =  str.indexOf('.');  int  expPos  =  str.indexOf('e')  +  str.indexOf('E')  +  1;  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  	projects/Lang7/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	460	461	1	replace	char  hexDigits  =  str.length();	      int    hexDigits    =    str.length();    	non-compiled	[CE]  ')'  expected	6	None	replace
2	[BUG]  [BUGGY]  Integer  hexDigits  =  str.length()  -  2;  [CE]  ')'  expected  [FE]          AssertionError    [CONTEXT]    throw  new  NumberFormatException(   "A  blank  string  is  not  a  valid  number   ");  }  if  (str.startsWith(   "--   "))  {  return  null;  }  if  (str.startsWith(   "0x   ")  ||  str.startsWith(   "-0x   ")  ||  str.startsWith(   "0X   ")  ||  str.startsWith(   "-0X   "))  {  int  hexDigits  =  str.length()  -  2;  //  drop  0x  if  (str.startsWith(   "-   "))  {  //  drop  -  hexDigits--;  }    [BUGGY]  Integer  hexDigits  =  str.length()  -  2;  [BUGGY]    if  (hexDigits  >  8)  {  //  too  many  for  an  int    return  createLong(str);  return  createLong(str);  }  return  createInteger(str);  }  char  lastChar  =  str.charAt(str.length()  -  1);  String  mant;  String  dec;  String  exp;  int  decPos  =  str.indexOf('.');  int  expPos  =  str.indexOf('e')  +  str.indexOf('E')  +  1;  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  	projects/Lang7/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	460	461	1	replace	Integer  hexDigits  =  str.length()  -  2;	      int    hexDigits    =    str.length();    	non-compiled	[CE]  ')'  expected	6	None	replace
3	[BUG]  [BUGGY]  char  hexDigits  =  str.length()  -  1;  [CE]  ')'  expected  [FE]              AssertionError    [CONTEXT]    throw  new  NumberFormatException(   "A  blank  string  is  not  a  valid  number   ");  }  if  (str.startsWith(   "--   "))  {  return  null;  }  if  (str.startsWith(   "0x   ")  ||  str.startsWith(   "-0x   ")  ||  str.startsWith(   "0X   ")  ||  str.startsWith(   "-0X   "))  {  int  hexDigits  =  str.length()  -  2;  //  drop  0x  if  (str.startsWith(   "-   "))  {  //  drop  -  hexDigits--;  }    [BUGGY]  char  hexDigits  =  str.length()  -  1;  [BUGGY]    if  (hexDigits  >  8)  {  //  too  many  for  an  int    return  createLong(str);  return  createLong(str);  }  return  createInteger(str);  }  char  lastChar  =  str.charAt(str.length()  -  1);  String  mant;  String  dec;  String  exp;  int  decPos  =  str.indexOf('.');  int  expPos  =  str.indexOf('e')  +  str.indexOf('E')  +  1;  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  	projects/Lang7/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	460	461	1	replace	char  hexDigits  =  str.length()  -  1;	      int    hexDigits    =    str.length()    -    1;    	non-compiled	[CE]  ')'  expected	9	None	replace
4	[BUG]  [BUGGY]  Integer  hexDigits  =  str.length();  [CE]  ')'  expected  [FE]                AssertionError    [CONTEXT]    throw  new  NumberFormatException(   "A  blank  string  is  not  a  valid  number   ");  }  if  (str.startsWith(   "--   "))  {  return  null;  }  if  (str.startsWith(   "0x   ")  ||  str.startsWith(   "-0x   ")  ||  str.startsWith(   "0X   ")  ||  str.startsWith(   "-0X   "))  {  int  hexDigits  =  str.length()  -  2;  //  drop  0x  if  (str.startsWith(   "-   "))  {  //  drop  -  hexDigits--;  }    [BUGGY]  Integer  hexDigits  =  str.length();  [BUGGY]    if  (hexDigits  >  8)  {  //  too  many  for  an  int    return  createLong(str);  return  createLong(str);  }  return  createInteger(str);  }  char  lastChar  =  str.charAt(str.length()  -  1);  String  mant;  String  dec;  String  exp;  int  decPos  =  str.indexOf('.');  int  expPos  =  str.indexOf('e')  +  str.indexOf('E')  +  1;  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  	projects/Lang7/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	460	461	1	replace	Integer  hexDigits  =  str.length();	      int    hexDigits    =    str.length()    -    1;    	non-compiled	[CE]  ')'  expected	9	None	replace
5	[BUG]  [BUGGY]  hexDigits  =  str.length()  -  2;  [CE]  ')'  expected  [FE]            AssertionError    [CONTEXT]    throw  new  NumberFormatException(   "A  blank  string  is  not  a  valid  number   ");  }  if  (str.startsWith(   "--   "))  {  return  null;  }  if  (str.startsWith(   "0x   ")  ||  str.startsWith(   "-0x   ")  ||  str.startsWith(   "0X   ")  ||  str.startsWith(   "-0X   "))  {  int  hexDigits  =  str.length()  -  2;  //  drop  0x  if  (str.startsWith(   "-   "))  {  //  drop  -  hexDigits--;  }    [BUGGY]  hexDigits  =  str.length()  -  2;  [BUGGY]    if  (hexDigits  >  8)  {  //  too  many  for  an  int    return  createLong(str);  return  createLong(str);  }  return  createInteger(str);  }  char  lastChar  =  str.charAt(str.length()  -  1);  String  mant;  String  dec;  String  exp;  int  decPos  =  str.indexOf('.');  int  expPos  =  str.indexOf('e')  +  str.indexOf('E')  +  1;  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  	projects/Lang7/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	460	461	1	replace	hexDigits  =  str.length()  -  2;	      hexDigits    =    str.length();    	non-compiled	[CE]  ')'  expected	8	None	replace
6	[BUG]  [BUGGY]  hexDigits  =  str.length()  +  2;  [CE]  ')'  expected  [FE]              AssertionError    [CONTEXT]    throw  new  NumberFormatException(   "A  blank  string  is  not  a  valid  number   ");  }  if  (str.startsWith(   "--   "))  {  return  null;  }  if  (str.startsWith(   "0x   ")  ||  str.startsWith(   "-0x   ")  ||  str.startsWith(   "0X   ")  ||  str.startsWith(   "-0X   "))  {  int  hexDigits  =  str.length()  -  2;  //  drop  0x  if  (str.startsWith(   "-   "))  {  //  drop  -  hexDigits--;  }    [BUGGY]  hexDigits  =  str.length()  +  2;  [BUGGY]    if  (hexDigits  >  8)  {  //  too  many  for  an  int    return  createLong(str);  return  createLong(str);  }  return  createInteger(str);  }  char  lastChar  =  str.charAt(str.length()  -  1);  String  mant;  String  dec;  String  exp;  int  decPos  =  str.indexOf('.');  int  expPos  =  str.indexOf('e')  +  str.indexOf('E')  +  1;  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  	projects/Lang7/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	460	461	1	replace	hexDigits  =  str.length()  +  2;	      hexDigits    =    str.length();    	non-compiled	[CE]  ')'  expected	8	None	replace
7	[BUG]  [BUGGY]  HexDigits  =  str.length()  -  2;  [CE]  ')'  expected  [FE]                AssertionError    [CONTEXT]    throw  new  NumberFormatException(   "A  blank  string  is  not  a  valid  number   ");  }  if  (str.startsWith(   "--   "))  {  return  null;  }  if  (str.startsWith(   "0x   ")  ||  str.startsWith(   "-0x   ")  ||  str.startsWith(   "0X   ")  ||  str.startsWith(   "-0X   "))  {  int  hexDigits  =  str.length()  -  2;  //  drop  0x  if  (str.startsWith(   "-   "))  {  //  drop  -  hexDigits--;  }    [BUGGY]  HexDigits  =  str.length()  -  2;  [BUGGY]    if  (hexDigits  >  8)  {  //  too  many  for  an  int    return  createLong(str);  return  createLong(str);  }  return  createInteger(str);  }  char  lastChar  =  str.charAt(str.length()  -  1);  String  mant;  String  dec;  String  exp;  int  decPos  =  str.indexOf('.');  int  expPos  =  str.indexOf('e')  +  str.indexOf('E')  +  1;  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  	projects/Lang7/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	460	461	1	replace	HexDigits  =  str.length()  -  2;	      hexDigits    =    str.length();    	non-compiled	[CE]  ')'  expected	8	None	replace
8	[BUG]  [BUGGY]  if(hexDigits  <  0)  {  //  too  many  for  an  int  return  createLong(str);  }  [CE]  ')'  expected  [FE]          AssertionError    [CONTEXT]    throw  new  NumberFormatException(   "A  blank  string  is  not  a  valid  number   ");  }  if  (str.startsWith(   "--   "))  {  return  null;  }  if  (str.startsWith(   "0x   ")  ||  str.startsWith(   "-0x   ")  ||  str.startsWith(   "0X   ")  ||  str.startsWith(   "-0X   "))  {  int  hexDigits  =  str.length()  -  2;  //  drop  0x  if  (str.startsWith(   "-   "))  {  //  drop  -  hexDigits--;  }    [BUGGY]  if(hexDigits  <  0)  {  //  too  many  for  an  int  return  createLong(str);  }  [BUGGY]    return  createLong(str);  }  return  createInteger(str);  }  char  lastChar  =  str.charAt(str.length()  -  1);  String  mant;  String  dec;  String  exp;  int  decPos  =  str.indexOf('.');  int  expPos  =  str.indexOf('e')  +  str.indexOf('E')  +  1;  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  	projects/Lang7/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	460	461	1	replace	if(hexDigits  <  0)  {  //  too  many  for  an  int  return  createLong(str);  }	  if(hexDigits    >    0)    {    //    too    many    for    an    int    return    createLong(str);    }    	non-compiled	[CE]  ')'  expected	2	None	replace
9	[BUG]  [BUGGY]  if(hexDigits  ==  0)  {  //  too  many  for  an  int  return  createLong(str);  }  [CE]  ')'  expected  [FE]            AssertionError    [CONTEXT]    throw  new  NumberFormatException(   "A  blank  string  is  not  a  valid  number   ");  }  if  (str.startsWith(   "--   "))  {  return  null;  }  if  (str.startsWith(   "0x   ")  ||  str.startsWith(   "-0x   ")  ||  str.startsWith(   "0X   ")  ||  str.startsWith(   "-0X   "))  {  int  hexDigits  =  str.length()  -  2;  //  drop  0x  if  (str.startsWith(   "-   "))  {  //  drop  -  hexDigits--;  }    [BUGGY]  if(hexDigits  ==  0)  {  //  too  many  for  an  int  return  createLong(str);  }  [BUGGY]    return  createLong(str);  }  return  createInteger(str);  }  char  lastChar  =  str.charAt(str.length()  -  1);  String  mant;  String  dec;  String  exp;  int  decPos  =  str.indexOf('.');  int  expPos  =  str.indexOf('e')  +  str.indexOf('E')  +  1;  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  	projects/Lang7/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	460	461	1	replace	if(hexDigits  ==  0)  {  //  too  many  for  an  int  return  createLong(str);  }	  if(hexDigits    >    0)    {    //    too    many    for    an    int    return    createLong(str);    }    	non-compiled	[CE]  ')'  expected	2	None	replace
10	[BUG]  [BUGGY]  if(hexDigits!=  0)  {  //  too  many  for  an  int  return  createLong(str);  }  [CE]  ')'  expected  [FE]              AssertionError    [CONTEXT]    throw  new  NumberFormatException(   "A  blank  string  is  not  a  valid  number   ");  }  if  (str.startsWith(   "--   "))  {  return  null;  }  if  (str.startsWith(   "0x   ")  ||  str.startsWith(   "-0x   ")  ||  str.startsWith(   "0X   ")  ||  str.startsWith(   "-0X   "))  {  int  hexDigits  =  str.length()  -  2;  //  drop  0x  if  (str.startsWith(   "-   "))  {  //  drop  -  hexDigits--;  }    [BUGGY]  if(hexDigits!=  0)  {  //  too  many  for  an  int  return  createLong(str);  }  [BUGGY]    return  createLong(str);  }  return  createInteger(str);  }  char  lastChar  =  str.charAt(str.length()  -  1);  String  mant;  String  dec;  String  exp;  int  decPos  =  str.indexOf('.');  int  expPos  =  str.indexOf('e')  +  str.indexOf('E')  +  1;  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  	projects/Lang7/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	460	461	1	replace	if(hexDigits!=  0)  {  //  too  many  for  an  int  return  createLong(str);  }	  if(hexDigits    >    0)    {    //    too    many    for    an    int    return    createLong(str);    }    	non-compiled	[CE]  ')'  expected	2	None	replace
11	[BUG]  [BUGGY]  if(hexDigits  <  0)  {  //  too  many  for  an  int  return  createInteger(str);  }  [CE]  ')'  expected  [FE]              AssertionError    [CONTEXT]    throw  new  NumberFormatException(   "A  blank  string  is  not  a  valid  number   ");  }  if  (str.startsWith(   "--   "))  {  return  null;  }  if  (str.startsWith(   "0x   ")  ||  str.startsWith(   "-0x   ")  ||  str.startsWith(   "0X   ")  ||  str.startsWith(   "-0X   "))  {  int  hexDigits  =  str.length()  -  2;  //  drop  0x  if  (str.startsWith(   "-   "))  {  //  drop  -  hexDigits--;  }    [BUGGY]  if(hexDigits  <  0)  {  //  too  many  for  an  int  return  createInteger(str);  }  [BUGGY]    return  createLong(str);  }  return  createInteger(str);  }  char  lastChar  =  str.charAt(str.length()  -  1);  String  mant;  String  dec;  String  exp;  int  decPos  =  str.indexOf('.');  int  expPos  =  str.indexOf('e')  +  str.indexOf('E')  +  1;  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  	projects/Lang7/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	460	461	1	replace	if(hexDigits  <  0)  {  //  too  many  for  an  int  return  createInteger(str);  }	  if(hexDigits    >    0)    {    //    too    many    for    an    int    return    createInteger(str);    }    	non-compiled	[CE]  ')'  expected	4	None	replace
12	[BUG]  [BUGGY]  if(hexDigits  ==  0)  {  //  too  many  for  an  int  return  createInteger(str);  }  [CE]  ')'  expected  [FE]                AssertionError    [CONTEXT]    throw  new  NumberFormatException(   "A  blank  string  is  not  a  valid  number   ");  }  if  (str.startsWith(   "--   "))  {  return  null;  }  if  (str.startsWith(   "0x   ")  ||  str.startsWith(   "-0x   ")  ||  str.startsWith(   "0X   ")  ||  str.startsWith(   "-0X   "))  {  int  hexDigits  =  str.length()  -  2;  //  drop  0x  if  (str.startsWith(   "-   "))  {  //  drop  -  hexDigits--;  }    [BUGGY]  if(hexDigits  ==  0)  {  //  too  many  for  an  int  return  createInteger(str);  }  [BUGGY]    return  createLong(str);  }  return  createInteger(str);  }  char  lastChar  =  str.charAt(str.length()  -  1);  String  mant;  String  dec;  String  exp;  int  decPos  =  str.indexOf('.');  int  expPos  =  str.indexOf('e')  +  str.indexOf('E')  +  1;  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  	projects/Lang7/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	460	461	1	replace	if(hexDigits  ==  0)  {  //  too  many  for  an  int  return  createInteger(str);  }	  if(hexDigits    >    0)    {    //    too    many    for    an    int    return    createInteger(str);    }    	non-compiled	[CE]  ')'  expected	4	None	replace
13	[BUG]  [BUGGY]  if(hexDigits!=  0)  {  //  too  many  for  an  int  return  createInteger(str);  }  [CE]  ')'  expected  [FE]                  AssertionError    [CONTEXT]    throw  new  NumberFormatException(   "A  blank  string  is  not  a  valid  number   ");  }  if  (str.startsWith(   "--   "))  {  return  null;  }  if  (str.startsWith(   "0x   ")  ||  str.startsWith(   "-0x   ")  ||  str.startsWith(   "0X   ")  ||  str.startsWith(   "-0X   "))  {  int  hexDigits  =  str.length()  -  2;  //  drop  0x  if  (str.startsWith(   "-   "))  {  //  drop  -  hexDigits--;  }    [BUGGY]  if(hexDigits!=  0)  {  //  too  many  for  an  int  return  createInteger(str);  }  [BUGGY]    return  createLong(str);  }  return  createInteger(str);  }  char  lastChar  =  str.charAt(str.length()  -  1);  String  mant;  String  dec;  String  exp;  int  decPos  =  str.indexOf('.');  int  expPos  =  str.indexOf('e')  +  str.indexOf('E')  +  1;  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  	projects/Lang7/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	460	461	1	replace	if(hexDigits!=  0)  {  //  too  many  for  an  int  return  createInteger(str);  }	  if(hexDigits    >    0)    {    //    too    many    for    an    int    return    createInteger(str);    }    	non-compiled	[CE]  ')'  expected	4	None	replace
14	[BUG]  [BUGGY]  if(hexDigits  <  0)  {  //  too  many  for  an  int  return  createInteger(str);  [CE]  ')'  expected  [FE]            AssertionError    [CONTEXT]    throw  new  NumberFormatException(   "A  blank  string  is  not  a  valid  number   ");  }  if  (str.startsWith(   "--   "))  {  return  null;  }  if  (str.startsWith(   "0x   ")  ||  str.startsWith(   "-0x   ")  ||  str.startsWith(   "0X   ")  ||  str.startsWith(   "-0X   "))  {  int  hexDigits  =  str.length()  -  2;  //  drop  0x  if  (str.startsWith(   "-   "))  {  //  drop  -  hexDigits--;  }    [BUGGY]  if(hexDigits  <  0)  {  //  too  many  for  an  int  return  createInteger(str);  [BUGGY]    return  createLong(str);  }  return  createInteger(str);  }  char  lastChar  =  str.charAt(str.length()  -  1);  String  mant;  String  dec;  String  exp;  int  decPos  =  str.indexOf('.');  int  expPos  =  str.indexOf('e')  +  str.indexOf('E')  +  1;  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  	projects/Lang7/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	460	461	1	replace	if(hexDigits  <  0)  {  //  too  many  for  an  int  return  createInteger(str);	  if(hexDigits    >    0)    {    //    too    many    for    an    int    return    createInteger(str);    	non-compiled	[CE]  ')'  expected	3	None	replace
15	[BUG]  [BUGGY]  String  str  =  str.substring(0,  str.length()  -  2);  [CE]  ')'  expected  [FE]                AssertionError    [CONTEXT]    throw  new  NumberFormatException(   "A  blank  string  is  not  a  valid  number   ");  }  if  (str.startsWith(   "--   "))  {  return  null;  }  if  (str.startsWith(   "0x   ")  ||  str.startsWith(   "-0x   ")  ||  str.startsWith(   "0X   ")  ||  str.startsWith(   "-0X   "))  {  int  hexDigits  =  str.length()  -  2;  //  drop  0x  if  (str.startsWith(   "-   "))  {  //  drop  -  hexDigits--;  }    [BUGGY]  String  str  =  str.substring(0,  str.length()  -  2);  [BUGGY]    return  createLong(str);  }  return  createInteger(str);  }  char  lastChar  =  str.charAt(str.length()  -  1);  String  mant;  String  dec;  String  exp;  int  decPos  =  str.indexOf('.');  int  expPos  =  str.indexOf('e')  +  str.indexOf('E')  +  1;  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  	projects/Lang7/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	460	461	1	replace	String  str  =  str.substring(0,  str.length()  -  2);	      	non-compiled	[CE]  ')'  expected	5	None	replace
16	[BUG]  [BUGGY]  int  expPos  =  str.indexOf('e')+  str.indexOf('E')+  1;  [CE]  ')'  expected  [FE]                  AssertionError    [CONTEXT]    throw  new  NumberFormatException(   "A  blank  string  is  not  a  valid  number   ");  }  if  (str.startsWith(   "--   "))  {  return  null;  }  if  (str.startsWith(   "0x   ")  ||  str.startsWith(   "-0x   ")  ||  str.startsWith(   "0X   ")  ||  str.startsWith(   "-0X   "))  {  int  hexDigits  =  str.length()  -  2;  //  drop  0x  if  (str.startsWith(   "-   "))  {  //  drop  -  hexDigits--;  }    [BUGGY]  int  expPos  =  str.indexOf('e')+  str.indexOf('E')+  1;  [BUGGY]    return  createLong(str);  }  return  createInteger(str);  }  char  lastChar  =  str.charAt(str.length()  -  1);  String  mant;  String  dec;  String  exp;  int  decPos  =  str.indexOf('.');  int  expPos  =  str.indexOf('e')  +  str.indexOf('E')  +  1;  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  	projects/Lang7/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	460	461	1	replace	int  expPos  =  str.indexOf('e')+  str.indexOf('E')+  1;	      	non-compiled	[CE]  ')'  expected	5	None	replace
17	[BUG]  [BUGGY]  String  str  =  str.substring(0,  str.length()  -  1);  [CE]  ')'  expected  [FE]                    AssertionError    [CONTEXT]    throw  new  NumberFormatException(   "A  blank  string  is  not  a  valid  number   ");  }  if  (str.startsWith(   "--   "))  {  return  null;  }  if  (str.startsWith(   "0x   ")  ||  str.startsWith(   "-0x   ")  ||  str.startsWith(   "0X   ")  ||  str.startsWith(   "-0X   "))  {  int  hexDigits  =  str.length()  -  2;  //  drop  0x  if  (str.startsWith(   "-   "))  {  //  drop  -  hexDigits--;  }    [BUGGY]  String  str  =  str.substring(0,  str.length()  -  1);  [BUGGY]    return  createLong(str);  }  return  createInteger(str);  }  char  lastChar  =  str.charAt(str.length()  -  1);  String  mant;  String  dec;  String  exp;  int  decPos  =  str.indexOf('.');  int  expPos  =  str.indexOf('e')  +  str.indexOf('E')  +  1;  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  	projects/Lang7/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	460	461	1	replace	String  str  =  str.substring(0,  str.length()  -  1);	      	non-compiled	[CE]  ')'  expected	5	None	replace
18	[BUG]  [BUGGY]  int  hexDigits  =  str.indexOf('.')+  str.indexOf('E')+  1;  [CE]  ')'  expected  [FE]        AssertionError    [CONTEXT]    throw  new  NumberFormatException(   "A  blank  string  is  not  a  valid  number   ");  }  if  (str.startsWith(   "--   "))  {  return  null;  }  if  (str.startsWith(   "0x   ")  ||  str.startsWith(   "-0x   ")  ||  str.startsWith(   "0X   ")  ||  str.startsWith(   "-0X   "))  {  int  hexDigits  =  str.length()  -  2;  //  drop  0x  if  (str.startsWith(   "-   "))  {  //  drop  -  hexDigits--;  }    [BUGGY]  int  hexDigits  =  str.indexOf('.')+  str.indexOf('E')+  1;  [BUGGY]    if  (hexDigits  >  8)  {  //  too  many  for  an  int    return  createLong(str);  return  createLong(str);  }  return  createInteger(str);  }  char  lastChar  =  str.charAt(str.length()  -  1);  String  mant;  String  dec;  String  exp;  int  decPos  =  str.indexOf('.');  int  expPos  =  str.indexOf('e')  +  str.indexOf('E')  +  1;  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  	projects/Lang7/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	460	461	1	replace	int  hexDigits  =  str.indexOf('.')+  str.indexOf('E')+  1;	      int    hexDigits    =    str.indexOf('.');    	non-compiled	[CE]  ')'  expected	13	None	replace
19	[BUG]  [BUGGY]  int  hexDigits  =  str.indexOf('.',  4);  [CE]  ')'  expected  [FE]          AssertionError    [CONTEXT]    throw  new  NumberFormatException(   "A  blank  string  is  not  a  valid  number   ");  }  if  (str.startsWith(   "--   "))  {  return  null;  }  if  (str.startsWith(   "0x   ")  ||  str.startsWith(   "-0x   ")  ||  str.startsWith(   "0X   ")  ||  str.startsWith(   "-0X   "))  {  int  hexDigits  =  str.length()  -  2;  //  drop  0x  if  (str.startsWith(   "-   "))  {  //  drop  -  hexDigits--;  }    [BUGGY]  int  hexDigits  =  str.indexOf('.',  4);  [BUGGY]    if  (hexDigits  >  8)  {  //  too  many  for  an  int    return  createLong(str);  return  createLong(str);  }  return  createInteger(str);  }  char  lastChar  =  str.charAt(str.length()  -  1);  String  mant;  String  dec;  String  exp;  int  decPos  =  str.indexOf('.');  int  expPos  =  str.indexOf('e')  +  str.indexOf('E')  +  1;  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  	projects/Lang7/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	460	461	1	replace	int  hexDigits  =  str.indexOf('.',  4);	      int    hexDigits    =    str.indexOf('.');    	non-compiled	[CE]  ')'  expected	13	None	replace
20	[BUG]  [BUGGY]  int  hexDigits  =  str.indexOf('.',  2);  [CE]  ')'  expected  [FE]            AssertionError    [CONTEXT]    throw  new  NumberFormatException(   "A  blank  string  is  not  a  valid  number   ");  }  if  (str.startsWith(   "--   "))  {  return  null;  }  if  (str.startsWith(   "0x   ")  ||  str.startsWith(   "-0x   ")  ||  str.startsWith(   "0X   ")  ||  str.startsWith(   "-0X   "))  {  int  hexDigits  =  str.length()  -  2;  //  drop  0x  if  (str.startsWith(   "-   "))  {  //  drop  -  hexDigits--;  }    [BUGGY]  int  hexDigits  =  str.indexOf('.',  2);  [BUGGY]    if  (hexDigits  >  8)  {  //  too  many  for  an  int    return  createLong(str);  return  createLong(str);  }  return  createInteger(str);  }  char  lastChar  =  str.charAt(str.length()  -  1);  String  mant;  String  dec;  String  exp;  int  decPos  =  str.indexOf('.');  int  expPos  =  str.indexOf('e')  +  str.indexOf('E')  +  1;  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  	projects/Lang7/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	460	461	1	replace	int  hexDigits  =  str.indexOf('.',  2);	      int    hexDigits    =    str.indexOf('.');    	non-compiled	[CE]  ')'  expected	13	None	replace
21	[BUG]  [BUGGY]  Integer  hexDigits  =  createInteger(str.length());  [CE]  ')'  expected  [FE]        AssertionError    [CONTEXT]    throw  new  NumberFormatException(   "A  blank  string  is  not  a  valid  number   ");  }  if  (str.startsWith(   "--   "))  {  return  null;  }  if  (str.startsWith(   "0x   ")  ||  str.startsWith(   "-0x   ")  ||  str.startsWith(   "0X   ")  ||  str.startsWith(   "-0X   "))  {  int  hexDigits  =  str.length()  -  2;  //  drop  0x  if  (str.startsWith(   "-   "))  {  //  drop  -  hexDigits--;  }    [BUGGY]  Integer  hexDigits  =  createInteger(str.length());  [BUGGY]    if  (hexDigits  >  8)  {  //  too  many  for  an  int    return  createLong(str);  return  createLong(str);  }  return  createInteger(str);  }  char  lastChar  =  str.charAt(str.length()  -  1);  String  mant;  String  dec;  String  exp;  int  decPos  =  str.indexOf('.');  int  expPos  =  str.indexOf('e')  +  str.indexOf('E')  +  1;  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  	projects/Lang7/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	460	461	1	replace	Integer  hexDigits  =  createInteger(str.length());	      Integer    hexDigits    =    createInteger(str);    	non-compiled	[CE]  ')'  expected	11	None	replace
22	[BUG]  [BUGGY]  Integer  hexDigits  =  createInteger(0);  [CE]  ')'  expected  [FE]          AssertionError    [CONTEXT]    throw  new  NumberFormatException(   "A  blank  string  is  not  a  valid  number   ");  }  if  (str.startsWith(   "--   "))  {  return  null;  }  if  (str.startsWith(   "0x   ")  ||  str.startsWith(   "-0x   ")  ||  str.startsWith(   "0X   ")  ||  str.startsWith(   "-0X   "))  {  int  hexDigits  =  str.length()  -  2;  //  drop  0x  if  (str.startsWith(   "-   "))  {  //  drop  -  hexDigits--;  }    [BUGGY]  Integer  hexDigits  =  createInteger(0);  [BUGGY]    if  (hexDigits  >  8)  {  //  too  many  for  an  int    return  createLong(str);  return  createLong(str);  }  return  createInteger(str);  }  char  lastChar  =  str.charAt(str.length()  -  1);  String  mant;  String  dec;  String  exp;  int  decPos  =  str.indexOf('.');  int  expPos  =  str.indexOf('e')  +  str.indexOf('E')  +  1;  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  	projects/Lang7/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	460	461	1	replace	Integer  hexDigits  =  createInteger(0);	      Integer    hexDigits    =    createInteger(str);    	non-compiled	[CE]  ')'  expected	11	None	replace
23	[BUG]  [BUGGY]  Integer  hexDigits  =  createInteger(str.length()  -  2);  [CE]  ')'  expected  [FE]            AssertionError    [CONTEXT]    throw  new  NumberFormatException(   "A  blank  string  is  not  a  valid  number   ");  }  if  (str.startsWith(   "--   "))  {  return  null;  }  if  (str.startsWith(   "0x   ")  ||  str.startsWith(   "-0x   ")  ||  str.startsWith(   "0X   ")  ||  str.startsWith(   "-0X   "))  {  int  hexDigits  =  str.length()  -  2;  //  drop  0x  if  (str.startsWith(   "-   "))  {  //  drop  -  hexDigits--;  }    [BUGGY]  Integer  hexDigits  =  createInteger(str.length()  -  2);  [BUGGY]    if  (hexDigits  >  8)  {  //  too  many  for  an  int    return  createLong(str);  return  createLong(str);  }  return  createInteger(str);  }  char  lastChar  =  str.charAt(str.length()  -  1);  String  mant;  String  dec;  String  exp;  int  decPos  =  str.indexOf('.');  int  expPos  =  str.indexOf('e')  +  str.indexOf('E')  +  1;  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  	projects/Lang7/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	460	461	1	replace	Integer  hexDigits  =  createInteger(str.length()  -  2);	      Integer    hexDigits    =    createInteger(str);    	non-compiled	[CE]  ')'  expected	11	None	replace
24	[BUG]  [BUGGY]  int  hexDigits  =  str.indexOf('-')+  1;  [CE]  ')'  expected  [FE]          AssertionError    [CONTEXT]    throw  new  NumberFormatException(   "A  blank  string  is  not  a  valid  number   ");  }  if  (str.startsWith(   "--   "))  {  return  null;  }  if  (str.startsWith(   "0x   ")  ||  str.startsWith(   "-0x   ")  ||  str.startsWith(   "0X   ")  ||  str.startsWith(   "-0X   "))  {  int  hexDigits  =  str.length()  -  2;  //  drop  0x  if  (str.startsWith(   "-   "))  {  //  drop  -  hexDigits--;  }    [BUGGY]  int  hexDigits  =  str.indexOf('-')+  1;  [BUGGY]    if  (hexDigits  >  8)  {  //  too  many  for  an  int    return  createLong(str);  return  createLong(str);  }  return  createInteger(str);  }  char  lastChar  =  str.charAt(str.length()  -  1);  String  mant;  String  dec;  String  exp;  int  decPos  =  str.indexOf('.');  int  expPos  =  str.indexOf('e')  +  str.indexOf('E')  +  1;  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  	projects/Lang7/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	460	461	1	replace	int  hexDigits  =  str.indexOf('-')+  1;	      int    hexDigits    =    str.indexOf('-');    	non-compiled	[CE]  ')'  expected	12	None	replace
25	[BUG]  [BUGGY]  int  hexDigits  =  str.lastIndexOf('-');  [CE]  ')'  expected  [FE]            AssertionError    [CONTEXT]    throw  new  NumberFormatException(   "A  blank  string  is  not  a  valid  number   ");  }  if  (str.startsWith(   "--   "))  {  return  null;  }  if  (str.startsWith(   "0x   ")  ||  str.startsWith(   "-0x   ")  ||  str.startsWith(   "0X   ")  ||  str.startsWith(   "-0X   "))  {  int  hexDigits  =  str.length()  -  2;  //  drop  0x  if  (str.startsWith(   "-   "))  {  //  drop  -  hexDigits--;  }    [BUGGY]  int  hexDigits  =  str.lastIndexOf('-');  [BUGGY]    if  (hexDigits  >  8)  {  //  too  many  for  an  int    return  createLong(str);  return  createLong(str);  }  return  createInteger(str);  }  char  lastChar  =  str.charAt(str.length()  -  1);  String  mant;  String  dec;  String  exp;  int  decPos  =  str.indexOf('.');  int  expPos  =  str.indexOf('e')  +  str.indexOf('E')  +  1;  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  	projects/Lang7/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	460	461	1	replace	int  hexDigits  =  str.lastIndexOf('-');	      int    hexDigits    =    str.indexOf('-');    	non-compiled	[CE]  ')'  expected	12	None	replace
26	[BUG]  [BUGGY]  int  hexDigits  =  str.indexOf('-',  4);  [CE]  ')'  expected  [FE]              AssertionError    [CONTEXT]    throw  new  NumberFormatException(   "A  blank  string  is  not  a  valid  number   ");  }  if  (str.startsWith(   "--   "))  {  return  null;  }  if  (str.startsWith(   "0x   ")  ||  str.startsWith(   "-0x   ")  ||  str.startsWith(   "0X   ")  ||  str.startsWith(   "-0X   "))  {  int  hexDigits  =  str.length()  -  2;  //  drop  0x  if  (str.startsWith(   "-   "))  {  //  drop  -  hexDigits--;  }    [BUGGY]  int  hexDigits  =  str.indexOf('-',  4);  [BUGGY]    if  (hexDigits  >  8)  {  //  too  many  for  an  int    return  createLong(str);  return  createLong(str);  }  return  createInteger(str);  }  char  lastChar  =  str.charAt(str.length()  -  1);  String  mant;  String  dec;  String  exp;  int  decPos  =  str.indexOf('.');  int  expPos  =  str.indexOf('e')  +  str.indexOf('E')  +  1;  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  	projects/Lang7/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	460	461	1	replace	int  hexDigits  =  str.indexOf('-',  4);	      int    hexDigits    =    str.indexOf('-');    	non-compiled	[CE]  ')'  expected	12	None	replace
27	[BUG]  [BUGGY]  int  hexDigits  =  str.indexOf('-',  2);  [CE]  ')'  expected  [FE]                AssertionError    [CONTEXT]    throw  new  NumberFormatException(   "A  blank  string  is  not  a  valid  number   ");  }  if  (str.startsWith(   "--   "))  {  return  null;  }  if  (str.startsWith(   "0x   ")  ||  str.startsWith(   "-0x   ")  ||  str.startsWith(   "0X   ")  ||  str.startsWith(   "-0X   "))  {  int  hexDigits  =  str.length()  -  2;  //  drop  0x  if  (str.startsWith(   "-   "))  {  //  drop  -  hexDigits--;  }    [BUGGY]  int  hexDigits  =  str.indexOf('-',  2);  [BUGGY]    if  (hexDigits  >  8)  {  //  too  many  for  an  int    return  createLong(str);  return  createLong(str);  }  return  createInteger(str);  }  char  lastChar  =  str.charAt(str.length()  -  1);  String  mant;  String  dec;  String  exp;  int  decPos  =  str.indexOf('.');  int  expPos  =  str.indexOf('e')  +  str.indexOf('E')  +  1;  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  	projects/Lang7/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	460	461	1	replace	int  hexDigits  =  str.indexOf('-',  2);	      int    hexDigits    =    str.indexOf('-');    	non-compiled	[CE]  ')'  expected	12	None	replace
28	[BUG]  [BUGGY]  Integer  hexDigits  =  createInteger(hexDigits);  [CE]  ')'  expected  [FE]        AssertionError    [CONTEXT]    throw  new  NumberFormatException(   "A  blank  string  is  not  a  valid  number   ");  }  if  (str.startsWith(   "--   "))  {  return  null;  }  if  (str.startsWith(   "0x   ")  ||  str.startsWith(   "-0x   ")  ||  str.startsWith(   "0X   ")  ||  str.startsWith(   "-0X   "))  {  int  hexDigits  =  str.length()  -  2;  //  drop  0x  if  (str.startsWith(   "-   "))  {  //  drop  -  hexDigits--;  }    [BUGGY]  Integer  hexDigits  =  createInteger(hexDigits);  [BUGGY]    if  (hexDigits  >  8)  {  //  too  many  for  an  int    return  createLong(str);  return  createLong(str);  }  return  createInteger(str);  }  char  lastChar  =  str.charAt(str.length()  -  1);  String  mant;  String  dec;  String  exp;  int  decPos  =  str.indexOf('.');  int  expPos  =  str.indexOf('e')  +  str.indexOf('E')  +  1;  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  	projects/Lang7/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	460	461	1	replace	Integer  hexDigits  =  createInteger(hexDigits);	      Integer    hexDigits    =    createInteger(str);    	non-compiled	[CE]  ')'  expected	11	None	replace
29	[BUG]  [BUGGY]  Integer  hexDigits  =  createBigInteger(str);  [CE]  ')'  expected  [FE]          AssertionError    [CONTEXT]    throw  new  NumberFormatException(   "A  blank  string  is  not  a  valid  number   ");  }  if  (str.startsWith(   "--   "))  {  return  null;  }  if  (str.startsWith(   "0x   ")  ||  str.startsWith(   "-0x   ")  ||  str.startsWith(   "0X   ")  ||  str.startsWith(   "-0X   "))  {  int  hexDigits  =  str.length()  -  2;  //  drop  0x  if  (str.startsWith(   "-   "))  {  //  drop  -  hexDigits--;  }    [BUGGY]  Integer  hexDigits  =  createBigInteger(str);  [BUGGY]    if  (hexDigits  >  8)  {  //  too  many  for  an  int    return  createLong(str);  return  createLong(str);  }  return  createInteger(str);  }  char  lastChar  =  str.charAt(str.length()  -  1);  String  mant;  String  dec;  String  exp;  int  decPos  =  str.indexOf('.');  int  expPos  =  str.indexOf('e')  +  str.indexOf('E')  +  1;  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  	projects/Lang7/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	460	461	1	replace	Integer  hexDigits  =  createBigInteger(str);	      Integer    hexDigits    =    createInteger(str);    	non-compiled	[CE]  ')'  expected	11	None	replace
30	[BUG]  [BUGGY]  if(hexDigits  >=  0)  {  //  too  many  for  an  int  return  createLong(str);  }  [CE]  ')'  expected  [FE]          AssertionError    [CONTEXT]    throw  new  NumberFormatException(   "A  blank  string  is  not  a  valid  number   ");  }  if  (str.startsWith(   "--   "))  {  return  null;  }  if  (str.startsWith(   "0x   ")  ||  str.startsWith(   "-0x   ")  ||  str.startsWith(   "0X   ")  ||  str.startsWith(   "-0X   "))  {  int  hexDigits  =  str.length()  -  2;  //  drop  0x  if  (str.startsWith(   "-   "))  {  //  drop  -  hexDigits--;  }    [BUGGY]  if(hexDigits  >=  0)  {  //  too  many  for  an  int  return  createLong(str);  }  [BUGGY]    return  createLong(str);  }  return  createInteger(str);  }  char  lastChar  =  str.charAt(str.length()  -  1);  String  mant;  String  dec;  String  exp;  int  decPos  =  str.indexOf('.');  int  expPos  =  str.indexOf('e')  +  str.indexOf('E')  +  1;  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  	projects/Lang7/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	460	461	1	replace	if(hexDigits  >=  0)  {  //  too  many  for  an  int  return  createLong(str);  }	  if(hexDigits    >    0)    {    //    too    many    for    an    int    return    createLong(str);    }    	non-compiled	[CE]  ')'  expected	2	None	replace
31	[BUG]  [BUGGY]  int  hexDigits  =  str.indexOf('-'  +  1);  [CE]  ')'  expected  [FE]          AssertionError    [CONTEXT]    throw  new  NumberFormatException(   "A  blank  string  is  not  a  valid  number   ");  }  if  (str.startsWith(   "--   "))  {  return  null;  }  if  (str.startsWith(   "0x   ")  ||  str.startsWith(   "-0x   ")  ||  str.startsWith(   "0X   ")  ||  str.startsWith(   "-0X   "))  {  int  hexDigits  =  str.length()  -  2;  //  drop  0x  if  (str.startsWith(   "-   "))  {  //  drop  -  hexDigits--;  }    [BUGGY]  int  hexDigits  =  str.indexOf('-'  +  1);  [BUGGY]    if  (hexDigits  >  8)  {  //  too  many  for  an  int    return  createLong(str);  return  createLong(str);  }  return  createInteger(str);  }  char  lastChar  =  str.charAt(str.length()  -  1);  String  mant;  String  dec;  String  exp;  int  decPos  =  str.indexOf('.');  int  expPos  =  str.indexOf('e')  +  str.indexOf('E')  +  1;  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  	projects/Lang7/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	460	461	1	replace	int  hexDigits  =  str.indexOf('-'  +  1);	      int    hexDigits    =    str.indexOf('-');    	non-compiled	[CE]  ')'  expected	12	None	replace
32	[BUG]  [BUGGY]  int  hexDigits  =  str.indexOf('-',  16);  [CE]  ')'  expected  [FE]            AssertionError    [CONTEXT]    throw  new  NumberFormatException(   "A  blank  string  is  not  a  valid  number   ");  }  if  (str.startsWith(   "--   "))  {  return  null;  }  if  (str.startsWith(   "0x   ")  ||  str.startsWith(   "-0x   ")  ||  str.startsWith(   "0X   ")  ||  str.startsWith(   "-0X   "))  {  int  hexDigits  =  str.length()  -  2;  //  drop  0x  if  (str.startsWith(   "-   "))  {  //  drop  -  hexDigits--;  }    [BUGGY]  int  hexDigits  =  str.indexOf('-',  16);  [BUGGY]    if  (hexDigits  >  8)  {  //  too  many  for  an  int    return  createLong(str);  return  createLong(str);  }  return  createInteger(str);  }  char  lastChar  =  str.charAt(str.length()  -  1);  String  mant;  String  dec;  String  exp;  int  decPos  =  str.indexOf('.');  int  expPos  =  str.indexOf('e')  +  str.indexOf('E')  +  1;  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  	projects/Lang7/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	460	461	1	replace	int  hexDigits  =  str.indexOf('-',  16);	      int    hexDigits    =    str.indexOf('-');    	non-compiled	[CE]  ')'  expected	12	None	replace
33	[BUG]  [BUGGY]  int  hexDigits  =  str.indexOf('-')+  2;  [CE]  ')'  expected  [FE]              AssertionError    [CONTEXT]    throw  new  NumberFormatException(   "A  blank  string  is  not  a  valid  number   ");  }  if  (str.startsWith(   "--   "))  {  return  null;  }  if  (str.startsWith(   "0x   ")  ||  str.startsWith(   "-0x   ")  ||  str.startsWith(   "0X   ")  ||  str.startsWith(   "-0X   "))  {  int  hexDigits  =  str.length()  -  2;  //  drop  0x  if  (str.startsWith(   "-   "))  {  //  drop  -  hexDigits--;  }    [BUGGY]  int  hexDigits  =  str.indexOf('-')+  2;  [BUGGY]    if  (hexDigits  >  8)  {  //  too  many  for  an  int    return  createLong(str);  return  createLong(str);  }  return  createInteger(str);  }  char  lastChar  =  str.charAt(str.length()  -  1);  String  mant;  String  dec;  String  exp;  int  decPos  =  str.indexOf('.');  int  expPos  =  str.indexOf('e')  +  str.indexOf('E')  +  1;  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  	projects/Lang7/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	460	461	1	replace	int  hexDigits  =  str.indexOf('-')+  2;	      int    hexDigits    =    str.indexOf('-');    	non-compiled	[CE]  ')'  expected	12	None	replace
34	[BUG]  [BUGGY]  if(hexDigits  >=  0)  {  //  too  many  for  an  int  return  createInteger(str);  }  [CE]  ')'  expected  [FE]              AssertionError    [CONTEXT]    throw  new  NumberFormatException(   "A  blank  string  is  not  a  valid  number   ");  }  if  (str.startsWith(   "--   "))  {  return  null;  }  if  (str.startsWith(   "0x   ")  ||  str.startsWith(   "-0x   ")  ||  str.startsWith(   "0X   ")  ||  str.startsWith(   "-0X   "))  {  int  hexDigits  =  str.length()  -  2;  //  drop  0x  if  (str.startsWith(   "-   "))  {  //  drop  -  hexDigits--;  }    [BUGGY]  if(hexDigits  >=  0)  {  //  too  many  for  an  int  return  createInteger(str);  }  [BUGGY]    return  createLong(str);  }  return  createInteger(str);  }  char  lastChar  =  str.charAt(str.length()  -  1);  String  mant;  String  dec;  String  exp;  int  decPos  =  str.indexOf('.');  int  expPos  =  str.indexOf('e')  +  str.indexOf('E')  +  1;  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  	projects/Lang7/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	460	461	1	replace	if(hexDigits  >=  0)  {  //  too  many  for  an  int  return  createInteger(str);  }	  if(hexDigits    >    0)    {    //    too    many    for    an    int    return    createInteger(str);    }    	non-compiled	[CE]  ')'  expected	4	None	replace
35	[BUG]  [BUGGY]  int  hexDigits  =  createInteger(str);  [CE]  ')'  expected  [FE]                AssertionError    [CONTEXT]    throw  new  NumberFormatException(   "A  blank  string  is  not  a  valid  number   ");  }  if  (str.startsWith(   "--   "))  {  return  null;  }  if  (str.startsWith(   "0x   ")  ||  str.startsWith(   "-0x   ")  ||  str.startsWith(   "0X   ")  ||  str.startsWith(   "-0X   "))  {  int  hexDigits  =  str.length()  -  2;  //  drop  0x  if  (str.startsWith(   "-   "))  {  //  drop  -  hexDigits--;  }    [BUGGY]  int  hexDigits  =  createInteger(str);  [BUGGY]    return  createLong(str);  }  return  createInteger(str);  }  char  lastChar  =  str.charAt(str.length()  -  1);  String  mant;  String  dec;  String  exp;  int  decPos  =  str.indexOf('.');  int  expPos  =  str.indexOf('e')  +  str.indexOf('E')  +  1;  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  	projects/Lang7/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	460	461	1	replace	int  hexDigits  =  createInteger(str);	  if(hexDigits    >    0)    {    //    too    many    for    an    int    return    createInteger(str);    }    	non-compiled	[CE]  ')'  expected	4	None	replace
36	[BUG]  [BUGGY]  Integer  str  =  createInteger(hexDigits);  [CE]  ')'  expected  [FE]                AssertionError    [CONTEXT]    throw  new  NumberFormatException(   "A  blank  string  is  not  a  valid  number   ");  }  if  (str.startsWith(   "--   "))  {  return  null;  }  if  (str.startsWith(   "0x   ")  ||  str.startsWith(   "-0x   ")  ||  str.startsWith(   "0X   ")  ||  str.startsWith(   "-0X   "))  {  int  hexDigits  =  str.length()  -  2;  //  drop  0x  if  (str.startsWith(   "-   "))  {  //  drop  -  hexDigits--;  }    [BUGGY]  Integer  str  =  createInteger(hexDigits);  [BUGGY]    return  createLong(str);  }  return  createInteger(str);  }  char  lastChar  =  str.charAt(str.length()  -  1);  String  mant;  String  dec;  String  exp;  int  decPos  =  str.indexOf('.');  int  expPos  =  str.indexOf('e')  +  str.indexOf('E')  +  1;  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  	projects/Lang7/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	460	461	1	replace	Integer  str  =  createInteger(hexDigits);	      	non-compiled	[CE]  ')'  expected	5	None	replace
37	[BUG]  [BUGGY]  int  decPos  =  str.indexOf('e')+  str.indexOf('E')+  1;  [CE]  ')'  expected  [FE]                  AssertionError    [CONTEXT]    throw  new  NumberFormatException(   "A  blank  string  is  not  a  valid  number   ");  }  if  (str.startsWith(   "--   "))  {  return  null;  }  if  (str.startsWith(   "0x   ")  ||  str.startsWith(   "-0x   ")  ||  str.startsWith(   "0X   ")  ||  str.startsWith(   "-0X   "))  {  int  hexDigits  =  str.length()  -  2;  //  drop  0x  if  (str.startsWith(   "-   "))  {  //  drop  -  hexDigits--;  }    [BUGGY]  int  decPos  =  str.indexOf('e')+  str.indexOf('E')+  1;  [BUGGY]    return  createLong(str);  }  return  createInteger(str);  }  char  lastChar  =  str.charAt(str.length()  -  1);  String  mant;  String  dec;  String  exp;  int  decPos  =  str.indexOf('.');  int  expPos  =  str.indexOf('e')  +  str.indexOf('E')  +  1;  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  	projects/Lang7/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	460	461	1	replace	int  decPos  =  str.indexOf('e')+  str.indexOf('E')+  1;	      	non-compiled	[CE]  ')'  expected	5	None	replace
38	[BUG]  [BUGGY]  int  decPos  =  str.indexOf('-');  [CE]  ')'  expected  [FE]                    AssertionError    [CONTEXT]    throw  new  NumberFormatException(   "A  blank  string  is  not  a  valid  number   ");  }  if  (str.startsWith(   "--   "))  {  return  null;  }  if  (str.startsWith(   "0x   ")  ||  str.startsWith(   "-0x   ")  ||  str.startsWith(   "0X   ")  ||  str.startsWith(   "-0X   "))  {  int  hexDigits  =  str.length()  -  2;  //  drop  0x  if  (str.startsWith(   "-   "))  {  //  drop  -  hexDigits--;  }    [BUGGY]  int  decPos  =  str.indexOf('-');  [BUGGY]    return  createLong(str);  }  return  createInteger(str);  }  char  lastChar  =  str.charAt(str.length()  -  1);  String  mant;  String  dec;  String  exp;  int  decPos  =  str.indexOf('.');  int  expPos  =  str.indexOf('e')  +  str.indexOf('E')  +  1;  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  	projects/Lang7/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	460	461	1	replace	int  decPos  =  str.indexOf('-');	      	non-compiled	[CE]  ')'  expected	5	None	replace
39	[BUG]  [BUGGY]  int  hexDigits  =  str.indexOf('.')+  1;  [CE]  ')'  expected  [FE]        AssertionError    [CONTEXT]    throw  new  NumberFormatException(   "A  blank  string  is  not  a  valid  number   ");  }  if  (str.startsWith(   "--   "))  {  return  null;  }  if  (str.startsWith(   "0x   ")  ||  str.startsWith(   "-0x   ")  ||  str.startsWith(   "0X   ")  ||  str.startsWith(   "-0X   "))  {  int  hexDigits  =  str.length()  -  2;  //  drop  0x  if  (str.startsWith(   "-   "))  {  //  drop  -  hexDigits--;  }    [BUGGY]  int  hexDigits  =  str.indexOf('.')+  1;  [BUGGY]    if  (hexDigits  >  8)  {  //  too  many  for  an  int    return  createLong(str);  return  createLong(str);  }  return  createInteger(str);  }  char  lastChar  =  str.charAt(str.length()  -  1);  String  mant;  String  dec;  String  exp;  int  decPos  =  str.indexOf('.');  int  expPos  =  str.indexOf('e')  +  str.indexOf('E')  +  1;  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  	projects/Lang7/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	460	461	1	replace	int  hexDigits  =  str.indexOf('.')+  1;	      int    hexDigits    =    str.indexOf('.');    	non-compiled	[CE]  ')'  expected	13	None	replace
40	[BUG]  [BUGGY]  int  hexDigits  =  str.indexOf('.',  16);  [CE]  ')'  expected  [FE]          AssertionError    [CONTEXT]    throw  new  NumberFormatException(   "A  blank  string  is  not  a  valid  number   ");  }  if  (str.startsWith(   "--   "))  {  return  null;  }  if  (str.startsWith(   "0x   ")  ||  str.startsWith(   "-0x   ")  ||  str.startsWith(   "0X   ")  ||  str.startsWith(   "-0X   "))  {  int  hexDigits  =  str.length()  -  2;  //  drop  0x  if  (str.startsWith(   "-   "))  {  //  drop  -  hexDigits--;  }    [BUGGY]  int  hexDigits  =  str.indexOf('.',  16);  [BUGGY]    if  (hexDigits  >  8)  {  //  too  many  for  an  int    return  createLong(str);  return  createLong(str);  }  return  createInteger(str);  }  char  lastChar  =  str.charAt(str.length()  -  1);  String  mant;  String  dec;  String  exp;  int  decPos  =  str.indexOf('.');  int  expPos  =  str.indexOf('e')  +  str.indexOf('E')  +  1;  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  	projects/Lang7/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	460	461	1	replace	int  hexDigits  =  str.indexOf('.',  16);	      int    hexDigits    =    str.indexOf('.');    	non-compiled	[CE]  ')'  expected	13	None	replace
41	[BUG]  [BUGGY]  int  hexDigits  =  str.length()  2;  [CE]  ')'  expected  [FE]              AssertionError    [CONTEXT]    throw  new  NumberFormatException(   "A  blank  string  is  not  a  valid  number   ");  }  if  (str.startsWith(   "--   "))  {  return  null;  }  if  (str.startsWith(   "0x   ")  ||  str.startsWith(   "-0x   ")  ||  str.startsWith(   "0X   ")  ||  str.startsWith(   "-0X   "))  {  int  hexDigits  =  str.length()  -  2;  //  drop  0x  if  (str.startsWith(   "-   "))  {  //  drop  -  hexDigits--;  }    [BUGGY]  int  hexDigits  =  str.length()  2;  [BUGGY]    if  (hexDigits  >  8)  {  //  too  many  for  an  int    return  createLong(str);  return  createLong(str);  }  return  createInteger(str);  }  char  lastChar  =  str.charAt(str.length()  -  1);  String  mant;  String  dec;  String  exp;  int  decPos  =  str.indexOf('.');  int  expPos  =  str.indexOf('e')  +  str.indexOf('E')  +  1;  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  	projects/Lang7/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	460	461	1	replace	int  hexDigits  =  str.length()  2;	      int    hexDigits    =    str.length()    -    1;    	non-compiled	[CE]  ')'  expected	9	None	replace
42	[BUG]  [BUGGY]  Integer  str  =  createInteger(str);  [CE]  ')'  expected  [FE]                AssertionError    [CONTEXT]    throw  new  NumberFormatException(   "A  blank  string  is  not  a  valid  number   ");  }  if  (str.startsWith(   "--   "))  {  return  null;  }  if  (str.startsWith(   "0x   ")  ||  str.startsWith(   "-0x   ")  ||  str.startsWith(   "0X   ")  ||  str.startsWith(   "-0X   "))  {  int  hexDigits  =  str.length()  -  2;  //  drop  0x  if  (str.startsWith(   "-   "))  {  //  drop  -  hexDigits--;  }    [BUGGY]  Integer  str  =  createInteger(str);  [BUGGY]    return  createLong(str);  }  return  createInteger(str);  }  char  lastChar  =  str.charAt(str.length()  -  1);  String  mant;  String  dec;  String  exp;  int  decPos  =  str.indexOf('.');  int  expPos  =  str.indexOf('e')  +  str.indexOf('E')  +  1;  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  	projects/Lang7/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	460	461	1	replace	Integer  str  =  createInteger(str);	      	non-compiled	[CE]  ')'  expected	5	None	replace
43	[BUG]  [BUGGY]  int  expPos  =  str.indexOf('-');  [CE]  ')'  expected  [FE]                  AssertionError    [CONTEXT]    throw  new  NumberFormatException(   "A  blank  string  is  not  a  valid  number   ");  }  if  (str.startsWith(   "--   "))  {  return  null;  }  if  (str.startsWith(   "0x   ")  ||  str.startsWith(   "-0x   ")  ||  str.startsWith(   "0X   ")  ||  str.startsWith(   "-0X   "))  {  int  hexDigits  =  str.length()  -  2;  //  drop  0x  if  (str.startsWith(   "-   "))  {  //  drop  -  hexDigits--;  }    [BUGGY]  int  expPos  =  str.indexOf('-');  [BUGGY]    return  createLong(str);  }  return  createInteger(str);  }  char  lastChar  =  str.charAt(str.length()  -  1);  String  mant;  String  dec;  String  exp;  int  decPos  =  str.indexOf('.');  int  expPos  =  str.indexOf('e')  +  str.indexOf('E')  +  1;  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  	projects/Lang7/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	460	461	1	replace	int  expPos  =  str.indexOf('-');	      	non-compiled	[CE]  ')'  expected	5	None	replace
44	[BUG]  [BUGGY]  int  expPos  =  str.indexOf('e')+  str.indexOf('E')-  1;  [CE]  ')'  expected  [FE]                    AssertionError    [CONTEXT]    throw  new  NumberFormatException(   "A  blank  string  is  not  a  valid  number   ");  }  if  (str.startsWith(   "--   "))  {  return  null;  }  if  (str.startsWith(   "0x   ")  ||  str.startsWith(   "-0x   ")  ||  str.startsWith(   "0X   ")  ||  str.startsWith(   "-0X   "))  {  int  hexDigits  =  str.length()  -  2;  //  drop  0x  if  (str.startsWith(   "-   "))  {  //  drop  -  hexDigits--;  }    [BUGGY]  int  expPos  =  str.indexOf('e')+  str.indexOf('E')-  1;  [BUGGY]    return  createLong(str);  }  return  createInteger(str);  }  char  lastChar  =  str.charAt(str.length()  -  1);  String  mant;  String  dec;  String  exp;  int  decPos  =  str.indexOf('.');  int  expPos  =  str.indexOf('e')  +  str.indexOf('E')  +  1;  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  	projects/Lang7/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	460	461	1	replace	int  expPos  =  str.indexOf('e')+  str.indexOf('E')-  1;	      	non-compiled	[CE]  ')'  expected	5	None	replace
