bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  ||  expPos  <  str.length())  {  throw  new  NumberFormatException(str  + "  is  not  a  valid  number.   ");  [CE]  [FE]                AssertionError      [CONTEXT]      if  (decPos  >  -1)  {  if  (expPos  >  -1)  {  if  (expPos  <  decPos  ||  expPos  >  str.length())  {  throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  }  dec  =  str.substring(decPos  +  1,  expPos);  }  else  {  dec  =  str.substring(decPos  +  1);  }      [BUGGY]  ||  expPos  <  str.length())  {  throw  new  NumberFormatException(str  + "  is  not  a  valid  number.   ");  [BUGGY]      mant  =  str.substring(0,  decPos);  }  else  {  if  (expPos  >  -1)  {  if  (expPos  >  str.length())  {  throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  }  mant  =  str.substring(0,  expPos);  }  else  {  mant  =  str;  }  dec  =  null;  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  	projects/Lang7/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	482	482	1	replace	||  expPos  <  str.length())  {  throw  new  NumberFormatException(str  + "  is  not  a  valid  number.   ");	  if(dec!=    null)    {    if(decPos    >    -1)    {    if(expPos    <    decPos    ||    expPos    >    str.length())    {    throw    new    NumberFormatException(str    +   "    is    not    a    valid    number.    	non-compiled	[CE]  	51	None	replace
2	[BUG]  [BUGGY]  ||  expPos  ==  str.length())  {  throw  new  NumberFormatException(str  + "  is  not  a  valid  number.   ");  [CE]  [FE]                  AssertionError      [CONTEXT]      if  (decPos  >  -1)  {  if  (expPos  >  -1)  {  if  (expPos  <  decPos  ||  expPos  >  str.length())  {  throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  }  dec  =  str.substring(decPos  +  1,  expPos);  }  else  {  dec  =  str.substring(decPos  +  1);  }      [BUGGY]  ||  expPos  ==  str.length())  {  throw  new  NumberFormatException(str  + "  is  not  a  valid  number.   ");  [BUGGY]      mant  =  str.substring(0,  decPos);  }  else  {  if  (expPos  >  -1)  {  if  (expPos  >  str.length())  {  throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  }  mant  =  str.substring(0,  expPos);  }  else  {  mant  =  str;  }  dec  =  null;  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  	projects/Lang7/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	482	482	1	replace	||  expPos  ==  str.length())  {  throw  new  NumberFormatException(str  + "  is  not  a  valid  number.   ");	  if(dec!=    null)    {    if(decPos    >    -1)    {    if(expPos    <    decPos    ||    expPos    >    str.length())    {    throw    new    NumberFormatException(str    +   "    is    not    a    valid    number.    	non-compiled	[CE]  	51	None	replace
3	[BUG]  [BUGGY]  ||  expPos  <  str.length())  {  throw  new  NumberFormatException(str  + "  is  not  a  valid  number.  [CE]  [FE]                    AssertionError      [CONTEXT]      if  (decPos  >  -1)  {  if  (expPos  >  -1)  {  if  (expPos  <  decPos  ||  expPos  >  str.length())  {  throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  }  dec  =  str.substring(decPos  +  1,  expPos);  }  else  {  dec  =  str.substring(decPos  +  1);  }      [BUGGY]  ||  expPos  <  str.length())  {  throw  new  NumberFormatException(str  + "  is  not  a  valid  number.  [BUGGY]      mant  =  str.substring(0,  decPos);  }  else  {  if  (expPos  >  -1)  {  if  (expPos  >  str.length())  {  throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  }  mant  =  str.substring(0,  expPos);  }  else  {  mant  =  str;  }  dec  =  null;  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  	projects/Lang7/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	482	482	1	replace	||  expPos  <  str.length())  {  throw  new  NumberFormatException(str  + "  is  not  a  valid  number.	  if(dec!=    null)    {    if(decPos    >    -1)    {    if(expPos    <    decPos    ||    expPos    >    str.length())    {    throw    new    NumberFormatException(str    +   "    is    not    a    valid    number.    	non-compiled	[CE]  	51	None	replace
4	[BUG]  [BUGGY]  mant  =  str.substring(1,  expPos  +  1);  [CE]  ')'  expected  [FE]            AssertionError      [CONTEXT]      if  (decPos  >  -1)  {  if  (expPos  >  -1)  {  if  (expPos  <  decPos  ||  expPos  >  str.length())  {  throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  }  dec  =  str.substring(decPos  +  1,  expPos);  }  else  {  dec  =  str.substring(decPos  +  1);  }      [BUGGY]  mant  =  str.substring(1,  expPos  +  1);  [BUGGY]      }  else  {  if  (expPos  >  -1)  {  if  (expPos  >  str.length())  {  throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  }  mant  =  str.substring(0,  expPos);  }  else  {  mant  =  str;  }  dec  =  null;  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  	projects/Lang7/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	482	482	1	replace	mant  =  str.substring(1,  expPos  +  1);	  mant    =    str.substring(1,    decPos    +    1);    	non-compiled	[CE]  ')'  expected	15	None	replace
5	[BUG]  [BUGGY]  mant  =  str.substring(0,  expPos  +  1,  decPos);  [CE]  ')'  expected  [FE]                AssertionError      [CONTEXT]      if  (decPos  >  -1)  {  if  (expPos  >  -1)  {  if  (expPos  <  decPos  ||  expPos  >  str.length())  {  throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  }  dec  =  str.substring(decPos  +  1,  expPos);  }  else  {  dec  =  str.substring(decPos  +  1);  }      [BUGGY]  mant  =  str.substring(0,  expPos  +  1,  decPos);  [BUGGY]      }  else  {  if  (expPos  >  -1)  {  if  (expPos  >  str.length())  {  throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  }  mant  =  str.substring(0,  expPos);  }  else  {  mant  =  str;  }  dec  =  null;  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  	projects/Lang7/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	482	482	1	replace	mant  =  str.substring(0,  expPos  +  1,  decPos);	  mant    =    str.substring(0,    expPos    +    1);    	non-compiled	[CE]  ')'  expected	3	None	replace
6	[BUG]  [BUGGY]  mant  =  str.substring(0,  prevPos  +  1);  [CE]  ')'  expected  [FE]                  AssertionError      [CONTEXT]      if  (decPos  >  -1)  {  if  (expPos  >  -1)  {  if  (expPos  <  decPos  ||  expPos  >  str.length())  {  throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  }  dec  =  str.substring(decPos  +  1,  expPos);  }  else  {  dec  =  str.substring(decPos  +  1);  }      [BUGGY]  mant  =  str.substring(0,  prevPos  +  1);  [BUGGY]      }  else  {  if  (expPos  >  -1)  {  if  (expPos  >  str.length())  {  throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  }  mant  =  str.substring(0,  expPos);  }  else  {  mant  =  str;  }  dec  =  null;  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  	projects/Lang7/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	482	482	1	replace	mant  =  str.substring(0,  prevPos  +  1);	  mant    =    str.substring(0,    expPos    +    1);    	non-compiled	[CE]  ')'  expected	3	None	replace
7	[BUG]  [BUGGY]  Integer  decPos  =  getDecPos(1);  [CE]  ')'  expected  [FE]                  AssertionError      [CONTEXT]      if  (decPos  >  -1)  {  if  (expPos  >  -1)  {  if  (expPos  <  decPos  ||  expPos  >  str.length())  {  throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  }  dec  =  str.substring(decPos  +  1,  expPos);  }  else  {  dec  =  str.substring(decPos  +  1);  }      [BUGGY]  Integer  decPos  =  getDecPos(1);  [BUGGY]      mant  =  str.substring(0,  decPos);  }  else  {  if  (expPos  >  -1)  {  if  (expPos  >  str.length())  {  throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  }  mant  =  str.substring(0,  expPos);  }  else  {  mant  =  str;  }  dec  =  null;  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  	projects/Lang7/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	482	482	1	replace	Integer  decPos  =  getDecPos(1);	  Integer    decPos    =    getDecPos(0);    	non-compiled	[CE]  ')'  expected	40	None	replace
8	[BUG]  [BUGGY]  Integer  decPos  =  getDecPos(2);  [CE]  ')'  expected  [FE]                    AssertionError      [CONTEXT]      if  (decPos  >  -1)  {  if  (expPos  >  -1)  {  if  (expPos  <  decPos  ||  expPos  >  str.length())  {  throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  }  dec  =  str.substring(decPos  +  1,  expPos);  }  else  {  dec  =  str.substring(decPos  +  1);  }      [BUGGY]  Integer  decPos  =  getDecPos(2);  [BUGGY]      mant  =  str.substring(0,  decPos);  }  else  {  if  (expPos  >  -1)  {  if  (expPos  >  str.length())  {  throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  }  mant  =  str.substring(0,  expPos);  }  else  {  mant  =  str;  }  dec  =  null;  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  	projects/Lang7/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	482	482	1	replace	Integer  decPos  =  getDecPos(2);	  Integer    decPos    =    getDecPos(0);    	non-compiled	[CE]  ')'  expected	40	None	replace
9	[BUG]  [BUGGY]  mant  =  str.substring(0,  expPos  -  1  +  1);  [CE]  ')'  expected  [FE]                    AssertionError      [CONTEXT]      if  (decPos  >  -1)  {  if  (expPos  >  -1)  {  if  (expPos  <  decPos  ||  expPos  >  str.length())  {  throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  }  dec  =  str.substring(decPos  +  1,  expPos);  }  else  {  dec  =  str.substring(decPos  +  1);  }      [BUGGY]  mant  =  str.substring(0,  expPos  -  1  +  1);  [BUGGY]      }  else  {  if  (expPos  >  -1)  {  if  (expPos  >  str.length())  {  throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  }  mant  =  str.substring(0,  expPos);  }  else  {  mant  =  str;  }  dec  =  null;  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  	projects/Lang7/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	482	482	1	replace	mant  =  str.substring(0,  expPos  -  1  +  1);	  mant    =    str.substring(0,    decPos    -    1    +    1);    	non-compiled	[CE]  ')'  expected	21	None	replace
10	[BUG]  [BUGGY]  ||  expPos  <  dec.length())  {  throw  new  NumberFormatException(str  + "  is  not  a  valid  number.   "  [CE]  [FE]                AssertionError      [CONTEXT]      if  (decPos  >  -1)  {  if  (expPos  >  -1)  {  if  (expPos  <  decPos  ||  expPos  >  str.length())  {  throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  }  dec  =  str.substring(decPos  +  1,  expPos);  }  else  {  dec  =  str.substring(decPos  +  1);  }      [BUGGY]  ||  expPos  <  dec.length())  {  throw  new  NumberFormatException(str  + "  is  not  a  valid  number.   "  [BUGGY]      mant  =  str.substring(0,  decPos);  }  else  {  if  (expPos  >  -1)  {  if  (expPos  >  str.length())  {  throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  }  mant  =  str.substring(0,  expPos);  }  else  {  mant  =  str;  }  dec  =  null;  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  	projects/Lang7/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	482	482	1	replace	||  expPos  <  dec.length())  {  throw  new  NumberFormatException(str  + "  is  not  a  valid  number.   "	  ||    expPos    <    str.length())    {    throw    new    NumberFormatException(str    +   "    is    not    a    valid    number.       "    	non-compiled	[CE]  	6	None	replace
11	[BUG]  [BUGGY]  ||  expPos  <  decPos.length())  {  throw  new  NumberFormatException(str  + "  is  not  a  valid  number.   "  [CE]  [FE]                  AssertionError      [CONTEXT]      if  (decPos  >  -1)  {  if  (expPos  >  -1)  {  if  (expPos  <  decPos  ||  expPos  >  str.length())  {  throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  }  dec  =  str.substring(decPos  +  1,  expPos);  }  else  {  dec  =  str.substring(decPos  +  1);  }      [BUGGY]  ||  expPos  <  decPos.length())  {  throw  new  NumberFormatException(str  + "  is  not  a  valid  number.   "  [BUGGY]      mant  =  str.substring(0,  decPos);  }  else  {  if  (expPos  >  -1)  {  if  (expPos  >  str.length())  {  throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  }  mant  =  str.substring(0,  expPos);  }  else  {  mant  =  str;  }  dec  =  null;  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  	projects/Lang7/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	482	482	1	replace	||  expPos  <  decPos.length())  {  throw  new  NumberFormatException(str  + "  is  not  a  valid  number.   "	  ||    expPos    <    str.length())    {    throw    new    NumberFormatException(str    +   "    is    not    a    valid    number.       "    	non-compiled	[CE]  	6	None	replace
12	[BUG]  [BUGGY]  ||  expPos  <  str.length())  {  throw  new  NumberFormatException( " "  +  str  + "  is  not  a  valid  number.   "  [CE]  [FE]                    AssertionError      [CONTEXT]      if  (decPos  >  -1)  {  if  (expPos  >  -1)  {  if  (expPos  <  decPos  ||  expPos  >  str.length())  {  throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  }  dec  =  str.substring(decPos  +  1,  expPos);  }  else  {  dec  =  str.substring(decPos  +  1);  }      [BUGGY]  ||  expPos  <  str.length())  {  throw  new  NumberFormatException( " "  +  str  + "  is  not  a  valid  number.   "  [BUGGY]      mant  =  str.substring(0,  decPos);  }  else  {  if  (expPos  >  -1)  {  if  (expPos  >  str.length())  {  throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  }  mant  =  str.substring(0,  expPos);  }  else  {  mant  =  str;  }  dec  =  null;  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  	projects/Lang7/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	482	482	1	replace	||  expPos  <  str.length())  {  throw  new  NumberFormatException( " "  +  str  + "  is  not  a  valid  number.   "	  ||    expPos    <    str.length())    {    throw    new    NumberFormatException(str    +   "    is    not    a    valid    number.       "    	non-compiled	[CE]  	6	None	replace
13	[BUG]  [BUGGY]  Integer  expPos  =  str.length();  [CE]  ')'  expected  [FE]                  AssertionError      [CONTEXT]      if  (decPos  >  -1)  {  if  (expPos  >  -1)  {  if  (expPos  <  decPos  ||  expPos  >  str.length())  {  throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  }  dec  =  str.substring(decPos  +  1,  expPos);  }  else  {  dec  =  str.substring(decPos  +  1);  }      [BUGGY]  Integer  expPos  =  str.length();  [BUGGY]      mant  =  str.substring(0,  decPos);  }  else  {  if  (expPos  >  -1)  {  if  (expPos  >  str.length())  {  throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  }  mant  =  str.substring(0,  expPos);  }  else  {  mant  =  str;  }  dec  =  null;  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  	projects/Lang7/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	482	482	1	replace	Integer  expPos  =  str.length();	  int    expPos    =    str.length()    +    1;    	non-compiled	[CE]  ')'  expected	28	None	replace
14	[BUG]  [BUGGY]  mant  =  str.substring(decPos  +  1,  expPos  +  1);  [CE]  ')'  expected  [FE]                    AssertionError      [CONTEXT]      if  (decPos  >  -1)  {  if  (expPos  >  -1)  {  if  (expPos  <  decPos  ||  expPos  >  str.length())  {  throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  }  dec  =  str.substring(decPos  +  1,  expPos);  }  else  {  dec  =  str.substring(decPos  +  1);  }      [BUGGY]  mant  =  str.substring(decPos  +  1,  expPos  +  1);  [BUGGY]      }  else  {  if  (expPos  >  -1)  {  if  (expPos  >  str.length())  {  throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  }  mant  =  str.substring(0,  expPos);  }  else  {  mant  =  str;  }  dec  =  null;  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  	projects/Lang7/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	482	482	1	replace	mant  =  str.substring(decPos  +  1,  expPos  +  1);	  mant    =    str.substring(decPos    +    1,    expPos);    	non-compiled	[CE]  ')'  expected	63	None	replace
15	[BUG]  [BUGGY]  mant  =  str.substring(decPos  +  1,  expPos  -  1);  [CE]  ')'  expected  [FE]                      AssertionError      [CONTEXT]      if  (decPos  >  -1)  {  if  (expPos  >  -1)  {  if  (expPos  <  decPos  ||  expPos  >  str.length())  {  throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  }  dec  =  str.substring(decPos  +  1,  expPos);  }  else  {  dec  =  str.substring(decPos  +  1);  }      [BUGGY]  mant  =  str.substring(decPos  +  1,  expPos  -  1);  [BUGGY]      }  else  {  if  (expPos  >  -1)  {  if  (expPos  >  str.length())  {  throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  }  mant  =  str.substring(0,  expPos);  }  else  {  mant  =  str;  }  dec  =  null;  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  	projects/Lang7/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	482	482	1	replace	mant  =  str.substring(decPos  +  1,  expPos  -  1);	  mant    =    str.substring(decPos    +    1,    expPos);    	non-compiled	[CE]  ')'  expected	63	None	replace
16	[BUG]  [BUGGY]  int  expPos  =  str.lastIndexOf('.')/  2;  [CE]  ')'  expected  [FE]                AssertionError      [CONTEXT]      if  (decPos  >  -1)  {  if  (expPos  >  -1)  {  if  (expPos  <  decPos  ||  expPos  >  str.length())  {  throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  }  dec  =  str.substring(decPos  +  1,  expPos);  }  else  {  dec  =  str.substring(decPos  +  1);  }      [BUGGY]  int  expPos  =  str.lastIndexOf('.')/  2;  [BUGGY]      mant  =  str.substring(0,  decPos);  }  else  {  if  (expPos  >  -1)  {  if  (expPos  >  str.length())  {  throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  }  mant  =  str.substring(0,  expPos);  }  else  {  mant  =  str;  }  dec  =  null;  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  	projects/Lang7/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	482	482	1	replace	int  expPos  =  str.lastIndexOf('.')/  2;	  int    expPos    =    str.lastIndexOf('.')/    1;    	non-compiled	[CE]  ')'  expected	47	None	replace
17	[BUG]  [BUGGY]  int  expPos  =  str.lastIndexOf('.',  decPos)/  1;  [CE]  ')'  expected  [FE]                  AssertionError      [CONTEXT]      if  (decPos  >  -1)  {  if  (expPos  >  -1)  {  if  (expPos  <  decPos  ||  expPos  >  str.length())  {  throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  }  dec  =  str.substring(decPos  +  1,  expPos);  }  else  {  dec  =  str.substring(decPos  +  1);  }      [BUGGY]  int  expPos  =  str.lastIndexOf('.',  decPos)/  1;  [BUGGY]      mant  =  str.substring(0,  decPos);  }  else  {  if  (expPos  >  -1)  {  if  (expPos  >  str.length())  {  throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  }  mant  =  str.substring(0,  expPos);  }  else  {  mant  =  str;  }  dec  =  null;  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  	projects/Lang7/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	482	482	1	replace	int  expPos  =  str.lastIndexOf('.',  decPos)/  1;	  int    expPos    =    str.lastIndexOf('.')/    1;    	non-compiled	[CE]  ')'  expected	47	None	replace
18	[BUG]  [BUGGY]  int  expPos  =  str.indexOf('.')/  2;  [CE]  ')'  expected  [FE]                    AssertionError      [CONTEXT]      if  (decPos  >  -1)  {  if  (expPos  >  -1)  {  if  (expPos  <  decPos  ||  expPos  >  str.length())  {  throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  }  dec  =  str.substring(decPos  +  1,  expPos);  }  else  {  dec  =  str.substring(decPos  +  1);  }      [BUGGY]  int  expPos  =  str.indexOf('.')/  2;  [BUGGY]      mant  =  str.substring(0,  decPos);  }  else  {  if  (expPos  >  -1)  {  if  (expPos  >  str.length())  {  throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  }  mant  =  str.substring(0,  expPos);  }  else  {  mant  =  str;  }  dec  =  null;  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  	projects/Lang7/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	482	482	1	replace	int  expPos  =  str.indexOf('.')/  2;	  int    expPos    =    str.lastIndexOf('.')/    1;    	non-compiled	[CE]  ')'  expected	47	None	replace
19	[BUG]  [BUGGY]  int  expPos  =  str.lastIndexOf('.',  dec)/  1;  [CE]  ')'  expected  [FE]                      AssertionError      [CONTEXT]      if  (decPos  >  -1)  {  if  (expPos  >  -1)  {  if  (expPos  <  decPos  ||  expPos  >  str.length())  {  throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  }  dec  =  str.substring(decPos  +  1,  expPos);  }  else  {  dec  =  str.substring(decPos  +  1);  }      [BUGGY]  int  expPos  =  str.lastIndexOf('.',  dec)/  1;  [BUGGY]      mant  =  str.substring(0,  decPos);  }  else  {  if  (expPos  >  -1)  {  if  (expPos  >  str.length())  {  throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  }  mant  =  str.substring(0,  expPos);  }  else  {  mant  =  str;  }  dec  =  null;  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  	projects/Lang7/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	482	482	1	replace	int  expPos  =  str.lastIndexOf('.',  dec)/  1;	  int    expPos    =    str.lastIndexOf('.')/    1;    	non-compiled	[CE]  ')'  expected	47	None	replace
20	[BUG]  [BUGGY]  int  decPos  =  str.indexOf('.',  decPos);  [CE]  ')'  expected  [FE]              AssertionError      [CONTEXT]      if  (decPos  >  -1)  {  if  (expPos  >  -1)  {  if  (expPos  <  decPos  ||  expPos  >  str.length())  {  throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  }  dec  =  str.substring(decPos  +  1,  expPos);  }  else  {  dec  =  str.substring(decPos  +  1);  }      [BUGGY]  int  decPos  =  str.indexOf('.',  decPos);  [BUGGY]      mant  =  str.substring(0,  decPos);  }  else  {  if  (expPos  >  -1)  {  if  (expPos  >  str.length())  {  throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  }  mant  =  str.substring(0,  expPos);  }  else  {  mant  =  str;  }  dec  =  null;  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  	projects/Lang7/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	482	482	1	replace	int  decPos  =  str.indexOf('.',  decPos);	  int    decPos    =    str.indexOf('.');    	non-compiled	[CE]  ')'  expected	49	None	replace
21	[BUG]  [BUGGY]  int  decPos  =  str.indexOf('.',  dec);  [CE]  ')'  expected  [FE]                AssertionError      [CONTEXT]      if  (decPos  >  -1)  {  if  (expPos  >  -1)  {  if  (expPos  <  decPos  ||  expPos  >  str.length())  {  throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  }  dec  =  str.substring(decPos  +  1,  expPos);  }  else  {  dec  =  str.substring(decPos  +  1);  }      [BUGGY]  int  decPos  =  str.indexOf('.',  dec);  [BUGGY]      mant  =  str.substring(0,  decPos);  }  else  {  if  (expPos  >  -1)  {  if  (expPos  >  str.length())  {  throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  }  mant  =  str.substring(0,  expPos);  }  else  {  mant  =  str;  }  dec  =  null;  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  	projects/Lang7/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	482	482	1	replace	int  decPos  =  str.indexOf('.',  dec);	  int    decPos    =    str.indexOf('.');    	non-compiled	[CE]  ')'  expected	49	None	replace
22	[BUG]  [BUGGY]  int  decPos  =  str.indexOf('.',  expPos);  [CE]  ')'  expected  [FE]                  AssertionError      [CONTEXT]      if  (decPos  >  -1)  {  if  (expPos  >  -1)  {  if  (expPos  <  decPos  ||  expPos  >  str.length())  {  throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  }  dec  =  str.substring(decPos  +  1,  expPos);  }  else  {  dec  =  str.substring(decPos  +  1);  }      [BUGGY]  int  decPos  =  str.indexOf('.',  expPos);  [BUGGY]      mant  =  str.substring(0,  decPos);  }  else  {  if  (expPos  >  -1)  {  if  (expPos  >  str.length())  {  throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  }  mant  =  str.substring(0,  expPos);  }  else  {  mant  =  str;  }  dec  =  null;  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  	projects/Lang7/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	482	482	1	replace	int  decPos  =  str.indexOf('.',  expPos);	  int    decPos    =    str.indexOf('.');    	non-compiled	[CE]  ')'  expected	49	None	replace
23	[BUG]  [BUGGY]  mant  =  str.substring(0,  decPos  -  1,  expPos  +  1);  [CE]  ')'  expected  [FE]                  AssertionError      [CONTEXT]      if  (decPos  >  -1)  {  if  (expPos  >  -1)  {  if  (expPos  <  decPos  ||  expPos  >  str.length())  {  throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  }  dec  =  str.substring(decPos  +  1,  expPos);  }  else  {  dec  =  str.substring(decPos  +  1);  }      [BUGGY]  mant  =  str.substring(0,  decPos  -  1,  expPos  +  1);  [BUGGY]      }  else  {  if  (expPos  >  -1)  {  if  (expPos  >  str.length())  {  throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  }  mant  =  str.substring(0,  expPos);  }  else  {  mant  =  str;  }  dec  =  null;  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  	projects/Lang7/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	482	482	1	replace	mant  =  str.substring(0,  decPos  -  1,  expPos  +  1);	  mant    =    str.substring(0,    decPos    -    1,    expPos);    	non-compiled	[CE]  ')'  expected	48	None	replace
24	[BUG]  [BUGGY]  mant  =  str.substring(0,  expPos  -  1,  decPos);  [CE]  ')'  expected  [FE]                    AssertionError      [CONTEXT]      if  (decPos  >  -1)  {  if  (expPos  >  -1)  {  if  (expPos  <  decPos  ||  expPos  >  str.length())  {  throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  }  dec  =  str.substring(decPos  +  1,  expPos);  }  else  {  dec  =  str.substring(decPos  +  1);  }      [BUGGY]  mant  =  str.substring(0,  expPos  -  1,  decPos);  [BUGGY]      }  else  {  if  (expPos  >  -1)  {  if  (expPos  >  str.length())  {  throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  }  mant  =  str.substring(0,  expPos);  }  else  {  mant  =  str;  }  dec  =  null;  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  	projects/Lang7/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	482	482	1	replace	mant  =  str.substring(0,  expPos  -  1,  decPos);	  mant    =    str.substring(0,    decPos    -    1,    expPos);    	non-compiled	[CE]  ')'  expected	48	None	replace
25	[BUG]  [BUGGY]  mant  =  str.substring(0,  decPos  -  1,  decPos  +  1);  [CE]  ')'  expected  [FE]                      AssertionError      [CONTEXT]      if  (decPos  >  -1)  {  if  (expPos  >  -1)  {  if  (expPos  <  decPos  ||  expPos  >  str.length())  {  throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  }  dec  =  str.substring(decPos  +  1,  expPos);  }  else  {  dec  =  str.substring(decPos  +  1);  }      [BUGGY]  mant  =  str.substring(0,  decPos  -  1,  decPos  +  1);  [BUGGY]      }  else  {  if  (expPos  >  -1)  {  if  (expPos  >  str.length())  {  throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  }  mant  =  str.substring(0,  expPos);  }  else  {  mant  =  str;  }  dec  =  null;  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  	projects/Lang7/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	482	482	1	replace	mant  =  str.substring(0,  decPos  -  1,  decPos  +  1);	  mant    =    str.substring(0,    decPos    -    1,    expPos);    	non-compiled	[CE]  ')'  expected	48	None	replace
26	[BUG]  [BUGGY]  Integer  decPos  =  getDecPos(dec,  expPos);  [CE]  ')'  expected  [FE]                      AssertionError      [CONTEXT]      if  (decPos  >  -1)  {  if  (expPos  >  -1)  {  if  (expPos  <  decPos  ||  expPos  >  str.length())  {  throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  }  dec  =  str.substring(decPos  +  1,  expPos);  }  else  {  dec  =  str.substring(decPos  +  1);  }      [BUGGY]  Integer  decPos  =  getDecPos(dec,  expPos);  [BUGGY]      mant  =  str.substring(0,  decPos);  }  else  {  if  (expPos  >  -1)  {  if  (expPos  >  str.length())  {  throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  }  mant  =  str.substring(0,  expPos);  }  else  {  mant  =  str;  }  dec  =  null;  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  	projects/Lang7/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	482	482	1	replace	Integer  decPos  =  getDecPos(dec,  expPos);	  Integer    decPos    =    getDecPos(dec);    	non-compiled	[CE]  ')'  expected	11	None	replace
27	[BUG]  [BUGGY]  Integer  decPos  =  getDecPos(dec  +  1);  [CE]  ')'  expected  [FE]                        AssertionError      [CONTEXT]      if  (decPos  >  -1)  {  if  (expPos  >  -1)  {  if  (expPos  <  decPos  ||  expPos  >  str.length())  {  throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  }  dec  =  str.substring(decPos  +  1,  expPos);  }  else  {  dec  =  str.substring(decPos  +  1);  }      [BUGGY]  Integer  decPos  =  getDecPos(dec  +  1);  [BUGGY]      mant  =  str.substring(0,  decPos);  }  else  {  if  (expPos  >  -1)  {  if  (expPos  >  str.length())  {  throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  }  mant  =  str.substring(0,  expPos);  }  else  {  mant  =  str;  }  dec  =  null;  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  	projects/Lang7/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	482	482	1	replace	Integer  decPos  =  getDecPos(dec  +  1);	  Integer    decPos    =    getDecPos(dec);    	non-compiled	[CE]  ')'  expected	11	None	replace
28	[BUG]  [BUGGY]  Integer  decPos  =  getDecPos(dec.length());  [CE]  ')'  expected  [FE]                          AssertionError      [CONTEXT]      if  (decPos  >  -1)  {  if  (expPos  >  -1)  {  if  (expPos  <  decPos  ||  expPos  >  str.length())  {  throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  }  dec  =  str.substring(decPos  +  1,  expPos);  }  else  {  dec  =  str.substring(decPos  +  1);  }      [BUGGY]  Integer  decPos  =  getDecPos(dec.length());  [BUGGY]      mant  =  str.substring(0,  decPos);  }  else  {  if  (expPos  >  -1)  {  if  (expPos  >  str.length())  {  throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  }  mant  =  str.substring(0,  expPos);  }  else  {  mant  =  str;  }  dec  =  null;  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  	projects/Lang7/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	482	482	1	replace	Integer  decPos  =  getDecPos(dec.length());	  Integer    decPos    =    getDecPos(dec);    	non-compiled	[CE]  ')'  expected	11	None	replace
29	[BUG]  [BUGGY]  dec  =  str.substring(decPos  +  1,  expPos  +  3);  [CE]  ')'  expected  [FE]            AssertionError      [CONTEXT]      if  (decPos  >  -1)  {  if  (expPos  >  -1)  {  if  (expPos  <  decPos  ||  expPos  >  str.length())  {  throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  }  dec  =  str.substring(decPos  +  1,  expPos);  }  else  {  dec  =  str.substring(decPos  +  1);  }      [BUGGY]  dec  =  str.substring(decPos  +  1,  expPos  +  3);  [BUGGY]      mant  =  str.substring(0,  decPos);  }  else  {  if  (expPos  >  -1)  {  if  (expPos  >  str.length())  {  throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  }  mant  =  str.substring(0,  expPos);  }  else  {  mant  =  str;  }  dec  =  null;  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  	projects/Lang7/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	482	482	1	replace	dec  =  str.substring(decPos  +  1,  expPos  +  3);	  dec    =    str.substring(decPos    +    1,    expPos    +    1);    	non-compiled	[CE]  ')'  expected	17	None	replace
30	[BUG]  [BUGGY]  dec  =  str.substring(decPos  +  3);  [CE]  ')'  expected  [FE]                AssertionError      [CONTEXT]      if  (decPos  >  -1)  {  if  (expPos  >  -1)  {  if  (expPos  <  decPos  ||  expPos  >  str.length())  {  throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  }  dec  =  str.substring(decPos  +  1,  expPos);  }  else  {  dec  =  str.substring(decPos  +  1);  }      [BUGGY]  dec  =  str.substring(decPos  +  3);  [BUGGY]      mant  =  str.substring(0,  decPos);  }  else  {  if  (expPos  >  -1)  {  if  (expPos  >  str.length())  {  throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  }  mant  =  str.substring(0,  expPos);  }  else  {  mant  =  str;  }  dec  =  null;  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  	projects/Lang7/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	482	482	1	replace	dec  =  str.substring(decPos  +  3);	  dec    =    str.substring(decPos    +    2);    	non-compiled	[CE]  ')'  expected	1	None	replace
31	[BUG]  [BUGGY]  dec  =  str.substring(0,  decPos  +  1);  [CE]  ')'  expected  [FE]                    AssertionError      [CONTEXT]      if  (decPos  >  -1)  {  if  (expPos  >  -1)  {  if  (expPos  <  decPos  ||  expPos  >  str.length())  {  throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  }  dec  =  str.substring(decPos  +  1,  expPos);  }  else  {  dec  =  str.substring(decPos  +  1);  }      [BUGGY]  dec  =  str.substring(0,  decPos  +  1);  [BUGGY]      }  else  {  if  (expPos  >  -1)  {  if  (expPos  >  str.length())  {  throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  }  mant  =  str.substring(0,  expPos);  }  else  {  mant  =  str;  }  dec  =  null;  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  	projects/Lang7/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	482	482	1	replace	dec  =  str.substring(0,  decPos  +  1);	  dec    =    str.substring(0,    decPos);    	non-compiled	[CE]  ')'  expected	5	None	replace
32	[BUG]  [BUGGY]  dec  =  str.substring(0,  1);  [CE]  ')'  expected  [FE]                      AssertionError      [CONTEXT]      if  (decPos  >  -1)  {  if  (expPos  >  -1)  {  if  (expPos  <  decPos  ||  expPos  >  str.length())  {  throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  }  dec  =  str.substring(decPos  +  1,  expPos);  }  else  {  dec  =  str.substring(decPos  +  1);  }      [BUGGY]  dec  =  str.substring(0,  1);  [BUGGY]      }  else  {  if  (expPos  >  -1)  {  if  (expPos  >  str.length())  {  throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  }  mant  =  str.substring(0,  expPos);  }  else  {  mant  =  str;  }  dec  =  null;  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  	projects/Lang7/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	482	482	1	replace	dec  =  str.substring(0,  1);	  dec    =    str.substring(0,    decPos);    	non-compiled	[CE]  ')'  expected	5	None	replace
33	[BUG]  [BUGGY]  dec  =  str.substring(0,  expPos);  [CE]  ')'  expected  [FE]                        AssertionError      [CONTEXT]      if  (decPos  >  -1)  {  if  (expPos  >  -1)  {  if  (expPos  <  decPos  ||  expPos  >  str.length())  {  throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  }  dec  =  str.substring(decPos  +  1,  expPos);  }  else  {  dec  =  str.substring(decPos  +  1);  }      [BUGGY]  dec  =  str.substring(0,  expPos);  [BUGGY]      }  else  {  if  (expPos  >  -1)  {  if  (expPos  >  str.length())  {  throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  }  mant  =  str.substring(0,  expPos);  }  else  {  mant  =  str;  }  dec  =  null;  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  	projects/Lang7/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	482	482	1	replace	dec  =  str.substring(0,  expPos);	  dec    =    str.substring(0,    decPos);    	non-compiled	[CE]  ')'  expected	5	None	replace
34	[BUG]  [BUGGY]  dec  =  str.substring(0,  DEC_POP);  [CE]  ')'  expected  [FE]                          AssertionError      [CONTEXT]      if  (decPos  >  -1)  {  if  (expPos  >  -1)  {  if  (expPos  <  decPos  ||  expPos  >  str.length())  {  throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  }  dec  =  str.substring(decPos  +  1,  expPos);  }  else  {  dec  =  str.substring(decPos  +  1);  }      [BUGGY]  dec  =  str.substring(0,  DEC_POP);  [BUGGY]      }  else  {  if  (expPos  >  -1)  {  if  (expPos  >  str.length())  {  throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  }  mant  =  str.substring(0,  expPos);  }  else  {  mant  =  str;  }  dec  =  null;  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  	projects/Lang7/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	482	482	1	replace	dec  =  str.substring(0,  DEC_POP);	  dec    =    str.substring(0,    decPos);    	non-compiled	[CE]  ')'  expected	5	None	replace
35	[BUG]  [BUGGY]  int  decPos  =  dec.length();  [CE]  ')'  expected  [FE]              AssertionError      [CONTEXT]      if  (decPos  >  -1)  {  if  (expPos  >  -1)  {  if  (expPos  <  decPos  ||  expPos  >  str.length())  {  throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  }  dec  =  str.substring(decPos  +  1,  expPos);  }  else  {  dec  =  str.substring(decPos  +  1);  }      [BUGGY]  int  decPos  =  dec.length();  [BUGGY]      mant  =  str.substring(0,  decPos);  }  else  {  if  (expPos  >  -1)  {  if  (expPos  >  str.length())  {  throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  }  mant  =  str.substring(0,  expPos);  }  else  {  mant  =  str;  }  dec  =  null;  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  	projects/Lang7/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	482	482	1	replace	int  decPos  =  dec.length();	  int    decPos    =    str.length();    	non-compiled	[CE]  ')'  expected	45	None	replace
36	[BUG]  [BUGGY]  int  decPos  =  str.length()  -  1;  [CE]  ')'  expected  [FE]                AssertionError      [CONTEXT]      if  (decPos  >  -1)  {  if  (expPos  >  -1)  {  if  (expPos  <  decPos  ||  expPos  >  str.length())  {  throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  }  dec  =  str.substring(decPos  +  1,  expPos);  }  else  {  dec  =  str.substring(decPos  +  1);  }      [BUGGY]  int  decPos  =  str.length()  -  1;  [BUGGY]      mant  =  str.substring(0,  decPos);  }  else  {  if  (expPos  >  -1)  {  if  (expPos  >  str.length())  {  throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  }  mant  =  str.substring(0,  expPos);  }  else  {  mant  =  str;  }  dec  =  null;  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  	projects/Lang7/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	482	482	1	replace	int  decPos  =  str.length()  -  1;	  int    decPos    =    str.length();    	non-compiled	[CE]  ')'  expected	45	None	replace
37	[BUG]  [BUGGY]  int  decPos  =  str.length()  +  1;  [CE]  ')'  expected  [FE]                  AssertionError      [CONTEXT]      if  (decPos  >  -1)  {  if  (expPos  >  -1)  {  if  (expPos  <  decPos  ||  expPos  >  str.length())  {  throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  }  dec  =  str.substring(decPos  +  1,  expPos);  }  else  {  dec  =  str.substring(decPos  +  1);  }      [BUGGY]  int  decPos  =  str.length()  +  1;  [BUGGY]      mant  =  str.substring(0,  decPos);  }  else  {  if  (expPos  >  -1)  {  if  (expPos  >  str.length())  {  throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  }  mant  =  str.substring(0,  expPos);  }  else  {  mant  =  str;  }  dec  =  null;  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  	projects/Lang7/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	482	482	1	replace	int  decPos  =  str.length()  +  1;	  int    decPos    =    str.length();    	non-compiled	[CE]  ')'  expected	45	None	replace
38	[BUG]  [BUGGY]  int  decPos  =  hexDigits.length();  [CE]  ')'  expected  [FE]                    AssertionError      [CONTEXT]      if  (decPos  >  -1)  {  if  (expPos  >  -1)  {  if  (expPos  <  decPos  ||  expPos  >  str.length())  {  throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  }  dec  =  str.substring(decPos  +  1,  expPos);  }  else  {  dec  =  str.substring(decPos  +  1);  }      [BUGGY]  int  decPos  =  hexDigits.length();  [BUGGY]      mant  =  str.substring(0,  decPos);  }  else  {  if  (expPos  >  -1)  {  if  (expPos  >  str.length())  {  throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  }  mant  =  str.substring(0,  expPos);  }  else  {  mant  =  str;  }  dec  =  null;  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  	projects/Lang7/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	482	482	1	replace	int  decPos  =  hexDigits.length();	  int    decPos    =    str.length();    	non-compiled	[CE]  ')'  expected	45	None	replace
39	[BUG]  [BUGGY]  ||  expPos  >  dec.length())  {  throw  new  NumberFormatException(str  + "  is  not  a  valid  number.   "  [CE]  [FE]                    AssertionError      [CONTEXT]      if  (decPos  >  -1)  {  if  (expPos  >  -1)  {  if  (expPos  <  decPos  ||  expPos  >  str.length())  {  throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  }  dec  =  str.substring(decPos  +  1,  expPos);  }  else  {  dec  =  str.substring(decPos  +  1);  }      [BUGGY]  ||  expPos  >  dec.length())  {  throw  new  NumberFormatException(str  + "  is  not  a  valid  number.   "  [BUGGY]      mant  =  str.substring(0,  decPos);  }  else  {  if  (expPos  >  -1)  {  if  (expPos  >  str.length())  {  throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  }  mant  =  str.substring(0,  expPos);  }  else  {  mant  =  str;  }  dec  =  null;  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  	projects/Lang7/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	482	482	1	replace	||  expPos  >  dec.length())  {  throw  new  NumberFormatException(str  + "  is  not  a  valid  number.   "	  ||    expPos    >    str.length())    {    throw    new    NumberFormatException(str    +   "    is    not    a    valid    number.       "    	non-compiled	[CE]  	8	None	replace
40	[BUG]  [BUGGY]  mant  =  str.substring(0,  decPos  +  1,  expPos  +  1);  [CE]  ')'  expected  [FE]            AssertionError      [CONTEXT]      if  (decPos  >  -1)  {  if  (expPos  >  -1)  {  if  (expPos  <  decPos  ||  expPos  >  str.length())  {  throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  }  dec  =  str.substring(decPos  +  1,  expPos);  }  else  {  dec  =  str.substring(decPos  +  1);  }      [BUGGY]  mant  =  str.substring(0,  decPos  +  1,  expPos  +  1);  [BUGGY]      }  else  {  if  (expPos  >  -1)  {  if  (expPos  >  str.length())  {  throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  }  mant  =  str.substring(0,  expPos);  }  else  {  mant  =  str;  }  dec  =  null;  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  	projects/Lang7/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	482	482	1	replace	mant  =  str.substring(0,  decPos  +  1,  expPos  +  1);	  mant    =    str.substring(0,    decPos    +    1,    expPos);    	non-compiled	[CE]  ')'  expected	34	None	replace
41	[BUG]  [BUGGY]  mant  =  str.substring(0,  decPos  +  1,  expPos  -  1);  [CE]  ')'  expected  [FE]              AssertionError      [CONTEXT]      if  (decPos  >  -1)  {  if  (expPos  >  -1)  {  if  (expPos  <  decPos  ||  expPos  >  str.length())  {  throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  }  dec  =  str.substring(decPos  +  1,  expPos);  }  else  {  dec  =  str.substring(decPos  +  1);  }      [BUGGY]  mant  =  str.substring(0,  decPos  +  1,  expPos  -  1);  [BUGGY]      }  else  {  if  (expPos  >  -1)  {  if  (expPos  >  str.length())  {  throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  }  mant  =  str.substring(0,  expPos);  }  else  {  mant  =  str;  }  dec  =  null;  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  	projects/Lang7/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	482	482	1	replace	mant  =  str.substring(0,  decPos  +  1,  expPos  -  1);	  mant    =    str.substring(0,    decPos    +    1,    expPos);    	non-compiled	[CE]  ')'  expected	34	None	replace
42	[BUG]  [BUGGY]  mant  =  str.substring(0,  decPos  +  1,  expPos  +  2);  [CE]  ')'  expected  [FE]                AssertionError      [CONTEXT]      if  (decPos  >  -1)  {  if  (expPos  >  -1)  {  if  (expPos  <  decPos  ||  expPos  >  str.length())  {  throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  }  dec  =  str.substring(decPos  +  1,  expPos);  }  else  {  dec  =  str.substring(decPos  +  1);  }      [BUGGY]  mant  =  str.substring(0,  decPos  +  1,  expPos  +  2);  [BUGGY]      }  else  {  if  (expPos  >  -1)  {  if  (expPos  >  str.length())  {  throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  }  mant  =  str.substring(0,  expPos);  }  else  {  mant  =  str;  }  dec  =  null;  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  	projects/Lang7/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	482	482	1	replace	mant  =  str.substring(0,  decPos  +  1,  expPos  +  2);	  mant    =    str.substring(0,    decPos    +    1,    expPos);    	non-compiled	[CE]  ')'  expected	34	None	replace
43	[BUG]  [BUGGY]  int  expPos  =  dec.length()  -  1;  [CE]  ')'  expected  [FE]              AssertionError      [CONTEXT]      if  (decPos  >  -1)  {  if  (expPos  >  -1)  {  if  (expPos  <  decPos  ||  expPos  >  str.length())  {  throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  }  dec  =  str.substring(decPos  +  1,  expPos);  }  else  {  dec  =  str.substring(decPos  +  1);  }      [BUGGY]  int  expPos  =  dec.length()  -  1;  [BUGGY]      mant  =  str.substring(0,  decPos);  }  else  {  if  (expPos  >  -1)  {  if  (expPos  >  str.length())  {  throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  }  mant  =  str.substring(0,  expPos);  }  else  {  mant  =  str;  }  dec  =  null;  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  	projects/Lang7/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	482	482	1	replace	int  expPos  =  dec.length()  -  1;	  int    expPos    =    dec.length();    	non-compiled	[CE]  ')'  expected	26	None	replace
44	[BUG]  [BUGGY]  int  expPos  =  dec.length()  +  1;  [CE]  ')'  expected  [FE]                AssertionError      [CONTEXT]      if  (decPos  >  -1)  {  if  (expPos  >  -1)  {  if  (expPos  <  decPos  ||  expPos  >  str.length())  {  throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  }  dec  =  str.substring(decPos  +  1,  expPos);  }  else  {  dec  =  str.substring(decPos  +  1);  }      [BUGGY]  int  expPos  =  dec.length()  +  1;  [BUGGY]      mant  =  str.substring(0,  decPos);  }  else  {  if  (expPos  >  -1)  {  if  (expPos  >  str.length())  {  throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  }  mant  =  str.substring(0,  expPos);  }  else  {  mant  =  str;  }  dec  =  null;  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  	projects/Lang7/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	482	482	1	replace	int  expPos  =  dec.length()  +  1;	  int    expPos    =    dec.length();    	non-compiled	[CE]  ')'  expected	26	None	replace
45	[BUG]  [BUGGY]  int  expPos  =  hexDigits.length();  [CE]  ')'  expected  [FE]                  AssertionError      [CONTEXT]      if  (decPos  >  -1)  {  if  (expPos  >  -1)  {  if  (expPos  <  decPos  ||  expPos  >  str.length())  {  throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  }  dec  =  str.substring(decPos  +  1,  expPos);  }  else  {  dec  =  str.substring(decPos  +  1);  }      [BUGGY]  int  expPos  =  hexDigits.length();  [BUGGY]      mant  =  str.substring(0,  decPos);  }  else  {  if  (expPos  >  -1)  {  if  (expPos  >  str.length())  {  throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  }  mant  =  str.substring(0,  expPos);  }  else  {  mant  =  str;  }  dec  =  null;  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  	projects/Lang7/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	482	482	1	replace	int  expPos  =  hexDigits.length();	  int    expPos    =    dec.length();    	non-compiled	[CE]  ')'  expected	26	None	replace
46	[BUG]  [BUGGY]  nes.add(str.substring(0,  decPos));  [CE]  ')'  expected  [FE]                AssertionError      [CONTEXT]      if  (decPos  >  -1)  {  if  (expPos  >  -1)  {  if  (expPos  <  decPos  ||  expPos  >  str.length())  {  throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  }  dec  =  str.substring(decPos  +  1,  expPos);  }  else  {  dec  =  str.substring(decPos  +  1);  }      [BUGGY]  nes.add(str.substring(0,  decPos));  [BUGGY]      mant  =  str.substring(0,  decPos);  }  else  {  if  (expPos  >  -1)  {  if  (expPos  >  str.length())  {  throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  }  mant  =  str.substring(0,  expPos);  }  else  {  mant  =  str;  }  dec  =  null;  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  	projects/Lang7/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	482	482	1	replace	nes.add(str.substring(0,  decPos));	  if(dec    ==    null)    {    if(expPos    <    decPos    ||    expPos    >    str.length())    {    throw    new    NumberFormatException(   "   ");    }    	non-compiled	[CE]  ')'  expected	57	None	replace
47	[BUG]  [BUGGY]  mant  =  str.substring(0,  decPos).trim();  [CE]  ')'  expected  [FE]                  AssertionError      [CONTEXT]      if  (decPos  >  -1)  {  if  (expPos  >  -1)  {  if  (expPos  <  decPos  ||  expPos  >  str.length())  {  throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  }  dec  =  str.substring(decPos  +  1,  expPos);  }  else  {  dec  =  str.substring(decPos  +  1);  }      [BUGGY]  mant  =  str.substring(0,  decPos).trim();  [BUGGY]      mant  =  str.substring(0,  decPos);  }  else  {  if  (expPos  >  -1)  {  if  (expPos  >  str.length())  {  throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  }  mant  =  str.substring(0,  expPos);  }  else  {  mant  =  str;  }  dec  =  null;  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  	projects/Lang7/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	482	482	1	replace	mant  =  str.substring(0,  decPos).trim();	  if(dec    ==    null)    {    if(expPos    <    decPos    ||    expPos    >    str.length())    {    throw    new    NumberFormatException(   "   ");    }    	non-compiled	[CE]  ')'  expected	57	None	replace
48	[BUG]  [BUGGY]  mant  =  str.substring(0,  expPos  -  2);  [CE]  ')'  expected  [FE]            AssertionError      [CONTEXT]      if  (decPos  >  -1)  {  if  (expPos  >  -1)  {  if  (expPos  <  decPos  ||  expPos  >  str.length())  {  throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  }  dec  =  str.substring(decPos  +  1,  expPos);  }  else  {  dec  =  str.substring(decPos  +  1);  }      [BUGGY]  mant  =  str.substring(0,  expPos  -  2);  [BUGGY]      }  else  {  if  (expPos  >  -1)  {  if  (expPos  >  str.length())  {  throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  }  mant  =  str.substring(0,  expPos);  }  else  {  mant  =  str;  }  dec  =  null;  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  	projects/Lang7/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	482	482	1	replace	mant  =  str.substring(0,  expPos  -  2);	  mant    =    str.substring(0,    decPos    -    2);    	non-compiled	[CE]  ')'  expected	42	None	replace
49	[BUG]  [BUGGY]  mant  =  str.substring(0,  prevPos  -  1);  [CE]  ')'  expected  [FE]                  AssertionError      [CONTEXT]      if  (decPos  >  -1)  {  if  (expPos  >  -1)  {  if  (expPos  <  decPos  ||  expPos  >  str.length())  {  throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  }  dec  =  str.substring(decPos  +  1,  expPos);  }  else  {  dec  =  str.substring(decPos  +  1);  }      [BUGGY]  mant  =  str.substring(0,  prevPos  -  1);  [BUGGY]      }  else  {  if  (expPos  >  -1)  {  if  (expPos  >  str.length())  {  throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  }  mant  =  str.substring(0,  expPos);  }  else  {  mant  =  str;  }  dec  =  null;  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  	projects/Lang7/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	482	482	1	replace	mant  =  str.substring(0,  prevPos  -  1);	  mant    =    str.substring(0,    expPos    -    1);    	non-compiled	[CE]  ')'  expected	20	None	replace
50	[BUG]  [BUGGY]  int  expPos  =  str.indexOf('.',  decPos)+  1;  [CE]  ')'  expected  [FE]                AssertionError      [CONTEXT]      if  (decPos  >  -1)  {  if  (expPos  >  -1)  {  if  (expPos  <  decPos  ||  expPos  >  str.length())  {  throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  }  dec  =  str.substring(decPos  +  1,  expPos);  }  else  {  dec  =  str.substring(decPos  +  1);  }      [BUGGY]  int  expPos  =  str.indexOf('.',  decPos)+  1;  [BUGGY]      mant  =  str.substring(0,  decPos);  }  else  {  if  (expPos  >  -1)  {  if  (expPos  >  str.length())  {  throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  }  mant  =  str.substring(0,  expPos);  }  else  {  mant  =  str;  }  dec  =  null;  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  	projects/Lang7/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	482	482	1	replace	int  expPos  =  str.indexOf('.',  decPos)+  1;	  int    expPos    =    str.lastIndexOf('.',    decPos)+    1;    	non-compiled	[CE]  ')'  expected	36	None	replace
51	[BUG]  [BUGGY]  int  expPos  =  str.lastIndexOf('.',  decPos)+  2;  [CE]  ')'  expected  [FE]                  AssertionError      [CONTEXT]      if  (decPos  >  -1)  {  if  (expPos  >  -1)  {  if  (expPos  <  decPos  ||  expPos  >  str.length())  {  throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  }  dec  =  str.substring(decPos  +  1,  expPos);  }  else  {  dec  =  str.substring(decPos  +  1);  }      [BUGGY]  int  expPos  =  str.lastIndexOf('.',  decPos)+  2;  [BUGGY]      mant  =  str.substring(0,  decPos);  }  else  {  if  (expPos  >  -1)  {  if  (expPos  >  str.length())  {  throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  }  mant  =  str.substring(0,  expPos);  }  else  {  mant  =  str;  }  dec  =  null;  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  	projects/Lang7/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	482	482	1	replace	int  expPos  =  str.lastIndexOf('.',  decPos)+  2;	  int    expPos    =    str.lastIndexOf('.',    decPos)+    1;    	non-compiled	[CE]  ')'  expected	36	None	replace
52	[BUG]  [BUGGY]  int  expPos  =  str.lastIndexOf('.',  decPos  +  1)+  1;  [CE]  ')'  expected  [FE]                    AssertionError      [CONTEXT]      if  (decPos  >  -1)  {  if  (expPos  >  -1)  {  if  (expPos  <  decPos  ||  expPos  >  str.length())  {  throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  }  dec  =  str.substring(decPos  +  1,  expPos);  }  else  {  dec  =  str.substring(decPos  +  1);  }      [BUGGY]  int  expPos  =  str.lastIndexOf('.',  decPos  +  1)+  1;  [BUGGY]      mant  =  str.substring(0,  decPos);  }  else  {  if  (expPos  >  -1)  {  if  (expPos  >  str.length())  {  throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  }  mant  =  str.substring(0,  expPos);  }  else  {  mant  =  str;  }  dec  =  null;  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  	projects/Lang7/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	482	482	1	replace	int  expPos  =  str.lastIndexOf('.',  decPos  +  1)+  1;	  int    expPos    =    str.lastIndexOf('.',    decPos)+    1;    	non-compiled	[CE]  ')'  expected	36	None	replace
53	[BUG]  [BUGGY]  mant  =  str.substring(0,  prevPos  +  2);  [CE]  ')'  expected  [FE]              AssertionError      [CONTEXT]      if  (decPos  >  -1)  {  if  (expPos  >  -1)  {  if  (expPos  <  decPos  ||  expPos  >  str.length())  {  throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  }  dec  =  str.substring(decPos  +  1,  expPos);  }  else  {  dec  =  str.substring(decPos  +  1);  }      [BUGGY]  mant  =  str.substring(0,  prevPos  +  2);  [BUGGY]      }  else  {  if  (expPos  >  -1)  {  if  (expPos  >  str.length())  {  throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  }  mant  =  str.substring(0,  expPos);  }  else  {  mant  =  str;  }  dec  =  null;  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  	projects/Lang7/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	482	482	1	replace	mant  =  str.substring(0,  prevPos  +  2);	  mant    =    str.substring(0,    expPos    +    2);    	non-compiled	[CE]  ')'  expected	35	None	replace
54	[BUG]  [BUGGY]  lungullungul(str.substring(0,  decPos));  [CE]  ')'  expected  [FE]              AssertionError      [CONTEXT]      if  (decPos  >  -1)  {  if  (expPos  >  -1)  {  if  (expPos  <  decPos  ||  expPos  >  str.length())  {  throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  }  dec  =  str.substring(decPos  +  1,  expPos);  }  else  {  dec  =  str.substring(decPos  +  1);  }      [BUGGY]  lungullungul(str.substring(0,  decPos));  [BUGGY]      mant  =  str.substring(0,  decPos);  }  else  {  if  (expPos  >  -1)  {  if  (expPos  >  str.length())  {  throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  }  mant  =  str.substring(0,  expPos);  }  else  {  mant  =  str;  }  dec  =  null;  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  	projects/Lang7/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	482	482	1	replace	lungullungul(str.substring(0,  decPos));	  if(expPos    >    -1)    {    if(expPos    <    decPos    ||    expPos    >    str.length())    {    throw    new    NumberFormatException(   "   ");    }    	non-compiled	[CE]  ')'  expected	56	None	replace
55	[BUG]  [BUGGY]  Integer  decPos  =  str.indexOf('  ')+  2;  [CE]  ')'  expected  [FE]            AssertionError      [CONTEXT]      if  (decPos  >  -1)  {  if  (expPos  >  -1)  {  if  (expPos  <  decPos  ||  expPos  >  str.length())  {  throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  }  dec  =  str.substring(decPos  +  1,  expPos);  }  else  {  dec  =  str.substring(decPos  +  1);  }      [BUGGY]  Integer  decPos  =  str.indexOf('  ')+  2;  [BUGGY]      mant  =  str.substring(0,  decPos);  }  else  {  if  (expPos  >  -1)  {  if  (expPos  >  str.length())  {  throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  }  mant  =  str.substring(0,  expPos);  }  else  {  mant  =  str;  }  dec  =  null;  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  	projects/Lang7/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	482	482	1	replace	Integer  decPos  =  str.indexOf('  ')+  2;	  Integer    decPos    =    str.indexOf('    ')+    1;    	non-compiled	[CE]  ')'  expected	44	None	replace
56	[BUG]  [BUGGY]  Integer  decPos  =  str.lastIndexOf('  ')+  1;  [CE]  ')'  expected  [FE]              AssertionError      [CONTEXT]      if  (decPos  >  -1)  {  if  (expPos  >  -1)  {  if  (expPos  <  decPos  ||  expPos  >  str.length())  {  throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  }  dec  =  str.substring(decPos  +  1,  expPos);  }  else  {  dec  =  str.substring(decPos  +  1);  }      [BUGGY]  Integer  decPos  =  str.lastIndexOf('  ')+  1;  [BUGGY]      mant  =  str.substring(0,  decPos);  }  else  {  if  (expPos  >  -1)  {  if  (expPos  >  str.length())  {  throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  }  mant  =  str.substring(0,  expPos);  }  else  {  mant  =  str;  }  dec  =  null;  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  	projects/Lang7/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	482	482	1	replace	Integer  decPos  =  str.lastIndexOf('  ')+  1;	  Integer    decPos    =    str.indexOf('    ')+    1;    	non-compiled	[CE]  ')'  expected	44	None	replace
57	[BUG]  [BUGGY]  Integer  decPos  =  str.indexOf('  ')/  1;  [CE]  ')'  expected  [FE]                AssertionError      [CONTEXT]      if  (decPos  >  -1)  {  if  (expPos  >  -1)  {  if  (expPos  <  decPos  ||  expPos  >  str.length())  {  throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  }  dec  =  str.substring(decPos  +  1,  expPos);  }  else  {  dec  =  str.substring(decPos  +  1);  }      [BUGGY]  Integer  decPos  =  str.indexOf('  ')/  1;  [BUGGY]      mant  =  str.substring(0,  decPos);  }  else  {  if  (expPos  >  -1)  {  if  (expPos  >  str.length())  {  throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  }  mant  =  str.substring(0,  expPos);  }  else  {  mant  =  str;  }  dec  =  null;  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  	projects/Lang7/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	482	482	1	replace	Integer  decPos  =  str.indexOf('  ')/  1;	  Integer    decPos    =    str.indexOf('    ')+    1;    	non-compiled	[CE]  ')'  expected	44	None	replace
58	[BUG]  [BUGGY]  int  expPos  =  str.lastIndexOf('.',  0);  [CE]  ')'  expected  [FE]                AssertionError      [CONTEXT]      if  (decPos  >  -1)  {  if  (expPos  >  -1)  {  if  (expPos  <  decPos  ||  expPos  >  str.length())  {  throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  }  dec  =  str.substring(decPos  +  1,  expPos);  }  else  {  dec  =  str.substring(decPos  +  1);  }      [BUGGY]  int  expPos  =  str.lastIndexOf('.',  0);  [BUGGY]      mant  =  str.substring(0,  decPos);  }  else  {  if  (expPos  >  -1)  {  if  (expPos  >  str.length())  {  throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  }  mant  =  str.substring(0,  expPos);  }  else  {  mant  =  str;  }  dec  =  null;  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  	projects/Lang7/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	482	482	1	replace	int  expPos  =  str.lastIndexOf('.',  0);	  int    expPos    =    str.lastIndexOf('.',    1);    	non-compiled	[CE]  ')'  expected	14	None	replace
59	[BUG]  [BUGGY]  ||  expPos  <  str.length())  {  throw  new  NumberFormatException( " ");  [CE]  [FE]                  AssertionError      [CONTEXT]      if  (decPos  >  -1)  {  if  (expPos  >  -1)  {  if  (expPos  <  decPos  ||  expPos  >  str.length())  {  throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  }  dec  =  str.substring(decPos  +  1,  expPos);  }  else  {  dec  =  str.substring(decPos  +  1);  }      [BUGGY]  ||  expPos  <  str.length())  {  throw  new  NumberFormatException( " ");  [BUGGY]      mant  =  str.substring(0,  decPos);  }  else  {  if  (expPos  >  -1)  {  if  (expPos  >  str.length())  {  throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  }  mant  =  str.substring(0,  expPos);  }  else  {  mant  =  str;  }  dec  =  null;  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  	projects/Lang7/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	482	482	1	replace	||  expPos  <  str.length())  {  throw  new  NumberFormatException( " ");	  ||    expPos    ==    str.length())    {    throw    new    NumberFormatException(str    +   "    is    not    a    valid    number.       "    	non-compiled	[CE]  	7	None	replace
60	[BUG]  [BUGGY]  mant  =  str.substring(0,  dec).trim();  [CE]  ')'  expected  [FE]                  AssertionError      [CONTEXT]      if  (decPos  >  -1)  {  if  (expPos  >  -1)  {  if  (expPos  <  decPos  ||  expPos  >  str.length())  {  throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  }  dec  =  str.substring(decPos  +  1,  expPos);  }  else  {  dec  =  str.substring(decPos  +  1);  }      [BUGGY]  mant  =  str.substring(0,  dec).trim();  [BUGGY]      }  else  {  if  (expPos  >  -1)  {  if  (expPos  >  str.length())  {  throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  }  mant  =  str.substring(0,  expPos);  }  else  {  mant  =  str;  }  dec  =  null;  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  	projects/Lang7/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	482	482	1	replace	mant  =  str.substring(0,  dec).trim();	  mant    =    str.substring(0,    1).trim();    	non-compiled	[CE]  ')'  expected	32	None	replace
61	[BUG]  [BUGGY]  mant  =  str.substring(0,  2).trim();  [CE]  ')'  expected  [FE]                    AssertionError      [CONTEXT]      if  (decPos  >  -1)  {  if  (expPos  >  -1)  {  if  (expPos  <  decPos  ||  expPos  >  str.length())  {  throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  }  dec  =  str.substring(decPos  +  1,  expPos);  }  else  {  dec  =  str.substring(decPos  +  1);  }      [BUGGY]  mant  =  str.substring(0,  2).trim();  [BUGGY]      }  else  {  if  (expPos  >  -1)  {  if  (expPos  >  str.length())  {  throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  }  mant  =  str.substring(0,  expPos);  }  else  {  mant  =  str;  }  dec  =  null;  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  	projects/Lang7/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	482	482	1	replace	mant  =  str.substring(0,  2).trim();	  mant    =    str.substring(0,    1).trim();    	non-compiled	[CE]  ')'  expected	32	None	replace
62	[BUG]  [BUGGY]  Dec  <  Object>  dec  =  str.substring(decPos  +  1,  expPos);  [CE]  ')'  expected  [FE]              AssertionError      [CONTEXT]      if  (decPos  >  -1)  {  if  (expPos  >  -1)  {  if  (expPos  <  decPos  ||  expPos  >  str.length())  {  throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  }  dec  =  str.substring(decPos  +  1,  expPos);  }  else  {  dec  =  str.substring(decPos  +  1);  }      [BUGGY]  Dec  <  Object>  dec  =  str.substring(decPos  +  1,  expPos);  [BUGGY]      mant  =  str.substring(0,  decPos);  }  else  {  if  (expPos  >  -1)  {  if  (expPos  >  str.length())  {  throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  }  mant  =  str.substring(0,  expPos);  }  else  {  mant  =  str;  }  dec  =  null;  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  	projects/Lang7/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	482	482	1	replace	Dec  <  Object>  dec  =  str.substring(decPos  +  1,  expPos);	  Dec    <    Object>    dec    =    str.substring(decPos    +    1);    	non-compiled	[CE]  ')'  expected	38	None	replace
63	[BUG]  [BUGGY]  Dec  <  Object>  dec  =  str.substring(0,  decPos  +  1);  [CE]  ')'  expected  [FE]                AssertionError      [CONTEXT]      if  (decPos  >  -1)  {  if  (expPos  >  -1)  {  if  (expPos  <  decPos  ||  expPos  >  str.length())  {  throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  }  dec  =  str.substring(decPos  +  1,  expPos);  }  else  {  dec  =  str.substring(decPos  +  1);  }      [BUGGY]  Dec  <  Object>  dec  =  str.substring(0,  decPos  +  1);  [BUGGY]      mant  =  str.substring(0,  decPos);  }  else  {  if  (expPos  >  -1)  {  if  (expPos  >  str.length())  {  throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  }  mant  =  str.substring(0,  expPos);  }  else  {  mant  =  str;  }  dec  =  null;  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  	projects/Lang7/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	482	482	1	replace	Dec  <  Object>  dec  =  str.substring(0,  decPos  +  1);	  Dec    <    Object>    dec    =    str.substring(decPos    +    1);    	non-compiled	[CE]  ')'  expected	38	None	replace
64	[BUG]  [BUGGY]  mant  =  str.substring(1  +  1,  decPos);  [CE]  ')'  expected  [FE]                    AssertionError      [CONTEXT]      if  (decPos  >  -1)  {  if  (expPos  >  -1)  {  if  (expPos  <  decPos  ||  expPos  >  str.length())  {  throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  }  dec  =  str.substring(decPos  +  1,  expPos);  }  else  {  dec  =  str.substring(decPos  +  1);  }      [BUGGY]  mant  =  str.substring(1  +  1,  decPos);  [BUGGY]      }  else  {  if  (expPos  >  -1)  {  if  (expPos  >  str.length())  {  throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  }  mant  =  str.substring(0,  expPos);  }  else  {  mant  =  str;  }  dec  =  null;  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  	projects/Lang7/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	482	482	1	replace	mant  =  str.substring(1  +  1,  decPos);	  mant    =    str.substring(decPos    +    1,    decPos);    	non-compiled	[CE]  ')'  expected	43	None	replace
65	[BUG]  [BUGGY]  char  expPos  =  str.length();  [CE]  ')'  expected  [FE]                AssertionError      [CONTEXT]      if  (decPos  >  -1)  {  if  (expPos  >  -1)  {  if  (expPos  <  decPos  ||  expPos  >  str.length())  {  throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  }  dec  =  str.substring(decPos  +  1,  expPos);  }  else  {  dec  =  str.substring(decPos  +  1);  }      [BUGGY]  char  expPos  =  str.length();  [BUGGY]      mant  =  str.substring(0,  decPos);  }  else  {  if  (expPos  >  -1)  {  if  (expPos  >  str.length())  {  throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  }  mant  =  str.substring(0,  expPos);  }  else  {  mant  =  str;  }  dec  =  null;  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  	projects/Lang7/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	482	482	1	replace	char  expPos  =  str.length();	  int    expPos    =    str.length()    -    1;    	non-compiled	[CE]  ')'  expected	27	None	replace
66	[BUG]  [BUGGY]  mant  =  str.substring(decPos  +  1);  [CE]  ')'  expected  [FE]                  AssertionError      [CONTEXT]      if  (decPos  >  -1)  {  if  (expPos  >  -1)  {  if  (expPos  <  decPos  ||  expPos  >  str.length())  {  throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  }  dec  =  str.substring(decPos  +  1,  expPos);  }  else  {  dec  =  str.substring(decPos  +  1);  }      [BUGGY]  mant  =  str.substring(decPos  +  1);  [BUGGY]      mant  =  str.substring(0,  decPos);  }  else  {  if  (expPos  >  -1)  {  if  (expPos  >  str.length())  {  throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  }  mant  =  str.substring(0,  expPos);  }  else  {  mant  =  str;  }  dec  =  null;  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  	projects/Lang7/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	482	482	1	replace	mant  =  str.substring(decPos  +  1);	  if(expPos    <    decPos    ||    expPos    >    str.length())    {    throw    new    NumberFormatException(   "   ");    }    	non-compiled	[CE]  ')'  expected	58	None	replace
67	[BUG]  [BUGGY]  int  expPos  =  str.indexOf('.')+  2;  [CE]  ')'  expected  [FE]                  AssertionError      [CONTEXT]      if  (decPos  >  -1)  {  if  (expPos  >  -1)  {  if  (expPos  <  decPos  ||  expPos  >  str.length())  {  throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  }  dec  =  str.substring(decPos  +  1,  expPos);  }  else  {  dec  =  str.substring(decPos  +  1);  }      [BUGGY]  int  expPos  =  str.indexOf('.')+  2;  [BUGGY]      mant  =  str.substring(0,  decPos);  }  else  {  if  (expPos  >  -1)  {  if  (expPos  >  str.length())  {  throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  }  mant  =  str.substring(0,  expPos);  }  else  {  mant  =  str;  }  dec  =  null;  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  	projects/Lang7/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	482	482	1	replace	int  expPos  =  str.indexOf('.')+  2;	  int    expPos    =    str.indexOf('.')+    1;    	non-compiled	[CE]  ')'  expected	25	None	replace
68	[BUG]  [BUGGY]  dec  =  str.substring(decPos  +  1,  expPos  +  4);  [CE]  ')'  expected  [FE]                AssertionError      [CONTEXT]      if  (decPos  >  -1)  {  if  (expPos  >  -1)  {  if  (expPos  <  decPos  ||  expPos  >  str.length())  {  throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  }  dec  =  str.substring(decPos  +  1,  expPos);  }  else  {  dec  =  str.substring(decPos  +  1);  }      [BUGGY]  dec  =  str.substring(decPos  +  1,  expPos  +  4);  [BUGGY]      mant  =  str.substring(0,  decPos);  }  else  {  if  (expPos  >  -1)  {  if  (expPos  >  str.length())  {  throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  }  mant  =  str.substring(0,  expPos);  }  else  {  mant  =  str;  }  dec  =  null;  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  	projects/Lang7/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	482	482	1	replace	dec  =  str.substring(decPos  +  1,  expPos  +  4);	  dec    =    str.substring(decPos    +    1,    expPos    +    2);    	non-compiled	[CE]  ')'  expected	19	None	replace
69	[BUG]  [BUGGY]  mant  =  str.substring(1,  expPos  +  2);  [CE]  ')'  expected  [FE]            AssertionError      [CONTEXT]      if  (decPos  >  -1)  {  if  (expPos  >  -1)  {  if  (expPos  <  decPos  ||  expPos  >  str.length())  {  throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  }  dec  =  str.substring(decPos  +  1,  expPos);  }  else  {  dec  =  str.substring(decPos  +  1);  }      [BUGGY]  mant  =  str.substring(1,  expPos  +  2);  [BUGGY]      }  else  {  if  (expPos  >  -1)  {  if  (expPos  >  str.length())  {  throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  }  mant  =  str.substring(0,  expPos);  }  else  {  mant  =  str;  }  dec  =  null;  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  	projects/Lang7/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	482	482	1	replace	mant  =  str.substring(1,  expPos  +  2);	  mant    =    str.substring(1,    decPos    +    2);    	non-compiled	[CE]  ')'  expected	54	None	replace
70	[BUG]  [BUGGY]  int  decPos  =  str.lastIndexOf('.',  dec);  [CE]  ')'  expected  [FE]            AssertionError      [CONTEXT]      if  (decPos  >  -1)  {  if  (expPos  >  -1)  {  if  (expPos  <  decPos  ||  expPos  >  str.length())  {  throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  }  dec  =  str.substring(decPos  +  1,  expPos);  }  else  {  dec  =  str.substring(decPos  +  1);  }      [BUGGY]  int  decPos  =  str.lastIndexOf('.',  dec);  [BUGGY]      mant  =  str.substring(0,  decPos);  }  else  {  if  (expPos  >  -1)  {  if  (expPos  >  str.length())  {  throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  }  mant  =  str.substring(0,  expPos);  }  else  {  mant  =  str;  }  dec  =  null;  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  	projects/Lang7/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	482	482	1	replace	int  decPos  =  str.lastIndexOf('.',  dec);	  int    decPos    =    str.lastIndexOf('.');    	non-compiled	[CE]  ')'  expected	60	None	replace
71	[BUG]  [BUGGY]  int  decPos  =  str.lastIndexOf('.',  decPos);  [CE]  ')'  expected  [FE]              AssertionError      [CONTEXT]      if  (decPos  >  -1)  {  if  (expPos  >  -1)  {  if  (expPos  <  decPos  ||  expPos  >  str.length())  {  throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  }  dec  =  str.substring(decPos  +  1,  expPos);  }  else  {  dec  =  str.substring(decPos  +  1);  }      [BUGGY]  int  decPos  =  str.lastIndexOf('.',  decPos);  [BUGGY]      mant  =  str.substring(0,  decPos);  }  else  {  if  (expPos  >  -1)  {  if  (expPos  >  str.length())  {  throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  }  mant  =  str.substring(0,  expPos);  }  else  {  mant  =  str;  }  dec  =  null;  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  	projects/Lang7/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	482	482	1	replace	int  decPos  =  str.lastIndexOf('.',  decPos);	  int    decPos    =    str.lastIndexOf('.');    	non-compiled	[CE]  ')'  expected	60	None	replace
72	[BUG]  [BUGGY]  int  decPos  =  str.lastIndexOf('.',  1);  [CE]  ')'  expected  [FE]                AssertionError      [CONTEXT]      if  (decPos  >  -1)  {  if  (expPos  >  -1)  {  if  (expPos  <  decPos  ||  expPos  >  str.length())  {  throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  }  dec  =  str.substring(decPos  +  1,  expPos);  }  else  {  dec  =  str.substring(decPos  +  1);  }      [BUGGY]  int  decPos  =  str.lastIndexOf('.',  1);  [BUGGY]      mant  =  str.substring(0,  decPos);  }  else  {  if  (expPos  >  -1)  {  if  (expPos  >  str.length())  {  throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  }  mant  =  str.substring(0,  expPos);  }  else  {  mant  =  str;  }  dec  =  null;  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  	projects/Lang7/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	482	482	1	replace	int  decPos  =  str.lastIndexOf('.',  1);	  int    decPos    =    str.lastIndexOf('.');    	non-compiled	[CE]  ')'  expected	60	None	replace
73	[BUG]  [BUGGY]  int  expPos  =  0;  [CE]  ')'  expected  [FE]                    AssertionError      [CONTEXT]      if  (decPos  >  -1)  {  if  (expPos  >  -1)  {  if  (expPos  <  decPos  ||  expPos  >  str.length())  {  throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  }  dec  =  str.substring(decPos  +  1,  expPos);  }  else  {  dec  =  str.substring(decPos  +  1);  }      [BUGGY]  int  expPos  =  0;  [BUGGY]      mant  =  str.substring(0,  decPos);  }  else  {  if  (expPos  >  -1)  {  if  (expPos  >  str.length())  {  throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  }  mant  =  str.substring(0,  expPos);  }  else  {  mant  =  str;  }  dec  =  null;  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  	projects/Lang7/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	482	482	1	replace	int  expPos  =  0;	  int    expPos    =    decPos;    	non-compiled	[CE]  ')'  expected	29	None	replace
74	[BUG]  [BUGGY]  int  expPos  =  decPos  +  1;  [CE]  ')'  expected  [FE]                      AssertionError      [CONTEXT]      if  (decPos  >  -1)  {  if  (expPos  >  -1)  {  if  (expPos  <  decPos  ||  expPos  >  str.length())  {  throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  }  dec  =  str.substring(decPos  +  1,  expPos);  }  else  {  dec  =  str.substring(decPos  +  1);  }      [BUGGY]  int  expPos  =  decPos  +  1;  [BUGGY]      mant  =  str.substring(0,  decPos);  }  else  {  if  (expPos  >  -1)  {  if  (expPos  >  str.length())  {  throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  }  mant  =  str.substring(0,  expPos);  }  else  {  mant  =  str;  }  dec  =  null;  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  	projects/Lang7/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	482	482	1	replace	int  expPos  =  decPos  +  1;	  int    expPos    =    decPos;    	non-compiled	[CE]  ')'  expected	29	None	replace
75	[BUG]  [BUGGY]  int  expPos  =  1;  [CE]  ')'  expected  [FE]                        AssertionError      [CONTEXT]      if  (decPos  >  -1)  {  if  (expPos  >  -1)  {  if  (expPos  <  decPos  ||  expPos  >  str.length())  {  throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  }  dec  =  str.substring(decPos  +  1,  expPos);  }  else  {  dec  =  str.substring(decPos  +  1);  }      [BUGGY]  int  expPos  =  1;  [BUGGY]      mant  =  str.substring(0,  decPos);  }  else  {  if  (expPos  >  -1)  {  if  (expPos  >  str.length())  {  throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  }  mant  =  str.substring(0,  expPos);  }  else  {  mant  =  str;  }  dec  =  null;  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  	projects/Lang7/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	482	482	1	replace	int  expPos  =  1;	  int    expPos    =    decPos;    	non-compiled	[CE]  ')'  expected	29	None	replace
76	[BUG]  [BUGGY]  int  expPos  =  decPos  -  1;  [CE]  ')'  expected  [FE]                          AssertionError      [CONTEXT]      if  (decPos  >  -1)  {  if  (expPos  >  -1)  {  if  (expPos  <  decPos  ||  expPos  >  str.length())  {  throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  }  dec  =  str.substring(decPos  +  1,  expPos);  }  else  {  dec  =  str.substring(decPos  +  1);  }      [BUGGY]  int  expPos  =  decPos  -  1;  [BUGGY]      mant  =  str.substring(0,  decPos);  }  else  {  if  (expPos  >  -1)  {  if  (expPos  >  str.length())  {  throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  }  mant  =  str.substring(0,  expPos);  }  else  {  mant  =  str;  }  dec  =  null;  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  	projects/Lang7/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	482	482	1	replace	int  expPos  =  decPos  -  1;	  int    expPos    =    decPos;    	non-compiled	[CE]  ')'  expected	29	None	replace
77	[BUG]  [BUGGY]  int  expPos  =  str.lastIndexOf('.',  decPos  +  1);  [CE]  ')'  expected  [FE]              AssertionError      [CONTEXT]      if  (decPos  >  -1)  {  if  (expPos  >  -1)  {  if  (expPos  <  decPos  ||  expPos  >  str.length())  {  throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  }  dec  =  str.substring(decPos  +  1,  expPos);  }  else  {  dec  =  str.substring(decPos  +  1);  }      [BUGGY]  int  expPos  =  str.lastIndexOf('.',  decPos  +  1);  [BUGGY]      mant  =  str.substring(0,  decPos);  }  else  {  if  (expPos  >  -1)  {  if  (expPos  >  str.length())  {  throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  }  mant  =  str.substring(0,  expPos);  }  else  {  mant  =  str;  }  dec  =  null;  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  	projects/Lang7/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	482	482	1	replace	int  expPos  =  str.lastIndexOf('.',  decPos  +  1);	  int    expPos    =    str.lastIndexOf('.',    decPos);    	non-compiled	[CE]  ')'  expected	13	None	replace
78	[BUG]  [BUGGY]  int  expPos  =  str.lastIndexOf('.',  decPos  -  1);  [CE]  ')'  expected  [FE]                AssertionError      [CONTEXT]      if  (decPos  >  -1)  {  if  (expPos  >  -1)  {  if  (expPos  <  decPos  ||  expPos  >  str.length())  {  throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  }  dec  =  str.substring(decPos  +  1,  expPos);  }  else  {  dec  =  str.substring(decPos  +  1);  }      [BUGGY]  int  expPos  =  str.lastIndexOf('.',  decPos  -  1);  [BUGGY]      mant  =  str.substring(0,  decPos);  }  else  {  if  (expPos  >  -1)  {  if  (expPos  >  str.length())  {  throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  }  mant  =  str.substring(0,  expPos);  }  else  {  mant  =  str;  }  dec  =  null;  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  	projects/Lang7/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	482	482	1	replace	int  expPos  =  str.lastIndexOf('.',  decPos  -  1);	  int    expPos    =    str.lastIndexOf('.',    decPos);    	non-compiled	[CE]  ')'  expected	13	None	replace
79	[BUG]  [BUGGY]  int  expPos  =  str.indexOf('.',  decPos  +  1);  [CE]  ')'  expected  [FE]                AssertionError      [CONTEXT]      if  (decPos  >  -1)  {  if  (expPos  >  -1)  {  if  (expPos  <  decPos  ||  expPos  >  str.length())  {  throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  }  dec  =  str.substring(decPos  +  1,  expPos);  }  else  {  dec  =  str.substring(decPos  +  1);  }      [BUGGY]  int  expPos  =  str.indexOf('.',  decPos  +  1);  [BUGGY]      mant  =  str.substring(0,  decPos);  }  else  {  if  (expPos  >  -1)  {  if  (expPos  >  str.length())  {  throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  }  mant  =  str.substring(0,  expPos);  }  else  {  mant  =  str;  }  dec  =  null;  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  	projects/Lang7/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	482	482	1	replace	int  expPos  =  str.indexOf('.',  decPos  +  1);	  int    expPos    =    str.indexOf('.',    decPos);    	non-compiled	[CE]  ')'  expected	24	None	replace
80	[BUG]  [BUGGY]  int  expPos  =  str.indexOf('.',  decPos  -  1);  [CE]  ')'  expected  [FE]                  AssertionError      [CONTEXT]      if  (decPos  >  -1)  {  if  (expPos  >  -1)  {  if  (expPos  <  decPos  ||  expPos  >  str.length())  {  throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  }  dec  =  str.substring(decPos  +  1,  expPos);  }  else  {  dec  =  str.substring(decPos  +  1);  }      [BUGGY]  int  expPos  =  str.indexOf('.',  decPos  -  1);  [BUGGY]      mant  =  str.substring(0,  decPos);  }  else  {  if  (expPos  >  -1)  {  if  (expPos  >  str.length())  {  throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  }  mant  =  str.substring(0,  expPos);  }  else  {  mant  =  str;  }  dec  =  null;  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  	projects/Lang7/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	482	482	1	replace	int  expPos  =  str.indexOf('.',  decPos  -  1);	  int    expPos    =    str.indexOf('.',    decPos);    	non-compiled	[CE]  ')'  expected	24	None	replace
81	[BUG]  [BUGGY]  int  expPos  =  str.indexOf('.',  1);  [CE]  ')'  expected  [FE]                    AssertionError      [CONTEXT]      if  (decPos  >  -1)  {  if  (expPos  >  -1)  {  if  (expPos  <  decPos  ||  expPos  >  str.length())  {  throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  }  dec  =  str.substring(decPos  +  1,  expPos);  }  else  {  dec  =  str.substring(decPos  +  1);  }      [BUGGY]  int  expPos  =  str.indexOf('.',  1);  [BUGGY]      mant  =  str.substring(0,  decPos);  }  else  {  if  (expPos  >  -1)  {  if  (expPos  >  str.length())  {  throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  }  mant  =  str.substring(0,  expPos);  }  else  {  mant  =  str;  }  dec  =  null;  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  	projects/Lang7/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	482	482	1	replace	int  expPos  =  str.indexOf('.',  1);	  int    expPos    =    str.indexOf('.',    decPos);    	non-compiled	[CE]  ')'  expected	24	None	replace
82	[BUG]  [BUGGY]  DecError.error(str,  dec);  [CE]  ')'  expected  [FE]              AssertionError      [CONTEXT]      if  (decPos  >  -1)  {  if  (expPos  >  -1)  {  if  (expPos  <  decPos  ||  expPos  >  str.length())  {  throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  }  dec  =  str.substring(decPos  +  1,  expPos);  }  else  {  dec  =  str.substring(decPos  +  1);  }      [BUGGY]  DecError.error(str,  dec);  [BUGGY]      mant  =  str.substring(0,  decPos);  }  else  {  if  (expPos  >  -1)  {  if  (expPos  >  str.length())  {  throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  }  mant  =  str.substring(0,  expPos);  }  else  {  mant  =  str;  }  dec  =  null;  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  	projects/Lang7/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	482	482	1	replace	DecError.error(str,  dec);	  DesertionError.error(str,    nfe);    	non-compiled	[CE]  ')'  expected	33	None	replace
83	[BUG]  [BUGGY]  DesertionError.error(str,  nfe,  dec);  [CE]  ')'  expected  [FE]                AssertionError      [CONTEXT]      if  (decPos  >  -1)  {  if  (expPos  >  -1)  {  if  (expPos  <  decPos  ||  expPos  >  str.length())  {  throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  }  dec  =  str.substring(decPos  +  1,  expPos);  }  else  {  dec  =  str.substring(decPos  +  1);  }      [BUGGY]  DesertionError.error(str,  nfe,  dec);  [BUGGY]      mant  =  str.substring(0,  decPos);  }  else  {  if  (expPos  >  -1)  {  if  (expPos  >  str.length())  {  throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  }  mant  =  str.substring(0,  expPos);  }  else  {  mant  =  str;  }  dec  =  null;  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  	projects/Lang7/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	482	482	1	replace	DesertionError.error(str,  nfe,  dec);	  DesertionError.error(str,    nfe);    	non-compiled	[CE]  ')'  expected	33	None	replace
84	[BUG]  [BUGGY]  DesertionError.error(str,  dec);  [CE]  ')'  expected  [FE]                  AssertionError      [CONTEXT]      if  (decPos  >  -1)  {  if  (expPos  >  -1)  {  if  (expPos  <  decPos  ||  expPos  >  str.length())  {  throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  }  dec  =  str.substring(decPos  +  1,  expPos);  }  else  {  dec  =  str.substring(decPos  +  1);  }      [BUGGY]  DesertionError.error(str,  dec);  [BUGGY]      mant  =  str.substring(0,  decPos);  }  else  {  if  (expPos  >  -1)  {  if  (expPos  >  str.length())  {  throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  }  mant  =  str.substring(0,  expPos);  }  else  {  mant  =  str;  }  dec  =  null;  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  	projects/Lang7/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	482	482	1	replace	DesertionError.error(str,  dec);	  DesertionError.error(str,    nfe);    	non-compiled	[CE]  ')'  expected	33	None	replace
85	[BUG]  [BUGGY]  DesertionError.error(str,  e);  [CE]  ')'  expected  [FE]                    AssertionError      [CONTEXT]      if  (decPos  >  -1)  {  if  (expPos  >  -1)  {  if  (expPos  <  decPos  ||  expPos  >  str.length())  {  throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  }  dec  =  str.substring(decPos  +  1,  expPos);  }  else  {  dec  =  str.substring(decPos  +  1);  }      [BUGGY]  DesertionError.error(str,  e);  [BUGGY]      mant  =  str.substring(0,  decPos);  }  else  {  if  (expPos  >  -1)  {  if  (expPos  >  str.length())  {  throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  }  mant  =  str.substring(0,  expPos);  }  else  {  mant  =  str;  }  dec  =  null;  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  	projects/Lang7/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	482	482	1	replace	DesertionError.error(str,  e);	  DesertionError.error(str,    nfe);    	non-compiled	[CE]  ')'  expected	33	None	replace
86	[BUG]  [BUGGY]  dec  =  str.substring(decPos  +  1,  expPos  -  2);  [CE]  ')'  expected  [FE]              AssertionError      [CONTEXT]      if  (decPos  >  -1)  {  if  (expPos  >  -1)  {  if  (expPos  <  decPos  ||  expPos  >  str.length())  {  throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  }  dec  =  str.substring(decPos  +  1,  expPos);  }  else  {  dec  =  str.substring(decPos  +  1);  }      [BUGGY]  dec  =  str.substring(decPos  +  1,  expPos  -  2);  [BUGGY]      mant  =  str.substring(0,  decPos);  }  else  {  if  (expPos  >  -1)  {  if  (expPos  >  str.length())  {  throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  }  mant  =  str.substring(0,  expPos);  }  else  {  mant  =  str;  }  dec  =  null;  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  	projects/Lang7/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	482	482	1	replace	dec  =  str.substring(decPos  +  1,  expPos  -  2);	  dec    =    str.substring(decPos    +    1,    expPos    -    1);    	non-compiled	[CE]  ')'  expected	18	None	replace
87	[BUG]  [BUGGY]  ||  expPos  >=  str.length())  {  throw  new  NumberFormatException(str  + "  is  not  a  valid  number.   ");  [CE]  [FE]                AssertionError      [CONTEXT]      if  (decPos  >  -1)  {  if  (expPos  >  -1)  {  if  (expPos  <  decPos  ||  expPos  >  str.length())  {  throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  }  dec  =  str.substring(decPos  +  1,  expPos);  }  else  {  dec  =  str.substring(decPos  +  1);  }      [BUGGY]  ||  expPos  >=  str.length())  {  throw  new  NumberFormatException(str  + "  is  not  a  valid  number.   ");  [BUGGY]      mant  =  str.substring(0,  decPos);  }  else  {  if  (expPos  >  -1)  {  if  (expPos  >  str.length())  {  throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  }  mant  =  str.substring(0,  expPos);  }  else  {  mant  =  str;  }  dec  =  null;  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  	projects/Lang7/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	482	482	1	replace	||  expPos  >=  str.length())  {  throw  new  NumberFormatException(str  + "  is  not  a  valid  number.   ");	  if(dec    ==    null)    {    if(expPos    >    -1)    {    if(expPos    <    decPos    ||    expPos    >    str.length())    {    throw    new    NumberFormatException(str    +   "    is    not    a    valid    number    	non-compiled	[CE]  	61	None	replace
88	[BUG]  [BUGGY]  Integer  decPos  =  str.indexOf('.')+  2;  [CE]  ')'  expected  [FE]                AssertionError      [CONTEXT]      if  (decPos  >  -1)  {  if  (expPos  >  -1)  {  if  (expPos  <  decPos  ||  expPos  >  str.length())  {  throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  }  dec  =  str.substring(decPos  +  1,  expPos);  }  else  {  dec  =  str.substring(decPos  +  1);  }      [BUGGY]  Integer  decPos  =  str.indexOf('.')+  2;  [BUGGY]      mant  =  str.substring(0,  decPos);  }  else  {  if  (expPos  >  -1)  {  if  (expPos  >  str.length())  {  throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  }  mant  =  str.substring(0,  expPos);  }  else  {  mant  =  str;  }  dec  =  null;  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  	projects/Lang7/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	482	482	1	replace	Integer  decPos  =  str.indexOf('.')+  2;	  Integer    decPos    =    str.indexOf('.')+    1;    	non-compiled	[CE]  ')'  expected	41	None	replace
89	[BUG]  [BUGGY]  Integer  decPos  =  str.indexOf('.',  decPos)+  1;  [CE]  ')'  expected  [FE]                  AssertionError      [CONTEXT]      if  (decPos  >  -1)  {  if  (expPos  >  -1)  {  if  (expPos  <  decPos  ||  expPos  >  str.length())  {  throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  }  dec  =  str.substring(decPos  +  1,  expPos);  }  else  {  dec  =  str.substring(decPos  +  1);  }      [BUGGY]  Integer  decPos  =  str.indexOf('.',  decPos)+  1;  [BUGGY]      mant  =  str.substring(0,  decPos);  }  else  {  if  (expPos  >  -1)  {  if  (expPos  >  str.length())  {  throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  }  mant  =  str.substring(0,  expPos);  }  else  {  mant  =  str;  }  dec  =  null;  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  	projects/Lang7/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	482	482	1	replace	Integer  decPos  =  str.indexOf('.',  decPos)+  1;	  Integer    decPos    =    str.indexOf('.')+    1;    	non-compiled	[CE]  ')'  expected	41	None	replace
90	[BUG]  [BUGGY]  Integer  decPos  =  str.indexOf('.')/  1;  [CE]  ')'  expected  [FE]                    AssertionError      [CONTEXT]      if  (decPos  >  -1)  {  if  (expPos  >  -1)  {  if  (expPos  <  decPos  ||  expPos  >  str.length())  {  throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  }  dec  =  str.substring(decPos  +  1,  expPos);  }  else  {  dec  =  str.substring(decPos  +  1);  }      [BUGGY]  Integer  decPos  =  str.indexOf('.')/  1;  [BUGGY]      mant  =  str.substring(0,  decPos);  }  else  {  if  (expPos  >  -1)  {  if  (expPos  >  str.length())  {  throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  }  mant  =  str.substring(0,  expPos);  }  else  {  mant  =  str;  }  dec  =  null;  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  	projects/Lang7/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	482	482	1	replace	Integer  decPos  =  str.indexOf('.')/  1;	  Integer    decPos    =    str.indexOf('.')+    1;    	non-compiled	[CE]  ')'  expected	41	None	replace
91	[BUG]  [BUGGY]  mant  =  str.substring(0,  dec  +  1);  [CE]  ')'  expected  [FE]                  AssertionError      [CONTEXT]      if  (decPos  >  -1)  {  if  (expPos  >  -1)  {  if  (expPos  <  decPos  ||  expPos  >  str.length())  {  throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  }  dec  =  str.substring(decPos  +  1,  expPos);  }  else  {  dec  =  str.substring(decPos  +  1);  }      [BUGGY]  mant  =  str.substring(0,  dec  +  1);  [BUGGY]      }  else  {  if  (expPos  >  -1)  {  if  (expPos  >  str.length())  {  throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  }  mant  =  str.substring(0,  expPos);  }  else  {  mant  =  str;  }  dec  =  null;  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  	projects/Lang7/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	482	482	1	replace	mant  =  str.substring(0,  dec  +  1);	  mant    =    str.substring(0,    dec);    	non-compiled	[CE]  ')'  expected	4	None	replace
92	[BUG]  [BUGGY]  Mant  =  str.substring(0,  decPos  +  1);  [CE]  ')'  expected  [FE]            AssertionError      [CONTEXT]      if  (decPos  >  -1)  {  if  (expPos  >  -1)  {  if  (expPos  <  decPos  ||  expPos  >  str.length())  {  throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  }  dec  =  str.substring(decPos  +  1,  expPos);  }  else  {  dec  =  str.substring(decPos  +  1);  }      [BUGGY]  Mant  =  str.substring(0,  decPos  +  1);  [BUGGY]      mant  =  str.substring(0,  decPos);  }  else  {  if  (expPos  >  -1)  {  if  (expPos  >  str.length())  {  throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  }  mant  =  str.substring(0,  expPos);  }  else  {  mant  =  str;  }  dec  =  null;  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  	projects/Lang7/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	482	482	1	replace	Mant  =  str.substring(0,  decPos  +  1);	  Mant    =    str.substring(0,    decPos);    	non-compiled	[CE]  ')'  expected	22	None	replace
93	[BUG]  [BUGGY]  Mant  =  str.substring(0,  1);  [CE]  ')'  expected  [FE]              AssertionError      [CONTEXT]      if  (decPos  >  -1)  {  if  (expPos  >  -1)  {  if  (expPos  <  decPos  ||  expPos  >  str.length())  {  throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  }  dec  =  str.substring(decPos  +  1,  expPos);  }  else  {  dec  =  str.substring(decPos  +  1);  }      [BUGGY]  Mant  =  str.substring(0,  1);  [BUGGY]      mant  =  str.substring(0,  decPos);  }  else  {  if  (expPos  >  -1)  {  if  (expPos  >  str.length())  {  throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  }  mant  =  str.substring(0,  expPos);  }  else  {  mant  =  str;  }  dec  =  null;  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  	projects/Lang7/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	482	482	1	replace	Mant  =  str.substring(0,  1);	  Mant    =    str.substring(0,    decPos);    	non-compiled	[CE]  ')'  expected	22	None	replace
94	[BUG]  [BUGGY]  Mant  =  str.substring(1,  decPos);  [CE]  ')'  expected  [FE]                AssertionError      [CONTEXT]      if  (decPos  >  -1)  {  if  (expPos  >  -1)  {  if  (expPos  <  decPos  ||  expPos  >  str.length())  {  throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  }  dec  =  str.substring(decPos  +  1,  expPos);  }  else  {  dec  =  str.substring(decPos  +  1);  }      [BUGGY]  Mant  =  str.substring(1,  decPos);  [BUGGY]      mant  =  str.substring(0,  decPos);  }  else  {  if  (expPos  >  -1)  {  if  (expPos  >  str.length())  {  throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  }  mant  =  str.substring(0,  expPos);  }  else  {  mant  =  str;  }  dec  =  null;  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  	projects/Lang7/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	482	482	1	replace	Mant  =  str.substring(1,  decPos);	  Mant    =    str.substring(0,    decPos);    	non-compiled	[CE]  ')'  expected	22	None	replace
95	[BUG]  [BUGGY]  Mant  =  str.substring(0,  expPos);  [CE]  ')'  expected  [FE]                  AssertionError      [CONTEXT]      if  (decPos  >  -1)  {  if  (expPos  >  -1)  {  if  (expPos  <  decPos  ||  expPos  >  str.length())  {  throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  }  dec  =  str.substring(decPos  +  1,  expPos);  }  else  {  dec  =  str.substring(decPos  +  1);  }      [BUGGY]  Mant  =  str.substring(0,  expPos);  [BUGGY]      mant  =  str.substring(0,  decPos);  }  else  {  if  (expPos  >  -1)  {  if  (expPos  >  str.length())  {  throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  }  mant  =  str.substring(0,  expPos);  }  else  {  mant  =  str;  }  dec  =  null;  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  	projects/Lang7/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	482	482	1	replace	Mant  =  str.substring(0,  expPos);	  Mant    =    str.substring(0,    decPos);    	non-compiled	[CE]  ')'  expected	22	None	replace
96	[BUG]  [BUGGY]  mant  =  str.substring(0,  0);  [CE]  ')'  expected  [FE]              AssertionError      [CONTEXT]      if  (decPos  >  -1)  {  if  (expPos  >  -1)  {  if  (expPos  <  decPos  ||  expPos  >  str.length())  {  throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  }  dec  =  str.substring(decPos  +  1,  expPos);  }  else  {  dec  =  str.substring(decPos  +  1);  }      [BUGGY]  mant  =  str.substring(0,  0);  [BUGGY]      }  else  {  if  (expPos  >  -1)  {  if  (expPos  >  str.length())  {  throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  }  mant  =  str.substring(0,  expPos);  }  else  {  mant  =  str;  }  dec  =  null;  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  	projects/Lang7/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	482	482	1	replace	mant  =  str.substring(0,  0);	  mant    =    str.substring(0,    2);    	non-compiled	[CE]  ')'  expected	30	None	replace
97	[BUG]  [BUGGY]  Dec  <  Object>  dec  =  str.substring(0,  decPos);  [CE]  ')'  expected  [FE]                AssertionError      [CONTEXT]      if  (decPos  >  -1)  {  if  (expPos  >  -1)  {  if  (expPos  <  decPos  ||  expPos  >  str.length())  {  throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  }  dec  =  str.substring(decPos  +  1,  expPos);  }  else  {  dec  =  str.substring(decPos  +  1);  }      [BUGGY]  Dec  <  Object>  dec  =  str.substring(0,  decPos);  [BUGGY]      mant  =  str.substring(0,  decPos);  }  else  {  if  (expPos  >  -1)  {  if  (expPos  >  str.length())  {  throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  }  mant  =  str.substring(0,  expPos);  }  else  {  mant  =  str;  }  dec  =  null;  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  	projects/Lang7/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	482	482	1	replace	Dec  <  Object>  dec  =  str.substring(0,  decPos);	  Dec    <    Object>    dec    =    dec.substring(0,    decPos);    	non-compiled	[CE]  ')'  expected	39	None	replace
98	[BUG]  [BUGGY]  Desc  <  Object>  dec  =  str.substring(0,  decPos);  [CE]  ')'  expected  [FE]                  AssertionError      [CONTEXT]      if  (decPos  >  -1)  {  if  (expPos  >  -1)  {  if  (expPos  <  decPos  ||  expPos  >  str.length())  {  throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  }  dec  =  str.substring(decPos  +  1,  expPos);  }  else  {  dec  =  str.substring(decPos  +  1);  }      [BUGGY]  Desc  <  Object>  dec  =  str.substring(0,  decPos);  [BUGGY]      mant  =  str.substring(0,  decPos);  }  else  {  if  (expPos  >  -1)  {  if  (expPos  >  str.length())  {  throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  }  mant  =  str.substring(0,  expPos);  }  else  {  mant  =  str;  }  dec  =  null;  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  	projects/Lang7/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	482	482	1	replace	Desc  <  Object>  dec  =  str.substring(0,  decPos);	  Dec    <    Object>    dec    =    dec.substring(0,    decPos);    	non-compiled	[CE]  ')'  expected	39	None	replace
99	[BUG]  [BUGGY]  mant  =  str.substring(0,  1).toUpperCase();  [CE]  ')'  expected  [FE]              AssertionError      [CONTEXT]      if  (decPos  >  -1)  {  if  (expPos  >  -1)  {  if  (expPos  <  decPos  ||  expPos  >  str.length())  {  throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  }  dec  =  str.substring(decPos  +  1,  expPos);  }  else  {  dec  =  str.substring(decPos  +  1);  }      [BUGGY]  mant  =  str.substring(0,  1).toUpperCase();  [BUGGY]      }  else  {  if  (expPos  >  -1)  {  if  (expPos  >  str.length())  {  throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  }  mant  =  str.substring(0,  expPos);  }  else  {  mant  =  str;  }  dec  =  null;  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  	projects/Lang7/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	482	482	1	replace	mant  =  str.substring(0,  1).toUpperCase();	  mant    =    str.substring(0,    1).toLowerCase();    	non-compiled	[CE]  ')'  expected	46	None	replace
100	[BUG]  [BUGGY]  mant  =  str.substring(0,  dec).toLowerCase();  [CE]  ')'  expected  [FE]                AssertionError      [CONTEXT]      if  (decPos  >  -1)  {  if  (expPos  >  -1)  {  if  (expPos  <  decPos  ||  expPos  >  str.length())  {  throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  }  dec  =  str.substring(decPos  +  1,  expPos);  }  else  {  dec  =  str.substring(decPos  +  1);  }      [BUGGY]  mant  =  str.substring(0,  dec).toLowerCase();  [BUGGY]      }  else  {  if  (expPos  >  -1)  {  if  (expPos  >  str.length())  {  throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  }  mant  =  str.substring(0,  expPos);  }  else  {  mant  =  str;  }  dec  =  null;  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  	projects/Lang7/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	482	482	1	replace	mant  =  str.substring(0,  dec).toLowerCase();	  mant    =    str.substring(0,    1).toLowerCase();    	non-compiled	[CE]  ')'  expected	46	None	replace
101	[BUG]  [BUGGY]  mant  =  str.substring(0,  2).toLowerCase();  [CE]  ')'  expected  [FE]                  AssertionError      [CONTEXT]      if  (decPos  >  -1)  {  if  (expPos  >  -1)  {  if  (expPos  <  decPos  ||  expPos  >  str.length())  {  throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  }  dec  =  str.substring(decPos  +  1,  expPos);  }  else  {  dec  =  str.substring(decPos  +  1);  }      [BUGGY]  mant  =  str.substring(0,  2).toLowerCase();  [BUGGY]      }  else  {  if  (expPos  >  -1)  {  if  (expPos  >  str.length())  {  throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  }  mant  =  str.substring(0,  expPos);  }  else  {  mant  =  str;  }  dec  =  null;  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  	projects/Lang7/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	482	482	1	replace	mant  =  str.substring(0,  2).toLowerCase();	  mant    =    str.substring(0,    1).toLowerCase();    	non-compiled	[CE]  ')'  expected	46	None	replace
102	[BUG]  [BUGGY]  dec  =  str.substring(decPos  +  2,  expPos  +  1);  [CE]  ')'  expected  [FE]                  AssertionError      [CONTEXT]      if  (decPos  >  -1)  {  if  (expPos  >  -1)  {  if  (expPos  <  decPos  ||  expPos  >  str.length())  {  throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  }  dec  =  str.substring(decPos  +  1,  expPos);  }  else  {  dec  =  str.substring(decPos  +  1);  }      [BUGGY]  dec  =  str.substring(decPos  +  2,  expPos  +  1);  [BUGGY]      mant  =  str.substring(0,  decPos);  }  else  {  if  (expPos  >  -1)  {  if  (expPos  >  str.length())  {  throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  }  mant  =  str.substring(0,  expPos);  }  else  {  mant  =  str;  }  dec  =  null;  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  	projects/Lang7/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	482	482	1	replace	dec  =  str.substring(decPos  +  2,  expPos  +  1);	  dec    =    str.substring(decPos    +    2,    expPos);    	non-compiled	[CE]  ')'  expected	2	None	replace
103	[BUG]  [BUGGY]  dec  =  str.substring(decPos  +  2,  expPos  -  1);  [CE]  ')'  expected  [FE]                    AssertionError      [CONTEXT]      if  (decPos  >  -1)  {  if  (expPos  >  -1)  {  if  (expPos  <  decPos  ||  expPos  >  str.length())  {  throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  }  dec  =  str.substring(decPos  +  1,  expPos);  }  else  {  dec  =  str.substring(decPos  +  1);  }      [BUGGY]  dec  =  str.substring(decPos  +  2,  expPos  -  1);  [BUGGY]      mant  =  str.substring(0,  decPos);  }  else  {  if  (expPos  >  -1)  {  if  (expPos  >  str.length())  {  throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  }  mant  =  str.substring(0,  expPos);  }  else  {  mant  =  str;  }  dec  =  null;  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  	projects/Lang7/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	482	482	1	replace	dec  =  str.substring(decPos  +  2,  expPos  -  1);	  dec    =    str.substring(decPos    +    2,    expPos);    	non-compiled	[CE]  ')'  expected	2	None	replace
104	[BUG]  [BUGGY]  mant  =  str.substring(0,  DEC).trim();  [CE]  ')'  expected  [FE]                  AssertionError      [CONTEXT]      if  (decPos  >  -1)  {  if  (expPos  >  -1)  {  if  (expPos  <  decPos  ||  expPos  >  str.length())  {  throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  }  dec  =  str.substring(decPos  +  1,  expPos);  }  else  {  dec  =  str.substring(decPos  +  1);  }      [BUGGY]  mant  =  str.substring(0,  DEC).trim();  [BUGGY]      }  else  {  if  (expPos  >  -1)  {  if  (expPos  >  str.length())  {  throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  }  mant  =  str.substring(0,  expPos);  }  else  {  mant  =  str;  }  dec  =  null;  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  	projects/Lang7/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	482	482	1	replace	mant  =  str.substring(0,  DEC).trim();	  mant    =    str.substring(0,    1).trim();    	non-compiled	[CE]  ')'  expected	32	None	replace
105	[BUG]  [BUGGY]  ||  expPos  <  decPos)  {  throw  new  NumberFormatException(str  + "  is  not  a  valid  number.   "  [CE]  [FE]                AssertionError      [CONTEXT]      if  (decPos  >  -1)  {  if  (expPos  >  -1)  {  if  (expPos  <  decPos  ||  expPos  >  str.length())  {  throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  }  dec  =  str.substring(decPos  +  1,  expPos);  }  else  {  dec  =  str.substring(decPos  +  1);  }      [BUGGY]  ||  expPos  <  decPos)  {  throw  new  NumberFormatException(str  + "  is  not  a  valid  number.   "  [BUGGY]      mant  =  str.substring(0,  decPos);  }  else  {  if  (expPos  >  -1)  {  if  (expPos  >  str.length())  {  throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  }  mant  =  str.substring(0,  expPos);  }  else  {  mant  =  str;  }  dec  =  null;  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  	projects/Lang7/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	482	482	1	replace	||  expPos  <  decPos)  {  throw  new  NumberFormatException(str  + "  is  not  a  valid  number.   "	  ||    expPos    <    str.length())    {    throw    new    NumberFormatException(str    +   "    is    not    a    valid    number.       "    	non-compiled	[CE]  	6	None	replace
106	[BUG]  [BUGGY]  int  expPos  =  str.lastIndexOf('.',  -1);  [CE]  ')'  expected  [FE]                AssertionError      [CONTEXT]      if  (decPos  >  -1)  {  if  (expPos  >  -1)  {  if  (expPos  <  decPos  ||  expPos  >  str.length())  {  throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  }  dec  =  str.substring(decPos  +  1,  expPos);  }  else  {  dec  =  str.substring(decPos  +  1);  }      [BUGGY]  int  expPos  =  str.lastIndexOf('.',  -1);  [BUGGY]      mant  =  str.substring(0,  decPos);  }  else  {  if  (expPos  >  -1)  {  if  (expPos  >  str.length())  {  throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  }  mant  =  str.substring(0,  expPos);  }  else  {  mant  =  str;  }  dec  =  null;  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  	projects/Lang7/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	482	482	1	replace	int  expPos  =  str.lastIndexOf('.',  -1);	  int    expPos    =    str.lastIndexOf('.',    1);    	non-compiled	[CE]  ')'  expected	14	None	replace
107	[BUG]  [BUGGY]  Integer  decPos  =  getDecPos()  -  1  +  1;  [CE]  ')'  expected  [FE]                    AssertionError      [CONTEXT]      if  (decPos  >  -1)  {  if  (expPos  >  -1)  {  if  (expPos  <  decPos  ||  expPos  >  str.length())  {  throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  }  dec  =  str.substring(decPos  +  1,  expPos);  }  else  {  dec  =  str.substring(decPos  +  1);  }      [BUGGY]  Integer  decPos  =  getDecPos()  -  1  +  1;  [BUGGY]      mant  =  str.substring(0,  decPos);  }  else  {  if  (expPos  >  -1)  {  if  (expPos  >  str.length())  {  throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  }  mant  =  str.substring(0,  expPos);  }  else  {  mant  =  str;  }  dec  =  null;  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  	projects/Lang7/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	482	482	1	replace	Integer  decPos  =  getDecPos()  -  1  +  1;	  Integer    decPos    =    getDecPos()    -    1;    	non-compiled	[CE]  ')'  expected	10	None	replace
108	[BUG]  [BUGGY]  mant  =  str.substring(0,  dec  -  1);  [CE]  ')'  expected  [FE]                  AssertionError      [CONTEXT]      if  (decPos  >  -1)  {  if  (expPos  >  -1)  {  if  (expPos  <  decPos  ||  expPos  >  str.length())  {  throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  }  dec  =  str.substring(decPos  +  1,  expPos);  }  else  {  dec  =  str.substring(decPos  +  1);  }      [BUGGY]  mant  =  str.substring(0,  dec  -  1);  [BUGGY]      }  else  {  if  (expPos  >  -1)  {  if  (expPos  >  str.length())  {  throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  }  mant  =  str.substring(0,  expPos);  }  else  {  mant  =  str;  }  dec  =  null;  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  	projects/Lang7/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	482	482	1	replace	mant  =  str.substring(0,  dec  -  1);	  mant    =    str.substring(0,    dec);    	non-compiled	[CE]  ')'  expected	4	None	replace
109	[BUG]  [BUGGY]  mant  =  str.substring(0,  decPos  -  2  +  1);  [CE]  ')'  expected  [FE]            AssertionError      [CONTEXT]      if  (decPos  >  -1)  {  if  (expPos  >  -1)  {  if  (expPos  <  decPos  ||  expPos  >  str.length())  {  throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  }  dec  =  str.substring(decPos  +  1,  expPos);  }  else  {  dec  =  str.substring(decPos  +  1);  }      [BUGGY]  mant  =  str.substring(0,  decPos  -  2  +  1);  [BUGGY]      }  else  {  if  (expPos  >  -1)  {  if  (expPos  >  str.length())  {  throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  }  mant  =  str.substring(0,  expPos);  }  else  {  mant  =  str;  }  dec  =  null;  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  	projects/Lang7/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	482	482	1	replace	mant  =  str.substring(0,  decPos  -  2  +  1);	  mant    =    str.substring(0,    decPos    -    2);    	non-compiled	[CE]  ')'  expected	42	None	replace
110	[BUG]  [BUGGY]  Integer  decPos  =  str.indexOf('  ');  [CE]  ')'  expected  [FE]              AssertionError      [CONTEXT]      if  (decPos  >  -1)  {  if  (expPos  >  -1)  {  if  (expPos  <  decPos  ||  expPos  >  str.length())  {  throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  }  dec  =  str.substring(decPos  +  1,  expPos);  }  else  {  dec  =  str.substring(decPos  +  1);  }      [BUGGY]  Integer  decPos  =  str.indexOf('  ');  [BUGGY]      mant  =  str.substring(0,  decPos);  }  else  {  if  (expPos  >  -1)  {  if  (expPos  >  str.length())  {  throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  }  mant  =  str.substring(0,  expPos);  }  else  {  mant  =  str;  }  dec  =  null;  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  	projects/Lang7/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	482	482	1	replace	Integer  decPos  =  str.indexOf('  ');	  if(expPos    >    -1)    {    if(expPos    <    decPos    ||    expPos    >    str.length())    {    throw    new    NumberFormatException(   "   ");    }    	non-compiled	[CE]  ')'  expected	56	None	replace
111	[BUG]  [BUGGY]  int  expPos  =  str.lastIndexOf('.',  DEC_POP)/  1;  [CE]  ')'  expected  [FE]                AssertionError      [CONTEXT]      if  (decPos  >  -1)  {  if  (expPos  >  -1)  {  if  (expPos  <  decPos  ||  expPos  >  str.length())  {  throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  }  dec  =  str.substring(decPos  +  1,  expPos);  }  else  {  dec  =  str.substring(decPos  +  1);  }      [BUGGY]  int  expPos  =  str.lastIndexOf('.',  DEC_POP)/  1;  [BUGGY]      mant  =  str.substring(0,  decPos);  }  else  {  if  (expPos  >  -1)  {  if  (expPos  >  str.length())  {  throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  }  mant  =  str.substring(0,  expPos);  }  else  {  mant  =  str;  }  dec  =  null;  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  	projects/Lang7/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	482	482	1	replace	int  expPos  =  str.lastIndexOf('.',  DEC_POP)/  1;	  int    expPos    =    str.lastIndexOf('.')/    1;    	non-compiled	[CE]  ')'  expected	47	None	replace
112	[BUG]  [BUGGY]  Mant  =  str.substring(0,  decPos  -  1);  [CE]  ')'  expected  [FE]            AssertionError      [CONTEXT]      if  (decPos  >  -1)  {  if  (expPos  >  -1)  {  if  (expPos  <  decPos  ||  expPos  >  str.length())  {  throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  }  dec  =  str.substring(decPos  +  1,  expPos);  }  else  {  dec  =  str.substring(decPos  +  1);  }      [BUGGY]  Mant  =  str.substring(0,  decPos  -  1);  [BUGGY]      mant  =  str.substring(0,  decPos);  }  else  {  if  (expPos  >  -1)  {  if  (expPos  >  str.length())  {  throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  }  mant  =  str.substring(0,  expPos);  }  else  {  mant  =  str;  }  dec  =  null;  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  	projects/Lang7/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	482	482	1	replace	Mant  =  str.substring(0,  decPos  -  1);	  Mant    =    str.substring(0,    decPos);    	non-compiled	[CE]  ')'  expected	22	None	replace
113	[BUG]  [BUGGY]  dec  =  str.substring(0,  decPos  +  2);  [CE]  ')'  expected  [FE]                    AssertionError      [CONTEXT]      if  (decPos  >  -1)  {  if  (expPos  >  -1)  {  if  (expPos  <  decPos  ||  expPos  >  str.length())  {  throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  }  dec  =  str.substring(decPos  +  1,  expPos);  }  else  {  dec  =  str.substring(decPos  +  1);  }      [BUGGY]  dec  =  str.substring(0,  decPos  +  2);  [BUGGY]      }  else  {  if  (expPos  >  -1)  {  if  (expPos  >  str.length())  {  throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  }  mant  =  str.substring(0,  expPos);  }  else  {  mant  =  str;  }  dec  =  null;  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  	projects/Lang7/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	482	482	1	replace	dec  =  str.substring(0,  decPos  +  2);	  dec    =    str.substring(0,    decPos);    	non-compiled	[CE]  ')'  expected	5	None	replace
114	[BUG]  [BUGGY]  dec  =  str.substring(decPos  +  1,  decPos);  [CE]  ')'  expected  [FE]                      AssertionError      [CONTEXT]      if  (decPos  >  -1)  {  if  (expPos  >  -1)  {  if  (expPos  <  decPos  ||  expPos  >  str.length())  {  throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  }  dec  =  str.substring(decPos  +  1,  expPos);  }  else  {  dec  =  str.substring(decPos  +  1);  }      [BUGGY]  dec  =  str.substring(decPos  +  1,  decPos);  [BUGGY]      }  else  {  if  (expPos  >  -1)  {  if  (expPos  >  str.length())  {  throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  }  mant  =  str.substring(0,  expPos);  }  else  {  mant  =  str;  }  dec  =  null;  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  	projects/Lang7/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	482	482	1	replace	dec  =  str.substring(decPos  +  1,  decPos);	  dec    =    str.substring(0,    decPos);    	non-compiled	[CE]  ')'  expected	5	None	replace
115	[BUG]  [BUGGY]  ||  expPos  ==  dec.length())  {  throw  new  NumberFormatException(str  + "  is  not  a  valid  number.   "  [CE]  [FE]                  AssertionError      [CONTEXT]      if  (decPos  >  -1)  {  if  (expPos  >  -1)  {  if  (expPos  <  decPos  ||  expPos  >  str.length())  {  throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  }  dec  =  str.substring(decPos  +  1,  expPos);  }  else  {  dec  =  str.substring(decPos  +  1);  }      [BUGGY]  ||  expPos  ==  dec.length())  {  throw  new  NumberFormatException(str  + "  is  not  a  valid  number.   "  [BUGGY]      mant  =  str.substring(0,  decPos);  }  else  {  if  (expPos  >  -1)  {  if  (expPos  >  str.length())  {  throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  }  mant  =  str.substring(0,  expPos);  }  else  {  mant  =  str;  }  dec  =  null;  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  	projects/Lang7/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	482	482	1	replace	||  expPos  ==  dec.length())  {  throw  new  NumberFormatException(str  + "  is  not  a  valid  number.   "	  ||    expPos    ==    str.length())    {    throw    new    NumberFormatException(str    +   "    is    not    a    valid    number.       "    	non-compiled	[CE]  	7	None	replace
116	[BUG]  [BUGGY]  ||  expPos  ==  str.length())  {  throw  new  NumberFormatException( " ");  [CE]  [FE]                    AssertionError      [CONTEXT]      if  (decPos  >  -1)  {  if  (expPos  >  -1)  {  if  (expPos  <  decPos  ||  expPos  >  str.length())  {  throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  }  dec  =  str.substring(decPos  +  1,  expPos);  }  else  {  dec  =  str.substring(decPos  +  1);  }      [BUGGY]  ||  expPos  ==  str.length())  {  throw  new  NumberFormatException( " ");  [BUGGY]      mant  =  str.substring(0,  decPos);  }  else  {  if  (expPos  >  -1)  {  if  (expPos  >  str.length())  {  throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  }  mant  =  str.substring(0,  expPos);  }  else  {  mant  =  str;  }  dec  =  null;  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  	projects/Lang7/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	482	482	1	replace	||  expPos  ==  str.length())  {  throw  new  NumberFormatException( " ");	  ||    expPos    ==    str.length())    {    throw    new    NumberFormatException(str    +   "    is    not    a    valid    number.       "    	non-compiled	[CE]  	7	None	replace
117	[BUG]  [BUGGY]  DesertionError.error( "msg.no.valid.number ");  [CE]  ')'  expected  [FE]                  AssertionError      [CONTEXT]      if  (decPos  >  -1)  {  if  (expPos  >  -1)  {  if  (expPos  <  decPos  ||  expPos  >  str.length())  {  throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  }  dec  =  str.substring(decPos  +  1,  expPos);  }  else  {  dec  =  str.substring(decPos  +  1);  }      [BUGGY]  DesertionError.error( "msg.no.valid.number ");  [BUGGY]      mant  =  str.substring(0,  decPos);  }  else  {  if  (expPos  >  -1)  {  if  (expPos  >  str.length())  {  throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  }  mant  =  str.substring(0,  expPos);  }  else  {  mant  =  str;  }  dec  =  null;  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  	projects/Lang7/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	482	482	1	replace	DesertionError.error( "msg.no.valid.number ");	  if(dec    ==    null)    {    if(expPos    >    -1)    {    if(expPos    <    decPos    ||    expPos    >    str.length())    {    throw    new    NumberFormatException(str    +   "    is    not    a    valid    number.   ");    }    	non-compiled	[CE]  ')'  expected	52	None	replace
118	[BUG]  [BUGGY]  Integer  decPos  =  str.substring(0,  decPos);  [CE]  ')'  expected  [FE]                AssertionError      [CONTEXT]      if  (decPos  >  -1)  {  if  (expPos  >  -1)  {  if  (expPos  <  decPos  ||  expPos  >  str.length())  {  throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  }  dec  =  str.substring(decPos  +  1,  expPos);  }  else  {  dec  =  str.substring(decPos  +  1);  }      [BUGGY]  Integer  decPos  =  str.substring(0,  decPos);  [BUGGY]      mant  =  str.substring(0,  decPos);  }  else  {  if  (expPos  >  -1)  {  if  (expPos  >  str.length())  {  throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  }  mant  =  str.substring(0,  expPos);  }  else  {  mant  =  str;  }  dec  =  null;  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  	projects/Lang7/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	482	482	1	replace	Integer  decPos  =  str.substring(0,  decPos);	  if(dec!=    null)    {    if(decPos    >    -1)    {    if(expPos    <    decPos    ||    expPos    >    str.length())    {    throw    new    NumberFormatException(str    +   "    is    not    a    valid    number.    	non-compiled	[CE]  ')'  expected	51	None	replace
119	[BUG]  [BUGGY]  Integer  decPos  =  str.indexOf('.')+  1  +  1;  [CE]  ')'  expected  [FE]                AssertionError      [CONTEXT]      if  (decPos  >  -1)  {  if  (expPos  >  -1)  {  if  (expPos  <  decPos  ||  expPos  >  str.length())  {  throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  }  dec  =  str.substring(decPos  +  1,  expPos);  }  else  {  dec  =  str.substring(decPos  +  1);  }      [BUGGY]  Integer  decPos  =  str.indexOf('.')+  1  +  1;  [BUGGY]      mant  =  str.substring(0,  decPos);  }  else  {  if  (expPos  >  -1)  {  if  (expPos  >  str.length())  {  throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  }  mant  =  str.substring(0,  expPos);  }  else  {  mant  =  str;  }  dec  =  null;  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  	projects/Lang7/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	482	482	1	replace	Integer  decPos  =  str.indexOf('.')+  1  +  1;	  Integer    decPos    =    str.indexOf('.')+    1;    	non-compiled	[CE]  ')'  expected	41	None	replace
120	[BUG]  [BUGGY]  Integer  decPos  =  getDecPos(decPos);  [CE]  ')'  expected  [FE]                  AssertionError      [CONTEXT]      if  (decPos  >  -1)  {  if  (expPos  >  -1)  {  if  (expPos  <  decPos  ||  expPos  >  str.length())  {  throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  }  dec  =  str.substring(decPos  +  1,  expPos);  }  else  {  dec  =  str.substring(decPos  +  1);  }      [BUGGY]  Integer  decPos  =  getDecPos(decPos);  [BUGGY]      mant  =  str.substring(0,  decPos);  }  else  {  if  (expPos  >  -1)  {  if  (expPos  >  str.length())  {  throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  }  mant  =  str.substring(0,  expPos);  }  else  {  mant  =  str;  }  dec  =  null;  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  	projects/Lang7/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	482	482	1	replace	Integer  decPos  =  getDecPos(decPos);	  Integer    decPos    =    getDecPos(0);    	non-compiled	[CE]  ')'  expected	40	None	replace
121	[BUG]  [BUGGY]  DesertionError.error(null,  nfe);  [CE]  ')'  expected  [FE]              AssertionError      [CONTEXT]      if  (decPos  >  -1)  {  if  (expPos  >  -1)  {  if  (expPos  <  decPos  ||  expPos  >  str.length())  {  throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  }  dec  =  str.substring(decPos  +  1,  expPos);  }  else  {  dec  =  str.substring(decPos  +  1);  }      [BUGGY]  DesertionError.error(null,  nfe);  [BUGGY]      mant  =  str.substring(0,  decPos);  }  else  {  if  (expPos  >  -1)  {  if  (expPos  >  str.length())  {  throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  }  mant  =  str.substring(0,  expPos);  }  else  {  mant  =  str;  }  dec  =  null;  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  	projects/Lang7/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	482	482	1	replace	DesertionError.error(null,  nfe);	  DesertionError.error(str,    nfe);    	non-compiled	[CE]  ')'  expected	33	None	replace
122	[BUG]  [BUGGY]  DesertionError.error(dec,  nfe);  [CE]  ')'  expected  [FE]                AssertionError      [CONTEXT]      if  (decPos  >  -1)  {  if  (expPos  >  -1)  {  if  (expPos  <  decPos  ||  expPos  >  str.length())  {  throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  }  dec  =  str.substring(decPos  +  1,  expPos);  }  else  {  dec  =  str.substring(decPos  +  1);  }      [BUGGY]  DesertionError.error(dec,  nfe);  [BUGGY]      mant  =  str.substring(0,  decPos);  }  else  {  if  (expPos  >  -1)  {  if  (expPos  >  str.length())  {  throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  }  mant  =  str.substring(0,  expPos);  }  else  {  mant  =  str;  }  dec  =  null;  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  	projects/Lang7/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	482	482	1	replace	DesertionError.error(dec,  nfe);	  DesertionError.error(str,    nfe);    	non-compiled	[CE]  ')'  expected	33	None	replace
123	[BUG]  [BUGGY]  DesertionError.error(null,  dec);  [CE]  ')'  expected  [FE]                  AssertionError      [CONTEXT]      if  (decPos  >  -1)  {  if  (expPos  >  -1)  {  if  (expPos  <  decPos  ||  expPos  >  str.length())  {  throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  }  dec  =  str.substring(decPos  +  1,  expPos);  }  else  {  dec  =  str.substring(decPos  +  1);  }      [BUGGY]  DesertionError.error(null,  dec);  [BUGGY]      mant  =  str.substring(0,  decPos);  }  else  {  if  (expPos  >  -1)  {  if  (expPos  >  str.length())  {  throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  }  mant  =  str.substring(0,  expPos);  }  else  {  mant  =  str;  }  dec  =  null;  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  	projects/Lang7/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	482	482	1	replace	DesertionError.error(null,  dec);	  DesertionError.error(str,    nfe);    	non-compiled	[CE]  ')'  expected	33	None	replace
124	[BUG]  [BUGGY]  int  decPos  =  str.indexOf('  ')+  1;  [CE]  ')'  expected  [FE]                  AssertionError      [CONTEXT]      if  (decPos  >  -1)  {  if  (expPos  >  -1)  {  if  (expPos  <  decPos  ||  expPos  >  str.length())  {  throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  }  dec  =  str.substring(decPos  +  1,  expPos);  }  else  {  dec  =  str.substring(decPos  +  1);  }      [BUGGY]  int  decPos  =  str.indexOf('  ')+  1;  [BUGGY]      mant  =  str.substring(0,  decPos);  }  else  {  if  (expPos  >  -1)  {  if  (expPos  >  str.length())  {  throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  }  mant  =  str.substring(0,  expPos);  }  else  {  mant  =  str;  }  dec  =  null;  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  	projects/Lang7/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	482	482	1	replace	int  decPos  =  str.indexOf('  ')+  1;	  if(expPos    <    decPos    ||    expPos    >    str.length())    {    throw    new    NumberFormatException(   "   ");    }    	non-compiled	[CE]  ')'  expected	58	None	replace
125	[BUG]  [BUGGY]  Mant  =  str.substring(0,  decPos  +  2);  [CE]  ')'  expected  [FE]              AssertionError      [CONTEXT]      if  (decPos  >  -1)  {  if  (expPos  >  -1)  {  if  (expPos  <  decPos  ||  expPos  >  str.length())  {  throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  }  dec  =  str.substring(decPos  +  1,  expPos);  }  else  {  dec  =  str.substring(decPos  +  1);  }      [BUGGY]  Mant  =  str.substring(0,  decPos  +  2);  [BUGGY]      }  else  {  if  (expPos  >  -1)  {  if  (expPos  >  str.length())  {  throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  }  mant  =  str.substring(0,  expPos);  }  else  {  mant  =  str;  }  dec  =  null;  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  	projects/Lang7/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	482	482	1	replace	Mant  =  str.substring(0,  decPos  +  2);	  mant    =    str.substring(0,    expPos    +    2);    	non-compiled	[CE]  ')'  expected	35	None	replace
126	[BUG]  [BUGGY]  Integer  decPos  =  str.substring(decPos  +  1);  [CE]  ')'  expected  [FE]                AssertionError      [CONTEXT]      if  (decPos  >  -1)  {  if  (expPos  >  -1)  {  if  (expPos  <  decPos  ||  expPos  >  str.length())  {  throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  }  dec  =  str.substring(decPos  +  1,  expPos);  }  else  {  dec  =  str.substring(decPos  +  1);  }      [BUGGY]  Integer  decPos  =  str.substring(decPos  +  1);  [BUGGY]      mant  =  str.substring(0,  decPos);  }  else  {  if  (expPos  >  -1)  {  if  (expPos  >  str.length())  {  throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  }  mant  =  str.substring(0,  expPos);  }  else  {  mant  =  str;  }  dec  =  null;  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  	projects/Lang7/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	482	482	1	replace	Integer  decPos  =  str.substring(decPos  +  1);	  if(dec    ==    null)    {    if(expPos    <    decPos    ||    expPos    >    str.length())    {    throw    new    NumberFormatException(   "   ");    }    	non-compiled	[CE]  ')'  expected	57	None	replace
127	[BUG]  [BUGGY]  int  expPos  =  hexDigits;  [CE]  ')'  expected  [FE]                    AssertionError      [CONTEXT]      if  (decPos  >  -1)  {  if  (expPos  >  -1)  {  if  (expPos  <  decPos  ||  expPos  >  str.length())  {  throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  }  dec  =  str.substring(decPos  +  1,  expPos);  }  else  {  dec  =  str.substring(decPos  +  1);  }      [BUGGY]  int  expPos  =  hexDigits;  [BUGGY]      mant  =  str.substring(0,  decPos);  }  else  {  if  (expPos  >  -1)  {  if  (expPos  >  str.length())  {  throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  }  mant  =  str.substring(0,  expPos);  }  else  {  mant  =  str;  }  dec  =  null;  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  	projects/Lang7/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	482	482	1	replace	int  expPos  =  hexDigits;	  int    expPos    =    decPos;    	non-compiled	[CE]  ')'  expected	29	None	replace
128	[BUG]  [BUGGY]  int  expPos  =  str.lastIndexOf('.',  DEC_POP)+  1;  [CE]  ')'  expected  [FE]                AssertionError      [CONTEXT]      if  (decPos  >  -1)  {  if  (expPos  >  -1)  {  if  (expPos  <  decPos  ||  expPos  >  str.length())  {  throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  }  dec  =  str.substring(decPos  +  1,  expPos);  }  else  {  dec  =  str.substring(decPos  +  1);  }      [BUGGY]  int  expPos  =  str.lastIndexOf('.',  DEC_POP)+  1;  [BUGGY]      mant  =  str.substring(0,  decPos);  }  else  {  if  (expPos  >  -1)  {  if  (expPos  >  str.length())  {  throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  }  mant  =  str.substring(0,  expPos);  }  else  {  mant  =  str;  }  dec  =  null;  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  	projects/Lang7/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	482	482	1	replace	int  expPos  =  str.lastIndexOf('.',  DEC_POP)+  1;	  int    expPos    =    str.lastIndexOf('.',    decPos)+    1;    	non-compiled	[CE]  ')'  expected	36	None	replace
129	[BUG]  [BUGGY]  Integer  decPos  =  str.indexOf('  ',  decPos)+  1;  [CE]  ')'  expected  [FE]            AssertionError      [CONTEXT]      if  (decPos  >  -1)  {  if  (expPos  >  -1)  {  if  (expPos  <  decPos  ||  expPos  >  str.length())  {  throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  }  dec  =  str.substring(decPos  +  1,  expPos);  }  else  {  dec  =  str.substring(decPos  +  1);  }      [BUGGY]  Integer  decPos  =  str.indexOf('  ',  decPos)+  1;  [BUGGY]      mant  =  str.substring(0,  decPos);  }  else  {  if  (expPos  >  -1)  {  if  (expPos  >  str.length())  {  throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  }  mant  =  str.substring(0,  expPos);  }  else  {  mant  =  str;  }  dec  =  null;  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  	projects/Lang7/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	482	482	1	replace	Integer  decPos  =  str.indexOf('  ',  decPos)+  1;	  Integer    decPos    =    str.indexOf('    ')+    1;    	non-compiled	[CE]  ')'  expected	44	None	replace
130	[BUG]  [BUGGY]  Integer  decPos  =  str.indexOf('  ')+  1  +  1;  [CE]  ')'  expected  [FE]              AssertionError      [CONTEXT]      if  (decPos  >  -1)  {  if  (expPos  >  -1)  {  if  (expPos  <  decPos  ||  expPos  >  str.length())  {  throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  }  dec  =  str.substring(decPos  +  1,  expPos);  }  else  {  dec  =  str.substring(decPos  +  1);  }      [BUGGY]  Integer  decPos  =  str.indexOf('  ')+  1  +  1;  [BUGGY]      mant  =  str.substring(0,  decPos);  }  else  {  if  (expPos  >  -1)  {  if  (expPos  >  str.length())  {  throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  }  mant  =  str.substring(0,  expPos);  }  else  {  mant  =  str;  }  dec  =  null;  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  	projects/Lang7/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	482	482	1	replace	Integer  decPos  =  str.indexOf('  ')+  1  +  1;	  Integer    decPos    =    str.indexOf('    ')+    1;    	non-compiled	[CE]  ')'  expected	44	None	replace
131	[BUG]  [BUGGY]  mant  =  str.substring(decPos  +  1,  hexDigits);  [CE]  ')'  expected  [FE]                    AssertionError      [CONTEXT]      if  (decPos  >  -1)  {  if  (expPos  >  -1)  {  if  (expPos  <  decPos  ||  expPos  >  str.length())  {  throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  }  dec  =  str.substring(decPos  +  1,  expPos);  }  else  {  dec  =  str.substring(decPos  +  1);  }      [BUGGY]  mant  =  str.substring(decPos  +  1,  hexDigits);  [BUGGY]      }  else  {  if  (expPos  >  -1)  {  if  (expPos  >  str.length())  {  throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  }  mant  =  str.substring(0,  expPos);  }  else  {  mant  =  str;  }  dec  =  null;  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  	projects/Lang7/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	482	482	1	replace	mant  =  str.substring(decPos  +  1,  hexDigits);	  mant    =    str.substring(decPos    +    1,    decPos);    	non-compiled	[CE]  ')'  expected	43	None	replace
132	[BUG]  [BUGGY]  mant  =  str.substring(decPos  +  1,  decPos  +  1);  [CE]  ')'  expected  [FE]                      AssertionError      [CONTEXT]      if  (decPos  >  -1)  {  if  (expPos  >  -1)  {  if  (expPos  <  decPos  ||  expPos  >  str.length())  {  throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  }  dec  =  str.substring(decPos  +  1,  expPos);  }  else  {  dec  =  str.substring(decPos  +  1);  }      [BUGGY]  mant  =  str.substring(decPos  +  1,  decPos  +  1);  [BUGGY]      }  else  {  if  (expPos  >  -1)  {  if  (expPos  >  str.length())  {  throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  }  mant  =  str.substring(0,  expPos);  }  else  {  mant  =  str;  }  dec  =  null;  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  	projects/Lang7/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	482	482	1	replace	mant  =  str.substring(decPos  +  1,  decPos  +  1);	  mant    =    str.substring(decPos    +    1,    decPos);    	non-compiled	[CE]  ')'  expected	43	None	replace
133	[BUG]  [BUGGY]  Dec  <  N,  V>  dec  =  str.substring(decPos  +  1);  [CE]  ')'  expected  [FE]                AssertionError      [CONTEXT]      if  (decPos  >  -1)  {  if  (expPos  >  -1)  {  if  (expPos  <  decPos  ||  expPos  >  str.length())  {  throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  }  dec  =  str.substring(decPos  +  1,  expPos);  }  else  {  dec  =  str.substring(decPos  +  1);  }      [BUGGY]  Dec  <  N,  V>  dec  =  str.substring(decPos  +  1);  [BUGGY]      mant  =  str.substring(0,  decPos);  }  else  {  if  (expPos  >  -1)  {  if  (expPos  >  str.length())  {  throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  }  mant  =  str.substring(0,  expPos);  }  else  {  mant  =  str;  }  dec  =  null;  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  	projects/Lang7/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	482	482	1	replace	Dec  <  N,  V>  dec  =  str.substring(decPos  +  1);	  if(dec    ==    null)    {    if(expPos    >    -1)    {    if(expPos    <    decPos    ||    expPos    >    str.length())    {    throw    new    NumberFormatException(str    +   "    is    not    a    valid    number    	non-compiled	[CE]  ')'  expected	61	None	replace
134	[BUG]  [BUGGY]  ||(dec  ==  null  &&  expPos  <  str.length()))  {  [CE]  ')'  expected  [FE]                  AssertionError      [CONTEXT]      if  (decPos  >  -1)  {  if  (expPos  >  -1)  {  if  (expPos  <  decPos  ||  expPos  >  str.length())  {  throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  }  dec  =  str.substring(decPos  +  1,  expPos);  }  else  {  dec  =  str.substring(decPos  +  1);  }      [BUGGY]  ||(dec  ==  null  &&  expPos  <  str.length()))  {  [BUGGY]      mant  =  str.substring(0,  decPos);  }  else  {  if  (expPos  >  -1)  {  if  (expPos  >  str.length())  {  throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  }  mant  =  str.substring(0,  expPos);  }  else  {  mant  =  str;  }  dec  =  null;  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  	projects/Lang7/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	482	482	1	replace	||(dec  ==  null  &&  expPos  <  str.length()))  {	  if(dec    ==    null)    {    if(expPos    >    -1)    {    if(expPos    <    decPos    ||    expPos    >    str.length())    {    throw    new    NumberFormatException(str    +   "    is    not    a    valid    number    	non-compiled	[CE]  ')'  expected	61	None	replace
135	[BUG]  [BUGGY]  Dec  <  Object>  dec  =  str.substring(decPos  +  2,  expPos);  [CE]  ')'  expected  [FE]              AssertionError      [CONTEXT]      if  (decPos  >  -1)  {  if  (expPos  >  -1)  {  if  (expPos  <  decPos  ||  expPos  >  str.length())  {  throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  }  dec  =  str.substring(decPos  +  1,  expPos);  }  else  {  dec  =  str.substring(decPos  +  1);  }      [BUGGY]  Dec  <  Object>  dec  =  str.substring(decPos  +  2,  expPos);  [BUGGY]      mant  =  str.substring(0,  decPos);  }  else  {  if  (expPos  >  -1)  {  if  (expPos  >  str.length())  {  throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  }  mant  =  str.substring(0,  expPos);  }  else  {  mant  =  str;  }  dec  =  null;  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  	projects/Lang7/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	482	482	1	replace	Dec  <  Object>  dec  =  str.substring(decPos  +  2,  expPos);	  Dec    <    Object>    dec    =    str.substring(decPos    +    1);    	non-compiled	[CE]  ')'  expected	38	None	replace
136	[BUG]  [BUGGY]  mant  =  str.substring(0,  DEC).toLowerCase();  [CE]  ')'  expected  [FE]              AssertionError      [CONTEXT]      if  (decPos  >  -1)  {  if  (expPos  >  -1)  {  if  (expPos  <  decPos  ||  expPos  >  str.length())  {  throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  }  dec  =  str.substring(decPos  +  1,  expPos);  }  else  {  dec  =  str.substring(decPos  +  1);  }      [BUGGY]  mant  =  str.substring(0,  DEC).toLowerCase();  [BUGGY]      }  else  {  if  (expPos  >  -1)  {  if  (expPos  >  str.length())  {  throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  }  mant  =  str.substring(0,  expPos);  }  else  {  mant  =  str;  }  dec  =  null;  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  	projects/Lang7/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	482	482	1	replace	mant  =  str.substring(0,  DEC).toLowerCase();	  mant    =    str.substring(0,    1).toLowerCase();    	non-compiled	[CE]  ')'  expected	46	None	replace
137	[BUG]  [BUGGY]  int  decPos  =  str.indexOf('.')+  1;  [CE]  ')'  expected  [FE]              AssertionError      [CONTEXT]      if  (decPos  >  -1)  {  if  (expPos  >  -1)  {  if  (expPos  <  decPos  ||  expPos  >  str.length())  {  throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  }  dec  =  str.substring(decPos  +  1,  expPos);  }  else  {  dec  =  str.substring(decPos  +  1);  }      [BUGGY]  int  decPos  =  str.indexOf('.')+  1;  [BUGGY]      mant  =  str.substring(0,  decPos);  }  else  {  if  (expPos  >  -1)  {  if  (expPos  >  str.length())  {  throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  }  mant  =  str.substring(0,  expPos);  }  else  {  mant  =  str;  }  dec  =  null;  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  	projects/Lang7/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	482	482	1	replace	int  decPos  =  str.indexOf('.')+  1;	  int    decPos    =    str.indexOf('.');    	non-compiled	[CE]  ')'  expected	49	None	replace
138	[BUG]  [BUGGY]  if(dec!=  null)  {  if(expPos  >  -1)  {  if(expPos  <  decPos  ||  expPos  >  str.length())  {  throw  new  NumberFormatException( " ");  }  [CE]  ')'  expected  [FE]            AssertionError      [CONTEXT]      if  (decPos  >  -1)  {  if  (expPos  >  -1)  {  if  (expPos  <  decPos  ||  expPos  >  str.length())  {  throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  }  dec  =  str.substring(decPos  +  1,  expPos);  }  else  {  dec  =  str.substring(decPos  +  1);  }      [BUGGY]  if(dec!=  null)  {  if(expPos  >  -1)  {  if(expPos  <  decPos  ||  expPos  >  str.length())  {  throw  new  NumberFormatException( " ");  }  [BUGGY]      mant  =  str.substring(0,  decPos);  }  else  {  if  (expPos  >  -1)  {  if  (expPos  >  str.length())  {  throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  }  mant  =  str.substring(0,  expPos);  }  else  {  mant  =  str;  }  dec  =  null;  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  	projects/Lang7/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	482	482	1	replace	if(dec!=  null)  {  if(expPos  >  -1)  {  if(expPos  <  decPos  ||  expPos  >  str.length())  {  throw  new  NumberFormatException( " ");  }	  if(dec    ==    null)    {    if(expPos    >    -1)    {    if(expPos    <    decPos    ||    expPos    >    str.length())    {    throw    new    NumberFormatException(   "   ");    }    	non-compiled	[CE]  ')'  expected	55	None	replace
139	[BUG]  [BUGGY]  if(dec  ==  null)  {  if(expPos  <  -1)  {  if(expPos  <  decPos  ||  expPos  >  str.length())  {  throw  new  NumberFormatException( " ");  }  [CE]  ')'  expected  [FE]              AssertionError      [CONTEXT]      if  (decPos  >  -1)  {  if  (expPos  >  -1)  {  if  (expPos  <  decPos  ||  expPos  >  str.length())  {  throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  }  dec  =  str.substring(decPos  +  1,  expPos);  }  else  {  dec  =  str.substring(decPos  +  1);  }      [BUGGY]  if(dec  ==  null)  {  if(expPos  <  -1)  {  if(expPos  <  decPos  ||  expPos  >  str.length())  {  throw  new  NumberFormatException( " ");  }  [BUGGY]      mant  =  str.substring(0,  decPos);  }  else  {  if  (expPos  >  -1)  {  if  (expPos  >  str.length())  {  throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  }  mant  =  str.substring(0,  expPos);  }  else  {  mant  =  str;  }  dec  =  null;  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  	projects/Lang7/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	482	482	1	replace	if(dec  ==  null)  {  if(expPos  <  -1)  {  if(expPos  <  decPos  ||  expPos  >  str.length())  {  throw  new  NumberFormatException( " ");  }	  if(dec    ==    null)    {    if(expPos    >    -1)    {    if(expPos    <    decPos    ||    expPos    >    str.length())    {    throw    new    NumberFormatException(   "   ");    }    	non-compiled	[CE]  ')'  expected	55	None	replace
140	[BUG]  [BUGGY]  mant  =  str.substring(0,  DEC_POP);  [CE]  ')'  expected  [FE]              AssertionError      [CONTEXT]      if  (decPos  >  -1)  {  if  (expPos  >  -1)  {  if  (expPos  <  decPos  ||  expPos  >  str.length())  {  throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  }  dec  =  str.substring(decPos  +  1,  expPos);  }  else  {  dec  =  str.substring(decPos  +  1);  }      [BUGGY]  mant  =  str.substring(0,  DEC_POP);  [BUGGY]      }  else  {  if  (expPos  >  -1)  {  if  (expPos  >  str.length())  {  throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  }  mant  =  str.substring(0,  expPos);  }  else  {  mant  =  str;  }  dec  =  null;  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  	projects/Lang7/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	482	482	1	replace	mant  =  str.substring(0,  DEC_POP);	  mant    =    str.substring(1,    expPos);    	non-compiled	[CE]  ')'  expected	16	None	replace
141	[BUG]  [BUGGY]  int  expPos  =  str.lastIndexOf('.',  dec  +  1);  [CE]  ')'  expected  [FE]            AssertionError      [CONTEXT]      if  (decPos  >  -1)  {  if  (expPos  >  -1)  {  if  (expPos  <  decPos  ||  expPos  >  str.length())  {  throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  }  dec  =  str.substring(decPos  +  1,  expPos);  }  else  {  dec  =  str.substring(decPos  +  1);  }      [BUGGY]  int  expPos  =  str.lastIndexOf('.',  dec  +  1);  [BUGGY]      mant  =  str.substring(0,  decPos);  }  else  {  if  (expPos  >  -1)  {  if  (expPos  >  str.length())  {  throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  }  mant  =  str.substring(0,  expPos);  }  else  {  mant  =  str;  }  dec  =  null;  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  	projects/Lang7/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	482	482	1	replace	int  expPos  =  str.lastIndexOf('.',  dec  +  1);	  int    expPos    =    str.lastIndexOf('.',    dec);    	non-compiled	[CE]  ')'  expected	12	None	replace
142	[BUG]  [BUGGY]  if(decPos  <  decPos  ||  expPos  >  str.length())  {  throw  new  NumberFormatException( " ");  }  [CE]  ')'  expected  [FE]                  AssertionError      [CONTEXT]      if  (decPos  >  -1)  {  if  (expPos  >  -1)  {  if  (expPos  <  decPos  ||  expPos  >  str.length())  {  throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  }  dec  =  str.substring(decPos  +  1,  expPos);  }  else  {  dec  =  str.substring(decPos  +  1);  }      [BUGGY]  if(decPos  <  decPos  ||  expPos  >  str.length())  {  throw  new  NumberFormatException( " ");  }  [BUGGY]      mant  =  str.substring(0,  decPos);  }  else  {  if  (expPos  >  -1)  {  if  (expPos  >  str.length())  {  throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  }  mant  =  str.substring(0,  expPos);  }  else  {  mant  =  str;  }  dec  =  null;  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  	projects/Lang7/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	482	482	1	replace	if(decPos  <  decPos  ||  expPos  >  str.length())  {  throw  new  NumberFormatException( " ");  }	  if(expPos    <    decPos    ||    expPos    >    str.length())    {    throw    new    NumberFormatException(   "   ");    }    	non-compiled	[CE]  ')'  expected	58	None	replace
143	[BUG]  [BUGGY]  if(decPos  <  decPos)  {  throw  new  NumberFormatException( " ");  }  [CE]  ')'  expected  [FE]                    AssertionError      [CONTEXT]      if  (decPos  >  -1)  {  if  (expPos  >  -1)  {  if  (expPos  <  decPos  ||  expPos  >  str.length())  {  throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  }  dec  =  str.substring(decPos  +  1,  expPos);  }  else  {  dec  =  str.substring(decPos  +  1);  }      [BUGGY]  if(decPos  <  decPos)  {  throw  new  NumberFormatException( " ");  }  [BUGGY]      mant  =  str.substring(0,  decPos);  }  else  {  if  (expPos  >  -1)  {  if  (expPos  >  str.length())  {  throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  }  mant  =  str.substring(0,  expPos);  }  else  {  mant  =  str;  }  dec  =  null;  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  	projects/Lang7/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	482	482	1	replace	if(decPos  <  decPos)  {  throw  new  NumberFormatException( " ");  }	  if(expPos    <    decPos    ||    expPos    >    str.length())    {    throw    new    NumberFormatException(   "   ");    }    	non-compiled	[CE]  ')'  expected	58	None	replace
144	[BUG]  [BUGGY]  if(decPos  <  decPos  ||  expPos  >  str.length())  {  throw  new  NumberFormatException(str  + "  is  not  a  valid  number.   ");  }  [CE]  ')'  expected  [FE]                      AssertionError      [CONTEXT]      if  (decPos  >  -1)  {  if  (expPos  >  -1)  {  if  (expPos  <  decPos  ||  expPos  >  str.length())  {  throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  }  dec  =  str.substring(decPos  +  1,  expPos);  }  else  {  dec  =  str.substring(decPos  +  1);  }      [BUGGY]  if(decPos  <  decPos  ||  expPos  >  str.length())  {  throw  new  NumberFormatException(str  + "  is  not  a  valid  number.   ");  }  [BUGGY]      mant  =  str.substring(0,  decPos);  }  else  {  if  (expPos  >  -1)  {  if  (expPos  >  str.length())  {  throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  }  mant  =  str.substring(0,  expPos);  }  else  {  mant  =  str;  }  dec  =  null;  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  	projects/Lang7/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	482	482	1	replace	if(decPos  <  decPos  ||  expPos  >  str.length())  {  throw  new  NumberFormatException(str  + "  is  not  a  valid  number.   ");  }	  if(expPos    <    decPos    ||    expPos    >    str.length())    {    throw    new    NumberFormatException(   "   ");    }    	non-compiled	[CE]  ')'  expected	58	None	replace
145	[BUG]  [BUGGY]  if(dec!=  null)  {  if(expPos  >  -1)  {  if(expPos  <  decPos  ||  expPos  >  str.length())  {  throw  new  NumberFormatException(str  + "  is  not  a  valid  number.  [CE]  [FE]                  AssertionError      [CONTEXT]      if  (decPos  >  -1)  {  if  (expPos  >  -1)  {  if  (expPos  <  decPos  ||  expPos  >  str.length())  {  throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  }  dec  =  str.substring(decPos  +  1,  expPos);  }  else  {  dec  =  str.substring(decPos  +  1);  }      [BUGGY]  if(dec!=  null)  {  if(expPos  >  -1)  {  if(expPos  <  decPos  ||  expPos  >  str.length())  {  throw  new  NumberFormatException(str  + "  is  not  a  valid  number.  [BUGGY]      mant  =  str.substring(0,  decPos);  }  else  {  if  (expPos  >  -1)  {  if  (expPos  >  str.length())  {  throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  }  mant  =  str.substring(0,  expPos);  }  else  {  mant  =  str;  }  dec  =  null;  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  	projects/Lang7/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	482	482	1	replace	if(dec!=  null)  {  if(expPos  >  -1)  {  if(expPos  <  decPos  ||  expPos  >  str.length())  {  throw  new  NumberFormatException(str  + "  is  not  a  valid  number.	  if(dec    ==    null)    {    if(expPos    >    -1)    {    if(expPos    <    decPos    ||    expPos    >    str.length())    {    throw    new    NumberFormatException(str    +   "    is    not    a    valid    number.   ");    }    	non-compiled	[CE]  	52	None	replace
146	[BUG]  [BUGGY]  if(dec!=  null)  {  if(expPos  >  -1)  {  if(expPos  <  decPos  ||  expPos  >  str.length())  {  throw  new  NumberFormatException(str  + "  is  not  a  valid  number. ");  }  [CE]  ')'  expected  [FE]                    AssertionError      [CONTEXT]      if  (decPos  >  -1)  {  if  (expPos  >  -1)  {  if  (expPos  <  decPos  ||  expPos  >  str.length())  {  throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  }  dec  =  str.substring(decPos  +  1,  expPos);  }  else  {  dec  =  str.substring(decPos  +  1);  }      [BUGGY]  if(dec!=  null)  {  if(expPos  >  -1)  {  if(expPos  <  decPos  ||  expPos  >  str.length())  {  throw  new  NumberFormatException(str  + "  is  not  a  valid  number. ");  }  [BUGGY]      mant  =  str.substring(0,  decPos);  }  else  {  if  (expPos  >  -1)  {  if  (expPos  >  str.length())  {  throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  }  mant  =  str.substring(0,  expPos);  }  else  {  mant  =  str;  }  dec  =  null;  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  	projects/Lang7/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	482	482	1	replace	if(dec!=  null)  {  if(expPos  >  -1)  {  if(expPos  <  decPos  ||  expPos  >  str.length())  {  throw  new  NumberFormatException(str  + "  is  not  a  valid  number. ");  }	  if(dec    ==    null)    {    if(expPos    >    -1)    {    if(expPos    <    decPos    ||    expPos    >    str.length())    {    throw    new    NumberFormatException(str    +   "    is    not    a    valid    number.   ");    }    	non-compiled	[CE]  ')'  expected	52	None	replace
147	[BUG]  [BUGGY]  mant  =  str.substring(0,  decPos  -  1,  decPos);  [CE]  ')'  expected  [FE]                  AssertionError      [CONTEXT]      if  (decPos  >  -1)  {  if  (expPos  >  -1)  {  if  (expPos  <  decPos  ||  expPos  >  str.length())  {  throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  }  dec  =  str.substring(decPos  +  1,  expPos);  }  else  {  dec  =  str.substring(decPos  +  1);  }      [BUGGY]  mant  =  str.substring(0,  decPos  -  1,  decPos);  [BUGGY]      }  else  {  if  (expPos  >  -1)  {  if  (expPos  >  str.length())  {  throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  }  mant  =  str.substring(0,  expPos);  }  else  {  mant  =  str;  }  dec  =  null;  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  	projects/Lang7/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	482	482	1	replace	mant  =  str.substring(0,  decPos  -  1,  decPos);	  mant    =    str.substring(0,    decPos    -    1,    expPos);    	non-compiled	[CE]  ')'  expected	48	None	replace
148	[BUG]  [BUGGY]  int  expPos  =  str.indexOf('.')/  1;  [CE]  ')'  expected  [FE]                  AssertionError      [CONTEXT]      if  (decPos  >  -1)  {  if  (expPos  >  -1)  {  if  (expPos  <  decPos  ||  expPos  >  str.length())  {  throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  }  dec  =  str.substring(decPos  +  1,  expPos);  }  else  {  dec  =  str.substring(decPos  +  1);  }      [BUGGY]  int  expPos  =  str.indexOf('.')/  1;  [BUGGY]      mant  =  str.substring(0,  decPos);  }  else  {  if  (expPos  >  -1)  {  if  (expPos  >  str.length())  {  throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  }  mant  =  str.substring(0,  expPos);  }  else  {  mant  =  str;  }  dec  =  null;  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  	projects/Lang7/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	482	482	1	replace	int  expPos  =  str.indexOf('.')/  1;	  int    expPos    =    str.indexOf('.')+    1;    	non-compiled	[CE]  ')'  expected	25	None	replace
149	[BUG]  [BUGGY]  mant  =  str.substring(1,  decPos  -  1);  [CE]  ')'  expected  [FE]                  AssertionError      [CONTEXT]      if  (decPos  >  -1)  {  if  (expPos  >  -1)  {  if  (expPos  <  decPos  ||  expPos  >  str.length())  {  throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  }  dec  =  str.substring(decPos  +  1,  expPos);  }  else  {  dec  =  str.substring(decPos  +  1);  }      [BUGGY]  mant  =  str.substring(1,  decPos  -  1);  [BUGGY]      }  else  {  if  (expPos  >  -1)  {  if  (expPos  >  str.length())  {  throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  }  mant  =  str.substring(0,  expPos);  }  else  {  mant  =  str;  }  dec  =  null;  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  	projects/Lang7/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	482	482	1	replace	mant  =  str.substring(1,  decPos  -  1);	  mant    =    str.substring(0,    expPos    -    1);    	non-compiled	[CE]  ')'  expected	20	None	replace
150	[BUG]  [BUGGY]  mant  =  str.substring(0,  decPos).toLowerCase();  [CE]  ')'  expected  [FE]              AssertionError      [CONTEXT]      if  (decPos  >  -1)  {  if  (expPos  >  -1)  {  if  (expPos  <  decPos  ||  expPos  >  str.length())  {  throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  }  dec  =  str.substring(decPos  +  1,  expPos);  }  else  {  dec  =  str.substring(decPos  +  1);  }      [BUGGY]  mant  =  str.substring(0,  decPos).toLowerCase();  [BUGGY]      }  else  {  if  (expPos  >  -1)  {  if  (expPos  >  str.length())  {  throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  }  mant  =  str.substring(0,  expPos);  }  else  {  mant  =  str;  }  dec  =  null;  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  	projects/Lang7/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	482	482	1	replace	mant  =  str.substring(0,  decPos).toLowerCase();	  mant    =    str.substring(0,    1).toLowerCase();    	non-compiled	[CE]  ')'  expected	46	None	replace
151	[BUG]  [BUGGY]  if(dec  ==  null)  {  if(expPos  >  -1)  {  throw  new  NumberFormatException(str  + "  is  not  a  valid  number.   ");  }  [CE]  ')'  expected  [FE]                AssertionError      [CONTEXT]      if  (decPos  >  -1)  {  if  (expPos  >  -1)  {  if  (expPos  <  decPos  ||  expPos  >  str.length())  {  throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  }  dec  =  str.substring(decPos  +  1,  expPos);  }  else  {  dec  =  str.substring(decPos  +  1);  }      [BUGGY]  if(dec  ==  null)  {  if(expPos  >  -1)  {  throw  new  NumberFormatException(str  + "  is  not  a  valid  number.   ");  }  [BUGGY]      mant  =  str.substring(0,  decPos);  }  else  {  if  (expPos  >  -1)  {  if  (expPos  >  str.length())  {  throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  }  mant  =  str.substring(0,  expPos);  }  else  {  mant  =  str;  }  dec  =  null;  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  	projects/Lang7/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	482	482	1	replace	if(dec  ==  null)  {  if(expPos  >  -1)  {  throw  new  NumberFormatException(str  + "  is  not  a  valid  number.   ");  }	  if(dec    ==    null)    {    if(expPos    <    decPos    ||    expPos    >    str.length())    {    throw    new    NumberFormatException(   "   ");    }    	non-compiled	[CE]  ')'  expected	57	None	replace
152	[BUG]  [BUGGY]  if(dec  ==  null)  {  if(expPos  <  decPos  ||  expPos  >  str.length())  {  throw  new  NumberFormatException(str  + "  is  not  a  valid  number.   ");  }  [CE]  ')'  expected  [FE]                  AssertionError      [CONTEXT]      if  (decPos  >  -1)  {  if  (expPos  >  -1)  {  if  (expPos  <  decPos  ||  expPos  >  str.length())  {  throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  }  dec  =  str.substring(decPos  +  1,  expPos);  }  else  {  dec  =  str.substring(decPos  +  1);  }      [BUGGY]  if(dec  ==  null)  {  if(expPos  <  decPos  ||  expPos  >  str.length())  {  throw  new  NumberFormatException(str  + "  is  not  a  valid  number.   ");  }  [BUGGY]      mant  =  str.substring(0,  decPos);  }  else  {  if  (expPos  >  -1)  {  if  (expPos  >  str.length())  {  throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  }  mant  =  str.substring(0,  expPos);  }  else  {  mant  =  str;  }  dec  =  null;  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  	projects/Lang7/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	482	482	1	replace	if(dec  ==  null)  {  if(expPos  <  decPos  ||  expPos  >  str.length())  {  throw  new  NumberFormatException(str  + "  is  not  a  valid  number.   ");  }	  if(dec    ==    null)    {    if(expPos    <    decPos    ||    expPos    >    str.length())    {    throw    new    NumberFormatException(   "   ");    }    	non-compiled	[CE]  ')'  expected	57	None	replace
153	[BUG]  [BUGGY]  Dec  =  str.substring(decPos  +  1,  expPos);  [CE]  ')'  expected  [FE]                  AssertionError      [CONTEXT]      if  (decPos  >  -1)  {  if  (expPos  >  -1)  {  if  (expPos  <  decPos  ||  expPos  >  str.length())  {  throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  }  dec  =  str.substring(decPos  +  1,  expPos);  }  else  {  dec  =  str.substring(decPos  +  1);  }      [BUGGY]  Dec  =  str.substring(decPos  +  1,  expPos);  [BUGGY]      mant  =  str.substring(0,  decPos);  }  else  {  if  (expPos  >  -1)  {  if  (expPos  >  str.length())  {  throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  }  mant  =  str.substring(0,  expPos);  }  else  {  mant  =  str;  }  dec  =  null;  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  	projects/Lang7/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	482	482	1	replace	Dec  =  str.substring(decPos  +  1,  expPos);	  dec    =    str.substring(decPos    +    2,    expPos);    	non-compiled	[CE]  ')'  expected	2	None	replace
154	[BUG]  [BUGGY]  int  decPos  =  str.lastIndexOf('.')+  1;  [CE]  ')'  expected  [FE]              AssertionError      [CONTEXT]      if  (decPos  >  -1)  {  if  (expPos  >  -1)  {  if  (expPos  <  decPos  ||  expPos  >  str.length())  {  throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  }  dec  =  str.substring(decPos  +  1,  expPos);  }  else  {  dec  =  str.substring(decPos  +  1);  }      [BUGGY]  int  decPos  =  str.lastIndexOf('.')+  1;  [BUGGY]      mant  =  str.substring(0,  decPos);  }  else  {  if  (expPos  >  -1)  {  if  (expPos  >  str.length())  {  throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  }  mant  =  str.substring(0,  expPos);  }  else  {  mant  =  str;  }  dec  =  null;  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  	projects/Lang7/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	482	482	1	replace	int  decPos  =  str.lastIndexOf('.')+  1;	  int    decPos    =    str.length();    	non-compiled	[CE]  ')'  expected	45	None	replace
155	[BUG]  [BUGGY]  Integer  dec  =  str.substring(0,  decPos);  [CE]  ')'  expected  [FE]              AssertionError      [CONTEXT]      if  (decPos  >  -1)  {  if  (expPos  >  -1)  {  if  (expPos  <  decPos  ||  expPos  >  str.length())  {  throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  }  dec  =  str.substring(decPos  +  1,  expPos);  }  else  {  dec  =  str.substring(decPos  +  1);  }      [BUGGY]  Integer  dec  =  str.substring(0,  decPos);  [BUGGY]      mant  =  str.substring(0,  decPos);  }  else  {  if  (expPos  >  -1)  {  if  (expPos  >  str.length())  {  throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  }  mant  =  str.substring(0,  expPos);  }  else  {  mant  =  str;  }  dec  =  null;  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  	projects/Lang7/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	482	482	1	replace	Integer  dec  =  str.substring(0,  decPos);	  if(expPos    >    -1)    {    if(expPos    <    decPos    ||    expPos    >    str.length())    {    throw    new    NumberFormatException(   "   ");    }    	non-compiled	[CE]  ')'  expected	56	None	replace
156	[BUG]  [BUGGY]  Integer  dec  =  str.substring(decPos  +  1,  expPos);  [CE]  ')'  expected  [FE]                AssertionError      [CONTEXT]      if  (decPos  >  -1)  {  if  (expPos  >  -1)  {  if  (expPos  <  decPos  ||  expPos  >  str.length())  {  throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  }  dec  =  str.substring(decPos  +  1,  expPos);  }  else  {  dec  =  str.substring(decPos  +  1);  }      [BUGGY]  Integer  dec  =  str.substring(decPos  +  1,  expPos);  [BUGGY]      mant  =  str.substring(0,  decPos);  }  else  {  if  (expPos  >  -1)  {  if  (expPos  >  str.length())  {  throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  }  mant  =  str.substring(0,  expPos);  }  else  {  mant  =  str;  }  dec  =  null;  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  	projects/Lang7/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	482	482	1	replace	Integer  dec  =  str.substring(decPos  +  1,  expPos);	  if(expPos    >    -1)    {    if(expPos    <    decPos    ||    expPos    >    str.length())    {    throw    new    NumberFormatException(   "   ");    }    	non-compiled	[CE]  ')'  expected	56	None	replace
157	[BUG]  [BUGGY]  Neighbor  dec  =  str.substring(0,  decPos);  [CE]  ')'  expected  [FE]                  AssertionError      [CONTEXT]      if  (decPos  >  -1)  {  if  (expPos  >  -1)  {  if  (expPos  <  decPos  ||  expPos  >  str.length())  {  throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  }  dec  =  str.substring(decPos  +  1,  expPos);  }  else  {  dec  =  str.substring(decPos  +  1);  }      [BUGGY]  Neighbor  dec  =  str.substring(0,  decPos);  [BUGGY]      mant  =  str.substring(0,  decPos);  }  else  {  if  (expPos  >  -1)  {  if  (expPos  >  str.length())  {  throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  }  mant  =  str.substring(0,  expPos);  }  else  {  mant  =  str;  }  dec  =  null;  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  	projects/Lang7/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	482	482	1	replace	Neighbor  dec  =  str.substring(0,  decPos);	  if(expPos    >    -1)    {    if(expPos    <    decPos    ||    expPos    >    str.length())    {    throw    new    NumberFormatException(   "   ");    }    	non-compiled	[CE]  ')'  expected	56	None	replace
158	[BUG]  [BUGGY]  ||  decPos  ==  str.length())  {  throw  new  NumberFormatException(str  + "  is  not  a  valid  number.   "  [CE]  [FE]                  AssertionError      [CONTEXT]      if  (decPos  >  -1)  {  if  (expPos  >  -1)  {  if  (expPos  <  decPos  ||  expPos  >  str.length())  {  throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  }  dec  =  str.substring(decPos  +  1,  expPos);  }  else  {  dec  =  str.substring(decPos  +  1);  }      [BUGGY]  ||  decPos  ==  str.length())  {  throw  new  NumberFormatException(str  + "  is  not  a  valid  number.   "  [BUGGY]      mant  =  str.substring(0,  decPos);  }  else  {  if  (expPos  >  -1)  {  if  (expPos  >  str.length())  {  throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  }  mant  =  str.substring(0,  expPos);  }  else  {  mant  =  str;  }  dec  =  null;  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  	projects/Lang7/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	482	482	1	replace	||  decPos  ==  str.length())  {  throw  new  NumberFormatException(str  + "  is  not  a  valid  number.   "	  ||    expPos    ==    str.length())    {    throw    new    NumberFormatException(str    +   "    is    not    a    valid    number.       "    	non-compiled	[CE]  	7	None	replace
159	[BUG]  [BUGGY]  if(dec  ==  null)  {  if(decPos  >  -1)  {  if(expPos  <  decPos  ||  expPos  >  str.length())  {  throw  new  NumberFormatException(str  + "  is  not  a  valid  number.  [CE]  [FE]                AssertionError      [CONTEXT]      if  (decPos  >  -1)  {  if  (expPos  >  -1)  {  if  (expPos  <  decPos  ||  expPos  >  str.length())  {  throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  }  dec  =  str.substring(decPos  +  1,  expPos);  }  else  {  dec  =  str.substring(decPos  +  1);  }      [BUGGY]  if(dec  ==  null)  {  if(decPos  >  -1)  {  if(expPos  <  decPos  ||  expPos  >  str.length())  {  throw  new  NumberFormatException(str  + "  is  not  a  valid  number.  [BUGGY]      mant  =  str.substring(0,  decPos);  }  else  {  if  (expPos  >  -1)  {  if  (expPos  >  str.length())  {  throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  }  mant  =  str.substring(0,  expPos);  }  else  {  mant  =  str;  }  dec  =  null;  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  	projects/Lang7/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	482	482	1	replace	if(dec  ==  null)  {  if(decPos  >  -1)  {  if(expPos  <  decPos  ||  expPos  >  str.length())  {  throw  new  NumberFormatException(str  + "  is  not  a  valid  number.	  if(dec!=    null)    {    if(decPos    >    -1)    {    if(expPos    <    decPos    ||    expPos    >    str.length())    {    throw    new    NumberFormatException(str    +   "    is    not    a    valid    number.    	non-compiled	[CE]  	51	None	replace
160	[BUG]  [BUGGY]  if(dec  ==  null)  {  if(decPos  >  -1)  {  if(expPos  <  decPos  ||  expPos  >  str.length())  {  throw  new  NumberFormatException(str  + "  is  not  a  valid  number  [CE]  [FE]                  AssertionError      [CONTEXT]      if  (decPos  >  -1)  {  if  (expPos  >  -1)  {  if  (expPos  <  decPos  ||  expPos  >  str.length())  {  throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  }  dec  =  str.substring(decPos  +  1,  expPos);  }  else  {  dec  =  str.substring(decPos  +  1);  }      [BUGGY]  if(dec  ==  null)  {  if(decPos  >  -1)  {  if(expPos  <  decPos  ||  expPos  >  str.length())  {  throw  new  NumberFormatException(str  + "  is  not  a  valid  number  [BUGGY]      mant  =  str.substring(0,  decPos);  }  else  {  if  (expPos  >  -1)  {  if  (expPos  >  str.length())  {  throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  }  mant  =  str.substring(0,  expPos);  }  else  {  mant  =  str;  }  dec  =  null;  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  	projects/Lang7/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	482	482	1	replace	if(dec  ==  null)  {  if(decPos  >  -1)  {  if(expPos  <  decPos  ||  expPos  >  str.length())  {  throw  new  NumberFormatException(str  + "  is  not  a  valid  number	  if(dec!=    null)    {    if(decPos    >    -1)    {    if(expPos    <    decPos    ||    expPos    >    str.length())    {    throw    new    NumberFormatException(str    +   "    is    not    a    valid    number.    	non-compiled	[CE]  	51	None	replace
161	[BUG]  [BUGGY]  ||  expPos  <  str.length())  {  throw  new  NumberFormatException(str  + "  is  not  a  valid  number  [CE]  [FE]                AssertionError      [CONTEXT]      if  (decPos  >  -1)  {  if  (expPos  >  -1)  {  if  (expPos  <  decPos  ||  expPos  >  str.length())  {  throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  }  dec  =  str.substring(decPos  +  1,  expPos);  }  else  {  dec  =  str.substring(decPos  +  1);  }      [BUGGY]  ||  expPos  <  str.length())  {  throw  new  NumberFormatException(str  + "  is  not  a  valid  number  [BUGGY]      mant  =  str.substring(0,  decPos);  }  else  {  if  (expPos  >  -1)  {  if  (expPos  >  str.length())  {  throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  }  mant  =  str.substring(0,  expPos);  }  else  {  mant  =  str;  }  dec  =  null;  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  	projects/Lang7/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	482	482	1	replace	||  expPos  <  str.length())  {  throw  new  NumberFormatException(str  + "  is  not  a  valid  number	  if(dec    ==    null)    {    if(expPos    >    -1)    {    if(expPos    <    decPos    ||    expPos    >    str.length())    {    throw    new    NumberFormatException(str    +   "    is    not    a    valid    number    	non-compiled	[CE]  	61	None	replace
162	[BUG]  [BUGGY]  dec  =  str.substring(0,  decPos  -  1);  [CE]  ')'  expected  [FE]                    AssertionError      [CONTEXT]      if  (decPos  >  -1)  {  if  (expPos  >  -1)  {  if  (expPos  <  decPos  ||  expPos  >  str.length())  {  throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  }  dec  =  str.substring(decPos  +  1,  expPos);  }  else  {  dec  =  str.substring(decPos  +  1);  }      [BUGGY]  dec  =  str.substring(0,  decPos  -  1);  [BUGGY]      }  else  {  if  (expPos  >  -1)  {  if  (expPos  >  str.length())  {  throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  }  mant  =  str.substring(0,  expPos);  }  else  {  mant  =  str;  }  dec  =  null;  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  	projects/Lang7/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	482	482	1	replace	dec  =  str.substring(0,  decPos  -  1);	  dec    =    str.substring(0,    decPos);    	non-compiled	[CE]  ')'  expected	5	None	replace
163	[BUG]  [BUGGY]  mant  =  str.substring(decPos,  decPos);  [CE]  ')'  expected  [FE]                AssertionError      [CONTEXT]      if  (decPos  >  -1)  {  if  (expPos  >  -1)  {  if  (expPos  <  decPos  ||  expPos  >  str.length())  {  throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  }  dec  =  str.substring(decPos  +  1,  expPos);  }  else  {  dec  =  str.substring(decPos  +  1);  }      [BUGGY]  mant  =  str.substring(decPos,  decPos);  [BUGGY]      }  else  {  if  (expPos  >  -1)  {  if  (expPos  >  str.length())  {  throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  }  mant  =  str.substring(0,  expPos);  }  else  {  mant  =  str;  }  dec  =  null;  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  	projects/Lang7/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	482	482	1	replace	mant  =  str.substring(decPos,  decPos);	  mant    =    str.substring(decPos,    expPos);    	non-compiled	[CE]  ')'  expected	59	None	replace
