bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  dec  =  str.substring(decPos  +  2);  [CE]  ')'  expected  [FE]            AssertionError    [CONTEXT]    if  (decPos  >  -1)  {  if  (expPos  >  -1)  {  if  (expPos  <  decPos  ||  expPos  >  str.length())  {  throw  new  NumberFormatException(str  +     "  is  not  a  valid  number.   ");  }  dec  =  str.substring(decPos  +  1,  expPos);  }  else  {  dec  =  str.substring(decPos  +  1);  }    [BUGGY]  dec  =  str.substring(decPos  +  2);  [BUGGY]    mant  =  str.substring(0,  decPos);  }  else  {  if  (expPos  >  -1)  {  if  (expPos  >  str.length())  {  throw  new  NumberFormatException(str  +     "  is  not  a  valid  number.   ");  }  mant  =  str.substring(0,  expPos);  }  else  {  mant  =  str;  }  dec  =  null;  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  	projects/Lang7/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	482	482	1	replace	dec  =  str.substring(decPos  +  2);	      dec    =    str.substring(decPos    +    1);    	non-compiled	[CE]  ')'  expected	16	None	replace
2	[BUG]  [BUGGY]  dec  =  str.substring(decPos  +  2,  expPos);  [CE]  ')'  expected  [FE]              AssertionError    [CONTEXT]    if  (decPos  >  -1)  {  if  (expPos  >  -1)  {  if  (expPos  <  decPos  ||  expPos  >  str.length())  {  throw  new  NumberFormatException(str  +     "  is  not  a  valid  number.   ");  }  dec  =  str.substring(decPos  +  1,  expPos);  }  else  {  dec  =  str.substring(decPos  +  1);  }    [BUGGY]  dec  =  str.substring(decPos  +  2,  expPos);  [BUGGY]    mant  =  str.substring(0,  decPos);  }  else  {  if  (expPos  >  -1)  {  if  (expPos  >  str.length())  {  throw  new  NumberFormatException(str  +     "  is  not  a  valid  number.   ");  }  mant  =  str.substring(0,  expPos);  }  else  {  mant  =  str;  }  dec  =  null;  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  	projects/Lang7/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	482	482	1	replace	dec  =  str.substring(decPos  +  2,  expPos);	      dec    =    str.substring(decPos    +    1);    	non-compiled	[CE]  ')'  expected	16	None	replace
3	[BUG]  [BUGGY]  mant  =  str.substring(0,  expPos  +  1);  [CE]  ')'  expected  [FE]            AssertionError    [CONTEXT]    if  (decPos  >  -1)  {  if  (expPos  >  -1)  {  if  (expPos  <  decPos  ||  expPos  >  str.length())  {  throw  new  NumberFormatException(str  +     "  is  not  a  valid  number.   ");  }  dec  =  str.substring(decPos  +  1,  expPos);  }  else  {  dec  =  str.substring(decPos  +  1);  }    [BUGGY]  mant  =  str.substring(0,  expPos  +  1);  [BUGGY]    }  else  {  if  (expPos  >  -1)  {  if  (expPos  >  str.length())  {  throw  new  NumberFormatException(str  +     "  is  not  a  valid  number.   ");  }  mant  =  str.substring(0,  expPos);  }  else  {  mant  =  str;  }  dec  =  null;  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  	projects/Lang7/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	482	482	1	replace	mant  =  str.substring(0,  expPos  +  1);	  mant    =    str.substring(0,    expPos);    	non-compiled	[CE]  ')'  expected	3	None	replace
4	[BUG]  [BUGGY]  mant  =  str.substring(0,  dec);  [CE]  ')'  expected  [FE]              AssertionError    [CONTEXT]    if  (decPos  >  -1)  {  if  (expPos  >  -1)  {  if  (expPos  <  decPos  ||  expPos  >  str.length())  {  throw  new  NumberFormatException(str  +     "  is  not  a  valid  number.   ");  }  dec  =  str.substring(decPos  +  1,  expPos);  }  else  {  dec  =  str.substring(decPos  +  1);  }    [BUGGY]  mant  =  str.substring(0,  dec);  [BUGGY]    }  else  {  if  (expPos  >  -1)  {  if  (expPos  >  str.length())  {  throw  new  NumberFormatException(str  +     "  is  not  a  valid  number.   ");  }  mant  =  str.substring(0,  expPos);  }  else  {  mant  =  str;  }  dec  =  null;  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  	projects/Lang7/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	482	482	1	replace	mant  =  str.substring(0,  dec);	  mant    =    str.substring(0,    expPos);    	non-compiled	[CE]  ')'  expected	3	None	replace
5	[BUG]  [BUGGY]  dec  =  str.substring(0,  decPos);  [CE]  ')'  expected  [FE]                AssertionError    [CONTEXT]    if  (decPos  >  -1)  {  if  (expPos  >  -1)  {  if  (expPos  <  decPos  ||  expPos  >  str.length())  {  throw  new  NumberFormatException(str  +     "  is  not  a  valid  number.   ");  }  dec  =  str.substring(decPos  +  1,  expPos);  }  else  {  dec  =  str.substring(decPos  +  1);  }    [BUGGY]  dec  =  str.substring(0,  decPos);  [BUGGY]    }  else  {  if  (expPos  >  -1)  {  if  (expPos  >  str.length())  {  throw  new  NumberFormatException(str  +     "  is  not  a  valid  number.   ");  }  mant  =  str.substring(0,  expPos);  }  else  {  mant  =  str;  }  dec  =  null;  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  	projects/Lang7/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	482	482	1	replace	dec  =  str.substring(0,  decPos);	      	non-compiled	[CE]  ')'  expected	5	None	replace
6	[BUG]  [BUGGY]  ||  expPos  <  str.length())  {  throw  new  NumberFormatException(str  + "  is  not  a  valid  number.   "  [CE]  [FE]            AssertionError    [CONTEXT]    if  (decPos  >  -1)  {  if  (expPos  >  -1)  {  if  (expPos  <  decPos  ||  expPos  >  str.length())  {  throw  new  NumberFormatException(str  +     "  is  not  a  valid  number.   ");  }  dec  =  str.substring(decPos  +  1,  expPos);  }  else  {  dec  =  str.substring(decPos  +  1);  }    [BUGGY]  ||  expPos  <  str.length())  {  throw  new  NumberFormatException(str  + "  is  not  a  valid  number.   "  [BUGGY]    mant  =  str.substring(0,  decPos);  }  else  {  if  (expPos  >  -1)  {  if  (expPos  >  str.length())  {  throw  new  NumberFormatException(str  +     "  is  not  a  valid  number.   ");  }  mant  =  str.substring(0,  expPos);  }  else  {  mant  =  str;  }  dec  =  null;  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  	projects/Lang7/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	482	482	1	replace	||  expPos  <  str.length())  {  throw  new  NumberFormatException(str  + "  is  not  a  valid  number.   "	      if(dec    ==    null)    {    if(decPos    >    -1)    {    if(expPos    <    decPos    ||    expPos    >    str.length())    {    throw    new    NumberFormatException(str    +   "    is    not    a    valid    number.   "    	non-compiled	[CE]  	13	None	replace
7	[BUG]  [BUGGY]  ||  expPos  ==  str.length())  {  throw  new  NumberFormatException(str  + "  is  not  a  valid  number.   "  [CE]  [FE]              AssertionError    [CONTEXT]    if  (decPos  >  -1)  {  if  (expPos  >  -1)  {  if  (expPos  <  decPos  ||  expPos  >  str.length())  {  throw  new  NumberFormatException(str  +     "  is  not  a  valid  number.   ");  }  dec  =  str.substring(decPos  +  1,  expPos);  }  else  {  dec  =  str.substring(decPos  +  1);  }    [BUGGY]  ||  expPos  ==  str.length())  {  throw  new  NumberFormatException(str  + "  is  not  a  valid  number.   "  [BUGGY]    mant  =  str.substring(0,  decPos);  }  else  {  if  (expPos  >  -1)  {  if  (expPos  >  str.length())  {  throw  new  NumberFormatException(str  +     "  is  not  a  valid  number.   ");  }  mant  =  str.substring(0,  expPos);  }  else  {  mant  =  str;  }  dec  =  null;  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  	projects/Lang7/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	482	482	1	replace	||  expPos  ==  str.length())  {  throw  new  NumberFormatException(str  + "  is  not  a  valid  number.   "	      if(dec    ==    null)    {    if(decPos    >    -1)    {    if(expPos    <    decPos    ||    expPos    >    str.length())    {    throw    new    NumberFormatException(str    +   "    is    not    a    valid    number.   "    	non-compiled	[CE]  	13	None	replace
8	[BUG]  [BUGGY]  ||  expPos  >  str.length())  {  throw  new  NumberFormatException(str  + "  is  not  a  valid  number.   "  [CE]  [FE]                AssertionError    [CONTEXT]    if  (decPos  >  -1)  {  if  (expPos  >  -1)  {  if  (expPos  <  decPos  ||  expPos  >  str.length())  {  throw  new  NumberFormatException(str  +     "  is  not  a  valid  number.   ");  }  dec  =  str.substring(decPos  +  1,  expPos);  }  else  {  dec  =  str.substring(decPos  +  1);  }    [BUGGY]  ||  expPos  >  str.length())  {  throw  new  NumberFormatException(str  + "  is  not  a  valid  number.   "  [BUGGY]    mant  =  str.substring(0,  decPos);  }  else  {  if  (expPos  >  -1)  {  if  (expPos  >  str.length())  {  throw  new  NumberFormatException(str  +     "  is  not  a  valid  number.   ");  }  mant  =  str.substring(0,  expPos);  }  else  {  mant  =  str;  }  dec  =  null;  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  	projects/Lang7/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	482	482	1	replace	||  expPos  >  str.length())  {  throw  new  NumberFormatException(str  + "  is  not  a  valid  number.   "	      if(dec    ==    null)    {    if(decPos    >    -1)    {    if(expPos    <    decPos    ||    expPos    >    str.length())    {    throw    new    NumberFormatException(str    +   "    is    not    a    valid    number.   "    	non-compiled	[CE]  	13	None	replace
9	[BUG]  [BUGGY]  Integer  decPos  =  getDecPos()  +  1;  [CE]  ')'  expected  [FE]              AssertionError    [CONTEXT]    if  (decPos  >  -1)  {  if  (expPos  >  -1)  {  if  (expPos  <  decPos  ||  expPos  >  str.length())  {  throw  new  NumberFormatException(str  +     "  is  not  a  valid  number.   ");  }  dec  =  str.substring(decPos  +  1,  expPos);  }  else  {  dec  =  str.substring(decPos  +  1);  }    [BUGGY]  Integer  decPos  =  getDecPos()  +  1;  [BUGGY]    mant  =  str.substring(0,  decPos);  }  else  {  if  (expPos  >  -1)  {  if  (expPos  >  str.length())  {  throw  new  NumberFormatException(str  +     "  is  not  a  valid  number.   ");  }  mant  =  str.substring(0,  expPos);  }  else  {  mant  =  str;  }  dec  =  null;  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  	projects/Lang7/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	482	482	1	replace	Integer  decPos  =  getDecPos()  +  1;	      Integer    decPos    =    getDecPos();    	non-compiled	[CE]  ')'  expected	9	None	replace
10	[BUG]  [BUGGY]  Integer  decPos  =  getDecPos()  -  1;  [CE]  ')'  expected  [FE]                AssertionError    [CONTEXT]    if  (decPos  >  -1)  {  if  (expPos  >  -1)  {  if  (expPos  <  decPos  ||  expPos  >  str.length())  {  throw  new  NumberFormatException(str  +     "  is  not  a  valid  number.   ");  }  dec  =  str.substring(decPos  +  1,  expPos);  }  else  {  dec  =  str.substring(decPos  +  1);  }    [BUGGY]  Integer  decPos  =  getDecPos()  -  1;  [BUGGY]    mant  =  str.substring(0,  decPos);  }  else  {  if  (expPos  >  -1)  {  if  (expPos  >  str.length())  {  throw  new  NumberFormatException(str  +     "  is  not  a  valid  number.   ");  }  mant  =  str.substring(0,  expPos);  }  else  {  mant  =  str;  }  dec  =  null;  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  	projects/Lang7/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	482	482	1	replace	Integer  decPos  =  getDecPos()  -  1;	      Integer    decPos    =    getDecPos();    	non-compiled	[CE]  ')'  expected	9	None	replace
11	[BUG]  [BUGGY]  Integer  decPos  =  getDecPos(dec);  [CE]  ')'  expected  [FE]                  AssertionError    [CONTEXT]    if  (decPos  >  -1)  {  if  (expPos  >  -1)  {  if  (expPos  <  decPos  ||  expPos  >  str.length())  {  throw  new  NumberFormatException(str  +     "  is  not  a  valid  number.   ");  }  dec  =  str.substring(decPos  +  1,  expPos);  }  else  {  dec  =  str.substring(decPos  +  1);  }    [BUGGY]  Integer  decPos  =  getDecPos(dec);  [BUGGY]    mant  =  str.substring(0,  decPos);  }  else  {  if  (expPos  >  -1)  {  if  (expPos  >  str.length())  {  throw  new  NumberFormatException(str  +     "  is  not  a  valid  number.   ");  }  mant  =  str.substring(0,  expPos);  }  else  {  mant  =  str;  }  dec  =  null;  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  	projects/Lang7/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	482	482	1	replace	Integer  decPos  =  getDecPos(dec);	      Integer    decPos    =    getDecPos();    	non-compiled	[CE]  ')'  expected	9	None	replace
12	[BUG]  [BUGGY]  int  expPos  =  str.lastIndexOf('.',  dec);  [CE]  ')'  expected  [FE]        AssertionError    [CONTEXT]    if  (decPos  >  -1)  {  if  (expPos  >  -1)  {  if  (expPos  <  decPos  ||  expPos  >  str.length())  {  throw  new  NumberFormatException(str  +     "  is  not  a  valid  number.   ");  }  dec  =  str.substring(decPos  +  1,  expPos);  }  else  {  dec  =  str.substring(decPos  +  1);  }    [BUGGY]  int  expPos  =  str.lastIndexOf('.',  dec);  [BUGGY]    mant  =  str.substring(0,  decPos);  }  else  {  if  (expPos  >  -1)  {  if  (expPos  >  str.length())  {  throw  new  NumberFormatException(str  +     "  is  not  a  valid  number.   ");  }  mant  =  str.substring(0,  expPos);  }  else  {  mant  =  str;  }  dec  =  null;  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  	projects/Lang7/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	482	482	1	replace	int  expPos  =  str.lastIndexOf('.',  dec);	      int    expPos    =    str.lastIndexOf('.');    	non-compiled	[CE]  ')'  expected	6	None	replace
13	[BUG]  [BUGGY]  int  expPos  =  str.lastIndexOf('.',  decPos);  [CE]  ')'  expected  [FE]          AssertionError    [CONTEXT]    if  (decPos  >  -1)  {  if  (expPos  >  -1)  {  if  (expPos  <  decPos  ||  expPos  >  str.length())  {  throw  new  NumberFormatException(str  +     "  is  not  a  valid  number.   ");  }  dec  =  str.substring(decPos  +  1,  expPos);  }  else  {  dec  =  str.substring(decPos  +  1);  }    [BUGGY]  int  expPos  =  str.lastIndexOf('.',  decPos);  [BUGGY]    mant  =  str.substring(0,  decPos);  }  else  {  if  (expPos  >  -1)  {  if  (expPos  >  str.length())  {  throw  new  NumberFormatException(str  +     "  is  not  a  valid  number.   ");  }  mant  =  str.substring(0,  expPos);  }  else  {  mant  =  str;  }  dec  =  null;  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  	projects/Lang7/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	482	482	1	replace	int  expPos  =  str.lastIndexOf('.',  decPos);	      int    expPos    =    str.lastIndexOf('.');    	non-compiled	[CE]  ')'  expected	6	None	replace
14	[BUG]  [BUGGY]  int  expPos  =  str.lastIndexOf('.',  1);  [CE]  ')'  expected  [FE]            AssertionError    [CONTEXT]    if  (decPos  >  -1)  {  if  (expPos  >  -1)  {  if  (expPos  <  decPos  ||  expPos  >  str.length())  {  throw  new  NumberFormatException(str  +     "  is  not  a  valid  number.   ");  }  dec  =  str.substring(decPos  +  1,  expPos);  }  else  {  dec  =  str.substring(decPos  +  1);  }    [BUGGY]  int  expPos  =  str.lastIndexOf('.',  1);  [BUGGY]    mant  =  str.substring(0,  decPos);  }  else  {  if  (expPos  >  -1)  {  if  (expPos  >  str.length())  {  throw  new  NumberFormatException(str  +     "  is  not  a  valid  number.   ");  }  mant  =  str.substring(0,  expPos);  }  else  {  mant  =  str;  }  dec  =  null;  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  	projects/Lang7/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	482	482	1	replace	int  expPos  =  str.lastIndexOf('.',  1);	      int    expPos    =    str.lastIndexOf('.');    	non-compiled	[CE]  ')'  expected	6	None	replace
15	[BUG]  [BUGGY]  mant  =  str.substring(1,  decPos  +  1);  [CE]  ')'  expected  [FE]        AssertionError    [CONTEXT]    if  (decPos  >  -1)  {  if  (expPos  >  -1)  {  if  (expPos  <  decPos  ||  expPos  >  str.length())  {  throw  new  NumberFormatException(str  +     "  is  not  a  valid  number.   ");  }  dec  =  str.substring(decPos  +  1,  expPos);  }  else  {  dec  =  str.substring(decPos  +  1);  }    [BUGGY]  mant  =  str.substring(1,  decPos  +  1);  [BUGGY]    }  else  {  if  (expPos  >  -1)  {  if  (expPos  >  str.length())  {  throw  new  NumberFormatException(str  +     "  is  not  a  valid  number.   ");  }  mant  =  str.substring(0,  expPos);  }  else  {  mant  =  str;  }  dec  =  null;  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  	projects/Lang7/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	482	482	1	replace	mant  =  str.substring(1,  decPos  +  1);	  mant    =    str.substring(1,    decPos);    	non-compiled	[CE]  ')'  expected	10	None	replace
16	[BUG]  [BUGGY]  mant  =  str.substring(1,  expPos);  [CE]  ')'  expected  [FE]          AssertionError    [CONTEXT]    if  (decPos  >  -1)  {  if  (expPos  >  -1)  {  if  (expPos  <  decPos  ||  expPos  >  str.length())  {  throw  new  NumberFormatException(str  +     "  is  not  a  valid  number.   ");  }  dec  =  str.substring(decPos  +  1,  expPos);  }  else  {  dec  =  str.substring(decPos  +  1);  }    [BUGGY]  mant  =  str.substring(1,  expPos);  [BUGGY]    }  else  {  if  (expPos  >  -1)  {  if  (expPos  >  str.length())  {  throw  new  NumberFormatException(str  +     "  is  not  a  valid  number.   ");  }  mant  =  str.substring(0,  expPos);  }  else  {  mant  =  str;  }  dec  =  null;  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  	projects/Lang7/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	482	482	1	replace	mant  =  str.substring(1,  expPos);	  mant    =    str.substring(1,    decPos);    	non-compiled	[CE]  ')'  expected	10	None	replace
17	[BUG]  [BUGGY]  dec  =  str.substring(decPos  +  1,  expPos  +  1);  [CE]  ')'  expected  [FE]        AssertionError    [CONTEXT]    if  (decPos  >  -1)  {  if  (expPos  >  -1)  {  if  (expPos  <  decPos  ||  expPos  >  str.length())  {  throw  new  NumberFormatException(str  +     "  is  not  a  valid  number.   ");  }  dec  =  str.substring(decPos  +  1,  expPos);  }  else  {  dec  =  str.substring(decPos  +  1);  }    [BUGGY]  dec  =  str.substring(decPos  +  1,  expPos  +  1);  [BUGGY]    mant  =  str.substring(0,  decPos);  }  else  {  if  (expPos  >  -1)  {  if  (expPos  >  str.length())  {  throw  new  NumberFormatException(str  +     "  is  not  a  valid  number.   ");  }  mant  =  str.substring(0,  expPos);  }  else  {  mant  =  str;  }  dec  =  null;  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  	projects/Lang7/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	482	482	1	replace	dec  =  str.substring(decPos  +  1,  expPos  +  1);	      dec    =    str.substring(decPos    +    1,    expPos);    	non-compiled	[CE]  ')'  expected	14	None	replace
18	[BUG]  [BUGGY]  dec  =  str.substring(decPos  +  1,  expPos  -  1);  [CE]  ')'  expected  [FE]          AssertionError    [CONTEXT]    if  (decPos  >  -1)  {  if  (expPos  >  -1)  {  if  (expPos  <  decPos  ||  expPos  >  str.length())  {  throw  new  NumberFormatException(str  +     "  is  not  a  valid  number.   ");  }  dec  =  str.substring(decPos  +  1,  expPos);  }  else  {  dec  =  str.substring(decPos  +  1);  }    [BUGGY]  dec  =  str.substring(decPos  +  1,  expPos  -  1);  [BUGGY]    mant  =  str.substring(0,  decPos);  }  else  {  if  (expPos  >  -1)  {  if  (expPos  >  str.length())  {  throw  new  NumberFormatException(str  +     "  is  not  a  valid  number.   ");  }  mant  =  str.substring(0,  expPos);  }  else  {  mant  =  str;  }  dec  =  null;  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  	projects/Lang7/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	482	482	1	replace	dec  =  str.substring(decPos  +  1,  expPos  -  1);	      dec    =    str.substring(decPos    +    1,    expPos);    	non-compiled	[CE]  ')'  expected	14	None	replace
19	[BUG]  [BUGGY]  dec  =  str.substring(decPos  +  1,  expPos  +  2);  [CE]  ')'  expected  [FE]            AssertionError    [CONTEXT]    if  (decPos  >  -1)  {  if  (expPos  >  -1)  {  if  (expPos  <  decPos  ||  expPos  >  str.length())  {  throw  new  NumberFormatException(str  +     "  is  not  a  valid  number.   ");  }  dec  =  str.substring(decPos  +  1,  expPos);  }  else  {  dec  =  str.substring(decPos  +  1);  }    [BUGGY]  dec  =  str.substring(decPos  +  1,  expPos  +  2);  [BUGGY]    mant  =  str.substring(0,  decPos);  }  else  {  if  (expPos  >  -1)  {  if  (expPos  >  str.length())  {  throw  new  NumberFormatException(str  +     "  is  not  a  valid  number.   ");  }  mant  =  str.substring(0,  expPos);  }  else  {  mant  =  str;  }  dec  =  null;  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  	projects/Lang7/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	482	482	1	replace	dec  =  str.substring(decPos  +  1,  expPos  +  2);	      dec    =    str.substring(decPos    +    1,    expPos);    	non-compiled	[CE]  ')'  expected	14	None	replace
20	[BUG]  [BUGGY]  mant  =  str.substring(0,  expPos  -  1);  [CE]  ')'  expected  [FE]              AssertionError    [CONTEXT]    if  (decPos  >  -1)  {  if  (expPos  >  -1)  {  if  (expPos  <  decPos  ||  expPos  >  str.length())  {  throw  new  NumberFormatException(str  +     "  is  not  a  valid  number.   ");  }  dec  =  str.substring(decPos  +  1,  expPos);  }  else  {  dec  =  str.substring(decPos  +  1);  }    [BUGGY]  mant  =  str.substring(0,  expPos  -  1);  [BUGGY]    }  else  {  if  (expPos  >  -1)  {  if  (expPos  >  str.length())  {  throw  new  NumberFormatException(str  +     "  is  not  a  valid  number.   ");  }  mant  =  str.substring(0,  expPos);  }  else  {  mant  =  str;  }  dec  =  null;  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  	projects/Lang7/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	482	482	1	replace	mant  =  str.substring(0,  expPos  -  1);	  mant    =    str.substring(0,    decPos    -    1);    	non-compiled	[CE]  ')'  expected	4	None	replace
21	[BUG]  [BUGGY]  mant  =  str.substring(0,  decPos  -  1  +  1);  [CE]  ')'  expected  [FE]                AssertionError    [CONTEXT]    if  (decPos  >  -1)  {  if  (expPos  >  -1)  {  if  (expPos  <  decPos  ||  expPos  >  str.length())  {  throw  new  NumberFormatException(str  +     "  is  not  a  valid  number.   ");  }  dec  =  str.substring(decPos  +  1,  expPos);  }  else  {  dec  =  str.substring(decPos  +  1);  }    [BUGGY]  mant  =  str.substring(0,  decPos  -  1  +  1);  [BUGGY]    }  else  {  if  (expPos  >  -1)  {  if  (expPos  >  str.length())  {  throw  new  NumberFormatException(str  +     "  is  not  a  valid  number.   ");  }  mant  =  str.substring(0,  expPos);  }  else  {  mant  =  str;  }  dec  =  null;  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  	projects/Lang7/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	482	482	1	replace	mant  =  str.substring(0,  decPos  -  1  +  1);	  mant    =    str.substring(0,    decPos    -    1);    	non-compiled	[CE]  ')'  expected	4	None	replace
22	[BUG]  [BUGGY]  Mant  =  str.substring(0,  decPos);  [CE]  ')'  expected  [FE]        AssertionError    [CONTEXT]    if  (decPos  >  -1)  {  if  (expPos  >  -1)  {  if  (expPos  <  decPos  ||  expPos  >  str.length())  {  throw  new  NumberFormatException(str  +     "  is  not  a  valid  number.   ");  }  dec  =  str.substring(decPos  +  1,  expPos);  }  else  {  dec  =  str.substring(decPos  +  1);  }    [BUGGY]  Mant  =  str.substring(0,  decPos);  [BUGGY]    mant  =  str.substring(0,  decPos);  }  else  {  if  (expPos  >  -1)  {  if  (expPos  >  str.length())  {  throw  new  NumberFormatException(str  +     "  is  not  a  valid  number.   ");  }  mant  =  str.substring(0,  expPos);  }  else  {  mant  =  str;  }  dec  =  null;  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  	projects/Lang7/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	482	482	1	replace	Mant  =  str.substring(0,  decPos);	      if(dec    ==    null)    {    if(decPos    >    -1)    {    if(expPos    <    decPos    ||    expPos    >    str.length())    {    throw    new    NumberFormatException(   "   ");    }    	non-compiled	[CE]  ')'  expected	11	None	replace
23	[BUG]  [BUGGY]  int  expPos  =  str.indexOf('.',  dec);  [CE]  ')'  expected  [FE]          AssertionError    [CONTEXT]    if  (decPos  >  -1)  {  if  (expPos  >  -1)  {  if  (expPos  <  decPos  ||  expPos  >  str.length())  {  throw  new  NumberFormatException(str  +     "  is  not  a  valid  number.   ");  }  dec  =  str.substring(decPos  +  1,  expPos);  }  else  {  dec  =  str.substring(decPos  +  1);  }    [BUGGY]  int  expPos  =  str.indexOf('.',  dec);  [BUGGY]    mant  =  str.substring(0,  decPos);  }  else  {  if  (expPos  >  -1)  {  if  (expPos  >  str.length())  {  throw  new  NumberFormatException(str  +     "  is  not  a  valid  number.   ");  }  mant  =  str.substring(0,  expPos);  }  else  {  mant  =  str;  }  dec  =  null;  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  	projects/Lang7/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	482	482	1	replace	int  expPos  =  str.indexOf('.',  dec);	      int    expPos    =    str.indexOf('.');    	non-compiled	[CE]  ')'  expected	15	None	replace
24	[BUG]  [BUGGY]  int  expPos  =  str.indexOf('.',  decPos);  [CE]  ')'  expected  [FE]            AssertionError    [CONTEXT]    if  (decPos  >  -1)  {  if  (expPos  >  -1)  {  if  (expPos  <  decPos  ||  expPos  >  str.length())  {  throw  new  NumberFormatException(str  +     "  is  not  a  valid  number.   ");  }  dec  =  str.substring(decPos  +  1,  expPos);  }  else  {  dec  =  str.substring(decPos  +  1);  }    [BUGGY]  int  expPos  =  str.indexOf('.',  decPos);  [BUGGY]    mant  =  str.substring(0,  decPos);  }  else  {  if  (expPos  >  -1)  {  if  (expPos  >  str.length())  {  throw  new  NumberFormatException(str  +     "  is  not  a  valid  number.   ");  }  mant  =  str.substring(0,  expPos);  }  else  {  mant  =  str;  }  dec  =  null;  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  	projects/Lang7/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	482	482	1	replace	int  expPos  =  str.indexOf('.',  decPos);	      int    expPos    =    str.indexOf('.');    	non-compiled	[CE]  ')'  expected	15	None	replace
25	[BUG]  [BUGGY]  int  expPos  =  str.indexOf('.')+  1;  [CE]  ')'  expected  [FE]              AssertionError    [CONTEXT]    if  (decPos  >  -1)  {  if  (expPos  >  -1)  {  if  (expPos  <  decPos  ||  expPos  >  str.length())  {  throw  new  NumberFormatException(str  +     "  is  not  a  valid  number.   ");  }  dec  =  str.substring(decPos  +  1,  expPos);  }  else  {  dec  =  str.substring(decPos  +  1);  }    [BUGGY]  int  expPos  =  str.indexOf('.')+  1;  [BUGGY]    mant  =  str.substring(0,  decPos);  }  else  {  if  (expPos  >  -1)  {  if  (expPos  >  str.length())  {  throw  new  NumberFormatException(str  +     "  is  not  a  valid  number.   ");  }  mant  =  str.substring(0,  expPos);  }  else  {  mant  =  str;  }  dec  =  null;  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  	projects/Lang7/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	482	482	1	replace	int  expPos  =  str.indexOf('.')+  1;	      int    expPos    =    str.indexOf('.');    	non-compiled	[CE]  ')'  expected	15	None	replace
26	[BUG]  [BUGGY]  int  expPos  =  dec.length();  [CE]  ')'  expected  [FE]          AssertionError    [CONTEXT]    if  (decPos  >  -1)  {  if  (expPos  >  -1)  {  if  (expPos  <  decPos  ||  expPos  >  str.length())  {  throw  new  NumberFormatException(str  +     "  is  not  a  valid  number.   ");  }  dec  =  str.substring(decPos  +  1,  expPos);  }  else  {  dec  =  str.substring(decPos  +  1);  }    [BUGGY]  int  expPos  =  dec.length();  [BUGGY]    mant  =  str.substring(0,  decPos);  }  else  {  if  (expPos  >  -1)  {  if  (expPos  >  str.length())  {  throw  new  NumberFormatException(str  +     "  is  not  a  valid  number.   ");  }  mant  =  str.substring(0,  expPos);  }  else  {  mant  =  str;  }  dec  =  null;  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  	projects/Lang7/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	482	482	1	replace	int  expPos  =  dec.length();	      int    expPos    =    str.length();    	non-compiled	[CE]  ')'  expected	7	None	replace
27	[BUG]  [BUGGY]  int  expPos  =  str.length()  -  1;  [CE]  ')'  expected  [FE]            AssertionError    [CONTEXT]    if  (decPos  >  -1)  {  if  (expPos  >  -1)  {  if  (expPos  <  decPos  ||  expPos  >  str.length())  {  throw  new  NumberFormatException(str  +     "  is  not  a  valid  number.   ");  }  dec  =  str.substring(decPos  +  1,  expPos);  }  else  {  dec  =  str.substring(decPos  +  1);  }    [BUGGY]  int  expPos  =  str.length()  -  1;  [BUGGY]    mant  =  str.substring(0,  decPos);  }  else  {  if  (expPos  >  -1)  {  if  (expPos  >  str.length())  {  throw  new  NumberFormatException(str  +     "  is  not  a  valid  number.   ");  }  mant  =  str.substring(0,  expPos);  }  else  {  mant  =  str;  }  dec  =  null;  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  	projects/Lang7/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	482	482	1	replace	int  expPos  =  str.length()  -  1;	      int    expPos    =    str.length();    	non-compiled	[CE]  ')'  expected	7	None	replace
28	[BUG]  [BUGGY]  int  expPos  =  str.length()  +  1;  [CE]  ')'  expected  [FE]              AssertionError    [CONTEXT]    if  (decPos  >  -1)  {  if  (expPos  >  -1)  {  if  (expPos  <  decPos  ||  expPos  >  str.length())  {  throw  new  NumberFormatException(str  +     "  is  not  a  valid  number.   ");  }  dec  =  str.substring(decPos  +  1,  expPos);  }  else  {  dec  =  str.substring(decPos  +  1);  }    [BUGGY]  int  expPos  =  str.length()  +  1;  [BUGGY]    mant  =  str.substring(0,  decPos);  }  else  {  if  (expPos  >  -1)  {  if  (expPos  >  str.length())  {  throw  new  NumberFormatException(str  +     "  is  not  a  valid  number.   ");  }  mant  =  str.substring(0,  expPos);  }  else  {  mant  =  str;  }  dec  =  null;  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  	projects/Lang7/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	482	482	1	replace	int  expPos  =  str.length()  +  1;	      int    expPos    =    str.length();    	non-compiled	[CE]  ')'  expected	7	None	replace
29	[BUG]  [BUGGY]  int  expPos  =  decPos;  [CE]  ')'  expected  [FE]                AssertionError    [CONTEXT]    if  (decPos  >  -1)  {  if  (expPos  >  -1)  {  if  (expPos  <  decPos  ||  expPos  >  str.length())  {  throw  new  NumberFormatException(str  +     "  is  not  a  valid  number.   ");  }  dec  =  str.substring(decPos  +  1,  expPos);  }  else  {  dec  =  str.substring(decPos  +  1);  }    [BUGGY]  int  expPos  =  decPos;  [BUGGY]    mant  =  str.substring(0,  decPos);  }  else  {  if  (expPos  >  -1)  {  if  (expPos  >  str.length())  {  throw  new  NumberFormatException(str  +     "  is  not  a  valid  number.   ");  }  mant  =  str.substring(0,  expPos);  }  else  {  mant  =  str;  }  dec  =  null;  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  	projects/Lang7/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	482	482	1	replace	int  expPos  =  decPos;	      int    expPos    =    str.length();    	non-compiled	[CE]  ')'  expected	7	None	replace
30	[BUG]  [BUGGY]  mant  =  str.substring(0,  2);  [CE]  ')'  expected  [FE]          AssertionError    [CONTEXT]    if  (decPos  >  -1)  {  if  (expPos  >  -1)  {  if  (expPos  <  decPos  ||  expPos  >  str.length())  {  throw  new  NumberFormatException(str  +     "  is  not  a  valid  number.   ");  }  dec  =  str.substring(decPos  +  1,  expPos);  }  else  {  dec  =  str.substring(decPos  +  1);  }    [BUGGY]  mant  =  str.substring(0,  2);  [BUGGY]    }  else  {  if  (expPos  >  -1)  {  if  (expPos  >  str.length())  {  throw  new  NumberFormatException(str  +     "  is  not  a  valid  number.   ");  }  mant  =  str.substring(0,  expPos);  }  else  {  mant  =  str;  }  dec  =  null;  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  	projects/Lang7/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	482	482	1	replace	mant  =  str.substring(0,  2);	  mant    =    str.substring(0,    1);    	non-compiled	[CE]  ')'  expected	2	None	replace
31	[BUG]  [BUGGY]  mant  =  str.substring(0,  3);  [CE]  ')'  expected  [FE]            AssertionError    [CONTEXT]    if  (decPos  >  -1)  {  if  (expPos  >  -1)  {  if  (expPos  <  decPos  ||  expPos  >  str.length())  {  throw  new  NumberFormatException(str  +     "  is  not  a  valid  number.   ");  }  dec  =  str.substring(decPos  +  1,  expPos);  }  else  {  dec  =  str.substring(decPos  +  1);  }    [BUGGY]  mant  =  str.substring(0,  3);  [BUGGY]    }  else  {  if  (expPos  >  -1)  {  if  (expPos  >  str.length())  {  throw  new  NumberFormatException(str  +     "  is  not  a  valid  number.   ");  }  mant  =  str.substring(0,  expPos);  }  else  {  mant  =  str;  }  dec  =  null;  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  	projects/Lang7/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	482	482	1	replace	mant  =  str.substring(0,  3);	  mant    =    str.substring(0,    1);    	non-compiled	[CE]  ')'  expected	2	None	replace
32	[BUG]  [BUGGY]  mant  =  str.substring(0,  1).trim();  [CE]  ')'  expected  [FE]              AssertionError    [CONTEXT]    if  (decPos  >  -1)  {  if  (expPos  >  -1)  {  if  (expPos  <  decPos  ||  expPos  >  str.length())  {  throw  new  NumberFormatException(str  +     "  is  not  a  valid  number.   ");  }  dec  =  str.substring(decPos  +  1,  expPos);  }  else  {  dec  =  str.substring(decPos  +  1);  }    [BUGGY]  mant  =  str.substring(0,  1).trim();  [BUGGY]    }  else  {  if  (expPos  >  -1)  {  if  (expPos  >  str.length())  {  throw  new  NumberFormatException(str  +     "  is  not  a  valid  number.   ");  }  mant  =  str.substring(0,  expPos);  }  else  {  mant  =  str;  }  dec  =  null;  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  	projects/Lang7/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	482	482	1	replace	mant  =  str.substring(0,  1).trim();	  mant    =    str.substring(0,    1);    	non-compiled	[CE]  ')'  expected	2	None	replace
33	[BUG]  [BUGGY]  DesertionError.error(str,  nfe);  [CE]  ')'  expected  [FE]          AssertionError    [CONTEXT]    if  (decPos  >  -1)  {  if  (expPos  >  -1)  {  if  (expPos  <  decPos  ||  expPos  >  str.length())  {  throw  new  NumberFormatException(str  +     "  is  not  a  valid  number.   ");  }  dec  =  str.substring(decPos  +  1,  expPos);  }  else  {  dec  =  str.substring(decPos  +  1);  }    [BUGGY]  DesertionError.error(str,  nfe);  [BUGGY]    mant  =  str.substring(0,  decPos);  }  else  {  if  (expPos  >  -1)  {  if  (expPos  >  str.length())  {  throw  new  NumberFormatException(str  +     "  is  not  a  valid  number.   ");  }  mant  =  str.substring(0,  expPos);  }  else  {  mant  =  str;  }  dec  =  null;  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  	projects/Lang7/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	482	482	1	replace	DesertionError.error(str,  nfe);	      if(dec    ==    null)    {    if(decPos    >    -1)    {    if(expPos    <    decPos    ||    expPos    >    str.length())    {    throw    new    NumberFormatException(str    +   "    is    not    a    valid    number.   ");    }    	non-compiled	[CE]  ')'  expected	12	None	replace
34	[BUG]  [BUGGY]  mant  =  str.substring(0,  decPos  +  1,  expPos);  [CE]  ')'  expected  [FE]        AssertionError    [CONTEXT]    if  (decPos  >  -1)  {  if  (expPos  >  -1)  {  if  (expPos  <  decPos  ||  expPos  >  str.length())  {  throw  new  NumberFormatException(str  +     "  is  not  a  valid  number.   ");  }  dec  =  str.substring(decPos  +  1,  expPos);  }  else  {  dec  =  str.substring(decPos  +  1);  }    [BUGGY]  mant  =  str.substring(0,  decPos  +  1,  expPos);  [BUGGY]    }  else  {  if  (expPos  >  -1)  {  if  (expPos  >  str.length())  {  throw  new  NumberFormatException(str  +     "  is  not  a  valid  number.   ");  }  mant  =  str.substring(0,  expPos);  }  else  {  mant  =  str;  }  dec  =  null;  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  	projects/Lang7/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	482	482	1	replace	mant  =  str.substring(0,  decPos  +  1,  expPos);	  mant    =    str.substring(0,    decPos    +    2);    	non-compiled	[CE]  ')'  expected	17	None	replace
35	[BUG]  [BUGGY]  mant  =  str.substring(0,  expPos  +  2);  [CE]  ')'  expected  [FE]          AssertionError    [CONTEXT]    if  (decPos  >  -1)  {  if  (expPos  >  -1)  {  if  (expPos  <  decPos  ||  expPos  >  str.length())  {  throw  new  NumberFormatException(str  +     "  is  not  a  valid  number.   ");  }  dec  =  str.substring(decPos  +  1,  expPos);  }  else  {  dec  =  str.substring(decPos  +  1);  }    [BUGGY]  mant  =  str.substring(0,  expPos  +  2);  [BUGGY]    }  else  {  if  (expPos  >  -1)  {  if  (expPos  >  str.length())  {  throw  new  NumberFormatException(str  +     "  is  not  a  valid  number.   ");  }  mant  =  str.substring(0,  expPos);  }  else  {  mant  =  str;  }  dec  =  null;  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  	projects/Lang7/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	482	482	1	replace	mant  =  str.substring(0,  expPos  +  2);	  mant    =    str.substring(0,    decPos    +    2);    	non-compiled	[CE]  ')'  expected	17	None	replace
36	[BUG]  [BUGGY]  int  expPos  =  str.lastIndexOf('.',  decPos)+  1;  [CE]  ')'  expected  [FE]            AssertionError    [CONTEXT]    if  (decPos  >  -1)  {  if  (expPos  >  -1)  {  if  (expPos  <  decPos  ||  expPos  >  str.length())  {  throw  new  NumberFormatException(str  +     "  is  not  a  valid  number.   ");  }  dec  =  str.substring(decPos  +  1,  expPos);  }  else  {  dec  =  str.substring(decPos  +  1);  }    [BUGGY]  int  expPos  =  str.lastIndexOf('.',  decPos)+  1;  [BUGGY]    mant  =  str.substring(0,  decPos);  }  else  {  if  (expPos  >  -1)  {  if  (expPos  >  str.length())  {  throw  new  NumberFormatException(str  +     "  is  not  a  valid  number.   ");  }  mant  =  str.substring(0,  expPos);  }  else  {  mant  =  str;  }  dec  =  null;  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  	projects/Lang7/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	482	482	1	replace	int  expPos  =  str.lastIndexOf('.',  decPos)+  1;	      int    expPos    =    str.lastIndexOf('.')+    1;    	non-compiled	[CE]  ')'  expected	8	None	replace
37	[BUG]  [BUGGY]  int  expPos  =  str.lastIndexOf('.')+  2;  [CE]  ')'  expected  [FE]              AssertionError    [CONTEXT]    if  (decPos  >  -1)  {  if  (expPos  >  -1)  {  if  (expPos  <  decPos  ||  expPos  >  str.length())  {  throw  new  NumberFormatException(str  +     "  is  not  a  valid  number.   ");  }  dec  =  str.substring(decPos  +  1,  expPos);  }  else  {  dec  =  str.substring(decPos  +  1);  }    [BUGGY]  int  expPos  =  str.lastIndexOf('.')+  2;  [BUGGY]    mant  =  str.substring(0,  decPos);  }  else  {  if  (expPos  >  -1)  {  if  (expPos  >  str.length())  {  throw  new  NumberFormatException(str  +     "  is  not  a  valid  number.   ");  }  mant  =  str.substring(0,  expPos);  }  else  {  mant  =  str;  }  dec  =  null;  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  	projects/Lang7/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	482	482	1	replace	int  expPos  =  str.lastIndexOf('.')+  2;	      int    expPos    =    str.lastIndexOf('.')+    1;    	non-compiled	[CE]  ')'  expected	8	None	replace
38	[BUG]  [BUGGY]  Dec  <  Object>  dec  =  str.substring(decPos  +  1);  [CE]  ')'  expected  [FE]          AssertionError    [CONTEXT]    if  (decPos  >  -1)  {  if  (expPos  >  -1)  {  if  (expPos  <  decPos  ||  expPos  >  str.length())  {  throw  new  NumberFormatException(str  +     "  is  not  a  valid  number.   ");  }  dec  =  str.substring(decPos  +  1,  expPos);  }  else  {  dec  =  str.substring(decPos  +  1);  }    [BUGGY]  Dec  <  Object>  dec  =  str.substring(decPos  +  1);  [BUGGY]    mant  =  str.substring(0,  decPos);  }  else  {  if  (expPos  >  -1)  {  if  (expPos  >  str.length())  {  throw  new  NumberFormatException(str  +     "  is  not  a  valid  number.   ");  }  mant  =  str.substring(0,  expPos);  }  else  {  mant  =  str;  }  dec  =  null;  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  	projects/Lang7/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	482	482	1	replace	Dec  <  Object>  dec  =  str.substring(decPos  +  1);	      if(dec    ==    null)    {    if(decPos    >    -1)    {    if(expPos    <    decPos    ||    expPos    >    str.length())    {    throw    new    NumberFormatException(str    +   "    is    not    a    valid    number.   ");    }    	non-compiled	[CE]  ')'  expected	12	None	replace
39	[BUG]  [BUGGY]  Dec  <  Object>  dec  =  dec.substring(0,  decPos);  [CE]  ')'  expected  [FE]            AssertionError    [CONTEXT]    if  (decPos  >  -1)  {  if  (expPos  >  -1)  {  if  (expPos  <  decPos  ||  expPos  >  str.length())  {  throw  new  NumberFormatException(str  +     "  is  not  a  valid  number.   ");  }  dec  =  str.substring(decPos  +  1,  expPos);  }  else  {  dec  =  str.substring(decPos  +  1);  }    [BUGGY]  Dec  <  Object>  dec  =  dec.substring(0,  decPos);  [BUGGY]    mant  =  str.substring(0,  decPos);  }  else  {  if  (expPos  >  -1)  {  if  (expPos  >  str.length())  {  throw  new  NumberFormatException(str  +     "  is  not  a  valid  number.   ");  }  mant  =  str.substring(0,  expPos);  }  else  {  mant  =  str;  }  dec  =  null;  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  	projects/Lang7/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	482	482	1	replace	Dec  <  Object>  dec  =  dec.substring(0,  decPos);	      if(dec    ==    null)    {    if(decPos    >    -1)    {    if(expPos    <    decPos    ||    expPos    >    str.length())    {    throw    new    NumberFormatException(str    +   "    is    not    a    valid    number.   ");    }    	non-compiled	[CE]  ')'  expected	12	None	replace
40	[BUG]  [BUGGY]  Integer  decPos  =  getDecPos(0);  [CE]  ')'  expected  [FE]              AssertionError    [CONTEXT]    if  (decPos  >  -1)  {  if  (expPos  >  -1)  {  if  (expPos  <  decPos  ||  expPos  >  str.length())  {  throw  new  NumberFormatException(str  +     "  is  not  a  valid  number.   ");  }  dec  =  str.substring(decPos  +  1,  expPos);  }  else  {  dec  =  str.substring(decPos  +  1);  }    [BUGGY]  Integer  decPos  =  getDecPos(0);  [BUGGY]    mant  =  str.substring(0,  decPos);  }  else  {  if  (expPos  >  -1)  {  if  (expPos  >  str.length())  {  throw  new  NumberFormatException(str  +     "  is  not  a  valid  number.   ");  }  mant  =  str.substring(0,  expPos);  }  else  {  mant  =  str;  }  dec  =  null;  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  	projects/Lang7/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	482	482	1	replace	Integer  decPos  =  getDecPos(0);	      Integer    decPos    =    getDecPos();    	non-compiled	[CE]  ')'  expected	9	None	replace
41	[BUG]  [BUGGY]  Integer  decPos  =  str.indexOf('.')+  1;  [CE]  ')'  expected  [FE]            AssertionError    [CONTEXT]    if  (decPos  >  -1)  {  if  (expPos  >  -1)  {  if  (expPos  <  decPos  ||  expPos  >  str.length())  {  throw  new  NumberFormatException(str  +     "  is  not  a  valid  number.   ");  }  dec  =  str.substring(decPos  +  1,  expPos);  }  else  {  dec  =  str.substring(decPos  +  1);  }    [BUGGY]  Integer  decPos  =  str.indexOf('.')+  1;  [BUGGY]    mant  =  str.substring(0,  decPos);  }  else  {  if  (expPos  >  -1)  {  if  (expPos  >  str.length())  {  throw  new  NumberFormatException(str  +     "  is  not  a  valid  number.   ");  }  mant  =  str.substring(0,  expPos);  }  else  {  mant  =  str;  }  dec  =  null;  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  	projects/Lang7/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	482	482	1	replace	Integer  decPos  =  str.indexOf('.')+  1;	      if(dec    ==    null)    {    if(decPos    >    -1)    {    if(expPos    <    decPos    ||    expPos    >    str.length())    {    throw    new    NumberFormatException(str    +   "    is    not    a    valid    number.   "    	non-compiled	[CE]  ')'  expected	13	None	replace
42	[BUG]  [BUGGY]  mant  =  str.substring(0,  decPos  -  2);  [CE]  ')'  expected  [FE]        AssertionError    [CONTEXT]    if  (decPos  >  -1)  {  if  (expPos  >  -1)  {  if  (expPos  <  decPos  ||  expPos  >  str.length())  {  throw  new  NumberFormatException(str  +     "  is  not  a  valid  number.   ");  }  dec  =  str.substring(decPos  +  1,  expPos);  }  else  {  dec  =  str.substring(decPos  +  1);  }    [BUGGY]  mant  =  str.substring(0,  decPos  -  2);  [BUGGY]    }  else  {  if  (expPos  >  -1)  {  if  (expPos  >  str.length())  {  throw  new  NumberFormatException(str  +     "  is  not  a  valid  number.   ");  }  mant  =  str.substring(0,  expPos);  }  else  {  mant  =  str;  }  dec  =  null;  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  	projects/Lang7/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	482	482	1	replace	mant  =  str.substring(0,  decPos  -  2);	  mant    =    str.substring(0,    decPos    +    2);    	non-compiled	[CE]  ')'  expected	17	None	replace
43	[BUG]  [BUGGY]  mant  =  str.substring(decPos  +  1,  decPos);  [CE]  ')'  expected  [FE]                AssertionError    [CONTEXT]    if  (decPos  >  -1)  {  if  (expPos  >  -1)  {  if  (expPos  <  decPos  ||  expPos  >  str.length())  {  throw  new  NumberFormatException(str  +     "  is  not  a  valid  number.   ");  }  dec  =  str.substring(decPos  +  1,  expPos);  }  else  {  dec  =  str.substring(decPos  +  1);  }    [BUGGY]  mant  =  str.substring(decPos  +  1,  decPos);  [BUGGY]    }  else  {  if  (expPos  >  -1)  {  if  (expPos  >  str.length())  {  throw  new  NumberFormatException(str  +     "  is  not  a  valid  number.   ");  }  mant  =  str.substring(0,  expPos);  }  else  {  mant  =  str;  }  dec  =  null;  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  	projects/Lang7/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	482	482	1	replace	mant  =  str.substring(decPos  +  1,  decPos);	      	non-compiled	[CE]  ')'  expected	5	None	replace
44	[BUG]  [BUGGY]  Integer  decPos  =  str.indexOf('  ')+  1;  [CE]  ')'  expected  [FE]        AssertionError    [CONTEXT]    if  (decPos  >  -1)  {  if  (expPos  >  -1)  {  if  (expPos  <  decPos  ||  expPos  >  str.length())  {  throw  new  NumberFormatException(str  +     "  is  not  a  valid  number.   ");  }  dec  =  str.substring(decPos  +  1,  expPos);  }  else  {  dec  =  str.substring(decPos  +  1);  }    [BUGGY]  Integer  decPos  =  str.indexOf('  ')+  1;  [BUGGY]    mant  =  str.substring(0,  decPos);  }  else  {  if  (expPos  >  -1)  {  if  (expPos  >  str.length())  {  throw  new  NumberFormatException(str  +     "  is  not  a  valid  number.   ");  }  mant  =  str.substring(0,  expPos);  }  else  {  mant  =  str;  }  dec  =  null;  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  	projects/Lang7/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	482	482	1	replace	Integer  decPos  =  str.indexOf('  ')+  1;	      if(dec    ==    null)    {    if(decPos    >    -1)    {    if(expPos    <    decPos    ||    expPos    >    str.length())    {    throw    new    NumberFormatException(   "   ");    }    	non-compiled	[CE]  ')'  expected	11	None	replace
45	[BUG]  [BUGGY]  int  decPos  =  str.length();  [CE]  ')'  expected  [FE]          AssertionError    [CONTEXT]    if  (decPos  >  -1)  {  if  (expPos  >  -1)  {  if  (expPos  <  decPos  ||  expPos  >  str.length())  {  throw  new  NumberFormatException(str  +     "  is  not  a  valid  number.   ");  }  dec  =  str.substring(decPos  +  1,  expPos);  }  else  {  dec  =  str.substring(decPos  +  1);  }    [BUGGY]  int  decPos  =  str.length();  [BUGGY]    mant  =  str.substring(0,  decPos);  }  else  {  if  (expPos  >  -1)  {  if  (expPos  >  str.length())  {  throw  new  NumberFormatException(str  +     "  is  not  a  valid  number.   ");  }  mant  =  str.substring(0,  expPos);  }  else  {  mant  =  str;  }  dec  =  null;  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  	projects/Lang7/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	482	482	1	replace	int  decPos  =  str.length();	      int    expPos    =    str.length();    	non-compiled	[CE]  ')'  expected	7	None	replace
46	[BUG]  [BUGGY]  mant  =  str.substring(0,  1).toLowerCase();  [CE]  ')'  expected  [FE]          AssertionError    [CONTEXT]    if  (decPos  >  -1)  {  if  (expPos  >  -1)  {  if  (expPos  <  decPos  ||  expPos  >  str.length())  {  throw  new  NumberFormatException(str  +     "  is  not  a  valid  number.   ");  }  dec  =  str.substring(decPos  +  1,  expPos);  }  else  {  dec  =  str.substring(decPos  +  1);  }    [BUGGY]  mant  =  str.substring(0,  1).toLowerCase();  [BUGGY]    }  else  {  if  (expPos  >  -1)  {  if  (expPos  >  str.length())  {  throw  new  NumberFormatException(str  +     "  is  not  a  valid  number.   ");  }  mant  =  str.substring(0,  expPos);  }  else  {  mant  =  str;  }  dec  =  null;  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  	projects/Lang7/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	482	482	1	replace	mant  =  str.substring(0,  1).toLowerCase();	  mant    =    str.substring(0,    1);    	non-compiled	[CE]  ')'  expected	2	None	replace
47	[BUG]  [BUGGY]  int  expPos  =  str.lastIndexOf('.')/  1;  [CE]  ')'  expected  [FE]            AssertionError    [CONTEXT]    if  (decPos  >  -1)  {  if  (expPos  >  -1)  {  if  (expPos  <  decPos  ||  expPos  >  str.length())  {  throw  new  NumberFormatException(str  +     "  is  not  a  valid  number.   ");  }  dec  =  str.substring(decPos  +  1,  expPos);  }  else  {  dec  =  str.substring(decPos  +  1);  }    [BUGGY]  int  expPos  =  str.lastIndexOf('.')/  1;  [BUGGY]    mant  =  str.substring(0,  decPos);  }  else  {  if  (expPos  >  -1)  {  if  (expPos  >  str.length())  {  throw  new  NumberFormatException(str  +     "  is  not  a  valid  number.   ");  }  mant  =  str.substring(0,  expPos);  }  else  {  mant  =  str;  }  dec  =  null;  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  	projects/Lang7/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	482	482	1	replace	int  expPos  =  str.lastIndexOf('.')/  1;	      int    expPos    =    str.lastIndexOf('.')+    1;    	non-compiled	[CE]  ')'  expected	8	None	replace
48	[BUG]  [BUGGY]  mant  =  str.substring(0,  decPos  -  1,  expPos);  [CE]  ')'  expected  [FE]              AssertionError    [CONTEXT]    if  (decPos  >  -1)  {  if  (expPos  >  -1)  {  if  (expPos  <  decPos  ||  expPos  >  str.length())  {  throw  new  NumberFormatException(str  +     "  is  not  a  valid  number.   ");  }  dec  =  str.substring(decPos  +  1,  expPos);  }  else  {  dec  =  str.substring(decPos  +  1);  }    [BUGGY]  mant  =  str.substring(0,  decPos  -  1,  expPos);  [BUGGY]    }  else  {  if  (expPos  >  -1)  {  if  (expPos  >  str.length())  {  throw  new  NumberFormatException(str  +     "  is  not  a  valid  number.   ");  }  mant  =  str.substring(0,  expPos);  }  else  {  mant  =  str;  }  dec  =  null;  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  	projects/Lang7/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	482	482	1	replace	mant  =  str.substring(0,  decPos  -  1,  expPos);	  mant    =    str.substring(0,    decPos    -    1);    	non-compiled	[CE]  ')'  expected	4	None	replace
49	[BUG]  [BUGGY]  int  decPos  =  str.indexOf('.');  [CE]  ')'  expected  [FE]          AssertionError    [CONTEXT]    if  (decPos  >  -1)  {  if  (expPos  >  -1)  {  if  (expPos  <  decPos  ||  expPos  >  str.length())  {  throw  new  NumberFormatException(str  +     "  is  not  a  valid  number.   ");  }  dec  =  str.substring(decPos  +  1,  expPos);  }  else  {  dec  =  str.substring(decPos  +  1);  }    [BUGGY]  int  decPos  =  str.indexOf('.');  [BUGGY]    mant  =  str.substring(0,  decPos);  }  else  {  if  (expPos  >  -1)  {  if  (expPos  >  str.length())  {  throw  new  NumberFormatException(str  +     "  is  not  a  valid  number.   ");  }  mant  =  str.substring(0,  expPos);  }  else  {  mant  =  str;  }  dec  =  null;  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  	projects/Lang7/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	482	482	1	replace	int  decPos  =  str.indexOf('.');	      int    expPos    =    str.indexOf('.');    	non-compiled	[CE]  ')'  expected	15	None	replace
50	[BUG]  [BUGGY]  if(dec  ==  null)  {  if(expPos  >  -1)  {  if(expPos  <  decPos  ||  expPos  >  str.length())  {  throw  new  NumberFormatException(str  + "  is  not  a  valid  number.  [CE]  [FE]          AssertionError    [CONTEXT]    if  (decPos  >  -1)  {  if  (expPos  >  -1)  {  if  (expPos  <  decPos  ||  expPos  >  str.length())  {  throw  new  NumberFormatException(str  +     "  is  not  a  valid  number.   ");  }  dec  =  str.substring(decPos  +  1,  expPos);  }  else  {  dec  =  str.substring(decPos  +  1);  }    [BUGGY]  if(dec  ==  null)  {  if(expPos  >  -1)  {  if(expPos  <  decPos  ||  expPos  >  str.length())  {  throw  new  NumberFormatException(str  + "  is  not  a  valid  number.  [BUGGY]    mant  =  str.substring(0,  decPos);  }  else  {  if  (expPos  >  -1)  {  if  (expPos  >  str.length())  {  throw  new  NumberFormatException(str  +     "  is  not  a  valid  number.   ");  }  mant  =  str.substring(0,  expPos);  }  else  {  mant  =  str;  }  dec  =  null;  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  	projects/Lang7/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	482	482	1	replace	if(dec  ==  null)  {  if(expPos  >  -1)  {  if(expPos  <  decPos  ||  expPos  >  str.length())  {  throw  new  NumberFormatException(str  + "  is  not  a  valid  number.	      if(dec    ==    null)    {    if(decPos    >    -1)    {    if(expPos    <    decPos    ||    expPos    >    str.length())    {    throw    new    NumberFormatException(str    +   "    is    not    a    valid    number.   ");    }    	non-compiled	[CE]  	12	None	replace
51	[BUG]  [BUGGY]  if(dec!=  null)  {  if(decPos  >  -1)  {  if(expPos  <  decPos  ||  expPos  >  str.length())  {  throw  new  NumberFormatException(str  + "  is  not  a  valid  number.  [CE]  [FE]            AssertionError    [CONTEXT]    if  (decPos  >  -1)  {  if  (expPos  >  -1)  {  if  (expPos  <  decPos  ||  expPos  >  str.length())  {  throw  new  NumberFormatException(str  +     "  is  not  a  valid  number.   ");  }  dec  =  str.substring(decPos  +  1,  expPos);  }  else  {  dec  =  str.substring(decPos  +  1);  }    [BUGGY]  if(dec!=  null)  {  if(decPos  >  -1)  {  if(expPos  <  decPos  ||  expPos  >  str.length())  {  throw  new  NumberFormatException(str  + "  is  not  a  valid  number.  [BUGGY]    mant  =  str.substring(0,  decPos);  }  else  {  if  (expPos  >  -1)  {  if  (expPos  >  str.length())  {  throw  new  NumberFormatException(str  +     "  is  not  a  valid  number.   ");  }  mant  =  str.substring(0,  expPos);  }  else  {  mant  =  str;  }  dec  =  null;  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  	projects/Lang7/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	482	482	1	replace	if(dec!=  null)  {  if(decPos  >  -1)  {  if(expPos  <  decPos  ||  expPos  >  str.length())  {  throw  new  NumberFormatException(str  + "  is  not  a  valid  number.	      if(dec    ==    null)    {    if(decPos    >    -1)    {    if(expPos    <    decPos    ||    expPos    >    str.length())    {    throw    new    NumberFormatException(str    +   "    is    not    a    valid    number.   ");    }    	non-compiled	[CE]  	12	None	replace
52	[BUG]  [BUGGY]  if(dec  ==  null)  {  if(expPos  >  -1)  {  if(expPos  <  decPos  ||  expPos  >  str.length())  {  throw  new  NumberFormatException(str  + "  is  not  a  valid  number. ");  }  [CE]  ')'  expected  [FE]              AssertionError    [CONTEXT]    if  (decPos  >  -1)  {  if  (expPos  >  -1)  {  if  (expPos  <  decPos  ||  expPos  >  str.length())  {  throw  new  NumberFormatException(str  +     "  is  not  a  valid  number.   ");  }  dec  =  str.substring(decPos  +  1,  expPos);  }  else  {  dec  =  str.substring(decPos  +  1);  }    [BUGGY]  if(dec  ==  null)  {  if(expPos  >  -1)  {  if(expPos  <  decPos  ||  expPos  >  str.length())  {  throw  new  NumberFormatException(str  + "  is  not  a  valid  number. ");  }  [BUGGY]    mant  =  str.substring(0,  decPos);  }  else  {  if  (expPos  >  -1)  {  if  (expPos  >  str.length())  {  throw  new  NumberFormatException(str  +     "  is  not  a  valid  number.   ");  }  mant  =  str.substring(0,  expPos);  }  else  {  mant  =  str;  }  dec  =  null;  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  	projects/Lang7/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	482	482	1	replace	if(dec  ==  null)  {  if(expPos  >  -1)  {  if(expPos  <  decPos  ||  expPos  >  str.length())  {  throw  new  NumberFormatException(str  + "  is  not  a  valid  number. ");  }	      if(dec    ==    null)    {    if(decPos    >    -1)    {    if(expPos    <    decPos    ||    expPos    >    str.length())    {    throw    new    NumberFormatException(str    +   "    is    not    a    valid    number.   ");    }    	non-compiled	[CE]  ')'  expected	12	None	replace
53	[BUG]  [BUGGY]  if(dec!=  null)  {  if(decPos  >  -1)  {  if(expPos  <  decPos  ||  expPos  >  str.length())  {  throw  new  NumberFormatException(str  + "  is  not  a  valid  number. ");  }  [CE]  ')'  expected  [FE]                AssertionError    [CONTEXT]    if  (decPos  >  -1)  {  if  (expPos  >  -1)  {  if  (expPos  <  decPos  ||  expPos  >  str.length())  {  throw  new  NumberFormatException(str  +     "  is  not  a  valid  number.   ");  }  dec  =  str.substring(decPos  +  1,  expPos);  }  else  {  dec  =  str.substring(decPos  +  1);  }    [BUGGY]  if(dec!=  null)  {  if(decPos  >  -1)  {  if(expPos  <  decPos  ||  expPos  >  str.length())  {  throw  new  NumberFormatException(str  + "  is  not  a  valid  number. ");  }  [BUGGY]    mant  =  str.substring(0,  decPos);  }  else  {  if  (expPos  >  -1)  {  if  (expPos  >  str.length())  {  throw  new  NumberFormatException(str  +     "  is  not  a  valid  number.   ");  }  mant  =  str.substring(0,  expPos);  }  else  {  mant  =  str;  }  dec  =  null;  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  	projects/Lang7/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	482	482	1	replace	if(dec!=  null)  {  if(decPos  >  -1)  {  if(expPos  <  decPos  ||  expPos  >  str.length())  {  throw  new  NumberFormatException(str  + "  is  not  a  valid  number. ");  }	      if(dec    ==    null)    {    if(decPos    >    -1)    {    if(expPos    <    decPos    ||    expPos    >    str.length())    {    throw    new    NumberFormatException(str    +   "    is    not    a    valid    number.   ");    }    	non-compiled	[CE]  ')'  expected	12	None	replace
54	[BUG]  [BUGGY]  mant  =  str.substring(1,  decPos  +  2);  [CE]  ')'  expected  [FE]        AssertionError    [CONTEXT]    if  (decPos  >  -1)  {  if  (expPos  >  -1)  {  if  (expPos  <  decPos  ||  expPos  >  str.length())  {  throw  new  NumberFormatException(str  +     "  is  not  a  valid  number.   ");  }  dec  =  str.substring(decPos  +  1,  expPos);  }  else  {  dec  =  str.substring(decPos  +  1);  }    [BUGGY]  mant  =  str.substring(1,  decPos  +  2);  [BUGGY]    }  else  {  if  (expPos  >  -1)  {  if  (expPos  >  str.length())  {  throw  new  NumberFormatException(str  +     "  is  not  a  valid  number.   ");  }  mant  =  str.substring(0,  expPos);  }  else  {  mant  =  str;  }  dec  =  null;  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  	projects/Lang7/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	482	482	1	replace	mant  =  str.substring(1,  decPos  +  2);	  mant    =    str.substring(1,    decPos);    	non-compiled	[CE]  ')'  expected	10	None	replace
55	[BUG]  [BUGGY]  if(dec  ==  null)  {  if(expPos  >  -1)  {  if(expPos  <  decPos  ||  expPos  >  str.length())  {  throw  new  NumberFormatException( " ");  }  [CE]  ')'  expected  [FE]        AssertionError    [CONTEXT]    if  (decPos  >  -1)  {  if  (expPos  >  -1)  {  if  (expPos  <  decPos  ||  expPos  >  str.length())  {  throw  new  NumberFormatException(str  +     "  is  not  a  valid  number.   ");  }  dec  =  str.substring(decPos  +  1,  expPos);  }  else  {  dec  =  str.substring(decPos  +  1);  }    [BUGGY]  if(dec  ==  null)  {  if(expPos  >  -1)  {  if(expPos  <  decPos  ||  expPos  >  str.length())  {  throw  new  NumberFormatException( " ");  }  [BUGGY]    mant  =  str.substring(0,  decPos);  }  else  {  if  (expPos  >  -1)  {  if  (expPos  >  str.length())  {  throw  new  NumberFormatException(str  +     "  is  not  a  valid  number.   ");  }  mant  =  str.substring(0,  expPos);  }  else  {  mant  =  str;  }  dec  =  null;  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  	projects/Lang7/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	482	482	1	replace	if(dec  ==  null)  {  if(expPos  >  -1)  {  if(expPos  <  decPos  ||  expPos  >  str.length())  {  throw  new  NumberFormatException( " ");  }	      if(dec    ==    null)    {    if(decPos    >    -1)    {    if(expPos    <    decPos    ||    expPos    >    str.length())    {    throw    new    NumberFormatException(   "   ");    }    	non-compiled	[CE]  ')'  expected	11	None	replace
56	[BUG]  [BUGGY]  if(expPos  >  -1)  {  if(expPos  <  decPos  ||  expPos  >  str.length())  {  throw  new  NumberFormatException( " ");  }  [CE]  ')'  expected  [FE]          AssertionError    [CONTEXT]    if  (decPos  >  -1)  {  if  (expPos  >  -1)  {  if  (expPos  <  decPos  ||  expPos  >  str.length())  {  throw  new  NumberFormatException(str  +     "  is  not  a  valid  number.   ");  }  dec  =  str.substring(decPos  +  1,  expPos);  }  else  {  dec  =  str.substring(decPos  +  1);  }    [BUGGY]  if(expPos  >  -1)  {  if(expPos  <  decPos  ||  expPos  >  str.length())  {  throw  new  NumberFormatException( " ");  }  [BUGGY]    mant  =  str.substring(0,  decPos);  }  else  {  if  (expPos  >  -1)  {  if  (expPos  >  str.length())  {  throw  new  NumberFormatException(str  +     "  is  not  a  valid  number.   ");  }  mant  =  str.substring(0,  expPos);  }  else  {  mant  =  str;  }  dec  =  null;  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  	projects/Lang7/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	482	482	1	replace	if(expPos  >  -1)  {  if(expPos  <  decPos  ||  expPos  >  str.length())  {  throw  new  NumberFormatException( " ");  }	      if(dec    ==    null)    {    if(decPos    >    -1)    {    if(expPos    <    decPos    ||    expPos    >    str.length())    {    throw    new    NumberFormatException(   "   ");    }    	non-compiled	[CE]  ')'  expected	11	None	replace
57	[BUG]  [BUGGY]  if(dec  ==  null)  {  if(expPos  <  decPos  ||  expPos  >  str.length())  {  throw  new  NumberFormatException( " ");  }  [CE]  ')'  expected  [FE]            AssertionError    [CONTEXT]    if  (decPos  >  -1)  {  if  (expPos  >  -1)  {  if  (expPos  <  decPos  ||  expPos  >  str.length())  {  throw  new  NumberFormatException(str  +     "  is  not  a  valid  number.   ");  }  dec  =  str.substring(decPos  +  1,  expPos);  }  else  {  dec  =  str.substring(decPos  +  1);  }    [BUGGY]  if(dec  ==  null)  {  if(expPos  <  decPos  ||  expPos  >  str.length())  {  throw  new  NumberFormatException( " ");  }  [BUGGY]    mant  =  str.substring(0,  decPos);  }  else  {  if  (expPos  >  -1)  {  if  (expPos  >  str.length())  {  throw  new  NumberFormatException(str  +     "  is  not  a  valid  number.   ");  }  mant  =  str.substring(0,  expPos);  }  else  {  mant  =  str;  }  dec  =  null;  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  	projects/Lang7/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	482	482	1	replace	if(dec  ==  null)  {  if(expPos  <  decPos  ||  expPos  >  str.length())  {  throw  new  NumberFormatException( " ");  }	      if(dec    ==    null)    {    if(decPos    >    -1)    {    if(expPos    <    decPos    ||    expPos    >    str.length())    {    throw    new    NumberFormatException(   "   ");    }    	non-compiled	[CE]  ')'  expected	11	None	replace
58	[BUG]  [BUGGY]  if(expPos  <  decPos  ||  expPos  >  str.length())  {  throw  new  NumberFormatException( " ");  }  [CE]  ')'  expected  [FE]              AssertionError    [CONTEXT]    if  (decPos  >  -1)  {  if  (expPos  >  -1)  {  if  (expPos  <  decPos  ||  expPos  >  str.length())  {  throw  new  NumberFormatException(str  +     "  is  not  a  valid  number.   ");  }  dec  =  str.substring(decPos  +  1,  expPos);  }  else  {  dec  =  str.substring(decPos  +  1);  }    [BUGGY]  if(expPos  <  decPos  ||  expPos  >  str.length())  {  throw  new  NumberFormatException( " ");  }  [BUGGY]    mant  =  str.substring(0,  decPos);  }  else  {  if  (expPos  >  -1)  {  if  (expPos  >  str.length())  {  throw  new  NumberFormatException(str  +     "  is  not  a  valid  number.   ");  }  mant  =  str.substring(0,  expPos);  }  else  {  mant  =  str;  }  dec  =  null;  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  	projects/Lang7/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	482	482	1	replace	if(expPos  <  decPos  ||  expPos  >  str.length())  {  throw  new  NumberFormatException( " ");  }	      if(dec    ==    null)    {    if(decPos    >    -1)    {    if(expPos    <    decPos    ||    expPos    >    str.length())    {    throw    new    NumberFormatException(   "   ");    }    	non-compiled	[CE]  ')'  expected	11	None	replace
59	[BUG]  [BUGGY]  mant  =  str.substring(decPos,  expPos);  [CE]  ')'  expected  [FE]            AssertionError    [CONTEXT]    if  (decPos  >  -1)  {  if  (expPos  >  -1)  {  if  (expPos  <  decPos  ||  expPos  >  str.length())  {  throw  new  NumberFormatException(str  +     "  is  not  a  valid  number.   ");  }  dec  =  str.substring(decPos  +  1,  expPos);  }  else  {  dec  =  str.substring(decPos  +  1);  }    [BUGGY]  mant  =  str.substring(decPos,  expPos);  [BUGGY]    }  else  {  if  (expPos  >  -1)  {  if  (expPos  >  str.length())  {  throw  new  NumberFormatException(str  +     "  is  not  a  valid  number.   ");  }  mant  =  str.substring(0,  expPos);  }  else  {  mant  =  str;  }  dec  =  null;  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  	projects/Lang7/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	482	482	1	replace	mant  =  str.substring(decPos,  expPos);	  mant    =    str.substring(0,    expPos);    	non-compiled	[CE]  ')'  expected	3	None	replace
60	[BUG]  [BUGGY]  int  decPos  =  str.lastIndexOf('.');  [CE]  ')'  expected  [FE]        AssertionError    [CONTEXT]    if  (decPos  >  -1)  {  if  (expPos  >  -1)  {  if  (expPos  <  decPos  ||  expPos  >  str.length())  {  throw  new  NumberFormatException(str  +     "  is  not  a  valid  number.   ");  }  dec  =  str.substring(decPos  +  1,  expPos);  }  else  {  dec  =  str.substring(decPos  +  1);  }    [BUGGY]  int  decPos  =  str.lastIndexOf('.');  [BUGGY]    mant  =  str.substring(0,  decPos);  }  else  {  if  (expPos  >  -1)  {  if  (expPos  >  str.length())  {  throw  new  NumberFormatException(str  +     "  is  not  a  valid  number.   ");  }  mant  =  str.substring(0,  expPos);  }  else  {  mant  =  str;  }  dec  =  null;  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  	projects/Lang7/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	482	482	1	replace	int  decPos  =  str.lastIndexOf('.');	      int    expPos    =    str.lastIndexOf('.');    	non-compiled	[CE]  ')'  expected	6	None	replace
61	[BUG]  [BUGGY]  if(dec  ==  null)  {  if(expPos  >  -1)  {  if(expPos  <  decPos  ||  expPos  >  str.length())  {  throw  new  NumberFormatException(str  + "  is  not  a  valid  number  [CE]  [FE]            AssertionError    [CONTEXT]    if  (decPos  >  -1)  {  if  (expPos  >  -1)  {  if  (expPos  <  decPos  ||  expPos  >  str.length())  {  throw  new  NumberFormatException(str  +     "  is  not  a  valid  number.   ");  }  dec  =  str.substring(decPos  +  1,  expPos);  }  else  {  dec  =  str.substring(decPos  +  1);  }    [BUGGY]  if(dec  ==  null)  {  if(expPos  >  -1)  {  if(expPos  <  decPos  ||  expPos  >  str.length())  {  throw  new  NumberFormatException(str  + "  is  not  a  valid  number  [BUGGY]    mant  =  str.substring(0,  decPos);  }  else  {  if  (expPos  >  -1)  {  if  (expPos  >  str.length())  {  throw  new  NumberFormatException(str  +     "  is  not  a  valid  number.   ");  }  mant  =  str.substring(0,  expPos);  }  else  {  mant  =  str;  }  dec  =  null;  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  	projects/Lang7/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	482	482	1	replace	if(dec  ==  null)  {  if(expPos  >  -1)  {  if(expPos  <  decPos  ||  expPos  >  str.length())  {  throw  new  NumberFormatException(str  + "  is  not  a  valid  number	      if(dec    ==    null)    {    if(decPos    >    -1)    {    if(expPos    <    decPos    ||    expPos    >    str.length())    {    throw    new    NumberFormatException(str    +   "    is    not    a    valid    number.   "    	non-compiled	[CE]  	13	None	replace
62	[BUG]  [BUGGY]  if(dec  ==  null)  {  if(expPos  >  -1)  {  if(expPos  <  decPos  ||  expPos  >  str.length())  {  throw  new  NumberFormatException(str  + "  is  not  a  valid  number. "  [CE]  [FE]              AssertionError    [CONTEXT]    if  (decPos  >  -1)  {  if  (expPos  >  -1)  {  if  (expPos  <  decPos  ||  expPos  >  str.length())  {  throw  new  NumberFormatException(str  +     "  is  not  a  valid  number.   ");  }  dec  =  str.substring(decPos  +  1,  expPos);  }  else  {  dec  =  str.substring(decPos  +  1);  }    [BUGGY]  if(dec  ==  null)  {  if(expPos  >  -1)  {  if(expPos  <  decPos  ||  expPos  >  str.length())  {  throw  new  NumberFormatException(str  + "  is  not  a  valid  number. "  [BUGGY]    mant  =  str.substring(0,  decPos);  }  else  {  if  (expPos  >  -1)  {  if  (expPos  >  str.length())  {  throw  new  NumberFormatException(str  +     "  is  not  a  valid  number.   ");  }  mant  =  str.substring(0,  expPos);  }  else  {  mant  =  str;  }  dec  =  null;  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  	projects/Lang7/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	482	482	1	replace	if(dec  ==  null)  {  if(expPos  >  -1)  {  if(expPos  <  decPos  ||  expPos  >  str.length())  {  throw  new  NumberFormatException(str  + "  is  not  a  valid  number. "	      if(dec    ==    null)    {    if(decPos    >    -1)    {    if(expPos    <    decPos    ||    expPos    >    str.length())    {    throw    new    NumberFormatException(str    +   "    is    not    a    valid    number.   "    	non-compiled	[CE]  	13	None	replace
63	[BUG]  [BUGGY]  mant  =  str.substring(decPos  +  1,  expPos);  [CE]  ')'  expected  [FE]                AssertionError    [CONTEXT]    if  (decPos  >  -1)  {  if  (expPos  >  -1)  {  if  (expPos  <  decPos  ||  expPos  >  str.length())  {  throw  new  NumberFormatException(str  +     "  is  not  a  valid  number.   ");  }  dec  =  str.substring(decPos  +  1,  expPos);  }  else  {  dec  =  str.substring(decPos  +  1);  }    [BUGGY]  mant  =  str.substring(decPos  +  1,  expPos);  [BUGGY]    }  else  {  if  (expPos  >  -1)  {  if  (expPos  >  str.length())  {  throw  new  NumberFormatException(str  +     "  is  not  a  valid  number.   ");  }  mant  =  str.substring(0,  expPos);  }  else  {  mant  =  str;  }  dec  =  null;  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  	projects/Lang7/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	482	482	1	replace	mant  =  str.substring(decPos  +  1,  expPos);	      	non-compiled	[CE]  ')'  expected	5	None	replace
