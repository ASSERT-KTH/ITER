bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  if(hexDigits  >  0)  {  if(hexDigits  <  8)  {  return  createLong(str);  }  [CE]  ')'  expected  [FE]          AssertionError    [CONTEXT]    return  null;  }  if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(   "A  blank  string  is  not  a  valid  number   ");  }  if  (str.startsWith(   "--   "))  {  return  null;  }  if  (str.startsWith(   "0x   ")  ||  str.startsWith(   "-0x   ")  ||  str.startsWith(   "0X   ")  ||  str.startsWith(   "-0X   "))  {  int  hexDigits  =  str.length()  -  2;  //  drop  0x    [BUGGY]  if(hexDigits  >  0)  {  if(hexDigits  <  8)  {  return  createLong(str);  }  [BUGGY]    hexDigits--;  }  if  (hexDigits  >  8)  {  //  too  many  for  an  int  return  createLong(str);  }  return  createInteger(str);  }  char  lastChar  =  str.charAt(str.length()  -  1);  String  mant;  String  dec;  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  	projects/Lang7/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	457	458	1	replace	if(hexDigits  >  0)  {  if(hexDigits  <  8)  {  return  createLong(str);  }	  if(hexDigits    <    8)    {    if    (str.startsWith(   "-   "))    {    //    drop    -    hexDigits--;    }    	non-compiled	[CE]  ')'  expected	7	None	replace
2	[BUG]  [BUGGY]  if(hexDigits  >  0)  {  if(hexDigits  <  8)  {  return  null;  }  [CE]  ')'  expected  [FE]            AssertionError    [CONTEXT]    return  null;  }  if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(   "A  blank  string  is  not  a  valid  number   ");  }  if  (str.startsWith(   "--   "))  {  return  null;  }  if  (str.startsWith(   "0x   ")  ||  str.startsWith(   "-0x   ")  ||  str.startsWith(   "0X   ")  ||  str.startsWith(   "-0X   "))  {  int  hexDigits  =  str.length()  -  2;  //  drop  0x    [BUGGY]  if(hexDigits  >  0)  {  if(hexDigits  <  8)  {  return  null;  }  [BUGGY]    hexDigits--;  }  if  (hexDigits  >  8)  {  //  too  many  for  an  int  return  createLong(str);  }  return  createInteger(str);  }  char  lastChar  =  str.charAt(str.length()  -  1);  String  mant;  String  dec;  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  	projects/Lang7/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	457	458	1	replace	if(hexDigits  >  0)  {  if(hexDigits  <  8)  {  return  null;  }	  if(hexDigits    <    8)    {    if    (str.startsWith(   "-   "))    {    //    drop    -    hexDigits--;    }    	non-compiled	[CE]  ')'  expected	7	None	replace
3	[BUG]  [BUGGY]  if(hexDigits  <  0)  {  if  (str.startsWith( "- "))  {  //  drop  0;  }  [CE]  ')'  expected  [FE]              AssertionError    [CONTEXT]    return  null;  }  if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(   "A  blank  string  is  not  a  valid  number   ");  }  if  (str.startsWith(   "--   "))  {  return  null;  }  if  (str.startsWith(   "0x   ")  ||  str.startsWith(   "-0x   ")  ||  str.startsWith(   "0X   ")  ||  str.startsWith(   "-0X   "))  {  int  hexDigits  =  str.length()  -  2;  //  drop  0x    [BUGGY]  if(hexDigits  <  0)  {  if  (str.startsWith( "- "))  {  //  drop  0;  }  [BUGGY]    hexDigits--;  }  if  (hexDigits  >  8)  {  //  too  many  for  an  int  return  createLong(str);  }  return  createInteger(str);  }  char  lastChar  =  str.charAt(str.length()  -  1);  String  mant;  String  dec;  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  	projects/Lang7/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	457	458	1	replace	if(hexDigits  <  0)  {  if  (str.startsWith( "- "))  {  //  drop  0;  }	  if(hexDigits    <    8)    {    if    (str.startsWith(   "-   "))    {    //    drop    -    hexDigits--;    }    	non-compiled	[CE]  ')'  expected	7	None	replace
4	[BUG]  [BUGGY]  if(hexDigits  <  0)  {  if  (str.startsWith( "- "))  {  //  drop  -1;  }  [CE]  ')'  expected  [FE]                AssertionError    [CONTEXT]    return  null;  }  if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(   "A  blank  string  is  not  a  valid  number   ");  }  if  (str.startsWith(   "--   "))  {  return  null;  }  if  (str.startsWith(   "0x   ")  ||  str.startsWith(   "-0x   ")  ||  str.startsWith(   "0X   ")  ||  str.startsWith(   "-0X   "))  {  int  hexDigits  =  str.length()  -  2;  //  drop  0x    [BUGGY]  if(hexDigits  <  0)  {  if  (str.startsWith( "- "))  {  //  drop  -1;  }  [BUGGY]    hexDigits--;  }  if  (hexDigits  >  8)  {  //  too  many  for  an  int  return  createLong(str);  }  return  createInteger(str);  }  char  lastChar  =  str.charAt(str.length()  -  1);  String  mant;  String  dec;  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  	projects/Lang7/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	457	458	1	replace	if(hexDigits  <  0)  {  if  (str.startsWith( "- "))  {  //  drop  -1;  }	  if(hexDigits    <    8)    {    if    (str.startsWith(   "-   "))    {    //    drop    -    hexDigits--;    }    	non-compiled	[CE]  ')'  expected	7	None	replace
5	[BUG]  [BUGGY]  if(hexDigits  >  8)  {  //  drop  0x-hexDigits--;  }  [CE]  ')'  expected  [FE]        AssertionError    [CONTEXT]    return  null;  }  if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(   "A  blank  string  is  not  a  valid  number   ");  }  if  (str.startsWith(   "--   "))  {  return  null;  }  if  (str.startsWith(   "0x   ")  ||  str.startsWith(   "-0x   ")  ||  str.startsWith(   "0X   ")  ||  str.startsWith(   "-0X   "))  {  int  hexDigits  =  str.length()  -  2;  //  drop  0x    [BUGGY]  if(hexDigits  >  8)  {  //  drop  0x-hexDigits--;  }  [BUGGY]    hexDigits--;  }  if  (hexDigits  >  8)  {  //  too  many  for  an  int  return  createLong(str);  }  return  createInteger(str);  }  char  lastChar  =  str.charAt(str.length()  -  1);  String  mant;  String  dec;  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  	projects/Lang7/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	457	458	1	replace	if(hexDigits  >  8)  {  //  drop  0x-hexDigits--;  }	  if(hexDigits    >    0)    {    //    drop    -    hexDigits--;    }    	non-compiled	[CE]  ')'  expected	18	None	replace
6	[BUG]  [BUGGY]  if(hexDigits  <  8)  {  //  drop  -  hexDigits--;  }  [CE]  ')'  expected  [FE]          AssertionError    [CONTEXT]    return  null;  }  if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(   "A  blank  string  is  not  a  valid  number   ");  }  if  (str.startsWith(   "--   "))  {  return  null;  }  if  (str.startsWith(   "0x   ")  ||  str.startsWith(   "-0x   ")  ||  str.startsWith(   "0X   ")  ||  str.startsWith(   "-0X   "))  {  int  hexDigits  =  str.length()  -  2;  //  drop  0x    [BUGGY]  if(hexDigits  <  8)  {  //  drop  -  hexDigits--;  }  [BUGGY]    hexDigits--;  }  if  (hexDigits  >  8)  {  //  too  many  for  an  int  return  createLong(str);  }  return  createInteger(str);  }  char  lastChar  =  str.charAt(str.length()  -  1);  String  mant;  String  dec;  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  	projects/Lang7/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	457	458	1	replace	if(hexDigits  <  8)  {  //  drop  -  hexDigits--;  }	  if(hexDigits    >    0)    {    //    drop    -    hexDigits--;    }    	non-compiled	[CE]  ')'  expected	18	None	replace
7	[BUG]  [BUGGY]  if(hexDigits  <  8)  {  //  drop  0x-hexDigits--;  }  [CE]  ')'  expected  [FE]            AssertionError    [CONTEXT]    return  null;  }  if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(   "A  blank  string  is  not  a  valid  number   ");  }  if  (str.startsWith(   "--   "))  {  return  null;  }  if  (str.startsWith(   "0x   ")  ||  str.startsWith(   "-0x   ")  ||  str.startsWith(   "0X   ")  ||  str.startsWith(   "-0X   "))  {  int  hexDigits  =  str.length()  -  2;  //  drop  0x    [BUGGY]  if(hexDigits  <  8)  {  //  drop  0x-hexDigits--;  }  [BUGGY]    hexDigits--;  }  if  (hexDigits  >  8)  {  //  too  many  for  an  int  return  createLong(str);  }  return  createInteger(str);  }  char  lastChar  =  str.charAt(str.length()  -  1);  String  mant;  String  dec;  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  	projects/Lang7/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	457	458	1	replace	if(hexDigits  <  8)  {  //  drop  0x-hexDigits--;  }	  if(hexDigits    >    0)    {    //    drop    -    hexDigits--;    }    	non-compiled	[CE]  ')'  expected	18	None	replace
8	[BUG]  [BUGGY]  if(hexDigits  >  8)  {  //  drop  0x;  }  [CE]  ')'  expected  [FE]              AssertionError    [CONTEXT]    return  null;  }  if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(   "A  blank  string  is  not  a  valid  number   ");  }  if  (str.startsWith(   "--   "))  {  return  null;  }  if  (str.startsWith(   "0x   ")  ||  str.startsWith(   "-0x   ")  ||  str.startsWith(   "0X   ")  ||  str.startsWith(   "-0X   "))  {  int  hexDigits  =  str.length()  -  2;  //  drop  0x    [BUGGY]  if(hexDigits  >  8)  {  //  drop  0x;  }  [BUGGY]    hexDigits--;  }  if  (hexDigits  >  8)  {  //  too  many  for  an  int  return  createLong(str);  }  return  createInteger(str);  }  char  lastChar  =  str.charAt(str.length()  -  1);  String  mant;  String  dec;  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  	projects/Lang7/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	457	458	1	replace	if(hexDigits  >  8)  {  //  drop  0x;  }	  if(hexDigits    >    0)    {    //    drop    -    hexDigits--;    }    	non-compiled	[CE]  ')'  expected	18	None	replace
9	[BUG]  [BUGGY]  if(hexDigits  <  8)  {  //  drop  0;  }  [CE]  ')'  expected  [FE]            AssertionError    [CONTEXT]    return  null;  }  if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(   "A  blank  string  is  not  a  valid  number   ");  }  if  (str.startsWith(   "--   "))  {  return  null;  }  if  (str.startsWith(   "0x   ")  ||  str.startsWith(   "-0x   ")  ||  str.startsWith(   "0X   ")  ||  str.startsWith(   "-0X   "))  {  int  hexDigits  =  str.length()  -  2;  //  drop  0x    [BUGGY]  if(hexDigits  <  8)  {  //  drop  0;  }  [BUGGY]    hexDigits--;  }  if  (hexDigits  >  8)  {  //  too  many  for  an  int  return  createLong(str);  }  return  createInteger(str);  }  char  lastChar  =  str.charAt(str.length()  -  1);  String  mant;  String  dec;  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  	projects/Lang7/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	457	458	1	replace	if(hexDigits  <  8)  {  //  drop  0;  }	  if(hexDigits    <    0)    {    //    drop    0;    }    	non-compiled	[CE]  ')'  expected	12	None	replace
10	[BUG]  [BUGGY]  if(hexDigits  <  8)  {  return  createLong(str);  }  [CE]  ')'  expected  [FE]              AssertionError    [CONTEXT]    return  null;  }  if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(   "A  blank  string  is  not  a  valid  number   ");  }  if  (str.startsWith(   "--   "))  {  return  null;  }  if  (str.startsWith(   "0x   ")  ||  str.startsWith(   "-0x   ")  ||  str.startsWith(   "0X   ")  ||  str.startsWith(   "-0X   "))  {  int  hexDigits  =  str.length()  -  2;  //  drop  0x    [BUGGY]  if(hexDigits  <  8)  {  return  createLong(str);  }  [BUGGY]    hexDigits--;  }  if  (hexDigits  >  8)  {  //  too  many  for  an  int  return  createLong(str);  }  return  createInteger(str);  }  char  lastChar  =  str.charAt(str.length()  -  1);  String  mant;  String  dec;  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  	projects/Lang7/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	457	458	1	replace	if(hexDigits  <  8)  {  return  createLong(str);  }	  if(hexDigits    <    0)    {    //    drop    0;    }    	non-compiled	[CE]  ')'  expected	12	None	replace
11	[BUG]  [BUGGY]  if(hexDigits  >  0)  {  //  drop  0;  }  [CE]  ')'  expected  [FE]                AssertionError    [CONTEXT]    return  null;  }  if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(   "A  blank  string  is  not  a  valid  number   ");  }  if  (str.startsWith(   "--   "))  {  return  null;  }  if  (str.startsWith(   "0x   ")  ||  str.startsWith(   "-0x   ")  ||  str.startsWith(   "0X   ")  ||  str.startsWith(   "-0X   "))  {  int  hexDigits  =  str.length()  -  2;  //  drop  0x    [BUGGY]  if(hexDigits  >  0)  {  //  drop  0;  }  [BUGGY]    hexDigits--;  }  if  (hexDigits  >  8)  {  //  too  many  for  an  int  return  createLong(str);  }  return  createInteger(str);  }  char  lastChar  =  str.charAt(str.length()  -  1);  String  mant;  String  dec;  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  	projects/Lang7/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	457	458	1	replace	if(hexDigits  >  0)  {  //  drop  0;  }	  if(hexDigits    <    0)    {    //    drop    0;    }    	non-compiled	[CE]  ')'  expected	12	None	replace
12	[BUG]  [BUGGY]  if(hexDigits  <  8)  {  return  createInteger(str);  }  [CE]  ')'  expected  [FE]                  AssertionError    [CONTEXT]    return  null;  }  if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(   "A  blank  string  is  not  a  valid  number   ");  }  if  (str.startsWith(   "--   "))  {  return  null;  }  if  (str.startsWith(   "0x   ")  ||  str.startsWith(   "-0x   ")  ||  str.startsWith(   "0X   ")  ||  str.startsWith(   "-0X   "))  {  int  hexDigits  =  str.length()  -  2;  //  drop  0x    [BUGGY]  if(hexDigits  <  8)  {  return  createInteger(str);  }  [BUGGY]    hexDigits--;  }  if  (hexDigits  >  8)  {  //  too  many  for  an  int  return  createLong(str);  }  return  createInteger(str);  }  char  lastChar  =  str.charAt(str.length()  -  1);  String  mant;  String  dec;  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  	projects/Lang7/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	457	458	1	replace	if(hexDigits  <  8)  {  return  createInteger(str);  }	  if(hexDigits    <    0)    {    //    drop    0;    }    	non-compiled	[CE]  ')'  expected	12	None	replace
13	[BUG]  [BUGGY]  if(hexDigits  >  0)  {  if(hexDigits  <  8)  {  //  drop  -1;  }  [CE]  ')'  expected  [FE]              AssertionError    [CONTEXT]    return  null;  }  if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(   "A  blank  string  is  not  a  valid  number   ");  }  if  (str.startsWith(   "--   "))  {  return  null;  }  if  (str.startsWith(   "0x   ")  ||  str.startsWith(   "-0x   ")  ||  str.startsWith(   "0X   ")  ||  str.startsWith(   "-0X   "))  {  int  hexDigits  =  str.length()  -  2;  //  drop  0x    [BUGGY]  if(hexDigits  >  0)  {  if(hexDigits  <  8)  {  //  drop  -1;  }  [BUGGY]    hexDigits--;  }  if  (hexDigits  >  8)  {  //  too  many  for  an  int  return  createLong(str);  }  return  createInteger(str);  }  char  lastChar  =  str.charAt(str.length()  -  1);  String  mant;  String  dec;  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  	projects/Lang7/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	457	458	1	replace	if(hexDigits  >  0)  {  if(hexDigits  <  8)  {  //  drop  -1;  }	  if(hexDigits    <    8)    {    if    (str.startsWith(   "-   "))    {    //    drop    -1;    }    	non-compiled	[CE]  ')'  expected	9	None	replace
14	[BUG]  [BUGGY]  hexDigits  =  str.length()  -  2;  [CE]  ')'  expected  [FE]        AssertionError    [CONTEXT]    return  null;  }  if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(   "A  blank  string  is  not  a  valid  number   ");  }  if  (str.startsWith(   "--   "))  {  return  null;  }  if  (str.startsWith(   "0x   ")  ||  str.startsWith(   "-0x   ")  ||  str.startsWith(   "0X   ")  ||  str.startsWith(   "-0X   "))  {  int  hexDigits  =  str.length()  -  2;  //  drop  0x    [BUGGY]  hexDigits  =  str.length()  -  2;  [BUGGY]    if  (str.startsWith(   "-   "))  {  //  drop  -    hexDigits--;  hexDigits--;  }  if  (hexDigits  >  8)  {  //  too  many  for  an  int  return  createLong(str);  }  return  createInteger(str);  }  char  lastChar  =  str.charAt(str.length()  -  1);  String  mant;  String  dec;  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  	projects/Lang7/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	457	458	1	replace	hexDigits  =  str.length()  -  2;	      hexDigits    =    str.length();    	non-compiled	[CE]  ')'  expected	1	None	replace
15	[BUG]  [BUGGY]  hexDigits  =  str.length()  +  2;  [CE]  ')'  expected  [FE]          AssertionError    [CONTEXT]    return  null;  }  if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(   "A  blank  string  is  not  a  valid  number   ");  }  if  (str.startsWith(   "--   "))  {  return  null;  }  if  (str.startsWith(   "0x   ")  ||  str.startsWith(   "-0x   ")  ||  str.startsWith(   "0X   ")  ||  str.startsWith(   "-0X   "))  {  int  hexDigits  =  str.length()  -  2;  //  drop  0x    [BUGGY]  hexDigits  =  str.length()  +  2;  [BUGGY]    if  (str.startsWith(   "-   "))  {  //  drop  -    hexDigits--;  hexDigits--;  }  if  (hexDigits  >  8)  {  //  too  many  for  an  int  return  createLong(str);  }  return  createInteger(str);  }  char  lastChar  =  str.charAt(str.length()  -  1);  String  mant;  String  dec;  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  	projects/Lang7/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	457	458	1	replace	hexDigits  =  str.length()  +  2;	      hexDigits    =    str.length();    	non-compiled	[CE]  ')'  expected	1	None	replace
16	[BUG]  [BUGGY]  HexDigits  =  str.length()  -  2;  [CE]  ')'  expected  [FE]            AssertionError    [CONTEXT]    return  null;  }  if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(   "A  blank  string  is  not  a  valid  number   ");  }  if  (str.startsWith(   "--   "))  {  return  null;  }  if  (str.startsWith(   "0x   ")  ||  str.startsWith(   "-0x   ")  ||  str.startsWith(   "0X   ")  ||  str.startsWith(   "-0X   "))  {  int  hexDigits  =  str.length()  -  2;  //  drop  0x    [BUGGY]  HexDigits  =  str.length()  -  2;  [BUGGY]    if  (str.startsWith(   "-   "))  {  //  drop  -    hexDigits--;  hexDigits--;  }  if  (hexDigits  >  8)  {  //  too  many  for  an  int  return  createLong(str);  }  return  createInteger(str);  }  char  lastChar  =  str.charAt(str.length()  -  1);  String  mant;  String  dec;  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  	projects/Lang7/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	457	458	1	replace	HexDigits  =  str.length()  -  2;	      hexDigits    =    str.length();    	non-compiled	[CE]  ')'  expected	1	None	replace
17	[BUG]  [BUGGY]  hexDigits  =  str.charAt(hexDigits  +  1);  [CE]  ')'  expected  [FE]          AssertionError    [CONTEXT]    return  null;  }  if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(   "A  blank  string  is  not  a  valid  number   ");  }  if  (str.startsWith(   "--   "))  {  return  null;  }  if  (str.startsWith(   "0x   ")  ||  str.startsWith(   "-0x   ")  ||  str.startsWith(   "0X   ")  ||  str.startsWith(   "-0X   "))  {  int  hexDigits  =  str.length()  -  2;  //  drop  0x    [BUGGY]  hexDigits  =  str.charAt(hexDigits  +  1);  [BUGGY]    if  (str.startsWith(   "-   "))  {  //  drop  -    hexDigits--;  hexDigits--;  }  if  (hexDigits  >  8)  {  //  too  many  for  an  int  return  createLong(str);  }  return  createInteger(str);  }  char  lastChar  =  str.charAt(str.length()  -  1);  String  mant;  String  dec;  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  	projects/Lang7/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	457	458	1	replace	hexDigits  =  str.charAt(hexDigits  +  1);	      hexDigits    =    str.charAt(hexDigits);    	non-compiled	[CE]  ')'  expected	14	None	replace
18	[BUG]  [BUGGY]  hexDigits  =  str.charAt(0);  [CE]  ')'  expected  [FE]            AssertionError    [CONTEXT]    return  null;  }  if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(   "A  blank  string  is  not  a  valid  number   ");  }  if  (str.startsWith(   "--   "))  {  return  null;  }  if  (str.startsWith(   "0x   ")  ||  str.startsWith(   "-0x   ")  ||  str.startsWith(   "0X   ")  ||  str.startsWith(   "-0X   "))  {  int  hexDigits  =  str.length()  -  2;  //  drop  0x    [BUGGY]  hexDigits  =  str.charAt(0);  [BUGGY]    if  (str.startsWith(   "-   "))  {  //  drop  -    hexDigits--;  hexDigits--;  }  if  (hexDigits  >  8)  {  //  too  many  for  an  int  return  createLong(str);  }  return  createInteger(str);  }  char  lastChar  =  str.charAt(str.length()  -  1);  String  mant;  String  dec;  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  	projects/Lang7/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	457	458	1	replace	hexDigits  =  str.charAt(0);	      hexDigits    =    str.charAt(hexDigits);    	non-compiled	[CE]  ')'  expected	14	None	replace
19	[BUG]  [BUGGY]  hexDigits  =  str.charAt(hexDigits  -  2);  [CE]  ')'  expected  [FE]              AssertionError    [CONTEXT]    return  null;  }  if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(   "A  blank  string  is  not  a  valid  number   ");  }  if  (str.startsWith(   "--   "))  {  return  null;  }  if  (str.startsWith(   "0x   ")  ||  str.startsWith(   "-0x   ")  ||  str.startsWith(   "0X   ")  ||  str.startsWith(   "-0X   "))  {  int  hexDigits  =  str.length()  -  2;  //  drop  0x    [BUGGY]  hexDigits  =  str.charAt(hexDigits  -  2);  [BUGGY]    if  (str.startsWith(   "-   "))  {  //  drop  -    hexDigits--;  hexDigits--;  }  if  (hexDigits  >  8)  {  //  too  many  for  an  int  return  createLong(str);  }  return  createInteger(str);  }  char  lastChar  =  str.charAt(str.length()  -  1);  String  mant;  String  dec;  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  	projects/Lang7/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	457	458	1	replace	hexDigits  =  str.charAt(hexDigits  -  2);	      hexDigits    =    str.charAt(hexDigits);    	non-compiled	[CE]  ')'  expected	14	None	replace
20	[BUG]  [BUGGY]  if(dec  ==  null)  {  if(hexDigits  >  0)  {  int  hexDigits  =  str.length();  if(hexDigits  <  0)  {  return  createLong(str);  }  [CE]  ')'  expected  [FE]          AssertionError    [CONTEXT]    return  null;  }  if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(   "A  blank  string  is  not  a  valid  number   ");  }  if  (str.startsWith(   "--   "))  {  return  null;  }  if  (str.startsWith(   "0x   ")  ||  str.startsWith(   "-0x   ")  ||  str.startsWith(   "0X   ")  ||  str.startsWith(   "-0X   "))  {  int  hexDigits  =  str.length()  -  2;  //  drop  0x    [BUGGY]  if(dec  ==  null)  {  if(hexDigits  >  0)  {  int  hexDigits  =  str.length();  if(hexDigits  <  0)  {  return  createLong(str);  }  [BUGGY]    if  (str.startsWith(   "-   "))  {  //  drop  -    hexDigits--;  hexDigits--;  }  if  (hexDigits  >  8)  {  //  too  many  for  an  int  return  createLong(str);  }  return  createInteger(str);  }  char  lastChar  =  str.charAt(str.length()  -  1);  String  mant;  String  dec;  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  	projects/Lang7/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	457	458	1	replace	if(dec  ==  null)  {  if(hexDigits  >  0)  {  int  hexDigits  =  str.length();  if(hexDigits  <  0)  {  return  createLong(str);  }	      if(hexDigits    >    0)    {    int    hexDigits    =    str.length();    if(hexDigits    <    0)    {    return    createLong(str);    }    	non-compiled	[CE]  ')'  expected	17	None	replace
21	[BUG]  [BUGGY]  if(dec  ==  null)  {  if(hexDigits  >  0)  {  int  hexDigits  =  str.length();  if(hexDigits  <  0)  {  return  createInteger(str);  }  [CE]  ')'  expected  [FE]            AssertionError    [CONTEXT]    return  null;  }  if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(   "A  blank  string  is  not  a  valid  number   ");  }  if  (str.startsWith(   "--   "))  {  return  null;  }  if  (str.startsWith(   "0x   ")  ||  str.startsWith(   "-0x   ")  ||  str.startsWith(   "0X   ")  ||  str.startsWith(   "-0X   "))  {  int  hexDigits  =  str.length()  -  2;  //  drop  0x    [BUGGY]  if(dec  ==  null)  {  if(hexDigits  >  0)  {  int  hexDigits  =  str.length();  if(hexDigits  <  0)  {  return  createInteger(str);  }  [BUGGY]    if  (str.startsWith(   "-   "))  {  //  drop  -    hexDigits--;  hexDigits--;  }  if  (hexDigits  >  8)  {  //  too  many  for  an  int  return  createLong(str);  }  return  createInteger(str);  }  char  lastChar  =  str.charAt(str.length()  -  1);  String  mant;  String  dec;  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  	projects/Lang7/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	457	458	1	replace	if(dec  ==  null)  {  if(hexDigits  >  0)  {  int  hexDigits  =  str.length();  if(hexDigits  <  0)  {  return  createInteger(str);  }	      if(hexDigits    >    0)    {    int    hexDigits    =    str.length();    if(hexDigits    <    0)    {    return    createLong(str);    }    	non-compiled	[CE]  ')'  expected	17	None	replace
22	[BUG]  [BUGGY]  if(str.startsWith( "-   "))  {  int  hexDigits  =  str.length()  -  2;  if(hexDigits  <  0)  {  return  createLong(str);  }  [CE]  ')'  expected  [FE]              AssertionError    [CONTEXT]    return  null;  }  if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(   "A  blank  string  is  not  a  valid  number   ");  }  if  (str.startsWith(   "--   "))  {  return  null;  }  if  (str.startsWith(   "0x   ")  ||  str.startsWith(   "-0x   ")  ||  str.startsWith(   "0X   ")  ||  str.startsWith(   "-0X   "))  {  int  hexDigits  =  str.length()  -  2;  //  drop  0x    [BUGGY]  if(str.startsWith( "-   "))  {  int  hexDigits  =  str.length()  -  2;  if(hexDigits  <  0)  {  return  createLong(str);  }  [BUGGY]    if  (str.startsWith(   "-   "))  {  //  drop  -    hexDigits--;  hexDigits--;  }  if  (hexDigits  >  8)  {  //  too  many  for  an  int  return  createLong(str);  }  return  createInteger(str);  }  char  lastChar  =  str.charAt(str.length()  -  1);  String  mant;  String  dec;  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  	projects/Lang7/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	457	458	1	replace	if(str.startsWith( "-   "))  {  int  hexDigits  =  str.length()  -  2;  if(hexDigits  <  0)  {  return  createLong(str);  }	      if(hexDigits    >    0)    {    int    hexDigits    =    str.length();    if(hexDigits    <    0)    {    return    createLong(str);    }    	non-compiled	[CE]  ')'  expected	17	None	replace
23	[BUG]  [BUGGY]  if(hexDigits  >  8)  {  int  hexDigits  =  str.length();  if(hexDigits  <  0)  {  return  createLong(str);  }  [CE]  ')'  expected  [FE]                AssertionError    [CONTEXT]    return  null;  }  if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(   "A  blank  string  is  not  a  valid  number   ");  }  if  (str.startsWith(   "--   "))  {  return  null;  }  if  (str.startsWith(   "0x   ")  ||  str.startsWith(   "-0x   ")  ||  str.startsWith(   "0X   ")  ||  str.startsWith(   "-0X   "))  {  int  hexDigits  =  str.length()  -  2;  //  drop  0x    [BUGGY]  if(hexDigits  >  8)  {  int  hexDigits  =  str.length();  if(hexDigits  <  0)  {  return  createLong(str);  }  [BUGGY]    if  (str.startsWith(   "-   "))  {  //  drop  -    hexDigits--;  hexDigits--;  }  if  (hexDigits  >  8)  {  //  too  many  for  an  int  return  createLong(str);  }  return  createInteger(str);  }  char  lastChar  =  str.charAt(str.length()  -  1);  String  mant;  String  dec;  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  	projects/Lang7/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	457	458	1	replace	if(hexDigits  >  8)  {  int  hexDigits  =  str.length();  if(hexDigits  <  0)  {  return  createLong(str);  }	      if(hexDigits    >    0)    {    int    hexDigits    =    str.length();    if(hexDigits    <    0)    {    return    createLong(str);    }    	non-compiled	[CE]  ')'  expected	17	None	replace
24	[BUG]  [BUGGY]  if(str.startsWith( "-   "))  {  int  hexDigits  =  str.length()  -  2;  if(hexDigits  <  0)  {  return  createInteger(str);  }  [CE]  ')'  expected  [FE]        AssertionError    [CONTEXT]    return  null;  }  if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(   "A  blank  string  is  not  a  valid  number   ");  }  if  (str.startsWith(   "--   "))  {  return  null;  }  if  (str.startsWith(   "0x   ")  ||  str.startsWith(   "-0x   ")  ||  str.startsWith(   "0X   ")  ||  str.startsWith(   "-0X   "))  {  int  hexDigits  =  str.length()  -  2;  //  drop  0x    [BUGGY]  if(str.startsWith( "-   "))  {  int  hexDigits  =  str.length()  -  2;  if(hexDigits  <  0)  {  return  createInteger(str);  }  [BUGGY]    if  (str.startsWith(   "-   "))  {  //  drop  -    hexDigits--;  hexDigits--;  }  if  (hexDigits  >  8)  {  //  too  many  for  an  int  return  createLong(str);  }  return  createInteger(str);  }  char  lastChar  =  str.charAt(str.length()  -  1);  String  mant;  String  dec;  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  	projects/Lang7/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	457	458	1	replace	if(str.startsWith( "-   "))  {  int  hexDigits  =  str.length()  -  2;  if(hexDigits  <  0)  {  return  createInteger(str);  }	      if(hexDigits    >    0)    {    int    hexDigits    =    str.length();    if(hexDigits    <    0)    {    return    createInteger(str);    }    	non-compiled	[CE]  ')'  expected	16	None	replace
25	[BUG]  [BUGGY]  if(dec  ==  null)  {  if(hexDigits  >  0)  {  int  hexDigits  =  str.length()  -  2;  if(hexDigits  <  0)  {  return  createInteger(str);  }  [CE]  ')'  expected  [FE]          AssertionError    [CONTEXT]    return  null;  }  if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(   "A  blank  string  is  not  a  valid  number   ");  }  if  (str.startsWith(   "--   "))  {  return  null;  }  if  (str.startsWith(   "0x   ")  ||  str.startsWith(   "-0x   ")  ||  str.startsWith(   "0X   ")  ||  str.startsWith(   "-0X   "))  {  int  hexDigits  =  str.length()  -  2;  //  drop  0x    [BUGGY]  if(dec  ==  null)  {  if(hexDigits  >  0)  {  int  hexDigits  =  str.length()  -  2;  if(hexDigits  <  0)  {  return  createInteger(str);  }  [BUGGY]    if  (str.startsWith(   "-   "))  {  //  drop  -    hexDigits--;  hexDigits--;  }  if  (hexDigits  >  8)  {  //  too  many  for  an  int  return  createLong(str);  }  return  createInteger(str);  }  char  lastChar  =  str.charAt(str.length()  -  1);  String  mant;  String  dec;  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  	projects/Lang7/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	457	458	1	replace	if(dec  ==  null)  {  if(hexDigits  >  0)  {  int  hexDigits  =  str.length()  -  2;  if(hexDigits  <  0)  {  return  createInteger(str);  }	      if(hexDigits    >    0)    {    int    hexDigits    =    str.length();    if(hexDigits    <    0)    {    return    createInteger(str);    }    	non-compiled	[CE]  ')'  expected	16	None	replace
26	[BUG]  [BUGGY]  int  hexDigits  =  str.length();  if(hexDigits  <  0)  {  return  createInteger(str);  }  [CE]  ')'  expected  [FE]            AssertionError    [CONTEXT]    return  null;  }  if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(   "A  blank  string  is  not  a  valid  number   ");  }  if  (str.startsWith(   "--   "))  {  return  null;  }  if  (str.startsWith(   "0x   ")  ||  str.startsWith(   "-0x   ")  ||  str.startsWith(   "0X   ")  ||  str.startsWith(   "-0X   "))  {  int  hexDigits  =  str.length()  -  2;  //  drop  0x    [BUGGY]  int  hexDigits  =  str.length();  if(hexDigits  <  0)  {  return  createInteger(str);  }  [BUGGY]    if  (str.startsWith(   "-   "))  {  //  drop  -    hexDigits--;  hexDigits--;  }  if  (hexDigits  >  8)  {  //  too  many  for  an  int  return  createLong(str);  }  return  createInteger(str);  }  char  lastChar  =  str.charAt(str.length()  -  1);  String  mant;  String  dec;  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  	projects/Lang7/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	457	458	1	replace	int  hexDigits  =  str.length();  if(hexDigits  <  0)  {  return  createInteger(str);  }	      if(hexDigits    >    0)    {    int    hexDigits    =    str.length();    if(hexDigits    <    0)    {    return    createInteger(str);    }    	non-compiled	[CE]  ')'  expected	16	None	replace
27	[BUG]  [BUGGY]  if(hexDigits  <  0  ||  str.startsWith( "- "))  {  //  drop  0;  }  [CE]  ')'  expected  [FE]            AssertionError    [CONTEXT]    return  null;  }  if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(   "A  blank  string  is  not  a  valid  number   ");  }  if  (str.startsWith(   "--   "))  {  return  null;  }  if  (str.startsWith(   "0x   ")  ||  str.startsWith(   "-0x   ")  ||  str.startsWith(   "0X   ")  ||  str.startsWith(   "-0X   "))  {  int  hexDigits  =  str.length()  -  2;  //  drop  0x    [BUGGY]  if(hexDigits  <  0  ||  str.startsWith( "- "))  {  //  drop  0;  }  [BUGGY]    hexDigits--;  }  if  (hexDigits  >  8)  {  //  too  many  for  an  int  return  createLong(str);  }  return  createInteger(str);  }  char  lastChar  =  str.charAt(str.length()  -  1);  String  mant;  String  dec;  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  	projects/Lang7/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	457	458	1	replace	if(hexDigits  <  0  ||  str.startsWith( "- "))  {  //  drop  0;  }	  if(hexDigits    <    0    ||    str.startsWith(   "-   "))    {    //    drop    -    hexDigits--;    }    	non-compiled	[CE]  ')'  expected	8	None	replace
28	[BUG]  [BUGGY]  if(hexDigits  <  0  ||  str.startsWith( "- "))  {  //  drop  1  -  hexDigits--;  }  [CE]  ')'  expected  [FE]              AssertionError    [CONTEXT]    return  null;  }  if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(   "A  blank  string  is  not  a  valid  number   ");  }  if  (str.startsWith(   "--   "))  {  return  null;  }  if  (str.startsWith(   "0x   ")  ||  str.startsWith(   "-0x   ")  ||  str.startsWith(   "0X   ")  ||  str.startsWith(   "-0X   "))  {  int  hexDigits  =  str.length()  -  2;  //  drop  0x    [BUGGY]  if(hexDigits  <  0  ||  str.startsWith( "- "))  {  //  drop  1  -  hexDigits--;  }  [BUGGY]    hexDigits--;  }  if  (hexDigits  >  8)  {  //  too  many  for  an  int  return  createLong(str);  }  return  createInteger(str);  }  char  lastChar  =  str.charAt(str.length()  -  1);  String  mant;  String  dec;  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  	projects/Lang7/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	457	458	1	replace	if(hexDigits  <  0  ||  str.startsWith( "- "))  {  //  drop  1  -  hexDigits--;  }	  if(hexDigits    <    0    ||    str.startsWith(   "-   "))    {    //    drop    -    hexDigits--;    }    	non-compiled	[CE]  ')'  expected	8	None	replace
29	[BUG]  [BUGGY]  if(hexDigits  <  0  ||  str.startsWith( "- "))  {  return  null;  }  [CE]  ')'  expected  [FE]                AssertionError    [CONTEXT]    return  null;  }  if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(   "A  blank  string  is  not  a  valid  number   ");  }  if  (str.startsWith(   "--   "))  {  return  null;  }  if  (str.startsWith(   "0x   ")  ||  str.startsWith(   "-0x   ")  ||  str.startsWith(   "0X   ")  ||  str.startsWith(   "-0X   "))  {  int  hexDigits  =  str.length()  -  2;  //  drop  0x    [BUGGY]  if(hexDigits  <  0  ||  str.startsWith( "- "))  {  return  null;  }  [BUGGY]    hexDigits--;  }  if  (hexDigits  >  8)  {  //  too  many  for  an  int  return  createLong(str);  }  return  createInteger(str);  }  char  lastChar  =  str.charAt(str.length()  -  1);  String  mant;  String  dec;  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  	projects/Lang7/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	457	458	1	replace	if(hexDigits  <  0  ||  str.startsWith( "- "))  {  return  null;  }	  if(hexDigits    <    0    ||    str.startsWith(   "-   "))    {    //    drop    -    hexDigits--;    }    	non-compiled	[CE]  ')'  expected	8	None	replace
30	[BUG]  [BUGGY]  if(hexDigits  <  0  ||  str.startsWith( "-0 "))  {  //  drop  0;  }  [CE]  ')'  expected  [FE]                  AssertionError    [CONTEXT]    return  null;  }  if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(   "A  blank  string  is  not  a  valid  number   ");  }  if  (str.startsWith(   "--   "))  {  return  null;  }  if  (str.startsWith(   "0x   ")  ||  str.startsWith(   "-0x   ")  ||  str.startsWith(   "0X   ")  ||  str.startsWith(   "-0X   "))  {  int  hexDigits  =  str.length()  -  2;  //  drop  0x    [BUGGY]  if(hexDigits  <  0  ||  str.startsWith( "-0 "))  {  //  drop  0;  }  [BUGGY]    hexDigits--;  }  if  (hexDigits  >  8)  {  //  too  many  for  an  int  return  createLong(str);  }  return  createInteger(str);  }  char  lastChar  =  str.charAt(str.length()  -  1);  String  mant;  String  dec;  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  	projects/Lang7/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	457	458	1	replace	if(hexDigits  <  0  ||  str.startsWith( "-0 "))  {  //  drop  0;  }	  if(hexDigits    <    0    ||    str.startsWith(   "-   "))    {    //    drop    -    hexDigits--;    }    	non-compiled	[CE]  ')'  expected	8	None	replace
31	[BUG]  [BUGGY]  Integer  hexDigits  =  str.length()  -  2;  [CE]  ')'  expected  [FE]            AssertionError    [CONTEXT]    return  null;  }  if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(   "A  blank  string  is  not  a  valid  number   ");  }  if  (str.startsWith(   "--   "))  {  return  null;  }  if  (str.startsWith(   "0x   ")  ||  str.startsWith(   "-0x   ")  ||  str.startsWith(   "0X   ")  ||  str.startsWith(   "-0X   "))  {  int  hexDigits  =  str.length()  -  2;  //  drop  0x    [BUGGY]  Integer  hexDigits  =  str.length()  -  2;  [BUGGY]    if  (str.startsWith(   "-   "))  {  //  drop  -    hexDigits--;  hexDigits--;  }  if  (hexDigits  >  8)  {  //  too  many  for  an  int  return  createLong(str);  }  return  createInteger(str);  }  char  lastChar  =  str.charAt(str.length()  -  1);  String  mant;  String  dec;  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  	projects/Lang7/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	457	458	1	replace	Integer  hexDigits  =  str.length()  -  2;	      Integer    hexDigits    =    str.length();    	non-compiled	[CE]  ')'  expected	3	None	replace
32	[BUG]  [BUGGY]  Integer  hexDigits  =  str.length()  +  2;  [CE]  ')'  expected  [FE]              AssertionError    [CONTEXT]    return  null;  }  if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(   "A  blank  string  is  not  a  valid  number   ");  }  if  (str.startsWith(   "--   "))  {  return  null;  }  if  (str.startsWith(   "0x   ")  ||  str.startsWith(   "-0x   ")  ||  str.startsWith(   "0X   ")  ||  str.startsWith(   "-0X   "))  {  int  hexDigits  =  str.length()  -  2;  //  drop  0x    [BUGGY]  Integer  hexDigits  =  str.length()  +  2;  [BUGGY]    if  (str.startsWith(   "-   "))  {  //  drop  -    hexDigits--;  hexDigits--;  }  if  (hexDigits  >  8)  {  //  too  many  for  an  int  return  createLong(str);  }  return  createInteger(str);  }  char  lastChar  =  str.charAt(str.length()  -  1);  String  mant;  String  dec;  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  	projects/Lang7/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	457	458	1	replace	Integer  hexDigits  =  str.length()  +  2;	      Integer    hexDigits    =    str.length();    	non-compiled	[CE]  ')'  expected	3	None	replace
33	[BUG]  [BUGGY]  int  hexDigits  =  str.length()  -  2;  [CE]  ')'  expected  [FE]                AssertionError    [CONTEXT]    return  null;  }  if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(   "A  blank  string  is  not  a  valid  number   ");  }  if  (str.startsWith(   "--   "))  {  return  null;  }  if  (str.startsWith(   "0x   ")  ||  str.startsWith(   "-0x   ")  ||  str.startsWith(   "0X   ")  ||  str.startsWith(   "-0X   "))  {  int  hexDigits  =  str.length()  -  2;  //  drop  0x    [BUGGY]  int  hexDigits  =  str.length()  -  2;  [BUGGY]    if  (str.startsWith(   "-   "))  {  //  drop  -    hexDigits--;  hexDigits--;  }  if  (hexDigits  >  8)  {  //  too  many  for  an  int  return  createLong(str);  }  return  createInteger(str);  }  char  lastChar  =  str.charAt(str.length()  -  1);  String  mant;  String  dec;  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  	projects/Lang7/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	457	458	1	replace	int  hexDigits  =  str.length()  -  2;	      Integer    hexDigits    =    str.length();    	non-compiled	[CE]  ')'  expected	3	None	replace
34	[BUG]  [BUGGY]  hexDigits  =  str.charAt(hexDigits  -  3);  [CE]  ')'  expected  [FE]            AssertionError    [CONTEXT]    return  null;  }  if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(   "A  blank  string  is  not  a  valid  number   ");  }  if  (str.startsWith(   "--   "))  {  return  null;  }  if  (str.startsWith(   "0x   ")  ||  str.startsWith(   "-0x   ")  ||  str.startsWith(   "0X   ")  ||  str.startsWith(   "-0X   "))  {  int  hexDigits  =  str.length()  -  2;  //  drop  0x    [BUGGY]  hexDigits  =  str.charAt(hexDigits  -  3);  [BUGGY]    if  (str.startsWith(   "-   "))  {  //  drop  -    hexDigits--;  hexDigits--;  }  if  (hexDigits  >  8)  {  //  too  many  for  an  int  return  createLong(str);  }  return  createInteger(str);  }  char  lastChar  =  str.charAt(str.length()  -  1);  String  mant;  String  dec;  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  	projects/Lang7/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	457	458	1	replace	hexDigits  =  str.charAt(hexDigits  -  3);	      hexDigits    =    str.charAt(hexDigits    -    1);    	non-compiled	[CE]  ')'  expected	15	None	replace
35	[BUG]  [BUGGY]  hexDigits  =  str.charAt(hexDigits  -  4);  [CE]  ')'  expected  [FE]              AssertionError    [CONTEXT]    return  null;  }  if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(   "A  blank  string  is  not  a  valid  number   ");  }  if  (str.startsWith(   "--   "))  {  return  null;  }  if  (str.startsWith(   "0x   ")  ||  str.startsWith(   "-0x   ")  ||  str.startsWith(   "0X   ")  ||  str.startsWith(   "-0X   "))  {  int  hexDigits  =  str.length()  -  2;  //  drop  0x    [BUGGY]  hexDigits  =  str.charAt(hexDigits  -  4);  [BUGGY]    if  (str.startsWith(   "-   "))  {  //  drop  -    hexDigits--;  hexDigits--;  }  if  (hexDigits  >  8)  {  //  too  many  for  an  int  return  createLong(str);  }  return  createInteger(str);  }  char  lastChar  =  str.charAt(str.length()  -  1);  String  mant;  String  dec;  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  	projects/Lang7/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	457	458	1	replace	hexDigits  =  str.charAt(hexDigits  -  4);	      hexDigits    =    str.charAt(hexDigits    -    1);    	non-compiled	[CE]  ')'  expected	15	None	replace
36	[BUG]  [BUGGY]  if(hexDigits  <  8)  {  //  drop  0x;  }  [CE]  ')'  expected  [FE]        AssertionError    [CONTEXT]    return  null;  }  if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(   "A  blank  string  is  not  a  valid  number   ");  }  if  (str.startsWith(   "--   "))  {  return  null;  }  if  (str.startsWith(   "0x   ")  ||  str.startsWith(   "-0x   ")  ||  str.startsWith(   "0X   ")  ||  str.startsWith(   "-0X   "))  {  int  hexDigits  =  str.length()  -  2;  //  drop  0x    [BUGGY]  if(hexDigits  <  8)  {  //  drop  0x;  }  [BUGGY]    hexDigits--;  }  if  (hexDigits  >  8)  {  //  too  many  for  an  int  return  createLong(str);  }  return  createInteger(str);  }  char  lastChar  =  str.charAt(str.length()  -  1);  String  mant;  String  dec;  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  	projects/Lang7/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	457	458	1	replace	if(hexDigits  <  8)  {  //  drop  0x;  }	  if(hexDigits    <    0)    {    //    drop    -    hexDigits--;    }    	non-compiled	[CE]  ')'  expected	10	None	replace
37	[BUG]  [BUGGY]  if(hexDigits  <  8)  {  //  drop  -1;  }  [CE]  ')'  expected  [FE]          AssertionError    [CONTEXT]    return  null;  }  if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(   "A  blank  string  is  not  a  valid  number   ");  }  if  (str.startsWith(   "--   "))  {  return  null;  }  if  (str.startsWith(   "0x   ")  ||  str.startsWith(   "-0x   ")  ||  str.startsWith(   "0X   ")  ||  str.startsWith(   "-0X   "))  {  int  hexDigits  =  str.length()  -  2;  //  drop  0x    [BUGGY]  if(hexDigits  <  8)  {  //  drop  -1;  }  [BUGGY]    hexDigits--;  }  if  (hexDigits  >  8)  {  //  too  many  for  an  int  return  createLong(str);  }  return  createInteger(str);  }  char  lastChar  =  str.charAt(str.length()  -  1);  String  mant;  String  dec;  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  	projects/Lang7/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	457	458	1	replace	if(hexDigits  <  8)  {  //  drop  -1;  }	  if(hexDigits    <    0)    {    //    drop    -    hexDigits--;    }    	non-compiled	[CE]  ')'  expected	10	None	replace
38	[BUG]  [BUGGY]  Integer  hexDigits  =  str.lastIndexOf( "0x ");  [CE]  ')'  expected  [FE]                AssertionError    [CONTEXT]    return  null;  }  if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(   "A  blank  string  is  not  a  valid  number   ");  }  if  (str.startsWith(   "--   "))  {  return  null;  }  if  (str.startsWith(   "0x   ")  ||  str.startsWith(   "-0x   ")  ||  str.startsWith(   "0X   ")  ||  str.startsWith(   "-0X   "))  {  int  hexDigits  =  str.length()  -  2;  //  drop  0x    [BUGGY]  Integer  hexDigits  =  str.lastIndexOf( "0x ");  [BUGGY]    if  (str.startsWith(   "-   "))  {  //  drop  -    hexDigits--;  hexDigits--;  }  if  (hexDigits  >  8)  {  //  too  many  for  an  int  return  createLong(str);  }  return  createInteger(str);  }  char  lastChar  =  str.charAt(str.length()  -  1);  String  mant;  String  dec;  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  	projects/Lang7/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	457	458	1	replace	Integer  hexDigits  =  str.lastIndexOf( "0x ");	      Integer    hexDigits    =    str.indexOf(   "0x   ");    	non-compiled	[CE]  ')'  expected	5	None	replace
39	[BUG]  [BUGGY]  Integer  hexDigits  =  str.lastIndexOf('0');  [CE]  ')'  expected  [FE]                  AssertionError    [CONTEXT]    return  null;  }  if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(   "A  blank  string  is  not  a  valid  number   ");  }  if  (str.startsWith(   "--   "))  {  return  null;  }  if  (str.startsWith(   "0x   ")  ||  str.startsWith(   "-0x   ")  ||  str.startsWith(   "0X   ")  ||  str.startsWith(   "-0X   "))  {  int  hexDigits  =  str.length()  -  2;  //  drop  0x    [BUGGY]  Integer  hexDigits  =  str.lastIndexOf('0');  [BUGGY]    if  (str.startsWith(   "-   "))  {  //  drop  -    hexDigits--;  hexDigits--;  }  if  (hexDigits  >  8)  {  //  too  many  for  an  int  return  createLong(str);  }  return  createInteger(str);  }  char  lastChar  =  str.charAt(str.length()  -  1);  String  mant;  String  dec;  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  	projects/Lang7/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	457	458	1	replace	Integer  hexDigits  =  str.lastIndexOf('0');	      Integer    hexDigits    =    str.indexOf(   "0x   ");    	non-compiled	[CE]  ')'  expected	5	None	replace
40	[BUG]  [BUGGY]  char  hexDigits  =  str.length();  [CE]  ')'  expected  [FE]          AssertionError    [CONTEXT]    return  null;  }  if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(   "A  blank  string  is  not  a  valid  number   ");  }  if  (str.startsWith(   "--   "))  {  return  null;  }  if  (str.startsWith(   "0x   ")  ||  str.startsWith(   "-0x   ")  ||  str.startsWith(   "0X   ")  ||  str.startsWith(   "-0X   "))  {  int  hexDigits  =  str.length()  -  2;  //  drop  0x    [BUGGY]  char  hexDigits  =  str.length();  [BUGGY]    if  (str.startsWith(   "-   "))  {  //  drop  -    hexDigits--;  hexDigits--;  }  if  (hexDigits  >  8)  {  //  too  many  for  an  int  return  createLong(str);  }  return  createInteger(str);  }  char  lastChar  =  str.charAt(str.length()  -  1);  String  mant;  String  dec;  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  	projects/Lang7/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	457	458	1	replace	char  hexDigits  =  str.length();	      int    hexDigits    =    str.length();    	non-compiled	[CE]  ')'  expected	2	None	replace
41	[BUG]  [BUGGY]  int  hexDigits  =  str.length()  +  2;  [CE]  ')'  expected  [FE]            AssertionError    [CONTEXT]    return  null;  }  if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(   "A  blank  string  is  not  a  valid  number   ");  }  if  (str.startsWith(   "--   "))  {  return  null;  }  if  (str.startsWith(   "0x   ")  ||  str.startsWith(   "-0x   ")  ||  str.startsWith(   "0X   ")  ||  str.startsWith(   "-0X   "))  {  int  hexDigits  =  str.length()  -  2;  //  drop  0x    [BUGGY]  int  hexDigits  =  str.length()  +  2;  [BUGGY]    if  (str.startsWith(   "-   "))  {  //  drop  -    hexDigits--;  hexDigits--;  }  if  (hexDigits  >  8)  {  //  too  many  for  an  int  return  createLong(str);  }  return  createInteger(str);  }  char  lastChar  =  str.charAt(str.length()  -  1);  String  mant;  String  dec;  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  	projects/Lang7/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	457	458	1	replace	int  hexDigits  =  str.length()  +  2;	      int    hexDigits    =    str.length();    	non-compiled	[CE]  ')'  expected	2	None	replace
42	[BUG]  [BUGGY]  Integer  hexDigits  =  str.indexOf('0',  4);  [CE]  ')'  expected  [FE]              AssertionError    [CONTEXT]    return  null;  }  if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(   "A  blank  string  is  not  a  valid  number   ");  }  if  (str.startsWith(   "--   "))  {  return  null;  }  if  (str.startsWith(   "0x   ")  ||  str.startsWith(   "-0x   ")  ||  str.startsWith(   "0X   ")  ||  str.startsWith(   "-0X   "))  {  int  hexDigits  =  str.length()  -  2;  //  drop  0x    [BUGGY]  Integer  hexDigits  =  str.indexOf('0',  4);  [BUGGY]    if  (str.startsWith(   "-   "))  {  //  drop  -    hexDigits--;  hexDigits--;  }  if  (hexDigits  >  8)  {  //  too  many  for  an  int  return  createLong(str);  }  return  createInteger(str);  }  char  lastChar  =  str.charAt(str.length()  -  1);  String  mant;  String  dec;  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  	projects/Lang7/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	457	458	1	replace	Integer  hexDigits  =  str.indexOf('0',  4);	      Integer    hexDigits    =    str.indexOf('0');    	non-compiled	[CE]  ')'  expected	4	None	replace
43	[BUG]  [BUGGY]  Integer  hexDigits  =  str.indexOf('0')+  1;  [CE]  ')'  expected  [FE]                AssertionError    [CONTEXT]    return  null;  }  if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(   "A  blank  string  is  not  a  valid  number   ");  }  if  (str.startsWith(   "--   "))  {  return  null;  }  if  (str.startsWith(   "0x   ")  ||  str.startsWith(   "-0x   ")  ||  str.startsWith(   "0X   ")  ||  str.startsWith(   "-0X   "))  {  int  hexDigits  =  str.length()  -  2;  //  drop  0x    [BUGGY]  Integer  hexDigits  =  str.indexOf('0')+  1;  [BUGGY]    if  (str.startsWith(   "-   "))  {  //  drop  -    hexDigits--;  hexDigits--;  }  if  (hexDigits  >  8)  {  //  too  many  for  an  int  return  createLong(str);  }  return  createInteger(str);  }  char  lastChar  =  str.charAt(str.length()  -  1);  String  mant;  String  dec;  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  	projects/Lang7/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	457	458	1	replace	Integer  hexDigits  =  str.indexOf('0')+  1;	      Integer    hexDigits    =    str.indexOf('0');    	non-compiled	[CE]  ')'  expected	4	None	replace
44	[BUG]  [BUGGY]  Integer  hexDigits  =  str.indexOf('0',  1);  [CE]  ')'  expected  [FE]                  AssertionError    [CONTEXT]    return  null;  }  if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(   "A  blank  string  is  not  a  valid  number   ");  }  if  (str.startsWith(   "--   "))  {  return  null;  }  if  (str.startsWith(   "0x   ")  ||  str.startsWith(   "-0x   ")  ||  str.startsWith(   "0X   ")  ||  str.startsWith(   "-0X   "))  {  int  hexDigits  =  str.length()  -  2;  //  drop  0x    [BUGGY]  Integer  hexDigits  =  str.indexOf('0',  1);  [BUGGY]    if  (str.startsWith(   "-   "))  {  //  drop  -    hexDigits--;  hexDigits--;  }  if  (hexDigits  >  8)  {  //  too  many  for  an  int  return  createLong(str);  }  return  createInteger(str);  }  char  lastChar  =  str.charAt(str.length()  -  1);  String  mant;  String  dec;  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  	projects/Lang7/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	457	458	1	replace	Integer  hexDigits  =  str.indexOf('0',  1);	      Integer    hexDigits    =    str.indexOf('0');    	non-compiled	[CE]  ')'  expected	4	None	replace
45	[BUG]  [BUGGY]  if(hexDigits  >  8)  {  if(str.startsWith( "- "))  {  //  drop  0;  }  [CE]  ')'  expected  [FE]        AssertionError    [CONTEXT]    return  null;  }  if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(   "A  blank  string  is  not  a  valid  number   ");  }  if  (str.startsWith(   "--   "))  {  return  null;  }  if  (str.startsWith(   "0x   ")  ||  str.startsWith(   "-0x   ")  ||  str.startsWith(   "0X   ")  ||  str.startsWith(   "-0X   "))  {  int  hexDigits  =  str.length()  -  2;  //  drop  0x    [BUGGY]  if(hexDigits  >  8)  {  if(str.startsWith( "- "))  {  //  drop  0;  }  [BUGGY]    hexDigits--;  }  if  (hexDigits  >  8)  {  //  too  many  for  an  int  return  createLong(str);  }  return  createInteger(str);  }  char  lastChar  =  str.charAt(str.length()  -  1);  String  mant;  String  dec;  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  	projects/Lang7/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	457	458	1	replace	if(hexDigits  >  8)  {  if(str.startsWith( "- "))  {  //  drop  0;  }	  if(hexDigits    >    0)    {    if    (str.startsWith(   "-   "))    {    //    drop    -    hexDigits--;    }    	non-compiled	[CE]  ')'  expected	6	None	replace
46	[BUG]  [BUGGY]  if(hexDigits  <  8)  {  if(str.startsWith( "- "))  {  //  drop  0;  }  [CE]  ')'  expected  [FE]          AssertionError    [CONTEXT]    return  null;  }  if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(   "A  blank  string  is  not  a  valid  number   ");  }  if  (str.startsWith(   "--   "))  {  return  null;  }  if  (str.startsWith(   "0x   ")  ||  str.startsWith(   "-0x   ")  ||  str.startsWith(   "0X   ")  ||  str.startsWith(   "-0X   "))  {  int  hexDigits  =  str.length()  -  2;  //  drop  0x    [BUGGY]  if(hexDigits  <  8)  {  if(str.startsWith( "- "))  {  //  drop  0;  }  [BUGGY]    hexDigits--;  }  if  (hexDigits  >  8)  {  //  too  many  for  an  int  return  createLong(str);  }  return  createInteger(str);  }  char  lastChar  =  str.charAt(str.length()  -  1);  String  mant;  String  dec;  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  	projects/Lang7/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	457	458	1	replace	if(hexDigits  <  8)  {  if(str.startsWith( "- "))  {  //  drop  0;  }	  if(hexDigits    >    0)    {    if    (str.startsWith(   "-   "))    {    //    drop    -    hexDigits--;    }    	non-compiled	[CE]  ')'  expected	6	None	replace
47	[BUG]  [BUGGY]  if(hexDigits  >  8)  {  if(str.startsWith( "- "))  {  //  drop  -1;  }  [CE]  ')'  expected  [FE]            AssertionError    [CONTEXT]    return  null;  }  if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(   "A  blank  string  is  not  a  valid  number   ");  }  if  (str.startsWith(   "--   "))  {  return  null;  }  if  (str.startsWith(   "0x   ")  ||  str.startsWith(   "-0x   ")  ||  str.startsWith(   "0X   ")  ||  str.startsWith(   "-0X   "))  {  int  hexDigits  =  str.length()  -  2;  //  drop  0x    [BUGGY]  if(hexDigits  >  8)  {  if(str.startsWith( "- "))  {  //  drop  -1;  }  [BUGGY]    hexDigits--;  }  if  (hexDigits  >  8)  {  //  too  many  for  an  int  return  createLong(str);  }  return  createInteger(str);  }  char  lastChar  =  str.charAt(str.length()  -  1);  String  mant;  String  dec;  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  	projects/Lang7/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	457	458	1	replace	if(hexDigits  >  8)  {  if(str.startsWith( "- "))  {  //  drop  -1;  }	  if(hexDigits    >    0)    {    if    (str.startsWith(   "-   "))    {    //    drop    -    hexDigits--;    }    	non-compiled	[CE]  ')'  expected	6	None	replace
48	[BUG]  [BUGGY]  if(hexDigits  <  0  ||  str.startsWith( "- "))  {  return  null;  [CE]  ')'  expected  [FE]          AssertionError    [CONTEXT]    return  null;  }  if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(   "A  blank  string  is  not  a  valid  number   ");  }  if  (str.startsWith(   "--   "))  {  return  null;  }  if  (str.startsWith(   "0x   ")  ||  str.startsWith(   "-0x   ")  ||  str.startsWith(   "0X   ")  ||  str.startsWith(   "-0X   "))  {  int  hexDigits  =  str.length()  -  2;  //  drop  0x    [BUGGY]  if(hexDigits  <  0  ||  str.startsWith( "- "))  {  return  null;  [BUGGY]    hexDigits--;  }  if  (hexDigits  >  8)  {  //  too  many  for  an  int  return  createLong(str);  }  return  createInteger(str);  }  char  lastChar  =  str.charAt(str.length()  -  1);  String  mant;  String  dec;  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  	projects/Lang7/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	457	458	1	replace	if(hexDigits  <  0  ||  str.startsWith( "- "))  {  return  null;	  if(hexDigits    <    0    ||    str.startsWith(   "-   "))    {    //    drop    -    hexDigits--;    	non-compiled	[CE]  ')'  expected	11	None	replace
49	[BUG]  [BUGGY]  if(hexDigits  <  0  ||  str.startsWith( "- "))  {  //  drop  1  -  hexDigits--;  [CE]  ')'  expected  [FE]            AssertionError    [CONTEXT]    return  null;  }  if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(   "A  blank  string  is  not  a  valid  number   ");  }  if  (str.startsWith(   "--   "))  {  return  null;  }  if  (str.startsWith(   "0x   ")  ||  str.startsWith(   "-0x   ")  ||  str.startsWith(   "0X   ")  ||  str.startsWith(   "-0X   "))  {  int  hexDigits  =  str.length()  -  2;  //  drop  0x    [BUGGY]  if(hexDigits  <  0  ||  str.startsWith( "- "))  {  //  drop  1  -  hexDigits--;  [BUGGY]    hexDigits--;  }  if  (hexDigits  >  8)  {  //  too  many  for  an  int  return  createLong(str);  }  return  createInteger(str);  }  char  lastChar  =  str.charAt(str.length()  -  1);  String  mant;  String  dec;  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  	projects/Lang7/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	457	458	1	replace	if(hexDigits  <  0  ||  str.startsWith( "- "))  {  //  drop  1  -  hexDigits--;	  if(hexDigits    <    0    ||    str.startsWith(   "-   "))    {    //    drop    -    hexDigits--;    	non-compiled	[CE]  ')'  expected	11	None	replace
50	[BUG]  [BUGGY]  if(hexDigits  <  0  ||  str.startsWith( "- "))  {  [CE]  ')'  expected  [FE]              AssertionError    [CONTEXT]    return  null;  }  if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(   "A  blank  string  is  not  a  valid  number   ");  }  if  (str.startsWith(   "--   "))  {  return  null;  }  if  (str.startsWith(   "0x   ")  ||  str.startsWith(   "-0x   ")  ||  str.startsWith(   "0X   ")  ||  str.startsWith(   "-0X   "))  {  int  hexDigits  =  str.length()  -  2;  //  drop  0x    [BUGGY]  if(hexDigits  <  0  ||  str.startsWith( "- "))  {  [BUGGY]    hexDigits--;  }  if  (hexDigits  >  8)  {  //  too  many  for  an  int  return  createLong(str);  }  return  createInteger(str);  }  char  lastChar  =  str.charAt(str.length()  -  1);  String  mant;  String  dec;  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  	projects/Lang7/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	457	458	1	replace	if(hexDigits  <  0  ||  str.startsWith( "- "))  {	  if(hexDigits    <    0    ||    str.startsWith(   "-   "))    {    //    drop    -    hexDigits--;    	non-compiled	[CE]  ')'  expected	11	None	replace
51	[BUG]  [BUGGY]  Integer  hexDigits  =  createInteger(str.length());  [CE]  ')'  expected  [FE]        AssertionError    [CONTEXT]    return  null;  }  if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(   "A  blank  string  is  not  a  valid  number   ");  }  if  (str.startsWith(   "--   "))  {  return  null;  }  if  (str.startsWith(   "0x   ")  ||  str.startsWith(   "-0x   ")  ||  str.startsWith(   "0X   ")  ||  str.startsWith(   "-0X   "))  {  int  hexDigits  =  str.length()  -  2;  //  drop  0x    [BUGGY]  Integer  hexDigits  =  createInteger(str.length());  [BUGGY]    if  (str.startsWith(   "-   "))  {  //  drop  -    hexDigits--;  hexDigits--;  }  if  (hexDigits  >  8)  {  //  too  many  for  an  int  return  createLong(str);  }  return  createInteger(str);  }  char  lastChar  =  str.charAt(str.length()  -  1);  String  mant;  String  dec;  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  	projects/Lang7/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	457	458	1	replace	Integer  hexDigits  =  createInteger(str.length());	      Integer    hexDigits    =    createInteger(str);    	non-compiled	[CE]  ')'  expected	13	None	replace
52	[BUG]  [BUGGY]  Integer  hexDigits  =  createInteger(0);  [CE]  ')'  expected  [FE]          AssertionError    [CONTEXT]    return  null;  }  if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(   "A  blank  string  is  not  a  valid  number   ");  }  if  (str.startsWith(   "--   "))  {  return  null;  }  if  (str.startsWith(   "0x   ")  ||  str.startsWith(   "-0x   ")  ||  str.startsWith(   "0X   ")  ||  str.startsWith(   "-0X   "))  {  int  hexDigits  =  str.length()  -  2;  //  drop  0x    [BUGGY]  Integer  hexDigits  =  createInteger(0);  [BUGGY]    if  (str.startsWith(   "-   "))  {  //  drop  -    hexDigits--;  hexDigits--;  }  if  (hexDigits  >  8)  {  //  too  many  for  an  int  return  createLong(str);  }  return  createInteger(str);  }  char  lastChar  =  str.charAt(str.length()  -  1);  String  mant;  String  dec;  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  	projects/Lang7/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	457	458	1	replace	Integer  hexDigits  =  createInteger(0);	      Integer    hexDigits    =    createInteger(str);    	non-compiled	[CE]  ')'  expected	13	None	replace
53	[BUG]  [BUGGY]  Integer  hexDigits  =  createInteger(str.length()  -  2);  [CE]  ')'  expected  [FE]            AssertionError    [CONTEXT]    return  null;  }  if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(   "A  blank  string  is  not  a  valid  number   ");  }  if  (str.startsWith(   "--   "))  {  return  null;  }  if  (str.startsWith(   "0x   ")  ||  str.startsWith(   "-0x   ")  ||  str.startsWith(   "0X   ")  ||  str.startsWith(   "-0X   "))  {  int  hexDigits  =  str.length()  -  2;  //  drop  0x    [BUGGY]  Integer  hexDigits  =  createInteger(str.length()  -  2);  [BUGGY]    if  (str.startsWith(   "-   "))  {  //  drop  -    hexDigits--;  hexDigits--;  }  if  (hexDigits  >  8)  {  //  too  many  for  an  int  return  createLong(str);  }  return  createInteger(str);  }  char  lastChar  =  str.charAt(str.length()  -  1);  String  mant;  String  dec;  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  	projects/Lang7/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	457	458	1	replace	Integer  hexDigits  =  createInteger(str.length()  -  2);	      Integer    hexDigits    =    createInteger(str);    	non-compiled	[CE]  ')'  expected	13	None	replace
54	[BUG]  [BUGGY]  if(hexDigits  <  0  ||  str.startsWith( "-0 "))  {  //  drop  0xDigits--;  }  [CE]  ')'  expected  [FE]            AssertionError    [CONTEXT]    return  null;  }  if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(   "A  blank  string  is  not  a  valid  number   ");  }  if  (str.startsWith(   "--   "))  {  return  null;  }  if  (str.startsWith(   "0x   ")  ||  str.startsWith(   "-0x   ")  ||  str.startsWith(   "0X   ")  ||  str.startsWith(   "-0X   "))  {  int  hexDigits  =  str.length()  -  2;  //  drop  0x    [BUGGY]  if(hexDigits  <  0  ||  str.startsWith( "-0 "))  {  //  drop  0xDigits--;  }  [BUGGY]    hexDigits--;  }  if  (hexDigits  >  8)  {  //  too  many  for  an  int  return  createLong(str);  }  return  createInteger(str);  }  char  lastChar  =  str.charAt(str.length()  -  1);  String  mant;  String  dec;  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  	projects/Lang7/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	457	458	1	replace	if(hexDigits  <  0  ||  str.startsWith( "-0 "))  {  //  drop  0xDigits--;  }	  if(hexDigits    <    0    ||    str.startsWith(   "-   "))    {    //    drop    -    hexDigits--;    }    	non-compiled	[CE]  ')'  expected	8	None	replace
55	[BUG]  [BUGGY]  if(hexDigits  <  0  ||  str.startsWith( "-0 "))  {  //  drop  0x-hexDigits--;  }  [CE]  ')'  expected  [FE]              AssertionError    [CONTEXT]    return  null;  }  if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(   "A  blank  string  is  not  a  valid  number   ");  }  if  (str.startsWith(   "--   "))  {  return  null;  }  if  (str.startsWith(   "0x   ")  ||  str.startsWith(   "-0x   ")  ||  str.startsWith(   "0X   ")  ||  str.startsWith(   "-0X   "))  {  int  hexDigits  =  str.length()  -  2;  //  drop  0x    [BUGGY]  if(hexDigits  <  0  ||  str.startsWith( "-0 "))  {  //  drop  0x-hexDigits--;  }  [BUGGY]    hexDigits--;  }  if  (hexDigits  >  8)  {  //  too  many  for  an  int  return  createLong(str);  }  return  createInteger(str);  }  char  lastChar  =  str.charAt(str.length()  -  1);  String  mant;  String  dec;  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  	projects/Lang7/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	457	458	1	replace	if(hexDigits  <  0  ||  str.startsWith( "-0 "))  {  //  drop  0x-hexDigits--;  }	  if(hexDigits    <    0    ||    str.startsWith(   "-   "))    {    //    drop    -    hexDigits--;    }    	non-compiled	[CE]  ')'  expected	8	None	replace
56	[BUG]  [BUGGY]  Integer  hexDigits  =  str.indexOf('0',  2);  [CE]  ')'  expected  [FE]              AssertionError    [CONTEXT]    return  null;  }  if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(   "A  blank  string  is  not  a  valid  number   ");  }  if  (str.startsWith(   "--   "))  {  return  null;  }  if  (str.startsWith(   "0x   ")  ||  str.startsWith(   "-0x   ")  ||  str.startsWith(   "0X   ")  ||  str.startsWith(   "-0X   "))  {  int  hexDigits  =  str.length()  -  2;  //  drop  0x    [BUGGY]  Integer  hexDigits  =  str.indexOf('0',  2);  [BUGGY]    if  (str.startsWith(   "-   "))  {  //  drop  -    hexDigits--;  hexDigits--;  }  if  (hexDigits  >  8)  {  //  too  many  for  an  int  return  createLong(str);  }  return  createInteger(str);  }  char  lastChar  =  str.charAt(str.length()  -  1);  String  mant;  String  dec;  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  	projects/Lang7/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	457	458	1	replace	Integer  hexDigits  =  str.indexOf('0',  2);	      Integer    hexDigits    =    str.indexOf('0');    	non-compiled	[CE]  ')'  expected	4	None	replace
57	[BUG]  [BUGGY]  if(hexDigits  ==  0)  {  //  drop  0;  }  [CE]  ')'  expected  [FE]            AssertionError    [CONTEXT]    return  null;  }  if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(   "A  blank  string  is  not  a  valid  number   ");  }  if  (str.startsWith(   "--   "))  {  return  null;  }  if  (str.startsWith(   "0x   ")  ||  str.startsWith(   "-0x   ")  ||  str.startsWith(   "0X   ")  ||  str.startsWith(   "-0X   "))  {  int  hexDigits  =  str.length()  -  2;  //  drop  0x    [BUGGY]  if(hexDigits  ==  0)  {  //  drop  0;  }  [BUGGY]    hexDigits--;  }  if  (hexDigits  >  8)  {  //  too  many  for  an  int  return  createLong(str);  }  return  createInteger(str);  }  char  lastChar  =  str.charAt(str.length()  -  1);  String  mant;  String  dec;  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  	projects/Lang7/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	457	458	1	replace	if(hexDigits  ==  0)  {  //  drop  0;  }	  if(hexDigits    <    0)    {    //    drop    0;    }    	non-compiled	[CE]  ')'  expected	12	None	replace
58	[BUG]  [BUGGY]  if(hexDigits  <  0)  {  return  createLong(str);  }  [CE]  ')'  expected  [FE]              AssertionError    [CONTEXT]    return  null;  }  if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(   "A  blank  string  is  not  a  valid  number   ");  }  if  (str.startsWith(   "--   "))  {  return  null;  }  if  (str.startsWith(   "0x   ")  ||  str.startsWith(   "-0x   ")  ||  str.startsWith(   "0X   ")  ||  str.startsWith(   "-0X   "))  {  int  hexDigits  =  str.length()  -  2;  //  drop  0x    [BUGGY]  if(hexDigits  <  0)  {  return  createLong(str);  }  [BUGGY]    hexDigits--;  }  if  (hexDigits  >  8)  {  //  too  many  for  an  int  return  createLong(str);  }  return  createInteger(str);  }  char  lastChar  =  str.charAt(str.length()  -  1);  String  mant;  String  dec;  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  	projects/Lang7/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	457	458	1	replace	if(hexDigits  <  0)  {  return  createLong(str);  }	  if(hexDigits    <    0)    {    //    drop    0;    }    	non-compiled	[CE]  ')'  expected	12	None	replace
59	[BUG]  [BUGGY]  Integer  hexDigits  =  createBigInteger(str);  [CE]  ')'  expected  [FE]        AssertionError    [CONTEXT]    return  null;  }  if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(   "A  blank  string  is  not  a  valid  number   ");  }  if  (str.startsWith(   "--   "))  {  return  null;  }  if  (str.startsWith(   "0x   ")  ||  str.startsWith(   "-0x   ")  ||  str.startsWith(   "0X   ")  ||  str.startsWith(   "-0X   "))  {  int  hexDigits  =  str.length()  -  2;  //  drop  0x    [BUGGY]  Integer  hexDigits  =  createBigInteger(str);  [BUGGY]    if  (str.startsWith(   "-   "))  {  //  drop  -    hexDigits--;  hexDigits--;  }  if  (hexDigits  >  8)  {  //  too  many  for  an  int  return  createLong(str);  }  return  createInteger(str);  }  char  lastChar  =  str.charAt(str.length()  -  1);  String  mant;  String  dec;  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  	projects/Lang7/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	457	458	1	replace	Integer  hexDigits  =  createBigInteger(str);	      Integer    hexDigits    =    createInteger(str);    	non-compiled	[CE]  ')'  expected	13	None	replace
60	[BUG]  [BUGGY]  Integer  hexDigits  =  createInteger(hexDigits);  [CE]  ')'  expected  [FE]          AssertionError    [CONTEXT]    return  null;  }  if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(   "A  blank  string  is  not  a  valid  number   ");  }  if  (str.startsWith(   "--   "))  {  return  null;  }  if  (str.startsWith(   "0x   ")  ||  str.startsWith(   "-0x   ")  ||  str.startsWith(   "0X   ")  ||  str.startsWith(   "-0X   "))  {  int  hexDigits  =  str.length()  -  2;  //  drop  0x    [BUGGY]  Integer  hexDigits  =  createInteger(hexDigits);  [BUGGY]    if  (str.startsWith(   "-   "))  {  //  drop  -    hexDigits--;  hexDigits--;  }  if  (hexDigits  >  8)  {  //  too  many  for  an  int  return  createLong(str);  }  return  createInteger(str);  }  char  lastChar  =  str.charAt(str.length()  -  1);  String  mant;  String  dec;  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  	projects/Lang7/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	457	458	1	replace	Integer  hexDigits  =  createInteger(hexDigits);	      Integer    hexDigits    =    createInteger(str);    	non-compiled	[CE]  ')'  expected	13	None	replace
61	[BUG]  [BUGGY]  Integer  hexDigits  =  createLong(str);  [CE]  ')'  expected  [FE]            AssertionError    [CONTEXT]    return  null;  }  if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(   "A  blank  string  is  not  a  valid  number   ");  }  if  (str.startsWith(   "--   "))  {  return  null;  }  if  (str.startsWith(   "0x   ")  ||  str.startsWith(   "-0x   ")  ||  str.startsWith(   "0X   ")  ||  str.startsWith(   "-0X   "))  {  int  hexDigits  =  str.length()  -  2;  //  drop  0x    [BUGGY]  Integer  hexDigits  =  createLong(str);  [BUGGY]    if  (str.startsWith(   "-   "))  {  //  drop  -    hexDigits--;  hexDigits--;  }  if  (hexDigits  >  8)  {  //  too  many  for  an  int  return  createLong(str);  }  return  createInteger(str);  }  char  lastChar  =  str.charAt(str.length()  -  1);  String  mant;  String  dec;  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  	projects/Lang7/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	457	458	1	replace	Integer  hexDigits  =  createLong(str);	      Integer    hexDigits    =    createInteger(str);    	non-compiled	[CE]  ')'  expected	13	None	replace
62	[BUG]  [BUGGY]  if(hexDigits  >  0)  {  if  (str.startsWith( "-   "))  {  //  drop  -1;  }  [CE]  ')'  expected  [FE]              AssertionError    [CONTEXT]    return  null;  }  if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(   "A  blank  string  is  not  a  valid  number   ");  }  if  (str.startsWith(   "--   "))  {  return  null;  }  if  (str.startsWith(   "0x   ")  ||  str.startsWith(   "-0x   ")  ||  str.startsWith(   "0X   ")  ||  str.startsWith(   "-0X   "))  {  int  hexDigits  =  str.length()  -  2;  //  drop  0x    [BUGGY]  if(hexDigits  >  0)  {  if  (str.startsWith( "-   "))  {  //  drop  -1;  }  [BUGGY]    hexDigits--;  }  if  (hexDigits  >  8)  {  //  too  many  for  an  int  return  createLong(str);  }  return  createInteger(str);  }  char  lastChar  =  str.charAt(str.length()  -  1);  String  mant;  String  dec;  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  	projects/Lang7/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	457	458	1	replace	if(hexDigits  >  0)  {  if  (str.startsWith( "-   "))  {  //  drop  -1;  }	  if(hexDigits    <    8)    {    if    (str.startsWith(   "-   "))    {    //    drop    -1;    }    	non-compiled	[CE]  ')'  expected	9	None	replace
63	[BUG]  [BUGGY]  Integer  hexDigits  =  str.indexOf('-');  [CE]  ')'  expected  [FE]                AssertionError    [CONTEXT]    return  null;  }  if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(   "A  blank  string  is  not  a  valid  number   ");  }  if  (str.startsWith(   "--   "))  {  return  null;  }  if  (str.startsWith(   "0x   ")  ||  str.startsWith(   "-0x   ")  ||  str.startsWith(   "0X   ")  ||  str.startsWith(   "-0X   "))  {  int  hexDigits  =  str.length()  -  2;  //  drop  0x    [BUGGY]  Integer  hexDigits  =  str.indexOf('-');  [BUGGY]    if  (str.startsWith(   "-   "))  {  //  drop  -    hexDigits--;  hexDigits--;  }  if  (hexDigits  >  8)  {  //  too  many  for  an  int  return  createLong(str);  }  return  createInteger(str);  }  char  lastChar  =  str.charAt(str.length()  -  1);  String  mant;  String  dec;  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  	projects/Lang7/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	457	458	1	replace	Integer  hexDigits  =  str.indexOf('-');	      Integer    hexDigits    =    str.indexOf(   "0x   ");    	non-compiled	[CE]  ')'  expected	5	None	replace
64	[BUG]  [BUGGY]  if(hexDigits  >  8)  {  if  (str.startsWith( "-   "))  {  //  drop  -  hexDigits--;  }  [CE]  ')'  expected  [FE]          AssertionError    [CONTEXT]    return  null;  }  if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(   "A  blank  string  is  not  a  valid  number   ");  }  if  (str.startsWith(   "--   "))  {  return  null;  }  if  (str.startsWith(   "0x   ")  ||  str.startsWith(   "-0x   ")  ||  str.startsWith(   "0X   ")  ||  str.startsWith(   "-0X   "))  {  int  hexDigits  =  str.length()  -  2;  //  drop  0x    [BUGGY]  if(hexDigits  >  8)  {  if  (str.startsWith( "-   "))  {  //  drop  -  hexDigits--;  }  [BUGGY]    hexDigits--;  }  if  (hexDigits  >  8)  {  //  too  many  for  an  int  return  createLong(str);  }  return  createInteger(str);  }  char  lastChar  =  str.charAt(str.length()  -  1);  String  mant;  String  dec;  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  	projects/Lang7/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	457	458	1	replace	if(hexDigits  >  8)  {  if  (str.startsWith( "-   "))  {  //  drop  -  hexDigits--;  }	  if(hexDigits    <    8)    {    if    (str.startsWith(   "-   "))    {    //    drop    -    hexDigits--;    }    	non-compiled	[CE]  ')'  expected	7	None	replace
65	[BUG]  [BUGGY]  if(hexDigits  ==  0)  {  if(str.startsWith( "- "))  {  //  drop  -  hexDigits--;  }  [CE]  ')'  expected  [FE]        AssertionError    [CONTEXT]    return  null;  }  if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(   "A  blank  string  is  not  a  valid  number   ");  }  if  (str.startsWith(   "--   "))  {  return  null;  }  if  (str.startsWith(   "0x   ")  ||  str.startsWith(   "-0x   ")  ||  str.startsWith(   "0X   ")  ||  str.startsWith(   "-0X   "))  {  int  hexDigits  =  str.length()  -  2;  //  drop  0x    [BUGGY]  if(hexDigits  ==  0)  {  if(str.startsWith( "- "))  {  //  drop  -  hexDigits--;  }  [BUGGY]    hexDigits--;  }  if  (hexDigits  >  8)  {  //  too  many  for  an  int  return  createLong(str);  }  return  createInteger(str);  }  char  lastChar  =  str.charAt(str.length()  -  1);  String  mant;  String  dec;  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  	projects/Lang7/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	457	458	1	replace	if(hexDigits  ==  0)  {  if(str.startsWith( "- "))  {  //  drop  -  hexDigits--;  }	  if(hexDigits    >    0)    {    if    (str.startsWith(   "-   "))    {    //    drop    -    hexDigits--;    }    	non-compiled	[CE]  ')'  expected	6	None	replace
66	[BUG]  [BUGGY]  if(hexDigits  <  0)  {  if  (str.startsWith( "- "))  {  //  drop  -  hexDigits--;  }  [CE]  ')'  expected  [FE]          AssertionError    [CONTEXT]    return  null;  }  if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(   "A  blank  string  is  not  a  valid  number   ");  }  if  (str.startsWith(   "--   "))  {  return  null;  }  if  (str.startsWith(   "0x   ")  ||  str.startsWith(   "-0x   ")  ||  str.startsWith(   "0X   ")  ||  str.startsWith(   "-0X   "))  {  int  hexDigits  =  str.length()  -  2;  //  drop  0x    [BUGGY]  if(hexDigits  <  0)  {  if  (str.startsWith( "- "))  {  //  drop  -  hexDigits--;  }  [BUGGY]    hexDigits--;  }  if  (hexDigits  >  8)  {  //  too  many  for  an  int  return  createLong(str);  }  return  createInteger(str);  }  char  lastChar  =  str.charAt(str.length()  -  1);  String  mant;  String  dec;  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  	projects/Lang7/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	457	458	1	replace	if(hexDigits  <  0)  {  if  (str.startsWith( "- "))  {  //  drop  -  hexDigits--;  }	  if(hexDigits    >    0)    {    if    (str.startsWith(   "-   "))    {    //    drop    -    hexDigits--;    }    	non-compiled	[CE]  ')'  expected	6	None	replace
67	[BUG]  [BUGGY]  Integer  hexDigits  =  str.length()  *  2;  [CE]  ')'  expected  [FE]            AssertionError    [CONTEXT]    return  null;  }  if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(   "A  blank  string  is  not  a  valid  number   ");  }  if  (str.startsWith(   "--   "))  {  return  null;  }  if  (str.startsWith(   "0x   ")  ||  str.startsWith(   "-0x   ")  ||  str.startsWith(   "0X   ")  ||  str.startsWith(   "-0X   "))  {  int  hexDigits  =  str.length()  -  2;  //  drop  0x    [BUGGY]  Integer  hexDigits  =  str.length()  *  2;  [BUGGY]    if  (str.startsWith(   "-   "))  {  //  drop  -    hexDigits--;  hexDigits--;  }  if  (hexDigits  >  8)  {  //  too  many  for  an  int  return  createLong(str);  }  return  createInteger(str);  }  char  lastChar  =  str.charAt(str.length()  -  1);  String  mant;  String  dec;  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  	projects/Lang7/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	457	458	1	replace	Integer  hexDigits  =  str.length()  *  2;	      Integer    hexDigits    =    str.length();    	non-compiled	[CE]  ')'  expected	3	None	replace
68	[BUG]  [BUGGY]  if(hexDigits  <  0)  {  int  hexDigits  =  str.length();  if(hexDigits  <  0)  {  return  createInteger(str);  }  [CE]  ')'  expected  [FE]        AssertionError    [CONTEXT]    return  null;  }  if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(   "A  blank  string  is  not  a  valid  number   ");  }  if  (str.startsWith(   "--   "))  {  return  null;  }  if  (str.startsWith(   "0x   ")  ||  str.startsWith(   "-0x   ")  ||  str.startsWith(   "0X   ")  ||  str.startsWith(   "-0X   "))  {  int  hexDigits  =  str.length()  -  2;  //  drop  0x    [BUGGY]  if(hexDigits  <  0)  {  int  hexDigits  =  str.length();  if(hexDigits  <  0)  {  return  createInteger(str);  }  [BUGGY]    if  (str.startsWith(   "-   "))  {  //  drop  -    hexDigits--;  hexDigits--;  }  if  (hexDigits  >  8)  {  //  too  many  for  an  int  return  createLong(str);  }  return  createInteger(str);  }  char  lastChar  =  str.charAt(str.length()  -  1);  String  mant;  String  dec;  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  	projects/Lang7/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	457	458	1	replace	if(hexDigits  <  0)  {  int  hexDigits  =  str.length();  if(hexDigits  <  0)  {  return  createInteger(str);  }	      if(hexDigits    >    0)    {    int    hexDigits    =    str.length();    if(hexDigits    <    0)    {    return    createInteger(str);    }    	non-compiled	[CE]  ')'  expected	16	None	replace
69	[BUG]  [BUGGY]  if(hexDigits  <  0)  {  int  hexDigits  =  str.length()  -  2;  if(hexDigits  <  0)  {  return  createInteger(str);  }  [CE]  ')'  expected  [FE]          AssertionError    [CONTEXT]    return  null;  }  if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(   "A  blank  string  is  not  a  valid  number   ");  }  if  (str.startsWith(   "--   "))  {  return  null;  }  if  (str.startsWith(   "0x   ")  ||  str.startsWith(   "-0x   ")  ||  str.startsWith(   "0X   ")  ||  str.startsWith(   "-0X   "))  {  int  hexDigits  =  str.length()  -  2;  //  drop  0x    [BUGGY]  if(hexDigits  <  0)  {  int  hexDigits  =  str.length()  -  2;  if(hexDigits  <  0)  {  return  createInteger(str);  }  [BUGGY]    if  (str.startsWith(   "-   "))  {  //  drop  -    hexDigits--;  hexDigits--;  }  if  (hexDigits  >  8)  {  //  too  many  for  an  int  return  createLong(str);  }  return  createInteger(str);  }  char  lastChar  =  str.charAt(str.length()  -  1);  String  mant;  String  dec;  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  	projects/Lang7/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	457	458	1	replace	if(hexDigits  <  0)  {  int  hexDigits  =  str.length()  -  2;  if(hexDigits  <  0)  {  return  createInteger(str);  }	      if(hexDigits    >    0)    {    int    hexDigits    =    str.length();    if(hexDigits    <    0)    {    return    createInteger(str);    }    	non-compiled	[CE]  ')'  expected	16	None	replace
70	[BUG]  [BUGGY]  if(hexDigits  <  0)  {  int  hexDigits  =  str.length();  if(hexDigits  <  0)  {  return  createLong(str);  }  [CE]  ')'  expected  [FE]          AssertionError    [CONTEXT]    return  null;  }  if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(   "A  blank  string  is  not  a  valid  number   ");  }  if  (str.startsWith(   "--   "))  {  return  null;  }  if  (str.startsWith(   "0x   ")  ||  str.startsWith(   "-0x   ")  ||  str.startsWith(   "0X   ")  ||  str.startsWith(   "-0X   "))  {  int  hexDigits  =  str.length()  -  2;  //  drop  0x    [BUGGY]  if(hexDigits  <  0)  {  int  hexDigits  =  str.length();  if(hexDigits  <  0)  {  return  createLong(str);  }  [BUGGY]    if  (str.startsWith(   "-   "))  {  //  drop  -    hexDigits--;  hexDigits--;  }  if  (hexDigits  >  8)  {  //  too  many  for  an  int  return  createLong(str);  }  return  createInteger(str);  }  char  lastChar  =  str.charAt(str.length()  -  1);  String  mant;  String  dec;  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  	projects/Lang7/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	457	458	1	replace	if(hexDigits  <  0)  {  int  hexDigits  =  str.length();  if(hexDigits  <  0)  {  return  createLong(str);  }	      if(hexDigits    >    0)    {    int    hexDigits    =    str.length();    if(hexDigits    <    0)    {    return    createLong(str);    }    	non-compiled	[CE]  ')'  expected	17	None	replace
71	[BUG]  [BUGGY]  if(hexDigits  <  0  ||  str.startsWith( "-0 "))  {  [CE]  ')'  expected  [FE]          AssertionError    [CONTEXT]    return  null;  }  if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(   "A  blank  string  is  not  a  valid  number   ");  }  if  (str.startsWith(   "--   "))  {  return  null;  }  if  (str.startsWith(   "0x   ")  ||  str.startsWith(   "-0x   ")  ||  str.startsWith(   "0X   ")  ||  str.startsWith(   "-0X   "))  {  int  hexDigits  =  str.length()  -  2;  //  drop  0x    [BUGGY]  if(hexDigits  <  0  ||  str.startsWith( "-0 "))  {  [BUGGY]    hexDigits--;  }  if  (hexDigits  >  8)  {  //  too  many  for  an  int  return  createLong(str);  }  return  createInteger(str);  }  char  lastChar  =  str.charAt(str.length()  -  1);  String  mant;  String  dec;  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  	projects/Lang7/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	457	458	1	replace	if(hexDigits  <  0  ||  str.startsWith( "-0 "))  {	  if(hexDigits    <    0    ||    str.startsWith(   "-   "))    {    //    drop    -    hexDigits--;    	non-compiled	[CE]  ')'  expected	11	None	replace
72	[BUG]  [BUGGY]  if(hexDigits  <  0  ||  str.startsWith( "-00 "))  {  [CE]  ')'  expected  [FE]            AssertionError    [CONTEXT]    return  null;  }  if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(   "A  blank  string  is  not  a  valid  number   ");  }  if  (str.startsWith(   "--   "))  {  return  null;  }  if  (str.startsWith(   "0x   ")  ||  str.startsWith(   "-0x   ")  ||  str.startsWith(   "0X   ")  ||  str.startsWith(   "-0X   "))  {  int  hexDigits  =  str.length()  -  2;  //  drop  0x    [BUGGY]  if(hexDigits  <  0  ||  str.startsWith( "-00 "))  {  [BUGGY]    hexDigits--;  }  if  (hexDigits  >  8)  {  //  too  many  for  an  int  return  createLong(str);  }  return  createInteger(str);  }  char  lastChar  =  str.charAt(str.length()  -  1);  String  mant;  String  dec;  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  	projects/Lang7/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	457	458	1	replace	if(hexDigits  <  0  ||  str.startsWith( "-00 "))  {	  if(hexDigits    <    0    ||    str.startsWith(   "-   "))    {    //    drop    -    hexDigits--;    	non-compiled	[CE]  ')'  expected	11	None	replace
73	[BUG]  [BUGGY]  if(hexDigits  <  0  ||  str.startsWith( "-0 "))  {  return  null;  [CE]  ')'  expected  [FE]              AssertionError    [CONTEXT]    return  null;  }  if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(   "A  blank  string  is  not  a  valid  number   ");  }  if  (str.startsWith(   "--   "))  {  return  null;  }  if  (str.startsWith(   "0x   ")  ||  str.startsWith(   "-0x   ")  ||  str.startsWith(   "0X   ")  ||  str.startsWith(   "-0X   "))  {  int  hexDigits  =  str.length()  -  2;  //  drop  0x    [BUGGY]  if(hexDigits  <  0  ||  str.startsWith( "-0 "))  {  return  null;  [BUGGY]    hexDigits--;  }  if  (hexDigits  >  8)  {  //  too  many  for  an  int  return  createLong(str);  }  return  createInteger(str);  }  char  lastChar  =  str.charAt(str.length()  -  1);  String  mant;  String  dec;  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  	projects/Lang7/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	457	458	1	replace	if(hexDigits  <  0  ||  str.startsWith( "-0 "))  {  return  null;	  if(hexDigits    <    0    ||    str.startsWith(   "-   "))    {    //    drop    -    hexDigits--;    	non-compiled	[CE]  ')'  expected	11	None	replace
74	[BUG]  [BUGGY]  if(hexDigits  >  0)  {  //  drop  0x-hexDigits--;  }  [CE]  ')'  expected  [FE]        AssertionError    [CONTEXT]    return  null;  }  if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(   "A  blank  string  is  not  a  valid  number   ");  }  if  (str.startsWith(   "--   "))  {  return  null;  }  if  (str.startsWith(   "0x   ")  ||  str.startsWith(   "-0x   ")  ||  str.startsWith(   "0X   ")  ||  str.startsWith(   "-0X   "))  {  int  hexDigits  =  str.length()  -  2;  //  drop  0x    [BUGGY]  if(hexDigits  >  0)  {  //  drop  0x-hexDigits--;  }  [BUGGY]    hexDigits--;  }  if  (hexDigits  >  8)  {  //  too  many  for  an  int  return  createLong(str);  }  return  createInteger(str);  }  char  lastChar  =  str.charAt(str.length()  -  1);  String  mant;  String  dec;  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  	projects/Lang7/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	457	458	1	replace	if(hexDigits  >  0)  {  //  drop  0x-hexDigits--;  }	  if(hexDigits    >    0)    {    //    drop    -    hexDigits--;    }    	non-compiled	[CE]  ')'  expected	18	None	replace
75	[BUG]  [BUGGY]  if(hexDigits  <  0)  {  return  createInteger(str);  }  [CE]  ')'  expected  [FE]            AssertionError    [CONTEXT]    return  null;  }  if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(   "A  blank  string  is  not  a  valid  number   ");  }  if  (str.startsWith(   "--   "))  {  return  null;  }  if  (str.startsWith(   "0x   ")  ||  str.startsWith(   "-0x   ")  ||  str.startsWith(   "0X   ")  ||  str.startsWith(   "-0X   "))  {  int  hexDigits  =  str.length()  -  2;  //  drop  0x    [BUGGY]  if(hexDigits  <  0)  {  return  createInteger(str);  }  [BUGGY]    hexDigits--;  }  if  (hexDigits  >  8)  {  //  too  many  for  an  int  return  createLong(str);  }  return  createInteger(str);  }  char  lastChar  =  str.charAt(str.length()  -  1);  String  mant;  String  dec;  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  	projects/Lang7/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	457	458	1	replace	if(hexDigits  <  0)  {  return  createInteger(str);  }	  if(hexDigits    <    0)    {    //    drop    0;    }    	non-compiled	[CE]  ')'  expected	12	None	replace
76	[BUG]  [BUGGY]  if(hexDigits  >  0)  {  int  hexDigits  =  str.length()  -  2;  if(hexDigits  <  0)  {  return  createLong(str);  }  [CE]  ')'  expected  [FE]          AssertionError    [CONTEXT]    return  null;  }  if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(   "A  blank  string  is  not  a  valid  number   ");  }  if  (str.startsWith(   "--   "))  {  return  null;  }  if  (str.startsWith(   "0x   ")  ||  str.startsWith(   "-0x   ")  ||  str.startsWith(   "0X   ")  ||  str.startsWith(   "-0X   "))  {  int  hexDigits  =  str.length()  -  2;  //  drop  0x    [BUGGY]  if(hexDigits  >  0)  {  int  hexDigits  =  str.length()  -  2;  if(hexDigits  <  0)  {  return  createLong(str);  }  [BUGGY]    if  (str.startsWith(   "-   "))  {  //  drop  -    hexDigits--;  hexDigits--;  }  if  (hexDigits  >  8)  {  //  too  many  for  an  int  return  createLong(str);  }  return  createInteger(str);  }  char  lastChar  =  str.charAt(str.length()  -  1);  String  mant;  String  dec;  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  	projects/Lang7/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	457	458	1	replace	if(hexDigits  >  0)  {  int  hexDigits  =  str.length()  -  2;  if(hexDigits  <  0)  {  return  createLong(str);  }	      if(hexDigits    >    0)    {    int    hexDigits    =    str.length();    if(hexDigits    <    0)    {    return    createLong(str);    }    	non-compiled	[CE]  ')'  expected	17	None	replace
77	[BUG]  [BUGGY]  if(hexDigits  <  0)  {  int  hexDigits  =  str.length()  -  2;  if(hexDigits  <  0)  {  return  createLong(str);  }  [CE]  ')'  expected  [FE]            AssertionError    [CONTEXT]    return  null;  }  if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(   "A  blank  string  is  not  a  valid  number   ");  }  if  (str.startsWith(   "--   "))  {  return  null;  }  if  (str.startsWith(   "0x   ")  ||  str.startsWith(   "-0x   ")  ||  str.startsWith(   "0X   ")  ||  str.startsWith(   "-0X   "))  {  int  hexDigits  =  str.length()  -  2;  //  drop  0x    [BUGGY]  if(hexDigits  <  0)  {  int  hexDigits  =  str.length()  -  2;  if(hexDigits  <  0)  {  return  createLong(str);  }  [BUGGY]    if  (str.startsWith(   "-   "))  {  //  drop  -    hexDigits--;  hexDigits--;  }  if  (hexDigits  >  8)  {  //  too  many  for  an  int  return  createLong(str);  }  return  createInteger(str);  }  char  lastChar  =  str.charAt(str.length()  -  1);  String  mant;  String  dec;  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  	projects/Lang7/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	457	458	1	replace	if(hexDigits  <  0)  {  int  hexDigits  =  str.length()  -  2;  if(hexDigits  <  0)  {  return  createLong(str);  }	      if(hexDigits    >    0)    {    int    hexDigits    =    str.length();    if(hexDigits    <    0)    {    return    createLong(str);    }    	non-compiled	[CE]  ')'  expected	17	None	replace
78	[BUG]  [BUGGY]  hexDigits  =  str.charAt(hexDigits  -  1  +  1);  [CE]  ')'  expected  [FE]            AssertionError    [CONTEXT]    return  null;  }  if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(   "A  blank  string  is  not  a  valid  number   ");  }  if  (str.startsWith(   "--   "))  {  return  null;  }  if  (str.startsWith(   "0x   ")  ||  str.startsWith(   "-0x   ")  ||  str.startsWith(   "0X   ")  ||  str.startsWith(   "-0X   "))  {  int  hexDigits  =  str.length()  -  2;  //  drop  0x    [BUGGY]  hexDigits  =  str.charAt(hexDigits  -  1  +  1);  [BUGGY]    if  (str.startsWith(   "-   "))  {  //  drop  -    hexDigits--;  hexDigits--;  }  if  (hexDigits  >  8)  {  //  too  many  for  an  int  return  createLong(str);  }  return  createInteger(str);  }  char  lastChar  =  str.charAt(str.length()  -  1);  String  mant;  String  dec;  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  	projects/Lang7/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	457	458	1	replace	hexDigits  =  str.charAt(hexDigits  -  1  +  1);	      hexDigits    =    str.charAt(hexDigits    -    1);    	non-compiled	[CE]  ')'  expected	15	None	replace
79	[BUG]  [BUGGY]  Integer  hexDigits  =  createInteger(str,  dec);  [CE]  ')'  expected  [FE]        AssertionError    [CONTEXT]    return  null;  }  if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(   "A  blank  string  is  not  a  valid  number   ");  }  if  (str.startsWith(   "--   "))  {  return  null;  }  if  (str.startsWith(   "0x   ")  ||  str.startsWith(   "-0x   ")  ||  str.startsWith(   "0X   ")  ||  str.startsWith(   "-0X   "))  {  int  hexDigits  =  str.length()  -  2;  //  drop  0x    [BUGGY]  Integer  hexDigits  =  createInteger(str,  dec);  [BUGGY]    if  (str.startsWith(   "-   "))  {  //  drop  -    hexDigits--;  hexDigits--;  }  if  (hexDigits  >  8)  {  //  too  many  for  an  int  return  createLong(str);  }  return  createInteger(str);  }  char  lastChar  =  str.charAt(str.length()  -  1);  String  mant;  String  dec;  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  	projects/Lang7/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	457	458	1	replace	Integer  hexDigits  =  createInteger(str,  dec);	      Integer    hexDigits    =    createInteger(str);    	non-compiled	[CE]  ')'  expected	13	None	replace
80	[BUG]  [BUGGY]  if(hexDigits  <  0  ||  str.startsWith( "- "))  {  return  createInteger(str);  [CE]  ')'  expected  [FE]          AssertionError    [CONTEXT]    return  null;  }  if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(   "A  blank  string  is  not  a  valid  number   ");  }  if  (str.startsWith(   "--   "))  {  return  null;  }  if  (str.startsWith(   "0x   ")  ||  str.startsWith(   "-0x   ")  ||  str.startsWith(   "0X   ")  ||  str.startsWith(   "-0X   "))  {  int  hexDigits  =  str.length()  -  2;  //  drop  0x    [BUGGY]  if(hexDigits  <  0  ||  str.startsWith( "- "))  {  return  createInteger(str);  [BUGGY]    hexDigits--;  }  if  (hexDigits  >  8)  {  //  too  many  for  an  int  return  createLong(str);  }  return  createInteger(str);  }  char  lastChar  =  str.charAt(str.length()  -  1);  String  mant;  String  dec;  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  	projects/Lang7/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	457	458	1	replace	if(hexDigits  <  0  ||  str.startsWith( "- "))  {  return  createInteger(str);	  if(hexDigits    <    0    ||    str.startsWith(   "-   "))    {    //    drop    -    hexDigits--;    	non-compiled	[CE]  ')'  expected	11	None	replace
81	[BUG]  [BUGGY]  if(hexDigits  <  0  ||  str.startsWith( "- "))  {  return  createLong(str);  [CE]  ')'  expected  [FE]            AssertionError    [CONTEXT]    return  null;  }  if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(   "A  blank  string  is  not  a  valid  number   ");  }  if  (str.startsWith(   "--   "))  {  return  null;  }  if  (str.startsWith(   "0x   ")  ||  str.startsWith(   "-0x   ")  ||  str.startsWith(   "0X   ")  ||  str.startsWith(   "-0X   "))  {  int  hexDigits  =  str.length()  -  2;  //  drop  0x    [BUGGY]  if(hexDigits  <  0  ||  str.startsWith( "- "))  {  return  createLong(str);  [BUGGY]    hexDigits--;  }  if  (hexDigits  >  8)  {  //  too  many  for  an  int  return  createLong(str);  }  return  createInteger(str);  }  char  lastChar  =  str.charAt(str.length()  -  1);  String  mant;  String  dec;  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  	projects/Lang7/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	457	458	1	replace	if(hexDigits  <  0  ||  str.startsWith( "- "))  {  return  createLong(str);	  if(hexDigits    <    0    ||    str.startsWith(   "-   "))    {    //    drop    -    hexDigits--;    	non-compiled	[CE]  ')'  expected	11	None	replace
82	[BUG]  [BUGGY]  if(hexDigits  <  0)  {  if(str.startsWith( "- "))  {  return  createInteger(str);  }  [CE]  ')'  expected  [FE]          AssertionError    [CONTEXT]    return  null;  }  if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(   "A  blank  string  is  not  a  valid  number   ");  }  if  (str.startsWith(   "--   "))  {  return  null;  }  if  (str.startsWith(   "0x   ")  ||  str.startsWith(   "-0x   ")  ||  str.startsWith(   "0X   ")  ||  str.startsWith(   "-0X   "))  {  int  hexDigits  =  str.length()  -  2;  //  drop  0x    [BUGGY]  if(hexDigits  <  0)  {  if(str.startsWith( "- "))  {  return  createInteger(str);  }  [BUGGY]    hexDigits--;  }  if  (hexDigits  >  8)  {  //  too  many  for  an  int  return  createLong(str);  }  return  createInteger(str);  }  char  lastChar  =  str.charAt(str.length()  -  1);  String  mant;  String  dec;  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  	projects/Lang7/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	457	458	1	replace	if(hexDigits  <  0)  {  if(str.startsWith( "- "))  {  return  createInteger(str);  }	  if(hexDigits    <    8)    {    if    (str.startsWith(   "-   "))    {    //    drop    -    hexDigits--;    }    	non-compiled	[CE]  ')'  expected	7	None	replace
83	[BUG]  [BUGGY]  if(hexDigits  <  0)  {  if(str.startsWith( "- "))  {  return  null;  }  [CE]  ')'  expected  [FE]            AssertionError    [CONTEXT]    return  null;  }  if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(   "A  blank  string  is  not  a  valid  number   ");  }  if  (str.startsWith(   "--   "))  {  return  null;  }  if  (str.startsWith(   "0x   ")  ||  str.startsWith(   "-0x   ")  ||  str.startsWith(   "0X   ")  ||  str.startsWith(   "-0X   "))  {  int  hexDigits  =  str.length()  -  2;  //  drop  0x    [BUGGY]  if(hexDigits  <  0)  {  if(str.startsWith( "- "))  {  return  null;  }  [BUGGY]    hexDigits--;  }  if  (hexDigits  >  8)  {  //  too  many  for  an  int  return  createLong(str);  }  return  createInteger(str);  }  char  lastChar  =  str.charAt(str.length()  -  1);  String  mant;  String  dec;  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  	projects/Lang7/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	457	458	1	replace	if(hexDigits  <  0)  {  if(str.startsWith( "- "))  {  return  null;  }	  if(hexDigits    <    8)    {    if    (str.startsWith(   "-   "))    {    //    drop    -    hexDigits--;    }    	non-compiled	[CE]  ')'  expected	7	None	replace
84	[BUG]  [BUGGY]  if(hexDigits  >  0)  {  int  hexDigits  =  str.length()  -  2;  if(hexDigits  <  0)  {  return  createInteger(str);  }  [CE]  ')'  expected  [FE]        AssertionError    [CONTEXT]    return  null;  }  if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(   "A  blank  string  is  not  a  valid  number   ");  }  if  (str.startsWith(   "--   "))  {  return  null;  }  if  (str.startsWith(   "0x   ")  ||  str.startsWith(   "-0x   ")  ||  str.startsWith(   "0X   ")  ||  str.startsWith(   "-0X   "))  {  int  hexDigits  =  str.length()  -  2;  //  drop  0x    [BUGGY]  if(hexDigits  >  0)  {  int  hexDigits  =  str.length()  -  2;  if(hexDigits  <  0)  {  return  createInteger(str);  }  [BUGGY]    if  (str.startsWith(   "-   "))  {  //  drop  -    hexDigits--;  hexDigits--;  }  if  (hexDigits  >  8)  {  //  too  many  for  an  int  return  createLong(str);  }  return  createInteger(str);  }  char  lastChar  =  str.charAt(str.length()  -  1);  String  mant;  String  dec;  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  	projects/Lang7/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	457	458	1	replace	if(hexDigits  >  0)  {  int  hexDigits  =  str.length()  -  2;  if(hexDigits  <  0)  {  return  createInteger(str);  }	      if(hexDigits    >    0)    {    int    hexDigits    =    str.length();    if(hexDigits    <    0)    {    return    createInteger(str);    }    	non-compiled	[CE]  ')'  expected	16	None	replace
85	[BUG]  [BUGGY]  if(hexDigits  <  0  ||  str.startsWith( "- "))  {  return  createInteger(str);  }  [CE]  ')'  expected  [FE]            AssertionError    [CONTEXT]    return  null;  }  if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(   "A  blank  string  is  not  a  valid  number   ");  }  if  (str.startsWith(   "--   "))  {  return  null;  }  if  (str.startsWith(   "0x   ")  ||  str.startsWith(   "-0x   ")  ||  str.startsWith(   "0X   ")  ||  str.startsWith(   "-0X   "))  {  int  hexDigits  =  str.length()  -  2;  //  drop  0x    [BUGGY]  if(hexDigits  <  0  ||  str.startsWith( "- "))  {  return  createInteger(str);  }  [BUGGY]    hexDigits--;  }  if  (hexDigits  >  8)  {  //  too  many  for  an  int  return  createLong(str);  }  return  createInteger(str);  }  char  lastChar  =  str.charAt(str.length()  -  1);  String  mant;  String  dec;  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  	projects/Lang7/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	457	458	1	replace	if(hexDigits  <  0  ||  str.startsWith( "- "))  {  return  createInteger(str);  }	  if(hexDigits    <    0    ||    str.startsWith(   "-   "))    {    //    drop    -    hexDigits--;    }    	non-compiled	[CE]  ')'  expected	8	None	replace
86	[BUG]  [BUGGY]  if(hexDigits  >  0  ||  str.startsWith( "-   "))  {  //  drop  -  hexDigits--;  }  [CE]  ')'  expected  [FE]              AssertionError    [CONTEXT]    return  null;  }  if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(   "A  blank  string  is  not  a  valid  number   ");  }  if  (str.startsWith(   "--   "))  {  return  null;  }  if  (str.startsWith(   "0x   ")  ||  str.startsWith(   "-0x   ")  ||  str.startsWith(   "0X   ")  ||  str.startsWith(   "-0X   "))  {  int  hexDigits  =  str.length()  -  2;  //  drop  0x    [BUGGY]  if(hexDigits  >  0  ||  str.startsWith( "-   "))  {  //  drop  -  hexDigits--;  }  [BUGGY]    hexDigits--;  }  if  (hexDigits  >  8)  {  //  too  many  for  an  int  return  createLong(str);  }  return  createInteger(str);  }  char  lastChar  =  str.charAt(str.length()  -  1);  String  mant;  String  dec;  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  	projects/Lang7/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	457	458	1	replace	if(hexDigits  >  0  ||  str.startsWith( "-   "))  {  //  drop  -  hexDigits--;  }	  if(hexDigits    <    0    ||    str.startsWith(   "-   "))    {    //    drop    -    hexDigits--;    }    	non-compiled	[CE]  ')'  expected	8	None	replace
87	[BUG]  [BUGGY]  Integer  hexDigits  =  str.lastIndexOf('.')+  1;  [CE]  ')'  expected  [FE]            AssertionError    [CONTEXT]    return  null;  }  if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(   "A  blank  string  is  not  a  valid  number   ");  }  if  (str.startsWith(   "--   "))  {  return  null;  }  if  (str.startsWith(   "0x   ")  ||  str.startsWith(   "-0x   ")  ||  str.startsWith(   "0X   ")  ||  str.startsWith(   "-0X   "))  {  int  hexDigits  =  str.length()  -  2;  //  drop  0x    [BUGGY]  Integer  hexDigits  =  str.lastIndexOf('.')+  1;  [BUGGY]    if  (str.startsWith(   "-   "))  {  //  drop  -    hexDigits--;  hexDigits--;  }  if  (hexDigits  >  8)  {  //  too  many  for  an  int  return  createLong(str);  }  return  createInteger(str);  }  char  lastChar  =  str.charAt(str.length()  -  1);  String  mant;  String  dec;  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  	projects/Lang7/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	457	458	1	replace	Integer  hexDigits  =  str.lastIndexOf('.')+  1;	      Integer    hexDigits    =    str.length();    	non-compiled	[CE]  ')'  expected	3	None	replace
