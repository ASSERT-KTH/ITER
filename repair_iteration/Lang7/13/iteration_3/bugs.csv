bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  if(hexDigits  ==  0  ||  str.startsWith( "-0 "))  {  //  drop  0xDigits--;  }  [CE]  ')'  expected  [FE]                AssertionError      [CONTEXT]      return  null;  }  if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(     "A  blank  string  is  not  a  valid  number     ");  }  if  (str.startsWith(     "--     "))  {  return  null;  }  if  (str.startsWith(     "0x     ")  ||  str.startsWith(     "-0x     ")  ||  str.startsWith(     "0X     ")  ||  str.startsWith(     "-0X     "))  {  int  hexDigits  =  str.length()  -  2;  //  drop  0x      [BUGGY]  if(hexDigits  ==  0  ||  str.startsWith( "-0 "))  {  //  drop  0xDigits--;  }  [BUGGY]      hexDigits--;  }  if  (hexDigits  >  8)  {  //  too  many  for  an  int  return  createLong(str);  }  return  createInteger(str);  }  char  lastChar  =  str.charAt(str.length()  -  1);  String  mant;  String  dec;  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  	projects/Lang7/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	457	458	1	replace	if(hexDigits  ==  0  ||  str.startsWith( "-0 "))  {  //  drop  0xDigits--;  }	  if(hexDigits    <    0    ||    str.startsWith(   "-0   "))    {    //    drop    0xDigits--;    }    	non-compiled	[CE]  ')'  expected	54	None	replace
2	[BUG]  [BUGGY]  if(hexDigits  >  0  ||  str.startsWith( "-0 "))  {  //  drop  0xDigits--;  }  [CE]  ')'  expected  [FE]                  AssertionError      [CONTEXT]      return  null;  }  if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(     "A  blank  string  is  not  a  valid  number     ");  }  if  (str.startsWith(     "--     "))  {  return  null;  }  if  (str.startsWith(     "0x     ")  ||  str.startsWith(     "-0x     ")  ||  str.startsWith(     "0X     ")  ||  str.startsWith(     "-0X     "))  {  int  hexDigits  =  str.length()  -  2;  //  drop  0x      [BUGGY]  if(hexDigits  >  0  ||  str.startsWith( "-0 "))  {  //  drop  0xDigits--;  }  [BUGGY]      hexDigits--;  }  if  (hexDigits  >  8)  {  //  too  many  for  an  int  return  createLong(str);  }  return  createInteger(str);  }  char  lastChar  =  str.charAt(str.length()  -  1);  String  mant;  String  dec;  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  	projects/Lang7/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	457	458	1	replace	if(hexDigits  >  0  ||  str.startsWith( "-0 "))  {  //  drop  0xDigits--;  }	  if(hexDigits    <    0    ||    str.startsWith(   "-0   "))    {    //    drop    0xDigits--;    }    	non-compiled	[CE]  ')'  expected	54	None	replace
3	[BUG]  [BUGGY]  ||  str.startsWith( "-0 "))  {  //  drop  0xDigits--;  }  [CE]  [FE]                    AssertionError      [CONTEXT]      return  null;  }  if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(     "A  blank  string  is  not  a  valid  number     ");  }  if  (str.startsWith(     "--     "))  {  return  null;  }  if  (str.startsWith(     "0x     ")  ||  str.startsWith(     "-0x     ")  ||  str.startsWith(     "0X     ")  ||  str.startsWith(     "-0X     "))  {  int  hexDigits  =  str.length()  -  2;  //  drop  0x      [BUGGY]  ||  str.startsWith( "-0 "))  {  //  drop  0xDigits--;  }  [BUGGY]      hexDigits--;  }  if  (hexDigits  >  8)  {  //  too  many  for  an  int  return  createLong(str);  }  return  createInteger(str);  }  char  lastChar  =  str.charAt(str.length()  -  1);  String  mant;  String  dec;  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  	projects/Lang7/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	457	458	1	replace	||  str.startsWith( "-0 "))  {  //  drop  0xDigits--;  }	  if(hexDigits    <    0    ||    str.startsWith(   "-0   "))    {    //    drop    0xDigits--;    }    	non-compiled	[CE]  	54	None	replace
4	[BUG]  [BUGGY]  if(hexDigits  >  8)  {  //  drop  0;  }  [CE]  ')'  expected  [FE]                    AssertionError      [CONTEXT]      return  null;  }  if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(     "A  blank  string  is  not  a  valid  number     ");  }  if  (str.startsWith(     "--     "))  {  return  null;  }  if  (str.startsWith(     "0x     ")  ||  str.startsWith(     "-0x     ")  ||  str.startsWith(     "0X     ")  ||  str.startsWith(     "-0X     "))  {  int  hexDigits  =  str.length()  -  2;  //  drop  0x      [BUGGY]  if(hexDigits  >  8)  {  //  drop  0;  }  [BUGGY]      hexDigits--;  }  if  (hexDigits  >  8)  {  //  too  many  for  an  int  return  createLong(str);  }  return  createInteger(str);  }  char  lastChar  =  str.charAt(str.length()  -  1);  String  mant;  String  dec;  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  	projects/Lang7/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	457	458	1	replace	if(hexDigits  >  8)  {  //  drop  0;  }	  if(hexDigits    >    0)    {    //    drop    0;    }    	non-compiled	[CE]  ')'  expected	11	None	replace
5	[BUG]  [BUGGY]  ||(hexDigits  >  0  &&  str.charAt(hexDigits  -  1)!=  ')')  {  //  drop  0;  }  [CE]  ')'  expected  [FE]                      AssertionError      [CONTEXT]      return  null;  }  if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(     "A  blank  string  is  not  a  valid  number     ");  }  if  (str.startsWith(     "--     "))  {  return  null;  }  if  (str.startsWith(     "0x     ")  ||  str.startsWith(     "-0x     ")  ||  str.startsWith(     "0X     ")  ||  str.startsWith(     "-0X     "))  {  int  hexDigits  =  str.length()  -  2;  //  drop  0x      [BUGGY]  ||(hexDigits  >  0  &&  str.charAt(hexDigits  -  1)!=  ')')  {  //  drop  0;  }  [BUGGY]      hexDigits--;  }  if  (hexDigits  >  8)  {  //  too  many  for  an  int  return  createLong(str);  }  return  createInteger(str);  }  char  lastChar  =  str.charAt(str.length()  -  1);  String  mant;  String  dec;  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  	projects/Lang7/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	457	458	1	replace	||(hexDigits  >  0  &&  str.charAt(hexDigits  -  1)!=  ')')  {  //  drop  0;  }	  if(hexDigits    >    0)    {    //    drop    0;    }    	non-compiled	[CE]  ')'  expected	11	None	replace
6	[BUG]  [BUGGY]  Integer  hexDigits  =  createInteger(str.length()  +  2);  [CE]  ')'  expected  [FE]            AssertionError      [CONTEXT]      return  null;  }  if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(     "A  blank  string  is  not  a  valid  number     ");  }  if  (str.startsWith(     "--     "))  {  return  null;  }  if  (str.startsWith(     "0x     ")  ||  str.startsWith(     "-0x     ")  ||  str.startsWith(     "0X     ")  ||  str.startsWith(     "-0X     "))  {  int  hexDigits  =  str.length()  -  2;  //  drop  0x      [BUGGY]  Integer  hexDigits  =  createInteger(str.length()  +  2);  [BUGGY]      if  (str.startsWith(     "-     "))  {  //  drop  -    hexDigits--;  hexDigits--;  }  if  (hexDigits  >  8)  {  //  too  many  for  an  int  return  createLong(str);  }  return  createInteger(str);  }  char  lastChar  =  str.charAt(str.length()  -  1);  String  mant;  String  dec;  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  	projects/Lang7/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	457	458	1	replace	Integer  hexDigits  =  createInteger(str.length()  +  2);	  Integer    hexDigits    =    createInteger(str.length());    	non-compiled	[CE]  ')'  expected	51	None	replace
7	[BUG]  [BUGGY]  Integer  hexDigits  =  createInteger(str.length()  +  1);  [CE]  ')'  expected  [FE]              AssertionError      [CONTEXT]      return  null;  }  if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(     "A  blank  string  is  not  a  valid  number     ");  }  if  (str.startsWith(     "--     "))  {  return  null;  }  if  (str.startsWith(     "0x     ")  ||  str.startsWith(     "-0x     ")  ||  str.startsWith(     "0X     ")  ||  str.startsWith(     "-0X     "))  {  int  hexDigits  =  str.length()  -  2;  //  drop  0x      [BUGGY]  Integer  hexDigits  =  createInteger(str.length()  +  1);  [BUGGY]      if  (str.startsWith(     "-     "))  {  //  drop  -    hexDigits--;  hexDigits--;  }  if  (hexDigits  >  8)  {  //  too  many  for  an  int  return  createLong(str);  }  return  createInteger(str);  }  char  lastChar  =  str.charAt(str.length()  -  1);  String  mant;  String  dec;  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  	projects/Lang7/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	457	458	1	replace	Integer  hexDigits  =  createInteger(str.length()  +  1);	  Integer    hexDigits    =    createInteger(str.length());    	non-compiled	[CE]  ')'  expected	51	None	replace
8	[BUG]  [BUGGY]  int  hexDigits  =  createInteger(str.length()  -  2);  [CE]  ')'  expected  [FE]                AssertionError      [CONTEXT]      return  null;  }  if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(     "A  blank  string  is  not  a  valid  number     ");  }  if  (str.startsWith(     "--     "))  {  return  null;  }  if  (str.startsWith(     "0x     ")  ||  str.startsWith(     "-0x     ")  ||  str.startsWith(     "0X     ")  ||  str.startsWith(     "-0X     "))  {  int  hexDigits  =  str.length()  -  2;  //  drop  0x      [BUGGY]  int  hexDigits  =  createInteger(str.length()  -  2);  [BUGGY]      if  (str.startsWith(     "-     "))  {  //  drop  -    hexDigits--;  hexDigits--;  }  if  (hexDigits  >  8)  {  //  too  many  for  an  int  return  createLong(str);  }  return  createInteger(str);  }  char  lastChar  =  str.charAt(str.length()  -  1);  String  mant;  String  dec;  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  	projects/Lang7/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	457	458	1	replace	int  hexDigits  =  createInteger(str.length()  -  2);	  Integer    hexDigits    =    createInteger(str.length());    	non-compiled	[CE]  ')'  expected	51	None	replace
9	[BUG]  [BUGGY]  Integer  hexDigits  =  createInteger(1);  [CE]  ')'  expected  [FE]              AssertionError      [CONTEXT]      return  null;  }  if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(     "A  blank  string  is  not  a  valid  number     ");  }  if  (str.startsWith(     "--     "))  {  return  null;  }  if  (str.startsWith(     "0x     ")  ||  str.startsWith(     "-0x     ")  ||  str.startsWith(     "0X     ")  ||  str.startsWith(     "-0X     "))  {  int  hexDigits  =  str.length()  -  2;  //  drop  0x      [BUGGY]  Integer  hexDigits  =  createInteger(1);  [BUGGY]      if  (str.startsWith(     "-     "))  {  //  drop  -    hexDigits--;  hexDigits--;  }  if  (hexDigits  >  8)  {  //  too  many  for  an  int  return  createLong(str);  }  return  createInteger(str);  }  char  lastChar  =  str.charAt(str.length()  -  1);  String  mant;  String  dec;  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  	projects/Lang7/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	457	458	1	replace	Integer  hexDigits  =  createInteger(1);	  Integer    hexDigits    =    createInteger(0);    	non-compiled	[CE]  ')'  expected	52	None	replace
10	[BUG]  [BUGGY]  if(hexDigits  >  0  ||  str.startsWith( "-   "))  {  return  createInteger(str);  }  [CE]  ')'  expected  [FE]                AssertionError      [CONTEXT]      return  null;  }  if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(     "A  blank  string  is  not  a  valid  number     ");  }  if  (str.startsWith(     "--     "))  {  return  null;  }  if  (str.startsWith(     "0x     ")  ||  str.startsWith(     "-0x     ")  ||  str.startsWith(     "0X     ")  ||  str.startsWith(     "-0X     "))  {  int  hexDigits  =  str.length()  -  2;  //  drop  0x      [BUGGY]  if(hexDigits  >  0  ||  str.startsWith( "-   "))  {  return  createInteger(str);  }  [BUGGY]      hexDigits--;  }  if  (hexDigits  >  8)  {  //  too  many  for  an  int  return  createLong(str);  }  return  createInteger(str);  }  char  lastChar  =  str.charAt(str.length()  -  1);  String  mant;  String  dec;  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  	projects/Lang7/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	457	458	1	replace	if(hexDigits  >  0  ||  str.startsWith( "-   "))  {  return  createInteger(str);  }	  if(hexDigits    <    0    ||    str.startsWith(   "-   "))    {    return    createInteger(str);    }    	non-compiled	[CE]  ')'  expected	85	None	replace
11	[BUG]  [BUGGY]  if(hexDigits  ==  0  ||  str.startsWith( "-   "))  {  return  createInteger(str);  }  [CE]  ')'  expected  [FE]                  AssertionError      [CONTEXT]      return  null;  }  if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(     "A  blank  string  is  not  a  valid  number     ");  }  if  (str.startsWith(     "--     "))  {  return  null;  }  if  (str.startsWith(     "0x     ")  ||  str.startsWith(     "-0x     ")  ||  str.startsWith(     "0X     ")  ||  str.startsWith(     "-0X     "))  {  int  hexDigits  =  str.length()  -  2;  //  drop  0x      [BUGGY]  if(hexDigits  ==  0  ||  str.startsWith( "-   "))  {  return  createInteger(str);  }  [BUGGY]      hexDigits--;  }  if  (hexDigits  >  8)  {  //  too  many  for  an  int  return  createLong(str);  }  return  createInteger(str);  }  char  lastChar  =  str.charAt(str.length()  -  1);  String  mant;  String  dec;  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  	projects/Lang7/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	457	458	1	replace	if(hexDigits  ==  0  ||  str.startsWith( "-   "))  {  return  createInteger(str);  }	  if(hexDigits    <    0    ||    str.startsWith(   "-   "))    {    return    createInteger(str);    }    	non-compiled	[CE]  ')'  expected	85	None	replace
12	[BUG]  [BUGGY]  if(hexDigits  <  0  ||  str.startsWith( "- "))  {  return  createLong(str);  }  [CE]  ')'  expected  [FE]                    AssertionError      [CONTEXT]      return  null;  }  if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(     "A  blank  string  is  not  a  valid  number     ");  }  if  (str.startsWith(     "--     "))  {  return  null;  }  if  (str.startsWith(     "0x     ")  ||  str.startsWith(     "-0x     ")  ||  str.startsWith(     "0X     ")  ||  str.startsWith(     "-0X     "))  {  int  hexDigits  =  str.length()  -  2;  //  drop  0x      [BUGGY]  if(hexDigits  <  0  ||  str.startsWith( "- "))  {  return  createLong(str);  }  [BUGGY]      hexDigits--;  }  if  (hexDigits  >  8)  {  //  too  many  for  an  int  return  createLong(str);  }  return  createInteger(str);  }  char  lastChar  =  str.charAt(str.length()  -  1);  String  mant;  String  dec;  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  	projects/Lang7/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	457	458	1	replace	if(hexDigits  <  0  ||  str.startsWith( "- "))  {  return  createLong(str);  }	  if(hexDigits    <    0    ||    str.startsWith(   "-   "))    {    return    createInteger(str);    }    	non-compiled	[CE]  ')'  expected	85	None	replace
13	[BUG]  [BUGGY]  if(hexDigits  >  8)  {  return  createLong(str);  }  [CE]  ')'  expected  [FE]                  AssertionError      [CONTEXT]      return  null;  }  if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(     "A  blank  string  is  not  a  valid  number     ");  }  if  (str.startsWith(     "--     "))  {  return  null;  }  if  (str.startsWith(     "0x     ")  ||  str.startsWith(     "-0x     ")  ||  str.startsWith(     "0X     ")  ||  str.startsWith(     "-0X     "))  {  int  hexDigits  =  str.length()  -  2;  //  drop  0x      [BUGGY]  if(hexDigits  >  8)  {  return  createLong(str);  }  [BUGGY]      hexDigits--;  }  if  (hexDigits  >  8)  {  //  too  many  for  an  int  return  createLong(str);  }  return  createInteger(str);  }  char  lastChar  =  str.charAt(str.length()  -  1);  String  mant;  String  dec;  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  	projects/Lang7/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	457	458	1	replace	if(hexDigits  >  8)  {  return  createLong(str);  }	  if(hexDigits    <    8)    {    return    createLong(str);    }    	non-compiled	[CE]  ')'  expected	10	None	replace
14	[BUG]  [BUGGY]  if(hexDigits  >  0)  {  return  createLong(str);  }  [CE]  ')'  expected  [FE]                    AssertionError      [CONTEXT]      return  null;  }  if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(     "A  blank  string  is  not  a  valid  number     ");  }  if  (str.startsWith(     "--     "))  {  return  null;  }  if  (str.startsWith(     "0x     ")  ||  str.startsWith(     "-0x     ")  ||  str.startsWith(     "0X     ")  ||  str.startsWith(     "-0X     "))  {  int  hexDigits  =  str.length()  -  2;  //  drop  0x      [BUGGY]  if(hexDigits  >  0)  {  return  createLong(str);  }  [BUGGY]      hexDigits--;  }  if  (hexDigits  >  8)  {  //  too  many  for  an  int  return  createLong(str);  }  return  createInteger(str);  }  char  lastChar  =  str.charAt(str.length()  -  1);  String  mant;  String  dec;  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  	projects/Lang7/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	457	458	1	replace	if(hexDigits  >  0)  {  return  createLong(str);  }	  if(hexDigits    <    8)    {    return    createLong(str);    }    	non-compiled	[CE]  ')'  expected	10	None	replace
15	[BUG]  [BUGGY]  Integer  hexDigits  =  str.indexOf('0',  3);  [CE]  ')'  expected  [FE]                  AssertionError      [CONTEXT]      return  null;  }  if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(     "A  blank  string  is  not  a  valid  number     ");  }  if  (str.startsWith(     "--     "))  {  return  null;  }  if  (str.startsWith(     "0x     ")  ||  str.startsWith(     "-0x     ")  ||  str.startsWith(     "0X     ")  ||  str.startsWith(     "-0X     "))  {  int  hexDigits  =  str.length()  -  2;  //  drop  0x      [BUGGY]  Integer  hexDigits  =  str.indexOf('0',  3);  [BUGGY]      if  (str.startsWith(     "-     "))  {  //  drop  -    hexDigits--;  hexDigits--;  }  if  (hexDigits  >  8)  {  //  too  many  for  an  int  return  createLong(str);  }  return  createInteger(str);  }  char  lastChar  =  str.charAt(str.length()  -  1);  String  mant;  String  dec;  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  	projects/Lang7/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	457	458	1	replace	Integer  hexDigits  =  str.indexOf('0',  3);	  Integer    hexDigits    =    str.indexOf('0',    2);    	non-compiled	[CE]  ')'  expected	56	None	replace
16	[BUG]  [BUGGY]  if(str.length()  >  0)  {  int  hexDigits  =  str.length();  if(hexDigits  <  0)  {  return  createInteger(str);  }  [CE]  ')'  expected  [FE]            AssertionError      [CONTEXT]      return  null;  }  if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(     "A  blank  string  is  not  a  valid  number     ");  }  if  (str.startsWith(     "--     "))  {  return  null;  }  if  (str.startsWith(     "0x     ")  ||  str.startsWith(     "-0x     ")  ||  str.startsWith(     "0X     ")  ||  str.startsWith(     "-0X     "))  {  int  hexDigits  =  str.length()  -  2;  //  drop  0x      [BUGGY]  if(str.length()  >  0)  {  int  hexDigits  =  str.length();  if(hexDigits  <  0)  {  return  createInteger(str);  }  [BUGGY]      if  (str.startsWith(     "-     "))  {  //  drop  -    hexDigits--;  hexDigits--;  }  if  (hexDigits  >  8)  {  //  too  many  for  an  int  return  createLong(str);  }  return  createInteger(str);  }  char  lastChar  =  str.charAt(str.length()  -  1);  String  mant;  String  dec;  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  	projects/Lang7/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	457	458	1	replace	if(str.length()  >  0)  {  int  hexDigits  =  str.length();  if(hexDigits  <  0)  {  return  createInteger(str);  }	  if(hexDigits    <    0)    {    int    hexDigits    =    str.length();    if(hexDigits    <    0)    {    return    createInteger(str);    }    	non-compiled	[CE]  ')'  expected	68	None	replace
17	[BUG]  [BUGGY]  if(dec  ==  null)  {  if(hexDigits  <  0)  {  return  createInteger(str);  }  [CE]  ')'  expected  [FE]              AssertionError      [CONTEXT]      return  null;  }  if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(     "A  blank  string  is  not  a  valid  number     ");  }  if  (str.startsWith(     "--     "))  {  return  null;  }  if  (str.startsWith(     "0x     ")  ||  str.startsWith(     "-0x     ")  ||  str.startsWith(     "0X     ")  ||  str.startsWith(     "-0X     "))  {  int  hexDigits  =  str.length()  -  2;  //  drop  0x      [BUGGY]  if(dec  ==  null)  {  if(hexDigits  <  0)  {  return  createInteger(str);  }  [BUGGY]      if  (str.startsWith(     "-     "))  {  //  drop  -    hexDigits--;  hexDigits--;  }  if  (hexDigits  >  8)  {  //  too  many  for  an  int  return  createLong(str);  }  return  createInteger(str);  }  char  lastChar  =  str.charAt(str.length()  -  1);  String  mant;  String  dec;  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  	projects/Lang7/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	457	458	1	replace	if(dec  ==  null)  {  if(hexDigits  <  0)  {  return  createInteger(str);  }	  if(hexDigits    <    0)    {    int    hexDigits    =    str.length();    if(hexDigits    <    0)    {    return    createInteger(str);    }    	non-compiled	[CE]  ')'  expected	68	None	replace
18	[BUG]  [BUGGY]  if(str.startsWith( "-   "))  {  int  hexDigits  =  str.length()  -  2;  if(hexDigits  <  8)  {  return  createInteger(str);  }  [CE]  ')'  expected  [FE]                AssertionError      [CONTEXT]      return  null;  }  if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(     "A  blank  string  is  not  a  valid  number     ");  }  if  (str.startsWith(     "--     "))  {  return  null;  }  if  (str.startsWith(     "0x     ")  ||  str.startsWith(     "-0x     ")  ||  str.startsWith(     "0X     ")  ||  str.startsWith(     "-0X     "))  {  int  hexDigits  =  str.length()  -  2;  //  drop  0x      [BUGGY]  if(str.startsWith( "-   "))  {  int  hexDigits  =  str.length()  -  2;  if(hexDigits  <  8)  {  return  createInteger(str);  }  [BUGGY]      if  (str.startsWith(     "-     "))  {  //  drop  -    hexDigits--;  hexDigits--;  }  if  (hexDigits  >  8)  {  //  too  many  for  an  int  return  createLong(str);  }  return  createInteger(str);  }  char  lastChar  =  str.charAt(str.length()  -  1);  String  mant;  String  dec;  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  	projects/Lang7/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	457	458	1	replace	if(str.startsWith( "-   "))  {  int  hexDigits  =  str.length()  -  2;  if(hexDigits  <  8)  {  return  createInteger(str);  }	  if(hexDigits    <    0)    {    int    hexDigits    =    str.length();    if(hexDigits    <    0)    {    return    createInteger(str);    }    	non-compiled	[CE]  ')'  expected	68	None	replace
19	[BUG]  [BUGGY]  if(hexDigits  ==  0)  {  if(str.startsWith( "- "))  {  //  drop  -1;  }  [CE]  ')'  expected  [FE]                AssertionError      [CONTEXT]      return  null;  }  if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(     "A  blank  string  is  not  a  valid  number     ");  }  if  (str.startsWith(     "--     "))  {  return  null;  }  if  (str.startsWith(     "0x     ")  ||  str.startsWith(     "-0x     ")  ||  str.startsWith(     "0X     ")  ||  str.startsWith(     "-0X     "))  {  int  hexDigits  =  str.length()  -  2;  //  drop  0x      [BUGGY]  if(hexDigits  ==  0)  {  if(str.startsWith( "- "))  {  //  drop  -1;  }  [BUGGY]      hexDigits--;  }  if  (hexDigits  >  8)  {  //  too  many  for  an  int  return  createLong(str);  }  return  createInteger(str);  }  char  lastChar  =  str.charAt(str.length()  -  1);  String  mant;  String  dec;  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  	projects/Lang7/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	457	458	1	replace	if(hexDigits  ==  0)  {  if(str.startsWith( "- "))  {  //  drop  -1;  }	  if(hexDigits    >    8)    {    if(str.startsWith(   "-   "))    {    //    drop    -1;    }    	non-compiled	[CE]  ')'  expected	47	None	replace
20	[BUG]  [BUGGY]  if(hexDigits  >=  0)  {  if(str.startsWith( "- "))  {  //  drop  -1;  }  [CE]  ')'  expected  [FE]                  AssertionError      [CONTEXT]      return  null;  }  if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(     "A  blank  string  is  not  a  valid  number     ");  }  if  (str.startsWith(     "--     "))  {  return  null;  }  if  (str.startsWith(     "0x     ")  ||  str.startsWith(     "-0x     ")  ||  str.startsWith(     "0X     ")  ||  str.startsWith(     "-0X     "))  {  int  hexDigits  =  str.length()  -  2;  //  drop  0x      [BUGGY]  if(hexDigits  >=  0)  {  if(str.startsWith( "- "))  {  //  drop  -1;  }  [BUGGY]      hexDigits--;  }  if  (hexDigits  >  8)  {  //  too  many  for  an  int  return  createLong(str);  }  return  createInteger(str);  }  char  lastChar  =  str.charAt(str.length()  -  1);  String  mant;  String  dec;  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  	projects/Lang7/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	457	458	1	replace	if(hexDigits  >=  0)  {  if(str.startsWith( "- "))  {  //  drop  -1;  }	  if(hexDigits    >    8)    {    if(str.startsWith(   "-   "))    {    //    drop    -1;    }    	non-compiled	[CE]  ')'  expected	47	None	replace
21	[BUG]  [BUGGY]  if(hexDigits  >  0)  {  if(str.startsWith( "-   "))  {  return  createInteger(str);  }  [CE]  ')'  expected  [FE]              AssertionError      [CONTEXT]      return  null;  }  if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(     "A  blank  string  is  not  a  valid  number     ");  }  if  (str.startsWith(     "--     "))  {  return  null;  }  if  (str.startsWith(     "0x     ")  ||  str.startsWith(     "-0x     ")  ||  str.startsWith(     "0X     ")  ||  str.startsWith(     "-0X     "))  {  int  hexDigits  =  str.length()  -  2;  //  drop  0x      [BUGGY]  if(hexDigits  >  0)  {  if(str.startsWith( "-   "))  {  return  createInteger(str);  }  [BUGGY]      hexDigits--;  }  if  (hexDigits  >  8)  {  //  too  many  for  an  int  return  createLong(str);  }  return  createInteger(str);  }  char  lastChar  =  str.charAt(str.length()  -  1);  String  mant;  String  dec;  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  	projects/Lang7/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	457	458	1	replace	if(hexDigits  >  0)  {  if(str.startsWith( "-   "))  {  return  createInteger(str);  }	  if(hexDigits    <    0)    {    if(str.startsWith(   "-   "))    {    return    createInteger(str);    }    	non-compiled	[CE]  ')'  expected	82	None	replace
22	[BUG]  [BUGGY]  if(hexDigits  <  8)  {  if(str.startsWith( "- "))  {  return  createInteger(str);  }  [CE]  ')'  expected  [FE]                AssertionError      [CONTEXT]      return  null;  }  if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(     "A  blank  string  is  not  a  valid  number     ");  }  if  (str.startsWith(     "--     "))  {  return  null;  }  if  (str.startsWith(     "0x     ")  ||  str.startsWith(     "-0x     ")  ||  str.startsWith(     "0X     ")  ||  str.startsWith(     "-0X     "))  {  int  hexDigits  =  str.length()  -  2;  //  drop  0x      [BUGGY]  if(hexDigits  <  8)  {  if(str.startsWith( "- "))  {  return  createInteger(str);  }  [BUGGY]      hexDigits--;  }  if  (hexDigits  >  8)  {  //  too  many  for  an  int  return  createLong(str);  }  return  createInteger(str);  }  char  lastChar  =  str.charAt(str.length()  -  1);  String  mant;  String  dec;  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  	projects/Lang7/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	457	458	1	replace	if(hexDigits  <  8)  {  if(str.startsWith( "- "))  {  return  createInteger(str);  }	  if(hexDigits    <    0)    {    if(str.startsWith(   "-   "))    {    return    createInteger(str);    }    	non-compiled	[CE]  ')'  expected	82	None	replace
23	[BUG]  [BUGGY]  if(hexDigits  ==  0)  {  if(str.startsWith( "- "))  {  return  createInteger(str);  }  [CE]  ')'  expected  [FE]                  AssertionError      [CONTEXT]      return  null;  }  if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(     "A  blank  string  is  not  a  valid  number     ");  }  if  (str.startsWith(     "--     "))  {  return  null;  }  if  (str.startsWith(     "0x     ")  ||  str.startsWith(     "-0x     ")  ||  str.startsWith(     "0X     ")  ||  str.startsWith(     "-0X     "))  {  int  hexDigits  =  str.length()  -  2;  //  drop  0x      [BUGGY]  if(hexDigits  ==  0)  {  if(str.startsWith( "- "))  {  return  createInteger(str);  }  [BUGGY]      hexDigits--;  }  if  (hexDigits  >  8)  {  //  too  many  for  an  int  return  createLong(str);  }  return  createInteger(str);  }  char  lastChar  =  str.charAt(str.length()  -  1);  String  mant;  String  dec;  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  	projects/Lang7/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	457	458	1	replace	if(hexDigits  ==  0)  {  if(str.startsWith( "- "))  {  return  createInteger(str);  }	  if(hexDigits    <    0)    {    if(str.startsWith(   "-   "))    {    return    createInteger(str);    }    	non-compiled	[CE]  ')'  expected	82	None	replace
24	[BUG]  [BUGGY]  Integer  hexDigits  =  str.lastIndexOf('0',  2);  [CE]  ')'  expected  [FE]                      AssertionError      [CONTEXT]      return  null;  }  if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(     "A  blank  string  is  not  a  valid  number     ");  }  if  (str.startsWith(     "--     "))  {  return  null;  }  if  (str.startsWith(     "0x     ")  ||  str.startsWith(     "-0x     ")  ||  str.startsWith(     "0X     ")  ||  str.startsWith(     "-0X     "))  {  int  hexDigits  =  str.length()  -  2;  //  drop  0x      [BUGGY]  Integer  hexDigits  =  str.lastIndexOf('0',  2);  [BUGGY]      if  (str.startsWith(     "-     "))  {  //  drop  -    hexDigits--;  hexDigits--;  }  if  (hexDigits  >  8)  {  //  too  many  for  an  int  return  createLong(str);  }  return  createInteger(str);  }  char  lastChar  =  str.charAt(str.length()  -  1);  String  mant;  String  dec;  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  	projects/Lang7/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	457	458	1	replace	Integer  hexDigits  =  str.lastIndexOf('0',  2);	  Integer    hexDigits    =    str.lastIndexOf('0');    	non-compiled	[CE]  ')'  expected	39	None	replace
25	[BUG]  [BUGGY]  Integer  hexDigits  =  str.lastIndexOf('0',  1);  [CE]  ')'  expected  [FE]                        AssertionError      [CONTEXT]      return  null;  }  if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(     "A  blank  string  is  not  a  valid  number     ");  }  if  (str.startsWith(     "--     "))  {  return  null;  }  if  (str.startsWith(     "0x     ")  ||  str.startsWith(     "-0x     ")  ||  str.startsWith(     "0X     ")  ||  str.startsWith(     "-0X     "))  {  int  hexDigits  =  str.length()  -  2;  //  drop  0x      [BUGGY]  Integer  hexDigits  =  str.lastIndexOf('0',  1);  [BUGGY]      if  (str.startsWith(     "-     "))  {  //  drop  -    hexDigits--;  hexDigits--;  }  if  (hexDigits  >  8)  {  //  too  many  for  an  int  return  createLong(str);  }  return  createInteger(str);  }  char  lastChar  =  str.charAt(str.length()  -  1);  String  mant;  String  dec;  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  	projects/Lang7/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	457	458	1	replace	Integer  hexDigits  =  str.lastIndexOf('0',  1);	  Integer    hexDigits    =    str.lastIndexOf('0');    	non-compiled	[CE]  ')'  expected	39	None	replace
26	[BUG]  [BUGGY]  Integer  hexDigits  =  str.lastIndexOf('0',  4);  [CE]  ')'  expected  [FE]                          AssertionError      [CONTEXT]      return  null;  }  if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(     "A  blank  string  is  not  a  valid  number     ");  }  if  (str.startsWith(     "--     "))  {  return  null;  }  if  (str.startsWith(     "0x     ")  ||  str.startsWith(     "-0x     ")  ||  str.startsWith(     "0X     ")  ||  str.startsWith(     "-0X     "))  {  int  hexDigits  =  str.length()  -  2;  //  drop  0x      [BUGGY]  Integer  hexDigits  =  str.lastIndexOf('0',  4);  [BUGGY]      if  (str.startsWith(     "-     "))  {  //  drop  -    hexDigits--;  hexDigits--;  }  if  (hexDigits  >  8)  {  //  too  many  for  an  int  return  createLong(str);  }  return  createInteger(str);  }  char  lastChar  =  str.charAt(str.length()  -  1);  String  mant;  String  dec;  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  	projects/Lang7/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	457	458	1	replace	Integer  hexDigits  =  str.lastIndexOf('0',  4);	  Integer    hexDigits    =    str.lastIndexOf('0');    	non-compiled	[CE]  ')'  expected	39	None	replace
27	[BUG]  [BUGGY]  if(str.startsWith( "-   "))  {  if(hexDigits  >  0)  {  int  hexDigits  =  str.length();  if(hexDigits  <  0)  {  return  createInteger(str);  }  [CE]  ')'  expected  [FE]              AssertionError      [CONTEXT]      return  null;  }  if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(     "A  blank  string  is  not  a  valid  number     ");  }  if  (str.startsWith(     "--     "))  {  return  null;  }  if  (str.startsWith(     "0x     ")  ||  str.startsWith(     "-0x     ")  ||  str.startsWith(     "0X     ")  ||  str.startsWith(     "-0X     "))  {  int  hexDigits  =  str.length()  -  2;  //  drop  0x      [BUGGY]  if(str.startsWith( "-   "))  {  if(hexDigits  >  0)  {  int  hexDigits  =  str.length();  if(hexDigits  <  0)  {  return  createInteger(str);  }  [BUGGY]      if  (str.startsWith(     "-     "))  {  //  drop  -    hexDigits--;  hexDigits--;  }  if  (hexDigits  >  8)  {  //  too  many  for  an  int  return  createLong(str);  }  return  createInteger(str);  }  char  lastChar  =  str.charAt(str.length()  -  1);  String  mant;  String  dec;  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  	projects/Lang7/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	457	458	1	replace	if(str.startsWith( "-   "))  {  if(hexDigits  >  0)  {  int  hexDigits  =  str.length();  if(hexDigits  <  0)  {  return  createInteger(str);  }	  if(dec    ==    null)    {    if(hexDigits    >    0)    {    int    hexDigits    =    str.length()    -    2;    if(hexDigits    <    0)    {    return    createInteger(str);    }    	non-compiled	[CE]  ')'  expected	25	None	replace
28	[BUG]  [BUGGY]  if(str.startsWith( "-   "))  {  if(hexDigits  >  8)  {  if(hexDigits  >  0)  {  int  hexDigits  =  str.length();  if(hexDigits  <  0)  {  return  createIn  [CE]  [FE]                AssertionError      [CONTEXT]      return  null;  }  if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(     "A  blank  string  is  not  a  valid  number     ");  }  if  (str.startsWith(     "--     "))  {  return  null;  }  if  (str.startsWith(     "0x     ")  ||  str.startsWith(     "-0x     ")  ||  str.startsWith(     "0X     ")  ||  str.startsWith(     "-0X     "))  {  int  hexDigits  =  str.length()  -  2;  //  drop  0x      [BUGGY]  if(str.startsWith( "-   "))  {  if(hexDigits  >  8)  {  if(hexDigits  >  0)  {  int  hexDigits  =  str.length();  if(hexDigits  <  0)  {  return  createIn  [BUGGY]      if  (str.startsWith(     "-     "))  {  //  drop  -    hexDigits--;  hexDigits--;  }  if  (hexDigits  >  8)  {  //  too  many  for  an  int  return  createLong(str);  }  return  createInteger(str);  }  char  lastChar  =  str.charAt(str.length()  -  1);  String  mant;  String  dec;  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  	projects/Lang7/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	457	458	1	replace	if(str.startsWith( "-   "))  {  if(hexDigits  >  8)  {  if(hexDigits  >  0)  {  int  hexDigits  =  str.length();  if(hexDigits  <  0)  {  return  createIn	  if(dec    ==    null)    {    if(hexDigits    >    0)    {    int    hexDigits    =    str.length()    -    2;    if(hexDigits    <    0)    {    return    createInteger(str);    }    	non-compiled	[CE]  	25	None	replace
29	[BUG]  [BUGGY]  if(str.startsWith( "-   "))  {  if(hexDigits  >  8)  {  if(hexDigits  >  0)  {  int  hexDigits  =  str.length();  if(hexDigits  <  [CE]  ')'  expected  [FE]                  AssertionError      [CONTEXT]      return  null;  }  if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(     "A  blank  string  is  not  a  valid  number     ");  }  if  (str.startsWith(     "--     "))  {  return  null;  }  if  (str.startsWith(     "0x     ")  ||  str.startsWith(     "-0x     ")  ||  str.startsWith(     "0X     ")  ||  str.startsWith(     "-0X     "))  {  int  hexDigits  =  str.length()  -  2;  //  drop  0x      [BUGGY]  if(str.startsWith( "-   "))  {  if(hexDigits  >  8)  {  if(hexDigits  >  0)  {  int  hexDigits  =  str.length();  if(hexDigits  <  [BUGGY]      if  (str.startsWith(     "-     "))  {  //  drop  -    hexDigits--;  hexDigits--;  }  if  (hexDigits  >  8)  {  //  too  many  for  an  int  return  createLong(str);  }  return  createInteger(str);  }  char  lastChar  =  str.charAt(str.length()  -  1);  String  mant;  String  dec;  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  	projects/Lang7/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	457	458	1	replace	if(str.startsWith( "-   "))  {  if(hexDigits  >  8)  {  if(hexDigits  >  0)  {  int  hexDigits  =  str.length();  if(hexDigits  <  	  if(dec    ==    null)    {    if(hexDigits    >    0)    {    int    hexDigits    =    str.length()    -    2;    if(hexDigits    <    0)    {    return    createInteger(str);    }    	non-compiled	[CE]  ')'  expected	25	None	replace
30	[BUG]  [BUGGY]  if(str.startsWith( "-   "))  {  if(hexDigits  >  0)  {  if(hexDigits  >  0)  {  int  hexDigits  =  str.length();  if(hexDigits  <  0)  {  return  createIn  [CE]  [FE]                    AssertionError      [CONTEXT]      return  null;  }  if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(     "A  blank  string  is  not  a  valid  number     ");  }  if  (str.startsWith(     "--     "))  {  return  null;  }  if  (str.startsWith(     "0x     ")  ||  str.startsWith(     "-0x     ")  ||  str.startsWith(     "0X     ")  ||  str.startsWith(     "-0X     "))  {  int  hexDigits  =  str.length()  -  2;  //  drop  0x      [BUGGY]  if(str.startsWith( "-   "))  {  if(hexDigits  >  0)  {  if(hexDigits  >  0)  {  int  hexDigits  =  str.length();  if(hexDigits  <  0)  {  return  createIn  [BUGGY]      if  (str.startsWith(     "-     "))  {  //  drop  -    hexDigits--;  hexDigits--;  }  if  (hexDigits  >  8)  {  //  too  many  for  an  int  return  createLong(str);  }  return  createInteger(str);  }  char  lastChar  =  str.charAt(str.length()  -  1);  String  mant;  String  dec;  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  	projects/Lang7/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	457	458	1	replace	if(str.startsWith( "-   "))  {  if(hexDigits  >  0)  {  if(hexDigits  >  0)  {  int  hexDigits  =  str.length();  if(hexDigits  <  0)  {  return  createIn	  if(dec    ==    null)    {    if(hexDigits    >    0)    {    int    hexDigits    =    str.length()    -    2;    if(hexDigits    <    0)    {    return    createInteger(str);    }    	non-compiled	[CE]  	25	None	replace
31	[BUG]  [BUGGY]  if(hexDigits  >  0  ||  str.startsWith( "-0 "))  {  //  drop  0x-hexDigits--;  }  [CE]  ')'  expected  [FE]                  AssertionError      [CONTEXT]      return  null;  }  if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(     "A  blank  string  is  not  a  valid  number     ");  }  if  (str.startsWith(     "--     "))  {  return  null;  }  if  (str.startsWith(     "0x     ")  ||  str.startsWith(     "-0x     ")  ||  str.startsWith(     "0X     ")  ||  str.startsWith(     "-0X     "))  {  int  hexDigits  =  str.length()  -  2;  //  drop  0x      [BUGGY]  if(hexDigits  >  0  ||  str.startsWith( "-0 "))  {  //  drop  0x-hexDigits--;  }  [BUGGY]      hexDigits--;  }  if  (hexDigits  >  8)  {  //  too  many  for  an  int  return  createLong(str);  }  return  createInteger(str);  }  char  lastChar  =  str.charAt(str.length()  -  1);  String  mant;  String  dec;  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  	projects/Lang7/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	457	458	1	replace	if(hexDigits  >  0  ||  str.startsWith( "-0 "))  {  //  drop  0x-hexDigits--;  }	  if(hexDigits    <    0    ||    str.startsWith(   "-0   "))    {    //    drop    0x-hexDigits--;    }    	non-compiled	[CE]  ')'  expected	55	None	replace
32	[BUG]  [BUGGY]  if(hexDigits  <  0  ||  str.startsWith( ".0 "))  {  //  drop  0x-hexDigits--;  }  [CE]  ')'  expected  [FE]                    AssertionError      [CONTEXT]      return  null;  }  if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(     "A  blank  string  is  not  a  valid  number     ");  }  if  (str.startsWith(     "--     "))  {  return  null;  }  if  (str.startsWith(     "0x     ")  ||  str.startsWith(     "-0x     ")  ||  str.startsWith(     "0X     ")  ||  str.startsWith(     "-0X     "))  {  int  hexDigits  =  str.length()  -  2;  //  drop  0x      [BUGGY]  if(hexDigits  <  0  ||  str.startsWith( ".0 "))  {  //  drop  0x-hexDigits--;  }  [BUGGY]      hexDigits--;  }  if  (hexDigits  >  8)  {  //  too  many  for  an  int  return  createLong(str);  }  return  createInteger(str);  }  char  lastChar  =  str.charAt(str.length()  -  1);  String  mant;  String  dec;  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  	projects/Lang7/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	457	458	1	replace	if(hexDigits  <  0  ||  str.startsWith( ".0 "))  {  //  drop  0x-hexDigits--;  }	  if(hexDigits    <    0    ||    str.startsWith(   "-0   "))    {    //    drop    0x-hexDigits--;    }    	non-compiled	[CE]  ')'  expected	55	None	replace
33	[BUG]  [BUGGY]  if(hexDigits  <  0  ||  str.startsWith( "-0 "))  {  return  null;  }  [CE]  ')'  expected  [FE]                      AssertionError      [CONTEXT]      return  null;  }  if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(     "A  blank  string  is  not  a  valid  number     ");  }  if  (str.startsWith(     "--     "))  {  return  null;  }  if  (str.startsWith(     "0x     ")  ||  str.startsWith(     "-0x     ")  ||  str.startsWith(     "0X     ")  ||  str.startsWith(     "-0X     "))  {  int  hexDigits  =  str.length()  -  2;  //  drop  0x      [BUGGY]  if(hexDigits  <  0  ||  str.startsWith( "-0 "))  {  return  null;  }  [BUGGY]      hexDigits--;  }  if  (hexDigits  >  8)  {  //  too  many  for  an  int  return  createLong(str);  }  return  createInteger(str);  }  char  lastChar  =  str.charAt(str.length()  -  1);  String  mant;  String  dec;  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  	projects/Lang7/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	457	458	1	replace	if(hexDigits  <  0  ||  str.startsWith( "-0 "))  {  return  null;  }	  if(hexDigits    <    0    ||    str.startsWith(   "-0   "))    {    //    drop    0x-hexDigits--;    }    	non-compiled	[CE]  ')'  expected	55	None	replace
34	[BUG]  [BUGGY]  if(dec  ==  null)  {  if(str.startsWith( "-   "))  {  int  hexDigits  =  str.length();  if(hexDigits  <  0)  {  return  createInteger(str);  }  [CE]  ')'  expected  [FE]            AssertionError      [CONTEXT]      return  null;  }  if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(     "A  blank  string  is  not  a  valid  number     ");  }  if  (str.startsWith(     "--     "))  {  return  null;  }  if  (str.startsWith(     "0x     ")  ||  str.startsWith(     "-0x     ")  ||  str.startsWith(     "0X     ")  ||  str.startsWith(     "-0X     "))  {  int  hexDigits  =  str.length()  -  2;  //  drop  0x      [BUGGY]  if(dec  ==  null)  {  if(str.startsWith( "-   "))  {  int  hexDigits  =  str.length();  if(hexDigits  <  0)  {  return  createInteger(str);  }  [BUGGY]      if  (str.startsWith(     "-     "))  {  //  drop  -    hexDigits--;  hexDigits--;  }  if  (hexDigits  >  8)  {  //  too  many  for  an  int  return  createLong(str);  }  return  createInteger(str);  }  char  lastChar  =  str.charAt(str.length()  -  1);  String  mant;  String  dec;  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  	projects/Lang7/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	457	458	1	replace	if(dec  ==  null)  {  if(str.startsWith( "-   "))  {  int  hexDigits  =  str.length();  if(hexDigits  <  0)  {  return  createInteger(str);  }	  if(str.startsWith(   "-       "))    {    int    hexDigits    =    str.length()    -    2;    if(hexDigits    <    0)    {    return    createInteger(str);    }    	non-compiled	[CE]  ')'  expected	24	None	replace
35	[BUG]  [BUGGY]  if(str.startsWith( "- "))  {  int  hexDigits  =  str.length();  if(hexDigits  <  0)  {  return  createInteger(str);  }  [CE]  ')'  expected  [FE]              AssertionError      [CONTEXT]      return  null;  }  if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(     "A  blank  string  is  not  a  valid  number     ");  }  if  (str.startsWith(     "--     "))  {  return  null;  }  if  (str.startsWith(     "0x     ")  ||  str.startsWith(     "-0x     ")  ||  str.startsWith(     "0X     ")  ||  str.startsWith(     "-0X     "))  {  int  hexDigits  =  str.length()  -  2;  //  drop  0x      [BUGGY]  if(str.startsWith( "- "))  {  int  hexDigits  =  str.length();  if(hexDigits  <  0)  {  return  createInteger(str);  }  [BUGGY]      if  (str.startsWith(     "-     "))  {  //  drop  -    hexDigits--;  hexDigits--;  }  if  (hexDigits  >  8)  {  //  too  many  for  an  int  return  createLong(str);  }  return  createInteger(str);  }  char  lastChar  =  str.charAt(str.length()  -  1);  String  mant;  String  dec;  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  	projects/Lang7/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	457	458	1	replace	if(str.startsWith( "- "))  {  int  hexDigits  =  str.length();  if(hexDigits  <  0)  {  return  createInteger(str);  }	  if(str.startsWith(   "-       "))    {    int    hexDigits    =    str.length()    -    2;    if(hexDigits    <    0)    {    return    createInteger(str);    }    	non-compiled	[CE]  ')'  expected	24	None	replace
36	[BUG]  [BUGGY]  ||  str.startsWith( "- "))  {  int  hexDigits  =  str.length();  if(hexDigits  <  0)  {  return  createInteger(str);  }  [CE]  [FE]                AssertionError      [CONTEXT]      return  null;  }  if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(     "A  blank  string  is  not  a  valid  number     ");  }  if  (str.startsWith(     "--     "))  {  return  null;  }  if  (str.startsWith(     "0x     ")  ||  str.startsWith(     "-0x     ")  ||  str.startsWith(     "0X     ")  ||  str.startsWith(     "-0X     "))  {  int  hexDigits  =  str.length()  -  2;  //  drop  0x      [BUGGY]  ||  str.startsWith( "- "))  {  int  hexDigits  =  str.length();  if(hexDigits  <  0)  {  return  createInteger(str);  }  [BUGGY]      if  (str.startsWith(     "-     "))  {  //  drop  -    hexDigits--;  hexDigits--;  }  if  (hexDigits  >  8)  {  //  too  many  for  an  int  return  createLong(str);  }  return  createInteger(str);  }  char  lastChar  =  str.charAt(str.length()  -  1);  String  mant;  String  dec;  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  	projects/Lang7/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	457	458	1	replace	||  str.startsWith( "- "))  {  int  hexDigits  =  str.length();  if(hexDigits  <  0)  {  return  createInteger(str);  }	  if(str.startsWith(   "-       "))    {    int    hexDigits    =    str.length()    -    2;    if(hexDigits    <    0)    {    return    createInteger(str);    }    	non-compiled	[CE]  	24	None	replace
37	[BUG]  [BUGGY]  Integer  hexDigits  =  str.length();  if(hexDigits  <  0)  {  return  createInteger(str);  }  [CE]  ')'  expected  [FE]                  AssertionError      [CONTEXT]      return  null;  }  if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(     "A  blank  string  is  not  a  valid  number     ");  }  if  (str.startsWith(     "--     "))  {  return  null;  }  if  (str.startsWith(     "0x     ")  ||  str.startsWith(     "-0x     ")  ||  str.startsWith(     "0X     ")  ||  str.startsWith(     "-0X     "))  {  int  hexDigits  =  str.length()  -  2;  //  drop  0x      [BUGGY]  Integer  hexDigits  =  str.length();  if(hexDigits  <  0)  {  return  createInteger(str);  }  [BUGGY]      if  (str.startsWith(     "-     "))  {  //  drop  -    hexDigits--;  hexDigits--;  }  if  (hexDigits  >  8)  {  //  too  many  for  an  int  return  createLong(str);  }  return  createInteger(str);  }  char  lastChar  =  str.charAt(str.length()  -  1);  String  mant;  String  dec;  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  	projects/Lang7/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	457	458	1	replace	Integer  hexDigits  =  str.length();  if(hexDigits  <  0)  {  return  createInteger(str);  }	  if(str.startsWith(   "-       "))    {    int    hexDigits    =    str.length()    -    2;    if(hexDigits    <    0)    {    return    createInteger(str);    }    	non-compiled	[CE]  ')'  expected	24	None	replace
38	[BUG]  [BUGGY]  if(hexDigits  >  0)  {  //  drop  -1;  }  [CE]  ')'  expected  [FE]              AssertionError      [CONTEXT]      return  null;  }  if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(     "A  blank  string  is  not  a  valid  number     ");  }  if  (str.startsWith(     "--     "))  {  return  null;  }  if  (str.startsWith(     "0x     ")  ||  str.startsWith(     "-0x     ")  ||  str.startsWith(     "0X     ")  ||  str.startsWith(     "-0X     "))  {  int  hexDigits  =  str.length()  -  2;  //  drop  0x      [BUGGY]  if(hexDigits  >  0)  {  //  drop  -1;  }  [BUGGY]      hexDigits--;  }  if  (hexDigits  >  8)  {  //  too  many  for  an  int  return  createLong(str);  }  return  createInteger(str);  }  char  lastChar  =  str.charAt(str.length()  -  1);  String  mant;  String  dec;  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  	projects/Lang7/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	457	458	1	replace	if(hexDigits  >  0)  {  //  drop  -1;  }	  if(hexDigits    <    8)    {    //    drop    -1;    }    	non-compiled	[CE]  ')'  expected	37	None	replace
39	[BUG]  [BUGGY]  if(hexDigits  <  0)  {  //  drop  -1;  }  [CE]  ')'  expected  [FE]                AssertionError      [CONTEXT]      return  null;  }  if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(     "A  blank  string  is  not  a  valid  number     ");  }  if  (str.startsWith(     "--     "))  {  return  null;  }  if  (str.startsWith(     "0x     ")  ||  str.startsWith(     "-0x     ")  ||  str.startsWith(     "0X     ")  ||  str.startsWith(     "-0X     "))  {  int  hexDigits  =  str.length()  -  2;  //  drop  0x      [BUGGY]  if(hexDigits  <  0)  {  //  drop  -1;  }  [BUGGY]      hexDigits--;  }  if  (hexDigits  >  8)  {  //  too  many  for  an  int  return  createLong(str);  }  return  createInteger(str);  }  char  lastChar  =  str.charAt(str.length()  -  1);  String  mant;  String  dec;  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  	projects/Lang7/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	457	458	1	replace	if(hexDigits  <  0)  {  //  drop  -1;  }	  if(hexDigits    <    8)    {    //    drop    -1;    }    	non-compiled	[CE]  ')'  expected	37	None	replace
40	[BUG]  [BUGGY]  if(hexDigits  >  8)  {  //  drop  -1;  }  [CE]  ')'  expected  [FE]                  AssertionError      [CONTEXT]      return  null;  }  if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(     "A  blank  string  is  not  a  valid  number     ");  }  if  (str.startsWith(     "--     "))  {  return  null;  }  if  (str.startsWith(     "0x     ")  ||  str.startsWith(     "-0x     ")  ||  str.startsWith(     "0X     ")  ||  str.startsWith(     "-0X     "))  {  int  hexDigits  =  str.length()  -  2;  //  drop  0x      [BUGGY]  if(hexDigits  >  8)  {  //  drop  -1;  }  [BUGGY]      hexDigits--;  }  if  (hexDigits  >  8)  {  //  too  many  for  an  int  return  createLong(str);  }  return  createInteger(str);  }  char  lastChar  =  str.charAt(str.length()  -  1);  String  mant;  String  dec;  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  	projects/Lang7/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	457	458	1	replace	if(hexDigits  >  8)  {  //  drop  -1;  }	  if(hexDigits    <    8)    {    //    drop    -1;    }    	non-compiled	[CE]  ')'  expected	37	None	replace
41	[BUG]  [BUGGY]  if(str.startsWith( "-   "))  {  if(hexDigits  >  8)  {  if(hexDigits  >  0)  {  return  createInteger(str);  }  [CE]  ')'  expected  [FE]                AssertionError      [CONTEXT]      return  null;  }  if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(     "A  blank  string  is  not  a  valid  number     ");  }  if  (str.startsWith(     "--     "))  {  return  null;  }  if  (str.startsWith(     "0x     ")  ||  str.startsWith(     "-0x     ")  ||  str.startsWith(     "0X     ")  ||  str.startsWith(     "-0X     "))  {  int  hexDigits  =  str.length()  -  2;  //  drop  0x      [BUGGY]  if(str.startsWith( "-   "))  {  if(hexDigits  >  8)  {  if(hexDigits  >  0)  {  return  createInteger(str);  }  [BUGGY]      if  (str.startsWith(     "-     "))  {  //  drop  -    hexDigits--;  hexDigits--;  }  if  (hexDigits  >  8)  {  //  too  many  for  an  int  return  createLong(str);  }  return  createInteger(str);  }  char  lastChar  =  str.charAt(str.length()  -  1);  String  mant;  String  dec;  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  	projects/Lang7/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	457	458	1	replace	if(str.startsWith( "-   "))  {  if(hexDigits  >  8)  {  if(hexDigits  >  0)  {  return  createInteger(str);  }	  if(dec    ==    null)    {    if(hexDigits    >    0)    {    int    hexDigits    =    str.length();    if(hexDigits    <    0)    {    return    createInteger(str);    }    	non-compiled	[CE]  ')'  expected	21	None	replace
42	[BUG]  [BUGGY]  if(str.startsWith( "-   "))  {  if(hexDigits  >  0)  {  int  hexDigits  =  str.length();  if(hexDigits  <  0)  {  return  createInteger(  [CE]  ')'  expected  [FE]                  AssertionError      [CONTEXT]      return  null;  }  if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(     "A  blank  string  is  not  a  valid  number     ");  }  if  (str.startsWith(     "--     "))  {  return  null;  }  if  (str.startsWith(     "0x     ")  ||  str.startsWith(     "-0x     ")  ||  str.startsWith(     "0X     ")  ||  str.startsWith(     "-0X     "))  {  int  hexDigits  =  str.length()  -  2;  //  drop  0x      [BUGGY]  if(str.startsWith( "-   "))  {  if(hexDigits  >  0)  {  int  hexDigits  =  str.length();  if(hexDigits  <  0)  {  return  createInteger(  [BUGGY]      if  (str.startsWith(     "-     "))  {  //  drop  -    hexDigits--;  hexDigits--;  }  if  (hexDigits  >  8)  {  //  too  many  for  an  int  return  createLong(str);  }  return  createInteger(str);  }  char  lastChar  =  str.charAt(str.length()  -  1);  String  mant;  String  dec;  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  	projects/Lang7/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	457	458	1	replace	if(str.startsWith( "-   "))  {  if(hexDigits  >  0)  {  int  hexDigits  =  str.length();  if(hexDigits  <  0)  {  return  createInteger(	  if(dec    ==    null)    {    if(hexDigits    >    0)    {    int    hexDigits    =    str.length();    if(hexDigits    <    0)    {    return    createInteger(str);    }    	non-compiled	[CE]  ')'  expected	21	None	replace
43	[BUG]  [BUGGY]  if(hexDigits  <  0  ||  str.startsWith( "- "))  {  //  drop  1;  }  [CE]  ')'  expected  [FE]                AssertionError      [CONTEXT]      return  null;  }  if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(     "A  blank  string  is  not  a  valid  number     ");  }  if  (str.startsWith(     "--     "))  {  return  null;  }  if  (str.startsWith(     "0x     ")  ||  str.startsWith(     "-0x     ")  ||  str.startsWith(     "0X     ")  ||  str.startsWith(     "-0X     "))  {  int  hexDigits  =  str.length()  -  2;  //  drop  0x      [BUGGY]  if(hexDigits  <  0  ||  str.startsWith( "- "))  {  //  drop  1;  }  [BUGGY]      hexDigits--;  }  if  (hexDigits  >  8)  {  //  too  many  for  an  int  return  createLong(str);  }  return  createInteger(str);  }  char  lastChar  =  str.charAt(str.length()  -  1);  String  mant;  String  dec;  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  	projects/Lang7/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	457	458	1	replace	if(hexDigits  <  0  ||  str.startsWith( "- "))  {  //  drop  1;  }	  if(hexDigits    <    0    ||    str.startsWith(   "-   "))    {    //    drop    1    -    hexDigits--;    	non-compiled	[CE]  ')'  expected	49	None	replace
44	[BUG]  [BUGGY]  if(hexDigits  <  8)  {  //  drop  1  -  hexDigits--;  }  [CE]  ')'  expected  [FE]                  AssertionError      [CONTEXT]      return  null;  }  if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(     "A  blank  string  is  not  a  valid  number     ");  }  if  (str.startsWith(     "--     "))  {  return  null;  }  if  (str.startsWith(     "0x     ")  ||  str.startsWith(     "-0x     ")  ||  str.startsWith(     "0X     ")  ||  str.startsWith(     "-0X     "))  {  int  hexDigits  =  str.length()  -  2;  //  drop  0x      [BUGGY]  if(hexDigits  <  8)  {  //  drop  1  -  hexDigits--;  }  [BUGGY]      hexDigits--;  }  if  (hexDigits  >  8)  {  //  too  many  for  an  int  return  createLong(str);  }  return  createInteger(str);  }  char  lastChar  =  str.charAt(str.length()  -  1);  String  mant;  String  dec;  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  	projects/Lang7/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	457	458	1	replace	if(hexDigits  <  8)  {  //  drop  1  -  hexDigits--;  }	  if(hexDigits    <    0    ||    str.startsWith(   "-   "))    {    //    drop    1    -    hexDigits--;    	non-compiled	[CE]  ')'  expected	49	None	replace
45	[BUG]  [BUGGY]  if(hexDigits  <  0  ||  str.startsWith( "-0 "))  {  //  drop  1  -  hexDigits--;  }  [CE]  ')'  expected  [FE]                    AssertionError      [CONTEXT]      return  null;  }  if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(     "A  blank  string  is  not  a  valid  number     ");  }  if  (str.startsWith(     "--     "))  {  return  null;  }  if  (str.startsWith(     "0x     ")  ||  str.startsWith(     "-0x     ")  ||  str.startsWith(     "0X     ")  ||  str.startsWith(     "-0X     "))  {  int  hexDigits  =  str.length()  -  2;  //  drop  0x      [BUGGY]  if(hexDigits  <  0  ||  str.startsWith( "-0 "))  {  //  drop  1  -  hexDigits--;  }  [BUGGY]      hexDigits--;  }  if  (hexDigits  >  8)  {  //  too  many  for  an  int  return  createLong(str);  }  return  createInteger(str);  }  char  lastChar  =  str.charAt(str.length()  -  1);  String  mant;  String  dec;  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  	projects/Lang7/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	457	458	1	replace	if(hexDigits  <  0  ||  str.startsWith( "-0 "))  {  //  drop  1  -  hexDigits--;  }	  if(hexDigits    <    0    ||    str.startsWith(   "-   "))    {    //    drop    1    -    hexDigits--;    	non-compiled	[CE]  ')'  expected	49	None	replace
46	[BUG]  [BUGGY]  int  hexDigits  =  createInteger(str.length());  [CE]  ')'  expected  [FE]                AssertionError      [CONTEXT]      return  null;  }  if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(     "A  blank  string  is  not  a  valid  number     ");  }  if  (str.startsWith(     "--     "))  {  return  null;  }  if  (str.startsWith(     "0x     ")  ||  str.startsWith(     "-0x     ")  ||  str.startsWith(     "0X     ")  ||  str.startsWith(     "-0X     "))  {  int  hexDigits  =  str.length()  -  2;  //  drop  0x      [BUGGY]  int  hexDigits  =  createInteger(str.length());  [BUGGY]      if  (str.startsWith(     "-     "))  {  //  drop  -    hexDigits--;  hexDigits--;  }  if  (hexDigits  >  8)  {  //  too  many  for  an  int  return  createLong(str);  }  return  createInteger(str);  }  char  lastChar  =  str.charAt(str.length()  -  1);  String  mant;  String  dec;  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  	projects/Lang7/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	457	458	1	replace	int  hexDigits  =  createInteger(str.length());	  Integer    hexDigits    =    createInteger(str.length()    -    2);    	non-compiled	[CE]  ')'  expected	53	None	replace
47	[BUG]  [BUGGY]  if(hexDigits  ==  0  ||  str.startsWith( "-0 "))  {  //  drop  0;  }  [CE]  ')'  expected  [FE]                      AssertionError      [CONTEXT]      return  null;  }  if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(     "A  blank  string  is  not  a  valid  number     ");  }  if  (str.startsWith(     "--     "))  {  return  null;  }  if  (str.startsWith(     "0x     ")  ||  str.startsWith(     "-0x     ")  ||  str.startsWith(     "0X     ")  ||  str.startsWith(     "-0X     "))  {  int  hexDigits  =  str.length()  -  2;  //  drop  0x      [BUGGY]  if(hexDigits  ==  0  ||  str.startsWith( "-0 "))  {  //  drop  0;  }  [BUGGY]      hexDigits--;  }  if  (hexDigits  >  8)  {  //  too  many  for  an  int  return  createLong(str);  }  return  createInteger(str);  }  char  lastChar  =  str.charAt(str.length()  -  1);  String  mant;  String  dec;  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  	projects/Lang7/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	457	458	1	replace	if(hexDigits  ==  0  ||  str.startsWith( "-0 "))  {  //  drop  0;  }	  if(hexDigits    <    0    ||    str.startsWith(   "-0   "))    {    //    drop    0;    }    	non-compiled	[CE]  ')'  expected	30	None	replace
48	[BUG]  [BUGGY]  if(hexDigits  <  0  ||  str.startsWith( "-0 "))  {  //  drop  1;  }  [CE]  ')'  expected  [FE]                        AssertionError      [CONTEXT]      return  null;  }  if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(     "A  blank  string  is  not  a  valid  number     ");  }  if  (str.startsWith(     "--     "))  {  return  null;  }  if  (str.startsWith(     "0x     ")  ||  str.startsWith(     "-0x     ")  ||  str.startsWith(     "0X     ")  ||  str.startsWith(     "-0X     "))  {  int  hexDigits  =  str.length()  -  2;  //  drop  0x      [BUGGY]  if(hexDigits  <  0  ||  str.startsWith( "-0 "))  {  //  drop  1;  }  [BUGGY]      hexDigits--;  }  if  (hexDigits  >  8)  {  //  too  many  for  an  int  return  createLong(str);  }  return  createInteger(str);  }  char  lastChar  =  str.charAt(str.length()  -  1);  String  mant;  String  dec;  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  	projects/Lang7/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	457	458	1	replace	if(hexDigits  <  0  ||  str.startsWith( "-0 "))  {  //  drop  1;  }	  if(hexDigits    <    0    ||    str.startsWith(   "-0   "))    {    //    drop    0;    }    	non-compiled	[CE]  ')'  expected	30	None	replace
49	[BUG]  [BUGGY]  Integer  hexDigits  =  str.indexOf('0')+  2;  [CE]  ')'  expected  [FE]                    AssertionError      [CONTEXT]      return  null;  }  if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(     "A  blank  string  is  not  a  valid  number     ");  }  if  (str.startsWith(     "--     "))  {  return  null;  }  if  (str.startsWith(     "0x     ")  ||  str.startsWith(     "-0x     ")  ||  str.startsWith(     "0X     ")  ||  str.startsWith(     "-0X     "))  {  int  hexDigits  =  str.length()  -  2;  //  drop  0x      [BUGGY]  Integer  hexDigits  =  str.indexOf('0')+  2;  [BUGGY]      if  (str.startsWith(     "-     "))  {  //  drop  -    hexDigits--;  hexDigits--;  }  if  (hexDigits  >  8)  {  //  too  many  for  an  int  return  createLong(str);  }  return  createInteger(str);  }  char  lastChar  =  str.charAt(str.length()  -  1);  String  mant;  String  dec;  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  	projects/Lang7/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	457	458	1	replace	Integer  hexDigits  =  str.indexOf('0')+  2;	  Integer    hexDigits    =    str.indexOf('0')+    1;    	non-compiled	[CE]  ')'  expected	43	None	replace
50	[BUG]  [BUGGY]  Integer  hexDigits  =  str.indexOf('0')+  3;  [CE]  ')'  expected  [FE]                      AssertionError      [CONTEXT]      return  null;  }  if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(     "A  blank  string  is  not  a  valid  number     ");  }  if  (str.startsWith(     "--     "))  {  return  null;  }  if  (str.startsWith(     "0x     ")  ||  str.startsWith(     "-0x     ")  ||  str.startsWith(     "0X     ")  ||  str.startsWith(     "-0X     "))  {  int  hexDigits  =  str.length()  -  2;  //  drop  0x      [BUGGY]  Integer  hexDigits  =  str.indexOf('0')+  3;  [BUGGY]      if  (str.startsWith(     "-     "))  {  //  drop  -    hexDigits--;  hexDigits--;  }  if  (hexDigits  >  8)  {  //  too  many  for  an  int  return  createLong(str);  }  return  createInteger(str);  }  char  lastChar  =  str.charAt(str.length()  -  1);  String  mant;  String  dec;  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  	projects/Lang7/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	457	458	1	replace	Integer  hexDigits  =  str.indexOf('0')+  3;	  Integer    hexDigits    =    str.indexOf('0')+    1;    	non-compiled	[CE]  ')'  expected	43	None	replace
51	[BUG]  [BUGGY]  Integer  hexDigits  =  str.indexOf('0')/  1;  [CE]  ')'  expected  [FE]                        AssertionError      [CONTEXT]      return  null;  }  if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(     "A  blank  string  is  not  a  valid  number     ");  }  if  (str.startsWith(     "--     "))  {  return  null;  }  if  (str.startsWith(     "0x     ")  ||  str.startsWith(     "-0x     ")  ||  str.startsWith(     "0X     ")  ||  str.startsWith(     "-0X     "))  {  int  hexDigits  =  str.length()  -  2;  //  drop  0x      [BUGGY]  Integer  hexDigits  =  str.indexOf('0')/  1;  [BUGGY]      if  (str.startsWith(     "-     "))  {  //  drop  -    hexDigits--;  hexDigits--;  }  if  (hexDigits  >  8)  {  //  too  many  for  an  int  return  createLong(str);  }  return  createInteger(str);  }  char  lastChar  =  str.charAt(str.length()  -  1);  String  mant;  String  dec;  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  	projects/Lang7/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	457	458	1	replace	Integer  hexDigits  =  str.indexOf('0')/  1;	  Integer    hexDigits    =    str.indexOf('0')+    1;    	non-compiled	[CE]  ')'  expected	43	None	replace
52	[BUG]  [BUGGY]  if(hexDigits  ==  0  ||  str.startsWith( "-0 "))  {  return  null;  }  [CE]  ')'  expected  [FE]                  AssertionError      [CONTEXT]      return  null;  }  if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(     "A  blank  string  is  not  a  valid  number     ");  }  if  (str.startsWith(     "--     "))  {  return  null;  }  if  (str.startsWith(     "0x     ")  ||  str.startsWith(     "-0x     ")  ||  str.startsWith(     "0X     ")  ||  str.startsWith(     "-0X     "))  {  int  hexDigits  =  str.length()  -  2;  //  drop  0x      [BUGGY]  if(hexDigits  ==  0  ||  str.startsWith( "-0 "))  {  return  null;  }  [BUGGY]      hexDigits--;  }  if  (hexDigits  >  8)  {  //  too  many  for  an  int  return  createLong(str);  }  return  createInteger(str);  }  char  lastChar  =  str.charAt(str.length()  -  1);  String  mant;  String  dec;  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  	projects/Lang7/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	457	458	1	replace	if(hexDigits  ==  0  ||  str.startsWith( "-0 "))  {  return  null;  }	  if(hexDigits    <    0    ||    str.startsWith(   "-0   "))    {    return    null;    	non-compiled	[CE]  ')'  expected	73	None	replace
53	[BUG]  [BUGGY]  if(hexDigits  >=  0  ||  str.startsWith( "-0 "))  {  return  null;  }  [CE]  ')'  expected  [FE]                    AssertionError      [CONTEXT]      return  null;  }  if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(     "A  blank  string  is  not  a  valid  number     ");  }  if  (str.startsWith(     "--     "))  {  return  null;  }  if  (str.startsWith(     "0x     ")  ||  str.startsWith(     "-0x     ")  ||  str.startsWith(     "0X     ")  ||  str.startsWith(     "-0X     "))  {  int  hexDigits  =  str.length()  -  2;  //  drop  0x      [BUGGY]  if(hexDigits  >=  0  ||  str.startsWith( "-0 "))  {  return  null;  }  [BUGGY]      hexDigits--;  }  if  (hexDigits  >  8)  {  //  too  many  for  an  int  return  createLong(str);  }  return  createInteger(str);  }  char  lastChar  =  str.charAt(str.length()  -  1);  String  mant;  String  dec;  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  	projects/Lang7/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	457	458	1	replace	if(hexDigits  >=  0  ||  str.startsWith( "-0 "))  {  return  null;  }	  if(hexDigits    <    0    ||    str.startsWith(   "-0   "))    {    return    null;    	non-compiled	[CE]  ')'  expected	73	None	replace
54	[BUG]  [BUGGY]  if(hexDigits  >  0  ||  str.startsWith( "-0 "))  {  return  null;  }  [CE]  ')'  expected  [FE]                      AssertionError      [CONTEXT]      return  null;  }  if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(     "A  blank  string  is  not  a  valid  number     ");  }  if  (str.startsWith(     "--     "))  {  return  null;  }  if  (str.startsWith(     "0x     ")  ||  str.startsWith(     "-0x     ")  ||  str.startsWith(     "0X     ")  ||  str.startsWith(     "-0X     "))  {  int  hexDigits  =  str.length()  -  2;  //  drop  0x      [BUGGY]  if(hexDigits  >  0  ||  str.startsWith( "-0 "))  {  return  null;  }  [BUGGY]      hexDigits--;  }  if  (hexDigits  >  8)  {  //  too  many  for  an  int  return  createLong(str);  }  return  createInteger(str);  }  char  lastChar  =  str.charAt(str.length()  -  1);  String  mant;  String  dec;  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  	projects/Lang7/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	457	458	1	replace	if(hexDigits  >  0  ||  str.startsWith( "-0 "))  {  return  null;  }	  if(hexDigits    <    0    ||    str.startsWith(   "-0   "))    {    return    null;    	non-compiled	[CE]  ')'  expected	73	None	replace
55	[BUG]  [BUGGY]  if(hexDigits  <  0)  {  if(hexDigits  <  8)  {  return  null;  }  [CE]  ')'  expected  [FE]                AssertionError      [CONTEXT]      return  null;  }  if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(     "A  blank  string  is  not  a  valid  number     ");  }  if  (str.startsWith(     "--     "))  {  return  null;  }  if  (str.startsWith(     "0x     ")  ||  str.startsWith(     "-0x     ")  ||  str.startsWith(     "0X     ")  ||  str.startsWith(     "-0X     "))  {  int  hexDigits  =  str.length()  -  2;  //  drop  0x      [BUGGY]  if(hexDigits  <  0)  {  if(hexDigits  <  8)  {  return  null;  }  [BUGGY]      hexDigits--;  }  if  (hexDigits  >  8)  {  //  too  many  for  an  int  return  createLong(str);  }  return  createInteger(str);  }  char  lastChar  =  str.charAt(str.length()  -  1);  String  mant;  String  dec;  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  	projects/Lang7/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	457	458	1	replace	if(hexDigits  <  0)  {  if(hexDigits  <  8)  {  return  null;  }	  if(hexDigits    >    0)    {    if(hexDigits    <    8)    {    return    null;    }    	non-compiled	[CE]  ')'  expected	2	None	replace
56	[BUG]  [BUGGY]  if(hexDigits  <  0)  {  if(hexDigits  <  0)  {  return  null;  }  [CE]  ')'  expected  [FE]                  AssertionError      [CONTEXT]      return  null;  }  if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(     "A  blank  string  is  not  a  valid  number     ");  }  if  (str.startsWith(     "--     "))  {  return  null;  }  if  (str.startsWith(     "0x     ")  ||  str.startsWith(     "-0x     ")  ||  str.startsWith(     "0X     ")  ||  str.startsWith(     "-0X     "))  {  int  hexDigits  =  str.length()  -  2;  //  drop  0x      [BUGGY]  if(hexDigits  <  0)  {  if(hexDigits  <  0)  {  return  null;  }  [BUGGY]      hexDigits--;  }  if  (hexDigits  >  8)  {  //  too  many  for  an  int  return  createLong(str);  }  return  createInteger(str);  }  char  lastChar  =  str.charAt(str.length()  -  1);  String  mant;  String  dec;  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  	projects/Lang7/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	457	458	1	replace	if(hexDigits  <  0)  {  if(hexDigits  <  0)  {  return  null;  }	  if(hexDigits    >    0)    {    if(hexDigits    <    8)    {    return    null;    }    	non-compiled	[CE]  ')'  expected	2	None	replace
57	[BUG]  [BUGGY]  if(hexDigits  >  0)  {  if(hexDigits  <  0)  {  return  null;  }  [CE]  ')'  expected  [FE]                    AssertionError      [CONTEXT]      return  null;  }  if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(     "A  blank  string  is  not  a  valid  number     ");  }  if  (str.startsWith(     "--     "))  {  return  null;  }  if  (str.startsWith(     "0x     ")  ||  str.startsWith(     "-0x     ")  ||  str.startsWith(     "0X     ")  ||  str.startsWith(     "-0X     "))  {  int  hexDigits  =  str.length()  -  2;  //  drop  0x      [BUGGY]  if(hexDigits  >  0)  {  if(hexDigits  <  0)  {  return  null;  }  [BUGGY]      hexDigits--;  }  if  (hexDigits  >  8)  {  //  too  many  for  an  int  return  createLong(str);  }  return  createInteger(str);  }  char  lastChar  =  str.charAt(str.length()  -  1);  String  mant;  String  dec;  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  	projects/Lang7/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	457	458	1	replace	if(hexDigits  >  0)  {  if(hexDigits  <  0)  {  return  null;  }	  if(hexDigits    >    0)    {    if(hexDigits    <    8)    {    return    null;    }    	non-compiled	[CE]  ')'  expected	2	None	replace
58	[BUG]  [BUGGY]  if(hexDigits  >=  0)  {  if(hexDigits  <  8)  {  return  null;  }  [CE]  ')'  expected  [FE]                      AssertionError      [CONTEXT]      return  null;  }  if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(     "A  blank  string  is  not  a  valid  number     ");  }  if  (str.startsWith(     "--     "))  {  return  null;  }  if  (str.startsWith(     "0x     ")  ||  str.startsWith(     "-0x     ")  ||  str.startsWith(     "0X     ")  ||  str.startsWith(     "-0X     "))  {  int  hexDigits  =  str.length()  -  2;  //  drop  0x      [BUGGY]  if(hexDigits  >=  0)  {  if(hexDigits  <  8)  {  return  null;  }  [BUGGY]      hexDigits--;  }  if  (hexDigits  >  8)  {  //  too  many  for  an  int  return  createLong(str);  }  return  createInteger(str);  }  char  lastChar  =  str.charAt(str.length()  -  1);  String  mant;  String  dec;  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  	projects/Lang7/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	457	458	1	replace	if(hexDigits  >=  0)  {  if(hexDigits  <  8)  {  return  null;  }	  if(hexDigits    >    0)    {    if(hexDigits    <    8)    {    return    null;    }    	non-compiled	[CE]  ')'  expected	2	None	replace
59	[BUG]  [BUGGY]  if(hexDigits  <  0)  {  //  drop  0x-hexDigits--;  }  [CE]  ')'  expected  [FE]            AssertionError      [CONTEXT]      return  null;  }  if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(     "A  blank  string  is  not  a  valid  number     ");  }  if  (str.startsWith(     "--     "))  {  return  null;  }  if  (str.startsWith(     "0x     ")  ||  str.startsWith(     "-0x     ")  ||  str.startsWith(     "0X     ")  ||  str.startsWith(     "-0X     "))  {  int  hexDigits  =  str.length()  -  2;  //  drop  0x      [BUGGY]  if(hexDigits  <  0)  {  //  drop  0x-hexDigits--;  }  [BUGGY]      hexDigits--;  }  if  (hexDigits  >  8)  {  //  too  many  for  an  int  return  createLong(str);  }  return  createInteger(str);  }  char  lastChar  =  str.charAt(str.length()  -  1);  String  mant;  String  dec;  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  	projects/Lang7/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	457	458	1	replace	if(hexDigits  <  0)  {  //  drop  0x-hexDigits--;  }	  if(hexDigits    >    0)    {    //    drop    0x-hexDigits--;    }    	non-compiled	[CE]  ')'  expected	74	None	replace
60	[BUG]  [BUGGY]  if(hexDigits  ==  0)  {  //  drop  0x-hexDigits--;  }  [CE]  ')'  expected  [FE]              AssertionError      [CONTEXT]      return  null;  }  if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(     "A  blank  string  is  not  a  valid  number     ");  }  if  (str.startsWith(     "--     "))  {  return  null;  }  if  (str.startsWith(     "0x     ")  ||  str.startsWith(     "-0x     ")  ||  str.startsWith(     "0X     ")  ||  str.startsWith(     "-0X     "))  {  int  hexDigits  =  str.length()  -  2;  //  drop  0x      [BUGGY]  if(hexDigits  ==  0)  {  //  drop  0x-hexDigits--;  }  [BUGGY]      hexDigits--;  }  if  (hexDigits  >  8)  {  //  too  many  for  an  int  return  createLong(str);  }  return  createInteger(str);  }  char  lastChar  =  str.charAt(str.length()  -  1);  String  mant;  String  dec;  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  	projects/Lang7/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	457	458	1	replace	if(hexDigits  ==  0)  {  //  drop  0x-hexDigits--;  }	  if(hexDigits    >    0)    {    //    drop    0x-hexDigits--;    }    	non-compiled	[CE]  ')'  expected	74	None	replace
61	[BUG]  [BUGGY]  HexDigits  =  str.length();  [CE]  ')'  expected  [FE]            AssertionError      [CONTEXT]      return  null;  }  if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(     "A  blank  string  is  not  a  valid  number     ");  }  if  (str.startsWith(     "--     "))  {  return  null;  }  if  (str.startsWith(     "0x     ")  ||  str.startsWith(     "-0x     ")  ||  str.startsWith(     "0X     ")  ||  str.startsWith(     "-0X     "))  {  int  hexDigits  =  str.length()  -  2;  //  drop  0x      [BUGGY]  HexDigits  =  str.length();  [BUGGY]      if  (str.startsWith(     "-     "))  {  //  drop  -    hexDigits--;  hexDigits--;  }  if  (hexDigits  >  8)  {  //  too  many  for  an  int  return  createLong(str);  }  return  createInteger(str);  }  char  lastChar  =  str.charAt(str.length()  -  1);  String  mant;  String  dec;  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  	projects/Lang7/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	457	458	1	replace	HexDigits  =  str.length();	  hexDigits    =    str.length()    -    2;    	non-compiled	[CE]  ')'  expected	14	None	replace
62	[BUG]  [BUGGY]  if(hexDigits  <  0)  {  if(hexDigits  <  0)  {  return  createLong(str);  }  [CE]  ')'  expected  [FE]              AssertionError      [CONTEXT]      return  null;  }  if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(     "A  blank  string  is  not  a  valid  number     ");  }  if  (str.startsWith(     "--     "))  {  return  null;  }  if  (str.startsWith(     "0x     ")  ||  str.startsWith(     "-0x     ")  ||  str.startsWith(     "0X     ")  ||  str.startsWith(     "-0X     "))  {  int  hexDigits  =  str.length()  -  2;  //  drop  0x      [BUGGY]  if(hexDigits  <  0)  {  if(hexDigits  <  0)  {  return  createLong(str);  }  [BUGGY]      hexDigits--;  }  if  (hexDigits  >  8)  {  //  too  many  for  an  int  return  createLong(str);  }  return  createInteger(str);  }  char  lastChar  =  str.charAt(str.length()  -  1);  String  mant;  String  dec;  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  	projects/Lang7/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	457	458	1	replace	if(hexDigits  <  0)  {  if(hexDigits  <  0)  {  return  createLong(str);  }	  if(hexDigits    >    0)    {    if(hexDigits    <    8)    {    return    createLong(str);    }    	non-compiled	[CE]  ')'  expected	1	None	replace
63	[BUG]  [BUGGY]  if(hexDigits  <  =  0)  {  if(hexDigits  <  8)  {  return  createLong(str);  }  [CE]  ')'  expected  [FE]                AssertionError      [CONTEXT]      return  null;  }  if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(     "A  blank  string  is  not  a  valid  number     ");  }  if  (str.startsWith(     "--     "))  {  return  null;  }  if  (str.startsWith(     "0x     ")  ||  str.startsWith(     "-0x     ")  ||  str.startsWith(     "0X     ")  ||  str.startsWith(     "-0X     "))  {  int  hexDigits  =  str.length()  -  2;  //  drop  0x      [BUGGY]  if(hexDigits  <  =  0)  {  if(hexDigits  <  8)  {  return  createLong(str);  }  [BUGGY]      hexDigits--;  }  if  (hexDigits  >  8)  {  //  too  many  for  an  int  return  createLong(str);  }  return  createInteger(str);  }  char  lastChar  =  str.charAt(str.length()  -  1);  String  mant;  String  dec;  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  	projects/Lang7/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	457	458	1	replace	if(hexDigits  <  =  0)  {  if(hexDigits  <  8)  {  return  createLong(str);  }	  if(hexDigits    >    0)    {    if(hexDigits    <    8)    {    return    createLong(str);    }    	non-compiled	[CE]  ')'  expected	1	None	replace
64	[BUG]  [BUGGY]  if(hexDigits  >  0)  {  if(hexDigits  <  0)  {  return  createLong(str);  }  [CE]  ')'  expected  [FE]                  AssertionError      [CONTEXT]      return  null;  }  if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(     "A  blank  string  is  not  a  valid  number     ");  }  if  (str.startsWith(     "--     "))  {  return  null;  }  if  (str.startsWith(     "0x     ")  ||  str.startsWith(     "-0x     ")  ||  str.startsWith(     "0X     ")  ||  str.startsWith(     "-0X     "))  {  int  hexDigits  =  str.length()  -  2;  //  drop  0x      [BUGGY]  if(hexDigits  >  0)  {  if(hexDigits  <  0)  {  return  createLong(str);  }  [BUGGY]      hexDigits--;  }  if  (hexDigits  >  8)  {  //  too  many  for  an  int  return  createLong(str);  }  return  createInteger(str);  }  char  lastChar  =  str.charAt(str.length()  -  1);  String  mant;  String  dec;  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  	projects/Lang7/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	457	458	1	replace	if(hexDigits  >  0)  {  if(hexDigits  <  0)  {  return  createLong(str);  }	  if(hexDigits    >    0)    {    if(hexDigits    <    8)    {    return    createLong(str);    }    	non-compiled	[CE]  ')'  expected	1	None	replace
65	[BUG]  [BUGGY]  if(hexDigits  >=  0)  {  if(hexDigits  <  8)  {  return  createLong(str);  }  [CE]  ')'  expected  [FE]                    AssertionError      [CONTEXT]      return  null;  }  if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(     "A  blank  string  is  not  a  valid  number     ");  }  if  (str.startsWith(     "--     "))  {  return  null;  }  if  (str.startsWith(     "0x     ")  ||  str.startsWith(     "-0x     ")  ||  str.startsWith(     "0X     ")  ||  str.startsWith(     "-0X     "))  {  int  hexDigits  =  str.length()  -  2;  //  drop  0x      [BUGGY]  if(hexDigits  >=  0)  {  if(hexDigits  <  8)  {  return  createLong(str);  }  [BUGGY]      hexDigits--;  }  if  (hexDigits  >  8)  {  //  too  many  for  an  int  return  createLong(str);  }  return  createInteger(str);  }  char  lastChar  =  str.charAt(str.length()  -  1);  String  mant;  String  dec;  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  	projects/Lang7/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	457	458	1	replace	if(hexDigits  >=  0)  {  if(hexDigits  <  8)  {  return  createLong(str);  }	  if(hexDigits    >    0)    {    if(hexDigits    <    8)    {    return    createLong(str);    }    	non-compiled	[CE]  ')'  expected	1	None	replace
66	[BUG]  [BUGGY]  if(hexDigits  ==  0)  {  return  createLong(str);  }  [CE]  ')'  expected  [FE]                  AssertionError      [CONTEXT]      return  null;  }  if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(     "A  blank  string  is  not  a  valid  number     ");  }  if  (str.startsWith(     "--     "))  {  return  null;  }  if  (str.startsWith(     "0x     ")  ||  str.startsWith(     "-0x     ")  ||  str.startsWith(     "0X     ")  ||  str.startsWith(     "-0X     "))  {  int  hexDigits  =  str.length()  -  2;  //  drop  0x      [BUGGY]  if(hexDigits  ==  0)  {  return  createLong(str);  }  [BUGGY]      hexDigits--;  }  if  (hexDigits  >  8)  {  //  too  many  for  an  int  return  createLong(str);  }  return  createInteger(str);  }  char  lastChar  =  str.charAt(str.length()  -  1);  String  mant;  String  dec;  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  	projects/Lang7/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	457	458	1	replace	if(hexDigits  ==  0)  {  return  createLong(str);  }	  if(hexDigits    <    0)    {    return    createLong(str);    }    	non-compiled	[CE]  ')'  expected	58	None	replace
67	[BUG]  [BUGGY]  if(hexDigits  >=  0)  {  return  createLong(str);  }  [CE]  ')'  expected  [FE]                    AssertionError      [CONTEXT]      return  null;  }  if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(     "A  blank  string  is  not  a  valid  number     ");  }  if  (str.startsWith(     "--     "))  {  return  null;  }  if  (str.startsWith(     "0x     ")  ||  str.startsWith(     "-0x     ")  ||  str.startsWith(     "0X     ")  ||  str.startsWith(     "-0X     "))  {  int  hexDigits  =  str.length()  -  2;  //  drop  0x      [BUGGY]  if(hexDigits  >=  0)  {  return  createLong(str);  }  [BUGGY]      hexDigits--;  }  if  (hexDigits  >  8)  {  //  too  many  for  an  int  return  createLong(str);  }  return  createInteger(str);  }  char  lastChar  =  str.charAt(str.length()  -  1);  String  mant;  String  dec;  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  	projects/Lang7/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	457	458	1	replace	if(hexDigits  >=  0)  {  return  createLong(str);  }	  if(hexDigits    <    0)    {    return    createLong(str);    }    	non-compiled	[CE]  ')'  expected	58	None	replace
68	[BUG]  [BUGGY]  Integer  hexDigits  =  createInteger(str,  1);  [CE]  ')'  expected  [FE]            AssertionError      [CONTEXT]      return  null;  }  if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(     "A  blank  string  is  not  a  valid  number     ");  }  if  (str.startsWith(     "--     "))  {  return  null;  }  if  (str.startsWith(     "0x     ")  ||  str.startsWith(     "-0x     ")  ||  str.startsWith(     "0X     ")  ||  str.startsWith(     "-0X     "))  {  int  hexDigits  =  str.length()  -  2;  //  drop  0x      [BUGGY]  Integer  hexDigits  =  createInteger(str,  1);  [BUGGY]      if  (str.startsWith(     "-     "))  {  //  drop  -    hexDigits--;  hexDigits--;  }  if  (hexDigits  >  8)  {  //  too  many  for  an  int  return  createLong(str);  }  return  createInteger(str);  }  char  lastChar  =  str.charAt(str.length()  -  1);  String  mant;  String  dec;  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  	projects/Lang7/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	457	458	1	replace	Integer  hexDigits  =  createInteger(str,  1);	  Integer    hexDigits    =    createInteger(str,    dec);    	non-compiled	[CE]  ')'  expected	79	None	replace
69	[BUG]  [BUGGY]  Integer  hexDigits  =  createInteger(str,  2);  [CE]  ')'  expected  [FE]              AssertionError      [CONTEXT]      return  null;  }  if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(     "A  blank  string  is  not  a  valid  number     ");  }  if  (str.startsWith(     "--     "))  {  return  null;  }  if  (str.startsWith(     "0x     ")  ||  str.startsWith(     "-0x     ")  ||  str.startsWith(     "0X     ")  ||  str.startsWith(     "-0X     "))  {  int  hexDigits  =  str.length()  -  2;  //  drop  0x      [BUGGY]  Integer  hexDigits  =  createInteger(str,  2);  [BUGGY]      if  (str.startsWith(     "-     "))  {  //  drop  -    hexDigits--;  hexDigits--;  }  if  (hexDigits  >  8)  {  //  too  many  for  an  int  return  createLong(str);  }  return  createInteger(str);  }  char  lastChar  =  str.charAt(str.length()  -  1);  String  mant;  String  dec;  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  	projects/Lang7/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	457	458	1	replace	Integer  hexDigits  =  createInteger(str,  2);	  Integer    hexDigits    =    createInteger(str,    dec);    	non-compiled	[CE]  ')'  expected	79	None	replace
70	[BUG]  [BUGGY]  Integer  hexDigits  =  createInteger(str,  exp);  [CE]  ')'  expected  [FE]                AssertionError      [CONTEXT]      return  null;  }  if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(     "A  blank  string  is  not  a  valid  number     ");  }  if  (str.startsWith(     "--     "))  {  return  null;  }  if  (str.startsWith(     "0x     ")  ||  str.startsWith(     "-0x     ")  ||  str.startsWith(     "0X     ")  ||  str.startsWith(     "-0X     "))  {  int  hexDigits  =  str.length()  -  2;  //  drop  0x      [BUGGY]  Integer  hexDigits  =  createInteger(str,  exp);  [BUGGY]      if  (str.startsWith(     "-     "))  {  //  drop  -    hexDigits--;  hexDigits--;  }  if  (hexDigits  >  8)  {  //  too  many  for  an  int  return  createLong(str);  }  return  createInteger(str);  }  char  lastChar  =  str.charAt(str.length()  -  1);  String  mant;  String  dec;  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  	projects/Lang7/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	457	458	1	replace	Integer  hexDigits  =  createInteger(str,  exp);	  Integer    hexDigits    =    createInteger(str,    dec);    	non-compiled	[CE]  ')'  expected	79	None	replace
71	[BUG]  [BUGGY]  Integer  hexDigits  =  createInteger(str,  4);  [CE]  ')'  expected  [FE]                  AssertionError      [CONTEXT]      return  null;  }  if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(     "A  blank  string  is  not  a  valid  number     ");  }  if  (str.startsWith(     "--     "))  {  return  null;  }  if  (str.startsWith(     "0x     ")  ||  str.startsWith(     "-0x     ")  ||  str.startsWith(     "0X     ")  ||  str.startsWith(     "-0X     "))  {  int  hexDigits  =  str.length()  -  2;  //  drop  0x      [BUGGY]  Integer  hexDigits  =  createInteger(str,  4);  [BUGGY]      if  (str.startsWith(     "-     "))  {  //  drop  -    hexDigits--;  hexDigits--;  }  if  (hexDigits  >  8)  {  //  too  many  for  an  int  return  createLong(str);  }  return  createInteger(str);  }  char  lastChar  =  str.charAt(str.length()  -  1);  String  mant;  String  dec;  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  	projects/Lang7/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	457	458	1	replace	Integer  hexDigits  =  createInteger(str,  4);	  Integer    hexDigits    =    createInteger(str,    dec);    	non-compiled	[CE]  ')'  expected	79	None	replace
72	[BUG]  [BUGGY]  if(hexDigits  >  0)  {  return  createInteger(str);  }  [CE]  ')'  expected  [FE]                AssertionError      [CONTEXT]      return  null;  }  if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(     "A  blank  string  is  not  a  valid  number     ");  }  if  (str.startsWith(     "--     "))  {  return  null;  }  if  (str.startsWith(     "0x     ")  ||  str.startsWith(     "-0x     ")  ||  str.startsWith(     "0X     ")  ||  str.startsWith(     "-0X     "))  {  int  hexDigits  =  str.length()  -  2;  //  drop  0x      [BUGGY]  if(hexDigits  >  0)  {  return  createInteger(str);  }  [BUGGY]      hexDigits--;  }  if  (hexDigits  >  8)  {  //  too  many  for  an  int  return  createLong(str);  }  return  createInteger(str);  }  char  lastChar  =  str.charAt(str.length()  -  1);  String  mant;  String  dec;  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  	projects/Lang7/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	457	458	1	replace	if(hexDigits  >  0)  {  return  createInteger(str);  }	  if(hexDigits    <    0)    {    return    createInteger(str);    }    	non-compiled	[CE]  ')'  expected	75	None	replace
73	[BUG]  [BUGGY]  if(hexDigits  ==  0)  {  return  createInteger(str);  }  [CE]  ')'  expected  [FE]                  AssertionError      [CONTEXT]      return  null;  }  if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(     "A  blank  string  is  not  a  valid  number     ");  }  if  (str.startsWith(     "--     "))  {  return  null;  }  if  (str.startsWith(     "0x     ")  ||  str.startsWith(     "-0x     ")  ||  str.startsWith(     "0X     ")  ||  str.startsWith(     "-0X     "))  {  int  hexDigits  =  str.length()  -  2;  //  drop  0x      [BUGGY]  if(hexDigits  ==  0)  {  return  createInteger(str);  }  [BUGGY]      hexDigits--;  }  if  (hexDigits  >  8)  {  //  too  many  for  an  int  return  createLong(str);  }  return  createInteger(str);  }  char  lastChar  =  str.charAt(str.length()  -  1);  String  mant;  String  dec;  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  	projects/Lang7/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	457	458	1	replace	if(hexDigits  ==  0)  {  return  createInteger(str);  }	  if(hexDigits    <    0)    {    return    createInteger(str);    }    	non-compiled	[CE]  ')'  expected	75	None	replace
74	[BUG]  [BUGGY]  if(hexDigits  >=  0)  {  return  createInteger(str);  }  [CE]  ')'  expected  [FE]                    AssertionError      [CONTEXT]      return  null;  }  if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(     "A  blank  string  is  not  a  valid  number     ");  }  if  (str.startsWith(     "--     "))  {  return  null;  }  if  (str.startsWith(     "0x     ")  ||  str.startsWith(     "-0x     ")  ||  str.startsWith(     "0X     ")  ||  str.startsWith(     "-0X     "))  {  int  hexDigits  =  str.length()  -  2;  //  drop  0x      [BUGGY]  if(hexDigits  >=  0)  {  return  createInteger(str);  }  [BUGGY]      hexDigits--;  }  if  (hexDigits  >  8)  {  //  too  many  for  an  int  return  createLong(str);  }  return  createInteger(str);  }  char  lastChar  =  str.charAt(str.length()  -  1);  String  mant;  String  dec;  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  	projects/Lang7/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	457	458	1	replace	if(hexDigits  >=  0)  {  return  createInteger(str);  }	  if(hexDigits    <    0)    {    return    createInteger(str);    }    	non-compiled	[CE]  ')'  expected	75	None	replace
75	[BUG]  [BUGGY]  if(hexDigits  >  8)  {  return  createInteger(str);  }  [CE]  ')'  expected  [FE]                      AssertionError      [CONTEXT]      return  null;  }  if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(     "A  blank  string  is  not  a  valid  number     ");  }  if  (str.startsWith(     "--     "))  {  return  null;  }  if  (str.startsWith(     "0x     ")  ||  str.startsWith(     "-0x     ")  ||  str.startsWith(     "0X     ")  ||  str.startsWith(     "-0X     "))  {  int  hexDigits  =  str.length()  -  2;  //  drop  0x      [BUGGY]  if(hexDigits  >  8)  {  return  createInteger(str);  }  [BUGGY]      hexDigits--;  }  if  (hexDigits  >  8)  {  //  too  many  for  an  int  return  createLong(str);  }  return  createInteger(str);  }  char  lastChar  =  str.charAt(str.length()  -  1);  String  mant;  String  dec;  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  	projects/Lang7/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	457	458	1	replace	if(hexDigits  >  8)  {  return  createInteger(str);  }	  if(hexDigits    <    8)    {    return    createInteger(str);    }    	non-compiled	[CE]  ')'  expected	12	None	replace
76	[BUG]  [BUGGY]  if(hexDigits  ==  8)  {  if(str.startsWith( "- "))  {  //  drop  0;  }  [CE]  ')'  expected  [FE]            AssertionError      [CONTEXT]      return  null;  }  if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(     "A  blank  string  is  not  a  valid  number     ");  }  if  (str.startsWith(     "--     "))  {  return  null;  }  if  (str.startsWith(     "0x     ")  ||  str.startsWith(     "-0x     ")  ||  str.startsWith(     "0X     ")  ||  str.startsWith(     "-0X     "))  {  int  hexDigits  =  str.length()  -  2;  //  drop  0x      [BUGGY]  if(hexDigits  ==  8)  {  if(str.startsWith( "- "))  {  //  drop  0;  }  [BUGGY]      hexDigits--;  }  if  (hexDigits  >  8)  {  //  too  many  for  an  int  return  createLong(str);  }  return  createInteger(str);  }  char  lastChar  =  str.charAt(str.length()  -  1);  String  mant;  String  dec;  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  	projects/Lang7/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	457	458	1	replace	if(hexDigits  ==  8)  {  if(str.startsWith( "- "))  {  //  drop  0;  }	  if(hexDigits    ==    0)    {    if(str.startsWith(   "-   "))    {    //    drop    -    hexDigits--;    }    	non-compiled	[CE]  ')'  expected	65	None	replace
77	[BUG]  [BUGGY]  if(hexDigits  ==  0)  {  return  null;  }  [CE]  ')'  expected  [FE]                AssertionError      [CONTEXT]      return  null;  }  if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(     "A  blank  string  is  not  a  valid  number     ");  }  if  (str.startsWith(     "--     "))  {  return  null;  }  if  (str.startsWith(     "0x     ")  ||  str.startsWith(     "-0x     ")  ||  str.startsWith(     "0X     ")  ||  str.startsWith(     "-0X     "))  {  int  hexDigits  =  str.length()  -  2;  //  drop  0x      [BUGGY]  if(hexDigits  ==  0)  {  return  null;  }  [BUGGY]      hexDigits--;  }  if  (hexDigits  >  8)  {  //  too  many  for  an  int  return  createLong(str);  }  return  createInteger(str);  }  char  lastChar  =  str.charAt(str.length()  -  1);  String  mant;  String  dec;  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  	projects/Lang7/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	457	458	1	replace	if(hexDigits  ==  0)  {  return  null;  }	  if(hexDigits    ==    0)    {    //    drop    0;    }    	non-compiled	[CE]  ')'  expected	57	None	replace
78	[BUG]  [BUGGY]  if(hexDigits  ==  8)  {  //  drop  0;  }  [CE]  ')'  expected  [FE]                  AssertionError      [CONTEXT]      return  null;  }  if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(     "A  blank  string  is  not  a  valid  number     ");  }  if  (str.startsWith(     "--     "))  {  return  null;  }  if  (str.startsWith(     "0x     ")  ||  str.startsWith(     "-0x     ")  ||  str.startsWith(     "0X     ")  ||  str.startsWith(     "-0X     "))  {  int  hexDigits  =  str.length()  -  2;  //  drop  0x      [BUGGY]  if(hexDigits  ==  8)  {  //  drop  0;  }  [BUGGY]      hexDigits--;  }  if  (hexDigits  >  8)  {  //  too  many  for  an  int  return  createLong(str);  }  return  createInteger(str);  }  char  lastChar  =  str.charAt(str.length()  -  1);  String  mant;  String  dec;  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  	projects/Lang7/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	457	458	1	replace	if(hexDigits  ==  8)  {  //  drop  0;  }	  if(hexDigits    ==    0)    {    //    drop    0;    }    	non-compiled	[CE]  ')'  expected	57	None	replace
79	[BUG]  [BUGGY]  if(hexDigits  >  0)  {  if(str.startsWith( "- "))  {  //  drop  0;  }  [CE]  ')'  expected  [FE]            AssertionError      [CONTEXT]      return  null;  }  if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(     "A  blank  string  is  not  a  valid  number     ");  }  if  (str.startsWith(     "--     "))  {  return  null;  }  if  (str.startsWith(     "0x     ")  ||  str.startsWith(     "-0x     ")  ||  str.startsWith(     "0X     ")  ||  str.startsWith(     "-0X     "))  {  int  hexDigits  =  str.length()  -  2;  //  drop  0x      [BUGGY]  if(hexDigits  >  0)  {  if(str.startsWith( "- "))  {  //  drop  0;  }  [BUGGY]      hexDigits--;  }  if  (hexDigits  >  8)  {  //  too  many  for  an  int  return  createLong(str);  }  return  createInteger(str);  }  char  lastChar  =  str.charAt(str.length()  -  1);  String  mant;  String  dec;  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  	projects/Lang7/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	457	458	1	replace	if(hexDigits  >  0)  {  if(str.startsWith( "- "))  {  //  drop  0;  }	  if(hexDigits    >    8)    {    if(str.startsWith(   "-   "))    {    //    drop    0;    }    	non-compiled	[CE]  ')'  expected	45	None	replace
80	[BUG]  [BUGGY]  if(hexDigits  ==  0)  {  if(str.startsWith( "- "))  {  //  drop  0;  }  [CE]  ')'  expected  [FE]              AssertionError      [CONTEXT]      return  null;  }  if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(     "A  blank  string  is  not  a  valid  number     ");  }  if  (str.startsWith(     "--     "))  {  return  null;  }  if  (str.startsWith(     "0x     ")  ||  str.startsWith(     "-0x     ")  ||  str.startsWith(     "0X     ")  ||  str.startsWith(     "-0X     "))  {  int  hexDigits  =  str.length()  -  2;  //  drop  0x      [BUGGY]  if(hexDigits  ==  0)  {  if(str.startsWith( "- "))  {  //  drop  0;  }  [BUGGY]      hexDigits--;  }  if  (hexDigits  >  8)  {  //  too  many  for  an  int  return  createLong(str);  }  return  createInteger(str);  }  char  lastChar  =  str.charAt(str.length()  -  1);  String  mant;  String  dec;  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  	projects/Lang7/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	457	458	1	replace	if(hexDigits  ==  0)  {  if(str.startsWith( "- "))  {  //  drop  0;  }	  if(hexDigits    >    8)    {    if(str.startsWith(   "-   "))    {    //    drop    0;    }    	non-compiled	[CE]  ')'  expected	45	None	replace
81	[BUG]  [BUGGY]  if(hexDigits  >  0)  {  if(str.startsWith( "- "))  {  return  null;  }  [CE]  ')'  expected  [FE]                AssertionError      [CONTEXT]      return  null;  }  if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(     "A  blank  string  is  not  a  valid  number     ");  }  if  (str.startsWith(     "--     "))  {  return  null;  }  if  (str.startsWith(     "0x     ")  ||  str.startsWith(     "-0x     ")  ||  str.startsWith(     "0X     ")  ||  str.startsWith(     "-0X     "))  {  int  hexDigits  =  str.length()  -  2;  //  drop  0x      [BUGGY]  if(hexDigits  >  0)  {  if(str.startsWith( "- "))  {  return  null;  }  [BUGGY]      hexDigits--;  }  if  (hexDigits  >  8)  {  //  too  many  for  an  int  return  createLong(str);  }  return  createInteger(str);  }  char  lastChar  =  str.charAt(str.length()  -  1);  String  mant;  String  dec;  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  	projects/Lang7/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	457	458	1	replace	if(hexDigits  >  0)  {  if(str.startsWith( "- "))  {  return  null;  }	  if(hexDigits    >    8)    {    if(str.startsWith(   "-   "))    {    //    drop    0;    }    	non-compiled	[CE]  ')'  expected	45	None	replace
82	[BUG]  [BUGGY]  if(str.startsWith( "0x "))  {  int  hexDigits  =  str.length();  if(hexDigits  <  0)  {  return  createInteger(str);  }  [CE]  ')'  expected  [FE]              AssertionError      [CONTEXT]      return  null;  }  if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(     "A  blank  string  is  not  a  valid  number     ");  }  if  (str.startsWith(     "--     "))  {  return  null;  }  if  (str.startsWith(     "0x     ")  ||  str.startsWith(     "-0x     ")  ||  str.startsWith(     "0X     ")  ||  str.startsWith(     "-0X     "))  {  int  hexDigits  =  str.length()  -  2;  //  drop  0x      [BUGGY]  if(str.startsWith( "0x "))  {  int  hexDigits  =  str.length();  if(hexDigits  <  0)  {  return  createInteger(str);  }  [BUGGY]      if  (str.startsWith(     "-     "))  {  //  drop  -    hexDigits--;  hexDigits--;  }  if  (hexDigits  >  8)  {  //  too  many  for  an  int  return  createLong(str);  }  return  createInteger(str);  }  char  lastChar  =  str.charAt(str.length()  -  1);  String  mant;  String  dec;  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  	projects/Lang7/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	457	458	1	replace	if(str.startsWith( "0x "))  {  int  hexDigits  =  str.length();  if(hexDigits  <  0)  {  return  createInteger(str);  }	  if(hexDigits    <    0)    {    int    hexDigits    =    str.length()    -    2;    if(hexDigits    <    0)    {    return    createInteger(str);    }    	non-compiled	[CE]  ')'  expected	69	None	replace
83	[BUG]  [BUGGY]  if(str.startsWith( "-   "))  {  int  hexDigits  =  str.length();  if(hexDigits  <  8)  {  return  createInteger(str);  }  [CE]  ')'  expected  [FE]                AssertionError      [CONTEXT]      return  null;  }  if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(     "A  blank  string  is  not  a  valid  number     ");  }  if  (str.startsWith(     "--     "))  {  return  null;  }  if  (str.startsWith(     "0x     ")  ||  str.startsWith(     "-0x     ")  ||  str.startsWith(     "0X     ")  ||  str.startsWith(     "-0X     "))  {  int  hexDigits  =  str.length()  -  2;  //  drop  0x      [BUGGY]  if(str.startsWith( "-   "))  {  int  hexDigits  =  str.length();  if(hexDigits  <  8)  {  return  createInteger(str);  }  [BUGGY]      if  (str.startsWith(     "-     "))  {  //  drop  -    hexDigits--;  hexDigits--;  }  if  (hexDigits  >  8)  {  //  too  many  for  an  int  return  createLong(str);  }  return  createInteger(str);  }  char  lastChar  =  str.charAt(str.length()  -  1);  String  mant;  String  dec;  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  	projects/Lang7/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	457	458	1	replace	if(str.startsWith( "-   "))  {  int  hexDigits  =  str.length();  if(hexDigits  <  8)  {  return  createInteger(str);  }	  if(hexDigits    <    0)    {    int    hexDigits    =    str.length()    -    2;    if(hexDigits    <    0)    {    return    createInteger(str);    }    	non-compiled	[CE]  ')'  expected	69	None	replace
84	[BUG]  [BUGGY]  Integer  hexDigits  =  createBigInteger(str.length());  [CE]  ')'  expected  [FE]            AssertionError      [CONTEXT]      return  null;  }  if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(     "A  blank  string  is  not  a  valid  number     ");  }  if  (str.startsWith(     "--     "))  {  return  null;  }  if  (str.startsWith(     "0x     ")  ||  str.startsWith(     "-0x     ")  ||  str.startsWith(     "0X     ")  ||  str.startsWith(     "-0X     "))  {  int  hexDigits  =  str.length()  -  2;  //  drop  0x      [BUGGY]  Integer  hexDigits  =  createBigInteger(str.length());  [BUGGY]      if  (str.startsWith(     "-     "))  {  //  drop  -    hexDigits--;  hexDigits--;  }  if  (hexDigits  >  8)  {  //  too  many  for  an  int  return  createLong(str);  }  return  createInteger(str);  }  char  lastChar  =  str.charAt(str.length()  -  1);  String  mant;  String  dec;  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  	projects/Lang7/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	457	458	1	replace	Integer  hexDigits  =  createBigInteger(str.length());	  Integer    hexDigits    =    createBigInteger(str);    	non-compiled	[CE]  ')'  expected	59	None	replace
85	[BUG]  [BUGGY]  Integer  hexDigits  =  createBigDecimal(str);  [CE]  ')'  expected  [FE]              AssertionError      [CONTEXT]      return  null;  }  if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(     "A  blank  string  is  not  a  valid  number     ");  }  if  (str.startsWith(     "--     "))  {  return  null;  }  if  (str.startsWith(     "0x     ")  ||  str.startsWith(     "-0x     ")  ||  str.startsWith(     "0X     ")  ||  str.startsWith(     "-0X     "))  {  int  hexDigits  =  str.length()  -  2;  //  drop  0x      [BUGGY]  Integer  hexDigits  =  createBigDecimal(str);  [BUGGY]      if  (str.startsWith(     "-     "))  {  //  drop  -    hexDigits--;  hexDigits--;  }  if  (hexDigits  >  8)  {  //  too  many  for  an  int  return  createLong(str);  }  return  createInteger(str);  }  char  lastChar  =  str.charAt(str.length()  -  1);  String  mant;  String  dec;  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  	projects/Lang7/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	457	458	1	replace	Integer  hexDigits  =  createBigDecimal(str);	  Integer    hexDigits    =    createBigInteger(str);    	non-compiled	[CE]  ')'  expected	59	None	replace
86	[BUG]  [BUGGY]  hexDigits  =  str.charAt(0x);  [CE]  ')'  expected  [FE]                AssertionError      [CONTEXT]      return  null;  }  if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(     "A  blank  string  is  not  a  valid  number     ");  }  if  (str.startsWith(     "--     "))  {  return  null;  }  if  (str.startsWith(     "0x     ")  ||  str.startsWith(     "-0x     ")  ||  str.startsWith(     "0X     ")  ||  str.startsWith(     "-0X     "))  {  int  hexDigits  =  str.length()  -  2;  //  drop  0x      [BUGGY]  hexDigits  =  str.charAt(0x);  [BUGGY]      if  (str.startsWith(     "-     "))  {  //  drop  -    hexDigits--;  hexDigits--;  }  if  (hexDigits  >  8)  {  //  too  many  for  an  int  return  createLong(str);  }  return  createInteger(str);  }  char  lastChar  =  str.charAt(str.length()  -  1);  String  mant;  String  dec;  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  	projects/Lang7/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	457	458	1	replace	hexDigits  =  str.charAt(0x);	  hexDigits    =    str.charAt(0);    	non-compiled	[CE]  ')'  expected	18	None	replace
87	[BUG]  [BUGGY]  hexDigits  =  str.charAt(i);  [CE]  ')'  expected  [FE]                  AssertionError      [CONTEXT]      return  null;  }  if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(     "A  blank  string  is  not  a  valid  number     ");  }  if  (str.startsWith(     "--     "))  {  return  null;  }  if  (str.startsWith(     "0x     ")  ||  str.startsWith(     "-0x     ")  ||  str.startsWith(     "0X     ")  ||  str.startsWith(     "-0X     "))  {  int  hexDigits  =  str.length()  -  2;  //  drop  0x      [BUGGY]  hexDigits  =  str.charAt(i);  [BUGGY]      if  (str.startsWith(     "-     "))  {  //  drop  -    hexDigits--;  hexDigits--;  }  if  (hexDigits  >  8)  {  //  too  many  for  an  int  return  createLong(str);  }  return  createInteger(str);  }  char  lastChar  =  str.charAt(str.length()  -  1);  String  mant;  String  dec;  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  	projects/Lang7/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	457	458	1	replace	hexDigits  =  str.charAt(i);	  hexDigits    =    str.charAt(0);    	non-compiled	[CE]  ')'  expected	18	None	replace
88	[BUG]  [BUGGY]  hexDigits  =  str.charAt(1);  [CE]  ')'  expected  [FE]                    AssertionError      [CONTEXT]      return  null;  }  if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(     "A  blank  string  is  not  a  valid  number     ");  }  if  (str.startsWith(     "--     "))  {  return  null;  }  if  (str.startsWith(     "0x     ")  ||  str.startsWith(     "-0x     ")  ||  str.startsWith(     "0X     ")  ||  str.startsWith(     "-0X     "))  {  int  hexDigits  =  str.length()  -  2;  //  drop  0x      [BUGGY]  hexDigits  =  str.charAt(1);  [BUGGY]      if  (str.startsWith(     "-     "))  {  //  drop  -    hexDigits--;  hexDigits--;  }  if  (hexDigits  >  8)  {  //  too  many  for  an  int  return  createLong(str);  }  return  createInteger(str);  }  char  lastChar  =  str.charAt(str.length()  -  1);  String  mant;  String  dec;  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  	projects/Lang7/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	457	458	1	replace	hexDigits  =  str.charAt(1);	  hexDigits    =    str.charAt(0);    	non-compiled	[CE]  ')'  expected	18	None	replace
89	[BUG]  [BUGGY]  if(hexDigits  <  0)  {  if(hexDigits  <  8)  {  //  drop  -1;  }  [CE]  ')'  expected  [FE]                  AssertionError      [CONTEXT]      return  null;  }  if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(     "A  blank  string  is  not  a  valid  number     ");  }  if  (str.startsWith(     "--     "))  {  return  null;  }  if  (str.startsWith(     "0x     ")  ||  str.startsWith(     "-0x     ")  ||  str.startsWith(     "0X     ")  ||  str.startsWith(     "-0X     "))  {  int  hexDigits  =  str.length()  -  2;  //  drop  0x      [BUGGY]  if(hexDigits  <  0)  {  if(hexDigits  <  8)  {  //  drop  -1;  }  [BUGGY]      hexDigits--;  }  if  (hexDigits  >  8)  {  //  too  many  for  an  int  return  createLong(str);  }  return  createInteger(str);  }  char  lastChar  =  str.charAt(str.length()  -  1);  String  mant;  String  dec;  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  	projects/Lang7/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	457	458	1	replace	if(hexDigits  <  0)  {  if(hexDigits  <  8)  {  //  drop  -1;  }	  if(hexDigits    >    0)    {    if(hexDigits    <    8)    {    //    drop    -1;    }    	non-compiled	[CE]  ')'  expected	13	None	replace
90	[BUG]  [BUGGY]  if(hexDigits  <  0)  {  if(hexDigits  <  0)  {  //  drop  -1;  }  [CE]  ')'  expected  [FE]                    AssertionError      [CONTEXT]      return  null;  }  if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(     "A  blank  string  is  not  a  valid  number     ");  }  if  (str.startsWith(     "--     "))  {  return  null;  }  if  (str.startsWith(     "0x     ")  ||  str.startsWith(     "-0x     ")  ||  str.startsWith(     "0X     ")  ||  str.startsWith(     "-0X     "))  {  int  hexDigits  =  str.length()  -  2;  //  drop  0x      [BUGGY]  if(hexDigits  <  0)  {  if(hexDigits  <  0)  {  //  drop  -1;  }  [BUGGY]      hexDigits--;  }  if  (hexDigits  >  8)  {  //  too  many  for  an  int  return  createLong(str);  }  return  createInteger(str);  }  char  lastChar  =  str.charAt(str.length()  -  1);  String  mant;  String  dec;  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  	projects/Lang7/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	457	458	1	replace	if(hexDigits  <  0)  {  if(hexDigits  <  0)  {  //  drop  -1;  }	  if(hexDigits    >    0)    {    if(hexDigits    <    8)    {    //    drop    -1;    }    	non-compiled	[CE]  ')'  expected	13	None	replace
91	[BUG]  [BUGGY]  if(hexDigits  >  0)  {  if(hexDigits  <  0)  {  //  drop  -1;  }  [CE]  ')'  expected  [FE]                      AssertionError      [CONTEXT]      return  null;  }  if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(     "A  blank  string  is  not  a  valid  number     ");  }  if  (str.startsWith(     "--     "))  {  return  null;  }  if  (str.startsWith(     "0x     ")  ||  str.startsWith(     "-0x     ")  ||  str.startsWith(     "0X     ")  ||  str.startsWith(     "-0X     "))  {  int  hexDigits  =  str.length()  -  2;  //  drop  0x      [BUGGY]  if(hexDigits  >  0)  {  if(hexDigits  <  0)  {  //  drop  -1;  }  [BUGGY]      hexDigits--;  }  if  (hexDigits  >  8)  {  //  too  many  for  an  int  return  createLong(str);  }  return  createInteger(str);  }  char  lastChar  =  str.charAt(str.length()  -  1);  String  mant;  String  dec;  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  	projects/Lang7/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	457	458	1	replace	if(hexDigits  >  0)  {  if(hexDigits  <  0)  {  //  drop  -1;  }	  if(hexDigits    >    0)    {    if(hexDigits    <    8)    {    //    drop    -1;    }    	non-compiled	[CE]  ')'  expected	13	None	replace
92	[BUG]  [BUGGY]  if(hexDigits  >=  0)  {  if(hexDigits  <  8)  {  //  drop  -1;  }  [CE]  ')'  expected  [FE]                        AssertionError      [CONTEXT]      return  null;  }  if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(     "A  blank  string  is  not  a  valid  number     ");  }  if  (str.startsWith(     "--     "))  {  return  null;  }  if  (str.startsWith(     "0x     ")  ||  str.startsWith(     "-0x     ")  ||  str.startsWith(     "0X     ")  ||  str.startsWith(     "-0X     "))  {  int  hexDigits  =  str.length()  -  2;  //  drop  0x      [BUGGY]  if(hexDigits  >=  0)  {  if(hexDigits  <  8)  {  //  drop  -1;  }  [BUGGY]      hexDigits--;  }  if  (hexDigits  >  8)  {  //  too  many  for  an  int  return  createLong(str);  }  return  createInteger(str);  }  char  lastChar  =  str.charAt(str.length()  -  1);  String  mant;  String  dec;  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  	projects/Lang7/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	457	458	1	replace	if(hexDigits  >=  0)  {  if(hexDigits  <  8)  {  //  drop  -1;  }	  if(hexDigits    >    0)    {    if(hexDigits    <    8)    {    //    drop    -1;    }    	non-compiled	[CE]  ')'  expected	13	None	replace
93	[BUG]  [BUGGY]  if(hexDigits  ==  0  ||  str.startsWith( "-   "))  {  return  null;  }  [CE]  ')'  expected  [FE]                    AssertionError      [CONTEXT]      return  null;  }  if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(     "A  blank  string  is  not  a  valid  number     ");  }  if  (str.startsWith(     "--     "))  {  return  null;  }  if  (str.startsWith(     "0x     ")  ||  str.startsWith(     "-0x     ")  ||  str.startsWith(     "0X     ")  ||  str.startsWith(     "-0X     "))  {  int  hexDigits  =  str.length()  -  2;  //  drop  0x      [BUGGY]  if(hexDigits  ==  0  ||  str.startsWith( "-   "))  {  return  null;  }  [BUGGY]      hexDigits--;  }  if  (hexDigits  >  8)  {  //  too  many  for  an  int  return  createLong(str);  }  return  createInteger(str);  }  char  lastChar  =  str.charAt(str.length()  -  1);  String  mant;  String  dec;  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  	projects/Lang7/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	457	458	1	replace	if(hexDigits  ==  0  ||  str.startsWith( "-   "))  {  return  null;  }	  if(hexDigits    <    0    ||    str.startsWith(   "-   "))    {    return    null;    }    	non-compiled	[CE]  ')'  expected	29	None	replace
94	[BUG]  [BUGGY]  if(hexDigits  <  0  ||  str.startsWith( "-1))  {  return  null;  }  [CE]  [FE]                      AssertionError      [CONTEXT]      return  null;  }  if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(     "A  blank  string  is  not  a  valid  number     ");  }  if  (str.startsWith(     "--     "))  {  return  null;  }  if  (str.startsWith(     "0x     ")  ||  str.startsWith(     "-0x     ")  ||  str.startsWith(     "0X     ")  ||  str.startsWith(     "-0X     "))  {  int  hexDigits  =  str.length()  -  2;  //  drop  0x      [BUGGY]  if(hexDigits  <  0  ||  str.startsWith( "-1))  {  return  null;  }  [BUGGY]      hexDigits--;  }  if  (hexDigits  >  8)  {  //  too  many  for  an  int  return  createLong(str);  }  return  createInteger(str);  }  char  lastChar  =  str.charAt(str.length()  -  1);  String  mant;  String  dec;  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  	projects/Lang7/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	457	458	1	replace	if(hexDigits  <  0  ||  str.startsWith( "-1))  {  return  null;  }	  if(hexDigits    <    0    ||    str.startsWith(   "-   "))    {    return    null;    }    	non-compiled	[CE]  	29	None	replace
95	[BUG]  [BUGGY]  Integer  hexDigits  =  str.indexOf('-',  4);  [CE]  ')'  expected  [FE]                    AssertionError      [CONTEXT]      return  null;  }  if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(     "A  blank  string  is  not  a  valid  number     ");  }  if  (str.startsWith(     "--     "))  {  return  null;  }  if  (str.startsWith(     "0x     ")  ||  str.startsWith(     "-0x     ")  ||  str.startsWith(     "0X     ")  ||  str.startsWith(     "-0X     "))  {  int  hexDigits  =  str.length()  -  2;  //  drop  0x      [BUGGY]  Integer  hexDigits  =  str.indexOf('-',  4);  [BUGGY]      if  (str.startsWith(     "-     "))  {  //  drop  -    hexDigits--;  hexDigits--;  }  if  (hexDigits  >  8)  {  //  too  many  for  an  int  return  createLong(str);  }  return  createInteger(str);  }  char  lastChar  =  str.charAt(str.length()  -  1);  String  mant;  String  dec;  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  	projects/Lang7/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	457	458	1	replace	Integer  hexDigits  =  str.indexOf('-',  4);	  Integer    hexDigits    =    str.indexOf('-');    	non-compiled	[CE]  ')'  expected	63	None	replace
96	[BUG]  [BUGGY]  Integer  hexDigits  =  str.indexOf('-',  2);  [CE]  [FE]                      AssertionError      [CONTEXT]      return  null;  }  if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(     "A  blank  string  is  not  a  valid  number     ");  }  if  (str.startsWith(     "--     "))  {  return  null;  }  if  (str.startsWith(     "0x     ")  ||  str.startsWith(     "-0x     ")  ||  str.startsWith(     "0X     ")  ||  str.startsWith(     "-0X     "))  {  int  hexDigits  =  str.length()  -  2;  //  drop  0x      [BUGGY]  Integer  hexDigits  =  str.indexOf('-',  2);  [BUGGY]      if  (str.startsWith(     "-     "))  {  //  drop  -    hexDigits--;  hexDigits--;  }  if  (hexDigits  >  8)  {  //  too  many  for  an  int  return  createLong(str);  }  return  createInteger(str);  }  char  lastChar  =  str.charAt(str.length()  -  1);  String  mant;  String  dec;  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  	projects/Lang7/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	457	458	1	replace	Integer  hexDigits  =  str.indexOf('-',  2);	  Integer    hexDigits    =    str.indexOf('-');    	non-compiled	[CE]  	63	None	replace
97	[BUG]  [BUGGY]  Integer  hexDigits  =  str.lastIndexOf('-');  [CE]  ')'  expected  [FE]                        AssertionError      [CONTEXT]      return  null;  }  if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(     "A  blank  string  is  not  a  valid  number     ");  }  if  (str.startsWith(     "--     "))  {  return  null;  }  if  (str.startsWith(     "0x     ")  ||  str.startsWith(     "-0x     ")  ||  str.startsWith(     "0X     ")  ||  str.startsWith(     "-0X     "))  {  int  hexDigits  =  str.length()  -  2;  //  drop  0x      [BUGGY]  Integer  hexDigits  =  str.lastIndexOf('-');  [BUGGY]      if  (str.startsWith(     "-     "))  {  //  drop  -    hexDigits--;  hexDigits--;  }  if  (hexDigits  >  8)  {  //  too  many  for  an  int  return  createLong(str);  }  return  createInteger(str);  }  char  lastChar  =  str.charAt(str.length()  -  1);  String  mant;  String  dec;  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  	projects/Lang7/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	457	458	1	replace	Integer  hexDigits  =  str.lastIndexOf('-');	  Integer    hexDigits    =    str.indexOf('-');    	non-compiled	[CE]  ')'  expected	63	None	replace
98	[BUG]  [BUGGY]  Integer  hexDigits  =  str.indexOf('-',  1);  [CE]  ')'  expected  [FE]                          AssertionError      [CONTEXT]      return  null;  }  if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(     "A  blank  string  is  not  a  valid  number     ");  }  if  (str.startsWith(     "--     "))  {  return  null;  }  if  (str.startsWith(     "0x     ")  ||  str.startsWith(     "-0x     ")  ||  str.startsWith(     "0X     ")  ||  str.startsWith(     "-0X     "))  {  int  hexDigits  =  str.length()  -  2;  //  drop  0x      [BUGGY]  Integer  hexDigits  =  str.indexOf('-',  1);  [BUGGY]      if  (str.startsWith(     "-     "))  {  //  drop  -    hexDigits--;  hexDigits--;  }  if  (hexDigits  >  8)  {  //  too  many  for  an  int  return  createLong(str);  }  return  createInteger(str);  }  char  lastChar  =  str.charAt(str.length()  -  1);  String  mant;  String  dec;  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  	projects/Lang7/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	457	458	1	replace	Integer  hexDigits  =  str.indexOf('-',  1);	  Integer    hexDigits    =    str.indexOf('-');    	non-compiled	[CE]  ')'  expected	63	None	replace
99	[BUG]  [BUGGY]  int  hexDigits  =  createInteger(hexDigits);  [CE]  ')'  expected  [FE]              AssertionError      [CONTEXT]      return  null;  }  if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(     "A  blank  string  is  not  a  valid  number     ");  }  if  (str.startsWith(     "--     "))  {  return  null;  }  if  (str.startsWith(     "0x     ")  ||  str.startsWith(     "-0x     ")  ||  str.startsWith(     "0X     ")  ||  str.startsWith(     "-0X     "))  {  int  hexDigits  =  str.length()  -  2;  //  drop  0x      [BUGGY]  int  hexDigits  =  createInteger(hexDigits);  [BUGGY]      if  (str.startsWith(     "-     "))  {  //  drop  -    hexDigits--;  hexDigits--;  }  if  (hexDigits  >  8)  {  //  too  many  for  an  int  return  createLong(str);  }  return  createInteger(str);  }  char  lastChar  =  str.charAt(str.length()  -  1);  String  mant;  String  dec;  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  	projects/Lang7/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	457	458	1	replace	int  hexDigits  =  createInteger(hexDigits);	  Integer    hexDigits    =    createInteger(hexDigits);    	non-compiled	[CE]  ')'  expected	60	None	replace
100	[BUG]  [BUGGY]  char  hexDigits  =  str.length()  -  2;  [CE]  ')'  expected  [FE]              AssertionError      [CONTEXT]      return  null;  }  if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(     "A  blank  string  is  not  a  valid  number     ");  }  if  (str.startsWith(     "--     "))  {  return  null;  }  if  (str.startsWith(     "0x     ")  ||  str.startsWith(     "-0x     ")  ||  str.startsWith(     "0X     ")  ||  str.startsWith(     "-0X     "))  {  int  hexDigits  =  str.length()  -  2;  //  drop  0x      [BUGGY]  char  hexDigits  =  str.length()  -  2;  [BUGGY]      if  (str.startsWith(     "-     "))  {  //  drop  -    hexDigits--;  hexDigits--;  }  if  (hexDigits  >  8)  {  //  too  many  for  an  int  return  createLong(str);  }  return  createInteger(str);  }  char  lastChar  =  str.charAt(str.length()  -  1);  String  mant;  String  dec;  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  	projects/Lang7/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	457	458	1	replace	char  hexDigits  =  str.length()  -  2;	  char    hexDigits    =    str.length();    	non-compiled	[CE]  ')'  expected	40	None	replace
101	[BUG]  [BUGGY]  String  hexDigits  =  str.length();  [CE]  ')'  expected  [FE]                AssertionError      [CONTEXT]      return  null;  }  if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(     "A  blank  string  is  not  a  valid  number     ");  }  if  (str.startsWith(     "--     "))  {  return  null;  }  if  (str.startsWith(     "0x     ")  ||  str.startsWith(     "-0x     ")  ||  str.startsWith(     "0X     ")  ||  str.startsWith(     "-0X     "))  {  int  hexDigits  =  str.length()  -  2;  //  drop  0x      [BUGGY]  String  hexDigits  =  str.length();  [BUGGY]      if  (str.startsWith(     "-     "))  {  //  drop  -    hexDigits--;  hexDigits--;  }  if  (hexDigits  >  8)  {  //  too  many  for  an  int  return  createLong(str);  }  return  createInteger(str);  }  char  lastChar  =  str.charAt(str.length()  -  1);  String  mant;  String  dec;  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  	projects/Lang7/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	457	458	1	replace	String  hexDigits  =  str.length();	  char    hexDigits    =    str.length();    	non-compiled	[CE]  ')'  expected	40	None	replace
102	[BUG]  [BUGGY]  char  hexDigits  =  str.length()  +  2;  [CE]  ')'  expected  [FE]                  AssertionError      [CONTEXT]      return  null;  }  if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(     "A  blank  string  is  not  a  valid  number     ");  }  if  (str.startsWith(     "--     "))  {  return  null;  }  if  (str.startsWith(     "0x     ")  ||  str.startsWith(     "-0x     ")  ||  str.startsWith(     "0X     ")  ||  str.startsWith(     "-0X     "))  {  int  hexDigits  =  str.length()  -  2;  //  drop  0x      [BUGGY]  char  hexDigits  =  str.length()  +  2;  [BUGGY]      if  (str.startsWith(     "-     "))  {  //  drop  -    hexDigits--;  hexDigits--;  }  if  (hexDigits  >  8)  {  //  too  many  for  an  int  return  createLong(str);  }  return  createInteger(str);  }  char  lastChar  =  str.charAt(str.length()  -  1);  String  mant;  String  dec;  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  	projects/Lang7/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	457	458	1	replace	char  hexDigits  =  str.length()  +  2;	  char    hexDigits    =    str.length();    	non-compiled	[CE]  ')'  expected	40	None	replace
103	[BUG]  [BUGGY]  if(hexDigits  <  =  8)  {  //  drop  0x-hexDigits--;  }  [CE]  ')'  expected  [FE]                AssertionError      [CONTEXT]      return  null;  }  if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(     "A  blank  string  is  not  a  valid  number     ");  }  if  (str.startsWith(     "--     "))  {  return  null;  }  if  (str.startsWith(     "0x     ")  ||  str.startsWith(     "-0x     ")  ||  str.startsWith(     "0X     ")  ||  str.startsWith(     "-0X     "))  {  int  hexDigits  =  str.length()  -  2;  //  drop  0x      [BUGGY]  if(hexDigits  <  =  8)  {  //  drop  0x-hexDigits--;  }  [BUGGY]      hexDigits--;  }  if  (hexDigits  >  8)  {  //  too  many  for  an  int  return  createLong(str);  }  return  createInteger(str);  }  char  lastChar  =  str.charAt(str.length()  -  1);  String  mant;  String  dec;  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  	projects/Lang7/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	457	458	1	replace	if(hexDigits  <  =  8)  {  //  drop  0x-hexDigits--;  }	  if(hexDigits    <    8)    {    //    drop    0x-hexDigits--;    }    	non-compiled	[CE]  ')'  expected	7	None	replace
104	[BUG]  [BUGGY]  int  hexDigits  =  createInteger(str);  [CE]  ')'  expected  [FE]                AssertionError      [CONTEXT]      return  null;  }  if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(     "A  blank  string  is  not  a  valid  number     ");  }  if  (str.startsWith(     "--     "))  {  return  null;  }  if  (str.startsWith(     "0x     ")  ||  str.startsWith(     "-0x     ")  ||  str.startsWith(     "0X     ")  ||  str.startsWith(     "-0X     "))  {  int  hexDigits  =  str.length()  -  2;  //  drop  0x      [BUGGY]  int  hexDigits  =  createInteger(str);  [BUGGY]      if  (str.startsWith(     "-     "))  {  //  drop  -    hexDigits--;  hexDigits--;  }  if  (hexDigits  >  8)  {  //  too  many  for  an  int  return  createLong(str);  }  return  createInteger(str);  }  char  lastChar  =  str.charAt(str.length()  -  1);  String  mant;  String  dec;  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  	projects/Lang7/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	457	458	1	replace	int  hexDigits  =  createInteger(str);	  Integer    hexDigits    =    createLong(str);    	non-compiled	[CE]  ')'  expected	61	None	replace
105	[BUG]  [BUGGY]  Integer  hexDigits  =  createInt(str);  [CE]  ')'  expected  [FE]                  AssertionError      [CONTEXT]      return  null;  }  if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(     "A  blank  string  is  not  a  valid  number     ");  }  if  (str.startsWith(     "--     "))  {  return  null;  }  if  (str.startsWith(     "0x     ")  ||  str.startsWith(     "-0x     ")  ||  str.startsWith(     "0X     ")  ||  str.startsWith(     "-0X     "))  {  int  hexDigits  =  str.length()  -  2;  //  drop  0x      [BUGGY]  Integer  hexDigits  =  createInt(str);  [BUGGY]      if  (str.startsWith(     "-     "))  {  //  drop  -    hexDigits--;  hexDigits--;  }  if  (hexDigits  >  8)  {  //  too  many  for  an  int  return  createLong(str);  }  return  createInteger(str);  }  char  lastChar  =  str.charAt(str.length()  -  1);  String  mant;  String  dec;  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  	projects/Lang7/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	457	458	1	replace	Integer  hexDigits  =  createInt(str);	  Integer    hexDigits    =    createLong(str);    	non-compiled	[CE]  ')'  expected	61	None	replace
106	[BUG]  [BUGGY]  int  hexDigits  =  str.length();  if(hexDigits  <  0)  {  return  createLong(str);  }  [CE]  ')'  expected  [FE]              AssertionError      [CONTEXT]      return  null;  }  if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(     "A  blank  string  is  not  a  valid  number     ");  }  if  (str.startsWith(     "--     "))  {  return  null;  }  if  (str.startsWith(     "0x     ")  ||  str.startsWith(     "-0x     ")  ||  str.startsWith(     "0X     ")  ||  str.startsWith(     "-0X     "))  {  int  hexDigits  =  str.length()  -  2;  //  drop  0x      [BUGGY]  int  hexDigits  =  str.length();  if(hexDigits  <  0)  {  return  createLong(str);  }  [BUGGY]      if  (str.startsWith(     "-     "))  {  //  drop  -    hexDigits--;  hexDigits--;  }  if  (hexDigits  >  8)  {  //  too  many  for  an  int  return  createLong(str);  }  return  createInteger(str);  }  char  lastChar  =  str.charAt(str.length()  -  1);  String  mant;  String  dec;  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  	projects/Lang7/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	457	458	1	replace	int  hexDigits  =  str.length();  if(hexDigits  <  0)  {  return  createLong(str);  }	  if(hexDigits    >    0)    {    int    hexDigits    =    str.length()    -    2;    if(hexDigits    <    0)    {    return    createLong(str);    }    	non-compiled	[CE]  ')'  expected	76	None	replace
107	[BUG]  [BUGGY]  if(str.charAt(0)  ==  '-')  {  if(hexDigits  >  0)  {  int  hexDigits  =  str.length();  if(hexDigits  <  0)  {  return  createLong(str);  }  [CE]  ')'  expected  [FE]                AssertionError      [CONTEXT]      return  null;  }  if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(     "A  blank  string  is  not  a  valid  number     ");  }  if  (str.startsWith(     "--     "))  {  return  null;  }  if  (str.startsWith(     "0x     ")  ||  str.startsWith(     "-0x     ")  ||  str.startsWith(     "0X     ")  ||  str.startsWith(     "-0X     "))  {  int  hexDigits  =  str.length()  -  2;  //  drop  0x      [BUGGY]  if(str.charAt(0)  ==  '-')  {  if(hexDigits  >  0)  {  int  hexDigits  =  str.length();  if(hexDigits  <  0)  {  return  createLong(str);  }  [BUGGY]      if  (str.startsWith(     "-     "))  {  //  drop  -    hexDigits--;  hexDigits--;  }  if  (hexDigits  >  8)  {  //  too  many  for  an  int  return  createLong(str);  }  return  createInteger(str);  }  char  lastChar  =  str.charAt(str.length()  -  1);  String  mant;  String  dec;  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  	projects/Lang7/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	457	458	1	replace	if(str.charAt(0)  ==  '-')  {  if(hexDigits  >  0)  {  int  hexDigits  =  str.length();  if(hexDigits  <  0)  {  return  createLong(str);  }	  if(hexDigits    >    0)    {    int    hexDigits    =    str.length()    -    2;    if(hexDigits    <    0)    {    return    createLong(str);    }    	non-compiled	[CE]  ')'  expected	76	None	replace
108	[BUG]  [BUGGY]  if(hexDigits  >  8)  {  int  hexDigits  =  str.length();  if(hexDigits  <  0)  {  return  createInteger(str);  }  [CE]  ')'  expected  [FE]                  AssertionError      [CONTEXT]      return  null;  }  if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(     "A  blank  string  is  not  a  valid  number     ");  }  if  (str.startsWith(     "--     "))  {  return  null;  }  if  (str.startsWith(     "0x     ")  ||  str.startsWith(     "-0x     ")  ||  str.startsWith(     "0X     ")  ||  str.startsWith(     "-0X     "))  {  int  hexDigits  =  str.length()  -  2;  //  drop  0x      [BUGGY]  if(hexDigits  >  8)  {  int  hexDigits  =  str.length();  if(hexDigits  <  0)  {  return  createInteger(str);  }  [BUGGY]      if  (str.startsWith(     "-     "))  {  //  drop  -    hexDigits--;  hexDigits--;  }  if  (hexDigits  >  8)  {  //  too  many  for  an  int  return  createLong(str);  }  return  createInteger(str);  }  char  lastChar  =  str.charAt(str.length()  -  1);  String  mant;  String  dec;  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  	projects/Lang7/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	457	458	1	replace	if(hexDigits  >  8)  {  int  hexDigits  =  str.length();  if(hexDigits  <  0)  {  return  createInteger(str);  }	  if(hexDigits    >    0)    {    int    hexDigits    =    str.length()    -    2;    if(hexDigits    <    0)    {    return    createLong(str);    }    	non-compiled	[CE]  ')'  expected	76	None	replace
109	[BUG]  [BUGGY]  if(str.startsWith( "-   "))  {  if(hexDigits  >  0)  {  int  hexDigits  =  str.length();  if(hexDigits  <  0)  {  return  createLong(str);  }  [CE]  ')'  expected  [FE]              AssertionError      [CONTEXT]      return  null;  }  if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(     "A  blank  string  is  not  a  valid  number     ");  }  if  (str.startsWith(     "--     "))  {  return  null;  }  if  (str.startsWith(     "0x     ")  ||  str.startsWith(     "-0x     ")  ||  str.startsWith(     "0X     ")  ||  str.startsWith(     "-0X     "))  {  int  hexDigits  =  str.length()  -  2;  //  drop  0x      [BUGGY]  if(str.startsWith( "-   "))  {  if(hexDigits  >  0)  {  int  hexDigits  =  str.length();  if(hexDigits  <  0)  {  return  createLong(str);  }  [BUGGY]      if  (str.startsWith(     "-     "))  {  //  drop  -    hexDigits--;  hexDigits--;  }  if  (hexDigits  >  8)  {  //  too  many  for  an  int  return  createLong(str);  }  return  createInteger(str);  }  char  lastChar  =  str.charAt(str.length()  -  1);  String  mant;  String  dec;  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  	projects/Lang7/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	457	458	1	replace	if(str.startsWith( "-   "))  {  if(hexDigits  >  0)  {  int  hexDigits  =  str.length();  if(hexDigits  <  0)  {  return  createLong(str);  }	  if(dec    ==    null)    {    if(hexDigits    >    0)    {    int    hexDigits    =    str.length();    if(hexDigits    <    0)    {    return    createLong(str);    }    	non-compiled	[CE]  ')'  expected	20	None	replace
110	[BUG]  [BUGGY]  if(hexDigits  >  0  ||  str.startsWith( "-0 "))  {  [CE]  ')'  expected  [FE]              AssertionError      [CONTEXT]      return  null;  }  if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(     "A  blank  string  is  not  a  valid  number     ");  }  if  (str.startsWith(     "--     "))  {  return  null;  }  if  (str.startsWith(     "0x     ")  ||  str.startsWith(     "-0x     ")  ||  str.startsWith(     "0X     ")  ||  str.startsWith(     "-0X     "))  {  int  hexDigits  =  str.length()  -  2;  //  drop  0x      [BUGGY]  if(hexDigits  >  0  ||  str.startsWith( "-0 "))  {  [BUGGY]      hexDigits--;  }  if  (hexDigits  >  8)  {  //  too  many  for  an  int  return  createLong(str);  }  return  createInteger(str);  }  char  lastChar  =  str.charAt(str.length()  -  1);  String  mant;  String  dec;  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  	projects/Lang7/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	457	458	1	replace	if(hexDigits  >  0  ||  str.startsWith( "-0 "))  {	  if(hexDigits    <    0    ||    str.startsWith(   "-0   "))    {    	non-compiled	[CE]  ')'  expected	71	None	replace
111	[BUG]  [BUGGY]  if(hexDigits  ==  0  ||  str.startsWith( "-0 "))  {  [CE]  ')'  expected  [FE]                AssertionError      [CONTEXT]      return  null;  }  if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(     "A  blank  string  is  not  a  valid  number     ");  }  if  (str.startsWith(     "--     "))  {  return  null;  }  if  (str.startsWith(     "0x     ")  ||  str.startsWith(     "-0x     ")  ||  str.startsWith(     "0X     ")  ||  str.startsWith(     "-0X     "))  {  int  hexDigits  =  str.length()  -  2;  //  drop  0x      [BUGGY]  if(hexDigits  ==  0  ||  str.startsWith( "-0 "))  {  [BUGGY]      hexDigits--;  }  if  (hexDigits  >  8)  {  //  too  many  for  an  int  return  createLong(str);  }  return  createInteger(str);  }  char  lastChar  =  str.charAt(str.length()  -  1);  String  mant;  String  dec;  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  	projects/Lang7/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	457	458	1	replace	if(hexDigits  ==  0  ||  str.startsWith( "-0 "))  {	  if(hexDigits    <    0    ||    str.startsWith(   "-0   "))    {    	non-compiled	[CE]  ')'  expected	71	None	replace
112	[BUG]  [BUGGY]  if(hexDigits  >=  0  ||  str.startsWith( "-0 "))  {  [CE]  ')'  expected  [FE]                  AssertionError      [CONTEXT]      return  null;  }  if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(     "A  blank  string  is  not  a  valid  number     ");  }  if  (str.startsWith(     "--     "))  {  return  null;  }  if  (str.startsWith(     "0x     ")  ||  str.startsWith(     "-0x     ")  ||  str.startsWith(     "0X     ")  ||  str.startsWith(     "-0X     "))  {  int  hexDigits  =  str.length()  -  2;  //  drop  0x      [BUGGY]  if(hexDigits  >=  0  ||  str.startsWith( "-0 "))  {  [BUGGY]      hexDigits--;  }  if  (hexDigits  >  8)  {  //  too  many  for  an  int  return  createLong(str);  }  return  createInteger(str);  }  char  lastChar  =  str.charAt(str.length()  -  1);  String  mant;  String  dec;  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  	projects/Lang7/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	457	458	1	replace	if(hexDigits  >=  0  ||  str.startsWith( "-0 "))  {	  if(hexDigits    <    0    ||    str.startsWith(   "-0   "))    {    	non-compiled	[CE]  ')'  expected	71	None	replace
113	[BUG]  [BUGGY]  if(hexDigits  >  0  ||  str.startsWith( "-   "))  {  //  drop  0;  }  [CE]  ')'  expected  [FE]                AssertionError      [CONTEXT]      return  null;  }  if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(     "A  blank  string  is  not  a  valid  number     ");  }  if  (str.startsWith(     "--     "))  {  return  null;  }  if  (str.startsWith(     "0x     ")  ||  str.startsWith(     "-0x     ")  ||  str.startsWith(     "0X     ")  ||  str.startsWith(     "-0X     "))  {  int  hexDigits  =  str.length()  -  2;  //  drop  0x      [BUGGY]  if(hexDigits  >  0  ||  str.startsWith( "-   "))  {  //  drop  0;  }  [BUGGY]      hexDigits--;  }  if  (hexDigits  >  8)  {  //  too  many  for  an  int  return  createLong(str);  }  return  createInteger(str);  }  char  lastChar  =  str.charAt(str.length()  -  1);  String  mant;  String  dec;  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  	projects/Lang7/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	457	458	1	replace	if(hexDigits  >  0  ||  str.startsWith( "-   "))  {  //  drop  0;  }	  if(hexDigits    <    0    ||    str.startsWith(   "-   "))    {    //    drop    0;    }    	non-compiled	[CE]  ')'  expected	27	None	replace
114	[BUG]  [BUGGY]  hexDigits  =  str.charAt(hexDigits  +  2);  [CE]  ')'  expected  [FE]              AssertionError      [CONTEXT]      return  null;  }  if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(     "A  blank  string  is  not  a  valid  number     ");  }  if  (str.startsWith(     "--     "))  {  return  null;  }  if  (str.startsWith(     "0x     ")  ||  str.startsWith(     "-0x     ")  ||  str.startsWith(     "0X     ")  ||  str.startsWith(     "-0X     "))  {  int  hexDigits  =  str.length()  -  2;  //  drop  0x      [BUGGY]  hexDigits  =  str.charAt(hexDigits  +  2);  [BUGGY]      if  (str.startsWith(     "-     "))  {  //  drop  -    hexDigits--;  hexDigits--;  }  if  (hexDigits  >  8)  {  //  too  many  for  an  int  return  createLong(str);  }  return  createInteger(str);  }  char  lastChar  =  str.charAt(str.length()  -  1);  String  mant;  String  dec;  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  	projects/Lang7/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	457	458	1	replace	hexDigits  =  str.charAt(hexDigits  +  2);	  hexDigits    =    str.charAt(hexDigits    +    1);    	non-compiled	[CE]  ')'  expected	17	None	replace
115	[BUG]  [BUGGY]  hexDigits  =  str.charAt(hexDigits  +  3);  [CE]  ')'  expected  [FE]                AssertionError      [CONTEXT]      return  null;  }  if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(     "A  blank  string  is  not  a  valid  number     ");  }  if  (str.startsWith(     "--     "))  {  return  null;  }  if  (str.startsWith(     "0x     ")  ||  str.startsWith(     "-0x     ")  ||  str.startsWith(     "0X     ")  ||  str.startsWith(     "-0X     "))  {  int  hexDigits  =  str.length()  -  2;  //  drop  0x      [BUGGY]  hexDigits  =  str.charAt(hexDigits  +  3);  [BUGGY]      if  (str.startsWith(     "-     "))  {  //  drop  -    hexDigits--;  hexDigits--;  }  if  (hexDigits  >  8)  {  //  too  many  for  an  int  return  createLong(str);  }  return  createInteger(str);  }  char  lastChar  =  str.charAt(str.length()  -  1);  String  mant;  String  dec;  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  	projects/Lang7/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	457	458	1	replace	hexDigits  =  str.charAt(hexDigits  +  3);	  hexDigits    =    str.charAt(hexDigits    +    1);    	non-compiled	[CE]  ')'  expected	17	None	replace
116	[BUG]  [BUGGY]  hexDigits  =  str.charAt(hexDigits  *  1);  [CE]  ')'  expected  [FE]                  AssertionError      [CONTEXT]      return  null;  }  if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(     "A  blank  string  is  not  a  valid  number     ");  }  if  (str.startsWith(     "--     "))  {  return  null;  }  if  (str.startsWith(     "0x     ")  ||  str.startsWith(     "-0x     ")  ||  str.startsWith(     "0X     ")  ||  str.startsWith(     "-0X     "))  {  int  hexDigits  =  str.length()  -  2;  //  drop  0x      [BUGGY]  hexDigits  =  str.charAt(hexDigits  *  1);  [BUGGY]      if  (str.startsWith(     "-     "))  {  //  drop  -    hexDigits--;  hexDigits--;  }  if  (hexDigits  >  8)  {  //  too  many  for  an  int  return  createLong(str);  }  return  createInteger(str);  }  char  lastChar  =  str.charAt(str.length()  -  1);  String  mant;  String  dec;  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  	projects/Lang7/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	457	458	1	replace	hexDigits  =  str.charAt(hexDigits  *  1);	  hexDigits    =    str.charAt(hexDigits    +    1);    	non-compiled	[CE]  ')'  expected	17	None	replace
117	[BUG]  [BUGGY]  hexDigits  =  str.charAt(hexDigits  -  2  +  1);  [CE]  ')'  expected  [FE]                AssertionError      [CONTEXT]      return  null;  }  if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(     "A  blank  string  is  not  a  valid  number     ");  }  if  (str.startsWith(     "--     "))  {  return  null;  }  if  (str.startsWith(     "0x     ")  ||  str.startsWith(     "-0x     ")  ||  str.startsWith(     "0X     ")  ||  str.startsWith(     "-0X     "))  {  int  hexDigits  =  str.length()  -  2;  //  drop  0x      [BUGGY]  hexDigits  =  str.charAt(hexDigits  -  2  +  1);  [BUGGY]      if  (str.startsWith(     "-     "))  {  //  drop  -    hexDigits--;  hexDigits--;  }  if  (hexDigits  >  8)  {  //  too  many  for  an  int  return  createLong(str);  }  return  createInteger(str);  }  char  lastChar  =  str.charAt(str.length()  -  1);  String  mant;  String  dec;  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  	projects/Lang7/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	457	458	1	replace	hexDigits  =  str.charAt(hexDigits  -  2  +  1);	  hexDigits    =    str.charAt(hexDigits    -    1    +    1);    	non-compiled	[CE]  ')'  expected	78	None	replace
118	[BUG]  [BUGGY]  hexDigits  =  str.charAt(hexDigits  /  1  +  1);  [CE]  ')'  expected  [FE]                  AssertionError      [CONTEXT]      return  null;  }  if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(     "A  blank  string  is  not  a  valid  number     ");  }  if  (str.startsWith(     "--     "))  {  return  null;  }  if  (str.startsWith(     "0x     ")  ||  str.startsWith(     "-0x     ")  ||  str.startsWith(     "0X     ")  ||  str.startsWith(     "-0X     "))  {  int  hexDigits  =  str.length()  -  2;  //  drop  0x      [BUGGY]  hexDigits  =  str.charAt(hexDigits  /  1  +  1);  [BUGGY]      if  (str.startsWith(     "-     "))  {  //  drop  -    hexDigits--;  hexDigits--;  }  if  (hexDigits  >  8)  {  //  too  many  for  an  int  return  createLong(str);  }  return  createInteger(str);  }  char  lastChar  =  str.charAt(str.length()  -  1);  String  mant;  String  dec;  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  	projects/Lang7/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	457	458	1	replace	hexDigits  =  str.charAt(hexDigits  /  1  +  1);	  hexDigits    =    str.charAt(hexDigits    -    1    +    1);    	non-compiled	[CE]  ')'  expected	78	None	replace
119	[BUG]  [BUGGY]  if(hexDigits  <  0)  {  //  drop  0x;  }  [CE]  ')'  expected  [FE]            AssertionError      [CONTEXT]      return  null;  }  if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(     "A  blank  string  is  not  a  valid  number     ");  }  if  (str.startsWith(     "--     "))  {  return  null;  }  if  (str.startsWith(     "0x     ")  ||  str.startsWith(     "-0x     ")  ||  str.startsWith(     "0X     ")  ||  str.startsWith(     "-0X     "))  {  int  hexDigits  =  str.length()  -  2;  //  drop  0x      [BUGGY]  if(hexDigits  <  0)  {  //  drop  0x;  }  [BUGGY]      hexDigits--;  }  if  (hexDigits  >  8)  {  //  too  many  for  an  int  return  createLong(str);  }  return  createInteger(str);  }  char  lastChar  =  str.charAt(str.length()  -  1);  String  mant;  String  dec;  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  	projects/Lang7/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	457	458	1	replace	if(hexDigits  <  0)  {  //  drop  0x;  }	  if(hexDigits    <    8)    {    //    drop    0x;    }    	non-compiled	[CE]  ')'  expected	36	None	replace
120	[BUG]  [BUGGY]  if(hexDigits  >  0)  {  //  drop  0x;  }  [CE]  ')'  expected  [FE]              AssertionError      [CONTEXT]      return  null;  }  if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(     "A  blank  string  is  not  a  valid  number     ");  }  if  (str.startsWith(     "--     "))  {  return  null;  }  if  (str.startsWith(     "0x     ")  ||  str.startsWith(     "-0x     ")  ||  str.startsWith(     "0X     ")  ||  str.startsWith(     "-0X     "))  {  int  hexDigits  =  str.length()  -  2;  //  drop  0x      [BUGGY]  if(hexDigits  >  0)  {  //  drop  0x;  }  [BUGGY]      hexDigits--;  }  if  (hexDigits  >  8)  {  //  too  many  for  an  int  return  createLong(str);  }  return  createInteger(str);  }  char  lastChar  =  str.charAt(str.length()  -  1);  String  mant;  String  dec;  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  	projects/Lang7/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	457	458	1	replace	if(hexDigits  >  0)  {  //  drop  0x;  }	  if(hexDigits    <    8)    {    //    drop    0x;    }    	non-compiled	[CE]  ')'  expected	36	None	replace
121	[BUG]  [BUGGY]  if(hexDigits  >  8)  {  //  drop  -  hexDigits--;  }  [CE]  ')'  expected  [FE]              AssertionError      [CONTEXT]      return  null;  }  if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(     "A  blank  string  is  not  a  valid  number     ");  }  if  (str.startsWith(     "--     "))  {  return  null;  }  if  (str.startsWith(     "0x     ")  ||  str.startsWith(     "-0x     ")  ||  str.startsWith(     "0X     ")  ||  str.startsWith(     "-0X     "))  {  int  hexDigits  =  str.length()  -  2;  //  drop  0x      [BUGGY]  if(hexDigits  >  8)  {  //  drop  -  hexDigits--;  }  [BUGGY]      hexDigits--;  }  if  (hexDigits  >  8)  {  //  too  many  for  an  int  return  createLong(str);  }  return  createInteger(str);  }  char  lastChar  =  str.charAt(str.length()  -  1);  String  mant;  String  dec;  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  	projects/Lang7/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	457	458	1	replace	if(hexDigits  >  8)  {  //  drop  -  hexDigits--;  }	  if(hexDigits    <    8)    {    //    drop    -    hexDigits--;    }    	non-compiled	[CE]  ')'  expected	6	None	replace
122	[BUG]  [BUGGY]  if(hexDigits  <  =  8)  {  //  drop  -  hexDigits--;  }  [CE]  ')'  expected  [FE]                AssertionError      [CONTEXT]      return  null;  }  if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(     "A  blank  string  is  not  a  valid  number     ");  }  if  (str.startsWith(     "--     "))  {  return  null;  }  if  (str.startsWith(     "0x     ")  ||  str.startsWith(     "-0x     ")  ||  str.startsWith(     "0X     ")  ||  str.startsWith(     "-0X     "))  {  int  hexDigits  =  str.length()  -  2;  //  drop  0x      [BUGGY]  if(hexDigits  <  =  8)  {  //  drop  -  hexDigits--;  }  [BUGGY]      hexDigits--;  }  if  (hexDigits  >  8)  {  //  too  many  for  an  int  return  createLong(str);  }  return  createInteger(str);  }  char  lastChar  =  str.charAt(str.length()  -  1);  String  mant;  String  dec;  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  	projects/Lang7/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	457	458	1	replace	if(hexDigits  <  =  8)  {  //  drop  -  hexDigits--;  }	  if(hexDigits    <    8)    {    //    drop    -    hexDigits--;    }    	non-compiled	[CE]  ')'  expected	6	None	replace
123	[BUG]  [BUGGY]  if(dec  ==  null)  {  if(str.startsWith( "-   "))  {  int  hexDigits  =  str.length();  if(hexDigits  <  0)  {  return  createLong(str);  }  [CE]  ')'  expected  [FE]                  AssertionError      [CONTEXT]      return  null;  }  if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(     "A  blank  string  is  not  a  valid  number     ");  }  if  (str.startsWith(     "--     "))  {  return  null;  }  if  (str.startsWith(     "0x     ")  ||  str.startsWith(     "-0x     ")  ||  str.startsWith(     "0X     ")  ||  str.startsWith(     "-0X     "))  {  int  hexDigits  =  str.length()  -  2;  //  drop  0x      [BUGGY]  if(dec  ==  null)  {  if(str.startsWith( "-   "))  {  int  hexDigits  =  str.length();  if(hexDigits  <  0)  {  return  createLong(str);  }  [BUGGY]      if  (str.startsWith(     "-     "))  {  //  drop  -    hexDigits--;  hexDigits--;  }  if  (hexDigits  >  8)  {  //  too  many  for  an  int  return  createLong(str);  }  return  createInteger(str);  }  char  lastChar  =  str.charAt(str.length()  -  1);  String  mant;  String  dec;  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  	projects/Lang7/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	457	458	1	replace	if(dec  ==  null)  {  if(str.startsWith( "-   "))  {  int  hexDigits  =  str.length();  if(hexDigits  <  0)  {  return  createLong(str);  }	  if(str.startsWith(   "-       "))    {    int    hexDigits    =    str.length()    -    2;    if(hexDigits    <    0)    {    return    createLong(str);    }    	non-compiled	[CE]  ')'  expected	22	None	replace
124	[BUG]  [BUGGY]  if(str.startsWith( "- "))  {  int  hexDigits  =  str.length();  if(hexDigits  <  0)  {  return  createLong(str);  }  [CE]  ')'  expected  [FE]                    AssertionError      [CONTEXT]      return  null;  }  if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(     "A  blank  string  is  not  a  valid  number     ");  }  if  (str.startsWith(     "--     "))  {  return  null;  }  if  (str.startsWith(     "0x     ")  ||  str.startsWith(     "-0x     ")  ||  str.startsWith(     "0X     ")  ||  str.startsWith(     "-0X     "))  {  int  hexDigits  =  str.length()  -  2;  //  drop  0x      [BUGGY]  if(str.startsWith( "- "))  {  int  hexDigits  =  str.length();  if(hexDigits  <  0)  {  return  createLong(str);  }  [BUGGY]      if  (str.startsWith(     "-     "))  {  //  drop  -    hexDigits--;  hexDigits--;  }  if  (hexDigits  >  8)  {  //  too  many  for  an  int  return  createLong(str);  }  return  createInteger(str);  }  char  lastChar  =  str.charAt(str.length()  -  1);  String  mant;  String  dec;  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  	projects/Lang7/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	457	458	1	replace	if(str.startsWith( "- "))  {  int  hexDigits  =  str.length();  if(hexDigits  <  0)  {  return  createLong(str);  }	  if(str.startsWith(   "-       "))    {    int    hexDigits    =    str.length()    -    2;    if(hexDigits    <    0)    {    return    createLong(str);    }    	non-compiled	[CE]  ')'  expected	22	None	replace
125	[BUG]  [BUGGY]  if(hexDigits  >  0  ||  str.startsWith( "-   "))  {  [CE]  ')'  expected  [FE]                  AssertionError      [CONTEXT]      return  null;  }  if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(     "A  blank  string  is  not  a  valid  number     ");  }  if  (str.startsWith(     "--     "))  {  return  null;  }  if  (str.startsWith(     "0x     ")  ||  str.startsWith(     "-0x     ")  ||  str.startsWith(     "0X     ")  ||  str.startsWith(     "-0X     "))  {  int  hexDigits  =  str.length()  -  2;  //  drop  0x      [BUGGY]  if(hexDigits  >  0  ||  str.startsWith( "-   "))  {  [BUGGY]      hexDigits--;  }  if  (hexDigits  >  8)  {  //  too  many  for  an  int  return  createLong(str);  }  return  createInteger(str);  }  char  lastChar  =  str.charAt(str.length()  -  1);  String  mant;  String  dec;  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  	projects/Lang7/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	457	458	1	replace	if(hexDigits  >  0  ||  str.startsWith( "-   "))  {	  if(hexDigits    <    0    ||    str.startsWith(   "-   "))    {    	non-compiled	[CE]  ')'  expected	50	None	replace
126	[BUG]  [BUGGY]  if(hexDigits  ==  0  ||  str.startsWith( "-   "))  {  [CE]  ')'  expected  [FE]                    AssertionError      [CONTEXT]      return  null;  }  if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(     "A  blank  string  is  not  a  valid  number     ");  }  if  (str.startsWith(     "--     "))  {  return  null;  }  if  (str.startsWith(     "0x     ")  ||  str.startsWith(     "-0x     ")  ||  str.startsWith(     "0X     ")  ||  str.startsWith(     "-0X     "))  {  int  hexDigits  =  str.length()  -  2;  //  drop  0x      [BUGGY]  if(hexDigits  ==  0  ||  str.startsWith( "-   "))  {  [BUGGY]      hexDigits--;  }  if  (hexDigits  >  8)  {  //  too  many  for  an  int  return  createLong(str);  }  return  createInteger(str);  }  char  lastChar  =  str.charAt(str.length()  -  1);  String  mant;  String  dec;  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  	projects/Lang7/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	457	458	1	replace	if(hexDigits  ==  0  ||  str.startsWith( "-   "))  {	  if(hexDigits    <    0    ||    str.startsWith(   "-   "))    {    	non-compiled	[CE]  ')'  expected	50	None	replace
127	[BUG]  [BUGGY]  if(hexDigits  >=  0  ||  str.startsWith( "-   "))  {  [CE]  ')'  expected  [FE]                      AssertionError      [CONTEXT]      return  null;  }  if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(     "A  blank  string  is  not  a  valid  number     ");  }  if  (str.startsWith(     "--     "))  {  return  null;  }  if  (str.startsWith(     "0x     ")  ||  str.startsWith(     "-0x     ")  ||  str.startsWith(     "0X     ")  ||  str.startsWith(     "-0X     "))  {  int  hexDigits  =  str.length()  -  2;  //  drop  0x      [BUGGY]  if(hexDigits  >=  0  ||  str.startsWith( "-   "))  {  [BUGGY]      hexDigits--;  }  if  (hexDigits  >  8)  {  //  too  many  for  an  int  return  createLong(str);  }  return  createInteger(str);  }  char  lastChar  =  str.charAt(str.length()  -  1);  String  mant;  String  dec;  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  	projects/Lang7/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	457	458	1	replace	if(hexDigits  >=  0  ||  str.startsWith( "-   "))  {	  if(hexDigits    <    0    ||    str.startsWith(   "-   "))    {    	non-compiled	[CE]  ')'  expected	50	None	replace
128	[BUG]  [BUGGY]  if(str.length()  ==  0)  {  int  hexDigits  =  str.length();  if(hexDigits  <  0)  {  return  createLong(str);  }  [CE]  ')'  expected  [FE]                AssertionError      [CONTEXT]      return  null;  }  if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(     "A  blank  string  is  not  a  valid  number     ");  }  if  (str.startsWith(     "--     "))  {  return  null;  }  if  (str.startsWith(     "0x     ")  ||  str.startsWith(     "-0x     ")  ||  str.startsWith(     "0X     ")  ||  str.startsWith(     "-0X     "))  {  int  hexDigits  =  str.length()  -  2;  //  drop  0x      [BUGGY]  if(str.length()  ==  0)  {  int  hexDigits  =  str.length();  if(hexDigits  <  0)  {  return  createLong(str);  }  [BUGGY]      if  (str.startsWith(     "-     "))  {  //  drop  -    hexDigits--;  hexDigits--;  }  if  (hexDigits  >  8)  {  //  too  many  for  an  int  return  createLong(str);  }  return  createInteger(str);  }  char  lastChar  =  str.charAt(str.length()  -  1);  String  mant;  String  dec;  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  	projects/Lang7/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	457	458	1	replace	if(str.length()  ==  0)  {  int  hexDigits  =  str.length();  if(hexDigits  <  0)  {  return  createLong(str);  }	  if(hexDigits    <    0)    {    int    hexDigits    =    str.length()    -    2;    if(hexDigits    <    0)    {    return    createLong(str);    }    	non-compiled	[CE]  ')'  expected	77	None	replace
129	[BUG]  [BUGGY]  if(dec  ==  null)  {  if(hexDigits  <  0)  {  return  createLong(str);  }  [CE]  ')'  expected  [FE]                  AssertionError      [CONTEXT]      return  null;  }  if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(     "A  blank  string  is  not  a  valid  number     ");  }  if  (str.startsWith(     "--     "))  {  return  null;  }  if  (str.startsWith(     "0x     ")  ||  str.startsWith(     "-0x     ")  ||  str.startsWith(     "0X     ")  ||  str.startsWith(     "-0X     "))  {  int  hexDigits  =  str.length()  -  2;  //  drop  0x      [BUGGY]  if(dec  ==  null)  {  if(hexDigits  <  0)  {  return  createLong(str);  }  [BUGGY]      if  (str.startsWith(     "-     "))  {  //  drop  -    hexDigits--;  hexDigits--;  }  if  (hexDigits  >  8)  {  //  too  many  for  an  int  return  createLong(str);  }  return  createInteger(str);  }  char  lastChar  =  str.charAt(str.length()  -  1);  String  mant;  String  dec;  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  	projects/Lang7/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	457	458	1	replace	if(dec  ==  null)  {  if(hexDigits  <  0)  {  return  createLong(str);  }	  if(hexDigits    <    0)    {    int    hexDigits    =    str.length()    -    2;    if(hexDigits    <    0)    {    return    createLong(str);    }    	non-compiled	[CE]  ')'  expected	77	None	replace
130	[BUG]  [BUGGY]  if(str.length()  ==  0)  {  int  hexDigits  =  str.length();  if(hexDigits  <  0)  {  return  createInteger(str);  }  [CE]  ')'  expected  [FE]                    AssertionError      [CONTEXT]      return  null;  }  if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(     "A  blank  string  is  not  a  valid  number     ");  }  if  (str.startsWith(     "--     "))  {  return  null;  }  if  (str.startsWith(     "0x     ")  ||  str.startsWith(     "-0x     ")  ||  str.startsWith(     "0X     ")  ||  str.startsWith(     "-0X     "))  {  int  hexDigits  =  str.length()  -  2;  //  drop  0x      [BUGGY]  if(str.length()  ==  0)  {  int  hexDigits  =  str.length();  if(hexDigits  <  0)  {  return  createInteger(str);  }  [BUGGY]      if  (str.startsWith(     "-     "))  {  //  drop  -    hexDigits--;  hexDigits--;  }  if  (hexDigits  >  8)  {  //  too  many  for  an  int  return  createLong(str);  }  return  createInteger(str);  }  char  lastChar  =  str.charAt(str.length()  -  1);  String  mant;  String  dec;  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  	projects/Lang7/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	457	458	1	replace	if(str.length()  ==  0)  {  int  hexDigits  =  str.length();  if(hexDigits  <  0)  {  return  createInteger(str);  }	  if(hexDigits    <    0)    {    int    hexDigits    =    str.length()    -    2;    if(hexDigits    <    0)    {    return    createLong(str);    }    	non-compiled	[CE]  ')'  expected	77	None	replace
131	[BUG]  [BUGGY]  Integer  hexDigits  =  str.lastIndexOf('.')+  2;  [CE]  ')'  expected  [FE]                AssertionError      [CONTEXT]      return  null;  }  if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(     "A  blank  string  is  not  a  valid  number     ");  }  if  (str.startsWith(     "--     "))  {  return  null;  }  if  (str.startsWith(     "0x     ")  ||  str.startsWith(     "-0x     ")  ||  str.startsWith(     "0X     ")  ||  str.startsWith(     "-0X     "))  {  int  hexDigits  =  str.length()  -  2;  //  drop  0x      [BUGGY]  Integer  hexDigits  =  str.lastIndexOf('.')+  2;  [BUGGY]      if  (str.startsWith(     "-     "))  {  //  drop  -    hexDigits--;  hexDigits--;  }  if  (hexDigits  >  8)  {  //  too  many  for  an  int  return  createLong(str);  }  return  createInteger(str);  }  char  lastChar  =  str.charAt(str.length()  -  1);  String  mant;  String  dec;  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  	projects/Lang7/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	457	458	1	replace	Integer  hexDigits  =  str.lastIndexOf('.')+  2;	  Integer    hexDigits    =    str.lastIndexOf('.')+    1;    	non-compiled	[CE]  ')'  expected	87	None	replace
132	[BUG]  [BUGGY]  Integer  hexDigits  =  str.lastIndexOf('.')/  1;  [CE]  ')'  expected  [FE]                  AssertionError      [CONTEXT]      return  null;  }  if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(     "A  blank  string  is  not  a  valid  number     ");  }  if  (str.startsWith(     "--     "))  {  return  null;  }  if  (str.startsWith(     "0x     ")  ||  str.startsWith(     "-0x     ")  ||  str.startsWith(     "0X     ")  ||  str.startsWith(     "-0X     "))  {  int  hexDigits  =  str.length()  -  2;  //  drop  0x      [BUGGY]  Integer  hexDigits  =  str.lastIndexOf('.')/  1;  [BUGGY]      if  (str.startsWith(     "-     "))  {  //  drop  -    hexDigits--;  hexDigits--;  }  if  (hexDigits  >  8)  {  //  too  many  for  an  int  return  createLong(str);  }  return  createInteger(str);  }  char  lastChar  =  str.charAt(str.length()  -  1);  String  mant;  String  dec;  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  	projects/Lang7/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	457	458	1	replace	Integer  hexDigits  =  str.lastIndexOf('.')/  1;	  Integer    hexDigits    =    str.lastIndexOf('.')+    1;    	non-compiled	[CE]  ')'  expected	87	None	replace
133	[BUG]  [BUGGY]  Integer  hexDigits  =  str.lastIndexOf('.')+  3;  [CE]  ')'  expected  [FE]                    AssertionError      [CONTEXT]      return  null;  }  if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(     "A  blank  string  is  not  a  valid  number     ");  }  if  (str.startsWith(     "--     "))  {  return  null;  }  if  (str.startsWith(     "0x     ")  ||  str.startsWith(     "-0x     ")  ||  str.startsWith(     "0X     ")  ||  str.startsWith(     "-0X     "))  {  int  hexDigits  =  str.length()  -  2;  //  drop  0x      [BUGGY]  Integer  hexDigits  =  str.lastIndexOf('.')+  3;  [BUGGY]      if  (str.startsWith(     "-     "))  {  //  drop  -    hexDigits--;  hexDigits--;  }  if  (hexDigits  >  8)  {  //  too  many  for  an  int  return  createLong(str);  }  return  createInteger(str);  }  char  lastChar  =  str.charAt(str.length()  -  1);  String  mant;  String  dec;  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  	projects/Lang7/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	457	458	1	replace	Integer  hexDigits  =  str.lastIndexOf('.')+  3;	  Integer    hexDigits    =    str.lastIndexOf('.')+    1;    	non-compiled	[CE]  ')'  expected	87	None	replace
134	[BUG]  [BUGGY]  hexDigits  =  str.charAt(hexDigits  *  2);  [CE]  ')'  expected  [FE]                  AssertionError      [CONTEXT]      return  null;  }  if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(     "A  blank  string  is  not  a  valid  number     ");  }  if  (str.startsWith(     "--     "))  {  return  null;  }  if  (str.startsWith(     "0x     ")  ||  str.startsWith(     "-0x     ")  ||  str.startsWith(     "0X     ")  ||  str.startsWith(     "-0X     "))  {  int  hexDigits  =  str.length()  -  2;  //  drop  0x      [BUGGY]  hexDigits  =  str.charAt(hexDigits  *  2);  [BUGGY]      if  (str.startsWith(     "-     "))  {  //  drop  -    hexDigits--;  hexDigits--;  }  if  (hexDigits  >  8)  {  //  too  many  for  an  int  return  createLong(str);  }  return  createInteger(str);  }  char  lastChar  =  str.charAt(str.length()  -  1);  String  mant;  String  dec;  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  	projects/Lang7/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	457	458	1	replace	hexDigits  =  str.charAt(hexDigits  *  2);	  hexDigits    =    str.charAt(hexDigits    -    2);    	non-compiled	[CE]  ')'  expected	19	None	replace
135	[BUG]  [BUGGY]  if(hexDigits  ==  0  ||  str.startsWith( "-00 "))  {  [CE]  ')'  expected  [FE]                AssertionError      [CONTEXT]      return  null;  }  if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(     "A  blank  string  is  not  a  valid  number     ");  }  if  (str.startsWith(     "--     "))  {  return  null;  }  if  (str.startsWith(     "0x     ")  ||  str.startsWith(     "-0x     ")  ||  str.startsWith(     "0X     ")  ||  str.startsWith(     "-0X     "))  {  int  hexDigits  =  str.length()  -  2;  //  drop  0x      [BUGGY]  if(hexDigits  ==  0  ||  str.startsWith( "-00 "))  {  [BUGGY]      hexDigits--;  }  if  (hexDigits  >  8)  {  //  too  many  for  an  int  return  createLong(str);  }  return  createInteger(str);  }  char  lastChar  =  str.charAt(str.length()  -  1);  String  mant;  String  dec;  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  	projects/Lang7/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	457	458	1	replace	if(hexDigits  ==  0  ||  str.startsWith( "-00 "))  {	  if(hexDigits    <    0    ||    str.startsWith(   "-00   "))    {    	non-compiled	[CE]  ')'  expected	72	None	replace
136	[BUG]  [BUGGY]  if(hexDigits  >=  0  ||  str.startsWith( "-00 "))  {  [CE]  ')'  expected  [FE]                  AssertionError      [CONTEXT]      return  null;  }  if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(     "A  blank  string  is  not  a  valid  number     ");  }  if  (str.startsWith(     "--     "))  {  return  null;  }  if  (str.startsWith(     "0x     ")  ||  str.startsWith(     "-0x     ")  ||  str.startsWith(     "0X     ")  ||  str.startsWith(     "-0X     "))  {  int  hexDigits  =  str.length()  -  2;  //  drop  0x      [BUGGY]  if(hexDigits  >=  0  ||  str.startsWith( "-00 "))  {  [BUGGY]      hexDigits--;  }  if  (hexDigits  >  8)  {  //  too  many  for  an  int  return  createLong(str);  }  return  createInteger(str);  }  char  lastChar  =  str.charAt(str.length()  -  1);  String  mant;  String  dec;  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  	projects/Lang7/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	457	458	1	replace	if(hexDigits  >=  0  ||  str.startsWith( "-00 "))  {	  if(hexDigits    <    0    ||    str.startsWith(   "-00   "))    {    	non-compiled	[CE]  ')'  expected	72	None	replace
137	[BUG]  [BUGGY]  if(hexDigits  >  0  ||  str.startsWith( "-00 "))  {  [CE]  ')'  expected  [FE]                    AssertionError      [CONTEXT]      return  null;  }  if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(     "A  blank  string  is  not  a  valid  number     ");  }  if  (str.startsWith(     "--     "))  {  return  null;  }  if  (str.startsWith(     "0x     ")  ||  str.startsWith(     "-0x     ")  ||  str.startsWith(     "0X     ")  ||  str.startsWith(     "-0X     "))  {  int  hexDigits  =  str.length()  -  2;  //  drop  0x      [BUGGY]  if(hexDigits  >  0  ||  str.startsWith( "-00 "))  {  [BUGGY]      hexDigits--;  }  if  (hexDigits  >  8)  {  //  too  many  for  an  int  return  createLong(str);  }  return  createInteger(str);  }  char  lastChar  =  str.charAt(str.length()  -  1);  String  mant;  String  dec;  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  	projects/Lang7/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	457	458	1	replace	if(hexDigits  >  0  ||  str.startsWith( "-00 "))  {	  if(hexDigits    <    0    ||    str.startsWith(   "-00   "))    {    	non-compiled	[CE]  ')'  expected	72	None	replace
138	[BUG]  [BUGGY]  if(str.length()  >  0)  {  int  hexDigits  =  str.length()  -  2;  if(hexDigits  <  0)  {  return  createInteger(str);  }  [CE]  ')'  expected  [FE]                AssertionError      [CONTEXT]      return  null;  }  if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(     "A  blank  string  is  not  a  valid  number     ");  }  if  (str.startsWith(     "--     "))  {  return  null;  }  if  (str.startsWith(     "0x     ")  ||  str.startsWith(     "-0x     ")  ||  str.startsWith(     "0X     ")  ||  str.startsWith(     "-0X     "))  {  int  hexDigits  =  str.length()  -  2;  //  drop  0x      [BUGGY]  if(str.length()  >  0)  {  int  hexDigits  =  str.length()  -  2;  if(hexDigits  <  0)  {  return  createInteger(str);  }  [BUGGY]      if  (str.startsWith(     "-     "))  {  //  drop  -    hexDigits--;  hexDigits--;  }  if  (hexDigits  >  8)  {  //  too  many  for  an  int  return  createLong(str);  }  return  createInteger(str);  }  char  lastChar  =  str.charAt(str.length()  -  1);  String  mant;  String  dec;  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  	projects/Lang7/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	457	458	1	replace	if(str.length()  >  0)  {  int  hexDigits  =  str.length()  -  2;  if(hexDigits  <  0)  {  return  createInteger(str);  }	  int    hexDigits    =    str.length();    if(hexDigits    <    0)    {    return    createInteger(str);    }    	non-compiled	[CE]  ')'  expected	26	None	replace
139	[BUG]  [BUGGY]  Integer  hexDigits  =  str.lastIndexOf( "-0x ");  [CE]  ')'  expected  [FE]                    AssertionError      [CONTEXT]      return  null;  }  if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(     "A  blank  string  is  not  a  valid  number     ");  }  if  (str.startsWith(     "--     "))  {  return  null;  }  if  (str.startsWith(     "0x     ")  ||  str.startsWith(     "-0x     ")  ||  str.startsWith(     "0X     ")  ||  str.startsWith(     "-0X     "))  {  int  hexDigits  =  str.length()  -  2;  //  drop  0x      [BUGGY]  Integer  hexDigits  =  str.lastIndexOf( "-0x ");  [BUGGY]      if  (str.startsWith(     "-     "))  {  //  drop  -    hexDigits--;  hexDigits--;  }  if  (hexDigits  >  8)  {  //  too  many  for  an  int  return  createLong(str);  }  return  createInteger(str);  }  char  lastChar  =  str.charAt(str.length()  -  1);  String  mant;  String  dec;  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  	projects/Lang7/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	457	458	1	replace	Integer  hexDigits  =  str.lastIndexOf( "-0x ");	  Integer    hexDigits    =    str.lastIndexOf(   "0x   ");    	non-compiled	[CE]  ')'  expected	38	None	replace
140	[BUG]  [BUGGY]  if(hexDigits  >  0  ||  str.startsWith( "-   "))  {  return  createLong(str);  }  [CE]  ')'  expected  [FE]                AssertionError      [CONTEXT]      return  null;  }  if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(     "A  blank  string  is  not  a  valid  number     ");  }  if  (str.startsWith(     "--     "))  {  return  null;  }  if  (str.startsWith(     "0x     ")  ||  str.startsWith(     "-0x     ")  ||  str.startsWith(     "0X     ")  ||  str.startsWith(     "-0X     "))  {  int  hexDigits  =  str.length()  -  2;  //  drop  0x      [BUGGY]  if(hexDigits  >  0  ||  str.startsWith( "-   "))  {  return  createLong(str);  }  [BUGGY]      hexDigits--;  }  if  (hexDigits  >  8)  {  //  too  many  for  an  int  return  createLong(str);  }  return  createInteger(str);  }  char  lastChar  =  str.charAt(str.length()  -  1);  String  mant;  String  dec;  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  	projects/Lang7/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	457	458	1	replace	if(hexDigits  >  0  ||  str.startsWith( "-   "))  {  return  createLong(str);  }	  if(hexDigits    <    0    ||    str.startsWith(   "-   "))    {    return    createLong(str);    	non-compiled	[CE]  ')'  expected	81	None	replace
141	[BUG]  [BUGGY]  if(hexDigits  ==  0  ||  str.startsWith( "-   "))  {  return  createLong(str);  }  [CE]  ')'  expected  [FE]                  AssertionError      [CONTEXT]      return  null;  }  if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(     "A  blank  string  is  not  a  valid  number     ");  }  if  (str.startsWith(     "--     "))  {  return  null;  }  if  (str.startsWith(     "0x     ")  ||  str.startsWith(     "-0x     ")  ||  str.startsWith(     "0X     ")  ||  str.startsWith(     "-0X     "))  {  int  hexDigits  =  str.length()  -  2;  //  drop  0x      [BUGGY]  if(hexDigits  ==  0  ||  str.startsWith( "-   "))  {  return  createLong(str);  }  [BUGGY]      hexDigits--;  }  if  (hexDigits  >  8)  {  //  too  many  for  an  int  return  createLong(str);  }  return  createInteger(str);  }  char  lastChar  =  str.charAt(str.length()  -  1);  String  mant;  String  dec;  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  	projects/Lang7/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	457	458	1	replace	if(hexDigits  ==  0  ||  str.startsWith( "-   "))  {  return  createLong(str);  }	  if(hexDigits    <    0    ||    str.startsWith(   "-   "))    {    return    createLong(str);    	non-compiled	[CE]  ')'  expected	81	None	replace
142	[BUG]  [BUGGY]  if(hexDigits  <  8)  {  if(str.startsWith( "- "))  {  return  null;  }  [CE]  ')'  expected  [FE]                AssertionError      [CONTEXT]      return  null;  }  if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(     "A  blank  string  is  not  a  valid  number     ");  }  if  (str.startsWith(     "--     "))  {  return  null;  }  if  (str.startsWith(     "0x     ")  ||  str.startsWith(     "-0x     ")  ||  str.startsWith(     "0X     ")  ||  str.startsWith(     "-0X     "))  {  int  hexDigits  =  str.length()  -  2;  //  drop  0x      [BUGGY]  if(hexDigits  <  8)  {  if(str.startsWith( "- "))  {  return  null;  }  [BUGGY]      hexDigits--;  }  if  (hexDigits  >  8)  {  //  too  many  for  an  int  return  createLong(str);  }  return  createInteger(str);  }  char  lastChar  =  str.charAt(str.length()  -  1);  String  mant;  String  dec;  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  	projects/Lang7/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	457	458	1	replace	if(hexDigits  <  8)  {  if(str.startsWith( "- "))  {  return  null;  }	  if(hexDigits    <    0)    {    if(str.startsWith(   "-   "))    {    return    null;    }    	non-compiled	[CE]  ')'  expected	83	None	replace
143	[BUG]  [BUGGY]  if(hexDigits  ==  0)  {  if(str.startsWith( "- "))  {  return  null;  }  [CE]  ')'  expected  [FE]                  AssertionError      [CONTEXT]      return  null;  }  if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(     "A  blank  string  is  not  a  valid  number     ");  }  if  (str.startsWith(     "--     "))  {  return  null;  }  if  (str.startsWith(     "0x     ")  ||  str.startsWith(     "-0x     ")  ||  str.startsWith(     "0X     ")  ||  str.startsWith(     "-0X     "))  {  int  hexDigits  =  str.length()  -  2;  //  drop  0x      [BUGGY]  if(hexDigits  ==  0)  {  if(str.startsWith( "- "))  {  return  null;  }  [BUGGY]      hexDigits--;  }  if  (hexDigits  >  8)  {  //  too  many  for  an  int  return  createLong(str);  }  return  createInteger(str);  }  char  lastChar  =  str.charAt(str.length()  -  1);  String  mant;  String  dec;  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  	projects/Lang7/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	457	458	1	replace	if(hexDigits  ==  0)  {  if(str.startsWith( "- "))  {  return  null;  }	  if(hexDigits    <    0)    {    if(str.startsWith(   "-   "))    {    return    null;    }    	non-compiled	[CE]  ')'  expected	83	None	replace
144	[BUG]  [BUGGY]  if(hexDigits  >  0)  {  //  Drop  0x-hexDigits--;  }  [CE]  ')'  expected  [FE]            AssertionError      [CONTEXT]      return  null;  }  if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(     "A  blank  string  is  not  a  valid  number     ");  }  if  (str.startsWith(     "--     "))  {  return  null;  }  if  (str.startsWith(     "0x     ")  ||  str.startsWith(     "-0x     ")  ||  str.startsWith(     "0X     ")  ||  str.startsWith(     "-0X     "))  {  int  hexDigits  =  str.length()  -  2;  //  drop  0x      [BUGGY]  if(hexDigits  >  0)  {  //  Drop  0x-hexDigits--;  }  [BUGGY]      hexDigits--;  }  if  (hexDigits  >  8)  {  //  too  many  for  an  int  return  createLong(str);  }  return  createInteger(str);  }  char  lastChar  =  str.charAt(str.length()  -  1);  String  mant;  String  dec;  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  	projects/Lang7/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	457	458	1	replace	if(hexDigits  >  0)  {  //  Drop  0x-hexDigits--;  }	  if(hexDigits    >    8)    {    //    drop    0x-hexDigits--;    }    	non-compiled	[CE]  ')'  expected	5	None	replace
145	[BUG]  [BUGGY]  if(str.startsWith( "-   "))  {  if(hexDigits  >  8)  {  int  hexDigits  =  str.length();  if(hexDigits  <  0)  {  return  createLong(str);  }  [CE]  ')'  expected  [FE]                    AssertionError      [CONTEXT]      return  null;  }  if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(     "A  blank  string  is  not  a  valid  number     ");  }  if  (str.startsWith(     "--     "))  {  return  null;  }  if  (str.startsWith(     "0x     ")  ||  str.startsWith(     "-0x     ")  ||  str.startsWith(     "0X     ")  ||  str.startsWith(     "-0X     "))  {  int  hexDigits  =  str.length()  -  2;  //  drop  0x      [BUGGY]  if(str.startsWith( "-   "))  {  if(hexDigits  >  8)  {  int  hexDigits  =  str.length();  if(hexDigits  <  0)  {  return  createLong(str);  }  [BUGGY]      if  (str.startsWith(     "-     "))  {  //  drop  -    hexDigits--;  hexDigits--;  }  if  (hexDigits  >  8)  {  //  too  many  for  an  int  return  createLong(str);  }  return  createInteger(str);  }  char  lastChar  =  str.charAt(str.length()  -  1);  String  mant;  String  dec;  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  	projects/Lang7/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	457	458	1	replace	if(str.startsWith( "-   "))  {  if(hexDigits  >  8)  {  int  hexDigits  =  str.length();  if(hexDigits  <  0)  {  return  createLong(str);  }	  if(hexDigits    >    8)    {    int    hexDigits    =    str.length();    if(hexDigits    <    0)    {    return    createLong(str);    }    	non-compiled	[CE]  ')'  expected	23	None	replace
146	[BUG]  [BUGGY]  if(str.startsWith( "-   "))  {  if(hexDigits  >  8)  {  int  hexDigits  =  str.length();  if(hexDigits  <  0)  {  return  createInteger(str);  }  [CE]  ')'  expected  [FE]                      AssertionError      [CONTEXT]      return  null;  }  if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(     "A  blank  string  is  not  a  valid  number     ");  }  if  (str.startsWith(     "--     "))  {  return  null;  }  if  (str.startsWith(     "0x     ")  ||  str.startsWith(     "-0x     ")  ||  str.startsWith(     "0X     ")  ||  str.startsWith(     "-0X     "))  {  int  hexDigits  =  str.length()  -  2;  //  drop  0x      [BUGGY]  if(str.startsWith( "-   "))  {  if(hexDigits  >  8)  {  int  hexDigits  =  str.length();  if(hexDigits  <  0)  {  return  createInteger(str);  }  [BUGGY]      if  (str.startsWith(     "-     "))  {  //  drop  -    hexDigits--;  hexDigits--;  }  if  (hexDigits  >  8)  {  //  too  many  for  an  int  return  createLong(str);  }  return  createInteger(str);  }  char  lastChar  =  str.charAt(str.length()  -  1);  String  mant;  String  dec;  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  	projects/Lang7/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	457	458	1	replace	if(str.startsWith( "-   "))  {  if(hexDigits  >  8)  {  int  hexDigits  =  str.length();  if(hexDigits  <  0)  {  return  createInteger(str);  }	  if(hexDigits    >    8)    {    int    hexDigits    =    str.length();    if(hexDigits    <    0)    {    return    createLong(str);    }    	non-compiled	[CE]  ')'  expected	23	None	replace
147	[BUG]  [BUGGY]  if(str.length()  >  0)  {  int  hexDigits  =  str.length();  if(hexDigits  <  0)  {  return  createLong(str);  }  [CE]  ')'  expected  [FE]              AssertionError      [CONTEXT]      return  null;  }  if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(     "A  blank  string  is  not  a  valid  number     ");  }  if  (str.startsWith(     "--     "))  {  return  null;  }  if  (str.startsWith(     "0x     ")  ||  str.startsWith(     "-0x     ")  ||  str.startsWith(     "0X     ")  ||  str.startsWith(     "-0X     "))  {  int  hexDigits  =  str.length()  -  2;  //  drop  0x      [BUGGY]  if(str.length()  >  0)  {  int  hexDigits  =  str.length();  if(hexDigits  <  0)  {  return  createLong(str);  }  [BUGGY]      if  (str.startsWith(     "-     "))  {  //  drop  -    hexDigits--;  hexDigits--;  }  if  (hexDigits  >  8)  {  //  too  many  for  an  int  return  createLong(str);  }  return  createInteger(str);  }  char  lastChar  =  str.charAt(str.length()  -  1);  String  mant;  String  dec;  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  	projects/Lang7/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	457	458	1	replace	if(str.length()  >  0)  {  int  hexDigits  =  str.length();  if(hexDigits  <  0)  {  return  createLong(str);  }	  if(hexDigits    <    0)    {    int    hexDigits    =    str.length();    if(hexDigits    <    0)    {    return    createLong(str);    }    	non-compiled	[CE]  ')'  expected	70	None	replace
148	[BUG]  [BUGGY]  if(hexDigits  <  0  ||  str.startsWith( "- "))  {  //  drop  -1;  }  [CE]  ')'  expected  [FE]                  AssertionError      [CONTEXT]      return  null;  }  if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(     "A  blank  string  is  not  a  valid  number     ");  }  if  (str.startsWith(     "--     "))  {  return  null;  }  if  (str.startsWith(     "0x     ")  ||  str.startsWith(     "-0x     ")  ||  str.startsWith(     "0X     ")  ||  str.startsWith(     "-0X     "))  {  int  hexDigits  =  str.length()  -  2;  //  drop  0x      [BUGGY]  if(hexDigits  <  0  ||  str.startsWith( "- "))  {  //  drop  -1;  }  [BUGGY]      hexDigits--;  }  if  (hexDigits  >  8)  {  //  too  many  for  an  int  return  createLong(str);  }  return  createInteger(str);  }  char  lastChar  =  str.charAt(str.length()  -  1);  String  mant;  String  dec;  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  	projects/Lang7/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	457	458	1	replace	if(hexDigits  <  0  ||  str.startsWith( "- "))  {  //  drop  -1;  }	  if(hexDigits    >    0    ||    str.startsWith(   "-       "))    {    //    drop    -    hexDigits--;    }    	non-compiled	[CE]  ')'  expected	86	None	replace
149	[BUG]  [BUGGY]  if(hexDigits  >  0  ||  str.startsWith( "-   "))  {  return  null;  }  [CE]  ')'  expected  [FE]              AssertionError      [CONTEXT]      return  null;  }  if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(     "A  blank  string  is  not  a  valid  number     ");  }  if  (str.startsWith(     "--     "))  {  return  null;  }  if  (str.startsWith(     "0x     ")  ||  str.startsWith(     "-0x     ")  ||  str.startsWith(     "0X     ")  ||  str.startsWith(     "-0X     "))  {  int  hexDigits  =  str.length()  -  2;  //  drop  0x      [BUGGY]  if(hexDigits  >  0  ||  str.startsWith( "-   "))  {  return  null;  }  [BUGGY]      hexDigits--;  }  if  (hexDigits  >  8)  {  //  too  many  for  an  int  return  createLong(str);  }  return  createInteger(str);  }  char  lastChar  =  str.charAt(str.length()  -  1);  String  mant;  String  dec;  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  	projects/Lang7/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	457	458	1	replace	if(hexDigits  >  0  ||  str.startsWith( "-   "))  {  return  null;  }	  if(hexDigits    <    0    ||    str.startsWith(   "-   "))    {    return    null;    	non-compiled	[CE]  ')'  expected	48	None	replace
150	[BUG]  [BUGGY]  if(hexDigits  >=  0)  {  //  drop  -1;  }  [CE]  ')'  expected  [FE]              AssertionError      [CONTEXT]      return  null;  }  if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(     "A  blank  string  is  not  a  valid  number     ");  }  if  (str.startsWith(     "--     "))  {  return  null;  }  if  (str.startsWith(     "0x     ")  ||  str.startsWith(     "-0x     ")  ||  str.startsWith(     "0X     ")  ||  str.startsWith(     "-0X     "))  {  int  hexDigits  =  str.length()  -  2;  //  drop  0x      [BUGGY]  if(hexDigits  >=  0)  {  //  drop  -1;  }  [BUGGY]      hexDigits--;  }  if  (hexDigits  >  8)  {  //  too  many  for  an  int  return  createLong(str);  }  return  createInteger(str);  }  char  lastChar  =  str.charAt(str.length()  -  1);  String  mant;  String  dec;  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  	projects/Lang7/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	457	458	1	replace	if(hexDigits  >=  0)  {  //  drop  -1;  }	  if(hexDigits    <    8)    {    //    drop    -1;    }    	non-compiled	[CE]  ')'  expected	37	None	replace
151	[BUG]  [BUGGY]  if(hexDigits  ==  0  ||  str.startsWith( "-   "))  {  //  drop  0;  }  [CE]  ')'  expected  [FE]                AssertionError      [CONTEXT]      return  null;  }  if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(     "A  blank  string  is  not  a  valid  number     ");  }  if  (str.startsWith(     "--     "))  {  return  null;  }  if  (str.startsWith(     "0x     ")  ||  str.startsWith(     "-0x     ")  ||  str.startsWith(     "0X     ")  ||  str.startsWith(     "-0X     "))  {  int  hexDigits  =  str.length()  -  2;  //  drop  0x      [BUGGY]  if(hexDigits  ==  0  ||  str.startsWith( "-   "))  {  //  drop  0;  }  [BUGGY]      hexDigits--;  }  if  (hexDigits  >  8)  {  //  too  many  for  an  int  return  createLong(str);  }  return  createInteger(str);  }  char  lastChar  =  str.charAt(str.length()  -  1);  String  mant;  String  dec;  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  	projects/Lang7/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	457	458	1	replace	if(hexDigits  ==  0  ||  str.startsWith( "-   "))  {  //  drop  0;  }	  if(hexDigits    <    0    ||    str.startsWith(   "-   "))    {    //    drop    0;    }    	non-compiled	[CE]  ')'  expected	27	None	replace
152	[BUG]  [BUGGY]  Integer  hexDigits  =  createInteger(str.length()  -  1);  [CE]  ')'  expected  [FE]            AssertionError      [CONTEXT]      return  null;  }  if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(     "A  blank  string  is  not  a  valid  number     ");  }  if  (str.startsWith(     "--     "))  {  return  null;  }  if  (str.startsWith(     "0x     ")  ||  str.startsWith(     "-0x     ")  ||  str.startsWith(     "0X     ")  ||  str.startsWith(     "-0X     "))  {  int  hexDigits  =  str.length()  -  2;  //  drop  0x      [BUGGY]  Integer  hexDigits  =  createInteger(str.length()  -  1);  [BUGGY]      if  (str.startsWith(     "-     "))  {  //  drop  -    hexDigits--;  hexDigits--;  }  if  (hexDigits  >  8)  {  //  too  many  for  an  int  return  createLong(str);  }  return  createInteger(str);  }  char  lastChar  =  str.charAt(str.length()  -  1);  String  mant;  String  dec;  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  	projects/Lang7/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	457	458	1	replace	Integer  hexDigits  =  createInteger(str.length()  -  1);	  Integer    hexDigits    =    createInteger(str.length());    	non-compiled	[CE]  ')'  expected	51	None	replace
153	[BUG]  [BUGGY]  if(hexDigits  >=  0)  {  if(str.startsWith( "- "))  {  //  drop  0;  }  [CE]  ')'  expected  [FE]              AssertionError      [CONTEXT]      return  null;  }  if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(     "A  blank  string  is  not  a  valid  number     ");  }  if  (str.startsWith(     "--     "))  {  return  null;  }  if  (str.startsWith(     "0x     ")  ||  str.startsWith(     "-0x     ")  ||  str.startsWith(     "0X     ")  ||  str.startsWith(     "-0X     "))  {  int  hexDigits  =  str.length()  -  2;  //  drop  0x      [BUGGY]  if(hexDigits  >=  0)  {  if(str.startsWith( "- "))  {  //  drop  0;  }  [BUGGY]      hexDigits--;  }  if  (hexDigits  >  8)  {  //  too  many  for  an  int  return  createLong(str);  }  return  createInteger(str);  }  char  lastChar  =  str.charAt(str.length()  -  1);  String  mant;  String  dec;  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  	projects/Lang7/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	457	458	1	replace	if(hexDigits  >=  0)  {  if(str.startsWith( "- "))  {  //  drop  0;  }	  if(hexDigits    <    8)    {    if(str.startsWith(   "-   "))    {    //    drop    0;    }    	non-compiled	[CE]  ')'  expected	46	None	replace
154	[BUG]  [BUGGY]  if(hexDigits  <  0)  {  return  createBigInteger(str);  }  [CE]  ')'  expected  [FE]                      AssertionError      [CONTEXT]      return  null;  }  if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(     "A  blank  string  is  not  a  valid  number     ");  }  if  (str.startsWith(     "--     "))  {  return  null;  }  if  (str.startsWith(     "0x     ")  ||  str.startsWith(     "-0x     ")  ||  str.startsWith(     "0X     ")  ||  str.startsWith(     "-0X     "))  {  int  hexDigits  =  str.length()  -  2;  //  drop  0x      [BUGGY]  if(hexDigits  <  0)  {  return  createBigInteger(str);  }  [BUGGY]      hexDigits--;  }  if  (hexDigits  >  8)  {  //  too  many  for  an  int  return  createLong(str);  }  return  createInteger(str);  }  char  lastChar  =  str.charAt(str.length()  -  1);  String  mant;  String  dec;  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  	projects/Lang7/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	457	458	1	replace	if(hexDigits  <  0)  {  return  createBigInteger(str);  }	  if(hexDigits    <    8)    {    return    createInteger(str);    }    	non-compiled	[CE]  ')'  expected	12	None	replace
155	[BUG]  [BUGGY]  HexDigits  =  str.charAt(hexDigits  -  1);  [CE]  ')'  expected  [FE]                AssertionError      [CONTEXT]      return  null;  }  if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(     "A  blank  string  is  not  a  valid  number     ");  }  if  (str.startsWith(     "--     "))  {  return  null;  }  if  (str.startsWith(     "0x     ")  ||  str.startsWith(     "-0x     ")  ||  str.startsWith(     "0X     ")  ||  str.startsWith(     "-0X     "))  {  int  hexDigits  =  str.length()  -  2;  //  drop  0x      [BUGGY]  HexDigits  =  str.charAt(hexDigits  -  1);  [BUGGY]      if  (str.startsWith(     "-     "))  {  //  drop  -    hexDigits--;  hexDigits--;  }  if  (hexDigits  >  8)  {  //  too  many  for  an  int  return  createLong(str);  }  return  createInteger(str);  }  char  lastChar  =  str.charAt(str.length()  -  1);  String  mant;  String  dec;  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  	projects/Lang7/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	457	458	1	replace	HexDigits  =  str.charAt(hexDigits  -  1);	  hexDigits    =    str.charAt(hexDigits    -    1    +    1);    	non-compiled	[CE]  ')'  expected	78	None	replace
156	[BUG]  [BUGGY]  Integer  hexDigits  =  createInteger(str,  3);  [CE]  ')'  expected  [FE]            AssertionError      [CONTEXT]      return  null;  }  if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(     "A  blank  string  is  not  a  valid  number     ");  }  if  (str.startsWith(     "--     "))  {  return  null;  }  if  (str.startsWith(     "0x     ")  ||  str.startsWith(     "-0x     ")  ||  str.startsWith(     "0X     ")  ||  str.startsWith(     "-0X     "))  {  int  hexDigits  =  str.length()  -  2;  //  drop  0x      [BUGGY]  Integer  hexDigits  =  createInteger(str,  3);  [BUGGY]      if  (str.startsWith(     "-     "))  {  //  drop  -    hexDigits--;  hexDigits--;  }  if  (hexDigits  >  8)  {  //  too  many  for  an  int  return  createLong(str);  }  return  createInteger(str);  }  char  lastChar  =  str.charAt(str.length()  -  1);  String  mant;  String  dec;  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  	projects/Lang7/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	457	458	1	replace	Integer  hexDigits  =  createInteger(str,  3);	  Integer    hexDigits    =    createInteger(str,    dec);    	non-compiled	[CE]  ')'  expected	79	None	replace
157	[BUG]  [BUGGY]  if(hexDigits  >  0)  {  if  (str.startsWith( "- "))  {  //  drop  -1  hexDigits--;  }  [CE]  ')'  expected  [FE]              AssertionError      [CONTEXT]      return  null;  }  if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(     "A  blank  string  is  not  a  valid  number     ");  }  if  (str.startsWith(     "--     "))  {  return  null;  }  if  (str.startsWith(     "0x     ")  ||  str.startsWith(     "-0x     ")  ||  str.startsWith(     "0X     ")  ||  str.startsWith(     "-0X     "))  {  int  hexDigits  =  str.length()  -  2;  //  drop  0x      [BUGGY]  if(hexDigits  >  0)  {  if  (str.startsWith( "- "))  {  //  drop  -1  hexDigits--;  }  [BUGGY]      hexDigits--;  }  if  (hexDigits  >  8)  {  //  too  many  for  an  int  return  createLong(str);  }  return  createInteger(str);  }  char  lastChar  =  str.charAt(str.length()  -  1);  String  mant;  String  dec;  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  	projects/Lang7/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	457	458	1	replace	if(hexDigits  >  0)  {  if  (str.startsWith( "- "))  {  //  drop  -1  hexDigits--;  }	  if(hexDigits    >    8)    {    if    (str.startsWith(   "-       "))    {    //    drop    -    hexDigits--;    }    	non-compiled	[CE]  ')'  expected	64	None	replace
158	[BUG]  [BUGGY]  if(hexDigits  <  0)  {  if(str.startsWith( "- "))  {  //  drop  -1  hexDigits--;  }  [CE]  ')'  expected  [FE]                AssertionError      [CONTEXT]      return  null;  }  if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(     "A  blank  string  is  not  a  valid  number     ");  }  if  (str.startsWith(     "--     "))  {  return  null;  }  if  (str.startsWith(     "0x     ")  ||  str.startsWith(     "-0x     ")  ||  str.startsWith(     "0X     ")  ||  str.startsWith(     "-0X     "))  {  int  hexDigits  =  str.length()  -  2;  //  drop  0x      [BUGGY]  if(hexDigits  <  0)  {  if(str.startsWith( "- "))  {  //  drop  -1  hexDigits--;  }  [BUGGY]      hexDigits--;  }  if  (hexDigits  >  8)  {  //  too  many  for  an  int  return  createLong(str);  }  return  createInteger(str);  }  char  lastChar  =  str.charAt(str.length()  -  1);  String  mant;  String  dec;  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  	projects/Lang7/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	457	458	1	replace	if(hexDigits  <  0)  {  if(str.startsWith( "- "))  {  //  drop  -1  hexDigits--;  }	  if(hexDigits    >    8)    {    if    (str.startsWith(   "-       "))    {    //    drop    -    hexDigits--;    }    	non-compiled	[CE]  ')'  expected	64	None	replace
159	[BUG]  [BUGGY]  if(hexDigits  >=  0  ||  str.startsWith( "- "))  {  return  createInteger(str);  }  [CE]  ')'  expected  [FE]                AssertionError      [CONTEXT]      return  null;  }  if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(     "A  blank  string  is  not  a  valid  number     ");  }  if  (str.startsWith(     "--     "))  {  return  null;  }  if  (str.startsWith(     "0x     ")  ||  str.startsWith(     "-0x     ")  ||  str.startsWith(     "0X     ")  ||  str.startsWith(     "-0X     "))  {  int  hexDigits  =  str.length()  -  2;  //  drop  0x      [BUGGY]  if(hexDigits  >=  0  ||  str.startsWith( "- "))  {  return  createInteger(str);  }  [BUGGY]      hexDigits--;  }  if  (hexDigits  >  8)  {  //  too  many  for  an  int  return  createLong(str);  }  return  createInteger(str);  }  char  lastChar  =  str.charAt(str.length()  -  1);  String  mant;  String  dec;  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  	projects/Lang7/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	457	458	1	replace	if(hexDigits  >=  0  ||  str.startsWith( "- "))  {  return  createInteger(str);  }	  if(hexDigits    <    0    ||    str.startsWith(   "-   "))    {    return    createInteger(str);    }    	non-compiled	[CE]  ')'  expected	85	None	replace
160	[BUG]  [BUGGY]  if(dec  ==  null)  {  if(hexDigits  >  8)  {  int  hexDigits  =  str.length();  if(hexDigits  <  0)  {  return  createLong(str);  }  [CE]  ')'  expected  [FE]                    AssertionError      [CONTEXT]      return  null;  }  if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(     "A  blank  string  is  not  a  valid  number     ");  }  if  (str.startsWith(     "--     "))  {  return  null;  }  if  (str.startsWith(     "0x     ")  ||  str.startsWith(     "-0x     ")  ||  str.startsWith(     "0X     ")  ||  str.startsWith(     "-0X     "))  {  int  hexDigits  =  str.length()  -  2;  //  drop  0x      [BUGGY]  if(dec  ==  null)  {  if(hexDigits  >  8)  {  int  hexDigits  =  str.length();  if(hexDigits  <  0)  {  return  createLong(str);  }  [BUGGY]      if  (str.startsWith(     "-     "))  {  //  drop  -    hexDigits--;  hexDigits--;  }  if  (hexDigits  >  8)  {  //  too  many  for  an  int  return  createLong(str);  }  return  createInteger(str);  }  char  lastChar  =  str.charAt(str.length()  -  1);  String  mant;  String  dec;  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  	projects/Lang7/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	457	458	1	replace	if(dec  ==  null)  {  if(hexDigits  >  8)  {  int  hexDigits  =  str.length();  if(hexDigits  <  0)  {  return  createLong(str);  }	  if(hexDigits    >    8)    {    int    hexDigits    =    str.length();    if(hexDigits    <    0)    {    return    createLong(str);    }    	non-compiled	[CE]  ')'  expected	23	None	replace
161	[BUG]  [BUGGY]  if(dec  ==  null)  {  if(hexDigits  >  8)  {  int  hexDigits  =  str.length();  if(hexDigits  <  0)  {  return  createInteger(str);  }  [CE]  ')'  expected  [FE]                      AssertionError      [CONTEXT]      return  null;  }  if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(     "A  blank  string  is  not  a  valid  number     ");  }  if  (str.startsWith(     "--     "))  {  return  null;  }  if  (str.startsWith(     "0x     ")  ||  str.startsWith(     "-0x     ")  ||  str.startsWith(     "0X     ")  ||  str.startsWith(     "-0X     "))  {  int  hexDigits  =  str.length()  -  2;  //  drop  0x      [BUGGY]  if(dec  ==  null)  {  if(hexDigits  >  8)  {  int  hexDigits  =  str.length();  if(hexDigits  <  0)  {  return  createInteger(str);  }  [BUGGY]      if  (str.startsWith(     "-     "))  {  //  drop  -    hexDigits--;  hexDigits--;  }  if  (hexDigits  >  8)  {  //  too  many  for  an  int  return  createLong(str);  }  return  createInteger(str);  }  char  lastChar  =  str.charAt(str.length()  -  1);  String  mant;  String  dec;  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  	projects/Lang7/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	457	458	1	replace	if(dec  ==  null)  {  if(hexDigits  >  8)  {  int  hexDigits  =  str.length();  if(hexDigits  <  0)  {  return  createInteger(str);  }	  if(hexDigits    >    8)    {    int    hexDigits    =    str.length();    if(hexDigits    <    0)    {    return    createLong(str);    }    	non-compiled	[CE]  ')'  expected	23	None	replace
162	[BUG]  [BUGGY]  if(hexDigits  <  0  ||  str.startsWith( "-0 ")||  str.startsWith( "-0x   "))  {  //  drop  0xDigits--;  }  [CE]  ')'  expected  [FE]                AssertionError      [CONTEXT]      return  null;  }  if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(     "A  blank  string  is  not  a  valid  number     ");  }  if  (str.startsWith(     "--     "))  {  return  null;  }  if  (str.startsWith(     "0x     ")  ||  str.startsWith(     "-0x     ")  ||  str.startsWith(     "0X     ")  ||  str.startsWith(     "-0X     "))  {  int  hexDigits  =  str.length()  -  2;  //  drop  0x      [BUGGY]  if(hexDigits  <  0  ||  str.startsWith( "-0 ")||  str.startsWith( "-0x   "))  {  //  drop  0xDigits--;  }  [BUGGY]      hexDigits--;  }  if  (hexDigits  >  8)  {  //  too  many  for  an  int  return  createLong(str);  }  return  createInteger(str);  }  char  lastChar  =  str.charAt(str.length()  -  1);  String  mant;  String  dec;  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  	projects/Lang7/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	457	458	1	replace	if(hexDigits  <  0  ||  str.startsWith( "-0 ")||  str.startsWith( "-0x   "))  {  //  drop  0xDigits--;  }	  if(hexDigits    <    0    ||    str.startsWith(   "-0   "))    {    //    drop    0xDigits--;    }    	non-compiled	[CE]  ')'  expected	54	None	replace
163	[BUG]  [BUGGY]  if(hexDigits  <  0  ||  str.startsWith( "- "))  {  //  drop  0xDigits--;  }  [CE]  ')'  expected  [FE]                  AssertionError      [CONTEXT]      return  null;  }  if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(     "A  blank  string  is  not  a  valid  number     ");  }  if  (str.startsWith(     "--     "))  {  return  null;  }  if  (str.startsWith(     "0x     ")  ||  str.startsWith(     "-0x     ")  ||  str.startsWith(     "0X     ")  ||  str.startsWith(     "-0X     "))  {  int  hexDigits  =  str.length()  -  2;  //  drop  0x      [BUGGY]  if(hexDigits  <  0  ||  str.startsWith( "- "))  {  //  drop  0xDigits--;  }  [BUGGY]      hexDigits--;  }  if  (hexDigits  >  8)  {  //  too  many  for  an  int  return  createLong(str);  }  return  createInteger(str);  }  char  lastChar  =  str.charAt(str.length()  -  1);  String  mant;  String  dec;  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  	projects/Lang7/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	457	458	1	replace	if(hexDigits  <  0  ||  str.startsWith( "- "))  {  //  drop  0xDigits--;  }	  if(hexDigits    <    0    ||    str.startsWith(   "-0   "))    {    //    drop    0xDigits--;    }    	non-compiled	[CE]  ')'  expected	54	None	replace
164	[BUG]  [BUGGY]  Integer  hexDigits  =  str.lastIndexOf('0')+  1;  [CE]  ')'  expected  [FE]                      AssertionError      [CONTEXT]      return  null;  }  if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(     "A  blank  string  is  not  a  valid  number     ");  }  if  (str.startsWith(     "--     "))  {  return  null;  }  if  (str.startsWith(     "0x     ")  ||  str.startsWith(     "-0x     ")  ||  str.startsWith(     "0X     ")  ||  str.startsWith(     "-0X     "))  {  int  hexDigits  =  str.length()  -  2;  //  drop  0x      [BUGGY]  Integer  hexDigits  =  str.lastIndexOf('0')+  1;  [BUGGY]      if  (str.startsWith(     "-     "))  {  //  drop  -    hexDigits--;  hexDigits--;  }  if  (hexDigits  >  8)  {  //  too  many  for  an  int  return  createLong(str);  }  return  createInteger(str);  }  char  lastChar  =  str.charAt(str.length()  -  1);  String  mant;  String  dec;  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  	projects/Lang7/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	457	458	1	replace	Integer  hexDigits  =  str.lastIndexOf('0')+  1;	  Integer    hexDigits    =    str.lastIndexOf('0');    	non-compiled	[CE]  ')'  expected	39	None	replace
165	[BUG]  [BUGGY]  if(hexDigits  >=  0)  {  if(str.startsWith( "- "))  {  return  null;  }  [CE]  ')'  expected  [FE]                AssertionError      [CONTEXT]      return  null;  }  if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(     "A  blank  string  is  not  a  valid  number     ");  }  if  (str.startsWith(     "--     "))  {  return  null;  }  if  (str.startsWith(     "0x     ")  ||  str.startsWith(     "-0x     ")  ||  str.startsWith(     "0X     ")  ||  str.startsWith(     "-0X     "))  {  int  hexDigits  =  str.length()  -  2;  //  drop  0x      [BUGGY]  if(hexDigits  >=  0)  {  if(str.startsWith( "- "))  {  return  null;  }  [BUGGY]      hexDigits--;  }  if  (hexDigits  >  8)  {  //  too  many  for  an  int  return  createLong(str);  }  return  createInteger(str);  }  char  lastChar  =  str.charAt(str.length()  -  1);  String  mant;  String  dec;  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  	projects/Lang7/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	457	458	1	replace	if(hexDigits  >=  0)  {  if(str.startsWith( "- "))  {  return  null;  }	  if(hexDigits    <    0)    {    if(str.startsWith(   "-   "))    {    return    null;    }    	non-compiled	[CE]  ')'  expected	83	None	replace
166	[BUG]  [BUGGY]  if(hexDigits  <  0)  {  if(hexDigits  >  0)  {  int  hexDigits  =  str.length();  if(hexDigits  <  0)  {  return  createInteger(str);  }  [CE]  ')'  expected  [FE]                AssertionError      [CONTEXT]      return  null;  }  if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(     "A  blank  string  is  not  a  valid  number     ");  }  if  (str.startsWith(     "--     "))  {  return  null;  }  if  (str.startsWith(     "0x     ")  ||  str.startsWith(     "-0x     ")  ||  str.startsWith(     "0X     ")  ||  str.startsWith(     "-0X     "))  {  int  hexDigits  =  str.length()  -  2;  //  drop  0x      [BUGGY]  if(hexDigits  <  0)  {  if(hexDigits  >  0)  {  int  hexDigits  =  str.length();  if(hexDigits  <  0)  {  return  createInteger(str);  }  [BUGGY]      if  (str.startsWith(     "-     "))  {  //  drop  -    hexDigits--;  hexDigits--;  }  if  (hexDigits  >  8)  {  //  too  many  for  an  int  return  createLong(str);  }  return  createInteger(str);  }  char  lastChar  =  str.charAt(str.length()  -  1);  String  mant;  String  dec;  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  	projects/Lang7/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	457	458	1	replace	if(hexDigits  <  0)  {  if(hexDigits  >  0)  {  int  hexDigits  =  str.length();  if(hexDigits  <  0)  {  return  createInteger(str);  }	  if(dec    ==    null)    {    if(hexDigits    >    0)    {    int    hexDigits    =    str.length();    if(hexDigits    <    0)    {    return    createInteger(str);    }    	non-compiled	[CE]  ')'  expected	21	None	replace
167	[BUG]  [BUGGY]  if(hexDigits  <  0  ||  str.startsWith( "-0 "))  {  //  drop  1  -  hexDigits--;  [CE]  ')'  expected  [FE]                AssertionError      [CONTEXT]      return  null;  }  if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(     "A  blank  string  is  not  a  valid  number     ");  }  if  (str.startsWith(     "--     "))  {  return  null;  }  if  (str.startsWith(     "0x     ")  ||  str.startsWith(     "-0x     ")  ||  str.startsWith(     "0X     ")  ||  str.startsWith(     "-0X     "))  {  int  hexDigits  =  str.length()  -  2;  //  drop  0x      [BUGGY]  if(hexDigits  <  0  ||  str.startsWith( "-0 "))  {  //  drop  1  -  hexDigits--;  [BUGGY]      hexDigits--;  }  if  (hexDigits  >  8)  {  //  too  many  for  an  int  return  createLong(str);  }  return  createInteger(str);  }  char  lastChar  =  str.charAt(str.length()  -  1);  String  mant;  String  dec;  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  	projects/Lang7/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	457	458	1	replace	if(hexDigits  <  0  ||  str.startsWith( "-0 "))  {  //  drop  1  -  hexDigits--;	  if(hexDigits    <    0    ||    str.startsWith(   "-   "))    {    //    drop    1    -    hexDigits--;    	non-compiled	[CE]  ')'  expected	49	None	replace
168	[BUG]  [BUGGY]  Integer  hexDigits  =  str.indexOf('-')+  1;  [CE]  ')'  expected  [FE]                    AssertionError      [CONTEXT]      return  null;  }  if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(     "A  blank  string  is  not  a  valid  number     ");  }  if  (str.startsWith(     "--     "))  {  return  null;  }  if  (str.startsWith(     "0x     ")  ||  str.startsWith(     "-0x     ")  ||  str.startsWith(     "0X     ")  ||  str.startsWith(     "-0X     "))  {  int  hexDigits  =  str.length()  -  2;  //  drop  0x      [BUGGY]  Integer  hexDigits  =  str.indexOf('-')+  1;  [BUGGY]      if  (str.startsWith(     "-     "))  {  //  drop  -    hexDigits--;  hexDigits--;  }  if  (hexDigits  >  8)  {  //  too  many  for  an  int  return  createLong(str);  }  return  createInteger(str);  }  char  lastChar  =  str.charAt(str.length()  -  1);  String  mant;  String  dec;  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  	projects/Lang7/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	457	458	1	replace	Integer  hexDigits  =  str.indexOf('-')+  1;	  Integer    hexDigits    =    str.indexOf('-');    	non-compiled	[CE]  ')'  expected	63	None	replace
169	[BUG]  [BUGGY]  if(hexDigits  >=  0)  {  //  drop  0;  }  [CE]  ')'  expected  [FE]                    AssertionError      [CONTEXT]      return  null;  }  if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(     "A  blank  string  is  not  a  valid  number     ");  }  if  (str.startsWith(     "--     "))  {  return  null;  }  if  (str.startsWith(     "0x     ")  ||  str.startsWith(     "-0x     ")  ||  str.startsWith(     "0X     ")  ||  str.startsWith(     "-0X     "))  {  int  hexDigits  =  str.length()  -  2;  //  drop  0x      [BUGGY]  if(hexDigits  >=  0)  {  //  drop  0;  }  [BUGGY]      hexDigits--;  }  if  (hexDigits  >  8)  {  //  too  many  for  an  int  return  createLong(str);  }  return  createInteger(str);  }  char  lastChar  =  str.charAt(str.length()  -  1);  String  mant;  String  dec;  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  	projects/Lang7/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	457	458	1	replace	if(hexDigits  >=  0)  {  //  drop  0;  }	  if(hexDigits    >    0)    {    //    drop    0;    }    	non-compiled	[CE]  ')'  expected	11	None	replace
170	[BUG]  [BUGGY]  if(hexDigits  <  0  ||  str.startsWith( "-- "))  {  [CE]  ')'  expected  [FE]                  AssertionError      [CONTEXT]      return  null;  }  if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(     "A  blank  string  is  not  a  valid  number     ");  }  if  (str.startsWith(     "--     "))  {  return  null;  }  if  (str.startsWith(     "0x     ")  ||  str.startsWith(     "-0x     ")  ||  str.startsWith(     "0X     ")  ||  str.startsWith(     "-0X     "))  {  int  hexDigits  =  str.length()  -  2;  //  drop  0x      [BUGGY]  if(hexDigits  <  0  ||  str.startsWith( "-- "))  {  [BUGGY]      hexDigits--;  }  if  (hexDigits  >  8)  {  //  too  many  for  an  int  return  createLong(str);  }  return  createInteger(str);  }  char  lastChar  =  str.charAt(str.length()  -  1);  String  mant;  String  dec;  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  	projects/Lang7/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	457	458	1	replace	if(hexDigits  <  0  ||  str.startsWith( "-- "))  {	  if(hexDigits    <    0    ||    str.startsWith(   "-   "))    {    	non-compiled	[CE]  ')'  expected	50	None	replace
171	[BUG]  [BUGGY]  if(hexDigits  ==  0)  {  if(hexDigits  <  8)  {  return  null;  }  [CE]  ')'  expected  [FE]                AssertionError      [CONTEXT]      return  null;  }  if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(     "A  blank  string  is  not  a  valid  number     ");  }  if  (str.startsWith(     "--     "))  {  return  null;  }  if  (str.startsWith(     "0x     ")  ||  str.startsWith(     "-0x     ")  ||  str.startsWith(     "0X     ")  ||  str.startsWith(     "-0X     "))  {  int  hexDigits  =  str.length()  -  2;  //  drop  0x      [BUGGY]  if(hexDigits  ==  0)  {  if(hexDigits  <  8)  {  return  null;  }  [BUGGY]      hexDigits--;  }  if  (hexDigits  >  8)  {  //  too  many  for  an  int  return  createLong(str);  }  return  createInteger(str);  }  char  lastChar  =  str.charAt(str.length()  -  1);  String  mant;  String  dec;  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  	projects/Lang7/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	457	458	1	replace	if(hexDigits  ==  0)  {  if(hexDigits  <  8)  {  return  null;  }	  if(hexDigits    >    0)    {    if(hexDigits    <    8)    {    return    null;    }    	non-compiled	[CE]  ')'  expected	2	None	replace
172	[BUG]  [BUGGY]  Integer  hexDigits  =  createBigInteger(0);  [CE]  ')'  expected  [FE]              AssertionError      [CONTEXT]      return  null;  }  if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(     "A  blank  string  is  not  a  valid  number     ");  }  if  (str.startsWith(     "--     "))  {  return  null;  }  if  (str.startsWith(     "0x     ")  ||  str.startsWith(     "-0x     ")  ||  str.startsWith(     "0X     ")  ||  str.startsWith(     "-0X     "))  {  int  hexDigits  =  str.length()  -  2;  //  drop  0x      [BUGGY]  Integer  hexDigits  =  createBigInteger(0);  [BUGGY]      if  (str.startsWith(     "-     "))  {  //  drop  -    hexDigits--;  hexDigits--;  }  if  (hexDigits  >  8)  {  //  too  many  for  an  int  return  createLong(str);  }  return  createInteger(str);  }  char  lastChar  =  str.charAt(str.length()  -  1);  String  mant;  String  dec;  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  	projects/Lang7/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	457	458	1	replace	Integer  hexDigits  =  createBigInteger(0);	  Integer    hexDigits    =    createInteger(0);    	non-compiled	[CE]  ')'  expected	52	None	replace
173	[BUG]  [BUGGY]  if(dec  ==  null)  {  if(hexDigits  <  0)  {  int  hexDigits  =  str.length();  if(hexDigits  <  0)  {  return  createLong(str);  }  [CE]  ')'  expected  [FE]                AssertionError      [CONTEXT]      return  null;  }  if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(     "A  blank  string  is  not  a  valid  number     ");  }  if  (str.startsWith(     "--     "))  {  return  null;  }  if  (str.startsWith(     "0x     ")  ||  str.startsWith(     "-0x     ")  ||  str.startsWith(     "0X     ")  ||  str.startsWith(     "-0X     "))  {  int  hexDigits  =  str.length()  -  2;  //  drop  0x      [BUGGY]  if(dec  ==  null)  {  if(hexDigits  <  0)  {  int  hexDigits  =  str.length();  if(hexDigits  <  0)  {  return  createLong(str);  }  [BUGGY]      if  (str.startsWith(     "-     "))  {  //  drop  -    hexDigits--;  hexDigits--;  }  if  (hexDigits  >  8)  {  //  too  many  for  an  int  return  createLong(str);  }  return  createInteger(str);  }  char  lastChar  =  str.charAt(str.length()  -  1);  String  mant;  String  dec;  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  	projects/Lang7/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	457	458	1	replace	if(dec  ==  null)  {  if(hexDigits  <  0)  {  int  hexDigits  =  str.length();  if(hexDigits  <  0)  {  return  createLong(str);  }	  if(hexDigits    <    0)    {    int    hexDigits    =    str.length()    -    2;    if(hexDigits    <    0)    {    return    createLong(str);    }    	non-compiled	[CE]  ')'  expected	77	None	replace
174	[BUG]  [BUGGY]  if(dec  ==  null)  {  if(hexDigits  <  0)  {  int  hexDigits  =  str.length();  if(hexDigits  <  0)  {  return  createInteger(str);  }  [CE]  ')'  expected  [FE]                  AssertionError      [CONTEXT]      return  null;  }  if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(     "A  blank  string  is  not  a  valid  number     ");  }  if  (str.startsWith(     "--     "))  {  return  null;  }  if  (str.startsWith(     "0x     ")  ||  str.startsWith(     "-0x     ")  ||  str.startsWith(     "0X     ")  ||  str.startsWith(     "-0X     "))  {  int  hexDigits  =  str.length()  -  2;  //  drop  0x      [BUGGY]  if(dec  ==  null)  {  if(hexDigits  <  0)  {  int  hexDigits  =  str.length();  if(hexDigits  <  0)  {  return  createInteger(str);  }  [BUGGY]      if  (str.startsWith(     "-     "))  {  //  drop  -    hexDigits--;  hexDigits--;  }  if  (hexDigits  >  8)  {  //  too  many  for  an  int  return  createLong(str);  }  return  createInteger(str);  }  char  lastChar  =  str.charAt(str.length()  -  1);  String  mant;  String  dec;  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  	projects/Lang7/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	457	458	1	replace	if(dec  ==  null)  {  if(hexDigits  <  0)  {  int  hexDigits  =  str.length();  if(hexDigits  <  0)  {  return  createInteger(str);  }	  if(hexDigits    <    0)    {    int    hexDigits    =    str.length()    -    2;    if(hexDigits    <    0)    {    return    createLong(str);    }    	non-compiled	[CE]  ')'  expected	77	None	replace
175	[BUG]  [BUGGY]  if(hexDigits  ==  0)  {  if(hexDigits  <  8)  {  //  drop  -1;  }  [CE]  ')'  expected  [FE]                  AssertionError      [CONTEXT]      return  null;  }  if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(     "A  blank  string  is  not  a  valid  number     ");  }  if  (str.startsWith(     "--     "))  {  return  null;  }  if  (str.startsWith(     "0x     ")  ||  str.startsWith(     "-0x     ")  ||  str.startsWith(     "0X     ")  ||  str.startsWith(     "-0X     "))  {  int  hexDigits  =  str.length()  -  2;  //  drop  0x      [BUGGY]  if(hexDigits  ==  0)  {  if(hexDigits  <  8)  {  //  drop  -1;  }  [BUGGY]      hexDigits--;  }  if  (hexDigits  >  8)  {  //  too  many  for  an  int  return  createLong(str);  }  return  createInteger(str);  }  char  lastChar  =  str.charAt(str.length()  -  1);  String  mant;  String  dec;  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  	projects/Lang7/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	457	458	1	replace	if(hexDigits  ==  0)  {  if(hexDigits  <  8)  {  //  drop  -1;  }	  if(hexDigits    >    0)    {    if(hexDigits    <    8)    {    //    drop    -1;    }    	non-compiled	[CE]  ')'  expected	13	None	replace
176	[BUG]  [BUGGY]  if(dec  ==  null)  {  if(hexDigits  <  0)  {  hexDigits  =  str.length();  if(hexDigits  <  0)  {  return  createInteger(str);  }  [CE]  ')'  expected  [FE]              AssertionError      [CONTEXT]      return  null;  }  if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(     "A  blank  string  is  not  a  valid  number     ");  }  if  (str.startsWith(     "--     "))  {  return  null;  }  if  (str.startsWith(     "0x     ")  ||  str.startsWith(     "-0x     ")  ||  str.startsWith(     "0X     ")  ||  str.startsWith(     "-0X     "))  {  int  hexDigits  =  str.length()  -  2;  //  drop  0x      [BUGGY]  if(dec  ==  null)  {  if(hexDigits  <  0)  {  hexDigits  =  str.length();  if(hexDigits  <  0)  {  return  createInteger(str);  }  [BUGGY]      if  (str.startsWith(     "-     "))  {  //  drop  -    hexDigits--;  hexDigits--;  }  if  (hexDigits  >  8)  {  //  too  many  for  an  int  return  createLong(str);  }  return  createInteger(str);  }  char  lastChar  =  str.charAt(str.length()  -  1);  String  mant;  String  dec;  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  	projects/Lang7/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	457	458	1	replace	if(dec  ==  null)  {  if(hexDigits  <  0)  {  hexDigits  =  str.length();  if(hexDigits  <  0)  {  return  createInteger(str);  }	  if(hexDigits    <    0)    {    int    hexDigits    =    str.length()    -    2;    if(hexDigits    <    0)    {    return    createInteger(str);    }    	non-compiled	[CE]  ')'  expected	69	None	replace
177	[BUG]  [BUGGY]  if(hexDigits  >  0  ||  str.startsWith( "-0 "))  {  //  drop  0;  }  [CE]  ')'  expected  [FE]                      AssertionError      [CONTEXT]      return  null;  }  if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(     "A  blank  string  is  not  a  valid  number     ");  }  if  (str.startsWith(     "--     "))  {  return  null;  }  if  (str.startsWith(     "0x     ")  ||  str.startsWith(     "-0x     ")  ||  str.startsWith(     "0X     ")  ||  str.startsWith(     "-0X     "))  {  int  hexDigits  =  str.length()  -  2;  //  drop  0x      [BUGGY]  if(hexDigits  >  0  ||  str.startsWith( "-0 "))  {  //  drop  0;  }  [BUGGY]      hexDigits--;  }  if  (hexDigits  >  8)  {  //  too  many  for  an  int  return  createLong(str);  }  return  createInteger(str);  }  char  lastChar  =  str.charAt(str.length()  -  1);  String  mant;  String  dec;  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  	projects/Lang7/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	457	458	1	replace	if(hexDigits  >  0  ||  str.startsWith( "-0 "))  {  //  drop  0;  }	  if(hexDigits    <    0    ||    str.startsWith(   "-0   "))    {    //    drop    0;    }    	non-compiled	[CE]  ')'  expected	30	None	replace
178	[BUG]  [BUGGY]  if(hexDigits  ==  0)  {  if(hexDigits  <  8)  {  return  createLong(str);  }  [CE]  ')'  expected  [FE]              AssertionError      [CONTEXT]      return  null;  }  if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(     "A  blank  string  is  not  a  valid  number     ");  }  if  (str.startsWith(     "--     "))  {  return  null;  }  if  (str.startsWith(     "0x     ")  ||  str.startsWith(     "-0x     ")  ||  str.startsWith(     "0X     ")  ||  str.startsWith(     "-0X     "))  {  int  hexDigits  =  str.length()  -  2;  //  drop  0x      [BUGGY]  if(hexDigits  ==  0)  {  if(hexDigits  <  8)  {  return  createLong(str);  }  [BUGGY]      hexDigits--;  }  if  (hexDigits  >  8)  {  //  too  many  for  an  int  return  createLong(str);  }  return  createInteger(str);  }  char  lastChar  =  str.charAt(str.length()  -  1);  String  mant;  String  dec;  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  	projects/Lang7/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	457	458	1	replace	if(hexDigits  ==  0)  {  if(hexDigits  <  8)  {  return  createLong(str);  }	  if(hexDigits    >    0)    {    if(hexDigits    <    8)    {    return    createLong(str);    }    	non-compiled	[CE]  ')'  expected	1	None	replace
179	[BUG]  [BUGGY]  if(hexDigits  >  0)  {  if(hexDigits  <  0)  {  return  createInteger(str);  }  [CE]  ')'  expected  [FE]                AssertionError      [CONTEXT]      return  null;  }  if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(     "A  blank  string  is  not  a  valid  number     ");  }  if  (str.startsWith(     "--     "))  {  return  null;  }  if  (str.startsWith(     "0x     ")  ||  str.startsWith(     "-0x     ")  ||  str.startsWith(     "0X     ")  ||  str.startsWith(     "-0X     "))  {  int  hexDigits  =  str.length()  -  2;  //  drop  0x      [BUGGY]  if(hexDigits  >  0)  {  if(hexDigits  <  0)  {  return  createInteger(str);  }  [BUGGY]      hexDigits--;  }  if  (hexDigits  >  8)  {  //  too  many  for  an  int  return  createLong(str);  }  return  createInteger(str);  }  char  lastChar  =  str.charAt(str.length()  -  1);  String  mant;  String  dec;  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  	projects/Lang7/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	457	458	1	replace	if(hexDigits  >  0)  {  if(hexDigits  <  0)  {  return  createInteger(str);  }	  if(hexDigits    >    0)    {    if(hexDigits    <    8)    {    return    createLong(str);    }    	non-compiled	[CE]  ')'  expected	1	None	replace
180	[BUG]  [BUGGY]  if(hexDigits  ==  0  ||  str.startsWith( "-   "))  {  //  drop  -  hexDigits--;  }  [CE]  ')'  expected  [FE]                  AssertionError      [CONTEXT]      return  null;  }  if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(     "A  blank  string  is  not  a  valid  number     ");  }  if  (str.startsWith(     "--     "))  {  return  null;  }  if  (str.startsWith(     "0x     ")  ||  str.startsWith(     "-0x     ")  ||  str.startsWith(     "0X     ")  ||  str.startsWith(     "-0X     "))  {  int  hexDigits  =  str.length()  -  2;  //  drop  0x      [BUGGY]  if(hexDigits  ==  0  ||  str.startsWith( "-   "))  {  //  drop  -  hexDigits--;  }  [BUGGY]      hexDigits--;  }  if  (hexDigits  >  8)  {  //  too  many  for  an  int  return  createLong(str);  }  return  createInteger(str);  }  char  lastChar  =  str.charAt(str.length()  -  1);  String  mant;  String  dec;  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  	projects/Lang7/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	457	458	1	replace	if(hexDigits  ==  0  ||  str.startsWith( "-   "))  {  //  drop  -  hexDigits--;  }	  if(hexDigits    >    0    ||    str.startsWith(   "-       "))    {    //    drop    -    hexDigits--;    }    	non-compiled	[CE]  ')'  expected	86	None	replace
181	[BUG]  [BUGGY]  if(str.startsWith( "-   "))  {  if(hexDigits  >  8)  {  if(hexDigits  >  0)  {  int  hexDigits  =  str.length();  if(hexDigits  <  0)  {  return  create  [CE]  [FE]              AssertionError      [CONTEXT]      return  null;  }  if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(     "A  blank  string  is  not  a  valid  number     ");  }  if  (str.startsWith(     "--     "))  {  return  null;  }  if  (str.startsWith(     "0x     ")  ||  str.startsWith(     "-0x     ")  ||  str.startsWith(     "0X     ")  ||  str.startsWith(     "-0X     "))  {  int  hexDigits  =  str.length()  -  2;  //  drop  0x      [BUGGY]  if(str.startsWith( "-   "))  {  if(hexDigits  >  8)  {  if(hexDigits  >  0)  {  int  hexDigits  =  str.length();  if(hexDigits  <  0)  {  return  create  [BUGGY]      if  (str.startsWith(     "-     "))  {  //  drop  -    hexDigits--;  hexDigits--;  }  if  (hexDigits  >  8)  {  //  too  many  for  an  int  return  createLong(str);  }  return  createInteger(str);  }  char  lastChar  =  str.charAt(str.length()  -  1);  String  mant;  String  dec;  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  	projects/Lang7/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	457	458	1	replace	if(str.startsWith( "-   "))  {  if(hexDigits  >  8)  {  if(hexDigits  >  0)  {  int  hexDigits  =  str.length();  if(hexDigits  <  0)  {  return  create	  if(dec    ==    null)    {    if(hexDigits    >    0)    {    int    hexDigits    =    str.length();    if(hexDigits    <    0)    {    return    createLong(str);    }    	non-compiled	[CE]  	20	None	replace
182	[BUG]  [BUGGY]  if(hexDigits  <  0  ||  str.startsWith( "- "))  {  //  drop  0x-hexDigits--;  }  [CE]  ')'  expected  [FE]                  AssertionError      [CONTEXT]      return  null;  }  if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(     "A  blank  string  is  not  a  valid  number     ");  }  if  (str.startsWith(     "--     "))  {  return  null;  }  if  (str.startsWith(     "0x     ")  ||  str.startsWith(     "-0x     ")  ||  str.startsWith(     "0X     ")  ||  str.startsWith(     "-0X     "))  {  int  hexDigits  =  str.length()  -  2;  //  drop  0x      [BUGGY]  if(hexDigits  <  0  ||  str.startsWith( "- "))  {  //  drop  0x-hexDigits--;  }  [BUGGY]      hexDigits--;  }  if  (hexDigits  >  8)  {  //  too  many  for  an  int  return  createLong(str);  }  return  createInteger(str);  }  char  lastChar  =  str.charAt(str.length()  -  1);  String  mant;  String  dec;  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  	projects/Lang7/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	457	458	1	replace	if(hexDigits  <  0  ||  str.startsWith( "- "))  {  //  drop  0x-hexDigits--;  }	  if(hexDigits    <    0    ||    str.startsWith(   "-0   "))    {    //    drop    0x-hexDigits--;    }    	non-compiled	[CE]  ')'  expected	55	None	replace
183	[BUG]  [BUGGY]  if(hexDigits  <  0  ||  str.startsWith( "-0 ")||  str.startsWith( "-0x   "))  {  //  drop  0x-hexDigits--;  }  [CE]  ')'  expected  [FE]                    AssertionError      [CONTEXT]      return  null;  }  if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(     "A  blank  string  is  not  a  valid  number     ");  }  if  (str.startsWith(     "--     "))  {  return  null;  }  if  (str.startsWith(     "0x     ")  ||  str.startsWith(     "-0x     ")  ||  str.startsWith(     "0X     ")  ||  str.startsWith(     "-0X     "))  {  int  hexDigits  =  str.length()  -  2;  //  drop  0x      [BUGGY]  if(hexDigits  <  0  ||  str.startsWith( "-0 ")||  str.startsWith( "-0x   "))  {  //  drop  0x-hexDigits--;  }  [BUGGY]      hexDigits--;  }  if  (hexDigits  >  8)  {  //  too  many  for  an  int  return  createLong(str);  }  return  createInteger(str);  }  char  lastChar  =  str.charAt(str.length()  -  1);  String  mant;  String  dec;  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  	projects/Lang7/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	457	458	1	replace	if(hexDigits  <  0  ||  str.startsWith( "-0 ")||  str.startsWith( "-0x   "))  {  //  drop  0x-hexDigits--;  }	  if(hexDigits    <    0    ||    str.startsWith(   "-0   "))    {    //    drop    0x-hexDigits--;    }    	non-compiled	[CE]  ')'  expected	55	None	replace
184	[BUG]  [BUGGY]  if(hexDigits  ==  0  ||  str.startsWith( "-0 "))  {  //  drop  0x-hexDigits--;  }  [CE]  ')'  expected  [FE]                      AssertionError      [CONTEXT]      return  null;  }  if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(     "A  blank  string  is  not  a  valid  number     ");  }  if  (str.startsWith(     "--     "))  {  return  null;  }  if  (str.startsWith(     "0x     ")  ||  str.startsWith(     "-0x     ")  ||  str.startsWith(     "0X     ")  ||  str.startsWith(     "-0X     "))  {  int  hexDigits  =  str.length()  -  2;  //  drop  0x      [BUGGY]  if(hexDigits  ==  0  ||  str.startsWith( "-0 "))  {  //  drop  0x-hexDigits--;  }  [BUGGY]      hexDigits--;  }  if  (hexDigits  >  8)  {  //  too  many  for  an  int  return  createLong(str);  }  return  createInteger(str);  }  char  lastChar  =  str.charAt(str.length()  -  1);  String  mant;  String  dec;  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  	projects/Lang7/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	457	458	1	replace	if(hexDigits  ==  0  ||  str.startsWith( "-0 "))  {  //  drop  0x-hexDigits--;  }	  if(hexDigits    <    0    ||    str.startsWith(   "-0   "))    {    //    drop    0x-hexDigits--;    }    	non-compiled	[CE]  ')'  expected	55	None	replace
185	[BUG]  [BUGGY]  if(hexDigits  <  0  ||  str.startsWith( "-00 "))  {  //  drop  1  -  hexDigits--;  }  [CE]  ')'  expected  [FE]                  AssertionError      [CONTEXT]      return  null;  }  if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(     "A  blank  string  is  not  a  valid  number     ");  }  if  (str.startsWith(     "--     "))  {  return  null;  }  if  (str.startsWith(     "0x     ")  ||  str.startsWith(     "-0x     ")  ||  str.startsWith(     "0X     ")  ||  str.startsWith(     "-0X     "))  {  int  hexDigits  =  str.length()  -  2;  //  drop  0x      [BUGGY]  if(hexDigits  <  0  ||  str.startsWith( "-00 "))  {  //  drop  1  -  hexDigits--;  }  [BUGGY]      hexDigits--;  }  if  (hexDigits  >  8)  {  //  too  many  for  an  int  return  createLong(str);  }  return  createInteger(str);  }  char  lastChar  =  str.charAt(str.length()  -  1);  String  mant;  String  dec;  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  	projects/Lang7/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	457	458	1	replace	if(hexDigits  <  0  ||  str.startsWith( "-00 "))  {  //  drop  1  -  hexDigits--;  }	  if(hexDigits    <    0    ||    str.startsWith(   "-   "))    {    //    drop    1    -    hexDigits--;    }    	non-compiled	[CE]  ')'  expected	28	None	replace
186	[BUG]  [BUGGY]  if(hexDigits  >=  8)  {  //  drop  0x;  }  [CE]  ')'  expected  [FE]                  AssertionError      [CONTEXT]      return  null;  }  if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(     "A  blank  string  is  not  a  valid  number     ");  }  if  (str.startsWith(     "--     "))  {  return  null;  }  if  (str.startsWith(     "0x     ")  ||  str.startsWith(     "-0x     ")  ||  str.startsWith(     "0X     ")  ||  str.startsWith(     "-0X     "))  {  int  hexDigits  =  str.length()  -  2;  //  drop  0x      [BUGGY]  if(hexDigits  >=  8)  {  //  drop  0x;  }  [BUGGY]      hexDigits--;  }  if  (hexDigits  >  8)  {  //  too  many  for  an  int  return  createLong(str);  }  return  createInteger(str);  }  char  lastChar  =  str.charAt(str.length()  -  1);  String  mant;  String  dec;  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  	projects/Lang7/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	457	458	1	replace	if(hexDigits  >=  8)  {  //  drop  0x;  }	  if(hexDigits    >    8)    {    //    drop    0x;    }    	non-compiled	[CE]  ')'  expected	8	None	replace
187	[BUG]  [BUGGY]  Integer  hexDigits  =  str.indexOf('.')+  1;  [CE]  ')'  expected  [FE]                AssertionError      [CONTEXT]      return  null;  }  if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(     "A  blank  string  is  not  a  valid  number     ");  }  if  (str.startsWith(     "--     "))  {  return  null;  }  if  (str.startsWith(     "0x     ")  ||  str.startsWith(     "-0x     ")  ||  str.startsWith(     "0X     ")  ||  str.startsWith(     "-0X     "))  {  int  hexDigits  =  str.length()  -  2;  //  drop  0x      [BUGGY]  Integer  hexDigits  =  str.indexOf('.')+  1;  [BUGGY]      if  (str.startsWith(     "-     "))  {  //  drop  -    hexDigits--;  hexDigits--;  }  if  (hexDigits  >  8)  {  //  too  many  for  an  int  return  createLong(str);  }  return  createInteger(str);  }  char  lastChar  =  str.charAt(str.length()  -  1);  String  mant;  String  dec;  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  	projects/Lang7/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	457	458	1	replace	Integer  hexDigits  =  str.indexOf('.')+  1;	  Integer    hexDigits    =    str.lastIndexOf('.')+    1;    	non-compiled	[CE]  ')'  expected	87	None	replace
188	[BUG]  [BUGGY]  char  hexDigits  =  str.length()  -  1;  [CE]  ')'  expected  [FE]              AssertionError      [CONTEXT]      return  null;  }  if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(     "A  blank  string  is  not  a  valid  number     ");  }  if  (str.startsWith(     "--     "))  {  return  null;  }  if  (str.startsWith(     "0x     ")  ||  str.startsWith(     "-0x     ")  ||  str.startsWith(     "0X     ")  ||  str.startsWith(     "-0X     "))  {  int  hexDigits  =  str.length()  -  2;  //  drop  0x      [BUGGY]  char  hexDigits  =  str.length()  -  1;  [BUGGY]      if  (str.startsWith(     "-     "))  {  //  drop  -    hexDigits--;  hexDigits--;  }  if  (hexDigits  >  8)  {  //  too  many  for  an  int  return  createLong(str);  }  return  createInteger(str);  }  char  lastChar  =  str.charAt(str.length()  -  1);  String  mant;  String  dec;  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  	projects/Lang7/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	457	458	1	replace	char  hexDigits  =  str.length()  -  1;	  char    hexDigits    =    str.length();    	non-compiled	[CE]  ')'  expected	40	None	replace
189	[BUG]  [BUGGY]  if(hexDigits  <  0)  {  int  hexDigits  =  str.length();  if(hexDigits  >  0)  {  return  createInteger(str);  }  [CE]  ')'  expected  [FE]            AssertionError      [CONTEXT]      return  null;  }  if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(     "A  blank  string  is  not  a  valid  number     ");  }  if  (str.startsWith(     "--     "))  {  return  null;  }  if  (str.startsWith(     "0x     ")  ||  str.startsWith(     "-0x     ")  ||  str.startsWith(     "0X     ")  ||  str.startsWith(     "-0X     "))  {  int  hexDigits  =  str.length()  -  2;  //  drop  0x      [BUGGY]  if(hexDigits  <  0)  {  int  hexDigits  =  str.length();  if(hexDigits  >  0)  {  return  createInteger(str);  }  [BUGGY]      if  (str.startsWith(     "-     "))  {  //  drop  -    hexDigits--;  hexDigits--;  }  if  (hexDigits  >  8)  {  //  too  many  for  an  int  return  createLong(str);  }  return  createInteger(str);  }  char  lastChar  =  str.charAt(str.length()  -  1);  String  mant;  String  dec;  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  	projects/Lang7/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	457	458	1	replace	if(hexDigits  <  0)  {  int  hexDigits  =  str.length();  if(hexDigits  >  0)  {  return  createInteger(str);  }	  if(hexDigits    <    0)    {    int    hexDigits    =    str.length();    if(hexDigits    <    0)    {    return    createInteger(str);    }    	non-compiled	[CE]  ')'  expected	68	None	replace
190	[BUG]  [BUGGY]  if(hexDigits  >  8)  {  int  hexDigits  =  str.length();  if(hexDigits  <  1)  {  return  createInteger(str);  }  [CE]  ')'  expected  [FE]            AssertionError      [CONTEXT]      return  null;  }  if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(     "A  blank  string  is  not  a  valid  number     ");  }  if  (str.startsWith(     "--     "))  {  return  null;  }  if  (str.startsWith(     "0x     ")  ||  str.startsWith(     "-0x     ")  ||  str.startsWith(     "0X     ")  ||  str.startsWith(     "-0X     "))  {  int  hexDigits  =  str.length()  -  2;  //  drop  0x      [BUGGY]  if(hexDigits  >  8)  {  int  hexDigits  =  str.length();  if(hexDigits  <  1)  {  return  createInteger(str);  }  [BUGGY]      if  (str.startsWith(     "-     "))  {  //  drop  -    hexDigits--;  hexDigits--;  }  if  (hexDigits  >  8)  {  //  too  many  for  an  int  return  createLong(str);  }  return  createInteger(str);  }  char  lastChar  =  str.charAt(str.length()  -  1);  String  mant;  String  dec;  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  	projects/Lang7/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	457	458	1	replace	if(hexDigits  >  8)  {  int  hexDigits  =  str.length();  if(hexDigits  <  1)  {  return  createInteger(str);  }	  if(hexDigits    >    0)    {    int    hexDigits    =    str.length()    -    2;    if(hexDigits    <    0)    {    return    createInteger(str);    }    	non-compiled	[CE]  ')'  expected	84	None	replace
191	[BUG]  [BUGGY]  HisxDigits  =  str.length();  [CE]  ')'  expected  [FE]                AssertionError      [CONTEXT]      return  null;  }  if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(     "A  blank  string  is  not  a  valid  number     ");  }  if  (str.startsWith(     "--     "))  {  return  null;  }  if  (str.startsWith(     "0x     ")  ||  str.startsWith(     "-0x     ")  ||  str.startsWith(     "0X     ")  ||  str.startsWith(     "-0X     "))  {  int  hexDigits  =  str.length()  -  2;  //  drop  0x      [BUGGY]  HisxDigits  =  str.length();  [BUGGY]      if  (str.startsWith(     "-     "))  {  //  drop  -    hexDigits--;  hexDigits--;  }  if  (hexDigits  >  8)  {  //  too  many  for  an  int  return  createLong(str);  }  return  createInteger(str);  }  char  lastChar  =  str.charAt(str.length()  -  1);  String  mant;  String  dec;  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  	projects/Lang7/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	457	458	1	replace	HisxDigits  =  str.length();	  HexDigits    =    str.length()    -    2;    	non-compiled	[CE]  ')'  expected	16	None	replace
192	[BUG]  [BUGGY]  if(hexDigits  >=  0)  {  if(str.startsWith( "- "))  {  return  createInteger(str);  }  [CE]  ')'  expected  [FE]              AssertionError      [CONTEXT]      return  null;  }  if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(     "A  blank  string  is  not  a  valid  number     ");  }  if  (str.startsWith(     "--     "))  {  return  null;  }  if  (str.startsWith(     "0x     ")  ||  str.startsWith(     "-0x     ")  ||  str.startsWith(     "0X     ")  ||  str.startsWith(     "-0X     "))  {  int  hexDigits  =  str.length()  -  2;  //  drop  0x      [BUGGY]  if(hexDigits  >=  0)  {  if(str.startsWith( "- "))  {  return  createInteger(str);  }  [BUGGY]      hexDigits--;  }  if  (hexDigits  >  8)  {  //  too  many  for  an  int  return  createLong(str);  }  return  createInteger(str);  }  char  lastChar  =  str.charAt(str.length()  -  1);  String  mant;  String  dec;  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  	projects/Lang7/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	457	458	1	replace	if(hexDigits  >=  0)  {  if(str.startsWith( "- "))  {  return  createInteger(str);  }	  if(hexDigits    <    0)    {    if(str.startsWith(   "-   "))    {    return    createInteger(str);    }    	non-compiled	[CE]  ')'  expected	82	None	replace
193	[BUG]  [BUGGY]  Integer  hexDigits  =  createBigInteger(hexDigits);  [CE]  ')'  expected  [FE]              AssertionError      [CONTEXT]      return  null;  }  if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(     "A  blank  string  is  not  a  valid  number     ");  }  if  (str.startsWith(     "--     "))  {  return  null;  }  if  (str.startsWith(     "0x     ")  ||  str.startsWith(     "-0x     ")  ||  str.startsWith(     "0X     ")  ||  str.startsWith(     "-0X     "))  {  int  hexDigits  =  str.length()  -  2;  //  drop  0x      [BUGGY]  Integer  hexDigits  =  createBigInteger(hexDigits);  [BUGGY]      if  (str.startsWith(     "-     "))  {  //  drop  -    hexDigits--;  hexDigits--;  }  if  (hexDigits  >  8)  {  //  too  many  for  an  int  return  createLong(str);  }  return  createInteger(str);  }  char  lastChar  =  str.charAt(str.length()  -  1);  String  mant;  String  dec;  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  	projects/Lang7/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	457	458	1	replace	Integer  hexDigits  =  createBigInteger(hexDigits);	  Integer    hexDigits    =    createInteger(hexDigits);    	non-compiled	[CE]  ')'  expected	60	None	replace
194	[BUG]  [BUGGY]  Integer  hexDigits  =  createInteger(hexDigits  +  1);  [CE]  ')'  expected  [FE]                AssertionError      [CONTEXT]      return  null;  }  if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(     "A  blank  string  is  not  a  valid  number     ");  }  if  (str.startsWith(     "--     "))  {  return  null;  }  if  (str.startsWith(     "0x     ")  ||  str.startsWith(     "-0x     ")  ||  str.startsWith(     "0X     ")  ||  str.startsWith(     "-0X     "))  {  int  hexDigits  =  str.length()  -  2;  //  drop  0x      [BUGGY]  Integer  hexDigits  =  createInteger(hexDigits  +  1);  [BUGGY]      if  (str.startsWith(     "-     "))  {  //  drop  -    hexDigits--;  hexDigits--;  }  if  (hexDigits  >  8)  {  //  too  many  for  an  int  return  createLong(str);  }  return  createInteger(str);  }  char  lastChar  =  str.charAt(str.length()  -  1);  String  mant;  String  dec;  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  	projects/Lang7/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	457	458	1	replace	Integer  hexDigits  =  createInteger(hexDigits  +  1);	  Integer    hexDigits    =    createInteger(hexDigits);    	non-compiled	[CE]  ')'  expected	60	None	replace
195	[BUG]  [BUGGY]  char  hexDigits  =  str.charAt(0);  [CE]  ')'  expected  [FE]              AssertionError      [CONTEXT]      return  null;  }  if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(     "A  blank  string  is  not  a  valid  number     ");  }  if  (str.startsWith(     "--     "))  {  return  null;  }  if  (str.startsWith(     "0x     ")  ||  str.startsWith(     "-0x     ")  ||  str.startsWith(     "0X     ")  ||  str.startsWith(     "-0X     "))  {  int  hexDigits  =  str.length()  -  2;  //  drop  0x      [BUGGY]  char  hexDigits  =  str.charAt(0);  [BUGGY]      if  (str.startsWith(     "-     "))  {  //  drop  -    hexDigits--;  hexDigits--;  }  if  (hexDigits  >  8)  {  //  too  many  for  an  int  return  createLong(str);  }  return  createInteger(str);  }  char  lastChar  =  str.charAt(str.length()  -  1);  String  mant;  String  dec;  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  	projects/Lang7/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	457	458	1	replace	char  hexDigits  =  str.charAt(0);	  char    hexDigits    =    str.length();    	non-compiled	[CE]  ')'  expected	40	None	replace
196	[BUG]  [BUGGY]  Integer  hexDigits  =  createBigInteger(1);  [CE]  ')'  expected  [FE]              AssertionError      [CONTEXT]      return  null;  }  if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(     "A  blank  string  is  not  a  valid  number     ");  }  if  (str.startsWith(     "--     "))  {  return  null;  }  if  (str.startsWith(     "0x     ")  ||  str.startsWith(     "-0x     ")  ||  str.startsWith(     "0X     ")  ||  str.startsWith(     "-0X     "))  {  int  hexDigits  =  str.length()  -  2;  //  drop  0x      [BUGGY]  Integer  hexDigits  =  createBigInteger(1);  [BUGGY]      if  (str.startsWith(     "-     "))  {  //  drop  -    hexDigits--;  hexDigits--;  }  if  (hexDigits  >  8)  {  //  too  many  for  an  int  return  createLong(str);  }  return  createInteger(str);  }  char  lastChar  =  str.charAt(str.length()  -  1);  String  mant;  String  dec;  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  	projects/Lang7/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	457	458	1	replace	Integer  hexDigits  =  createBigInteger(1);	  Integer    hexDigits    =    createInteger(0);    	non-compiled	[CE]  ')'  expected	52	None	replace
197	[BUG]  [BUGGY]  Integer  hexDigits  =  str.indexOf('-',  dec);  [CE]  ')'  expected  [FE]                    AssertionError      [CONTEXT]      return  null;  }  if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(     "A  blank  string  is  not  a  valid  number     ");  }  if  (str.startsWith(     "--     "))  {  return  null;  }  if  (str.startsWith(     "0x     ")  ||  str.startsWith(     "-0x     ")  ||  str.startsWith(     "0X     ")  ||  str.startsWith(     "-0X     "))  {  int  hexDigits  =  str.length()  -  2;  //  drop  0x      [BUGGY]  Integer  hexDigits  =  str.indexOf('-',  dec);  [BUGGY]      if  (str.startsWith(     "-     "))  {  //  drop  -    hexDigits--;  hexDigits--;  }  if  (hexDigits  >  8)  {  //  too  many  for  an  int  return  createLong(str);  }  return  createInteger(str);  }  char  lastChar  =  str.charAt(str.length()  -  1);  String  mant;  String  dec;  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  	projects/Lang7/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	457	458	1	replace	Integer  hexDigits  =  str.indexOf('-',  dec);	  Integer    hexDigits    =    str.indexOf('-');    	non-compiled	[CE]  ')'  expected	63	None	replace
198	[BUG]  [BUGGY]  Integer  hexDigits  =  str.indexOf('-',  16);  [CE]  ')'  expected  [FE]                      AssertionError      [CONTEXT]      return  null;  }  if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(     "A  blank  string  is  not  a  valid  number     ");  }  if  (str.startsWith(     "--     "))  {  return  null;  }  if  (str.startsWith(     "0x     ")  ||  str.startsWith(     "-0x     ")  ||  str.startsWith(     "0X     ")  ||  str.startsWith(     "-0X     "))  {  int  hexDigits  =  str.length()  -  2;  //  drop  0x      [BUGGY]  Integer  hexDigits  =  str.indexOf('-',  16);  [BUGGY]      if  (str.startsWith(     "-     "))  {  //  drop  -    hexDigits--;  hexDigits--;  }  if  (hexDigits  >  8)  {  //  too  many  for  an  int  return  createLong(str);  }  return  createInteger(str);  }  char  lastChar  =  str.charAt(str.length()  -  1);  String  mant;  String  dec;  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  	projects/Lang7/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	457	458	1	replace	Integer  hexDigits  =  str.indexOf('-',  16);	  Integer    hexDigits    =    str.indexOf('-');    	non-compiled	[CE]  ')'  expected	63	None	replace
199	[BUG]  [BUGGY]  if(hexDigits  <  0  ||  str.charAt(0)  ==  '-')  {  int  hexDigits  =  str.length()  -  2;  if(hexDigits  <  0)  {  return  createInteger(str);  }  [CE]  ')'  expected  [FE]                AssertionError      [CONTEXT]      return  null;  }  if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(     "A  blank  string  is  not  a  valid  number     ");  }  if  (str.startsWith(     "--     "))  {  return  null;  }  if  (str.startsWith(     "0x     ")  ||  str.startsWith(     "-0x     ")  ||  str.startsWith(     "0X     ")  ||  str.startsWith(     "-0X     "))  {  int  hexDigits  =  str.length()  -  2;  //  drop  0x      [BUGGY]  if(hexDigits  <  0  ||  str.charAt(0)  ==  '-')  {  int  hexDigits  =  str.length()  -  2;  if(hexDigits  <  0)  {  return  createInteger(str);  }  [BUGGY]      if  (str.startsWith(     "-     "))  {  //  drop  -    hexDigits--;  hexDigits--;  }  if  (hexDigits  >  8)  {  //  too  many  for  an  int  return  createLong(str);  }  return  createInteger(str);  }  char  lastChar  =  str.charAt(str.length()  -  1);  String  mant;  String  dec;  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  	projects/Lang7/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	457	458	1	replace	if(hexDigits  <  0  ||  str.charAt(0)  ==  '-')  {  int  hexDigits  =  str.length()  -  2;  if(hexDigits  <  0)  {  return  createInteger(str);  }	  int    hexDigits    =    str.length();    if(hexDigits    <    0)    {    return    createInteger(str);    }    	non-compiled	[CE]  ')'  expected	26	None	replace
200	[BUG]  [BUGGY]  if(hexDigits  <  0  ||  str.charAt(0)!=  '-')  {  int  hexDigits  =  str.length()  -  2;  if(hexDigits  <  0)  {  return  createInteger(str);  }  [CE]  ')'  expected  [FE]                  AssertionError      [CONTEXT]      return  null;  }  if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(     "A  blank  string  is  not  a  valid  number     ");  }  if  (str.startsWith(     "--     "))  {  return  null;  }  if  (str.startsWith(     "0x     ")  ||  str.startsWith(     "-0x     ")  ||  str.startsWith(     "0X     ")  ||  str.startsWith(     "-0X     "))  {  int  hexDigits  =  str.length()  -  2;  //  drop  0x      [BUGGY]  if(hexDigits  <  0  ||  str.charAt(0)!=  '-')  {  int  hexDigits  =  str.length()  -  2;  if(hexDigits  <  0)  {  return  createInteger(str);  }  [BUGGY]      if  (str.startsWith(     "-     "))  {  //  drop  -    hexDigits--;  hexDigits--;  }  if  (hexDigits  >  8)  {  //  too  many  for  an  int  return  createLong(str);  }  return  createInteger(str);  }  char  lastChar  =  str.charAt(str.length()  -  1);  String  mant;  String  dec;  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  	projects/Lang7/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	457	458	1	replace	if(hexDigits  <  0  ||  str.charAt(0)!=  '-')  {  int  hexDigits  =  str.length()  -  2;  if(hexDigits  <  0)  {  return  createInteger(str);  }	  int    hexDigits    =    str.length();    if(hexDigits    <    0)    {    return    createInteger(str);    }    	non-compiled	[CE]  ')'  expected	26	None	replace
201	[BUG]  [BUGGY]  if(hexDigits  >  0)  {  if(hexDigits  <  0)  {  //  drop  0;  }  [CE]  ')'  expected  [FE]                  AssertionError      [CONTEXT]      return  null;  }  if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(     "A  blank  string  is  not  a  valid  number     ");  }  if  (str.startsWith(     "--     "))  {  return  null;  }  if  (str.startsWith(     "0x     ")  ||  str.startsWith(     "-0x     ")  ||  str.startsWith(     "0X     ")  ||  str.startsWith(     "-0X     "))  {  int  hexDigits  =  str.length()  -  2;  //  drop  0x      [BUGGY]  if(hexDigits  >  0)  {  if(hexDigits  <  0)  {  //  drop  0;  }  [BUGGY]      hexDigits--;  }  if  (hexDigits  >  8)  {  //  too  many  for  an  int  return  createLong(str);  }  return  createInteger(str);  }  char  lastChar  =  str.charAt(str.length()  -  1);  String  mant;  String  dec;  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  	projects/Lang7/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	457	458	1	replace	if(hexDigits  >  0)  {  if(hexDigits  <  0)  {  //  drop  0;  }	  if(hexDigits    >    0)    {    if(hexDigits    <    8)    {    //    drop    -1;    }    	non-compiled	[CE]  ')'  expected	13	None	replace
202	[BUG]  [BUGGY]  if(hexDigits  <  0)  {  if(hexDigits  <  0)  {  //  drop  0;  }  [CE]  ')'  expected  [FE]                    AssertionError      [CONTEXT]      return  null;  }  if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(     "A  blank  string  is  not  a  valid  number     ");  }  if  (str.startsWith(     "--     "))  {  return  null;  }  if  (str.startsWith(     "0x     ")  ||  str.startsWith(     "-0x     ")  ||  str.startsWith(     "0X     ")  ||  str.startsWith(     "-0X     "))  {  int  hexDigits  =  str.length()  -  2;  //  drop  0x      [BUGGY]  if(hexDigits  <  0)  {  if(hexDigits  <  0)  {  //  drop  0;  }  [BUGGY]      hexDigits--;  }  if  (hexDigits  >  8)  {  //  too  many  for  an  int  return  createLong(str);  }  return  createInteger(str);  }  char  lastChar  =  str.charAt(str.length()  -  1);  String  mant;  String  dec;  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  	projects/Lang7/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	457	458	1	replace	if(hexDigits  <  0)  {  if(hexDigits  <  0)  {  //  drop  0;  }	  if(hexDigits    >    0)    {    if(hexDigits    <    8)    {    //    drop    -1;    }    	non-compiled	[CE]  ')'  expected	13	None	replace
203	[BUG]  [BUGGY]  if(hexDigits  <  0  ||  str.startsWith( ".- "))  {  return  null;  }  [CE]  ')'  expected  [FE]                    AssertionError      [CONTEXT]      return  null;  }  if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(     "A  blank  string  is  not  a  valid  number     ");  }  if  (str.startsWith(     "--     "))  {  return  null;  }  if  (str.startsWith(     "0x     ")  ||  str.startsWith(     "-0x     ")  ||  str.startsWith(     "0X     ")  ||  str.startsWith(     "-0X     "))  {  int  hexDigits  =  str.length()  -  2;  //  drop  0x      [BUGGY]  if(hexDigits  <  0  ||  str.startsWith( ".- "))  {  return  null;  }  [BUGGY]      hexDigits--;  }  if  (hexDigits  >  8)  {  //  too  many  for  an  int  return  createLong(str);  }  return  createInteger(str);  }  char  lastChar  =  str.charAt(str.length()  -  1);  String  mant;  String  dec;  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  	projects/Lang7/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	457	458	1	replace	if(hexDigits  <  0  ||  str.startsWith( ".- "))  {  return  null;  }	  if(hexDigits    <    0    ||    str.startsWith(   "-   "))    {    return    null;    }    	non-compiled	[CE]  ')'  expected	29	None	replace
204	[BUG]  [BUGGY]  hexDigits  =  str.charAt(0,  2);  [CE]  ')'  expected  [FE]                AssertionError      [CONTEXT]      return  null;  }  if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(     "A  blank  string  is  not  a  valid  number     ");  }  if  (str.startsWith(     "--     "))  {  return  null;  }  if  (str.startsWith(     "0x     ")  ||  str.startsWith(     "-0x     ")  ||  str.startsWith(     "0X     ")  ||  str.startsWith(     "-0X     "))  {  int  hexDigits  =  str.length()  -  2;  //  drop  0x      [BUGGY]  hexDigits  =  str.charAt(0,  2);  [BUGGY]      if  (str.startsWith(     "-     "))  {  //  drop  -    hexDigits--;  hexDigits--;  }  if  (hexDigits  >  8)  {  //  too  many  for  an  int  return  createLong(str);  }  return  createInteger(str);  }  char  lastChar  =  str.charAt(str.length()  -  1);  String  mant;  String  dec;  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  	projects/Lang7/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	457	458	1	replace	hexDigits  =  str.charAt(0,  2);	  hexDigits    =    str.charAt(0);    	non-compiled	[CE]  ')'  expected	18	None	replace
205	[BUG]  [BUGGY]  hexDigits  =  str.charAt(0,  3);  [CE]  ')'  expected  [FE]                  AssertionError      [CONTEXT]      return  null;  }  if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(     "A  blank  string  is  not  a  valid  number     ");  }  if  (str.startsWith(     "--     "))  {  return  null;  }  if  (str.startsWith(     "0x     ")  ||  str.startsWith(     "-0x     ")  ||  str.startsWith(     "0X     ")  ||  str.startsWith(     "-0X     "))  {  int  hexDigits  =  str.length()  -  2;  //  drop  0x      [BUGGY]  hexDigits  =  str.charAt(0,  3);  [BUGGY]      if  (str.startsWith(     "-     "))  {  //  drop  -    hexDigits--;  hexDigits--;  }  if  (hexDigits  >  8)  {  //  too  many  for  an  int  return  createLong(str);  }  return  createInteger(str);  }  char  lastChar  =  str.charAt(str.length()  -  1);  String  mant;  String  dec;  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  	projects/Lang7/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	457	458	1	replace	hexDigits  =  str.charAt(0,  3);	  hexDigits    =    str.charAt(0);    	non-compiled	[CE]  ')'  expected	18	None	replace
206	[BUG]  [BUGGY]  if(allZeros)  {  if(hexDigits  >  0)  {  int  hexDigits  =  str.length();  if(hexDigits  <  0)  {  return  createInteger(str);  }  [CE]  ')'  expected  [FE]                AssertionError      [CONTEXT]      return  null;  }  if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(     "A  blank  string  is  not  a  valid  number     ");  }  if  (str.startsWith(     "--     "))  {  return  null;  }  if  (str.startsWith(     "0x     ")  ||  str.startsWith(     "-0x     ")  ||  str.startsWith(     "0X     ")  ||  str.startsWith(     "-0X     "))  {  int  hexDigits  =  str.length()  -  2;  //  drop  0x      [BUGGY]  if(allZeros)  {  if(hexDigits  >  0)  {  int  hexDigits  =  str.length();  if(hexDigits  <  0)  {  return  createInteger(str);  }  [BUGGY]      if  (str.startsWith(     "-     "))  {  //  drop  -    hexDigits--;  hexDigits--;  }  if  (hexDigits  >  8)  {  //  too  many  for  an  int  return  createLong(str);  }  return  createInteger(str);  }  char  lastChar  =  str.charAt(str.length()  -  1);  String  mant;  String  dec;  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  	projects/Lang7/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	457	458	1	replace	if(allZeros)  {  if(hexDigits  >  0)  {  int  hexDigits  =  str.length();  if(hexDigits  <  0)  {  return  createInteger(str);  }	  if(dec    ==    null)    {    if(hexDigits    >    0)    {    int    hexDigits    =    str.length();    if(hexDigits    <    0)    {    return    createInteger(str);    }    	non-compiled	[CE]  ')'  expected	21	None	replace
207	[BUG]  [BUGGY]  if(allZeros)  {  if(hexDigits  >  0)  {  int  hexDigits  =  str.length();  if(hexDigits  <  0)  {  return  createLong(str);  }  [CE]  ')'  expected  [FE]              AssertionError      [CONTEXT]      return  null;  }  if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(     "A  blank  string  is  not  a  valid  number     ");  }  if  (str.startsWith(     "--     "))  {  return  null;  }  if  (str.startsWith(     "0x     ")  ||  str.startsWith(     "-0x     ")  ||  str.startsWith(     "0X     ")  ||  str.startsWith(     "-0X     "))  {  int  hexDigits  =  str.length()  -  2;  //  drop  0x      [BUGGY]  if(allZeros)  {  if(hexDigits  >  0)  {  int  hexDigits  =  str.length();  if(hexDigits  <  0)  {  return  createLong(str);  }  [BUGGY]      if  (str.startsWith(     "-     "))  {  //  drop  -    hexDigits--;  hexDigits--;  }  if  (hexDigits  >  8)  {  //  too  many  for  an  int  return  createLong(str);  }  return  createInteger(str);  }  char  lastChar  =  str.charAt(str.length()  -  1);  String  mant;  String  dec;  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  	projects/Lang7/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	457	458	1	replace	if(allZeros)  {  if(hexDigits  >  0)  {  int  hexDigits  =  str.length();  if(hexDigits  <  0)  {  return  createLong(str);  }	  if(dec    ==    null)    {    if(hexDigits    >    0)    {    int    hexDigits    =    str.length();    if(hexDigits    <    0)    {    return    createLong(str);    }    	non-compiled	[CE]  ')'  expected	20	None	replace
208	[BUG]  [BUGGY]  Integer  hexDigits  =  str.lastIndexOf('0',  dec);  [CE]  ')'  expected  [FE]                      AssertionError      [CONTEXT]      return  null;  }  if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(     "A  blank  string  is  not  a  valid  number     ");  }  if  (str.startsWith(     "--     "))  {  return  null;  }  if  (str.startsWith(     "0x     ")  ||  str.startsWith(     "-0x     ")  ||  str.startsWith(     "0X     ")  ||  str.startsWith(     "-0X     "))  {  int  hexDigits  =  str.length()  -  2;  //  drop  0x      [BUGGY]  Integer  hexDigits  =  str.lastIndexOf('0',  dec);  [BUGGY]      if  (str.startsWith(     "-     "))  {  //  drop  -    hexDigits--;  hexDigits--;  }  if  (hexDigits  >  8)  {  //  too  many  for  an  int  return  createLong(str);  }  return  createInteger(str);  }  char  lastChar  =  str.charAt(str.length()  -  1);  String  mant;  String  dec;  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  	projects/Lang7/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	457	458	1	replace	Integer  hexDigits  =  str.lastIndexOf('0',  dec);	  Integer    hexDigits    =    str.lastIndexOf('0');    	non-compiled	[CE]  ')'  expected	39	None	replace
209	[BUG]  [BUGGY]  Integer  hexDigits  =  str.lastIndexOf('0',  3);  [CE]  ')'  expected  [FE]                        AssertionError      [CONTEXT]      return  null;  }  if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(     "A  blank  string  is  not  a  valid  number     ");  }  if  (str.startsWith(     "--     "))  {  return  null;  }  if  (str.startsWith(     "0x     ")  ||  str.startsWith(     "-0x     ")  ||  str.startsWith(     "0X     ")  ||  str.startsWith(     "-0X     "))  {  int  hexDigits  =  str.length()  -  2;  //  drop  0x      [BUGGY]  Integer  hexDigits  =  str.lastIndexOf('0',  3);  [BUGGY]      if  (str.startsWith(     "-     "))  {  //  drop  -    hexDigits--;  hexDigits--;  }  if  (hexDigits  >  8)  {  //  too  many  for  an  int  return  createLong(str);  }  return  createInteger(str);  }  char  lastChar  =  str.charAt(str.length()  -  1);  String  mant;  String  dec;  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  	projects/Lang7/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	457	458	1	replace	Integer  hexDigits  =  str.lastIndexOf('0',  3);	  Integer    hexDigits    =    str.lastIndexOf('0');    	non-compiled	[CE]  ')'  expected	39	None	replace
210	[BUG]  [BUGGY]  Integer  hexDigits  =  str.lastIndexOf('.');  [CE]  ')'  expected  [FE]                    AssertionError      [CONTEXT]      return  null;  }  if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(     "A  blank  string  is  not  a  valid  number     ");  }  if  (str.startsWith(     "--     "))  {  return  null;  }  if  (str.startsWith(     "0x     ")  ||  str.startsWith(     "-0x     ")  ||  str.startsWith(     "0X     ")  ||  str.startsWith(     "-0X     "))  {  int  hexDigits  =  str.length()  -  2;  //  drop  0x      [BUGGY]  Integer  hexDigits  =  str.lastIndexOf('.');  [BUGGY]      if  (str.startsWith(     "-     "))  {  //  drop  -    hexDigits--;  hexDigits--;  }  if  (hexDigits  >  8)  {  //  too  many  for  an  int  return  createLong(str);  }  return  createInteger(str);  }  char  lastChar  =  str.charAt(str.length()  -  1);  String  mant;  String  dec;  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  	projects/Lang7/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	457	458	1	replace	Integer  hexDigits  =  str.lastIndexOf('.');	  Integer    hexDigits    =    str.lastIndexOf(   "0x   ");    	non-compiled	[CE]  ')'  expected	38	None	replace
211	[BUG]  [BUGGY]  if(hexDigits  >  0)  {  if(str.startsWith( "- "))  {  return  createLong(str);  }  [CE]  ')'  expected  [FE]              AssertionError      [CONTEXT]      return  null;  }  if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(     "A  blank  string  is  not  a  valid  number     ");  }  if  (str.startsWith(     "--     "))  {  return  null;  }  if  (str.startsWith(     "0x     ")  ||  str.startsWith(     "-0x     ")  ||  str.startsWith(     "0X     ")  ||  str.startsWith(     "-0X     "))  {  int  hexDigits  =  str.length()  -  2;  //  drop  0x      [BUGGY]  if(hexDigits  >  0)  {  if(str.startsWith( "- "))  {  return  createLong(str);  }  [BUGGY]      hexDigits--;  }  if  (hexDigits  >  8)  {  //  too  many  for  an  int  return  createLong(str);  }  return  createInteger(str);  }  char  lastChar  =  str.charAt(str.length()  -  1);  String  mant;  String  dec;  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  	projects/Lang7/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	457	458	1	replace	if(hexDigits  >  0)  {  if(str.startsWith( "- "))  {  return  createLong(str);  }	  if(hexDigits    >    8)    {    if    (str.startsWith(   "-       "))    {    //    drop    -    hexDigits--;    }    	non-compiled	[CE]  ')'  expected	64	None	replace
212	[BUG]  [BUGGY]  if(dec  ==  null)  {  int  hexDigits  =  str.length();  if(hexDigits  <  0)  {  return  createInteger(str);  }  [CE]  ')'  expected  [FE]              AssertionError      [CONTEXT]      return  null;  }  if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(     "A  blank  string  is  not  a  valid  number     ");  }  if  (str.startsWith(     "--     "))  {  return  null;  }  if  (str.startsWith(     "0x     ")  ||  str.startsWith(     "-0x     ")  ||  str.startsWith(     "0X     ")  ||  str.startsWith(     "-0X     "))  {  int  hexDigits  =  str.length()  -  2;  //  drop  0x      [BUGGY]  if(dec  ==  null)  {  int  hexDigits  =  str.length();  if(hexDigits  <  0)  {  return  createInteger(str);  }  [BUGGY]      if  (str.startsWith(     "-     "))  {  //  drop  -    hexDigits--;  hexDigits--;  }  if  (hexDigits  >  8)  {  //  too  many  for  an  int  return  createLong(str);  }  return  createInteger(str);  }  char  lastChar  =  str.charAt(str.length()  -  1);  String  mant;  String  dec;  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  	projects/Lang7/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	457	458	1	replace	if(dec  ==  null)  {  int  hexDigits  =  str.length();  if(hexDigits  <  0)  {  return  createInteger(str);  }	  if(hexDigits    <    0)    {    int    hexDigits    =    str.length()    -    2;    if(hexDigits    <    0)    {    return    createInteger(str);    }    	non-compiled	[CE]  ')'  expected	69	None	replace
213	[BUG]  [BUGGY]  if(hexDigits  <  0  ||  str.startsWith( "- "))  {  return  createBigInteger(str);  }  [CE]  ')'  expected  [FE]                AssertionError      [CONTEXT]      return  null;  }  if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(     "A  blank  string  is  not  a  valid  number     ");  }  if  (str.startsWith(     "--     "))  {  return  null;  }  if  (str.startsWith(     "0x     ")  ||  str.startsWith(     "-0x     ")  ||  str.startsWith(     "0X     ")  ||  str.startsWith(     "-0X     "))  {  int  hexDigits  =  str.length()  -  2;  //  drop  0x      [BUGGY]  if(hexDigits  <  0  ||  str.startsWith( "- "))  {  return  createBigInteger(str);  }  [BUGGY]      hexDigits--;  }  if  (hexDigits  >  8)  {  //  too  many  for  an  int  return  createLong(str);  }  return  createInteger(str);  }  char  lastChar  =  str.charAt(str.length()  -  1);  String  mant;  String  dec;  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  	projects/Lang7/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	457	458	1	replace	if(hexDigits  <  0  ||  str.startsWith( "- "))  {  return  createBigInteger(str);  }	  if(hexDigits    <    0    ||    str.startsWith(   "-   "))    {    return    createLong(str);    	non-compiled	[CE]  ')'  expected	81	None	replace
214	[BUG]  [BUGGY]  if(dec  ==  null)  {  int  hexDigits  =  str.length();  if(hexDigits  <  0)  {  return  createLong(str);  }  [CE]  ')'  expected  [FE]              AssertionError      [CONTEXT]      return  null;  }  if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(     "A  blank  string  is  not  a  valid  number     ");  }  if  (str.startsWith(     "--     "))  {  return  null;  }  if  (str.startsWith(     "0x     ")  ||  str.startsWith(     "-0x     ")  ||  str.startsWith(     "0X     ")  ||  str.startsWith(     "-0X     "))  {  int  hexDigits  =  str.length()  -  2;  //  drop  0x      [BUGGY]  if(dec  ==  null)  {  int  hexDigits  =  str.length();  if(hexDigits  <  0)  {  return  createLong(str);  }  [BUGGY]      if  (str.startsWith(     "-     "))  {  //  drop  -    hexDigits--;  hexDigits--;  }  if  (hexDigits  >  8)  {  //  too  many  for  an  int  return  createLong(str);  }  return  createInteger(str);  }  char  lastChar  =  str.charAt(str.length()  -  1);  String  mant;  String  dec;  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  	projects/Lang7/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	457	458	1	replace	if(dec  ==  null)  {  int  hexDigits  =  str.length();  if(hexDigits  <  0)  {  return  createLong(str);  }	  if(hexDigits    <    0)    {    int    hexDigits    =    str.length();    if(hexDigits    <    0)    {    return    createLong(str);    }    	non-compiled	[CE]  ')'  expected	70	None	replace
215	[BUG]  [BUGGY]  if(hexDigits  <  0  ||  str.startsWith( "-0 "))  {  return  createInteger(str);  }  [CE]  ')'  expected  [FE]                  AssertionError      [CONTEXT]      return  null;  }  if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(     "A  blank  string  is  not  a  valid  number     ");  }  if  (str.startsWith(     "--     "))  {  return  null;  }  if  (str.startsWith(     "0x     ")  ||  str.startsWith(     "-0x     ")  ||  str.startsWith(     "0X     ")  ||  str.startsWith(     "-0X     "))  {  int  hexDigits  =  str.length()  -  2;  //  drop  0x      [BUGGY]  if(hexDigits  <  0  ||  str.startsWith( "-0 "))  {  return  createInteger(str);  }  [BUGGY]      hexDigits--;  }  if  (hexDigits  >  8)  {  //  too  many  for  an  int  return  createLong(str);  }  return  createInteger(str);  }  char  lastChar  =  str.charAt(str.length()  -  1);  String  mant;  String  dec;  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  	projects/Lang7/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	457	458	1	replace	if(hexDigits  <  0  ||  str.startsWith( "-0 "))  {  return  createInteger(str);  }	  if(hexDigits    <    0    ||    str.startsWith(   "-0   "))    {    //    drop    0x-hexDigits--;    }    	non-compiled	[CE]  ')'  expected	55	None	replace
216	[BUG]  [BUGGY]  if(hexDigits  <  8)  {  int  hexDigits  =  str.length();  if(hexDigits  <  0)  {  return  createLong(str);  }  [CE]  ')'  expected  [FE]                AssertionError      [CONTEXT]      return  null;  }  if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(     "A  blank  string  is  not  a  valid  number     ");  }  if  (str.startsWith(     "--     "))  {  return  null;  }  if  (str.startsWith(     "0x     ")  ||  str.startsWith(     "-0x     ")  ||  str.startsWith(     "0X     ")  ||  str.startsWith(     "-0X     "))  {  int  hexDigits  =  str.length()  -  2;  //  drop  0x      [BUGGY]  if(hexDigits  <  8)  {  int  hexDigits  =  str.length();  if(hexDigits  <  0)  {  return  createLong(str);  }  [BUGGY]      if  (str.startsWith(     "-     "))  {  //  drop  -    hexDigits--;  hexDigits--;  }  if  (hexDigits  >  8)  {  //  too  many  for  an  int  return  createLong(str);  }  return  createInteger(str);  }  char  lastChar  =  str.charAt(str.length()  -  1);  String  mant;  String  dec;  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  	projects/Lang7/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	457	458	1	replace	if(hexDigits  <  8)  {  int  hexDigits  =  str.length();  if(hexDigits  <  0)  {  return  createLong(str);  }	  if(hexDigits    <    0)    {    int    hexDigits    =    str.length()    -    2;    if(hexDigits    <    0)    {    return    createLong(str);    }    	non-compiled	[CE]  ')'  expected	77	None	replace
217	[BUG]  [BUGGY]  if(hexDigits  <  0  ||  str.startsWith( ".- "))  {  return  createInteger(str);  }  [CE]  ')'  expected  [FE]                AssertionError      [CONTEXT]      return  null;  }  if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(     "A  blank  string  is  not  a  valid  number     ");  }  if  (str.startsWith(     "--     "))  {  return  null;  }  if  (str.startsWith(     "0x     ")  ||  str.startsWith(     "-0x     ")  ||  str.startsWith(     "0X     ")  ||  str.startsWith(     "-0X     "))  {  int  hexDigits  =  str.length()  -  2;  //  drop  0x      [BUGGY]  if(hexDigits  <  0  ||  str.startsWith( ".- "))  {  return  createInteger(str);  }  [BUGGY]      hexDigits--;  }  if  (hexDigits  >  8)  {  //  too  many  for  an  int  return  createLong(str);  }  return  createInteger(str);  }  char  lastChar  =  str.charAt(str.length()  -  1);  String  mant;  String  dec;  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  	projects/Lang7/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	457	458	1	replace	if(hexDigits  <  0  ||  str.startsWith( ".- "))  {  return  createInteger(str);  }	  if(hexDigits    <    0    ||    str.startsWith(   "-   "))    {    return    createInteger(str);    }    	non-compiled	[CE]  ')'  expected	85	None	replace
218	[BUG]  [BUGGY]  if(hexDigits  <  0  ||  str.startsWith( "- "))  {  int  hexDigits  =  str.length();  if(hexDigits  <  0)  {  return  createLong(str);  }  [CE]  ')'  expected  [FE]                  AssertionError      [CONTEXT]      return  null;  }  if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(     "A  blank  string  is  not  a  valid  number     ");  }  if  (str.startsWith(     "--     "))  {  return  null;  }  if  (str.startsWith(     "0x     ")  ||  str.startsWith(     "-0x     ")  ||  str.startsWith(     "0X     ")  ||  str.startsWith(     "-0X     "))  {  int  hexDigits  =  str.length()  -  2;  //  drop  0x      [BUGGY]  if(hexDigits  <  0  ||  str.startsWith( "- "))  {  int  hexDigits  =  str.length();  if(hexDigits  <  0)  {  return  createLong(str);  }  [BUGGY]      if  (str.startsWith(     "-     "))  {  //  drop  -    hexDigits--;  hexDigits--;  }  if  (hexDigits  >  8)  {  //  too  many  for  an  int  return  createLong(str);  }  return  createInteger(str);  }  char  lastChar  =  str.charAt(str.length()  -  1);  String  mant;  String  dec;  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  	projects/Lang7/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	457	458	1	replace	if(hexDigits  <  0  ||  str.startsWith( "- "))  {  int  hexDigits  =  str.length();  if(hexDigits  <  0)  {  return  createLong(str);  }	  if(str.startsWith(   "-       "))    {    int    hexDigits    =    str.length()    -    2;    if(hexDigits    <    0)    {    return    createLong(str);    }    	non-compiled	[CE]  ')'  expected	22	None	replace
