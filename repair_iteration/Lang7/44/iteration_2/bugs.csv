bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  String  str  =  str.substring(0,  str.length());  [CE]  [FE]            AssertionError    [CONTEXT]    public  static  Number  createNumber(String  str)  throws  NumberFormatException  {    [BUGGY]  String  str  =  str.substring(0,  str.length());  [BUGGY]    if  (str  ==  null)  {  return  null;  }  if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(   "A  blank  string  is  not  a  valid  number   ");  }  if  (str.startsWith(   "--   "))  {  return  null;  }  if  (str.startsWith(   "0x   ")  ||  str.startsWith(   "-0x   ")  ||  str.startsWith(   "0X   ")  ||  str.startsWith(   "-0X   "))  {  int  hexDigits  =  str.length()  -  2;  //  drop  0x  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  	projects/Lang7/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.5773502691896258	446	446	1	replace	String  str  =  str.substring(0,  str.length());	      String    str    =    str.substring(0,    str.length()    -    2);    	non-compiled	[CE]  	12	None	replace
2	[BUG]  [BUGGY]  String  str  =  str.substring(0,  str.length();  [CE]  [FE]              AssertionError    [CONTEXT]    public  static  Number  createNumber(String  str)  throws  NumberFormatException  {    [BUGGY]  String  str  =  str.substring(0,  str.length();  [BUGGY]    if  (str  ==  null)  {  return  null;  }  if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(   "A  blank  string  is  not  a  valid  number   ");  }  if  (str.startsWith(   "--   "))  {  return  null;  }  if  (str.startsWith(   "0x   ")  ||  str.startsWith(   "-0x   ")  ||  str.startsWith(   "0X   ")  ||  str.startsWith(   "-0X   "))  {  int  hexDigits  =  str.length()  -  2;  //  drop  0x  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  	projects/Lang7/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.5773502691896258	446	446	1	replace	String  str  =  str.substring(0,  str.length();	      String    str    =    str.substring(0,    str.length()    -    2);    	non-compiled	[CE]  	12	None	replace
3	[BUG]  [BUGGY]  Number  str  =  getNumber(str.toUpperCase());  [CE]  [FE]          AssertionError    [CONTEXT]    public  static  Number  createNumber(String  str)  throws  NumberFormatException  {    [BUGGY]  Number  str  =  getNumber(str.toUpperCase());  [BUGGY]    if  (str  ==  null)  {  return  null;  }  if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(   "A  blank  string  is  not  a  valid  number   ");  }  if  (str.startsWith(   "--   "))  {  return  null;  }  if  (str.startsWith(   "0x   ")  ||  str.startsWith(   "-0x   ")  ||  str.startsWith(   "0X   ")  ||  str.startsWith(   "-0X   "))  {  int  hexDigits  =  str.length()  -  2;  //  drop  0x  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  	projects/Lang7/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.5773502691896258	446	446	1	replace	Number  str  =  getNumber(str.toUpperCase());	      Number    str    =    getNumber(str);    	non-compiled	[CE]  	4	None	replace
4	[BUG]  [BUGGY]  Number  str  =  getNumber(str.substring(0,  str.length()  -  1));  [CE]  [FE]            AssertionError    [CONTEXT]    public  static  Number  createNumber(String  str)  throws  NumberFormatException  {    [BUGGY]  Number  str  =  getNumber(str.substring(0,  str.length()  -  1));  [BUGGY]    if  (str  ==  null)  {  return  null;  }  if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(   "A  blank  string  is  not  a  valid  number   ");  }  if  (str.startsWith(   "--   "))  {  return  null;  }  if  (str.startsWith(   "0x   ")  ||  str.startsWith(   "-0x   ")  ||  str.startsWith(   "0X   ")  ||  str.startsWith(   "-0X   "))  {  int  hexDigits  =  str.length()  -  2;  //  drop  0x  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  	projects/Lang7/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.5773502691896258	446	446	1	replace	Number  str  =  getNumber(str.substring(0,  str.length()  -  1));	      Number    str    =    getNumber(str);    	non-compiled	[CE]  	4	None	replace
5	[BUG]  [BUGGY]  Number  str  =  getNumber(str,  0);  [CE]  [FE]              AssertionError    [CONTEXT]    public  static  Number  createNumber(String  str)  throws  NumberFormatException  {    [BUGGY]  Number  str  =  getNumber(str,  0);  [BUGGY]    if  (str  ==  null)  {  return  null;  }  if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(   "A  blank  string  is  not  a  valid  number   ");  }  if  (str.startsWith(   "--   "))  {  return  null;  }  if  (str.startsWith(   "0x   ")  ||  str.startsWith(   "-0x   ")  ||  str.startsWith(   "0X   ")  ||  str.startsWith(   "-0X   "))  {  int  hexDigits  =  str.length()  -  2;  //  drop  0x  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  	projects/Lang7/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.5773502691896258	446	446	1	replace	Number  str  =  getNumber(str,  0);	      Number    str    =    getNumber(str);    	non-compiled	[CE]  	4	None	replace
6	[BUG]  [BUGGY]  if(str!=  null  ||  str.length()  ==  0)  {  [CE]  ')'  expected  [FE]        AssertionError    [CONTEXT]    public  static  Number  createNumber(String  str)  throws  NumberFormatException  {    [BUGGY]  if(str!=  null  ||  str.length()  ==  0)  {  [BUGGY]    return  null;  }  if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(   "A  blank  string  is  not  a  valid  number   ");  }  if  (str.startsWith(   "--   "))  {  return  null;  }  if  (str.startsWith(   "0x   ")  ||  str.startsWith(   "-0x   ")  ||  str.startsWith(   "0X   ")  ||  str.startsWith(   "-0X   "))  {  int  hexDigits  =  str.length()  -  2;  //  drop  0x  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  	projects/Lang7/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.5773502691896258	446	446	1	replace	if(str!=  null  ||  str.length()  ==  0)  {	  if(str    ==    null    ||    str.length()    ==    0)    {    	non-compiled	[CE]  ')'  expected	1	None	replace
7	[BUG]  [BUGGY]  if(str  ==  null  ||  str.startsWith( "0x "))  {  [CE]  ')'  expected  [FE]          AssertionError    [CONTEXT]    public  static  Number  createNumber(String  str)  throws  NumberFormatException  {    [BUGGY]  if(str  ==  null  ||  str.startsWith( "0x "))  {  [BUGGY]    return  null;  }  if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(   "A  blank  string  is  not  a  valid  number   ");  }  if  (str.startsWith(   "--   "))  {  return  null;  }  if  (str.startsWith(   "0x   ")  ||  str.startsWith(   "-0x   ")  ||  str.startsWith(   "0X   ")  ||  str.startsWith(   "-0X   "))  {  int  hexDigits  =  str.length()  -  2;  //  drop  0x  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  	projects/Lang7/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.5773502691896258	446	446	1	replace	if(str  ==  null  ||  str.startsWith( "0x "))  {	  if(str    ==    null    ||    str.startsWith(   "0   "))    {    	non-compiled	[CE]  ')'  expected	14	None	replace
8	[BUG]  [BUGGY]  if(str  ==  null  ||  str.startsWith( ".0 "))  {  [CE]  ')'  expected  [FE]            AssertionError    [CONTEXT]    public  static  Number  createNumber(String  str)  throws  NumberFormatException  {    [BUGGY]  if(str  ==  null  ||  str.startsWith( ".0 "))  {  [BUGGY]    return  null;  }  if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(   "A  blank  string  is  not  a  valid  number   ");  }  if  (str.startsWith(   "--   "))  {  return  null;  }  if  (str.startsWith(   "0x   ")  ||  str.startsWith(   "-0x   ")  ||  str.startsWith(   "0X   ")  ||  str.startsWith(   "-0X   "))  {  int  hexDigits  =  str.length()  -  2;  //  drop  0x  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  	projects/Lang7/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.5773502691896258	446	446	1	replace	if(str  ==  null  ||  str.startsWith( ".0 "))  {	  if(str    ==    null    ||    str.startsWith(   "0   "))    {    	non-compiled	[CE]  ')'  expected	14	None	replace
9	[BUG]  [BUGGY]  if(str!=  null  ||  str.startsWith( "0 "))  {  [CE]  ')'  expected  [FE]              AssertionError    [CONTEXT]    public  static  Number  createNumber(String  str)  throws  NumberFormatException  {    [BUGGY]  if(str!=  null  ||  str.startsWith( "0 "))  {  [BUGGY]    return  null;  }  if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(   "A  blank  string  is  not  a  valid  number   ");  }  if  (str.startsWith(   "--   "))  {  return  null;  }  if  (str.startsWith(   "0x   ")  ||  str.startsWith(   "-0x   ")  ||  str.startsWith(   "0X   ")  ||  str.startsWith(   "-0X   "))  {  int  hexDigits  =  str.length()  -  2;  //  drop  0x  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  	projects/Lang7/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.5773502691896258	446	446	1	replace	if(str!=  null  ||  str.startsWith( "0 "))  {	  if(str    ==    null    ||    str.startsWith(   "0   "))    {    	non-compiled	[CE]  ')'  expected	14	None	replace
10	[BUG]  [BUGGY]  Number  str  =  createNumber(str,  1);  [CE]  [FE]          AssertionError    [CONTEXT]    public  static  Number  createNumber(String  str)  throws  NumberFormatException  {    [BUGGY]  Number  str  =  createNumber(str,  1);  [BUGGY]    if  (str  ==  null)  {  return  null;  }  if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(   "A  blank  string  is  not  a  valid  number   ");  }  if  (str.startsWith(   "--   "))  {  return  null;  }  if  (str.startsWith(   "0x   ")  ||  str.startsWith(   "-0x   ")  ||  str.startsWith(   "0X   ")  ||  str.startsWith(   "-0X   "))  {  int  hexDigits  =  str.length()  -  2;  //  drop  0x  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  	projects/Lang7/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.5773502691896258	446	446	1	replace	Number  str  =  createNumber(str,  1);	      Number    str    =    createNumber(str,    0);    	non-compiled	[CE]  	9	None	replace
11	[BUG]  [BUGGY]  Number  str  =  createNumber(str,  0L);  [CE]  [FE]            AssertionError    [CONTEXT]    public  static  Number  createNumber(String  str)  throws  NumberFormatException  {    [BUGGY]  Number  str  =  createNumber(str,  0L);  [BUGGY]    if  (str  ==  null)  {  return  null;  }  if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(   "A  blank  string  is  not  a  valid  number   ");  }  if  (str.startsWith(   "--   "))  {  return  null;  }  if  (str.startsWith(   "0x   ")  ||  str.startsWith(   "-0x   ")  ||  str.startsWith(   "0X   ")  ||  str.startsWith(   "-0X   "))  {  int  hexDigits  =  str.length()  -  2;  //  drop  0x  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  	projects/Lang7/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.5773502691896258	446	446	1	replace	Number  str  =  createNumber(str,  0L);	      Number    str    =    createNumber(str,    0);    	non-compiled	[CE]  	9	None	replace
12	[BUG]  [BUGGY]  Number  str  =  createNumber(str,  -1);  [CE]  [FE]              AssertionError    [CONTEXT]    public  static  Number  createNumber(String  str)  throws  NumberFormatException  {    [BUGGY]  Number  str  =  createNumber(str,  -1);  [BUGGY]    if  (str  ==  null)  {  return  null;  }  if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(   "A  blank  string  is  not  a  valid  number   ");  }  if  (str.startsWith(   "--   "))  {  return  null;  }  if  (str.startsWith(   "0x   ")  ||  str.startsWith(   "-0x   ")  ||  str.startsWith(   "0X   ")  ||  str.startsWith(   "-0X   "))  {  int  hexDigits  =  str.length()  -  2;  //  drop  0x  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  	projects/Lang7/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.5773502691896258	446	446	1	replace	Number  str  =  createNumber(str,  -1);	      Number    str    =    createNumber(str,    0);    	non-compiled	[CE]  	9	None	replace
13	[BUG]  [BUGGY]  Number  str  =  getNumberValue();  [CE]  [FE]              AssertionError    [CONTEXT]    public  static  Number  createNumber(String  str)  throws  NumberFormatException  {    [BUGGY]  Number  str  =  getNumberValue();  [BUGGY]    if  (str  ==  null)  {  return  null;  }  if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(   "A  blank  string  is  not  a  valid  number   ");  }  if  (str.startsWith(   "--   "))  {  return  null;  }  if  (str.startsWith(   "0x   ")  ||  str.startsWith(   "-0x   ")  ||  str.startsWith(   "0X   ")  ||  str.startsWith(   "-0X   "))  {  int  hexDigits  =  str.length()  -  2;  //  drop  0x  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  	projects/Lang7/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.5773502691896258	446	446	1	replace	Number  str  =  getNumberValue();	      Number    str    =    getNullValue();    	non-compiled	[CE]  	6	None	replace
14	[BUG]  [BUGGY]  Number  str  =  getLongValue();  [CE]  [FE]                AssertionError    [CONTEXT]    public  static  Number  createNumber(String  str)  throws  NumberFormatException  {    [BUGGY]  Number  str  =  getLongValue();  [BUGGY]    if  (str  ==  null)  {  return  null;  }  if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(   "A  blank  string  is  not  a  valid  number   ");  }  if  (str.startsWith(   "--   "))  {  return  null;  }  if  (str.startsWith(   "0x   ")  ||  str.startsWith(   "-0x   ")  ||  str.startsWith(   "0X   ")  ||  str.startsWith(   "-0X   "))  {  int  hexDigits  =  str.length()  -  2;  //  drop  0x  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  	projects/Lang7/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.5773502691896258	446	446	1	replace	Number  str  =  getLongValue();	      Number    str    =    getNullValue();    	non-compiled	[CE]  	6	None	replace
15	[BUG]  [BUGGY]  Integer  str  =  createInteger(str.length());  [CE]  [FE]        AssertionError    [CONTEXT]    public  static  Number  createNumber(String  str)  throws  NumberFormatException  {    [BUGGY]  Integer  str  =  createInteger(str.length());  [BUGGY]    if  (str  ==  null)  {  return  null;  }  if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(   "A  blank  string  is  not  a  valid  number   ");  }  if  (str.startsWith(   "--   "))  {  return  null;  }  if  (str.startsWith(   "0x   ")  ||  str.startsWith(   "-0x   ")  ||  str.startsWith(   "0X   ")  ||  str.startsWith(   "-0X   "))  {  int  hexDigits  =  str.length()  -  2;  //  drop  0x  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  	projects/Lang7/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.5773502691896258	446	446	1	replace	Integer  str  =  createInteger(str.length());	      Integer    str    =    createInteger(str);    	non-compiled	[CE]  	10	None	replace
16	[BUG]  [BUGGY]  Integer  str  =  createInteger(0);  [CE]  [FE]          AssertionError    [CONTEXT]    public  static  Number  createNumber(String  str)  throws  NumberFormatException  {    [BUGGY]  Integer  str  =  createInteger(0);  [BUGGY]    if  (str  ==  null)  {  return  null;  }  if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(   "A  blank  string  is  not  a  valid  number   ");  }  if  (str.startsWith(   "--   "))  {  return  null;  }  if  (str.startsWith(   "0x   ")  ||  str.startsWith(   "-0x   ")  ||  str.startsWith(   "0X   ")  ||  str.startsWith(   "-0X   "))  {  int  hexDigits  =  str.length()  -  2;  //  drop  0x  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  	projects/Lang7/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.5773502691896258	446	446	1	replace	Integer  str  =  createInteger(0);	      Integer    str    =    createInteger(str);    	non-compiled	[CE]  	10	None	replace
17	[BUG]  [BUGGY]  Integer  str  =  createInteger(str,  0);  [CE]  [FE]            AssertionError    [CONTEXT]    public  static  Number  createNumber(String  str)  throws  NumberFormatException  {    [BUGGY]  Integer  str  =  createInteger(str,  0);  [BUGGY]    if  (str  ==  null)  {  return  null;  }  if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(   "A  blank  string  is  not  a  valid  number   ");  }  if  (str.startsWith(   "--   "))  {  return  null;  }  if  (str.startsWith(   "0x   ")  ||  str.startsWith(   "-0x   ")  ||  str.startsWith(   "0X   ")  ||  str.startsWith(   "-0X   "))  {  int  hexDigits  =  str.length()  -  2;  //  drop  0x  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  	projects/Lang7/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.5773502691896258	446	446	1	replace	Integer  str  =  createInteger(str,  0);	      Integer    str    =    createInteger(str);    	non-compiled	[CE]  	10	None	replace
18	[BUG]  [BUGGY]  Number  str  =  getNumber(0);  [CE]  [FE]                AssertionError    [CONTEXT]    public  static  Number  createNumber(String  str)  throws  NumberFormatException  {    [BUGGY]  Number  str  =  getNumber(0);  [BUGGY]    if  (str  ==  null)  {  return  null;  }  if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(   "A  blank  string  is  not  a  valid  number   ");  }  if  (str.startsWith(   "--   "))  {  return  null;  }  if  (str.startsWith(   "0x   ")  ||  str.startsWith(   "-0x   ")  ||  str.startsWith(   "0X   ")  ||  str.startsWith(   "-0X   "))  {  int  hexDigits  =  str.length()  -  2;  //  drop  0x  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  	projects/Lang7/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.5773502691896258	446	446	1	replace	Number  str  =  getNumber(0);	      Number    str    =    getNumber();    	non-compiled	[CE]  	7	None	replace
19	[BUG]  [BUGGY]  String  str  =  str.substring(0,  str.length()  +  1);  [CE]  [FE]          AssertionError    [CONTEXT]    public  static  Number  createNumber(String  str)  throws  NumberFormatException  {    [BUGGY]  String  str  =  str.substring(0,  str.length()  +  1);  [BUGGY]    if  (str  ==  null)  {  return  null;  }  if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(   "A  blank  string  is  not  a  valid  number   ");  }  if  (str.startsWith(   "--   "))  {  return  null;  }  if  (str.startsWith(   "0x   ")  ||  str.startsWith(   "-0x   ")  ||  str.startsWith(   "0X   ")  ||  str.startsWith(   "-0X   "))  {  int  hexDigits  =  str.length()  -  2;  //  drop  0x  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  	projects/Lang7/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.5773502691896258	446	446	1	replace	String  str  =  str.substring(0,  str.length()  +  1);	      String    str    =    str.substring(0,    str.length()    -    1);    	non-compiled	[CE]  	11	None	replace
20	[BUG]  [BUGGY]  int  decPos  =  str.length();  [CE]  [FE]          AssertionError    [CONTEXT]    public  static  Number  createNumber(String  str)  throws  NumberFormatException  {    [BUGGY]  int  decPos  =  str.length();  [BUGGY]    return  null;  }  if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(   "A  blank  string  is  not  a  valid  number   ");  }  if  (str.startsWith(   "--   "))  {  return  null;  }  if  (str.startsWith(   "0x   ")  ||  str.startsWith(   "-0x   ")  ||  str.startsWith(   "0X   ")  ||  str.startsWith(   "-0X   "))  {  int  hexDigits  =  str.length()  -  2;  //  drop  0x  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  	projects/Lang7/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.5773502691896258	446	446	1	replace	int  decPos  =  str.length();	      	non-compiled	[CE]  	2	None	replace
21	[BUG]  [BUGGY]  Number  str  =  getNumberValue(str);  [CE]  [FE]            AssertionError    [CONTEXT]    public  static  Number  createNumber(String  str)  throws  NumberFormatException  {    [BUGGY]  Number  str  =  getNumberValue(str);  [BUGGY]    return  null;  }  if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(   "A  blank  string  is  not  a  valid  number   ");  }  if  (str.startsWith(   "--   "))  {  return  null;  }  if  (str.startsWith(   "0x   ")  ||  str.startsWith(   "-0x   ")  ||  str.startsWith(   "0X   ")  ||  str.startsWith(   "-0X   "))  {  int  hexDigits  =  str.length()  -  2;  //  drop  0x  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  	projects/Lang7/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.5773502691896258	446	446	1	replace	Number  str  =  getNumberValue(str);	      	non-compiled	[CE]  	2	None	replace
22	[BUG]  [BUGGY]  Number  str  =  createNumber(str,  hexDigits);  [CE]  [FE]        AssertionError    [CONTEXT]    public  static  Number  createNumber(String  str)  throws  NumberFormatException  {    [BUGGY]  Number  str  =  createNumber(str,  hexDigits);  [BUGGY]    if  (str  ==  null)  {  return  null;  }  if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(   "A  blank  string  is  not  a  valid  number   ");  }  if  (str.startsWith(   "--   "))  {  return  null;  }  if  (str.startsWith(   "0x   ")  ||  str.startsWith(   "-0x   ")  ||  str.startsWith(   "0X   ")  ||  str.startsWith(   "-0X   "))  {  int  hexDigits  =  str.length()  -  2;  //  drop  0x  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  	projects/Lang7/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.5773502691896258	446	446	1	replace	Number  str  =  createNumber(str,  hexDigits);	      Number    str    =    createNumber(str);    	non-compiled	[CE]  	3	None	replace
23	[BUG]  [BUGGY]  Number  str  =  createNumber(str.substring(0,  str.length()  -  1));  [CE]  [FE]          AssertionError    [CONTEXT]    public  static  Number  createNumber(String  str)  throws  NumberFormatException  {    [BUGGY]  Number  str  =  createNumber(str.substring(0,  str.length()  -  1));  [BUGGY]    if  (str  ==  null)  {  return  null;  }  if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(   "A  blank  string  is  not  a  valid  number   ");  }  if  (str.startsWith(   "--   "))  {  return  null;  }  if  (str.startsWith(   "0x   ")  ||  str.startsWith(   "-0x   ")  ||  str.startsWith(   "0X   ")  ||  str.startsWith(   "-0X   "))  {  int  hexDigits  =  str.length()  -  2;  //  drop  0x  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  	projects/Lang7/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.5773502691896258	446	446	1	replace	Number  str  =  createNumber(str.substring(0,  str.length()  -  1));	      Number    str    =    createNumber(str);    	non-compiled	[CE]  	3	None	replace
24	[BUG]  [BUGGY]  Number  str  =  createNumber(String.valueOf(str)+  1);  [CE]  [FE]        AssertionError    [CONTEXT]    public  static  Number  createNumber(String  str)  throws  NumberFormatException  {    [BUGGY]  Number  str  =  createNumber(String.valueOf(str)+  1);  [BUGGY]    if  (str  ==  null)  {  return  null;  }  if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(   "A  blank  string  is  not  a  valid  number   ");  }  if  (str.startsWith(   "--   "))  {  return  null;  }  if  (str.startsWith(   "0x   ")  ||  str.startsWith(   "-0x   ")  ||  str.startsWith(   "0X   ")  ||  str.startsWith(   "-0X   "))  {  int  hexDigits  =  str.length()  -  2;  //  drop  0x  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  	projects/Lang7/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.5773502691896258	446	446	1	replace	Number  str  =  createNumber(String.valueOf(str)+  1);	      Number    str    =    createNumber(String.valueOf(str));    	non-compiled	[CE]  	8	None	replace
25	[BUG]  [BUGGY]  Number  str  =  getNumber(String.valueOf(str));  [CE]  [FE]          AssertionError    [CONTEXT]    public  static  Number  createNumber(String  str)  throws  NumberFormatException  {    [BUGGY]  Number  str  =  getNumber(String.valueOf(str));  [BUGGY]    if  (str  ==  null)  {  return  null;  }  if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(   "A  blank  string  is  not  a  valid  number   ");  }  if  (str.startsWith(   "--   "))  {  return  null;  }  if  (str.startsWith(   "0x   ")  ||  str.startsWith(   "-0x   ")  ||  str.startsWith(   "0X   ")  ||  str.startsWith(   "-0X   "))  {  int  hexDigits  =  str.length()  -  2;  //  drop  0x  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  	projects/Lang7/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.5773502691896258	446	446	1	replace	Number  str  =  getNumber(String.valueOf(str));	      Number    str    =    createNumber(String.valueOf(str));    	non-compiled	[CE]  	8	None	replace
26	[BUG]  [BUGGY]  Number  str  =  createNumber(String.valueOf(str),  0);  [CE]  [FE]            AssertionError    [CONTEXT]    public  static  Number  createNumber(String  str)  throws  NumberFormatException  {    [BUGGY]  Number  str  =  createNumber(String.valueOf(str),  0);  [BUGGY]    if  (str  ==  null)  {  return  null;  }  if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(   "A  blank  string  is  not  a  valid  number   ");  }  if  (str.startsWith(   "--   "))  {  return  null;  }  if  (str.startsWith(   "0x   ")  ||  str.startsWith(   "-0x   ")  ||  str.startsWith(   "0X   ")  ||  str.startsWith(   "-0X   "))  {  int  hexDigits  =  str.length()  -  2;  //  drop  0x  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  	projects/Lang7/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.5773502691896258	446	446	1	replace	Number  str  =  createNumber(String.valueOf(str),  0);	      Number    str    =    createNumber(String.valueOf(str));    	non-compiled	[CE]  	8	None	replace
27	[BUG]  [BUGGY]  if(str  ==  null  ||  str.length()  >=  0)  {  [CE]  ')'  expected  [FE]        AssertionError    [CONTEXT]    public  static  Number  createNumber(String  str)  throws  NumberFormatException  {    [BUGGY]  if(str  ==  null  ||  str.length()  >=  0)  {  [BUGGY]    return  null;  }  if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(   "A  blank  string  is  not  a  valid  number   ");  }  if  (str.startsWith(   "--   "))  {  return  null;  }  if  (str.startsWith(   "0x   ")  ||  str.startsWith(   "-0x   ")  ||  str.startsWith(   "0X   ")  ||  str.startsWith(   "-0X   "))  {  int  hexDigits  =  str.length()  -  2;  //  drop  0x  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  	projects/Lang7/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.5773502691896258	446	446	1	replace	if(str  ==  null  ||  str.length()  >=  0)  {	  if(str    ==    null    ||    str.length()!=    0)    {    	non-compiled	[CE]  ')'  expected	13	None	replace
28	[BUG]  [BUGGY]  Number  str  =(Number)str.getValue();  [CE]  [FE]            AssertionError    [CONTEXT]    public  static  Number  createNumber(String  str)  throws  NumberFormatException  {    [BUGGY]  Number  str  =(Number)str.getValue();  [BUGGY]    if  (str  ==  null)  {  return  null;  }  if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(   "A  blank  string  is  not  a  valid  number   ");  }  if  (str.startsWith(   "--   "))  {  return  null;  }  if  (str.startsWith(   "0x   ")  ||  str.startsWith(   "-0x   ")  ||  str.startsWith(   "0X   ")  ||  str.startsWith(   "-0X   "))  {  int  hexDigits  =  str.length()  -  2;  //  drop  0x  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  	projects/Lang7/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.5773502691896258	446	446	1	replace	Number  str  =(Number)str.getValue();	      Number    str    =(Number)str.clone();    	non-compiled	[CE]  	5	None	replace
29	[BUG]  [BUGGY]  Number  str  =(Number)str.toCharArray();  [CE]  [FE]              AssertionError    [CONTEXT]    public  static  Number  createNumber(String  str)  throws  NumberFormatException  {    [BUGGY]  Number  str  =(Number)str.toCharArray();  [BUGGY]    if  (str  ==  null)  {  return  null;  }  if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(   "A  blank  string  is  not  a  valid  number   ");  }  if  (str.startsWith(   "--   "))  {  return  null;  }  if  (str.startsWith(   "0x   ")  ||  str.startsWith(   "-0x   ")  ||  str.startsWith(   "0X   ")  ||  str.startsWith(   "-0X   "))  {  int  hexDigits  =  str.length()  -  2;  //  drop  0x  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  	projects/Lang7/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.5773502691896258	446	446	1	replace	Number  str  =(Number)str.toCharArray();	      Number    str    =(Number)str.clone();    	non-compiled	[CE]  	5	None	replace
30	[BUG]  [BUGGY]  Number  str  =(Number)str.cloneTree();  [CE]  [FE]                AssertionError    [CONTEXT]    public  static  Number  createNumber(String  str)  throws  NumberFormatException  {    [BUGGY]  Number  str  =(Number)str.cloneTree();  [BUGGY]    if  (str  ==  null)  {  return  null;  }  if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(   "A  blank  string  is  not  a  valid  number   ");  }  if  (str.startsWith(   "--   "))  {  return  null;  }  if  (str.startsWith(   "0x   ")  ||  str.startsWith(   "-0x   ")  ||  str.startsWith(   "0X   ")  ||  str.startsWith(   "-0X   "))  {  int  hexDigits  =  str.length()  -  2;  //  drop  0x  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  	projects/Lang7/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.5773502691896258	446	446	1	replace	Number  str  =(Number)str.cloneTree();	      Number    str    =(Number)str.clone();    	non-compiled	[CE]  	5	None	replace
31	[BUG]  [BUGGY]  Number  str  =  createNumber(String.valueOf(hexDigits));  [CE]  [FE]        AssertionError    [CONTEXT]    public  static  Number  createNumber(String  str)  throws  NumberFormatException  {    [BUGGY]  Number  str  =  createNumber(String.valueOf(hexDigits));  [BUGGY]    if  (str  ==  null)  {  return  null;  }  if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(   "A  blank  string  is  not  a  valid  number   ");  }  if  (str.startsWith(   "--   "))  {  return  null;  }  if  (str.startsWith(   "0x   ")  ||  str.startsWith(   "-0x   ")  ||  str.startsWith(   "0X   ")  ||  str.startsWith(   "-0X   "))  {  int  hexDigits  =  str.length()  -  2;  //  drop  0x  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  	projects/Lang7/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.5773502691896258	446	446	1	replace	Number  str  =  createNumber(String.valueOf(hexDigits));	      Number    str    =    createNumber(String.valueOf(str));    	non-compiled	[CE]  	8	None	replace
32	[BUG]  [BUGGY]  Number  str  =  createNumber(String.valueOf(str),  hexDigits);  [CE]  [FE]          AssertionError    [CONTEXT]    public  static  Number  createNumber(String  str)  throws  NumberFormatException  {    [BUGGY]  Number  str  =  createNumber(String.valueOf(str),  hexDigits);  [BUGGY]    if  (str  ==  null)  {  return  null;  }  if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(   "A  blank  string  is  not  a  valid  number   ");  }  if  (str.startsWith(   "--   "))  {  return  null;  }  if  (str.startsWith(   "0x   ")  ||  str.startsWith(   "-0x   ")  ||  str.startsWith(   "0X   ")  ||  str.startsWith(   "-0X   "))  {  int  hexDigits  =  str.length()  -  2;  //  drop  0x  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  	projects/Lang7/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.5773502691896258	446	446	1	replace	Number  str  =  createNumber(String.valueOf(str),  hexDigits);	      Number    str    =    createNumber(String.valueOf(str));    	non-compiled	[CE]  	8	None	replace
33	[BUG]  [BUGGY]  String  str  =  str.substring(0,  str.length()  +  2);  [CE]  [FE]            AssertionError    [CONTEXT]    public  static  Number  createNumber(String  str)  throws  NumberFormatException  {    [BUGGY]  String  str  =  str.substring(0,  str.length()  +  2);  [BUGGY]    if  (str  ==  null)  {  return  null;  }  if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(   "A  blank  string  is  not  a  valid  number   ");  }  if  (str.startsWith(   "--   "))  {  return  null;  }  if  (str.startsWith(   "0x   ")  ||  str.startsWith(   "-0x   ")  ||  str.startsWith(   "0X   ")  ||  str.startsWith(   "-0X   "))  {  int  hexDigits  =  str.length()  -  2;  //  drop  0x  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  	projects/Lang7/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.5773502691896258	446	446	1	replace	String  str  =  str.substring(0,  str.length()  +  2);	      String    str    =    str.substring(0,    str.length()    -    2);    	non-compiled	[CE]  	12	None	replace
34	[BUG]  [BUGGY]  if(str  ==  null  ||  str.startsWith( "0 ")||  str.startsWith( "0 "))  {  [CE]  ')'  expected  [FE]          AssertionError    [CONTEXT]    public  static  Number  createNumber(String  str)  throws  NumberFormatException  {    [BUGGY]  if(str  ==  null  ||  str.startsWith( "0 ")||  str.startsWith( "0 "))  {  [BUGGY]    return  null;  }  if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(   "A  blank  string  is  not  a  valid  number   ");  }  if  (str.startsWith(   "--   "))  {  return  null;  }  if  (str.startsWith(   "0x   ")  ||  str.startsWith(   "-0x   ")  ||  str.startsWith(   "0X   ")  ||  str.startsWith(   "-0X   "))  {  int  hexDigits  =  str.length()  -  2;  //  drop  0x  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  	projects/Lang7/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.5773502691896258	446	446	1	replace	if(str  ==  null  ||  str.startsWith( "0 ")||  str.startsWith( "0 "))  {	  if(str    ==    null    ||    str.startsWith(   "0   "))    {    	non-compiled	[CE]  ')'  expected	14	None	replace
35	[BUG]  [BUGGY]  Number  str  =  getNumber(str,  hexDigits);  [CE]  [FE]          AssertionError    [CONTEXT]    public  static  Number  createNumber(String  str)  throws  NumberFormatException  {    [BUGGY]  Number  str  =  getNumber(str,  hexDigits);  [BUGGY]    if  (str  ==  null)  {  return  null;  }  if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(   "A  blank  string  is  not  a  valid  number   ");  }  if  (str.startsWith(   "--   "))  {  return  null;  }  if  (str.startsWith(   "0x   ")  ||  str.startsWith(   "-0x   ")  ||  str.startsWith(   "0X   ")  ||  str.startsWith(   "-0X   "))  {  int  hexDigits  =  str.length()  -  2;  //  drop  0x  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  	projects/Lang7/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.5773502691896258	446	446	1	replace	Number  str  =  getNumber(str,  hexDigits);	      Number    str    =    getNumber(str);    	non-compiled	[CE]  	4	None	replace
36	[BUG]  [BUGGY]  Integer  str  =  createBigInteger(str);  [CE]  [FE]        AssertionError    [CONTEXT]    public  static  Number  createNumber(String  str)  throws  NumberFormatException  {    [BUGGY]  Integer  str  =  createBigInteger(str);  [BUGGY]    if  (str  ==  null)  {  return  null;  }  if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(   "A  blank  string  is  not  a  valid  number   ");  }  if  (str.startsWith(   "--   "))  {  return  null;  }  if  (str.startsWith(   "0x   ")  ||  str.startsWith(   "-0x   ")  ||  str.startsWith(   "0X   ")  ||  str.startsWith(   "-0X   "))  {  int  hexDigits  =  str.length()  -  2;  //  drop  0x  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  	projects/Lang7/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.5773502691896258	446	446	1	replace	Integer  str  =  createBigInteger(str);	      Integer    str    =    createInteger(str);    	non-compiled	[CE]  	10	None	replace
37	[BUG]  [BUGGY]  NumberUtils.setBlank(str);  [CE]  [FE]          AssertionError    [CONTEXT]    public  static  Number  createNumber(String  str)  throws  NumberFormatException  {    [BUGGY]  NumberUtils.setBlank(str);  [BUGGY]    return  null;  }  if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(   "A  blank  string  is  not  a  valid  number   ");  }  if  (str.startsWith(   "--   "))  {  return  null;  }  if  (str.startsWith(   "0x   ")  ||  str.startsWith(   "-0x   ")  ||  str.startsWith(   "0X   ")  ||  str.startsWith(   "-0X   "))  {  int  hexDigits  =  str.length()  -  2;  //  drop  0x  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  	projects/Lang7/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.5773502691896258	446	446	1	replace	NumberUtils.setBlank(str);	      	non-compiled	[CE]  	2	None	replace
38	[BUG]  [BUGGY]  Number  str  =  createNumber(str.substring(1));  [CE]  [FE]        AssertionError    [CONTEXT]    public  static  Number  createNumber(String  str)  throws  NumberFormatException  {    [BUGGY]  Number  str  =  createNumber(str.substring(1));  [BUGGY]    if  (str  ==  null)  {  return  null;  }  if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(   "A  blank  string  is  not  a  valid  number   ");  }  if  (str.startsWith(   "--   "))  {  return  null;  }  if  (str.startsWith(   "0x   ")  ||  str.startsWith(   "-0x   ")  ||  str.startsWith(   "0X   ")  ||  str.startsWith(   "-0X   "))  {  int  hexDigits  =  str.length()  -  2;  //  drop  0x  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  	projects/Lang7/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.5773502691896258	446	446	1	replace	Number  str  =  createNumber(str.substring(1));	      Number    str    =    createNumber(str);    	non-compiled	[CE]  	3	None	replace
39	[BUG]  [BUGGY]  Number  str  =  createNumber(str.trim());  [CE]  [FE]          AssertionError    [CONTEXT]    public  static  Number  createNumber(String  str)  throws  NumberFormatException  {    [BUGGY]  Number  str  =  createNumber(str.trim());  [BUGGY]    if  (str  ==  null)  {  return  null;  }  if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(   "A  blank  string  is  not  a  valid  number   ");  }  if  (str.startsWith(   "--   "))  {  return  null;  }  if  (str.startsWith(   "0x   ")  ||  str.startsWith(   "-0x   ")  ||  str.startsWith(   "0X   ")  ||  str.startsWith(   "-0X   "))  {  int  hexDigits  =  str.length()  -  2;  //  drop  0x  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  	projects/Lang7/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.5773502691896258	446	446	1	replace	Number  str  =  createNumber(str.trim());	      Number    str    =    createNumber(str);    	non-compiled	[CE]  	3	None	replace
40	[BUG]  [BUGGY]  Number  str  =(Number)str.toLowerCase();  [CE]  [FE]            AssertionError    [CONTEXT]    public  static  Number  createNumber(String  str)  throws  NumberFormatException  {    [BUGGY]  Number  str  =(Number)str.toLowerCase();  [BUGGY]    if  (str  ==  null)  {  return  null;  }  if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(   "A  blank  string  is  not  a  valid  number   ");  }  if  (str.startsWith(   "--   "))  {  return  null;  }  if  (str.startsWith(   "0x   ")  ||  str.startsWith(   "-0x   ")  ||  str.startsWith(   "0X   ")  ||  str.startsWith(   "-0X   "))  {  int  hexDigits  =  str.length()  -  2;  //  drop  0x  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  	projects/Lang7/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.5773502691896258	446	446	1	replace	Number  str  =(Number)str.toLowerCase();	      Number    str    =(Number)str.clone();    	non-compiled	[CE]  	5	None	replace
41	[BUG]  [BUGGY]  Number  str  =  createShort(String.valueOf(str));  [CE]  [FE]        AssertionError    [CONTEXT]    public  static  Number  createNumber(String  str)  throws  NumberFormatException  {    [BUGGY]  Number  str  =  createShort(String.valueOf(str));  [BUGGY]    if  (str  ==  null)  {  return  null;  }  if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(   "A  blank  string  is  not  a  valid  number   ");  }  if  (str.startsWith(   "--   "))  {  return  null;  }  if  (str.startsWith(   "0x   ")  ||  str.startsWith(   "-0x   ")  ||  str.startsWith(   "0X   ")  ||  str.startsWith(   "-0X   "))  {  int  hexDigits  =  str.length()  -  2;  //  drop  0x  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  	projects/Lang7/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.5773502691896258	446	446	1	replace	Number  str  =  createShort(String.valueOf(str));	      Number    str    =    createNumber(String.valueOf(str));    	non-compiled	[CE]  	8	None	replace
42	[BUG]  [BUGGY]  Number  str  =(Number)this.str.clone();  [CE]  [FE]            AssertionError    [CONTEXT]    public  static  Number  createNumber(String  str)  throws  NumberFormatException  {    [BUGGY]  Number  str  =(Number)this.str.clone();  [BUGGY]    if  (str  ==  null)  {  return  null;  }  if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(   "A  blank  string  is  not  a  valid  number   ");  }  if  (str.startsWith(   "--   "))  {  return  null;  }  if  (str.startsWith(   "0x   ")  ||  str.startsWith(   "-0x   ")  ||  str.startsWith(   "0X   ")  ||  str.startsWith(   "-0X   "))  {  int  hexDigits  =  str.length()  -  2;  //  drop  0x  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  	projects/Lang7/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.5773502691896258	446	446	1	replace	Number  str  =(Number)this.str.clone();	      Number    str    =(Number)str.clone();    	non-compiled	[CE]  	5	None	replace
43	[BUG]  [BUGGY]  String  str  =  str.substring(0,  str.length())+  1;  [CE]  [FE]          AssertionError    [CONTEXT]    public  static  Number  createNumber(String  str)  throws  NumberFormatException  {    [BUGGY]  String  str  =  str.substring(0,  str.length())+  1;  [BUGGY]    if  (str  ==  null)  {  return  null;  }  if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(   "A  blank  string  is  not  a  valid  number   ");  }  if  (str.startsWith(   "--   "))  {  return  null;  }  if  (str.startsWith(   "0x   ")  ||  str.startsWith(   "-0x   ")  ||  str.startsWith(   "0X   ")  ||  str.startsWith(   "-0X   "))  {  int  hexDigits  =  str.length()  -  2;  //  drop  0x  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  	projects/Lang7/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.5773502691896258	446	446	1	replace	String  str  =  str.substring(0,  str.length())+  1;	      String    str    =    str.substring(0,    str.length()    -    1);    	non-compiled	[CE]  	11	None	replace
44	[BUG]  [BUGGY]  Number  str  =  getString();  [CE]  [FE]                AssertionError    [CONTEXT]    public  static  Number  createNumber(String  str)  throws  NumberFormatException  {    [BUGGY]  Number  str  =  getString();  [BUGGY]    if  (str  ==  null)  {  return  null;  }  if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(   "A  blank  string  is  not  a  valid  number   ");  }  if  (str.startsWith(   "--   "))  {  return  null;  }  if  (str.startsWith(   "0x   ")  ||  str.startsWith(   "-0x   ")  ||  str.startsWith(   "0X   ")  ||  str.startsWith(   "-0X   "))  {  int  hexDigits  =  str.length()  -  2;  //  drop  0x  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  	projects/Lang7/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.5773502691896258	446	446	1	replace	Number  str  =  getString();	      Number    str    =    getNumber();    	non-compiled	[CE]  	7	None	replace
45	[BUG]  [BUGGY]  Number  str  =  createNumber(str,  2);  [CE]  [FE]          AssertionError    [CONTEXT]    public  static  Number  createNumber(String  str)  throws  NumberFormatException  {    [BUGGY]  Number  str  =  createNumber(str,  2);  [BUGGY]    if  (str  ==  null)  {  return  null;  }  if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(   "A  blank  string  is  not  a  valid  number   ");  }  if  (str.startsWith(   "--   "))  {  return  null;  }  if  (str.startsWith(   "0x   ")  ||  str.startsWith(   "-0x   ")  ||  str.startsWith(   "0X   ")  ||  str.startsWith(   "-0X   "))  {  int  hexDigits  =  str.length()  -  2;  //  drop  0x  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  	projects/Lang7/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.5773502691896258	446	446	1	replace	Number  str  =  createNumber(str,  2);	      Number    str    =    createNumber(str,    0);    	non-compiled	[CE]  	9	None	replace
46	[BUG]  [BUGGY]  Number  str  =  getString(str);  [CE]  [FE]          AssertionError    [CONTEXT]    public  static  Number  createNumber(String  str)  throws  NumberFormatException  {    [BUGGY]  Number  str  =  getString(str);  [BUGGY]    if  (str  ==  null)  {  return  null;  }  if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(   "A  blank  string  is  not  a  valid  number   ");  }  if  (str.startsWith(   "--   "))  {  return  null;  }  if  (str.startsWith(   "0x   ")  ||  str.startsWith(   "-0x   ")  ||  str.startsWith(   "0X   ")  ||  str.startsWith(   "-0X   "))  {  int  hexDigits  =  str.length()  -  2;  //  drop  0x  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  	projects/Lang7/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.5773502691896258	446	446	1	replace	Number  str  =  getString(str);	      Number    str    =    getNumber(str);    	non-compiled	[CE]  	4	None	replace
47	[BUG]  [BUGGY]  Number  str  =  getStringValue();  [CE]  [FE]              AssertionError    [CONTEXT]    public  static  Number  createNumber(String  str)  throws  NumberFormatException  {    [BUGGY]  Number  str  =  getStringValue();  [BUGGY]    if  (str  ==  null)  {  return  null;  }  if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(   "A  blank  string  is  not  a  valid  number   ");  }  if  (str.startsWith(   "--   "))  {  return  null;  }  if  (str.startsWith(   "0x   ")  ||  str.startsWith(   "-0x   ")  ||  str.startsWith(   "0X   ")  ||  str.startsWith(   "-0X   "))  {  int  hexDigits  =  str.length()  -  2;  //  drop  0x  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  	projects/Lang7/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.5773502691896258	446	446	1	replace	Number  str  =  getStringValue();	      Number    str    =    getNullValue();    	non-compiled	[CE]  	6	None	replace
48	[BUG]  [BUGGY]  Integer  str  =  createInteger(str.substring(1));  [CE]  [FE]        AssertionError    [CONTEXT]    public  static  Number  createNumber(String  str)  throws  NumberFormatException  {    [BUGGY]  Integer  str  =  createInteger(str.substring(1));  [BUGGY]    if  (str  ==  null)  {  return  null;  }  if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(   "A  blank  string  is  not  a  valid  number   ");  }  if  (str.startsWith(   "--   "))  {  return  null;  }  if  (str.startsWith(   "0x   ")  ||  str.startsWith(   "-0x   ")  ||  str.startsWith(   "0X   ")  ||  str.startsWith(   "-0X   "))  {  int  hexDigits  =  str.length()  -  2;  //  drop  0x  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  	projects/Lang7/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.5773502691896258	446	446	1	replace	Integer  str  =  createInteger(str.substring(1));	      Integer    str    =    createInteger(str);    	non-compiled	[CE]  	10	None	replace
49	[BUG]  [BUGGY]  if(str  ==  null  ||  str.length()  <  =  0)  {  [CE]  illegal  start  of  expression  [FE]        AssertionError    [CONTEXT]    public  static  Number  createNumber(String  str)  throws  NumberFormatException  {    [BUGGY]  if(str  ==  null  ||  str.length()  <  =  0)  {  [BUGGY]    return  null;  }  if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(   "A  blank  string  is  not  a  valid  number   ");  }  if  (str.startsWith(   "--   "))  {  return  null;  }  if  (str.startsWith(   "0x   ")  ||  str.startsWith(   "-0x   ")  ||  str.startsWith(   "0X   ")  ||  str.startsWith(   "-0X   "))  {  int  hexDigits  =  str.length()  -  2;  //  drop  0x  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  	projects/Lang7/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.5773502691896258	446	446	1	replace	if(str  ==  null  ||  str.length()  <  =  0)  {	  if(str    ==    null    ||    str.length()    ==    0)    {    	non-compiled	[CE]  illegal  start  of  expression	1	None	replace
50	[BUG]  [BUGGY]  Number  str  =  createQuotedNumber(str);  [CE]  [FE]        AssertionError    [CONTEXT]    public  static  Number  createNumber(String  str)  throws  NumberFormatException  {    [BUGGY]  Number  str  =  createQuotedNumber(str);  [BUGGY]    if  (str  ==  null)  {  return  null;  }  if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(   "A  blank  string  is  not  a  valid  number   ");  }  if  (str.startsWith(   "--   "))  {  return  null;  }  if  (str.startsWith(   "0x   ")  ||  str.startsWith(   "-0x   ")  ||  str.startsWith(   "0X   ")  ||  str.startsWith(   "-0X   "))  {  int  hexDigits  =  str.length()  -  2;  //  drop  0x  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  	projects/Lang7/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.5773502691896258	446	446	1	replace	Number  str  =  createQuotedNumber(str);	      Number    str    =    createNumber(str);    	non-compiled	[CE]  	3	None	replace
