bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  Number  str  =  createNumber(str,  hexDigits,  0);  [CE]  [FE]            AssertionError      [CONTEXT]      public  static  Number  createNumber(String  str)  throws  NumberFormatException  {      [BUGGY]  Number  str  =  createNumber(str,  hexDigits,  0);  [BUGGY]      if  (str  ==  null)  {  return  null;  }  if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(     "A  blank  string  is  not  a  valid  number     ");  }  if  (str.startsWith(     "--     "))  {  return  null;  }  if  (str.startsWith(     "0x     ")  ||  str.startsWith(     "-0x     ")  ||  str.startsWith(     "0X     ")  ||  str.startsWith(     "-0X     "))  {  int  hexDigits  =  str.length()  -  2;  //  drop  0x  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  	projects/Lang7/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.5773502691896258	446	446	1	replace	Number  str  =  createNumber(str,  hexDigits,  0);	  Number    str    =    createNumber(str,    hexDigits);    	non-compiled	[CE]  	22	None	replace
2	[BUG]  [BUGGY]  Number  str  =  createNumber(str,  expPos);  [CE]  [FE]              AssertionError      [CONTEXT]      public  static  Number  createNumber(String  str)  throws  NumberFormatException  {      [BUGGY]  Number  str  =  createNumber(str,  expPos);  [BUGGY]      if  (str  ==  null)  {  return  null;  }  if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(     "A  blank  string  is  not  a  valid  number     ");  }  if  (str.startsWith(     "--     "))  {  return  null;  }  if  (str.startsWith(     "0x     ")  ||  str.startsWith(     "-0x     ")  ||  str.startsWith(     "0X     ")  ||  str.startsWith(     "-0X     "))  {  int  hexDigits  =  str.length()  -  2;  //  drop  0x  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  	projects/Lang7/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.5773502691896258	446	446	1	replace	Number  str  =  createNumber(str,  expPos);	  Number    str    =    createNumber(str,    hexDigits);    	non-compiled	[CE]  	22	None	replace
3	[BUG]  [BUGGY]  Number  str  =  createNumber(str,  hexDigits,  exp);  [CE]  [FE]                AssertionError      [CONTEXT]      public  static  Number  createNumber(String  str)  throws  NumberFormatException  {      [BUGGY]  Number  str  =  createNumber(str,  hexDigits,  exp);  [BUGGY]      if  (str  ==  null)  {  return  null;  }  if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(     "A  blank  string  is  not  a  valid  number     ");  }  if  (str.startsWith(     "--     "))  {  return  null;  }  if  (str.startsWith(     "0x     ")  ||  str.startsWith(     "-0x     ")  ||  str.startsWith(     "0X     ")  ||  str.startsWith(     "-0X     "))  {  int  hexDigits  =  str.length()  -  2;  //  drop  0x  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  	projects/Lang7/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.5773502691896258	446	446	1	replace	Number  str  =  createNumber(str,  hexDigits,  exp);	  Number    str    =    createNumber(str,    hexDigits);    	non-compiled	[CE]  	22	None	replace
4	[BUG]  [BUGGY]  Number  str  =  createNumber(str,  String.valueOf(hexDigits));  [CE]  [FE]            AssertionError      [CONTEXT]      public  static  Number  createNumber(String  str)  throws  NumberFormatException  {      [BUGGY]  Number  str  =  createNumber(str,  String.valueOf(hexDigits));  [BUGGY]      if  (str  ==  null)  {  return  null;  }  if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(     "A  blank  string  is  not  a  valid  number     ");  }  if  (str.startsWith(     "--     "))  {  return  null;  }  if  (str.startsWith(     "0x     ")  ||  str.startsWith(     "-0x     ")  ||  str.startsWith(     "0X     ")  ||  str.startsWith(     "-0X     "))  {  int  hexDigits  =  str.length()  -  2;  //  drop  0x  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  	projects/Lang7/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.5773502691896258	446	446	1	replace	Number  str  =  createNumber(str,  String.valueOf(hexDigits));	  Number    str    =    createNumber(String.valueOf(hexDigits));    	non-compiled	[CE]  	31	None	replace
5	[BUG]  [BUGGY]  if(str  ==  null  ||  str.startsWith( "-0 "))  {  [CE]  ')'  expected  [FE]                AssertionError      [CONTEXT]      public  static  Number  createNumber(String  str)  throws  NumberFormatException  {      [BUGGY]  if(str  ==  null  ||  str.startsWith( "-0 "))  {  [BUGGY]      return  null;  }  if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(     "A  blank  string  is  not  a  valid  number     ");  }  if  (str.startsWith(     "--     "))  {  return  null;  }  if  (str.startsWith(     "0x     ")  ||  str.startsWith(     "-0x     ")  ||  str.startsWith(     "0X     ")  ||  str.startsWith(     "-0X     "))  {  int  hexDigits  =  str.length()  -  2;  //  drop  0x  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  	projects/Lang7/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.5773502691896258	446	446	1	replace	if(str  ==  null  ||  str.startsWith( "-0 "))  {	  if(str    ==    null    ||    str.startsWith(   ".0   "))    {    	non-compiled	[CE]  ')'  expected	8	None	replace
6	[BUG]  [BUGGY]  Number  str  =(Number)str.cloneByte();  [CE]  [FE]                    AssertionError      [CONTEXT]      public  static  Number  createNumber(String  str)  throws  NumberFormatException  {      [BUGGY]  Number  str  =(Number)str.cloneByte();  [BUGGY]      if  (str  ==  null)  {  return  null;  }  if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(     "A  blank  string  is  not  a  valid  number     ");  }  if  (str.startsWith(     "--     "))  {  return  null;  }  if  (str.startsWith(     "0x     ")  ||  str.startsWith(     "-0x     ")  ||  str.startsWith(     "0X     ")  ||  str.startsWith(     "-0X     "))  {  int  hexDigits  =  str.length()  -  2;  //  drop  0x  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  	projects/Lang7/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.5773502691896258	446	446	1	replace	Number  str  =(Number)str.cloneByte();	  Number    str    =(Number)str.cloneTree();    	non-compiled	[CE]  	30	None	replace
7	[BUG]  [BUGGY]  Number  str  =  getNumber(String.valueOf(str)+  1);  [CE]  [FE]              AssertionError      [CONTEXT]      public  static  Number  createNumber(String  str)  throws  NumberFormatException  {      [BUGGY]  Number  str  =  getNumber(String.valueOf(str)+  1);  [BUGGY]      if  (str  ==  null)  {  return  null;  }  if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(     "A  blank  string  is  not  a  valid  number     ");  }  if  (str.startsWith(     "--     "))  {  return  null;  }  if  (str.startsWith(     "0x     ")  ||  str.startsWith(     "-0x     ")  ||  str.startsWith(     "0X     ")  ||  str.startsWith(     "-0X     "))  {  int  hexDigits  =  str.length()  -  2;  //  drop  0x  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  	projects/Lang7/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.5773502691896258	446	446	1	replace	Number  str  =  getNumber(String.valueOf(str)+  1);	  Number    str    =    getNumber(String.valueOf(str));    	non-compiled	[CE]  	25	None	replace
8	[BUG]  [BUGGY]  Number  str  =  getNumber(String.valueOf(str),  0);  [CE]  [FE]                AssertionError      [CONTEXT]      public  static  Number  createNumber(String  str)  throws  NumberFormatException  {      [BUGGY]  Number  str  =  getNumber(String.valueOf(str),  0);  [BUGGY]      if  (str  ==  null)  {  return  null;  }  if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(     "A  blank  string  is  not  a  valid  number     ");  }  if  (str.startsWith(     "--     "))  {  return  null;  }  if  (str.startsWith(     "0x     ")  ||  str.startsWith(     "-0x     ")  ||  str.startsWith(     "0X     ")  ||  str.startsWith(     "-0X     "))  {  int  hexDigits  =  str.length()  -  2;  //  drop  0x  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  	projects/Lang7/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.5773502691896258	446	446	1	replace	Number  str  =  getNumber(String.valueOf(str),  0);	  Number    str    =    getNumber(String.valueOf(str));    	non-compiled	[CE]  	25	None	replace
9	[BUG]  [BUGGY]  Number  str  =  getNumber(String.valueOf(str),  1);  [CE]  [FE]                  AssertionError      [CONTEXT]      public  static  Number  createNumber(String  str)  throws  NumberFormatException  {      [BUGGY]  Number  str  =  getNumber(String.valueOf(str),  1);  [BUGGY]      if  (str  ==  null)  {  return  null;  }  if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(     "A  blank  string  is  not  a  valid  number     ");  }  if  (str.startsWith(     "--     "))  {  return  null;  }  if  (str.startsWith(     "0x     ")  ||  str.startsWith(     "-0x     ")  ||  str.startsWith(     "0X     ")  ||  str.startsWith(     "-0X     "))  {  int  hexDigits  =  str.length()  -  2;  //  drop  0x  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  	projects/Lang7/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.5773502691896258	446	446	1	replace	Number  str  =  getNumber(String.valueOf(str),  1);	  Number    str    =    getNumber(String.valueOf(str));    	non-compiled	[CE]  	25	None	replace
10	[BUG]  [BUGGY]  Number  str  =  getNumberValue(str,  0);  [CE]  [FE]                AssertionError      [CONTEXT]      public  static  Number  createNumber(String  str)  throws  NumberFormatException  {      [BUGGY]  Number  str  =  getNumberValue(str,  0);  [BUGGY]      return  null;  }  if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(     "A  blank  string  is  not  a  valid  number     ");  }  if  (str.startsWith(     "--     "))  {  return  null;  }  if  (str.startsWith(     "0x     ")  ||  str.startsWith(     "-0x     ")  ||  str.startsWith(     "0X     ")  ||  str.startsWith(     "-0X     "))  {  int  hexDigits  =  str.length()  -  2;  //  drop  0x  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  	projects/Lang7/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.5773502691896258	446	446	1	replace	Number  str  =  getNumberValue(str,  0);	  Number    str    =    getNumberValue(str);    	non-compiled	[CE]  	21	None	replace
11	[BUG]  [BUGGY]  Number  str  =  getNumberValue(str,  1);  [CE]  [FE]                  AssertionError      [CONTEXT]      public  static  Number  createNumber(String  str)  throws  NumberFormatException  {      [BUGGY]  Number  str  =  getNumberValue(str,  1);  [BUGGY]      return  null;  }  if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(     "A  blank  string  is  not  a  valid  number     ");  }  if  (str.startsWith(     "--     "))  {  return  null;  }  if  (str.startsWith(     "0x     ")  ||  str.startsWith(     "-0x     ")  ||  str.startsWith(     "0X     ")  ||  str.startsWith(     "-0X     "))  {  int  hexDigits  =  str.length()  -  2;  //  drop  0x  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  	projects/Lang7/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.5773502691896258	446	446	1	replace	Number  str  =  getNumberValue(str,  1);	  Number    str    =    getNumberValue(str);    	non-compiled	[CE]  	21	None	replace
12	[BUG]  [BUGGY]  Number  str  =(Number)this.str.getValue();  [CE]  [FE]                AssertionError      [CONTEXT]      public  static  Number  createNumber(String  str)  throws  NumberFormatException  {      [BUGGY]  Number  str  =(Number)this.str.getValue();  [BUGGY]      if  (str  ==  null)  {  return  null;  }  if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(     "A  blank  string  is  not  a  valid  number     ");  }  if  (str.startsWith(     "--     "))  {  return  null;  }  if  (str.startsWith(     "0x     ")  ||  str.startsWith(     "-0x     ")  ||  str.startsWith(     "0X     ")  ||  str.startsWith(     "-0X     "))  {  int  hexDigits  =  str.length()  -  2;  //  drop  0x  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  	projects/Lang7/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.5773502691896258	446	446	1	replace	Number  str  =(Number)this.str.getValue();	  Number    str    =(Number)this.str.clone();    	non-compiled	[CE]  	42	None	replace
13	[BUG]  [BUGGY]  Number  str  =(Number)this.str.cloneTree();  [CE]  [FE]                  AssertionError      [CONTEXT]      public  static  Number  createNumber(String  str)  throws  NumberFormatException  {      [BUGGY]  Number  str  =(Number)this.str.cloneTree();  [BUGGY]      if  (str  ==  null)  {  return  null;  }  if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(     "A  blank  string  is  not  a  valid  number     ");  }  if  (str.startsWith(     "--     "))  {  return  null;  }  if  (str.startsWith(     "0x     ")  ||  str.startsWith(     "-0x     ")  ||  str.startsWith(     "0X     ")  ||  str.startsWith(     "-0X     "))  {  int  hexDigits  =  str.length()  -  2;  //  drop  0x  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  	projects/Lang7/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.5773502691896258	446	446	1	replace	Number  str  =(Number)this.str.cloneTree();	  Number    str    =(Number)this.str.clone();    	non-compiled	[CE]  	42	None	replace
14	[BUG]  [BUGGY]  String  str  =  str.substring(0,  str.length()  -  1)+  1;  [CE]  [FE]              AssertionError      [CONTEXT]      public  static  Number  createNumber(String  str)  throws  NumberFormatException  {      [BUGGY]  String  str  =  str.substring(0,  str.length()  -  1)+  1;  [BUGGY]      if  (str  ==  null)  {  return  null;  }  if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(     "A  blank  string  is  not  a  valid  number     ");  }  if  (str.startsWith(     "--     "))  {  return  null;  }  if  (str.startsWith(     "0x     ")  ||  str.startsWith(     "-0x     ")  ||  str.startsWith(     "0X     ")  ||  str.startsWith(     "-0X     "))  {  int  hexDigits  =  str.length()  -  2;  //  drop  0x  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  	projects/Lang7/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.5773502691896258	446	446	1	replace	String  str  =  str.substring(0,  str.length()  -  1)+  1;	  String    str    =    str.substring(0,    str.length())+    1;    	non-compiled	[CE]  	43	None	replace
15	[BUG]  [BUGGY]  String  str  =  str.substring(0,  str.length()  +  1)+  1;  [CE]  [FE]                AssertionError      [CONTEXT]      public  static  Number  createNumber(String  str)  throws  NumberFormatException  {      [BUGGY]  String  str  =  str.substring(0,  str.length()  +  1)+  1;  [BUGGY]      if  (str  ==  null)  {  return  null;  }  if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(     "A  blank  string  is  not  a  valid  number     ");  }  if  (str.startsWith(     "--     "))  {  return  null;  }  if  (str.startsWith(     "0x     ")  ||  str.startsWith(     "-0x     ")  ||  str.startsWith(     "0X     ")  ||  str.startsWith(     "-0X     "))  {  int  hexDigits  =  str.length()  -  2;  //  drop  0x  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  	projects/Lang7/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.5773502691896258	446	446	1	replace	String  str  =  str.substring(0,  str.length()  +  1)+  1;	  String    str    =    str.substring(0,    str.length())+    1;    	non-compiled	[CE]  	43	None	replace
16	[BUG]  [BUGGY]  Number  str  =(Number)str.substring(1);  [CE]  [FE]                  AssertionError      [CONTEXT]      public  static  Number  createNumber(String  str)  throws  NumberFormatException  {      [BUGGY]  Number  str  =(Number)str.substring(1);  [BUGGY]      if  (str  ==  null)  {  return  null;  }  if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(     "A  blank  string  is  not  a  valid  number     ");  }  if  (str.startsWith(     "--     "))  {  return  null;  }  if  (str.startsWith(     "0x     ")  ||  str.startsWith(     "-0x     ")  ||  str.startsWith(     "0X     ")  ||  str.startsWith(     "-0X     "))  {  int  hexDigits  =  str.length()  -  2;  //  drop  0x  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  	projects/Lang7/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.5773502691896258	446	446	1	replace	Number  str  =(Number)str.substring(1);	  Number    str    =(Number)str.toCharArray();    	non-compiled	[CE]  	29	None	replace
17	[BUG]  [BUGGY]  Number  str  =  createNumber(str,  4);  [CE]  [FE]              AssertionError      [CONTEXT]      public  static  Number  createNumber(String  str)  throws  NumberFormatException  {      [BUGGY]  Number  str  =  createNumber(str,  4);  [BUGGY]      if  (str  ==  null)  {  return  null;  }  if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(     "A  blank  string  is  not  a  valid  number     ");  }  if  (str.startsWith(     "--     "))  {  return  null;  }  if  (str.startsWith(     "0x     ")  ||  str.startsWith(     "-0x     ")  ||  str.startsWith(     "0X     ")  ||  str.startsWith(     "-0X     "))  {  int  hexDigits  =  str.length()  -  2;  //  drop  0x  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  	projects/Lang7/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.5773502691896258	446	446	1	replace	Number  str  =  createNumber(str,  4);	  Number    str    =    createNumber(str,    2);    	non-compiled	[CE]  	45	None	replace
18	[BUG]  [BUGGY]  Number  str  =  createNumber(str.length());  [CE]  [FE]              AssertionError      [CONTEXT]      public  static  Number  createNumber(String  str)  throws  NumberFormatException  {      [BUGGY]  Number  str  =  createNumber(str.length());  [BUGGY]      if  (str  ==  null)  {  return  null;  }  if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(     "A  blank  string  is  not  a  valid  number     ");  }  if  (str.startsWith(     "--     "))  {  return  null;  }  if  (str.startsWith(     "0x     ")  ||  str.startsWith(     "-0x     ")  ||  str.startsWith(     "0X     ")  ||  str.startsWith(     "-0X     "))  {  int  hexDigits  =  str.length()  -  2;  //  drop  0x  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  	projects/Lang7/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.5773502691896258	446	446	1	replace	Number  str  =  createNumber(str.length());	  Number    str    =    createNumber(str.trim());    	non-compiled	[CE]  	39	None	replace
19	[BUG]  [BUGGY]  Number  str  =  createNumber(str.toLowerCase());  [CE]  [FE]                AssertionError      [CONTEXT]      public  static  Number  createNumber(String  str)  throws  NumberFormatException  {      [BUGGY]  Number  str  =  createNumber(str.toLowerCase());  [BUGGY]      if  (str  ==  null)  {  return  null;  }  if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(     "A  blank  string  is  not  a  valid  number     ");  }  if  (str.startsWith(     "--     "))  {  return  null;  }  if  (str.startsWith(     "0x     ")  ||  str.startsWith(     "-0x     ")  ||  str.startsWith(     "0X     ")  ||  str.startsWith(     "-0X     "))  {  int  hexDigits  =  str.length()  -  2;  //  drop  0x  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  	projects/Lang7/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.5773502691896258	446	446	1	replace	Number  str  =  createNumber(str.toLowerCase());	  Number    str    =    createNumber(str.trim());    	non-compiled	[CE]  	39	None	replace
20	[BUG]  [BUGGY]  Number  str  =  createNumber(str.substring(2));  [CE]  [FE]                  AssertionError      [CONTEXT]      public  static  Number  createNumber(String  str)  throws  NumberFormatException  {      [BUGGY]  Number  str  =  createNumber(str.substring(2));  [BUGGY]      if  (str  ==  null)  {  return  null;  }  if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(     "A  blank  string  is  not  a  valid  number     ");  }  if  (str.startsWith(     "--     "))  {  return  null;  }  if  (str.startsWith(     "0x     ")  ||  str.startsWith(     "-0x     ")  ||  str.startsWith(     "0X     ")  ||  str.startsWith(     "-0X     "))  {  int  hexDigits  =  str.length()  -  2;  //  drop  0x  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  	projects/Lang7/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.5773502691896258	446	446	1	replace	Number  str  =  createNumber(str.substring(2));	  Number    str    =    createNumber(str.trim());    	non-compiled	[CE]  	39	None	replace
21	[BUG]  [BUGGY]  int  decPos  =  str.length()  -  2;  [CE]  [FE]              AssertionError      [CONTEXT]      public  static  Number  createNumber(String  str)  throws  NumberFormatException  {      [BUGGY]  int  decPos  =  str.length()  -  2;  [BUGGY]      return  null;  }  if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(     "A  blank  string  is  not  a  valid  number     ");  }  if  (str.startsWith(     "--     "))  {  return  null;  }  if  (str.startsWith(     "0x     ")  ||  str.startsWith(     "-0x     ")  ||  str.startsWith(     "0X     ")  ||  str.startsWith(     "-0X     "))  {  int  hexDigits  =  str.length()  -  2;  //  drop  0x  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  	projects/Lang7/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.5773502691896258	446	446	1	replace	int  decPos  =  str.length()  -  2;	  int    decPos    =    str.length();    	non-compiled	[CE]  	20	None	replace
22	[BUG]  [BUGGY]  int  decPos  =  str.length()  -  1;  [CE]  [FE]                AssertionError      [CONTEXT]      public  static  Number  createNumber(String  str)  throws  NumberFormatException  {      [BUGGY]  int  decPos  =  str.length()  -  1;  [BUGGY]      return  null;  }  if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(     "A  blank  string  is  not  a  valid  number     ");  }  if  (str.startsWith(     "--     "))  {  return  null;  }  if  (str.startsWith(     "0x     ")  ||  str.startsWith(     "-0x     ")  ||  str.startsWith(     "0X     ")  ||  str.startsWith(     "-0X     "))  {  int  hexDigits  =  str.length()  -  2;  //  drop  0x  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  	projects/Lang7/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.5773502691896258	446	446	1	replace	int  decPos  =  str.length()  -  1;	  int    decPos    =    str.length();    	non-compiled	[CE]  	20	None	replace
23	[BUG]  [BUGGY]  int  decPos  =  str.length()  +  1;  [CE]  [FE]                  AssertionError      [CONTEXT]      public  static  Number  createNumber(String  str)  throws  NumberFormatException  {      [BUGGY]  int  decPos  =  str.length()  +  1;  [BUGGY]      return  null;  }  if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(     "A  blank  string  is  not  a  valid  number     ");  }  if  (str.startsWith(     "--     "))  {  return  null;  }  if  (str.startsWith(     "0x     ")  ||  str.startsWith(     "-0x     ")  ||  str.startsWith(     "0X     ")  ||  str.startsWith(     "-0X     "))  {  int  hexDigits  =  str.length()  -  2;  //  drop  0x  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  	projects/Lang7/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.5773502691896258	446	446	1	replace	int  decPos  =  str.length()  +  1;	  int    decPos    =    str.length();    	non-compiled	[CE]  	20	None	replace
24	[BUG]  [BUGGY]  int  decPos  =  str.length()  +  2;  [CE]  [FE]                    AssertionError      [CONTEXT]      public  static  Number  createNumber(String  str)  throws  NumberFormatException  {      [BUGGY]  int  decPos  =  str.length()  +  2;  [BUGGY]      return  null;  }  if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(     "A  blank  string  is  not  a  valid  number     ");  }  if  (str.startsWith(     "--     "))  {  return  null;  }  if  (str.startsWith(     "0x     ")  ||  str.startsWith(     "-0x     ")  ||  str.startsWith(     "0X     ")  ||  str.startsWith(     "-0X     "))  {  int  hexDigits  =  str.length()  -  2;  //  drop  0x  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  	projects/Lang7/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.5773502691896258	446	446	1	replace	int  decPos  =  str.length()  +  2;	  int    decPos    =    str.length();    	non-compiled	[CE]  	20	None	replace
25	[BUG]  [BUGGY]  Number  str  =  createNumber(String.valueOf(str),  1);  [CE]  [FE]                AssertionError      [CONTEXT]      public  static  Number  createNumber(String  str)  throws  NumberFormatException  {      [BUGGY]  Number  str  =  createNumber(String.valueOf(str),  1);  [BUGGY]      if  (str  ==  null)  {  return  null;  }  if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(     "A  blank  string  is  not  a  valid  number     ");  }  if  (str.startsWith(     "--     "))  {  return  null;  }  if  (str.startsWith(     "0x     ")  ||  str.startsWith(     "-0x     ")  ||  str.startsWith(     "0X     ")  ||  str.startsWith(     "-0X     "))  {  int  hexDigits  =  str.length()  -  2;  //  drop  0x  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  	projects/Lang7/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.5773502691896258	446	446	1	replace	Number  str  =  createNumber(String.valueOf(str),  1);	  Number    str    =    createNumber(String.valueOf(str),    0);    	non-compiled	[CE]  	26	None	replace
26	[BUG]  [BUGGY]  Number  str  =  getNumber(str.substring(0,  str.length()));  [CE]  [FE]                AssertionError      [CONTEXT]      public  static  Number  createNumber(String  str)  throws  NumberFormatException  {      [BUGGY]  Number  str  =  getNumber(str.substring(0,  str.length()));  [BUGGY]      if  (str  ==  null)  {  return  null;  }  if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(     "A  blank  string  is  not  a  valid  number     ");  }  if  (str.startsWith(     "--     "))  {  return  null;  }  if  (str.startsWith(     "0x     ")  ||  str.startsWith(     "-0x     ")  ||  str.startsWith(     "0X     ")  ||  str.startsWith(     "-0X     "))  {  int  hexDigits  =  str.length()  -  2;  //  drop  0x  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  	projects/Lang7/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.5773502691896258	446	446	1	replace	Number  str  =  getNumber(str.substring(0,  str.length()));	  Number    str    =    getNumber(str.substring(0,    str.length()    -    1));    	non-compiled	[CE]  	4	None	replace
27	[BUG]  [BUGGY]  Number  str  =  getNumber(str.substring(0,  str.length()  1));  [CE]  [FE]                  AssertionError      [CONTEXT]      public  static  Number  createNumber(String  str)  throws  NumberFormatException  {      [BUGGY]  Number  str  =  getNumber(str.substring(0,  str.length()  1));  [BUGGY]      if  (str  ==  null)  {  return  null;  }  if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(     "A  blank  string  is  not  a  valid  number     ");  }  if  (str.startsWith(     "--     "))  {  return  null;  }  if  (str.startsWith(     "0x     ")  ||  str.startsWith(     "-0x     ")  ||  str.startsWith(     "0X     ")  ||  str.startsWith(     "-0X     "))  {  int  hexDigits  =  str.length()  -  2;  //  drop  0x  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  	projects/Lang7/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.5773502691896258	446	446	1	replace	Number  str  =  getNumber(str.substring(0,  str.length()  1));	  Number    str    =    getNumber(str.substring(0,    str.length()    -    1));    	non-compiled	[CE]  	4	None	replace
28	[BUG]  [BUGGY]  Number  str  =  getNumber(str.substring(0,  str.length()  +  1));  [CE]  [FE]                    AssertionError      [CONTEXT]      public  static  Number  createNumber(String  str)  throws  NumberFormatException  {      [BUGGY]  Number  str  =  getNumber(str.substring(0,  str.length()  +  1));  [BUGGY]      if  (str  ==  null)  {  return  null;  }  if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(     "A  blank  string  is  not  a  valid  number     ");  }  if  (str.startsWith(     "--     "))  {  return  null;  }  if  (str.startsWith(     "0x     ")  ||  str.startsWith(     "-0x     ")  ||  str.startsWith(     "0X     ")  ||  str.startsWith(     "-0X     "))  {  int  hexDigits  =  str.length()  -  2;  //  drop  0x  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  	projects/Lang7/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.5773502691896258	446	446	1	replace	Number  str  =  getNumber(str.substring(0,  str.length()  +  1));	  Number    str    =    getNumber(str.substring(0,    str.length()    -    1));    	non-compiled	[CE]  	4	None	replace
29	[BUG]  [BUGGY]  Number  str  =  getString(str.toUpperCase());  [CE]  [FE]              AssertionError      [CONTEXT]      public  static  Number  createNumber(String  str)  throws  NumberFormatException  {      [BUGGY]  Number  str  =  getString(str.toUpperCase());  [BUGGY]      if  (str  ==  null)  {  return  null;  }  if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(     "A  blank  string  is  not  a  valid  number     ");  }  if  (str.startsWith(     "--     "))  {  return  null;  }  if  (str.startsWith(     "0x     ")  ||  str.startsWith(     "-0x     ")  ||  str.startsWith(     "0X     ")  ||  str.startsWith(     "-0X     "))  {  int  hexDigits  =  str.length()  -  2;  //  drop  0x  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  	projects/Lang7/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.5773502691896258	446	446	1	replace	Number  str  =  getString(str.toUpperCase());	  Number    str    =    getString(str);    	non-compiled	[CE]  	46	None	replace
30	[BUG]  [BUGGY]  Number  str  =  getNullValue(str);  [CE]  [FE]                AssertionError      [CONTEXT]      public  static  Number  createNumber(String  str)  throws  NumberFormatException  {      [BUGGY]  Number  str  =  getNullValue(str);  [BUGGY]      if  (str  ==  null)  {  return  null;  }  if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(     "A  blank  string  is  not  a  valid  number     ");  }  if  (str.startsWith(     "--     "))  {  return  null;  }  if  (str.startsWith(     "0x     ")  ||  str.startsWith(     "-0x     ")  ||  str.startsWith(     "0X     ")  ||  str.startsWith(     "-0X     "))  {  int  hexDigits  =  str.length()  -  2;  //  drop  0x  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  	projects/Lang7/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.5773502691896258	446	446	1	replace	Number  str  =  getNullValue(str);	  Number    str    =    getString(str);    	non-compiled	[CE]  	46	None	replace
31	[BUG]  [BUGGY]  Number  str  =  getString(str.toLowerCase());  [CE]  [FE]                  AssertionError      [CONTEXT]      public  static  Number  createNumber(String  str)  throws  NumberFormatException  {      [BUGGY]  Number  str  =  getString(str.toLowerCase());  [BUGGY]      if  (str  ==  null)  {  return  null;  }  if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(     "A  blank  string  is  not  a  valid  number     ");  }  if  (str.startsWith(     "--     "))  {  return  null;  }  if  (str.startsWith(     "0x     ")  ||  str.startsWith(     "-0x     ")  ||  str.startsWith(     "0X     ")  ||  str.startsWith(     "-0X     "))  {  int  hexDigits  =  str.length()  -  2;  //  drop  0x  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  	projects/Lang7/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.5773502691896258	446	446	1	replace	Number  str  =  getString(str.toLowerCase());	  Number    str    =    getString(str);    	non-compiled	[CE]  	46	None	replace
32	[BUG]  [BUGGY]  Number  str  =  createQuotedNumber(str,  hexDigits);  [CE]  [FE]            AssertionError      [CONTEXT]      public  static  Number  createNumber(String  str)  throws  NumberFormatException  {      [BUGGY]  Number  str  =  createQuotedNumber(str,  hexDigits);  [BUGGY]      if  (str  ==  null)  {  return  null;  }  if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(     "A  blank  string  is  not  a  valid  number     ");  }  if  (str.startsWith(     "--     "))  {  return  null;  }  if  (str.startsWith(     "0x     ")  ||  str.startsWith(     "-0x     ")  ||  str.startsWith(     "0X     ")  ||  str.startsWith(     "-0X     "))  {  int  hexDigits  =  str.length()  -  2;  //  drop  0x  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  	projects/Lang7/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.5773502691896258	446	446	1	replace	Number  str  =  createQuotedNumber(str,  hexDigits);	  Number    str    =    createQuotedNumber(str);    	non-compiled	[CE]  	50	None	replace
33	[BUG]  [BUGGY]  Number  str  =  createQuotedString(str);  [CE]  [FE]              AssertionError      [CONTEXT]      public  static  Number  createNumber(String  str)  throws  NumberFormatException  {      [BUGGY]  Number  str  =  createQuotedString(str);  [BUGGY]      if  (str  ==  null)  {  return  null;  }  if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(     "A  blank  string  is  not  a  valid  number     ");  }  if  (str.startsWith(     "--     "))  {  return  null;  }  if  (str.startsWith(     "0x     ")  ||  str.startsWith(     "-0x     ")  ||  str.startsWith(     "0X     ")  ||  str.startsWith(     "-0X     "))  {  int  hexDigits  =  str.length()  -  2;  //  drop  0x  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  	projects/Lang7/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.5773502691896258	446	446	1	replace	Number  str  =  createQuotedString(str);	  Number    str    =    createQuotedNumber(str);    	non-compiled	[CE]  	50	None	replace
34	[BUG]  [BUGGY]  Number  str  =  createQuotedNumber(str,  0);  [CE]  [FE]                AssertionError      [CONTEXT]      public  static  Number  createNumber(String  str)  throws  NumberFormatException  {      [BUGGY]  Number  str  =  createQuotedNumber(str,  0);  [BUGGY]      if  (str  ==  null)  {  return  null;  }  if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(     "A  blank  string  is  not  a  valid  number     ");  }  if  (str.startsWith(     "--     "))  {  return  null;  }  if  (str.startsWith(     "0x     ")  ||  str.startsWith(     "-0x     ")  ||  str.startsWith(     "0X     ")  ||  str.startsWith(     "-0X     "))  {  int  hexDigits  =  str.length()  -  2;  //  drop  0x  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  	projects/Lang7/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.5773502691896258	446	446	1	replace	Number  str  =  createQuotedNumber(str,  0);	  Number    str    =    createQuotedNumber(str);    	non-compiled	[CE]  	50	None	replace
35	[BUG]  [BUGGY]  Number  str  =  createNumber(str.substring(0,  str.length()));  [CE]  [FE]              AssertionError      [CONTEXT]      public  static  Number  createNumber(String  str)  throws  NumberFormatException  {      [BUGGY]  Number  str  =  createNumber(str.substring(0,  str.length()));  [BUGGY]      if  (str  ==  null)  {  return  null;  }  if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(     "A  blank  string  is  not  a  valid  number     ");  }  if  (str.startsWith(     "--     "))  {  return  null;  }  if  (str.startsWith(     "0x     ")  ||  str.startsWith(     "-0x     ")  ||  str.startsWith(     "0X     ")  ||  str.startsWith(     "-0X     "))  {  int  hexDigits  =  str.length()  -  2;  //  drop  0x  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  	projects/Lang7/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.5773502691896258	446	446	1	replace	Number  str  =  createNumber(str.substring(0,  str.length()));	  Number    str    =    createNumber(str.substring(0,    str.length()    -    1));    	non-compiled	[CE]  	23	None	replace
36	[BUG]  [BUGGY]  Number  str  =  createNumber(str.substring(0,  str.length()  1));  [CE]  [FE]                AssertionError      [CONTEXT]      public  static  Number  createNumber(String  str)  throws  NumberFormatException  {      [BUGGY]  Number  str  =  createNumber(str.substring(0,  str.length()  1));  [BUGGY]      if  (str  ==  null)  {  return  null;  }  if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(     "A  blank  string  is  not  a  valid  number     ");  }  if  (str.startsWith(     "--     "))  {  return  null;  }  if  (str.startsWith(     "0x     ")  ||  str.startsWith(     "-0x     ")  ||  str.startsWith(     "0X     ")  ||  str.startsWith(     "-0X     "))  {  int  hexDigits  =  str.length()  -  2;  //  drop  0x  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  	projects/Lang7/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.5773502691896258	446	446	1	replace	Number  str  =  createNumber(str.substring(0,  str.length()  1));	  Number    str    =    createNumber(str.substring(0,    str.length()    -    1));    	non-compiled	[CE]  	23	None	replace
37	[BUG]  [BUGGY]  Number  str  =  createNumber(str.substring(0,  str.length()  +  1));  [CE]  [FE]                  AssertionError      [CONTEXT]      public  static  Number  createNumber(String  str)  throws  NumberFormatException  {      [BUGGY]  Number  str  =  createNumber(str.substring(0,  str.length()  +  1));  [BUGGY]      if  (str  ==  null)  {  return  null;  }  if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(     "A  blank  string  is  not  a  valid  number     ");  }  if  (str.startsWith(     "--     "))  {  return  null;  }  if  (str.startsWith(     "0x     ")  ||  str.startsWith(     "-0x     ")  ||  str.startsWith(     "0X     ")  ||  str.startsWith(     "-0X     "))  {  int  hexDigits  =  str.length()  -  2;  //  drop  0x  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  	projects/Lang7/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.5773502691896258	446	446	1	replace	Number  str  =  createNumber(str.substring(0,  str.length()  +  1));	  Number    str    =    createNumber(str.substring(0,    str.length()    -    1));    	non-compiled	[CE]  	23	None	replace
38	[BUG]  [BUGGY]  Number  str  =  createNumber(str.substring(1),  str.length());  [CE]  [FE]            AssertionError      [CONTEXT]      public  static  Number  createNumber(String  str)  throws  NumberFormatException  {      [BUGGY]  Number  str  =  createNumber(str.substring(1),  str.length());  [BUGGY]      if  (str  ==  null)  {  return  null;  }  if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(     "A  blank  string  is  not  a  valid  number     ");  }  if  (str.startsWith(     "--     "))  {  return  null;  }  if  (str.startsWith(     "0x     ")  ||  str.startsWith(     "-0x     ")  ||  str.startsWith(     "0X     ")  ||  str.startsWith(     "-0X     "))  {  int  hexDigits  =  str.length()  -  2;  //  drop  0x  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  	projects/Lang7/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.5773502691896258	446	446	1	replace	Number  str  =  createNumber(str.substring(1),  str.length());	  Number    str    =    createNumber(str.substring(1));    	non-compiled	[CE]  	38	None	replace
39	[BUG]  [BUGGY]  Number  str  =  createNumber(str.substring(0,  str.length()  -  2));  [CE]  [FE]              AssertionError      [CONTEXT]      public  static  Number  createNumber(String  str)  throws  NumberFormatException  {      [BUGGY]  Number  str  =  createNumber(str.substring(0,  str.length()  -  2));  [BUGGY]      if  (str  ==  null)  {  return  null;  }  if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(     "A  blank  string  is  not  a  valid  number     ");  }  if  (str.startsWith(     "--     "))  {  return  null;  }  if  (str.startsWith(     "0x     ")  ||  str.startsWith(     "-0x     ")  ||  str.startsWith(     "0X     ")  ||  str.startsWith(     "-0X     "))  {  int  hexDigits  =  str.length()  -  2;  //  drop  0x  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  	projects/Lang7/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.5773502691896258	446	446	1	replace	Number  str  =  createNumber(str.substring(0,  str.length()  -  2));	  Number    str    =    createNumber(str.substring(1));    	non-compiled	[CE]  	38	None	replace
40	[BUG]  [BUGGY]  Number  str  =  getNumber(str,  1);  [CE]  [FE]                  AssertionError      [CONTEXT]      public  static  Number  createNumber(String  str)  throws  NumberFormatException  {      [BUGGY]  Number  str  =  getNumber(str,  1);  [BUGGY]      if  (str  ==  null)  {  return  null;  }  if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(     "A  blank  string  is  not  a  valid  number     ");  }  if  (str.startsWith(     "--     "))  {  return  null;  }  if  (str.startsWith(     "0x     ")  ||  str.startsWith(     "-0x     ")  ||  str.startsWith(     "0X     ")  ||  str.startsWith(     "-0X     "))  {  int  hexDigits  =  str.length()  -  2;  //  drop  0x  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  	projects/Lang7/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.5773502691896258	446	446	1	replace	Number  str  =  getNumber(str,  1);	  Number    str    =    getNumber(str,    0);    	non-compiled	[CE]  	5	None	replace
41	[BUG]  [BUGGY]  Number  str  =  getNumber(str,  -1);  [CE]  [FE]                    AssertionError      [CONTEXT]      public  static  Number  createNumber(String  str)  throws  NumberFormatException  {      [BUGGY]  Number  str  =  getNumber(str,  -1);  [BUGGY]      if  (str  ==  null)  {  return  null;  }  if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(     "A  blank  string  is  not  a  valid  number     ");  }  if  (str.startsWith(     "--     "))  {  return  null;  }  if  (str.startsWith(     "0x     ")  ||  str.startsWith(     "-0x     ")  ||  str.startsWith(     "0X     ")  ||  str.startsWith(     "-0X     "))  {  int  hexDigits  =  str.length()  -  2;  //  drop  0x  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  	projects/Lang7/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.5773502691896258	446	446	1	replace	Number  str  =  getNumber(str,  -1);	  Number    str    =    getNumber(str,    0);    	non-compiled	[CE]  	5	None	replace
42	[BUG]  [BUGGY]  Number  str  =  getNumber(str,  0L);  [CE]  [FE]                      AssertionError      [CONTEXT]      public  static  Number  createNumber(String  str)  throws  NumberFormatException  {      [BUGGY]  Number  str  =  getNumber(str,  0L);  [BUGGY]      if  (str  ==  null)  {  return  null;  }  if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(     "A  blank  string  is  not  a  valid  number     ");  }  if  (str.startsWith(     "--     "))  {  return  null;  }  if  (str.startsWith(     "0x     ")  ||  str.startsWith(     "-0x     ")  ||  str.startsWith(     "0X     ")  ||  str.startsWith(     "-0X     "))  {  int  hexDigits  =  str.length()  -  2;  //  drop  0x  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  	projects/Lang7/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.5773502691896258	446	446	1	replace	Number  str  =  getNumber(str,  0L);	  Number    str    =    getNumber(str,    0);    	non-compiled	[CE]  	5	None	replace
43	[BUG]  [BUGGY]  if(str  ==  null  ||  str.startsWith( "0x ")||  str.startsWith( "0x "))  {  [CE]  ')'  expected  [FE]              AssertionError      [CONTEXT]      public  static  Number  createNumber(String  str)  throws  NumberFormatException  {      [BUGGY]  if(str  ==  null  ||  str.startsWith( "0x ")||  str.startsWith( "0x "))  {  [BUGGY]      return  null;  }  if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(     "A  blank  string  is  not  a  valid  number     ");  }  if  (str.startsWith(     "--     "))  {  return  null;  }  if  (str.startsWith(     "0x     ")  ||  str.startsWith(     "-0x     ")  ||  str.startsWith(     "0X     ")  ||  str.startsWith(     "-0X     "))  {  int  hexDigits  =  str.length()  -  2;  //  drop  0x  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  	projects/Lang7/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.5773502691896258	446	446	1	replace	if(str  ==  null  ||  str.startsWith( "0x ")||  str.startsWith( "0x "))  {	  if(str    ==    null    ||    str.startsWith(   "0   ")||    str.startsWith(   "0   "))    {    	non-compiled	[CE]  ')'  expected	34	None	replace
44	[BUG]  [BUGGY]  if(str  ==  null  ||  str.startsWith( "0 ")||  str.startsWith( "0x "))  {  [CE]  ')'  expected  [FE]                AssertionError      [CONTEXT]      public  static  Number  createNumber(String  str)  throws  NumberFormatException  {      [BUGGY]  if(str  ==  null  ||  str.startsWith( "0 ")||  str.startsWith( "0x "))  {  [BUGGY]      return  null;  }  if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(     "A  blank  string  is  not  a  valid  number     ");  }  if  (str.startsWith(     "--     "))  {  return  null;  }  if  (str.startsWith(     "0x     ")  ||  str.startsWith(     "-0x     ")  ||  str.startsWith(     "0X     ")  ||  str.startsWith(     "-0X     "))  {  int  hexDigits  =  str.length()  -  2;  //  drop  0x  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  	projects/Lang7/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.5773502691896258	446	446	1	replace	if(str  ==  null  ||  str.startsWith( "0 ")||  str.startsWith( "0x "))  {	  if(str    ==    null    ||    str.startsWith(   "0   ")||    str.startsWith(   "0   "))    {    	non-compiled	[CE]  ')'  expected	34	None	replace
45	[BUG]  [BUGGY]  if(str  ==  null  ||  str.startsWith( ".0 ")||  str.startsWith( "0 "))  {  [CE]  ')'  expected  [FE]                  AssertionError      [CONTEXT]      public  static  Number  createNumber(String  str)  throws  NumberFormatException  {      [BUGGY]  if(str  ==  null  ||  str.startsWith( ".0 ")||  str.startsWith( "0 "))  {  [BUGGY]      return  null;  }  if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(     "A  blank  string  is  not  a  valid  number     ");  }  if  (str.startsWith(     "--     "))  {  return  null;  }  if  (str.startsWith(     "0x     ")  ||  str.startsWith(     "-0x     ")  ||  str.startsWith(     "0X     ")  ||  str.startsWith(     "-0X     "))  {  int  hexDigits  =  str.length()  -  2;  //  drop  0x  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  	projects/Lang7/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.5773502691896258	446	446	1	replace	if(str  ==  null  ||  str.startsWith( ".0 ")||  str.startsWith( "0 "))  {	  if(str    ==    null    ||    str.startsWith(   "0   ")||    str.startsWith(   "0   "))    {    	non-compiled	[CE]  ')'  expected	34	None	replace
46	[BUG]  [BUGGY]  Integer  str  =  createBigInteger(str.length());  [CE]  [FE]            AssertionError      [CONTEXT]      public  static  Number  createNumber(String  str)  throws  NumberFormatException  {      [BUGGY]  Integer  str  =  createBigInteger(str.length());  [BUGGY]      if  (str  ==  null)  {  return  null;  }  if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(     "A  blank  string  is  not  a  valid  number     ");  }  if  (str.startsWith(     "--     "))  {  return  null;  }  if  (str.startsWith(     "0x     ")  ||  str.startsWith(     "-0x     ")  ||  str.startsWith(     "0X     ")  ||  str.startsWith(     "-0X     "))  {  int  hexDigits  =  str.length()  -  2;  //  drop  0x  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  	projects/Lang7/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.5773502691896258	446	446	1	replace	Integer  str  =  createBigInteger(str.length());	  Integer    str    =    createBigInteger(str);    	non-compiled	[CE]  	36	None	replace
47	[BUG]  [BUGGY]  Integer  str  =  createLong(str);  [CE]  [FE]              AssertionError      [CONTEXT]      public  static  Number  createNumber(String  str)  throws  NumberFormatException  {      [BUGGY]  Integer  str  =  createLong(str);  [BUGGY]      if  (str  ==  null)  {  return  null;  }  if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(     "A  blank  string  is  not  a  valid  number     ");  }  if  (str.startsWith(     "--     "))  {  return  null;  }  if  (str.startsWith(     "0x     ")  ||  str.startsWith(     "-0x     ")  ||  str.startsWith(     "0X     ")  ||  str.startsWith(     "-0X     "))  {  int  hexDigits  =  str.length()  -  2;  //  drop  0x  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  	projects/Lang7/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.5773502691896258	446	446	1	replace	Integer  str  =  createLong(str);	  Integer    str    =    createBigInteger(str);    	non-compiled	[CE]  	36	None	replace
48	[BUG]  [BUGGY]  Integer  str  =  createBigDecimal(str);  [CE]  [FE]                AssertionError      [CONTEXT]      public  static  Number  createNumber(String  str)  throws  NumberFormatException  {      [BUGGY]  Integer  str  =  createBigDecimal(str);  [BUGGY]      if  (str  ==  null)  {  return  null;  }  if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(     "A  blank  string  is  not  a  valid  number     ");  }  if  (str.startsWith(     "--     "))  {  return  null;  }  if  (str.startsWith(     "0x     ")  ||  str.startsWith(     "-0x     ")  ||  str.startsWith(     "0X     ")  ||  str.startsWith(     "-0X     "))  {  int  hexDigits  =  str.length()  -  2;  //  drop  0x  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  	projects/Lang7/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.5773502691896258	446	446	1	replace	Integer  str  =  createBigDecimal(str);	  Integer    str    =    createBigInteger(str);    	non-compiled	[CE]  	36	None	replace
49	[BUG]  [BUGGY]  Number  str  =  createNumber(str,  0xFFFF);  [CE]  [FE]                AssertionError      [CONTEXT]      public  static  Number  createNumber(String  str)  throws  NumberFormatException  {      [BUGGY]  Number  str  =  createNumber(str,  0xFFFF);  [BUGGY]      if  (str  ==  null)  {  return  null;  }  if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(     "A  blank  string  is  not  a  valid  number     ");  }  if  (str.startsWith(     "--     "))  {  return  null;  }  if  (str.startsWith(     "0x     ")  ||  str.startsWith(     "-0x     ")  ||  str.startsWith(     "0X     ")  ||  str.startsWith(     "-0X     "))  {  int  hexDigits  =  str.length()  -  2;  //  drop  0x  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  	projects/Lang7/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.5773502691896258	446	446	1	replace	Number  str  =  createNumber(str,  0xFFFF);	  Number    str    =    createNumber(str,    0L);    	non-compiled	[CE]  	11	None	replace
50	[BUG]  [BUGGY]  Number  str  =  getNumber(str.toLowerCase());  [CE]  [FE]              AssertionError      [CONTEXT]      public  static  Number  createNumber(String  str)  throws  NumberFormatException  {      [BUGGY]  Number  str  =  getNumber(str.toLowerCase());  [BUGGY]      if  (str  ==  null)  {  return  null;  }  if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(     "A  blank  string  is  not  a  valid  number     ");  }  if  (str.startsWith(     "--     "))  {  return  null;  }  if  (str.startsWith(     "0x     ")  ||  str.startsWith(     "-0x     ")  ||  str.startsWith(     "0X     ")  ||  str.startsWith(     "-0X     "))  {  int  hexDigits  =  str.length()  -  2;  //  drop  0x  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  	projects/Lang7/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.5773502691896258	446	446	1	replace	Number  str  =  getNumber(str.toLowerCase());	  Number    str    =    getNumber(str.toUpperCase());    	non-compiled	[CE]  	3	None	replace
51	[BUG]  [BUGGY]  Number  str  =  getNumber(str.substring(1));  [CE]  [FE]                AssertionError      [CONTEXT]      public  static  Number  createNumber(String  str)  throws  NumberFormatException  {      [BUGGY]  Number  str  =  getNumber(str.substring(1));  [BUGGY]      if  (str  ==  null)  {  return  null;  }  if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(     "A  blank  string  is  not  a  valid  number     ");  }  if  (str.startsWith(     "--     "))  {  return  null;  }  if  (str.startsWith(     "0x     ")  ||  str.startsWith(     "-0x     ")  ||  str.startsWith(     "0X     ")  ||  str.startsWith(     "-0X     "))  {  int  hexDigits  =  str.length()  -  2;  //  drop  0x  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  	projects/Lang7/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.5773502691896258	446	446	1	replace	Number  str  =  getNumber(str.substring(1));	  Number    str    =    getNumber(str.toUpperCase());    	non-compiled	[CE]  	3	None	replace
52	[BUG]  [BUGGY]  Number  str  =  getNumber(str.doubleValue());  [CE]  [FE]                  AssertionError      [CONTEXT]      public  static  Number  createNumber(String  str)  throws  NumberFormatException  {      [BUGGY]  Number  str  =  getNumber(str.doubleValue());  [BUGGY]      if  (str  ==  null)  {  return  null;  }  if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(     "A  blank  string  is  not  a  valid  number     ");  }  if  (str.startsWith(     "--     "))  {  return  null;  }  if  (str.startsWith(     "0x     ")  ||  str.startsWith(     "-0x     ")  ||  str.startsWith(     "0X     ")  ||  str.startsWith(     "-0X     "))  {  int  hexDigits  =  str.length()  -  2;  //  drop  0x  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  	projects/Lang7/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.5773502691896258	446	446	1	replace	Number  str  =  getNumber(str.doubleValue());	  Number    str    =    getNumber(str.toUpperCase());    	non-compiled	[CE]  	3	None	replace
53	[BUG]  [BUGGY]  Integer  str  =  createInteger(str.substring(0,  str.length()  -  1));  [CE]  [FE]            AssertionError      [CONTEXT]      public  static  Number  createNumber(String  str)  throws  NumberFormatException  {      [BUGGY]  Integer  str  =  createInteger(str.substring(0,  str.length()  -  1));  [BUGGY]      if  (str  ==  null)  {  return  null;  }  if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(     "A  blank  string  is  not  a  valid  number     ");  }  if  (str.startsWith(     "--     "))  {  return  null;  }  if  (str.startsWith(     "0x     ")  ||  str.startsWith(     "-0x     ")  ||  str.startsWith(     "0X     ")  ||  str.startsWith(     "-0X     "))  {  int  hexDigits  =  str.length()  -  2;  //  drop  0x  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  	projects/Lang7/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.5773502691896258	446	446	1	replace	Integer  str  =  createInteger(str.substring(0,  str.length()  -  1));	  Integer    str    =    createInteger(str.substring(1));    	non-compiled	[CE]  	48	None	replace
54	[BUG]  [BUGGY]  Integer  str  =  createInteger(str.substring(0,  str.length()  -  2));  [CE]  [FE]              AssertionError      [CONTEXT]      public  static  Number  createNumber(String  str)  throws  NumberFormatException  {      [BUGGY]  Integer  str  =  createInteger(str.substring(0,  str.length()  -  2));  [BUGGY]      if  (str  ==  null)  {  return  null;  }  if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(     "A  blank  string  is  not  a  valid  number     ");  }  if  (str.startsWith(     "--     "))  {  return  null;  }  if  (str.startsWith(     "0x     ")  ||  str.startsWith(     "-0x     ")  ||  str.startsWith(     "0X     ")  ||  str.startsWith(     "-0X     "))  {  int  hexDigits  =  str.length()  -  2;  //  drop  0x  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  	projects/Lang7/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.5773502691896258	446	446	1	replace	Integer  str  =  createInteger(str.substring(0,  str.length()  -  2));	  Integer    str    =    createInteger(str.substring(1));    	non-compiled	[CE]  	48	None	replace
55	[BUG]  [BUGGY]  Integer  str  =  createInteger(str.substring(2));  [CE]  [FE]                AssertionError      [CONTEXT]      public  static  Number  createNumber(String  str)  throws  NumberFormatException  {      [BUGGY]  Integer  str  =  createInteger(str.substring(2));  [BUGGY]      if  (str  ==  null)  {  return  null;  }  if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(     "A  blank  string  is  not  a  valid  number     ");  }  if  (str.startsWith(     "--     "))  {  return  null;  }  if  (str.startsWith(     "0x     ")  ||  str.startsWith(     "-0x     ")  ||  str.startsWith(     "0X     ")  ||  str.startsWith(     "-0X     "))  {  int  hexDigits  =  str.length()  -  2;  //  drop  0x  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  	projects/Lang7/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.5773502691896258	446	446	1	replace	Integer  str  =  createInteger(str.substring(2));	  Integer    str    =    createInteger(str.substring(1));    	non-compiled	[CE]  	48	None	replace
56	[BUG]  [BUGGY]  Integer  str  =  createInteger(str.substring(0,  str.length()));  [CE]  [FE]                  AssertionError      [CONTEXT]      public  static  Number  createNumber(String  str)  throws  NumberFormatException  {      [BUGGY]  Integer  str  =  createInteger(str.substring(0,  str.length()));  [BUGGY]      if  (str  ==  null)  {  return  null;  }  if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(     "A  blank  string  is  not  a  valid  number     ");  }  if  (str.startsWith(     "--     "))  {  return  null;  }  if  (str.startsWith(     "0x     ")  ||  str.startsWith(     "-0x     ")  ||  str.startsWith(     "0X     ")  ||  str.startsWith(     "-0X     "))  {  int  hexDigits  =  str.length()  -  2;  //  drop  0x  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  	projects/Lang7/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.5773502691896258	446	446	1	replace	Integer  str  =  createInteger(str.substring(0,  str.length()));	  Integer    str    =    createInteger(str.substring(1));    	non-compiled	[CE]  	48	None	replace
57	[BUG]  [BUGGY]  Number  str  =(Number)str.getKey();  [CE]  [FE]                AssertionError      [CONTEXT]      public  static  Number  createNumber(String  str)  throws  NumberFormatException  {      [BUGGY]  Number  str  =(Number)str.getKey();  [BUGGY]      if  (str  ==  null)  {  return  null;  }  if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(     "A  blank  string  is  not  a  valid  number     ");  }  if  (str.startsWith(     "--     "))  {  return  null;  }  if  (str.startsWith(     "0x     ")  ||  str.startsWith(     "-0x     ")  ||  str.startsWith(     "0X     ")  ||  str.startsWith(     "-0X     "))  {  int  hexDigits  =  str.length()  -  2;  //  drop  0x  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  	projects/Lang7/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.5773502691896258	446	446	1	replace	Number  str  =(Number)str.getKey();	  Number    str    =(Number)str.getValue();    	non-compiled	[CE]  	28	None	replace
58	[BUG]  [BUGGY]  NumberUtils.setBlank(str,  0);  [CE]  [FE]              AssertionError      [CONTEXT]      public  static  Number  createNumber(String  str)  throws  NumberFormatException  {      [BUGGY]  NumberUtils.setBlank(str,  0);  [BUGGY]      return  null;  }  if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(     "A  blank  string  is  not  a  valid  number     ");  }  if  (str.startsWith(     "--     "))  {  return  null;  }  if  (str.startsWith(     "0x     ")  ||  str.startsWith(     "-0x     ")  ||  str.startsWith(     "0X     ")  ||  str.startsWith(     "-0X     "))  {  int  hexDigits  =  str.length()  -  2;  //  drop  0x  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  	projects/Lang7/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.5773502691896258	446	446	1	replace	NumberUtils.setBlank(str,  0);	  NumberUtils.setBlank(str);    	non-compiled	[CE]  	37	None	replace
59	[BUG]  [BUGGY]  NumberUtils.setNumber(str);  [CE]  [FE]                AssertionError      [CONTEXT]      public  static  Number  createNumber(String  str)  throws  NumberFormatException  {      [BUGGY]  NumberUtils.setNumber(str);  [BUGGY]      return  null;  }  if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(     "A  blank  string  is  not  a  valid  number     ");  }  if  (str.startsWith(     "--     "))  {  return  null;  }  if  (str.startsWith(     "0x     ")  ||  str.startsWith(     "-0x     ")  ||  str.startsWith(     "0X     ")  ||  str.startsWith(     "-0X     "))  {  int  hexDigits  =  str.length()  -  2;  //  drop  0x  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  	projects/Lang7/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.5773502691896258	446	446	1	replace	NumberUtils.setNumber(str);	  NumberUtils.setBlank(str);    	non-compiled	[CE]  	37	None	replace
60	[BUG]  [BUGGY]  NumberUtils.setBlank(str,  false);  [CE]  [FE]                  AssertionError      [CONTEXT]      public  static  Number  createNumber(String  str)  throws  NumberFormatException  {      [BUGGY]  NumberUtils.setBlank(str,  false);  [BUGGY]      return  null;  }  if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(     "A  blank  string  is  not  a  valid  number     ");  }  if  (str.startsWith(     "--     "))  {  return  null;  }  if  (str.startsWith(     "0x     ")  ||  str.startsWith(     "-0x     ")  ||  str.startsWith(     "0X     ")  ||  str.startsWith(     "-0X     "))  {  int  hexDigits  =  str.length()  -  2;  //  drop  0x  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  	projects/Lang7/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.5773502691896258	446	446	1	replace	NumberUtils.setBlank(str,  false);	  NumberUtils.setBlank(str);    	non-compiled	[CE]  	37	None	replace
61	[BUG]  [BUGGY]  NumberUtils.setLength(str);  [CE]  [FE]                    AssertionError      [CONTEXT]      public  static  Number  createNumber(String  str)  throws  NumberFormatException  {      [BUGGY]  NumberUtils.setLength(str);  [BUGGY]      return  null;  }  if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(     "A  blank  string  is  not  a  valid  number     ");  }  if  (str.startsWith(     "--     "))  {  return  null;  }  if  (str.startsWith(     "0x     ")  ||  str.startsWith(     "-0x     ")  ||  str.startsWith(     "0X     ")  ||  str.startsWith(     "-0X     "))  {  int  hexDigits  =  str.length()  -  2;  //  drop  0x  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  	projects/Lang7/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.5773502691896258	446	446	1	replace	NumberUtils.setLength(str);	  NumberUtils.setBlank(str);    	non-compiled	[CE]  	37	None	replace
62	[BUG]  [BUGGY]  Number  str  =  createNumber(String.valueOf(str)+  2);  [CE]  [FE]            AssertionError      [CONTEXT]      public  static  Number  createNumber(String  str)  throws  NumberFormatException  {      [BUGGY]  Number  str  =  createNumber(String.valueOf(str)+  2);  [BUGGY]      if  (str  ==  null)  {  return  null;  }  if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(     "A  blank  string  is  not  a  valid  number     ");  }  if  (str.startsWith(     "--     "))  {  return  null;  }  if  (str.startsWith(     "0x     ")  ||  str.startsWith(     "-0x     ")  ||  str.startsWith(     "0X     ")  ||  str.startsWith(     "-0X     "))  {  int  hexDigits  =  str.length()  -  2;  //  drop  0x  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  	projects/Lang7/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.5773502691896258	446	446	1	replace	Number  str  =  createNumber(String.valueOf(str)+  2);	  Number    str    =    createNumber(String.valueOf(str)+    1);    	non-compiled	[CE]  	24	None	replace
63	[BUG]  [BUGGY]  Number  str  =  createNumber(String.valueOf(str)/  1);  [CE]  [FE]              AssertionError      [CONTEXT]      public  static  Number  createNumber(String  str)  throws  NumberFormatException  {      [BUGGY]  Number  str  =  createNumber(String.valueOf(str)/  1);  [BUGGY]      if  (str  ==  null)  {  return  null;  }  if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(     "A  blank  string  is  not  a  valid  number     ");  }  if  (str.startsWith(     "--     "))  {  return  null;  }  if  (str.startsWith(     "0x     ")  ||  str.startsWith(     "-0x     ")  ||  str.startsWith(     "0X     ")  ||  str.startsWith(     "-0X     "))  {  int  hexDigits  =  str.length()  -  2;  //  drop  0x  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  	projects/Lang7/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.5773502691896258	446	446	1	replace	Number  str  =  createNumber(String.valueOf(str)/  1);	  Number    str    =    createNumber(String.valueOf(str)+    1);    	non-compiled	[CE]  	24	None	replace
64	[BUG]  [BUGGY]  Number  str  =  createNumber(String.valueOf(str)+  3);  [CE]  [FE]                AssertionError      [CONTEXT]      public  static  Number  createNumber(String  str)  throws  NumberFormatException  {      [BUGGY]  Number  str  =  createNumber(String.valueOf(str)+  3);  [BUGGY]      if  (str  ==  null)  {  return  null;  }  if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(     "A  blank  string  is  not  a  valid  number     ");  }  if  (str.startsWith(     "--     "))  {  return  null;  }  if  (str.startsWith(     "0x     ")  ||  str.startsWith(     "-0x     ")  ||  str.startsWith(     "0X     ")  ||  str.startsWith(     "-0X     "))  {  int  hexDigits  =  str.length()  -  2;  //  drop  0x  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  	projects/Lang7/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.5773502691896258	446	446	1	replace	Number  str  =  createNumber(String.valueOf(str)+  3);	  Number    str    =    createNumber(String.valueOf(str)+    1);    	non-compiled	[CE]  	24	None	replace
65	[BUG]  [BUGGY]  Integer  str  =  createInteger(str.length()  -  1);  [CE]  [FE]            AssertionError      [CONTEXT]      public  static  Number  createNumber(String  str)  throws  NumberFormatException  {      [BUGGY]  Integer  str  =  createInteger(str.length()  -  1);  [BUGGY]      if  (str  ==  null)  {  return  null;  }  if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(     "A  blank  string  is  not  a  valid  number     ");  }  if  (str.startsWith(     "--     "))  {  return  null;  }  if  (str.startsWith(     "0x     ")  ||  str.startsWith(     "-0x     ")  ||  str.startsWith(     "0X     ")  ||  str.startsWith(     "-0X     "))  {  int  hexDigits  =  str.length()  -  2;  //  drop  0x  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  	projects/Lang7/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.5773502691896258	446	446	1	replace	Integer  str  =  createInteger(str.length()  -  1);	  Integer    str    =    createInteger(str.length());    	non-compiled	[CE]  	15	None	replace
66	[BUG]  [BUGGY]  Integer  str  =  createInteger(str.length()  -  2);  [CE]  [FE]              AssertionError      [CONTEXT]      public  static  Number  createNumber(String  str)  throws  NumberFormatException  {      [BUGGY]  Integer  str  =  createInteger(str.length()  -  2);  [BUGGY]      if  (str  ==  null)  {  return  null;  }  if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(     "A  blank  string  is  not  a  valid  number     ");  }  if  (str.startsWith(     "--     "))  {  return  null;  }  if  (str.startsWith(     "0x     ")  ||  str.startsWith(     "-0x     ")  ||  str.startsWith(     "0X     ")  ||  str.startsWith(     "-0X     "))  {  int  hexDigits  =  str.length()  -  2;  //  drop  0x  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  	projects/Lang7/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.5773502691896258	446	446	1	replace	Integer  str  =  createInteger(str.length()  -  2);	  Integer    str    =    createInteger(str.length());    	non-compiled	[CE]  	15	None	replace
67	[BUG]  [BUGGY]  Integer  str  =  createInteger(str.length()  +  1);  [CE]  [FE]                AssertionError      [CONTEXT]      public  static  Number  createNumber(String  str)  throws  NumberFormatException  {      [BUGGY]  Integer  str  =  createInteger(str.length()  +  1);  [BUGGY]      if  (str  ==  null)  {  return  null;  }  if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(     "A  blank  string  is  not  a  valid  number     ");  }  if  (str.startsWith(     "--     "))  {  return  null;  }  if  (str.startsWith(     "0x     ")  ||  str.startsWith(     "-0x     ")  ||  str.startsWith(     "0X     ")  ||  str.startsWith(     "-0X     "))  {  int  hexDigits  =  str.length()  -  2;  //  drop  0x  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  	projects/Lang7/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.5773502691896258	446	446	1	replace	Integer  str  =  createInteger(str.length()  +  1);	  Integer    str    =    createInteger(str.length());    	non-compiled	[CE]  	15	None	replace
68	[BUG]  [BUGGY]  Number  str  =(Number)str.toUpperCase();  [CE]  [FE]                AssertionError      [CONTEXT]      public  static  Number  createNumber(String  str)  throws  NumberFormatException  {      [BUGGY]  Number  str  =(Number)str.toUpperCase();  [BUGGY]      if  (str  ==  null)  {  return  null;  }  if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(     "A  blank  string  is  not  a  valid  number     ");  }  if  (str.startsWith(     "--     "))  {  return  null;  }  if  (str.startsWith(     "0x     ")  ||  str.startsWith(     "-0x     ")  ||  str.startsWith(     "0X     ")  ||  str.startsWith(     "-0X     "))  {  int  hexDigits  =  str.length()  -  2;  //  drop  0x  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  	projects/Lang7/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.5773502691896258	446	446	1	replace	Number  str  =(Number)str.toUpperCase();	  Number    str    =(Number)str.toLowerCase();    	non-compiled	[CE]  	40	None	replace
69	[BUG]  [BUGGY]  Number  str  =  createNumber(String.valueOf(str)+  1,  hexDigits);  [CE]  [FE]              AssertionError      [CONTEXT]      public  static  Number  createNumber(String  str)  throws  NumberFormatException  {      [BUGGY]  Number  str  =  createNumber(String.valueOf(str)+  1,  hexDigits);  [BUGGY]      if  (str  ==  null)  {  return  null;  }  if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(     "A  blank  string  is  not  a  valid  number     ");  }  if  (str.startsWith(     "--     "))  {  return  null;  }  if  (str.startsWith(     "0x     ")  ||  str.startsWith(     "-0x     ")  ||  str.startsWith(     "0X     ")  ||  str.startsWith(     "-0X     "))  {  int  hexDigits  =  str.length()  -  2;  //  drop  0x  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  	projects/Lang7/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.5773502691896258	446	446	1	replace	Number  str  =  createNumber(String.valueOf(str)+  1,  hexDigits);	  Number    str    =    createNumber(String.valueOf(str),    hexDigits);    	non-compiled	[CE]  	32	None	replace
70	[BUG]  [BUGGY]  Number  str  =  createNumber(String.valueOf(str),  hexDigits,  0);  [CE]  [FE]                AssertionError      [CONTEXT]      public  static  Number  createNumber(String  str)  throws  NumberFormatException  {      [BUGGY]  Number  str  =  createNumber(String.valueOf(str),  hexDigits,  0);  [BUGGY]      if  (str  ==  null)  {  return  null;  }  if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(     "A  blank  string  is  not  a  valid  number     ");  }  if  (str.startsWith(     "--     "))  {  return  null;  }  if  (str.startsWith(     "0x     ")  ||  str.startsWith(     "-0x     ")  ||  str.startsWith(     "0X     ")  ||  str.startsWith(     "-0X     "))  {  int  hexDigits  =  str.length()  -  2;  //  drop  0x  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  	projects/Lang7/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.5773502691896258	446	446	1	replace	Number  str  =  createNumber(String.valueOf(str),  hexDigits,  0);	  Number    str    =    createNumber(String.valueOf(str),    hexDigits);    	non-compiled	[CE]  	32	None	replace
71	[BUG]  [BUGGY]  Number  str  =  getNumber(str,  hexDigits,  0);  [CE]  [FE]              AssertionError      [CONTEXT]      public  static  Number  createNumber(String  str)  throws  NumberFormatException  {      [BUGGY]  Number  str  =  getNumber(str,  hexDigits,  0);  [BUGGY]      if  (str  ==  null)  {  return  null;  }  if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(     "A  blank  string  is  not  a  valid  number     ");  }  if  (str.startsWith(     "--     "))  {  return  null;  }  if  (str.startsWith(     "0x     ")  ||  str.startsWith(     "-0x     ")  ||  str.startsWith(     "0X     ")  ||  str.startsWith(     "-0X     "))  {  int  hexDigits  =  str.length()  -  2;  //  drop  0x  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  	projects/Lang7/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.5773502691896258	446	446	1	replace	Number  str  =  getNumber(str,  hexDigits,  0);	  Number    str    =    getNumber(str,    hexDigits);    	non-compiled	[CE]  	35	None	replace
72	[BUG]  [BUGGY]  Number  str  =  getNumber(str,  hexDigits,  1);  [CE]  [FE]                AssertionError      [CONTEXT]      public  static  Number  createNumber(String  str)  throws  NumberFormatException  {      [BUGGY]  Number  str  =  getNumber(str,  hexDigits,  1);  [BUGGY]      if  (str  ==  null)  {  return  null;  }  if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(     "A  blank  string  is  not  a  valid  number     ");  }  if  (str.startsWith(     "--     "))  {  return  null;  }  if  (str.startsWith(     "0x     ")  ||  str.startsWith(     "-0x     ")  ||  str.startsWith(     "0X     ")  ||  str.startsWith(     "-0X     "))  {  int  hexDigits  =  str.length()  -  2;  //  drop  0x  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  	projects/Lang7/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.5773502691896258	446	446	1	replace	Number  str  =  getNumber(str,  hexDigits,  1);	  Number    str    =    getNumber(str,    hexDigits);    	non-compiled	[CE]  	35	None	replace
73	[BUG]  [BUGGY]  Number  str  =  getNumber(str,  hexDigits,  exp);  [CE]  [FE]                  AssertionError      [CONTEXT]      public  static  Number  createNumber(String  str)  throws  NumberFormatException  {      [BUGGY]  Number  str  =  getNumber(str,  hexDigits,  exp);  [BUGGY]      if  (str  ==  null)  {  return  null;  }  if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(     "A  blank  string  is  not  a  valid  number     ");  }  if  (str.startsWith(     "--     "))  {  return  null;  }  if  (str.startsWith(     "0x     ")  ||  str.startsWith(     "-0x     ")  ||  str.startsWith(     "0X     ")  ||  str.startsWith(     "-0X     "))  {  int  hexDigits  =  str.length()  -  2;  //  drop  0x  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  	projects/Lang7/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.5773502691896258	446	446	1	replace	Number  str  =  getNumber(str,  hexDigits,  exp);	  Number    str    =    getNumber(str,    hexDigits);    	non-compiled	[CE]  	35	None	replace
74	[BUG]  [BUGGY]  String  str  =  str.substring(0,  str.length()  -  4);  [CE]  [FE]                AssertionError      [CONTEXT]      public  static  Number  createNumber(String  str)  throws  NumberFormatException  {      [BUGGY]  String  str  =  str.substring(0,  str.length()  -  4);  [BUGGY]      if  (str  ==  null)  {  return  null;  }  if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(     "A  blank  string  is  not  a  valid  number     ");  }  if  (str.startsWith(     "--     "))  {  return  null;  }  if  (str.startsWith(     "0x     ")  ||  str.startsWith(     "-0x     ")  ||  str.startsWith(     "0X     ")  ||  str.startsWith(     "-0X     "))  {  int  hexDigits  =  str.length()  -  2;  //  drop  0x  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  	projects/Lang7/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.5773502691896258	446	446	1	replace	String  str  =  str.substring(0,  str.length()  -  4);	  String    str    =    str.substring(0,    str.length());    	non-compiled	[CE]  	1	None	replace
75	[BUG]  [BUGGY]  Number  str  =  createNumber(str,  3);  [CE]  [FE]              AssertionError      [CONTEXT]      public  static  Number  createNumber(String  str)  throws  NumberFormatException  {      [BUGGY]  Number  str  =  createNumber(str,  3);  [BUGGY]      if  (str  ==  null)  {  return  null;  }  if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(     "A  blank  string  is  not  a  valid  number     ");  }  if  (str.startsWith(     "--     "))  {  return  null;  }  if  (str.startsWith(     "0x     ")  ||  str.startsWith(     "-0x     ")  ||  str.startsWith(     "0X     ")  ||  str.startsWith(     "-0X     "))  {  int  hexDigits  =  str.length()  -  2;  //  drop  0x  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  	projects/Lang7/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.5773502691896258	446	446	1	replace	Number  str  =  createNumber(str,  3);	  Number    str    =    createNumber(str,    1);    	non-compiled	[CE]  	10	None	replace
76	[BUG]  [BUGGY]  Number  str  =  getNumber(str.length()  -  1);  [CE]  [FE]                    AssertionError      [CONTEXT]      public  static  Number  createNumber(String  str)  throws  NumberFormatException  {      [BUGGY]  Number  str  =  getNumber(str.length()  -  1);  [BUGGY]      if  (str  ==  null)  {  return  null;  }  if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(     "A  blank  string  is  not  a  valid  number     ");  }  if  (str.startsWith(     "--     "))  {  return  null;  }  if  (str.startsWith(     "0x     ")  ||  str.startsWith(     "-0x     ")  ||  str.startsWith(     "0X     ")  ||  str.startsWith(     "-0X     "))  {  int  hexDigits  =  str.length()  -  2;  //  drop  0x  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  	projects/Lang7/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.5773502691896258	446	446	1	replace	Number  str  =  getNumber(str.length()  -  1);	  Number    str    =    getNumber(0);    	non-compiled	[CE]  	18	None	replace
77	[BUG]  [BUGGY]  Number  str  =  getNumber(str.length());  [CE]  [FE]                      AssertionError      [CONTEXT]      public  static  Number  createNumber(String  str)  throws  NumberFormatException  {      [BUGGY]  Number  str  =  getNumber(str.length());  [BUGGY]      if  (str  ==  null)  {  return  null;  }  if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(     "A  blank  string  is  not  a  valid  number     ");  }  if  (str.startsWith(     "--     "))  {  return  null;  }  if  (str.startsWith(     "0x     ")  ||  str.startsWith(     "-0x     ")  ||  str.startsWith(     "0X     ")  ||  str.startsWith(     "-0X     "))  {  int  hexDigits  =  str.length()  -  2;  //  drop  0x  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  	projects/Lang7/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.5773502691896258	446	446	1	replace	Number  str  =  getNumber(str.length());	  Number    str    =    getNumber(0);    	non-compiled	[CE]  	18	None	replace
78	[BUG]  [BUGGY]  Number  str  =  createNull(String.valueOf(str));  [CE]  [FE]            AssertionError      [CONTEXT]      public  static  Number  createNumber(String  str)  throws  NumberFormatException  {      [BUGGY]  Number  str  =  createNull(String.valueOf(str));  [BUGGY]      if  (str  ==  null)  {  return  null;  }  if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(     "A  blank  string  is  not  a  valid  number     ");  }  if  (str.startsWith(     "--     "))  {  return  null;  }  if  (str.startsWith(     "0x     ")  ||  str.startsWith(     "-0x     ")  ||  str.startsWith(     "0X     ")  ||  str.startsWith(     "-0X     "))  {  int  hexDigits  =  str.length()  -  2;  //  drop  0x  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  	projects/Lang7/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.5773502691896258	446	446	1	replace	Number  str  =  createNull(String.valueOf(str));	  Number    str    =    createShort(String.valueOf(str));    	non-compiled	[CE]  	41	None	replace
79	[BUG]  [BUGGY]  Number  str  =  createInteger(String.valueOf(str));  [CE]  [FE]              AssertionError      [CONTEXT]      public  static  Number  createNumber(String  str)  throws  NumberFormatException  {      [BUGGY]  Number  str  =  createInteger(String.valueOf(str));  [BUGGY]      if  (str  ==  null)  {  return  null;  }  if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(     "A  blank  string  is  not  a  valid  number     ");  }  if  (str.startsWith(     "--     "))  {  return  null;  }  if  (str.startsWith(     "0x     ")  ||  str.startsWith(     "-0x     ")  ||  str.startsWith(     "0X     ")  ||  str.startsWith(     "-0X     "))  {  int  hexDigits  =  str.length()  -  2;  //  drop  0x  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  	projects/Lang7/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.5773502691896258	446	446	1	replace	Number  str  =  createInteger(String.valueOf(str));	  Number    str    =    createShort(String.valueOf(str));    	non-compiled	[CE]  	41	None	replace
80	[BUG]  [BUGGY]  Number  str  =  getShortValue();  [CE]  [FE]                    AssertionError      [CONTEXT]      public  static  Number  createNumber(String  str)  throws  NumberFormatException  {      [BUGGY]  Number  str  =  getShortValue();  [BUGGY]      if  (str  ==  null)  {  return  null;  }  if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(     "A  blank  string  is  not  a  valid  number     ");  }  if  (str.startsWith(     "--     "))  {  return  null;  }  if  (str.startsWith(     "0x     ")  ||  str.startsWith(     "-0x     ")  ||  str.startsWith(     "0X     ")  ||  str.startsWith(     "-0X     "))  {  int  hexDigits  =  str.length()  -  2;  //  drop  0x  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  	projects/Lang7/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.5773502691896258	446	446	1	replace	Number  str  =  getShortValue();	  Number    str    =    getString();    	non-compiled	[CE]  	44	None	replace
81	[BUG]  [BUGGY]  Integer  str  =  createInteger(str,  1);  [CE]  [FE]                AssertionError      [CONTEXT]      public  static  Number  createNumber(String  str)  throws  NumberFormatException  {      [BUGGY]  Integer  str  =  createInteger(str,  1);  [BUGGY]      if  (str  ==  null)  {  return  null;  }  if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(     "A  blank  string  is  not  a  valid  number     ");  }  if  (str.startsWith(     "--     "))  {  return  null;  }  if  (str.startsWith(     "0x     ")  ||  str.startsWith(     "-0x     ")  ||  str.startsWith(     "0X     ")  ||  str.startsWith(     "-0X     "))  {  int  hexDigits  =  str.length()  -  2;  //  drop  0x  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  	projects/Lang7/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.5773502691896258	446	446	1	replace	Integer  str  =  createInteger(str,  1);	  Integer    str    =    createInteger(str,    0);    	non-compiled	[CE]  	17	None	replace
82	[BUG]  [BUGGY]  Integer  str  =  createInteger(str,  2);  [CE]  [FE]                  AssertionError      [CONTEXT]      public  static  Number  createNumber(String  str)  throws  NumberFormatException  {      [BUGGY]  Integer  str  =  createInteger(str,  2);  [BUGGY]      if  (str  ==  null)  {  return  null;  }  if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(     "A  blank  string  is  not  a  valid  number     ");  }  if  (str.startsWith(     "--     "))  {  return  null;  }  if  (str.startsWith(     "0x     ")  ||  str.startsWith(     "-0x     ")  ||  str.startsWith(     "0X     ")  ||  str.startsWith(     "-0X     "))  {  int  hexDigits  =  str.length()  -  2;  //  drop  0x  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  	projects/Lang7/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.5773502691896258	446	446	1	replace	Integer  str  =  createInteger(str,  2);	  Integer    str    =    createInteger(str,    0);    	non-compiled	[CE]  	17	None	replace
83	[BUG]  [BUGGY]  Integer  str  =  createInteger(1);  [CE]  [FE]              AssertionError      [CONTEXT]      public  static  Number  createNumber(String  str)  throws  NumberFormatException  {      [BUGGY]  Integer  str  =  createInteger(1);  [BUGGY]      if  (str  ==  null)  {  return  null;  }  if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(     "A  blank  string  is  not  a  valid  number     ");  }  if  (str.startsWith(     "--     "))  {  return  null;  }  if  (str.startsWith(     "0x     ")  ||  str.startsWith(     "-0x     ")  ||  str.startsWith(     "0X     ")  ||  str.startsWith(     "-0X     "))  {  int  hexDigits  =  str.length()  -  2;  //  drop  0x  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  	projects/Lang7/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.5773502691896258	446	446	1	replace	Integer  str  =  createInteger(1);	  Integer    str    =    createInteger(0);    	non-compiled	[CE]  	16	None	replace
84	[BUG]  [BUGGY]  if(str  ==  null  ||  str.startsWith( "0x ")||  str.startsWith( "-0x "))  {  [CE]  ')'  expected  [FE]              AssertionError      [CONTEXT]      public  static  Number  createNumber(String  str)  throws  NumberFormatException  {      [BUGGY]  if(str  ==  null  ||  str.startsWith( "0x ")||  str.startsWith( "-0x "))  {  [BUGGY]      return  null;  }  if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(     "A  blank  string  is  not  a  valid  number     ");  }  if  (str.startsWith(     "--     "))  {  return  null;  }  if  (str.startsWith(     "0x     ")  ||  str.startsWith(     "-0x     ")  ||  str.startsWith(     "0X     ")  ||  str.startsWith(     "-0X     "))  {  int  hexDigits  =  str.length()  -  2;  //  drop  0x  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  	projects/Lang7/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.5773502691896258	446	446	1	replace	if(str  ==  null  ||  str.startsWith( "0x ")||  str.startsWith( "-0x "))  {	  if(str    ==    null    ||    str.startsWith(   "0x   "))    {    	non-compiled	[CE]  ')'  expected	7	None	replace
85	[BUG]  [BUGGY]  Number  str  =  createNumber(String.valueOf(hexDigits),  str);  [CE]  [FE]              AssertionError      [CONTEXT]      public  static  Number  createNumber(String  str)  throws  NumberFormatException  {      [BUGGY]  Number  str  =  createNumber(String.valueOf(hexDigits),  str);  [BUGGY]      if  (str  ==  null)  {  return  null;  }  if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(     "A  blank  string  is  not  a  valid  number     ");  }  if  (str.startsWith(     "--     "))  {  return  null;  }  if  (str.startsWith(     "0x     ")  ||  str.startsWith(     "-0x     ")  ||  str.startsWith(     "0X     ")  ||  str.startsWith(     "-0X     "))  {  int  hexDigits  =  str.length()  -  2;  //  drop  0x  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  	projects/Lang7/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.5773502691896258	446	446	1	replace	Number  str  =  createNumber(String.valueOf(hexDigits),  str);	  Number    str    =    createNumber(String.valueOf(str),    hexDigits);    	non-compiled	[CE]  	32	None	replace
86	[BUG]  [BUGGY]  NumberUtils.setBlank(new  Long(str));  [CE]  [FE]              AssertionError      [CONTEXT]      public  static  Number  createNumber(String  str)  throws  NumberFormatException  {      [BUGGY]  NumberUtils.setBlank(new  Long(str));  [BUGGY]      return  null;  }  if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(     "A  blank  string  is  not  a  valid  number     ");  }  if  (str.startsWith(     "--     "))  {  return  null;  }  if  (str.startsWith(     "0x     ")  ||  str.startsWith(     "-0x     ")  ||  str.startsWith(     "0X     ")  ||  str.startsWith(     "-0X     "))  {  int  hexDigits  =  str.length()  -  2;  //  drop  0x  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  	projects/Lang7/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.5773502691896258	446	446	1	replace	NumberUtils.setBlank(new  Long(str));	  NumberUtils.setBlank(str);    	non-compiled	[CE]  	37	None	replace
87	[BUG]  [BUGGY]  Number  str  =  createNumber(str,  hexDigits  +  1);  [CE]  [FE]            AssertionError      [CONTEXT]      public  static  Number  createNumber(String  str)  throws  NumberFormatException  {      [BUGGY]  Number  str  =  createNumber(str,  hexDigits  +  1);  [BUGGY]      if  (str  ==  null)  {  return  null;  }  if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(     "A  blank  string  is  not  a  valid  number     ");  }  if  (str.startsWith(     "--     "))  {  return  null;  }  if  (str.startsWith(     "0x     ")  ||  str.startsWith(     "-0x     ")  ||  str.startsWith(     "0X     ")  ||  str.startsWith(     "-0X     "))  {  int  hexDigits  =  str.length()  -  2;  //  drop  0x  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  	projects/Lang7/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.5773502691896258	446	446	1	replace	Number  str  =  createNumber(str,  hexDigits  +  1);	  Number    str    =    createNumber(str,    hexDigits);    	non-compiled	[CE]  	22	None	replace
88	[BUG]  [BUGGY]  Number  str  =  createNumber(str,  hexDigits,  1);  [CE]  [FE]              AssertionError      [CONTEXT]      public  static  Number  createNumber(String  str)  throws  NumberFormatException  {      [BUGGY]  Number  str  =  createNumber(str,  hexDigits,  1);  [BUGGY]      if  (str  ==  null)  {  return  null;  }  if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(     "A  blank  string  is  not  a  valid  number     ");  }  if  (str.startsWith(     "--     "))  {  return  null;  }  if  (str.startsWith(     "0x     ")  ||  str.startsWith(     "-0x     ")  ||  str.startsWith(     "0X     ")  ||  str.startsWith(     "-0X     "))  {  int  hexDigits  =  str.length()  -  2;  //  drop  0x  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  	projects/Lang7/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.5773502691896258	446	446	1	replace	Number  str  =  createNumber(str,  hexDigits,  1);	  Number    str    =    createNumber(str,    hexDigits);    	non-compiled	[CE]  	22	None	replace
89	[BUG]  [BUGGY]  Number  str  =  createNumber(String.valueOf(hexDigits  +  1));  [CE]  [FE]            AssertionError      [CONTEXT]      public  static  Number  createNumber(String  str)  throws  NumberFormatException  {      [BUGGY]  Number  str  =  createNumber(String.valueOf(hexDigits  +  1));  [BUGGY]      if  (str  ==  null)  {  return  null;  }  if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(     "A  blank  string  is  not  a  valid  number     ");  }  if  (str.startsWith(     "--     "))  {  return  null;  }  if  (str.startsWith(     "0x     ")  ||  str.startsWith(     "-0x     ")  ||  str.startsWith(     "0X     ")  ||  str.startsWith(     "-0X     "))  {  int  hexDigits  =  str.length()  -  2;  //  drop  0x  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  	projects/Lang7/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.5773502691896258	446	446	1	replace	Number  str  =  createNumber(String.valueOf(hexDigits  +  1));	  Number    str    =    createNumber(String.valueOf(hexDigits));    	non-compiled	[CE]  	31	None	replace
90	[BUG]  [BUGGY]  Number  str  =  createNumber(String.valueOf(hexDigits)+  1);  [CE]  [FE]              AssertionError      [CONTEXT]      public  static  Number  createNumber(String  str)  throws  NumberFormatException  {      [BUGGY]  Number  str  =  createNumber(String.valueOf(hexDigits)+  1);  [BUGGY]      if  (str  ==  null)  {  return  null;  }  if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(     "A  blank  string  is  not  a  valid  number     ");  }  if  (str.startsWith(     "--     "))  {  return  null;  }  if  (str.startsWith(     "0x     ")  ||  str.startsWith(     "-0x     ")  ||  str.startsWith(     "0X     ")  ||  str.startsWith(     "-0X     "))  {  int  hexDigits  =  str.length()  -  2;  //  drop  0x  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  	projects/Lang7/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.5773502691896258	446	446	1	replace	Number  str  =  createNumber(String.valueOf(hexDigits)+  1);	  Number    str    =    createNumber(String.valueOf(hexDigits));    	non-compiled	[CE]  	31	None	replace
91	[BUG]  [BUGGY]  Number  str  =  getNumber(String.valueOf(hexDigits));  [CE]  [FE]              AssertionError      [CONTEXT]      public  static  Number  createNumber(String  str)  throws  NumberFormatException  {      [BUGGY]  Number  str  =  getNumber(String.valueOf(hexDigits));  [BUGGY]      if  (str  ==  null)  {  return  null;  }  if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(     "A  blank  string  is  not  a  valid  number     ");  }  if  (str.startsWith(     "--     "))  {  return  null;  }  if  (str.startsWith(     "0x     ")  ||  str.startsWith(     "-0x     ")  ||  str.startsWith(     "0X     ")  ||  str.startsWith(     "-0X     "))  {  int  hexDigits  =  str.length()  -  2;  //  drop  0x  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  	projects/Lang7/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.5773502691896258	446	446	1	replace	Number  str  =  getNumber(String.valueOf(hexDigits));	  Number    str    =    getNumber(String.valueOf(str));    	non-compiled	[CE]  	25	None	replace
92	[BUG]  [BUGGY]  String  str  =  str.substring(0,  str.length()  -  2)+  1;  [CE]  [FE]              AssertionError      [CONTEXT]      public  static  Number  createNumber(String  str)  throws  NumberFormatException  {      [BUGGY]  String  str  =  str.substring(0,  str.length()  -  2)+  1;  [BUGGY]      if  (str  ==  null)  {  return  null;  }  if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(     "A  blank  string  is  not  a  valid  number     ");  }  if  (str.startsWith(     "--     "))  {  return  null;  }  if  (str.startsWith(     "0x     ")  ||  str.startsWith(     "-0x     ")  ||  str.startsWith(     "0X     ")  ||  str.startsWith(     "-0X     "))  {  int  hexDigits  =  str.length()  -  2;  //  drop  0x  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  	projects/Lang7/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.5773502691896258	446	446	1	replace	String  str  =  str.substring(0,  str.length()  -  2)+  1;	  String    str    =    str.substring(0,    str.length())+    1;    	non-compiled	[CE]  	43	None	replace
93	[BUG]  [BUGGY]  Number  str  =  getNumberValue(str,  hexDigits);  [CE]  [FE]                AssertionError      [CONTEXT]      public  static  Number  createNumber(String  str)  throws  NumberFormatException  {      [BUGGY]  Number  str  =  getNumberValue(str,  hexDigits);  [BUGGY]      return  null;  }  if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(     "A  blank  string  is  not  a  valid  number     ");  }  if  (str.startsWith(     "--     "))  {  return  null;  }  if  (str.startsWith(     "0x     ")  ||  str.startsWith(     "-0x     ")  ||  str.startsWith(     "0X     ")  ||  str.startsWith(     "-0X     "))  {  int  hexDigits  =  str.length()  -  2;  //  drop  0x  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  	projects/Lang7/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.5773502691896258	446	446	1	replace	Number  str  =  getNumberValue(str,  hexDigits);	  Number    str    =    getNumberValue(str);    	non-compiled	[CE]  	21	None	replace
94	[BUG]  [BUGGY]  Number  str  =(Number)str.toLowerCase(LONG_ZERO);  [CE]  [FE]                AssertionError      [CONTEXT]      public  static  Number  createNumber(String  str)  throws  NumberFormatException  {      [BUGGY]  Number  str  =(Number)str.toLowerCase(LONG_ZERO);  [BUGGY]      if  (str  ==  null)  {  return  null;  }  if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(     "A  blank  string  is  not  a  valid  number     ");  }  if  (str.startsWith(     "--     "))  {  return  null;  }  if  (str.startsWith(     "0x     ")  ||  str.startsWith(     "-0x     ")  ||  str.startsWith(     "0X     ")  ||  str.startsWith(     "-0X     "))  {  int  hexDigits  =  str.length()  -  2;  //  drop  0x  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  	projects/Lang7/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.5773502691896258	446	446	1	replace	Number  str  =(Number)str.toLowerCase(LONG_ZERO);	  Number    str    =(Number)str.toLowerCase();    	non-compiled	[CE]  	40	None	replace
95	[BUG]  [BUGGY]  Number  str  =  getBigIntegerValue();  [CE]  [FE]                    AssertionError      [CONTEXT]      public  static  Number  createNumber(String  str)  throws  NumberFormatException  {      [BUGGY]  Number  str  =  getBigIntegerValue();  [BUGGY]      if  (str  ==  null)  {  return  null;  }  if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(     "A  blank  string  is  not  a  valid  number     ");  }  if  (str.startsWith(     "--     "))  {  return  null;  }  if  (str.startsWith(     "0x     ")  ||  str.startsWith(     "-0x     ")  ||  str.startsWith(     "0X     ")  ||  str.startsWith(     "-0X     "))  {  int  hexDigits  =  str.length()  -  2;  //  drop  0x  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  	projects/Lang7/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.5773502691896258	446	446	1	replace	Number  str  =  getBigIntegerValue();	  Number    str    =    getLongValue();    	non-compiled	[CE]  	14	None	replace
96	[BUG]  [BUGGY]  if(str  ==  null  ||  str.startsWith( "00.0 "))  {  [CE]  ')'  expected  [FE]                  AssertionError      [CONTEXT]      public  static  Number  createNumber(String  str)  throws  NumberFormatException  {      [BUGGY]  if(str  ==  null  ||  str.startsWith( "00.0 "))  {  [BUGGY]      return  null;  }  if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(     "A  blank  string  is  not  a  valid  number     ");  }  if  (str.startsWith(     "--     "))  {  return  null;  }  if  (str.startsWith(     "0x     ")  ||  str.startsWith(     "-0x     ")  ||  str.startsWith(     "0X     ")  ||  str.startsWith(     "-0X     "))  {  int  hexDigits  =  str.length()  -  2;  //  drop  0x  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  	projects/Lang7/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.5773502691896258	446	446	1	replace	if(str  ==  null  ||  str.startsWith( "00.0 "))  {	  if(str!=    null    ||    str.startsWith(   "0   "))    {    	non-compiled	[CE]  ')'  expected	9	None	replace
97	[BUG]  [BUGGY]  Number  str  =  createNumber(String.valueOf(str)+  1,  0);  [CE]  [FE]                AssertionError      [CONTEXT]      public  static  Number  createNumber(String  str)  throws  NumberFormatException  {      [BUGGY]  Number  str  =  createNumber(String.valueOf(str)+  1,  0);  [BUGGY]      if  (str  ==  null)  {  return  null;  }  if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(     "A  blank  string  is  not  a  valid  number     ");  }  if  (str.startsWith(     "--     "))  {  return  null;  }  if  (str.startsWith(     "0x     ")  ||  str.startsWith(     "-0x     ")  ||  str.startsWith(     "0X     ")  ||  str.startsWith(     "-0X     "))  {  int  hexDigits  =  str.length()  -  2;  //  drop  0x  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  	projects/Lang7/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.5773502691896258	446	446	1	replace	Number  str  =  createNumber(String.valueOf(str)+  1,  0);	  Number    str    =    createNumber(String.valueOf(str),    0);    	non-compiled	[CE]  	26	None	replace
98	[BUG]  [BUGGY]  Number  str  =  getNumber(str.substring(0,  str.length()  -  2));  [CE]  [FE]                AssertionError      [CONTEXT]      public  static  Number  createNumber(String  str)  throws  NumberFormatException  {      [BUGGY]  Number  str  =  getNumber(str.substring(0,  str.length()  -  2));  [BUGGY]      if  (str  ==  null)  {  return  null;  }  if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(     "A  blank  string  is  not  a  valid  number     ");  }  if  (str.startsWith(     "--     "))  {  return  null;  }  if  (str.startsWith(     "0x     ")  ||  str.startsWith(     "-0x     ")  ||  str.startsWith(     "0X     ")  ||  str.startsWith(     "-0X     "))  {  int  hexDigits  =  str.length()  -  2;  //  drop  0x  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  	projects/Lang7/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.5773502691896258	446	446	1	replace	Number  str  =  getNumber(str.substring(0,  str.length()  -  2));	  Number    str    =    getNumber(str.substring(0,    str.length()    -    1));    	non-compiled	[CE]  	4	None	replace
99	[BUG]  [BUGGY]  Integer  str  =  createBigInteger(0);  [CE]  [FE]              AssertionError      [CONTEXT]      public  static  Number  createNumber(String  str)  throws  NumberFormatException  {      [BUGGY]  Integer  str  =  createBigInteger(0);  [BUGGY]      if  (str  ==  null)  {  return  null;  }  if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(     "A  blank  string  is  not  a  valid  number     ");  }  if  (str.startsWith(     "--     "))  {  return  null;  }  if  (str.startsWith(     "0x     ")  ||  str.startsWith(     "-0x     ")  ||  str.startsWith(     "0X     ")  ||  str.startsWith(     "-0X     "))  {  int  hexDigits  =  str.length()  -  2;  //  drop  0x  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  	projects/Lang7/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.5773502691896258	446	446	1	replace	Integer  str  =  createBigInteger(0);	  Integer    str    =    createInteger(0);    	non-compiled	[CE]  	16	None	replace
100	[BUG]  [BUGGY]  Number  str  =  createBigInteger(String.valueOf(str));  [CE]  [FE]            AssertionError      [CONTEXT]      public  static  Number  createNumber(String  str)  throws  NumberFormatException  {      [BUGGY]  Number  str  =  createBigInteger(String.valueOf(str));  [BUGGY]      if  (str  ==  null)  {  return  null;  }  if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(     "A  blank  string  is  not  a  valid  number     ");  }  if  (str.startsWith(     "--     "))  {  return  null;  }  if  (str.startsWith(     "0x     ")  ||  str.startsWith(     "-0x     ")  ||  str.startsWith(     "0X     ")  ||  str.startsWith(     "-0X     "))  {  int  hexDigits  =  str.length()  -  2;  //  drop  0x  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  	projects/Lang7/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.5773502691896258	446	446	1	replace	Number  str  =  createBigInteger(String.valueOf(str));	  Number    str    =    createShort(String.valueOf(str));    	non-compiled	[CE]  	41	None	replace
101	[BUG]  [BUGGY]  Integer  str  =  createBigInteger(str,  0);  [CE]  [FE]                AssertionError      [CONTEXT]      public  static  Number  createNumber(String  str)  throws  NumberFormatException  {      [BUGGY]  Integer  str  =  createBigInteger(str,  0);  [BUGGY]      if  (str  ==  null)  {  return  null;  }  if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(     "A  blank  string  is  not  a  valid  number     ");  }  if  (str.startsWith(     "--     "))  {  return  null;  }  if  (str.startsWith(     "0x     ")  ||  str.startsWith(     "-0x     ")  ||  str.startsWith(     "0X     ")  ||  str.startsWith(     "-0X     "))  {  int  hexDigits  =  str.length()  -  2;  //  drop  0x  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  	projects/Lang7/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.5773502691896258	446	446	1	replace	Integer  str  =  createBigInteger(str,  0);	  Integer    str    =    createInteger(str,    0);    	non-compiled	[CE]  	17	None	replace
102	[BUG]  [BUGGY]  Number  str  =  getNumber(str,  hexDigits  +  1);  [CE]  [FE]              AssertionError      [CONTEXT]      public  static  Number  createNumber(String  str)  throws  NumberFormatException  {      [BUGGY]  Number  str  =  getNumber(str,  hexDigits  +  1);  [BUGGY]      if  (str  ==  null)  {  return  null;  }  if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(     "A  blank  string  is  not  a  valid  number     ");  }  if  (str.startsWith(     "--     "))  {  return  null;  }  if  (str.startsWith(     "0x     ")  ||  str.startsWith(     "-0x     ")  ||  str.startsWith(     "0X     ")  ||  str.startsWith(     "-0X     "))  {  int  hexDigits  =  str.length()  -  2;  //  drop  0x  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  	projects/Lang7/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.5773502691896258	446	446	1	replace	Number  str  =  getNumber(str,  hexDigits  +  1);	  Number    str    =    getNumber(str,    hexDigits);    	non-compiled	[CE]  	35	None	replace
103	[BUG]  [BUGGY]  Number  str  =  getNumber(str.substring(2));  [CE]  [FE]              AssertionError      [CONTEXT]      public  static  Number  createNumber(String  str)  throws  NumberFormatException  {      [BUGGY]  Number  str  =  getNumber(str.substring(2));  [BUGGY]      if  (str  ==  null)  {  return  null;  }  if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(     "A  blank  string  is  not  a  valid  number     ");  }  if  (str.startsWith(     "--     "))  {  return  null;  }  if  (str.startsWith(     "0x     ")  ||  str.startsWith(     "-0x     ")  ||  str.startsWith(     "0X     ")  ||  str.startsWith(     "-0X     "))  {  int  hexDigits  =  str.length()  -  2;  //  drop  0x  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  	projects/Lang7/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.5773502691896258	446	446	1	replace	Number  str  =  getNumber(str.substring(2));	  Number    str    =    getNumber(str.toUpperCase());    	non-compiled	[CE]  	3	None	replace
104	[BUG]  [BUGGY]  if(str  ==  null  ||  str.length()  <  0)  {  [CE]  ')'  expected  [FE]            AssertionError      [CONTEXT]      public  static  Number  createNumber(String  str)  throws  NumberFormatException  {      [BUGGY]  if(str  ==  null  ||  str.length()  <  0)  {  [BUGGY]      return  null;  }  if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(     "A  blank  string  is  not  a  valid  number     ");  }  if  (str.startsWith(     "--     "))  {  return  null;  }  if  (str.startsWith(     "0x     ")  ||  str.startsWith(     "-0x     ")  ||  str.startsWith(     "0X     ")  ||  str.startsWith(     "-0X     "))  {  int  hexDigits  =  str.length()  -  2;  //  drop  0x  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  	projects/Lang7/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.5773502691896258	446	446	1	replace	if(str  ==  null  ||  str.length()  <  0)  {	  if(str    ==    null    ||    str.length()    <    =    0)    {    	non-compiled	[CE]  ')'  expected	49	None	replace
105	[BUG]  [BUGGY]  String  str  =  str.substring(0,  str.length()  -  3);  [CE]  [FE]                AssertionError      [CONTEXT]      public  static  Number  createNumber(String  str)  throws  NumberFormatException  {      [BUGGY]  String  str  =  str.substring(0,  str.length()  -  3);  [BUGGY]      if  (str  ==  null)  {  return  null;  }  if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(     "A  blank  string  is  not  a  valid  number     ");  }  if  (str.startsWith(     "--     "))  {  return  null;  }  if  (str.startsWith(     "0x     ")  ||  str.startsWith(     "-0x     ")  ||  str.startsWith(     "0X     ")  ||  str.startsWith(     "-0X     "))  {  int  hexDigits  =  str.length()  -  2;  //  drop  0x  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  	projects/Lang7/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.5773502691896258	446	446	1	replace	String  str  =  str.substring(0,  str.length()  -  3);	  String    str    =    str.substring(0,    str.length());    	non-compiled	[CE]  	1	None	replace
106	[BUG]  [BUGGY]  Number  str  =  getValue(str);  [CE]  [FE]                AssertionError      [CONTEXT]      public  static  Number  createNumber(String  str)  throws  NumberFormatException  {      [BUGGY]  Number  str  =  getValue(str);  [BUGGY]      return  null;  }  if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(     "A  blank  string  is  not  a  valid  number     ");  }  if  (str.startsWith(     "--     "))  {  return  null;  }  if  (str.startsWith(     "0x     ")  ||  str.startsWith(     "-0x     ")  ||  str.startsWith(     "0X     ")  ||  str.startsWith(     "-0X     "))  {  int  hexDigits  =  str.length()  -  2;  //  drop  0x  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  	projects/Lang7/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.5773502691896258	446	446	1	replace	Number  str  =  getValue(str);	  Number    str    =    getNumberValue(str);    	non-compiled	[CE]  	21	None	replace
107	[BUG]  [BUGGY]  if(str  ==  null  ||  str.endsWith( ".0 "))  {  [CE]  ')'  expected  [FE]                  AssertionError      [CONTEXT]      public  static  Number  createNumber(String  str)  throws  NumberFormatException  {      [BUGGY]  if(str  ==  null  ||  str.endsWith( ".0 "))  {  [BUGGY]      return  null;  }  if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(     "A  blank  string  is  not  a  valid  number     ");  }  if  (str.startsWith(     "--     "))  {  return  null;  }  if  (str.startsWith(     "0x     ")  ||  str.startsWith(     "-0x     ")  ||  str.startsWith(     "0X     ")  ||  str.startsWith(     "-0X     "))  {  int  hexDigits  =  str.length()  -  2;  //  drop  0x  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  	projects/Lang7/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.5773502691896258	446	446	1	replace	if(str  ==  null  ||  str.endsWith( ".0 "))  {	  if(str!=    null    ||    str.startsWith(   "0   "))    {    	non-compiled	[CE]  ')'  expected	9	None	replace
108	[BUG]  [BUGGY]  int  decPos  =  str.lastIndexOf('.');  [CE]  [FE]              AssertionError      [CONTEXT]      public  static  Number  createNumber(String  str)  throws  NumberFormatException  {      [BUGGY]  int  decPos  =  str.lastIndexOf('.');  [BUGGY]      return  null;  }  if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(     "A  blank  string  is  not  a  valid  number     ");  }  if  (str.startsWith(     "--     "))  {  return  null;  }  if  (str.startsWith(     "0x     ")  ||  str.startsWith(     "-0x     ")  ||  str.startsWith(     "0X     ")  ||  str.startsWith(     "-0X     "))  {  int  hexDigits  =  str.length()  -  2;  //  drop  0x  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  	projects/Lang7/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.5773502691896258	446	446	1	replace	int  decPos  =  str.lastIndexOf('.');	  int    decPos    =    str.length();    	non-compiled	[CE]  	20	None	replace
109	[BUG]  [BUGGY]  Number  str  =  getStringValue(str);  [CE]  [FE]                  AssertionError      [CONTEXT]      public  static  Number  createNumber(String  str)  throws  NumberFormatException  {      [BUGGY]  Number  str  =  getStringValue(str);  [BUGGY]      if  (str  ==  null)  {  return  null;  }  if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(     "A  blank  string  is  not  a  valid  number     ");  }  if  (str.startsWith(     "--     "))  {  return  null;  }  if  (str.startsWith(     "0x     ")  ||  str.startsWith(     "-0x     ")  ||  str.startsWith(     "0X     ")  ||  str.startsWith(     "-0X     "))  {  int  hexDigits  =  str.length()  -  2;  //  drop  0x  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  	projects/Lang7/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.5773502691896258	446	446	1	replace	Number  str  =  getStringValue(str);	  Number    str    =    getStringValue();    	non-compiled	[CE]  	47	None	replace
110	[BUG]  [BUGGY]  Number  str  =(Number)str.substring(2);  [CE]  [FE]                  AssertionError      [CONTEXT]      public  static  Number  createNumber(String  str)  throws  NumberFormatException  {      [BUGGY]  Number  str  =(Number)str.substring(2);  [BUGGY]      if  (str  ==  null)  {  return  null;  }  if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(     "A  blank  string  is  not  a  valid  number     ");  }  if  (str.startsWith(     "--     "))  {  return  null;  }  if  (str.startsWith(     "0x     ")  ||  str.startsWith(     "-0x     ")  ||  str.startsWith(     "0X     ")  ||  str.startsWith(     "-0X     "))  {  int  hexDigits  =  str.length()  -  2;  //  drop  0x  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  	projects/Lang7/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.5773502691896258	446	446	1	replace	Number  str  =(Number)str.substring(2);	  Number    str    =(Number)str.toCharArray();    	non-compiled	[CE]  	29	None	replace
111	[BUG]  [BUGGY]  Number  str  =(Number)this.str.toCharArray();  [CE]  [FE]                AssertionError      [CONTEXT]      public  static  Number  createNumber(String  str)  throws  NumberFormatException  {      [BUGGY]  Number  str  =(Number)this.str.toCharArray();  [BUGGY]      if  (str  ==  null)  {  return  null;  }  if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(     "A  blank  string  is  not  a  valid  number     ");  }  if  (str.startsWith(     "--     "))  {  return  null;  }  if  (str.startsWith(     "0x     ")  ||  str.startsWith(     "-0x     ")  ||  str.startsWith(     "0X     ")  ||  str.startsWith(     "-0X     "))  {  int  hexDigits  =  str.length()  -  2;  //  drop  0x  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  	projects/Lang7/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.5773502691896258	446	446	1	replace	Number  str  =(Number)this.str.toCharArray();	  Number    str    =(Number)this.str.clone();    	non-compiled	[CE]  	42	None	replace
112	[BUG]  [BUGGY]  Integer  str  =  createInteger(str.substring(2,  str.length()));  [CE]  [FE]            AssertionError      [CONTEXT]      public  static  Number  createNumber(String  str)  throws  NumberFormatException  {      [BUGGY]  Integer  str  =  createInteger(str.substring(2,  str.length()));  [BUGGY]      if  (str  ==  null)  {  return  null;  }  if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(     "A  blank  string  is  not  a  valid  number     ");  }  if  (str.startsWith(     "--     "))  {  return  null;  }  if  (str.startsWith(     "0x     ")  ||  str.startsWith(     "-0x     ")  ||  str.startsWith(     "0X     ")  ||  str.startsWith(     "-0X     "))  {  int  hexDigits  =  str.length()  -  2;  //  drop  0x  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  	projects/Lang7/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.5773502691896258	446	446	1	replace	Integer  str  =  createInteger(str.substring(2,  str.length()));	  Integer    str    =    createInteger(str.substring(1));    	non-compiled	[CE]  	48	None	replace
113	[BUG]  [BUGGY]  Integer  str  =  createFloat(str);  [CE]  [FE]              AssertionError      [CONTEXT]      public  static  Number  createNumber(String  str)  throws  NumberFormatException  {      [BUGGY]  Integer  str  =  createFloat(str);  [BUGGY]      if  (str  ==  null)  {  return  null;  }  if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(     "A  blank  string  is  not  a  valid  number     ");  }  if  (str.startsWith(     "--     "))  {  return  null;  }  if  (str.startsWith(     "0x     ")  ||  str.startsWith(     "-0x     ")  ||  str.startsWith(     "0X     ")  ||  str.startsWith(     "-0X     "))  {  int  hexDigits  =  str.length()  -  2;  //  drop  0x  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  	projects/Lang7/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.5773502691896258	446	446	1	replace	Integer  str  =  createFloat(str);	  Integer    str    =    createInteger(0);    	non-compiled	[CE]  	16	None	replace
114	[BUG]  [BUGGY]  Number  str  =  createInt(String.valueOf(str));  [CE]  [FE]            AssertionError      [CONTEXT]      public  static  Number  createNumber(String  str)  throws  NumberFormatException  {      [BUGGY]  Number  str  =  createInt(String.valueOf(str));  [BUGGY]      if  (str  ==  null)  {  return  null;  }  if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(     "A  blank  string  is  not  a  valid  number     ");  }  if  (str.startsWith(     "--     "))  {  return  null;  }  if  (str.startsWith(     "0x     ")  ||  str.startsWith(     "-0x     ")  ||  str.startsWith(     "0X     ")  ||  str.startsWith(     "-0X     "))  {  int  hexDigits  =  str.length()  -  2;  //  drop  0x  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  	projects/Lang7/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.5773502691896258	446	446	1	replace	Number  str  =  createInt(String.valueOf(str));	  Number    str    =    createShort(String.valueOf(str));    	non-compiled	[CE]  	41	None	replace
115	[BUG]  [BUGGY]  NumberUtils.setBlank(str,  1.0);  [CE]  [FE]              AssertionError      [CONTEXT]      public  static  Number  createNumber(String  str)  throws  NumberFormatException  {      [BUGGY]  NumberUtils.setBlank(str,  1.0);  [BUGGY]      return  null;  }  if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(     "A  blank  string  is  not  a  valid  number     ");  }  if  (str.startsWith(     "--     "))  {  return  null;  }  if  (str.startsWith(     "0x     ")  ||  str.startsWith(     "-0x     ")  ||  str.startsWith(     "0X     ")  ||  str.startsWith(     "-0X     "))  {  int  hexDigits  =  str.length()  -  2;  //  drop  0x  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  	projects/Lang7/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.5773502691896258	446	446	1	replace	NumberUtils.setBlank(str,  1.0);	  NumberUtils.setBlank(str);    	non-compiled	[CE]  	37	None	replace
116	[BUG]  [BUGGY]  NumberUtils.setBlank(str,  0.0);  [CE]  [FE]                AssertionError      [CONTEXT]      public  static  Number  createNumber(String  str)  throws  NumberFormatException  {      [BUGGY]  NumberUtils.setBlank(str,  0.0);  [BUGGY]      return  null;  }  if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(     "A  blank  string  is  not  a  valid  number     ");  }  if  (str.startsWith(     "--     "))  {  return  null;  }  if  (str.startsWith(     "0x     ")  ||  str.startsWith(     "-0x     ")  ||  str.startsWith(     "0X     ")  ||  str.startsWith(     "-0X     "))  {  int  hexDigits  =  str.length()  -  2;  //  drop  0x  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  	projects/Lang7/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.5773502691896258	446	446	1	replace	NumberUtils.setBlank(str,  0.0);	  NumberUtils.setBlank(str);    	non-compiled	[CE]  	37	None	replace
117	[BUG]  [BUGGY]  Number  str  =  getNumber(str,  DEC_ZERO);  [CE]  [FE]              AssertionError      [CONTEXT]      public  static  Number  createNumber(String  str)  throws  NumberFormatException  {      [BUGGY]  Number  str  =  getNumber(str,  DEC_ZERO);  [BUGGY]      if  (str  ==  null)  {  return  null;  }  if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(     "A  blank  string  is  not  a  valid  number     ");  }  if  (str.startsWith(     "--     "))  {  return  null;  }  if  (str.startsWith(     "0x     ")  ||  str.startsWith(     "-0x     ")  ||  str.startsWith(     "0X     ")  ||  str.startsWith(     "-0X     "))  {  int  hexDigits  =  str.length()  -  2;  //  drop  0x  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  	projects/Lang7/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.5773502691896258	446	446	1	replace	Number  str  =  getNumber(str,  DEC_ZERO);	  Number    str    =    getNumber(str,    hexDigits);    	non-compiled	[CE]  	35	None	replace
118	[BUG]  [BUGGY]  Number  str  =  getNumber(str,  expPos);  [CE]  [FE]                AssertionError      [CONTEXT]      public  static  Number  createNumber(String  str)  throws  NumberFormatException  {      [BUGGY]  Number  str  =  getNumber(str,  expPos);  [BUGGY]      if  (str  ==  null)  {  return  null;  }  if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(     "A  blank  string  is  not  a  valid  number     ");  }  if  (str.startsWith(     "--     "))  {  return  null;  }  if  (str.startsWith(     "0x     ")  ||  str.startsWith(     "-0x     ")  ||  str.startsWith(     "0X     ")  ||  str.startsWith(     "-0X     "))  {  int  hexDigits  =  str.length()  -  2;  //  drop  0x  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  	projects/Lang7/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.5773502691896258	446	446	1	replace	Number  str  =  getNumber(str,  expPos);	  Number    str    =    getNumber(str,    hexDigits);    	non-compiled	[CE]  	35	None	replace
119	[BUG]  [BUGGY]  Number  str  =  getNumber(str,  hexDigits,  expPos);  [CE]  [FE]                  AssertionError      [CONTEXT]      public  static  Number  createNumber(String  str)  throws  NumberFormatException  {      [BUGGY]  Number  str  =  getNumber(str,  hexDigits,  expPos);  [BUGGY]      if  (str  ==  null)  {  return  null;  }  if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(     "A  blank  string  is  not  a  valid  number     ");  }  if  (str.startsWith(     "--     "))  {  return  null;  }  if  (str.startsWith(     "0x     ")  ||  str.startsWith(     "-0x     ")  ||  str.startsWith(     "0X     ")  ||  str.startsWith(     "-0X     "))  {  int  hexDigits  =  str.length()  -  2;  //  drop  0x  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  	projects/Lang7/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.5773502691896258	446	446	1	replace	Number  str  =  getNumber(str,  hexDigits,  expPos);	  Number    str    =    getNumber(str,    hexDigits);    	non-compiled	[CE]  	35	None	replace
120	[BUG]  [BUGGY]  Number  str  =  getNumber(str,  DEC_PREFIX);  [CE]  [FE]                    AssertionError      [CONTEXT]      public  static  Number  createNumber(String  str)  throws  NumberFormatException  {      [BUGGY]  Number  str  =  getNumber(str,  DEC_PREFIX);  [BUGGY]      if  (str  ==  null)  {  return  null;  }  if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(     "A  blank  string  is  not  a  valid  number     ");  }  if  (str.startsWith(     "--     "))  {  return  null;  }  if  (str.startsWith(     "0x     ")  ||  str.startsWith(     "-0x     ")  ||  str.startsWith(     "0X     ")  ||  str.startsWith(     "-0X     "))  {  int  hexDigits  =  str.length()  -  2;  //  drop  0x  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  	projects/Lang7/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.5773502691896258	446	446	1	replace	Number  str  =  getNumber(str,  DEC_PREFIX);	  Number    str    =    getNumber(str,    hexDigits);    	non-compiled	[CE]  	35	None	replace
121	[BUG]  [BUGGY]  String  str  =  str.substring(1,  str.length())+  1;  [CE]  [FE]              AssertionError      [CONTEXT]      public  static  Number  createNumber(String  str)  throws  NumberFormatException  {      [BUGGY]  String  str  =  str.substring(1,  str.length())+  1;  [BUGGY]      if  (str  ==  null)  {  return  null;  }  if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(     "A  blank  string  is  not  a  valid  number     ");  }  if  (str.startsWith(     "--     "))  {  return  null;  }  if  (str.startsWith(     "0x     ")  ||  str.startsWith(     "-0x     ")  ||  str.startsWith(     "0X     ")  ||  str.startsWith(     "-0X     "))  {  int  hexDigits  =  str.length()  -  2;  //  drop  0x  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  	projects/Lang7/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.5773502691896258	446	446	1	replace	String  str  =  str.substring(1,  str.length())+  1;	  String    str    =    str.substring(0,    str.length())+    1;    	non-compiled	[CE]  	43	None	replace
122	[BUG]  [BUGGY]  if(str  ==  null  ||  str.startsWith( ".0 ")||  str.startsWith( ".0 "))  {  [CE]  ')'  expected  [FE]              AssertionError      [CONTEXT]      public  static  Number  createNumber(String  str)  throws  NumberFormatException  {      [BUGGY]  if(str  ==  null  ||  str.startsWith( ".0 ")||  str.startsWith( ".0 "))  {  [BUGGY]      return  null;  }  if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(     "A  blank  string  is  not  a  valid  number     ");  }  if  (str.startsWith(     "--     "))  {  return  null;  }  if  (str.startsWith(     "0x     ")  ||  str.startsWith(     "-0x     ")  ||  str.startsWith(     "0X     ")  ||  str.startsWith(     "-0X     "))  {  int  hexDigits  =  str.length()  -  2;  //  drop  0x  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  	projects/Lang7/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.5773502691896258	446	446	1	replace	if(str  ==  null  ||  str.startsWith( ".0 ")||  str.startsWith( ".0 "))  {	  if(str    ==    null    ||    str.startsWith(   "0   ")||    str.startsWith(   "0   "))    {    	non-compiled	[CE]  ')'  expected	34	None	replace
123	[BUG]  [BUGGY]  Number  str  =  createNumber(str,  hexDigits,  expPos);  [CE]  [FE]            AssertionError      [CONTEXT]      public  static  Number  createNumber(String  str)  throws  NumberFormatException  {      [BUGGY]  Number  str  =  createNumber(str,  hexDigits,  expPos);  [BUGGY]      if  (str  ==  null)  {  return  null;  }  if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(     "A  blank  string  is  not  a  valid  number     ");  }  if  (str.startsWith(     "--     "))  {  return  null;  }  if  (str.startsWith(     "0x     ")  ||  str.startsWith(     "-0x     ")  ||  str.startsWith(     "0X     ")  ||  str.startsWith(     "-0X     "))  {  int  hexDigits  =  str.length()  -  2;  //  drop  0x  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  	projects/Lang7/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.5773502691896258	446	446	1	replace	Number  str  =  createNumber(str,  hexDigits,  expPos);	  Number    str    =    createNumber(str,    hexDigits);    	non-compiled	[CE]  	22	None	replace
124	[BUG]  [BUGGY]  Number  str  =(Number)str.intern();  [CE]  [FE]                    AssertionError      [CONTEXT]      public  static  Number  createNumber(String  str)  throws  NumberFormatException  {      [BUGGY]  Number  str  =(Number)str.intern();  [BUGGY]      if  (str  ==  null)  {  return  null;  }  if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(     "A  blank  string  is  not  a  valid  number     ");  }  if  (str.startsWith(     "--     "))  {  return  null;  }  if  (str.startsWith(     "0x     ")  ||  str.startsWith(     "-0x     ")  ||  str.startsWith(     "0X     ")  ||  str.startsWith(     "-0X     "))  {  int  hexDigits  =  str.length()  -  2;  //  drop  0x  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  	projects/Lang7/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.5773502691896258	446	446	1	replace	Number  str  =(Number)str.intern();	  Number    str    =(Number)str.cloneTree();    	non-compiled	[CE]  	30	None	replace
