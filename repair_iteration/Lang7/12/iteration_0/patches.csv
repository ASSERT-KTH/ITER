bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]    int  hexDigits  =  str.length();  [CE]  ')'  expected  [FE]    AssertionError  [CONTEXT]  if  (str  ==  null)  {  return  null;  }  if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException( "A  blank  string  is  not  a  valid  number ");  }  if  (str.startsWith( "-- "))  {  return  null;  }  if  (str.startsWith( "0x ")  ||  str.startsWith( "-0x ")  ||  str.startsWith( "0X ")  ||  str.startsWith( "-0X "))  {  [BUGGY]    int  hexDigits  =  str.length();  [BUGGY]  int  hexDigits  =  str.length()  -  2;  //  drop  0x    if  (str.startsWith( "- "))  {  //  drop  -        hexDigits--;  if  (str.startsWith( "- "))  {  //  drop  -  hexDigits--;  }  if  (hexDigits  >  8)  {  //  too  many  for  an  int  return  createLong(str);  }  return  createInteger(str);  }  char  lastChar  =  str.charAt(str.length()  -  1);  String  mant;  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  	projects/Lang7/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	456	458	1	replace	    int  hexDigits  =  str.length();		non-compiled	[CE]  ')'  expected	24	None	add
2	[BUG]  [BUGGY]    Integer  str  =  createInteger(str);  [CE]  ')'  expected  [FE]      AssertionError  [CONTEXT]  if  (str  ==  null)  {  return  null;  }  if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException( "A  blank  string  is  not  a  valid  number ");  }  if  (str.startsWith( "-- "))  {  return  null;  }  if  (str.startsWith( "0x ")  ||  str.startsWith( "-0x ")  ||  str.startsWith( "0X ")  ||  str.startsWith( "-0X "))  {  [BUGGY]    Integer  str  =  createInteger(str);  [BUGGY]  int  hexDigits  =  str.length()  -  2;  //  drop  0x    if  (str.startsWith( "- "))  {  //  drop  -        hexDigits--;  if  (str.startsWith( "- "))  {  //  drop  -  hexDigits--;  }  if  (hexDigits  >  8)  {  //  too  many  for  an  int  return  createLong(str);  }  return  createInteger(str);  }  char  lastChar  =  str.charAt(str.length()  -  1);  String  mant;  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  	projects/Lang7/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	456	458	1	replace	    Integer  str  =  createInteger(str);		non-compiled	[CE]  ')'  expected	24	None	add
3	[BUG]  [BUGGY]    Integer  hexDigits  =  str.length();  [CE]  ')'  expected  [FE]        AssertionError  [CONTEXT]  if  (str  ==  null)  {  return  null;  }  if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException( "A  blank  string  is  not  a  valid  number ");  }  if  (str.startsWith( "-- "))  {  return  null;  }  if  (str.startsWith( "0x ")  ||  str.startsWith( "-0x ")  ||  str.startsWith( "0X ")  ||  str.startsWith( "-0X "))  {  [BUGGY]    Integer  hexDigits  =  str.length();  [BUGGY]  int  hexDigits  =  str.length()  -  2;  //  drop  0x    if  (str.startsWith( "- "))  {  //  drop  -        hexDigits--;  if  (str.startsWith( "- "))  {  //  drop  -  hexDigits--;  }  if  (hexDigits  >  8)  {  //  too  many  for  an  int  return  createLong(str);  }  return  createInteger(str);  }  char  lastChar  =  str.charAt(str.length()  -  1);  String  mant;  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  	projects/Lang7/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	456	458	1	replace	    Integer  hexDigits  =  str.length();		non-compiled	[CE]  ')'  expected	24	None	add
4	[BUG]  [BUGGY]    Integer  hexDigits  =  str.indexOf('.')+  1;  [CE]  ')'  expected  [FE]          AssertionError  [CONTEXT]  if  (str  ==  null)  {  return  null;  }  if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException( "A  blank  string  is  not  a  valid  number ");  }  if  (str.startsWith( "-- "))  {  return  null;  }  if  (str.startsWith( "0x ")  ||  str.startsWith( "-0x ")  ||  str.startsWith( "0X ")  ||  str.startsWith( "-0X "))  {  [BUGGY]    Integer  hexDigits  =  str.indexOf('.')+  1;  [BUGGY]  int  hexDigits  =  str.length()  -  2;  //  drop  0x    if  (str.startsWith( "- "))  {  //  drop  -        hexDigits--;  if  (str.startsWith( "- "))  {  //  drop  -  hexDigits--;  }  if  (hexDigits  >  8)  {  //  too  many  for  an  int  return  createLong(str);  }  return  createInteger(str);  }  char  lastChar  =  str.charAt(str.length()  -  1);  String  mant;  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  	projects/Lang7/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	456	458	1	replace	    Integer  hexDigits  =  str.indexOf('.')+  1;		non-compiled	[CE]  ')'  expected	24	None	add
5	[BUG]  [BUGGY]    Integer  hexDigits  =  str.indexOf('0')+  1;  [CE]  ')'  expected  [FE]            AssertionError  [CONTEXT]  if  (str  ==  null)  {  return  null;  }  if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException( "A  blank  string  is  not  a  valid  number ");  }  if  (str.startsWith( "-- "))  {  return  null;  }  if  (str.startsWith( "0x ")  ||  str.startsWith( "-0x ")  ||  str.startsWith( "0X ")  ||  str.startsWith( "-0X "))  {  [BUGGY]    Integer  hexDigits  =  str.indexOf('0')+  1;  [BUGGY]  int  hexDigits  =  str.length()  -  2;  //  drop  0x    if  (str.startsWith( "- "))  {  //  drop  -        hexDigits--;  if  (str.startsWith( "- "))  {  //  drop  -  hexDigits--;  }  if  (hexDigits  >  8)  {  //  too  many  for  an  int  return  createLong(str);  }  return  createInteger(str);  }  char  lastChar  =  str.charAt(str.length()  -  1);  String  mant;  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  	projects/Lang7/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	456	458	1	replace	    Integer  hexDigits  =  str.indexOf('0')+  1;		non-compiled	[CE]  ')'  expected	24	None	add
6	[BUG]  [BUGGY]  int  hexDigits  =  str.length();  //  drop  0x  if(str.startsWith( "- "))  {  //  drop  -  hexDigits--;  }  [CE]  ')'  expected  [FE]    AssertionError  [CONTEXT]  if  (str  ==  null)  {  return  null;  }  if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException( "A  blank  string  is  not  a  valid  number ");  }  if  (str.startsWith( "-- "))  {  return  null;  }  if  (str.startsWith( "0x ")  ||  str.startsWith( "-0x ")  ||  str.startsWith( "0X ")  ||  str.startsWith( "-0X "))  {  [BUGGY]  int  hexDigits  =  str.length();  //  drop  0x  if(str.startsWith( "- "))  {  //  drop  -  hexDigits--;  }  [BUGGY]  if  (str.startsWith( "- "))  {  //  drop  -  hexDigits--;  }  if  (hexDigits  >  8)  {  //  too  many  for  an  int  return  createLong(str);  }  return  createInteger(str);  }  char  lastChar  =  str.charAt(str.length()  -  1);  String  mant;  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  	projects/Lang7/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	456	458	1	replace	int  hexDigits  =  str.length();  //  drop  0x  if(str.startsWith( "- "))  {  //  drop  -  hexDigits--;  }	int  hexDigits  =  str.length()  -  2;  //  drop  0x  if  (str.startsWith( "- "))  {  //  drop  -    hexDigits--;  	non-compiled	[CE]  ')'  expected	23	None	replace
7	[BUG]  [BUGGY]  int  hexDigits  =  str.length();  //  drop  0x  if(str.startsWith( "- "))  {  //  drop  -  hexDigits--;  [CE]  ')'  expected  [FE]      AssertionError  [CONTEXT]  if  (str  ==  null)  {  return  null;  }  if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException( "A  blank  string  is  not  a  valid  number ");  }  if  (str.startsWith( "-- "))  {  return  null;  }  if  (str.startsWith( "0x ")  ||  str.startsWith( "-0x ")  ||  str.startsWith( "0X ")  ||  str.startsWith( "-0X "))  {  [BUGGY]  int  hexDigits  =  str.length();  //  drop  0x  if(str.startsWith( "- "))  {  //  drop  -  hexDigits--;  [BUGGY]  if  (str.startsWith( "- "))  {  //  drop  -  hexDigits--;  }  if  (hexDigits  >  8)  {  //  too  many  for  an  int  return  createLong(str);  }  return  createInteger(str);  }  char  lastChar  =  str.charAt(str.length()  -  1);  String  mant;  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  	projects/Lang7/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	456	458	1	replace	int  hexDigits  =  str.length();  //  drop  0x  if(str.startsWith( "- "))  {  //  drop  -  hexDigits--;	int  hexDigits  =  str.length()  -  2;  //  drop  0x  if  (str.startsWith( "- "))  {  //  drop  -    hexDigits--;  	non-compiled	[CE]  ')'  expected	23	None	replace
8	[BUG]  [BUGGY]  float  hexDigits  =  str.length();  [CE]  ')'  expected  [FE]    AssertionError  [CONTEXT]  if  (str  ==  null)  {  return  null;  }  if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException( "A  blank  string  is  not  a  valid  number ");  }  if  (str.startsWith( "-- "))  {  return  null;  }  if  (str.startsWith( "0x ")  ||  str.startsWith( "-0x ")  ||  str.startsWith( "0X ")  ||  str.startsWith( "-0X "))  {  [BUGGY]  float  hexDigits  =  str.length();  [BUGGY]  if  (str.startsWith( "- "))  {  //  drop  -  hexDigits--;  }  if  (hexDigits  >  8)  {  //  too  many  for  an  int  return  createLong(str);  }  return  createInteger(str);  }  char  lastChar  =  str.charAt(str.length()  -  1);  String  mant;  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  	projects/Lang7/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	456	458	1	replace	float  hexDigits  =  str.length();	int  hexDigits  =  str.length()  -  2;  //  drop  0x  if  (str.startsWith( "- "))  {  //  drop  -    hexDigits--;  	non-compiled	[CE]  ')'  expected	23	None	replace
9	[BUG]  [BUGGY]  char  hexDigits  =  str.length();  [CE]  ')'  expected  [FE]      AssertionError  [CONTEXT]  if  (str  ==  null)  {  return  null;  }  if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException( "A  blank  string  is  not  a  valid  number ");  }  if  (str.startsWith( "-- "))  {  return  null;  }  if  (str.startsWith( "0x ")  ||  str.startsWith( "-0x ")  ||  str.startsWith( "0X ")  ||  str.startsWith( "-0X "))  {  [BUGGY]  char  hexDigits  =  str.length();  [BUGGY]  if  (str.startsWith( "- "))  {  //  drop  -  hexDigits--;  }  if  (hexDigits  >  8)  {  //  too  many  for  an  int  return  createLong(str);  }  return  createInteger(str);  }  char  lastChar  =  str.charAt(str.length()  -  1);  String  mant;  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  	projects/Lang7/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	456	458	1	replace	char  hexDigits  =  str.length();	int  hexDigits  =  str.length()  -  2;  //  drop  0x  if  (str.startsWith( "- "))  {  //  drop  -    hexDigits--;  	non-compiled	[CE]  ')'  expected	23	None	replace
10	[BUG]  [BUGGY]    Integer  hexDigits  =  createInteger(str);  [CE]  ')'  expected  [FE]    AssertionError  [CONTEXT]  if  (str  ==  null)  {  return  null;  }  if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException( "A  blank  string  is  not  a  valid  number ");  }  if  (str.startsWith( "-- "))  {  return  null;  }  if  (str.startsWith( "0x ")  ||  str.startsWith( "-0x ")  ||  str.startsWith( "0X ")  ||  str.startsWith( "-0X "))  {  [BUGGY]    Integer  hexDigits  =  createInteger(str);  [BUGGY]  int  hexDigits  =  str.length()  -  2;  //  drop  0x    if  (str.startsWith( "- "))  {  //  drop  -        hexDigits--;  if  (str.startsWith( "- "))  {  //  drop  -  hexDigits--;  }  if  (hexDigits  >  8)  {  //  too  many  for  an  int  return  createLong(str);  }  return  createInteger(str);  }  char  lastChar  =  str.charAt(str.length()  -  1);  String  mant;  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  	projects/Lang7/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	456	458	1	replace	    Integer  hexDigits  =  createInteger(str);		non-compiled	[CE]  ')'  expected	24	None	add
11	[BUG]  [BUGGY]    int  decPos  =  str.length();  [CE]  ')'  expected  [FE]    AssertionError  [CONTEXT]  if  (str  ==  null)  {  return  null;  }  if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException( "A  blank  string  is  not  a  valid  number ");  }  if  (str.startsWith( "-- "))  {  return  null;  }  if  (str.startsWith( "0x ")  ||  str.startsWith( "-0x ")  ||  str.startsWith( "0X ")  ||  str.startsWith( "-0X "))  {  [BUGGY]    int  decPos  =  str.length();  [BUGGY]  int  hexDigits  =  str.length()  -  2;  //  drop  0x    if  (str.startsWith( "- "))  {  //  drop  -        hexDigits--;  if  (str.startsWith( "- "))  {  //  drop  -  hexDigits--;  }  if  (hexDigits  >  8)  {  //  too  many  for  an  int  return  createLong(str);  }  return  createInteger(str);  }  char  lastChar  =  str.charAt(str.length()  -  1);  String  mant;  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  	projects/Lang7/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	456	458	1	replace	    int  decPos  =  str.length();		non-compiled	[CE]  ')'  expected	24	None	add
12	[BUG]  [BUGGY]    Integer  hexDigits  =  createBigInteger(str);  [CE]  ')'  expected  [FE]      AssertionError  [CONTEXT]  if  (str  ==  null)  {  return  null;  }  if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException( "A  blank  string  is  not  a  valid  number ");  }  if  (str.startsWith( "-- "))  {  return  null;  }  if  (str.startsWith( "0x ")  ||  str.startsWith( "-0x ")  ||  str.startsWith( "0X ")  ||  str.startsWith( "-0X "))  {  [BUGGY]    Integer  hexDigits  =  createBigInteger(str);  [BUGGY]  int  hexDigits  =  str.length()  -  2;  //  drop  0x    if  (str.startsWith( "- "))  {  //  drop  -        hexDigits--;  if  (str.startsWith( "- "))  {  //  drop  -  hexDigits--;  }  if  (hexDigits  >  8)  {  //  too  many  for  an  int  return  createLong(str);  }  return  createInteger(str);  }  char  lastChar  =  str.charAt(str.length()  -  1);  String  mant;  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  	projects/Lang7/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	456	458	1	replace	    Integer  hexDigits  =  createBigInteger(str);		non-compiled	[CE]  ')'  expected	24	None	add
