projects/Lang7/src/main/java/org/apache/commons/lang3/math/NumberUtils.java537returnd;
projects/Lang7/src/main/java/org/apache/commons/lang3/math/NumberUtils.java537returnd.doubleValue();
projects/Lang7/src/main/java/org/apache/commons/lang3/math/NumberUtils.java537returnd.infinite();
projects/Lang7/src/main/java/org/apache/commons/lang3/math/NumberUtils.java537returnd.infinite;
projects/Lang7/src/main/java/org/apache/commons/lang3/math/NumberUtils.java537returnd.longValue();
projects/Lang7/src/main/java/org/apache/commons/lang3/math/NumberUtils.java537
projects/Lang7/src/main/java/org/apache/commons/lang3/math/NumberUtils.java537d=NumberUtils.createDouble(numeric);
projects/Lang7/src/main/java/org/apache/commons/lang3/math/NumberUtils.java537d=NumberUtils.createInteger(numeric);
projects/Lang7/src/main/java/org/apache/commons/lang3/math/NumberUtils.java537Doubled=NumberUtils.createDouble(numeric);
projects/Lang7/src/main/java/org/apache/commons/lang3/math/NumberUtils.java537d=Double.parseDouble(numeric);
projects/Lang7/src/main/java/org/apache/commons/lang3/math/NumberUtils.java537d=NumberUtils.createLong(numeric);
projects/Lang7/src/main/java/org/apache/commons/lang3/math/NumberUtils.java537d=Double.valueOf(numeric);
projects/Lang7/src/main/java/org/apache/commons/lang3/math/NumberUtils.java537returnd.intValue();
projects/Lang7/src/main/java/org/apache/commons/lang3/math/NumberUtils.java537d=NumberUtils.createFloat(numeric);
projects/Lang7/src/main/java/org/apache/commons/lang3/math/NumberUtils.java537d=newDouble(numeric.doubleValue());
projects/Lang7/src/main/java/org/apache/commons/lang3/math/NumberUtils.java537returnd!=null?Double.POSITIVE_INFINITY:d;
projects/Lang7/src/main/java/org/apache/commons/lang3/math/NumberUtils.java537returnd!=null?Double.NaN:d;
