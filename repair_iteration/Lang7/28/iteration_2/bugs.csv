bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  d  =  Double.parseDouble(numeric)+  1;  [CE]  ')'  expected  [FE]              AssertionError    [CONTEXT]    }  catch  (NumberFormatException  nfe)  {  //  NOPMD  }  case  'd'  :  case  'D'  :  try  {  Double  d  =  NumberUtils.createDouble(numeric);  if  (!(d.isInfinite()  ||  (d.floatValue()  ==  0.0D  &&  !allZeros)))  {    [BUGGY]  d  =  Double.parseDouble(numeric)+  1;  [BUGGY]    return  d;  }  }  catch  (NumberFormatException  nfe)  {  //  NOPMD  }  try  {  return  createBigDecimal(numeric);  }  catch  (NumberFormatException  e)  {  //  NOPMD  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  	projects/Lang7/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	537	537	1	replace	d  =  Double.parseDouble(numeric)+  1;	      d    =    Double.parseDouble(numeric);    	non-compiled	[CE]  ')'  expected	9	None	replace
2	[BUG]  [BUGGY]  d  =  Double.parseDouble(numeric).doubleValue();  [CE]  ')'  expected  [FE]                AssertionError    [CONTEXT]    }  catch  (NumberFormatException  nfe)  {  //  NOPMD  }  case  'd'  :  case  'D'  :  try  {  Double  d  =  NumberUtils.createDouble(numeric);  if  (!(d.isInfinite()  ||  (d.floatValue()  ==  0.0D  &&  !allZeros)))  {    [BUGGY]  d  =  Double.parseDouble(numeric).doubleValue();  [BUGGY]    return  d;  }  }  catch  (NumberFormatException  nfe)  {  //  NOPMD  }  try  {  return  createBigDecimal(numeric);  }  catch  (NumberFormatException  e)  {  //  NOPMD  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  	projects/Lang7/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	537	537	1	replace	d  =  Double.parseDouble(numeric).doubleValue();	      d    =    Double.parseDouble(numeric);    	non-compiled	[CE]  ')'  expected	9	None	replace
3	[BUG]  [BUGGY]  return  d.longValue()  +  1;  [CE]  ')'  expected  [FE]              AssertionError    [CONTEXT]    }  catch  (NumberFormatException  nfe)  {  //  NOPMD  }  case  'd'  :  case  'D'  :  try  {  Double  d  =  NumberUtils.createDouble(numeric);  if  (!(d.isInfinite()  ||  (d.floatValue()  ==  0.0D  &&  !allZeros)))  {    [BUGGY]  return  d.longValue()  +  1;  [BUGGY]    }  }  catch  (NumberFormatException  nfe)  {  //  NOPMD  }  try  {  return  createBigDecimal(numeric);  }  catch  (NumberFormatException  e)  {  //  NOPMD  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  	projects/Lang7/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	537	537	1	replace	return  d.longValue()  +  1;	  return    d.longValue();    	non-compiled	[CE]  ')'  expected	4	None	replace
4	[BUG]  [BUGGY]  return  d.infinite  ||  d.floatValue()  ==  0.0D;  [CE]  ')'  expected  [FE]            AssertionError    [CONTEXT]    }  catch  (NumberFormatException  nfe)  {  //  NOPMD  }  case  'd'  :  case  'D'  :  try  {  Double  d  =  NumberUtils.createDouble(numeric);  if  (!(d.isInfinite()  ||  (d.floatValue()  ==  0.0D  &&  !allZeros)))  {    [BUGGY]  return  d.infinite  ||  d.floatValue()  ==  0.0D;  [BUGGY]    }  }  catch  (NumberFormatException  nfe)  {  //  NOPMD  }  try  {  return  createBigDecimal(numeric);  }  catch  (NumberFormatException  e)  {  //  NOPMD  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  	projects/Lang7/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	537	537	1	replace	return  d.infinite  ||  d.floatValue()  ==  0.0D;	  return    d.infinite;    	non-compiled	[CE]  ')'  expected	3	None	replace
5	[BUG]  [BUGGY]  return  d.infinite  ||(d.floatValue()  ==  0.0D  &&!allZeros));  [CE]  ')'  expected  [FE]              AssertionError    [CONTEXT]    }  catch  (NumberFormatException  nfe)  {  //  NOPMD  }  case  'd'  :  case  'D'  :  try  {  Double  d  =  NumberUtils.createDouble(numeric);  if  (!(d.isInfinite()  ||  (d.floatValue()  ==  0.0D  &&  !allZeros)))  {    [BUGGY]  return  d.infinite  ||(d.floatValue()  ==  0.0D  &&!allZeros));  [BUGGY]    }  }  catch  (NumberFormatException  nfe)  {  //  NOPMD  }  try  {  return  createBigDecimal(numeric);  }  catch  (NumberFormatException  e)  {  //  NOPMD  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  	projects/Lang7/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	537	537	1	replace	return  d.infinite  ||(d.floatValue()  ==  0.0D  &&!allZeros));	  return    d.infinite;    	non-compiled	[CE]  ')'  expected	3	None	replace
6	[BUG]  [BUGGY]  return  d.infinite  ||(d.floatValue()  ==  0.0D  &&!allZeros);  [CE]  ')'  expected  [FE]                AssertionError    [CONTEXT]    }  catch  (NumberFormatException  nfe)  {  //  NOPMD  }  case  'd'  :  case  'D'  :  try  {  Double  d  =  NumberUtils.createDouble(numeric);  if  (!(d.isInfinite()  ||  (d.floatValue()  ==  0.0D  &&  !allZeros)))  {    [BUGGY]  return  d.infinite  ||(d.floatValue()  ==  0.0D  &&!allZeros);  [BUGGY]    }  }  catch  (NumberFormatException  nfe)  {  //  NOPMD  }  try  {  return  createBigDecimal(numeric);  }  catch  (NumberFormatException  e)  {  //  NOPMD  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  	projects/Lang7/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	537	537	1	replace	return  d.infinite  ||(d.floatValue()  ==  0.0D  &&!allZeros);	  return    d.infinite;    	non-compiled	[CE]  ')'  expected	3	None	replace
7	[BUG]  [BUGGY]  return  createBigDecimal(numeric);  [CE]  ')'  expected  [FE]                AssertionError    [CONTEXT]    }  catch  (NumberFormatException  nfe)  {  //  NOPMD  }  case  'd'  :  case  'D'  :  try  {  Double  d  =  NumberUtils.createDouble(numeric);  if  (!(d.isInfinite()  ||  (d.floatValue()  ==  0.0D  &&  !allZeros)))  {    [BUGGY]  return  createBigDecimal(numeric);  [BUGGY]    }  }  catch  (NumberFormatException  nfe)  {  //  NOPMD  }  try  {  return  createBigDecimal(numeric);  }  catch  (NumberFormatException  e)  {  //  NOPMD  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  	projects/Lang7/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	537	537	1	replace	return  createBigDecimal(numeric);	      	non-compiled	[CE]  ')'  expected	5	None	replace
8	[BUG]  [BUGGY]  throw  new  IllegalArgumentException( " ");  [CE]  ')'  expected  [FE]                  AssertionError    [CONTEXT]    }  catch  (NumberFormatException  nfe)  {  //  NOPMD  }  case  'd'  :  case  'D'  :  try  {  Double  d  =  NumberUtils.createDouble(numeric);  if  (!(d.isInfinite()  ||  (d.floatValue()  ==  0.0D  &&  !allZeros)))  {    [BUGGY]  throw  new  IllegalArgumentException( " ");  [BUGGY]    }  }  catch  (NumberFormatException  nfe)  {  //  NOPMD  }  try  {  return  createBigDecimal(numeric);  }  catch  (NumberFormatException  e)  {  //  NOPMD  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  	projects/Lang7/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	537	537	1	replace	throw  new  IllegalArgumentException( " ");	      	non-compiled	[CE]  ')'  expected	5	None	replace
9	[BUG]  [BUGGY]  return  d  ==  null?  Double.NaN  :  d;  [CE]  ')'  expected  [FE]          AssertionError    [CONTEXT]    }  catch  (NumberFormatException  nfe)  {  //  NOPMD  }  case  'd'  :  case  'D'  :  try  {  Double  d  =  NumberUtils.createDouble(numeric);  if  (!(d.isInfinite()  ||  (d.floatValue()  ==  0.0D  &&  !allZeros)))  {    [BUGGY]  return  d  ==  null?  Double.NaN  :  d;  [BUGGY]    }  }  catch  (NumberFormatException  nfe)  {  //  NOPMD  }  try  {  return  createBigDecimal(numeric);  }  catch  (NumberFormatException  e)  {  //  NOPMD  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  	projects/Lang7/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	537	537	1	replace	return  d  ==  null?  Double.NaN  :  d;	  return    d!=    null?    Double.NaN    :    d;    	non-compiled	[CE]  ')'  expected	16	None	replace
10	[BUG]  [BUGGY]  d  =  NumberUtils.createBigDecimal(numeric);  [CE]  ')'  expected  [FE]          AssertionError    [CONTEXT]    }  catch  (NumberFormatException  nfe)  {  //  NOPMD  }  case  'd'  :  case  'D'  :  try  {  Double  d  =  NumberUtils.createDouble(numeric);  if  (!(d.isInfinite()  ||  (d.floatValue()  ==  0.0D  &&  !allZeros)))  {    [BUGGY]  d  =  NumberUtils.createBigDecimal(numeric);  [BUGGY]    return  d;  }  }  catch  (NumberFormatException  nfe)  {  //  NOPMD  }  try  {  return  createBigDecimal(numeric);  }  catch  (NumberFormatException  e)  {  //  NOPMD  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  	projects/Lang7/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	537	537	1	replace	d  =  NumberUtils.createBigDecimal(numeric);	      d    =    NumberUtils.createInteger(numeric);    	non-compiled	[CE]  ')'  expected	7	None	replace
11	[BUG]  [BUGGY]  return  d  ==  null?  Double.POSITIVE_INFINITY  :  d;  [CE]  ')'  expected  [FE]        AssertionError    [CONTEXT]    }  catch  (NumberFormatException  nfe)  {  //  NOPMD  }  case  'd'  :  case  'D'  :  try  {  Double  d  =  NumberUtils.createDouble(numeric);  if  (!(d.isInfinite()  ||  (d.floatValue()  ==  0.0D  &&  !allZeros)))  {    [BUGGY]  return  d  ==  null?  Double.POSITIVE_INFINITY  :  d;  [BUGGY]    }  }  catch  (NumberFormatException  nfe)  {  //  NOPMD  }  try  {  return  createBigDecimal(numeric);  }  catch  (NumberFormatException  e)  {  //  NOPMD  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  	projects/Lang7/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	537	537	1	replace	return  d  ==  null?  Double.POSITIVE_INFINITY  :  d;	  return    d!=    null?    Double.POSITIVE_INFINITY    :    d;    	non-compiled	[CE]  ')'  expected	15	None	replace
12	[BUG]  [BUGGY]  Double  d  =  NumberUtils.createDouble(str);  [CE]  ')'  expected  [FE]            AssertionError    [CONTEXT]    }  catch  (NumberFormatException  nfe)  {  //  NOPMD  }  case  'd'  :  case  'D'  :  try  {  Double  d  =  NumberUtils.createDouble(numeric);  if  (!(d.isInfinite()  ||  (d.floatValue()  ==  0.0D  &&  !allZeros)))  {    [BUGGY]  Double  d  =  NumberUtils.createDouble(str);  [BUGGY]    return  d;  }  }  catch  (NumberFormatException  nfe)  {  //  NOPMD  }  try  {  return  createBigDecimal(numeric);  }  catch  (NumberFormatException  e)  {  //  NOPMD  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  	projects/Lang7/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	537	537	1	replace	Double  d  =  NumberUtils.createDouble(str);	      Double    d    =    NumberUtils.createDouble(numeric);    	non-compiled	[CE]  ')'  expected	8	None	replace
13	[BUG]  [BUGGY]  Double  d  =  NumberUtils.createDouble(numeric).doubleValue();  [CE]  ')'  expected  [FE]              AssertionError    [CONTEXT]    }  catch  (NumberFormatException  nfe)  {  //  NOPMD  }  case  'd'  :  case  'D'  :  try  {  Double  d  =  NumberUtils.createDouble(numeric);  if  (!(d.isInfinite()  ||  (d.floatValue()  ==  0.0D  &&  !allZeros)))  {    [BUGGY]  Double  d  =  NumberUtils.createDouble(numeric).doubleValue();  [BUGGY]    return  d;  }  }  catch  (NumberFormatException  nfe)  {  //  NOPMD  }  try  {  return  createBigDecimal(numeric);  }  catch  (NumberFormatException  e)  {  //  NOPMD  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  	projects/Lang7/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	537	537	1	replace	Double  d  =  NumberUtils.createDouble(numeric).doubleValue();	      Double    d    =    NumberUtils.createDouble(numeric);    	non-compiled	[CE]  ')'  expected	8	None	replace
14	[BUG]  [BUGGY]  Double  d  =  NumberUtils.createDouble(numeric  +  1);  [CE]  ')'  expected  [FE]                AssertionError    [CONTEXT]    }  catch  (NumberFormatException  nfe)  {  //  NOPMD  }  case  'd'  :  case  'D'  :  try  {  Double  d  =  NumberUtils.createDouble(numeric);  if  (!(d.isInfinite()  ||  (d.floatValue()  ==  0.0D  &&  !allZeros)))  {    [BUGGY]  Double  d  =  NumberUtils.createDouble(numeric  +  1);  [BUGGY]    return  d;  }  }  catch  (NumberFormatException  nfe)  {  //  NOPMD  }  try  {  return  createBigDecimal(numeric);  }  catch  (NumberFormatException  e)  {  //  NOPMD  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  	projects/Lang7/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	537	537	1	replace	Double  d  =  NumberUtils.createDouble(numeric  +  1);	      Double    d    =    NumberUtils.createDouble(numeric);    	non-compiled	[CE]  ')'  expected	8	None	replace
15	[BUG]  [BUGGY]  d  =  NumberUtils.createDouble(numeric  +  1);  [CE]  ')'  expected  [FE]        AssertionError    [CONTEXT]    }  catch  (NumberFormatException  nfe)  {  //  NOPMD  }  case  'd'  :  case  'D'  :  try  {  Double  d  =  NumberUtils.createDouble(numeric);  if  (!(d.isInfinite()  ||  (d.floatValue()  ==  0.0D  &&  !allZeros)))  {    [BUGGY]  d  =  NumberUtils.createDouble(numeric  +  1);  [BUGGY]    return  d;  }  }  catch  (NumberFormatException  nfe)  {  //  NOPMD  }  try  {  return  createBigDecimal(numeric);  }  catch  (NumberFormatException  e)  {  //  NOPMD  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  	projects/Lang7/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	537	537	1	replace	d  =  NumberUtils.createDouble(numeric  +  1);	      d    =    NumberUtils.createDouble(numeric);    	non-compiled	[CE]  ')'  expected	6	None	replace
16	[BUG]  [BUGGY]  d  =  NumberUtils.createNumber(numeric);  [CE]  ')'  expected  [FE]          AssertionError    [CONTEXT]    }  catch  (NumberFormatException  nfe)  {  //  NOPMD  }  case  'd'  :  case  'D'  :  try  {  Double  d  =  NumberUtils.createDouble(numeric);  if  (!(d.isInfinite()  ||  (d.floatValue()  ==  0.0D  &&  !allZeros)))  {    [BUGGY]  d  =  NumberUtils.createNumber(numeric);  [BUGGY]    return  d;  }  }  catch  (NumberFormatException  nfe)  {  //  NOPMD  }  try  {  return  createBigDecimal(numeric);  }  catch  (NumberFormatException  e)  {  //  NOPMD  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  	projects/Lang7/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	537	537	1	replace	d  =  NumberUtils.createNumber(numeric);	      d    =    NumberUtils.createDouble(numeric);    	non-compiled	[CE]  ')'  expected	6	None	replace
17	[BUG]  [BUGGY]  return  d.doubleValue()  +  1;  [CE]  ')'  expected  [FE]        AssertionError    [CONTEXT]    }  catch  (NumberFormatException  nfe)  {  //  NOPMD  }  case  'd'  :  case  'D'  :  try  {  Double  d  =  NumberUtils.createDouble(numeric);  if  (!(d.isInfinite()  ||  (d.floatValue()  ==  0.0D  &&  !allZeros)))  {    [BUGGY]  return  d.doubleValue()  +  1;  [BUGGY]    }  }  catch  (NumberFormatException  nfe)  {  //  NOPMD  }  try  {  return  createBigDecimal(numeric);  }  catch  (NumberFormatException  e)  {  //  NOPMD  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  	projects/Lang7/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	537	537	1	replace	return  d.doubleValue()  +  1;	  return    d.doubleValue();    	non-compiled	[CE]  ')'  expected	1	None	replace
18	[BUG]  [BUGGY]  return  d.doubleValue()  +  2;  [CE]  ')'  expected  [FE]          AssertionError    [CONTEXT]    }  catch  (NumberFormatException  nfe)  {  //  NOPMD  }  case  'd'  :  case  'D'  :  try  {  Double  d  =  NumberUtils.createDouble(numeric);  if  (!(d.isInfinite()  ||  (d.floatValue()  ==  0.0D  &&  !allZeros)))  {    [BUGGY]  return  d.doubleValue()  +  2;  [BUGGY]    }  }  catch  (NumberFormatException  nfe)  {  //  NOPMD  }  try  {  return  createBigDecimal(numeric);  }  catch  (NumberFormatException  e)  {  //  NOPMD  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  	projects/Lang7/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	537	537	1	replace	return  d.doubleValue()  +  2;	  return    d.doubleValue();    	non-compiled	[CE]  ')'  expected	1	None	replace
19	[BUG]  [BUGGY]  return  d.doubleValue()  -  1;  [CE]  ')'  expected  [FE]            AssertionError    [CONTEXT]    }  catch  (NumberFormatException  nfe)  {  //  NOPMD  }  case  'd'  :  case  'D'  :  try  {  Double  d  =  NumberUtils.createDouble(numeric);  if  (!(d.isInfinite()  ||  (d.floatValue()  ==  0.0D  &&  !allZeros)))  {    [BUGGY]  return  d.doubleValue()  -  1;  [BUGGY]    }  }  catch  (NumberFormatException  nfe)  {  //  NOPMD  }  try  {  return  createBigDecimal(numeric);  }  catch  (NumberFormatException  e)  {  //  NOPMD  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  	projects/Lang7/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	537	537	1	replace	return  d.doubleValue()  -  1;	  return    d.doubleValue();    	non-compiled	[CE]  ')'  expected	1	None	replace
20	[BUG]  [BUGGY]  return  d.intValue()  +  1;  [CE]  ')'  expected  [FE]        AssertionError    [CONTEXT]    }  catch  (NumberFormatException  nfe)  {  //  NOPMD  }  case  'd'  :  case  'D'  :  try  {  Double  d  =  NumberUtils.createDouble(numeric);  if  (!(d.isInfinite()  ||  (d.floatValue()  ==  0.0D  &&  !allZeros)))  {    [BUGGY]  return  d.intValue()  +  1;  [BUGGY]    }  }  catch  (NumberFormatException  nfe)  {  //  NOPMD  }  try  {  return  createBigDecimal(numeric);  }  catch  (NumberFormatException  e)  {  //  NOPMD  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  	projects/Lang7/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	537	537	1	replace	return  d.intValue()  +  1;	  return    d.intValue();    	non-compiled	[CE]  ')'  expected	12	None	replace
21	[BUG]  [BUGGY]  return  d.floatValue();  [CE]  ')'  expected  [FE]          AssertionError    [CONTEXT]    }  catch  (NumberFormatException  nfe)  {  //  NOPMD  }  case  'd'  :  case  'D'  :  try  {  Double  d  =  NumberUtils.createDouble(numeric);  if  (!(d.isInfinite()  ||  (d.floatValue()  ==  0.0D  &&  !allZeros)))  {    [BUGGY]  return  d.floatValue();  [BUGGY]    }  }  catch  (NumberFormatException  nfe)  {  //  NOPMD  }  try  {  return  createBigDecimal(numeric);  }  catch  (NumberFormatException  e)  {  //  NOPMD  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  	projects/Lang7/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	537	537	1	replace	return  d.floatValue();	  return    d.intValue();    	non-compiled	[CE]  ')'  expected	12	None	replace
22	[BUG]  [BUGGY]  d  =  new  Double(numeric.doubleValue()  +  1);  [CE]  ')'  expected  [FE]          AssertionError    [CONTEXT]    }  catch  (NumberFormatException  nfe)  {  //  NOPMD  }  case  'd'  :  case  'D'  :  try  {  Double  d  =  NumberUtils.createDouble(numeric);  if  (!(d.isInfinite()  ||  (d.floatValue()  ==  0.0D  &&  !allZeros)))  {    [BUGGY]  d  =  new  Double(numeric.doubleValue()  +  1);  [BUGGY]    return  d;  }  }  catch  (NumberFormatException  nfe)  {  //  NOPMD  }  try  {  return  createBigDecimal(numeric);  }  catch  (NumberFormatException  e)  {  //  NOPMD  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  	projects/Lang7/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	537	537	1	replace	d  =  new  Double(numeric.doubleValue()  +  1);	      d    =    new    Double(numeric.doubleValue());    	non-compiled	[CE]  ')'  expected	14	None	replace
23	[BUG]  [BUGGY]  d  =  new  Double(numeric.doubleValue()  +  2);  [CE]  ')'  expected  [FE]            AssertionError    [CONTEXT]    }  catch  (NumberFormatException  nfe)  {  //  NOPMD  }  case  'd'  :  case  'D'  :  try  {  Double  d  =  NumberUtils.createDouble(numeric);  if  (!(d.isInfinite()  ||  (d.floatValue()  ==  0.0D  &&  !allZeros)))  {    [BUGGY]  d  =  new  Double(numeric.doubleValue()  +  2);  [BUGGY]    return  d;  }  }  catch  (NumberFormatException  nfe)  {  //  NOPMD  }  try  {  return  createBigDecimal(numeric);  }  catch  (NumberFormatException  e)  {  //  NOPMD  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  	projects/Lang7/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	537	537	1	replace	d  =  new  Double(numeric.doubleValue()  +  2);	      d    =    new    Double(numeric.doubleValue());    	non-compiled	[CE]  ')'  expected	14	None	replace
24	[BUG]  [BUGGY]  d  =  new  Double(numeric.doubleValue()  +  3);  [CE]  ')'  expected  [FE]              AssertionError    [CONTEXT]    }  catch  (NumberFormatException  nfe)  {  //  NOPMD  }  case  'd'  :  case  'D'  :  try  {  Double  d  =  NumberUtils.createDouble(numeric);  if  (!(d.isInfinite()  ||  (d.floatValue()  ==  0.0D  &&  !allZeros)))  {    [BUGGY]  d  =  new  Double(numeric.doubleValue()  +  3);  [BUGGY]    return  d;  }  }  catch  (NumberFormatException  nfe)  {  //  NOPMD  }  try  {  return  createBigDecimal(numeric);  }  catch  (NumberFormatException  e)  {  //  NOPMD  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  	projects/Lang7/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	537	537	1	replace	d  =  new  Double(numeric.doubleValue()  +  3);	      d    =    new    Double(numeric.doubleValue());    	non-compiled	[CE]  ')'  expected	14	None	replace
25	[BUG]  [BUGGY]  d  =  NumberUtils.createBigInteger(numeric);  [CE]  ')'  expected  [FE]                AssertionError    [CONTEXT]    }  catch  (NumberFormatException  nfe)  {  //  NOPMD  }  case  'd'  :  case  'D'  :  try  {  Double  d  =  NumberUtils.createDouble(numeric);  if  (!(d.isInfinite()  ||  (d.floatValue()  ==  0.0D  &&  !allZeros)))  {    [BUGGY]  d  =  NumberUtils.createBigInteger(numeric);  [BUGGY]    return  d;  }  }  catch  (NumberFormatException  nfe)  {  //  NOPMD  }  try  {  return  createBigDecimal(numeric);  }  catch  (NumberFormatException  e)  {  //  NOPMD  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  	projects/Lang7/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	537	537	1	replace	d  =  NumberUtils.createBigInteger(numeric);	      d    =    NumberUtils.createLong(numeric);    	non-compiled	[CE]  ')'  expected	10	None	replace
26	[BUG]  [BUGGY]  return  d.infinite()  ||(d.floatValue()  ==  0.0D  &&!allZeros));  [CE]  ')'  expected  [FE]          AssertionError    [CONTEXT]    }  catch  (NumberFormatException  nfe)  {  //  NOPMD  }  case  'd'  :  case  'D'  :  try  {  Double  d  =  NumberUtils.createDouble(numeric);  if  (!(d.isInfinite()  ||  (d.floatValue()  ==  0.0D  &&  !allZeros)))  {    [BUGGY]  return  d.infinite()  ||(d.floatValue()  ==  0.0D  &&!allZeros));  [BUGGY]    }  }  catch  (NumberFormatException  nfe)  {  //  NOPMD  }  try  {  return  createBigDecimal(numeric);  }  catch  (NumberFormatException  e)  {  //  NOPMD  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  	projects/Lang7/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	537	537	1	replace	return  d.infinite()  ||(d.floatValue()  ==  0.0D  &&!allZeros));	  return    d.infinite();    	non-compiled	[CE]  ')'  expected	2	None	replace
27	[BUG]  [BUGGY]  return  d.infinite()  ||(d.floatValue()  ==  0.0D  &&!allZeros);  [CE]  ')'  expected  [FE]            AssertionError    [CONTEXT]    }  catch  (NumberFormatException  nfe)  {  //  NOPMD  }  case  'd'  :  case  'D'  :  try  {  Double  d  =  NumberUtils.createDouble(numeric);  if  (!(d.isInfinite()  ||  (d.floatValue()  ==  0.0D  &&  !allZeros)))  {    [BUGGY]  return  d.infinite()  ||(d.floatValue()  ==  0.0D  &&!allZeros);  [BUGGY]    }  }  catch  (NumberFormatException  nfe)  {  //  NOPMD  }  try  {  return  createBigDecimal(numeric);  }  catch  (NumberFormatException  e)  {  //  NOPMD  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  	projects/Lang7/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	537	537	1	replace	return  d.infinite()  ||(d.floatValue()  ==  0.0D  &&!allZeros);	  return    d.infinite();    	non-compiled	[CE]  ')'  expected	2	None	replace
28	[BUG]  [BUGGY]  return  d.infinite()  +  1;  [CE]  ')'  expected  [FE]              AssertionError    [CONTEXT]    }  catch  (NumberFormatException  nfe)  {  //  NOPMD  }  case  'd'  :  case  'D'  :  try  {  Double  d  =  NumberUtils.createDouble(numeric);  if  (!(d.isInfinite()  ||  (d.floatValue()  ==  0.0D  &&  !allZeros)))  {    [BUGGY]  return  d.infinite()  +  1;  [BUGGY]    }  }  catch  (NumberFormatException  nfe)  {  //  NOPMD  }  try  {  return  createBigDecimal(numeric);  }  catch  (NumberFormatException  e)  {  //  NOPMD  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  	projects/Lang7/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	537	537	1	replace	return  d.infinite()  +  1;	  return    d.infinite();    	non-compiled	[CE]  ')'  expected	2	None	replace
29	[BUG]  [BUGGY]  d  =  Double.valueOf(numeric.doubleValue());  [CE]  ')'  expected  [FE]        AssertionError    [CONTEXT]    }  catch  (NumberFormatException  nfe)  {  //  NOPMD  }  case  'd'  :  case  'D'  :  try  {  Double  d  =  NumberUtils.createDouble(numeric);  if  (!(d.isInfinite()  ||  (d.floatValue()  ==  0.0D  &&  !allZeros)))  {    [BUGGY]  d  =  Double.valueOf(numeric.doubleValue());  [BUGGY]    return  d;  }  }  catch  (NumberFormatException  nfe)  {  //  NOPMD  }  try  {  return  createBigDecimal(numeric);  }  catch  (NumberFormatException  e)  {  //  NOPMD  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  	projects/Lang7/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	537	537	1	replace	d  =  Double.valueOf(numeric.doubleValue());	      d    =    Double.valueOf(numeric);    	non-compiled	[CE]  ')'  expected	11	None	replace
30	[BUG]  [BUGGY]  return  d.infinite(str);  [CE]  ')'  expected  [FE]          AssertionError    [CONTEXT]    }  catch  (NumberFormatException  nfe)  {  //  NOPMD  }  case  'd'  :  case  'D'  :  try  {  Double  d  =  NumberUtils.createDouble(numeric);  if  (!(d.isInfinite()  ||  (d.floatValue()  ==  0.0D  &&  !allZeros)))  {    [BUGGY]  return  d.infinite(str);  [BUGGY]    }  }  catch  (NumberFormatException  nfe)  {  //  NOPMD  }  try  {  return  createBigDecimal(numeric);  }  catch  (NumberFormatException  e)  {  //  NOPMD  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  	projects/Lang7/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	537	537	1	replace	return  d.infinite(str);	  return    d.infinite();    	non-compiled	[CE]  ')'  expected	2	None	replace
31	[BUG]  [BUGGY]  d  =  Double.parseDouble(numeric  +  1);  [CE]  ')'  expected  [FE]              AssertionError    [CONTEXT]    }  catch  (NumberFormatException  nfe)  {  //  NOPMD  }  case  'd'  :  case  'D'  :  try  {  Double  d  =  NumberUtils.createDouble(numeric);  if  (!(d.isInfinite()  ||  (d.floatValue()  ==  0.0D  &&  !allZeros)))  {    [BUGGY]  d  =  Double.parseDouble(numeric  +  1);  [BUGGY]    return  d;  }  }  catch  (NumberFormatException  nfe)  {  //  NOPMD  }  try  {  return  createBigDecimal(numeric);  }  catch  (NumberFormatException  e)  {  //  NOPMD  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  	projects/Lang7/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	537	537	1	replace	d  =  Double.parseDouble(numeric  +  1);	      d    =    Double.parseDouble(numeric);    	non-compiled	[CE]  ')'  expected	9	None	replace
32	[BUG]  [BUGGY]  return  d.doubleValue()  +  3;  [CE]  ')'  expected  [FE]        AssertionError    [CONTEXT]    }  catch  (NumberFormatException  nfe)  {  //  NOPMD  }  case  'd'  :  case  'D'  :  try  {  Double  d  =  NumberUtils.createDouble(numeric);  if  (!(d.isInfinite()  ||  (d.floatValue()  ==  0.0D  &&  !allZeros)))  {    [BUGGY]  return  d.doubleValue()  +  3;  [BUGGY]    }  }  catch  (NumberFormatException  nfe)  {  //  NOPMD  }  try  {  return  createBigDecimal(numeric);  }  catch  (NumberFormatException  e)  {  //  NOPMD  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  	projects/Lang7/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	537	537	1	replace	return  d.doubleValue()  +  3;	  return    d.doubleValue();    	non-compiled	[CE]  ')'  expected	1	None	replace
33	[BUG]  [BUGGY]  Double  d  =  NumberUtils.createDouble(numeric)+  1;  [CE]  ')'  expected  [FE]            AssertionError    [CONTEXT]    }  catch  (NumberFormatException  nfe)  {  //  NOPMD  }  case  'd'  :  case  'D'  :  try  {  Double  d  =  NumberUtils.createDouble(numeric);  if  (!(d.isInfinite()  ||  (d.floatValue()  ==  0.0D  &&  !allZeros)))  {    [BUGGY]  Double  d  =  NumberUtils.createDouble(numeric)+  1;  [BUGGY]    return  d;  }  }  catch  (NumberFormatException  nfe)  {  //  NOPMD  }  try  {  return  createBigDecimal(numeric);  }  catch  (NumberFormatException  e)  {  //  NOPMD  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  	projects/Lang7/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	537	537	1	replace	Double  d  =  NumberUtils.createDouble(numeric)+  1;	      Double    d    =    NumberUtils.createDouble(numeric);    	non-compiled	[CE]  ')'  expected	8	None	replace
34	[BUG]  [BUGGY]  return  createInteger(numeric);  [CE]  ')'  expected  [FE]                AssertionError    [CONTEXT]    }  catch  (NumberFormatException  nfe)  {  //  NOPMD  }  case  'd'  :  case  'D'  :  try  {  Double  d  =  NumberUtils.createDouble(numeric);  if  (!(d.isInfinite()  ||  (d.floatValue()  ==  0.0D  &&  !allZeros)))  {    [BUGGY]  return  createInteger(numeric);  [BUGGY]    }  }  catch  (NumberFormatException  nfe)  {  //  NOPMD  }  try  {  return  createBigDecimal(numeric);  }  catch  (NumberFormatException  e)  {  //  NOPMD  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  	projects/Lang7/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	537	537	1	replace	return  createInteger(numeric);	      	non-compiled	[CE]  ')'  expected	5	None	replace
35	[BUG]  [BUGGY]  return  d.infiniteValue();  [CE]  ')'  expected  [FE]        AssertionError    [CONTEXT]    }  catch  (NumberFormatException  nfe)  {  //  NOPMD  }  case  'd'  :  case  'D'  :  try  {  Double  d  =  NumberUtils.createDouble(numeric);  if  (!(d.isInfinite()  ||  (d.floatValue()  ==  0.0D  &&  !allZeros)))  {    [BUGGY]  return  d.infiniteValue();  [BUGGY]    }  }  catch  (NumberFormatException  nfe)  {  //  NOPMD  }  try  {  return  createBigDecimal(numeric);  }  catch  (NumberFormatException  e)  {  //  NOPMD  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  	projects/Lang7/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	537	537	1	replace	return  d.infiniteValue();	  return    d.intValue();    	non-compiled	[CE]  ')'  expected	12	None	replace
36	[BUG]  [BUGGY]  return  d.infinite  ||  d.floatValue()  ==  0.0D  &&!allZeros);  [CE]  ')'  expected  [FE]            AssertionError    [CONTEXT]    }  catch  (NumberFormatException  nfe)  {  //  NOPMD  }  case  'd'  :  case  'D'  :  try  {  Double  d  =  NumberUtils.createDouble(numeric);  if  (!(d.isInfinite()  ||  (d.floatValue()  ==  0.0D  &&  !allZeros)))  {    [BUGGY]  return  d.infinite  ||  d.floatValue()  ==  0.0D  &&!allZeros);  [BUGGY]    }  }  catch  (NumberFormatException  nfe)  {  //  NOPMD  }  try  {  return  createBigDecimal(numeric);  }  catch  (NumberFormatException  e)  {  //  NOPMD  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  	projects/Lang7/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	537	537	1	replace	return  d.infinite  ||  d.floatValue()  ==  0.0D  &&!allZeros);	  return    d.infinite;    	non-compiled	[CE]  ')'  expected	3	None	replace
37	[BUG]  [BUGGY]  d  =  Double.valueOf(numeric).doubleValue();  [CE]  ')'  expected  [FE]        AssertionError    [CONTEXT]    }  catch  (NumberFormatException  nfe)  {  //  NOPMD  }  case  'd'  :  case  'D'  :  try  {  Double  d  =  NumberUtils.createDouble(numeric);  if  (!(d.isInfinite()  ||  (d.floatValue()  ==  0.0D  &&  !allZeros)))  {    [BUGGY]  d  =  Double.valueOf(numeric).doubleValue();  [BUGGY]    return  d;  }  }  catch  (NumberFormatException  nfe)  {  //  NOPMD  }  try  {  return  createBigDecimal(numeric);  }  catch  (NumberFormatException  e)  {  //  NOPMD  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  	projects/Lang7/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	537	537	1	replace	d  =  Double.valueOf(numeric).doubleValue();	      d    =    Double.valueOf(numeric);    	non-compiled	[CE]  ')'  expected	11	None	replace
38	[BUG]  [BUGGY]  d  =  Double.valueOf(numeric  +  1);  [CE]  ')'  expected  [FE]          AssertionError    [CONTEXT]    }  catch  (NumberFormatException  nfe)  {  //  NOPMD  }  case  'd'  :  case  'D'  :  try  {  Double  d  =  NumberUtils.createDouble(numeric);  if  (!(d.isInfinite()  ||  (d.floatValue()  ==  0.0D  &&  !allZeros)))  {    [BUGGY]  d  =  Double.valueOf(numeric  +  1);  [BUGGY]    return  d;  }  }  catch  (NumberFormatException  nfe)  {  //  NOPMD  }  try  {  return  createBigDecimal(numeric);  }  catch  (NumberFormatException  e)  {  //  NOPMD  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  	projects/Lang7/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	537	537	1	replace	d  =  Double.valueOf(numeric  +  1);	      d    =    Double.valueOf(numeric);    	non-compiled	[CE]  ')'  expected	11	None	replace
39	[BUG]  [BUGGY]  return  d!=  null?  Double.POSITIVE_INFINITY  :  d.doubleValue();  [CE]  ')'  expected  [FE]        AssertionError    [CONTEXT]    }  catch  (NumberFormatException  nfe)  {  //  NOPMD  }  case  'd'  :  case  'D'  :  try  {  Double  d  =  NumberUtils.createDouble(numeric);  if  (!(d.isInfinite()  ||  (d.floatValue()  ==  0.0D  &&  !allZeros)))  {    [BUGGY]  return  d!=  null?  Double.POSITIVE_INFINITY  :  d.doubleValue();  [BUGGY]    }  }  catch  (NumberFormatException  nfe)  {  //  NOPMD  }  try  {  return  createBigDecimal(numeric);  }  catch  (NumberFormatException  e)  {  //  NOPMD  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  	projects/Lang7/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	537	537	1	replace	return  d!=  null?  Double.POSITIVE_INFINITY  :  d.doubleValue();	  return    d!=    null?    Double.POSITIVE_INFINITY    :    d;    	non-compiled	[CE]  ')'  expected	15	None	replace
40	[BUG]  [BUGGY]  return(d.infinite()  ==  0.0D  &&!allZeros)?  Double.POSITIVE_INFINITY  :  d.infinite;  [CE]  ')'  expected  [FE]            AssertionError    [CONTEXT]    }  catch  (NumberFormatException  nfe)  {  //  NOPMD  }  case  'd'  :  case  'D'  :  try  {  Double  d  =  NumberUtils.createDouble(numeric);  if  (!(d.isInfinite()  ||  (d.floatValue()  ==  0.0D  &&  !allZeros)))  {    [BUGGY]  return(d.infinite()  ==  0.0D  &&!allZeros)?  Double.POSITIVE_INFINITY  :  d.infinite;  [BUGGY]    }  }  catch  (NumberFormatException  nfe)  {  //  NOPMD  }  try  {  return  createBigDecimal(numeric);  }  catch  (NumberFormatException  e)  {  //  NOPMD  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  	projects/Lang7/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	537	537	1	replace	return(d.infinite()  ==  0.0D  &&!allZeros)?  Double.POSITIVE_INFINITY  :  d.infinite;	  return    d.infinite;    	non-compiled	[CE]  ')'  expected	3	None	replace
41	[BUG]  [BUGGY]  return(d.infinite()  ==  0.0D  &&!allZeros)?  createBigDecimal(numeric):  d.infinite;  [CE]  ')'  expected  [FE]              AssertionError    [CONTEXT]    }  catch  (NumberFormatException  nfe)  {  //  NOPMD  }  case  'd'  :  case  'D'  :  try  {  Double  d  =  NumberUtils.createDouble(numeric);  if  (!(d.isInfinite()  ||  (d.floatValue()  ==  0.0D  &&  !allZeros)))  {    [BUGGY]  return(d.infinite()  ==  0.0D  &&!allZeros)?  createBigDecimal(numeric):  d.infinite;  [BUGGY]    }  }  catch  (NumberFormatException  nfe)  {  //  NOPMD  }  try  {  return  createBigDecimal(numeric);  }  catch  (NumberFormatException  e)  {  //  NOPMD  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  	projects/Lang7/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	537	537	1	replace	return(d.infinite()  ==  0.0D  &&!allZeros)?  createBigDecimal(numeric):  d.infinite;	  return    d.infinite;    	non-compiled	[CE]  ')'  expected	3	None	replace
42	[BUG]  [BUGGY]  return(d.infinite()  ==  0.0D)?  Double.POSITIVE_INFINITY  :  d.infinite;  [CE]  ')'  expected  [FE]                AssertionError    [CONTEXT]    }  catch  (NumberFormatException  nfe)  {  //  NOPMD  }  case  'd'  :  case  'D'  :  try  {  Double  d  =  NumberUtils.createDouble(numeric);  if  (!(d.isInfinite()  ||  (d.floatValue()  ==  0.0D  &&  !allZeros)))  {    [BUGGY]  return(d.infinite()  ==  0.0D)?  Double.POSITIVE_INFINITY  :  d.infinite;  [BUGGY]    }  }  catch  (NumberFormatException  nfe)  {  //  NOPMD  }  try  {  return  createBigDecimal(numeric);  }  catch  (NumberFormatException  e)  {  //  NOPMD  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  	projects/Lang7/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	537	537	1	replace	return(d.infinite()  ==  0.0D)?  Double.POSITIVE_INFINITY  :  d.infinite;	  return    d.infinite;    	non-compiled	[CE]  ')'  expected	3	None	replace
43	[BUG]  [BUGGY]  d  =  Double.POSITIVE_INFINITY;  [CE]  ')'  expected  [FE]        AssertionError    [CONTEXT]    }  catch  (NumberFormatException  nfe)  {  //  NOPMD  }  case  'd'  :  case  'D'  :  try  {  Double  d  =  NumberUtils.createDouble(numeric);  if  (!(d.isInfinite()  ||  (d.floatValue()  ==  0.0D  &&  !allZeros)))  {    [BUGGY]  d  =  Double.POSITIVE_INFINITY;  [BUGGY]    return  d;  }  }  catch  (NumberFormatException  nfe)  {  //  NOPMD  }  try  {  return  createBigDecimal(numeric);  }  catch  (NumberFormatException  e)  {  //  NOPMD  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  	projects/Lang7/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	537	537	1	replace	d  =  Double.POSITIVE_INFINITY;	      d    =    Double.valueOf(numeric);    	non-compiled	[CE]  ')'  expected	11	None	replace
44	[BUG]  [BUGGY]  if(!(d.isInfinite()  ||(d.floatValue()  ==  0.0D  &&!allZeros)))  {  return  createBigDecimal(numeric);  }  [CE]  ')'  expected  [FE]                AssertionError    [CONTEXT]    }  catch  (NumberFormatException  nfe)  {  //  NOPMD  }  case  'd'  :  case  'D'  :  try  {  Double  d  =  NumberUtils.createDouble(numeric);  if  (!(d.isInfinite()  ||  (d.floatValue()  ==  0.0D  &&  !allZeros)))  {    [BUGGY]  if(!(d.isInfinite()  ||(d.floatValue()  ==  0.0D  &&!allZeros)))  {  return  createBigDecimal(numeric);  }  [BUGGY]    }  }  catch  (NumberFormatException  nfe)  {  //  NOPMD  }  try  {  return  createBigDecimal(numeric);  }  catch  (NumberFormatException  e)  {  //  NOPMD  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  	projects/Lang7/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	537	537	1	replace	if(!(d.isInfinite()  ||(d.floatValue()  ==  0.0D  &&!allZeros)))  {  return  createBigDecimal(numeric);  }	      	non-compiled	[CE]  ')'  expected	5	None	replace
45	[BUG]  [BUGGY]  if(!(d.isInfinite()  ||(d.floatValue()  ==  0.0D  &&!allZeros)))  {  return  createLong(numeric);  }  [CE]  ')'  expected  [FE]                  AssertionError    [CONTEXT]    }  catch  (NumberFormatException  nfe)  {  //  NOPMD  }  case  'd'  :  case  'D'  :  try  {  Double  d  =  NumberUtils.createDouble(numeric);  if  (!(d.isInfinite()  ||  (d.floatValue()  ==  0.0D  &&  !allZeros)))  {    [BUGGY]  if(!(d.isInfinite()  ||(d.floatValue()  ==  0.0D  &&!allZeros)))  {  return  createLong(numeric);  }  [BUGGY]    }  }  catch  (NumberFormatException  nfe)  {  //  NOPMD  }  try  {  return  createBigDecimal(numeric);  }  catch  (NumberFormatException  e)  {  //  NOPMD  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  	projects/Lang7/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	537	537	1	replace	if(!(d.isInfinite()  ||(d.floatValue()  ==  0.0D  &&!allZeros)))  {  return  createLong(numeric);  }	      	non-compiled	[CE]  ')'  expected	5	None	replace
46	[BUG]  [BUGGY]  return  d.infinite()  ||  d.floatValue()  ==  0.0D  &&!allZeros)?  Double.POSITIVE_INFINITY  :  d.infinite();  [CE]  ')'  expected  [FE]          AssertionError    [CONTEXT]    }  catch  (NumberFormatException  nfe)  {  //  NOPMD  }  case  'd'  :  case  'D'  :  try  {  Double  d  =  NumberUtils.createDouble(numeric);  if  (!(d.isInfinite()  ||  (d.floatValue()  ==  0.0D  &&  !allZeros)))  {    [BUGGY]  return  d.infinite()  ||  d.floatValue()  ==  0.0D  &&!allZeros)?  Double.POSITIVE_INFINITY  :  d.infinite();  [BUGGY]    }  }  catch  (NumberFormatException  nfe)  {  //  NOPMD  }  try  {  return  createBigDecimal(numeric);  }  catch  (NumberFormatException  e)  {  //  NOPMD  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  	projects/Lang7/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	537	537	1	replace	return  d.infinite()  ||  d.floatValue()  ==  0.0D  &&!allZeros)?  Double.POSITIVE_INFINITY  :  d.infinite();	  return    d.infinite();    	non-compiled	[CE]  ')'  expected	2	None	replace
47	[BUG]  [BUGGY]  return  d.infinite()  ||  d.floatValue()  ==  0.0D  &&!allZeros)?  createBigDecimal(numeric):  null;  [CE]  ')'  expected  [FE]            AssertionError    [CONTEXT]    }  catch  (NumberFormatException  nfe)  {  //  NOPMD  }  case  'd'  :  case  'D'  :  try  {  Double  d  =  NumberUtils.createDouble(numeric);  if  (!(d.isInfinite()  ||  (d.floatValue()  ==  0.0D  &&  !allZeros)))  {    [BUGGY]  return  d.infinite()  ||  d.floatValue()  ==  0.0D  &&!allZeros)?  createBigDecimal(numeric):  null;  [BUGGY]    }  }  catch  (NumberFormatException  nfe)  {  //  NOPMD  }  try  {  return  createBigDecimal(numeric);  }  catch  (NumberFormatException  e)  {  //  NOPMD  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  	projects/Lang7/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	537	537	1	replace	return  d.infinite()  ||  d.floatValue()  ==  0.0D  &&!allZeros)?  createBigDecimal(numeric):  null;	  return    d.infinite();    	non-compiled	[CE]  ')'  expected	2	None	replace
48	[BUG]  [BUGGY]  return  d!=  null?  Double.NaN  :  d.doubleValue();  [CE]  ')'  expected  [FE]          AssertionError    [CONTEXT]    }  catch  (NumberFormatException  nfe)  {  //  NOPMD  }  case  'd'  :  case  'D'  :  try  {  Double  d  =  NumberUtils.createDouble(numeric);  if  (!(d.isInfinite()  ||  (d.floatValue()  ==  0.0D  &&  !allZeros)))  {    [BUGGY]  return  d!=  null?  Double.NaN  :  d.doubleValue();  [BUGGY]    }  }  catch  (NumberFormatException  nfe)  {  //  NOPMD  }  try  {  return  createBigDecimal(numeric);  }  catch  (NumberFormatException  e)  {  //  NOPMD  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  	projects/Lang7/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	537	537	1	replace	return  d!=  null?  Double.NaN  :  d.doubleValue();	  return    d!=    null?    Double.NaN    :    d;    	non-compiled	[CE]  ')'  expected	16	None	replace
49	[BUG]  [BUGGY]  d  =  NumberUtils.createDouble(numeric).doubleValue();  [CE]  ')'  expected  [FE]        AssertionError    [CONTEXT]    }  catch  (NumberFormatException  nfe)  {  //  NOPMD  }  case  'd'  :  case  'D'  :  try  {  Double  d  =  NumberUtils.createDouble(numeric);  if  (!(d.isInfinite()  ||  (d.floatValue()  ==  0.0D  &&  !allZeros)))  {    [BUGGY]  d  =  NumberUtils.createDouble(numeric).doubleValue();  [BUGGY]    return  d;  }  }  catch  (NumberFormatException  nfe)  {  //  NOPMD  }  try  {  return  createBigDecimal(numeric);  }  catch  (NumberFormatException  e)  {  //  NOPMD  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  	projects/Lang7/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	537	537	1	replace	d  =  NumberUtils.createDouble(numeric).doubleValue();	      d    =    NumberUtils.createDouble(numeric);    	non-compiled	[CE]  ')'  expected	6	None	replace
50	[BUG]  [BUGGY]  d  =  NumberUtils.createDouble(numeric)+  1;  [CE]  ')'  expected  [FE]          AssertionError    [CONTEXT]    }  catch  (NumberFormatException  nfe)  {  //  NOPMD  }  case  'd'  :  case  'D'  :  try  {  Double  d  =  NumberUtils.createDouble(numeric);  if  (!(d.isInfinite()  ||  (d.floatValue()  ==  0.0D  &&  !allZeros)))  {    [BUGGY]  d  =  NumberUtils.createDouble(numeric)+  1;  [BUGGY]    return  d;  }  }  catch  (NumberFormatException  nfe)  {  //  NOPMD  }  try  {  return  createBigDecimal(numeric);  }  catch  (NumberFormatException  e)  {  //  NOPMD  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  	projects/Lang7/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	537	537	1	replace	d  =  NumberUtils.createDouble(numeric)+  1;	      d    =    NumberUtils.createDouble(numeric);    	non-compiled	[CE]  ')'  expected	6	None	replace
