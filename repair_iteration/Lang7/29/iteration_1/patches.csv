bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  NumberUtils.copyPath(mant,  str);  [CE]  ')'  expected  [FE]                AssertionError    [CONTEXT]    case  'D'  :  try  {  Double  d  =  NumberUtils.createDouble(numeric);  if  (!(d.isInfinite()  ||  (d.floatValue()  ==  0.0D  &&  !allZeros)))  {  return  d;  }  }  catch  (NumberFormatException  nfe)  {  //  NOPMD  }  try  {    [BUGGY]  NumberUtils.copyPath(mant,  str);  [BUGGY]    return  createBigDecimal(numeric);  }  catch  (NumberFormatException  e)  {  //  NOPMD  }  default  :  throw  new  NumberFormatException(str  +     "  is  not  a  valid  number.   ");  }  }  else  {  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  	projects/Lang7/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	543	543	1	replace	NumberUtils.copyPath(mant,  str);	      NumberUtils.copyPath(numeric,    str);    	non-compiled	[CE]  ')'  expected	12	None	replace
2	[BUG]  [BUGGY]  NumberUtils.copyPath(numeric,  mant);  [CE]  ')'  expected  [FE]                  AssertionError    [CONTEXT]    case  'D'  :  try  {  Double  d  =  NumberUtils.createDouble(numeric);  if  (!(d.isInfinite()  ||  (d.floatValue()  ==  0.0D  &&  !allZeros)))  {  return  d;  }  }  catch  (NumberFormatException  nfe)  {  //  NOPMD  }  try  {    [BUGGY]  NumberUtils.copyPath(numeric,  mant);  [BUGGY]    return  createBigDecimal(numeric);  }  catch  (NumberFormatException  e)  {  //  NOPMD  }  default  :  throw  new  NumberFormatException(str  +     "  is  not  a  valid  number.   ");  }  }  else  {  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  	projects/Lang7/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	543	543	1	replace	NumberUtils.copyPath(numeric,  mant);	      NumberUtils.copyPath(numeric,    str);    	non-compiled	[CE]  ')'  expected	12	None	replace
3	[BUG]  [BUGGY]  NumberUtils.copyPath(str,  numeric);  [CE]  ')'  expected  [FE]                    AssertionError    [CONTEXT]    case  'D'  :  try  {  Double  d  =  NumberUtils.createDouble(numeric);  if  (!(d.isInfinite()  ||  (d.floatValue()  ==  0.0D  &&  !allZeros)))  {  return  d;  }  }  catch  (NumberFormatException  nfe)  {  //  NOPMD  }  try  {    [BUGGY]  NumberUtils.copyPath(str,  numeric);  [BUGGY]    return  createBigDecimal(numeric);  }  catch  (NumberFormatException  e)  {  //  NOPMD  }  default  :  throw  new  NumberFormatException(str  +     "  is  not  a  valid  number.   ");  }  }  else  {  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  	projects/Lang7/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	543	543	1	replace	NumberUtils.copyPath(str,  numeric);	      NumberUtils.copyPath(numeric,    str);    	non-compiled	[CE]  ')'  expected	12	None	replace
4	[BUG]  [BUGGY]  NumberUtils.copyPath(numeric,  str,  exp);  [CE]  ')'  expected  [FE]                      AssertionError    [CONTEXT]    case  'D'  :  try  {  Double  d  =  NumberUtils.createDouble(numeric);  if  (!(d.isInfinite()  ||  (d.floatValue()  ==  0.0D  &&  !allZeros)))  {  return  d;  }  }  catch  (NumberFormatException  nfe)  {  //  NOPMD  }  try  {    [BUGGY]  NumberUtils.copyPath(numeric,  str,  exp);  [BUGGY]    return  createBigDecimal(numeric);  }  catch  (NumberFormatException  e)  {  //  NOPMD  }  default  :  throw  new  NumberFormatException(str  +     "  is  not  a  valid  number.   ");  }  }  else  {  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  	projects/Lang7/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	543	543	1	replace	NumberUtils.copyPath(numeric,  str,  exp);	      NumberUtils.copyPath(numeric,    str);    	non-compiled	[CE]  ')'  expected	12	None	replace
5	[BUG]  [BUGGY]  NumberUtils.copyValue(mant,  str);  [CE]  ')'  expected  [FE]            AssertionError    [CONTEXT]    case  'D'  :  try  {  Double  d  =  NumberUtils.createDouble(numeric);  if  (!(d.isInfinite()  ||  (d.floatValue()  ==  0.0D  &&  !allZeros)))  {  return  d;  }  }  catch  (NumberFormatException  nfe)  {  //  NOPMD  }  try  {    [BUGGY]  NumberUtils.copyValue(mant,  str);  [BUGGY]    return  createBigDecimal(numeric);  }  catch  (NumberFormatException  e)  {  //  NOPMD  }  default  :  throw  new  NumberFormatException(str  +     "  is  not  a  valid  number.   ");  }  }  else  {  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  	projects/Lang7/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	543	543	1	replace	NumberUtils.copyValue(mant,  str);	      NumberUtils.copyValue(numeric,    str);    	non-compiled	[CE]  ')'  expected	10	None	replace
6	[BUG]  [BUGGY]  NumberUtils.copyValue(numeric,  mant);  [CE]  ')'  expected  [FE]              AssertionError    [CONTEXT]    case  'D'  :  try  {  Double  d  =  NumberUtils.createDouble(numeric);  if  (!(d.isInfinite()  ||  (d.floatValue()  ==  0.0D  &&  !allZeros)))  {  return  d;  }  }  catch  (NumberFormatException  nfe)  {  //  NOPMD  }  try  {    [BUGGY]  NumberUtils.copyValue(numeric,  mant);  [BUGGY]    return  createBigDecimal(numeric);  }  catch  (NumberFormatException  e)  {  //  NOPMD  }  default  :  throw  new  NumberFormatException(str  +     "  is  not  a  valid  number.   ");  }  }  else  {  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  	projects/Lang7/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	543	543	1	replace	NumberUtils.copyValue(numeric,  mant);	      NumberUtils.copyValue(numeric,    str);    	non-compiled	[CE]  ')'  expected	10	None	replace
7	[BUG]  [BUGGY]  NumberUtils.copyDecimal(numeric,  str);  [CE]  ')'  expected  [FE]                AssertionError    [CONTEXT]    case  'D'  :  try  {  Double  d  =  NumberUtils.createDouble(numeric);  if  (!(d.isInfinite()  ||  (d.floatValue()  ==  0.0D  &&  !allZeros)))  {  return  d;  }  }  catch  (NumberFormatException  nfe)  {  //  NOPMD  }  try  {    [BUGGY]  NumberUtils.copyDecimal(numeric,  str);  [BUGGY]    return  createBigDecimal(numeric);  }  catch  (NumberFormatException  e)  {  //  NOPMD  }  default  :  throw  new  NumberFormatException(str  +     "  is  not  a  valid  number.   ");  }  }  else  {  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  	projects/Lang7/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	543	543	1	replace	NumberUtils.copyDecimal(numeric,  str);	      NumberUtils.copyValue(numeric,    str);    	non-compiled	[CE]  ')'  expected	10	None	replace
8	[BUG]  [BUGGY]  NumberUtils.copyNumber(mant,  str);  [CE]  ')'  expected  [FE]          AssertionError    [CONTEXT]    case  'D'  :  try  {  Double  d  =  NumberUtils.createDouble(numeric);  if  (!(d.isInfinite()  ||  (d.floatValue()  ==  0.0D  &&  !allZeros)))  {  return  d;  }  }  catch  (NumberFormatException  nfe)  {  //  NOPMD  }  try  {    [BUGGY]  NumberUtils.copyNumber(mant,  str);  [BUGGY]    return  createBigDecimal(numeric);  }  catch  (NumberFormatException  e)  {  //  NOPMD  }  default  :  throw  new  NumberFormatException(str  +     "  is  not  a  valid  number.   ");  }  }  else  {  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  	projects/Lang7/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	543	543	1	replace	NumberUtils.copyNumber(mant,  str);	      NumberUtils.copyNumber(numeric,    str);    	non-compiled	[CE]  ')'  expected	9	None	replace
9	[BUG]  [BUGGY]  NumberUtils.copyNumber(numeric,  mant);  [CE]  ')'  expected  [FE]            AssertionError    [CONTEXT]    case  'D'  :  try  {  Double  d  =  NumberUtils.createDouble(numeric);  if  (!(d.isInfinite()  ||  (d.floatValue()  ==  0.0D  &&  !allZeros)))  {  return  d;  }  }  catch  (NumberFormatException  nfe)  {  //  NOPMD  }  try  {    [BUGGY]  NumberUtils.copyNumber(numeric,  mant);  [BUGGY]    return  createBigDecimal(numeric);  }  catch  (NumberFormatException  e)  {  //  NOPMD  }  default  :  throw  new  NumberFormatException(str  +     "  is  not  a  valid  number.   ");  }  }  else  {  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  	projects/Lang7/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	543	543	1	replace	NumberUtils.copyNumber(numeric,  mant);	      NumberUtils.copyNumber(numeric,    str);    	non-compiled	[CE]  ')'  expected	9	None	replace
10	[BUG]  [BUGGY]  NumberUtils.copyNumber(str,  numeric);  [CE]  ')'  expected  [FE]              AssertionError    [CONTEXT]    case  'D'  :  try  {  Double  d  =  NumberUtils.createDouble(numeric);  if  (!(d.isInfinite()  ||  (d.floatValue()  ==  0.0D  &&  !allZeros)))  {  return  d;  }  }  catch  (NumberFormatException  nfe)  {  //  NOPMD  }  try  {    [BUGGY]  NumberUtils.copyNumber(str,  numeric);  [BUGGY]    return  createBigDecimal(numeric);  }  catch  (NumberFormatException  e)  {  //  NOPMD  }  default  :  throw  new  NumberFormatException(str  +     "  is  not  a  valid  number.   ");  }  }  else  {  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  	projects/Lang7/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	543	543	1	replace	NumberUtils.copyNumber(str,  numeric);	      NumberUtils.copyNumber(numeric,    str);    	non-compiled	[CE]  ')'  expected	9	None	replace
11	[BUG]  [BUGGY]  NumberUtils.copyNumber(numeric,  str,  exp);  [CE]  ')'  expected  [FE]                AssertionError    [CONTEXT]    case  'D'  :  try  {  Double  d  =  NumberUtils.createDouble(numeric);  if  (!(d.isInfinite()  ||  (d.floatValue()  ==  0.0D  &&  !allZeros)))  {  return  d;  }  }  catch  (NumberFormatException  nfe)  {  //  NOPMD  }  try  {    [BUGGY]  NumberUtils.copyNumber(numeric,  str,  exp);  [BUGGY]    return  createBigDecimal(numeric);  }  catch  (NumberFormatException  e)  {  //  NOPMD  }  default  :  throw  new  NumberFormatException(str  +     "  is  not  a  valid  number.   ");  }  }  else  {  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  	projects/Lang7/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	543	543	1	replace	NumberUtils.copyNumber(numeric,  str,  exp);	      NumberUtils.copyNumber(numeric,    str);    	non-compiled	[CE]  ')'  expected	9	None	replace
12	[BUG]  [BUGGY]  Double  d  =  NumberUtils.createDouble(str);  [CE]  ')'  expected  [FE]        AssertionError    [CONTEXT]    case  'D'  :  try  {  Double  d  =  NumberUtils.createDouble(numeric);  if  (!(d.isInfinite()  ||  (d.floatValue()  ==  0.0D  &&  !allZeros)))  {  return  d;  }  }  catch  (NumberFormatException  nfe)  {  //  NOPMD  }  try  {    [BUGGY]  Double  d  =  NumberUtils.createDouble(str);  [BUGGY]    return  createBigDecimal(numeric);  }  catch  (NumberFormatException  e)  {  //  NOPMD  }  default  :  throw  new  NumberFormatException(str  +     "  is  not  a  valid  number.   ");  }  }  else  {  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  	projects/Lang7/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	543	543	1	replace	Double  d  =  NumberUtils.createDouble(str);	      Double    d    =    NumberUtils.createDouble(numeric);    	non-compiled	[CE]  ')'  expected	8	None	replace
13	[BUG]  [BUGGY]  Double  d  =  NumberUtils.createDouble(numeric,  str);  [CE]  ')'  expected  [FE]          AssertionError    [CONTEXT]    case  'D'  :  try  {  Double  d  =  NumberUtils.createDouble(numeric);  if  (!(d.isInfinite()  ||  (d.floatValue()  ==  0.0D  &&  !allZeros)))  {  return  d;  }  }  catch  (NumberFormatException  nfe)  {  //  NOPMD  }  try  {    [BUGGY]  Double  d  =  NumberUtils.createDouble(numeric,  str);  [BUGGY]    return  createBigDecimal(numeric);  }  catch  (NumberFormatException  e)  {  //  NOPMD  }  default  :  throw  new  NumberFormatException(str  +     "  is  not  a  valid  number.   ");  }  }  else  {  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  	projects/Lang7/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	543	543	1	replace	Double  d  =  NumberUtils.createDouble(numeric,  str);	      Double    d    =    NumberUtils.createDouble(numeric);    	non-compiled	[CE]  ')'  expected	8	None	replace
14	[BUG]  [BUGGY]  Double  d  =  NumberUtils.createDouble(numeric  +  1);  [CE]  ')'  expected  [FE]            AssertionError    [CONTEXT]    case  'D'  :  try  {  Double  d  =  NumberUtils.createDouble(numeric);  if  (!(d.isInfinite()  ||  (d.floatValue()  ==  0.0D  &&  !allZeros)))  {  return  d;  }  }  catch  (NumberFormatException  nfe)  {  //  NOPMD  }  try  {    [BUGGY]  Double  d  =  NumberUtils.createDouble(numeric  +  1);  [BUGGY]    return  createBigDecimal(numeric);  }  catch  (NumberFormatException  e)  {  //  NOPMD  }  default  :  throw  new  NumberFormatException(str  +     "  is  not  a  valid  number.   ");  }  }  else  {  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  	projects/Lang7/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	543	543	1	replace	Double  d  =  NumberUtils.createDouble(numeric  +  1);	      Double    d    =    NumberUtils.createDouble(numeric);    	non-compiled	[CE]  ')'  expected	8	None	replace
15	[BUG]  [BUGGY]  Numeric  str  =  null;  [CE]  ')'  expected  [FE]            AssertionError    [CONTEXT]    case  'D'  :  try  {  Double  d  =  NumberUtils.createDouble(numeric);  if  (!(d.isInfinite()  ||  (d.floatValue()  ==  0.0D  &&  !allZeros)))  {  return  d;  }  }  catch  (NumberFormatException  nfe)  {  //  NOPMD  }  try  {    [BUGGY]  Numeric  str  =  null;  [BUGGY]    return  createBigDecimal(numeric);  }  catch  (NumberFormatException  e)  {  //  NOPMD  }  default  :  throw  new  NumberFormatException(str  +     "  is  not  a  valid  number.   ");  }  }  else  {  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  	projects/Lang7/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	543	543	1	replace	Numeric  str  =  null;	      Numeric    str    =    str.trim();    	non-compiled	[CE]  ')'  expected	16	None	replace
16	[BUG]  [BUGGY]  Numeric  str  =  null.trim();  [CE]  ')'  expected  [FE]              AssertionError    [CONTEXT]    case  'D'  :  try  {  Double  d  =  NumberUtils.createDouble(numeric);  if  (!(d.isInfinite()  ||  (d.floatValue()  ==  0.0D  &&  !allZeros)))  {  return  d;  }  }  catch  (NumberFormatException  nfe)  {  //  NOPMD  }  try  {    [BUGGY]  Numeric  str  =  null.trim();  [BUGGY]    return  createBigDecimal(numeric);  }  catch  (NumberFormatException  e)  {  //  NOPMD  }  default  :  throw  new  NumberFormatException(str  +     "  is  not  a  valid  number.   ");  }  }  else  {  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  	projects/Lang7/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	543	543	1	replace	Numeric  str  =  null.trim();	      Numeric    str    =    str.trim();    	non-compiled	[CE]  ')'  expected	16	None	replace
17	[BUG]  [BUGGY]  Numeric  str  =  Utils.getNumericValue(numeric);  [CE]  ')'  expected  [FE]                AssertionError    [CONTEXT]    case  'D'  :  try  {  Double  d  =  NumberUtils.createDouble(numeric);  if  (!(d.isInfinite()  ||  (d.floatValue()  ==  0.0D  &&  !allZeros)))  {  return  d;  }  }  catch  (NumberFormatException  nfe)  {  //  NOPMD  }  try  {    [BUGGY]  Numeric  str  =  Utils.getNumericValue(numeric);  [BUGGY]    return  createBigDecimal(numeric);  }  catch  (NumberFormatException  e)  {  //  NOPMD  }  default  :  throw  new  NumberFormatException(str  +     "  is  not  a  valid  number.   ");  }  }  else  {  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  	projects/Lang7/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	543	543	1	replace	Numeric  str  =  Utils.getNumericValue(numeric);	      Numeric    str    =    str.trim();    	non-compiled	[CE]  ')'  expected	16	None	replace
18	[BUG]  [BUGGY]  Numeric  str  =  nullValue();  [CE]  ')'  expected  [FE]                  AssertionError    [CONTEXT]    case  'D'  :  try  {  Double  d  =  NumberUtils.createDouble(numeric);  if  (!(d.isInfinite()  ||  (d.floatValue()  ==  0.0D  &&  !allZeros)))  {  return  d;  }  }  catch  (NumberFormatException  nfe)  {  //  NOPMD  }  try  {    [BUGGY]  Numeric  str  =  nullValue();  [BUGGY]    return  createBigDecimal(numeric);  }  catch  (NumberFormatException  e)  {  //  NOPMD  }  default  :  throw  new  NumberFormatException(str  +     "  is  not  a  valid  number.   ");  }  }  else  {  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  	projects/Lang7/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	543	543	1	replace	Numeric  str  =  nullValue();	      Numeric    str    =    str.trim();    	non-compiled	[CE]  ')'  expected	16	None	replace
19	[BUG]  [BUGGY]  return  createBigDecimal(str.toString());  [CE]  ')'  expected  [FE]        AssertionError    [CONTEXT]    case  'D'  :  try  {  Double  d  =  NumberUtils.createDouble(numeric);  if  (!(d.isInfinite()  ||  (d.floatValue()  ==  0.0D  &&  !allZeros)))  {  return  d;  }  }  catch  (NumberFormatException  nfe)  {  //  NOPMD  }  try  {    [BUGGY]  return  createBigDecimal(str.toString());  [BUGGY]    }  catch  (NumberFormatException  e)  {  //  NOPMD  }  default  :  throw  new  NumberFormatException(str  +     "  is  not  a  valid  number.   ");  }  }  else  {  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  	projects/Lang7/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	543	543	1	replace	return  createBigDecimal(str.toString());	  return    createBigDecimal(numeric.toString());    	non-compiled	[CE]  ')'  expected	13	None	replace
20	[BUG]  [BUGGY]  return  createBigDecimal(numeric.toString(),  str);  [CE]  ')'  expected  [FE]          AssertionError    [CONTEXT]    case  'D'  :  try  {  Double  d  =  NumberUtils.createDouble(numeric);  if  (!(d.isInfinite()  ||  (d.floatValue()  ==  0.0D  &&  !allZeros)))  {  return  d;  }  }  catch  (NumberFormatException  nfe)  {  //  NOPMD  }  try  {    [BUGGY]  return  createBigDecimal(numeric.toString(),  str);  [BUGGY]    }  catch  (NumberFormatException  e)  {  //  NOPMD  }  default  :  throw  new  NumberFormatException(str  +     "  is  not  a  valid  number.   ");  }  }  else  {  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  	projects/Lang7/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	543	543	1	replace	return  createBigDecimal(numeric.toString(),  str);	  return    createBigDecimal(numeric.toString());    	non-compiled	[CE]  ')'  expected	13	None	replace
21	[BUG]  [BUGGY]  return  createBigDecimal(numeric.toString()  +  str);  [CE]  ')'  expected  [FE]            AssertionError    [CONTEXT]    case  'D'  :  try  {  Double  d  =  NumberUtils.createDouble(numeric);  if  (!(d.isInfinite()  ||  (d.floatValue()  ==  0.0D  &&  !allZeros)))  {  return  d;  }  }  catch  (NumberFormatException  nfe)  {  //  NOPMD  }  try  {    [BUGGY]  return  createBigDecimal(numeric.toString()  +  str);  [BUGGY]    }  catch  (NumberFormatException  e)  {  //  NOPMD  }  default  :  throw  new  NumberFormatException(str  +     "  is  not  a  valid  number.   ");  }  }  else  {  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  	projects/Lang7/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	543	543	1	replace	return  createBigDecimal(numeric.toString()  +  str);	  return    createBigDecimal(numeric.toString());    	non-compiled	[CE]  ')'  expected	13	None	replace
22	[BUG]  [BUGGY]  Integer  dec  =  NumberUtils.createInteger(0);  [CE]  ')'  expected  [FE]        AssertionError    [CONTEXT]    case  'D'  :  try  {  Double  d  =  NumberUtils.createDouble(numeric);  if  (!(d.isInfinite()  ||  (d.floatValue()  ==  0.0D  &&  !allZeros)))  {  return  d;  }  }  catch  (NumberFormatException  nfe)  {  //  NOPMD  }  try  {    [BUGGY]  Integer  dec  =  NumberUtils.createInteger(0);  [BUGGY]    return  createBigDecimal(numeric);  }  catch  (NumberFormatException  e)  {  //  NOPMD  }  default  :  throw  new  NumberFormatException(str  +     "  is  not  a  valid  number.   ");  }  }  else  {  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  	projects/Lang7/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	543	543	1	replace	Integer  dec  =  NumberUtils.createInteger(0);	      Integer    dec    =    NumberUtils.createInteger(numeric);    	non-compiled	[CE]  ')'  expected	14	None	replace
23	[BUG]  [BUGGY]  Integer  dec  =  NumberUtils.createBigDecimal(numeric);  [CE]  ')'  expected  [FE]          AssertionError    [CONTEXT]    case  'D'  :  try  {  Double  d  =  NumberUtils.createDouble(numeric);  if  (!(d.isInfinite()  ||  (d.floatValue()  ==  0.0D  &&  !allZeros)))  {  return  d;  }  }  catch  (NumberFormatException  nfe)  {  //  NOPMD  }  try  {    [BUGGY]  Integer  dec  =  NumberUtils.createBigDecimal(numeric);  [BUGGY]    return  createBigDecimal(numeric);  }  catch  (NumberFormatException  e)  {  //  NOPMD  }  default  :  throw  new  NumberFormatException(str  +     "  is  not  a  valid  number.   ");  }  }  else  {  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  	projects/Lang7/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	543	543	1	replace	Integer  dec  =  NumberUtils.createBigDecimal(numeric);	      Integer    dec    =    NumberUtils.createInteger(numeric);    	non-compiled	[CE]  ')'  expected	14	None	replace
24	[BUG]  [BUGGY]  Number  number  =  NumberUtils.createDouble(str);  [CE]  ')'  expected  [FE]              AssertionError    [CONTEXT]    case  'D'  :  try  {  Double  d  =  NumberUtils.createDouble(numeric);  if  (!(d.isInfinite()  ||  (d.floatValue()  ==  0.0D  &&  !allZeros)))  {  return  d;  }  }  catch  (NumberFormatException  nfe)  {  //  NOPMD  }  try  {    [BUGGY]  Number  number  =  NumberUtils.createDouble(str);  [BUGGY]    return  createBigDecimal(numeric);  }  catch  (NumberFormatException  e)  {  //  NOPMD  }  default  :  throw  new  NumberFormatException(str  +     "  is  not  a  valid  number.   ");  }  }  else  {  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  	projects/Lang7/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	543	543	1	replace	Number  number  =  NumberUtils.createDouble(str);	      Number    number    =    NumberUtils.createDouble(numeric);    	non-compiled	[CE]  ')'  expected	4	None	replace
25	[BUG]  [BUGGY]  Number  number  =  NumberUtils.createBigInteger(numeric);  [CE]  ')'  expected  [FE]                AssertionError    [CONTEXT]    case  'D'  :  try  {  Double  d  =  NumberUtils.createDouble(numeric);  if  (!(d.isInfinite()  ||  (d.floatValue()  ==  0.0D  &&  !allZeros)))  {  return  d;  }  }  catch  (NumberFormatException  nfe)  {  //  NOPMD  }  try  {    [BUGGY]  Number  number  =  NumberUtils.createBigInteger(numeric);  [BUGGY]    return  createBigDecimal(numeric);  }  catch  (NumberFormatException  e)  {  //  NOPMD  }  default  :  throw  new  NumberFormatException(str  +     "  is  not  a  valid  number.   ");  }  }  else  {  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  	projects/Lang7/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	543	543	1	replace	Number  number  =  NumberUtils.createBigInteger(numeric);	      Number    number    =    NumberUtils.createDouble(numeric);    	non-compiled	[CE]  ')'  expected	4	None	replace
26	[BUG]  [BUGGY]  return  createBigDecimal(numeric.doubleValue(),  str);  [CE]  ')'  expected  [FE]          AssertionError    [CONTEXT]    case  'D'  :  try  {  Double  d  =  NumberUtils.createDouble(numeric);  if  (!(d.isInfinite()  ||  (d.floatValue()  ==  0.0D  &&  !allZeros)))  {  return  d;  }  }  catch  (NumberFormatException  nfe)  {  //  NOPMD  }  try  {    [BUGGY]  return  createBigDecimal(numeric.doubleValue(),  str);  [BUGGY]    }  catch  (NumberFormatException  e)  {  //  NOPMD  }  default  :  throw  new  NumberFormatException(str  +     "  is  not  a  valid  number.   ");  }  }  else  {  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  	projects/Lang7/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	543	543	1	replace	return  createBigDecimal(numeric.doubleValue(),  str);	  return    createBigDecimal(numeric.doubleValue());    	non-compiled	[CE]  ')'  expected	6	None	replace
27	[BUG]  [BUGGY]  return  createBigDecimal(numeric.doubleValue()  +  1);  [CE]  ')'  expected  [FE]            AssertionError    [CONTEXT]    case  'D'  :  try  {  Double  d  =  NumberUtils.createDouble(numeric);  if  (!(d.isInfinite()  ||  (d.floatValue()  ==  0.0D  &&  !allZeros)))  {  return  d;  }  }  catch  (NumberFormatException  nfe)  {  //  NOPMD  }  try  {    [BUGGY]  return  createBigDecimal(numeric.doubleValue()  +  1);  [BUGGY]    }  catch  (NumberFormatException  e)  {  //  NOPMD  }  default  :  throw  new  NumberFormatException(str  +     "  is  not  a  valid  number.   ");  }  }  else  {  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  	projects/Lang7/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	543	543	1	replace	return  createBigDecimal(numeric.doubleValue()  +  1);	  return    createBigDecimal(numeric.doubleValue());    	non-compiled	[CE]  ')'  expected	6	None	replace
28	[BUG]  [BUGGY]  return  createBigDecimal(numeric.doubleValue()  -  1);  [CE]  ')'  expected  [FE]              AssertionError    [CONTEXT]    case  'D'  :  try  {  Double  d  =  NumberUtils.createDouble(numeric);  if  (!(d.isInfinite()  ||  (d.floatValue()  ==  0.0D  &&  !allZeros)))  {  return  d;  }  }  catch  (NumberFormatException  nfe)  {  //  NOPMD  }  try  {    [BUGGY]  return  createBigDecimal(numeric.doubleValue()  -  1);  [BUGGY]    }  catch  (NumberFormatException  e)  {  //  NOPMD  }  default  :  throw  new  NumberFormatException(str  +     "  is  not  a  valid  number.   ");  }  }  else  {  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  	projects/Lang7/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	543	543	1	replace	return  createBigDecimal(numeric.doubleValue()  -  1);	  return    createBigDecimal(numeric.doubleValue());    	non-compiled	[CE]  ')'  expected	6	None	replace
29	[BUG]  [BUGGY]  Number  number  =  NumberUtils.createNumber(numeric);  [CE]  ')'  expected  [FE]            AssertionError    [CONTEXT]    case  'D'  :  try  {  Double  d  =  NumberUtils.createDouble(numeric);  if  (!(d.isInfinite()  ||  (d.floatValue()  ==  0.0D  &&  !allZeros)))  {  return  d;  }  }  catch  (NumberFormatException  nfe)  {  //  NOPMD  }  try  {    [BUGGY]  Number  number  =  NumberUtils.createNumber(numeric);  [BUGGY]    return  createBigDecimal(numeric);  }  catch  (NumberFormatException  e)  {  //  NOPMD  }  default  :  throw  new  NumberFormatException(str  +     "  is  not  a  valid  number.   ");  }  }  else  {  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  	projects/Lang7/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	543	543	1	replace	Number  number  =  NumberUtils.createNumber(numeric);	      Number    number    =    NumberUtils.createNumber(str);    	non-compiled	[CE]  ')'  expected	3	None	replace
30	[BUG]  [BUGGY]  Number  number  =  NumberUtils.createInteger(numeric);  [CE]  ')'  expected  [FE]              AssertionError    [CONTEXT]    case  'D'  :  try  {  Double  d  =  NumberUtils.createDouble(numeric);  if  (!(d.isInfinite()  ||  (d.floatValue()  ==  0.0D  &&  !allZeros)))  {  return  d;  }  }  catch  (NumberFormatException  nfe)  {  //  NOPMD  }  try  {    [BUGGY]  Number  number  =  NumberUtils.createInteger(numeric);  [BUGGY]    return  createBigDecimal(numeric);  }  catch  (NumberFormatException  e)  {  //  NOPMD  }  default  :  throw  new  NumberFormatException(str  +     "  is  not  a  valid  number.   ");  }  }  else  {  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  	projects/Lang7/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	543	543	1	replace	Number  number  =  NumberUtils.createInteger(numeric);	      Number    number    =    NumberUtils.createNumber(str);    	non-compiled	[CE]  ')'  expected	3	None	replace
31	[BUG]  [BUGGY]  Number  number  =  NumberUtils.createNull(numeric);  [CE]  ')'  expected  [FE]                AssertionError    [CONTEXT]    case  'D'  :  try  {  Double  d  =  NumberUtils.createDouble(numeric);  if  (!(d.isInfinite()  ||  (d.floatValue()  ==  0.0D  &&  !allZeros)))  {  return  d;  }  }  catch  (NumberFormatException  nfe)  {  //  NOPMD  }  try  {    [BUGGY]  Number  number  =  NumberUtils.createNull(numeric);  [BUGGY]    return  createBigDecimal(numeric);  }  catch  (NumberFormatException  e)  {  //  NOPMD  }  default  :  throw  new  NumberFormatException(str  +     "  is  not  a  valid  number.   ");  }  }  else  {  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  	projects/Lang7/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	543	543	1	replace	Number  number  =  NumberUtils.createNull(numeric);	      Number    number    =    NumberUtils.createNumber(str);    	non-compiled	[CE]  ')'  expected	3	None	replace
32	[BUG]  [BUGGY]  Integer  dec  =  NumberUtils.createBigInteger(numeric);  [CE]  ')'  expected  [FE]              AssertionError    [CONTEXT]    case  'D'  :  try  {  Double  d  =  NumberUtils.createDouble(numeric);  if  (!(d.isInfinite()  ||  (d.floatValue()  ==  0.0D  &&  !allZeros)))  {  return  d;  }  }  catch  (NumberFormatException  nfe)  {  //  NOPMD  }  try  {    [BUGGY]  Integer  dec  =  NumberUtils.createBigInteger(numeric);  [BUGGY]    return  createBigDecimal(numeric);  }  catch  (NumberFormatException  e)  {  //  NOPMD  }  default  :  throw  new  NumberFormatException(str  +     "  is  not  a  valid  number.   ");  }  }  else  {  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  	projects/Lang7/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	543	543	1	replace	Integer  dec  =  NumberUtils.createBigInteger(numeric);	      Integer    dec    =    NumberUtils.createInteger(str);    	non-compiled	[CE]  ')'  expected	17	None	replace
33	[BUG]  [BUGGY]  return  createBigDecimal(numeric,  str,  exp);  [CE]  ')'  expected  [FE]        AssertionError    [CONTEXT]    case  'D'  :  try  {  Double  d  =  NumberUtils.createDouble(numeric);  if  (!(d.isInfinite()  ||  (d.floatValue()  ==  0.0D  &&  !allZeros)))  {  return  d;  }  }  catch  (NumberFormatException  nfe)  {  //  NOPMD  }  try  {    [BUGGY]  return  createBigDecimal(numeric,  str,  exp);  [BUGGY]    }  catch  (NumberFormatException  e)  {  //  NOPMD  }  default  :  throw  new  NumberFormatException(str  +     "  is  not  a  valid  number.   ");  }  }  else  {  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  	projects/Lang7/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	543	543	1	replace	return  createBigDecimal(numeric,  str,  exp);	  return    createBigDecimal(numeric,    str);    	non-compiled	[CE]  ')'  expected	5	None	replace
34	[BUG]  [BUGGY]  return  createBigDecimal(numeric,  mant);  [CE]  ')'  expected  [FE]          AssertionError    [CONTEXT]    case  'D'  :  try  {  Double  d  =  NumberUtils.createDouble(numeric);  if  (!(d.isInfinite()  ||  (d.floatValue()  ==  0.0D  &&  !allZeros)))  {  return  d;  }  }  catch  (NumberFormatException  nfe)  {  //  NOPMD  }  try  {    [BUGGY]  return  createBigDecimal(numeric,  mant);  [BUGGY]    }  catch  (NumberFormatException  e)  {  //  NOPMD  }  default  :  throw  new  NumberFormatException(str  +     "  is  not  a  valid  number.   ");  }  }  else  {  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  	projects/Lang7/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	543	543	1	replace	return  createBigDecimal(numeric,  mant);	  return    createBigDecimal(numeric,    str);    	non-compiled	[CE]  ')'  expected	5	None	replace
35	[BUG]  [BUGGY]  return  createBigDecimal(str,  numeric);  [CE]  ')'  expected  [FE]            AssertionError    [CONTEXT]    case  'D'  :  try  {  Double  d  =  NumberUtils.createDouble(numeric);  if  (!(d.isInfinite()  ||  (d.floatValue()  ==  0.0D  &&  !allZeros)))  {  return  d;  }  }  catch  (NumberFormatException  nfe)  {  //  NOPMD  }  try  {    [BUGGY]  return  createBigDecimal(str,  numeric);  [BUGGY]    }  catch  (NumberFormatException  e)  {  //  NOPMD  }  default  :  throw  new  NumberFormatException(str  +     "  is  not  a  valid  number.   ");  }  }  else  {  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  	projects/Lang7/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	543	543	1	replace	return  createBigDecimal(str,  numeric);	  return    createBigDecimal(numeric,    str);    	non-compiled	[CE]  ')'  expected	5	None	replace
36	[BUG]  [BUGGY]  return  createBigDecimal(numeric,  str.length());  [CE]  ')'  expected  [FE]              AssertionError    [CONTEXT]    case  'D'  :  try  {  Double  d  =  NumberUtils.createDouble(numeric);  if  (!(d.isInfinite()  ||  (d.floatValue()  ==  0.0D  &&  !allZeros)))  {  return  d;  }  }  catch  (NumberFormatException  nfe)  {  //  NOPMD  }  try  {    [BUGGY]  return  createBigDecimal(numeric,  str.length());  [BUGGY]    }  catch  (NumberFormatException  e)  {  //  NOPMD  }  default  :  throw  new  NumberFormatException(str  +     "  is  not  a  valid  number.   ");  }  }  else  {  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  	projects/Lang7/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	543	543	1	replace	return  createBigDecimal(numeric,  str.length());	  return    createBigDecimal(numeric,    str);    	non-compiled	[CE]  ')'  expected	5	None	replace
37	[BUG]  [BUGGY]  return  createLong(numeric);  [CE]  ')'  expected  [FE]            AssertionError    [CONTEXT]    case  'D'  :  try  {  Double  d  =  NumberUtils.createDouble(numeric);  if  (!(d.isInfinite()  ||  (d.floatValue()  ==  0.0D  &&  !allZeros)))  {  return  d;  }  }  catch  (NumberFormatException  nfe)  {  //  NOPMD  }  try  {    [BUGGY]  return  createLong(numeric);  [BUGGY]    }  catch  (NumberFormatException  e)  {  //  NOPMD  }  default  :  throw  new  NumberFormatException(str  +     "  is  not  a  valid  number.   ");  }  }  else  {  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  	projects/Lang7/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	543	543	1	replace	return  createLong(numeric);	  return    createBigDecimal(str);    	non-compiled	[CE]  ')'  expected	7	None	replace
38	[BUG]  [BUGGY]  return  createInteger(numeric);  [CE]  ')'  expected  [FE]              AssertionError    [CONTEXT]    case  'D'  :  try  {  Double  d  =  NumberUtils.createDouble(numeric);  if  (!(d.isInfinite()  ||  (d.floatValue()  ==  0.0D  &&  !allZeros)))  {  return  d;  }  }  catch  (NumberFormatException  nfe)  {  //  NOPMD  }  try  {    [BUGGY]  return  createInteger(numeric);  [BUGGY]    }  catch  (NumberFormatException  e)  {  //  NOPMD  }  default  :  throw  new  NumberFormatException(str  +     "  is  not  a  valid  number.   ");  }  }  else  {  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  	projects/Lang7/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	543	543	1	replace	return  createInteger(numeric);	  return    createBigDecimal(str);    	non-compiled	[CE]  ')'  expected	7	None	replace
39	[BUG]  [BUGGY]  return  createNumber(numeric);  [CE]  ')'  expected  [FE]                AssertionError    [CONTEXT]    case  'D'  :  try  {  Double  d  =  NumberUtils.createDouble(numeric);  if  (!(d.isInfinite()  ||  (d.floatValue()  ==  0.0D  &&  !allZeros)))  {  return  d;  }  }  catch  (NumberFormatException  nfe)  {  //  NOPMD  }  try  {    [BUGGY]  return  createNumber(numeric);  [BUGGY]    }  catch  (NumberFormatException  e)  {  //  NOPMD  }  default  :  throw  new  NumberFormatException(str  +     "  is  not  a  valid  number.   ");  }  }  else  {  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  	projects/Lang7/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	543	543	1	replace	return  createNumber(numeric);	  return    createBigDecimal(str);    	non-compiled	[CE]  ')'  expected	7	None	replace
40	[BUG]  [BUGGY]  Numeric  str  =  str.substring(0,  str.length());  [CE]  ')'  expected  [FE]          AssertionError    [CONTEXT]    case  'D'  :  try  {  Double  d  =  NumberUtils.createDouble(numeric);  if  (!(d.isInfinite()  ||  (d.floatValue()  ==  0.0D  &&  !allZeros)))  {  return  d;  }  }  catch  (NumberFormatException  nfe)  {  //  NOPMD  }  try  {    [BUGGY]  Numeric  str  =  str.substring(0,  str.length());  [BUGGY]    return  createBigDecimal(numeric);  }  catch  (NumberFormatException  e)  {  //  NOPMD  }  default  :  throw  new  NumberFormatException(str  +     "  is  not  a  valid  number.   ");  }  }  else  {  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  	projects/Lang7/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	543	543	1	replace	Numeric  str  =  str.substring(0,  str.length());	      Numeric    str    =    str.substring(0,    str.length()    -    1);    	non-compiled	[CE]  ')'  expected	15	None	replace
41	[BUG]  [BUGGY]  Numeric  str  =  str.substring(0,  str.length();  [CE]  ')'  expected  [FE]            AssertionError    [CONTEXT]    case  'D'  :  try  {  Double  d  =  NumberUtils.createDouble(numeric);  if  (!(d.isInfinite()  ||  (d.floatValue()  ==  0.0D  &&  !allZeros)))  {  return  d;  }  }  catch  (NumberFormatException  nfe)  {  //  NOPMD  }  try  {    [BUGGY]  Numeric  str  =  str.substring(0,  str.length();  [BUGGY]    return  createBigDecimal(numeric);  }  catch  (NumberFormatException  e)  {  //  NOPMD  }  default  :  throw  new  NumberFormatException(str  +     "  is  not  a  valid  number.   ");  }  }  else  {  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  	projects/Lang7/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	543	543	1	replace	Numeric  str  =  str.substring(0,  str.length();	      Numeric    str    =    str.substring(0,    str.length()    -    1);    	non-compiled	[CE]  ')'  expected	15	None	replace
42	[BUG]  [BUGGY]  String  str  =  str.substring(0,  str.length());  [CE]  ')'  expected  [FE]        AssertionError    [CONTEXT]    case  'D'  :  try  {  Double  d  =  NumberUtils.createDouble(numeric);  if  (!(d.isInfinite()  ||  (d.floatValue()  ==  0.0D  &&  !allZeros)))  {  return  d;  }  }  catch  (NumberFormatException  nfe)  {  //  NOPMD  }  try  {    [BUGGY]  String  str  =  str.substring(0,  str.length());  [BUGGY]    return  createBigDecimal(numeric);  }  catch  (NumberFormatException  e)  {  //  NOPMD  }  default  :  throw  new  NumberFormatException(str  +     "  is  not  a  valid  number.   ");  }  }  else  {  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  	projects/Lang7/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	543	543	1	replace	String  str  =  str.substring(0,  str.length());	      String    str    =    str.substring(0,    str.length()    -    1);    	non-compiled	[CE]  ')'  expected	1	None	replace
43	[BUG]  [BUGGY]  String  str  =  str.substring(0,  str.length();  [CE]  ')'  expected  [FE]          AssertionError    [CONTEXT]    case  'D'  :  try  {  Double  d  =  NumberUtils.createDouble(numeric);  if  (!(d.isInfinite()  ||  (d.floatValue()  ==  0.0D  &&  !allZeros)))  {  return  d;  }  }  catch  (NumberFormatException  nfe)  {  //  NOPMD  }  try  {    [BUGGY]  String  str  =  str.substring(0,  str.length();  [BUGGY]    return  createBigDecimal(numeric);  }  catch  (NumberFormatException  e)  {  //  NOPMD  }  default  :  throw  new  NumberFormatException(str  +     "  is  not  a  valid  number.   ");  }  }  else  {  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  	projects/Lang7/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	543	543	1	replace	String  str  =  str.substring(0,  str.length();	      String    str    =    str.substring(0,    str.length()    -    1);    	non-compiled	[CE]  ')'  expected	1	None	replace
44	[BUG]  [BUGGY]  Number  number  =  NumberUtils.createBigDecimal(str);  [CE]  ')'  expected  [FE]          AssertionError    [CONTEXT]    case  'D'  :  try  {  Double  d  =  NumberUtils.createDouble(numeric);  if  (!(d.isInfinite()  ||  (d.floatValue()  ==  0.0D  &&  !allZeros)))  {  return  d;  }  }  catch  (NumberFormatException  nfe)  {  //  NOPMD  }  try  {    [BUGGY]  Number  number  =  NumberUtils.createBigDecimal(str);  [BUGGY]    return  createBigDecimal(numeric);  }  catch  (NumberFormatException  e)  {  //  NOPMD  }  default  :  throw  new  NumberFormatException(str  +     "  is  not  a  valid  number.   ");  }  }  else  {  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  	projects/Lang7/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	543	543	1	replace	Number  number  =  NumberUtils.createBigDecimal(str);	      Number    number    =    NumberUtils.createBigDecimal(numeric);    	non-compiled	[CE]  ')'  expected	2	None	replace
45	[BUG]  [BUGGY]  NumberUtils.copyPos(mant,  str);  [CE]  ')'  expected  [FE]              AssertionError    [CONTEXT]    case  'D'  :  try  {  Double  d  =  NumberUtils.createDouble(numeric);  if  (!(d.isInfinite()  ||  (d.floatValue()  ==  0.0D  &&  !allZeros)))  {  return  d;  }  }  catch  (NumberFormatException  nfe)  {  //  NOPMD  }  try  {    [BUGGY]  NumberUtils.copyPos(mant,  str);  [BUGGY]    return  createBigDecimal(numeric);  }  catch  (NumberFormatException  e)  {  //  NOPMD  }  default  :  throw  new  NumberFormatException(str  +     "  is  not  a  valid  number.   ");  }  }  else  {  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  	projects/Lang7/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	543	543	1	replace	NumberUtils.copyPos(mant,  str);	      NumberUtils.copyPos(numeric,    str);    	non-compiled	[CE]  ')'  expected	11	None	replace
46	[BUG]  [BUGGY]  NumberUtils.copyPos(numeric,  mant);  [CE]  ')'  expected  [FE]                AssertionError    [CONTEXT]    case  'D'  :  try  {  Double  d  =  NumberUtils.createDouble(numeric);  if  (!(d.isInfinite()  ||  (d.floatValue()  ==  0.0D  &&  !allZeros)))  {  return  d;  }  }  catch  (NumberFormatException  nfe)  {  //  NOPMD  }  try  {    [BUGGY]  NumberUtils.copyPos(numeric,  mant);  [BUGGY]    return  createBigDecimal(numeric);  }  catch  (NumberFormatException  e)  {  //  NOPMD  }  default  :  throw  new  NumberFormatException(str  +     "  is  not  a  valid  number.   ");  }  }  else  {  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  	projects/Lang7/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	543	543	1	replace	NumberUtils.copyPos(numeric,  mant);	      NumberUtils.copyPos(numeric,    str);    	non-compiled	[CE]  ')'  expected	11	None	replace
47	[BUG]  [BUGGY]  NumberUtils.copyPos(numeric,  str,  exp);  [CE]  ')'  expected  [FE]                  AssertionError    [CONTEXT]    case  'D'  :  try  {  Double  d  =  NumberUtils.createDouble(numeric);  if  (!(d.isInfinite()  ||  (d.floatValue()  ==  0.0D  &&  !allZeros)))  {  return  d;  }  }  catch  (NumberFormatException  nfe)  {  //  NOPMD  }  try  {    [BUGGY]  NumberUtils.copyPos(numeric,  str,  exp);  [BUGGY]    return  createBigDecimal(numeric);  }  catch  (NumberFormatException  e)  {  //  NOPMD  }  default  :  throw  new  NumberFormatException(str  +     "  is  not  a  valid  number.   ");  }  }  else  {  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  	projects/Lang7/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	543	543	1	replace	NumberUtils.copyPos(numeric,  str,  exp);	      NumberUtils.copyPos(numeric,    str);    	non-compiled	[CE]  ')'  expected	11	None	replace
48	[BUG]  [BUGGY]  NumberUtils.copyPosition(mant,  str);  [CE]  ')'  expected  [FE]                    AssertionError    [CONTEXT]    case  'D'  :  try  {  Double  d  =  NumberUtils.createDouble(numeric);  if  (!(d.isInfinite()  ||  (d.floatValue()  ==  0.0D  &&  !allZeros)))  {  return  d;  }  }  catch  (NumberFormatException  nfe)  {  //  NOPMD  }  try  {    [BUGGY]  NumberUtils.copyPosition(mant,  str);  [BUGGY]    return  createBigDecimal(numeric);  }  catch  (NumberFormatException  e)  {  //  NOPMD  }  default  :  throw  new  NumberFormatException(str  +     "  is  not  a  valid  number.   ");  }  }  else  {  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  	projects/Lang7/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	543	543	1	replace	NumberUtils.copyPosition(mant,  str);	      NumberUtils.copyPos(numeric,    str);    	non-compiled	[CE]  ')'  expected	11	None	replace
49	[BUG]  [BUGGY]  return  createBigDecimal(numeric.getValue());  [CE]  ')'  expected  [FE]        AssertionError    [CONTEXT]    case  'D'  :  try  {  Double  d  =  NumberUtils.createDouble(numeric);  if  (!(d.isInfinite()  ||  (d.floatValue()  ==  0.0D  &&  !allZeros)))  {  return  d;  }  }  catch  (NumberFormatException  nfe)  {  //  NOPMD  }  try  {    [BUGGY]  return  createBigDecimal(numeric.getValue());  [BUGGY]    }  catch  (NumberFormatException  e)  {  //  NOPMD  }  default  :  throw  new  NumberFormatException(str  +     "  is  not  a  valid  number.   ");  }  }  else  {  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  	projects/Lang7/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	543	543	1	replace	return  createBigDecimal(numeric.getValue());	  return    createBigDecimal(numeric.toString());    	non-compiled	[CE]  ')'  expected	13	None	replace
50	[BUG]  [BUGGY]  Number  number  =  NumberUtils.createNumber(mant);  [CE]  ')'  expected  [FE]            AssertionError    [CONTEXT]    case  'D'  :  try  {  Double  d  =  NumberUtils.createDouble(numeric);  if  (!(d.isInfinite()  ||  (d.floatValue()  ==  0.0D  &&  !allZeros)))  {  return  d;  }  }  catch  (NumberFormatException  nfe)  {  //  NOPMD  }  try  {    [BUGGY]  Number  number  =  NumberUtils.createNumber(mant);  [BUGGY]    return  createBigDecimal(numeric);  }  catch  (NumberFormatException  e)  {  //  NOPMD  }  default  :  throw  new  NumberFormatException(str  +     "  is  not  a  valid  number.   ");  }  }  else  {  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  	projects/Lang7/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	543	543	1	replace	Number  number  =  NumberUtils.createNumber(mant);	      Number    number    =    NumberUtils.createNumber(str);    	non-compiled	[CE]  ')'  expected	3	None	replace
51	[BUG]  [BUGGY]  Numeric  number  =  NumberUtils.createNumber(numeric);  [CE]  ')'  expected  [FE]              AssertionError    [CONTEXT]    case  'D'  :  try  {  Double  d  =  NumberUtils.createDouble(numeric);  if  (!(d.isInfinite()  ||  (d.floatValue()  ==  0.0D  &&  !allZeros)))  {  return  d;  }  }  catch  (NumberFormatException  nfe)  {  //  NOPMD  }  try  {    [BUGGY]  Numeric  number  =  NumberUtils.createNumber(numeric);  [BUGGY]    return  createBigDecimal(numeric);  }  catch  (NumberFormatException  e)  {  //  NOPMD  }  default  :  throw  new  NumberFormatException(str  +     "  is  not  a  valid  number.   ");  }  }  else  {  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  	projects/Lang7/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	543	543	1	replace	Numeric  number  =  NumberUtils.createNumber(numeric);	      Number    number    =    NumberUtils.createNumber(str);    	non-compiled	[CE]  ')'  expected	3	None	replace
52	[BUG]  [BUGGY]  Integer  dec  =  NumberUtils.createInteger(dec);  [CE]  ')'  expected  [FE]              AssertionError    [CONTEXT]    case  'D'  :  try  {  Double  d  =  NumberUtils.createDouble(numeric);  if  (!(d.isInfinite()  ||  (d.floatValue()  ==  0.0D  &&  !allZeros)))  {  return  d;  }  }  catch  (NumberFormatException  nfe)  {  //  NOPMD  }  try  {    [BUGGY]  Integer  dec  =  NumberUtils.createInteger(dec);  [BUGGY]    return  createBigDecimal(numeric);  }  catch  (NumberFormatException  e)  {  //  NOPMD  }  default  :  throw  new  NumberFormatException(str  +     "  is  not  a  valid  number.   ");  }  }  else  {  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  	projects/Lang7/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	543	543	1	replace	Integer  dec  =  NumberUtils.createInteger(dec);	      Integer    dec    =    NumberUtils.createInteger(str);    	non-compiled	[CE]  ')'  expected	17	None	replace
53	[BUG]  [BUGGY]  NullUtils.copyPos(mant,  str);  [CE]  ')'  expected  [FE]              AssertionError    [CONTEXT]    case  'D'  :  try  {  Double  d  =  NumberUtils.createDouble(numeric);  if  (!(d.isInfinite()  ||  (d.floatValue()  ==  0.0D  &&  !allZeros)))  {  return  d;  }  }  catch  (NumberFormatException  nfe)  {  //  NOPMD  }  try  {    [BUGGY]  NullUtils.copyPos(mant,  str);  [BUGGY]    return  createBigDecimal(numeric);  }  catch  (NumberFormatException  e)  {  //  NOPMD  }  default  :  throw  new  NumberFormatException(str  +     "  is  not  a  valid  number.   ");  }  }  else  {  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  	projects/Lang7/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	543	543	1	replace	NullUtils.copyPos(mant,  str);	      NumberUtils.copyPos(numeric,    str);    	non-compiled	[CE]  ')'  expected	11	None	replace
54	[BUG]  [BUGGY]  String  str  =  str.substring(0,  str.length()  +  1);  [CE]  ')'  expected  [FE]        AssertionError    [CONTEXT]    case  'D'  :  try  {  Double  d  =  NumberUtils.createDouble(numeric);  if  (!(d.isInfinite()  ||  (d.floatValue()  ==  0.0D  &&  !allZeros)))  {  return  d;  }  }  catch  (NumberFormatException  nfe)  {  //  NOPMD  }  try  {    [BUGGY]  String  str  =  str.substring(0,  str.length()  +  1);  [BUGGY]    return  createBigDecimal(numeric);  }  catch  (NumberFormatException  e)  {  //  NOPMD  }  default  :  throw  new  NumberFormatException(str  +     "  is  not  a  valid  number.   ");  }  }  else  {  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  	projects/Lang7/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	543	543	1	replace	String  str  =  str.substring(0,  str.length()  +  1);	      String    str    =    str.substring(0,    str.length()    -    1);    	non-compiled	[CE]  ')'  expected	1	None	replace
55	[BUG]  [BUGGY]  NullUtils.copyPath(mant,  str);  [CE]  ')'  expected  [FE]                AssertionError    [CONTEXT]    case  'D'  :  try  {  Double  d  =  NumberUtils.createDouble(numeric);  if  (!(d.isInfinite()  ||  (d.floatValue()  ==  0.0D  &&  !allZeros)))  {  return  d;  }  }  catch  (NumberFormatException  nfe)  {  //  NOPMD  }  try  {    [BUGGY]  NullUtils.copyPath(mant,  str);  [BUGGY]    return  createBigDecimal(numeric);  }  catch  (NumberFormatException  e)  {  //  NOPMD  }  default  :  throw  new  NumberFormatException(str  +     "  is  not  a  valid  number.   ");  }  }  else  {  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  	projects/Lang7/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	543	543	1	replace	NullUtils.copyPath(mant,  str);	      NumberUtils.copyPath(numeric,    str);    	non-compiled	[CE]  ')'  expected	12	None	replace
56	[BUG]  [BUGGY]  NumberUtils.copyPath(str,  null);  [CE]  ')'  expected  [FE]                  AssertionError    [CONTEXT]    case  'D'  :  try  {  Double  d  =  NumberUtils.createDouble(numeric);  if  (!(d.isInfinite()  ||  (d.floatValue()  ==  0.0D  &&  !allZeros)))  {  return  d;  }  }  catch  (NumberFormatException  nfe)  {  //  NOPMD  }  try  {    [BUGGY]  NumberUtils.copyPath(str,  null);  [BUGGY]    return  createBigDecimal(numeric);  }  catch  (NumberFormatException  e)  {  //  NOPMD  }  default  :  throw  new  NumberFormatException(str  +     "  is  not  a  valid  number.   ");  }  }  else  {  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  	projects/Lang7/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	543	543	1	replace	NumberUtils.copyPath(str,  null);	      NumberUtils.copyPath(numeric,    str);    	non-compiled	[CE]  ')'  expected	12	None	replace
57	[BUG]  [BUGGY]  Number  number  =  NumberUtils.createBigDecimal(numeric,  str);  [CE]  ')'  expected  [FE]          AssertionError    [CONTEXT]    case  'D'  :  try  {  Double  d  =  NumberUtils.createDouble(numeric);  if  (!(d.isInfinite()  ||  (d.floatValue()  ==  0.0D  &&  !allZeros)))  {  return  d;  }  }  catch  (NumberFormatException  nfe)  {  //  NOPMD  }  try  {    [BUGGY]  Number  number  =  NumberUtils.createBigDecimal(numeric,  str);  [BUGGY]    return  createBigDecimal(numeric);  }  catch  (NumberFormatException  e)  {  //  NOPMD  }  default  :  throw  new  NumberFormatException(str  +     "  is  not  a  valid  number.   ");  }  }  else  {  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  	projects/Lang7/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	543	543	1	replace	Number  number  =  NumberUtils.createBigDecimal(numeric,  str);	      Number    number    =    NumberUtils.createBigDecimal(numeric);    	non-compiled	[CE]  ')'  expected	2	None	replace
58	[BUG]  [BUGGY]  Numeric  str  =  numeric.trim();  [CE]  ')'  expected  [FE]            AssertionError    [CONTEXT]    case  'D'  :  try  {  Double  d  =  NumberUtils.createDouble(numeric);  if  (!(d.isInfinite()  ||  (d.floatValue()  ==  0.0D  &&  !allZeros)))  {  return  d;  }  }  catch  (NumberFormatException  nfe)  {  //  NOPMD  }  try  {    [BUGGY]  Numeric  str  =  numeric.trim();  [BUGGY]    return  createBigDecimal(numeric);  }  catch  (NumberFormatException  e)  {  //  NOPMD  }  default  :  throw  new  NumberFormatException(str  +     "  is  not  a  valid  number.   ");  }  }  else  {  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  	projects/Lang7/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	543	543	1	replace	Numeric  str  =  numeric.trim();	      Numeric    str    =    str.trim();    	non-compiled	[CE]  ')'  expected	16	None	replace
59	[BUG]  [BUGGY]  Numeric  str  =  this.mant.trim();  [CE]  ')'  expected  [FE]              AssertionError    [CONTEXT]    case  'D'  :  try  {  Double  d  =  NumberUtils.createDouble(numeric);  if  (!(d.isInfinite()  ||  (d.floatValue()  ==  0.0D  &&  !allZeros)))  {  return  d;  }  }  catch  (NumberFormatException  nfe)  {  //  NOPMD  }  try  {    [BUGGY]  Numeric  str  =  this.mant.trim();  [BUGGY]    return  createBigDecimal(numeric);  }  catch  (NumberFormatException  e)  {  //  NOPMD  }  default  :  throw  new  NumberFormatException(str  +     "  is  not  a  valid  number.   ");  }  }  else  {  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  	projects/Lang7/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	543	543	1	replace	Numeric  str  =  this.mant.trim();	      Numeric    str    =    str.trim();    	non-compiled	[CE]  ')'  expected	16	None	replace
60	[BUG]  [BUGGY]  Numeric  str  =  Utils.createNumber(numeric);  [CE]  ')'  expected  [FE]                AssertionError    [CONTEXT]    case  'D'  :  try  {  Double  d  =  NumberUtils.createDouble(numeric);  if  (!(d.isInfinite()  ||  (d.floatValue()  ==  0.0D  &&  !allZeros)))  {  return  d;  }  }  catch  (NumberFormatException  nfe)  {  //  NOPMD  }  try  {    [BUGGY]  Numeric  str  =  Utils.createNumber(numeric);  [BUGGY]    return  createBigDecimal(numeric);  }  catch  (NumberFormatException  e)  {  //  NOPMD  }  default  :  throw  new  NumberFormatException(str  +     "  is  not  a  valid  number.   ");  }  }  else  {  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  	projects/Lang7/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	543	543	1	replace	Numeric  str  =  Utils.createNumber(numeric);	      Numeric    str    =    str.trim();    	non-compiled	[CE]  ')'  expected	16	None	replace
61	[BUG]  [BUGGY]  Double  d  =  NumberUtils.createDouble(numeric).doubleValue();  [CE]  ')'  expected  [FE]        AssertionError    [CONTEXT]    case  'D'  :  try  {  Double  d  =  NumberUtils.createDouble(numeric);  if  (!(d.isInfinite()  ||  (d.floatValue()  ==  0.0D  &&  !allZeros)))  {  return  d;  }  }  catch  (NumberFormatException  nfe)  {  //  NOPMD  }  try  {    [BUGGY]  Double  d  =  NumberUtils.createDouble(numeric).doubleValue();  [BUGGY]    return  createBigDecimal(numeric);  }  catch  (NumberFormatException  e)  {  //  NOPMD  }  default  :  throw  new  NumberFormatException(str  +     "  is  not  a  valid  number.   ");  }  }  else  {  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  	projects/Lang7/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	543	543	1	replace	Double  d  =  NumberUtils.createDouble(numeric).doubleValue();	      Double    d    =    NumberUtils.createDouble(numeric);    	non-compiled	[CE]  ')'  expected	8	None	replace
62	[BUG]  [BUGGY]  NumberUtils.copyInteger(numeric,  str);  [CE]  ')'  expected  [FE]          AssertionError    [CONTEXT]    case  'D'  :  try  {  Double  d  =  NumberUtils.createDouble(numeric);  if  (!(d.isInfinite()  ||  (d.floatValue()  ==  0.0D  &&  !allZeros)))  {  return  d;  }  }  catch  (NumberFormatException  nfe)  {  //  NOPMD  }  try  {    [BUGGY]  NumberUtils.copyInteger(numeric,  str);  [BUGGY]    return  createBigDecimal(numeric);  }  catch  (NumberFormatException  e)  {  //  NOPMD  }  default  :  throw  new  NumberFormatException(str  +     "  is  not  a  valid  number.   ");  }  }  else  {  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  	projects/Lang7/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	543	543	1	replace	NumberUtils.copyInteger(numeric,  str);	      NumberUtils.copyNumber(numeric,    str);    	non-compiled	[CE]  ')'  expected	9	None	replace
63	[BUG]  [BUGGY]  Numeric  str  =  str.substring(0,  str.length()  -  2);  [CE]  ')'  expected  [FE]          AssertionError    [CONTEXT]    case  'D'  :  try  {  Double  d  =  NumberUtils.createDouble(numeric);  if  (!(d.isInfinite()  ||  (d.floatValue()  ==  0.0D  &&  !allZeros)))  {  return  d;  }  }  catch  (NumberFormatException  nfe)  {  //  NOPMD  }  try  {    [BUGGY]  Numeric  str  =  str.substring(0,  str.length()  -  2);  [BUGGY]    return  createBigDecimal(numeric);  }  catch  (NumberFormatException  e)  {  //  NOPMD  }  default  :  throw  new  NumberFormatException(str  +     "  is  not  a  valid  number.   ");  }  }  else  {  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  	projects/Lang7/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	543	543	1	replace	Numeric  str  =  str.substring(0,  str.length()  -  2);	      Numeric    str    =    str.substring(0,    str.length()    -    1);    	non-compiled	[CE]  ')'  expected	15	None	replace
64	[BUG]  [BUGGY]  Integer  dec  =  NumberUtils.createInteger(numeric  +  1);  [CE]  ')'  expected  [FE]        AssertionError    [CONTEXT]    case  'D'  :  try  {  Double  d  =  NumberUtils.createDouble(numeric);  if  (!(d.isInfinite()  ||  (d.floatValue()  ==  0.0D  &&  !allZeros)))  {  return  d;  }  }  catch  (NumberFormatException  nfe)  {  //  NOPMD  }  try  {    [BUGGY]  Integer  dec  =  NumberUtils.createInteger(numeric  +  1);  [BUGGY]    return  createBigDecimal(numeric);  }  catch  (NumberFormatException  e)  {  //  NOPMD  }  default  :  throw  new  NumberFormatException(str  +     "  is  not  a  valid  number.   ");  }  }  else  {  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  	projects/Lang7/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	543	543	1	replace	Integer  dec  =  NumberUtils.createInteger(numeric  +  1);	      Integer    dec    =    NumberUtils.createInteger(numeric);    	non-compiled	[CE]  ')'  expected	14	None	replace
65	[BUG]  [BUGGY]  return  createBigDecimal(numeric,  str  +  1);  [CE]  ')'  expected  [FE]        AssertionError    [CONTEXT]    case  'D'  :  try  {  Double  d  =  NumberUtils.createDouble(numeric);  if  (!(d.isInfinite()  ||  (d.floatValue()  ==  0.0D  &&  !allZeros)))  {  return  d;  }  }  catch  (NumberFormatException  nfe)  {  //  NOPMD  }  try  {    [BUGGY]  return  createBigDecimal(numeric,  str  +  1);  [BUGGY]    }  catch  (NumberFormatException  e)  {  //  NOPMD  }  default  :  throw  new  NumberFormatException(str  +     "  is  not  a  valid  number.   ");  }  }  else  {  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  	projects/Lang7/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	543	543	1	replace	return  createBigDecimal(numeric,  str  +  1);	  return    createBigDecimal(numeric,    str);    	non-compiled	[CE]  ')'  expected	5	None	replace
66	[BUG]  [BUGGY]  return  createBigDecimal(mant,  str);  [CE]  ')'  expected  [FE]          AssertionError    [CONTEXT]    case  'D'  :  try  {  Double  d  =  NumberUtils.createDouble(numeric);  if  (!(d.isInfinite()  ||  (d.floatValue()  ==  0.0D  &&  !allZeros)))  {  return  d;  }  }  catch  (NumberFormatException  nfe)  {  //  NOPMD  }  try  {    [BUGGY]  return  createBigDecimal(mant,  str);  [BUGGY]    }  catch  (NumberFormatException  e)  {  //  NOPMD  }  default  :  throw  new  NumberFormatException(str  +     "  is  not  a  valid  number.   ");  }  }  else  {  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  	projects/Lang7/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	543	543	1	replace	return  createBigDecimal(mant,  str);	  return    createBigDecimal(numeric,    str);    	non-compiled	[CE]  ')'  expected	5	None	replace
67	[BUG]  [BUGGY]  return  createBoolean(numeric);  [CE]  ')'  expected  [FE]            AssertionError    [CONTEXT]    case  'D'  :  try  {  Double  d  =  NumberUtils.createDouble(numeric);  if  (!(d.isInfinite()  ||  (d.floatValue()  ==  0.0D  &&  !allZeros)))  {  return  d;  }  }  catch  (NumberFormatException  nfe)  {  //  NOPMD  }  try  {    [BUGGY]  return  createBoolean(numeric);  [BUGGY]    }  catch  (NumberFormatException  e)  {  //  NOPMD  }  default  :  throw  new  NumberFormatException(str  +     "  is  not  a  valid  number.   ");  }  }  else  {  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  	projects/Lang7/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	543	543	1	replace	return  createBoolean(numeric);	  return    createBigDecimal(str);    	non-compiled	[CE]  ')'  expected	7	None	replace
68	[BUG]  [BUGGY]  Number  number  =  NumberUtils.createDouble(numeric,  str);  [CE]  ')'  expected  [FE]              AssertionError    [CONTEXT]    case  'D'  :  try  {  Double  d  =  NumberUtils.createDouble(numeric);  if  (!(d.isInfinite()  ||  (d.floatValue()  ==  0.0D  &&  !allZeros)))  {  return  d;  }  }  catch  (NumberFormatException  nfe)  {  //  NOPMD  }  try  {    [BUGGY]  Number  number  =  NumberUtils.createDouble(numeric,  str);  [BUGGY]    return  createBigDecimal(numeric);  }  catch  (NumberFormatException  e)  {  //  NOPMD  }  default  :  throw  new  NumberFormatException(str  +     "  is  not  a  valid  number.   ");  }  }  else  {  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  	projects/Lang7/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	543	543	1	replace	Number  number  =  NumberUtils.createDouble(numeric,  str);	      Number    number    =    NumberUtils.createDouble(numeric);    	non-compiled	[CE]  ')'  expected	4	None	replace
69	[BUG]  [BUGGY]  Numeric  str  =  new  String(numeric.toString());  [CE]  ')'  expected  [FE]            AssertionError    [CONTEXT]    case  'D'  :  try  {  Double  d  =  NumberUtils.createDouble(numeric);  if  (!(d.isInfinite()  ||  (d.floatValue()  ==  0.0D  &&  !allZeros)))  {  return  d;  }  }  catch  (NumberFormatException  nfe)  {  //  NOPMD  }  try  {    [BUGGY]  Numeric  str  =  new  String(numeric.toString());  [BUGGY]    return  createBigDecimal(numeric);  }  catch  (NumberFormatException  e)  {  //  NOPMD  }  default  :  throw  new  NumberFormatException(str  +     "  is  not  a  valid  number.   ");  }  }  else  {  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  	projects/Lang7/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	543	543	1	replace	Numeric  str  =  new  String(numeric.toString());	      Numeric    str    =    str.trim();    	non-compiled	[CE]  ')'  expected	16	None	replace
70	[BUG]  [BUGGY]  return  createBigDecimal(numeric,  str.substring(1));  [CE]  ')'  expected  [FE]        AssertionError    [CONTEXT]    case  'D'  :  try  {  Double  d  =  NumberUtils.createDouble(numeric);  if  (!(d.isInfinite()  ||  (d.floatValue()  ==  0.0D  &&  !allZeros)))  {  return  d;  }  }  catch  (NumberFormatException  nfe)  {  //  NOPMD  }  try  {    [BUGGY]  return  createBigDecimal(numeric,  str.substring(1));  [BUGGY]    }  catch  (NumberFormatException  e)  {  //  NOPMD  }  default  :  throw  new  NumberFormatException(str  +     "  is  not  a  valid  number.   ");  }  }  else  {  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  	projects/Lang7/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	543	543	1	replace	return  createBigDecimal(numeric,  str.substring(1));	  return    createBigDecimal(numeric,    str);    	non-compiled	[CE]  ')'  expected	5	None	replace
71	[BUG]  [BUGGY]  Integer  dec  =  NumberUtils.createInteger(numeric).intValue();  [CE]  ')'  expected  [FE]        AssertionError    [CONTEXT]    case  'D'  :  try  {  Double  d  =  NumberUtils.createDouble(numeric);  if  (!(d.isInfinite()  ||  (d.floatValue()  ==  0.0D  &&  !allZeros)))  {  return  d;  }  }  catch  (NumberFormatException  nfe)  {  //  NOPMD  }  try  {    [BUGGY]  Integer  dec  =  NumberUtils.createInteger(numeric).intValue();  [BUGGY]    return  createBigDecimal(numeric);  }  catch  (NumberFormatException  e)  {  //  NOPMD  }  default  :  throw  new  NumberFormatException(str  +     "  is  not  a  valid  number.   ");  }  }  else  {  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  	projects/Lang7/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	543	543	1	replace	Integer  dec  =  NumberUtils.createInteger(numeric).intValue();	      Integer    dec    =    NumberUtils.createInteger(numeric);    	non-compiled	[CE]  ')'  expected	14	None	replace
72	[BUG]  [BUGGY]  Integer  dec  =  NumberUtils.createInteger(numeric)+  1;  [CE]  ')'  expected  [FE]          AssertionError    [CONTEXT]    case  'D'  :  try  {  Double  d  =  NumberUtils.createDouble(numeric);  if  (!(d.isInfinite()  ||  (d.floatValue()  ==  0.0D  &&  !allZeros)))  {  return  d;  }  }  catch  (NumberFormatException  nfe)  {  //  NOPMD  }  try  {    [BUGGY]  Integer  dec  =  NumberUtils.createInteger(numeric)+  1;  [BUGGY]    return  createBigDecimal(numeric);  }  catch  (NumberFormatException  e)  {  //  NOPMD  }  default  :  throw  new  NumberFormatException(str  +     "  is  not  a  valid  number.   ");  }  }  else  {  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  	projects/Lang7/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	543	543	1	replace	Integer  dec  =  NumberUtils.createInteger(numeric)+  1;	      Integer    dec    =    NumberUtils.createInteger(numeric);    	non-compiled	[CE]  ')'  expected	14	None	replace
73	[BUG]  [BUGGY]  return  createBigDecimal(numeric.toString(),  dec);  [CE]  ')'  expected  [FE]        AssertionError    [CONTEXT]    case  'D'  :  try  {  Double  d  =  NumberUtils.createDouble(numeric);  if  (!(d.isInfinite()  ||  (d.floatValue()  ==  0.0D  &&  !allZeros)))  {  return  d;  }  }  catch  (NumberFormatException  nfe)  {  //  NOPMD  }  try  {    [BUGGY]  return  createBigDecimal(numeric.toString(),  dec);  [BUGGY]    }  catch  (NumberFormatException  e)  {  //  NOPMD  }  default  :  throw  new  NumberFormatException(str  +     "  is  not  a  valid  number.   ");  }  }  else  {  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  	projects/Lang7/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	543	543	1	replace	return  createBigDecimal(numeric.toString(),  dec);	  return    createBigDecimal(numeric.toString());    	non-compiled	[CE]  ')'  expected	13	None	replace
74	[BUG]  [BUGGY]  return  createBigDecimal(numeric.toString()  + ", "  +  str);  [CE]  ')'  expected  [FE]          AssertionError    [CONTEXT]    case  'D'  :  try  {  Double  d  =  NumberUtils.createDouble(numeric);  if  (!(d.isInfinite()  ||  (d.floatValue()  ==  0.0D  &&  !allZeros)))  {  return  d;  }  }  catch  (NumberFormatException  nfe)  {  //  NOPMD  }  try  {    [BUGGY]  return  createBigDecimal(numeric.toString()  + ", "  +  str);  [BUGGY]    }  catch  (NumberFormatException  e)  {  //  NOPMD  }  default  :  throw  new  NumberFormatException(str  +     "  is  not  a  valid  number.   ");  }  }  else  {  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  	projects/Lang7/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	543	543	1	replace	return  createBigDecimal(numeric.toString()  + ", "  +  str);	  return    createBigDecimal(numeric.toString());    	non-compiled	[CE]  ')'  expected	13	None	replace
75	[BUG]  [BUGGY]  String  str  =  str.substring(0,  str.length()  1);  [CE]  ')'  expected  [FE]        AssertionError    [CONTEXT]    case  'D'  :  try  {  Double  d  =  NumberUtils.createDouble(numeric);  if  (!(d.isInfinite()  ||  (d.floatValue()  ==  0.0D  &&  !allZeros)))  {  return  d;  }  }  catch  (NumberFormatException  nfe)  {  //  NOPMD  }  try  {    [BUGGY]  String  str  =  str.substring(0,  str.length()  1);  [BUGGY]    return  createBigDecimal(numeric);  }  catch  (NumberFormatException  e)  {  //  NOPMD  }  default  :  throw  new  NumberFormatException(str  +     "  is  not  a  valid  number.   ");  }  }  else  {  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  	projects/Lang7/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	543	543	1	replace	String  str  =  str.substring(0,  str.length()  1);	      String    str    =    str.substring(0,    str.length()    -    1);    	non-compiled	[CE]  ')'  expected	1	None	replace
76	[BUG]  [BUGGY]  NumberUtils.copyPosition(numeric,  mant);  [CE]  ')'  expected  [FE]              AssertionError    [CONTEXT]    case  'D'  :  try  {  Double  d  =  NumberUtils.createDouble(numeric);  if  (!(d.isInfinite()  ||  (d.floatValue()  ==  0.0D  &&  !allZeros)))  {  return  d;  }  }  catch  (NumberFormatException  nfe)  {  //  NOPMD  }  try  {    [BUGGY]  NumberUtils.copyPosition(numeric,  mant);  [BUGGY]    return  createBigDecimal(numeric);  }  catch  (NumberFormatException  e)  {  //  NOPMD  }  default  :  throw  new  NumberFormatException(str  +     "  is  not  a  valid  number.   ");  }  }  else  {  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  	projects/Lang7/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	543	543	1	replace	NumberUtils.copyPosition(numeric,  mant);	      NumberUtils.copyPos(numeric,    str);    	non-compiled	[CE]  ')'  expected	11	None	replace
77	[BUG]  [BUGGY]  NumberUtils.copyPos(numeric,  str.length());  [CE]  ')'  expected  [FE]                AssertionError    [CONTEXT]    case  'D'  :  try  {  Double  d  =  NumberUtils.createDouble(numeric);  if  (!(d.isInfinite()  ||  (d.floatValue()  ==  0.0D  &&  !allZeros)))  {  return  d;  }  }  catch  (NumberFormatException  nfe)  {  //  NOPMD  }  try  {    [BUGGY]  NumberUtils.copyPos(numeric,  str.length());  [BUGGY]    return  createBigDecimal(numeric);  }  catch  (NumberFormatException  e)  {  //  NOPMD  }  default  :  throw  new  NumberFormatException(str  +     "  is  not  a  valid  number.   ");  }  }  else  {  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  	projects/Lang7/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	543	543	1	replace	NumberUtils.copyPos(numeric,  str.length());	      NumberUtils.copyPos(numeric,    str);    	non-compiled	[CE]  ')'  expected	11	None	replace
78	[BUG]  [BUGGY]  return  createLong(numeric.doubleValue());  [CE]  ')'  expected  [FE]          AssertionError    [CONTEXT]    case  'D'  :  try  {  Double  d  =  NumberUtils.createDouble(numeric);  if  (!(d.isInfinite()  ||  (d.floatValue()  ==  0.0D  &&  !allZeros)))  {  return  d;  }  }  catch  (NumberFormatException  nfe)  {  //  NOPMD  }  try  {    [BUGGY]  return  createLong(numeric.doubleValue());  [BUGGY]    }  catch  (NumberFormatException  e)  {  //  NOPMD  }  default  :  throw  new  NumberFormatException(str  +     "  is  not  a  valid  number.   ");  }  }  else  {  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  	projects/Lang7/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	543	543	1	replace	return  createLong(numeric.doubleValue());	  return    createBigDecimal(numeric.doubleValue());    	non-compiled	[CE]  ')'  expected	6	None	replace
79	[BUG]  [BUGGY]  Numeric  str  =  str.substring(0,  str.length())+  1;  [CE]  ')'  expected  [FE]          AssertionError    [CONTEXT]    case  'D'  :  try  {  Double  d  =  NumberUtils.createDouble(numeric);  if  (!(d.isInfinite()  ||  (d.floatValue()  ==  0.0D  &&  !allZeros)))  {  return  d;  }  }  catch  (NumberFormatException  nfe)  {  //  NOPMD  }  try  {    [BUGGY]  Numeric  str  =  str.substring(0,  str.length())+  1;  [BUGGY]    return  createBigDecimal(numeric);  }  catch  (NumberFormatException  e)  {  //  NOPMD  }  default  :  throw  new  NumberFormatException(str  +     "  is  not  a  valid  number.   ");  }  }  else  {  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  	projects/Lang7/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	543	543	1	replace	Numeric  str  =  str.substring(0,  str.length())+  1;	      Numeric    str    =    str.substring(0,    str.length()    -    1);    	non-compiled	[CE]  ')'  expected	15	None	replace
80	[BUG]  [BUGGY]  NumberUtils.copyPath(numeric,  dec);  [CE]  ')'  expected  [FE]                AssertionError    [CONTEXT]    case  'D'  :  try  {  Double  d  =  NumberUtils.createDouble(numeric);  if  (!(d.isInfinite()  ||  (d.floatValue()  ==  0.0D  &&  !allZeros)))  {  return  d;  }  }  catch  (NumberFormatException  nfe)  {  //  NOPMD  }  try  {    [BUGGY]  NumberUtils.copyPath(numeric,  dec);  [BUGGY]    return  createBigDecimal(numeric);  }  catch  (NumberFormatException  e)  {  //  NOPMD  }  default  :  throw  new  NumberFormatException(str  +     "  is  not  a  valid  number.   ");  }  }  else  {  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  	projects/Lang7/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	543	543	1	replace	NumberUtils.copyPath(numeric,  dec);	      NumberUtils.copyPath(numeric,    str);    	non-compiled	[CE]  ')'  expected	12	None	replace
