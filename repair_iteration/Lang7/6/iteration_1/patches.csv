bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  NumberUtils.copyValue(mant,  str);  [CE]  'catch'  without  'try'  [FE]          AssertionError    [CONTEXT]      case  'd'  :  case  'D'  :  try  {  Double  d  =  NumberUtils.createDouble(numeric);  if  (!(d.isInfinite()  ||  (d.floatValue()  ==  0.0D  &&  !allZeros)))  {  return  d;  }  }  catch  (NumberFormatException  nfe)  {  //  NOPMD      [BUGGY]  NumberUtils.copyValue(mant,  str);  [BUGGY]    }  try  {  return  createBigDecimal(numeric);  }  catch  (NumberFormatException  e)  {  //  NOPMD  }  default  :  throw  new  NumberFormatException(str  +     "  is  not  a  valid  number.   ");  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  	projects/Lang7/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	541	541	1	replace	NumberUtils.copyValue(mant,  str);	      NumberUtils.copyValue(numeric,    str);    	non-compiled	[CE]  'catch'  without  'try'	10	None	replace
2	[BUG]  [BUGGY]  NumberUtils.copyValue(numeric,  mant);  [CE]  'catch'  without  'try'  [FE]            AssertionError    [CONTEXT]      case  'd'  :  case  'D'  :  try  {  Double  d  =  NumberUtils.createDouble(numeric);  if  (!(d.isInfinite()  ||  (d.floatValue()  ==  0.0D  &&  !allZeros)))  {  return  d;  }  }  catch  (NumberFormatException  nfe)  {  //  NOPMD      [BUGGY]  NumberUtils.copyValue(numeric,  mant);  [BUGGY]    }  try  {  return  createBigDecimal(numeric);  }  catch  (NumberFormatException  e)  {  //  NOPMD  }  default  :  throw  new  NumberFormatException(str  +     "  is  not  a  valid  number.   ");  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  	projects/Lang7/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	541	541	1	replace	NumberUtils.copyValue(numeric,  mant);	      NumberUtils.copyValue(numeric,    str);    	non-compiled	[CE]  'catch'  without  'try'	10	None	replace
3	[BUG]  [BUGGY]  NumberUtils.copyDecimal(numeric,  str);  [CE]  'catch'  without  'try'  [FE]              AssertionError    [CONTEXT]      case  'd'  :  case  'D'  :  try  {  Double  d  =  NumberUtils.createDouble(numeric);  if  (!(d.isInfinite()  ||  (d.floatValue()  ==  0.0D  &&  !allZeros)))  {  return  d;  }  }  catch  (NumberFormatException  nfe)  {  //  NOPMD      [BUGGY]  NumberUtils.copyDecimal(numeric,  str);  [BUGGY]    }  try  {  return  createBigDecimal(numeric);  }  catch  (NumberFormatException  e)  {  //  NOPMD  }  default  :  throw  new  NumberFormatException(str  +     "  is  not  a  valid  number.   ");  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  	projects/Lang7/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	541	541	1	replace	NumberUtils.copyDecimal(numeric,  str);	      NumberUtils.copyValue(numeric,    str);    	non-compiled	[CE]  'catch'  without  'try'	10	None	replace
4	[BUG]  [BUGGY]  NumberUtils.copyNumber(mant,  str);  [CE]  'catch'  without  'try'  [FE]                AssertionError    [CONTEXT]      case  'd'  :  case  'D'  :  try  {  Double  d  =  NumberUtils.createDouble(numeric);  if  (!(d.isInfinite()  ||  (d.floatValue()  ==  0.0D  &&  !allZeros)))  {  return  d;  }  }  catch  (NumberFormatException  nfe)  {  //  NOPMD      [BUGGY]  NumberUtils.copyNumber(mant,  str);  [BUGGY]    }  try  {  return  createBigDecimal(numeric);  }  catch  (NumberFormatException  e)  {  //  NOPMD  }  default  :  throw  new  NumberFormatException(str  +     "  is  not  a  valid  number.   ");  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  	projects/Lang7/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	541	541	1	replace	NumberUtils.copyNumber(mant,  str);	      NumberUtils.copyValue(numeric,    str);    	non-compiled	[CE]  'catch'  without  'try'	10	None	replace
5	[BUG]  [BUGGY]  NumberUtils.copyNumber(numeric,  mant);  [CE]  'catch'  without  'try'  [FE]            AssertionError    [CONTEXT]      case  'd'  :  case  'D'  :  try  {  Double  d  =  NumberUtils.createDouble(numeric);  if  (!(d.isInfinite()  ||  (d.floatValue()  ==  0.0D  &&  !allZeros)))  {  return  d;  }  }  catch  (NumberFormatException  nfe)  {  //  NOPMD      [BUGGY]  NumberUtils.copyNumber(numeric,  mant);  [BUGGY]    }  try  {  return  createBigDecimal(numeric);  }  catch  (NumberFormatException  e)  {  //  NOPMD  }  default  :  throw  new  NumberFormatException(str  +     "  is  not  a  valid  number.   ");  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  	projects/Lang7/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	541	541	1	replace	NumberUtils.copyNumber(numeric,  mant);	      NumberUtils.copyNumber(numeric,    str);    	non-compiled	[CE]  'catch'  without  'try'	11	None	replace
6	[BUG]  [BUGGY]  NumberUtils.copyNumber(str,  numeric);  [CE]  'catch'  without  'try'  [FE]              AssertionError    [CONTEXT]      case  'd'  :  case  'D'  :  try  {  Double  d  =  NumberUtils.createDouble(numeric);  if  (!(d.isInfinite()  ||  (d.floatValue()  ==  0.0D  &&  !allZeros)))  {  return  d;  }  }  catch  (NumberFormatException  nfe)  {  //  NOPMD      [BUGGY]  NumberUtils.copyNumber(str,  numeric);  [BUGGY]    }  try  {  return  createBigDecimal(numeric);  }  catch  (NumberFormatException  e)  {  //  NOPMD  }  default  :  throw  new  NumberFormatException(str  +     "  is  not  a  valid  number.   ");  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  	projects/Lang7/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	541	541	1	replace	NumberUtils.copyNumber(str,  numeric);	      NumberUtils.copyNumber(numeric,    str);    	non-compiled	[CE]  'catch'  without  'try'	11	None	replace
7	[BUG]  [BUGGY]  NumberUtils.copyNumber(numeric,  str,  exp);  [CE]  'catch'  without  'try'  [FE]                AssertionError    [CONTEXT]      case  'd'  :  case  'D'  :  try  {  Double  d  =  NumberUtils.createDouble(numeric);  if  (!(d.isInfinite()  ||  (d.floatValue()  ==  0.0D  &&  !allZeros)))  {  return  d;  }  }  catch  (NumberFormatException  nfe)  {  //  NOPMD      [BUGGY]  NumberUtils.copyNumber(numeric,  str,  exp);  [BUGGY]    }  try  {  return  createBigDecimal(numeric);  }  catch  (NumberFormatException  e)  {  //  NOPMD  }  default  :  throw  new  NumberFormatException(str  +     "  is  not  a  valid  number.   ");  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  	projects/Lang7/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	541	541	1	replace	NumberUtils.copyNumber(numeric,  str,  exp);	      NumberUtils.copyNumber(numeric,    str);    	non-compiled	[CE]  'catch'  without  'try'	11	None	replace
8	[BUG]  [BUGGY]  String  str  =  str.substring(0,  str.length());  [CE]  'catch'  without  'try'  [FE]            AssertionError    [CONTEXT]      case  'd'  :  case  'D'  :  try  {  Double  d  =  NumberUtils.createDouble(numeric);  if  (!(d.isInfinite()  ||  (d.floatValue()  ==  0.0D  &&  !allZeros)))  {  return  d;  }  }  catch  (NumberFormatException  nfe)  {  //  NOPMD      [BUGGY]  String  str  =  str.substring(0,  str.length());  [BUGGY]    try  {  return  createBigDecimal(numeric);  }  catch  (NumberFormatException  e)  {  //  NOPMD  }  default  :  throw  new  NumberFormatException(str  +     "  is  not  a  valid  number.   ");  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  	projects/Lang7/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	541	541	1	replace	String  str  =  str.substring(0,  str.length());	  String    str    =    str.substring(0,    str.length()    -    2);    	non-compiled	[CE]  'catch'  without  'try'	3	None	replace
9	[BUG]  [BUGGY]  String  str  =  str.substring(0,  str.length();  [CE]  'catch'  without  'try'  [FE]              AssertionError    [CONTEXT]      case  'd'  :  case  'D'  :  try  {  Double  d  =  NumberUtils.createDouble(numeric);  if  (!(d.isInfinite()  ||  (d.floatValue()  ==  0.0D  &&  !allZeros)))  {  return  d;  }  }  catch  (NumberFormatException  nfe)  {  //  NOPMD      [BUGGY]  String  str  =  str.substring(0,  str.length();  [BUGGY]    try  {  return  createBigDecimal(numeric);  }  catch  (NumberFormatException  e)  {  //  NOPMD  }  default  :  throw  new  NumberFormatException(str  +     "  is  not  a  valid  number.   ");  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  	projects/Lang7/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	541	541	1	replace	String  str  =  str.substring(0,  str.length();	  String    str    =    str.substring(0,    str.length()    -    2);    	non-compiled	[CE]  'catch'  without  'try'	3	None	replace
10	[BUG]  [BUGGY]  String  str  =  str.substring(numeric.length());  [CE]  orphaned  case  [FE]          AssertionError    [CONTEXT]      case  'd'  :  case  'D'  :  try  {  Double  d  =  NumberUtils.createDouble(numeric);  if  (!(d.isInfinite()  ||  (d.floatValue()  ==  0.0D  &&  !allZeros)))  {  return  d;  }  }  catch  (NumberFormatException  nfe)  {  //  NOPMD      [BUGGY]  String  str  =  str.substring(numeric.length());  [BUGGY]    try  {  return  createBigDecimal(numeric);  }  catch  (NumberFormatException  e)  {  //  NOPMD  }  default  :  throw  new  NumberFormatException(str  +     "  is  not  a  valid  number.   ");  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  	projects/Lang7/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	541	541	1	replace	String  str  =  str.substring(numeric.length());	  String    str    =    str.substring(numeric.length()    -    1);    	non-compiled	[CE]  orphaned  case	8	None	replace
11	[BUG]  [BUGGY]  String  str  =  string.substring(numeric.length());  [CE]  orphaned  case  [FE]            AssertionError    [CONTEXT]      case  'd'  :  case  'D'  :  try  {  Double  d  =  NumberUtils.createDouble(numeric);  if  (!(d.isInfinite()  ||  (d.floatValue()  ==  0.0D  &&  !allZeros)))  {  return  d;  }  }  catch  (NumberFormatException  nfe)  {  //  NOPMD      [BUGGY]  String  str  =  string.substring(numeric.length());  [BUGGY]    try  {  return  createBigDecimal(numeric);  }  catch  (NumberFormatException  e)  {  //  NOPMD  }  default  :  throw  new  NumberFormatException(str  +     "  is  not  a  valid  number.   ");  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  	projects/Lang7/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	541	541	1	replace	String  str  =  string.substring(numeric.length());	  String    str    =    str.substring(numeric.length()    -    1);    	non-compiled	[CE]  orphaned  case	8	None	replace
12	[BUG]  [BUGGY]  String  str  =  str.substring(numeric.length()  +  1);  [CE]  orphaned  case  [FE]              AssertionError    [CONTEXT]      case  'd'  :  case  'D'  :  try  {  Double  d  =  NumberUtils.createDouble(numeric);  if  (!(d.isInfinite()  ||  (d.floatValue()  ==  0.0D  &&  !allZeros)))  {  return  d;  }  }  catch  (NumberFormatException  nfe)  {  //  NOPMD      [BUGGY]  String  str  =  str.substring(numeric.length()  +  1);  [BUGGY]    try  {  return  createBigDecimal(numeric);  }  catch  (NumberFormatException  e)  {  //  NOPMD  }  default  :  throw  new  NumberFormatException(str  +     "  is  not  a  valid  number.   ");  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  	projects/Lang7/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	541	541	1	replace	String  str  =  str.substring(numeric.length()  +  1);	  String    str    =    str.substring(numeric.length()    -    1);    	non-compiled	[CE]  orphaned  case	8	None	replace
13	[BUG]  [BUGGY]  int  decPos  =  str.indexOf('.',  0);  [CE]  orphaned  case  [FE]          AssertionError    [CONTEXT]      case  'd'  :  case  'D'  :  try  {  Double  d  =  NumberUtils.createDouble(numeric);  if  (!(d.isInfinite()  ||  (d.floatValue()  ==  0.0D  &&  !allZeros)))  {  return  d;  }  }  catch  (NumberFormatException  nfe)  {  //  NOPMD      [BUGGY]  int  decPos  =  str.indexOf('.',  0);  [BUGGY]    try  {  return  createBigDecimal(numeric);  }  catch  (NumberFormatException  e)  {  //  NOPMD  }  default  :  throw  new  NumberFormatException(str  +     "  is  not  a  valid  number.   ");  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  	projects/Lang7/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	541	541	1	replace	int  decPos  =  str.indexOf('.',  0);	  int    decPos    =    str.indexOf('.');    	non-compiled	[CE]  orphaned  case	13	None	replace
14	[BUG]  [BUGGY]  int  decPos  =  str.indexOf('.',  decPos);  [CE]  orphaned  case  [FE]            AssertionError    [CONTEXT]      case  'd'  :  case  'D'  :  try  {  Double  d  =  NumberUtils.createDouble(numeric);  if  (!(d.isInfinite()  ||  (d.floatValue()  ==  0.0D  &&  !allZeros)))  {  return  d;  }  }  catch  (NumberFormatException  nfe)  {  //  NOPMD      [BUGGY]  int  decPos  =  str.indexOf('.',  decPos);  [BUGGY]    try  {  return  createBigDecimal(numeric);  }  catch  (NumberFormatException  e)  {  //  NOPMD  }  default  :  throw  new  NumberFormatException(str  +     "  is  not  a  valid  number.   ");  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  	projects/Lang7/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	541	541	1	replace	int  decPos  =  str.indexOf('.',  decPos);	  int    decPos    =    str.indexOf('.');    	non-compiled	[CE]  orphaned  case	13	None	replace
15	[BUG]  [BUGGY]  int  decPos  =  str.indexOf('.',  exp);  [CE]  orphaned  case  [FE]              AssertionError    [CONTEXT]      case  'd'  :  case  'D'  :  try  {  Double  d  =  NumberUtils.createDouble(numeric);  if  (!(d.isInfinite()  ||  (d.floatValue()  ==  0.0D  &&  !allZeros)))  {  return  d;  }  }  catch  (NumberFormatException  nfe)  {  //  NOPMD      [BUGGY]  int  decPos  =  str.indexOf('.',  exp);  [BUGGY]    try  {  return  createBigDecimal(numeric);  }  catch  (NumberFormatException  e)  {  //  NOPMD  }  default  :  throw  new  NumberFormatException(str  +     "  is  not  a  valid  number.   ");  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  	projects/Lang7/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	541	541	1	replace	int  decPos  =  str.indexOf('.',  exp);	  int    decPos    =    str.indexOf('.');    	non-compiled	[CE]  orphaned  case	13	None	replace
16	[BUG]  [BUGGY]  String  dec  =  str.substring(numeric.length());  [CE]  orphaned  case  [FE]        AssertionError    [CONTEXT]      case  'd'  :  case  'D'  :  try  {  Double  d  =  NumberUtils.createDouble(numeric);  if  (!(d.isInfinite()  ||  (d.floatValue()  ==  0.0D  &&  !allZeros)))  {  return  d;  }  }  catch  (NumberFormatException  nfe)  {  //  NOPMD      [BUGGY]  String  dec  =  str.substring(numeric.length());  [BUGGY]    }  try  {  return  createBigDecimal(numeric);  }  catch  (NumberFormatException  e)  {  //  NOPMD  }  default  :  throw  new  NumberFormatException(str  +     "  is  not  a  valid  number.   ");  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  	projects/Lang7/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	541	541	1	replace	String  dec  =  str.substring(numeric.length());	      String    dec    =    str.substring(numeric.length()    -    1);    	non-compiled	[CE]  orphaned  case	5	None	replace
17	[BUG]  [BUGGY]  String  dec  =  str.substring(numeric.length()  +  1);  [CE]  orphaned  case  [FE]          AssertionError    [CONTEXT]      case  'd'  :  case  'D'  :  try  {  Double  d  =  NumberUtils.createDouble(numeric);  if  (!(d.isInfinite()  ||  (d.floatValue()  ==  0.0D  &&  !allZeros)))  {  return  d;  }  }  catch  (NumberFormatException  nfe)  {  //  NOPMD      [BUGGY]  String  dec  =  str.substring(numeric.length()  +  1);  [BUGGY]    }  try  {  return  createBigDecimal(numeric);  }  catch  (NumberFormatException  e)  {  //  NOPMD  }  default  :  throw  new  NumberFormatException(str  +     "  is  not  a  valid  number.   ");  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  	projects/Lang7/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	541	541	1	replace	String  dec  =  str.substring(numeric.length()  +  1);	      String    dec    =    str.substring(numeric.length()    -    1);    	non-compiled	[CE]  orphaned  case	5	None	replace
18	[BUG]  [BUGGY]  String  dec  =  str.substring(0,  str.length());  return  createInteger(dec);  [CE]  orphaned  case  [FE]            AssertionError    [CONTEXT]      case  'd'  :  case  'D'  :  try  {  Double  d  =  NumberUtils.createDouble(numeric);  if  (!(d.isInfinite()  ||  (d.floatValue()  ==  0.0D  &&  !allZeros)))  {  return  d;  }  }  catch  (NumberFormatException  nfe)  {  //  NOPMD      [BUGGY]  String  dec  =  str.substring(0,  str.length());  return  createInteger(dec);  [BUGGY]    }  try  {  return  createBigDecimal(numeric);  }  catch  (NumberFormatException  e)  {  //  NOPMD  }  default  :  throw  new  NumberFormatException(str  +     "  is  not  a  valid  number.   ");  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  	projects/Lang7/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	541	541	1	replace	String  dec  =  str.substring(0,  str.length());  return  createInteger(dec);	      String    dec    =    str.substring(0,    str.length()    -    1);    return    createLong(dec);    	non-compiled	[CE]  orphaned  case	17	None	replace
19	[BUG]  [BUGGY]  String  dec  =  str.substring(0,  str.length());  return  createLong(dec);  [CE]  orphaned  case  [FE]              AssertionError    [CONTEXT]      case  'd'  :  case  'D'  :  try  {  Double  d  =  NumberUtils.createDouble(numeric);  if  (!(d.isInfinite()  ||  (d.floatValue()  ==  0.0D  &&  !allZeros)))  {  return  d;  }  }  catch  (NumberFormatException  nfe)  {  //  NOPMD      [BUGGY]  String  dec  =  str.substring(0,  str.length());  return  createLong(dec);  [BUGGY]    }  try  {  return  createBigDecimal(numeric);  }  catch  (NumberFormatException  e)  {  //  NOPMD  }  default  :  throw  new  NumberFormatException(str  +     "  is  not  a  valid  number.   ");  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  	projects/Lang7/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	541	541	1	replace	String  dec  =  str.substring(0,  str.length());  return  createLong(dec);	      String    dec    =    str.substring(0,    str.length()    -    1);    return    createLong(dec);    	non-compiled	[CE]  orphaned  case	17	None	replace
20	[BUG]  [BUGGY]  String  dec  =  str.substring(0,  str.length());  return  createLong(numeric);  [CE]  orphaned  case  [FE]                AssertionError    [CONTEXT]      case  'd'  :  case  'D'  :  try  {  Double  d  =  NumberUtils.createDouble(numeric);  if  (!(d.isInfinite()  ||  (d.floatValue()  ==  0.0D  &&  !allZeros)))  {  return  d;  }  }  catch  (NumberFormatException  nfe)  {  //  NOPMD      [BUGGY]  String  dec  =  str.substring(0,  str.length());  return  createLong(numeric);  [BUGGY]    }  try  {  return  createBigDecimal(numeric);  }  catch  (NumberFormatException  e)  {  //  NOPMD  }  default  :  throw  new  NumberFormatException(str  +     "  is  not  a  valid  number.   ");  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  	projects/Lang7/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	541	541	1	replace	String  dec  =  str.substring(0,  str.length());  return  createLong(numeric);	      String    dec    =    str.substring(0,    str.length()    -    1);    return    createLong(dec);    	non-compiled	[CE]  orphaned  case	17	None	replace
21	[BUG]  [BUGGY]  String  dec  =  str.substring(0,  str.length()  -  1);  return  createInteger(dec);  [CE]  orphaned  case  [FE]                  AssertionError    [CONTEXT]      case  'd'  :  case  'D'  :  try  {  Double  d  =  NumberUtils.createDouble(numeric);  if  (!(d.isInfinite()  ||  (d.floatValue()  ==  0.0D  &&  !allZeros)))  {  return  d;  }  }  catch  (NumberFormatException  nfe)  {  //  NOPMD      [BUGGY]  String  dec  =  str.substring(0,  str.length()  -  1);  return  createInteger(dec);  [BUGGY]    }  try  {  return  createBigDecimal(numeric);  }  catch  (NumberFormatException  e)  {  //  NOPMD  }  default  :  throw  new  NumberFormatException(str  +     "  is  not  a  valid  number.   ");  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  	projects/Lang7/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	541	541	1	replace	String  dec  =  str.substring(0,  str.length()  -  1);  return  createInteger(dec);	      String    dec    =    str.substring(0,    str.length()    -    1);    return    createLong(dec);    	non-compiled	[CE]  orphaned  case	17	None	replace
22	[BUG]  [BUGGY]  nfe.printStackTrace();  [CE]  orphaned  case  [FE]        AssertionError    [CONTEXT]      case  'd'  :  case  'D'  :  try  {  Double  d  =  NumberUtils.createDouble(numeric);  if  (!(d.isInfinite()  ||  (d.floatValue()  ==  0.0D  &&  !allZeros)))  {  return  d;  }  }  catch  (NumberFormatException  nfe)  {  //  NOPMD      [BUGGY]  nfe.printStackTrace();  [BUGGY]    }  try  {  return  createBigDecimal(numeric);  }  catch  (NumberFormatException  e)  {  //  NOPMD  }  default  :  throw  new  NumberFormatException(str  +     "  is  not  a  valid  number.   ");  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  	projects/Lang7/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	541	541	1	replace	nfe.printStackTrace();	      e.printStackTrace();    	non-compiled	[CE]  orphaned  case	9	None	replace
23	[BUG]  [BUGGY]  e.printStackTrace(System.err);  [CE]  orphaned  case  [FE]          AssertionError    [CONTEXT]      case  'd'  :  case  'D'  :  try  {  Double  d  =  NumberUtils.createDouble(numeric);  if  (!(d.isInfinite()  ||  (d.floatValue()  ==  0.0D  &&  !allZeros)))  {  return  d;  }  }  catch  (NumberFormatException  nfe)  {  //  NOPMD      [BUGGY]  e.printStackTrace(System.err);  [BUGGY]    }  try  {  return  createBigDecimal(numeric);  }  catch  (NumberFormatException  e)  {  //  NOPMD  }  default  :  throw  new  NumberFormatException(str  +     "  is  not  a  valid  number.   ");  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  	projects/Lang7/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	541	541	1	replace	e.printStackTrace(System.err);	      e.printStackTrace();    	non-compiled	[CE]  orphaned  case	9	None	replace
24	[BUG]  [BUGGY]  throw  new  NumberFormatException( " ");  [CE]  orphaned  case  [FE]            AssertionError    [CONTEXT]      case  'd'  :  case  'D'  :  try  {  Double  d  =  NumberUtils.createDouble(numeric);  if  (!(d.isInfinite()  ||  (d.floatValue()  ==  0.0D  &&  !allZeros)))  {  return  d;  }  }  catch  (NumberFormatException  nfe)  {  //  NOPMD      [BUGGY]  throw  new  NumberFormatException( " ");  [BUGGY]    }  try  {  return  createBigDecimal(numeric);  }  catch  (NumberFormatException  e)  {  //  NOPMD  }  default  :  throw  new  NumberFormatException(str  +     "  is  not  a  valid  number.   ");  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  	projects/Lang7/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	541	541	1	replace	throw  new  NumberFormatException( " ");	      e.printStackTrace();    	non-compiled	[CE]  orphaned  case	9	None	replace
25	[BUG]  [BUGGY]  String  dec  =  str.substring(0,  str.length());  return  createDecimal(dec);  [CE]  orphaned  case  [FE]          AssertionError    [CONTEXT]      case  'd'  :  case  'D'  :  try  {  Double  d  =  NumberUtils.createDouble(numeric);  if  (!(d.isInfinite()  ||  (d.floatValue()  ==  0.0D  &&  !allZeros)))  {  return  d;  }  }  catch  (NumberFormatException  nfe)  {  //  NOPMD      [BUGGY]  String  dec  =  str.substring(0,  str.length());  return  createDecimal(dec);  [BUGGY]    }  try  {  return  createBigDecimal(numeric);  }  catch  (NumberFormatException  e)  {  //  NOPMD  }  default  :  throw  new  NumberFormatException(str  +     "  is  not  a  valid  number.   ");  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  	projects/Lang7/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	541	541	1	replace	String  dec  =  str.substring(0,  str.length());  return  createDecimal(dec);	      String    dec    =    str.substring(0,    str.length()    -    1);    return    createBigDecimal(dec);    	non-compiled	[CE]  orphaned  case	16	None	replace
26	[BUG]  [BUGGY]  String  dec  =  str.substring(0,  str.length());  return  createDouble(dec);  [CE]  orphaned  case  [FE]            AssertionError    [CONTEXT]      case  'd'  :  case  'D'  :  try  {  Double  d  =  NumberUtils.createDouble(numeric);  if  (!(d.isInfinite()  ||  (d.floatValue()  ==  0.0D  &&  !allZeros)))  {  return  d;  }  }  catch  (NumberFormatException  nfe)  {  //  NOPMD      [BUGGY]  String  dec  =  str.substring(0,  str.length());  return  createDouble(dec);  [BUGGY]    }  try  {  return  createBigDecimal(numeric);  }  catch  (NumberFormatException  e)  {  //  NOPMD  }  default  :  throw  new  NumberFormatException(str  +     "  is  not  a  valid  number.   ");  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  	projects/Lang7/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	541	541	1	replace	String  dec  =  str.substring(0,  str.length());  return  createDouble(dec);	      String    dec    =    str.substring(0,    str.length()    -    1);    return    createBigDecimal(dec);    	non-compiled	[CE]  orphaned  case	16	None	replace
27	[BUG]  [BUGGY]  String  dec  =  str.substring(0,  str.length());  return  createBigDecimal(dec);  [CE]  orphaned  case  [FE]              AssertionError    [CONTEXT]      case  'd'  :  case  'D'  :  try  {  Double  d  =  NumberUtils.createDouble(numeric);  if  (!(d.isInfinite()  ||  (d.floatValue()  ==  0.0D  &&  !allZeros)))  {  return  d;  }  }  catch  (NumberFormatException  nfe)  {  //  NOPMD      [BUGGY]  String  dec  =  str.substring(0,  str.length());  return  createBigDecimal(dec);  [BUGGY]    }  try  {  return  createBigDecimal(numeric);  }  catch  (NumberFormatException  e)  {  //  NOPMD  }  default  :  throw  new  NumberFormatException(str  +     "  is  not  a  valid  number.   ");  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  	projects/Lang7/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	541	541	1	replace	String  dec  =  str.substring(0,  str.length());  return  createBigDecimal(dec);	      String    dec    =    str.substring(0,    str.length()    -    1);    return    createBigDecimal(dec);    	non-compiled	[CE]  orphaned  case	16	None	replace
28	[BUG]  [BUGGY]  String  dec  =  str.substring(0,  str.length()  -  1);  return  createDouble(dec);  [CE]  'catch'  without  'try'  [FE]                AssertionError    [CONTEXT]      case  'd'  :  case  'D'  :  try  {  Double  d  =  NumberUtils.createDouble(numeric);  if  (!(d.isInfinite()  ||  (d.floatValue()  ==  0.0D  &&  !allZeros)))  {  return  d;  }  }  catch  (NumberFormatException  nfe)  {  //  NOPMD      [BUGGY]  String  dec  =  str.substring(0,  str.length()  -  1);  return  createDouble(dec);  [BUGGY]    }  try  {  return  createBigDecimal(numeric);  }  catch  (NumberFormatException  e)  {  //  NOPMD  }  default  :  throw  new  NumberFormatException(str  +     "  is  not  a  valid  number.   ");  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  	projects/Lang7/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	541	541	1	replace	String  dec  =  str.substring(0,  str.length()  -  1);  return  createDouble(dec);	      String    dec    =    str.substring(0,    str.length()    -    1);    return    createBigDecimal(dec);    	non-compiled	[CE]  'catch'  without  'try'	16	None	replace
29	[BUG]  [BUGGY]  String  dec  =  str.substring(0,  str.length());  return  createDouble(numeric);  [CE]  'catch'  without  'try'  [FE]        AssertionError    [CONTEXT]      case  'd'  :  case  'D'  :  try  {  Double  d  =  NumberUtils.createDouble(numeric);  if  (!(d.isInfinite()  ||  (d.floatValue()  ==  0.0D  &&  !allZeros)))  {  return  d;  }  }  catch  (NumberFormatException  nfe)  {  //  NOPMD      [BUGGY]  String  dec  =  str.substring(0,  str.length());  return  createDouble(numeric);  [BUGGY]    }  try  {  return  createBigDecimal(numeric);  }  catch  (NumberFormatException  e)  {  //  NOPMD  }  default  :  throw  new  NumberFormatException(str  +     "  is  not  a  valid  number.   ");  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  	projects/Lang7/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	541	541	1	replace	String  dec  =  str.substring(0,  str.length());  return  createDouble(numeric);	      String    dec    =    str.substring(0,    str.length()    -    1);    return    createBigDecimal(numeric);    	non-compiled	[CE]  'catch'  without  'try'	15	None	replace
30	[BUG]  [BUGGY]  String  dec  =  str.substring(0,  str.length());  return  createDecimal(numeric);  [CE]  'catch'  without  'try'  [FE]          AssertionError    [CONTEXT]      case  'd'  :  case  'D'  :  try  {  Double  d  =  NumberUtils.createDouble(numeric);  if  (!(d.isInfinite()  ||  (d.floatValue()  ==  0.0D  &&  !allZeros)))  {  return  d;  }  }  catch  (NumberFormatException  nfe)  {  //  NOPMD      [BUGGY]  String  dec  =  str.substring(0,  str.length());  return  createDecimal(numeric);  [BUGGY]    }  try  {  return  createBigDecimal(numeric);  }  catch  (NumberFormatException  e)  {  //  NOPMD  }  default  :  throw  new  NumberFormatException(str  +     "  is  not  a  valid  number.   ");  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  	projects/Lang7/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	541	541	1	replace	String  dec  =  str.substring(0,  str.length());  return  createDecimal(numeric);	      String    dec    =    str.substring(0,    str.length()    -    1);    return    createBigDecimal(numeric);    	non-compiled	[CE]  'catch'  without  'try'	15	None	replace
31	[BUG]  [BUGGY]  String  dec  =  str.substring(0,  str.length());  return  createNumber(numeric);  [CE]  'catch'  without  'try'  [FE]            AssertionError    [CONTEXT]      case  'd'  :  case  'D'  :  try  {  Double  d  =  NumberUtils.createDouble(numeric);  if  (!(d.isInfinite()  ||  (d.floatValue()  ==  0.0D  &&  !allZeros)))  {  return  d;  }  }  catch  (NumberFormatException  nfe)  {  //  NOPMD      [BUGGY]  String  dec  =  str.substring(0,  str.length());  return  createNumber(numeric);  [BUGGY]    }  try  {  return  createBigDecimal(numeric);  }  catch  (NumberFormatException  e)  {  //  NOPMD  }  default  :  throw  new  NumberFormatException(str  +     "  is  not  a  valid  number.   ");  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  	projects/Lang7/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	541	541	1	replace	String  dec  =  str.substring(0,  str.length());  return  createNumber(numeric);	      String    dec    =    str.substring(0,    str.length()    -    1);    return    createBigDecimal(numeric);    	non-compiled	[CE]  'catch'  without  'try'	15	None	replace
32	[BUG]  [BUGGY]  String  dec  =  str.substring(0,  str.length()  -  1);  return  createDouble(numeric);  [CE]  'catch'  without  'try'  [FE]              AssertionError    [CONTEXT]      case  'd'  :  case  'D'  :  try  {  Double  d  =  NumberUtils.createDouble(numeric);  if  (!(d.isInfinite()  ||  (d.floatValue()  ==  0.0D  &&  !allZeros)))  {  return  d;  }  }  catch  (NumberFormatException  nfe)  {  //  NOPMD      [BUGGY]  String  dec  =  str.substring(0,  str.length()  -  1);  return  createDouble(numeric);  [BUGGY]    }  try  {  return  createBigDecimal(numeric);  }  catch  (NumberFormatException  e)  {  //  NOPMD  }  default  :  throw  new  NumberFormatException(str  +     "  is  not  a  valid  number.   ");  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  	projects/Lang7/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	541	541	1	replace	String  dec  =  str.substring(0,  str.length()  -  1);  return  createDouble(numeric);	      String    dec    =    str.substring(0,    str.length()    -    1);    return    createBigDecimal(numeric);    	non-compiled	[CE]  'catch'  without  'try'	15	None	replace
33	[BUG]  [BUGGY]  String  dec  =  str.substring(0,  str.length());  [CE]  'catch'  without  'try'  [FE]          AssertionError    [CONTEXT]      case  'd'  :  case  'D'  :  try  {  Double  d  =  NumberUtils.createDouble(numeric);  if  (!(d.isInfinite()  ||  (d.floatValue()  ==  0.0D  &&  !allZeros)))  {  return  d;  }  }  catch  (NumberFormatException  nfe)  {  //  NOPMD      [BUGGY]  String  dec  =  str.substring(0,  str.length());  [BUGGY]    try  {  return  createBigDecimal(numeric);  }  catch  (NumberFormatException  e)  {  //  NOPMD  }  default  :  throw  new  NumberFormatException(str  +     "  is  not  a  valid  number.   ");  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  	projects/Lang7/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	541	541	1	replace	String  dec  =  str.substring(0,  str.length());	  String    dec    =    str.substring(0,    str.length()    -    1);    	non-compiled	[CE]  'catch'  without  'try'	2	None	replace
34	[BUG]  [BUGGY]  String  dec  =  str.substring(0,  str.length();  [CE]  illegal  start  of  expression  [FE]            AssertionError    [CONTEXT]      case  'd'  :  case  'D'  :  try  {  Double  d  =  NumberUtils.createDouble(numeric);  if  (!(d.isInfinite()  ||  (d.floatValue()  ==  0.0D  &&  !allZeros)))  {  return  d;  }  }  catch  (NumberFormatException  nfe)  {  //  NOPMD      [BUGGY]  String  dec  =  str.substring(0,  str.length();  [BUGGY]    try  {  return  createBigDecimal(numeric);  }  catch  (NumberFormatException  e)  {  //  NOPMD  }  default  :  throw  new  NumberFormatException(str  +     "  is  not  a  valid  number.   ");  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  	projects/Lang7/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	541	541	1	replace	String  dec  =  str.substring(0,  str.length();	  String    dec    =    str.substring(0,    str.length()    -    1);    	non-compiled	[CE]  illegal  start  of  expression	2	None	replace
35	[BUG]  [BUGGY]  int  decPos  =  str.indexOf('.')+  2;  [CE]  illegal  start  of  expression  [FE]            AssertionError    [CONTEXT]      case  'd'  :  case  'D'  :  try  {  Double  d  =  NumberUtils.createDouble(numeric);  if  (!(d.isInfinite()  ||  (d.floatValue()  ==  0.0D  &&  !allZeros)))  {  return  d;  }  }  catch  (NumberFormatException  nfe)  {  //  NOPMD      [BUGGY]  int  decPos  =  str.indexOf('.')+  2;  [BUGGY]    try  {  return  createBigDecimal(numeric);  }  catch  (NumberFormatException  e)  {  //  NOPMD  }  default  :  throw  new  NumberFormatException(str  +     "  is  not  a  valid  number.   ");  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  	projects/Lang7/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	541	541	1	replace	int  decPos  =  str.indexOf('.')+  2;	  int    decPos    =    str.indexOf('.')+    1;    	non-compiled	[CE]  illegal  start  of  expression	14	None	replace
36	[BUG]  [BUGGY]  int  decPos  =  str.lastIndexOf('.')+  1;  [CE]  illegal  start  of  expression  [FE]              AssertionError    [CONTEXT]      case  'd'  :  case  'D'  :  try  {  Double  d  =  NumberUtils.createDouble(numeric);  if  (!(d.isInfinite()  ||  (d.floatValue()  ==  0.0D  &&  !allZeros)))  {  return  d;  }  }  catch  (NumberFormatException  nfe)  {  //  NOPMD      [BUGGY]  int  decPos  =  str.lastIndexOf('.')+  1;  [BUGGY]    try  {  return  createBigDecimal(numeric);  }  catch  (NumberFormatException  e)  {  //  NOPMD  }  default  :  throw  new  NumberFormatException(str  +     "  is  not  a  valid  number.   ");  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  	projects/Lang7/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	541	541	1	replace	int  decPos  =  str.lastIndexOf('.')+  1;	  int    decPos    =    str.indexOf('.')+    1;    	non-compiled	[CE]  illegal  start  of  expression	14	None	replace
37	[BUG]  [BUGGY]  int  decPos  =  str.indexOf('.')+  0;  [CE]  illegal  start  of  expression  [FE]                AssertionError    [CONTEXT]      case  'd'  :  case  'D'  :  try  {  Double  d  =  NumberUtils.createDouble(numeric);  if  (!(d.isInfinite()  ||  (d.floatValue()  ==  0.0D  &&  !allZeros)))  {  return  d;  }  }  catch  (NumberFormatException  nfe)  {  //  NOPMD      [BUGGY]  int  decPos  =  str.indexOf('.')+  0;  [BUGGY]    try  {  return  createBigDecimal(numeric);  }  catch  (NumberFormatException  e)  {  //  NOPMD  }  default  :  throw  new  NumberFormatException(str  +     "  is  not  a  valid  number.   ");  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  	projects/Lang7/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	541	541	1	replace	int  decPos  =  str.indexOf('.')+  0;	  int    decPos    =    str.indexOf('.')+    1;    	non-compiled	[CE]  illegal  start  of  expression	14	None	replace
38	[BUG]  [BUGGY]  int  decPos  =  str.lastIndexOf('.',  -1);  [CE]  'catch'  without  'try'  [FE]        AssertionError    [CONTEXT]      case  'd'  :  case  'D'  :  try  {  Double  d  =  NumberUtils.createDouble(numeric);  if  (!(d.isInfinite()  ||  (d.floatValue()  ==  0.0D  &&  !allZeros)))  {  return  d;  }  }  catch  (NumberFormatException  nfe)  {  //  NOPMD      [BUGGY]  int  decPos  =  str.lastIndexOf('.',  -1);  [BUGGY]    try  {  return  createBigDecimal(numeric);  }  catch  (NumberFormatException  e)  {  //  NOPMD  }  default  :  throw  new  NumberFormatException(str  +     "  is  not  a  valid  number.   ");  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  	projects/Lang7/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	541	541	1	replace	int  decPos  =  str.lastIndexOf('.',  -1);	  int    decPos    =    str.lastIndexOf('.');    	non-compiled	[CE]  'catch'  without  'try'	12	None	replace
39	[BUG]  [BUGGY]  int  decPos  =  str.lastIndexOf('.',  0);  [CE]  illegal  start  of  expression  [FE]          AssertionError    [CONTEXT]      case  'd'  :  case  'D'  :  try  {  Double  d  =  NumberUtils.createDouble(numeric);  if  (!(d.isInfinite()  ||  (d.floatValue()  ==  0.0D  &&  !allZeros)))  {  return  d;  }  }  catch  (NumberFormatException  nfe)  {  //  NOPMD      [BUGGY]  int  decPos  =  str.lastIndexOf('.',  0);  [BUGGY]    try  {  return  createBigDecimal(numeric);  }  catch  (NumberFormatException  e)  {  //  NOPMD  }  default  :  throw  new  NumberFormatException(str  +     "  is  not  a  valid  number.   ");  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  	projects/Lang7/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	541	541	1	replace	int  decPos  =  str.lastIndexOf('.',  0);	  int    decPos    =    str.lastIndexOf('.');    	non-compiled	[CE]  illegal  start  of  expression	12	None	replace
40	[BUG]  [BUGGY]  int  decPos  =  str.lastIndexOf('.',  1);  [CE]  orphaned  case  [FE]            AssertionError    [CONTEXT]      case  'd'  :  case  'D'  :  try  {  Double  d  =  NumberUtils.createDouble(numeric);  if  (!(d.isInfinite()  ||  (d.floatValue()  ==  0.0D  &&  !allZeros)))  {  return  d;  }  }  catch  (NumberFormatException  nfe)  {  //  NOPMD      [BUGGY]  int  decPos  =  str.lastIndexOf('.',  1);  [BUGGY]    try  {  return  createBigDecimal(numeric);  }  catch  (NumberFormatException  e)  {  //  NOPMD  }  default  :  throw  new  NumberFormatException(str  +     "  is  not  a  valid  number.   ");  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  	projects/Lang7/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	541	541	1	replace	int  decPos  =  str.lastIndexOf('.',  1);	  int    decPos    =    str.lastIndexOf('.');    	non-compiled	[CE]  orphaned  case	12	None	replace
41	[BUG]  [BUGGY]  return  createLong(numeric);  [CE]  orphaned  case  [FE]        AssertionError    [CONTEXT]      case  'd'  :  case  'D'  :  try  {  Double  d  =  NumberUtils.createDouble(numeric);  if  (!(d.isInfinite()  ||  (d.floatValue()  ==  0.0D  &&  !allZeros)))  {  return  d;  }  }  catch  (NumberFormatException  nfe)  {  //  NOPMD      [BUGGY]  return  createLong(numeric);  [BUGGY]    try  {  return  createBigDecimal(numeric);  }  catch  (NumberFormatException  e)  {  //  NOPMD  }  default  :  throw  new  NumberFormatException(str  +     "  is  not  a  valid  number.   ");  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  	projects/Lang7/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	541	541	1	replace	return  createLong(numeric);	  return    createBigDecimal(numeric);    	non-compiled	[CE]  orphaned  case	7	None	replace
42	[BUG]  [BUGGY]  return  createNumber(numeric);  [CE]  orphaned  case  [FE]          AssertionError    [CONTEXT]      case  'd'  :  case  'D'  :  try  {  Double  d  =  NumberUtils.createDouble(numeric);  if  (!(d.isInfinite()  ||  (d.floatValue()  ==  0.0D  &&  !allZeros)))  {  return  d;  }  }  catch  (NumberFormatException  nfe)  {  //  NOPMD      [BUGGY]  return  createNumber(numeric);  [BUGGY]    try  {  return  createBigDecimal(numeric);  }  catch  (NumberFormatException  e)  {  //  NOPMD  }  default  :  throw  new  NumberFormatException(str  +     "  is  not  a  valid  number.   ");  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  	projects/Lang7/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	541	541	1	replace	return  createNumber(numeric);	  return    createBigDecimal(numeric);    	non-compiled	[CE]  orphaned  case	7	None	replace
43	[BUG]  [BUGGY]  return  createInteger(numeric);  [CE]  orphaned  case  [FE]            AssertionError    [CONTEXT]      case  'd'  :  case  'D'  :  try  {  Double  d  =  NumberUtils.createDouble(numeric);  if  (!(d.isInfinite()  ||  (d.floatValue()  ==  0.0D  &&  !allZeros)))  {  return  d;  }  }  catch  (NumberFormatException  nfe)  {  //  NOPMD      [BUGGY]  return  createInteger(numeric);  [BUGGY]    try  {  return  createBigDecimal(numeric);  }  catch  (NumberFormatException  e)  {  //  NOPMD  }  default  :  throw  new  NumberFormatException(str  +     "  is  not  a  valid  number.   ");  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  	projects/Lang7/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	541	541	1	replace	return  createInteger(numeric);	  return    createBigDecimal(numeric);    	non-compiled	[CE]  orphaned  case	7	None	replace
44	[BUG]  [BUGGY]  String  dec  =  str.substring(decPos  -  1);  [CE]  orphaned  case  [FE]        AssertionError    [CONTEXT]      case  'd'  :  case  'D'  :  try  {  Double  d  =  NumberUtils.createDouble(numeric);  if  (!(d.isInfinite()  ||  (d.floatValue()  ==  0.0D  &&  !allZeros)))  {  return  d;  }  }  catch  (NumberFormatException  nfe)  {  //  NOPMD      [BUGGY]  String  dec  =  str.substring(decPos  -  1);  [BUGGY]    }  try  {  return  createBigDecimal(numeric);  }  catch  (NumberFormatException  e)  {  //  NOPMD  }  default  :  throw  new  NumberFormatException(str  +     "  is  not  a  valid  number.   ");  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  	projects/Lang7/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	541	541	1	replace	String  dec  =  str.substring(decPos  -  1);	      String    dec    =    str.substring(numeric.length()    -    1);    	non-compiled	[CE]  orphaned  case	5	None	replace
45	[BUG]  [BUGGY]  e.printStackTrace(System.out);  [CE]  orphaned  case  [FE]        AssertionError    [CONTEXT]      case  'd'  :  case  'D'  :  try  {  Double  d  =  NumberUtils.createDouble(numeric);  if  (!(d.isInfinite()  ||  (d.floatValue()  ==  0.0D  &&  !allZeros)))  {  return  d;  }  }  catch  (NumberFormatException  nfe)  {  //  NOPMD      [BUGGY]  e.printStackTrace(System.out);  [BUGGY]    }  try  {  return  createBigDecimal(numeric);  }  catch  (NumberFormatException  e)  {  //  NOPMD  }  default  :  throw  new  NumberFormatException(str  +     "  is  not  a  valid  number.   ");  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  	projects/Lang7/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	541	541	1	replace	e.printStackTrace(System.out);	      e.printStackTrace();    	non-compiled	[CE]  orphaned  case	9	None	replace
46	[BUG]  [BUGGY]  NumberUtils.copyInteger(numeric,  str);  [CE]  orphaned  case  [FE]            AssertionError    [CONTEXT]      case  'd'  :  case  'D'  :  try  {  Double  d  =  NumberUtils.createDouble(numeric);  if  (!(d.isInfinite()  ||  (d.floatValue()  ==  0.0D  &&  !allZeros)))  {  return  d;  }  }  catch  (NumberFormatException  nfe)  {  //  NOPMD      [BUGGY]  NumberUtils.copyInteger(numeric,  str);  [BUGGY]    }  try  {  return  createBigDecimal(numeric);  }  catch  (NumberFormatException  e)  {  //  NOPMD  }  default  :  throw  new  NumberFormatException(str  +     "  is  not  a  valid  number.   ");  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  	projects/Lang7/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	541	541	1	replace	NumberUtils.copyInteger(numeric,  str);	      NumberUtils.copyNumber(numeric,    str);    	non-compiled	[CE]  orphaned  case	11	None	replace
47	[BUG]  [BUGGY]  String  dec  =  str.substring(0,  str.length());  return  createBigDecimal(numeric);  [CE]  orphaned  case  [FE]            AssertionError    [CONTEXT]      case  'd'  :  case  'D'  :  try  {  Double  d  =  NumberUtils.createDouble(numeric);  if  (!(d.isInfinite()  ||  (d.floatValue()  ==  0.0D  &&  !allZeros)))  {  return  d;  }  }  catch  (NumberFormatException  nfe)  {  //  NOPMD      [BUGGY]  String  dec  =  str.substring(0,  str.length());  return  createBigDecimal(numeric);  [BUGGY]    }  try  {  return  createBigDecimal(numeric);  }  catch  (NumberFormatException  e)  {  //  NOPMD  }  default  :  throw  new  NumberFormatException(str  +     "  is  not  a  valid  number.   ");  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  	projects/Lang7/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	541	541	1	replace	String  dec  =  str.substring(0,  str.length());  return  createBigDecimal(numeric);	      String    dec    =    str.substring(0,    str.length()    -    1);    return    createLong(dec);    	non-compiled	[CE]  orphaned  case	17	None	replace
48	[BUG]  [BUGGY]  int  decPos  =  str.indexOf('.',  -1);  [CE]  not  a  statement  [FE]          AssertionError    [CONTEXT]      case  'd'  :  case  'D'  :  try  {  Double  d  =  NumberUtils.createDouble(numeric);  if  (!(d.isInfinite()  ||  (d.floatValue()  ==  0.0D  &&  !allZeros)))  {  return  d;  }  }  catch  (NumberFormatException  nfe)  {  //  NOPMD      [BUGGY]  int  decPos  =  str.indexOf('.',  -1);  [BUGGY]    try  {  return  createBigDecimal(numeric);  }  catch  (NumberFormatException  e)  {  //  NOPMD  }  default  :  throw  new  NumberFormatException(str  +     "  is  not  a  valid  number.   ");  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  	projects/Lang7/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	541	541	1	replace	int  decPos  =  str.indexOf('.',  -1);	  int    decPos    =    str.indexOf('.');    	non-compiled	[CE]  not  a  statement	13	None	replace
49	[BUG]  [BUGGY]  String  dec  =  str.substring(0,  str.length()  +  1);  [CE]  not  a  statement  [FE]          AssertionError    [CONTEXT]      case  'd'  :  case  'D'  :  try  {  Double  d  =  NumberUtils.createDouble(numeric);  if  (!(d.isInfinite()  ||  (d.floatValue()  ==  0.0D  &&  !allZeros)))  {  return  d;  }  }  catch  (NumberFormatException  nfe)  {  //  NOPMD      [BUGGY]  String  dec  =  str.substring(0,  str.length()  +  1);  [BUGGY]    try  {  return  createBigDecimal(numeric);  }  catch  (NumberFormatException  e)  {  //  NOPMD  }  default  :  throw  new  NumberFormatException(str  +     "  is  not  a  valid  number.   ");  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  	projects/Lang7/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	541	541	1	replace	String  dec  =  str.substring(0,  str.length()  +  1);	  String    dec    =    str.substring(0,    str.length()    -    1);    	non-compiled	[CE]  not  a  statement	2	None	replace
50	[BUG]  [BUGGY]  return  createBigDecimal(numeric.doubleValue());  [CE]  not  a  statement  [FE]        AssertionError    [CONTEXT]      case  'd'  :  case  'D'  :  try  {  Double  d  =  NumberUtils.createDouble(numeric);  if  (!(d.isInfinite()  ||  (d.floatValue()  ==  0.0D  &&  !allZeros)))  {  return  d;  }  }  catch  (NumberFormatException  nfe)  {  //  NOPMD      [BUGGY]  return  createBigDecimal(numeric.doubleValue());  [BUGGY]    try  {  return  createBigDecimal(numeric);  }  catch  (NumberFormatException  e)  {  //  NOPMD  }  default  :  throw  new  NumberFormatException(str  +     "  is  not  a  valid  number.   ");  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  	projects/Lang7/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	541	541	1	replace	return  createBigDecimal(numeric.doubleValue());	  return    createBigDecimal(numeric);    	non-compiled	[CE]  not  a  statement	7	None	replace
51	[BUG]  [BUGGY]  NumberUtils.copyPos(numeric,  str);  [CE]  not  a  statement  [FE]            AssertionError    [CONTEXT]      case  'd'  :  case  'D'  :  try  {  Double  d  =  NumberUtils.createDouble(numeric);  if  (!(d.isInfinite()  ||  (d.floatValue()  ==  0.0D  &&  !allZeros)))  {  return  d;  }  }  catch  (NumberFormatException  nfe)  {  //  NOPMD      [BUGGY]  NumberUtils.copyPos(numeric,  str);  [BUGGY]    }  try  {  return  createBigDecimal(numeric);  }  catch  (NumberFormatException  e)  {  //  NOPMD  }  default  :  throw  new  NumberFormatException(str  +     "  is  not  a  valid  number.   ");  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  	projects/Lang7/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	541	541	1	replace	NumberUtils.copyPos(numeric,  str);	      NumberUtils.copyNumber(numeric,    str);    	non-compiled	[CE]  not  a  statement	11	None	replace
52	[BUG]  [BUGGY]  e.printStackTrace(numeric);  [CE]  not  a  statement  [FE]        AssertionError    [CONTEXT]      case  'd'  :  case  'D'  :  try  {  Double  d  =  NumberUtils.createDouble(numeric);  if  (!(d.isInfinite()  ||  (d.floatValue()  ==  0.0D  &&  !allZeros)))  {  return  d;  }  }  catch  (NumberFormatException  nfe)  {  //  NOPMD      [BUGGY]  e.printStackTrace(numeric);  [BUGGY]    }  try  {  return  createBigDecimal(numeric);  }  catch  (NumberFormatException  e)  {  //  NOPMD  }  default  :  throw  new  NumberFormatException(str  +     "  is  not  a  valid  number.   ");  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  	projects/Lang7/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	541	541	1	replace	e.printStackTrace(numeric);	      e.printStackTrace();    	non-compiled	[CE]  not  a  statement	9	None	replace
53	[BUG]  [BUGGY]  String  str  =  str.substring(NumberUtils.doubleValue(numeric.length()));  [CE]  not  a  statement  [FE]          AssertionError    [CONTEXT]      case  'd'  :  case  'D'  :  try  {  Double  d  =  NumberUtils.createDouble(numeric);  if  (!(d.isInfinite()  ||  (d.floatValue()  ==  0.0D  &&  !allZeros)))  {  return  d;  }  }  catch  (NumberFormatException  nfe)  {  //  NOPMD      [BUGGY]  String  str  =  str.substring(NumberUtils.doubleValue(numeric.length()));  [BUGGY]    try  {  return  createBigDecimal(numeric);  }  catch  (NumberFormatException  e)  {  //  NOPMD  }  default  :  throw  new  NumberFormatException(str  +     "  is  not  a  valid  number.   ");  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  	projects/Lang7/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	541	541	1	replace	String  str  =  str.substring(NumberUtils.doubleValue(numeric.length()));	  String    str    =    str.substring(numeric.length()    -    1);    	non-compiled	[CE]  not  a  statement	8	None	replace
54	[BUG]  [BUGGY]  return  createBoolean(numeric);  [CE]  not  a  statement  [FE]        AssertionError    [CONTEXT]      case  'd'  :  case  'D'  :  try  {  Double  d  =  NumberUtils.createDouble(numeric);  if  (!(d.isInfinite()  ||  (d.floatValue()  ==  0.0D  &&  !allZeros)))  {  return  d;  }  }  catch  (NumberFormatException  nfe)  {  //  NOPMD      [BUGGY]  return  createBoolean(numeric);  [BUGGY]    try  {  return  createBigDecimal(numeric);  }  catch  (NumberFormatException  e)  {  //  NOPMD  }  default  :  throw  new  NumberFormatException(str  +     "  is  not  a  valid  number.   ");  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  	projects/Lang7/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	541	541	1	replace	return  createBoolean(numeric);	  return    createBigDecimal(numeric);    	non-compiled	[CE]  not  a  statement	7	None	replace
55	[BUG]  [BUGGY]  int  decPos  =  str.indexOf('.',  dec);  [CE]  not  a  statement  [FE]          AssertionError    [CONTEXT]      case  'd'  :  case  'D'  :  try  {  Double  d  =  NumberUtils.createDouble(numeric);  if  (!(d.isInfinite()  ||  (d.floatValue()  ==  0.0D  &&  !allZeros)))  {  return  d;  }  }  catch  (NumberFormatException  nfe)  {  //  NOPMD      [BUGGY]  int  decPos  =  str.indexOf('.',  dec);  [BUGGY]    try  {  return  createBigDecimal(numeric);  }  catch  (NumberFormatException  e)  {  //  NOPMD  }  default  :  throw  new  NumberFormatException(str  +     "  is  not  a  valid  number.   ");  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  	projects/Lang7/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	541	541	1	replace	int  decPos  =  str.indexOf('.',  dec);	  int    decPos    =    str.indexOf('.');    	non-compiled	[CE]  not  a  statement	13	None	replace
56	[BUG]  [BUGGY]  int  decPos  =  str.indexOf('.',  DEC_PREFIX);  [CE]  not  a  statement  [FE]            AssertionError    [CONTEXT]      case  'd'  :  case  'D'  :  try  {  Double  d  =  NumberUtils.createDouble(numeric);  if  (!(d.isInfinite()  ||  (d.floatValue()  ==  0.0D  &&  !allZeros)))  {  return  d;  }  }  catch  (NumberFormatException  nfe)  {  //  NOPMD      [BUGGY]  int  decPos  =  str.indexOf('.',  DEC_PREFIX);  [BUGGY]    try  {  return  createBigDecimal(numeric);  }  catch  (NumberFormatException  e)  {  //  NOPMD  }  default  :  throw  new  NumberFormatException(str  +     "  is  not  a  valid  number.   ");  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  	projects/Lang7/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	541	541	1	replace	int  decPos  =  str.indexOf('.',  DEC_PREFIX);	  int    decPos    =    str.indexOf('.');    	non-compiled	[CE]  not  a  statement	13	None	replace
57	[BUG]  [BUGGY]  String  dec  =  str.substring(0,  str.length()).trim();  [CE]  not  a  statement  [FE]          AssertionError    [CONTEXT]      case  'd'  :  case  'D'  :  try  {  Double  d  =  NumberUtils.createDouble(numeric);  if  (!(d.isInfinite()  ||  (d.floatValue()  ==  0.0D  &&  !allZeros)))  {  return  d;  }  }  catch  (NumberFormatException  nfe)  {  //  NOPMD      [BUGGY]  String  dec  =  str.substring(0,  str.length()).trim();  [BUGGY]    try  {  return  createBigDecimal(numeric);  }  catch  (NumberFormatException  e)  {  //  NOPMD  }  default  :  throw  new  NumberFormatException(str  +     "  is  not  a  valid  number.   ");  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  	projects/Lang7/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	541	541	1	replace	String  dec  =  str.substring(0,  str.length()).trim();	  String    dec    =    str.substring(0,    str.length()    -    1);    	non-compiled	[CE]  not  a  statement	2	None	replace
58	[BUG]  [BUGGY]  int  decPos  =  str.indexOf('.')/  1;  [CE]  not  a  statement  [FE]            AssertionError    [CONTEXT]      case  'd'  :  case  'D'  :  try  {  Double  d  =  NumberUtils.createDouble(numeric);  if  (!(d.isInfinite()  ||  (d.floatValue()  ==  0.0D  &&  !allZeros)))  {  return  d;  }  }  catch  (NumberFormatException  nfe)  {  //  NOPMD      [BUGGY]  int  decPos  =  str.indexOf('.')/  1;  [BUGGY]    try  {  return  createBigDecimal(numeric);  }  catch  (NumberFormatException  e)  {  //  NOPMD  }  default  :  throw  new  NumberFormatException(str  +     "  is  not  a  valid  number.   ");  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  	projects/Lang7/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	541	541	1	replace	int  decPos  =  str.indexOf('.')/  1;	  int    decPos    =    str.indexOf('.')+    1;    	non-compiled	[CE]  not  a  statement	14	None	replace
59	[BUG]  [BUGGY]  int  decPos  =  str.lastIndexOf('.',  dec);  [CE]  not  a  statement  [FE]        AssertionError    [CONTEXT]      case  'd'  :  case  'D'  :  try  {  Double  d  =  NumberUtils.createDouble(numeric);  if  (!(d.isInfinite()  ||  (d.floatValue()  ==  0.0D  &&  !allZeros)))  {  return  d;  }  }  catch  (NumberFormatException  nfe)  {  //  NOPMD      [BUGGY]  int  decPos  =  str.lastIndexOf('.',  dec);  [BUGGY]    try  {  return  createBigDecimal(numeric);  }  catch  (NumberFormatException  e)  {  //  NOPMD  }  default  :  throw  new  NumberFormatException(str  +     "  is  not  a  valid  number.   ");  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  	projects/Lang7/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	541	541	1	replace	int  decPos  =  str.lastIndexOf('.',  dec);	  int    decPos    =    str.lastIndexOf('.');    	non-compiled	[CE]  not  a  statement	12	None	replace
60	[BUG]  [BUGGY]  int  decPos  =  str.lastIndexOf('.',  DEC_PREFIX);  [CE]  orphaned  case  [FE]          AssertionError    [CONTEXT]      case  'd'  :  case  'D'  :  try  {  Double  d  =  NumberUtils.createDouble(numeric);  if  (!(d.isInfinite()  ||  (d.floatValue()  ==  0.0D  &&  !allZeros)))  {  return  d;  }  }  catch  (NumberFormatException  nfe)  {  //  NOPMD      [BUGGY]  int  decPos  =  str.lastIndexOf('.',  DEC_PREFIX);  [BUGGY]    try  {  return  createBigDecimal(numeric);  }  catch  (NumberFormatException  e)  {  //  NOPMD  }  default  :  throw  new  NumberFormatException(str  +     "  is  not  a  valid  number.   ");  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  	projects/Lang7/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	541	541	1	replace	int  decPos  =  str.lastIndexOf('.',  DEC_PREFIX);	  int    decPos    =    str.lastIndexOf('.');    	non-compiled	[CE]  orphaned  case	12	None	replace
