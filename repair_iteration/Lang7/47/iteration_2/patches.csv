bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  Integer  str  =  createInteger(str.substring(0,  str.length()));  [CE]  unclosed  character  literal  [FE]                    AssertionError      [CONTEXT]      public  static  Number  createNumber(String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {  return  null;  }  if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(     "A  blank  string  is  not  a  valid  number     ");  }  if  (str.startsWith(     "--     "))  {  return  null;  }      [BUGGY]  Integer  str  =  createInteger(str.substring(0,  str.length()));  [BUGGY]      if  (str.startsWith(     "0x     ")  ||  str.startsWith(     "-0x     ")  ||  str.startsWith(     "0X     ")  ||  str.startsWith(     "-0X     "))  {  int  hexDigits  =  str.length()  -  2;  //  drop  0x  if  (str.startsWith(     "-     "))  {  //  drop  -  hexDigits--;  }  if  (hexDigits  >  8)  {  //  too  many  for  an  int  return  createLong(str);  }  return  createInteger(str);  }  char  lastChar  =  str.charAt(str.length()  -  1);  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  	projects/Lang7/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.5773502691896258	455	455	1	replace	Integer  str  =  createInteger(str.substring(0,  str.length()));	  Integer    str    =    createInteger(str.substring(0,    str.length()    -    1));    	non-compiled	[CE]  unclosed  character  literal	35	None	replace
2	[BUG]  [BUGGY]  Integer  str  =  createInteger(str.substring(0,  str.length()  +  1));  [CE]  unclosed  character  literal  [FE]                      AssertionError      [CONTEXT]      public  static  Number  createNumber(String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {  return  null;  }  if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(     "A  blank  string  is  not  a  valid  number     ");  }  if  (str.startsWith(     "--     "))  {  return  null;  }      [BUGGY]  Integer  str  =  createInteger(str.substring(0,  str.length()  +  1));  [BUGGY]      if  (str.startsWith(     "0x     ")  ||  str.startsWith(     "-0x     ")  ||  str.startsWith(     "0X     ")  ||  str.startsWith(     "-0X     "))  {  int  hexDigits  =  str.length()  -  2;  //  drop  0x  if  (str.startsWith(     "-     "))  {  //  drop  -  hexDigits--;  }  if  (hexDigits  >  8)  {  //  too  many  for  an  int  return  createLong(str);  }  return  createInteger(str);  }  char  lastChar  =  str.charAt(str.length()  -  1);  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  	projects/Lang7/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.5773502691896258	455	455	1	replace	Integer  str  =  createInteger(str.substring(0,  str.length()  +  1));	  Integer    str    =    createInteger(str.substring(0,    str.length()    -    1));    	non-compiled	[CE]  unclosed  character  literal	35	None	replace
3	[BUG]  [BUGGY]  int  hexDigits  =  str.lastIndexOf('-',  4);  [CE]  unclosed  character  literal  [FE]            AssertionError      [CONTEXT]      public  static  Number  createNumber(String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {  return  null;  }  if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(     "A  blank  string  is  not  a  valid  number     ");  }  if  (str.startsWith(     "--     "))  {  return  null;  }      [BUGGY]  int  hexDigits  =  str.lastIndexOf('-',  4);  [BUGGY]      if  (str.startsWith(     "0x     ")  ||  str.startsWith(     "-0x     ")  ||  str.startsWith(     "0X     ")  ||  str.startsWith(     "-0X     "))  {  int  hexDigits  =  str.length()  -  2;  //  drop  0x  if  (str.startsWith(     "-     "))  {  //  drop  -  hexDigits--;  }  if  (hexDigits  >  8)  {  //  too  many  for  an  int  return  createLong(str);  }  return  createInteger(str);  }  char  lastChar  =  str.charAt(str.length()  -  1);  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  	projects/Lang7/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.5773502691896258	455	455	1	replace	int  hexDigits  =  str.lastIndexOf('-',  4);	  int    hexDigits    =    str.lastIndexOf('-');    	non-compiled	[CE]  unclosed  character  literal	9	None	replace
4	[BUG]  [BUGGY]  int  hexDigits  =  str.lastIndexOf('-',  2);  [CE]  unclosed  character  literal  [FE]              AssertionError      [CONTEXT]      public  static  Number  createNumber(String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {  return  null;  }  if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(     "A  blank  string  is  not  a  valid  number     ");  }  if  (str.startsWith(     "--     "))  {  return  null;  }      [BUGGY]  int  hexDigits  =  str.lastIndexOf('-',  2);  [BUGGY]      if  (str.startsWith(     "0x     ")  ||  str.startsWith(     "-0x     ")  ||  str.startsWith(     "0X     ")  ||  str.startsWith(     "-0X     "))  {  int  hexDigits  =  str.length()  -  2;  //  drop  0x  if  (str.startsWith(     "-     "))  {  //  drop  -  hexDigits--;  }  if  (hexDigits  >  8)  {  //  too  many  for  an  int  return  createLong(str);  }  return  createInteger(str);  }  char  lastChar  =  str.charAt(str.length()  -  1);  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  	projects/Lang7/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.5773502691896258	455	455	1	replace	int  hexDigits  =  str.lastIndexOf('-',  2);	  int    hexDigits    =    str.lastIndexOf('-');    	non-compiled	[CE]  unclosed  character  literal	9	None	replace
5	[BUG]  [BUGGY]  int  hexDigits  =  str.lastIndexOf('-',  1);  [CE]  unclosed  character  literal  [FE]                AssertionError      [CONTEXT]      public  static  Number  createNumber(String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {  return  null;  }  if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(     "A  blank  string  is  not  a  valid  number     ");  }  if  (str.startsWith(     "--     "))  {  return  null;  }      [BUGGY]  int  hexDigits  =  str.lastIndexOf('-',  1);  [BUGGY]      if  (str.startsWith(     "0x     ")  ||  str.startsWith(     "-0x     ")  ||  str.startsWith(     "0X     ")  ||  str.startsWith(     "-0X     "))  {  int  hexDigits  =  str.length()  -  2;  //  drop  0x  if  (str.startsWith(     "-     "))  {  //  drop  -  hexDigits--;  }  if  (hexDigits  >  8)  {  //  too  many  for  an  int  return  createLong(str);  }  return  createInteger(str);  }  char  lastChar  =  str.charAt(str.length()  -  1);  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  	projects/Lang7/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.5773502691896258	455	455	1	replace	int  hexDigits  =  str.lastIndexOf('-',  1);	  int    hexDigits    =    str.lastIndexOf('-');    	non-compiled	[CE]  unclosed  character  literal	9	None	replace
6	[BUG]  [BUGGY]  Integer  hexDigits  =  createInteger(str.length()  -  2);  [CE]  unclosed  character  literal  [FE]            AssertionError      [CONTEXT]      public  static  Number  createNumber(String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {  return  null;  }  if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(     "A  blank  string  is  not  a  valid  number     ");  }  if  (str.startsWith(     "--     "))  {  return  null;  }      [BUGGY]  Integer  hexDigits  =  createInteger(str.length()  -  2);  [BUGGY]      if  (str.startsWith(     "0x     ")  ||  str.startsWith(     "-0x     ")  ||  str.startsWith(     "0X     ")  ||  str.startsWith(     "-0X     "))  {  int  hexDigits  =  str.length()  -  2;  //  drop  0x  if  (str.startsWith(     "-     "))  {  //  drop  -  hexDigits--;  }  if  (hexDigits  >  8)  {  //  too  many  for  an  int  return  createLong(str);  }  return  createInteger(str);  }  char  lastChar  =  str.charAt(str.length()  -  1);  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  	projects/Lang7/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.5773502691896258	455	455	1	replace	Integer  hexDigits  =  createInteger(str.length()  -  2);	  Integer    hexDigits    =    createInteger(str.length());    	non-compiled	[CE]  unclosed  character  literal	22	None	replace
7	[BUG]  [BUGGY]  Integer  hexDigits  =  createInteger(str.length()  -  1);  [CE]  unclosed  character  literal  [FE]              AssertionError      [CONTEXT]      public  static  Number  createNumber(String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {  return  null;  }  if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(     "A  blank  string  is  not  a  valid  number     ");  }  if  (str.startsWith(     "--     "))  {  return  null;  }      [BUGGY]  Integer  hexDigits  =  createInteger(str.length()  -  1);  [BUGGY]      if  (str.startsWith(     "0x     ")  ||  str.startsWith(     "-0x     ")  ||  str.startsWith(     "0X     ")  ||  str.startsWith(     "-0X     "))  {  int  hexDigits  =  str.length()  -  2;  //  drop  0x  if  (str.startsWith(     "-     "))  {  //  drop  -  hexDigits--;  }  if  (hexDigits  >  8)  {  //  too  many  for  an  int  return  createLong(str);  }  return  createInteger(str);  }  char  lastChar  =  str.charAt(str.length()  -  1);  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  	projects/Lang7/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.5773502691896258	455	455	1	replace	Integer  hexDigits  =  createInteger(str.length()  -  1);	  Integer    hexDigits    =    createInteger(str.length());    	non-compiled	[CE]  unclosed  character  literal	22	None	replace
8	[BUG]  [BUGGY]  Integer  hexDigits  =  createInteger(str.length()  +  2);  [CE]  unclosed  character  literal  [FE]                AssertionError      [CONTEXT]      public  static  Number  createNumber(String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {  return  null;  }  if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(     "A  blank  string  is  not  a  valid  number     ");  }  if  (str.startsWith(     "--     "))  {  return  null;  }      [BUGGY]  Integer  hexDigits  =  createInteger(str.length()  +  2);  [BUGGY]      if  (str.startsWith(     "0x     ")  ||  str.startsWith(     "-0x     ")  ||  str.startsWith(     "0X     ")  ||  str.startsWith(     "-0X     "))  {  int  hexDigits  =  str.length()  -  2;  //  drop  0x  if  (str.startsWith(     "-     "))  {  //  drop  -  hexDigits--;  }  if  (hexDigits  >  8)  {  //  too  many  for  an  int  return  createLong(str);  }  return  createInteger(str);  }  char  lastChar  =  str.charAt(str.length()  -  1);  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  	projects/Lang7/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.5773502691896258	455	455	1	replace	Integer  hexDigits  =  createInteger(str.length()  +  2);	  Integer    hexDigits    =    createInteger(str.length());    	non-compiled	[CE]  unclosed  character  literal	22	None	replace
9	[BUG]  [BUGGY]  Integer  hexDigits  =  createInteger(str.length()  +  1);  [CE]  unclosed  character  literal  [FE]                  AssertionError      [CONTEXT]      public  static  Number  createNumber(String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {  return  null;  }  if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(     "A  blank  string  is  not  a  valid  number     ");  }  if  (str.startsWith(     "--     "))  {  return  null;  }      [BUGGY]  Integer  hexDigits  =  createInteger(str.length()  +  1);  [BUGGY]      if  (str.startsWith(     "0x     ")  ||  str.startsWith(     "-0x     ")  ||  str.startsWith(     "0X     ")  ||  str.startsWith(     "-0X     "))  {  int  hexDigits  =  str.length()  -  2;  //  drop  0x  if  (str.startsWith(     "-     "))  {  //  drop  -  hexDigits--;  }  if  (hexDigits  >  8)  {  //  too  many  for  an  int  return  createLong(str);  }  return  createInteger(str);  }  char  lastChar  =  str.charAt(str.length()  -  1);  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  	projects/Lang7/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.5773502691896258	455	455	1	replace	Integer  hexDigits  =  createInteger(str.length()  +  1);	  Integer    hexDigits    =    createInteger(str.length());    	non-compiled	[CE]  unclosed  character  literal	22	None	replace
10	[BUG]  [BUGGY]  String  str  =  str.substring(0,  str.length()  -  2;  [CE]  unclosed  character  literal  [FE]                  AssertionError      [CONTEXT]      public  static  Number  createNumber(String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {  return  null;  }  if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(     "A  blank  string  is  not  a  valid  number     ");  }  if  (str.startsWith(     "--     "))  {  return  null;  }      [BUGGY]  String  str  =  str.substring(0,  str.length()  -  2;  [BUGGY]      if  (str.startsWith(     "0x     ")  ||  str.startsWith(     "-0x     ")  ||  str.startsWith(     "0X     ")  ||  str.startsWith(     "-0X     "))  {  int  hexDigits  =  str.length()  -  2;  //  drop  0x  if  (str.startsWith(     "-     "))  {  //  drop  -  hexDigits--;  }  if  (hexDigits  >  8)  {  //  too  many  for  an  int  return  createLong(str);  }  return  createInteger(str);  }  char  lastChar  =  str.charAt(str.length()  -  1);  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  	projects/Lang7/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.5773502691896258	455	455	1	replace	String  str  =  str.substring(0,  str.length()  -  2;	  String    str    =    str.substring(0,    str.length();    	non-compiled	[CE]  unclosed  character  literal	5	None	replace
11	[BUG]  [BUGGY]  Integer  str  =  createLong(str);  [CE]  unclosed  character  literal  [FE]                  AssertionError      [CONTEXT]      public  static  Number  createNumber(String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {  return  null;  }  if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(     "A  blank  string  is  not  a  valid  number     ");  }  if  (str.startsWith(     "--     "))  {  return  null;  }      [BUGGY]  Integer  str  =  createLong(str);  [BUGGY]      if  (str.startsWith(     "0x     ")  ||  str.startsWith(     "-0x     ")  ||  str.startsWith(     "0X     ")  ||  str.startsWith(     "-0X     "))  {  int  hexDigits  =  str.length()  -  2;  //  drop  0x  if  (str.startsWith(     "-     "))  {  //  drop  -  hexDigits--;  }  if  (hexDigits  >  8)  {  //  too  many  for  an  int  return  createLong(str);  }  return  createInteger(str);  }  char  lastChar  =  str.charAt(str.length()  -  1);  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  	projects/Lang7/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.5773502691896258	455	455	1	replace	Integer  str  =  createLong(str);	  Integer    str    =    createInteger(0);    	non-compiled	[CE]  unclosed  character  literal	21	None	replace
12	[BUG]  [BUGGY]  Integer  str  =  createInteger(1);  [CE]  unclosed  character  literal  [FE]                    AssertionError      [CONTEXT]      public  static  Number  createNumber(String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {  return  null;  }  if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(     "A  blank  string  is  not  a  valid  number     ");  }  if  (str.startsWith(     "--     "))  {  return  null;  }      [BUGGY]  Integer  str  =  createInteger(1);  [BUGGY]      if  (str.startsWith(     "0x     ")  ||  str.startsWith(     "-0x     ")  ||  str.startsWith(     "0X     ")  ||  str.startsWith(     "-0X     "))  {  int  hexDigits  =  str.length()  -  2;  //  drop  0x  if  (str.startsWith(     "-     "))  {  //  drop  -  hexDigits--;  }  if  (hexDigits  >  8)  {  //  too  many  for  an  int  return  createLong(str);  }  return  createInteger(str);  }  char  lastChar  =  str.charAt(str.length()  -  1);  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  	projects/Lang7/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.5773502691896258	455	455	1	replace	Integer  str  =  createInteger(1);	  Integer    str    =    createInteger(0);    	non-compiled	[CE]  unclosed  character  literal	21	None	replace
13	[BUG]  [BUGGY]  if(str.startsWith( "0x   ")||  str.startsWith( "0x   ")||  str.startsWith( "-1x   ")||  str.startsWith( "-1x   "))  {  [CE]  unclosed  character  literal  [FE]                AssertionError      [CONTEXT]      public  static  Number  createNumber(String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {  return  null;  }  if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(     "A  blank  string  is  not  a  valid  number     ");  }  if  (str.startsWith(     "--     "))  {  return  null;  }      [BUGGY]  if(str.startsWith( "0x   ")||  str.startsWith( "0x   ")||  str.startsWith( "-1x   ")||  str.startsWith( "-1x   "))  {  [BUGGY]      int  hexDigits  =  str.length()  -  2;  //  drop  0x  if  (str.startsWith(     "-     "))  {  //  drop  -  hexDigits--;  }  if  (hexDigits  >  8)  {  //  too  many  for  an  int  return  createLong(str);  }  return  createInteger(str);  }  char  lastChar  =  str.charAt(str.length()  -  1);  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  	projects/Lang7/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.5773502691896258	455	455	1	replace	if(str.startsWith( "0x   ")||  str.startsWith( "0x   ")||  str.startsWith( "-1x   ")||  str.startsWith( "-1x   "))  {	  if(str.startsWith(   "0x       ")||    str.startsWith(   "0x       ")||    str.startsWith(   "-0x       ")||    str.startsWith(   "-0x       "))    {    	non-compiled	[CE]  unclosed  character  literal	13	None	replace
14	[BUG]  [BUGGY]  if(str.startsWith( "0x   ")||  str.startsWith( "0.0x   ")||  str.startsWith( "0.0x   ")||  str.startsWith( "0.0x   "))  {  [CE]  unclosed  character  literal  [FE]            AssertionError      [CONTEXT]      public  static  Number  createNumber(String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {  return  null;  }  if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(     "A  blank  string  is  not  a  valid  number     ");  }  if  (str.startsWith(     "--     "))  {  return  null;  }      [BUGGY]  if(str.startsWith( "0x   ")||  str.startsWith( "0.0x   ")||  str.startsWith( "0.0x   ")||  str.startsWith( "0.0x   "))  {  [BUGGY]      int  hexDigits  =  str.length()  -  2;  //  drop  0x  if  (str.startsWith(     "-     "))  {  //  drop  -  hexDigits--;  }  if  (hexDigits  >  8)  {  //  too  many  for  an  int  return  createLong(str);  }  return  createInteger(str);  }  char  lastChar  =  str.charAt(str.length()  -  1);  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  	projects/Lang7/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.5773502691896258	455	455	1	replace	if(str.startsWith( "0x   ")||  str.startsWith( "0.0x   ")||  str.startsWith( "0.0x   ")||  str.startsWith( "0.0x   "))  {	  if(str.startsWith(   "0x   ")||    str.startsWith(   ".0x   ")||    str.startsWith(   ".0x   ")||    str.startsWith(   ".0x   "))    {    	non-compiled	[CE]  unclosed  character  literal	34	None	replace
15	[BUG]  [BUGGY]  int  hexDigits  =  str.lastIndexOf('.');  [CE]  unclosed  character  literal  [FE]            AssertionError      [CONTEXT]      public  static  Number  createNumber(String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {  return  null;  }  if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(     "A  blank  string  is  not  a  valid  number     ");  }  if  (str.startsWith(     "--     "))  {  return  null;  }      [BUGGY]  int  hexDigits  =  str.lastIndexOf('.');  [BUGGY]      if  (str.startsWith(     "0x     ")  ||  str.startsWith(     "-0x     ")  ||  str.startsWith(     "0X     ")  ||  str.startsWith(     "-0X     "))  {  int  hexDigits  =  str.length()  -  2;  //  drop  0x  if  (str.startsWith(     "-     "))  {  //  drop  -  hexDigits--;  }  if  (hexDigits  >  8)  {  //  too  many  for  an  int  return  createLong(str);  }  return  createInteger(str);  }  char  lastChar  =  str.charAt(str.length()  -  1);  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  	projects/Lang7/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.5773502691896258	455	455	1	replace	int  hexDigits  =  str.lastIndexOf('.');	  int    hexDigits    =    str.lastIndexOf(   ".-   ");    	non-compiled	[CE]  unclosed  character  literal	38	None	replace
16	[BUG]  [BUGGY]  if(str.startsWith( "- ")||  str.startsWith( "- ")||  str.startsWith( "- ")||  str.startsWith( "- ")||  str.startsWith( "- "))  {  [CE]  unclosed  character  literal  [FE]            AssertionError      [CONTEXT]      public  static  Number  createNumber(String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {  return  null;  }  if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(     "A  blank  string  is  not  a  valid  number     ");  }  if  (str.startsWith(     "--     "))  {  return  null;  }      [BUGGY]  if(str.startsWith( "- ")||  str.startsWith( "- ")||  str.startsWith( "- ")||  str.startsWith( "- ")||  str.startsWith( "- "))  {  [BUGGY]      int  hexDigits  =  str.length()  -  2;  //  drop  0x  if  (str.startsWith(     "-     "))  {  //  drop  -  hexDigits--;  }  if  (hexDigits  >  8)  {  //  too  many  for  an  int  return  createLong(str);  }  return  createInteger(str);  }  char  lastChar  =  str.charAt(str.length()  -  1);  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  	projects/Lang7/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.5773502691896258	455	455	1	replace	if(str.startsWith( "- ")||  str.startsWith( "- ")||  str.startsWith( "- ")||  str.startsWith( "- ")||  str.startsWith( "- "))  {	  if(str.startsWith(   ".0x   ")||    str.startsWith(   ".0x   ")||    str.startsWith(   ".0x   ")||    str.startsWith(   ".0x   ")||    str.startsWith(   ".0x   "))    {    	non-compiled	[CE]  unclosed  character  literal	29	None	replace
17	[BUG]  [BUGGY]  if(str.startsWith( "0x   ")||  str.startsWith( "-0x   ")||  str.startsWith( "-0x   ")||  str.startsWith( "-0x   ")||  str.startsWith( "-0x   "))  {  [CE]  unclosed  character  literal  [FE]              AssertionError      [CONTEXT]      public  static  Number  createNumber(String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {  return  null;  }  if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(     "A  blank  string  is  not  a  valid  number     ");  }  if  (str.startsWith(     "--     "))  {  return  null;  }      [BUGGY]  if(str.startsWith( "0x   ")||  str.startsWith( "-0x   ")||  str.startsWith( "-0x   ")||  str.startsWith( "-0x   ")||  str.startsWith( "-0x   "))  {  [BUGGY]      int  hexDigits  =  str.length()  -  2;  //  drop  0x  if  (str.startsWith(     "-     "))  {  //  drop  -  hexDigits--;  }  if  (hexDigits  >  8)  {  //  too  many  for  an  int  return  createLong(str);  }  return  createInteger(str);  }  char  lastChar  =  str.charAt(str.length()  -  1);  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  	projects/Lang7/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.5773502691896258	455	455	1	replace	if(str.startsWith( "0x   ")||  str.startsWith( "-0x   ")||  str.startsWith( "-0x   ")||  str.startsWith( "-0x   ")||  str.startsWith( "-0x   "))  {	  if(str.startsWith(   ".0x   ")||    str.startsWith(   ".0x   ")||    str.startsWith(   ".0x   ")||    str.startsWith(   ".0x   ")||    str.startsWith(   ".0x   "))    {    	non-compiled	[CE]  unclosed  character  literal	29	None	replace
18	[BUG]  [BUGGY]  if(str.startsWith( "0x   ")||  str.startsWith( "-0x   ")||  str.startsWith( "-0x   ")||  str.startsWith( "-0x   ")||  str.startsWith( "-0x   ")  [CE]  unclosed  character  literal  [FE]                AssertionError      [CONTEXT]      public  static  Number  createNumber(String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {  return  null;  }  if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(     "A  blank  string  is  not  a  valid  number     ");  }  if  (str.startsWith(     "--     "))  {  return  null;  }      [BUGGY]  if(str.startsWith( "0x   ")||  str.startsWith( "-0x   ")||  str.startsWith( "-0x   ")||  str.startsWith( "-0x   ")||  str.startsWith( "-0x   ")  [BUGGY]      int  hexDigits  =  str.length()  -  2;  //  drop  0x  if  (str.startsWith(     "-     "))  {  //  drop  -  hexDigits--;  }  if  (hexDigits  >  8)  {  //  too  many  for  an  int  return  createLong(str);  }  return  createInteger(str);  }  char  lastChar  =  str.charAt(str.length()  -  1);  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  	projects/Lang7/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.5773502691896258	455	455	1	replace	if(str.startsWith( "0x   ")||  str.startsWith( "-0x   ")||  str.startsWith( "-0x   ")||  str.startsWith( "-0x   ")||  str.startsWith( "-0x   ")	  if(str.startsWith(   ".0x   ")||    str.startsWith(   ".0x   ")||    str.startsWith(   ".0x   ")||    str.startsWith(   ".0x   ")||    str.startsWith(   ".0x   "))    {    	non-compiled	[CE]  unclosed  character  literal	29	None	replace
19	[BUG]  [BUGGY]  Integer  hexDigits  =  createBigInteger(str.length());  [CE]  unclosed  character  literal  [FE]            AssertionError      [CONTEXT]      public  static  Number  createNumber(String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {  return  null;  }  if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(     "A  blank  string  is  not  a  valid  number     ");  }  if  (str.startsWith(     "--     "))  {  return  null;  }      [BUGGY]  Integer  hexDigits  =  createBigInteger(str.length());  [BUGGY]      if  (str.startsWith(     "0x     ")  ||  str.startsWith(     "-0x     ")  ||  str.startsWith(     "0X     ")  ||  str.startsWith(     "-0X     "))  {  int  hexDigits  =  str.length()  -  2;  //  drop  0x  if  (str.startsWith(     "-     "))  {  //  drop  -  hexDigits--;  }  if  (hexDigits  >  8)  {  //  too  many  for  an  int  return  createLong(str);  }  return  createInteger(str);  }  char  lastChar  =  str.charAt(str.length()  -  1);  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  	projects/Lang7/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.5773502691896258	455	455	1	replace	Integer  hexDigits  =  createBigInteger(str.length());	  Integer    hexDigits    =    createBigInteger(str);    	non-compiled	[CE]  unclosed  character  literal	27	None	replace
20	[BUG]  [BUGGY]  Integer  hexDigits  =  createBigDecimal(str);  [CE]  unclosed  character  literal  [FE]              AssertionError      [CONTEXT]      public  static  Number  createNumber(String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {  return  null;  }  if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(     "A  blank  string  is  not  a  valid  number     ");  }  if  (str.startsWith(     "--     "))  {  return  null;  }      [BUGGY]  Integer  hexDigits  =  createBigDecimal(str);  [BUGGY]      if  (str.startsWith(     "0x     ")  ||  str.startsWith(     "-0x     ")  ||  str.startsWith(     "0X     ")  ||  str.startsWith(     "-0X     "))  {  int  hexDigits  =  str.length()  -  2;  //  drop  0x  if  (str.startsWith(     "-     "))  {  //  drop  -  hexDigits--;  }  if  (hexDigits  >  8)  {  //  too  many  for  an  int  return  createLong(str);  }  return  createInteger(str);  }  char  lastChar  =  str.charAt(str.length()  -  1);  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  	projects/Lang7/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.5773502691896258	455	455	1	replace	Integer  hexDigits  =  createBigDecimal(str);	  Integer    hexDigits    =    createBigInteger(str);    	non-compiled	[CE]  unclosed  character  literal	27	None	replace
21	[BUG]  [BUGGY]  int  hexDigits  =  str.lastIndexOf('.')+  2;  [CE]  unclosed  character  literal  [FE]                  AssertionError      [CONTEXT]      public  static  Number  createNumber(String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {  return  null;  }  if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(     "A  blank  string  is  not  a  valid  number     ");  }  if  (str.startsWith(     "--     "))  {  return  null;  }      [BUGGY]  int  hexDigits  =  str.lastIndexOf('.')+  2;  [BUGGY]      if  (str.startsWith(     "0x     ")  ||  str.startsWith(     "-0x     ")  ||  str.startsWith(     "0X     ")  ||  str.startsWith(     "-0X     "))  {  int  hexDigits  =  str.length()  -  2;  //  drop  0x  if  (str.startsWith(     "-     "))  {  //  drop  -  hexDigits--;  }  if  (hexDigits  >  8)  {  //  too  many  for  an  int  return  createLong(str);  }  return  createInteger(str);  }  char  lastChar  =  str.charAt(str.length()  -  1);  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  	projects/Lang7/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.5773502691896258	455	455	1	replace	int  hexDigits  =  str.lastIndexOf('.')+  2;	  int    hexDigits    =    str.lastIndexOf('.')+    1;    	non-compiled	[CE]  unclosed  character  literal	2	None	replace
22	[BUG]  [BUGGY]  int  hexDigits  =  str.length()  +  1;  [CE]  unclosed  character  literal  [FE]                    AssertionError      [CONTEXT]      public  static  Number  createNumber(String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {  return  null;  }  if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(     "A  blank  string  is  not  a  valid  number     ");  }  if  (str.startsWith(     "--     "))  {  return  null;  }      [BUGGY]  int  hexDigits  =  str.length()  +  1;  [BUGGY]      if  (str.startsWith(     "0x     ")  ||  str.startsWith(     "-0x     ")  ||  str.startsWith(     "0X     ")  ||  str.startsWith(     "-0X     "))  {  int  hexDigits  =  str.length()  -  2;  //  drop  0x  if  (str.startsWith(     "-     "))  {  //  drop  -  hexDigits--;  }  if  (hexDigits  >  8)  {  //  too  many  for  an  int  return  createLong(str);  }  return  createInteger(str);  }  char  lastChar  =  str.charAt(str.length()  -  1);  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  	projects/Lang7/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.5773502691896258	455	455	1	replace	int  hexDigits  =  str.length()  +  1;	  int    hexDigits    =    str.lastIndexOf('.')+    1;    	non-compiled	[CE]  unclosed  character  literal	2	None	replace
23	[BUG]  [BUGGY]  int  hexDigits  =  str.lastIndexOf('.')+  3;  [CE]  unclosed  character  literal  [FE]                      AssertionError      [CONTEXT]      public  static  Number  createNumber(String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {  return  null;  }  if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(     "A  blank  string  is  not  a  valid  number     ");  }  if  (str.startsWith(     "--     "))  {  return  null;  }      [BUGGY]  int  hexDigits  =  str.lastIndexOf('.')+  3;  [BUGGY]      if  (str.startsWith(     "0x     ")  ||  str.startsWith(     "-0x     ")  ||  str.startsWith(     "0X     ")  ||  str.startsWith(     "-0X     "))  {  int  hexDigits  =  str.length()  -  2;  //  drop  0x  if  (str.startsWith(     "-     "))  {  //  drop  -  hexDigits--;  }  if  (hexDigits  >  8)  {  //  too  many  for  an  int  return  createLong(str);  }  return  createInteger(str);  }  char  lastChar  =  str.charAt(str.length()  -  1);  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  	projects/Lang7/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.5773502691896258	455	455	1	replace	int  hexDigits  =  str.lastIndexOf('.')+  3;	  int    hexDigits    =    str.lastIndexOf('.')+    1;    	non-compiled	[CE]  unclosed  character  literal	2	None	replace
24	[BUG]  [BUGGY]  String  hexDigits  =  str.length();  [CE]  unclosed  character  literal  [FE]              AssertionError      [CONTEXT]      public  static  Number  createNumber(String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {  return  null;  }  if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(     "A  blank  string  is  not  a  valid  number     ");  }  if  (str.startsWith(     "--     "))  {  return  null;  }      [BUGGY]  String  hexDigits  =  str.length();  [BUGGY]      if  (str.startsWith(     "0x     ")  ||  str.startsWith(     "-0x     ")  ||  str.startsWith(     "0X     ")  ||  str.startsWith(     "-0X     "))  {  int  hexDigits  =  str.length()  -  2;  //  drop  0x  if  (str.startsWith(     "-     "))  {  //  drop  -  hexDigits--;  }  if  (hexDigits  >  8)  {  //  too  many  for  an  int  return  createLong(str);  }  return  createInteger(str);  }  char  lastChar  =  str.charAt(str.length()  -  1);  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  	projects/Lang7/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.5773502691896258	455	455	1	replace	String  hexDigits  =  str.length();	  char    hexDigits    =    str.length();    	non-compiled	[CE]  unclosed  character  literal	7	None	replace
25	[BUG]  [BUGGY]  char  hexDigits  =  str.length()  -  2;  [CE]  unclosed  character  literal  [FE]                AssertionError      [CONTEXT]      public  static  Number  createNumber(String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {  return  null;  }  if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(     "A  blank  string  is  not  a  valid  number     ");  }  if  (str.startsWith(     "--     "))  {  return  null;  }      [BUGGY]  char  hexDigits  =  str.length()  -  2;  [BUGGY]      if  (str.startsWith(     "0x     ")  ||  str.startsWith(     "-0x     ")  ||  str.startsWith(     "0X     ")  ||  str.startsWith(     "-0X     "))  {  int  hexDigits  =  str.length()  -  2;  //  drop  0x  if  (str.startsWith(     "-     "))  {  //  drop  -  hexDigits--;  }  if  (hexDigits  >  8)  {  //  too  many  for  an  int  return  createLong(str);  }  return  createInteger(str);  }  char  lastChar  =  str.charAt(str.length()  -  1);  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  	projects/Lang7/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.5773502691896258	455	455	1	replace	char  hexDigits  =  str.length()  -  2;	  char    hexDigits    =    str.length();    	non-compiled	[CE]  unclosed  character  literal	7	None	replace
26	[BUG]  [BUGGY]  int  hexDigits  =  str.indexOf('-',  4);  [CE]  unclosed  character  literal  [FE]            AssertionError      [CONTEXT]      public  static  Number  createNumber(String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {  return  null;  }  if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(     "A  blank  string  is  not  a  valid  number     ");  }  if  (str.startsWith(     "--     "))  {  return  null;  }      [BUGGY]  int  hexDigits  =  str.indexOf('-',  4);  [BUGGY]      if  (str.startsWith(     "0x     ")  ||  str.startsWith(     "-0x     ")  ||  str.startsWith(     "0X     ")  ||  str.startsWith(     "-0X     "))  {  int  hexDigits  =  str.length()  -  2;  //  drop  0x  if  (str.startsWith(     "-     "))  {  //  drop  -  hexDigits--;  }  if  (hexDigits  >  8)  {  //  too  many  for  an  int  return  createLong(str);  }  return  createInteger(str);  }  char  lastChar  =  str.charAt(str.length()  -  1);  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  	projects/Lang7/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.5773502691896258	455	455	1	replace	int  hexDigits  =  str.indexOf('-',  4);	  int    hexDigits    =    str.indexOf('-');    	non-compiled	[CE]  unclosed  character  literal	26	None	replace
27	[BUG]  [BUGGY]  int  hexDigits  =  str.indexOf('-',  1);  [CE]  unclosed  character  literal  [FE]              AssertionError      [CONTEXT]      public  static  Number  createNumber(String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {  return  null;  }  if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(     "A  blank  string  is  not  a  valid  number     ");  }  if  (str.startsWith(     "--     "))  {  return  null;  }      [BUGGY]  int  hexDigits  =  str.indexOf('-',  1);  [BUGGY]      if  (str.startsWith(     "0x     ")  ||  str.startsWith(     "-0x     ")  ||  str.startsWith(     "0X     ")  ||  str.startsWith(     "-0X     "))  {  int  hexDigits  =  str.length()  -  2;  //  drop  0x  if  (str.startsWith(     "-     "))  {  //  drop  -  hexDigits--;  }  if  (hexDigits  >  8)  {  //  too  many  for  an  int  return  createLong(str);  }  return  createInteger(str);  }  char  lastChar  =  str.charAt(str.length()  -  1);  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  	projects/Lang7/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.5773502691896258	455	455	1	replace	int  hexDigits  =  str.indexOf('-',  1);	  int    hexDigits    =    str.indexOf('-');    	non-compiled	[CE]  unclosed  character  literal	26	None	replace
28	[BUG]  [BUGGY]  int  hexDigits  =  str.indexOf('.')/  2;  [CE]  unclosed  character  literal  [FE]                AssertionError      [CONTEXT]      public  static  Number  createNumber(String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {  return  null;  }  if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(     "A  blank  string  is  not  a  valid  number     ");  }  if  (str.startsWith(     "--     "))  {  return  null;  }      [BUGGY]  int  hexDigits  =  str.indexOf('.')/  2;  [BUGGY]      if  (str.startsWith(     "0x     ")  ||  str.startsWith(     "-0x     ")  ||  str.startsWith(     "0X     ")  ||  str.startsWith(     "-0X     "))  {  int  hexDigits  =  str.length()  -  2;  //  drop  0x  if  (str.startsWith(     "-     "))  {  //  drop  -  hexDigits--;  }  if  (hexDigits  >  8)  {  //  too  many  for  an  int  return  createLong(str);  }  return  createInteger(str);  }  char  lastChar  =  str.charAt(str.length()  -  1);  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  	projects/Lang7/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.5773502691896258	455	455	1	replace	int  hexDigits  =  str.indexOf('.')/  2;	  int    hexDigits    =    str.indexOf('.')/    1;    	non-compiled	[CE]  unclosed  character  literal	39	None	replace
29	[BUG]  [BUGGY]  int  hexDigits  =  str.lastIndexOf('.')/  1;  [CE]  unclosed  character  literal  [FE]                  AssertionError      [CONTEXT]      public  static  Number  createNumber(String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {  return  null;  }  if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(     "A  blank  string  is  not  a  valid  number     ");  }  if  (str.startsWith(     "--     "))  {  return  null;  }      [BUGGY]  int  hexDigits  =  str.lastIndexOf('.')/  1;  [BUGGY]      if  (str.startsWith(     "0x     ")  ||  str.startsWith(     "-0x     ")  ||  str.startsWith(     "0X     ")  ||  str.startsWith(     "-0X     "))  {  int  hexDigits  =  str.length()  -  2;  //  drop  0x  if  (str.startsWith(     "-     "))  {  //  drop  -  hexDigits--;  }  if  (hexDigits  >  8)  {  //  too  many  for  an  int  return  createLong(str);  }  return  createInteger(str);  }  char  lastChar  =  str.charAt(str.length()  -  1);  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  	projects/Lang7/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.5773502691896258	455	455	1	replace	int  hexDigits  =  str.lastIndexOf('.')/  1;	  int    hexDigits    =    str.indexOf('.')/    1;    	non-compiled	[CE]  unclosed  character  literal	39	None	replace
30	[BUG]  [BUGGY]  int  hexDigits  =  str.indexOf('.',  lastChar)/  1;  [CE]  unclosed  character  literal  [FE]                    AssertionError      [CONTEXT]      public  static  Number  createNumber(String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {  return  null;  }  if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(     "A  blank  string  is  not  a  valid  number     ");  }  if  (str.startsWith(     "--     "))  {  return  null;  }      [BUGGY]  int  hexDigits  =  str.indexOf('.',  lastChar)/  1;  [BUGGY]      if  (str.startsWith(     "0x     ")  ||  str.startsWith(     "-0x     ")  ||  str.startsWith(     "0X     ")  ||  str.startsWith(     "-0X     "))  {  int  hexDigits  =  str.length()  -  2;  //  drop  0x  if  (str.startsWith(     "-     "))  {  //  drop  -  hexDigits--;  }  if  (hexDigits  >  8)  {  //  too  many  for  an  int  return  createLong(str);  }  return  createInteger(str);  }  char  lastChar  =  str.charAt(str.length()  -  1);  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  	projects/Lang7/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.5773502691896258	455	455	1	replace	int  hexDigits  =  str.indexOf('.',  lastChar)/  1;	  int    hexDigits    =    str.indexOf('.')/    1;    	non-compiled	[CE]  unclosed  character  literal	39	None	replace
31	[BUG]  [BUGGY]  int  hexDigits  =  str.length()  /  1;  [CE]  unclosed  character  literal  [FE]                      AssertionError      [CONTEXT]      public  static  Number  createNumber(String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {  return  null;  }  if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(     "A  blank  string  is  not  a  valid  number     ");  }  if  (str.startsWith(     "--     "))  {  return  null;  }      [BUGGY]  int  hexDigits  =  str.length()  /  1;  [BUGGY]      if  (str.startsWith(     "0x     ")  ||  str.startsWith(     "-0x     ")  ||  str.startsWith(     "0X     ")  ||  str.startsWith(     "-0X     "))  {  int  hexDigits  =  str.length()  -  2;  //  drop  0x  if  (str.startsWith(     "-     "))  {  //  drop  -  hexDigits--;  }  if  (hexDigits  >  8)  {  //  too  many  for  an  int  return  createLong(str);  }  return  createInteger(str);  }  char  lastChar  =  str.charAt(str.length()  -  1);  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  	projects/Lang7/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.5773502691896258	455	455	1	replace	int  hexDigits  =  str.length()  /  1;	  int    hexDigits    =    str.indexOf('.')/    1;    	non-compiled	[CE]  unclosed  character  literal	39	None	replace
32	[BUG]  [BUGGY]  Integer  str  =  createInteger(str.substring(0,  str.length()  +  2));  [CE]  unclosed  character  literal  [FE]                      AssertionError      [CONTEXT]      public  static  Number  createNumber(String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {  return  null;  }  if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(     "A  blank  string  is  not  a  valid  number     ");  }  if  (str.startsWith(     "--     "))  {  return  null;  }      [BUGGY]  Integer  str  =  createInteger(str.substring(0,  str.length()  +  2));  [BUGGY]      if  (str.startsWith(     "0x     ")  ||  str.startsWith(     "-0x     ")  ||  str.startsWith(     "0X     ")  ||  str.startsWith(     "-0X     "))  {  int  hexDigits  =  str.length()  -  2;  //  drop  0x  if  (str.startsWith(     "-     "))  {  //  drop  -  hexDigits--;  }  if  (hexDigits  >  8)  {  //  too  many  for  an  int  return  createLong(str);  }  return  createInteger(str);  }  char  lastChar  =  str.charAt(str.length()  -  1);  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  	projects/Lang7/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.5773502691896258	455	455	1	replace	Integer  str  =  createInteger(str.substring(0,  str.length()  +  2));	  Integer    str    =    createInteger(str.substring(0,    str.length()    -    2));    	non-compiled	[CE]  unclosed  character  literal	36	None	replace
33	[BUG]  [BUGGY]  if(str.startsWith( "0x   ")||  str.startsWith( "0x   ")||  str.startsWith( "-0x   "))  {  [CE]  unclosed  character  literal  [FE]              AssertionError      [CONTEXT]      public  static  Number  createNumber(String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {  return  null;  }  if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(     "A  blank  string  is  not  a  valid  number     ");  }  if  (str.startsWith(     "--     "))  {  return  null;  }      [BUGGY]  if(str.startsWith( "0x   ")||  str.startsWith( "0x   ")||  str.startsWith( "-0x   "))  {  [BUGGY]      int  hexDigits  =  str.length()  -  2;  //  drop  0x  if  (str.startsWith(     "-     "))  {  //  drop  -  hexDigits--;  }  if  (hexDigits  >  8)  {  //  too  many  for  an  int  return  createLong(str);  }  return  createInteger(str);  }  char  lastChar  =  str.charAt(str.length()  -  1);  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  	projects/Lang7/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.5773502691896258	455	455	1	replace	if(str.startsWith( "0x   ")||  str.startsWith( "0x   ")||  str.startsWith( "-0x   "))  {	  if(str.startsWith(   "0x   ")||    str.startsWith(   "0x   ")||    str.startsWith(   ".0x   ")||    str.startsWith(   "-0x   "))    {    	non-compiled	[CE]  unclosed  character  literal	32	None	replace
34	[BUG]  [BUGGY]  if(str.startsWith( "0x   ")||  str.startsWith( "-1x   ")||  str.startsWith( "-1x   "))  {  [CE]  unclosed  character  literal  [FE]              AssertionError      [CONTEXT]      public  static  Number  createNumber(String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {  return  null;  }  if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(     "A  blank  string  is  not  a  valid  number     ");  }  if  (str.startsWith(     "--     "))  {  return  null;  }      [BUGGY]  if(str.startsWith( "0x   ")||  str.startsWith( "-1x   ")||  str.startsWith( "-1x   "))  {  [BUGGY]      int  hexDigits  =  str.length()  -  2;  //  drop  0x  if  (str.startsWith(     "-     "))  {  //  drop  -  hexDigits--;  }  if  (hexDigits  >  8)  {  //  too  many  for  an  int  return  createLong(str);  }  return  createInteger(str);  }  char  lastChar  =  str.charAt(str.length()  -  1);  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  	projects/Lang7/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.5773502691896258	455	455	1	replace	if(str.startsWith( "0x   ")||  str.startsWith( "-1x   ")||  str.startsWith( "-1x   "))  {	  if(str.startsWith(   "0x       ")||    str.startsWith(   "-0x       ")||    str.startsWith(   "-0x       "))    {    	non-compiled	[CE]  unclosed  character  literal	12	None	replace
35	[BUG]  [BUGGY]  if(str.startsWith( "- ")||  str.startsWith( "- ")||  str.startsWith( "- ")||  str.startsWith( "- "))  {  [CE]  unclosed  character  literal  [FE]              AssertionError      [CONTEXT]      public  static  Number  createNumber(String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {  return  null;  }  if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(     "A  blank  string  is  not  a  valid  number     ");  }  if  (str.startsWith(     "--     "))  {  return  null;  }      [BUGGY]  if(str.startsWith( "- ")||  str.startsWith( "- ")||  str.startsWith( "- ")||  str.startsWith( "- "))  {  [BUGGY]      int  hexDigits  =  str.length()  -  2;  //  drop  0x  if  (str.startsWith(     "-     "))  {  //  drop  -  hexDigits--;  }  if  (hexDigits  >  8)  {  //  too  many  for  an  int  return  createLong(str);  }  return  createInteger(str);  }  char  lastChar  =  str.charAt(str.length()  -  1);  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  	projects/Lang7/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.5773502691896258	455	455	1	replace	if(str.startsWith( "- ")||  str.startsWith( "- ")||  str.startsWith( "- ")||  str.startsWith( "- "))  {	  if(str.startsWith(   ".0x   ")||    str.startsWith(   ".0x   ")||    str.startsWith(   ".0x   ")||    str.startsWith(   ".0x   "))    {    	non-compiled	[CE]  unclosed  character  literal	30	None	replace
36	[BUG]  [BUGGY]  Integer  hexDigits  =  createInteger(1);  [CE]  unclosed  character  literal  [FE]                AssertionError      [CONTEXT]      public  static  Number  createNumber(String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {  return  null;  }  if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(     "A  blank  string  is  not  a  valid  number     ");  }  if  (str.startsWith(     "--     "))  {  return  null;  }      [BUGGY]  Integer  hexDigits  =  createInteger(1);  [BUGGY]      if  (str.startsWith(     "0x     ")  ||  str.startsWith(     "-0x     ")  ||  str.startsWith(     "0X     ")  ||  str.startsWith(     "-0X     "))  {  int  hexDigits  =  str.length()  -  2;  //  drop  0x  if  (str.startsWith(     "-     "))  {  //  drop  -  hexDigits--;  }  if  (hexDigits  >  8)  {  //  too  many  for  an  int  return  createLong(str);  }  return  createInteger(str);  }  char  lastChar  =  str.charAt(str.length()  -  1);  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  	projects/Lang7/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.5773502691896258	455	455	1	replace	Integer  hexDigits  =  createInteger(1);	  Integer    hexDigits    =    createInteger(0);    	non-compiled	[CE]  unclosed  character  literal	24	None	replace
37	[BUG]  [BUGGY]  int  hexDigits  =  str.indexOf('.')+  4;  [CE]  unclosed  character  literal  [FE]                    AssertionError      [CONTEXT]      public  static  Number  createNumber(String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {  return  null;  }  if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(     "A  blank  string  is  not  a  valid  number     ");  }  if  (str.startsWith(     "--     "))  {  return  null;  }      [BUGGY]  int  hexDigits  =  str.indexOf('.')+  4;  [BUGGY]      if  (str.startsWith(     "0x     ")  ||  str.startsWith(     "-0x     ")  ||  str.startsWith(     "0X     ")  ||  str.startsWith(     "-0X     "))  {  int  hexDigits  =  str.length()  -  2;  //  drop  0x  if  (str.startsWith(     "-     "))  {  //  drop  -  hexDigits--;  }  if  (hexDigits  >  8)  {  //  too  many  for  an  int  return  createLong(str);  }  return  createInteger(str);  }  char  lastChar  =  str.charAt(str.length()  -  1);  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  	projects/Lang7/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.5773502691896258	455	455	1	replace	int  hexDigits  =  str.indexOf('.')+  4;	  int    hexDigits    =    str.indexOf('.')+    3;    	non-compiled	[CE]  unclosed  character  literal	3	None	replace
38	[BUG]  [BUGGY]  Integer  hexDigits  =  str.length()  -  2;  [CE]  unclosed  character  literal  [FE]                AssertionError      [CONTEXT]      public  static  Number  createNumber(String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {  return  null;  }  if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(     "A  blank  string  is  not  a  valid  number     ");  }  if  (str.startsWith(     "--     "))  {  return  null;  }      [BUGGY]  Integer  hexDigits  =  str.length()  -  2;  [BUGGY]      if  (str.startsWith(     "0x     ")  ||  str.startsWith(     "-0x     ")  ||  str.startsWith(     "0X     ")  ||  str.startsWith(     "-0X     "))  {  int  hexDigits  =  str.length()  -  2;  //  drop  0x  if  (str.startsWith(     "-     "))  {  //  drop  -  hexDigits--;  }  if  (hexDigits  >  8)  {  //  too  many  for  an  int  return  createLong(str);  }  return  createInteger(str);  }  char  lastChar  =  str.charAt(str.length()  -  1);  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  	projects/Lang7/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.5773502691896258	455	455	1	replace	Integer  hexDigits  =  str.length()  -  2;	  Integer    hexDigits    =    str.length();    	non-compiled	[CE]  unclosed  character  literal	8	None	replace
39	[BUG]  [BUGGY]  Integer  hexDigits  =  str.length()  +  2;  [CE]  unclosed  character  literal  [FE]                  AssertionError      [CONTEXT]      public  static  Number  createNumber(String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {  return  null;  }  if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(     "A  blank  string  is  not  a  valid  number     ");  }  if  (str.startsWith(     "--     "))  {  return  null;  }      [BUGGY]  Integer  hexDigits  =  str.length()  +  2;  [BUGGY]      if  (str.startsWith(     "0x     ")  ||  str.startsWith(     "-0x     ")  ||  str.startsWith(     "0X     ")  ||  str.startsWith(     "-0X     "))  {  int  hexDigits  =  str.length()  -  2;  //  drop  0x  if  (str.startsWith(     "-     "))  {  //  drop  -  hexDigits--;  }  if  (hexDigits  >  8)  {  //  too  many  for  an  int  return  createLong(str);  }  return  createInteger(str);  }  char  lastChar  =  str.charAt(str.length()  -  1);  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  	projects/Lang7/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.5773502691896258	455	455	1	replace	Integer  hexDigits  =  str.length()  +  2;	  Integer    hexDigits    =    str.length();    	non-compiled	[CE]  unclosed  character  literal	8	None	replace
40	[BUG]  [BUGGY]  Integer  hexDigits  =  str.length()  +  1;  [CE]  unclosed  character  literal  [FE]                    AssertionError      [CONTEXT]      public  static  Number  createNumber(String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {  return  null;  }  if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(     "A  blank  string  is  not  a  valid  number     ");  }  if  (str.startsWith(     "--     "))  {  return  null;  }      [BUGGY]  Integer  hexDigits  =  str.length()  +  1;  [BUGGY]      if  (str.startsWith(     "0x     ")  ||  str.startsWith(     "-0x     ")  ||  str.startsWith(     "0X     ")  ||  str.startsWith(     "-0X     "))  {  int  hexDigits  =  str.length()  -  2;  //  drop  0x  if  (str.startsWith(     "-     "))  {  //  drop  -  hexDigits--;  }  if  (hexDigits  >  8)  {  //  too  many  for  an  int  return  createLong(str);  }  return  createInteger(str);  }  char  lastChar  =  str.charAt(str.length()  -  1);  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  	projects/Lang7/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.5773502691896258	455	455	1	replace	Integer  hexDigits  =  str.length()  +  1;	  Integer    hexDigits    =    str.length();    	non-compiled	[CE]  unclosed  character  literal	8	None	replace
41	[BUG]  [BUGGY]  Integer  hexDigits  =  str.length()  -  1;  [CE]  unclosed  character  literal  [FE]                      AssertionError      [CONTEXT]      public  static  Number  createNumber(String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {  return  null;  }  if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(     "A  blank  string  is  not  a  valid  number     ");  }  if  (str.startsWith(     "--     "))  {  return  null;  }      [BUGGY]  Integer  hexDigits  =  str.length()  -  1;  [BUGGY]      if  (str.startsWith(     "0x     ")  ||  str.startsWith(     "-0x     ")  ||  str.startsWith(     "0X     ")  ||  str.startsWith(     "-0X     "))  {  int  hexDigits  =  str.length()  -  2;  //  drop  0x  if  (str.startsWith(     "-     "))  {  //  drop  -  hexDigits--;  }  if  (hexDigits  >  8)  {  //  too  many  for  an  int  return  createLong(str);  }  return  createInteger(str);  }  char  lastChar  =  str.charAt(str.length()  -  1);  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  	projects/Lang7/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.5773502691896258	455	455	1	replace	Integer  hexDigits  =  str.length()  -  1;	  Integer    hexDigits    =    str.length();    	non-compiled	[CE]  unclosed  character  literal	8	None	replace
42	[BUG]  [BUGGY]  Integer  hexDigits  =  createInteger(str.substring(0,  str.length()));  [CE]  unclosed  character  literal  [FE]            AssertionError      [CONTEXT]      public  static  Number  createNumber(String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {  return  null;  }  if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(     "A  blank  string  is  not  a  valid  number     ");  }  if  (str.startsWith(     "--     "))  {  return  null;  }      [BUGGY]  Integer  hexDigits  =  createInteger(str.substring(0,  str.length()));  [BUGGY]      if  (str.startsWith(     "0x     ")  ||  str.startsWith(     "-0x     ")  ||  str.startsWith(     "0X     ")  ||  str.startsWith(     "-0X     "))  {  int  hexDigits  =  str.length()  -  2;  //  drop  0x  if  (str.startsWith(     "-     "))  {  //  drop  -  hexDigits--;  }  if  (hexDigits  >  8)  {  //  too  many  for  an  int  return  createLong(str);  }  return  createInteger(str);  }  char  lastChar  =  str.charAt(str.length()  -  1);  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  	projects/Lang7/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.5773502691896258	455	455	1	replace	Integer  hexDigits  =  createInteger(str.substring(0,  str.length()));	  Integer    hexDigits    =    createInteger(str.substring(0,    str.length()    -    2));    	non-compiled	[CE]  unclosed  character  literal	37	None	replace
43	[BUG]  [BUGGY]  Integer  hexDigits  =  createInteger(str.substring(0,  str.length()  +  2));  [CE]  unclosed  character  literal  [FE]              AssertionError      [CONTEXT]      public  static  Number  createNumber(String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {  return  null;  }  if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(     "A  blank  string  is  not  a  valid  number     ");  }  if  (str.startsWith(     "--     "))  {  return  null;  }      [BUGGY]  Integer  hexDigits  =  createInteger(str.substring(0,  str.length()  +  2));  [BUGGY]      if  (str.startsWith(     "0x     ")  ||  str.startsWith(     "-0x     ")  ||  str.startsWith(     "0X     ")  ||  str.startsWith(     "-0X     "))  {  int  hexDigits  =  str.length()  -  2;  //  drop  0x  if  (str.startsWith(     "-     "))  {  //  drop  -  hexDigits--;  }  if  (hexDigits  >  8)  {  //  too  many  for  an  int  return  createLong(str);  }  return  createInteger(str);  }  char  lastChar  =  str.charAt(str.length()  -  1);  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  	projects/Lang7/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.5773502691896258	455	455	1	replace	Integer  hexDigits  =  createInteger(str.substring(0,  str.length()  +  2));	  Integer    hexDigits    =    createInteger(str.substring(0,    str.length()    -    2));    	non-compiled	[CE]  unclosed  character  literal	37	None	replace
44	[BUG]  [BUGGY]  Integer  hexDigits  =  createInteger(str.substring(0,  str.length()  -  1));  [CE]  unclosed  character  literal  [FE]                AssertionError      [CONTEXT]      public  static  Number  createNumber(String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {  return  null;  }  if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(     "A  blank  string  is  not  a  valid  number     ");  }  if  (str.startsWith(     "--     "))  {  return  null;  }      [BUGGY]  Integer  hexDigits  =  createInteger(str.substring(0,  str.length()  -  1));  [BUGGY]      if  (str.startsWith(     "0x     ")  ||  str.startsWith(     "-0x     ")  ||  str.startsWith(     "0X     ")  ||  str.startsWith(     "-0X     "))  {  int  hexDigits  =  str.length()  -  2;  //  drop  0x  if  (str.startsWith(     "-     "))  {  //  drop  -  hexDigits--;  }  if  (hexDigits  >  8)  {  //  too  many  for  an  int  return  createLong(str);  }  return  createInteger(str);  }  char  lastChar  =  str.charAt(str.length()  -  1);  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  	projects/Lang7/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.5773502691896258	455	455	1	replace	Integer  hexDigits  =  createInteger(str.substring(0,  str.length()  -  1));	  Integer    hexDigits    =    createInteger(str.substring(0,    str.length()    -    2));    	non-compiled	[CE]  unclosed  character  literal	37	None	replace
45	[BUG]  [BUGGY]  Integer  str  =  createInteger(str.substring(0,  2));  [CE]  unclosed  character  literal  [FE]              AssertionError      [CONTEXT]      public  static  Number  createNumber(String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {  return  null;  }  if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(     "A  blank  string  is  not  a  valid  number     ");  }  if  (str.startsWith(     "--     "))  {  return  null;  }      [BUGGY]  Integer  str  =  createInteger(str.substring(0,  2));  [BUGGY]      if  (str.startsWith(     "0x     ")  ||  str.startsWith(     "-0x     ")  ||  str.startsWith(     "0X     ")  ||  str.startsWith(     "-0X     "))  {  int  hexDigits  =  str.length()  -  2;  //  drop  0x  if  (str.startsWith(     "-     "))  {  //  drop  -  hexDigits--;  }  if  (hexDigits  >  8)  {  //  too  many  for  an  int  return  createLong(str);  }  return  createInteger(str);  }  char  lastChar  =  str.charAt(str.length()  -  1);  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  	projects/Lang7/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.5773502691896258	455	455	1	replace	Integer  str  =  createInteger(str.substring(0,  2));	  Integer    str    =    createInteger(str.substring(1));    	non-compiled	[CE]  unclosed  character  literal	19	None	replace
46	[BUG]  [BUGGY]  Integer  str  =  createInteger(str.substring(2));  [CE]  unclosed  character  literal  [FE]                AssertionError      [CONTEXT]      public  static  Number  createNumber(String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {  return  null;  }  if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(     "A  blank  string  is  not  a  valid  number     ");  }  if  (str.startsWith(     "--     "))  {  return  null;  }      [BUGGY]  Integer  str  =  createInteger(str.substring(2));  [BUGGY]      if  (str.startsWith(     "0x     ")  ||  str.startsWith(     "-0x     ")  ||  str.startsWith(     "0X     ")  ||  str.startsWith(     "-0X     "))  {  int  hexDigits  =  str.length()  -  2;  //  drop  0x  if  (str.startsWith(     "-     "))  {  //  drop  -  hexDigits--;  }  if  (hexDigits  >  8)  {  //  too  many  for  an  int  return  createLong(str);  }  return  createInteger(str);  }  char  lastChar  =  str.charAt(str.length()  -  1);  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  	projects/Lang7/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.5773502691896258	455	455	1	replace	Integer  str  =  createInteger(str.substring(2));	  Integer    str    =    createInteger(str.substring(1));    	non-compiled	[CE]  unclosed  character  literal	19	None	replace
47	[BUG]  [BUGGY]  Integer  str  =  createInteger(str.substring(0,  1));  [CE]  unclosed  character  literal  [FE]                  AssertionError      [CONTEXT]      public  static  Number  createNumber(String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {  return  null;  }  if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(     "A  blank  string  is  not  a  valid  number     ");  }  if  (str.startsWith(     "--     "))  {  return  null;  }      [BUGGY]  Integer  str  =  createInteger(str.substring(0,  1));  [BUGGY]      if  (str.startsWith(     "0x     ")  ||  str.startsWith(     "-0x     ")  ||  str.startsWith(     "0X     ")  ||  str.startsWith(     "-0X     "))  {  int  hexDigits  =  str.length()  -  2;  //  drop  0x  if  (str.startsWith(     "-     "))  {  //  drop  -  hexDigits--;  }  if  (hexDigits  >  8)  {  //  too  many  for  an  int  return  createLong(str);  }  return  createInteger(str);  }  char  lastChar  =  str.charAt(str.length()  -  1);  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  	projects/Lang7/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.5773502691896258	455	455	1	replace	Integer  str  =  createInteger(str.substring(0,  1));	  Integer    str    =    createInteger(str.substring(1));    	non-compiled	[CE]  unclosed  character  literal	19	None	replace
48	[BUG]  [BUGGY]  if(str.startsWith( "0x ")||  str.startsWith( "1x ")||  str.startsWith( "1x ")||  str.startsWith( "1x "))  {  [CE]  unclosed  character  literal  [FE]            AssertionError      [CONTEXT]      public  static  Number  createNumber(String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {  return  null;  }  if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(     "A  blank  string  is  not  a  valid  number     ");  }  if  (str.startsWith(     "--     "))  {  return  null;  }      [BUGGY]  if(str.startsWith( "0x ")||  str.startsWith( "1x ")||  str.startsWith( "1x ")||  str.startsWith( "1x "))  {  [BUGGY]      int  hexDigits  =  str.length()  -  2;  //  drop  0x  if  (str.startsWith(     "-     "))  {  //  drop  -  hexDigits--;  }  if  (hexDigits  >  8)  {  //  too  many  for  an  int  return  createLong(str);  }  return  createInteger(str);  }  char  lastChar  =  str.charAt(str.length()  -  1);  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  	projects/Lang7/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.5773502691896258	455	455	1	replace	if(str.startsWith( "0x ")||  str.startsWith( "1x ")||  str.startsWith( "1x ")||  str.startsWith( "1x "))  {	  if(str.startsWith(   "0x       ")||    str.startsWith(   "-1x       ")||    str.startsWith(   "-1x       ")||    str.startsWith(   "-1x       "))    {    	non-compiled	[CE]  unclosed  character  literal	11	None	replace
49	[BUG]  [BUGGY]  if(str.startsWith( "0x   ")||  str.startsWith( "-1x ")||  str.startsWith( "-1x ")||  str.startsWith( "-1))  {  [CE]  unclosed  character  literal  [FE]              AssertionError      [CONTEXT]      public  static  Number  createNumber(String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {  return  null;  }  if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(     "A  blank  string  is  not  a  valid  number     ");  }  if  (str.startsWith(     "--     "))  {  return  null;  }      [BUGGY]  if(str.startsWith( "0x   ")||  str.startsWith( "-1x ")||  str.startsWith( "-1x ")||  str.startsWith( "-1))  {  [BUGGY]      int  hexDigits  =  str.length()  -  2;  //  drop  0x  if  (str.startsWith(     "-     "))  {  //  drop  -  hexDigits--;  }  if  (hexDigits  >  8)  {  //  too  many  for  an  int  return  createLong(str);  }  return  createInteger(str);  }  char  lastChar  =  str.charAt(str.length()  -  1);  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  	projects/Lang7/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.5773502691896258	455	455	1	replace	if(str.startsWith( "0x   ")||  str.startsWith( "-1x ")||  str.startsWith( "-1x ")||  str.startsWith( "-1))  {	  if(str.startsWith(   "0x       ")||    str.startsWith(   "-1x       ")||    str.startsWith(   "-1x       ")||    str.startsWith(   "-1x       "))    {    	non-compiled	[CE]  unclosed  character  literal	11	None	replace
50	[BUG]  [BUGGY]  Integer  hexDigits  =  createInteger(str.substring(2));  [CE]  unclosed  character  literal  [FE]              AssertionError      [CONTEXT]      public  static  Number  createNumber(String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {  return  null;  }  if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(     "A  blank  string  is  not  a  valid  number     ");  }  if  (str.startsWith(     "--     "))  {  return  null;  }      [BUGGY]  Integer  hexDigits  =  createInteger(str.substring(2));  [BUGGY]      if  (str.startsWith(     "0x     ")  ||  str.startsWith(     "-0x     ")  ||  str.startsWith(     "0X     ")  ||  str.startsWith(     "-0X     "))  {  int  hexDigits  =  str.length()  -  2;  //  drop  0x  if  (str.startsWith(     "-     "))  {  //  drop  -  hexDigits--;  }  if  (hexDigits  >  8)  {  //  too  many  for  an  int  return  createLong(str);  }  return  createInteger(str);  }  char  lastChar  =  str.charAt(str.length()  -  1);  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  	projects/Lang7/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.5773502691896258	455	455	1	replace	Integer  hexDigits  =  createInteger(str.substring(2));	  Integer    hexDigits    =    createInteger(str.substring(1));    	non-compiled	[CE]  unclosed  character  literal	28	None	replace
51	[BUG]  [BUGGY]  Integer  str  =  createInteger(str.length();  [CE]  unclosed  character  literal  [FE]                          AssertionError      [CONTEXT]      public  static  Number  createNumber(String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {  return  null;  }  if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(     "A  blank  string  is  not  a  valid  number     ");  }  if  (str.startsWith(     "--     "))  {  return  null;  }      [BUGGY]  Integer  str  =  createInteger(str.length();  [BUGGY]      if  (str.startsWith(     "0x     ")  ||  str.startsWith(     "-0x     ")  ||  str.startsWith(     "0X     ")  ||  str.startsWith(     "-0X     "))  {  int  hexDigits  =  str.length()  -  2;  //  drop  0x  if  (str.startsWith(     "-     "))  {  //  drop  -  hexDigits--;  }  if  (hexDigits  >  8)  {  //  too  many  for  an  int  return  createLong(str);  }  return  createInteger(str);  }  char  lastChar  =  str.charAt(str.length()  -  1);  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  	projects/Lang7/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.5773502691896258	455	455	1	replace	Integer  str  =  createInteger(str.length();	  Integer    str    =    createInteger(str.length()    +    2);    	non-compiled	[CE]  unclosed  character  literal	17	None	replace
52	[BUG]  [BUGGY]  Integer  str  =  getInteger(str.length());  [CE]  unclosed  character  literal  [FE]                    AssertionError      [CONTEXT]      public  static  Number  createNumber(String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {  return  null;  }  if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(     "A  blank  string  is  not  a  valid  number     ");  }  if  (str.startsWith(     "--     "))  {  return  null;  }      [BUGGY]  Integer  str  =  getInteger(str.length());  [BUGGY]      if  (str.startsWith(     "0x     ")  ||  str.startsWith(     "-0x     ")  ||  str.startsWith(     "0X     ")  ||  str.startsWith(     "-0X     "))  {  int  hexDigits  =  str.length()  -  2;  //  drop  0x  if  (str.startsWith(     "-     "))  {  //  drop  -  hexDigits--;  }  if  (hexDigits  >  8)  {  //  too  many  for  an  int  return  createLong(str);  }  return  createInteger(str);  }  char  lastChar  =  str.charAt(str.length()  -  1);  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  	projects/Lang7/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.5773502691896258	455	455	1	replace	Integer  str  =  getInteger(str.length());	  Integer    str    =    createInteger(str.length()    -    2);    	non-compiled	[CE]  unclosed  character  literal	14	None	replace
53	[BUG]  [BUGGY]  int  str  =  createInteger(str.length());  [CE]  unclosed  character  literal  [FE]                      AssertionError      [CONTEXT]      public  static  Number  createNumber(String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {  return  null;  }  if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(     "A  blank  string  is  not  a  valid  number     ");  }  if  (str.startsWith(     "--     "))  {  return  null;  }      [BUGGY]  int  str  =  createInteger(str.length());  [BUGGY]      if  (str.startsWith(     "0x     ")  ||  str.startsWith(     "-0x     ")  ||  str.startsWith(     "0X     ")  ||  str.startsWith(     "-0X     "))  {  int  hexDigits  =  str.length()  -  2;  //  drop  0x  if  (str.startsWith(     "-     "))  {  //  drop  -  hexDigits--;  }  if  (hexDigits  >  8)  {  //  too  many  for  an  int  return  createLong(str);  }  return  createInteger(str);  }  char  lastChar  =  str.charAt(str.length()  -  1);  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  	projects/Lang7/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.5773502691896258	455	455	1	replace	int  str  =  createInteger(str.length());	  Integer    str    =    createInteger(str.length()    -    2);    	non-compiled	[CE]  unclosed  character  literal	14	None	replace
54	[BUG]  [BUGGY]  String  str  =  str.substring(0,  str.length()  -  4);  [CE]  unclosed  character  literal  [FE]                AssertionError      [CONTEXT]      public  static  Number  createNumber(String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {  return  null;  }  if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(     "A  blank  string  is  not  a  valid  number     ");  }  if  (str.startsWith(     "--     "))  {  return  null;  }      [BUGGY]  String  str  =  str.substring(0,  str.length()  -  4);  [BUGGY]      if  (str.startsWith(     "0x     ")  ||  str.startsWith(     "-0x     ")  ||  str.startsWith(     "0X     ")  ||  str.startsWith(     "-0X     "))  {  int  hexDigits  =  str.length()  -  2;  //  drop  0x  if  (str.startsWith(     "-     "))  {  //  drop  -  hexDigits--;  }  if  (hexDigits  >  8)  {  //  too  many  for  an  int  return  createLong(str);  }  return  createInteger(str);  }  char  lastChar  =  str.charAt(str.length()  -  1);  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  	projects/Lang7/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.5773502691896258	455	455	1	replace	String  str  =  str.substring(0,  str.length()  -  4);	  String    str    =    str.substring(0,    str.length());    	non-compiled	[CE]  unclosed  character  literal	4	None	replace
55	[BUG]  [BUGGY]  Integer  str  =  createBigInteger(str.length());  [CE]  unclosed  character  literal  [FE]              AssertionError      [CONTEXT]      public  static  Number  createNumber(String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {  return  null;  }  if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(     "A  blank  string  is  not  a  valid  number     ");  }  if  (str.startsWith(     "--     "))  {  return  null;  }      [BUGGY]  Integer  str  =  createBigInteger(str.length());  [BUGGY]      if  (str.startsWith(     "0x     ")  ||  str.startsWith(     "-0x     ")  ||  str.startsWith(     "0X     ")  ||  str.startsWith(     "-0X     "))  {  int  hexDigits  =  str.length()  -  2;  //  drop  0x  if  (str.startsWith(     "-     "))  {  //  drop  -  hexDigits--;  }  if  (hexDigits  >  8)  {  //  too  many  for  an  int  return  createLong(str);  }  return  createInteger(str);  }  char  lastChar  =  str.charAt(str.length()  -  1);  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  	projects/Lang7/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.5773502691896258	455	455	1	replace	Integer  str  =  createBigInteger(str.length());	  Integer    str    =    createBigInteger(str);    	non-compiled	[CE]  unclosed  character  literal	31	None	replace
56	[BUG]  [BUGGY]  Integer  str  =  createBigDecimal(str);  [CE]  unclosed  character  literal  [FE]                AssertionError      [CONTEXT]      public  static  Number  createNumber(String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {  return  null;  }  if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(     "A  blank  string  is  not  a  valid  number     ");  }  if  (str.startsWith(     "--     "))  {  return  null;  }      [BUGGY]  Integer  str  =  createBigDecimal(str);  [BUGGY]      if  (str.startsWith(     "0x     ")  ||  str.startsWith(     "-0x     ")  ||  str.startsWith(     "0X     ")  ||  str.startsWith(     "-0X     "))  {  int  hexDigits  =  str.length()  -  2;  //  drop  0x  if  (str.startsWith(     "-     "))  {  //  drop  -  hexDigits--;  }  if  (hexDigits  >  8)  {  //  too  many  for  an  int  return  createLong(str);  }  return  createInteger(str);  }  char  lastChar  =  str.charAt(str.length()  -  1);  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  	projects/Lang7/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.5773502691896258	455	455	1	replace	Integer  str  =  createBigDecimal(str);	  Integer    str    =    createBigInteger(str);    	non-compiled	[CE]  unclosed  character  literal	31	None	replace
57	[BUG]  [BUGGY]  Integer  str  =  createBigInteger(str.substring(1));  [CE]  unclosed  character  literal  [FE]                  AssertionError      [CONTEXT]      public  static  Number  createNumber(String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {  return  null;  }  if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(     "A  blank  string  is  not  a  valid  number     ");  }  if  (str.startsWith(     "--     "))  {  return  null;  }      [BUGGY]  Integer  str  =  createBigInteger(str.substring(1));  [BUGGY]      if  (str.startsWith(     "0x     ")  ||  str.startsWith(     "-0x     ")  ||  str.startsWith(     "0X     ")  ||  str.startsWith(     "-0X     "))  {  int  hexDigits  =  str.length()  -  2;  //  drop  0x  if  (str.startsWith(     "-     "))  {  //  drop  -  hexDigits--;  }  if  (hexDigits  >  8)  {  //  too  many  for  an  int  return  createLong(str);  }  return  createInteger(str);  }  char  lastChar  =  str.charAt(str.length()  -  1);  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  	projects/Lang7/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.5773502691896258	455	455	1	replace	Integer  str  =  createBigInteger(str.substring(1));	  Integer    str    =    createBigInteger(str);    	non-compiled	[CE]  unclosed  character  literal	31	None	replace
58	[BUG]  [BUGGY]  Integer  hexDigits  =  createInt(str);  [CE]  unclosed  character  literal  [FE]              AssertionError      [CONTEXT]      public  static  Number  createNumber(String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {  return  null;  }  if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(     "A  blank  string  is  not  a  valid  number     ");  }  if  (str.startsWith(     "--     "))  {  return  null;  }      [BUGGY]  Integer  hexDigits  =  createInt(str);  [BUGGY]      if  (str.startsWith(     "0x     ")  ||  str.startsWith(     "-0x     ")  ||  str.startsWith(     "0X     ")  ||  str.startsWith(     "-0X     "))  {  int  hexDigits  =  str.length()  -  2;  //  drop  0x  if  (str.startsWith(     "-     "))  {  //  drop  -  hexDigits--;  }  if  (hexDigits  >  8)  {  //  too  many  for  an  int  return  createLong(str);  }  return  createInteger(str);  }  char  lastChar  =  str.charAt(str.length()  -  1);  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  	projects/Lang7/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.5773502691896258	455	455	1	replace	Integer  hexDigits  =  createInt(str);	  Integer    hexDigits    =    createLong(str);    	non-compiled	[CE]  unclosed  character  literal	23	None	replace
59	[BUG]  [BUGGY]  int  hexDigits  =  createInteger(str);  [CE]  unclosed  character  literal  [FE]                AssertionError      [CONTEXT]      public  static  Number  createNumber(String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {  return  null;  }  if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(     "A  blank  string  is  not  a  valid  number     ");  }  if  (str.startsWith(     "--     "))  {  return  null;  }      [BUGGY]  int  hexDigits  =  createInteger(str);  [BUGGY]      if  (str.startsWith(     "0x     ")  ||  str.startsWith(     "-0x     ")  ||  str.startsWith(     "0X     ")  ||  str.startsWith(     "-0X     "))  {  int  hexDigits  =  str.length()  -  2;  //  drop  0x  if  (str.startsWith(     "-     "))  {  //  drop  -  hexDigits--;  }  if  (hexDigits  >  8)  {  //  too  many  for  an  int  return  createLong(str);  }  return  createInteger(str);  }  char  lastChar  =  str.charAt(str.length()  -  1);  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  	projects/Lang7/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.5773502691896258	455	455	1	replace	int  hexDigits  =  createInteger(str);	  Integer    hexDigits    =    createLong(str);    	non-compiled	[CE]  unclosed  character  literal	23	None	replace
60	[BUG]  [BUGGY]  Integer  str  =  createInteger(str.intValue(),  1);  [CE]  unclosed  character  literal  [FE]                AssertionError      [CONTEXT]      public  static  Number  createNumber(String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {  return  null;  }  if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(     "A  blank  string  is  not  a  valid  number     ");  }  if  (str.startsWith(     "--     "))  {  return  null;  }      [BUGGY]  Integer  str  =  createInteger(str.intValue(),  1);  [BUGGY]      if  (str.startsWith(     "0x     ")  ||  str.startsWith(     "-0x     ")  ||  str.startsWith(     "0X     ")  ||  str.startsWith(     "-0X     "))  {  int  hexDigits  =  str.length()  -  2;  //  drop  0x  if  (str.startsWith(     "-     "))  {  //  drop  -  hexDigits--;  }  if  (hexDigits  >  8)  {  //  too  many  for  an  int  return  createLong(str);  }  return  createInteger(str);  }  char  lastChar  =  str.charAt(str.length()  -  1);  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  	projects/Lang7/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.5773502691896258	455	455	1	replace	Integer  str  =  createInteger(str.intValue(),  1);	  Integer    str    =    createInteger(str.intValue());    	non-compiled	[CE]  unclosed  character  literal	20	None	replace
61	[BUG]  [BUGGY]  int  hexDigits  =  str.indexOf('.')-  2;  [CE]  unclosed  character  literal  [FE]                AssertionError      [CONTEXT]      public  static  Number  createNumber(String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {  return  null;  }  if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(     "A  blank  string  is  not  a  valid  number     ");  }  if  (str.startsWith(     "--     "))  {  return  null;  }      [BUGGY]  int  hexDigits  =  str.indexOf('.')-  2;  [BUGGY]      if  (str.startsWith(     "0x     ")  ||  str.startsWith(     "-0x     ")  ||  str.startsWith(     "0X     ")  ||  str.startsWith(     "-0X     "))  {  int  hexDigits  =  str.length()  -  2;  //  drop  0x  if  (str.startsWith(     "-     "))  {  //  drop  -  hexDigits--;  }  if  (hexDigits  >  8)  {  //  too  many  for  an  int  return  createLong(str);  }  return  createInteger(str);  }  char  lastChar  =  str.charAt(str.length()  -  1);  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  	projects/Lang7/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.5773502691896258	455	455	1	replace	int  hexDigits  =  str.indexOf('.')-  2;	  int    hexDigits    =    str.indexOf('.')+    2;    	non-compiled	[CE]  unclosed  character  literal	1	None	replace
62	[BUG]  [BUGGY]  Integer  hexDigits  =  createInteger(str.substring(0,  2));  [CE]  unclosed  character  literal  [FE]              AssertionError      [CONTEXT]      public  static  Number  createNumber(String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {  return  null;  }  if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(     "A  blank  string  is  not  a  valid  number     ");  }  if  (str.startsWith(     "--     "))  {  return  null;  }      [BUGGY]  Integer  hexDigits  =  createInteger(str.substring(0,  2));  [BUGGY]      if  (str.startsWith(     "0x     ")  ||  str.startsWith(     "-0x     ")  ||  str.startsWith(     "0X     ")  ||  str.startsWith(     "-0X     "))  {  int  hexDigits  =  str.length()  -  2;  //  drop  0x  if  (str.startsWith(     "-     "))  {  //  drop  -  hexDigits--;  }  if  (hexDigits  >  8)  {  //  too  many  for  an  int  return  createLong(str);  }  return  createInteger(str);  }  char  lastChar  =  str.charAt(str.length()  -  1);  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  	projects/Lang7/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.5773502691896258	455	455	1	replace	Integer  hexDigits  =  createInteger(str.substring(0,  2));	  Integer    hexDigits    =    createInteger(str.substring(1));    	non-compiled	[CE]  unclosed  character  literal	28	None	replace
63	[BUG]  [BUGGY]  if(str.startsWith( ".0x ")||  str.startsWith( ".-1x ")||  str.startsWith( ".-1x ")||  str.startsWith( ".-1x "))  {  [CE]  unclosed  character  literal  [FE]            AssertionError      [CONTEXT]      public  static  Number  createNumber(String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {  return  null;  }  if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(     "A  blank  string  is  not  a  valid  number     ");  }  if  (str.startsWith(     "--     "))  {  return  null;  }      [BUGGY]  if(str.startsWith( ".0x ")||  str.startsWith( ".-1x ")||  str.startsWith( ".-1x ")||  str.startsWith( ".-1x "))  {  [BUGGY]      int  hexDigits  =  str.length()  -  2;  //  drop  0x  if  (str.startsWith(     "-     "))  {  //  drop  -  hexDigits--;  }  if  (hexDigits  >  8)  {  //  too  many  for  an  int  return  createLong(str);  }  return  createInteger(str);  }  char  lastChar  =  str.charAt(str.length()  -  1);  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  	projects/Lang7/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.5773502691896258	455	455	1	replace	if(str.startsWith( ".0x ")||  str.startsWith( ".-1x ")||  str.startsWith( ".-1x ")||  str.startsWith( ".-1x "))  {	  if(str.startsWith(   "0x       ")||    str.startsWith(   "-1x       ")||    str.startsWith(   "-1x       ")||    str.startsWith(   "-1x       "))    {    	non-compiled	[CE]  unclosed  character  literal	11	None	replace
64	[BUG]  [BUGGY]  if(str.startsWith( "0x ")||  str.startsWith( "-1x ")||  str.startsWith( "-1x ")||  str.startsWith( "-1y "))  {  [CE]  unclosed  character  literal  [FE]              AssertionError      [CONTEXT]      public  static  Number  createNumber(String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {  return  null;  }  if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(     "A  blank  string  is  not  a  valid  number     ");  }  if  (str.startsWith(     "--     "))  {  return  null;  }      [BUGGY]  if(str.startsWith( "0x ")||  str.startsWith( "-1x ")||  str.startsWith( "-1x ")||  str.startsWith( "-1y "))  {  [BUGGY]      int  hexDigits  =  str.length()  -  2;  //  drop  0x  if  (str.startsWith(     "-     "))  {  //  drop  -  hexDigits--;  }  if  (hexDigits  >  8)  {  //  too  many  for  an  int  return  createLong(str);  }  return  createInteger(str);  }  char  lastChar  =  str.charAt(str.length()  -  1);  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  	projects/Lang7/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.5773502691896258	455	455	1	replace	if(str.startsWith( "0x ")||  str.startsWith( "-1x ")||  str.startsWith( "-1x ")||  str.startsWith( "-1y "))  {	  if(str.startsWith(   "0x       ")||    str.startsWith(   "-1x       ")||    str.startsWith(   "-1x       ")||    str.startsWith(   "-1x       "))    {    	non-compiled	[CE]  unclosed  character  literal	11	None	replace
65	[BUG]  [BUGGY]  if(str.startsWith( "-0x ")||  str.startsWith( "-0x   ")||  str.startsWith( "-0x   ")||  str.startsWith( "-0x   ")||  str.startsWith( "-0x   "))  {  [CE]  unclosed  character  literal  [FE]            AssertionError      [CONTEXT]      public  static  Number  createNumber(String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {  return  null;  }  if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(     "A  blank  string  is  not  a  valid  number     ");  }  if  (str.startsWith(     "--     "))  {  return  null;  }      [BUGGY]  if(str.startsWith( "-0x ")||  str.startsWith( "-0x   ")||  str.startsWith( "-0x   ")||  str.startsWith( "-0x   ")||  str.startsWith( "-0x   "))  {  [BUGGY]      int  hexDigits  =  str.length()  -  2;  //  drop  0x  if  (str.startsWith(     "-     "))  {  //  drop  -  hexDigits--;  }  if  (hexDigits  >  8)  {  //  too  many  for  an  int  return  createLong(str);  }  return  createInteger(str);  }  char  lastChar  =  str.charAt(str.length()  -  1);  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  	projects/Lang7/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.5773502691896258	455	455	1	replace	if(str.startsWith( "-0x ")||  str.startsWith( "-0x   ")||  str.startsWith( "-0x   ")||  str.startsWith( "-0x   ")||  str.startsWith( "-0x   "))  {	  if(str.startsWith(   ".0x   ")||    str.startsWith(   ".0x   ")||    str.startsWith(   ".0x   ")||    str.startsWith(   ".0x   ")||    str.startsWith(   ".0x   "))    {    	non-compiled	[CE]  unclosed  character  literal	29	None	replace
66	[BUG]  [BUGGY]  if(str.startsWith( ".0 ")||  str.startsWith( ".0x ")||  str.startsWith( ".0x ")||  str.startsWith( ".0x ")||  str.startsWith( ".0x "))  {  [CE]  unclosed  character  literal  [FE]              AssertionError      [CONTEXT]      public  static  Number  createNumber(String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {  return  null;  }  if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(     "A  blank  string  is  not  a  valid  number     ");  }  if  (str.startsWith(     "--     "))  {  return  null;  }      [BUGGY]  if(str.startsWith( ".0 ")||  str.startsWith( ".0x ")||  str.startsWith( ".0x ")||  str.startsWith( ".0x ")||  str.startsWith( ".0x "))  {  [BUGGY]      int  hexDigits  =  str.length()  -  2;  //  drop  0x  if  (str.startsWith(     "-     "))  {  //  drop  -  hexDigits--;  }  if  (hexDigits  >  8)  {  //  too  many  for  an  int  return  createLong(str);  }  return  createInteger(str);  }  char  lastChar  =  str.charAt(str.length()  -  1);  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  	projects/Lang7/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.5773502691896258	455	455	1	replace	if(str.startsWith( ".0 ")||  str.startsWith( ".0x ")||  str.startsWith( ".0x ")||  str.startsWith( ".0x ")||  str.startsWith( ".0x "))  {	  if(str.startsWith(   ".0x   ")||    str.startsWith(   ".0x   ")||    str.startsWith(   ".0x   ")||    str.startsWith(   ".0x   ")||    str.startsWith(   ".0x   "))    {    	non-compiled	[CE]  unclosed  character  literal	29	None	replace
67	[BUG]  [BUGGY]  if(str.startsWith( ".0x ")||  str.startsWith( ".0x ")||  str.startsWith( ".0x ")||  str.startsWith( ".0x ")||  str.startsWith( ".0x ")||  str.startsWith( ".  [CE]  unclosed  character  literal  [FE]                AssertionError      [CONTEXT]      public  static  Number  createNumber(String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {  return  null;  }  if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(     "A  blank  string  is  not  a  valid  number     ");  }  if  (str.startsWith(     "--     "))  {  return  null;  }      [BUGGY]  if(str.startsWith( ".0x ")||  str.startsWith( ".0x ")||  str.startsWith( ".0x ")||  str.startsWith( ".0x ")||  str.startsWith( ".0x ")||  str.startsWith( ".  [BUGGY]      int  hexDigits  =  str.length()  -  2;  //  drop  0x  if  (str.startsWith(     "-     "))  {  //  drop  -  hexDigits--;  }  if  (hexDigits  >  8)  {  //  too  many  for  an  int  return  createLong(str);  }  return  createInteger(str);  }  char  lastChar  =  str.charAt(str.length()  -  1);  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  	projects/Lang7/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.5773502691896258	455	455	1	replace	if(str.startsWith( ".0x ")||  str.startsWith( ".0x ")||  str.startsWith( ".0x ")||  str.startsWith( ".0x ")||  str.startsWith( ".0x ")||  str.startsWith( ".	  if(str.startsWith(   ".0x   ")||    str.startsWith(   ".0x   ")||    str.startsWith(   ".0x   ")||    str.startsWith(   ".0x   ")||    str.startsWith(   ".0x   "))    {    	non-compiled	[CE]  unclosed  character  literal	29	None	replace
68	[BUG]  [BUGGY]  int  hexDigits  =  str.indexOf('.');  [CE]  unclosed  character  literal  [FE]            AssertionError      [CONTEXT]      public  static  Number  createNumber(String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {  return  null;  }  if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(     "A  blank  string  is  not  a  valid  number     ");  }  if  (str.startsWith(     "--     "))  {  return  null;  }      [BUGGY]  int  hexDigits  =  str.indexOf('.');  [BUGGY]      if  (str.startsWith(     "0x     ")  ||  str.startsWith(     "-0x     ")  ||  str.startsWith(     "0X     ")  ||  str.startsWith(     "-0X     "))  {  int  hexDigits  =  str.length()  -  2;  //  drop  0x  if  (str.startsWith(     "-     "))  {  //  drop  -  hexDigits--;  }  if  (hexDigits  >  8)  {  //  too  many  for  an  int  return  createLong(str);  }  return  createInteger(str);  }  char  lastChar  =  str.charAt(str.length()  -  1);  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  	projects/Lang7/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.5773502691896258	455	455	1	replace	int  hexDigits  =  str.indexOf('.');	  int    hexDigits    =    str.lastIndexOf(   ".-   ");    	non-compiled	[CE]  unclosed  character  literal	38	None	replace
69	[BUG]  [BUGGY]  if(str.startsWith( "-0x ")||  str.startsWith( "-0x   ")||  str.startsWith( "-0x   ")||  str.startsWith( "-0x   "))  {  [CE]  unclosed  character  literal  [FE]              AssertionError      [CONTEXT]      public  static  Number  createNumber(String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {  return  null;  }  if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(     "A  blank  string  is  not  a  valid  number     ");  }  if  (str.startsWith(     "--     "))  {  return  null;  }      [BUGGY]  if(str.startsWith( "-0x ")||  str.startsWith( "-0x   ")||  str.startsWith( "-0x   ")||  str.startsWith( "-0x   "))  {  [BUGGY]      int  hexDigits  =  str.length()  -  2;  //  drop  0x  if  (str.startsWith(     "-     "))  {  //  drop  -  hexDigits--;  }  if  (hexDigits  >  8)  {  //  too  many  for  an  int  return  createLong(str);  }  return  createInteger(str);  }  char  lastChar  =  str.charAt(str.length()  -  1);  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  	projects/Lang7/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.5773502691896258	455	455	1	replace	if(str.startsWith( "-0x ")||  str.startsWith( "-0x   ")||  str.startsWith( "-0x   ")||  str.startsWith( "-0x   "))  {	  if(str.startsWith(   ".0x   ")||    str.startsWith(   ".0x   ")||    str.startsWith(   ".0x   ")||    str.startsWith(   ".0x   "))    {    	non-compiled	[CE]  unclosed  character  literal	30	None	replace
70	[BUG]  [BUGGY]  char  hexDigits  =  str.length()  +  2;  [CE]  unclosed  character  literal  [FE]              AssertionError      [CONTEXT]      public  static  Number  createNumber(String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {  return  null;  }  if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(     "A  blank  string  is  not  a  valid  number     ");  }  if  (str.startsWith(     "--     "))  {  return  null;  }      [BUGGY]  char  hexDigits  =  str.length()  +  2;  [BUGGY]      if  (str.startsWith(     "0x     ")  ||  str.startsWith(     "-0x     ")  ||  str.startsWith(     "0X     ")  ||  str.startsWith(     "-0X     "))  {  int  hexDigits  =  str.length()  -  2;  //  drop  0x  if  (str.startsWith(     "-     "))  {  //  drop  -  hexDigits--;  }  if  (hexDigits  >  8)  {  //  too  many  for  an  int  return  createLong(str);  }  return  createInteger(str);  }  char  lastChar  =  str.charAt(str.length()  -  1);  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  	projects/Lang7/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.5773502691896258	455	455	1	replace	char  hexDigits  =  str.length()  +  2;	  char    hexDigits    =    str.length();    	non-compiled	[CE]  unclosed  character  literal	7	None	replace
71	[BUG]  [BUGGY]  int  hexDigits  =  str.indexOf('-')+  1;  [CE]  unclosed  character  literal  [FE]              AssertionError      [CONTEXT]      public  static  Number  createNumber(String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {  return  null;  }  if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(     "A  blank  string  is  not  a  valid  number     ");  }  if  (str.startsWith(     "--     "))  {  return  null;  }      [BUGGY]  int  hexDigits  =  str.indexOf('-')+  1;  [BUGGY]      if  (str.startsWith(     "0x     ")  ||  str.startsWith(     "-0x     ")  ||  str.startsWith(     "0X     ")  ||  str.startsWith(     "-0X     "))  {  int  hexDigits  =  str.length()  -  2;  //  drop  0x  if  (str.startsWith(     "-     "))  {  //  drop  -  hexDigits--;  }  if  (hexDigits  >  8)  {  //  too  many  for  an  int  return  createLong(str);  }  return  createInteger(str);  }  char  lastChar  =  str.charAt(str.length()  -  1);  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  	projects/Lang7/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.5773502691896258	455	455	1	replace	int  hexDigits  =  str.indexOf('-')+  1;	  int    hexDigits    =    str.indexOf(   "-   ");    	non-compiled	[CE]  unclosed  character  literal	10	None	replace
72	[BUG]  [BUGGY]  int  hexDigits  =  str.indexOf('-',  0);  [CE]  unclosed  character  literal  [FE]            AssertionError      [CONTEXT]      public  static  Number  createNumber(String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {  return  null;  }  if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(     "A  blank  string  is  not  a  valid  number     ");  }  if  (str.startsWith(     "--     "))  {  return  null;  }      [BUGGY]  int  hexDigits  =  str.indexOf('-',  0);  [BUGGY]      if  (str.startsWith(     "0x     ")  ||  str.startsWith(     "-0x     ")  ||  str.startsWith(     "0X     ")  ||  str.startsWith(     "-0X     "))  {  int  hexDigits  =  str.length()  -  2;  //  drop  0x  if  (str.startsWith(     "-     "))  {  //  drop  -  hexDigits--;  }  if  (hexDigits  >  8)  {  //  too  many  for  an  int  return  createLong(str);  }  return  createInteger(str);  }  char  lastChar  =  str.charAt(str.length()  -  1);  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  	projects/Lang7/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.5773502691896258	455	455	1	replace	int  hexDigits  =  str.indexOf('-',  0);	  int    hexDigits    =    str.indexOf('-');    	non-compiled	[CE]  unclosed  character  literal	26	None	replace
73	[BUG]  [BUGGY]  int  hexDigits  =  str.indexOf('-',  16);  [CE]  unclosed  character  literal  [FE]              AssertionError      [CONTEXT]      public  static  Number  createNumber(String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {  return  null;  }  if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(     "A  blank  string  is  not  a  valid  number     ");  }  if  (str.startsWith(     "--     "))  {  return  null;  }      [BUGGY]  int  hexDigits  =  str.indexOf('-',  16);  [BUGGY]      if  (str.startsWith(     "0x     ")  ||  str.startsWith(     "-0x     ")  ||  str.startsWith(     "0X     ")  ||  str.startsWith(     "-0X     "))  {  int  hexDigits  =  str.length()  -  2;  //  drop  0x  if  (str.startsWith(     "-     "))  {  //  drop  -  hexDigits--;  }  if  (hexDigits  >  8)  {  //  too  many  for  an  int  return  createLong(str);  }  return  createInteger(str);  }  char  lastChar  =  str.charAt(str.length()  -  1);  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  	projects/Lang7/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.5773502691896258	455	455	1	replace	int  hexDigits  =  str.indexOf('-',  16);	  int    hexDigits    =    str.indexOf('-');    	non-compiled	[CE]  unclosed  character  literal	26	None	replace
74	[BUG]  [BUGGY]  Integer  str  =  createInteger(str.substring(0,  str.length()  -  2),  hexDigits);  [CE]  unclosed  character  literal  [FE]                      AssertionError      [CONTEXT]      public  static  Number  createNumber(String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {  return  null;  }  if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(     "A  blank  string  is  not  a  valid  number     ");  }  if  (str.startsWith(     "--     "))  {  return  null;  }      [BUGGY]  Integer  str  =  createInteger(str.substring(0,  str.length()  -  2),  hexDigits);  [BUGGY]      if  (str.startsWith(     "0x     ")  ||  str.startsWith(     "-0x     ")  ||  str.startsWith(     "0X     ")  ||  str.startsWith(     "-0X     "))  {  int  hexDigits  =  str.length()  -  2;  //  drop  0x  if  (str.startsWith(     "-     "))  {  //  drop  -  hexDigits--;  }  if  (hexDigits  >  8)  {  //  too  many  for  an  int  return  createLong(str);  }  return  createInteger(str);  }  char  lastChar  =  str.charAt(str.length()  -  1);  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  	projects/Lang7/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.5773502691896258	455	455	1	replace	Integer  str  =  createInteger(str.substring(0,  str.length()  -  2),  hexDigits);	  Integer    str    =    createInteger(str.substring(0,    str.length()    -    2));    	non-compiled	[CE]  unclosed  character  literal	36	None	replace
75	[BUG]  [BUGGY]  Integer  str  =  createInteger(str.charAt(0));  [CE]  unclosed  character  literal  [FE]                      AssertionError      [CONTEXT]      public  static  Number  createNumber(String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {  return  null;  }  if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(     "A  blank  string  is  not  a  valid  number     ");  }  if  (str.startsWith(     "--     "))  {  return  null;  }      [BUGGY]  Integer  str  =  createInteger(str.charAt(0));  [BUGGY]      if  (str.startsWith(     "0x     ")  ||  str.startsWith(     "-0x     ")  ||  str.startsWith(     "0X     ")  ||  str.startsWith(     "-0X     "))  {  int  hexDigits  =  str.length()  -  2;  //  drop  0x  if  (str.startsWith(     "-     "))  {  //  drop  -  hexDigits--;  }  if  (hexDigits  >  8)  {  //  too  many  for  an  int  return  createLong(str);  }  return  createInteger(str);  }  char  lastChar  =  str.charAt(str.length()  -  1);  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  	projects/Lang7/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.5773502691896258	455	455	1	replace	Integer  str  =  createInteger(str.charAt(0));	  Integer    str    =    createInteger(str.length()    -    1);    	non-compiled	[CE]  unclosed  character  literal	15	None	replace
76	[BUG]  [BUGGY]  if(str.startsWith( ".0x ")||  str.startsWith( ".0x ")||  str.startsWith( ".0x "))  {  [CE]  unclosed  character  literal  [FE]              AssertionError      [CONTEXT]      public  static  Number  createNumber(String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {  return  null;  }  if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(     "A  blank  string  is  not  a  valid  number     ");  }  if  (str.startsWith(     "--     "))  {  return  null;  }      [BUGGY]  if(str.startsWith( ".0x ")||  str.startsWith( ".0x ")||  str.startsWith( ".0x "))  {  [BUGGY]      int  hexDigits  =  str.length()  -  2;  //  drop  0x  if  (str.startsWith(     "-     "))  {  //  drop  -  hexDigits--;  }  if  (hexDigits  >  8)  {  //  too  many  for  an  int  return  createLong(str);  }  return  createInteger(str);  }  char  lastChar  =  str.charAt(str.length()  -  1);  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  	projects/Lang7/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.5773502691896258	455	455	1	replace	if(str.startsWith( ".0x ")||  str.startsWith( ".0x ")||  str.startsWith( ".0x "))  {	  if(str.startsWith(   "0x       ")||    str.startsWith(   "-0x       ")||    str.startsWith(   "-0x       "))    {    	non-compiled	[CE]  unclosed  character  literal	12	None	replace
77	[BUG]  [BUGGY]  if(str.startsWith( "0x ")||  str.startsWith( "-1x ")||  str.startsWith( "-1))  {  [CE]  unclosed  character  literal  [FE]                AssertionError      [CONTEXT]      public  static  Number  createNumber(String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {  return  null;  }  if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(     "A  blank  string  is  not  a  valid  number     ");  }  if  (str.startsWith(     "--     "))  {  return  null;  }      [BUGGY]  if(str.startsWith( "0x ")||  str.startsWith( "-1x ")||  str.startsWith( "-1))  {  [BUGGY]      int  hexDigits  =  str.length()  -  2;  //  drop  0x  if  (str.startsWith(     "-     "))  {  //  drop  -  hexDigits--;  }  if  (hexDigits  >  8)  {  //  too  many  for  an  int  return  createLong(str);  }  return  createInteger(str);  }  char  lastChar  =  str.charAt(str.length()  -  1);  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  	projects/Lang7/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.5773502691896258	455	455	1	replace	if(str.startsWith( "0x ")||  str.startsWith( "-1x ")||  str.startsWith( "-1))  {	  if(str.startsWith(   "0x       ")||    str.startsWith(   "-0x       ")||    str.startsWith(   "-0x       "))    {    	non-compiled	[CE]  unclosed  character  literal	12	None	replace
78	[BUG]  [BUGGY]  if(str.startsWith( "0x ")||  str.startsWith( "0x ")||  str.startsWith( "-1x ")||  str.startsWith( "-1))  {  [CE]  unclosed  character  literal  [FE]                AssertionError      [CONTEXT]      public  static  Number  createNumber(String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {  return  null;  }  if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(     "A  blank  string  is  not  a  valid  number     ");  }  if  (str.startsWith(     "--     "))  {  return  null;  }      [BUGGY]  if(str.startsWith( "0x ")||  str.startsWith( "0x ")||  str.startsWith( "-1x ")||  str.startsWith( "-1))  {  [BUGGY]      int  hexDigits  =  str.length()  -  2;  //  drop  0x  if  (str.startsWith(     "-     "))  {  //  drop  -  hexDigits--;  }  if  (hexDigits  >  8)  {  //  too  many  for  an  int  return  createLong(str);  }  return  createInteger(str);  }  char  lastChar  =  str.charAt(str.length()  -  1);  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  	projects/Lang7/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.5773502691896258	455	455	1	replace	if(str.startsWith( "0x ")||  str.startsWith( "0x ")||  str.startsWith( "-1x ")||  str.startsWith( "-1))  {	  if(str.startsWith(   "0x       ")||    str.startsWith(   "0x       ")||    str.startsWith(   "-0x       ")||    str.startsWith(   "-0x       "))    {    	non-compiled	[CE]  unclosed  character  literal	13	None	replace
79	[BUG]  [BUGGY]  Integer  str  =  createBigInteger(0);  [CE]  unclosed  character  literal  [FE]                  AssertionError      [CONTEXT]      public  static  Number  createNumber(String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {  return  null;  }  if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(     "A  blank  string  is  not  a  valid  number     ");  }  if  (str.startsWith(     "--     "))  {  return  null;  }      [BUGGY]  Integer  str  =  createBigInteger(0);  [BUGGY]      if  (str.startsWith(     "0x     ")  ||  str.startsWith(     "-0x     ")  ||  str.startsWith(     "0X     ")  ||  str.startsWith(     "-0X     "))  {  int  hexDigits  =  str.length()  -  2;  //  drop  0x  if  (str.startsWith(     "-     "))  {  //  drop  -  hexDigits--;  }  if  (hexDigits  >  8)  {  //  too  many  for  an  int  return  createLong(str);  }  return  createInteger(str);  }  char  lastChar  =  str.charAt(str.length()  -  1);  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  	projects/Lang7/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.5773502691896258	455	455	1	replace	Integer  str  =  createBigInteger(0);	  Integer    str    =    createInteger(0);    	non-compiled	[CE]  unclosed  character  literal	21	None	replace
80	[BUG]  [BUGGY]  Integer  str  =  createInteger(str.substring(0,  str.length()  -  1),  hexDigits);  [CE]  unclosed  character  literal  [FE]                    AssertionError      [CONTEXT]      public  static  Number  createNumber(String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {  return  null;  }  if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(     "A  blank  string  is  not  a  valid  number     ");  }  if  (str.startsWith(     "--     "))  {  return  null;  }      [BUGGY]  Integer  str  =  createInteger(str.substring(0,  str.length()  -  1),  hexDigits);  [BUGGY]      if  (str.startsWith(     "0x     ")  ||  str.startsWith(     "-0x     ")  ||  str.startsWith(     "0X     ")  ||  str.startsWith(     "-0X     "))  {  int  hexDigits  =  str.length()  -  2;  //  drop  0x  if  (str.startsWith(     "-     "))  {  //  drop  -  hexDigits--;  }  if  (hexDigits  >  8)  {  //  too  many  for  an  int  return  createLong(str);  }  return  createInteger(str);  }  char  lastChar  =  str.charAt(str.length()  -  1);  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  	projects/Lang7/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.5773502691896258	455	455	1	replace	Integer  str  =  createInteger(str.substring(0,  str.length()  -  1),  hexDigits);	  Integer    str    =    createInteger(str.substring(0,    str.length()    -    1));    	non-compiled	[CE]  unclosed  character  literal	35	None	replace
81	[BUG]  [BUGGY]  Integer  hexDigits  =  createBigInteger(0);  [CE]  unclosed  character  literal  [FE]                AssertionError      [CONTEXT]      public  static  Number  createNumber(String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {  return  null;  }  if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(     "A  blank  string  is  not  a  valid  number     ");  }  if  (str.startsWith(     "--     "))  {  return  null;  }      [BUGGY]  Integer  hexDigits  =  createBigInteger(0);  [BUGGY]      if  (str.startsWith(     "0x     ")  ||  str.startsWith(     "-0x     ")  ||  str.startsWith(     "0X     ")  ||  str.startsWith(     "-0X     "))  {  int  hexDigits  =  str.length()  -  2;  //  drop  0x  if  (str.startsWith(     "-     "))  {  //  drop  -  hexDigits--;  }  if  (hexDigits  >  8)  {  //  too  many  for  an  int  return  createLong(str);  }  return  createInteger(str);  }  char  lastChar  =  str.charAt(str.length()  -  1);  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  	projects/Lang7/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.5773502691896258	455	455	1	replace	Integer  hexDigits  =  createBigInteger(0);	  Integer    hexDigits    =    createInteger(0);    	non-compiled	[CE]  unclosed  character  literal	24	None	replace
82	[BUG]  [BUGGY]  Integer  str  =  createInteger(str.intValue()  -  1);  [CE]  unclosed  character  literal  [FE]                AssertionError      [CONTEXT]      public  static  Number  createNumber(String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {  return  null;  }  if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(     "A  blank  string  is  not  a  valid  number     ");  }  if  (str.startsWith(     "--     "))  {  return  null;  }      [BUGGY]  Integer  str  =  createInteger(str.intValue()  -  1);  [BUGGY]      if  (str.startsWith(     "0x     ")  ||  str.startsWith(     "-0x     ")  ||  str.startsWith(     "0X     ")  ||  str.startsWith(     "-0X     "))  {  int  hexDigits  =  str.length()  -  2;  //  drop  0x  if  (str.startsWith(     "-     "))  {  //  drop  -  hexDigits--;  }  if  (hexDigits  >  8)  {  //  too  many  for  an  int  return  createLong(str);  }  return  createInteger(str);  }  char  lastChar  =  str.charAt(str.length()  -  1);  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  	projects/Lang7/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.5773502691896258	455	455	1	replace	Integer  str  =  createInteger(str.intValue()  -  1);	  Integer    str    =    createInteger(str.intValue());    	non-compiled	[CE]  unclosed  character  literal	20	None	replace
83	[BUG]  [BUGGY]  int  hexDigits  =  str.indexOf('.')/  3;  [CE]  unclosed  character  literal  [FE]                    AssertionError      [CONTEXT]      public  static  Number  createNumber(String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {  return  null;  }  if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(     "A  blank  string  is  not  a  valid  number     ");  }  if  (str.startsWith(     "--     "))  {  return  null;  }      [BUGGY]  int  hexDigits  =  str.indexOf('.')/  3;  [BUGGY]      if  (str.startsWith(     "0x     ")  ||  str.startsWith(     "-0x     ")  ||  str.startsWith(     "0X     ")  ||  str.startsWith(     "-0X     "))  {  int  hexDigits  =  str.length()  -  2;  //  drop  0x  if  (str.startsWith(     "-     "))  {  //  drop  -  hexDigits--;  }  if  (hexDigits  >  8)  {  //  too  many  for  an  int  return  createLong(str);  }  return  createInteger(str);  }  char  lastChar  =  str.charAt(str.length()  -  1);  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  	projects/Lang7/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.5773502691896258	455	455	1	replace	int  hexDigits  =  str.indexOf('.')/  3;	  int    hexDigits    =    str.indexOf('.')+    3;    	non-compiled	[CE]  unclosed  character  literal	3	None	replace
84	[BUG]  [BUGGY]  if(str.startsWith( ".0 ")||  str.startsWith( ".0 ")||  str.startsWith( ".0 ")||  str.startsWith( ".0 "))  {  [CE]  unclosed  character  literal  [FE]                AssertionError      [CONTEXT]      public  static  Number  createNumber(String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {  return  null;  }  if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(     "A  blank  string  is  not  a  valid  number     ");  }  if  (str.startsWith(     "--     "))  {  return  null;  }      [BUGGY]  if(str.startsWith( ".0 ")||  str.startsWith( ".0 ")||  str.startsWith( ".0 ")||  str.startsWith( ".0 "))  {  [BUGGY]      int  hexDigits  =  str.length()  -  2;  //  drop  0x  if  (str.startsWith(     "-     "))  {  //  drop  -  hexDigits--;  }  if  (hexDigits  >  8)  {  //  too  many  for  an  int  return  createLong(str);  }  return  createInteger(str);  }  char  lastChar  =  str.charAt(str.length()  -  1);  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  	projects/Lang7/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.5773502691896258	455	455	1	replace	if(str.startsWith( ".0 ")||  str.startsWith( ".0 ")||  str.startsWith( ".0 ")||  str.startsWith( ".0 "))  {	  if(str.startsWith(   "0x       ")||    str.startsWith(   "0x       ")||    str.startsWith(   "-0x       ")||    str.startsWith(   "-0x       "))    {    	non-compiled	[CE]  unclosed  character  literal	13	None	replace
85	[BUG]  [BUGGY]  Integer  str  =  createInteger(str,  str.length());  [CE]  unclosed  character  literal  [FE]                          AssertionError      [CONTEXT]      public  static  Number  createNumber(String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {  return  null;  }  if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(     "A  blank  string  is  not  a  valid  number     ");  }  if  (str.startsWith(     "--     "))  {  return  null;  }      [BUGGY]  Integer  str  =  createInteger(str,  str.length());  [BUGGY]      if  (str.startsWith(     "0x     ")  ||  str.startsWith(     "-0x     ")  ||  str.startsWith(     "0X     ")  ||  str.startsWith(     "-0X     "))  {  int  hexDigits  =  str.length()  -  2;  //  drop  0x  if  (str.startsWith(     "-     "))  {  //  drop  -  hexDigits--;  }  if  (hexDigits  >  8)  {  //  too  many  for  an  int  return  createLong(str);  }  return  createInteger(str);  }  char  lastChar  =  str.charAt(str.length()  -  1);  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  	projects/Lang7/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.5773502691896258	455	455	1	replace	Integer  str  =  createInteger(str,  str.length());	  Integer    str    =    createInteger(str.length()    +    2);    	non-compiled	[CE]  unclosed  character  literal	17	None	replace
86	[BUG]  [BUGGY]  int  hexDigits  =  str.indexOf('-',  -1);  [CE]  unclosed  character  literal  [FE]            AssertionError      [CONTEXT]      public  static  Number  createNumber(String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {  return  null;  }  if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(     "A  blank  string  is  not  a  valid  number     ");  }  if  (str.startsWith(     "--     "))  {  return  null;  }      [BUGGY]  int  hexDigits  =  str.indexOf('-',  -1);  [BUGGY]      if  (str.startsWith(     "0x     ")  ||  str.startsWith(     "-0x     ")  ||  str.startsWith(     "0X     ")  ||  str.startsWith(     "-0X     "))  {  int  hexDigits  =  str.length()  -  2;  //  drop  0x  if  (str.startsWith(     "-     "))  {  //  drop  -  hexDigits--;  }  if  (hexDigits  >  8)  {  //  too  many  for  an  int  return  createLong(str);  }  return  createInteger(str);  }  char  lastChar  =  str.charAt(str.length()  -  1);  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  	projects/Lang7/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.5773502691896258	455	455	1	replace	int  hexDigits  =  str.indexOf('-',  -1);	  int    hexDigits    =    str.indexOf('-');    	non-compiled	[CE]  unclosed  character  literal	26	None	replace
87	[BUG]  [BUGGY]  Integer  hexDigits  =  createBigInteger(1);  [CE]  unclosed  character  literal  [FE]                AssertionError      [CONTEXT]      public  static  Number  createNumber(String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {  return  null;  }  if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(     "A  blank  string  is  not  a  valid  number     ");  }  if  (str.startsWith(     "--     "))  {  return  null;  }      [BUGGY]  Integer  hexDigits  =  createBigInteger(1);  [BUGGY]      if  (str.startsWith(     "0x     ")  ||  str.startsWith(     "-0x     ")  ||  str.startsWith(     "0X     ")  ||  str.startsWith(     "-0X     "))  {  int  hexDigits  =  str.length()  -  2;  //  drop  0x  if  (str.startsWith(     "-     "))  {  //  drop  -  hexDigits--;  }  if  (hexDigits  >  8)  {  //  too  many  for  an  int  return  createLong(str);  }  return  createInteger(str);  }  char  lastChar  =  str.charAt(str.length()  -  1);  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  	projects/Lang7/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.5773502691896258	455	455	1	replace	Integer  hexDigits  =  createBigInteger(1);	  Integer    hexDigits    =    createInteger(0);    	non-compiled	[CE]  unclosed  character  literal	24	None	replace
88	[BUG]  [BUGGY]  Integer  str  =  createInteger(str.substring(0,  str.length()  1));  [CE]  unclosed  character  literal  [FE]                      AssertionError      [CONTEXT]      public  static  Number  createNumber(String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {  return  null;  }  if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(     "A  blank  string  is  not  a  valid  number     ");  }  if  (str.startsWith(     "--     "))  {  return  null;  }      [BUGGY]  Integer  str  =  createInteger(str.substring(0,  str.length()  1));  [BUGGY]      if  (str.startsWith(     "0x     ")  ||  str.startsWith(     "-0x     ")  ||  str.startsWith(     "0X     ")  ||  str.startsWith(     "-0X     "))  {  int  hexDigits  =  str.length()  -  2;  //  drop  0x  if  (str.startsWith(     "-     "))  {  //  drop  -  hexDigits--;  }  if  (hexDigits  >  8)  {  //  too  many  for  an  int  return  createLong(str);  }  return  createInteger(str);  }  char  lastChar  =  str.charAt(str.length()  -  1);  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  	projects/Lang7/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.5773502691896258	455	455	1	replace	Integer  str  =  createInteger(str.substring(0,  str.length()  1));	  Integer    str    =    createInteger(str.substring(0,    str.length()    -    2));    	non-compiled	[CE]  unclosed  character  literal	36	None	replace
89	[BUG]  [BUGGY]  if(str.startsWith( ".0 ")||  str.startsWith( ".0 ")||  str.startsWith( ".0 ")||  str.startsWith( ".0 ")||  str.startsWith( ".0 "))  {  [CE]  unclosed  character  literal  [FE]            AssertionError      [CONTEXT]      public  static  Number  createNumber(String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {  return  null;  }  if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(     "A  blank  string  is  not  a  valid  number     ");  }  if  (str.startsWith(     "--     "))  {  return  null;  }      [BUGGY]  if(str.startsWith( ".0 ")||  str.startsWith( ".0 ")||  str.startsWith( ".0 ")||  str.startsWith( ".0 ")||  str.startsWith( ".0 "))  {  [BUGGY]      int  hexDigits  =  str.length()  -  2;  //  drop  0x  if  (str.startsWith(     "-     "))  {  //  drop  -  hexDigits--;  }  if  (hexDigits  >  8)  {  //  too  many  for  an  int  return  createLong(str);  }  return  createInteger(str);  }  char  lastChar  =  str.charAt(str.length()  -  1);  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  	projects/Lang7/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.5773502691896258	455	455	1	replace	if(str.startsWith( ".0 ")||  str.startsWith( ".0 ")||  str.startsWith( ".0 ")||  str.startsWith( ".0 ")||  str.startsWith( ".0 "))  {	  if(str.startsWith(   "0x       ")||    str.startsWith(   "-1x       ")||    str.startsWith(   "-1x       ")||    str.startsWith(   "-1x       "))    {    	non-compiled	[CE]  unclosed  character  literal	11	None	replace
90	[BUG]  [BUGGY]  if(str.startsWith( "0x ")||  str.startsWith( ".0x ")||  str.startsWith( ".0x ")||  str.startsWith( ".0x ")||  str.startsWith( ".0x "))  {  [CE]  unclosed  character  literal  [FE]              AssertionError      [CONTEXT]      public  static  Number  createNumber(String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {  return  null;  }  if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(     "A  blank  string  is  not  a  valid  number     ");  }  if  (str.startsWith(     "--     "))  {  return  null;  }      [BUGGY]  if(str.startsWith( "0x ")||  str.startsWith( ".0x ")||  str.startsWith( ".0x ")||  str.startsWith( ".0x ")||  str.startsWith( ".0x "))  {  [BUGGY]      int  hexDigits  =  str.length()  -  2;  //  drop  0x  if  (str.startsWith(     "-     "))  {  //  drop  -  hexDigits--;  }  if  (hexDigits  >  8)  {  //  too  many  for  an  int  return  createLong(str);  }  return  createInteger(str);  }  char  lastChar  =  str.charAt(str.length()  -  1);  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  	projects/Lang7/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.5773502691896258	455	455	1	replace	if(str.startsWith( "0x ")||  str.startsWith( ".0x ")||  str.startsWith( ".0x ")||  str.startsWith( ".0x ")||  str.startsWith( ".0x "))  {	  if(str.startsWith(   "0x       ")||    str.startsWith(   "-1x       ")||    str.startsWith(   "-1x       ")||    str.startsWith(   "-1x       "))    {    	non-compiled	[CE]  unclosed  character  literal	11	None	replace
91	[BUG]  [BUGGY]  if(str.startsWith( ".0 ")||  str.startsWith( ".0 ")||  str.startsWith( ".0x ")||  str.startsWith( ".0x "))  {  [CE]  unclosed  character  literal  [FE]              AssertionError      [CONTEXT]      public  static  Number  createNumber(String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {  return  null;  }  if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(     "A  blank  string  is  not  a  valid  number     ");  }  if  (str.startsWith(     "--     "))  {  return  null;  }      [BUGGY]  if(str.startsWith( ".0 ")||  str.startsWith( ".0 ")||  str.startsWith( ".0x ")||  str.startsWith( ".0x "))  {  [BUGGY]      int  hexDigits  =  str.length()  -  2;  //  drop  0x  if  (str.startsWith(     "-     "))  {  //  drop  -  hexDigits--;  }  if  (hexDigits  >  8)  {  //  too  many  for  an  int  return  createLong(str);  }  return  createInteger(str);  }  char  lastChar  =  str.charAt(str.length()  -  1);  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  	projects/Lang7/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.5773502691896258	455	455	1	replace	if(str.startsWith( ".0 ")||  str.startsWith( ".0 ")||  str.startsWith( ".0x ")||  str.startsWith( ".0x "))  {	  if(str.startsWith(   ".0x   ")||    str.startsWith(   ".0x   ")||    str.startsWith(   ".0x   ")||    str.startsWith(   ".0x   "))    {    	non-compiled	[CE]  unclosed  character  literal	30	None	replace
92	[BUG]  [BUGGY]  Integer  hexDigits  =  str.lastIndexOf('.');  [CE]  unclosed  character  literal  [FE]                AssertionError      [CONTEXT]      public  static  Number  createNumber(String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {  return  null;  }  if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(     "A  blank  string  is  not  a  valid  number     ");  }  if  (str.startsWith(     "--     "))  {  return  null;  }      [BUGGY]  Integer  hexDigits  =  str.lastIndexOf('.');  [BUGGY]      if  (str.startsWith(     "0x     ")  ||  str.startsWith(     "-0x     ")  ||  str.startsWith(     "0X     ")  ||  str.startsWith(     "-0X     "))  {  int  hexDigits  =  str.length()  -  2;  //  drop  0x  if  (str.startsWith(     "-     "))  {  //  drop  -  hexDigits--;  }  if  (hexDigits  >  8)  {  //  too  many  for  an  int  return  createLong(str);  }  return  createInteger(str);  }  char  lastChar  =  str.charAt(str.length()  -  1);  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  	projects/Lang7/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.5773502691896258	455	455	1	replace	Integer  hexDigits  =  str.lastIndexOf('.');	  Integer    hexDigits    =    str.length();    	non-compiled	[CE]  unclosed  character  literal	8	None	replace
93	[BUG]  [BUGGY]  Integer  str  =  createInteger(str.substring(2,  str.length()));  [CE]  unclosed  character  literal  [FE]              AssertionError      [CONTEXT]      public  static  Number  createNumber(String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {  return  null;  }  if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(     "A  blank  string  is  not  a  valid  number     ");  }  if  (str.startsWith(     "--     "))  {  return  null;  }      [BUGGY]  Integer  str  =  createInteger(str.substring(2,  str.length()));  [BUGGY]      if  (str.startsWith(     "0x     ")  ||  str.startsWith(     "-0x     ")  ||  str.startsWith(     "0X     ")  ||  str.startsWith(     "-0X     "))  {  int  hexDigits  =  str.length()  -  2;  //  drop  0x  if  (str.startsWith(     "-     "))  {  //  drop  -  hexDigits--;  }  if  (hexDigits  >  8)  {  //  too  many  for  an  int  return  createLong(str);  }  return  createInteger(str);  }  char  lastChar  =  str.charAt(str.length()  -  1);  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  	projects/Lang7/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.5773502691896258	455	455	1	replace	Integer  str  =  createInteger(str.substring(2,  str.length()));	  Integer    str    =    createInteger(str.substring(1));    	non-compiled	[CE]  unclosed  character  literal	19	None	replace
94	[BUG]  [BUGGY]  Integer  str  =  createInteger(str.substring(2,  str.length()  -  1));  [CE]  unclosed  character  literal  [FE]                AssertionError      [CONTEXT]      public  static  Number  createNumber(String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {  return  null;  }  if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(     "A  blank  string  is  not  a  valid  number     ");  }  if  (str.startsWith(     "--     "))  {  return  null;  }      [BUGGY]  Integer  str  =  createInteger(str.substring(2,  str.length()  -  1));  [BUGGY]      if  (str.startsWith(     "0x     ")  ||  str.startsWith(     "-0x     ")  ||  str.startsWith(     "0X     ")  ||  str.startsWith(     "-0X     "))  {  int  hexDigits  =  str.length()  -  2;  //  drop  0x  if  (str.startsWith(     "-     "))  {  //  drop  -  hexDigits--;  }  if  (hexDigits  >  8)  {  //  too  many  for  an  int  return  createLong(str);  }  return  createInteger(str);  }  char  lastChar  =  str.charAt(str.length()  -  1);  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  	projects/Lang7/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.5773502691896258	455	455	1	replace	Integer  str  =  createInteger(str.substring(2,  str.length()  -  1));	  Integer    str    =    createInteger(str.substring(1));    	non-compiled	[CE]  unclosed  character  literal	19	None	replace
95	[BUG]  [BUGGY]  Integer  hexDigits  =  createInteger(str.substring(0,  str.length()  1));  [CE]  unclosed  character  literal  [FE]            AssertionError      [CONTEXT]      public  static  Number  createNumber(String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {  return  null;  }  if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(     "A  blank  string  is  not  a  valid  number     ");  }  if  (str.startsWith(     "--     "))  {  return  null;  }      [BUGGY]  Integer  hexDigits  =  createInteger(str.substring(0,  str.length()  1));  [BUGGY]      if  (str.startsWith(     "0x     ")  ||  str.startsWith(     "-0x     ")  ||  str.startsWith(     "0X     ")  ||  str.startsWith(     "-0X     "))  {  int  hexDigits  =  str.length()  -  2;  //  drop  0x  if  (str.startsWith(     "-     "))  {  //  drop  -  hexDigits--;  }  if  (hexDigits  >  8)  {  //  too  many  for  an  int  return  createLong(str);  }  return  createInteger(str);  }  char  lastChar  =  str.charAt(str.length()  -  1);  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  	projects/Lang7/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.5773502691896258	455	455	1	replace	Integer  hexDigits  =  createInteger(str.substring(0,  str.length()  1));	  Integer    hexDigits    =    createInteger(str.substring(0,    str.length()    -    2));    	non-compiled	[CE]  unclosed  character  literal	37	None	replace
96	[BUG]  [BUGGY]  int  hexDigits  =  createInteger(str.substring(0,  str.length()));  [CE]  unclosed  character  literal  [FE]              AssertionError      [CONTEXT]      public  static  Number  createNumber(String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {  return  null;  }  if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(     "A  blank  string  is  not  a  valid  number     ");  }  if  (str.startsWith(     "--     "))  {  return  null;  }      [BUGGY]  int  hexDigits  =  createInteger(str.substring(0,  str.length()));  [BUGGY]      if  (str.startsWith(     "0x     ")  ||  str.startsWith(     "-0x     ")  ||  str.startsWith(     "0X     ")  ||  str.startsWith(     "-0X     "))  {  int  hexDigits  =  str.length()  -  2;  //  drop  0x  if  (str.startsWith(     "-     "))  {  //  drop  -  hexDigits--;  }  if  (hexDigits  >  8)  {  //  too  many  for  an  int  return  createLong(str);  }  return  createInteger(str);  }  char  lastChar  =  str.charAt(str.length()  -  1);  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  	projects/Lang7/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.5773502691896258	455	455	1	replace	int  hexDigits  =  createInteger(str.substring(0,  str.length()));	  Integer    hexDigits    =    createInteger(str.substring(0,    str.length()    -    2));    	non-compiled	[CE]  unclosed  character  literal	37	None	replace
97	[BUG]  [BUGGY]  if(str.startsWith( "0x ")||  str.startsWith( ".0x ")||  str.startsWith( ".0x "))  {  [CE]  unclosed  character  literal  [FE]              AssertionError      [CONTEXT]      public  static  Number  createNumber(String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {  return  null;  }  if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(     "A  blank  string  is  not  a  valid  number     ");  }  if  (str.startsWith(     "--     "))  {  return  null;  }      [BUGGY]  if(str.startsWith( "0x ")||  str.startsWith( ".0x ")||  str.startsWith( ".0x "))  {  [BUGGY]      int  hexDigits  =  str.length()  -  2;  //  drop  0x  if  (str.startsWith(     "-     "))  {  //  drop  -  hexDigits--;  }  if  (hexDigits  >  8)  {  //  too  many  for  an  int  return  createLong(str);  }  return  createInteger(str);  }  char  lastChar  =  str.charAt(str.length()  -  1);  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  	projects/Lang7/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.5773502691896258	455	455	1	replace	if(str.startsWith( "0x ")||  str.startsWith( ".0x ")||  str.startsWith( ".0x "))  {	  if(str.startsWith(   "0x       ")||    str.startsWith(   "-0x       ")||    str.startsWith(   "-0x       "))    {    	non-compiled	[CE]  unclosed  character  literal	12	None	replace
98	[BUG]  [BUGGY]  if(str.startsWith( ".0 ")||  str.startsWith( ".0 ")||  str.startsWith( ".0 "))  {  [CE]  unclosed  character  literal  [FE]                AssertionError      [CONTEXT]      public  static  Number  createNumber(String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {  return  null;  }  if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(     "A  blank  string  is  not  a  valid  number     ");  }  if  (str.startsWith(     "--     "))  {  return  null;  }      [BUGGY]  if(str.startsWith( ".0 ")||  str.startsWith( ".0 ")||  str.startsWith( ".0 "))  {  [BUGGY]      int  hexDigits  =  str.length()  -  2;  //  drop  0x  if  (str.startsWith(     "-     "))  {  //  drop  -  hexDigits--;  }  if  (hexDigits  >  8)  {  //  too  many  for  an  int  return  createLong(str);  }  return  createInteger(str);  }  char  lastChar  =  str.charAt(str.length()  -  1);  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  	projects/Lang7/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.5773502691896258	455	455	1	replace	if(str.startsWith( ".0 ")||  str.startsWith( ".0 ")||  str.startsWith( ".0 "))  {	  if(str.startsWith(   "0x       ")||    str.startsWith(   "-0x       ")||    str.startsWith(   "-0x       "))    {    	non-compiled	[CE]  unclosed  character  literal	12	None	replace
99	[BUG]  [BUGGY]  int  hexDigits  =  str.indexOf('.',  4);  [CE]  unclosed  character  literal  [FE]                AssertionError      [CONTEXT]      public  static  Number  createNumber(String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {  return  null;  }  if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(     "A  blank  string  is  not  a  valid  number     ");  }  if  (str.startsWith(     "--     "))  {  return  null;  }      [BUGGY]  int  hexDigits  =  str.indexOf('.',  4);  [BUGGY]      if  (str.startsWith(     "0x     ")  ||  str.startsWith(     "-0x     ")  ||  str.startsWith(     "0X     ")  ||  str.startsWith(     "-0X     "))  {  int  hexDigits  =  str.length()  -  2;  //  drop  0x  if  (str.startsWith(     "-     "))  {  //  drop  -  hexDigits--;  }  if  (hexDigits  >  8)  {  //  too  many  for  an  int  return  createLong(str);  }  return  createInteger(str);  }  char  lastChar  =  str.charAt(str.length()  -  1);  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  	projects/Lang7/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.5773502691896258	455	455	1	replace	int  hexDigits  =  str.indexOf('.',  4);	  int    hexDigits    =    str.indexOf('.')/    1;    	non-compiled	[CE]  unclosed  character  literal	39	None	replace
100	[BUG]  [BUGGY]  int  hexDigits  =  str.indexOf('.',  16)/  1;  [CE]  unclosed  character  literal  [FE]                  AssertionError      [CONTEXT]      public  static  Number  createNumber(String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {  return  null;  }  if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(     "A  blank  string  is  not  a  valid  number     ");  }  if  (str.startsWith(     "--     "))  {  return  null;  }      [BUGGY]  int  hexDigits  =  str.indexOf('.',  16)/  1;  [BUGGY]      if  (str.startsWith(     "0x     ")  ||  str.startsWith(     "-0x     ")  ||  str.startsWith(     "0X     ")  ||  str.startsWith(     "-0X     "))  {  int  hexDigits  =  str.length()  -  2;  //  drop  0x  if  (str.startsWith(     "-     "))  {  //  drop  -  hexDigits--;  }  if  (hexDigits  >  8)  {  //  too  many  for  an  int  return  createLong(str);  }  return  createInteger(str);  }  char  lastChar  =  str.charAt(str.length()  -  1);  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  	projects/Lang7/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.5773502691896258	455	455	1	replace	int  hexDigits  =  str.indexOf('.',  16)/  1;	  int    hexDigits    =    str.indexOf('.')/    1;    	non-compiled	[CE]  unclosed  character  literal	39	None	replace
101	[BUG]  [BUGGY]  Integer  hexDigits  =  createInteger(str.substring(2,  str.length()));  [CE]  unclosed  character  literal  [FE]              AssertionError      [CONTEXT]      public  static  Number  createNumber(String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {  return  null;  }  if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(     "A  blank  string  is  not  a  valid  number     ");  }  if  (str.startsWith(     "--     "))  {  return  null;  }      [BUGGY]  Integer  hexDigits  =  createInteger(str.substring(2,  str.length()));  [BUGGY]      if  (str.startsWith(     "0x     ")  ||  str.startsWith(     "-0x     ")  ||  str.startsWith(     "0X     ")  ||  str.startsWith(     "-0X     "))  {  int  hexDigits  =  str.length()  -  2;  //  drop  0x  if  (str.startsWith(     "-     "))  {  //  drop  -  hexDigits--;  }  if  (hexDigits  >  8)  {  //  too  many  for  an  int  return  createLong(str);  }  return  createInteger(str);  }  char  lastChar  =  str.charAt(str.length()  -  1);  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  	projects/Lang7/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.5773502691896258	455	455	1	replace	Integer  hexDigits  =  createInteger(str.substring(2,  str.length()));	  Integer    hexDigits    =    createInteger(str.substring(1));    	non-compiled	[CE]  unclosed  character  literal	28	None	replace
102	[BUG]  [BUGGY]  if(str.startsWith( ".0 ")||  str.startsWith( ".0 ")||  str.startsWith( ".0x ")||  str.startsWith( ".0x ")||  str.startsWith( ".0x "))  {  [CE]  unclosed  character  literal  [FE]            AssertionError      [CONTEXT]      public  static  Number  createNumber(String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {  return  null;  }  if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(     "A  blank  string  is  not  a  valid  number     ");  }  if  (str.startsWith(     "--     "))  {  return  null;  }      [BUGGY]  if(str.startsWith( ".0 ")||  str.startsWith( ".0 ")||  str.startsWith( ".0x ")||  str.startsWith( ".0x ")||  str.startsWith( ".0x "))  {  [BUGGY]      int  hexDigits  =  str.length()  -  2;  //  drop  0x  if  (str.startsWith(     "-     "))  {  //  drop  -  hexDigits--;  }  if  (hexDigits  >  8)  {  //  too  many  for  an  int  return  createLong(str);  }  return  createInteger(str);  }  char  lastChar  =  str.charAt(str.length()  -  1);  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  	projects/Lang7/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.5773502691896258	455	455	1	replace	if(str.startsWith( ".0 ")||  str.startsWith( ".0 ")||  str.startsWith( ".0x ")||  str.startsWith( ".0x ")||  str.startsWith( ".0x "))  {	  if(str.startsWith(   ".0x   ")||    str.startsWith(   ".0x   ")||    str.startsWith(   ".0x   ")||    str.startsWith(   ".0x   ")||    str.startsWith(   ".0x   "))    {    	non-compiled	[CE]  unclosed  character  literal	29	None	replace
103	[BUG]  [BUGGY]  if(str.startsWith( "0x ")||  str.startsWith( "0x ")||  str.startsWith( "0x ")||  str.startsWith( "0x ")||  str.startsWith( "0x "))  {  [CE]  unclosed  character  literal  [FE]              AssertionError      [CONTEXT]      public  static  Number  createNumber(String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {  return  null;  }  if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(     "A  blank  string  is  not  a  valid  number     ");  }  if  (str.startsWith(     "--     "))  {  return  null;  }      [BUGGY]  if(str.startsWith( "0x ")||  str.startsWith( "0x ")||  str.startsWith( "0x ")||  str.startsWith( "0x ")||  str.startsWith( "0x "))  {  [BUGGY]      int  hexDigits  =  str.length()  -  2;  //  drop  0x  if  (str.startsWith(     "-     "))  {  //  drop  -  hexDigits--;  }  if  (hexDigits  >  8)  {  //  too  many  for  an  int  return  createLong(str);  }  return  createInteger(str);  }  char  lastChar  =  str.charAt(str.length()  -  1);  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  	projects/Lang7/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.5773502691896258	455	455	1	replace	if(str.startsWith( "0x ")||  str.startsWith( "0x ")||  str.startsWith( "0x ")||  str.startsWith( "0x ")||  str.startsWith( "0x "))  {	  if(str.startsWith(   ".0x   ")||    str.startsWith(   ".0x   ")||    str.startsWith(   ".0x   ")||    str.startsWith(   ".0x   ")||    str.startsWith(   ".0x   "))    {    	non-compiled	[CE]  unclosed  character  literal	29	None	replace
