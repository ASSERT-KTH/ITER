bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  Integer  f  =  str.substring(0,  str.length()  -  1);  [CE]  ')'  expected  [FE]            AssertionError      [CONTEXT]      }  catch  (NumberFormatException  nfe)  {  //  NOPMD  }  return  createBigInteger(numeric);  }  throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  case  'f'  :  case  'F'  :  try  {      [BUGGY]  Integer  f  =  str.substring(0,  str.length()  -  1);  [BUGGY]      Float  f  =  NumberUtils.createFloat(numeric);  if  (!(f.isInfinite()  ||  (f.floatValue()  ==  0.0F  &&  !allZeros)))  {    return  f;  }  }  catch  (NumberFormatException  nfe)  {  //  NOPMD  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  	projects/Lang7/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	521	521	1	replace	Integer  f  =  str.substring(0,  str.length()  -  1);	  Integer    f    =    str.substring(0,    str.length());    	non-compiled	[CE]  ')'  expected	50	None	replace
2	[BUG]  [BUGGY]  Integer  f  =  str.substring(0,  str.length()  -  2);  [CE]  ')'  expected  [FE]              AssertionError      [CONTEXT]      }  catch  (NumberFormatException  nfe)  {  //  NOPMD  }  return  createBigInteger(numeric);  }  throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  case  'f'  :  case  'F'  :  try  {      [BUGGY]  Integer  f  =  str.substring(0,  str.length()  -  2);  [BUGGY]      Float  f  =  NumberUtils.createFloat(numeric);  if  (!(f.isInfinite()  ||  (f.floatValue()  ==  0.0F  &&  !allZeros)))  {    return  f;  }  }  catch  (NumberFormatException  nfe)  {  //  NOPMD  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  	projects/Lang7/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	521	521	1	replace	Integer  f  =  str.substring(0,  str.length()  -  2);	  Integer    f    =    str.substring(0,    str.length());    	non-compiled	[CE]  ')'  expected	50	None	replace
3	[BUG]  [BUGGY]  Integer  f  =  str.substring(0,  str.length()  +  1);  [CE]  ')'  expected  [FE]                AssertionError      [CONTEXT]      }  catch  (NumberFormatException  nfe)  {  //  NOPMD  }  return  createBigInteger(numeric);  }  throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  case  'f'  :  case  'F'  :  try  {      [BUGGY]  Integer  f  =  str.substring(0,  str.length()  +  1);  [BUGGY]      Float  f  =  NumberUtils.createFloat(numeric);  if  (!(f.isInfinite()  ||  (f.floatValue()  ==  0.0F  &&  !allZeros)))  {    return  f;  }  }  catch  (NumberFormatException  nfe)  {  //  NOPMD  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  	projects/Lang7/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	521	521	1	replace	Integer  f  =  str.substring(0,  str.length()  +  1);	  Integer    f    =    str.substring(0,    str.length());    	non-compiled	[CE]  ')'  expected	50	None	replace
4	[BUG]  [BUGGY]  float  f  =  NumberUtils.createFloat(str,  numeric);  [CE]  ')'  expected  [FE]                  AssertionError      [CONTEXT]      }  catch  (NumberFormatException  nfe)  {  //  NOPMD  }  return  createBigInteger(numeric);  }  throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  case  'f'  :  case  'F'  :  try  {      [BUGGY]  float  f  =  NumberUtils.createFloat(str,  numeric);  [BUGGY]      if  (!(f.isInfinite()  ||  (f.floatValue()  ==  0.0F  &&  !allZeros)))  {    return  f;  }  }  catch  (NumberFormatException  nfe)  {  //  NOPMD  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  	projects/Lang7/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	521	521	1	replace	float  f  =  NumberUtils.createFloat(str,  numeric);	  float    f    =    NumberUtils.createFloat(numeric,    str);    	non-compiled	[CE]  ')'  expected	10	None	replace
5	[BUG]  [BUGGY]  float  f  =  NumberUtils.createFloat(numeric,  str  +  1);  [CE]  ')'  expected  [FE]                    AssertionError      [CONTEXT]      }  catch  (NumberFormatException  nfe)  {  //  NOPMD  }  return  createBigInteger(numeric);  }  throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  case  'f'  :  case  'F'  :  try  {      [BUGGY]  float  f  =  NumberUtils.createFloat(numeric,  str  +  1);  [BUGGY]      if  (!(f.isInfinite()  ||  (f.floatValue()  ==  0.0F  &&  !allZeros)))  {    return  f;  }  }  catch  (NumberFormatException  nfe)  {  //  NOPMD  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  	projects/Lang7/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	521	521	1	replace	float  f  =  NumberUtils.createFloat(numeric,  str  +  1);	  float    f    =    NumberUtils.createFloat(numeric,    str);    	non-compiled	[CE]  ')'  expected	10	None	replace
6	[BUG]  [BUGGY]  float  f  =  NumberUtils.createFloat(str,  null);  [CE]  ')'  expected  [FE]                      AssertionError      [CONTEXT]      }  catch  (NumberFormatException  nfe)  {  //  NOPMD  }  return  createBigInteger(numeric);  }  throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  case  'f'  :  case  'F'  :  try  {      [BUGGY]  float  f  =  NumberUtils.createFloat(str,  null);  [BUGGY]      if  (!(f.isInfinite()  ||  (f.floatValue()  ==  0.0F  &&  !allZeros)))  {    return  f;  }  }  catch  (NumberFormatException  nfe)  {  //  NOPMD  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  	projects/Lang7/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	521	521	1	replace	float  f  =  NumberUtils.createFloat(str,  null);	  float    f    =    NumberUtils.createFloat(numeric,    str);    	non-compiled	[CE]  ')'  expected	10	None	replace
7	[BUG]  [BUGGY]  double  f  =  NumberUtils.createDouble(numeric,  str);  [CE]  ')'  expected  [FE]                        AssertionError      [CONTEXT]      }  catch  (NumberFormatException  nfe)  {  //  NOPMD  }  return  createBigInteger(numeric);  }  throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  case  'f'  :  case  'F'  :  try  {      [BUGGY]  double  f  =  NumberUtils.createDouble(numeric,  str);  [BUGGY]      if  (!(f.isInfinite()  ||  (f.floatValue()  ==  0.0F  &&  !allZeros)))  {    return  f;  }  }  catch  (NumberFormatException  nfe)  {  //  NOPMD  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  	projects/Lang7/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	521	521	1	replace	double  f  =  NumberUtils.createDouble(numeric,  str);	  float    f    =    NumberUtils.createFloat(numeric,    str);    	non-compiled	[CE]  ')'  expected	10	None	replace
8	[BUG]  [BUGGY]  float  f  =  NumberUtils.createFloat(numeric.floatValue());  [CE]  ')'  expected  [FE]                    AssertionError      [CONTEXT]      }  catch  (NumberFormatException  nfe)  {  //  NOPMD  }  return  createBigInteger(numeric);  }  throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  case  'f'  :  case  'F'  :  try  {      [BUGGY]  float  f  =  NumberUtils.createFloat(numeric.floatValue());  [BUGGY]      if  (!(f.isInfinite()  ||  (f.floatValue()  ==  0.0F  &&  !allZeros)))  {    return  f;  }  }  catch  (NumberFormatException  nfe)  {  //  NOPMD  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  	projects/Lang7/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	521	521	1	replace	float  f  =  NumberUtils.createFloat(numeric.floatValue());	  Float    f    =    NumberUtils.createFloat(str.floatValue());    	non-compiled	[CE]  ')'  expected	32	None	replace
9	[BUG]  [BUGGY]  Float  f  =  NumberUtils.createFloat(str.floatValue()  +  1);  [CE]  ')'  expected  [FE]                      AssertionError      [CONTEXT]      }  catch  (NumberFormatException  nfe)  {  //  NOPMD  }  return  createBigInteger(numeric);  }  throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  case  'f'  :  case  'F'  :  try  {      [BUGGY]  Float  f  =  NumberUtils.createFloat(str.floatValue()  +  1);  [BUGGY]      if  (!(f.isInfinite()  ||  (f.floatValue()  ==  0.0F  &&  !allZeros)))  {    return  f;  }  }  catch  (NumberFormatException  nfe)  {  //  NOPMD  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  	projects/Lang7/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	521	521	1	replace	Float  f  =  NumberUtils.createFloat(str.floatValue()  +  1);	  Float    f    =    NumberUtils.createFloat(str.floatValue());    	non-compiled	[CE]  ')'  expected	32	None	replace
10	[BUG]  [BUGGY]  NumberUtils.createBigInteger(numeric);  [CE]  ')'  expected  [FE]                    AssertionError      [CONTEXT]      }  catch  (NumberFormatException  nfe)  {  //  NOPMD  }  return  createBigInteger(numeric);  }  throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  case  'f'  :  case  'F'  :  try  {      [BUGGY]  NumberUtils.createBigInteger(numeric);  [BUGGY]      Float  f  =  NumberUtils.createFloat(numeric);  if  (!(f.isInfinite()  ||  (f.floatValue()  ==  0.0F  &&  !allZeros)))  {    return  f;  }  }  catch  (NumberFormatException  nfe)  {  //  NOPMD  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  	projects/Lang7/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	521	521	1	replace	NumberUtils.createBigInteger(numeric);	  NumberUtils.createInteger(numeric);    	non-compiled	[CE]  ')'  expected	29	None	replace
11	[BUG]  [BUGGY]  NumberUtils.createBigDecimal(numeric);  [CE]  ')'  expected  [FE]                      AssertionError      [CONTEXT]      }  catch  (NumberFormatException  nfe)  {  //  NOPMD  }  return  createBigInteger(numeric);  }  throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  case  'f'  :  case  'F'  :  try  {      [BUGGY]  NumberUtils.createBigDecimal(numeric);  [BUGGY]      Float  f  =  NumberUtils.createFloat(numeric);  if  (!(f.isInfinite()  ||  (f.floatValue()  ==  0.0F  &&  !allZeros)))  {    return  f;  }  }  catch  (NumberFormatException  nfe)  {  //  NOPMD  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  	projects/Lang7/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	521	521	1	replace	NumberUtils.createBigDecimal(numeric);	  NumberUtils.createInteger(numeric);    	non-compiled	[CE]  ')'  expected	29	None	replace
12	[BUG]  [BUGGY]  NumberUtils.createLong(numeric);  [CE]  ')'  expected  [FE]                        AssertionError      [CONTEXT]      }  catch  (NumberFormatException  nfe)  {  //  NOPMD  }  return  createBigInteger(numeric);  }  throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  case  'f'  :  case  'F'  :  try  {      [BUGGY]  NumberUtils.createLong(numeric);  [BUGGY]      Float  f  =  NumberUtils.createFloat(numeric);  if  (!(f.isInfinite()  ||  (f.floatValue()  ==  0.0F  &&  !allZeros)))  {    return  f;  }  }  catch  (NumberFormatException  nfe)  {  //  NOPMD  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  	projects/Lang7/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	521	521	1	replace	NumberUtils.createLong(numeric);	  NumberUtils.createInteger(numeric);    	non-compiled	[CE]  ')'  expected	29	None	replace
13	[BUG]  [BUGGY]  Integer  f  =  getFloatValue(str);  [CE]  ')'  expected  [FE]                      AssertionError      [CONTEXT]      }  catch  (NumberFormatException  nfe)  {  //  NOPMD  }  return  createBigInteger(numeric);  }  throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  case  'f'  :  case  'F'  :  try  {      [BUGGY]  Integer  f  =  getFloatValue(str);  [BUGGY]      if  (!(f.isInfinite()  ||  (f.floatValue()  ==  0.0F  &&  !allZeros)))  {    return  f;  }  }  catch  (NumberFormatException  nfe)  {  //  NOPMD  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  	projects/Lang7/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	521	521	1	replace	Integer  f  =  getFloatValue(str);	  Integer    f    =    getIntValue(str);    	non-compiled	[CE]  ')'  expected	13	None	replace
14	[BUG]  [BUGGY]  Integer  f  =  getLongValue(str);  [CE]  ')'  expected  [FE]                        AssertionError      [CONTEXT]      }  catch  (NumberFormatException  nfe)  {  //  NOPMD  }  return  createBigInteger(numeric);  }  throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  case  'f'  :  case  'F'  :  try  {      [BUGGY]  Integer  f  =  getLongValue(str);  [BUGGY]      if  (!(f.isInfinite()  ||  (f.floatValue()  ==  0.0F  &&  !allZeros)))  {    return  f;  }  }  catch  (NumberFormatException  nfe)  {  //  NOPMD  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  	projects/Lang7/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	521	521	1	replace	Integer  f  =  getLongValue(str);	  Integer    f    =    getIntValue(str);    	non-compiled	[CE]  ')'  expected	13	None	replace
15	[BUG]  [BUGGY]  Integer  f  =  getLongValue(numeric);  [CE]  ')'  expected  [FE]                          AssertionError      [CONTEXT]      }  catch  (NumberFormatException  nfe)  {  //  NOPMD  }  return  createBigInteger(numeric);  }  throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  case  'f'  :  case  'F'  :  try  {      [BUGGY]  Integer  f  =  getLongValue(numeric);  [BUGGY]      if  (!(f.isInfinite()  ||  (f.floatValue()  ==  0.0F  &&  !allZeros)))  {    return  f;  }  }  catch  (NumberFormatException  nfe)  {  //  NOPMD  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  	projects/Lang7/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	521	521	1	replace	Integer  f  =  getLongValue(numeric);	  Integer    f    =    getIntValue(str);    	non-compiled	[CE]  ')'  expected	13	None	replace
16	[BUG]  [BUGGY]  float  f  =  NumberUtils.createFloat(numeric,  allZeros);  [CE]  ')'  expected  [FE]            AssertionError      [CONTEXT]      }  catch  (NumberFormatException  nfe)  {  //  NOPMD  }  return  createBigInteger(numeric);  }  throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  case  'f'  :  case  'F'  :  try  {      [BUGGY]  float  f  =  NumberUtils.createFloat(numeric,  allZeros);  [BUGGY]      if  (!(f.isInfinite()  ||  (f.floatValue()  ==  0.0F  &&  !allZeros)))  {    return  f;  }  }  catch  (NumberFormatException  nfe)  {  //  NOPMD  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  	projects/Lang7/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	521	521	1	replace	float  f  =  NumberUtils.createFloat(numeric,  allZeros);	  Float    f    =    NumberUtils.createFloat(str,    allZeros);    	non-compiled	[CE]  ')'  expected	17	None	replace
17	[BUG]  [BUGGY]  Float  f  =  NumberUtils.createFloat(numeric.floatValue(),  mant);  [CE]  ')'  expected  [FE]                  AssertionError      [CONTEXT]      }  catch  (NumberFormatException  nfe)  {  //  NOPMD  }  return  createBigInteger(numeric);  }  throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  case  'f'  :  case  'F'  :  try  {      [BUGGY]  Float  f  =  NumberUtils.createFloat(numeric.floatValue(),  mant);  [BUGGY]      if  (!(f.isInfinite()  ||  (f.floatValue()  ==  0.0F  &&  !allZeros)))  {    return  f;  }  }  catch  (NumberFormatException  nfe)  {  //  NOPMD  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  	projects/Lang7/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	521	521	1	replace	Float  f  =  NumberUtils.createFloat(numeric.floatValue(),  mant);	  Float    f    =    NumberUtils.createFloat(numeric.floatValue(),    str);    	non-compiled	[CE]  ')'  expected	31	None	replace
18	[BUG]  [BUGGY]  Float  f  =  NumberUtils.createFloat(str.floatValue(),  numeric);  [CE]  ')'  expected  [FE]                    AssertionError      [CONTEXT]      }  catch  (NumberFormatException  nfe)  {  //  NOPMD  }  return  createBigInteger(numeric);  }  throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  case  'f'  :  case  'F'  :  try  {      [BUGGY]  Float  f  =  NumberUtils.createFloat(str.floatValue(),  numeric);  [BUGGY]      if  (!(f.isInfinite()  ||  (f.floatValue()  ==  0.0F  &&  !allZeros)))  {    return  f;  }  }  catch  (NumberFormatException  nfe)  {  //  NOPMD  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  	projects/Lang7/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	521	521	1	replace	Float  f  =  NumberUtils.createFloat(str.floatValue(),  numeric);	  Float    f    =    NumberUtils.createFloat(numeric.floatValue(),    str);    	non-compiled	[CE]  ')'  expected	31	None	replace
19	[BUG]  [BUGGY]  Float  f  =  NumberUtils.createFloat(str.floatValue(),  null);  [CE]  ')'  expected  [FE]                      AssertionError      [CONTEXT]      }  catch  (NumberFormatException  nfe)  {  //  NOPMD  }  return  createBigInteger(numeric);  }  throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  case  'f'  :  case  'F'  :  try  {      [BUGGY]  Float  f  =  NumberUtils.createFloat(str.floatValue(),  null);  [BUGGY]      if  (!(f.isInfinite()  ||  (f.floatValue()  ==  0.0F  &&  !allZeros)))  {    return  f;  }  }  catch  (NumberFormatException  nfe)  {  //  NOPMD  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  	projects/Lang7/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	521	521	1	replace	Float  f  =  NumberUtils.createFloat(str.floatValue(),  null);	  Float    f    =    NumberUtils.createFloat(numeric.floatValue(),    str);    	non-compiled	[CE]  ')'  expected	31	None	replace
20	[BUG]  [BUGGY]  Float  f  =  NumberUtils.createFloat(mant.floatValue(),  str);  [CE]  ')'  expected  [FE]                        AssertionError      [CONTEXT]      }  catch  (NumberFormatException  nfe)  {  //  NOPMD  }  return  createBigInteger(numeric);  }  throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  case  'f'  :  case  'F'  :  try  {      [BUGGY]  Float  f  =  NumberUtils.createFloat(mant.floatValue(),  str);  [BUGGY]      if  (!(f.isInfinite()  ||  (f.floatValue()  ==  0.0F  &&  !allZeros)))  {    return  f;  }  }  catch  (NumberFormatException  nfe)  {  //  NOPMD  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  	projects/Lang7/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	521	521	1	replace	Float  f  =  NumberUtils.createFloat(mant.floatValue(),  str);	  Float    f    =    NumberUtils.createFloat(numeric.floatValue(),    str);    	non-compiled	[CE]  ')'  expected	31	None	replace
21	[BUG]  [BUGGY]  Numeric  f  =  NumberUtils.createFloat(numeric);  [CE]  ')'  expected  [FE]              AssertionError      [CONTEXT]      }  catch  (NumberFormatException  nfe)  {  //  NOPMD  }  return  createBigInteger(numeric);  }  throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  case  'f'  :  case  'F'  :  try  {      [BUGGY]  Numeric  f  =  NumberUtils.createFloat(numeric);  [BUGGY]      Float  f  =  NumberUtils.createFloat(numeric);  if  (!(f.isInfinite()  ||  (f.floatValue()  ==  0.0F  &&  !allZeros)))  {    return  f;  }  }  catch  (NumberFormatException  nfe)  {  //  NOPMD  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  	projects/Lang7/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	521	521	1	replace	Numeric  f  =  NumberUtils.createFloat(numeric);	  Numeric    f    =    NumberUtils.createBigDecimal(numeric);    	non-compiled	[CE]  ')'  expected	43	None	replace
22	[BUG]  [BUGGY]  Numeric  f  =  NumberUtils.createBigInteger(numeric);  [CE]  ')'  expected  [FE]                AssertionError      [CONTEXT]      }  catch  (NumberFormatException  nfe)  {  //  NOPMD  }  return  createBigInteger(numeric);  }  throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  case  'f'  :  case  'F'  :  try  {      [BUGGY]  Numeric  f  =  NumberUtils.createBigInteger(numeric);  [BUGGY]      Float  f  =  NumberUtils.createFloat(numeric);  if  (!(f.isInfinite()  ||  (f.floatValue()  ==  0.0F  &&  !allZeros)))  {    return  f;  }  }  catch  (NumberFormatException  nfe)  {  //  NOPMD  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  	projects/Lang7/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	521	521	1	replace	Numeric  f  =  NumberUtils.createBigInteger(numeric);	  Numeric    f    =    NumberUtils.createBigDecimal(numeric);    	non-compiled	[CE]  ')'  expected	43	None	replace
23	[BUG]  [BUGGY]  Numeric  f  =  NumberUtils.createNumber(numeric);  [CE]  ')'  expected  [FE]                  AssertionError      [CONTEXT]      }  catch  (NumberFormatException  nfe)  {  //  NOPMD  }  return  createBigInteger(numeric);  }  throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  case  'f'  :  case  'F'  :  try  {      [BUGGY]  Numeric  f  =  NumberUtils.createNumber(numeric);  [BUGGY]      Float  f  =  NumberUtils.createFloat(numeric);  if  (!(f.isInfinite()  ||  (f.floatValue()  ==  0.0F  &&  !allZeros)))  {    return  f;  }  }  catch  (NumberFormatException  nfe)  {  //  NOPMD  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  	projects/Lang7/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	521	521	1	replace	Numeric  f  =  NumberUtils.createNumber(numeric);	  Numeric    f    =    NumberUtils.createBigDecimal(numeric);    	non-compiled	[CE]  ')'  expected	43	None	replace
24	[BUG]  [BUGGY]  Float  f  =  NumberUtils.createFloat(numeric.floatValue()  *  2);  [CE]  ')'  expected  [FE]                  AssertionError      [CONTEXT]      }  catch  (NumberFormatException  nfe)  {  //  NOPMD  }  return  createBigInteger(numeric);  }  throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  case  'f'  :  case  'F'  :  try  {      [BUGGY]  Float  f  =  NumberUtils.createFloat(numeric.floatValue()  *  2);  [BUGGY]      if  (!(f.isInfinite()  ||  (f.floatValue()  ==  0.0F  &&  !allZeros)))  {    return  f;  }  }  catch  (NumberFormatException  nfe)  {  //  NOPMD  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  	projects/Lang7/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	521	521	1	replace	Float  f  =  NumberUtils.createFloat(numeric.floatValue()  *  2);	  Float    f    =    NumberUtils.createFloat(numeric.floatValue()    /    2);    	non-compiled	[CE]  ')'  expected	52	None	replace
25	[BUG]  [BUGGY]  Float  f  =  NumberUtils.createFloat(numeric.floatValue()  +  2);  [CE]  ')'  expected  [FE]                    AssertionError      [CONTEXT]      }  catch  (NumberFormatException  nfe)  {  //  NOPMD  }  return  createBigInteger(numeric);  }  throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  case  'f'  :  case  'F'  :  try  {      [BUGGY]  Float  f  =  NumberUtils.createFloat(numeric.floatValue()  +  2);  [BUGGY]      if  (!(f.isInfinite()  ||  (f.floatValue()  ==  0.0F  &&  !allZeros)))  {    return  f;  }  }  catch  (NumberFormatException  nfe)  {  //  NOPMD  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  	projects/Lang7/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	521	521	1	replace	Float  f  =  NumberUtils.createFloat(numeric.floatValue()  +  2);	  Float    f    =    NumberUtils.createFloat(numeric.floatValue()    /    2);    	non-compiled	[CE]  ')'  expected	52	None	replace
26	[BUG]  [BUGGY]  Float  f  =  NumberUtils.createInteger(numeric);  [CE]  ')'  expected  [FE]              AssertionError      [CONTEXT]      }  catch  (NumberFormatException  nfe)  {  //  NOPMD  }  return  createBigInteger(numeric);  }  throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  case  'f'  :  case  'F'  :  try  {      [BUGGY]  Float  f  =  NumberUtils.createInteger(numeric);  [BUGGY]      if  (!(f.isInfinite()  ||  (f.floatValue()  ==  0.0F  &&  !allZeros)))  {    return  f;  }  }  catch  (NumberFormatException  nfe)  {  //  NOPMD  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  	projects/Lang7/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	521	521	1	replace	Float  f  =  NumberUtils.createInteger(numeric);	  Float    f    =    NumberUtils.createFloat(str,    numeric);    	non-compiled	[CE]  ')'  expected	34	None	replace
27	[BUG]  [BUGGY]  Number  f  =  NumberUtils.createNumber(str,  numeric);  [CE]  ')'  expected  [FE]              AssertionError      [CONTEXT]      }  catch  (NumberFormatException  nfe)  {  //  NOPMD  }  return  createBigInteger(numeric);  }  throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  case  'f'  :  case  'F'  :  try  {      [BUGGY]  Number  f  =  NumberUtils.createNumber(str,  numeric);  [BUGGY]      Float  f  =  NumberUtils.createFloat(numeric);  if  (!(f.isInfinite()  ||  (f.floatValue()  ==  0.0F  &&  !allZeros)))  {    return  f;  }  }  catch  (NumberFormatException  nfe)  {  //  NOPMD  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  	projects/Lang7/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	521	521	1	replace	Number  f  =  NumberUtils.createNumber(str,  numeric);	  Number    f    =    NumberUtils.createNumber(numeric,    string);    	non-compiled	[CE]  ')'  expected	45	None	replace
28	[BUG]  [BUGGY]  Number  f  =  NumberUtils.createNumber(str,  null);  [CE]  ')'  expected  [FE]                AssertionError      [CONTEXT]      }  catch  (NumberFormatException  nfe)  {  //  NOPMD  }  return  createBigInteger(numeric);  }  throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  case  'f'  :  case  'F'  :  try  {      [BUGGY]  Number  f  =  NumberUtils.createNumber(str,  null);  [BUGGY]      Float  f  =  NumberUtils.createFloat(numeric);  if  (!(f.isInfinite()  ||  (f.floatValue()  ==  0.0F  &&  !allZeros)))  {    return  f;  }  }  catch  (NumberFormatException  nfe)  {  //  NOPMD  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  	projects/Lang7/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	521	521	1	replace	Number  f  =  NumberUtils.createNumber(str,  null);	  Number    f    =    NumberUtils.createNumber(numeric,    string);    	non-compiled	[CE]  ')'  expected	45	None	replace
29	[BUG]  [BUGGY]  Number  f  =  NumberUtils.createNumber(numeric,  string,  str);  [CE]  ')'  expected  [FE]                  AssertionError      [CONTEXT]      }  catch  (NumberFormatException  nfe)  {  //  NOPMD  }  return  createBigInteger(numeric);  }  throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  case  'f'  :  case  'F'  :  try  {      [BUGGY]  Number  f  =  NumberUtils.createNumber(numeric,  string,  str);  [BUGGY]      Float  f  =  NumberUtils.createFloat(numeric);  if  (!(f.isInfinite()  ||  (f.floatValue()  ==  0.0F  &&  !allZeros)))  {    return  f;  }  }  catch  (NumberFormatException  nfe)  {  //  NOPMD  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  	projects/Lang7/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	521	521	1	replace	Number  f  =  NumberUtils.createNumber(numeric,  string,  str);	  Number    f    =    NumberUtils.createNumber(numeric,    string);    	non-compiled	[CE]  ')'  expected	45	None	replace
30	[BUG]  [BUGGY]  Integer  f  =  createInteger(str);  [CE]  ')'  expected  [FE]                  AssertionError      [CONTEXT]      }  catch  (NumberFormatException  nfe)  {  //  NOPMD  }  return  createBigInteger(numeric);  }  throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  case  'f'  :  case  'F'  :  try  {      [BUGGY]  Integer  f  =  createInteger(str);  [BUGGY]      if  (!(f.isInfinite()  ||  (f.floatValue()  ==  0.0F  &&  !allZeros)))  {    return  f;  }  }  catch  (NumberFormatException  nfe)  {  //  NOPMD  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  	projects/Lang7/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	521	521	1	replace	Integer  f  =  createInteger(str);	  Integer    f    =    createInteger(numeric);    	non-compiled	[CE]  ')'  expected	11	None	replace
31	[BUG]  [BUGGY]  Integer  f  =  createLong(numeric);  [CE]  ')'  expected  [FE]                    AssertionError      [CONTEXT]      }  catch  (NumberFormatException  nfe)  {  //  NOPMD  }  return  createBigInteger(numeric);  }  throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  case  'f'  :  case  'F'  :  try  {      [BUGGY]  Integer  f  =  createLong(numeric);  [BUGGY]      if  (!(f.isInfinite()  ||  (f.floatValue()  ==  0.0F  &&  !allZeros)))  {    return  f;  }  }  catch  (NumberFormatException  nfe)  {  //  NOPMD  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  	projects/Lang7/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	521	521	1	replace	Integer  f  =  createLong(numeric);	  Integer    f    =    createInteger(numeric);    	non-compiled	[CE]  ')'  expected	11	None	replace
32	[BUG]  [BUGGY]  Integer  f  =  createInteger(numeric.intValue());  [CE]  ')'  expected  [FE]                      AssertionError      [CONTEXT]      }  catch  (NumberFormatException  nfe)  {  //  NOPMD  }  return  createBigInteger(numeric);  }  throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  case  'f'  :  case  'F'  :  try  {      [BUGGY]  Integer  f  =  createInteger(numeric.intValue());  [BUGGY]      if  (!(f.isInfinite()  ||  (f.floatValue()  ==  0.0F  &&  !allZeros)))  {    return  f;  }  }  catch  (NumberFormatException  nfe)  {  //  NOPMD  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  	projects/Lang7/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	521	521	1	replace	Integer  f  =  createInteger(numeric.intValue());	  Integer    f    =    createInteger(numeric);    	non-compiled	[CE]  ')'  expected	11	None	replace
33	[BUG]  [BUGGY]  Float  f  =  NumberUtils.createFloat(numeric,  2);  [CE]  ')'  expected  [FE]              AssertionError      [CONTEXT]      }  catch  (NumberFormatException  nfe)  {  //  NOPMD  }  return  createBigInteger(numeric);  }  throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  case  'f'  :  case  'F'  :  try  {      [BUGGY]  Float  f  =  NumberUtils.createFloat(numeric,  2);  [BUGGY]      if  (!(f.isInfinite()  ||  (f.floatValue()  ==  0.0F  &&  !allZeros)))  {    return  f;  }  }  catch  (NumberFormatException  nfe)  {  //  NOPMD  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  	projects/Lang7/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	521	521	1	replace	Float  f  =  NumberUtils.createFloat(numeric,  2);	  Float    f    =    NumberUtils.createFloat(numeric,    1);    	non-compiled	[CE]  ')'  expected	41	None	replace
34	[BUG]  [BUGGY]  Float  f  =  NumberUtils.createFloat(numeric,  1L);  [CE]  ')'  expected  [FE]                AssertionError      [CONTEXT]      }  catch  (NumberFormatException  nfe)  {  //  NOPMD  }  return  createBigInteger(numeric);  }  throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  case  'f'  :  case  'F'  :  try  {      [BUGGY]  Float  f  =  NumberUtils.createFloat(numeric,  1L);  [BUGGY]      if  (!(f.isInfinite()  ||  (f.floatValue()  ==  0.0F  &&  !allZeros)))  {    return  f;  }  }  catch  (NumberFormatException  nfe)  {  //  NOPMD  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  	projects/Lang7/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	521	521	1	replace	Float  f  =  NumberUtils.createFloat(numeric,  1L);	  Float    f    =    NumberUtils.createFloat(numeric,    1);    	non-compiled	[CE]  ')'  expected	41	None	replace
35	[BUG]  [BUGGY]  Float  f  =  NumberUtils.createFloat(numeric,  3);  [CE]  ')'  expected  [FE]                  AssertionError      [CONTEXT]      }  catch  (NumberFormatException  nfe)  {  //  NOPMD  }  return  createBigInteger(numeric);  }  throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  case  'f'  :  case  'F'  :  try  {      [BUGGY]  Float  f  =  NumberUtils.createFloat(numeric,  3);  [BUGGY]      if  (!(f.isInfinite()  ||  (f.floatValue()  ==  0.0F  &&  !allZeros)))  {    return  f;  }  }  catch  (NumberFormatException  nfe)  {  //  NOPMD  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  	projects/Lang7/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	521	521	1	replace	Float  f  =  NumberUtils.createFloat(numeric,  3);	  Float    f    =    NumberUtils.createFloat(numeric,    1);    	non-compiled	[CE]  ')'  expected	41	None	replace
36	[BUG]  [BUGGY]  Integer  numeric  =  str.substring(0,  str.length()  -  2);  [CE]  ')'  expected  [FE]              AssertionError      [CONTEXT]      }  catch  (NumberFormatException  nfe)  {  //  NOPMD  }  return  createBigInteger(numeric);  }  throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  case  'f'  :  case  'F'  :  try  {      [BUGGY]  Integer  numeric  =  str.substring(0,  str.length()  -  2);  [BUGGY]      Float  f  =  NumberUtils.createFloat(numeric);  if  (!(f.isInfinite()  ||  (f.floatValue()  ==  0.0F  &&  !allZeros)))  {    return  f;  }  }  catch  (NumberFormatException  nfe)  {  //  NOPMD  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  	projects/Lang7/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	521	521	1	replace	Integer  numeric  =  str.substring(0,  str.length()  -  2);	  Integer    numeric    =    str.substring(0,    str.length();    	non-compiled	[CE]  ')'  expected	21	None	replace
37	[BUG]  [BUGGY]  Integer  numeric  =  str.substring(0,  str.length()  +  1);  [CE]  ')'  expected  [FE]                AssertionError      [CONTEXT]      }  catch  (NumberFormatException  nfe)  {  //  NOPMD  }  return  createBigInteger(numeric);  }  throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  case  'f'  :  case  'F'  :  try  {      [BUGGY]  Integer  numeric  =  str.substring(0,  str.length()  +  1);  [BUGGY]      Float  f  =  NumberUtils.createFloat(numeric);  if  (!(f.isInfinite()  ||  (f.floatValue()  ==  0.0F  &&  !allZeros)))  {    return  f;  }  }  catch  (NumberFormatException  nfe)  {  //  NOPMD  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  	projects/Lang7/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	521	521	1	replace	Integer  numeric  =  str.substring(0,  str.length()  +  1);	  Integer    numeric    =    str.substring(0,    str.length();    	non-compiled	[CE]  ')'  expected	21	None	replace
38	[BUG]  [BUGGY]  Float  f  =  NumberUtils.createFloat(numeric,  0,  str);  [CE]  ')'  expected  [FE]                AssertionError      [CONTEXT]      }  catch  (NumberFormatException  nfe)  {  //  NOPMD  }  return  createBigInteger(numeric);  }  throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  case  'f'  :  case  'F'  :  try  {      [BUGGY]  Float  f  =  NumberUtils.createFloat(numeric,  0,  str);  [BUGGY]      if  (!(f.isInfinite()  ||  (f.floatValue()  ==  0.0F  &&  !allZeros)))  {    return  f;  }  }  catch  (NumberFormatException  nfe)  {  //  NOPMD  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  	projects/Lang7/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	521	521	1	replace	Float  f  =  NumberUtils.createFloat(numeric,  0,  str);	  Float    f    =    NumberUtils.createFloat(numeric,    0,    allZeros);    	non-compiled	[CE]  ')'  expected	19	None	replace
39	[BUG]  [BUGGY]  Float  f  =  NumberUtils.createFloat(str,  0,  allZeros);  [CE]  ')'  expected  [FE]                  AssertionError      [CONTEXT]      }  catch  (NumberFormatException  nfe)  {  //  NOPMD  }  return  createBigInteger(numeric);  }  throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  case  'f'  :  case  'F'  :  try  {      [BUGGY]  Float  f  =  NumberUtils.createFloat(str,  0,  allZeros);  [BUGGY]      if  (!(f.isInfinite()  ||  (f.floatValue()  ==  0.0F  &&  !allZeros)))  {    return  f;  }  }  catch  (NumberFormatException  nfe)  {  //  NOPMD  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  	projects/Lang7/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	521	521	1	replace	Float  f  =  NumberUtils.createFloat(str,  0,  allZeros);	  Float    f    =    NumberUtils.createFloat(numeric,    0,    allZeros);    	non-compiled	[CE]  ')'  expected	19	None	replace
40	[BUG]  [BUGGY]  Float  f  =  NumberUtils.createFloat(numeric,  0,  numeric);  [CE]  ')'  expected  [FE]                    AssertionError      [CONTEXT]      }  catch  (NumberFormatException  nfe)  {  //  NOPMD  }  return  createBigInteger(numeric);  }  throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  case  'f'  :  case  'F'  :  try  {      [BUGGY]  Float  f  =  NumberUtils.createFloat(numeric,  0,  numeric);  [BUGGY]      if  (!(f.isInfinite()  ||  (f.floatValue()  ==  0.0F  &&  !allZeros)))  {    return  f;  }  }  catch  (NumberFormatException  nfe)  {  //  NOPMD  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  	projects/Lang7/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	521	521	1	replace	Float  f  =  NumberUtils.createFloat(numeric,  0,  numeric);	  Float    f    =    NumberUtils.createFloat(numeric,    0,    allZeros);    	non-compiled	[CE]  ')'  expected	19	None	replace
41	[BUG]  [BUGGY]  Float  f  =  NumberUtils.createFloat(numeric,  0,  null);  [CE]  ')'  expected  [FE]                      AssertionError      [CONTEXT]      }  catch  (NumberFormatException  nfe)  {  //  NOPMD  }  return  createBigInteger(numeric);  }  throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  case  'f'  :  case  'F'  :  try  {      [BUGGY]  Float  f  =  NumberUtils.createFloat(numeric,  0,  null);  [BUGGY]      if  (!(f.isInfinite()  ||  (f.floatValue()  ==  0.0F  &&  !allZeros)))  {    return  f;  }  }  catch  (NumberFormatException  nfe)  {  //  NOPMD  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  	projects/Lang7/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	521	521	1	replace	Float  f  =  NumberUtils.createFloat(numeric,  0,  null);	  Float    f    =    NumberUtils.createFloat(numeric,    0,    allZeros);    	non-compiled	[CE]  ')'  expected	19	None	replace
42	[BUG]  [BUGGY]  NumberUtils.setLongValue(numeric.longValue());  [CE]  ')'  expected  [FE]                AssertionError      [CONTEXT]      }  catch  (NumberFormatException  nfe)  {  //  NOPMD  }  return  createBigInteger(numeric);  }  throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  case  'f'  :  case  'F'  :  try  {      [BUGGY]  NumberUtils.setLongValue(numeric.longValue());  [BUGGY]      Float  f  =  NumberUtils.createFloat(numeric);  if  (!(f.isInfinite()  ||  (f.floatValue()  ==  0.0F  &&  !allZeros)))  {    return  f;  }  }  catch  (NumberFormatException  nfe)  {  //  NOPMD  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  	projects/Lang7/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	521	521	1	replace	NumberUtils.setLongValue(numeric.longValue());	  NumberUtils.setLongValue(numeric);    	non-compiled	[CE]  ')'  expected	55	None	replace
43	[BUG]  [BUGGY]  NumberUtils.setLongValue(str);  [CE]  ')'  expected  [FE]                  AssertionError      [CONTEXT]      }  catch  (NumberFormatException  nfe)  {  //  NOPMD  }  return  createBigInteger(numeric);  }  throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  case  'f'  :  case  'F'  :  try  {      [BUGGY]  NumberUtils.setLongValue(str);  [BUGGY]      Float  f  =  NumberUtils.createFloat(numeric);  if  (!(f.isInfinite()  ||  (f.floatValue()  ==  0.0F  &&  !allZeros)))  {    return  f;  }  }  catch  (NumberFormatException  nfe)  {  //  NOPMD  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  	projects/Lang7/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	521	521	1	replace	NumberUtils.setLongValue(str);	  NumberUtils.setLongValue(numeric);    	non-compiled	[CE]  ')'  expected	55	None	replace
44	[BUG]  [BUGGY]  NumberUtils.setLongValue(numeric.doubleValue());  [CE]  ')'  expected  [FE]                    AssertionError      [CONTEXT]      }  catch  (NumberFormatException  nfe)  {  //  NOPMD  }  return  createBigInteger(numeric);  }  throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  case  'f'  :  case  'F'  :  try  {      [BUGGY]  NumberUtils.setLongValue(numeric.doubleValue());  [BUGGY]      Float  f  =  NumberUtils.createFloat(numeric);  if  (!(f.isInfinite()  ||  (f.floatValue()  ==  0.0F  &&  !allZeros)))  {    return  f;  }  }  catch  (NumberFormatException  nfe)  {  //  NOPMD  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  	projects/Lang7/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	521	521	1	replace	NumberUtils.setLongValue(numeric.doubleValue());	  NumberUtils.setLongValue(numeric);    	non-compiled	[CE]  ')'  expected	55	None	replace
45	[BUG]  [BUGGY]  Integer  f  =  NumberUtils.createInteger(numeric,  2);  [CE]  ')'  expected  [FE]              AssertionError      [CONTEXT]      }  catch  (NumberFormatException  nfe)  {  //  NOPMD  }  return  createBigInteger(numeric);  }  throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  case  'f'  :  case  'F'  :  try  {      [BUGGY]  Integer  f  =  NumberUtils.createInteger(numeric,  2);  [BUGGY]      Float  f  =  NumberUtils.createFloat(numeric);  if  (!(f.isInfinite()  ||  (f.floatValue()  ==  0.0F  &&  !allZeros)))  {    return  f;  }  }  catch  (NumberFormatException  nfe)  {  //  NOPMD  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  	projects/Lang7/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	521	521	1	replace	Integer  f  =  NumberUtils.createInteger(numeric,  2);	  Integer    f    =    NumberUtils.createInteger(numeric,    1);    	non-compiled	[CE]  ')'  expected	39	None	replace
46	[BUG]  [BUGGY]  Integer  f  =  NumberUtils.createInteger(numeric,  3);  [CE]  ')'  expected  [FE]                AssertionError      [CONTEXT]      }  catch  (NumberFormatException  nfe)  {  //  NOPMD  }  return  createBigInteger(numeric);  }  throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  case  'f'  :  case  'F'  :  try  {      [BUGGY]  Integer  f  =  NumberUtils.createInteger(numeric,  3);  [BUGGY]      Float  f  =  NumberUtils.createFloat(numeric);  if  (!(f.isInfinite()  ||  (f.floatValue()  ==  0.0F  &&  !allZeros)))  {    return  f;  }  }  catch  (NumberFormatException  nfe)  {  //  NOPMD  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  	projects/Lang7/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	521	521	1	replace	Integer  f  =  NumberUtils.createInteger(numeric,  3);	  Integer    f    =    NumberUtils.createInteger(numeric,    1);    	non-compiled	[CE]  ')'  expected	39	None	replace
47	[BUG]  [BUGGY]  Integer  f  =  NumberUtils.createInteger(numeric,  4);  [CE]  ')'  expected  [FE]                  AssertionError      [CONTEXT]      }  catch  (NumberFormatException  nfe)  {  //  NOPMD  }  return  createBigInteger(numeric);  }  throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  case  'f'  :  case  'F'  :  try  {      [BUGGY]  Integer  f  =  NumberUtils.createInteger(numeric,  4);  [BUGGY]      Float  f  =  NumberUtils.createFloat(numeric);  if  (!(f.isInfinite()  ||  (f.floatValue()  ==  0.0F  &&  !allZeros)))  {    return  f;  }  }  catch  (NumberFormatException  nfe)  {  //  NOPMD  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  	projects/Lang7/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	521	521	1	replace	Integer  f  =  NumberUtils.createInteger(numeric,  4);	  Integer    f    =    NumberUtils.createInteger(numeric,    1);    	non-compiled	[CE]  ')'  expected	39	None	replace
48	[BUG]  [BUGGY]  Integer  f  =  NumberUtils.createFloat(numeric);  [CE]  ')'  expected  [FE]              AssertionError      [CONTEXT]      }  catch  (NumberFormatException  nfe)  {  //  NOPMD  }  return  createBigInteger(numeric);  }  throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  case  'f'  :  case  'F'  :  try  {      [BUGGY]  Integer  f  =  NumberUtils.createFloat(numeric);  [BUGGY]      Float  f  =  NumberUtils.createFloat(numeric);  if  (!(f.isInfinite()  ||  (f.floatValue()  ==  0.0F  &&  !allZeros)))  {    return  f;  }  }  catch  (NumberFormatException  nfe)  {  //  NOPMD  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  	projects/Lang7/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	521	521	1	replace	Integer  f  =  NumberUtils.createFloat(numeric);	  Integer    f    =    NumberUtils.createInteger(str);    	non-compiled	[CE]  ')'  expected	2	None	replace
49	[BUG]  [BUGGY]  Integer  f  =  NumberUtils.createLong(numeric);  [CE]  ')'  expected  [FE]                AssertionError      [CONTEXT]      }  catch  (NumberFormatException  nfe)  {  //  NOPMD  }  return  createBigInteger(numeric);  }  throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  case  'f'  :  case  'F'  :  try  {      [BUGGY]  Integer  f  =  NumberUtils.createLong(numeric);  [BUGGY]      Float  f  =  NumberUtils.createFloat(numeric);  if  (!(f.isInfinite()  ||  (f.floatValue()  ==  0.0F  &&  !allZeros)))  {    return  f;  }  }  catch  (NumberFormatException  nfe)  {  //  NOPMD  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  	projects/Lang7/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	521	521	1	replace	Integer  f  =  NumberUtils.createLong(numeric);	  Integer    f    =    NumberUtils.createInteger(str);    	non-compiled	[CE]  ')'  expected	2	None	replace
50	[BUG]  [BUGGY]  Integer  f  =  NumberUtils.createInteger(numeric.intValue()  +  1);  [CE]  ')'  expected  [FE]                AssertionError      [CONTEXT]      }  catch  (NumberFormatException  nfe)  {  //  NOPMD  }  return  createBigInteger(numeric);  }  throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  case  'f'  :  case  'F'  :  try  {      [BUGGY]  Integer  f  =  NumberUtils.createInteger(numeric.intValue()  +  1);  [BUGGY]      Float  f  =  NumberUtils.createFloat(numeric);  if  (!(f.isInfinite()  ||  (f.floatValue()  ==  0.0F  &&  !allZeros)))  {    return  f;  }  }  catch  (NumberFormatException  nfe)  {  //  NOPMD  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  	projects/Lang7/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	521	521	1	replace	Integer  f  =  NumberUtils.createInteger(numeric.intValue()  +  1);	  Integer    f    =    NumberUtils.createInteger(numeric.intValue());    	non-compiled	[CE]  ')'  expected	3	None	replace
51	[BUG]  [BUGGY]  Integer  f  =  NumberUtils.createInteger(numeric.doubleValue());  [CE]  ')'  expected  [FE]                  AssertionError      [CONTEXT]      }  catch  (NumberFormatException  nfe)  {  //  NOPMD  }  return  createBigInteger(numeric);  }  throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  case  'f'  :  case  'F'  :  try  {      [BUGGY]  Integer  f  =  NumberUtils.createInteger(numeric.doubleValue());  [BUGGY]      Float  f  =  NumberUtils.createFloat(numeric);  if  (!(f.isInfinite()  ||  (f.floatValue()  ==  0.0F  &&  !allZeros)))  {    return  f;  }  }  catch  (NumberFormatException  nfe)  {  //  NOPMD  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  	projects/Lang7/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	521	521	1	replace	Integer  f  =  NumberUtils.createInteger(numeric.doubleValue());	  Integer    f    =    NumberUtils.createInteger(numeric.intValue());    	non-compiled	[CE]  ')'  expected	3	None	replace
52	[BUG]  [BUGGY]  Integer  f  =  NumberUtils.createInteger(numeric.intValue(),  1);  [CE]  ')'  expected  [FE]                    AssertionError      [CONTEXT]      }  catch  (NumberFormatException  nfe)  {  //  NOPMD  }  return  createBigInteger(numeric);  }  throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  case  'f'  :  case  'F'  :  try  {      [BUGGY]  Integer  f  =  NumberUtils.createInteger(numeric.intValue(),  1);  [BUGGY]      Float  f  =  NumberUtils.createFloat(numeric);  if  (!(f.isInfinite()  ||  (f.floatValue()  ==  0.0F  &&  !allZeros)))  {    return  f;  }  }  catch  (NumberFormatException  nfe)  {  //  NOPMD  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  	projects/Lang7/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	521	521	1	replace	Integer  f  =  NumberUtils.createInteger(numeric.intValue(),  1);	  Integer    f    =    NumberUtils.createInteger(numeric.intValue());    	non-compiled	[CE]  ')'  expected	3	None	replace
53	[BUG]  [BUGGY]  Float  f  =  NumberUtils.createFloat(numeric,  1.0);  [CE]  ')'  expected  [FE]            AssertionError      [CONTEXT]      }  catch  (NumberFormatException  nfe)  {  //  NOPMD  }  return  createBigInteger(numeric);  }  throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  case  'f'  :  case  'F'  :  try  {      [BUGGY]  Float  f  =  NumberUtils.createFloat(numeric,  1.0);  [BUGGY]      if  (!(f.isInfinite()  ||  (f.floatValue()  ==  0.0F  &&  !allZeros)))  {    return  f;  }  }  catch  (NumberFormatException  nfe)  {  //  NOPMD  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  	projects/Lang7/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	521	521	1	replace	Float  f  =  NumberUtils.createFloat(numeric,  1.0);	  Float    f    =    NumberUtils.createFloat(numeric,    0.0F);    	non-compiled	[CE]  ')'  expected	40	None	replace
54	[BUG]  [BUGGY]  Float  f  =  NumberUtils.createFloat(numeric,  0.0F,  allZeros);  [CE]  ')'  expected  [FE]              AssertionError      [CONTEXT]      }  catch  (NumberFormatException  nfe)  {  //  NOPMD  }  return  createBigInteger(numeric);  }  throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  case  'f'  :  case  'F'  :  try  {      [BUGGY]  Float  f  =  NumberUtils.createFloat(numeric,  0.0F,  allZeros);  [BUGGY]      if  (!(f.isInfinite()  ||  (f.floatValue()  ==  0.0F  &&  !allZeros)))  {    return  f;  }  }  catch  (NumberFormatException  nfe)  {  //  NOPMD  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  	projects/Lang7/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	521	521	1	replace	Float  f  =  NumberUtils.createFloat(numeric,  0.0F,  allZeros);	  Float    f    =    NumberUtils.createFloat(numeric,    0.0F);    	non-compiled	[CE]  ')'  expected	40	None	replace
55	[BUG]  [BUGGY]  Float  f  =  NumberUtils.createFloat(numeric,  0.0);  [CE]  ')'  expected  [FE]                AssertionError      [CONTEXT]      }  catch  (NumberFormatException  nfe)  {  //  NOPMD  }  return  createBigInteger(numeric);  }  throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  case  'f'  :  case  'F'  :  try  {      [BUGGY]  Float  f  =  NumberUtils.createFloat(numeric,  0.0);  [BUGGY]      if  (!(f.isInfinite()  ||  (f.floatValue()  ==  0.0F  &&  !allZeros)))  {    return  f;  }  }  catch  (NumberFormatException  nfe)  {  //  NOPMD  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  	projects/Lang7/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	521	521	1	replace	Float  f  =  NumberUtils.createFloat(numeric,  0.0);	  Float    f    =    NumberUtils.createFloat(numeric,    0.0F);    	non-compiled	[CE]  ')'  expected	40	None	replace
56	[BUG]  [BUGGY]  double  f  =  NumberUtils.createFloat(numeric).floatValue();  [CE]  ')'  expected  [FE]              AssertionError      [CONTEXT]      }  catch  (NumberFormatException  nfe)  {  //  NOPMD  }  return  createBigInteger(numeric);  }  throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  case  'f'  :  case  'F'  :  try  {      [BUGGY]  double  f  =  NumberUtils.createFloat(numeric).floatValue();  [BUGGY]      if  (!(f.isInfinite()  ||  (f.floatValue()  ==  0.0F  &&  !allZeros)))  {    return  f;  }  }  catch  (NumberFormatException  nfe)  {  //  NOPMD  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  	projects/Lang7/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	521	521	1	replace	double  f  =  NumberUtils.createFloat(numeric).floatValue();	  float    f    =    NumberUtils.createFloat(numeric).floatValue();    	non-compiled	[CE]  ')'  expected	22	None	replace
57	[BUG]  [BUGGY]  double  f  =  NumberUtils.createDouble(numeric).floatValue();  [CE]  ')'  expected  [FE]                AssertionError      [CONTEXT]      }  catch  (NumberFormatException  nfe)  {  //  NOPMD  }  return  createBigInteger(numeric);  }  throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  case  'f'  :  case  'F'  :  try  {      [BUGGY]  double  f  =  NumberUtils.createDouble(numeric).floatValue();  [BUGGY]      if  (!(f.isInfinite()  ||  (f.floatValue()  ==  0.0F  &&  !allZeros)))  {    return  f;  }  }  catch  (NumberFormatException  nfe)  {  //  NOPMD  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  	projects/Lang7/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	521	521	1	replace	double  f  =  NumberUtils.createDouble(numeric).floatValue();	  float    f    =    NumberUtils.createFloat(numeric).floatValue();    	non-compiled	[CE]  ')'  expected	22	None	replace
58	[BUG]  [BUGGY]  Integer  f  =  createFloat(numeric);  [CE]  ')'  expected  [FE]                  AssertionError      [CONTEXT]      }  catch  (NumberFormatException  nfe)  {  //  NOPMD  }  return  createBigInteger(numeric);  }  throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  case  'f'  :  case  'F'  :  try  {      [BUGGY]  Integer  f  =  createFloat(numeric);  [BUGGY]      if  (!(f.isInfinite()  ||  (f.floatValue()  ==  0.0F  &&  !allZeros)))  {    return  f;  }  }  catch  (NumberFormatException  nfe)  {  //  NOPMD  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  	projects/Lang7/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	521	521	1	replace	Integer  f  =  createFloat(numeric);	  Integer    f    =    createBigDecimal(numeric);    	non-compiled	[CE]  ')'  expected	56	None	replace
59	[BUG]  [BUGGY]  NullUtils.createNumber(str);  [CE]  ')'  expected  [FE]                AssertionError      [CONTEXT]      }  catch  (NumberFormatException  nfe)  {  //  NOPMD  }  return  createBigInteger(numeric);  }  throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  case  'f'  :  case  'F'  :  try  {      [BUGGY]  NullUtils.createNumber(str);  [BUGGY]      Float  f  =  NumberUtils.createFloat(numeric);  if  (!(f.isInfinite()  ||  (f.floatValue()  ==  0.0F  &&  !allZeros)))  {    return  f;  }  }  catch  (NumberFormatException  nfe)  {  //  NOPMD  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  	projects/Lang7/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	521	521	1	replace	NullUtils.createNumber(str);	  NullUtils.createNumber(numeric);    	non-compiled	[CE]  ')'  expected	47	None	replace
60	[BUG]  [BUGGY]  NullUtils.createNumber(numeric,  str);  [CE]  ')'  expected  [FE]                  AssertionError      [CONTEXT]      }  catch  (NumberFormatException  nfe)  {  //  NOPMD  }  return  createBigInteger(numeric);  }  throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  case  'f'  :  case  'F'  :  try  {      [BUGGY]  NullUtils.createNumber(numeric,  str);  [BUGGY]      Float  f  =  NumberUtils.createFloat(numeric);  if  (!(f.isInfinite()  ||  (f.floatValue()  ==  0.0F  &&  !allZeros)))  {    return  f;  }  }  catch  (NumberFormatException  nfe)  {  //  NOPMD  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  	projects/Lang7/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	521	521	1	replace	NullUtils.createNumber(numeric,  str);	  NullUtils.createNumber(numeric);    	non-compiled	[CE]  ')'  expected	47	None	replace
61	[BUG]  [BUGGY]  NullUtils.createNull(numeric);  [CE]  ')'  expected  [FE]                    AssertionError      [CONTEXT]      }  catch  (NumberFormatException  nfe)  {  //  NOPMD  }  return  createBigInteger(numeric);  }  throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  case  'f'  :  case  'F'  :  try  {      [BUGGY]  NullUtils.createNull(numeric);  [BUGGY]      Float  f  =  NumberUtils.createFloat(numeric);  if  (!(f.isInfinite()  ||  (f.floatValue()  ==  0.0F  &&  !allZeros)))  {    return  f;  }  }  catch  (NumberFormatException  nfe)  {  //  NOPMD  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  	projects/Lang7/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	521	521	1	replace	NullUtils.createNull(numeric);	  NullUtils.createNumber(numeric);    	non-compiled	[CE]  ')'  expected	47	None	replace
62	[BUG]  [BUGGY]  Float  f  =  NumberUtils.createFloat(str,  str  +  1);  [CE]  ')'  expected  [FE]                    AssertionError      [CONTEXT]      }  catch  (NumberFormatException  nfe)  {  //  NOPMD  }  return  createBigInteger(numeric);  }  throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  case  'f'  :  case  'F'  :  try  {      [BUGGY]  Float  f  =  NumberUtils.createFloat(str,  str  +  1);  [BUGGY]      if  (!(f.isInfinite()  ||  (f.floatValue()  ==  0.0F  &&  !allZeros)))  {    return  f;  }  }  catch  (NumberFormatException  nfe)  {  //  NOPMD  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  	projects/Lang7/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	521	521	1	replace	Float  f  =  NumberUtils.createFloat(str,  str  +  1);	  Float    f    =    NumberUtils.createFloat(numeric,    str    +    1);    	non-compiled	[CE]  ')'  expected	37	None	replace
63	[BUG]  [BUGGY]  Float  f  =  NumberUtils.createFloat(numeric,  str  +  2);  [CE]  ')'  expected  [FE]                      AssertionError      [CONTEXT]      }  catch  (NumberFormatException  nfe)  {  //  NOPMD  }  return  createBigInteger(numeric);  }  throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  case  'f'  :  case  'F'  :  try  {      [BUGGY]  Float  f  =  NumberUtils.createFloat(numeric,  str  +  2);  [BUGGY]      if  (!(f.isInfinite()  ||  (f.floatValue()  ==  0.0F  &&  !allZeros)))  {    return  f;  }  }  catch  (NumberFormatException  nfe)  {  //  NOPMD  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  	projects/Lang7/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	521	521	1	replace	Float  f  =  NumberUtils.createFloat(numeric,  str  +  2);	  Float    f    =    NumberUtils.createFloat(numeric,    str    +    1);    	non-compiled	[CE]  ')'  expected	37	None	replace
64	[BUG]  [BUGGY]  Float  f  =  NumberUtils.createFloat(numeric,  str  +  3);  [CE]  ')'  expected  [FE]                        AssertionError      [CONTEXT]      }  catch  (NumberFormatException  nfe)  {  //  NOPMD  }  return  createBigInteger(numeric);  }  throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  case  'f'  :  case  'F'  :  try  {      [BUGGY]  Float  f  =  NumberUtils.createFloat(numeric,  str  +  3);  [BUGGY]      if  (!(f.isInfinite()  ||  (f.floatValue()  ==  0.0F  &&  !allZeros)))  {    return  f;  }  }  catch  (NumberFormatException  nfe)  {  //  NOPMD  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  	projects/Lang7/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	521	521	1	replace	Float  f  =  NumberUtils.createFloat(numeric,  str  +  3);	  Float    f    =    NumberUtils.createFloat(numeric,    str    +    1);    	non-compiled	[CE]  ')'  expected	37	None	replace
65	[BUG]  [BUGGY]  Float  f  =  NumberUtils.createFloat(str).doubleValue();  [CE]  ')'  expected  [FE]              AssertionError      [CONTEXT]      }  catch  (NumberFormatException  nfe)  {  //  NOPMD  }  return  createBigInteger(numeric);  }  throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  case  'f'  :  case  'F'  :  try  {      [BUGGY]  Float  f  =  NumberUtils.createFloat(str).doubleValue();  [BUGGY]      if  (!(f.isInfinite()  ||  (f.floatValue()  ==  0.0F  &&  !allZeros)))  {    return  f;  }  }  catch  (NumberFormatException  nfe)  {  //  NOPMD  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  	projects/Lang7/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	521	521	1	replace	Float  f  =  NumberUtils.createFloat(str).doubleValue();	  Float    f    =    NumberUtils.createFloat(numeric).doubleValue();    	non-compiled	[CE]  ')'  expected	46	None	replace
66	[BUG]  [BUGGY]  float  f  =  NumberUtils.createFloat(numeric).doubleValue();  [CE]  ')'  expected  [FE]                AssertionError      [CONTEXT]      }  catch  (NumberFormatException  nfe)  {  //  NOPMD  }  return  createBigInteger(numeric);  }  throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  case  'f'  :  case  'F'  :  try  {      [BUGGY]  float  f  =  NumberUtils.createFloat(numeric).doubleValue();  [BUGGY]      if  (!(f.isInfinite()  ||  (f.floatValue()  ==  0.0F  &&  !allZeros)))  {    return  f;  }  }  catch  (NumberFormatException  nfe)  {  //  NOPMD  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  	projects/Lang7/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	521	521	1	replace	float  f  =  NumberUtils.createFloat(numeric).doubleValue();	  Float    f    =    NumberUtils.createFloat(numeric).doubleValue();    	non-compiled	[CE]  ')'  expected	46	None	replace
67	[BUG]  [BUGGY]  Float  f  =  NumberUtils.createFloat(numeric.floatValue()  *  1);  [CE]  ')'  expected  [FE]                AssertionError      [CONTEXT]      }  catch  (NumberFormatException  nfe)  {  //  NOPMD  }  return  createBigInteger(numeric);  }  throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  case  'f'  :  case  'F'  :  try  {      [BUGGY]  Float  f  =  NumberUtils.createFloat(numeric.floatValue()  *  1);  [BUGGY]      if  (!(f.isInfinite()  ||  (f.floatValue()  ==  0.0F  &&  !allZeros)))  {    return  f;  }  }  catch  (NumberFormatException  nfe)  {  //  NOPMD  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  	projects/Lang7/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	521	521	1	replace	Float  f  =  NumberUtils.createFloat(numeric.floatValue()  *  1);	  Float    f    =    NumberUtils.createFloat(numeric.floatValue()    -    1);    	non-compiled	[CE]  ')'  expected	51	None	replace
68	[BUG]  [BUGGY]  Integer  f  =  NumberUtils.createDouble(numeric);  [CE]  ')'  expected  [FE]            AssertionError      [CONTEXT]      }  catch  (NumberFormatException  nfe)  {  //  NOPMD  }  return  createBigInteger(numeric);  }  throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  case  'f'  :  case  'F'  :  try  {      [BUGGY]  Integer  f  =  NumberUtils.createDouble(numeric);  [BUGGY]      if  (!(f.isInfinite()  ||  (f.floatValue()  ==  0.0F  &&  !allZeros)))  {    return  f;  }  }  catch  (NumberFormatException  nfe)  {  //  NOPMD  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  	projects/Lang7/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	521	521	1	replace	Integer  f  =  NumberUtils.createDouble(numeric);	  Integer    f    =    NumberUtils.createFloat(str);    	non-compiled	[CE]  ')'  expected	54	None	replace
69	[BUG]  [BUGGY]  Float  f  =  NumberUtils.createFloat(str,  string);  [CE]  ')'  expected  [FE]              AssertionError      [CONTEXT]      }  catch  (NumberFormatException  nfe)  {  //  NOPMD  }  return  createBigInteger(numeric);  }  throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  case  'f'  :  case  'F'  :  try  {      [BUGGY]  Float  f  =  NumberUtils.createFloat(str,  string);  [BUGGY]      if  (!(f.isInfinite()  ||  (f.floatValue()  ==  0.0F  &&  !allZeros)))  {    return  f;  }  }  catch  (NumberFormatException  nfe)  {  //  NOPMD  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  	projects/Lang7/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	521	521	1	replace	Float  f  =  NumberUtils.createFloat(str,  string);	  Float    f    =    NumberUtils.createFloat(numeric,    string);    	non-compiled	[CE]  ')'  expected	57	None	replace
70	[BUG]  [BUGGY]  Float  f  =  NumberUtils.createFloat(dec,  exp);  [CE]  ')'  expected  [FE]                AssertionError      [CONTEXT]      }  catch  (NumberFormatException  nfe)  {  //  NOPMD  }  return  createBigInteger(numeric);  }  throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  case  'f'  :  case  'F'  :  try  {      [BUGGY]  Float  f  =  NumberUtils.createFloat(dec,  exp);  [BUGGY]      if  (!(f.isInfinite()  ||  (f.floatValue()  ==  0.0F  &&  !allZeros)))  {    return  f;  }  }  catch  (NumberFormatException  nfe)  {  //  NOPMD  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  	projects/Lang7/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	521	521	1	replace	Float  f  =  NumberUtils.createFloat(dec,  exp);	  Float    f    =    NumberUtils.createFloat(numeric,    exp);    	non-compiled	[CE]  ')'  expected	9	None	replace
71	[BUG]  [BUGGY]  Float  f  =  NumberUtils.createFloat(str,  exp);  [CE]  ')'  expected  [FE]                  AssertionError      [CONTEXT]      }  catch  (NumberFormatException  nfe)  {  //  NOPMD  }  return  createBigInteger(numeric);  }  throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  case  'f'  :  case  'F'  :  try  {      [BUGGY]  Float  f  =  NumberUtils.createFloat(str,  exp);  [BUGGY]      if  (!(f.isInfinite()  ||  (f.floatValue()  ==  0.0F  &&  !allZeros)))  {    return  f;  }  }  catch  (NumberFormatException  nfe)  {  //  NOPMD  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  	projects/Lang7/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	521	521	1	replace	Float  f  =  NumberUtils.createFloat(str,  exp);	  Float    f    =    NumberUtils.createFloat(numeric,    exp);    	non-compiled	[CE]  ')'  expected	9	None	replace
72	[BUG]  [BUGGY]  Float  f  =  createFloat(numeric.floatValue());  [CE]  ')'  expected  [FE]                    AssertionError      [CONTEXT]      }  catch  (NumberFormatException  nfe)  {  //  NOPMD  }  return  createBigInteger(numeric);  }  throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  case  'f'  :  case  'F'  :  try  {      [BUGGY]  Float  f  =  createFloat(numeric.floatValue());  [BUGGY]      if  (!(f.isInfinite()  ||  (f.floatValue()  ==  0.0F  &&  !allZeros)))  {    return  f;  }  }  catch  (NumberFormatException  nfe)  {  //  NOPMD  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  	projects/Lang7/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	521	521	1	replace	Float  f  =  createFloat(numeric.floatValue());	  Float    f    =    createFloat(numeric);    	non-compiled	[CE]  ')'  expected	12	None	replace
73	[BUG]  [BUGGY]  Float  f  =  createFloat(numeric,  str);  [CE]  ')'  expected  [FE]                      AssertionError      [CONTEXT]      }  catch  (NumberFormatException  nfe)  {  //  NOPMD  }  return  createBigInteger(numeric);  }  throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  case  'f'  :  case  'F'  :  try  {      [BUGGY]  Float  f  =  createFloat(numeric,  str);  [BUGGY]      if  (!(f.isInfinite()  ||  (f.floatValue()  ==  0.0F  &&  !allZeros)))  {    return  f;  }  }  catch  (NumberFormatException  nfe)  {  //  NOPMD  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  	projects/Lang7/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	521	521	1	replace	Float  f  =  createFloat(numeric,  str);	  Float    f    =    createFloat(numeric);    	non-compiled	[CE]  ')'  expected	12	None	replace
74	[BUG]  [BUGGY]  Float  f  =  createFloat(numeric.doubleValue());  [CE]  ')'  expected  [FE]                        AssertionError      [CONTEXT]      }  catch  (NumberFormatException  nfe)  {  //  NOPMD  }  return  createBigInteger(numeric);  }  throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  case  'f'  :  case  'F'  :  try  {      [BUGGY]  Float  f  =  createFloat(numeric.doubleValue());  [BUGGY]      if  (!(f.isInfinite()  ||  (f.floatValue()  ==  0.0F  &&  !allZeros)))  {    return  f;  }  }  catch  (NumberFormatException  nfe)  {  //  NOPMD  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  	projects/Lang7/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	521	521	1	replace	Float  f  =  createFloat(numeric.doubleValue());	  Float    f    =    createFloat(numeric);    	non-compiled	[CE]  ')'  expected	12	None	replace
75	[BUG]  [BUGGY]  NumberUtils.createNumber(numeric,  mant);  [CE]  ')'  expected  [FE]                  AssertionError      [CONTEXT]      }  catch  (NumberFormatException  nfe)  {  //  NOPMD  }  return  createBigInteger(numeric);  }  throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  case  'f'  :  case  'F'  :  try  {      [BUGGY]  NumberUtils.createNumber(numeric,  mant);  [BUGGY]      Float  f  =  NumberUtils.createFloat(numeric);  if  (!(f.isInfinite()  ||  (f.floatValue()  ==  0.0F  &&  !allZeros)))  {    return  f;  }  }  catch  (NumberFormatException  nfe)  {  //  NOPMD  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  	projects/Lang7/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	521	521	1	replace	NumberUtils.createNumber(numeric,  mant);	  NumberUtils.createNumber(numeric,    str);    	non-compiled	[CE]  ')'  expected	28	None	replace
76	[BUG]  [BUGGY]  NumberUtils.createNumber(mant,  str);  [CE]  ')'  expected  [FE]                    AssertionError      [CONTEXT]      }  catch  (NumberFormatException  nfe)  {  //  NOPMD  }  return  createBigInteger(numeric);  }  throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  case  'f'  :  case  'F'  :  try  {      [BUGGY]  NumberUtils.createNumber(mant,  str);  [BUGGY]      Float  f  =  NumberUtils.createFloat(numeric);  if  (!(f.isInfinite()  ||  (f.floatValue()  ==  0.0F  &&  !allZeros)))  {    return  f;  }  }  catch  (NumberFormatException  nfe)  {  //  NOPMD  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  	projects/Lang7/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	521	521	1	replace	NumberUtils.createNumber(mant,  str);	  NumberUtils.createNumber(numeric,    str);    	non-compiled	[CE]  ')'  expected	28	None	replace
77	[BUG]  [BUGGY]  NumberUtils.createNumber(str,  numeric);  [CE]  ')'  expected  [FE]                      AssertionError      [CONTEXT]      }  catch  (NumberFormatException  nfe)  {  //  NOPMD  }  return  createBigInteger(numeric);  }  throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  case  'f'  :  case  'F'  :  try  {      [BUGGY]  NumberUtils.createNumber(str,  numeric);  [BUGGY]      Float  f  =  NumberUtils.createFloat(numeric);  if  (!(f.isInfinite()  ||  (f.floatValue()  ==  0.0F  &&  !allZeros)))  {    return  f;  }  }  catch  (NumberFormatException  nfe)  {  //  NOPMD  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  	projects/Lang7/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	521	521	1	replace	NumberUtils.createNumber(str,  numeric);	  NumberUtils.createNumber(numeric,    str);    	non-compiled	[CE]  ')'  expected	28	None	replace
78	[BUG]  [BUGGY]  NumberUtils.createNumber(str,  null);  [CE]  ')'  expected  [FE]                        AssertionError      [CONTEXT]      }  catch  (NumberFormatException  nfe)  {  //  NOPMD  }  return  createBigInteger(numeric);  }  throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  case  'f'  :  case  'F'  :  try  {      [BUGGY]  NumberUtils.createNumber(str,  null);  [BUGGY]      Float  f  =  NumberUtils.createFloat(numeric);  if  (!(f.isInfinite()  ||  (f.floatValue()  ==  0.0F  &&  !allZeros)))  {    return  f;  }  }  catch  (NumberFormatException  nfe)  {  //  NOPMD  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  	projects/Lang7/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	521	521	1	replace	NumberUtils.createNumber(str,  null);	  NumberUtils.createNumber(numeric,    str);    	non-compiled	[CE]  ')'  expected	28	None	replace
79	[BUG]  [BUGGY]  float  f  =  NumberUtils.createFloat(str);  [CE]  ')'  expected  [FE]            AssertionError      [CONTEXT]      }  catch  (NumberFormatException  nfe)  {  //  NOPMD  }  return  createBigInteger(numeric);  }  throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  case  'f'  :  case  'F'  :  try  {      [BUGGY]  float  f  =  NumberUtils.createFloat(str);  [BUGGY]      if  (!(f.isInfinite()  ||  (f.floatValue()  ==  0.0F  &&  !allZeros)))  {    return  f;  }  }  catch  (NumberFormatException  nfe)  {  //  NOPMD  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  	projects/Lang7/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	521	521	1	replace	float  f  =  NumberUtils.createFloat(str);	  float    f    =    NumberUtils.createFloat(numeric);    	non-compiled	[CE]  ')'  expected	15	None	replace
80	[BUG]  [BUGGY]  double  f  =  NumberUtils.createDouble(numeric);  [CE]  ')'  expected  [FE]              AssertionError      [CONTEXT]      }  catch  (NumberFormatException  nfe)  {  //  NOPMD  }  return  createBigInteger(numeric);  }  throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  case  'f'  :  case  'F'  :  try  {      [BUGGY]  double  f  =  NumberUtils.createDouble(numeric);  [BUGGY]      if  (!(f.isInfinite()  ||  (f.floatValue()  ==  0.0F  &&  !allZeros)))  {    return  f;  }  }  catch  (NumberFormatException  nfe)  {  //  NOPMD  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  	projects/Lang7/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	521	521	1	replace	double  f  =  NumberUtils.createDouble(numeric);	  float    f    =    NumberUtils.createFloat(numeric);    	non-compiled	[CE]  ')'  expected	15	None	replace
81	[BUG]  [BUGGY]  Float  f  =  NumberUtils.createFloat(str,  allZeros,  numeric);  [CE]  ')'  expected  [FE]              AssertionError      [CONTEXT]      }  catch  (NumberFormatException  nfe)  {  //  NOPMD  }  return  createBigInteger(numeric);  }  throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  case  'f'  :  case  'F'  :  try  {      [BUGGY]  Float  f  =  NumberUtils.createFloat(str,  allZeros,  numeric);  [BUGGY]      if  (!(f.isInfinite()  ||  (f.floatValue()  ==  0.0F  &&  !allZeros)))  {    return  f;  }  }  catch  (NumberFormatException  nfe)  {  //  NOPMD  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  	projects/Lang7/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	521	521	1	replace	Float  f  =  NumberUtils.createFloat(str,  allZeros,  numeric);	  Float    f    =    NumberUtils.createFloat(numeric,    allZeros,    str);    	non-compiled	[CE]  ')'  expected	18	None	replace
82	[BUG]  [BUGGY]  Float  f  =  NumberUtils.createFloat(numeric,  str,  allZeros);  [CE]  ')'  expected  [FE]                AssertionError      [CONTEXT]      }  catch  (NumberFormatException  nfe)  {  //  NOPMD  }  return  createBigInteger(numeric);  }  throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  case  'f'  :  case  'F'  :  try  {      [BUGGY]  Float  f  =  NumberUtils.createFloat(numeric,  str,  allZeros);  [BUGGY]      if  (!(f.isInfinite()  ||  (f.floatValue()  ==  0.0F  &&  !allZeros)))  {    return  f;  }  }  catch  (NumberFormatException  nfe)  {  //  NOPMD  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  	projects/Lang7/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	521	521	1	replace	Float  f  =  NumberUtils.createFloat(numeric,  str,  allZeros);	  Float    f    =    NumberUtils.createFloat(numeric,    allZeros,    str);    	non-compiled	[CE]  ')'  expected	18	None	replace
83	[BUG]  [BUGGY]  Float  f  =  NumberUtils.createFloat(numeric,  allZeros,  mant);  [CE]  ')'  expected  [FE]                  AssertionError      [CONTEXT]      }  catch  (NumberFormatException  nfe)  {  //  NOPMD  }  return  createBigInteger(numeric);  }  throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  case  'f'  :  case  'F'  :  try  {      [BUGGY]  Float  f  =  NumberUtils.createFloat(numeric,  allZeros,  mant);  [BUGGY]      if  (!(f.isInfinite()  ||  (f.floatValue()  ==  0.0F  &&  !allZeros)))  {    return  f;  }  }  catch  (NumberFormatException  nfe)  {  //  NOPMD  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  	projects/Lang7/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	521	521	1	replace	Float  f  =  NumberUtils.createFloat(numeric,  allZeros,  mant);	  Float    f    =    NumberUtils.createFloat(numeric,    allZeros,    str);    	non-compiled	[CE]  ')'  expected	18	None	replace
84	[BUG]  [BUGGY]  Float  f  =  NumberUtils.createFloat(mant,  allZeros,  str);  [CE]  ')'  expected  [FE]                    AssertionError      [CONTEXT]      }  catch  (NumberFormatException  nfe)  {  //  NOPMD  }  return  createBigInteger(numeric);  }  throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  case  'f'  :  case  'F'  :  try  {      [BUGGY]  Float  f  =  NumberUtils.createFloat(mant,  allZeros,  str);  [BUGGY]      if  (!(f.isInfinite()  ||  (f.floatValue()  ==  0.0F  &&  !allZeros)))  {    return  f;  }  }  catch  (NumberFormatException  nfe)  {  //  NOPMD  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  	projects/Lang7/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	521	521	1	replace	Float  f  =  NumberUtils.createFloat(mant,  allZeros,  str);	  Float    f    =    NumberUtils.createFloat(numeric,    allZeros,    str);    	non-compiled	[CE]  ')'  expected	18	None	replace
85	[BUG]  [BUGGY]  Float  f  =  NumberUtils.createFloat(numeric  +  10.0);  [CE]  ')'  expected  [FE]              AssertionError      [CONTEXT]      }  catch  (NumberFormatException  nfe)  {  //  NOPMD  }  return  createBigInteger(numeric);  }  throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  case  'f'  :  case  'F'  :  try  {      [BUGGY]  Float  f  =  NumberUtils.createFloat(numeric  +  10.0);  [BUGGY]      if  (!(f.isInfinite()  ||  (f.floatValue()  ==  0.0F  &&  !allZeros)))  {    return  f;  }  }  catch  (NumberFormatException  nfe)  {  //  NOPMD  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  	projects/Lang7/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	521	521	1	replace	Float  f  =  NumberUtils.createFloat(numeric  +  10.0);	  Float    f    =    NumberUtils.createFloat(numeric    +    1L);    	non-compiled	[CE]  ')'  expected	25	None	replace
86	[BUG]  [BUGGY]  Float  f  =  NumberUtils.createFloat(numeric,  null);  [CE]  ')'  expected  [FE]                AssertionError      [CONTEXT]      }  catch  (NumberFormatException  nfe)  {  //  NOPMD  }  return  createBigInteger(numeric);  }  throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  case  'f'  :  case  'F'  :  try  {      [BUGGY]  Float  f  =  NumberUtils.createFloat(numeric,  null);  [BUGGY]      if  (!(f.isInfinite()  ||  (f.floatValue()  ==  0.0F  &&  !allZeros)))  {    return  f;  }  }  catch  (NumberFormatException  nfe)  {  //  NOPMD  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  	projects/Lang7/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	521	521	1	replace	Float  f  =  NumberUtils.createFloat(numeric,  null);	  Float    f    =    NumberUtils.createFloat(str,    null);    	non-compiled	[CE]  ')'  expected	35	None	replace
87	[BUG]  [BUGGY]  float  f  =  NumberUtils.createFloat(numeric,  null);  [CE]  ')'  expected  [FE]                  AssertionError      [CONTEXT]      }  catch  (NumberFormatException  nfe)  {  //  NOPMD  }  return  createBigInteger(numeric);  }  throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  case  'f'  :  case  'F'  :  try  {      [BUGGY]  float  f  =  NumberUtils.createFloat(numeric,  null);  [BUGGY]      if  (!(f.isInfinite()  ||  (f.floatValue()  ==  0.0F  &&  !allZeros)))  {    return  f;  }  }  catch  (NumberFormatException  nfe)  {  //  NOPMD  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  	projects/Lang7/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	521	521	1	replace	float  f  =  NumberUtils.createFloat(numeric,  null);	  Float    f    =    NumberUtils.createFloat(str,    null);    	non-compiled	[CE]  ')'  expected	35	None	replace
88	[BUG]  [BUGGY]  float  f  =  NumberUtils.createFloat(numeric,  dec);  [CE]  ')'  expected  [FE]              AssertionError      [CONTEXT]      }  catch  (NumberFormatException  nfe)  {  //  NOPMD  }  return  createBigInteger(numeric);  }  throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  case  'f'  :  case  'F'  :  try  {      [BUGGY]  float  f  =  NumberUtils.createFloat(numeric,  dec);  [BUGGY]      if  (!(f.isInfinite()  ||  (f.floatValue()  ==  0.0F  &&  !allZeros)))  {    return  f;  }  }  catch  (NumberFormatException  nfe)  {  //  NOPMD  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  	projects/Lang7/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	521	521	1	replace	float  f  =  NumberUtils.createFloat(numeric,  dec);	  Float    f    =    NumberUtils.createFloat(str,    dec);    	non-compiled	[CE]  ')'  expected	8	None	replace
89	[BUG]  [BUGGY]  Float  f  =  NumberUtils.createFloat(numeric,  10);  [CE]  ')'  expected  [FE]                AssertionError      [CONTEXT]      }  catch  (NumberFormatException  nfe)  {  //  NOPMD  }  return  createBigInteger(numeric);  }  throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  case  'f'  :  case  'F'  :  try  {      [BUGGY]  Float  f  =  NumberUtils.createFloat(numeric,  10);  [BUGGY]      if  (!(f.isInfinite()  ||  (f.floatValue()  ==  0.0F  &&  !allZeros)))  {    return  f;  }  }  catch  (NumberFormatException  nfe)  {  //  NOPMD  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  	projects/Lang7/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	521	521	1	replace	Float  f  =  NumberUtils.createFloat(numeric,  10);	  Float    f    =    NumberUtils.createFloat(numeric,    0);    	non-compiled	[CE]  ')'  expected	42	None	replace
90	[BUG]  [BUGGY]  Float  f  =  NumberUtils.createFloat(str,  0);  [CE]  ')'  expected  [FE]                  AssertionError      [CONTEXT]      }  catch  (NumberFormatException  nfe)  {  //  NOPMD  }  return  createBigInteger(numeric);  }  throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  case  'f'  :  case  'F'  :  try  {      [BUGGY]  Float  f  =  NumberUtils.createFloat(str,  0);  [BUGGY]      if  (!(f.isInfinite()  ||  (f.floatValue()  ==  0.0F  &&  !allZeros)))  {    return  f;  }  }  catch  (NumberFormatException  nfe)  {  //  NOPMD  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  	projects/Lang7/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	521	521	1	replace	Float  f  =  NumberUtils.createFloat(str,  0);	  Float    f    =    NumberUtils.createFloat(numeric,    0);    	non-compiled	[CE]  ')'  expected	42	None	replace
91	[BUG]  [BUGGY]  Integer  f  =  NumberUtils.createInteger(numeric  +  2);  [CE]  ')'  expected  [FE]            AssertionError      [CONTEXT]      }  catch  (NumberFormatException  nfe)  {  //  NOPMD  }  return  createBigInteger(numeric);  }  throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  case  'f'  :  case  'F'  :  try  {      [BUGGY]  Integer  f  =  NumberUtils.createInteger(numeric  +  2);  [BUGGY]      Float  f  =  NumberUtils.createFloat(numeric);  if  (!(f.isInfinite()  ||  (f.floatValue()  ==  0.0F  &&  !allZeros)))  {    return  f;  }  }  catch  (NumberFormatException  nfe)  {  //  NOPMD  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  	projects/Lang7/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	521	521	1	replace	Integer  f  =  NumberUtils.createInteger(numeric  +  2);	  Integer    f    =    NumberUtils.createInteger(numeric    +    1);    	non-compiled	[CE]  ')'  expected	38	None	replace
92	[BUG]  [BUGGY]  Integer  f  =  createBigInteger(str);  [CE]  ')'  expected  [FE]                  AssertionError      [CONTEXT]      }  catch  (NumberFormatException  nfe)  {  //  NOPMD  }  return  createBigInteger(numeric);  }  throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  case  'f'  :  case  'F'  :  try  {      [BUGGY]  Integer  f  =  createBigInteger(str);  [BUGGY]      if  (!(f.isInfinite()  ||  (f.floatValue()  ==  0.0F  &&  !allZeros)))  {    return  f;  }  }  catch  (NumberFormatException  nfe)  {  //  NOPMD  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  	projects/Lang7/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	521	521	1	replace	Integer  f  =  createBigInteger(str);	  Integer    f    =    createBigInteger(numeric);    	non-compiled	[CE]  ')'  expected	48	None	replace
93	[BUG]  [BUGGY]  Integer  f  =  NumberUtils.createFloat(numeric).intValue();  [CE]  ')'  expected  [FE]            AssertionError      [CONTEXT]      }  catch  (NumberFormatException  nfe)  {  //  NOPMD  }  return  createBigInteger(numeric);  }  throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  case  'f'  :  case  'F'  :  try  {      [BUGGY]  Integer  f  =  NumberUtils.createFloat(numeric).intValue();  [BUGGY]      Float  f  =  NumberUtils.createFloat(numeric);  if  (!(f.isInfinite()  ||  (f.floatValue()  ==  0.0F  &&  !allZeros)))  {    return  f;  }  }  catch  (NumberFormatException  nfe)  {  //  NOPMD  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  	projects/Lang7/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	521	521	1	replace	Integer  f  =  NumberUtils.createFloat(numeric).intValue();	  Integer    f    =    NumberUtils.createInteger(numeric).intValue();    	non-compiled	[CE]  ')'  expected	53	None	replace
94	[BUG]  [BUGGY]  Integer  f  =  NumberUtils.createInteger(numeric).doubleValue();  [CE]  ')'  expected  [FE]              AssertionError      [CONTEXT]      }  catch  (NumberFormatException  nfe)  {  //  NOPMD  }  return  createBigInteger(numeric);  }  throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  case  'f'  :  case  'F'  :  try  {      [BUGGY]  Integer  f  =  NumberUtils.createInteger(numeric).doubleValue();  [BUGGY]      Float  f  =  NumberUtils.createFloat(numeric);  if  (!(f.isInfinite()  ||  (f.floatValue()  ==  0.0F  &&  !allZeros)))  {    return  f;  }  }  catch  (NumberFormatException  nfe)  {  //  NOPMD  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  	projects/Lang7/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	521	521	1	replace	Integer  f  =  NumberUtils.createInteger(numeric).doubleValue();	  Integer    f    =    NumberUtils.createInteger(numeric).intValue();    	non-compiled	[CE]  ')'  expected	53	None	replace
95	[BUG]  [BUGGY]  Integer  f  =  NumberUtils.createInteger(numeric).floatValue();  [CE]  ')'  expected  [FE]                AssertionError      [CONTEXT]      }  catch  (NumberFormatException  nfe)  {  //  NOPMD  }  return  createBigInteger(numeric);  }  throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  case  'f'  :  case  'F'  :  try  {      [BUGGY]  Integer  f  =  NumberUtils.createInteger(numeric).floatValue();  [BUGGY]      Float  f  =  NumberUtils.createFloat(numeric);  if  (!(f.isInfinite()  ||  (f.floatValue()  ==  0.0F  &&  !allZeros)))  {    return  f;  }  }  catch  (NumberFormatException  nfe)  {  //  NOPMD  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  	projects/Lang7/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	521	521	1	replace	Integer  f  =  NumberUtils.createInteger(numeric).floatValue();	  Integer    f    =    NumberUtils.createInteger(numeric).intValue();    	non-compiled	[CE]  ')'  expected	53	None	replace
96	[BUG]  [BUGGY]  Float  f  =  getFloat(numeric.floatValue());  [CE]  ')'  expected  [FE]                        AssertionError      [CONTEXT]      }  catch  (NumberFormatException  nfe)  {  //  NOPMD  }  return  createBigInteger(numeric);  }  throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  case  'f'  :  case  'F'  :  try  {      [BUGGY]  Float  f  =  getFloat(numeric.floatValue());  [BUGGY]      if  (!(f.isInfinite()  ||  (f.floatValue()  ==  0.0F  &&  !allZeros)))  {    return  f;  }  }  catch  (NumberFormatException  nfe)  {  //  NOPMD  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  	projects/Lang7/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	521	521	1	replace	Float  f  =  getFloat(numeric.floatValue());	  Float    f    =    getFloat(numeric);    	non-compiled	[CE]  ')'  expected	14	None	replace
97	[BUG]  [BUGGY]  Float  f  =  getFloat(numeric.intValue());  [CE]  ')'  expected  [FE]                          AssertionError      [CONTEXT]      }  catch  (NumberFormatException  nfe)  {  //  NOPMD  }  return  createBigInteger(numeric);  }  throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  case  'f'  :  case  'F'  :  try  {      [BUGGY]  Float  f  =  getFloat(numeric.intValue());  [BUGGY]      if  (!(f.isInfinite()  ||  (f.floatValue()  ==  0.0F  &&  !allZeros)))  {    return  f;  }  }  catch  (NumberFormatException  nfe)  {  //  NOPMD  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  	projects/Lang7/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	521	521	1	replace	Float  f  =  getFloat(numeric.intValue());	  Float    f    =    getFloat(numeric);    	non-compiled	[CE]  ')'  expected	14	None	replace
98	[BUG]  [BUGGY]  Float  f  =  getFloat(numeric.doubleValue());  [CE]  ')'  expected  [FE]                            AssertionError      [CONTEXT]      }  catch  (NumberFormatException  nfe)  {  //  NOPMD  }  return  createBigInteger(numeric);  }  throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  case  'f'  :  case  'F'  :  try  {      [BUGGY]  Float  f  =  getFloat(numeric.doubleValue());  [BUGGY]      if  (!(f.isInfinite()  ||  (f.floatValue()  ==  0.0F  &&  !allZeros)))  {    return  f;  }  }  catch  (NumberFormatException  nfe)  {  //  NOPMD  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  	projects/Lang7/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	521	521	1	replace	Float  f  =  getFloat(numeric.doubleValue());	  Float    f    =    getFloat(numeric);    	non-compiled	[CE]  ')'  expected	14	None	replace
99	[BUG]  [BUGGY]  Float  f  =  NumberUtils.createFloat(numeric.doubleValue()  +  1);  [CE]  ')'  expected  [FE]                      AssertionError      [CONTEXT]      }  catch  (NumberFormatException  nfe)  {  //  NOPMD  }  return  createBigInteger(numeric);  }  throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  case  'f'  :  case  'F'  :  try  {      [BUGGY]  Float  f  =  NumberUtils.createFloat(numeric.doubleValue()  +  1);  [BUGGY]      if  (!(f.isInfinite()  ||  (f.floatValue()  ==  0.0F  &&  !allZeros)))  {    return  f;  }  }  catch  (NumberFormatException  nfe)  {  //  NOPMD  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  	projects/Lang7/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	521	521	1	replace	Float  f  =  NumberUtils.createFloat(numeric.doubleValue()  +  1);	  Float    f    =    NumberUtils.createFloat(numeric.doubleValue());    	non-compiled	[CE]  ')'  expected	33	None	replace
100	[BUG]  [BUGGY]  Float  f  =  NumberUtils.createFloat(numeric.doubleValue(),  str);  [CE]  ')'  expected  [FE]                        AssertionError      [CONTEXT]      }  catch  (NumberFormatException  nfe)  {  //  NOPMD  }  return  createBigInteger(numeric);  }  throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  case  'f'  :  case  'F'  :  try  {      [BUGGY]  Float  f  =  NumberUtils.createFloat(numeric.doubleValue(),  str);  [BUGGY]      if  (!(f.isInfinite()  ||  (f.floatValue()  ==  0.0F  &&  !allZeros)))  {    return  f;  }  }  catch  (NumberFormatException  nfe)  {  //  NOPMD  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  	projects/Lang7/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	521	521	1	replace	Float  f  =  NumberUtils.createFloat(numeric.doubleValue(),  str);	  Float    f    =    NumberUtils.createFloat(numeric.doubleValue());    	non-compiled	[CE]  ')'  expected	33	None	replace
101	[BUG]  [BUGGY]  Float  f  =  NumberUtils.createFloat(str.doubleValue());  [CE]  ')'  expected  [FE]                          AssertionError      [CONTEXT]      }  catch  (NumberFormatException  nfe)  {  //  NOPMD  }  return  createBigInteger(numeric);  }  throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  case  'f'  :  case  'F'  :  try  {      [BUGGY]  Float  f  =  NumberUtils.createFloat(str.doubleValue());  [BUGGY]      if  (!(f.isInfinite()  ||  (f.floatValue()  ==  0.0F  &&  !allZeros)))  {    return  f;  }  }  catch  (NumberFormatException  nfe)  {  //  NOPMD  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  	projects/Lang7/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	521	521	1	replace	Float  f  =  NumberUtils.createFloat(str.doubleValue());	  Float    f    =    NumberUtils.createFloat(numeric.doubleValue());    	non-compiled	[CE]  ')'  expected	33	None	replace
102	[BUG]  [BUGGY]  Integer  f  =  getFloatValue(numeric);  [CE]  ')'  expected  [FE]                    AssertionError      [CONTEXT]      }  catch  (NumberFormatException  nfe)  {  //  NOPMD  }  return  createBigInteger(numeric);  }  throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  case  'f'  :  case  'F'  :  try  {      [BUGGY]  Integer  f  =  getFloatValue(numeric);  [BUGGY]      if  (!(f.isInfinite()  ||  (f.floatValue()  ==  0.0F  &&  !allZeros)))  {    return  f;  }  }  catch  (NumberFormatException  nfe)  {  //  NOPMD  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  	projects/Lang7/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	521	521	1	replace	Integer  f  =  getFloatValue(numeric);	  Integer    f    =    getIntValue(numeric);    	non-compiled	[CE]  ')'  expected	49	None	replace
103	[BUG]  [BUGGY]  Integer  f  =  getIntValue(numeric.intValue());  [CE]  ')'  expected  [FE]                      AssertionError      [CONTEXT]      }  catch  (NumberFormatException  nfe)  {  //  NOPMD  }  return  createBigInteger(numeric);  }  throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  case  'f'  :  case  'F'  :  try  {      [BUGGY]  Integer  f  =  getIntValue(numeric.intValue());  [BUGGY]      if  (!(f.isInfinite()  ||  (f.floatValue()  ==  0.0F  &&  !allZeros)))  {    return  f;  }  }  catch  (NumberFormatException  nfe)  {  //  NOPMD  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  	projects/Lang7/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	521	521	1	replace	Integer  f  =  getIntValue(numeric.intValue());	  Integer    f    =    getIntValue(numeric);    	non-compiled	[CE]  ')'  expected	49	None	replace
104	[BUG]  [BUGGY]  Float  f  =  NumberUtils.createFloat(numeric  +  4);  [CE]  ')'  expected  [FE]            AssertionError      [CONTEXT]      }  catch  (NumberFormatException  nfe)  {  //  NOPMD  }  return  createBigInteger(numeric);  }  throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  case  'f'  :  case  'F'  :  try  {      [BUGGY]  Float  f  =  NumberUtils.createFloat(numeric  +  4);  [BUGGY]      if  (!(f.isInfinite()  ||  (f.floatValue()  ==  0.0F  &&  !allZeros)))  {    return  f;  }  }  catch  (NumberFormatException  nfe)  {  //  NOPMD  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  	projects/Lang7/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	521	521	1	replace	Float  f  =  NumberUtils.createFloat(numeric  +  4);	  Float    f    =    NumberUtils.createFloat(numeric    +    2);    	non-compiled	[CE]  ')'  expected	24	None	replace
105	[BUG]  [BUGGY]  Number  f  =  NumberUtils.createNumber(numeric  +  1L);  [CE]  ')'  expected  [FE]            AssertionError      [CONTEXT]      }  catch  (NumberFormatException  nfe)  {  //  NOPMD  }  return  createBigInteger(numeric);  }  throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  case  'f'  :  case  'F'  :  try  {      [BUGGY]  Number  f  =  NumberUtils.createNumber(numeric  +  1L);  [BUGGY]      Float  f  =  NumberUtils.createFloat(numeric);  if  (!(f.isInfinite()  ||  (f.floatValue()  ==  0.0F  &&  !allZeros)))  {    return  f;  }  }  catch  (NumberFormatException  nfe)  {  //  NOPMD  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  	projects/Lang7/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	521	521	1	replace	Number  f  =  NumberUtils.createNumber(numeric  +  1L);	  Number    f    =    NumberUtils.createNumber(numeric    +    1);    	non-compiled	[CE]  ')'  expected	44	None	replace
106	[BUG]  [BUGGY]  Number  f  =  NumberUtils.createNumber(numeric  +  2);  [CE]  ')'  expected  [FE]              AssertionError      [CONTEXT]      }  catch  (NumberFormatException  nfe)  {  //  NOPMD  }  return  createBigInteger(numeric);  }  throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  case  'f'  :  case  'F'  :  try  {      [BUGGY]  Number  f  =  NumberUtils.createNumber(numeric  +  2);  [BUGGY]      Float  f  =  NumberUtils.createFloat(numeric);  if  (!(f.isInfinite()  ||  (f.floatValue()  ==  0.0F  &&  !allZeros)))  {    return  f;  }  }  catch  (NumberFormatException  nfe)  {  //  NOPMD  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  	projects/Lang7/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	521	521	1	replace	Number  f  =  NumberUtils.createNumber(numeric  +  2);	  Number    f    =    NumberUtils.createNumber(numeric    +    1);    	non-compiled	[CE]  ')'  expected	44	None	replace
107	[BUG]  [BUGGY]  Number  f  =  NumberUtils.createBigDecimal(numeric,  str);  [CE]  ')'  expected  [FE]              AssertionError      [CONTEXT]      }  catch  (NumberFormatException  nfe)  {  //  NOPMD  }  return  createBigInteger(numeric);  }  throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  case  'f'  :  case  'F'  :  try  {      [BUGGY]  Number  f  =  NumberUtils.createBigDecimal(numeric,  str);  [BUGGY]      Float  f  =  NumberUtils.createFloat(numeric);  if  (!(f.isInfinite()  ||  (f.floatValue()  ==  0.0F  &&  !allZeros)))  {    return  f;  }  }  catch  (NumberFormatException  nfe)  {  //  NOPMD  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  	projects/Lang7/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	521	521	1	replace	Number  f  =  NumberUtils.createBigDecimal(numeric,  str);	  Number    f    =    NumberUtils.createBigDecimal(numeric);    	non-compiled	[CE]  ')'  expected	6	None	replace
108	[BUG]  [BUGGY]  Number  f  =  NumberUtils.createNumber(numeric,  mant);  [CE]  ')'  expected  [FE]            AssertionError      [CONTEXT]      }  catch  (NumberFormatException  nfe)  {  //  NOPMD  }  return  createBigInteger(numeric);  }  throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  case  'f'  :  case  'F'  :  try  {      [BUGGY]  Number  f  =  NumberUtils.createNumber(numeric,  mant);  [BUGGY]      Float  f  =  NumberUtils.createFloat(numeric);  if  (!(f.isInfinite()  ||  (f.floatValue()  ==  0.0F  &&  !allZeros)))  {    return  f;  }  }  catch  (NumberFormatException  nfe)  {  //  NOPMD  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  	projects/Lang7/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	521	521	1	replace	Number  f  =  NumberUtils.createNumber(numeric,  mant);	  Number    f    =    NumberUtils.createNumber(numeric,    str);    	non-compiled	[CE]  ')'  expected	4	None	replace
109	[BUG]  [BUGGY]  Number  f  =  NumberUtils.createNumber(numeric,  str  +  1);  [CE]  ')'  expected  [FE]              AssertionError      [CONTEXT]      }  catch  (NumberFormatException  nfe)  {  //  NOPMD  }  return  createBigInteger(numeric);  }  throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  case  'f'  :  case  'F'  :  try  {      [BUGGY]  Number  f  =  NumberUtils.createNumber(numeric,  str  +  1);  [BUGGY]      Float  f  =  NumberUtils.createFloat(numeric);  if  (!(f.isInfinite()  ||  (f.floatValue()  ==  0.0F  &&  !allZeros)))  {    return  f;  }  }  catch  (NumberFormatException  nfe)  {  //  NOPMD  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  	projects/Lang7/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	521	521	1	replace	Number  f  =  NumberUtils.createNumber(numeric,  str  +  1);	  Number    f    =    NumberUtils.createNumber(numeric,    str);    	non-compiled	[CE]  ')'  expected	4	None	replace
110	[BUG]  [BUGGY]  Float  f  =  NumberUtils.createFloat(str,  mant);  [CE]  ')'  expected  [FE]                  AssertionError      [CONTEXT]      }  catch  (NumberFormatException  nfe)  {  //  NOPMD  }  return  createBigInteger(numeric);  }  throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  case  'f'  :  case  'F'  :  try  {      [BUGGY]  Float  f  =  NumberUtils.createFloat(str,  mant);  [BUGGY]      if  (!(f.isInfinite()  ||  (f.floatValue()  ==  0.0F  &&  !allZeros)))  {    return  f;  }  }  catch  (NumberFormatException  nfe)  {  //  NOPMD  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  	projects/Lang7/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	521	521	1	replace	Float  f  =  NumberUtils.createFloat(str,  mant);	  Float    f    =    NumberUtils.createFloat(numeric,    mant);    	non-compiled	[CE]  ')'  expected	36	None	replace
111	[BUG]  [BUGGY]  Integer  f  =  createBigDecimal(numeric.doubleValue());  [CE]  ')'  expected  [FE]                  AssertionError      [CONTEXT]      }  catch  (NumberFormatException  nfe)  {  //  NOPMD  }  return  createBigInteger(numeric);  }  throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  case  'f'  :  case  'F'  :  try  {      [BUGGY]  Integer  f  =  createBigDecimal(numeric.doubleValue());  [BUGGY]      if  (!(f.isInfinite()  ||  (f.floatValue()  ==  0.0F  &&  !allZeros)))  {    return  f;  }  }  catch  (NumberFormatException  nfe)  {  //  NOPMD  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  	projects/Lang7/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	521	521	1	replace	Integer  f  =  createBigDecimal(numeric.doubleValue());	  Integer    f    =    createBigDecimal(numeric);    	non-compiled	[CE]  ')'  expected	56	None	replace
112	[BUG]  [BUGGY]  Integer  f  =  createBigDecimal(numeric.intValue());  [CE]  ')'  expected  [FE]                    AssertionError      [CONTEXT]      }  catch  (NumberFormatException  nfe)  {  //  NOPMD  }  return  createBigInteger(numeric);  }  throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  case  'f'  :  case  'F'  :  try  {      [BUGGY]  Integer  f  =  createBigDecimal(numeric.intValue());  [BUGGY]      if  (!(f.isInfinite()  ||  (f.floatValue()  ==  0.0F  &&  !allZeros)))  {    return  f;  }  }  catch  (NumberFormatException  nfe)  {  //  NOPMD  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  	projects/Lang7/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	521	521	1	replace	Integer  f  =  createBigDecimal(numeric.intValue());	  Integer    f    =    createBigDecimal(numeric);    	non-compiled	[CE]  ')'  expected	56	None	replace
113	[BUG]  [BUGGY]  Integer  f  =  getIntValue(numeric).intValue();  [CE]  ')'  expected  [FE]                    AssertionError      [CONTEXT]      }  catch  (NumberFormatException  nfe)  {  //  NOPMD  }  return  createBigInteger(numeric);  }  throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  case  'f'  :  case  'F'  :  try  {      [BUGGY]  Integer  f  =  getIntValue(numeric).intValue();  [BUGGY]      if  (!(f.isInfinite()  ||  (f.floatValue()  ==  0.0F  &&  !allZeros)))  {    return  f;  }  }  catch  (NumberFormatException  nfe)  {  //  NOPMD  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  	projects/Lang7/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	521	521	1	replace	Integer  f  =  getIntValue(numeric).intValue();	  Integer    f    =    getIntValue(numeric);    	non-compiled	[CE]  ')'  expected	49	None	replace
114	[BUG]  [BUGGY]  Integer  f  =  getIntValue(numeric.doubleValue());  [CE]  ')'  expected  [FE]                      AssertionError      [CONTEXT]      }  catch  (NumberFormatException  nfe)  {  //  NOPMD  }  return  createBigInteger(numeric);  }  throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  case  'f'  :  case  'F'  :  try  {      [BUGGY]  Integer  f  =  getIntValue(numeric.doubleValue());  [BUGGY]      if  (!(f.isInfinite()  ||  (f.floatValue()  ==  0.0F  &&  !allZeros)))  {    return  f;  }  }  catch  (NumberFormatException  nfe)  {  //  NOPMD  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  	projects/Lang7/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	521	521	1	replace	Integer  f  =  getIntValue(numeric.doubleValue());	  Integer    f    =    getIntValue(numeric);    	non-compiled	[CE]  ')'  expected	49	None	replace
115	[BUG]  [BUGGY]  Integer  numeric  =  str.substring(0,  str.length()  -  4);  [CE]  ')'  expected  [FE]              AssertionError      [CONTEXT]      }  catch  (NumberFormatException  nfe)  {  //  NOPMD  }  return  createBigInteger(numeric);  }  throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  case  'f'  :  case  'F'  :  try  {      [BUGGY]  Integer  numeric  =  str.substring(0,  str.length()  -  4);  [BUGGY]      Float  f  =  NumberUtils.createFloat(numeric);  if  (!(f.isInfinite()  ||  (f.floatValue()  ==  0.0F  &&  !allZeros)))  {    return  f;  }  }  catch  (NumberFormatException  nfe)  {  //  NOPMD  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  	projects/Lang7/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	521	521	1	replace	Integer  numeric  =  str.substring(0,  str.length()  -  4);	  Integer    numeric    =    str.substring(0,    str.length();    	non-compiled	[CE]  ')'  expected	21	None	replace
116	[BUG]  [BUGGY]  Float  f  =  NumberUtils.createFloat(numeric,  mant  +  1);  [CE]  ')'  expected  [FE]                    AssertionError      [CONTEXT]      }  catch  (NumberFormatException  nfe)  {  //  NOPMD  }  return  createBigInteger(numeric);  }  throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  case  'f'  :  case  'F'  :  try  {      [BUGGY]  Float  f  =  NumberUtils.createFloat(numeric,  mant  +  1);  [BUGGY]      if  (!(f.isInfinite()  ||  (f.floatValue()  ==  0.0F  &&  !allZeros)))  {    return  f;  }  }  catch  (NumberFormatException  nfe)  {  //  NOPMD  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  	projects/Lang7/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	521	521	1	replace	Float  f  =  NumberUtils.createFloat(numeric,  mant  +  1);	  Float    f    =    NumberUtils.createFloat(numeric,    str    +    1);    	non-compiled	[CE]  ')'  expected	37	None	replace
117	[BUG]  [BUGGY]  Integer  f  =  str.substring(0,  str.length()  -  4);  [CE]  ')'  expected  [FE]            AssertionError      [CONTEXT]      }  catch  (NumberFormatException  nfe)  {  //  NOPMD  }  return  createBigInteger(numeric);  }  throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  case  'f'  :  case  'F'  :  try  {      [BUGGY]  Integer  f  =  str.substring(0,  str.length()  -  4);  [BUGGY]      Float  f  =  NumberUtils.createFloat(numeric);  if  (!(f.isInfinite()  ||  (f.floatValue()  ==  0.0F  &&  !allZeros)))  {    return  f;  }  }  catch  (NumberFormatException  nfe)  {  //  NOPMD  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  	projects/Lang7/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	521	521	1	replace	Integer  f  =  str.substring(0,  str.length()  -  4);	  Integer    f    =    str.substring(0,    str.length());    	non-compiled	[CE]  ')'  expected	50	None	replace
118	[BUG]  [BUGGY]  Float  f  =  NumberUtils.createFloat(numeric.doubleValue()  -  1);  [CE]  ')'  expected  [FE]                      AssertionError      [CONTEXT]      }  catch  (NumberFormatException  nfe)  {  //  NOPMD  }  return  createBigInteger(numeric);  }  throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  case  'f'  :  case  'F'  :  try  {      [BUGGY]  Float  f  =  NumberUtils.createFloat(numeric.doubleValue()  -  1);  [BUGGY]      if  (!(f.isInfinite()  ||  (f.floatValue()  ==  0.0F  &&  !allZeros)))  {    return  f;  }  }  catch  (NumberFormatException  nfe)  {  //  NOPMD  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  	projects/Lang7/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	521	521	1	replace	Float  f  =  NumberUtils.createFloat(numeric.doubleValue()  -  1);	  Float    f    =    NumberUtils.createFloat(numeric.doubleValue());    	non-compiled	[CE]  ')'  expected	33	None	replace
119	[BUG]  [BUGGY]  Number  f  =  NumberUtils.createInteger(0);  [CE]  ')'  expected  [FE]                AssertionError      [CONTEXT]      }  catch  (NumberFormatException  nfe)  {  //  NOPMD  }  return  createBigInteger(numeric);  }  throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  case  'f'  :  case  'F'  :  try  {      [BUGGY]  Number  f  =  NumberUtils.createInteger(0);  [BUGGY]      Float  f  =  NumberUtils.createFloat(numeric);  if  (!(f.isInfinite()  ||  (f.floatValue()  ==  0.0F  &&  !allZeros)))  {    return  f;  }  }  catch  (NumberFormatException  nfe)  {  //  NOPMD  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  	projects/Lang7/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	521	521	1	replace	Number  f  =  NumberUtils.createInteger(0);	  Number    f    =    NumberUtils.createInteger(numeric);    	non-compiled	[CE]  ')'  expected	7	None	replace
120	[BUG]  [BUGGY]  NumberUtils.setIntValue(numeric);  [CE]  ')'  expected  [FE]                AssertionError      [CONTEXT]      }  catch  (NumberFormatException  nfe)  {  //  NOPMD  }  return  createBigInteger(numeric);  }  throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  case  'f'  :  case  'F'  :  try  {      [BUGGY]  NumberUtils.setIntValue(numeric);  [BUGGY]      Float  f  =  NumberUtils.createFloat(numeric);  if  (!(f.isInfinite()  ||  (f.floatValue()  ==  0.0F  &&  !allZeros)))  {    return  f;  }  }  catch  (NumberFormatException  nfe)  {  //  NOPMD  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  	projects/Lang7/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	521	521	1	replace	NumberUtils.setIntValue(numeric);	  NumberUtils.setLongValue(numeric);    	non-compiled	[CE]  ')'  expected	55	None	replace
121	[BUG]  [BUGGY]  Numeric  f  =  NumberUtils.createNumber(numeric,  str);  [CE]  ')'  expected  [FE]              AssertionError      [CONTEXT]      }  catch  (NumberFormatException  nfe)  {  //  NOPMD  }  return  createBigInteger(numeric);  }  throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  case  'f'  :  case  'F'  :  try  {      [BUGGY]  Numeric  f  =  NumberUtils.createNumber(numeric,  str);  [BUGGY]      Float  f  =  NumberUtils.createFloat(numeric);  if  (!(f.isInfinite()  ||  (f.floatValue()  ==  0.0F  &&  !allZeros)))  {    return  f;  }  }  catch  (NumberFormatException  nfe)  {  //  NOPMD  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  	projects/Lang7/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	521	521	1	replace	Numeric  f  =  NumberUtils.createNumber(numeric,  str);	  Number    f    =    NumberUtils.createNumber(numeric,    string);    	non-compiled	[CE]  ')'  expected	45	None	replace
122	[BUG]  [BUGGY]  Number  f  =  NumberUtils.createNumber(numeric,  string  +  1);  [CE]  ')'  expected  [FE]                AssertionError      [CONTEXT]      }  catch  (NumberFormatException  nfe)  {  //  NOPMD  }  return  createBigInteger(numeric);  }  throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  case  'f'  :  case  'F'  :  try  {      [BUGGY]  Number  f  =  NumberUtils.createNumber(numeric,  string  +  1);  [BUGGY]      Float  f  =  NumberUtils.createFloat(numeric);  if  (!(f.isInfinite()  ||  (f.floatValue()  ==  0.0F  &&  !allZeros)))  {    return  f;  }  }  catch  (NumberFormatException  nfe)  {  //  NOPMD  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  	projects/Lang7/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	521	521	1	replace	Number  f  =  NumberUtils.createNumber(numeric,  string  +  1);	  Number    f    =    NumberUtils.createNumber(numeric,    string);    	non-compiled	[CE]  ')'  expected	45	None	replace
123	[BUG]  [BUGGY]  Integer  f  =  NumberUtils.createInteger(numeric  +  3);  [CE]  ')'  expected  [FE]            AssertionError      [CONTEXT]      }  catch  (NumberFormatException  nfe)  {  //  NOPMD  }  return  createBigInteger(numeric);  }  throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  case  'f'  :  case  'F'  :  try  {      [BUGGY]  Integer  f  =  NumberUtils.createInteger(numeric  +  3);  [BUGGY]      Float  f  =  NumberUtils.createFloat(numeric);  if  (!(f.isInfinite()  ||  (f.floatValue()  ==  0.0F  &&  !allZeros)))  {    return  f;  }  }  catch  (NumberFormatException  nfe)  {  //  NOPMD  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  	projects/Lang7/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	521	521	1	replace	Integer  f  =  NumberUtils.createInteger(numeric  +  3);	  Integer    f    =    NumberUtils.createInteger(numeric    +    1);    	non-compiled	[CE]  ')'  expected	38	None	replace
124	[BUG]  [BUGGY]  float  f  =  NumberUtils.createFloat(numeric,  mant);  [CE]  ')'  expected  [FE]                  AssertionError      [CONTEXT]      }  catch  (NumberFormatException  nfe)  {  //  NOPMD  }  return  createBigInteger(numeric);  }  throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  case  'f'  :  case  'F'  :  try  {      [BUGGY]  float  f  =  NumberUtils.createFloat(numeric,  mant);  [BUGGY]      if  (!(f.isInfinite()  ||  (f.floatValue()  ==  0.0F  &&  !allZeros)))  {    return  f;  }  }  catch  (NumberFormatException  nfe)  {  //  NOPMD  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  	projects/Lang7/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	521	521	1	replace	float  f  =  NumberUtils.createFloat(numeric,  mant);	  float    f    =    NumberUtils.createFloat(numeric,    str);    	non-compiled	[CE]  ')'  expected	10	None	replace
125	[BUG]  [BUGGY]  float  f  =  NumberUtils.createFloat(mant,  str);  [CE]  ')'  expected  [FE]                    AssertionError      [CONTEXT]      }  catch  (NumberFormatException  nfe)  {  //  NOPMD  }  return  createBigInteger(numeric);  }  throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  case  'f'  :  case  'F'  :  try  {      [BUGGY]  float  f  =  NumberUtils.createFloat(mant,  str);  [BUGGY]      if  (!(f.isInfinite()  ||  (f.floatValue()  ==  0.0F  &&  !allZeros)))  {    return  f;  }  }  catch  (NumberFormatException  nfe)  {  //  NOPMD  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  	projects/Lang7/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	521	521	1	replace	float  f  =  NumberUtils.createFloat(mant,  str);	  float    f    =    NumberUtils.createFloat(numeric,    str);    	non-compiled	[CE]  ')'  expected	10	None	replace
126	[BUG]  [BUGGY]  Float  f  =  NumberUtils.createFloat(numeric,  0,  numberCount);  [CE]  ')'  expected  [FE]                AssertionError      [CONTEXT]      }  catch  (NumberFormatException  nfe)  {  //  NOPMD  }  return  createBigInteger(numeric);  }  throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  case  'f'  :  case  'F'  :  try  {      [BUGGY]  Float  f  =  NumberUtils.createFloat(numeric,  0,  numberCount);  [BUGGY]      if  (!(f.isInfinite()  ||  (f.floatValue()  ==  0.0F  &&  !allZeros)))  {    return  f;  }  }  catch  (NumberFormatException  nfe)  {  //  NOPMD  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  	projects/Lang7/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	521	521	1	replace	Float  f  =  NumberUtils.createFloat(numeric,  0,  numberCount);	  Float    f    =    NumberUtils.createFloat(numeric,    0,    allZeros);    	non-compiled	[CE]  ')'  expected	19	None	replace
127	[BUG]  [BUGGY]  Float  f  =  NumberUtils.createFloat(numeric,  0,  stringValue);  [CE]  ')'  expected  [FE]                  AssertionError      [CONTEXT]      }  catch  (NumberFormatException  nfe)  {  //  NOPMD  }  return  createBigInteger(numeric);  }  throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  case  'f'  :  case  'F'  :  try  {      [BUGGY]  Float  f  =  NumberUtils.createFloat(numeric,  0,  stringValue);  [BUGGY]      if  (!(f.isInfinite()  ||  (f.floatValue()  ==  0.0F  &&  !allZeros)))  {    return  f;  }  }  catch  (NumberFormatException  nfe)  {  //  NOPMD  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  	projects/Lang7/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	521	521	1	replace	Float  f  =  NumberUtils.createFloat(numeric,  0,  stringValue);	  Float    f    =    NumberUtils.createFloat(numeric,    0,    allZeros);    	non-compiled	[CE]  ')'  expected	19	None	replace
128	[BUG]  [BUGGY]  Float  f  =  NumberUtils.createFloat(numeric,  4);  [CE]  ')'  expected  [FE]              AssertionError      [CONTEXT]      }  catch  (NumberFormatException  nfe)  {  //  NOPMD  }  return  createBigInteger(numeric);  }  throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  case  'f'  :  case  'F'  :  try  {      [BUGGY]  Float  f  =  NumberUtils.createFloat(numeric,  4);  [BUGGY]      if  (!(f.isInfinite()  ||  (f.floatValue()  ==  0.0F  &&  !allZeros)))  {    return  f;  }  }  catch  (NumberFormatException  nfe)  {  //  NOPMD  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  	projects/Lang7/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	521	521	1	replace	Float  f  =  NumberUtils.createFloat(numeric,  4);	  Float    f    =    NumberUtils.createFloat(numeric,    1);    	non-compiled	[CE]  ')'  expected	41	None	replace
129	[BUG]  [BUGGY]  NullUtils.createNumber(numeric,  mant);  [CE]  ')'  expected  [FE]                  AssertionError      [CONTEXT]      }  catch  (NumberFormatException  nfe)  {  //  NOPMD  }  return  createBigInteger(numeric);  }  throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  case  'f'  :  case  'F'  :  try  {      [BUGGY]  NullUtils.createNumber(numeric,  mant);  [BUGGY]      Float  f  =  NumberUtils.createFloat(numeric);  if  (!(f.isInfinite()  ||  (f.floatValue()  ==  0.0F  &&  !allZeros)))  {    return  f;  }  }  catch  (NumberFormatException  nfe)  {  //  NOPMD  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  	projects/Lang7/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	521	521	1	replace	NullUtils.createNumber(numeric,  mant);	  NumberUtils.createNumber(numeric,    str);    	non-compiled	[CE]  ')'  expected	28	None	replace
130	[BUG]  [BUGGY]  float  f  =  NumberUtils.createInteger(numeric).floatValue();  [CE]  ')'  expected  [FE]              AssertionError      [CONTEXT]      }  catch  (NumberFormatException  nfe)  {  //  NOPMD  }  return  createBigInteger(numeric);  }  throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  case  'f'  :  case  'F'  :  try  {      [BUGGY]  float  f  =  NumberUtils.createInteger(numeric).floatValue();  [BUGGY]      if  (!(f.isInfinite()  ||  (f.floatValue()  ==  0.0F  &&  !allZeros)))  {    return  f;  }  }  catch  (NumberFormatException  nfe)  {  //  NOPMD  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  	projects/Lang7/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	521	521	1	replace	float  f  =  NumberUtils.createInteger(numeric).floatValue();	  float    f    =    NumberUtils.createFloat(numeric).floatValue();    	non-compiled	[CE]  ')'  expected	22	None	replace
131	[BUG]  [BUGGY]  Float  f  =  NumberUtils.createFloat(numeric,  0.0F)+  1;  [CE]  ')'  expected  [FE]            AssertionError      [CONTEXT]      }  catch  (NumberFormatException  nfe)  {  //  NOPMD  }  return  createBigInteger(numeric);  }  throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  case  'f'  :  case  'F'  :  try  {      [BUGGY]  Float  f  =  NumberUtils.createFloat(numeric,  0.0F)+  1;  [BUGGY]      if  (!(f.isInfinite()  ||  (f.floatValue()  ==  0.0F  &&  !allZeros)))  {    return  f;  }  }  catch  (NumberFormatException  nfe)  {  //  NOPMD  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  	projects/Lang7/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	521	521	1	replace	Float  f  =  NumberUtils.createFloat(numeric,  0.0F)+  1;	  Float    f    =    NumberUtils.createFloat(numeric,    0.0F);    	non-compiled	[CE]  ')'  expected	40	None	replace
132	[BUG]  [BUGGY]  Node  f  =  NumberUtils.createNumber(numeric);  [CE]  ')'  expected  [FE]              AssertionError      [CONTEXT]      }  catch  (NumberFormatException  nfe)  {  //  NOPMD  }  return  createBigInteger(numeric);  }  throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  case  'f'  :  case  'F'  :  try  {      [BUGGY]  Node  f  =  NumberUtils.createNumber(numeric);  [BUGGY]      Float  f  =  NumberUtils.createFloat(numeric);  if  (!(f.isInfinite()  ||  (f.floatValue()  ==  0.0F  &&  !allZeros)))  {    return  f;  }  }  catch  (NumberFormatException  nfe)  {  //  NOPMD  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  	projects/Lang7/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	521	521	1	replace	Node  f  =  NumberUtils.createNumber(numeric);	  Number    f    =    NumberUtils.createNumber(str);    	non-compiled	[CE]  ')'  expected	5	None	replace
133	[BUG]  [BUGGY]  Integer  f  =  createBigInteger(numeric.doubleValue());  [CE]  ')'  expected  [FE]                  AssertionError      [CONTEXT]      }  catch  (NumberFormatException  nfe)  {  //  NOPMD  }  return  createBigInteger(numeric);  }  throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  case  'f'  :  case  'F'  :  try  {      [BUGGY]  Integer  f  =  createBigInteger(numeric.doubleValue());  [BUGGY]      if  (!(f.isInfinite()  ||  (f.floatValue()  ==  0.0F  &&  !allZeros)))  {    return  f;  }  }  catch  (NumberFormatException  nfe)  {  //  NOPMD  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  	projects/Lang7/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	521	521	1	replace	Integer  f  =  createBigInteger(numeric.doubleValue());	  Integer    f    =    createBigInteger(numeric);    	non-compiled	[CE]  ')'  expected	48	None	replace
134	[BUG]  [BUGGY]  Float  f  =  NumberUtils.createFloat(numeric,  mant,  str);  [CE]  ')'  expected  [FE]              AssertionError      [CONTEXT]      }  catch  (NumberFormatException  nfe)  {  //  NOPMD  }  return  createBigInteger(numeric);  }  throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  case  'f'  :  case  'F'  :  try  {      [BUGGY]  Float  f  =  NumberUtils.createFloat(numeric,  mant,  str);  [BUGGY]      if  (!(f.isInfinite()  ||  (f.floatValue()  ==  0.0F  &&  !allZeros)))  {    return  f;  }  }  catch  (NumberFormatException  nfe)  {  //  NOPMD  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  	projects/Lang7/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	521	521	1	replace	Float  f  =  NumberUtils.createFloat(numeric,  mant,  str);	  Float    f    =    NumberUtils.createFloat(numeric,    allZeros,    str);    	non-compiled	[CE]  ')'  expected	18	None	replace
135	[BUG]  [BUGGY]  Float  f  =  NumberUtils.createFloat(str,  allZeros,  NUMBER_ZERO);  [CE]  ')'  expected  [FE]                AssertionError      [CONTEXT]      }  catch  (NumberFormatException  nfe)  {  //  NOPMD  }  return  createBigInteger(numeric);  }  throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  case  'f'  :  case  'F'  :  try  {      [BUGGY]  Float  f  =  NumberUtils.createFloat(str,  allZeros,  NUMBER_ZERO);  [BUGGY]      if  (!(f.isInfinite()  ||  (f.floatValue()  ==  0.0F  &&  !allZeros)))  {    return  f;  }  }  catch  (NumberFormatException  nfe)  {  //  NOPMD  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  	projects/Lang7/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	521	521	1	replace	Float  f  =  NumberUtils.createFloat(str,  allZeros,  NUMBER_ZERO);	  Float    f    =    NumberUtils.createFloat(numeric,    allZeros,    str);    	non-compiled	[CE]  ')'  expected	18	None	replace
136	[BUG]  [BUGGY]  Integer  numeric  =  str.substring(0,  str.length()  -  3);  [CE]  ')'  expected  [FE]            AssertionError      [CONTEXT]      }  catch  (NumberFormatException  nfe)  {  //  NOPMD  }  return  createBigInteger(numeric);  }  throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  case  'f'  :  case  'F'  :  try  {      [BUGGY]  Integer  numeric  =  str.substring(0,  str.length()  -  3);  [BUGGY]      Float  f  =  NumberUtils.createFloat(numeric);  if  (!(f.isInfinite()  ||  (f.floatValue()  ==  0.0F  &&  !allZeros)))  {    return  f;  }  }  catch  (NumberFormatException  nfe)  {  //  NOPMD  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  	projects/Lang7/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	521	521	1	replace	Integer  numeric  =  str.substring(0,  str.length()  -  3);	  Integer    numeric    =    str.substring(0,    str.length());    	non-compiled	[CE]  ')'  expected	20	None	replace
137	[BUG]  [BUGGY]  float  f  =  NumberUtils.createFloat(numeric  +  1);  [CE]  ')'  expected  [FE]            AssertionError      [CONTEXT]      }  catch  (NumberFormatException  nfe)  {  //  NOPMD  }  return  createBigInteger(numeric);  }  throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  case  'f'  :  case  'F'  :  try  {      [BUGGY]  float  f  =  NumberUtils.createFloat(numeric  +  1);  [BUGGY]      if  (!(f.isInfinite()  ||  (f.floatValue()  ==  0.0F  &&  !allZeros)))  {    return  f;  }  }  catch  (NumberFormatException  nfe)  {  //  NOPMD  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  	projects/Lang7/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	521	521	1	replace	float  f  =  NumberUtils.createFloat(numeric  +  1);	  float    f    =    NumberUtils.createFloat(numeric);    	non-compiled	[CE]  ')'  expected	15	None	replace
138	[BUG]  [BUGGY]  double  f  =  NumberUtils.createFloat(numeric);  [CE]  ')'  expected  [FE]              AssertionError      [CONTEXT]      }  catch  (NumberFormatException  nfe)  {  //  NOPMD  }  return  createBigInteger(numeric);  }  throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  case  'f'  :  case  'F'  :  try  {      [BUGGY]  double  f  =  NumberUtils.createFloat(numeric);  [BUGGY]      if  (!(f.isInfinite()  ||  (f.floatValue()  ==  0.0F  &&  !allZeros)))  {    return  f;  }  }  catch  (NumberFormatException  nfe)  {  //  NOPMD  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  	projects/Lang7/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	521	521	1	replace	double  f  =  NumberUtils.createFloat(numeric);	  float    f    =    NumberUtils.createFloat(numeric);    	non-compiled	[CE]  ')'  expected	15	None	replace
139	[BUG]  [BUGGY]  Integer  f  =  NumberUtils.createInteger(1);  [CE]  ')'  expected  [FE]            AssertionError      [CONTEXT]      }  catch  (NumberFormatException  nfe)  {  //  NOPMD  }  return  createBigInteger(numeric);  }  throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  case  'f'  :  case  'F'  :  try  {      [BUGGY]  Integer  f  =  NumberUtils.createInteger(1);  [BUGGY]      Float  f  =  NumberUtils.createFloat(numeric);  if  (!(f.isInfinite()  ||  (f.floatValue()  ==  0.0F  &&  !allZeros)))  {    return  f;  }  }  catch  (NumberFormatException  nfe)  {  //  NOPMD  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  	projects/Lang7/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	521	521	1	replace	Integer  f  =  NumberUtils.createInteger(1);	  Integer    f    =    NumberUtils.createInteger(0);    	non-compiled	[CE]  ')'  expected	1	None	replace
140	[BUG]  [BUGGY]  Integer  f  =  NumberUtils.createInteger(2);  [CE]  ')'  expected  [FE]              AssertionError      [CONTEXT]      }  catch  (NumberFormatException  nfe)  {  //  NOPMD  }  return  createBigInteger(numeric);  }  throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  case  'f'  :  case  'F'  :  try  {      [BUGGY]  Integer  f  =  NumberUtils.createInteger(2);  [BUGGY]      Float  f  =  NumberUtils.createFloat(numeric);  if  (!(f.isInfinite()  ||  (f.floatValue()  ==  0.0F  &&  !allZeros)))  {    return  f;  }  }  catch  (NumberFormatException  nfe)  {  //  NOPMD  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  	projects/Lang7/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	521	521	1	replace	Integer  f  =  NumberUtils.createInteger(2);	  Integer    f    =    NumberUtils.createInteger(0);    	non-compiled	[CE]  ')'  expected	1	None	replace
141	[BUG]  [BUGGY]  Number  f  =  NumberUtils.createNumber(mant,  str);  [CE]  ')'  expected  [FE]            AssertionError      [CONTEXT]      }  catch  (NumberFormatException  nfe)  {  //  NOPMD  }  return  createBigInteger(numeric);  }  throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  case  'f'  :  case  'F'  :  try  {      [BUGGY]  Number  f  =  NumberUtils.createNumber(mant,  str);  [BUGGY]      Float  f  =  NumberUtils.createFloat(numeric);  if  (!(f.isInfinite()  ||  (f.floatValue()  ==  0.0F  &&  !allZeros)))  {    return  f;  }  }  catch  (NumberFormatException  nfe)  {  //  NOPMD  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  	projects/Lang7/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	521	521	1	replace	Number  f  =  NumberUtils.createNumber(mant,  str);	  Number    f    =    NumberUtils.createNumber(numeric,    str);    	non-compiled	[CE]  ')'  expected	4	None	replace
142	[BUG]  [BUGGY]  Integer  f  =  NumberUtils.createInteger(numeric.intValue()  -  1);  [CE]  ')'  expected  [FE]                AssertionError      [CONTEXT]      }  catch  (NumberFormatException  nfe)  {  //  NOPMD  }  return  createBigInteger(numeric);  }  throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  case  'f'  :  case  'F'  :  try  {      [BUGGY]  Integer  f  =  NumberUtils.createInteger(numeric.intValue()  -  1);  [BUGGY]      Float  f  =  NumberUtils.createFloat(numeric);  if  (!(f.isInfinite()  ||  (f.floatValue()  ==  0.0F  &&  !allZeros)))  {    return  f;  }  }  catch  (NumberFormatException  nfe)  {  //  NOPMD  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  	projects/Lang7/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	521	521	1	replace	Integer  f  =  NumberUtils.createInteger(numeric.intValue()  -  1);	  Integer    f    =    NumberUtils.createInteger(numeric.intValue());    	non-compiled	[CE]  ')'  expected	3	None	replace
143	[BUG]  [BUGGY]  Number  f  =  NumberUtils.createBigDecimal(numeric)+  1;  [CE]  ')'  expected  [FE]              AssertionError      [CONTEXT]      }  catch  (NumberFormatException  nfe)  {  //  NOPMD  }  return  createBigInteger(numeric);  }  throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  case  'f'  :  case  'F'  :  try  {      [BUGGY]  Number  f  =  NumberUtils.createBigDecimal(numeric)+  1;  [BUGGY]      Float  f  =  NumberUtils.createFloat(numeric);  if  (!(f.isInfinite()  ||  (f.floatValue()  ==  0.0F  &&  !allZeros)))  {    return  f;  }  }  catch  (NumberFormatException  nfe)  {  //  NOPMD  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  	projects/Lang7/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	521	521	1	replace	Number  f  =  NumberUtils.createBigDecimal(numeric)+  1;	  Number    f    =    NumberUtils.createBigDecimal(numeric);    	non-compiled	[CE]  ')'  expected	6	None	replace
144	[BUG]  [BUGGY]  Number  f  =  NumberUtils.createBigDecimal(numeric).intValue();  [CE]  ')'  expected  [FE]                AssertionError      [CONTEXT]      }  catch  (NumberFormatException  nfe)  {  //  NOPMD  }  return  createBigInteger(numeric);  }  throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  case  'f'  :  case  'F'  :  try  {      [BUGGY]  Number  f  =  NumberUtils.createBigDecimal(numeric).intValue();  [BUGGY]      Float  f  =  NumberUtils.createFloat(numeric);  if  (!(f.isInfinite()  ||  (f.floatValue()  ==  0.0F  &&  !allZeros)))  {    return  f;  }  }  catch  (NumberFormatException  nfe)  {  //  NOPMD  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  	projects/Lang7/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	521	521	1	replace	Number  f  =  NumberUtils.createBigDecimal(numeric).intValue();	  Number    f    =    NumberUtils.createBigDecimal(numeric);    	non-compiled	[CE]  ')'  expected	6	None	replace
145	[BUG]  [BUGGY]  Integer  f  =  createInteger(numeric.doubleValue());  [CE]  ')'  expected  [FE]                  AssertionError      [CONTEXT]      }  catch  (NumberFormatException  nfe)  {  //  NOPMD  }  return  createBigInteger(numeric);  }  throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  case  'f'  :  case  'F'  :  try  {      [BUGGY]  Integer  f  =  createInteger(numeric.doubleValue());  [BUGGY]      if  (!(f.isInfinite()  ||  (f.floatValue()  ==  0.0F  &&  !allZeros)))  {    return  f;  }  }  catch  (NumberFormatException  nfe)  {  //  NOPMD  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  	projects/Lang7/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	521	521	1	replace	Integer  f  =  createInteger(numeric.doubleValue());	  Integer    f    =    createInteger(numeric);    	non-compiled	[CE]  ')'  expected	11	None	replace
146	[BUG]  [BUGGY]  Float  f  =  getFloat(numeric).floatValue();  [CE]  ')'  expected  [FE]                        AssertionError      [CONTEXT]      }  catch  (NumberFormatException  nfe)  {  //  NOPMD  }  return  createBigInteger(numeric);  }  throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  case  'f'  :  case  'F'  :  try  {      [BUGGY]  Float  f  =  getFloat(numeric).floatValue();  [BUGGY]      if  (!(f.isInfinite()  ||  (f.floatValue()  ==  0.0F  &&  !allZeros)))  {    return  f;  }  }  catch  (NumberFormatException  nfe)  {  //  NOPMD  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  	projects/Lang7/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	521	521	1	replace	Float  f  =  getFloat(numeric).floatValue();	  Float    f    =    getFloat(numeric);    	non-compiled	[CE]  ')'  expected	14	None	replace
147	[BUG]  [BUGGY]  NullUtils.copyCurrentStructure(numeric);  [CE]  ')'  expected  [FE]                AssertionError      [CONTEXT]      }  catch  (NumberFormatException  nfe)  {  //  NOPMD  }  return  createBigInteger(numeric);  }  throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  case  'f'  :  case  'F'  :  try  {      [BUGGY]  NullUtils.copyCurrentStructure(numeric);  [BUGGY]      Float  f  =  NumberUtils.createFloat(numeric);  if  (!(f.isInfinite()  ||  (f.floatValue()  ==  0.0F  &&  !allZeros)))  {    return  f;  }  }  catch  (NumberFormatException  nfe)  {  //  NOPMD  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  	projects/Lang7/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	521	521	1	replace	NullUtils.copyCurrentStructure(numeric);	  NullUtils.createNumber(numeric);    	non-compiled	[CE]  ')'  expected	47	None	replace
148	[BUG]  [BUGGY]  NullUtils.setLongValue(numeric);  [CE]  ')'  expected  [FE]                  AssertionError      [CONTEXT]      }  catch  (NumberFormatException  nfe)  {  //  NOPMD  }  return  createBigInteger(numeric);  }  throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  case  'f'  :  case  'F'  :  try  {      [BUGGY]  NullUtils.setLongValue(numeric);  [BUGGY]      Float  f  =  NumberUtils.createFloat(numeric);  if  (!(f.isInfinite()  ||  (f.floatValue()  ==  0.0F  &&  !allZeros)))  {    return  f;  }  }  catch  (NumberFormatException  nfe)  {  //  NOPMD  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  	projects/Lang7/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	521	521	1	replace	NullUtils.setLongValue(numeric);	  NullUtils.createNumber(numeric);    	non-compiled	[CE]  ')'  expected	47	None	replace
149	[BUG]  [BUGGY]  Float  f  =  NumberUtils.createFloat(numeric,  str)+  1;  [CE]  ')'  expected  [FE]              AssertionError      [CONTEXT]      }  catch  (NumberFormatException  nfe)  {  //  NOPMD  }  return  createBigInteger(numeric);  }  throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  case  'f'  :  case  'F'  :  try  {      [BUGGY]  Float  f  =  NumberUtils.createFloat(numeric,  str)+  1;  [BUGGY]      if  (!(f.isInfinite()  ||  (f.floatValue()  ==  0.0F  &&  !allZeros)))  {    return  f;  }  }  catch  (NumberFormatException  nfe)  {  //  NOPMD  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  	projects/Lang7/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	521	521	1	replace	Float  f  =  NumberUtils.createFloat(numeric,  str)+  1;	  Float    f    =    NumberUtils.createFloat(numeric,    string);    	non-compiled	[CE]  ')'  expected	57	None	replace
150	[BUG]  [BUGGY]  Integer  f  =  str.substring(1,  str.length());  [CE]  ')'  expected  [FE]            AssertionError      [CONTEXT]      }  catch  (NumberFormatException  nfe)  {  //  NOPMD  }  return  createBigInteger(numeric);  }  throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  case  'f'  :  case  'F'  :  try  {      [BUGGY]  Integer  f  =  str.substring(1,  str.length());  [BUGGY]      Float  f  =  NumberUtils.createFloat(numeric);  if  (!(f.isInfinite()  ||  (f.floatValue()  ==  0.0F  &&  !allZeros)))  {    return  f;  }  }  catch  (NumberFormatException  nfe)  {  //  NOPMD  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  	projects/Lang7/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	521	521	1	replace	Integer  f  =  str.substring(1,  str.length());	  Integer    f    =    str.substring(0,    str.length());    	non-compiled	[CE]  ')'  expected	50	None	replace
151	[BUG]  [BUGGY]  double  f  =  NumberUtils.createFloat(numeric,  str);  [CE]  ')'  expected  [FE]                  AssertionError      [CONTEXT]      }  catch  (NumberFormatException  nfe)  {  //  NOPMD  }  return  createBigInteger(numeric);  }  throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  case  'f'  :  case  'F'  :  try  {      [BUGGY]  double  f  =  NumberUtils.createFloat(numeric,  str);  [BUGGY]      if  (!(f.isInfinite()  ||  (f.floatValue()  ==  0.0F  &&  !allZeros)))  {    return  f;  }  }  catch  (NumberFormatException  nfe)  {  //  NOPMD  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  	projects/Lang7/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	521	521	1	replace	double  f  =  NumberUtils.createFloat(numeric,  str);	  float    f    =    NumberUtils.createFloat(numeric,    str);    	non-compiled	[CE]  ')'  expected	10	None	replace
152	[BUG]  [BUGGY]  Float  f  =  NumberUtils.createFloat(numeric.floatValue(),  str  +  1);  [CE]  ')'  expected  [FE]                  AssertionError      [CONTEXT]      }  catch  (NumberFormatException  nfe)  {  //  NOPMD  }  return  createBigInteger(numeric);  }  throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  case  'f'  :  case  'F'  :  try  {      [BUGGY]  Float  f  =  NumberUtils.createFloat(numeric.floatValue(),  str  +  1);  [BUGGY]      if  (!(f.isInfinite()  ||  (f.floatValue()  ==  0.0F  &&  !allZeros)))  {    return  f;  }  }  catch  (NumberFormatException  nfe)  {  //  NOPMD  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  	projects/Lang7/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	521	521	1	replace	Float  f  =  NumberUtils.createFloat(numeric.floatValue(),  str  +  1);	  Float    f    =    NumberUtils.createFloat(numeric.floatValue(),    str);    	non-compiled	[CE]  ')'  expected	31	None	replace
153	[BUG]  [BUGGY]  Float  f  =  NumberUtils.createFloat(numeric,  0,  0);  [CE]  ')'  expected  [FE]                AssertionError      [CONTEXT]      }  catch  (NumberFormatException  nfe)  {  //  NOPMD  }  return  createBigInteger(numeric);  }  throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  case  'f'  :  case  'F'  :  try  {      [BUGGY]  Float  f  =  NumberUtils.createFloat(numeric,  0,  0);  [BUGGY]      if  (!(f.isInfinite()  ||  (f.floatValue()  ==  0.0F  &&  !allZeros)))  {    return  f;  }  }  catch  (NumberFormatException  nfe)  {  //  NOPMD  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  	projects/Lang7/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	521	521	1	replace	Float  f  =  NumberUtils.createFloat(numeric,  0,  0);	  Float    f    =    NumberUtils.createFloat(numeric,    0,    allZeros);    	non-compiled	[CE]  ')'  expected	19	None	replace
154	[BUG]  [BUGGY]  Float  f  =  NumberUtils.createFloat(numeric,  0,  size);  [CE]  ')'  expected  [FE]                  AssertionError      [CONTEXT]      }  catch  (NumberFormatException  nfe)  {  //  NOPMD  }  return  createBigInteger(numeric);  }  throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  case  'f'  :  case  'F'  :  try  {      [BUGGY]  Float  f  =  NumberUtils.createFloat(numeric,  0,  size);  [BUGGY]      if  (!(f.isInfinite()  ||  (f.floatValue()  ==  0.0F  &&  !allZeros)))  {    return  f;  }  }  catch  (NumberFormatException  nfe)  {  //  NOPMD  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  	projects/Lang7/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	521	521	1	replace	Float  f  =  NumberUtils.createFloat(numeric,  0,  size);	  Float    f    =    NumberUtils.createFloat(numeric,    0,    allZeros);    	non-compiled	[CE]  ')'  expected	19	None	replace
155	[BUG]  [BUGGY]  Integer  f  =  NumberUtils.createFloat(numeric,  null);  [CE]  ')'  expected  [FE]                AssertionError      [CONTEXT]      }  catch  (NumberFormatException  nfe)  {  //  NOPMD  }  return  createBigInteger(numeric);  }  throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  case  'f'  :  case  'F'  :  try  {      [BUGGY]  Integer  f  =  NumberUtils.createFloat(numeric,  null);  [BUGGY]      if  (!(f.isInfinite()  ||  (f.floatValue()  ==  0.0F  &&  !allZeros)))  {    return  f;  }  }  catch  (NumberFormatException  nfe)  {  //  NOPMD  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  	projects/Lang7/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	521	521	1	replace	Integer  f  =  NumberUtils.createFloat(numeric,  null);	  Float    f    =    NumberUtils.createFloat(str,    null);    	non-compiled	[CE]  ')'  expected	35	None	replace
156	[BUG]  [BUGGY]  Number  f  =  NumberUtils.createNumber(numeric  +  3);  [CE]  ')'  expected  [FE]            AssertionError      [CONTEXT]      }  catch  (NumberFormatException  nfe)  {  //  NOPMD  }  return  createBigInteger(numeric);  }  throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  case  'f'  :  case  'F'  :  try  {      [BUGGY]  Number  f  =  NumberUtils.createNumber(numeric  +  3);  [BUGGY]      Float  f  =  NumberUtils.createFloat(numeric);  if  (!(f.isInfinite()  ||  (f.floatValue()  ==  0.0F  &&  !allZeros)))  {    return  f;  }  }  catch  (NumberFormatException  nfe)  {  //  NOPMD  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  	projects/Lang7/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	521	521	1	replace	Number  f  =  NumberUtils.createNumber(numeric  +  3);	  Number    f    =    NumberUtils.createNumber(numeric    +    1);    	non-compiled	[CE]  ')'  expected	44	None	replace
157	[BUG]  [BUGGY]  Float  f  =  NumberUtils.createFloat(numeric  *  2);  [CE]  ')'  expected  [FE]            AssertionError      [CONTEXT]      }  catch  (NumberFormatException  nfe)  {  //  NOPMD  }  return  createBigInteger(numeric);  }  throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  case  'f'  :  case  'F'  :  try  {      [BUGGY]  Float  f  =  NumberUtils.createFloat(numeric  *  2);  [BUGGY]      if  (!(f.isInfinite()  ||  (f.floatValue()  ==  0.0F  &&  !allZeros)))  {    return  f;  }  }  catch  (NumberFormatException  nfe)  {  //  NOPMD  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  	projects/Lang7/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	521	521	1	replace	Float  f  =  NumberUtils.createFloat(numeric  *  2);	  Float    f    =    NumberUtils.createFloat(numeric    +    2);    	non-compiled	[CE]  ')'  expected	24	None	replace
158	[BUG]  [BUGGY]  Number  f  =  NumberUtils.createBigDecimal(numeric).doubleValue();  [CE]  ')'  expected  [FE]              AssertionError      [CONTEXT]      }  catch  (NumberFormatException  nfe)  {  //  NOPMD  }  return  createBigInteger(numeric);  }  throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  case  'f'  :  case  'F'  :  try  {      [BUGGY]  Number  f  =  NumberUtils.createBigDecimal(numeric).doubleValue();  [BUGGY]      Float  f  =  NumberUtils.createFloat(numeric);  if  (!(f.isInfinite()  ||  (f.floatValue()  ==  0.0F  &&  !allZeros)))  {    return  f;  }  }  catch  (NumberFormatException  nfe)  {  //  NOPMD  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  	projects/Lang7/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	521	521	1	replace	Number  f  =  NumberUtils.createBigDecimal(numeric).doubleValue();	  Number    f    =    NumberUtils.createBigDecimal(numeric);    	non-compiled	[CE]  ')'  expected	6	None	replace
159	[BUG]  [BUGGY]  Float  f  =  NumberUtils.createFloat(numeric,  str.floatValue());  [CE]  ')'  expected  [FE]                    AssertionError      [CONTEXT]      }  catch  (NumberFormatException  nfe)  {  //  NOPMD  }  return  createBigInteger(numeric);  }  throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  case  'f'  :  case  'F'  :  try  {      [BUGGY]  Float  f  =  NumberUtils.createFloat(numeric,  str.floatValue());  [BUGGY]      if  (!(f.isInfinite()  ||  (f.floatValue()  ==  0.0F  &&  !allZeros)))  {    return  f;  }  }  catch  (NumberFormatException  nfe)  {  //  NOPMD  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  	projects/Lang7/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	521	521	1	replace	Float  f  =  NumberUtils.createFloat(numeric,  str.floatValue());	  Float    f    =    NumberUtils.createFloat(str.floatValue());    	non-compiled	[CE]  ')'  expected	32	None	replace
160	[BUG]  [BUGGY]  Float  f  =  NumberUtils.createFloat(numeric,  str,  0);  [CE]  ')'  expected  [FE]              AssertionError      [CONTEXT]      }  catch  (NumberFormatException  nfe)  {  //  NOPMD  }  return  createBigInteger(numeric);  }  throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  case  'f'  :  case  'F'  :  try  {      [BUGGY]  Float  f  =  NumberUtils.createFloat(numeric,  str,  0);  [BUGGY]      if  (!(f.isInfinite()  ||  (f.floatValue()  ==  0.0F  &&  !allZeros)))  {    return  f;  }  }  catch  (NumberFormatException  nfe)  {  //  NOPMD  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  	projects/Lang7/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	521	521	1	replace	Float  f  =  NumberUtils.createFloat(numeric,  str,  0);	  Float    f    =    NumberUtils.createFloat(numeric,    allZeros,    str);    	non-compiled	[CE]  ')'  expected	18	None	replace
161	[BUG]  [BUGGY]  Float  f  =  NumberUtils.createFloat(numeric,  str,  0.0F);  [CE]  ')'  expected  [FE]                AssertionError      [CONTEXT]      }  catch  (NumberFormatException  nfe)  {  //  NOPMD  }  return  createBigInteger(numeric);  }  throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  case  'f'  :  case  'F'  :  try  {      [BUGGY]  Float  f  =  NumberUtils.createFloat(numeric,  str,  0.0F);  [BUGGY]      if  (!(f.isInfinite()  ||  (f.floatValue()  ==  0.0F  &&  !allZeros)))  {    return  f;  }  }  catch  (NumberFormatException  nfe)  {  //  NOPMD  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  	projects/Lang7/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	521	521	1	replace	Float  f  =  NumberUtils.createFloat(numeric,  str,  0.0F);	  Float    f    =    NumberUtils.createFloat(numeric,    allZeros,    str);    	non-compiled	[CE]  ')'  expected	18	None	replace
162	[BUG]  [BUGGY]  NumberUtils.createNumber(numeric,  str  +  1);  [CE]  ')'  expected  [FE]                  AssertionError      [CONTEXT]      }  catch  (NumberFormatException  nfe)  {  //  NOPMD  }  return  createBigInteger(numeric);  }  throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  case  'f'  :  case  'F'  :  try  {      [BUGGY]  NumberUtils.createNumber(numeric,  str  +  1);  [BUGGY]      Float  f  =  NumberUtils.createFloat(numeric);  if  (!(f.isInfinite()  ||  (f.floatValue()  ==  0.0F  &&  !allZeros)))  {    return  f;  }  }  catch  (NumberFormatException  nfe)  {  //  NOPMD  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  	projects/Lang7/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	521	521	1	replace	NumberUtils.createNumber(numeric,  str  +  1);	  NumberUtils.createNumber(numeric,    str);    	non-compiled	[CE]  ')'  expected	28	None	replace
163	[BUG]  [BUGGY]  Null  f  =  NumberUtils.createNumber(numeric);  [CE]  ')'  expected  [FE]              AssertionError      [CONTEXT]      }  catch  (NumberFormatException  nfe)  {  //  NOPMD  }  return  createBigInteger(numeric);  }  throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  case  'f'  :  case  'F'  :  try  {      [BUGGY]  Null  f  =  NumberUtils.createNumber(numeric);  [BUGGY]      Float  f  =  NumberUtils.createFloat(numeric);  if  (!(f.isInfinite()  ||  (f.floatValue()  ==  0.0F  &&  !allZeros)))  {    return  f;  }  }  catch  (NumberFormatException  nfe)  {  //  NOPMD  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  	projects/Lang7/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	521	521	1	replace	Null  f  =  NumberUtils.createNumber(numeric);	  Number    f    =    NumberUtils.createNumber(str);    	non-compiled	[CE]  ')'  expected	5	None	replace
164	[BUG]  [BUGGY]  float  f  =  NumberUtils.createLong(numeric).floatValue();  [CE]  ')'  expected  [FE]              AssertionError      [CONTEXT]      }  catch  (NumberFormatException  nfe)  {  //  NOPMD  }  return  createBigInteger(numeric);  }  throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  case  'f'  :  case  'F'  :  try  {      [BUGGY]  float  f  =  NumberUtils.createLong(numeric).floatValue();  [BUGGY]      if  (!(f.isInfinite()  ||  (f.floatValue()  ==  0.0F  &&  !allZeros)))  {    return  f;  }  }  catch  (NumberFormatException  nfe)  {  //  NOPMD  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  	projects/Lang7/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	521	521	1	replace	float  f  =  NumberUtils.createLong(numeric).floatValue();	  float    f    =    NumberUtils.createFloat(numeric).floatValue();    	non-compiled	[CE]  ')'  expected	22	None	replace
165	[BUG]  [BUGGY]  Integer  f  =  createIntValue(numeric);  [CE]  ')'  expected  [FE]                      AssertionError      [CONTEXT]      }  catch  (NumberFormatException  nfe)  {  //  NOPMD  }  return  createBigInteger(numeric);  }  throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  case  'f'  :  case  'F'  :  try  {      [BUGGY]  Integer  f  =  createIntValue(numeric);  [BUGGY]      if  (!(f.isInfinite()  ||  (f.floatValue()  ==  0.0F  &&  !allZeros)))  {    return  f;  }  }  catch  (NumberFormatException  nfe)  {  //  NOPMD  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  	projects/Lang7/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	521	521	1	replace	Integer  f  =  createIntValue(numeric);	  Integer    f    =    getIntValue(str);    	non-compiled	[CE]  ')'  expected	13	None	replace
166	[BUG]  [BUGGY]  Float  f  =  NumberUtils.createFloat(numeric,  0.001);  [CE]  ')'  expected  [FE]            AssertionError      [CONTEXT]      }  catch  (NumberFormatException  nfe)  {  //  NOPMD  }  return  createBigInteger(numeric);  }  throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  case  'f'  :  case  'F'  :  try  {      [BUGGY]  Float  f  =  NumberUtils.createFloat(numeric,  0.001);  [BUGGY]      if  (!(f.isInfinite()  ||  (f.floatValue()  ==  0.0F  &&  !allZeros)))  {    return  f;  }  }  catch  (NumberFormatException  nfe)  {  //  NOPMD  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  	projects/Lang7/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	521	521	1	replace	Float  f  =  NumberUtils.createFloat(numeric,  0.001);	  Float    f    =    NumberUtils.createFloat(numeric,    0.0F);    	non-compiled	[CE]  ')'  expected	40	None	replace
