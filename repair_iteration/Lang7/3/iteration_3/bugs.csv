bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  numeric  =  str.substring(0,  str.length());  [CE]  ';'  expected  [FE]            AssertionError      [CONTEXT]      if  (dec  ==  null  &&  exp  ==  null  &&  (numeric.charAt(0)  ==  '-'  &&  isDigits(numeric.substring(1))  ||  isDigits(numeric)))  {  try  {  return  createLong(numeric);      [BUGGY]  numeric  =  str.substring(0,  str.length());  [BUGGY]      }  catch  (NumberFormatException  nfe)  {  //  NOPMD        //  Too  big  for  a  long            }  }  return  createBigInteger(numeric);  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  	projects/Lang7/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	511	513	1	replace	numeric  =  str.substring(0,  str.length());	  numeric    =    str.substring(0,    str.length()    -    1);    	non-compiled	[CE]  ';'  expected	33	None	replace
2	[BUG]  [BUGGY]  if(dec  ==  null  &&  exp  ==  null  &&  isDigits(numeric.substring(1))  &&  isDigits(numeric.substring(2)))  {  return  createInteger(numeric);  }  [CE]  ';'  expected  [FE]              AssertionError      [CONTEXT]      if  (dec  ==  null  &&  exp  ==  null  &&  (numeric.charAt(0)  ==  '-'  &&  isDigits(numeric.substring(1))  ||  isDigits(numeric)))  {  try  {  return  createLong(numeric);      [BUGGY]  if(dec  ==  null  &&  exp  ==  null  &&  isDigits(numeric.substring(1))  &&  isDigits(numeric.substring(2)))  {  return  createInteger(numeric);  }  [BUGGY]      }  catch  (NumberFormatException  nfe)  {  //  NOPMD        //  Too  big  for  a  long            }  }  return  createBigInteger(numeric);  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  	projects/Lang7/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	511	513	1	replace	if(dec  ==  null  &&  exp  ==  null  &&  isDigits(numeric.substring(1))  &&  isDigits(numeric.substring(2)))  {  return  createInteger(numeric);  }	  if(dec    ==    null    &&    exp    ==    null    &&    isDigits(numeric.substring(1))    &&    isDigits(numeric.substring(2)))    {    return    createLong(numeric);    }    	non-compiled	[CE]  ';'  expected	39	None	replace
3	[BUG]  [BUGGY]  if(isDigits(numeric.charAt(0)))  {  if(dec  ==  null  &&  exp  ==  null  &&  isDigits(numeric.substring(1)))  {  return  createBigInteger(numeric);  }  [CE]  ';'  expected  [FE]            AssertionError      [CONTEXT]      if  (dec  ==  null  &&  exp  ==  null  &&  (numeric.charAt(0)  ==  '-'  &&  isDigits(numeric.substring(1))  ||  isDigits(numeric)))  {  try  {  return  createLong(numeric);      [BUGGY]  if(isDigits(numeric.charAt(0)))  {  if(dec  ==  null  &&  exp  ==  null  &&  isDigits(numeric.substring(1)))  {  return  createBigInteger(numeric);  }  [BUGGY]      }  catch  (NumberFormatException  nfe)  {  //  NOPMD        //  Too  big  for  a  long            }  }  return  createBigInteger(numeric);  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  	projects/Lang7/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	511	513	1	replace	if(isDigits(numeric.charAt(0)))  {  if(dec  ==  null  &&  exp  ==  null  &&  isDigits(numeric.substring(1)))  {  return  createBigInteger(numeric);  }	  if(dec    ==    null    &&    exp    ==    null    &&    isDigits(numeric.substring(1)))    {    return    createBigInteger(numeric);    }    	non-compiled	[CE]  ';'  expected	46	None	replace
4	[BUG]  [BUGGY]  if(isDigits(numeric.charAt(0)))  {  if(dec  ==  null  &&  exp  ==  null  &&  isDigits(numeric.substring(1)))  {  return  createInteger(numeric);  }  [CE]  ';'  expected  [FE]              AssertionError      [CONTEXT]      if  (dec  ==  null  &&  exp  ==  null  &&  (numeric.charAt(0)  ==  '-'  &&  isDigits(numeric.substring(1))  ||  isDigits(numeric)))  {  try  {  return  createLong(numeric);      [BUGGY]  if(isDigits(numeric.charAt(0)))  {  if(dec  ==  null  &&  exp  ==  null  &&  isDigits(numeric.substring(1)))  {  return  createInteger(numeric);  }  [BUGGY]      }  catch  (NumberFormatException  nfe)  {  //  NOPMD        //  Too  big  for  a  long            }  }  return  createBigInteger(numeric);  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  	projects/Lang7/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	511	513	1	replace	if(isDigits(numeric.charAt(0)))  {  if(dec  ==  null  &&  exp  ==  null  &&  isDigits(numeric.substring(1)))  {  return  createInteger(numeric);  }	  if(dec    ==    null    &&    exp    ==    null    &&    isDigits(numeric.substring(1)))    {    return    createBigInteger(numeric);    }    	non-compiled	[CE]  ';'  expected	46	None	replace
5	[BUG]  [BUGGY]  if(isDigits(numeric.charAt(0)))  {  if(dec  ==  null  &&  exp  ==  null  &&  isDigits(numeric.substring(2)))  {  return  createBigInteger(numeric);  }  [CE]  ';'  expected  [FE]                AssertionError      [CONTEXT]      if  (dec  ==  null  &&  exp  ==  null  &&  (numeric.charAt(0)  ==  '-'  &&  isDigits(numeric.substring(1))  ||  isDigits(numeric)))  {  try  {  return  createLong(numeric);      [BUGGY]  if(isDigits(numeric.charAt(0)))  {  if(dec  ==  null  &&  exp  ==  null  &&  isDigits(numeric.substring(2)))  {  return  createBigInteger(numeric);  }  [BUGGY]      }  catch  (NumberFormatException  nfe)  {  //  NOPMD        //  Too  big  for  a  long            }  }  return  createBigInteger(numeric);  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  	projects/Lang7/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	511	513	1	replace	if(isDigits(numeric.charAt(0)))  {  if(dec  ==  null  &&  exp  ==  null  &&  isDigits(numeric.substring(2)))  {  return  createBigInteger(numeric);  }	  if(dec    ==    null    &&    exp    ==    null    &&    isDigits(numeric.substring(1)))    {    return    createBigInteger(numeric);    }    	non-compiled	[CE]  ';'  expected	46	None	replace
6	[BUG]  [BUGGY]  String  dec  =  str.substring(0,  str.length()  -  1);  [CE]  ';'  expected  [FE]              AssertionError      [CONTEXT]      if  (dec  ==  null  &&  exp  ==  null  &&  (numeric.charAt(0)  ==  '-'  &&  isDigits(numeric.substring(1))  ||  isDigits(numeric)))  {  try  {  return  createLong(numeric);      [BUGGY]  String  dec  =  str.substring(0,  str.length()  -  1);  [BUGGY]      }  catch  (NumberFormatException  nfe)  {  //  NOPMD        //  Too  big  for  a  long            }  }  return  createBigInteger(numeric);  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  	projects/Lang7/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	511	513	1	replace	String  dec  =  str.substring(0,  str.length()  -  1);	  if(dec    ==    null    &&    exp    ==    null    &&    isDigits(numeric.substring(0,    1)))    {    return    createLong(numeric);    }    	non-compiled	[CE]  ';'  expected	22	None	replace
7	[BUG]  [BUGGY]  Integer  dec  =  str.substring(0,  str.length()  -  1);  [CE]  ';'  expected  [FE]                AssertionError      [CONTEXT]      if  (dec  ==  null  &&  exp  ==  null  &&  (numeric.charAt(0)  ==  '-'  &&  isDigits(numeric.substring(1))  ||  isDigits(numeric)))  {  try  {  return  createLong(numeric);      [BUGGY]  Integer  dec  =  str.substring(0,  str.length()  -  1);  [BUGGY]      }  catch  (NumberFormatException  nfe)  {  //  NOPMD        //  Too  big  for  a  long            }  }  return  createBigInteger(numeric);  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  	projects/Lang7/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	511	513	1	replace	Integer  dec  =  str.substring(0,  str.length()  -  1);	  if(dec    ==    null    &&    exp    ==    null    &&    isDigits(numeric.substring(0,    1)))    {    return    createLong(numeric);    }    	non-compiled	[CE]  ';'  expected	22	None	replace
8	[BUG]  [BUGGY]  Integer  decPos  =  str.indexOf('.')+  1;  [CE]  ';'  expected  [FE]                  AssertionError      [CONTEXT]      if  (dec  ==  null  &&  exp  ==  null  &&  (numeric.charAt(0)  ==  '-'  &&  isDigits(numeric.substring(1))  ||  isDigits(numeric)))  {  try  {  return  createLong(numeric);      [BUGGY]  Integer  decPos  =  str.indexOf('.')+  1;  [BUGGY]      }  catch  (NumberFormatException  nfe)  {  //  NOPMD        //  Too  big  for  a  long            }  }  return  createBigInteger(numeric);  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  	projects/Lang7/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	511	513	1	replace	Integer  decPos  =  str.indexOf('.')+  1;	  if(dec    ==    null    &&    exp    ==    null    &&    isDigits(numeric.substring(0,    1)))    {    return    createLong(numeric);    }    	non-compiled	[CE]  ';'  expected	22	None	replace
9	[BUG]  [BUGGY]  Integer  decPos  =  numeric.substring(0,  1);  [CE]  ';'  expected  [FE]                    AssertionError      [CONTEXT]      if  (dec  ==  null  &&  exp  ==  null  &&  (numeric.charAt(0)  ==  '-'  &&  isDigits(numeric.substring(1))  ||  isDigits(numeric)))  {  try  {  return  createLong(numeric);      [BUGGY]  Integer  decPos  =  numeric.substring(0,  1);  [BUGGY]      }  catch  (NumberFormatException  nfe)  {  //  NOPMD        //  Too  big  for  a  long            }  }  return  createBigInteger(numeric);  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  	projects/Lang7/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	511	513	1	replace	Integer  decPos  =  numeric.substring(0,  1);	  if(dec    ==    null    &&    exp    ==    null    &&    isDigits(numeric.substring(0,    1)))    {    return    createLong(numeric);    }    	non-compiled	[CE]  ';'  expected	22	None	replace
10	[BUG]  [BUGGY]  if(dec  ==  null  &&  exp  ==  null  &&  isDigits(numeric.substring(1))  ||  isDigits(numeric.substring(2)))  {  return  createBigInteger(numeric);  }  [CE]  ';'  expected  [FE]              AssertionError      [CONTEXT]      if  (dec  ==  null  &&  exp  ==  null  &&  (numeric.charAt(0)  ==  '-'  &&  isDigits(numeric.substring(1))  ||  isDigits(numeric)))  {  try  {  return  createLong(numeric);      [BUGGY]  if(dec  ==  null  &&  exp  ==  null  &&  isDigits(numeric.substring(1))  ||  isDigits(numeric.substring(2)))  {  return  createBigInteger(numeric);  }  [BUGGY]      }  catch  (NumberFormatException  nfe)  {  //  NOPMD        //  Too  big  for  a  long            }  }  return  createBigInteger(numeric);  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  	projects/Lang7/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	511	513	1	replace	if(dec  ==  null  &&  exp  ==  null  &&  isDigits(numeric.substring(1))  ||  isDigits(numeric.substring(2)))  {  return  createBigInteger(numeric);  }	  if(dec    ==    null    &&    exp    ==    null    &&    isDigits(numeric.substring(1))    ||    isDigits(numeric.substring(2)))    {    return    createInteger(numeric);    }    	non-compiled	[CE]  ';'  expected	15	None	replace
11	[BUG]  [BUGGY]  }  else  if(dec  ==  null  &&  exp  ==  null  &&  isDigits(numeric.substring(1))  &&  isDigits(numeric.substring(2)))  {  return  createLong(numeric);  }  [CE]  ';'  expected  [FE]            AssertionError      [CONTEXT]      if  (dec  ==  null  &&  exp  ==  null  &&  (numeric.charAt(0)  ==  '-'  &&  isDigits(numeric.substring(1))  ||  isDigits(numeric)))  {  try  {  return  createLong(numeric);      [BUGGY]  }  else  if(dec  ==  null  &&  exp  ==  null  &&  isDigits(numeric.substring(1))  &&  isDigits(numeric.substring(2)))  {  return  createLong(numeric);  }  [BUGGY]        }  return  createBigInteger(numeric);  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  	projects/Lang7/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	511	513	1	replace	}  else  if(dec  ==  null  &&  exp  ==  null  &&  isDigits(numeric.substring(1))  &&  isDigits(numeric.substring(2)))  {  return  createLong(numeric);  }	  }    else    if(dec    ==    null    &&    exp    ==    null    &&    isDigits(numeric.substring(1))    ||    isDigits(numeric.substring(2)))    {    return    createLong(numeric);    }    	non-compiled	[CE]  ';'  expected	40	None	replace
12	[BUG]  [BUGGY]  }  else  if(dec  ==  null  &&  exp  ==  null  &&  isDigits(numeric.substring(1))  ||  isDigits(numeric.substring(2)))  {  return  createBigInteger(numeric);  }  [CE]  ';'  expected  [FE]              AssertionError      [CONTEXT]      if  (dec  ==  null  &&  exp  ==  null  &&  (numeric.charAt(0)  ==  '-'  &&  isDigits(numeric.substring(1))  ||  isDigits(numeric)))  {  try  {  return  createLong(numeric);      [BUGGY]  }  else  if(dec  ==  null  &&  exp  ==  null  &&  isDigits(numeric.substring(1))  ||  isDigits(numeric.substring(2)))  {  return  createBigInteger(numeric);  }  [BUGGY]        }  return  createBigInteger(numeric);  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  	projects/Lang7/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	511	513	1	replace	}  else  if(dec  ==  null  &&  exp  ==  null  &&  isDigits(numeric.substring(1))  ||  isDigits(numeric.substring(2)))  {  return  createBigInteger(numeric);  }	  }    else    if(dec    ==    null    &&    exp    ==    null    &&    isDigits(numeric.substring(1))    ||    isDigits(numeric.substring(2)))    {    return    createLong(numeric);    }    	non-compiled	[CE]  ';'  expected	40	None	replace
13	[BUG]  [BUGGY]  if(isDigits(numeric.charAt(0)))  {  if(dec  ==  null  &&  exp  ==  null  &&  isDigits(numeric.substring(2)))  {  return  createLong(numeric);  }  [CE]  ';'  expected  [FE]                AssertionError      [CONTEXT]      if  (dec  ==  null  &&  exp  ==  null  &&  (numeric.charAt(0)  ==  '-'  &&  isDigits(numeric.substring(1))  ||  isDigits(numeric)))  {  try  {  return  createLong(numeric);      [BUGGY]  if(isDigits(numeric.charAt(0)))  {  if(dec  ==  null  &&  exp  ==  null  &&  isDigits(numeric.substring(2)))  {  return  createLong(numeric);  }  [BUGGY]      }  catch  (NumberFormatException  nfe)  {  //  NOPMD        //  Too  big  for  a  long            }  }  return  createBigInteger(numeric);  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  	projects/Lang7/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	511	513	1	replace	if(isDigits(numeric.charAt(0)))  {  if(dec  ==  null  &&  exp  ==  null  &&  isDigits(numeric.substring(2)))  {  return  createLong(numeric);  }	  if(numeric!=    null)    {    if(dec    ==    null    &&    exp    ==    null    &&    isDigits(numeric.substring(2)))    {    return    createLong(numeric);    }    	non-compiled	[CE]  ';'  expected	42	None	replace
14	[BUG]  [BUGGY]  if(isDigits(numeric.charAt(0)))  {  if(dec  ==  null  &&  exp  ==  null  &&  isDigits(numeric.substring(2)))  {  return  createInteger(numeric);  }  [CE]  ';'  expected  [FE]                  AssertionError      [CONTEXT]      if  (dec  ==  null  &&  exp  ==  null  &&  (numeric.charAt(0)  ==  '-'  &&  isDigits(numeric.substring(1))  ||  isDigits(numeric)))  {  try  {  return  createLong(numeric);      [BUGGY]  if(isDigits(numeric.charAt(0)))  {  if(dec  ==  null  &&  exp  ==  null  &&  isDigits(numeric.substring(2)))  {  return  createInteger(numeric);  }  [BUGGY]      }  catch  (NumberFormatException  nfe)  {  //  NOPMD        //  Too  big  for  a  long            }  }  return  createBigInteger(numeric);  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  	projects/Lang7/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	511	513	1	replace	if(isDigits(numeric.charAt(0)))  {  if(dec  ==  null  &&  exp  ==  null  &&  isDigits(numeric.substring(2)))  {  return  createInteger(numeric);  }	  if(numeric!=    null)    {    if(dec    ==    null    &&    exp    ==    null    &&    isDigits(numeric.substring(2)))    {    return    createLong(numeric);    }    	non-compiled	[CE]  ';'  expected	42	None	replace
15	[BUG]  [BUGGY]  }  catch(Throwable  e)  {  [CE]  ';'  expected  [FE]            AssertionError      [CONTEXT]      if  (dec  ==  null  &&  exp  ==  null  &&  (numeric.charAt(0)  ==  '-'  &&  isDigits(numeric.substring(1))  ||  isDigits(numeric)))  {  try  {  return  createLong(numeric);      [BUGGY]  }  catch(Throwable  e)  {  [BUGGY]        }  return  createBigInteger(numeric);  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  	projects/Lang7/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	511	513	1	replace	}  catch(Throwable  e)  {	  }    catch(NumberFormatException    e)    {    	non-compiled	[CE]  ';'  expected	17	None	replace
16	[BUG]  [BUGGY]  }  catch(Exception  e)  {  [CE]  ';'  expected  [FE]              AssertionError      [CONTEXT]      if  (dec  ==  null  &&  exp  ==  null  &&  (numeric.charAt(0)  ==  '-'  &&  isDigits(numeric.substring(1))  ||  isDigits(numeric)))  {  try  {  return  createLong(numeric);      [BUGGY]  }  catch(Exception  e)  {  [BUGGY]        }  return  createBigInteger(numeric);  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  	projects/Lang7/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	511	513	1	replace	}  catch(Exception  e)  {	  }    catch(NumberFormatException    e)    {    	non-compiled	[CE]  ';'  expected	17	None	replace
17	[BUG]  [BUGGY]  }  catch(NoSuchElementException  e)  {  [CE]  ';'  expected  [FE]                AssertionError      [CONTEXT]      if  (dec  ==  null  &&  exp  ==  null  &&  (numeric.charAt(0)  ==  '-'  &&  isDigits(numeric.substring(1))  ||  isDigits(numeric)))  {  try  {  return  createLong(numeric);      [BUGGY]  }  catch(NoSuchElementException  e)  {  [BUGGY]        }  return  createBigInteger(numeric);  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  	projects/Lang7/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	511	513	1	replace	}  catch(NoSuchElementException  e)  {	  }    catch(NumberFormatException    e)    {    	non-compiled	[CE]  ';'  expected	17	None	replace
18	[BUG]  [BUGGY]  catch(Throwable  nfe)  {  //  NOPMD  //  Too  big  for  a  long  [CE]  ';'  expected  [FE]                AssertionError      [CONTEXT]      if  (dec  ==  null  &&  exp  ==  null  &&  (numeric.charAt(0)  ==  '-'  &&  isDigits(numeric.substring(1))  ||  isDigits(numeric)))  {  try  {  return  createLong(numeric);      [BUGGY]  catch(Throwable  nfe)  {  //  NOPMD  //  Too  big  for  a  long  [BUGGY]        }  return  createBigInteger(numeric);  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  	projects/Lang7/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	511	513	1	replace	catch(Throwable  nfe)  {  //  NOPMD  //  Too  big  for  a  long	  }    catch(Exception    nfe)    {    //    NOPMD    //    Too    big    for    a    long    	non-compiled	[CE]  ';'  expected	13	None	replace
19	[BUG]  [BUGGY]  if(dec  ==  null  &&  exp  ==  null  &&  isDigits(numeric.substring(2))  ||  isDigits(numeric.substring(1)))  {  return  createLong  [CE]  ';'  expected  [FE]              AssertionError      [CONTEXT]      if  (dec  ==  null  &&  exp  ==  null  &&  (numeric.charAt(0)  ==  '-'  &&  isDigits(numeric.substring(1))  ||  isDigits(numeric)))  {  try  {  return  createLong(numeric);      [BUGGY]  if(dec  ==  null  &&  exp  ==  null  &&  isDigits(numeric.substring(2))  ||  isDigits(numeric.substring(1)))  {  return  createLong  [BUGGY]      }  catch  (NumberFormatException  nfe)  {  //  NOPMD        //  Too  big  for  a  long            }  }  return  createBigInteger(numeric);  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  	projects/Lang7/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	511	513	1	replace	if(dec  ==  null  &&  exp  ==  null  &&  isDigits(numeric.substring(2))  ||  isDigits(numeric.substring(1)))  {  return  createLong	  if(numeric.charAt(0)    ==    '-')    {    if(dec    ==    null    &&    exp    ==    null    &&    isDigits(numeric.substring(2))||    isDigits(numeric.substring(1)))    {    return    createLong    	non-compiled	[CE]  ';'  expected	29	None	replace
20	[BUG]  [BUGGY]  if(numeric.length()  ==  0)  {  if(dec  ==  null  &&  exp  ==  null  &&  isDigits(numeric.substring(2))  ||  isDigits(numeric.substring(1)))  {  return  createLong  [CE]  ';'  expected  [FE]                AssertionError      [CONTEXT]      if  (dec  ==  null  &&  exp  ==  null  &&  (numeric.charAt(0)  ==  '-'  &&  isDigits(numeric.substring(1))  ||  isDigits(numeric)))  {  try  {  return  createLong(numeric);      [BUGGY]  if(numeric.length()  ==  0)  {  if(dec  ==  null  &&  exp  ==  null  &&  isDigits(numeric.substring(2))  ||  isDigits(numeric.substring(1)))  {  return  createLong  [BUGGY]      }  catch  (NumberFormatException  nfe)  {  //  NOPMD        //  Too  big  for  a  long            }  }  return  createBigInteger(numeric);  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  	projects/Lang7/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	511	513	1	replace	if(numeric.length()  ==  0)  {  if(dec  ==  null  &&  exp  ==  null  &&  isDigits(numeric.substring(2))  ||  isDigits(numeric.substring(1)))  {  return  createLong	  if(numeric.charAt(0)    ==    '-')    {    if(dec    ==    null    &&    exp    ==    null    &&    isDigits(numeric.substring(2))||    isDigits(numeric.substring(1)))    {    return    createLong    	non-compiled	[CE]  ';'  expected	29	None	replace
21	[BUG]  [BUGGY]  if(numeric.charAt(0)  ==  '-')  {  if(dec  ==  null  &&  exp  ==  null  &&  isDigits(numeric.substring(1))  ||  isDigits(numeric.substring(1)))  {  return  createLong  [CE]  ';'  expected  [FE]                  AssertionError      [CONTEXT]      if  (dec  ==  null  &&  exp  ==  null  &&  (numeric.charAt(0)  ==  '-'  &&  isDigits(numeric.substring(1))  ||  isDigits(numeric)))  {  try  {  return  createLong(numeric);      [BUGGY]  if(numeric.charAt(0)  ==  '-')  {  if(dec  ==  null  &&  exp  ==  null  &&  isDigits(numeric.substring(1))  ||  isDigits(numeric.substring(1)))  {  return  createLong  [BUGGY]      }  catch  (NumberFormatException  nfe)  {  //  NOPMD        //  Too  big  for  a  long            }  }  return  createBigInteger(numeric);  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  	projects/Lang7/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	511	513	1	replace	if(numeric.charAt(0)  ==  '-')  {  if(dec  ==  null  &&  exp  ==  null  &&  isDigits(numeric.substring(1))  ||  isDigits(numeric.substring(1)))  {  return  createLong	  if(numeric.charAt(0)    ==    '-')    {    if(dec    ==    null    &&    exp    ==    null    &&    isDigits(numeric.substring(2))||    isDigits(numeric.substring(1)))    {    return    createLong    	non-compiled	[CE]  ';'  expected	29	None	replace
22	[BUG]  [BUGGY]  }  [CE]  ';'  expected  [FE]                AssertionError      [CONTEXT]      if  (dec  ==  null  &&  exp  ==  null  &&  (numeric.charAt(0)  ==  '-'  &&  isDigits(numeric.substring(1))  ||  isDigits(numeric)))  {  try  {  return  createLong(numeric);      [BUGGY]  }  [BUGGY]        }  return  createBigInteger(numeric);  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  	projects/Lang7/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	511	513	1	replace	}	  }    else    if(dec    ==    null    &&    exp    ==    null    &&    isDigits(numeric.substring(1))    ||    isDigits(numeric.charAt(0)))    {    return    createLong(numeric);    }    	non-compiled	[CE]  ';'  expected	9	None	replace
23	[BUG]  [BUGGY]  }  else  if(dec  ==  null  &&  exp  ==  null  &&  isDigits(numeric.substring(1))  &&  isDigits(numeric.charAt(0)))  {  return  createLong(numeric);  }  [CE]  ';'  expected  [FE]                  AssertionError      [CONTEXT]      if  (dec  ==  null  &&  exp  ==  null  &&  (numeric.charAt(0)  ==  '-'  &&  isDigits(numeric.substring(1))  ||  isDigits(numeric)))  {  try  {  return  createLong(numeric);      [BUGGY]  }  else  if(dec  ==  null  &&  exp  ==  null  &&  isDigits(numeric.substring(1))  &&  isDigits(numeric.charAt(0)))  {  return  createLong(numeric);  }  [BUGGY]        }  return  createBigInteger(numeric);  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  	projects/Lang7/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	511	513	1	replace	}  else  if(dec  ==  null  &&  exp  ==  null  &&  isDigits(numeric.substring(1))  &&  isDigits(numeric.charAt(0)))  {  return  createLong(numeric);  }	  }    else    if(dec    ==    null    &&    exp    ==    null    &&    isDigits(numeric.substring(1))    ||    isDigits(numeric.charAt(0)))    {    return    createLong(numeric);    }    	non-compiled	[CE]  ';'  expected	9	None	replace
24	[BUG]  [BUGGY]  }  else  if(dec  ==  null  &&  exp  ==  null  &&  isDigits(numeric.substring(1))  ||  isDigits(numeric.charAt(0)))  {  return  createBigInteger(numeric);  }  [CE]  ';'  expected  [FE]                    AssertionError      [CONTEXT]      if  (dec  ==  null  &&  exp  ==  null  &&  (numeric.charAt(0)  ==  '-'  &&  isDigits(numeric.substring(1))  ||  isDigits(numeric)))  {  try  {  return  createLong(numeric);      [BUGGY]  }  else  if(dec  ==  null  &&  exp  ==  null  &&  isDigits(numeric.substring(1))  ||  isDigits(numeric.charAt(0)))  {  return  createBigInteger(numeric);  }  [BUGGY]        }  return  createBigInteger(numeric);  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  	projects/Lang7/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	511	513	1	replace	}  else  if(dec  ==  null  &&  exp  ==  null  &&  isDigits(numeric.substring(1))  ||  isDigits(numeric.charAt(0)))  {  return  createBigInteger(numeric);  }	  }    else    if(dec    ==    null    &&    exp    ==    null    &&    isDigits(numeric.substring(1))    ||    isDigits(numeric.charAt(0)))    {    return    createLong(numeric);    }    	non-compiled	[CE]  ';'  expected	9	None	replace
25	[BUG]  [BUGGY]  }  catch(Throwable  t)  {  //  NOPMD  //  Too  big  for  a  long  [CE]  ';'  expected  [FE]              AssertionError      [CONTEXT]      if  (dec  ==  null  &&  exp  ==  null  &&  (numeric.charAt(0)  ==  '-'  &&  isDigits(numeric.substring(1))  ||  isDigits(numeric)))  {  try  {  return  createLong(numeric);      [BUGGY]  }  catch(Throwable  t)  {  //  NOPMD  //  Too  big  for  a  long  [BUGGY]        }  return  createBigInteger(numeric);  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  	projects/Lang7/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	511	513	1	replace	}  catch(Throwable  t)  {  //  NOPMD  //  Too  big  for  a  long	  }    catch(Throwable    nfe)    {    //    NOPMD    //    Too    big    for    a    long    	non-compiled	[CE]  ';'  expected	12	None	replace
26	[BUG]  [BUGGY]  if(str  ==  null)  {  if(dec  ==  null  &&  exp  ==  null  &&  isDigits(numeric.substring(1))||  isDigits(numeric.charAt(0)))  {  return  createBigInteger(numeric);  }  [CE]  ';'  expected  [FE]                AssertionError      [CONTEXT]      if  (dec  ==  null  &&  exp  ==  null  &&  (numeric.charAt(0)  ==  '-'  &&  isDigits(numeric.substring(1))  ||  isDigits(numeric)))  {  try  {  return  createLong(numeric);      [BUGGY]  if(str  ==  null)  {  if(dec  ==  null  &&  exp  ==  null  &&  isDigits(numeric.substring(1))||  isDigits(numeric.charAt(0)))  {  return  createBigInteger(numeric);  }  [BUGGY]        }  return  createBigInteger(numeric);  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  	projects/Lang7/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	511	513	1	replace	if(str  ==  null)  {  if(dec  ==  null  &&  exp  ==  null  &&  isDigits(numeric.substring(1))||  isDigits(numeric.charAt(0)))  {  return  createBigInteger(numeric);  }	  if(dec    ==    null    &&    exp    ==    null    &&    isDigits(numeric.substring(1))    ||    isDigits(numeric.charAt(0)))    {    return    createBigInteger(numeric);    }    	non-compiled	[CE]  ';'  expected	27	None	replace
27	[BUG]  [BUGGY]  }  catch(Throwable  t)  {  [CE]  ';'  expected  [FE]            AssertionError      [CONTEXT]      if  (dec  ==  null  &&  exp  ==  null  &&  (numeric.charAt(0)  ==  '-'  &&  isDigits(numeric.substring(1))  ||  isDigits(numeric)))  {  try  {  return  createLong(numeric);      [BUGGY]  }  catch(Throwable  t)  {  [BUGGY]        }  return  createBigInteger(numeric);  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  	projects/Lang7/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	511	513	1	replace	}  catch(Throwable  t)  {	  }    catch(NullPointerException    nfe)    {    	non-compiled	[CE]  ';'  expected	44	None	replace
28	[BUG]  [BUGGY]  }  catch(NumberFormatException  e)  {  return  createNull(numeric);  [CE]  ';'  expected  [FE]                  AssertionError      [CONTEXT]      if  (dec  ==  null  &&  exp  ==  null  &&  (numeric.charAt(0)  ==  '-'  &&  isDigits(numeric.substring(1))  ||  isDigits(numeric)))  {  try  {  return  createLong(numeric);      [BUGGY]  }  catch(NumberFormatException  e)  {  return  createNull(numeric);  [BUGGY]        }  return  createBigInteger(numeric);  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  	projects/Lang7/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	511	513	1	replace	}  catch(NumberFormatException  e)  {  return  createNull(numeric);	  }    catch(NumberFormatException    nfe)    {    return    createNull(numeric);    	non-compiled	[CE]  ';'  expected	10	None	replace
29	[BUG]  [BUGGY]  }  catch(NoSuchElementException  nfe)  {  return  createNull(numeric);  [CE]  ';'  expected  [FE]                    AssertionError      [CONTEXT]      if  (dec  ==  null  &&  exp  ==  null  &&  (numeric.charAt(0)  ==  '-'  &&  isDigits(numeric.substring(1))  ||  isDigits(numeric)))  {  try  {  return  createLong(numeric);      [BUGGY]  }  catch(NoSuchElementException  nfe)  {  return  createNull(numeric);  [BUGGY]        }  return  createBigInteger(numeric);  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  	projects/Lang7/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	511	513	1	replace	}  catch(NoSuchElementException  nfe)  {  return  createNull(numeric);	  }    catch(NumberFormatException    nfe)    {    return    createNull(numeric);    	non-compiled	[CE]  ';'  expected	10	None	replace
30	[BUG]  [BUGGY]  if(isDigits(numeric.charAt(0)))  {  if(dec  ==  null  &&  exp  ==  null  &&  isDigits(numeric.substring(1)))  {  return  createLong(numeric);  }  [CE]  ';'  expected  [FE]              AssertionError      [CONTEXT]      if  (dec  ==  null  &&  exp  ==  null  &&  (numeric.charAt(0)  ==  '-'  &&  isDigits(numeric.substring(1))  ||  isDigits(numeric)))  {  try  {  return  createLong(numeric);      [BUGGY]  if(isDigits(numeric.charAt(0)))  {  if(dec  ==  null  &&  exp  ==  null  &&  isDigits(numeric.substring(1)))  {  return  createLong(numeric);  }  [BUGGY]      }  catch  (NumberFormatException  nfe)  {  //  NOPMD        //  Too  big  for  a  long            }  }  return  createBigInteger(numeric);  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  	projects/Lang7/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	511	513	1	replace	if(isDigits(numeric.charAt(0)))  {  if(dec  ==  null  &&  exp  ==  null  &&  isDigits(numeric.substring(1)))  {  return  createLong(numeric);  }	  if(dec    ==    null    &&    exp    ==    null    &&    isDigits(numeric.substring(1)))    {    return    createInteger(numeric);    }    	non-compiled	[CE]  ';'  expected	47	None	replace
31	[BUG]  [BUGGY]  if(numeric.charAt(0)  ==  '-')  {  if(dec  ==  null  &&  exp  ==  null  &&  isDigits(numeric.substring(1)))  {  return  createBigInteger(numeric);  }  [CE]  ';'  expected  [FE]                AssertionError      [CONTEXT]      if  (dec  ==  null  &&  exp  ==  null  &&  (numeric.charAt(0)  ==  '-'  &&  isDigits(numeric.substring(1))  ||  isDigits(numeric)))  {  try  {  return  createLong(numeric);      [BUGGY]  if(numeric.charAt(0)  ==  '-')  {  if(dec  ==  null  &&  exp  ==  null  &&  isDigits(numeric.substring(1)))  {  return  createBigInteger(numeric);  }  [BUGGY]      }  catch  (NumberFormatException  nfe)  {  //  NOPMD        //  Too  big  for  a  long            }  }  return  createBigInteger(numeric);  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  	projects/Lang7/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	511	513	1	replace	if(numeric.charAt(0)  ==  '-')  {  if(dec  ==  null  &&  exp  ==  null  &&  isDigits(numeric.substring(1)))  {  return  createBigInteger(numeric);  }	  if(dec    ==    null    &&    exp    ==    null    &&    isDigits(numeric.substring(1)))    {    return    createInteger(numeric);    }    	non-compiled	[CE]  ';'  expected	47	None	replace
32	[BUG]  [BUGGY]  dec  =  str.substring(0,  str.length());  [CE]  ';'  expected  [FE]                    AssertionError      [CONTEXT]      if  (dec  ==  null  &&  exp  ==  null  &&  (numeric.charAt(0)  ==  '-'  &&  isDigits(numeric.substring(1))  ||  isDigits(numeric)))  {  try  {  return  createLong(numeric);      [BUGGY]  dec  =  str.substring(0,  str.length());  [BUGGY]      }  catch  (NumberFormatException  nfe)  {  //  NOPMD        //  Too  big  for  a  long            }  }  return  createBigInteger(numeric);  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  	projects/Lang7/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	511	513	1	replace	dec  =  str.substring(0,  str.length());	  if(dec    ==    null    &&    exp    ==    null    &&    isDigits(numeric.substring(1))    ||    isDigits(numeric.charAt(0)))    {    dec    =    str.substring(0,    str.length());    }    	non-compiled	[CE]  ';'  expected	2	None	replace
33	[BUG]  [BUGGY]  if(dec  ==  null  &&  exp  ==  null  &&  isDigits(numeric.substring(2))  ||  isDigits(numeric.charAt(0)))  {  dec  =  str.substring(0,  str.length());  }  [CE]  ';'  expected  [FE]                      AssertionError      [CONTEXT]      if  (dec  ==  null  &&  exp  ==  null  &&  (numeric.charAt(0)  ==  '-'  &&  isDigits(numeric.substring(1))  ||  isDigits(numeric)))  {  try  {  return  createLong(numeric);      [BUGGY]  if(dec  ==  null  &&  exp  ==  null  &&  isDigits(numeric.substring(2))  ||  isDigits(numeric.charAt(0)))  {  dec  =  str.substring(0,  str.length());  }  [BUGGY]      }  catch  (NumberFormatException  nfe)  {  //  NOPMD        //  Too  big  for  a  long            }  }  return  createBigInteger(numeric);  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  	projects/Lang7/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	511	513	1	replace	if(dec  ==  null  &&  exp  ==  null  &&  isDigits(numeric.substring(2))  ||  isDigits(numeric.charAt(0)))  {  dec  =  str.substring(0,  str.length());  }	  if(dec    ==    null    &&    exp    ==    null    &&    isDigits(numeric.substring(1))    ||    isDigits(numeric.charAt(0)))    {    dec    =    str.substring(0,    str.length());    }    	non-compiled	[CE]  ';'  expected	2	None	replace
34	[BUG]  [BUGGY]  }  catch(Throwable  e)  {  //  NOPMD  //  Too  big  for  a  long  [CE]  ';'  expected  [FE]            AssertionError      [CONTEXT]      if  (dec  ==  null  &&  exp  ==  null  &&  (numeric.charAt(0)  ==  '-'  &&  isDigits(numeric.substring(1))  ||  isDigits(numeric)))  {  try  {  return  createLong(numeric);      [BUGGY]  }  catch(Throwable  e)  {  //  NOPMD  //  Too  big  for  a  long  [BUGGY]        }  return  createBigInteger(numeric);  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  	projects/Lang7/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	511	513	1	replace	}  catch(Throwable  e)  {  //  NOPMD  //  Too  big  for  a  long	  }    catch(NumberFormatException    e)    {    //    NOPMD    //    Too    big    for    a    long    	non-compiled	[CE]  ';'  expected	16	None	replace
35	[BUG]  [BUGGY]  }  catch(Exception  e)  {  //  NOPMD  //  Too  big  for  a  long  [CE]  ';'  expected  [FE]              AssertionError      [CONTEXT]      if  (dec  ==  null  &&  exp  ==  null  &&  (numeric.charAt(0)  ==  '-'  &&  isDigits(numeric.substring(1))  ||  isDigits(numeric)))  {  try  {  return  createLong(numeric);      [BUGGY]  }  catch(Exception  e)  {  //  NOPMD  //  Too  big  for  a  long  [BUGGY]        }  return  createBigInteger(numeric);  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  	projects/Lang7/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	511	513	1	replace	}  catch(Exception  e)  {  //  NOPMD  //  Too  big  for  a  long	  }    catch(NumberFormatException    e)    {    //    NOPMD    //    Too    big    for    a    long    	non-compiled	[CE]  ';'  expected	16	None	replace
36	[BUG]  [BUGGY]  if(dec  ==  null  &&  exp  ==  null  &&  isDigits(numeric.substring(1))  ||  isDigits(numeric.charAt(0)))  {  String  dec  =  str.substring(0,  str.length()  -  1);  return  createLong  [CE]  ';'  expected  [FE]                AssertionError      [CONTEXT]      if  (dec  ==  null  &&  exp  ==  null  &&  (numeric.charAt(0)  ==  '-'  &&  isDigits(numeric.substring(1))  ||  isDigits(numeric)))  {  try  {  return  createLong(numeric);      [BUGGY]  if(dec  ==  null  &&  exp  ==  null  &&  isDigits(numeric.substring(1))  ||  isDigits(numeric.charAt(0)))  {  String  dec  =  str.substring(0,  str.length()  -  1);  return  createLong  [BUGGY]        }  return  createBigInteger(numeric);  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  	projects/Lang7/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	511	513	1	replace	if(dec  ==  null  &&  exp  ==  null  &&  isDigits(numeric.substring(1))  ||  isDigits(numeric.charAt(0)))  {  String  dec  =  str.substring(0,  str.length()  -  1);  return  createLong	  if(dec    ==    null    &&    exp    ==    null    &&    isDigits(numeric.substring(1))    ||    isDigits(numeric.charAt(0)))    {    String    dec    =    str.substring(0,    str.length()    -    1);    return    createLong(dec);    }    	non-compiled	[CE]  ';'  expected	11	None	replace
37	[BUG]  [BUGGY]  if(numeric.length()  ==  0)  {  if(dec  ==  null  &&  exp  ==  null  &&  isDigits(numeric.substring(1))  ||  isDigits(numeric.charAt(0)))  {  return  createLong  [CE]  ';'  expected  [FE]            AssertionError      [CONTEXT]      if  (dec  ==  null  &&  exp  ==  null  &&  (numeric.charAt(0)  ==  '-'  &&  isDigits(numeric.substring(1))  ||  isDigits(numeric)))  {  try  {  return  createLong(numeric);      [BUGGY]  if(numeric.length()  ==  0)  {  if(dec  ==  null  &&  exp  ==  null  &&  isDigits(numeric.substring(1))  ||  isDigits(numeric.charAt(0)))  {  return  createLong  [BUGGY]      }  catch  (NumberFormatException  nfe)  {  //  NOPMD        //  Too  big  for  a  long            }  }  return  createBigInteger(numeric);  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  	projects/Lang7/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	511	513	1	replace	if(numeric.length()  ==  0)  {  if(dec  ==  null  &&  exp  ==  null  &&  isDigits(numeric.substring(1))  ||  isDigits(numeric.charAt(0)))  {  return  createLong	  if(numeric.charAt(0)    ==    '-')    {    if(dec    ==    null    &&    exp    ==    null    &&    isDigits(numeric.substring(1))||    isDigits(numeric.charAt(0)))    {    return    createLong    	non-compiled	[CE]  ';'  expected	28	None	replace
38	[BUG]  [BUGGY]  if(dec  ==  null  &&  exp  ==  null  &&  isDigits(numeric.substring(1))  ||  isDigits(numeric.charAt(0)))  {  return  createLong  [CE]  ';'  expected  [FE]              AssertionError      [CONTEXT]      if  (dec  ==  null  &&  exp  ==  null  &&  (numeric.charAt(0)  ==  '-'  &&  isDigits(numeric.substring(1))  ||  isDigits(numeric)))  {  try  {  return  createLong(numeric);      [BUGGY]  if(dec  ==  null  &&  exp  ==  null  &&  isDigits(numeric.substring(1))  ||  isDigits(numeric.charAt(0)))  {  return  createLong  [BUGGY]      }  catch  (NumberFormatException  nfe)  {  //  NOPMD        //  Too  big  for  a  long            }  }  return  createBigInteger(numeric);  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  	projects/Lang7/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	511	513	1	replace	if(dec  ==  null  &&  exp  ==  null  &&  isDigits(numeric.substring(1))  ||  isDigits(numeric.charAt(0)))  {  return  createLong	  if(numeric.charAt(0)    ==    '-')    {    if(dec    ==    null    &&    exp    ==    null    &&    isDigits(numeric.substring(1))||    isDigits(numeric.charAt(0)))    {    return    createLong    	non-compiled	[CE]  ';'  expected	28	None	replace
39	[BUG]  [BUGGY]  if(numeric.length()  ==  1)  {  if(dec  ==  null  &&  exp  ==  null  &&  isDigits(numeric.substring(1))  ||  isDigits(numeric.charAt(0)))  {  return  createLong  [CE]  ';'  expected  [FE]                AssertionError      [CONTEXT]      if  (dec  ==  null  &&  exp  ==  null  &&  (numeric.charAt(0)  ==  '-'  &&  isDigits(numeric.substring(1))  ||  isDigits(numeric)))  {  try  {  return  createLong(numeric);      [BUGGY]  if(numeric.length()  ==  1)  {  if(dec  ==  null  &&  exp  ==  null  &&  isDigits(numeric.substring(1))  ||  isDigits(numeric.charAt(0)))  {  return  createLong  [BUGGY]      }  catch  (NumberFormatException  nfe)  {  //  NOPMD        //  Too  big  for  a  long            }  }  return  createBigInteger(numeric);  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  	projects/Lang7/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	511	513	1	replace	if(numeric.length()  ==  1)  {  if(dec  ==  null  &&  exp  ==  null  &&  isDigits(numeric.substring(1))  ||  isDigits(numeric.charAt(0)))  {  return  createLong	  if(numeric.charAt(0)    ==    '-')    {    if(dec    ==    null    &&    exp    ==    null    &&    isDigits(numeric.substring(1))||    isDigits(numeric.charAt(0)))    {    return    createLong    	non-compiled	[CE]  ';'  expected	28	None	replace
40	[BUG]  [BUGGY]  }  catch(NumberFormatException  e)  {  return  createLong(numeric);  [CE]  ';'  expected  [FE]            AssertionError      [CONTEXT]      if  (dec  ==  null  &&  exp  ==  null  &&  (numeric.charAt(0)  ==  '-'  &&  isDigits(numeric.substring(1))  ||  isDigits(numeric)))  {  try  {  return  createLong(numeric);      [BUGGY]  }  catch(NumberFormatException  e)  {  return  createLong(numeric);  [BUGGY]        }  return  createBigInteger(numeric);  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  	projects/Lang7/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	511	513	1	replace	}  catch(NumberFormatException  e)  {  return  createLong(numeric);	  }    catch(NumberFormatException    e)    {    return    createBigDecimal(numeric);    	non-compiled	[CE]  ';'  expected	25	None	replace
41	[BUG]  [BUGGY]  }  catch(NumberFormatException  e)  {  return  createInteger(numeric);  [CE]  ';'  expected  [FE]              AssertionError      [CONTEXT]      if  (dec  ==  null  &&  exp  ==  null  &&  (numeric.charAt(0)  ==  '-'  &&  isDigits(numeric.substring(1))  ||  isDigits(numeric)))  {  try  {  return  createLong(numeric);      [BUGGY]  }  catch(NumberFormatException  e)  {  return  createInteger(numeric);  [BUGGY]        }  return  createBigInteger(numeric);  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  	projects/Lang7/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	511	513	1	replace	}  catch(NumberFormatException  e)  {  return  createInteger(numeric);	  }    catch(NumberFormatException    e)    {    return    createBigDecimal(numeric);    	non-compiled	[CE]  ';'  expected	25	None	replace
42	[BUG]  [BUGGY]  }  catch(NumberFormatException  e)  {  return  createBigInteger(numeric);  [CE]  ';'  expected  [FE]                AssertionError      [CONTEXT]      if  (dec  ==  null  &&  exp  ==  null  &&  (numeric.charAt(0)  ==  '-'  &&  isDigits(numeric.substring(1))  ||  isDigits(numeric)))  {  try  {  return  createLong(numeric);      [BUGGY]  }  catch(NumberFormatException  e)  {  return  createBigInteger(numeric);  [BUGGY]        }  return  createBigInteger(numeric);  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  	projects/Lang7/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	511	513	1	replace	}  catch(NumberFormatException  e)  {  return  createBigInteger(numeric);	  }    catch(NumberFormatException    e)    {    return    createBigDecimal(numeric);    	non-compiled	[CE]  ';'  expected	25	None	replace
43	[BUG]  [BUGGY]  Dec  =  str.substring(0,  str.length());  [CE]  ';'  expected  [FE]                    AssertionError      [CONTEXT]      if  (dec  ==  null  &&  exp  ==  null  &&  (numeric.charAt(0)  ==  '-'  &&  isDigits(numeric.substring(1))  ||  isDigits(numeric)))  {  try  {  return  createLong(numeric);      [BUGGY]  Dec  =  str.substring(0,  str.length());  [BUGGY]      }  catch  (NumberFormatException  nfe)  {  //  NOPMD        //  Too  big  for  a  long            }  }  return  createBigInteger(numeric);  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  	projects/Lang7/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	511	513	1	replace	Dec  =  str.substring(0,  str.length());	  Dec    =    str.substring(0,    str.length()    -    1);    	non-compiled	[CE]  ';'  expected	32	None	replace
44	[BUG]  [BUGGY]  Dec  =  str.substring(0,  str.length()  +  1);  [CE]  ';'  expected  [FE]                      AssertionError      [CONTEXT]      if  (dec  ==  null  &&  exp  ==  null  &&  (numeric.charAt(0)  ==  '-'  &&  isDigits(numeric.substring(1))  ||  isDigits(numeric)))  {  try  {  return  createLong(numeric);      [BUGGY]  Dec  =  str.substring(0,  str.length()  +  1);  [BUGGY]      }  catch  (NumberFormatException  nfe)  {  //  NOPMD        //  Too  big  for  a  long            }  }  return  createBigInteger(numeric);  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  	projects/Lang7/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	511	513	1	replace	Dec  =  str.substring(0,  str.length()  +  1);	  Dec    =    str.substring(0,    str.length()    -    1);    	non-compiled	[CE]  ';'  expected	32	None	replace
45	[BUG]  [BUGGY]  if(isDigits(numeric.charAt(0)))  {  if(dec  ==  null  &&  exp  ==  null  &&  isDigits(numeric.charAt(0)))  {  return  createLong(numeric);  }  [CE]  ';'  expected  [FE]            AssertionError      [CONTEXT]      if  (dec  ==  null  &&  exp  ==  null  &&  (numeric.charAt(0)  ==  '-'  &&  isDigits(numeric.substring(1))  ||  isDigits(numeric)))  {  try  {  return  createLong(numeric);      [BUGGY]  if(isDigits(numeric.charAt(0)))  {  if(dec  ==  null  &&  exp  ==  null  &&  isDigits(numeric.charAt(0)))  {  return  createLong(numeric);  }  [BUGGY]      }  catch  (NumberFormatException  nfe)  {  //  NOPMD        //  Too  big  for  a  long            }  }  return  createBigInteger(numeric);  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  	projects/Lang7/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	511	513	1	replace	if(isDigits(numeric.charAt(0)))  {  if(dec  ==  null  &&  exp  ==  null  &&  isDigits(numeric.charAt(0)))  {  return  createLong(numeric);  }	  if(dec    ==    null    &&    exp    ==    null    &&    isDigits(numeric.charAt(0)))    {    return    createLong(numeric);    }    	non-compiled	[CE]  ';'  expected	21	None	replace
46	[BUG]  [BUGGY]  if(isDigits(numeric.charAt(0)))  {  if(dec  ==  null  &&  exp  ==  null  &&  isDigits(numeric.charAt(0)))  {  return  createInteger(numeric);  }  [CE]  ';'  expected  [FE]              AssertionError      [CONTEXT]      if  (dec  ==  null  &&  exp  ==  null  &&  (numeric.charAt(0)  ==  '-'  &&  isDigits(numeric.substring(1))  ||  isDigits(numeric)))  {  try  {  return  createLong(numeric);      [BUGGY]  if(isDigits(numeric.charAt(0)))  {  if(dec  ==  null  &&  exp  ==  null  &&  isDigits(numeric.charAt(0)))  {  return  createInteger(numeric);  }  [BUGGY]      }  catch  (NumberFormatException  nfe)  {  //  NOPMD        //  Too  big  for  a  long            }  }  return  createBigInteger(numeric);  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  	projects/Lang7/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	511	513	1	replace	if(isDigits(numeric.charAt(0)))  {  if(dec  ==  null  &&  exp  ==  null  &&  isDigits(numeric.charAt(0)))  {  return  createInteger(numeric);  }	  if(dec    ==    null    &&    exp    ==    null    &&    isDigits(numeric.charAt(0)))    {    return    createLong(numeric);    }    	non-compiled	[CE]  ';'  expected	21	None	replace
47	[BUG]  [BUGGY]  if(dec  ==  null  &&  exp  ==  null  &&  isDigits(numeric.charAt(0)))  {  return  createInteger(numeric);  }  [CE]  ';'  expected  [FE]                AssertionError      [CONTEXT]      if  (dec  ==  null  &&  exp  ==  null  &&  (numeric.charAt(0)  ==  '-'  &&  isDigits(numeric.substring(1))  ||  isDigits(numeric)))  {  try  {  return  createLong(numeric);      [BUGGY]  if(dec  ==  null  &&  exp  ==  null  &&  isDigits(numeric.charAt(0)))  {  return  createInteger(numeric);  }  [BUGGY]      }  catch  (NumberFormatException  nfe)  {  //  NOPMD        //  Too  big  for  a  long            }  }  return  createBigInteger(numeric);  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  	projects/Lang7/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	511	513	1	replace	if(dec  ==  null  &&  exp  ==  null  &&  isDigits(numeric.charAt(0)))  {  return  createInteger(numeric);  }	  if(dec    ==    null    &&    exp    ==    null    &&    isDigits(numeric.charAt(0)))    {    return    createLong(numeric);    }    	non-compiled	[CE]  ';'  expected	21	None	replace
48	[BUG]  [BUGGY]  if(numeric.charAt(0)  ==  '-')  {  if(dec  ==  null  &&  exp  ==  null  &&  isDigits(numeric.substring(2)))  {  return  createLong(numeric);  }  [CE]  ';'  expected  [FE]                AssertionError      [CONTEXT]      if  (dec  ==  null  &&  exp  ==  null  &&  (numeric.charAt(0)  ==  '-'  &&  isDigits(numeric.substring(1))  ||  isDigits(numeric)))  {  try  {  return  createLong(numeric);      [BUGGY]  if(numeric.charAt(0)  ==  '-')  {  if(dec  ==  null  &&  exp  ==  null  &&  isDigits(numeric.substring(2)))  {  return  createLong(numeric);  }  [BUGGY]      }  catch  (NumberFormatException  nfe)  {  //  NOPMD        //  Too  big  for  a  long            }  }  return  createBigInteger(numeric);  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  	projects/Lang7/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	511	513	1	replace	if(numeric.charAt(0)  ==  '-')  {  if(dec  ==  null  &&  exp  ==  null  &&  isDigits(numeric.substring(2)))  {  return  createLong(numeric);  }	  if(dec    ==    null    &&    exp    ==    null    &&    isDigits(numeric.substring(0,    2)))    {    return    createLong(numeric);    }    	non-compiled	[CE]  ';'  expected	4	None	replace
49	[BUG]  [BUGGY]  if(isDigits(numeric.substring(1)))  {  if(dec  ==  null  &&  exp  ==  null  &&  isDigits(numeric.substring(2)))  {  return  createLong(numeric);  }  [CE]  ';'  expected  [FE]                  AssertionError      [CONTEXT]      if  (dec  ==  null  &&  exp  ==  null  &&  (numeric.charAt(0)  ==  '-'  &&  isDigits(numeric.substring(1))  ||  isDigits(numeric)))  {  try  {  return  createLong(numeric);      [BUGGY]  if(isDigits(numeric.substring(1)))  {  if(dec  ==  null  &&  exp  ==  null  &&  isDigits(numeric.substring(2)))  {  return  createLong(numeric);  }  [BUGGY]      }  catch  (NumberFormatException  nfe)  {  //  NOPMD        //  Too  big  for  a  long            }  }  return  createBigInteger(numeric);  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  	projects/Lang7/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	511	513	1	replace	if(isDigits(numeric.substring(1)))  {  if(dec  ==  null  &&  exp  ==  null  &&  isDigits(numeric.substring(2)))  {  return  createLong(numeric);  }	  if(dec    ==    null    &&    exp    ==    null    &&    isDigits(numeric.substring(0,    2)))    {    return    createLong(numeric);    }    	non-compiled	[CE]  ';'  expected	4	None	replace
50	[BUG]  [BUGGY]  if(isDigits(numeric.substring(2)))  {  if(dec  ==  null  &&  exp  ==  null  &&  isDigits(numeric.substring(2)))  {  return  createLong(numeric);  }  [CE]  ';'  expected  [FE]                    AssertionError      [CONTEXT]      if  (dec  ==  null  &&  exp  ==  null  &&  (numeric.charAt(0)  ==  '-'  &&  isDigits(numeric.substring(1))  ||  isDigits(numeric)))  {  try  {  return  createLong(numeric);      [BUGGY]  if(isDigits(numeric.substring(2)))  {  if(dec  ==  null  &&  exp  ==  null  &&  isDigits(numeric.substring(2)))  {  return  createLong(numeric);  }  [BUGGY]      }  catch  (NumberFormatException  nfe)  {  //  NOPMD        //  Too  big  for  a  long            }  }  return  createBigInteger(numeric);  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  	projects/Lang7/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	511	513	1	replace	if(isDigits(numeric.substring(2)))  {  if(dec  ==  null  &&  exp  ==  null  &&  isDigits(numeric.substring(2)))  {  return  createLong(numeric);  }	  if(dec    ==    null    &&    exp    ==    null    &&    isDigits(numeric.substring(0,    2)))    {    return    createLong(numeric);    }    	non-compiled	[CE]  ';'  expected	4	None	replace
51	[BUG]  [BUGGY]  meric  =  str.substring(0,  str.length());  [CE]  ';'  expected  [FE]              AssertionError      [CONTEXT]      if  (dec  ==  null  &&  exp  ==  null  &&  (numeric.charAt(0)  ==  '-'  &&  isDigits(numeric.substring(1))  ||  isDigits(numeric)))  {  try  {  return  createLong(numeric);      [BUGGY]  meric  =  str.substring(0,  str.length());  [BUGGY]      }  catch  (NumberFormatException  nfe)  {  //  NOPMD        //  Too  big  for  a  long            }  }  return  createBigInteger(numeric);  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  	projects/Lang7/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	511	513	1	replace	meric  =  str.substring(0,  str.length());	  numeric    =    str.substring(0,    str.length()    -    2);    	non-compiled	[CE]  ';'  expected	34	None	replace
52	[BUG]  [BUGGY]  Numeric  numeric  =  str.substring(0,  str.length());  [CE]  ';'  expected  [FE]                AssertionError      [CONTEXT]      if  (dec  ==  null  &&  exp  ==  null  &&  (numeric.charAt(0)  ==  '-'  &&  isDigits(numeric.substring(1))  ||  isDigits(numeric)))  {  try  {  return  createLong(numeric);      [BUGGY]  Numeric  numeric  =  str.substring(0,  str.length());  [BUGGY]      }  catch  (NumberFormatException  nfe)  {  //  NOPMD        //  Too  big  for  a  long            }  }  return  createBigInteger(numeric);  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  	projects/Lang7/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	511	513	1	replace	Numeric  numeric  =  str.substring(0,  str.length());	  numeric    =    str.substring(0,    str.length()    -    2);    	non-compiled	[CE]  ';'  expected	34	None	replace
53	[BUG]  [BUGGY]  NullableValue  <  String>  dec  =  nullableValue(numeric.charAt(0));  [CE]  ';'  expected  [FE]                AssertionError      [CONTEXT]      if  (dec  ==  null  &&  exp  ==  null  &&  (numeric.charAt(0)  ==  '-'  &&  isDigits(numeric.substring(1))  ||  isDigits(numeric)))  {  try  {  return  createLong(numeric);      [BUGGY]  NullableValue  <  String>  dec  =  nullableValue(numeric.charAt(0));  [BUGGY]      }  catch  (NumberFormatException  nfe)  {  //  NOPMD        //  Too  big  for  a  long            }  }  return  createBigInteger(numeric);  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  	projects/Lang7/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	511	513	1	replace	NullableValue  <  String>  dec  =  nullableValue(numeric.charAt(0));	  NullableValue    <    String>    dec    =    nullableValue();    	non-compiled	[CE]  ';'  expected	35	None	replace
54	[BUG]  [BUGGY]  NullableValue  <  String>  dec  =  nullableValue(numeric.substring(1));  [CE]  ';'  expected  [FE]                  AssertionError      [CONTEXT]      if  (dec  ==  null  &&  exp  ==  null  &&  (numeric.charAt(0)  ==  '-'  &&  isDigits(numeric.substring(1))  ||  isDigits(numeric)))  {  try  {  return  createLong(numeric);      [BUGGY]  NullableValue  <  String>  dec  =  nullableValue(numeric.substring(1));  [BUGGY]      }  catch  (NumberFormatException  nfe)  {  //  NOPMD        //  Too  big  for  a  long            }  }  return  createBigInteger(numeric);  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  	projects/Lang7/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	511	513	1	replace	NullableValue  <  String>  dec  =  nullableValue(numeric.substring(1));	  NullableValue    <    String>    dec    =    nullableValue();    	non-compiled	[CE]  ';'  expected	35	None	replace
55	[BUG]  [BUGGY]  NullableValue  <  String>  dec  =  this.numericValue();  [CE]  ';'  expected  [FE]                    AssertionError      [CONTEXT]      if  (dec  ==  null  &&  exp  ==  null  &&  (numeric.charAt(0)  ==  '-'  &&  isDigits(numeric.substring(1))  ||  isDigits(numeric)))  {  try  {  return  createLong(numeric);      [BUGGY]  NullableValue  <  String>  dec  =  this.numericValue();  [BUGGY]      }  catch  (NumberFormatException  nfe)  {  //  NOPMD        //  Too  big  for  a  long            }  }  return  createBigInteger(numeric);  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  	projects/Lang7/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	511	513	1	replace	NullableValue  <  String>  dec  =  this.numericValue();	  NullableValue    <    String>    dec    =    nullableValue();    	non-compiled	[CE]  ';'  expected	35	None	replace
56	[BUG]  [BUGGY]  NullableValue  <  String>  dec  =  nullableValues(numeric.charAt(0));  [CE]  ';'  expected  [FE]                  AssertionError      [CONTEXT]      if  (dec  ==  null  &&  exp  ==  null  &&  (numeric.charAt(0)  ==  '-'  &&  isDigits(numeric.substring(1))  ||  isDigits(numeric)))  {  try  {  return  createLong(numeric);      [BUGGY]  NullableValue  <  String>  dec  =  nullableValues(numeric.charAt(0));  [BUGGY]      }  catch  (NumberFormatException  nfe)  {  //  NOPMD        //  Too  big  for  a  long            }  }  return  createBigInteger(numeric);  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  	projects/Lang7/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	511	513	1	replace	NullableValue  <  String>  dec  =  nullableValues(numeric.charAt(0));	  NullableValue    <    String>    dec    =    nullableValues();    	non-compiled	[CE]  ';'  expected	36	None	replace
57	[BUG]  [BUGGY]  NullableValue  <  String>  dec  =  nullableValues(numeric.substring(1));  [CE]  ';'  expected  [FE]                    AssertionError      [CONTEXT]      if  (dec  ==  null  &&  exp  ==  null  &&  (numeric.charAt(0)  ==  '-'  &&  isDigits(numeric.substring(1))  ||  isDigits(numeric)))  {  try  {  return  createLong(numeric);      [BUGGY]  NullableValue  <  String>  dec  =  nullableValues(numeric.substring(1));  [BUGGY]      }  catch  (NumberFormatException  nfe)  {  //  NOPMD        //  Too  big  for  a  long            }  }  return  createBigInteger(numeric);  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  	projects/Lang7/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	511	513	1	replace	NullableValue  <  String>  dec  =  nullableValues(numeric.substring(1));	  NullableValue    <    String>    dec    =    nullableValues();    	non-compiled	[CE]  ';'  expected	36	None	replace
58	[BUG]  [BUGGY]  NullableValue  <  String>  dec  =  nullableValues(numeric);  [CE]  ';'  expected  [FE]                      AssertionError      [CONTEXT]      if  (dec  ==  null  &&  exp  ==  null  &&  (numeric.charAt(0)  ==  '-'  &&  isDigits(numeric.substring(1))  ||  isDigits(numeric)))  {  try  {  return  createLong(numeric);      [BUGGY]  NullableValue  <  String>  dec  =  nullableValues(numeric);  [BUGGY]      }  catch  (NumberFormatException  nfe)  {  //  NOPMD        //  Too  big  for  a  long            }  }  return  createBigInteger(numeric);  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  	projects/Lang7/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	511	513	1	replace	NullableValue  <  String>  dec  =  nullableValues(numeric);	  NullableValue    <    String>    dec    =    nullableValues();    	non-compiled	[CE]  ';'  expected	36	None	replace
59	[BUG]  [BUGGY]  if(dec  ==  null  &&  exp  ==  null  &&  isDigits(numeric.substring(2)))  {  return  createBigInteger(numeric);  }  [CE]  ';'  expected  [FE]                  AssertionError      [CONTEXT]      if  (dec  ==  null  &&  exp  ==  null  &&  (numeric.charAt(0)  ==  '-'  &&  isDigits(numeric.substring(1))  ||  isDigits(numeric)))  {  try  {  return  createLong(numeric);      [BUGGY]  if(dec  ==  null  &&  exp  ==  null  &&  isDigits(numeric.substring(2)))  {  return  createBigInteger(numeric);  }  [BUGGY]      }  catch  (NumberFormatException  nfe)  {  //  NOPMD        //  Too  big  for  a  long            }  }  return  createBigInteger(numeric);  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  	projects/Lang7/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	511	513	1	replace	if(dec  ==  null  &&  exp  ==  null  &&  isDigits(numeric.substring(2)))  {  return  createBigInteger(numeric);  }	  if(dec    ==    null    &&    exp    ==    null    &&    isDigits(numeric.substring(2)))    {    return    createInteger(numeric);    }    	non-compiled	[CE]  ';'  expected	43	None	replace
60	[BUG]  [BUGGY]  if(numeric.charAt(0)  ==  '-')  {  if(dec  ==  null  &&  exp  ==  null  &&  isDigits(numeric.substring(1))&&  isDigits(numeric.charAt(0)))  {  return  createLong  [CE]  not  a  statement  [FE]            AssertionError      [CONTEXT]      if  (dec  ==  null  &&  exp  ==  null  &&  (numeric.charAt(0)  ==  '-'  &&  isDigits(numeric.substring(1))  ||  isDigits(numeric)))  {  try  {  return  createLong(numeric);      [BUGGY]  if(numeric.charAt(0)  ==  '-')  {  if(dec  ==  null  &&  exp  ==  null  &&  isDigits(numeric.substring(1))&&  isDigits(numeric.charAt(0)))  {  return  createLong  [BUGGY]      }  catch  (NumberFormatException  nfe)  {  //  NOPMD        //  Too  big  for  a  long            }  }  return  createBigInteger(numeric);  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  	projects/Lang7/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	511	513	1	replace	if(numeric.charAt(0)  ==  '-')  {  if(dec  ==  null  &&  exp  ==  null  &&  isDigits(numeric.substring(1))&&  isDigits(numeric.charAt(0)))  {  return  createLong	  if(dec    ==    null    &&    exp    ==    null    &&    isDigits(numeric.substring(1))    &&    isDigits(numeric.charAt(0)))    {    return    createLong(numeric);    }    	non-compiled	[CE]  not  a  statement	41	None	replace
61	[BUG]  [BUGGY]  if(dec  ==  null  &&  exp  ==  null  &&  isDigits(numeric.substring(2))  &&  isDigits(numeric.charAt(0)))  {  return  createLong(numeric);  }  [CE]  not  a  statement  [FE]              AssertionError      [CONTEXT]      if  (dec  ==  null  &&  exp  ==  null  &&  (numeric.charAt(0)  ==  '-'  &&  isDigits(numeric.substring(1))  ||  isDigits(numeric)))  {  try  {  return  createLong(numeric);      [BUGGY]  if(dec  ==  null  &&  exp  ==  null  &&  isDigits(numeric.substring(2))  &&  isDigits(numeric.charAt(0)))  {  return  createLong(numeric);  }  [BUGGY]      }  catch  (NumberFormatException  nfe)  {  //  NOPMD        //  Too  big  for  a  long            }  }  return  createBigInteger(numeric);  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  	projects/Lang7/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	511	513	1	replace	if(dec  ==  null  &&  exp  ==  null  &&  isDigits(numeric.substring(2))  &&  isDigits(numeric.charAt(0)))  {  return  createLong(numeric);  }	  if(dec    ==    null    &&    exp    ==    null    &&    isDigits(numeric.substring(1))    &&    isDigits(numeric.charAt(0)))    {    return    createLong(numeric);    }    	non-compiled	[CE]  not  a  statement	41	None	replace
62	[BUG]  [BUGGY]  }  catch(NoSuchElementException  nfe)  {  return  createLong(numeric);  [CE]  not  a  statement  [FE]              AssertionError      [CONTEXT]      if  (dec  ==  null  &&  exp  ==  null  &&  (numeric.charAt(0)  ==  '-'  &&  isDigits(numeric.substring(1))  ||  isDigits(numeric)))  {  try  {  return  createLong(numeric);      [BUGGY]  }  catch(NoSuchElementException  nfe)  {  return  createLong(numeric);  [BUGGY]        }  return  createBigInteger(numeric);  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  	projects/Lang7/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	511	513	1	replace	}  catch(NoSuchElementException  nfe)  {  return  createLong(numeric);	  }    catch(NoSuchElementException    nfe)    {    return    createBigInteger(numeric);    	non-compiled	[CE]  not  a  statement	38	None	replace
63	[BUG]  [BUGGY]  }  catch(NoSuchElementException  nfe)  {  return  createNumber(numeric);  [CE]  ';'  expected  [FE]                AssertionError      [CONTEXT]      if  (dec  ==  null  &&  exp  ==  null  &&  (numeric.charAt(0)  ==  '-'  &&  isDigits(numeric.substring(1))  ||  isDigits(numeric)))  {  try  {  return  createLong(numeric);      [BUGGY]  }  catch(NoSuchElementException  nfe)  {  return  createNumber(numeric);  [BUGGY]        }  return  createBigInteger(numeric);  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  	projects/Lang7/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	511	513	1	replace	}  catch(NoSuchElementException  nfe)  {  return  createNumber(numeric);	  }    catch(NoSuchElementException    nfe)    {    return    createBigInteger(numeric);    	non-compiled	[CE]  ';'  expected	38	None	replace
64	[BUG]  [BUGGY]  }  catch(Throwable  nfe)  {  return  createNumber(numeric);  [CE]  ';'  expected  [FE]                  AssertionError      [CONTEXT]      if  (dec  ==  null  &&  exp  ==  null  &&  (numeric.charAt(0)  ==  '-'  &&  isDigits(numeric.substring(1))  ||  isDigits(numeric)))  {  try  {  return  createLong(numeric);      [BUGGY]  }  catch(Throwable  nfe)  {  return  createNumber(numeric);  [BUGGY]        }  return  createBigInteger(numeric);  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  	projects/Lang7/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	511	513	1	replace	}  catch(Throwable  nfe)  {  return  createNumber(numeric);	  }    catch(NoSuchElementException    nfe)    {    return    createBigInteger(numeric);    	non-compiled	[CE]  ';'  expected	38	None	replace
65	[BUG]  [BUGGY]  if(dec  ==  null  &&  exp  ==  null  &&  isDigits(numeric.substring(1))  ||  isDigits(numeric.substring(2)))  {  return  createLong  [CE]  ';'  expected  [FE]            AssertionError      [CONTEXT]      if  (dec  ==  null  &&  exp  ==  null  &&  (numeric.charAt(0)  ==  '-'  &&  isDigits(numeric.substring(1))  ||  isDigits(numeric)))  {  try  {  return  createLong(numeric);      [BUGGY]  if(dec  ==  null  &&  exp  ==  null  &&  isDigits(numeric.substring(1))  ||  isDigits(numeric.substring(2)))  {  return  createLong  [BUGGY]      }  catch  (NumberFormatException  nfe)  {  //  NOPMD        //  Too  big  for  a  long            }  }  return  createBigInteger(numeric);  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  	projects/Lang7/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	511	513	1	replace	if(dec  ==  null  &&  exp  ==  null  &&  isDigits(numeric.substring(1))  ||  isDigits(numeric.substring(2)))  {  return  createLong	  if(numeric.charAt(0)    ==    '-')    {    if(dec    ==    null    &&    exp    ==    null    &&    isDigits(numeric.substring(1))||    isDigits(numeric.substring(2)))    {    return    createLong    	non-compiled	[CE]  ';'  expected	14	None	replace
66	[BUG]  [BUGGY]  if(numeric.length()  ==  2)  {  if(dec  ==  null  &&  exp  ==  null  &&  isDigits(numeric.substring(1))  ||  isDigits(numeric.substring(2)))  {  return  createLong  [CE]  ';'  expected  [FE]              AssertionError      [CONTEXT]      if  (dec  ==  null  &&  exp  ==  null  &&  (numeric.charAt(0)  ==  '-'  &&  isDigits(numeric.substring(1))  ||  isDigits(numeric)))  {  try  {  return  createLong(numeric);      [BUGGY]  if(numeric.length()  ==  2)  {  if(dec  ==  null  &&  exp  ==  null  &&  isDigits(numeric.substring(1))  ||  isDigits(numeric.substring(2)))  {  return  createLong  [BUGGY]      }  catch  (NumberFormatException  nfe)  {  //  NOPMD        //  Too  big  for  a  long            }  }  return  createBigInteger(numeric);  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  	projects/Lang7/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	511	513	1	replace	if(numeric.length()  ==  2)  {  if(dec  ==  null  &&  exp  ==  null  &&  isDigits(numeric.substring(1))  ||  isDigits(numeric.substring(2)))  {  return  createLong	  if(numeric.charAt(0)    ==    '-')    {    if(dec    ==    null    &&    exp    ==    null    &&    isDigits(numeric.substring(1))||    isDigits(numeric.substring(2)))    {    return    createLong    	non-compiled	[CE]  ';'  expected	14	None	replace
67	[BUG]  [BUGGY]  if(dec  ==  null  &&  exp  ==  null  &&  isDigits(numeric.substring(1))  ||  isDigits(numeric.substring(2)))  {  [CE]  ';'  expected  [FE]                AssertionError      [CONTEXT]      if  (dec  ==  null  &&  exp  ==  null  &&  (numeric.charAt(0)  ==  '-'  &&  isDigits(numeric.substring(1))  ||  isDigits(numeric)))  {  try  {  return  createLong(numeric);      [BUGGY]  if(dec  ==  null  &&  exp  ==  null  &&  isDigits(numeric.substring(1))  ||  isDigits(numeric.substring(2)))  {  [BUGGY]      }  catch  (NumberFormatException  nfe)  {  //  NOPMD        //  Too  big  for  a  long            }  }  return  createBigInteger(numeric);  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  	projects/Lang7/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	511	513	1	replace	if(dec  ==  null  &&  exp  ==  null  &&  isDigits(numeric.substring(1))  ||  isDigits(numeric.substring(2)))  {	  if(numeric.charAt(0)    ==    '-')    {    if(dec    ==    null    &&    exp    ==    null    &&    isDigits(numeric.substring(1))||    isDigits(numeric.substring(2)))    {    return    createLong    	non-compiled	[CE]  ';'  expected	14	None	replace
68	[BUG]  [BUGGY]  }  catch(NumberFormatException  nfe)  {  return  createBigDecimal(numeric.substring(1));  [CE]  ';'  expected  [FE]              AssertionError      [CONTEXT]      if  (dec  ==  null  &&  exp  ==  null  &&  (numeric.charAt(0)  ==  '-'  &&  isDigits(numeric.substring(1))  ||  isDigits(numeric)))  {  try  {  return  createLong(numeric);      [BUGGY]  }  catch(NumberFormatException  nfe)  {  return  createBigDecimal(numeric.substring(1));  [BUGGY]        }  return  createBigInteger(numeric);  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  	projects/Lang7/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	511	513	1	replace	}  catch(NumberFormatException  nfe)  {  return  createBigDecimal(numeric.substring(1));	  }    catch(NumberFormatException    nfe)    {    return    createBigDecimal(numeric);    	non-compiled	[CE]  ';'  expected	8	None	replace
69	[BUG]  [BUGGY]  if(numeric.length()  ==  0)  {  if(dec  ==  null  &&  exp  ==  null  &&  isDigits(numeric.substring(1))||  isDigits(numeric.charAt(0)))  {  String  dec  =  str.substring(0,  str.length()  -  1);  return  createLong  [CE]  ';'  expected  [FE]                AssertionError      [CONTEXT]      if  (dec  ==  null  &&  exp  ==  null  &&  (numeric.charAt(0)  ==  '-'  &&  isDigits(numeric.substring(1))  ||  isDigits(numeric)))  {  try  {  return  createLong(numeric);      [BUGGY]  if(numeric.length()  ==  0)  {  if(dec  ==  null  &&  exp  ==  null  &&  isDigits(numeric.substring(1))||  isDigits(numeric.charAt(0)))  {  String  dec  =  str.substring(0,  str.length()  -  1);  return  createLong  [BUGGY]        }  return  createBigInteger(numeric);  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  	projects/Lang7/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	511	513	1	replace	if(numeric.length()  ==  0)  {  if(dec  ==  null  &&  exp  ==  null  &&  isDigits(numeric.substring(1))||  isDigits(numeric.charAt(0)))  {  String  dec  =  str.substring(0,  str.length()  -  1);  return  createLong	  if(dec    ==    null    &&    exp    ==    null    &&    isDigits(numeric.substring(1))    ||    isDigits(numeric.charAt(0)))    {    String    dec    =    str.substring(0,    str.length()    -    1);    return    createLong(dec);    }    	non-compiled	[CE]  ';'  expected	11	None	replace
70	[BUG]  [BUGGY]  if(dec  ==  null  &&  exp  ==  null  &&  isDigits(numeric.substring(2))  ||  isDigits(numeric.charAt(0)))  {  String  dec  =  str.substring(0,  str.length()  -  1);  return  createLong  [CE]  ';'  expected  [FE]                  AssertionError      [CONTEXT]      if  (dec  ==  null  &&  exp  ==  null  &&  (numeric.charAt(0)  ==  '-'  &&  isDigits(numeric.substring(1))  ||  isDigits(numeric)))  {  try  {  return  createLong(numeric);      [BUGGY]  if(dec  ==  null  &&  exp  ==  null  &&  isDigits(numeric.substring(2))  ||  isDigits(numeric.charAt(0)))  {  String  dec  =  str.substring(0,  str.length()  -  1);  return  createLong  [BUGGY]        }  return  createBigInteger(numeric);  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  	projects/Lang7/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	511	513	1	replace	if(dec  ==  null  &&  exp  ==  null  &&  isDigits(numeric.substring(2))  ||  isDigits(numeric.charAt(0)))  {  String  dec  =  str.substring(0,  str.length()  -  1);  return  createLong	  if(dec    ==    null    &&    exp    ==    null    &&    isDigits(numeric.substring(1))    ||    isDigits(numeric.charAt(0)))    {    String    dec    =    str.substring(0,    str.length()    -    1);    return    createLong(dec);    }    	non-compiled	[CE]  ';'  expected	11	None	replace
71	[BUG]  [BUGGY]  if(dec  ==  null  &&  exp  ==  null  &&  isDigits(numeric.substring(2))  ||  isDigits(numeric.charAt(0)))  {  return  createBigInteger(numeric);  }  [CE]  ';'  expected  [FE]                AssertionError      [CONTEXT]      if  (dec  ==  null  &&  exp  ==  null  &&  (numeric.charAt(0)  ==  '-'  &&  isDigits(numeric.substring(1))  ||  isDigits(numeric)))  {  try  {  return  createLong(numeric);      [BUGGY]  if(dec  ==  null  &&  exp  ==  null  &&  isDigits(numeric.substring(2))  ||  isDigits(numeric.charAt(0)))  {  return  createBigInteger(numeric);  }  [BUGGY]        }  return  createBigInteger(numeric);  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  	projects/Lang7/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	511	513	1	replace	if(dec  ==  null  &&  exp  ==  null  &&  isDigits(numeric.substring(2))  ||  isDigits(numeric.charAt(0)))  {  return  createBigInteger(numeric);  }	  if(dec    ==    null    &&    exp    ==    null    &&    isDigits(numeric.substring(1))    ||    isDigits(numeric.charAt(0)))    {    return    createBigInteger(numeric);    }    	non-compiled	[CE]  ';'  expected	27	None	replace
72	[BUG]  [BUGGY]  if(dec  ==  null  &&  exp  ==  null  &&  isDigits(numeric.charAt(0))||  isDigits(numeric.charAt(0)))  {  return  createBigInteger(numeric);  }  [CE]  ';'  expected  [FE]                  AssertionError      [CONTEXT]      if  (dec  ==  null  &&  exp  ==  null  &&  (numeric.charAt(0)  ==  '-'  &&  isDigits(numeric.substring(1))  ||  isDigits(numeric)))  {  try  {  return  createLong(numeric);      [BUGGY]  if(dec  ==  null  &&  exp  ==  null  &&  isDigits(numeric.charAt(0))||  isDigits(numeric.charAt(0)))  {  return  createBigInteger(numeric);  }  [BUGGY]        }  return  createBigInteger(numeric);  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  	projects/Lang7/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	511	513	1	replace	if(dec  ==  null  &&  exp  ==  null  &&  isDigits(numeric.charAt(0))||  isDigits(numeric.charAt(0)))  {  return  createBigInteger(numeric);  }	  if(dec    ==    null    &&    exp    ==    null    &&    isDigits(numeric.substring(1))    ||    isDigits(numeric.charAt(0)))    {    return    createBigInteger(numeric);    }    	non-compiled	[CE]  ';'  expected	27	None	replace
73	[BUG]  [BUGGY]  Numeric  str  =  str.substring(0,  str.length());  [CE]  ';'  expected  [FE]            AssertionError      [CONTEXT]      if  (dec  ==  null  &&  exp  ==  null  &&  (numeric.charAt(0)  ==  '-'  &&  isDigits(numeric.substring(1))  ||  isDigits(numeric)))  {  try  {  return  createLong(numeric);      [BUGGY]  Numeric  str  =  str.substring(0,  str.length());  [BUGGY]      }  catch  (NumberFormatException  nfe)  {  //  NOPMD        //  Too  big  for  a  long            }  }  return  createBigInteger(numeric);  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  	projects/Lang7/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	511	513	1	replace	Numeric  str  =  str.substring(0,  str.length());	  numeric    =    str.substring(0,    str.length()    -    1);    	non-compiled	[CE]  ';'  expected	33	None	replace
74	[BUG]  [BUGGY]  if(numeric!=  null)  {  if(dec  ==  null  &&  exp  ==  null  &&  isDigits(numeric.substring(1)))  {  return  createLong(numeric);  }  [CE]  ';'  expected  [FE]                AssertionError      [CONTEXT]      if  (dec  ==  null  &&  exp  ==  null  &&  (numeric.charAt(0)  ==  '-'  &&  isDigits(numeric.substring(1))  ||  isDigits(numeric)))  {  try  {  return  createLong(numeric);      [BUGGY]  if(numeric!=  null)  {  if(dec  ==  null  &&  exp  ==  null  &&  isDigits(numeric.substring(1)))  {  return  createLong(numeric);  }  [BUGGY]      }  catch  (NumberFormatException  nfe)  {  //  NOPMD        //  Too  big  for  a  long            }  }  return  createBigInteger(numeric);  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  	projects/Lang7/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	511	513	1	replace	if(numeric!=  null)  {  if(dec  ==  null  &&  exp  ==  null  &&  isDigits(numeric.substring(1)))  {  return  createLong(numeric);  }	  if(dec    ==    null    &&    exp    ==    null    &&    (numeric.charAt(0)    ==    '-'    ||    isDigits(numeric.substring(1)))    {    return    createLong(numeric);    }    	non-compiled	[CE]  ';'  expected	24	None	replace
75	[BUG]  [BUGGY]  if(dec  ==  null  &&  exp  ==  null  &&  isDigits(numeric.substring(1))  ||  isDigits(numeric.substring(2)))  {  return  createBigDecimal(numeric);  }  [CE]  ';'  expected  [FE]              AssertionError      [CONTEXT]      if  (dec  ==  null  &&  exp  ==  null  &&  (numeric.charAt(0)  ==  '-'  &&  isDigits(numeric.substring(1))  ||  isDigits(numeric)))  {  try  {  return  createLong(numeric);      [BUGGY]  if(dec  ==  null  &&  exp  ==  null  &&  isDigits(numeric.substring(1))  ||  isDigits(numeric.substring(2)))  {  return  createBigDecimal(numeric);  }  [BUGGY]      }  catch  (NumberFormatException  nfe)  {  //  NOPMD        //  Too  big  for  a  long            }  }  return  createBigInteger(numeric);  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  	projects/Lang7/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	511	513	1	replace	if(dec  ==  null  &&  exp  ==  null  &&  isDigits(numeric.substring(1))  ||  isDigits(numeric.substring(2)))  {  return  createBigDecimal(numeric);  }	  if(dec    ==    null    &&    exp    ==    null    &&    isDigits(numeric.substring(1))    ||    isDigits(numeric.substring(2)))    {    return    createInteger(numeric);    }    	non-compiled	[CE]  ';'  expected	15	None	replace
76	[BUG]  [BUGGY]  if(dec  ==  null  &&  exp  ==  null  &&  isDigits(numeric.charAt(0)))  {  return  createBigInteger(numeric);  }  [CE]  ';'  expected  [FE]            AssertionError      [CONTEXT]      if  (dec  ==  null  &&  exp  ==  null  &&  (numeric.charAt(0)  ==  '-'  &&  isDigits(numeric.substring(1))  ||  isDigits(numeric)))  {  try  {  return  createLong(numeric);      [BUGGY]  if(dec  ==  null  &&  exp  ==  null  &&  isDigits(numeric.charAt(0)))  {  return  createBigInteger(numeric);  }  [BUGGY]      }  catch  (NumberFormatException  nfe)  {  //  NOPMD        //  Too  big  for  a  long            }  }  return  createBigInteger(numeric);  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  	projects/Lang7/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	511	513	1	replace	if(dec  ==  null  &&  exp  ==  null  &&  isDigits(numeric.charAt(0)))  {  return  createBigInteger(numeric);  }	  if(dec    ==    null    &&    exp    ==    null    &&    isDigits(numeric.substring(1)))    {    return    createBigInteger(numeric);    }    	non-compiled	[CE]  ';'  expected	46	None	replace
77	[BUG]  [BUGGY]  Dec  =  str.substring(0,  str.length())+  1;  [CE]  ';'  expected  [FE]                    AssertionError      [CONTEXT]      if  (dec  ==  null  &&  exp  ==  null  &&  (numeric.charAt(0)  ==  '-'  &&  isDigits(numeric.substring(1))  ||  isDigits(numeric)))  {  try  {  return  createLong(numeric);      [BUGGY]  Dec  =  str.substring(0,  str.length())+  1;  [BUGGY]      }  catch  (NumberFormatException  nfe)  {  //  NOPMD        //  Too  big  for  a  long            }  }  return  createBigInteger(numeric);  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  	projects/Lang7/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	511	513	1	replace	Dec  =  str.substring(0,  str.length())+  1;	  Dec    =    str.substring(0,    str.length()    -    1);    	non-compiled	[CE]  ';'  expected	32	None	replace
78	[BUG]  [BUGGY]  if(numeric!=  null)  {  if(dec  ==  null  &&  exp  ==  null  &&  isDigits(numeric.substring(1))  ||  isDigits(numeric.charAt(0)))  {  return  createLong  [CE]  ';'  expected  [FE]            AssertionError      [CONTEXT]      if  (dec  ==  null  &&  exp  ==  null  &&  (numeric.charAt(0)  ==  '-'  &&  isDigits(numeric.substring(1))  ||  isDigits(numeric)))  {  try  {  return  createLong(numeric);      [BUGGY]  if(numeric!=  null)  {  if(dec  ==  null  &&  exp  ==  null  &&  isDigits(numeric.substring(1))  ||  isDigits(numeric.charAt(0)))  {  return  createLong  [BUGGY]      }  catch  (NumberFormatException  nfe)  {  //  NOPMD        //  Too  big  for  a  long            }  }  return  createBigInteger(numeric);  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  	projects/Lang7/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	511	513	1	replace	if(numeric!=  null)  {  if(dec  ==  null  &&  exp  ==  null  &&  isDigits(numeric.substring(1))  ||  isDigits(numeric.charAt(0)))  {  return  createLong	  if(numeric.charAt(0)    ==    '-')    {    if(dec    ==    null    &&    exp    ==    null    &&    isDigits(numeric.substring(1))||    isDigits(numeric.charAt(0)))    {    return    createLong    	non-compiled	[CE]  ';'  expected	28	None	replace
79	[BUG]  [BUGGY]  if(numeric.longValue()  ==  0)  {  if(dec  ==  null  &&  exp  ==  null  &&  isDigits(numeric.substring(1))  ||  isDigits(numeric.charAt(0)))  {  return  createLong  [CE]  ';'  expected  [FE]              AssertionError      [CONTEXT]      if  (dec  ==  null  &&  exp  ==  null  &&  (numeric.charAt(0)  ==  '-'  &&  isDigits(numeric.substring(1))  ||  isDigits(numeric)))  {  try  {  return  createLong(numeric);      [BUGGY]  if(numeric.longValue()  ==  0)  {  if(dec  ==  null  &&  exp  ==  null  &&  isDigits(numeric.substring(1))  ||  isDigits(numeric.charAt(0)))  {  return  createLong  [BUGGY]      }  catch  (NumberFormatException  nfe)  {  //  NOPMD        //  Too  big  for  a  long            }  }  return  createBigInteger(numeric);  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  	projects/Lang7/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	511	513	1	replace	if(numeric.longValue()  ==  0)  {  if(dec  ==  null  &&  exp  ==  null  &&  isDigits(numeric.substring(1))  ||  isDigits(numeric.charAt(0)))  {  return  createLong	  if(numeric.charAt(0)    ==    '-')    {    if(dec    ==    null    &&    exp    ==    null    &&    isDigits(numeric.substring(1))||    isDigits(numeric.charAt(0)))    {    return    createLong    	non-compiled	[CE]  ';'  expected	28	None	replace
80	[BUG]  [BUGGY]  }  else  if(dec  ==  null  &&  exp  ==  null  &&  isDigits(numeric.substring(1))  ||  isDigits(numeric.substring(2)))  {  return  createInteger(numeric);  }  [CE]  ';'  expected  [FE]            AssertionError      [CONTEXT]      if  (dec  ==  null  &&  exp  ==  null  &&  (numeric.charAt(0)  ==  '-'  &&  isDigits(numeric.substring(1))  ||  isDigits(numeric)))  {  try  {  return  createLong(numeric);      [BUGGY]  }  else  if(dec  ==  null  &&  exp  ==  null  &&  isDigits(numeric.substring(1))  ||  isDigits(numeric.substring(2)))  {  return  createInteger(numeric);  }  [BUGGY]        }  return  createBigInteger(numeric);  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  	projects/Lang7/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	511	513	1	replace	}  else  if(dec  ==  null  &&  exp  ==  null  &&  isDigits(numeric.substring(1))  ||  isDigits(numeric.substring(2)))  {  return  createInteger(numeric);  }	  }    else    if(dec    ==    null    &&    exp    ==    null    &&    isDigits(numeric.substring(1))    ||    isDigits(numeric.substring(2)))    {    return    createLong(numeric);    }    	non-compiled	[CE]  ';'  expected	40	None	replace
81	[BUG]  [BUGGY]  if(dec  ==  null  &&  exp  ==  null  &&  isDigits(numeric.substring(2))  ||  isDigits(numeric.substring(1)))  {  return  createBigInteger(numeric);  }  [CE]  ';'  expected  [FE]                AssertionError      [CONTEXT]      if  (dec  ==  null  &&  exp  ==  null  &&  (numeric.charAt(0)  ==  '-'  &&  isDigits(numeric.substring(1))  ||  isDigits(numeric)))  {  try  {  return  createLong(numeric);      [BUGGY]  if(dec  ==  null  &&  exp  ==  null  &&  isDigits(numeric.substring(2))  ||  isDigits(numeric.substring(1)))  {  return  createBigInteger(numeric);  }  [BUGGY]      }  catch  (NumberFormatException  nfe)  {  //  NOPMD        //  Too  big  for  a  long            }  }  return  createBigInteger(numeric);  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  	projects/Lang7/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	511	513	1	replace	if(dec  ==  null  &&  exp  ==  null  &&  isDigits(numeric.substring(2))  ||  isDigits(numeric.substring(1)))  {  return  createBigInteger(numeric);  }	  if(dec    ==    null    &&    exp    ==    null    &&    isDigits(numeric.substring(2))    ||    isDigits(numeric.substring(1)))    {    return    createInteger(numeric);    }    	non-compiled	[CE]  ';'  expected	30	None	replace
82	[BUG]  [BUGGY]  if(numeric.charAt(0)  ==  '-')  {  if(dec  ==  null  &&  exp  ==  null  &&  isDigits(numeric.substring(2))||  isDigits(numeric.charAt(1)))  {  return  createLong  [CE]  ';'  expected  [FE]              AssertionError      [CONTEXT]      if  (dec  ==  null  &&  exp  ==  null  &&  (numeric.charAt(0)  ==  '-'  &&  isDigits(numeric.substring(1))  ||  isDigits(numeric)))  {  try  {  return  createLong(numeric);      [BUGGY]  if(numeric.charAt(0)  ==  '-')  {  if(dec  ==  null  &&  exp  ==  null  &&  isDigits(numeric.substring(2))||  isDigits(numeric.charAt(1)))  {  return  createLong  [BUGGY]      }  catch  (NumberFormatException  nfe)  {  //  NOPMD        //  Too  big  for  a  long            }  }  return  createBigInteger(numeric);  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  	projects/Lang7/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	511	513	1	replace	if(numeric.charAt(0)  ==  '-')  {  if(dec  ==  null  &&  exp  ==  null  &&  isDigits(numeric.substring(2))||  isDigits(numeric.charAt(1)))  {  return  createLong	  if(dec    ==    null    &&    exp    ==    null    &&    isDigits(numeric.substring(2))    ||    isDigits(numeric.charAt(1)))    {    return    createLong(numeric);    }    	non-compiled	[CE]  ';'  expected	45	None	replace
83	[BUG]  [BUGGY]  if(numeric.charAt(0)  ==  '-')  {  if(dec  ==  null  &&  exp  ==  null  &&  isDigits(numeric.substring(2)))  {  return  createInteger(numeric);  }  [CE]  ';'  expected  [FE]                AssertionError      [CONTEXT]      if  (dec  ==  null  &&  exp  ==  null  &&  (numeric.charAt(0)  ==  '-'  &&  isDigits(numeric.substring(1))  ||  isDigits(numeric)))  {  try  {  return  createLong(numeric);      [BUGGY]  if(numeric.charAt(0)  ==  '-')  {  if(dec  ==  null  &&  exp  ==  null  &&  isDigits(numeric.substring(2)))  {  return  createInteger(numeric);  }  [BUGGY]      }  catch  (NumberFormatException  nfe)  {  //  NOPMD        //  Too  big  for  a  long            }  }  return  createBigInteger(numeric);  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  	projects/Lang7/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	511	513	1	replace	if(numeric.charAt(0)  ==  '-')  {  if(dec  ==  null  &&  exp  ==  null  &&  isDigits(numeric.substring(2)))  {  return  createInteger(numeric);  }	  if(dec    ==    null    &&    exp    ==    null    &&    isDigits(numeric.substring(0,    2)))    {    return    createLong(numeric);    }    	non-compiled	[CE]  ';'  expected	4	None	replace
84	[BUG]  [BUGGY]  }  catch(Throwable  nfe)  {  return  createBigInteger(numeric);  [CE]  ';'  expected  [FE]              AssertionError      [CONTEXT]      if  (dec  ==  null  &&  exp  ==  null  &&  (numeric.charAt(0)  ==  '-'  &&  isDigits(numeric.substring(1))  ||  isDigits(numeric)))  {  try  {  return  createLong(numeric);      [BUGGY]  }  catch(Throwable  nfe)  {  return  createBigInteger(numeric);  [BUGGY]        }  return  createBigInteger(numeric);  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  	projects/Lang7/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	511	513	1	replace	}  catch(Throwable  nfe)  {  return  createBigInteger(numeric);	  }    catch(Throwable    nfe)    {    //    NOPMD    //    Too    big    for    a    long    }    	non-compiled	[CE]  ';'  expected	23	None	replace
85	[BUG]  [BUGGY]  if(numeric.charAt(0)  ==  '-')  {  if(dec  ==  null  &&  exp  ==  null  &&  isDigits(numeric.substring(1))&&  isDigits(numeric.substring(2)))  {  return  createLong  [CE]  ';'  expected  [FE]              AssertionError      [CONTEXT]      if  (dec  ==  null  &&  exp  ==  null  &&  (numeric.charAt(0)  ==  '-'  &&  isDigits(numeric.substring(1))  ||  isDigits(numeric)))  {  try  {  return  createLong(numeric);      [BUGGY]  if(numeric.charAt(0)  ==  '-')  {  if(dec  ==  null  &&  exp  ==  null  &&  isDigits(numeric.substring(1))&&  isDigits(numeric.substring(2)))  {  return  createLong  [BUGGY]      }  catch  (NumberFormatException  nfe)  {  //  NOPMD        //  Too  big  for  a  long            }  }  return  createBigInteger(numeric);  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  	projects/Lang7/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	511	513	1	replace	if(numeric.charAt(0)  ==  '-')  {  if(dec  ==  null  &&  exp  ==  null  &&  isDigits(numeric.substring(1))&&  isDigits(numeric.substring(2)))  {  return  createLong	  if(dec    ==    null    &&    exp    ==    null    &&    isDigits(numeric.substring(1))    &&    isDigits(numeric.substring(2)))    {    return    createLong(numeric);    }    	non-compiled	[CE]  ';'  expected	39	None	replace
86	[BUG]  [BUGGY]  NeighborDecimal  dec  =  getDecimalDecimal(numeric);  [CE]  ';'  expected  [FE]                AssertionError      [CONTEXT]      if  (dec  ==  null  &&  exp  ==  null  &&  (numeric.charAt(0)  ==  '-'  &&  isDigits(numeric.substring(1))  ||  isDigits(numeric)))  {  try  {  return  createLong(numeric);      [BUGGY]  NeighborDecimal  dec  =  getDecimalDecimal(numeric);  [BUGGY]      }  catch  (NumberFormatException  nfe)  {  //  NOPMD        //  Too  big  for  a  long            }  }  return  createBigInteger(numeric);  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  	projects/Lang7/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	511	513	1	replace	NeighborDecimal  dec  =  getDecimalDecimal(numeric);	  if(numeric!=    null)    {    if(dec    ==    null    &&    exp    ==    null    &&    isDigits(numeric.substring(2)))    {    return    createLong(numeric);    }    	non-compiled	[CE]  ';'  expected	42	None	replace
87	[BUG]  [BUGGY]  nisip  =  str.charAt(0);  [CE]  ';'  expected  [FE]                  AssertionError      [CONTEXT]      if  (dec  ==  null  &&  exp  ==  null  &&  (numeric.charAt(0)  ==  '-'  &&  isDigits(numeric.substring(1))  ||  isDigits(numeric)))  {  try  {  return  createLong(numeric);      [BUGGY]  nisip  =  str.charAt(0);  [BUGGY]      }  catch  (NumberFormatException  nfe)  {  //  NOPMD        //  Too  big  for  a  long            }  }  return  createBigInteger(numeric);  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  	projects/Lang7/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	511	513	1	replace	nisip  =  str.charAt(0);	  if(numeric!=    null)    {    if(dec    ==    null    &&    exp    ==    null    &&    isDigits(numeric.substring(2)))    {    return    createLong(numeric);    }    	non-compiled	[CE]  ';'  expected	42	None	replace
88	[BUG]  [BUGGY]  NullableValue  <  String>  dec  =  nullableValue().trim();  [CE]  ';'  expected  [FE]                AssertionError      [CONTEXT]      if  (dec  ==  null  &&  exp  ==  null  &&  (numeric.charAt(0)  ==  '-'  &&  isDigits(numeric.substring(1))  ||  isDigits(numeric)))  {  try  {  return  createLong(numeric);      [BUGGY]  NullableValue  <  String>  dec  =  nullableValue().trim();  [BUGGY]      }  catch  (NumberFormatException  nfe)  {  //  NOPMD        //  Too  big  for  a  long            }  }  return  createBigInteger(numeric);  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  	projects/Lang7/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	511	513	1	replace	NullableValue  <  String>  dec  =  nullableValue().trim();	  NullableValue    <    String>    dec    =    nullableValue();    	non-compiled	[CE]  ';'  expected	35	None	replace
89	[BUG]  [BUGGY]  if(numeric.longValue()  ==  0)  {  if(dec  ==  null  &&  exp  ==  null  &&  isDigits(numeric.substring(2))  ||  isDigits(numeric.substring(1)))  {  return  createLong  [CE]  ';'  expected  [FE]              AssertionError      [CONTEXT]      if  (dec  ==  null  &&  exp  ==  null  &&  (numeric.charAt(0)  ==  '-'  &&  isDigits(numeric.substring(1))  ||  isDigits(numeric)))  {  try  {  return  createLong(numeric);      [BUGGY]  if(numeric.longValue()  ==  0)  {  if(dec  ==  null  &&  exp  ==  null  &&  isDigits(numeric.substring(2))  ||  isDigits(numeric.substring(1)))  {  return  createLong  [BUGGY]      }  catch  (NumberFormatException  nfe)  {  //  NOPMD        //  Too  big  for  a  long            }  }  return  createBigInteger(numeric);  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  	projects/Lang7/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	511	513	1	replace	if(numeric.longValue()  ==  0)  {  if(dec  ==  null  &&  exp  ==  null  &&  isDigits(numeric.substring(2))  ||  isDigits(numeric.substring(1)))  {  return  createLong	  if(numeric.charAt(0)    ==    '-')    {    if(dec    ==    null    &&    exp    ==    null    &&    isDigits(numeric.substring(2))||    isDigits(numeric.substring(1)))    {    return    createLong    	non-compiled	[CE]  ';'  expected	29	None	replace
90	[BUG]  [BUGGY]  if(numeric!=  null)  {  if(dec  ==  null  &&  exp  ==  null  &&  isDigits(numeric.substring(2))  ||  isDigits(numeric.substring(1)))  {  return  createLong  [CE]  ';'  expected  [FE]                AssertionError      [CONTEXT]      if  (dec  ==  null  &&  exp  ==  null  &&  (numeric.charAt(0)  ==  '-'  &&  isDigits(numeric.substring(1))  ||  isDigits(numeric)))  {  try  {  return  createLong(numeric);      [BUGGY]  if(numeric!=  null)  {  if(dec  ==  null  &&  exp  ==  null  &&  isDigits(numeric.substring(2))  ||  isDigits(numeric.substring(1)))  {  return  createLong  [BUGGY]      }  catch  (NumberFormatException  nfe)  {  //  NOPMD        //  Too  big  for  a  long            }  }  return  createBigInteger(numeric);  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  	projects/Lang7/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	511	513	1	replace	if(numeric!=  null)  {  if(dec  ==  null  &&  exp  ==  null  &&  isDigits(numeric.substring(2))  ||  isDigits(numeric.substring(1)))  {  return  createLong	  if(numeric.charAt(0)    ==    '-')    {    if(dec    ==    null    &&    exp    ==    null    &&    isDigits(numeric.substring(2))||    isDigits(numeric.substring(1)))    {    return    createLong    	non-compiled	[CE]  ';'  expected	29	None	replace
91	[BUG]  [BUGGY]  }  else  if(dec  ==  null  &&  exp  ==  null  &&  isDigits(numeric.substring(1))  ||  isDigits(numeric.charAt(0)))  {  return  createInteger(numeric);  }  [CE]  ';'  expected  [FE]                AssertionError      [CONTEXT]      if  (dec  ==  null  &&  exp  ==  null  &&  (numeric.charAt(0)  ==  '-'  &&  isDigits(numeric.substring(1))  ||  isDigits(numeric)))  {  try  {  return  createLong(numeric);      [BUGGY]  }  else  if(dec  ==  null  &&  exp  ==  null  &&  isDigits(numeric.substring(1))  ||  isDigits(numeric.charAt(0)))  {  return  createInteger(numeric);  }  [BUGGY]        }  return  createBigInteger(numeric);  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  	projects/Lang7/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	511	513	1	replace	}  else  if(dec  ==  null  &&  exp  ==  null  &&  isDigits(numeric.substring(1))  ||  isDigits(numeric.charAt(0)))  {  return  createInteger(numeric);  }	  }    else    if(dec    ==    null    &&    exp    ==    null    &&    isDigits(numeric.substring(1))    ||    isDigits(numeric.charAt(0)))    {    return    createLong(numeric);    }    	non-compiled	[CE]  ';'  expected	9	None	replace
92	[BUG]  [BUGGY]  }  else  if(dec  ==  null  &&  exp  ==  null  &&  isDigits(numeric.substring(2))  ||  isDigits(numeric.charAt(0)))  {  return  createLong(numeric);  }  [CE]  ';'  expected  [FE]                  AssertionError      [CONTEXT]      if  (dec  ==  null  &&  exp  ==  null  &&  (numeric.charAt(0)  ==  '-'  &&  isDigits(numeric.substring(1))  ||  isDigits(numeric)))  {  try  {  return  createLong(numeric);      [BUGGY]  }  else  if(dec  ==  null  &&  exp  ==  null  &&  isDigits(numeric.substring(2))  ||  isDigits(numeric.charAt(0)))  {  return  createLong(numeric);  }  [BUGGY]        }  return  createBigInteger(numeric);  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  	projects/Lang7/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	511	513	1	replace	}  else  if(dec  ==  null  &&  exp  ==  null  &&  isDigits(numeric.substring(2))  ||  isDigits(numeric.charAt(0)))  {  return  createLong(numeric);  }	  }    else    if(dec    ==    null    &&    exp    ==    null    &&    isDigits(numeric.substring(1))    ||    isDigits(numeric.charAt(0)))    {    return    createLong(numeric);    }    	non-compiled	[CE]  ';'  expected	9	None	replace
93	[BUG]  [BUGGY]  Integer  decPos  =  numeric.intValue();  [CE]  ';'  expected  [FE]            AssertionError      [CONTEXT]      if  (dec  ==  null  &&  exp  ==  null  &&  (numeric.charAt(0)  ==  '-'  &&  isDigits(numeric.substring(1))  ||  isDigits(numeric)))  {  try  {  return  createLong(numeric);      [BUGGY]  Integer  decPos  =  numeric.intValue();  [BUGGY]      }  catch  (NumberFormatException  nfe)  {  //  NOPMD        //  Too  big  for  a  long            }  }  return  createBigInteger(numeric);  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  	projects/Lang7/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	511	513	1	replace	Integer  decPos  =  numeric.intValue();	  if(dec    ==    null    &&    exp    ==    null    &&    isDigits(numeric.charAt(0)))    {    return    createLong(numeric);    }    	non-compiled	[CE]  ';'  expected	21	None	replace
94	[BUG]  [BUGGY]  Integer  dec  =  getDecimalInteger(numeric);  [CE]  ';'  expected  [FE]              AssertionError      [CONTEXT]      if  (dec  ==  null  &&  exp  ==  null  &&  (numeric.charAt(0)  ==  '-'  &&  isDigits(numeric.substring(1))  ||  isDigits(numeric)))  {  try  {  return  createLong(numeric);      [BUGGY]  Integer  dec  =  getDecimalInteger(numeric);  [BUGGY]      }  catch  (NumberFormatException  nfe)  {  //  NOPMD        //  Too  big  for  a  long            }  }  return  createBigInteger(numeric);  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  	projects/Lang7/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	511	513	1	replace	Integer  dec  =  getDecimalInteger(numeric);	  if(dec    ==    null    &&    exp    ==    null    &&    isDigits(numeric.charAt(0)))    {    return    createLong(numeric);    }    	non-compiled	[CE]  ';'  expected	21	None	replace
95	[BUG]  [BUGGY]  Integer  dec  =  createInteger(numeric);  [CE]  ';'  expected  [FE]                AssertionError      [CONTEXT]      if  (dec  ==  null  &&  exp  ==  null  &&  (numeric.charAt(0)  ==  '-'  &&  isDigits(numeric.substring(1))  ||  isDigits(numeric)))  {  try  {  return  createLong(numeric);      [BUGGY]  Integer  dec  =  createInteger(numeric);  [BUGGY]      }  catch  (NumberFormatException  nfe)  {  //  NOPMD        //  Too  big  for  a  long            }  }  return  createBigInteger(numeric);  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  	projects/Lang7/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	511	513	1	replace	Integer  dec  =  createInteger(numeric);	  if(dec    ==    null    &&    exp    ==    null    &&    isDigits(numeric.charAt(0)))    {    return    createLong(numeric);    }    	non-compiled	[CE]  ';'  expected	21	None	replace
96	[BUG]  [BUGGY]  NullableValue  <  String>  dec  =  nullableValues(1);  [CE]  ';'  expected  [FE]                  AssertionError      [CONTEXT]      if  (dec  ==  null  &&  exp  ==  null  &&  (numeric.charAt(0)  ==  '-'  &&  isDigits(numeric.substring(1))  ||  isDigits(numeric)))  {  try  {  return  createLong(numeric);      [BUGGY]  NullableValue  <  String>  dec  =  nullableValues(1);  [BUGGY]      }  catch  (NumberFormatException  nfe)  {  //  NOPMD        //  Too  big  for  a  long            }  }  return  createBigInteger(numeric);  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  	projects/Lang7/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	511	513	1	replace	NullableValue  <  String>  dec  =  nullableValues(1);	  NullableValue    <    String>    dec    =    nullableValues();    	non-compiled	[CE]  ';'  expected	36	None	replace
97	[BUG]  [BUGGY]  }  catch(NumberFormatException  e)  {  return  createBigDecimal(numeric.substring(1));  [CE]  ';'  expected  [FE]            AssertionError      [CONTEXT]      if  (dec  ==  null  &&  exp  ==  null  &&  (numeric.charAt(0)  ==  '-'  &&  isDigits(numeric.substring(1))  ||  isDigits(numeric)))  {  try  {  return  createLong(numeric);      [BUGGY]  }  catch(NumberFormatException  e)  {  return  createBigDecimal(numeric.substring(1));  [BUGGY]        }  return  createBigInteger(numeric);  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  	projects/Lang7/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	511	513	1	replace	}  catch(NumberFormatException  e)  {  return  createBigDecimal(numeric.substring(1));	  }    catch(NumberFormatException    e)    {    return    createBigDecimal(numeric);    	non-compiled	[CE]  ';'  expected	25	None	replace
98	[BUG]  [BUGGY]  if(numeric!=  null)  {  if(dec  ==  null  &&  exp  ==  null  &&  isDigits(numeric.substring(1))  ||  isDigits(numeric.substring(2)))  {  return  createLong  [CE]  ';'  expected  [FE]            AssertionError      [CONTEXT]      if  (dec  ==  null  &&  exp  ==  null  &&  (numeric.charAt(0)  ==  '-'  &&  isDigits(numeric.substring(1))  ||  isDigits(numeric)))  {  try  {  return  createLong(numeric);      [BUGGY]  if(numeric!=  null)  {  if(dec  ==  null  &&  exp  ==  null  &&  isDigits(numeric.substring(1))  ||  isDigits(numeric.substring(2)))  {  return  createLong  [BUGGY]      }  catch  (NumberFormatException  nfe)  {  //  NOPMD        //  Too  big  for  a  long            }  }  return  createBigInteger(numeric);  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  	projects/Lang7/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	511	513	1	replace	if(numeric!=  null)  {  if(dec  ==  null  &&  exp  ==  null  &&  isDigits(numeric.substring(1))  ||  isDigits(numeric.substring(2)))  {  return  createLong	  if(numeric.charAt(0)    ==    '-')    {    if(dec    ==    null    &&    exp    ==    null    &&    isDigits(numeric.substring(1))||    isDigits(numeric.substring(2)))    {    return    createLong    	non-compiled	[CE]  ';'  expected	14	None	replace
99	[BUG]  [BUGGY]  if(numeric.longValue()  ==  0)  {  if(dec  ==  null  &&  exp  ==  null  &&  isDigits(numeric.substring(1))  ||  isDigits(numeric.substring(2)))  {  return  createLong  [CE]  ';'  expected  [FE]              AssertionError      [CONTEXT]      if  (dec  ==  null  &&  exp  ==  null  &&  (numeric.charAt(0)  ==  '-'  &&  isDigits(numeric.substring(1))  ||  isDigits(numeric)))  {  try  {  return  createLong(numeric);      [BUGGY]  if(numeric.longValue()  ==  0)  {  if(dec  ==  null  &&  exp  ==  null  &&  isDigits(numeric.substring(1))  ||  isDigits(numeric.substring(2)))  {  return  createLong  [BUGGY]      }  catch  (NumberFormatException  nfe)  {  //  NOPMD        //  Too  big  for  a  long            }  }  return  createBigInteger(numeric);  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  	projects/Lang7/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	511	513	1	replace	if(numeric.longValue()  ==  0)  {  if(dec  ==  null  &&  exp  ==  null  &&  isDigits(numeric.substring(1))  ||  isDigits(numeric.substring(2)))  {  return  createLong	  if(numeric.charAt(0)    ==    '-')    {    if(dec    ==    null    &&    exp    ==    null    &&    isDigits(numeric.substring(1))||    isDigits(numeric.substring(2)))    {    return    createLong    	non-compiled	[CE]  ';'  expected	14	None	replace
100	[BUG]  [BUGGY]  }  catch(NumberFormatException  nfe)  {  return  null;  [CE]  ';'  expected  [FE]              AssertionError      [CONTEXT]      if  (dec  ==  null  &&  exp  ==  null  &&  (numeric.charAt(0)  ==  '-'  &&  isDigits(numeric.substring(1))  ||  isDigits(numeric)))  {  try  {  return  createLong(numeric);      [BUGGY]  }  catch(NumberFormatException  nfe)  {  return  null;  [BUGGY]        }  return  createBigInteger(numeric);  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  	projects/Lang7/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	511	513	1	replace	}  catch(NumberFormatException  nfe)  {  return  null;	  }    catch(Throwable    nfe)    {    //    NOPMD    //    Too    big    for    a    long    }    	non-compiled	[CE]  ';'  expected	23	None	replace
101	[BUG]  [BUGGY]  }  catch(NumberFormatException  e)  {  return  createEmpty(numeric);  [CE]  ';'  expected  [FE]                  AssertionError      [CONTEXT]      if  (dec  ==  null  &&  exp  ==  null  &&  (numeric.charAt(0)  ==  '-'  &&  isDigits(numeric.substring(1))  ||  isDigits(numeric)))  {  try  {  return  createLong(numeric);      [BUGGY]  }  catch(NumberFormatException  e)  {  return  createEmpty(numeric);  [BUGGY]        }  return  createBigInteger(numeric);  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  	projects/Lang7/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	511	513	1	replace	}  catch(NumberFormatException  e)  {  return  createEmpty(numeric);	  }    catch(NumberFormatException    nfe)    {    return    createNull(numeric);    	non-compiled	[CE]  ';'  expected	10	None	replace
102	[BUG]  [BUGGY]  if(dec  ==  null  &&  exp  ==  null  &&  isDigits(numeric.substring(2))  ||  isDigits(numeric.charAt(0)))  {  return  createLong  [CE]  ';'  expected  [FE]            AssertionError      [CONTEXT]      if  (dec  ==  null  &&  exp  ==  null  &&  (numeric.charAt(0)  ==  '-'  &&  isDigits(numeric.substring(1))  ||  isDigits(numeric)))  {  try  {  return  createLong(numeric);      [BUGGY]  if(dec  ==  null  &&  exp  ==  null  &&  isDigits(numeric.substring(2))  ||  isDigits(numeric.charAt(0)))  {  return  createLong  [BUGGY]      }  catch  (NumberFormatException  nfe)  {  //  NOPMD        //  Too  big  for  a  long            }  }  return  createBigInteger(numeric);  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  	projects/Lang7/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	511	513	1	replace	if(dec  ==  null  &&  exp  ==  null  &&  isDigits(numeric.substring(2))  ||  isDigits(numeric.charAt(0)))  {  return  createLong	  if(numeric.charAt(0)    ==    '-')    {    if(dec    ==    null    &&    exp    ==    null    &&    isDigits(numeric.substring(1))||    isDigits(numeric.charAt(0)))    {    return    createLong    	non-compiled	[CE]  ';'  expected	28	None	replace
103	[BUG]  [BUGGY]  if(dec  ==  null  &&  exp  ==  null  ||  isDigits(numeric.substring(1))  ||  isDigits(numeric.charAt(0)))  {  return  createLong  [CE]  ';'  expected  [FE]              AssertionError      [CONTEXT]      if  (dec  ==  null  &&  exp  ==  null  &&  (numeric.charAt(0)  ==  '-'  &&  isDigits(numeric.substring(1))  ||  isDigits(numeric)))  {  try  {  return  createLong(numeric);      [BUGGY]  if(dec  ==  null  &&  exp  ==  null  ||  isDigits(numeric.substring(1))  ||  isDigits(numeric.charAt(0)))  {  return  createLong  [BUGGY]      }  catch  (NumberFormatException  nfe)  {  //  NOPMD        //  Too  big  for  a  long            }  }  return  createBigInteger(numeric);  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  	projects/Lang7/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	511	513	1	replace	if(dec  ==  null  &&  exp  ==  null  ||  isDigits(numeric.substring(1))  ||  isDigits(numeric.charAt(0)))  {  return  createLong	  if(numeric.charAt(0)    ==    '-')    {    if(dec    ==    null    &&    exp    ==    null    &&    isDigits(numeric.substring(1))||    isDigits(numeric.charAt(0)))    {    return    createLong    	non-compiled	[CE]  ';'  expected	28	None	replace
104	[BUG]  [BUGGY]  numeric  =  str.substring(0,  str.length()  1);  [CE]  ';'  expected  [FE]            AssertionError      [CONTEXT]      if  (dec  ==  null  &&  exp  ==  null  &&  (numeric.charAt(0)  ==  '-'  &&  isDigits(numeric.substring(1))  ||  isDigits(numeric)))  {  try  {  return  createLong(numeric);      [BUGGY]  numeric  =  str.substring(0,  str.length()  1);  [BUGGY]      }  catch  (NumberFormatException  nfe)  {  //  NOPMD        //  Too  big  for  a  long            }  }  return  createBigInteger(numeric);  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  	projects/Lang7/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	511	513	1	replace	numeric  =  str.substring(0,  str.length()  1);	  numeric    =    str.substring(0,    str.length()    -    1);    	non-compiled	[CE]  ';'  expected	33	None	replace
105	[BUG]  [BUGGY]  if(dec  ==  null  &&  exp  ==  null  ||  isDigits(numeric.substring(2)))  {  return  createLong(numeric);  }  [CE]  ';'  expected  [FE]                AssertionError      [CONTEXT]      if  (dec  ==  null  &&  exp  ==  null  &&  (numeric.charAt(0)  ==  '-'  &&  isDigits(numeric.substring(1))  ||  isDigits(numeric)))  {  try  {  return  createLong(numeric);      [BUGGY]  if(dec  ==  null  &&  exp  ==  null  ||  isDigits(numeric.substring(2)))  {  return  createLong(numeric);  }  [BUGGY]      }  catch  (NumberFormatException  nfe)  {  //  NOPMD        //  Too  big  for  a  long            }  }  return  createBigInteger(numeric);  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  	projects/Lang7/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	511	513	1	replace	if(dec  ==  null  &&  exp  ==  null  ||  isDigits(numeric.substring(2)))  {  return  createLong(numeric);  }	  if(numeric!=    null)    {    if(dec    ==    null    &&    exp    ==    null    &&    isDigits(numeric.substring(2)))    {    return    createLong(numeric);    }    	non-compiled	[CE]  ';'  expected	42	None	replace
106	[BUG]  [BUGGY]  if(numeric.length()  ==  0)  {  if(dec  ==  null  &&  exp  ==  null  &&  isDigits(numeric.substring(1))  ||  isDigits(numeric.substring(2)))  {  return  createLong  [CE]  ';'  expected  [FE]            AssertionError      [CONTEXT]      if  (dec  ==  null  &&  exp  ==  null  &&  (numeric.charAt(0)  ==  '-'  &&  isDigits(numeric.substring(1))  ||  isDigits(numeric)))  {  try  {  return  createLong(numeric);      [BUGGY]  if(numeric.length()  ==  0)  {  if(dec  ==  null  &&  exp  ==  null  &&  isDigits(numeric.substring(1))  ||  isDigits(numeric.substring(2)))  {  return  createLong  [BUGGY]      }  catch  (NumberFormatException  nfe)  {  //  NOPMD        //  Too  big  for  a  long            }  }  return  createBigInteger(numeric);  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  	projects/Lang7/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	511	513	1	replace	if(numeric.length()  ==  0)  {  if(dec  ==  null  &&  exp  ==  null  &&  isDigits(numeric.substring(1))  ||  isDigits(numeric.substring(2)))  {  return  createLong	  if(numeric.charAt(0)    ==    '-')    {    if(dec    ==    null    &&    exp    ==    null    &&    isDigits(numeric.substring(1))||    isDigits(numeric.substring(2)))    {    return    createLong    	non-compiled	[CE]  ';'  expected	14	None	replace
107	[BUG]  [BUGGY]  if(dec  ==  null  &&  exp  ==  null  ||  isDigits(numeric.substring(2))  ||  isDigits(numeric.substring(1)))  {  return  createLong  [CE]  ';'  expected  [FE]              AssertionError      [CONTEXT]      if  (dec  ==  null  &&  exp  ==  null  &&  (numeric.charAt(0)  ==  '-'  &&  isDigits(numeric.substring(1))  ||  isDigits(numeric)))  {  try  {  return  createLong(numeric);      [BUGGY]  if(dec  ==  null  &&  exp  ==  null  ||  isDigits(numeric.substring(2))  ||  isDigits(numeric.substring(1)))  {  return  createLong  [BUGGY]      }  catch  (NumberFormatException  nfe)  {  //  NOPMD        //  Too  big  for  a  long            }  }  return  createBigInteger(numeric);  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  	projects/Lang7/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	511	513	1	replace	if(dec  ==  null  &&  exp  ==  null  ||  isDigits(numeric.substring(2))  ||  isDigits(numeric.substring(1)))  {  return  createLong	  if(numeric.charAt(0)    ==    '-')    {    if(dec    ==    null    &&    exp    ==    null    &&    isDigits(numeric.substring(2))||    isDigits(numeric.substring(1)))    {    return    createLong    	non-compiled	[CE]  ';'  expected	29	None	replace
108	[BUG]  [BUGGY]  if(dec  ==  null  &&  exp  ==  null  &&  isDigits(numeric.substring(decPos  +  1)))  {  return  createLong(numeric);  }  [CE]  ';'  expected  [FE]            AssertionError      [CONTEXT]      if  (dec  ==  null  &&  exp  ==  null  &&  (numeric.charAt(0)  ==  '-'  &&  isDigits(numeric.substring(1))  ||  isDigits(numeric)))  {  try  {  return  createLong(numeric);      [BUGGY]  if(dec  ==  null  &&  exp  ==  null  &&  isDigits(numeric.substring(decPos  +  1)))  {  return  createLong(numeric);  }  [BUGGY]      }  catch  (NumberFormatException  nfe)  {  //  NOPMD        //  Too  big  for  a  long            }  }  return  createBigInteger(numeric);  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  	projects/Lang7/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	511	513	1	replace	if(dec  ==  null  &&  exp  ==  null  &&  isDigits(numeric.substring(decPos  +  1)))  {  return  createLong(numeric);  }	  if(dec    ==    null    &&    exp    ==    null    &&    isDigits(numeric.charAt(0)))    {    return    createLong(numeric);    }    	non-compiled	[CE]  ';'  expected	21	None	replace
109	[BUG]  [BUGGY]  if(dec  ==  null  &&  exp  ==  null  &&  isDigits(numeric.substring(1))  &&  isDigits(numeric.charAt(0)))  {  return  createBigInteger(numeric);  }  [CE]  ';'  expected  [FE]                AssertionError      [CONTEXT]      if  (dec  ==  null  &&  exp  ==  null  &&  (numeric.charAt(0)  ==  '-'  &&  isDigits(numeric.substring(1))  ||  isDigits(numeric)))  {  try  {  return  createLong(numeric);      [BUGGY]  if(dec  ==  null  &&  exp  ==  null  &&  isDigits(numeric.substring(1))  &&  isDigits(numeric.charAt(0)))  {  return  createBigInteger(numeric);  }  [BUGGY]        }  return  createBigInteger(numeric);  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  	projects/Lang7/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	511	513	1	replace	if(dec  ==  null  &&  exp  ==  null  &&  isDigits(numeric.substring(1))  &&  isDigits(numeric.charAt(0)))  {  return  createBigInteger(numeric);  }	  if(dec    ==    null    &&    exp    ==    null    &&    isDigits(numeric.substring(1))    ||    isDigits(numeric.charAt(0)))    {    return    createBigInteger(numeric);    }    	non-compiled	[CE]  ';'  expected	27	None	replace
110	[BUG]  [BUGGY]  }  catch(NoSuchElementException  nfe)  {  return  createInteger(numeric);  [CE]  ';'  expected  [FE]              AssertionError      [CONTEXT]      if  (dec  ==  null  &&  exp  ==  null  &&  (numeric.charAt(0)  ==  '-'  &&  isDigits(numeric.substring(1))  ||  isDigits(numeric)))  {  try  {  return  createLong(numeric);      [BUGGY]  }  catch(NoSuchElementException  nfe)  {  return  createInteger(numeric);  [BUGGY]        }  return  createBigInteger(numeric);  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  	projects/Lang7/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	511	513	1	replace	}  catch(NoSuchElementException  nfe)  {  return  createInteger(numeric);	  }    catch(NoSuchElementException    nfe)    {    return    createBigInteger(numeric);    	non-compiled	[CE]  ';'  expected	38	None	replace
111	[BUG]  [BUGGY]  }  else  if(dec  ==  null  &&  exp  ==  null  &&  isDigits(numeric.substring(1))  ||  isDigits(numeric.substring(2)))  {  return  createBigDecimal(numeric);  }  [CE]  ';'  expected  [FE]            AssertionError      [CONTEXT]      if  (dec  ==  null  &&  exp  ==  null  &&  (numeric.charAt(0)  ==  '-'  &&  isDigits(numeric.substring(1))  ||  isDigits(numeric)))  {  try  {  return  createLong(numeric);      [BUGGY]  }  else  if(dec  ==  null  &&  exp  ==  null  &&  isDigits(numeric.substring(1))  ||  isDigits(numeric.substring(2)))  {  return  createBigDecimal(numeric);  }  [BUGGY]        }  return  createBigInteger(numeric);  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  	projects/Lang7/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	511	513	1	replace	}  else  if(dec  ==  null  &&  exp  ==  null  &&  isDigits(numeric.substring(1))  ||  isDigits(numeric.substring(2)))  {  return  createBigDecimal(numeric);  }	  }    catch(NumberFormatException    e)    {    return    createBigDecimal(numeric);    	non-compiled	[CE]  ';'  expected	25	None	replace
112	[BUG]  [BUGGY]  }  else  if(dec  ==  null  &&  exp  ==  null  &&  isDigits(numeric.substring(1)))  {  return  createBigDecimal(numeric);  }  [CE]  ';'  expected  [FE]              AssertionError      [CONTEXT]      if  (dec  ==  null  &&  exp  ==  null  &&  (numeric.charAt(0)  ==  '-'  &&  isDigits(numeric.substring(1))  ||  isDigits(numeric)))  {  try  {  return  createLong(numeric);      [BUGGY]  }  else  if(dec  ==  null  &&  exp  ==  null  &&  isDigits(numeric.substring(1)))  {  return  createBigDecimal(numeric);  }  [BUGGY]        }  return  createBigInteger(numeric);  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  	projects/Lang7/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	511	513	1	replace	}  else  if(dec  ==  null  &&  exp  ==  null  &&  isDigits(numeric.substring(1)))  {  return  createBigDecimal(numeric);  }	  }    catch(NumberFormatException    e)    {    return    createBigDecimal(numeric);    	non-compiled	[CE]  ';'  expected	25	None	replace
113	[BUG]  [BUGGY]  NullableValue  <  String>  dec  =  nullableValues(numeric.substring(2));  [CE]  ';'  expected  [FE]                  AssertionError      [CONTEXT]      if  (dec  ==  null  &&  exp  ==  null  &&  (numeric.charAt(0)  ==  '-'  &&  isDigits(numeric.substring(1))  ||  isDigits(numeric)))  {  try  {  return  createLong(numeric);      [BUGGY]  NullableValue  <  String>  dec  =  nullableValues(numeric.substring(2));  [BUGGY]      }  catch  (NumberFormatException  nfe)  {  //  NOPMD        //  Too  big  for  a  long            }  }  return  createBigInteger(numeric);  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  	projects/Lang7/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	511	513	1	replace	NullableValue  <  String>  dec  =  nullableValues(numeric.substring(2));	  NullableValue    <    String>    dec    =    nullableValues();    	non-compiled	[CE]  ';'  expected	36	None	replace
114	[BUG]  [BUGGY]  if(dec  ==  null  &&  exp  ==  null  &&  isDigits(numeric.substring(1))  ||  isDigits(numeric.charAt(1)))  {  return  createLong(numeric);  }  [CE]  ';'  expected  [FE]              AssertionError      [CONTEXT]      if  (dec  ==  null  &&  exp  ==  null  &&  (numeric.charAt(0)  ==  '-'  &&  isDigits(numeric.substring(1))  ||  isDigits(numeric)))  {  try  {  return  createLong(numeric);      [BUGGY]  if(dec  ==  null  &&  exp  ==  null  &&  isDigits(numeric.substring(1))  ||  isDigits(numeric.charAt(1)))  {  return  createLong(numeric);  }  [BUGGY]      }  catch  (NumberFormatException  nfe)  {  //  NOPMD        //  Too  big  for  a  long            }  }  return  createBigInteger(numeric);  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  	projects/Lang7/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	511	513	1	replace	if(dec  ==  null  &&  exp  ==  null  &&  isDigits(numeric.substring(1))  ||  isDigits(numeric.charAt(1)))  {  return  createLong(numeric);  }	  if(dec    ==    null    &&    exp    ==    null    &&    isDigits(numeric.substring(2))    ||    isDigits(numeric.charAt(1)))    {    return    createLong(numeric);    }    	non-compiled	[CE]  ';'  expected	45	None	replace
115	[BUG]  [BUGGY]  if(dec  ==  null  &&  exp  ==  null  &&  isDigits(numeric.substring(1))  &&  isDigits(numeric.charAt(0)))  {  String  dec  =  str.substring(0,  str.length()  -  1);  return  createLong  [CE]  [FE]                AssertionError      [CONTEXT]      if  (dec  ==  null  &&  exp  ==  null  &&  (numeric.charAt(0)  ==  '-'  &&  isDigits(numeric.substring(1))  ||  isDigits(numeric)))  {  try  {  return  createLong(numeric);      [BUGGY]  if(dec  ==  null  &&  exp  ==  null  &&  isDigits(numeric.substring(1))  &&  isDigits(numeric.charAt(0)))  {  String  dec  =  str.substring(0,  str.length()  -  1);  return  createLong  [BUGGY]        }  return  createBigInteger(numeric);  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  	projects/Lang7/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	511	513	1	replace	if(dec  ==  null  &&  exp  ==  null  &&  isDigits(numeric.substring(1))  &&  isDigits(numeric.charAt(0)))  {  String  dec  =  str.substring(0,  str.length()  -  1);  return  createLong	  if(dec    ==    null    &&    exp    ==    null    &&    isDigits(numeric.substring(1))    ||    isDigits(numeric.charAt(0)))    {    String    dec    =    str.substring(0,    str.length()    -    1);    return    createLong(dec);    }    	non-compiled	[CE]  	11	None	replace
116	[BUG]  [BUGGY]  Dec  =  str.substring(0,  str.length()  1);  [CE]  ';'  expected  [FE]                    AssertionError      [CONTEXT]      if  (dec  ==  null  &&  exp  ==  null  &&  (numeric.charAt(0)  ==  '-'  &&  isDigits(numeric.substring(1))  ||  isDigits(numeric)))  {  try  {  return  createLong(numeric);      [BUGGY]  Dec  =  str.substring(0,  str.length()  1);  [BUGGY]      }  catch  (NumberFormatException  nfe)  {  //  NOPMD        //  Too  big  for  a  long            }  }  return  createBigInteger(numeric);  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  	projects/Lang7/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	511	513	1	replace	Dec  =  str.substring(0,  str.length()  1);	  Dec    =    str.substring(0,    str.length()    -    1);    	non-compiled	[CE]  ';'  expected	32	None	replace
