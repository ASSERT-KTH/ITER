bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  exp  =  str.substring(expPos  +  1,  str.length()  -  1);  [CE]  ')'  expected  [FE]    AssertionError  [CONTEXT]  }  default  :  throw  new  NumberFormatException(str  +   "  is  not  a  valid  number. ");  }  }  else  {    if  (expPos  >  -1  &&  expPos  <  str.length()  -  1)  {  [BUGGY]  exp  =  str.substring(expPos  +  1,  str.length()  -  1);  [BUGGY]  }  else  {  exp  =  null;  }  if  (dec  ==  null  &&  exp  ==  null)  {  try  {  return  createInteger(str);  }  catch  (NumberFormatException  nfe)  {  //  NOPMD  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  	projects/Lang7/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	556	556	1	replace	exp  =  str.substring(expPos  +  1,  str.length()  -  1);	exp  =  str.substring(expPos  +  1,  str.length());  	non-compiled	[CE]  ')'  expected	61	None	replace
2	[BUG]  [BUGGY]  exp  =  str.substring(expPos  +  1,  str.length()  -  2);  [CE]  ')'  expected  [FE]      AssertionError  [CONTEXT]  }  default  :  throw  new  NumberFormatException(str  +   "  is  not  a  valid  number. ");  }  }  else  {    if  (expPos  >  -1  &&  expPos  <  str.length()  -  1)  {  [BUGGY]  exp  =  str.substring(expPos  +  1,  str.length()  -  2);  [BUGGY]  }  else  {  exp  =  null;  }  if  (dec  ==  null  &&  exp  ==  null)  {  try  {  return  createInteger(str);  }  catch  (NumberFormatException  nfe)  {  //  NOPMD  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  	projects/Lang7/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	556	556	1	replace	exp  =  str.substring(expPos  +  1,  str.length()  -  2);	exp  =  str.substring(expPos  +  1,  str.length());  	non-compiled	[CE]  ')'  expected	61	None	replace
3	[BUG]  [BUGGY]  exp  =  str.substring(expPos  +  1,  str.length()  +  1);  [CE]  ')'  expected  [FE]        AssertionError  [CONTEXT]  }  default  :  throw  new  NumberFormatException(str  +   "  is  not  a  valid  number. ");  }  }  else  {    if  (expPos  >  -1  &&  expPos  <  str.length()  -  1)  {  [BUGGY]  exp  =  str.substring(expPos  +  1,  str.length()  +  1);  [BUGGY]  }  else  {  exp  =  null;  }  if  (dec  ==  null  &&  exp  ==  null)  {  try  {  return  createInteger(str);  }  catch  (NumberFormatException  nfe)  {  //  NOPMD  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  	projects/Lang7/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	556	556	1	replace	exp  =  str.substring(expPos  +  1,  str.length()  +  1);	exp  =  str.substring(expPos  +  1,  str.length());  	non-compiled	[CE]  ')'  expected	61	None	replace
4	[BUG]  [BUGGY]  exp  =  str.substring(0,  str.length()  -  1);  [CE]  ')'  expected  [FE]          AssertionError  [CONTEXT]  }  default  :  throw  new  NumberFormatException(str  +   "  is  not  a  valid  number. ");  }  }  else  {    if  (expPos  >  -1  &&  expPos  <  str.length()  -  1)  {  [BUGGY]  exp  =  str.substring(0,  str.length()  -  1);  [BUGGY]  }  else  {  exp  =  null;  }  if  (dec  ==  null  &&  exp  ==  null)  {  try  {  return  createInteger(str);  }  catch  (NumberFormatException  nfe)  {  //  NOPMD  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  	projects/Lang7/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	556	556	1	replace	exp  =  str.substring(0,  str.length()  -  1);	exp  =  str.substring(expPos  +  1,  str.length());  	non-compiled	[CE]  ')'  expected	61	None	replace
5	[BUG]  [BUGGY]    [CE]  ')'  expected  [FE]            AssertionError  [CONTEXT]  }  default  :  throw  new  NumberFormatException(str  +   "  is  not  a  valid  number. ");  }  }  else  {    if  (expPos  >  -1  &&  expPos  <  str.length()  -  1)  {  [BUGGY]    [BUGGY]  }  else  {  exp  =  null;  }  if  (dec  ==  null  &&  exp  ==  null)  {  try  {  return  createInteger(str);  }  catch  (NumberFormatException  nfe)  {  //  NOPMD  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  	projects/Lang7/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	556	556	1	replace	  	exp  =  str.substring(expPos  +  1,  str.length());  	non-compiled	[CE]  ')'  expected	61	None	replace
6	[BUG]  [BUGGY]    String  str  =  str.substring(0,  str.length()  -  1);  [CE]  ')'  expected  [FE]    AssertionError  [CONTEXT]  }  default  :  throw  new  NumberFormatException(str  +   "  is  not  a  valid  number. ");  }  }  else  {    if  (expPos  >  -1  &&  expPos  <  str.length()  -  1)  {  [BUGGY]    String  str  =  str.substring(0,  str.length()  -  1);  [BUGGY]  exp  =  str.substring(expPos  +  1,  str.length());  }  else  {  exp  =  null;  }  if  (dec  ==  null  &&  exp  ==  null)  {  try  {  return  createInteger(str);  }  catch  (NumberFormatException  nfe)  {  //  NOPMD  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  	projects/Lang7/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	556	556	1	replace	    String  str  =  str.substring(0,  str.length()  -  1);		non-compiled	[CE]  ')'  expected	62	None	add
7	[BUG]  [BUGGY]    int  expPos  =  str.length();  [CE]  ')'  expected  [FE]      AssertionError  [CONTEXT]  }  default  :  throw  new  NumberFormatException(str  +   "  is  not  a  valid  number. ");  }  }  else  {    if  (expPos  >  -1  &&  expPos  <  str.length()  -  1)  {  [BUGGY]    int  expPos  =  str.length();  [BUGGY]  exp  =  str.substring(expPos  +  1,  str.length());  }  else  {  exp  =  null;  }  if  (dec  ==  null  &&  exp  ==  null)  {  try  {  return  createInteger(str);  }  catch  (NumberFormatException  nfe)  {  //  NOPMD  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  	projects/Lang7/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	556	556	1	replace	    int  expPos  =  str.length();		non-compiled	[CE]  ')'  expected	62	None	add
8	[BUG]  [BUGGY]    int  expPos  =  str.lastIndexOf('.');  [CE]  ')'  expected  [FE]        AssertionError  [CONTEXT]  }  default  :  throw  new  NumberFormatException(str  +   "  is  not  a  valid  number. ");  }  }  else  {    if  (expPos  >  -1  &&  expPos  <  str.length()  -  1)  {  [BUGGY]    int  expPos  =  str.lastIndexOf('.');  [BUGGY]  exp  =  str.substring(expPos  +  1,  str.length());  }  else  {  exp  =  null;  }  if  (dec  ==  null  &&  exp  ==  null)  {  try  {  return  createInteger(str);  }  catch  (NumberFormatException  nfe)  {  //  NOPMD  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  	projects/Lang7/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	556	556	1	replace	    int  expPos  =  str.lastIndexOf('.');		non-compiled	[CE]  ')'  expected	62	None	add
9	[BUG]  [BUGGY]    String  str  =  str.substring(expPos  +  1,  str.length());  [CE]  ')'  expected  [FE]          AssertionError  [CONTEXT]  }  default  :  throw  new  NumberFormatException(str  +   "  is  not  a  valid  number. ");  }  }  else  {    if  (expPos  >  -1  &&  expPos  <  str.length()  -  1)  {  [BUGGY]    String  str  =  str.substring(expPos  +  1,  str.length());  [BUGGY]  exp  =  str.substring(expPos  +  1,  str.length());  }  else  {  exp  =  null;  }  if  (dec  ==  null  &&  exp  ==  null)  {  try  {  return  createInteger(str);  }  catch  (NumberFormatException  nfe)  {  //  NOPMD  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  	projects/Lang7/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	556	556	1	replace	    String  str  =  str.substring(expPos  +  1,  str.length());		non-compiled	[CE]  ')'  expected	62	None	add
10	[BUG]  [BUGGY]    int  expPos  =  str.indexOf('.');  [CE]  ')'  expected  [FE]            AssertionError  [CONTEXT]  }  default  :  throw  new  NumberFormatException(str  +   "  is  not  a  valid  number. ");  }  }  else  {    if  (expPos  >  -1  &&  expPos  <  str.length()  -  1)  {  [BUGGY]    int  expPos  =  str.indexOf('.');  [BUGGY]  exp  =  str.substring(expPos  +  1,  str.length());  }  else  {  exp  =  null;  }  if  (dec  ==  null  &&  exp  ==  null)  {  try  {  return  createInteger(str);  }  catch  (NumberFormatException  nfe)  {  //  NOPMD  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  	projects/Lang7/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	556	556	1	replace	    int  expPos  =  str.indexOf('.');		non-compiled	[CE]  ')'  expected	62	None	add
11	[BUG]  [BUGGY]    Integer  dec  =  createInteger(str);  [CE]  ')'  expected  [FE]    AssertionError  [CONTEXT]  }  default  :  throw  new  NumberFormatException(str  +   "  is  not  a  valid  number. ");  }  }  else  {    if  (expPos  >  -1  &&  expPos  <  str.length()  -  1)  {  [BUGGY]    Integer  dec  =  createInteger(str);  [BUGGY]  exp  =  str.substring(expPos  +  1,  str.length());  }  else  {  exp  =  null;  }  if  (dec  ==  null  &&  exp  ==  null)  {  try  {  return  createInteger(str);  }  catch  (NumberFormatException  nfe)  {  //  NOPMD  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  	projects/Lang7/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	556	556	1	replace	    Integer  dec  =  createInteger(str);		non-compiled	[CE]  ')'  expected	62	None	add
12	[BUG]  [BUGGY]    int  expPos  =  str.lastIndexOf('.',  expPos);  [CE]  ')'  expected  [FE]      AssertionError  [CONTEXT]  }  default  :  throw  new  NumberFormatException(str  +   "  is  not  a  valid  number. ");  }  }  else  {    if  (expPos  >  -1  &&  expPos  <  str.length()  -  1)  {  [BUGGY]    int  expPos  =  str.lastIndexOf('.',  expPos);  [BUGGY]  exp  =  str.substring(expPos  +  1,  str.length());  }  else  {  exp  =  null;  }  if  (dec  ==  null  &&  exp  ==  null)  {  try  {  return  createInteger(str);  }  catch  (NumberFormatException  nfe)  {  //  NOPMD  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  	projects/Lang7/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	556	556	1	replace	    int  expPos  =  str.lastIndexOf('.',  expPos);		non-compiled	[CE]  ')'  expected	62	None	add
13	[BUG]  [BUGGY]    int  expPos  =  str.indexOf('  ')+  1;  [CE]  ')'  expected  [FE]        AssertionError  [CONTEXT]  }  default  :  throw  new  NumberFormatException(str  +   "  is  not  a  valid  number. ");  }  }  else  {    if  (expPos  >  -1  &&  expPos  <  str.length()  -  1)  {  [BUGGY]    int  expPos  =  str.indexOf('  ')+  1;  [BUGGY]  exp  =  str.substring(expPos  +  1,  str.length());  }  else  {  exp  =  null;  }  if  (dec  ==  null  &&  exp  ==  null)  {  try  {  return  createInteger(str);  }  catch  (NumberFormatException  nfe)  {  //  NOPMD  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  	projects/Lang7/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	556	556	1	replace	    int  expPos  =  str.indexOf('  ')+  1;		non-compiled	[CE]  ')'  expected	62	None	add
14	[BUG]  [BUGGY]    int  decPos  =  str.lastIndexOf('.');  [CE]  ')'  expected  [FE]    AssertionError  [CONTEXT]  }  default  :  throw  new  NumberFormatException(str  +   "  is  not  a  valid  number. ");  }  }  else  {    if  (expPos  >  -1  &&  expPos  <  str.length()  -  1)  {  [BUGGY]    int  decPos  =  str.lastIndexOf('.');  [BUGGY]  exp  =  str.substring(expPos  +  1,  str.length());  }  else  {  exp  =  null;  }  if  (dec  ==  null  &&  exp  ==  null)  {  try  {  return  createInteger(str);  }  catch  (NumberFormatException  nfe)  {  //  NOPMD  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  	projects/Lang7/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	556	556	1	replace	    int  decPos  =  str.lastIndexOf('.');		non-compiled	[CE]  ')'  expected	62	None	add
15	[BUG]  [BUGGY]    int  decPos  =  str.indexOf('.');  [CE]  ')'  expected  [FE]      AssertionError  [CONTEXT]  }  default  :  throw  new  NumberFormatException(str  +   "  is  not  a  valid  number. ");  }  }  else  {    if  (expPos  >  -1  &&  expPos  <  str.length()  -  1)  {  [BUGGY]    int  decPos  =  str.indexOf('.');  [BUGGY]  exp  =  str.substring(expPos  +  1,  str.length());  }  else  {  exp  =  null;  }  if  (dec  ==  null  &&  exp  ==  null)  {  try  {  return  createInteger(str);  }  catch  (NumberFormatException  nfe)  {  //  NOPMD  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  	projects/Lang7/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	556	556	1	replace	    int  decPos  =  str.indexOf('.');		non-compiled	[CE]  ')'  expected	62	None	add
16	[BUG]  [BUGGY]  exp  =  str.substring(expPos  +  1,  str.length()  -  4);  [CE]  ')'  expected  [FE]    AssertionError  [CONTEXT]  }  default  :  throw  new  NumberFormatException(str  +   "  is  not  a  valid  number. ");  }  }  else  {    if  (expPos  >  -1  &&  expPos  <  str.length()  -  1)  {  [BUGGY]  exp  =  str.substring(expPos  +  1,  str.length()  -  4);  [BUGGY]  }  else  {  exp  =  null;  }  if  (dec  ==  null  &&  exp  ==  null)  {  try  {  return  createInteger(str);  }  catch  (NumberFormatException  nfe)  {  //  NOPMD  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  	projects/Lang7/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	556	556	1	replace	exp  =  str.substring(expPos  +  1,  str.length()  -  4);	exp  =  str.substring(expPos  +  1,  str.length());  	non-compiled	[CE]  ')'  expected	61	None	replace
