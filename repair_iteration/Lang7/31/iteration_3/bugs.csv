bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  int  decPos  =  str.indexOf('.',  expPos  +  1,  str.length());  [CE]  ')'  expected  [FE]              AssertionError      [CONTEXT]      }  default  :  throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  }  }  else  {    if  (expPos  >  -1  &&  expPos  <  str.length()  -  1)  {      [BUGGY]  int  decPos  =  str.indexOf('.',  expPos  +  1,  str.length());  [BUGGY]      exp  =  str.substring(expPos  +  1,  str.length());  }  else  {  exp  =  null;  }  if  (dec  ==  null  &&  exp  ==  null)  {  try  {  return  createInteger(str);  }  catch  (NumberFormatException  nfe)  {  //  NOPMD  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  	projects/Lang7/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	556	556	1	replace	int  decPos  =  str.indexOf('.',  expPos  +  1,  str.length());	  int    decPos    =    str.indexOf('.',    expPos    +    1);    	non-compiled	[CE]  ')'  expected	34	None	replace
2	[BUG]  [BUGGY]  int  decPos  =  str.indexOf('.',  expPos  +  2);  [CE]  ')'  expected  [FE]                AssertionError      [CONTEXT]      }  default  :  throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  }  }  else  {    if  (expPos  >  -1  &&  expPos  <  str.length()  -  1)  {      [BUGGY]  int  decPos  =  str.indexOf('.',  expPos  +  2);  [BUGGY]      exp  =  str.substring(expPos  +  1,  str.length());  }  else  {  exp  =  null;  }  if  (dec  ==  null  &&  exp  ==  null)  {  try  {  return  createInteger(str);  }  catch  (NumberFormatException  nfe)  {  //  NOPMD  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  	projects/Lang7/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	556	556	1	replace	int  decPos  =  str.indexOf('.',  expPos  +  2);	  int    decPos    =    str.indexOf('.',    expPos    +    1);    	non-compiled	[CE]  ')'  expected	34	None	replace
3	[BUG]  [BUGGY]  Integer  dec  =  createInteger(1);  [CE]  ')'  expected  [FE]            AssertionError      [CONTEXT]      }  default  :  throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  }  }  else  {    if  (expPos  >  -1  &&  expPos  <  str.length()  -  1)  {      [BUGGY]  Integer  dec  =  createInteger(1);  [BUGGY]      exp  =  str.substring(expPos  +  1,  str.length());  }  else  {  exp  =  null;  }  if  (dec  ==  null  &&  exp  ==  null)  {  try  {  return  createInteger(str);  }  catch  (NumberFormatException  nfe)  {  //  NOPMD  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  	projects/Lang7/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	556	556	1	replace	Integer  dec  =  createInteger(1);	  Integer    dec    =    createInteger(0);    	non-compiled	[CE]  ')'  expected	13	None	replace
4	[BUG]  [BUGGY]  exp  =  str.substring(0,  str.length()  +  2);  [CE]  ')'  expected  [FE]                  AssertionError      [CONTEXT]      }  default  :  throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  }  }  else  {    if  (expPos  >  -1  &&  expPos  <  str.length()  -  1)  {      [BUGGY]  exp  =  str.substring(0,  str.length()  +  2);  [BUGGY]      }  else  {  exp  =  null;  }  if  (dec  ==  null  &&  exp  ==  null)  {  try  {  return  createInteger(str);  }  catch  (NumberFormatException  nfe)  {  //  NOPMD  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  	projects/Lang7/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	556	556	1	replace	exp  =  str.substring(0,  str.length()  +  2);	  exp    =    str.substring(0,    str.length()    -    2);    	non-compiled	[CE]  ')'  expected	48	None	replace
5	[BUG]  [BUGGY]  int  decPos  =  str.lastIndexOf('.'  +  expPos);  [CE]  ')'  expected  [FE]              AssertionError      [CONTEXT]      }  default  :  throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  }  }  else  {    if  (expPos  >  -1  &&  expPos  <  str.length()  -  1)  {      [BUGGY]  int  decPos  =  str.lastIndexOf('.'  +  expPos);  [BUGGY]      exp  =  str.substring(expPos  +  1,  str.length());  }  else  {  exp  =  null;  }  if  (dec  ==  null  &&  exp  ==  null)  {  try  {  return  createInteger(str);  }  catch  (NumberFormatException  nfe)  {  //  NOPMD  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  	projects/Lang7/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	556	556	1	replace	int  decPos  =  str.lastIndexOf('.'  +  expPos);	  int    decPos    =    str.indexOf('.'    +    expPos);    	non-compiled	[CE]  ')'  expected	49	None	replace
6	[BUG]  [BUGGY]  int  decPos  =  str.indexOf('.'  +  expPos  +  1);  [CE]  ')'  expected  [FE]                AssertionError      [CONTEXT]      }  default  :  throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  }  }  else  {    if  (expPos  >  -1  &&  expPos  <  str.length()  -  1)  {      [BUGGY]  int  decPos  =  str.indexOf('.'  +  expPos  +  1);  [BUGGY]      exp  =  str.substring(expPos  +  1,  str.length());  }  else  {  exp  =  null;  }  if  (dec  ==  null  &&  exp  ==  null)  {  try  {  return  createInteger(str);  }  catch  (NumberFormatException  nfe)  {  //  NOPMD  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  	projects/Lang7/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	556	556	1	replace	int  decPos  =  str.indexOf('.'  +  expPos  +  1);	  int    decPos    =    str.indexOf('.'    +    expPos);    	non-compiled	[CE]  ')'  expected	49	None	replace
7	[BUG]  [BUGGY]  int  expPos  =  str.indexOf('.',  expPos  +  1,  str.length());  [CE]  ')'  expected  [FE]                      AssertionError      [CONTEXT]      }  default  :  throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  }  }  else  {    if  (expPos  >  -1  &&  expPos  <  str.length()  -  1)  {      [BUGGY]  int  expPos  =  str.indexOf('.',  expPos  +  1,  str.length());  [BUGGY]      exp  =  str.substring(expPos  +  1,  str.length());  }  else  {  exp  =  null;  }  if  (dec  ==  null  &&  exp  ==  null)  {  try  {  return  createInteger(str);  }  catch  (NumberFormatException  nfe)  {  //  NOPMD  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  	projects/Lang7/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	556	556	1	replace	int  expPos  =  str.indexOf('.',  expPos  +  1,  str.length());	  int    expPos    =    str.indexOf('.',    expPos    +    1);    	non-compiled	[CE]  ')'  expected	18	None	replace
8	[BUG]  [BUGGY]  int  expPos  =  str.indexOf('.',  expPos  +  2);  [CE]  ')'  expected  [FE]                        AssertionError      [CONTEXT]      }  default  :  throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  }  }  else  {    if  (expPos  >  -1  &&  expPos  <  str.length()  -  1)  {      [BUGGY]  int  expPos  =  str.indexOf('.',  expPos  +  2);  [BUGGY]      exp  =  str.substring(expPos  +  1,  str.length());  }  else  {  exp  =  null;  }  if  (dec  ==  null  &&  exp  ==  null)  {  try  {  return  createInteger(str);  }  catch  (NumberFormatException  nfe)  {  //  NOPMD  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  	projects/Lang7/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	556	556	1	replace	int  expPos  =  str.indexOf('.',  expPos  +  2);	  int    expPos    =    str.indexOf('.',    expPos    +    1);    	non-compiled	[CE]  ')'  expected	18	None	replace
9	[BUG]  [BUGGY]  Integer  dec  =  createInteger(str.length()  +  1);  [CE]  ')'  expected  [FE]            AssertionError      [CONTEXT]      }  default  :  throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  }  }  else  {    if  (expPos  >  -1  &&  expPos  <  str.length()  -  1)  {      [BUGGY]  Integer  dec  =  createInteger(str.length()  +  1);  [BUGGY]      exp  =  str.substring(expPos  +  1,  str.length());  }  else  {  exp  =  null;  }  if  (dec  ==  null  &&  exp  ==  null)  {  try  {  return  createInteger(str);  }  catch  (NumberFormatException  nfe)  {  //  NOPMD  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  	projects/Lang7/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	556	556	1	replace	Integer  dec  =  createInteger(str.length()  +  1);	  Integer    dec    =    createInteger(str    +    1);    	non-compiled	[CE]  ')'  expected	43	None	replace
10	[BUG]  [BUGGY]  Integer  dec  =  createInteger(str.substring(expPos,  expPos));  [CE]  ')'  expected  [FE]              AssertionError      [CONTEXT]      }  default  :  throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  }  }  else  {    if  (expPos  >  -1  &&  expPos  <  str.length()  -  1)  {      [BUGGY]  Integer  dec  =  createInteger(str.substring(expPos,  expPos));  [BUGGY]      exp  =  str.substring(expPos  +  1,  str.length());  }  else  {  exp  =  null;  }  if  (dec  ==  null  &&  exp  ==  null)  {  try  {  return  createInteger(str);  }  catch  (NumberFormatException  nfe)  {  //  NOPMD  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  	projects/Lang7/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	556	556	1	replace	Integer  dec  =  createInteger(str.substring(expPos,  expPos));	  Integer    dec    =    createInteger(decPos);    	non-compiled	[CE]  ')'  expected	44	None	replace
11	[BUG]  [BUGGY]  int  decPos  =  str.lastIndexOf('.',  expPos  +  2);  [CE]  ')'  expected  [FE]              AssertionError      [CONTEXT]      }  default  :  throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  }  }  else  {    if  (expPos  >  -1  &&  expPos  <  str.length()  -  1)  {      [BUGGY]  int  decPos  =  str.lastIndexOf('.',  expPos  +  2);  [BUGGY]      exp  =  str.substring(expPos  +  1,  str.length());  }  else  {  exp  =  null;  }  if  (dec  ==  null  &&  exp  ==  null)  {  try  {  return  createInteger(str);  }  catch  (NumberFormatException  nfe)  {  //  NOPMD  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  	projects/Lang7/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	556	556	1	replace	int  decPos  =  str.lastIndexOf('.',  expPos  +  2);	  int    decPos    =    str.lastIndexOf('.',    expPos    +    1);    	non-compiled	[CE]  ')'  expected	24	None	replace
12	[BUG]  [BUGGY]  int  expPos  =  str.indexOf('  ')/  2;  [CE]  ')'  expected  [FE]                    AssertionError      [CONTEXT]      }  default  :  throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  }  }  else  {    if  (expPos  >  -1  &&  expPos  <  str.length()  -  1)  {      [BUGGY]  int  expPos  =  str.indexOf('  ')/  2;  [BUGGY]      exp  =  str.substring(expPos  +  1,  str.length());  }  else  {  exp  =  null;  }  if  (dec  ==  null  &&  exp  ==  null)  {  try  {  return  createInteger(str);  }  catch  (NumberFormatException  nfe)  {  //  NOPMD  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  	projects/Lang7/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	556	556	1	replace	int  expPos  =  str.indexOf('  ')/  2;	  int    expPos    =    str.indexOf('    ')/    1;    	non-compiled	[CE]  ')'  expected	22	None	replace
13	[BUG]  [BUGGY]  int  expPos  =  str.lastIndexOf('  ')/  1;  [CE]  ')'  expected  [FE]                      AssertionError      [CONTEXT]      }  default  :  throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  }  }  else  {    if  (expPos  >  -1  &&  expPos  <  str.length()  -  1)  {      [BUGGY]  int  expPos  =  str.lastIndexOf('  ')/  1;  [BUGGY]      exp  =  str.substring(expPos  +  1,  str.length());  }  else  {  exp  =  null;  }  if  (dec  ==  null  &&  exp  ==  null)  {  try  {  return  createInteger(str);  }  catch  (NumberFormatException  nfe)  {  //  NOPMD  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  	projects/Lang7/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	556	556	1	replace	int  expPos  =  str.lastIndexOf('  ')/  1;	  int    expPos    =    str.indexOf('    ')/    1;    	non-compiled	[CE]  ')'  expected	22	None	replace
14	[BUG]  [BUGGY]  int  expPos  =  str.indexOf('  ',  expPos)/  1;  [CE]  ')'  expected  [FE]                        AssertionError      [CONTEXT]      }  default  :  throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  }  }  else  {    if  (expPos  >  -1  &&  expPos  <  str.length()  -  1)  {      [BUGGY]  int  expPos  =  str.indexOf('  ',  expPos)/  1;  [BUGGY]      exp  =  str.substring(expPos  +  1,  str.length());  }  else  {  exp  =  null;  }  if  (dec  ==  null  &&  exp  ==  null)  {  try  {  return  createInteger(str);  }  catch  (NumberFormatException  nfe)  {  //  NOPMD  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  	projects/Lang7/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	556	556	1	replace	int  expPos  =  str.indexOf('  ',  expPos)/  1;	  int    expPos    =    str.indexOf('    ')/    1;    	non-compiled	[CE]  ')'  expected	22	None	replace
15	[BUG]  [BUGGY]  int  expPos  =  str.indexOf('  ',  expPos)/  2;  [CE]  ')'  expected  [FE]                          AssertionError      [CONTEXT]      }  default  :  throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  }  }  else  {    if  (expPos  >  -1  &&  expPos  <  str.length()  -  1)  {      [BUGGY]  int  expPos  =  str.indexOf('  ',  expPos)/  2;  [BUGGY]      exp  =  str.substring(expPos  +  1,  str.length());  }  else  {  exp  =  null;  }  if  (dec  ==  null  &&  exp  ==  null)  {  try  {  return  createInteger(str);  }  catch  (NumberFormatException  nfe)  {  //  NOPMD  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  	projects/Lang7/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	556	556	1	replace	int  expPos  =  str.indexOf('  ',  expPos)/  2;	  int    expPos    =    str.indexOf('    ')/    1;    	non-compiled	[CE]  ')'  expected	22	None	replace
16	[BUG]  [BUGGY]  exp  =  str.substring(ExpPos  +  1,  str.length()  -  1);  [CE]  ')'  expected  [FE]                AssertionError      [CONTEXT]      }  default  :  throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  }  }  else  {    if  (expPos  >  -1  &&  expPos  <  str.length()  -  1)  {      [BUGGY]  exp  =  str.substring(ExpPos  +  1,  str.length()  -  1);  [BUGGY]      }  else  {  exp  =  null;  }  if  (dec  ==  null  &&  exp  ==  null)  {  try  {  return  createInteger(str);  }  catch  (NumberFormatException  nfe)  {  //  NOPMD  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  	projects/Lang7/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	556	556	1	replace	exp  =  str.substring(ExpPos  +  1,  str.length()  -  1);	  exp    =    str.substring(ExpPos    +    1,    str.length());    	non-compiled	[CE]  ')'  expected	40	None	replace
17	[BUG]  [BUGGY]  int  expPos  =  str.indexOf('.')+  2;  [CE]  ')'  expected  [FE]                    AssertionError      [CONTEXT]      }  default  :  throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  }  }  else  {    if  (expPos  >  -1  &&  expPos  <  str.length()  -  1)  {      [BUGGY]  int  expPos  =  str.indexOf('.')+  2;  [BUGGY]      exp  =  str.substring(expPos  +  1,  str.length());  }  else  {  exp  =  null;  }  if  (dec  ==  null  &&  exp  ==  null)  {  try  {  return  createInteger(str);  }  catch  (NumberFormatException  nfe)  {  //  NOPMD  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  	projects/Lang7/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	556	556	1	replace	int  expPos  =  str.indexOf('.')+  2;	  int    expPos    =    str.indexOf('.')+    1;    	non-compiled	[CE]  ')'  expected	41	None	replace
18	[BUG]  [BUGGY]  int  expPos  =  str.indexOf('.',  expPos)+  1;  [CE]  ')'  expected  [FE]                      AssertionError      [CONTEXT]      }  default  :  throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  }  }  else  {    if  (expPos  >  -1  &&  expPos  <  str.length()  -  1)  {      [BUGGY]  int  expPos  =  str.indexOf('.',  expPos)+  1;  [BUGGY]      exp  =  str.substring(expPos  +  1,  str.length());  }  else  {  exp  =  null;  }  if  (dec  ==  null  &&  exp  ==  null)  {  try  {  return  createInteger(str);  }  catch  (NumberFormatException  nfe)  {  //  NOPMD  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  	projects/Lang7/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	556	556	1	replace	int  expPos  =  str.indexOf('.',  expPos)+  1;	  int    expPos    =    str.indexOf('.')+    1;    	non-compiled	[CE]  ')'  expected	41	None	replace
19	[BUG]  [BUGGY]  exp  =  str.substring(expPos  +  1,  str.length()  -  1).trim();  [CE]  ')'  expected  [FE]                AssertionError      [CONTEXT]      }  default  :  throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  }  }  else  {    if  (expPos  >  -1  &&  expPos  <  str.length()  -  1)  {      [BUGGY]  exp  =  str.substring(expPos  +  1,  str.length()  -  1).trim();  [BUGGY]      }  else  {  exp  =  null;  }  if  (dec  ==  null  &&  exp  ==  null)  {  try  {  return  createInteger(str);  }  catch  (NumberFormatException  nfe)  {  //  NOPMD  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  	projects/Lang7/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	556	556	1	replace	exp  =  str.substring(expPos  +  1,  str.length()  -  1).trim();	  exp    =    str.substring(expPos    +    1,    str.length()).trim();    	non-compiled	[CE]  ')'  expected	29	None	replace
20	[BUG]  [BUGGY]  exp  =  str.substring(expPos  +  1,  str.length()  -  2).trim();  [CE]  ')'  expected  [FE]                  AssertionError      [CONTEXT]      }  default  :  throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  }  }  else  {    if  (expPos  >  -1  &&  expPos  <  str.length()  -  1)  {      [BUGGY]  exp  =  str.substring(expPos  +  1,  str.length()  -  2).trim();  [BUGGY]      }  else  {  exp  =  null;  }  if  (dec  ==  null  &&  exp  ==  null)  {  try  {  return  createInteger(str);  }  catch  (NumberFormatException  nfe)  {  //  NOPMD  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  	projects/Lang7/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	556	556	1	replace	exp  =  str.substring(expPos  +  1,  str.length()  -  2).trim();	  exp    =    str.substring(expPos    +    1,    str.length()).trim();    	non-compiled	[CE]  ')'  expected	29	None	replace
21	[BUG]  [BUGGY]  int  expPos  =  str.lastIndexOf('  ',  expPos)+  1;  [CE]  ')'  expected  [FE]                AssertionError      [CONTEXT]      }  default  :  throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  }  }  else  {    if  (expPos  >  -1  &&  expPos  <  str.length()  -  1)  {      [BUGGY]  int  expPos  =  str.lastIndexOf('  ',  expPos)+  1;  [BUGGY]      exp  =  str.substring(expPos  +  1,  str.length());  }  else  {  exp  =  null;  }  if  (dec  ==  null  &&  exp  ==  null)  {  try  {  return  createInteger(str);  }  catch  (NumberFormatException  nfe)  {  //  NOPMD  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  	projects/Lang7/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	556	556	1	replace	int  expPos  =  str.lastIndexOf('  ',  expPos)+  1;	  int    expPos    =    str.indexOf('    ',    expPos)+    1;    	non-compiled	[CE]  ')'  expected	46	None	replace
22	[BUG]  [BUGGY]  int  expPos  =  str.indexOf('  ',  expPos  +  1)+  1;  [CE]  ')'  expected  [FE]                  AssertionError      [CONTEXT]      }  default  :  throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  }  }  else  {    if  (expPos  >  -1  &&  expPos  <  str.length()  -  1)  {      [BUGGY]  int  expPos  =  str.indexOf('  ',  expPos  +  1)+  1;  [BUGGY]      exp  =  str.substring(expPos  +  1,  str.length());  }  else  {  exp  =  null;  }  if  (dec  ==  null  &&  exp  ==  null)  {  try  {  return  createInteger(str);  }  catch  (NumberFormatException  nfe)  {  //  NOPMD  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  	projects/Lang7/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	556	556	1	replace	int  expPos  =  str.indexOf('  ',  expPos  +  1)+  1;	  int    expPos    =    str.indexOf('    ',    expPos)+    1;    	non-compiled	[CE]  ')'  expected	46	None	replace
23	[BUG]  [BUGGY]  int  expPos  =  str.indexOf('  ',  expPos)+  2;  [CE]  ')'  expected  [FE]                    AssertionError      [CONTEXT]      }  default  :  throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  }  }  else  {    if  (expPos  >  -1  &&  expPos  <  str.length()  -  1)  {      [BUGGY]  int  expPos  =  str.indexOf('  ',  expPos)+  2;  [BUGGY]      exp  =  str.substring(expPos  +  1,  str.length());  }  else  {  exp  =  null;  }  if  (dec  ==  null  &&  exp  ==  null)  {  try  {  return  createInteger(str);  }  catch  (NumberFormatException  nfe)  {  //  NOPMD  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  	projects/Lang7/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	556	556	1	replace	int  expPos  =  str.indexOf('  ',  expPos)+  2;	  int    expPos    =    str.indexOf('    ',    expPos)+    1;    	non-compiled	[CE]  ')'  expected	46	None	replace
24	[BUG]  [BUGGY]  if(expPos  >  -1  &&  expPos  <  str.length()  -  1)  {  if(dec  ==  null  &&  exp  ==  null)  {  return  createBigInteger(str);  }  [CE]  ')'  expected  [FE]                    AssertionError      [CONTEXT]      }  default  :  throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  }  }  else  {    if  (expPos  >  -1  &&  expPos  <  str.length()  -  1)  {      [BUGGY]  if(expPos  >  -1  &&  expPos  <  str.length()  -  1)  {  if(dec  ==  null  &&  exp  ==  null)  {  return  createBigInteger(str);  }  [BUGGY]      }  else  {  exp  =  null;  }  if  (dec  ==  null  &&  exp  ==  null)  {  try  {  return  createInteger(str);  }  catch  (NumberFormatException  nfe)  {  //  NOPMD  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  	projects/Lang7/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	556	556	1	replace	if(expPos  >  -1  &&  expPos  <  str.length()  -  1)  {  if(dec  ==  null  &&  exp  ==  null)  {  return  createBigInteger(str);  }	  if(dec    ==    null    &&    exp    ==    null)    {    return    createBigInteger(str);    }    	non-compiled	[CE]  ')'  expected	52	None	replace
25	[BUG]  [BUGGY]  if(expPos  >  -1)  {  if(dec  ==  null  &&  exp  ==  null)  {  return  createBigInteger(str);  }  [CE]  ')'  expected  [FE]                      AssertionError      [CONTEXT]      }  default  :  throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  }  }  else  {    if  (expPos  >  -1  &&  expPos  <  str.length()  -  1)  {      [BUGGY]  if(expPos  >  -1)  {  if(dec  ==  null  &&  exp  ==  null)  {  return  createBigInteger(str);  }  [BUGGY]      }  else  {  exp  =  null;  }  if  (dec  ==  null  &&  exp  ==  null)  {  try  {  return  createInteger(str);  }  catch  (NumberFormatException  nfe)  {  //  NOPMD  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  	projects/Lang7/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	556	556	1	replace	if(expPos  >  -1)  {  if(dec  ==  null  &&  exp  ==  null)  {  return  createBigInteger(str);  }	  if(dec    ==    null    &&    exp    ==    null)    {    return    createBigInteger(str);    }    	non-compiled	[CE]  ')'  expected	52	None	replace
26	[BUG]  [BUGGY]  if(expPos  >  -1  &&  expPos  <  str.length()  -  1)  {  if(dec  ==  null  &&  exp  ==  null)  {  return  createInteger(str);  }  [CE]  ')'  expected  [FE]                        AssertionError      [CONTEXT]      }  default  :  throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  }  }  else  {    if  (expPos  >  -1  &&  expPos  <  str.length()  -  1)  {      [BUGGY]  if(expPos  >  -1  &&  expPos  <  str.length()  -  1)  {  if(dec  ==  null  &&  exp  ==  null)  {  return  createInteger(str);  }  [BUGGY]      }  else  {  exp  =  null;  }  if  (dec  ==  null  &&  exp  ==  null)  {  try  {  return  createInteger(str);  }  catch  (NumberFormatException  nfe)  {  //  NOPMD  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  	projects/Lang7/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	556	556	1	replace	if(expPos  >  -1  &&  expPos  <  str.length()  -  1)  {  if(dec  ==  null  &&  exp  ==  null)  {  return  createInteger(str);  }	  if(dec    ==    null    &&    exp    ==    null)    {    return    createBigInteger(str);    }    	non-compiled	[CE]  ')'  expected	52	None	replace
27	[BUG]  [BUGGY]  if(expPos  >  -1  &&  expPos  <  str.length())  {  if(dec  ==  null  &&  exp  ==  null)  {  return  createBigInteger(str);  }  [CE]  ')'  expected  [FE]                          AssertionError      [CONTEXT]      }  default  :  throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  }  }  else  {    if  (expPos  >  -1  &&  expPos  <  str.length()  -  1)  {      [BUGGY]  if(expPos  >  -1  &&  expPos  <  str.length())  {  if(dec  ==  null  &&  exp  ==  null)  {  return  createBigInteger(str);  }  [BUGGY]      }  else  {  exp  =  null;  }  if  (dec  ==  null  &&  exp  ==  null)  {  try  {  return  createInteger(str);  }  catch  (NumberFormatException  nfe)  {  //  NOPMD  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  	projects/Lang7/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	556	556	1	replace	if(expPos  >  -1  &&  expPos  <  str.length())  {  if(dec  ==  null  &&  exp  ==  null)  {  return  createBigInteger(str);  }	  if(dec    ==    null    &&    exp    ==    null)    {    return    createBigInteger(str);    }    	non-compiled	[CE]  ')'  expected	52	None	replace
28	[BUG]  [BUGGY]  exp  =  str.substring(expPos,  expPos  +  1,  str.length());  [CE]  ')'  expected  [FE]              AssertionError      [CONTEXT]      }  default  :  throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  }  }  else  {    if  (expPos  >  -1  &&  expPos  <  str.length()  -  1)  {      [BUGGY]  exp  =  str.substring(expPos,  expPos  +  1,  str.length());  [BUGGY]      }  else  {  exp  =  null;  }  if  (dec  ==  null  &&  exp  ==  null)  {  try  {  return  createInteger(str);  }  catch  (NumberFormatException  nfe)  {  //  NOPMD  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  	projects/Lang7/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	556	556	1	replace	exp  =  str.substring(expPos,  expPos  +  1,  str.length());	  exp    =    str.substring(Expression.MIN_VALUE,    expPos    +    1,    str.length());    	non-compiled	[CE]  ')'  expected	39	None	replace
29	[BUG]  [BUGGY]  exp  =  str.substring(0,  expPos  +  1,  str.length());  [CE]  ')'  expected  [FE]                AssertionError      [CONTEXT]      }  default  :  throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  }  }  else  {    if  (expPos  >  -1  &&  expPos  <  str.length()  -  1)  {      [BUGGY]  exp  =  str.substring(0,  expPos  +  1,  str.length());  [BUGGY]      }  else  {  exp  =  null;  }  if  (dec  ==  null  &&  exp  ==  null)  {  try  {  return  createInteger(str);  }  catch  (NumberFormatException  nfe)  {  //  NOPMD  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  	projects/Lang7/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	556	556	1	replace	exp  =  str.substring(0,  expPos  +  1,  str.length());	  exp    =    str.substring(Expression.MIN_VALUE,    expPos    +    1,    str.length());    	non-compiled	[CE]  ')'  expected	39	None	replace
30	[BUG]  [BUGGY]  exp  =  str.substring(Expression.MIN_VALUE,  expPos  +  1,  str.length()  -  1);  [CE]  ')'  expected  [FE]                  AssertionError      [CONTEXT]      }  default  :  throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  }  }  else  {    if  (expPos  >  -1  &&  expPos  <  str.length()  -  1)  {      [BUGGY]  exp  =  str.substring(Expression.MIN_VALUE,  expPos  +  1,  str.length()  -  1);  [BUGGY]      }  else  {  exp  =  null;  }  if  (dec  ==  null  &&  exp  ==  null)  {  try  {  return  createInteger(str);  }  catch  (NumberFormatException  nfe)  {  //  NOPMD  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  	projects/Lang7/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	556	556	1	replace	exp  =  str.substring(Expression.MIN_VALUE,  expPos  +  1,  str.length()  -  1);	  exp    =    str.substring(Expression.MIN_VALUE,    expPos    +    1,    str.length());    	non-compiled	[CE]  ')'  expected	39	None	replace
31	[BUG]  [BUGGY]  exp  =  str.substring(expPos  +  2,  str.length()  -  1);  [CE]  ')'  expected  [FE]            AssertionError      [CONTEXT]      }  default  :  throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  }  }  else  {    if  (expPos  >  -1  &&  expPos  <  str.length()  -  1)  {      [BUGGY]  exp  =  str.substring(expPos  +  2,  str.length()  -  1);  [BUGGY]      }  else  {  exp  =  null;  }  if  (dec  ==  null  &&  exp  ==  null)  {  try  {  return  createInteger(str);  }  catch  (NumberFormatException  nfe)  {  //  NOPMD  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  	projects/Lang7/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	556	556	1	replace	exp  =  str.substring(expPos  +  2,  str.length()  -  1);	  exp    =    str.substring(expPos    +    2,    str.length());    	non-compiled	[CE]  ')'  expected	59	None	replace
32	[BUG]  [BUGGY]  bucket  <  str.length()  &&  expPos  >  -1  &&  expPos  <  str.length()  -  1)  {  return  createInteger(str);  }  [CE]  ')'  expected  [FE]                      AssertionError      [CONTEXT]      }  default  :  throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  }  }  else  {    if  (expPos  >  -1  &&  expPos  <  str.length()  -  1)  {      [BUGGY]  bucket  <  str.length()  &&  expPos  >  -1  &&  expPos  <  str.length()  -  1)  {  return  createInteger(str);  }  [BUGGY]      }  else  {  exp  =  null;  }  if  (dec  ==  null  &&  exp  ==  null)  {  try  {  return  createInteger(str);  }  catch  (NumberFormatException  nfe)  {  //  NOPMD  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  	projects/Lang7/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	556	556	1	replace	bucket  <  str.length()  &&  expPos  >  -1  &&  expPos  <  str.length()  -  1)  {  return  createInteger(str);  }	  if(expPos    >    -1    &&    expPos    <    str.length()    -    1)    {    return    createInteger(str);    }    	non-compiled	[CE]  ')'  expected	37	None	replace
33	[BUG]  [BUGGY]  bucket  <  str.length()  -  1  ||  expPos  >  -1  &&  expPos  <  str.length()  -  1)  {  return  createInteger(str);  }  [CE]  ')'  expected  [FE]                        AssertionError      [CONTEXT]      }  default  :  throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  }  }  else  {    if  (expPos  >  -1  &&  expPos  <  str.length()  -  1)  {      [BUGGY]  bucket  <  str.length()  -  1  ||  expPos  >  -1  &&  expPos  <  str.length()  -  1)  {  return  createInteger(str);  }  [BUGGY]      }  else  {  exp  =  null;  }  if  (dec  ==  null  &&  exp  ==  null)  {  try  {  return  createInteger(str);  }  catch  (NumberFormatException  nfe)  {  //  NOPMD  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  	projects/Lang7/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	556	556	1	replace	bucket  <  str.length()  -  1  ||  expPos  >  -1  &&  expPos  <  str.length()  -  1)  {  return  createInteger(str);  }	  if(expPos    >    -1    &&    expPos    <    str.length()    -    1)    {    return    createInteger(str);    }    	non-compiled	[CE]  ')'  expected	37	None	replace
34	[BUG]  [BUGGY]  bucket  <  str.length()  &&  expPos  >  -1  ||  expPos  <  str.length()  -  1)  {  return  createInteger(str);  }  [CE]  ')'  expected  [FE]                          AssertionError      [CONTEXT]      }  default  :  throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  }  }  else  {    if  (expPos  >  -1  &&  expPos  <  str.length()  -  1)  {      [BUGGY]  bucket  <  str.length()  &&  expPos  >  -1  ||  expPos  <  str.length()  -  1)  {  return  createInteger(str);  }  [BUGGY]      }  else  {  exp  =  null;  }  if  (dec  ==  null  &&  exp  ==  null)  {  try  {  return  createInteger(str);  }  catch  (NumberFormatException  nfe)  {  //  NOPMD  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  	projects/Lang7/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	556	556	1	replace	bucket  <  str.length()  &&  expPos  >  -1  ||  expPos  <  str.length()  -  1)  {  return  createInteger(str);  }	  if(expPos    >    -1    &&    expPos    <    str.length()    -    1)    {    return    createInteger(str);    }    	non-compiled	[CE]  ')'  expected	37	None	replace
35	[BUG]  [BUGGY]  bucket  <  str.length()  &&  expPos  >=  str.length())  {  return  createInteger(str);  }  [CE]  ')'  expected  [FE]                            AssertionError      [CONTEXT]      }  default  :  throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  }  }  else  {    if  (expPos  >  -1  &&  expPos  <  str.length()  -  1)  {      [BUGGY]  bucket  <  str.length()  &&  expPos  >=  str.length())  {  return  createInteger(str);  }  [BUGGY]      }  else  {  exp  =  null;  }  if  (dec  ==  null  &&  exp  ==  null)  {  try  {  return  createInteger(str);  }  catch  (NumberFormatException  nfe)  {  //  NOPMD  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  	projects/Lang7/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	556	556	1	replace	bucket  <  str.length()  &&  expPos  >=  str.length())  {  return  createInteger(str);  }	  if(expPos    >    -1    &&    expPos    <    str.length()    -    1)    {    return    createInteger(str);    }    	non-compiled	[CE]  ')'  expected	37	None	replace
36	[BUG]  [BUGGY]  exp  =  str.substring(0,  expPos.length()  -  1);  [CE]  ')'  expected  [FE]                      AssertionError      [CONTEXT]      }  default  :  throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  }  }  else  {    if  (expPos  >  -1  &&  expPos  <  str.length()  -  1)  {      [BUGGY]  exp  =  str.substring(0,  expPos.length()  -  1);  [BUGGY]      }  else  {  exp  =  null;  }  if  (dec  ==  null  &&  exp  ==  null)  {  try  {  return  createInteger(str);  }  catch  (NumberFormatException  nfe)  {  //  NOPMD  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  	projects/Lang7/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	556	556	1	replace	exp  =  str.substring(0,  expPos.length()  -  1);	  exp    =    str.substring(0,    str.length();    	non-compiled	[CE]  ')'  expected	32	None	replace
37	[BUG]  [BUGGY]  exp  =  str.substring(1,  str.length()  -  1);  [CE]  ')'  expected  [FE]                        AssertionError      [CONTEXT]      }  default  :  throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  }  }  else  {    if  (expPos  >  -1  &&  expPos  <  str.length()  -  1)  {      [BUGGY]  exp  =  str.substring(1,  str.length()  -  1);  [BUGGY]      }  else  {  exp  =  null;  }  if  (dec  ==  null  &&  exp  ==  null)  {  try  {  return  createInteger(str);  }  catch  (NumberFormatException  nfe)  {  //  NOPMD  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  	projects/Lang7/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	556	556	1	replace	exp  =  str.substring(1,  str.length()  -  1);	  exp    =    str.substring(0,    str.length();    	non-compiled	[CE]  ')'  expected	32	None	replace
38	[BUG]  [BUGGY]  Integer  dec  =  createInteger(str.substring(0,  expPos));  [CE]  ')'  expected  [FE]                  AssertionError      [CONTEXT]      }  default  :  throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  }  }  else  {    if  (expPos  >  -1  &&  expPos  <  str.length()  -  1)  {      [BUGGY]  Integer  dec  =  createInteger(str.substring(0,  expPos));  [BUGGY]      exp  =  str.substring(expPos  +  1,  str.length());  }  else  {  exp  =  null;  }  if  (dec  ==  null  &&  exp  ==  null)  {  try  {  return  createInteger(str);  }  catch  (NumberFormatException  nfe)  {  //  NOPMD  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  	projects/Lang7/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	556	556	1	replace	Integer  dec  =  createInteger(str.substring(0,  expPos));	  Integer    dec    =    createInteger(str.substring(expPos));    	non-compiled	[CE]  ')'  expected	16	None	replace
39	[BUG]  [BUGGY]  Integer  dec  =  createInteger(str.substring(0,  str.length()  -  1));  [CE]  ')'  expected  [FE]                    AssertionError      [CONTEXT]      }  default  :  throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  }  }  else  {    if  (expPos  >  -1  &&  expPos  <  str.length()  -  1)  {      [BUGGY]  Integer  dec  =  createInteger(str.substring(0,  str.length()  -  1));  [BUGGY]      exp  =  str.substring(expPos  +  1,  str.length());  }  else  {  exp  =  null;  }  if  (dec  ==  null  &&  exp  ==  null)  {  try  {  return  createInteger(str);  }  catch  (NumberFormatException  nfe)  {  //  NOPMD  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  	projects/Lang7/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	556	556	1	replace	Integer  dec  =  createInteger(str.substring(0,  str.length()  -  1));	  Integer    dec    =    createInteger(str.substring(expPos));    	non-compiled	[CE]  ')'  expected	16	None	replace
40	[BUG]  [BUGGY]  Integer  dec  =  createInteger(str.substring(decPos  +  1));  [CE]  ')'  expected  [FE]                      AssertionError      [CONTEXT]      }  default  :  throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  }  }  else  {    if  (expPos  >  -1  &&  expPos  <  str.length()  -  1)  {      [BUGGY]  Integer  dec  =  createInteger(str.substring(decPos  +  1));  [BUGGY]      exp  =  str.substring(expPos  +  1,  str.length());  }  else  {  exp  =  null;  }  if  (dec  ==  null  &&  exp  ==  null)  {  try  {  return  createInteger(str);  }  catch  (NumberFormatException  nfe)  {  //  NOPMD  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  	projects/Lang7/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	556	556	1	replace	Integer  dec  =  createInteger(str.substring(decPos  +  1));	  Integer    dec    =    createInteger(str.substring(expPos));    	non-compiled	[CE]  ')'  expected	16	None	replace
41	[BUG]  [BUGGY]  Integer  dec  =  createInteger(str.substring(0,  str.length()));  [CE]  ')'  expected  [FE]                        AssertionError      [CONTEXT]      }  default  :  throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  }  }  else  {    if  (expPos  >  -1  &&  expPos  <  str.length()  -  1)  {      [BUGGY]  Integer  dec  =  createInteger(str.substring(0,  str.length()));  [BUGGY]      exp  =  str.substring(expPos  +  1,  str.length());  }  else  {  exp  =  null;  }  if  (dec  ==  null  &&  exp  ==  null)  {  try  {  return  createInteger(str);  }  catch  (NumberFormatException  nfe)  {  //  NOPMD  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  	projects/Lang7/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	556	556	1	replace	Integer  dec  =  createInteger(str.substring(0,  str.length()));	  Integer    dec    =    createInteger(str.substring(expPos));    	non-compiled	[CE]  ')'  expected	16	None	replace
42	[BUG]  [BUGGY]  bucket  <  str.length()  &&  expPos  >  -1  &&  expPos  <  str.length()  -  1)  {  return  createLong(str);  }  [CE]  ')'  expected  [FE]                    AssertionError      [CONTEXT]      }  default  :  throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  }  }  else  {    if  (expPos  >  -1  &&  expPos  <  str.length()  -  1)  {      [BUGGY]  bucket  <  str.length()  &&  expPos  >  -1  &&  expPos  <  str.length()  -  1)  {  return  createLong(str);  }  [BUGGY]      }  else  {  exp  =  null;  }  if  (dec  ==  null  &&  exp  ==  null)  {  try  {  return  createInteger(str);  }  catch  (NumberFormatException  nfe)  {  //  NOPMD  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  	projects/Lang7/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	556	556	1	replace	bucket  <  str.length()  &&  expPos  >  -1  &&  expPos  <  str.length()  -  1)  {  return  createLong(str);  }	  if(expPos    >    -1    &&    expPos    <    str.length()    -    1)    {    return    createLong(str);    }    	non-compiled	[CE]  ')'  expected	36	None	replace
43	[BUG]  [BUGGY]  bucket  <  str.length()  &&  expPos  >  -1  ||  expPos  <  str.length()  -  1)  {  return  createLong(str);  }  [CE]  ')'  expected  [FE]                      AssertionError      [CONTEXT]      }  default  :  throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  }  }  else  {    if  (expPos  >  -1  &&  expPos  <  str.length()  -  1)  {      [BUGGY]  bucket  <  str.length()  &&  expPos  >  -1  ||  expPos  <  str.length()  -  1)  {  return  createLong(str);  }  [BUGGY]      }  else  {  exp  =  null;  }  if  (dec  ==  null  &&  exp  ==  null)  {  try  {  return  createInteger(str);  }  catch  (NumberFormatException  nfe)  {  //  NOPMD  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  	projects/Lang7/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	556	556	1	replace	bucket  <  str.length()  &&  expPos  >  -1  ||  expPos  <  str.length()  -  1)  {  return  createLong(str);  }	  if(expPos    >    -1    &&    expPos    <    str.length()    -    1)    {    return    createLong(str);    }    	non-compiled	[CE]  ')'  expected	36	None	replace
44	[BUG]  [BUGGY]  expPos  >  -1  &&  expPos  <  str.length()  -  1)  {  return  createLong(str);  }  [CE]  ')'  expected  [FE]                        AssertionError      [CONTEXT]      }  default  :  throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  }  }  else  {    if  (expPos  >  -1  &&  expPos  <  str.length()  -  1)  {      [BUGGY]  expPos  >  -1  &&  expPos  <  str.length()  -  1)  {  return  createLong(str);  }  [BUGGY]      }  else  {  exp  =  null;  }  if  (dec  ==  null  &&  exp  ==  null)  {  try  {  return  createInteger(str);  }  catch  (NumberFormatException  nfe)  {  //  NOPMD  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  	projects/Lang7/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	556	556	1	replace	expPos  >  -1  &&  expPos  <  str.length()  -  1)  {  return  createLong(str);  }	  if(expPos    >    -1    &&    expPos    <    str.length()    -    1)    {    return    createLong(str);    }    	non-compiled	[CE]  ')'  expected	36	None	replace
45	[BUG]  [BUGGY]  int  decPos  =  str.lastIndexOf('.')+  1;  [CE]  ')'  expected  [FE]                AssertionError      [CONTEXT]      }  default  :  throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  }  }  else  {    if  (expPos  >  -1  &&  expPos  <  str.length()  -  1)  {      [BUGGY]  int  decPos  =  str.lastIndexOf('.')+  1;  [BUGGY]      exp  =  str.substring(expPos  +  1,  str.length());  }  else  {  exp  =  null;  }  if  (dec  ==  null  &&  exp  ==  null)  {  try  {  return  createInteger(str);  }  catch  (NumberFormatException  nfe)  {  //  NOPMD  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  	projects/Lang7/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	556	556	1	replace	int  decPos  =  str.lastIndexOf('.')+  1;	  int    decPos    =    str.indexOf('.')+    1;    	non-compiled	[CE]  ')'  expected	50	None	replace
46	[BUG]  [BUGGY]  int  decPos  =  str.indexOf('.')+  2;  [CE]  ')'  expected  [FE]                  AssertionError      [CONTEXT]      }  default  :  throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  }  }  else  {    if  (expPos  >  -1  &&  expPos  <  str.length()  -  1)  {      [BUGGY]  int  decPos  =  str.indexOf('.')+  2;  [BUGGY]      exp  =  str.substring(expPos  +  1,  str.length());  }  else  {  exp  =  null;  }  if  (dec  ==  null  &&  exp  ==  null)  {  try  {  return  createInteger(str);  }  catch  (NumberFormatException  nfe)  {  //  NOPMD  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  	projects/Lang7/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	556	556	1	replace	int  decPos  =  str.indexOf('.')+  2;	  int    decPos    =    str.indexOf('.')+    1;    	non-compiled	[CE]  ')'  expected	50	None	replace
47	[BUG]  [BUGGY]  int  decPos  =  str.indexOf('.',  expPos)+  1;  [CE]  ')'  expected  [FE]                    AssertionError      [CONTEXT]      }  default  :  throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  }  }  else  {    if  (expPos  >  -1  &&  expPos  <  str.length()  -  1)  {      [BUGGY]  int  decPos  =  str.indexOf('.',  expPos)+  1;  [BUGGY]      exp  =  str.substring(expPos  +  1,  str.length());  }  else  {  exp  =  null;  }  if  (dec  ==  null  &&  exp  ==  null)  {  try  {  return  createInteger(str);  }  catch  (NumberFormatException  nfe)  {  //  NOPMD  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  	projects/Lang7/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	556	556	1	replace	int  decPos  =  str.indexOf('.',  expPos)+  1;	  int    decPos    =    str.indexOf('.')+    1;    	non-compiled	[CE]  ')'  expected	50	None	replace
48	[BUG]  [BUGGY]  int  expPos  =  str.lastIndexOf('-',  expPos);  [CE]  ')'  expected  [FE]                  AssertionError      [CONTEXT]      }  default  :  throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  }  }  else  {    if  (expPos  >  -1  &&  expPos  <  str.length()  -  1)  {      [BUGGY]  int  expPos  =  str.lastIndexOf('-',  expPos);  [BUGGY]      exp  =  str.substring(expPos  +  1,  str.length());  }  else  {  exp  =  null;  }  if  (dec  ==  null  &&  exp  ==  null)  {  try  {  return  createInteger(str);  }  catch  (NumberFormatException  nfe)  {  //  NOPMD  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  	projects/Lang7/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	556	556	1	replace	int  expPos  =  str.lastIndexOf('-',  expPos);	  int    expPos    =    str.lastIndexOf('-');    	non-compiled	[CE]  ')'  expected	12	None	replace
49	[BUG]  [BUGGY]  int  expPos  =  str.indexOf('-',  expPos);  [CE]  ')'  expected  [FE]                    AssertionError      [CONTEXT]      }  default  :  throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  }  }  else  {    if  (expPos  >  -1  &&  expPos  <  str.length()  -  1)  {      [BUGGY]  int  expPos  =  str.indexOf('-',  expPos);  [BUGGY]      exp  =  str.substring(expPos  +  1,  str.length());  }  else  {  exp  =  null;  }  if  (dec  ==  null  &&  exp  ==  null)  {  try  {  return  createInteger(str);  }  catch  (NumberFormatException  nfe)  {  //  NOPMD  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  	projects/Lang7/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	556	556	1	replace	int  expPos  =  str.indexOf('-',  expPos);	  int    expPos    =    str.lastIndexOf('-');    	non-compiled	[CE]  ')'  expected	12	None	replace
50	[BUG]  [BUGGY]  int  expPos  =  str.lastIndexOf('-',  expPos  +  1);  [CE]  ')'  expected  [FE]                      AssertionError      [CONTEXT]      }  default  :  throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  }  }  else  {    if  (expPos  >  -1  &&  expPos  <  str.length()  -  1)  {      [BUGGY]  int  expPos  =  str.lastIndexOf('-',  expPos  +  1);  [BUGGY]      exp  =  str.substring(expPos  +  1,  str.length());  }  else  {  exp  =  null;  }  if  (dec  ==  null  &&  exp  ==  null)  {  try  {  return  createInteger(str);  }  catch  (NumberFormatException  nfe)  {  //  NOPMD  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  	projects/Lang7/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	556	556	1	replace	int  expPos  =  str.lastIndexOf('-',  expPos  +  1);	  int    expPos    =    str.lastIndexOf('-');    	non-compiled	[CE]  ')'  expected	12	None	replace
51	[BUG]  [BUGGY]  int  expPos  =  str.lastIndexOf('-',  decPos);  [CE]  ')'  expected  [FE]                        AssertionError      [CONTEXT]      }  default  :  throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  }  }  else  {    if  (expPos  >  -1  &&  expPos  <  str.length()  -  1)  {      [BUGGY]  int  expPos  =  str.lastIndexOf('-',  decPos);  [BUGGY]      exp  =  str.substring(expPos  +  1,  str.length());  }  else  {  exp  =  null;  }  if  (dec  ==  null  &&  exp  ==  null)  {  try  {  return  createInteger(str);  }  catch  (NumberFormatException  nfe)  {  //  NOPMD  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  	projects/Lang7/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	556	556	1	replace	int  expPos  =  str.lastIndexOf('-',  decPos);	  int    expPos    =    str.lastIndexOf('-');    	non-compiled	[CE]  ')'  expected	12	None	replace
52	[BUG]  [BUGGY]  char  decPos  =  str.indexOf('.',  expPos);  [CE]  ')'  expected  [FE]                AssertionError      [CONTEXT]      }  default  :  throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  }  }  else  {    if  (expPos  >  -1  &&  expPos  <  str.length()  -  1)  {      [BUGGY]  char  decPos  =  str.indexOf('.',  expPos);  [BUGGY]      exp  =  str.substring(expPos  +  1,  str.length());  }  else  {  exp  =  null;  }  if  (dec  ==  null  &&  exp  ==  null)  {  try  {  return  createInteger(str);  }  catch  (NumberFormatException  nfe)  {  //  NOPMD  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  	projects/Lang7/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	556	556	1	replace	char  decPos  =  str.indexOf('.',  expPos);	  int    decPos    =    str.indexOf('.',    expPos);    	non-compiled	[CE]  ')'  expected	25	None	replace
53	[BUG]  [BUGGY]  expPos  =  str.substring(expPos  +  1,  str.length()  -  1);  [CE]  ')'  expected  [FE]              AssertionError      [CONTEXT]      }  default  :  throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  }  }  else  {    if  (expPos  >  -1  &&  expPos  <  str.length()  -  1)  {      [BUGGY]  expPos  =  str.substring(expPos  +  1,  str.length()  -  1);  [BUGGY]      }  else  {  exp  =  null;  }  if  (dec  ==  null  &&  exp  ==  null)  {  try  {  return  createInteger(str);  }  catch  (NumberFormatException  nfe)  {  //  NOPMD  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  	projects/Lang7/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	556	556	1	replace	expPos  =  str.substring(expPos  +  1,  str.length()  -  1);	  expPos    =    str.substring(expPos    +    1,    str.length());    	non-compiled	[CE]  ')'  expected	3	None	replace
54	[BUG]  [BUGGY]  expPos  =  str.substring(expPos  +  1,  str.length()  -  2);  [CE]  ')'  expected  [FE]                AssertionError      [CONTEXT]      }  default  :  throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  }  }  else  {    if  (expPos  >  -1  &&  expPos  <  str.length()  -  1)  {      [BUGGY]  expPos  =  str.substring(expPos  +  1,  str.length()  -  2);  [BUGGY]      }  else  {  exp  =  null;  }  if  (dec  ==  null  &&  exp  ==  null)  {  try  {  return  createInteger(str);  }  catch  (NumberFormatException  nfe)  {  //  NOPMD  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  	projects/Lang7/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	556	556	1	replace	expPos  =  str.substring(expPos  +  1,  str.length()  -  2);	  expPos    =    str.substring(expPos    +    1,    str.length());    	non-compiled	[CE]  ')'  expected	3	None	replace
55	[BUG]  [BUGGY]  expPos  =  str.substring(expPos  +  1,  str.length()  +  1);  [CE]  ')'  expected  [FE]                  AssertionError      [CONTEXT]      }  default  :  throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  }  }  else  {    if  (expPos  >  -1  &&  expPos  <  str.length()  -  1)  {      [BUGGY]  expPos  =  str.substring(expPos  +  1,  str.length()  +  1);  [BUGGY]      }  else  {  exp  =  null;  }  if  (dec  ==  null  &&  exp  ==  null)  {  try  {  return  createInteger(str);  }  catch  (NumberFormatException  nfe)  {  //  NOPMD  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  	projects/Lang7/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	556	556	1	replace	expPos  =  str.substring(expPos  +  1,  str.length()  +  1);	  expPos    =    str.substring(expPos    +    1,    str.length());    	non-compiled	[CE]  ')'  expected	3	None	replace
56	[BUG]  [BUGGY]  expPos  =  str.substring(0,  str.length()  -  1);  [CE]  ')'  expected  [FE]                    AssertionError      [CONTEXT]      }  default  :  throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  }  }  else  {    if  (expPos  >  -1  &&  expPos  <  str.length()  -  1)  {      [BUGGY]  expPos  =  str.substring(0,  str.length()  -  1);  [BUGGY]      }  else  {  exp  =  null;  }  if  (dec  ==  null  &&  exp  ==  null)  {  try  {  return  createInteger(str);  }  catch  (NumberFormatException  nfe)  {  //  NOPMD  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  	projects/Lang7/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	556	556	1	replace	expPos  =  str.substring(0,  str.length()  -  1);	  expPos    =    str.substring(expPos    +    1,    str.length());    	non-compiled	[CE]  ')'  expected	3	None	replace
57	[BUG]  [BUGGY]  exp  =  str.substring(0,  str.length()  -  1)+  1;  [CE]  ')'  expected  [FE]                  AssertionError      [CONTEXT]      }  default  :  throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  }  }  else  {    if  (expPos  >  -1  &&  expPos  <  str.length()  -  1)  {      [BUGGY]  exp  =  str.substring(0,  str.length()  -  1)+  1;  [BUGGY]      }  else  {  exp  =  null;  }  if  (dec  ==  null  &&  exp  ==  null)  {  try  {  return  createInteger(str);  }  catch  (NumberFormatException  nfe)  {  //  NOPMD  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  	projects/Lang7/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	556	556	1	replace	exp  =  str.substring(0,  str.length()  -  1)+  1;	  exp    =    str.substring(0,    str.length())+    1;    	non-compiled	[CE]  ')'  expected	55	None	replace
58	[BUG]  [BUGGY]  exp  =  str.substring(0,  str.length()  +  1)+  1;  [CE]  ')'  expected  [FE]                    AssertionError      [CONTEXT]      }  default  :  throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  }  }  else  {    if  (expPos  >  -1  &&  expPos  <  str.length()  -  1)  {      [BUGGY]  exp  =  str.substring(0,  str.length()  +  1)+  1;  [BUGGY]      }  else  {  exp  =  null;  }  if  (dec  ==  null  &&  exp  ==  null)  {  try  {  return  createInteger(str);  }  catch  (NumberFormatException  nfe)  {  //  NOPMD  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  	projects/Lang7/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	556	556	1	replace	exp  =  str.substring(0,  str.length()  +  1)+  1;	  exp    =    str.substring(0,    str.length())+    1;    	non-compiled	[CE]  ')'  expected	55	None	replace
59	[BUG]  [BUGGY]  NeighborDecimal  str  =  getNumberDecimal(str,  expPos);  [CE]  ')'  expected  [FE]                      AssertionError      [CONTEXT]      }  default  :  throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  }  }  else  {    if  (expPos  >  -1  &&  expPos  <  str.length()  -  1)  {      [BUGGY]  NeighborDecimal  str  =  getNumberDecimal(str,  expPos);  [BUGGY]      }  else  {  exp  =  null;  }  if  (dec  ==  null  &&  exp  ==  null)  {  try  {  return  createInteger(str);  }  catch  (NumberFormatException  nfe)  {  //  NOPMD  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  	projects/Lang7/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	556	556	1	replace	NeighborDecimal  str  =  getNumberDecimal(str,  expPos);	  if(dec    ==    null    &&    exp    ==    null)    {    return    createInteger(str);    }    	non-compiled	[CE]  ')'  expected	53	None	replace
60	[BUG]  [BUGGY]  NeighborDecimal  str  =  getNumberDecimal(str);  [CE]  ')'  expected  [FE]                        AssertionError      [CONTEXT]      }  default  :  throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  }  }  else  {    if  (expPos  >  -1  &&  expPos  <  str.length()  -  1)  {      [BUGGY]  NeighborDecimal  str  =  getNumberDecimal(str);  [BUGGY]      }  else  {  exp  =  null;  }  if  (dec  ==  null  &&  exp  ==  null)  {  try  {  return  createInteger(str);  }  catch  (NumberFormatException  nfe)  {  //  NOPMD  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  	projects/Lang7/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	556	556	1	replace	NeighborDecimal  str  =  getNumberDecimal(str);	  if(dec    ==    null    &&    exp    ==    null)    {    return    createInteger(str);    }    	non-compiled	[CE]  ')'  expected	53	None	replace
61	[BUG]  [BUGGY]  NeighborDecimal  str  =  generateNumberDecimal(str,  expPos);  [CE]  ')'  expected  [FE]                          AssertionError      [CONTEXT]      }  default  :  throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  }  }  else  {    if  (expPos  >  -1  &&  expPos  <  str.length()  -  1)  {      [BUGGY]  NeighborDecimal  str  =  generateNumberDecimal(str,  expPos);  [BUGGY]      }  else  {  exp  =  null;  }  if  (dec  ==  null  &&  exp  ==  null)  {  try  {  return  createInteger(str);  }  catch  (NumberFormatException  nfe)  {  //  NOPMD  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  	projects/Lang7/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	556	556	1	replace	NeighborDecimal  str  =  generateNumberDecimal(str,  expPos);	  if(dec    ==    null    &&    exp    ==    null)    {    return    createInteger(str);    }    	non-compiled	[CE]  ')'  expected	53	None	replace
62	[BUG]  [BUGGY]  NeighborDecimal  str  =  generateNumberDecimal(str);  [CE]  ')'  expected  [FE]                            AssertionError      [CONTEXT]      }  default  :  throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  }  }  else  {    if  (expPos  >  -1  &&  expPos  <  str.length()  -  1)  {      [BUGGY]  NeighborDecimal  str  =  generateNumberDecimal(str);  [BUGGY]      }  else  {  exp  =  null;  }  if  (dec  ==  null  &&  exp  ==  null)  {  try  {  return  createInteger(str);  }  catch  (NumberFormatException  nfe)  {  //  NOPMD  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  	projects/Lang7/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	556	556	1	replace	NeighborDecimal  str  =  generateNumberDecimal(str);	  if(dec    ==    null    &&    exp    ==    null)    {    return    createInteger(str);    }    	non-compiled	[CE]  ')'  expected	53	None	replace
63	[BUG]  [BUGGY]  int  expPos  =  str.lastIndexOf('.',  expPos  +  2);  [CE]  ')'  expected  [FE]                AssertionError      [CONTEXT]      }  default  :  throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  }  }  else  {    if  (expPos  >  -1  &&  expPos  <  str.length()  -  1)  {      [BUGGY]  int  expPos  =  str.lastIndexOf('.',  expPos  +  2);  [BUGGY]      exp  =  str.substring(expPos  +  1,  str.length());  }  else  {  exp  =  null;  }  if  (dec  ==  null  &&  exp  ==  null)  {  try  {  return  createInteger(str);  }  catch  (NumberFormatException  nfe)  {  //  NOPMD  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  	projects/Lang7/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	556	556	1	replace	int  expPos  =  str.lastIndexOf('.',  expPos  +  2);	  int    expPos    =    str.lastIndexOf('.',    expPos    +    1);    	non-compiled	[CE]  ')'  expected	1	None	replace
64	[BUG]  [BUGGY]  int  expPos  =  str.lastIndexOf('.')+  2;  [CE]  ')'  expected  [FE]              AssertionError      [CONTEXT]      }  default  :  throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  }  }  else  {    if  (expPos  >  -1  &&  expPos  <  str.length()  -  1)  {      [BUGGY]  int  expPos  =  str.lastIndexOf('.')+  2;  [BUGGY]      exp  =  str.substring(expPos  +  1,  str.length());  }  else  {  exp  =  null;  }  if  (dec  ==  null  &&  exp  ==  null)  {  try  {  return  createInteger(str);  }  catch  (NumberFormatException  nfe)  {  //  NOPMD  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  	projects/Lang7/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	556	556	1	replace	int  expPos  =  str.lastIndexOf('.')+  2;	  int    expPos    =    str.lastIndexOf('.')+    1;    	non-compiled	[CE]  ')'  expected	58	None	replace
65	[BUG]  [BUGGY]  int  expPos  =  str.lastIndexOf('.',  expPos)+  1;  [CE]  ')'  expected  [FE]                AssertionError      [CONTEXT]      }  default  :  throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  }  }  else  {    if  (expPos  >  -1  &&  expPos  <  str.length()  -  1)  {      [BUGGY]  int  expPos  =  str.lastIndexOf('.',  expPos)+  1;  [BUGGY]      exp  =  str.substring(expPos  +  1,  str.length());  }  else  {  exp  =  null;  }  if  (dec  ==  null  &&  exp  ==  null)  {  try  {  return  createInteger(str);  }  catch  (NumberFormatException  nfe)  {  //  NOPMD  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  	projects/Lang7/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	556	556	1	replace	int  expPos  =  str.lastIndexOf('.',  expPos)+  1;	  int    expPos    =    str.lastIndexOf('.')+    1;    	non-compiled	[CE]  ')'  expected	58	None	replace
66	[BUG]  [BUGGY]  int  decPos  =  str.indexOf('.',  expPos  -  1  +  1);  [CE]  ')'  expected  [FE]              AssertionError      [CONTEXT]      }  default  :  throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  }  }  else  {    if  (expPos  >  -1  &&  expPos  <  str.length()  -  1)  {      [BUGGY]  int  decPos  =  str.indexOf('.',  expPos  -  1  +  1);  [BUGGY]      exp  =  str.substring(expPos  +  1,  str.length());  }  else  {  exp  =  null;  }  if  (dec  ==  null  &&  exp  ==  null)  {  try  {  return  createInteger(str);  }  catch  (NumberFormatException  nfe)  {  //  NOPMD  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  	projects/Lang7/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	556	556	1	replace	int  decPos  =  str.indexOf('.',  expPos  -  1  +  1);	  int    decPos    =    str.indexOf('.',    expPos    -    1);    	non-compiled	[CE]  ')'  expected	56	None	replace
67	[BUG]  [BUGGY]  int  decPos  =  str.length()  +  1;  [CE]  ')'  expected  [FE]                AssertionError      [CONTEXT]      }  default  :  throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  }  }  else  {    if  (expPos  >  -1  &&  expPos  <  str.length()  -  1)  {      [BUGGY]  int  decPos  =  str.length()  +  1;  [BUGGY]      exp  =  str.substring(expPos  +  1,  str.length());  }  else  {  exp  =  null;  }  if  (dec  ==  null  &&  exp  ==  null)  {  try  {  return  createInteger(str);  }  catch  (NumberFormatException  nfe)  {  //  NOPMD  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  	projects/Lang7/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	556	556	1	replace	int  decPos  =  str.length()  +  1;	  int    decPos    =    str.length();    	non-compiled	[CE]  ')'  expected	35	None	replace
68	[BUG]  [BUGGY]  int  decPos  =  str.length()  -  1;  [CE]  ')'  expected  [FE]                  AssertionError      [CONTEXT]      }  default  :  throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  }  }  else  {    if  (expPos  >  -1  &&  expPos  <  str.length()  -  1)  {      [BUGGY]  int  decPos  =  str.length()  -  1;  [BUGGY]      exp  =  str.substring(expPos  +  1,  str.length());  }  else  {  exp  =  null;  }  if  (dec  ==  null  &&  exp  ==  null)  {  try  {  return  createInteger(str);  }  catch  (NumberFormatException  nfe)  {  //  NOPMD  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  	projects/Lang7/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	556	556	1	replace	int  decPos  =  str.length()  -  1;	  int    decPos    =    str.length();    	non-compiled	[CE]  ')'  expected	35	None	replace
69	[BUG]  [BUGGY]  int  decPos  =  expPos  +  str.length();  [CE]  ')'  expected  [FE]                    AssertionError      [CONTEXT]      }  default  :  throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  }  }  else  {    if  (expPos  >  -1  &&  expPos  <  str.length()  -  1)  {      [BUGGY]  int  decPos  =  expPos  +  str.length();  [BUGGY]      exp  =  str.substring(expPos  +  1,  str.length());  }  else  {  exp  =  null;  }  if  (dec  ==  null  &&  exp  ==  null)  {  try  {  return  createInteger(str);  }  catch  (NumberFormatException  nfe)  {  //  NOPMD  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  	projects/Lang7/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	556	556	1	replace	int  decPos  =  expPos  +  str.length();	  int    decPos    =    str.length();    	non-compiled	[CE]  ')'  expected	35	None	replace
70	[BUG]  [BUGGY]  int  decPos  =  str.lastIndexOf('-');  [CE]  ')'  expected  [FE]                      AssertionError      [CONTEXT]      }  default  :  throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  }  }  else  {    if  (expPos  >  -1  &&  expPos  <  str.length()  -  1)  {      [BUGGY]  int  decPos  =  str.lastIndexOf('-');  [BUGGY]      exp  =  str.substring(expPos  +  1,  str.length());  }  else  {  exp  =  null;  }  if  (dec  ==  null  &&  exp  ==  null)  {  try  {  return  createInteger(str);  }  catch  (NumberFormatException  nfe)  {  //  NOPMD  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  	projects/Lang7/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	556	556	1	replace	int  decPos  =  str.lastIndexOf('-');	  int    decPos    =    str.length();    	non-compiled	[CE]  ')'  expected	35	None	replace
71	[BUG]  [BUGGY]  int  expPos  =  str.indexOf('.',  expPos  -  1  +  1);  [CE]  ')'  expected  [FE]                        AssertionError      [CONTEXT]      }  default  :  throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  }  }  else  {    if  (expPos  >  -1  &&  expPos  <  str.length()  -  1)  {      [BUGGY]  int  expPos  =  str.indexOf('.',  expPos  -  1  +  1);  [BUGGY]      exp  =  str.substring(expPos  +  1,  str.length());  }  else  {  exp  =  null;  }  if  (dec  ==  null  &&  exp  ==  null)  {  try  {  return  createInteger(str);  }  catch  (NumberFormatException  nfe)  {  //  NOPMD  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  	projects/Lang7/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	556	556	1	replace	int  expPos  =  str.indexOf('.',  expPos  -  1  +  1);	  int    expPos    =    str.indexOf('.',    expPos    -    1);    	non-compiled	[CE]  ')'  expected	19	None	replace
72	[BUG]  [BUGGY]  exp  =  null;  [CE]  ')'  expected  [FE]                    AssertionError      [CONTEXT]      }  default  :  throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  }  }  else  {    if  (expPos  >  -1  &&  expPos  <  str.length()  -  1)  {      [BUGGY]  exp  =  null;  [BUGGY]      }  else  {  exp  =  null;  }  if  (dec  ==  null  &&  exp  ==  null)  {  try  {  return  createInteger(str);  }  catch  (NumberFormatException  nfe)  {  //  NOPMD  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  	projects/Lang7/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	556	556	1	replace	exp  =  null;	  if(expPos    >    -1    &&    expPos    <    str.length()    -    1)    {    exp    =    null;    }    	non-compiled	[CE]  ')'  expected	45	None	replace
73	[BUG]  [BUGGY]  ExpPos  expPos  =  str.length()  -  1;  [CE]  ')'  expected  [FE]                      AssertionError      [CONTEXT]      }  default  :  throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  }  }  else  {    if  (expPos  >  -1  &&  expPos  <  str.length()  -  1)  {      [BUGGY]  ExpPos  expPos  =  str.length()  -  1;  [BUGGY]      }  else  {  exp  =  null;  }  if  (dec  ==  null  &&  exp  ==  null)  {  try  {  return  createInteger(str);  }  catch  (NumberFormatException  nfe)  {  //  NOPMD  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  	projects/Lang7/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	556	556	1	replace	ExpPos  expPos  =  str.length()  -  1;	  if(expPos    >    -1    &&    expPos    <    str.length()    -    1)    {    exp    =    null;    }    	non-compiled	[CE]  ')'  expected	45	None	replace
74	[BUG]  [BUGGY]  ExpPos  expPos  =  str.length();  [CE]  ')'  expected  [FE]                        AssertionError      [CONTEXT]      }  default  :  throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  }  }  else  {    if  (expPos  >  -1  &&  expPos  <  str.length()  -  1)  {      [BUGGY]  ExpPos  expPos  =  str.length();  [BUGGY]      }  else  {  exp  =  null;  }  if  (dec  ==  null  &&  exp  ==  null)  {  try  {  return  createInteger(str);  }  catch  (NumberFormatException  nfe)  {  //  NOPMD  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  	projects/Lang7/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	556	556	1	replace	ExpPos  expPos  =  str.length();	  if(expPos    >    -1    &&    expPos    <    str.length()    -    1)    {    exp    =    null;    }    	non-compiled	[CE]  ')'  expected	45	None	replace
75	[BUG]  [BUGGY]  ExpPos  exp  =  null;  [CE]  ')'  expected  [FE]                          AssertionError      [CONTEXT]      }  default  :  throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  }  }  else  {    if  (expPos  >  -1  &&  expPos  <  str.length()  -  1)  {      [BUGGY]  ExpPos  exp  =  null;  [BUGGY]      }  else  {  exp  =  null;  }  if  (dec  ==  null  &&  exp  ==  null)  {  try  {  return  createInteger(str);  }  catch  (NumberFormatException  nfe)  {  //  NOPMD  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  	projects/Lang7/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	556	556	1	replace	ExpPos  exp  =  null;	  if(expPos    >    -1    &&    expPos    <    str.length()    -    1)    {    exp    =    null;    }    	non-compiled	[CE]  ')'  expected	45	None	replace
76	[BUG]  [BUGGY]  exp  -=  str.substring(expPos  +  1,  str.length()  -  1);  [CE]  ')'  expected  [FE]              AssertionError      [CONTEXT]      }  default  :  throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  }  }  else  {    if  (expPos  >  -1  &&  expPos  <  str.length()  -  1)  {      [BUGGY]  exp  -=  str.substring(expPos  +  1,  str.length()  -  1);  [BUGGY]      }  else  {  exp  =  null;  }  if  (dec  ==  null  &&  exp  ==  null)  {  try  {  return  createInteger(str);  }  catch  (NumberFormatException  nfe)  {  //  NOPMD  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  	projects/Lang7/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	556	556	1	replace	exp  -=  str.substring(expPos  +  1,  str.length()  -  1);	  exp    -=    str.substring(expPos    +    1,    str.length());    	non-compiled	[CE]  ')'  expected	51	None	replace
77	[BUG]  [BUGGY]  exp  -=  str.substring(expPos  +  1,  str.length()  -  2);  [CE]  ')'  expected  [FE]                AssertionError      [CONTEXT]      }  default  :  throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  }  }  else  {    if  (expPos  >  -1  &&  expPos  <  str.length()  -  1)  {      [BUGGY]  exp  -=  str.substring(expPos  +  1,  str.length()  -  2);  [BUGGY]      }  else  {  exp  =  null;  }  if  (dec  ==  null  &&  exp  ==  null)  {  try  {  return  createInteger(str);  }  catch  (NumberFormatException  nfe)  {  //  NOPMD  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  	projects/Lang7/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	556	556	1	replace	exp  -=  str.substring(expPos  +  1,  str.length()  -  2);	  exp    -=    str.substring(expPos    +    1,    str.length());    	non-compiled	[CE]  ')'  expected	51	None	replace
78	[BUG]  [BUGGY]  exp  -=  str.substring(expPos  +  1,  str.length()  +  1);  [CE]  ')'  expected  [FE]                  AssertionError      [CONTEXT]      }  default  :  throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  }  }  else  {    if  (expPos  >  -1  &&  expPos  <  str.length()  -  1)  {      [BUGGY]  exp  -=  str.substring(expPos  +  1,  str.length()  +  1);  [BUGGY]      }  else  {  exp  =  null;  }  if  (dec  ==  null  &&  exp  ==  null)  {  try  {  return  createInteger(str);  }  catch  (NumberFormatException  nfe)  {  //  NOPMD  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  	projects/Lang7/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	556	556	1	replace	exp  -=  str.substring(expPos  +  1,  str.length()  +  1);	  exp    -=    str.substring(expPos    +    1,    str.length());    	non-compiled	[CE]  ')'  expected	51	None	replace
79	[BUG]  [BUGGY]  exp  -=  str.substring(0,  str.length()  -  1);  [CE]  ')'  expected  [FE]                    AssertionError      [CONTEXT]      }  default  :  throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  }  }  else  {    if  (expPos  >  -1  &&  expPos  <  str.length()  -  1)  {      [BUGGY]  exp  -=  str.substring(0,  str.length()  -  1);  [BUGGY]      }  else  {  exp  =  null;  }  if  (dec  ==  null  &&  exp  ==  null)  {  try  {  return  createInteger(str);  }  catch  (NumberFormatException  nfe)  {  //  NOPMD  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  	projects/Lang7/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	556	556	1	replace	exp  -=  str.substring(0,  str.length()  -  1);	  exp    -=    str.substring(expPos    +    1,    str.length());    	non-compiled	[CE]  ')'  expected	51	None	replace
80	[BUG]  [BUGGY]  exp  =  string.substring(expPos  +  1,  str.length()  -  1);  [CE]  ')'  expected  [FE]            AssertionError      [CONTEXT]      }  default  :  throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  }  }  else  {    if  (expPos  >  -1  &&  expPos  <  str.length()  -  1)  {      [BUGGY]  exp  =  string.substring(expPos  +  1,  str.length()  -  1);  [BUGGY]      }  else  {  exp  =  null;  }  if  (dec  ==  null  &&  exp  ==  null)  {  try  {  return  createInteger(str);  }  catch  (NumberFormatException  nfe)  {  //  NOPMD  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  	projects/Lang7/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	556	556	1	replace	exp  =  string.substring(expPos  +  1,  str.length()  -  1);	  exp    =    string.substring(expPos    +    1,    str.length());    	non-compiled	[CE]  ')'  expected	6	None	replace
81	[BUG]  [BUGGY]  exp  =  str.substring(expPos  +  1,  string.length());  [CE]  ')'  expected  [FE]              AssertionError      [CONTEXT]      }  default  :  throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  }  }  else  {    if  (expPos  >  -1  &&  expPos  <  str.length()  -  1)  {      [BUGGY]  exp  =  str.substring(expPos  +  1,  string.length());  [BUGGY]      }  else  {  exp  =  null;  }  if  (dec  ==  null  &&  exp  ==  null)  {  try  {  return  createInteger(str);  }  catch  (NumberFormatException  nfe)  {  //  NOPMD  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  	projects/Lang7/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	556	556	1	replace	exp  =  str.substring(expPos  +  1,  string.length());	  exp    =    string.substring(expPos    +    1,    str.length());    	non-compiled	[CE]  ')'  expected	6	None	replace
82	[BUG]  [BUGGY]  String  str  =  str.substring(0,  str.length();  [CE]  ')'  expected  [FE]              AssertionError      [CONTEXT]      }  default  :  throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  }  }  else  {    if  (expPos  >  -1  &&  expPos  <  str.length()  -  1)  {      [BUGGY]  String  str  =  str.substring(0,  str.length();  [BUGGY]      exp  =  str.substring(expPos  +  1,  str.length());  }  else  {  exp  =  null;  }  if  (dec  ==  null  &&  exp  ==  null)  {  try  {  return  createInteger(str);  }  catch  (NumberFormatException  nfe)  {  //  NOPMD  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  	projects/Lang7/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	556	556	1	replace	String  str  =  str.substring(0,  str.length();	  String    str    =    str.substring(0,    str.length()    +    1);    	non-compiled	[CE]  ')'  expected	8	None	replace
83	[BUG]  [BUGGY]  String  str  =  str.substring(0,  str.length()  -  2);  [CE]  ')'  expected  [FE]                AssertionError      [CONTEXT]      }  default  :  throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  }  }  else  {    if  (expPos  >  -1  &&  expPos  <  str.length()  -  1)  {      [BUGGY]  String  str  =  str.substring(0,  str.length()  -  2);  [BUGGY]      exp  =  str.substring(expPos  +  1,  str.length());  }  else  {  exp  =  null;  }  if  (dec  ==  null  &&  exp  ==  null)  {  try  {  return  createInteger(str);  }  catch  (NumberFormatException  nfe)  {  //  NOPMD  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  	projects/Lang7/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	556	556	1	replace	String  str  =  str.substring(0,  str.length()  -  2);	  String    str    =    str.substring(0,    expPos.length());    	non-compiled	[CE]  ')'  expected	9	None	replace
84	[BUG]  [BUGGY]  Integer  dec  =  createInteger(str.substring(expPos  +  1),  str.length());  [CE]  ')'  expected  [FE]            AssertionError      [CONTEXT]      }  default  :  throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  }  }  else  {    if  (expPos  >  -1  &&  expPos  <  str.length()  -  1)  {      [BUGGY]  Integer  dec  =  createInteger(str.substring(expPos  +  1),  str.length());  [BUGGY]      exp  =  str.substring(expPos  +  1,  str.length());  }  else  {  exp  =  null;  }  if  (dec  ==  null  &&  exp  ==  null)  {  try  {  return  createInteger(str);  }  catch  (NumberFormatException  nfe)  {  //  NOPMD  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  	projects/Lang7/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	556	556	1	replace	Integer  dec  =  createInteger(str.substring(expPos  +  1),  str.length());	  Integer    dec    =    createInteger(str.substring(expPos    +    1));    	non-compiled	[CE]  ')'  expected	54	None	replace
85	[BUG]  [BUGGY]  Integer  dec  =  createInteger(str.substring(expPos  +  1)+  1);  [CE]  ')'  expected  [FE]              AssertionError      [CONTEXT]      }  default  :  throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  }  }  else  {    if  (expPos  >  -1  &&  expPos  <  str.length()  -  1)  {      [BUGGY]  Integer  dec  =  createInteger(str.substring(expPos  +  1)+  1);  [BUGGY]      exp  =  str.substring(expPos  +  1,  str.length());  }  else  {  exp  =  null;  }  if  (dec  ==  null  &&  exp  ==  null)  {  try  {  return  createInteger(str);  }  catch  (NumberFormatException  nfe)  {  //  NOPMD  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  	projects/Lang7/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	556	556	1	replace	Integer  dec  =  createInteger(str.substring(expPos  +  1)+  1);	  Integer    dec    =    createInteger(str.substring(expPos    +    1));    	non-compiled	[CE]  ')'  expected	54	None	replace
86	[BUG]  [BUGGY]  Integer  dec  =  createInteger(str.substring(expPos  +  1,  str.length()));  [CE]  ')'  expected  [FE]                AssertionError      [CONTEXT]      }  default  :  throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  }  }  else  {    if  (expPos  >  -1  &&  expPos  <  str.length()  -  1)  {      [BUGGY]  Integer  dec  =  createInteger(str.substring(expPos  +  1,  str.length()));  [BUGGY]      exp  =  str.substring(expPos  +  1,  str.length());  }  else  {  exp  =  null;  }  if  (dec  ==  null  &&  exp  ==  null)  {  try  {  return  createInteger(str);  }  catch  (NumberFormatException  nfe)  {  //  NOPMD  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  	projects/Lang7/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	556	556	1	replace	Integer  dec  =  createInteger(str.substring(expPos  +  1,  str.length()));	  Integer    dec    =    createInteger(str.substring(expPos    +    1));    	non-compiled	[CE]  ')'  expected	54	None	replace
87	[BUG]  [BUGGY]  Integer  dec  =  createInteger(str,  expPos  +  1);  [CE]  ')'  expected  [FE]              AssertionError      [CONTEXT]      }  default  :  throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  }  }  else  {    if  (expPos  >  -1  &&  expPos  <  str.length()  -  1)  {      [BUGGY]  Integer  dec  =  createInteger(str,  expPos  +  1);  [BUGGY]      exp  =  str.substring(expPos  +  1,  str.length());  }  else  {  exp  =  null;  }  if  (dec  ==  null  &&  exp  ==  null)  {  try  {  return  createInteger(str);  }  catch  (NumberFormatException  nfe)  {  //  NOPMD  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  	projects/Lang7/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	556	556	1	replace	Integer  dec  =  createInteger(str,  expPos  +  1);	  Integer    dec    =    createInteger(str,    expPos);    	non-compiled	[CE]  ')'  expected	14	None	replace
88	[BUG]  [BUGGY]  Integer  dec  =  createInteger(str,  str.length());  [CE]  ')'  expected  [FE]                AssertionError      [CONTEXT]      }  default  :  throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  }  }  else  {    if  (expPos  >  -1  &&  expPos  <  str.length()  -  1)  {      [BUGGY]  Integer  dec  =  createInteger(str,  str.length());  [BUGGY]      exp  =  str.substring(expPos  +  1,  str.length());  }  else  {  exp  =  null;  }  if  (dec  ==  null  &&  exp  ==  null)  {  try  {  return  createInteger(str);  }  catch  (NumberFormatException  nfe)  {  //  NOPMD  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  	projects/Lang7/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	556	556	1	replace	Integer  dec  =  createInteger(str,  str.length());	  Integer    dec    =    createInteger(str,    expPos);    	non-compiled	[CE]  ')'  expected	14	None	replace
89	[BUG]  [BUGGY]  Integer  dec  =  createInteger(str,  1);  [CE]  ')'  expected  [FE]                  AssertionError      [CONTEXT]      }  default  :  throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  }  }  else  {    if  (expPos  >  -1  &&  expPos  <  str.length()  -  1)  {      [BUGGY]  Integer  dec  =  createInteger(str,  1);  [BUGGY]      exp  =  str.substring(expPos  +  1,  str.length());  }  else  {  exp  =  null;  }  if  (dec  ==  null  &&  exp  ==  null)  {  try  {  return  createInteger(str);  }  catch  (NumberFormatException  nfe)  {  //  NOPMD  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  	projects/Lang7/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	556	556	1	replace	Integer  dec  =  createInteger(str,  1);	  Integer    dec    =    createInteger(str,    expPos);    	non-compiled	[CE]  ')'  expected	14	None	replace
90	[BUG]  [BUGGY]  Integer  dec  =  createInteger(str,  str.length()  -  1);  [CE]  ')'  expected  [FE]                    AssertionError      [CONTEXT]      }  default  :  throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  }  }  else  {    if  (expPos  >  -1  &&  expPos  <  str.length()  -  1)  {      [BUGGY]  Integer  dec  =  createInteger(str,  str.length()  -  1);  [BUGGY]      exp  =  str.substring(expPos  +  1,  str.length());  }  else  {  exp  =  null;  }  if  (dec  ==  null  &&  exp  ==  null)  {  try  {  return  createInteger(str);  }  catch  (NumberFormatException  nfe)  {  //  NOPMD  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  	projects/Lang7/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	556	556	1	replace	Integer  dec  =  createInteger(str,  str.length()  -  1);	  Integer    dec    =    createInteger(str,    expPos);    	non-compiled	[CE]  ')'  expected	14	None	replace
91	[BUG]  [BUGGY]  Integer  dec  =  createInteger(str.substring(expPos,  str.length()));  [CE]  ')'  expected  [FE]                AssertionError      [CONTEXT]      }  default  :  throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  }  }  else  {    if  (expPos  >  -1  &&  expPos  <  str.length()  -  1)  {      [BUGGY]  Integer  dec  =  createInteger(str.substring(expPos,  str.length()));  [BUGGY]      exp  =  str.substring(expPos  +  1,  str.length());  }  else  {  exp  =  null;  }  if  (dec  ==  null  &&  exp  ==  null)  {  try  {  return  createInteger(str);  }  catch  (NumberFormatException  nfe)  {  //  NOPMD  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  	projects/Lang7/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	556	556	1	replace	Integer  dec  =  createInteger(str.substring(expPos,  str.length()));	  Integer    dec    =    createInteger(str.length());    	non-compiled	[CE]  ')'  expected	15	None	replace
92	[BUG]  [BUGGY]  char  expPos  =  str.length();  [CE]  ')'  expected  [FE]              AssertionError      [CONTEXT]      }  default  :  throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  }  }  else  {    if  (expPos  >  -1  &&  expPos  <  str.length()  -  1)  {      [BUGGY]  char  expPos  =  str.length();  [BUGGY]      exp  =  str.substring(expPos  +  1,  str.length());  }  else  {  exp  =  null;  }  if  (dec  ==  null  &&  exp  ==  null)  {  try  {  return  createInteger(str);  }  catch  (NumberFormatException  nfe)  {  //  NOPMD  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  	projects/Lang7/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	556	556	1	replace	char  expPos  =  str.length();	  int    expPos    =    str.length()    -    1;    	non-compiled	[CE]  ')'  expected	10	None	replace
93	[BUG]  [BUGGY]  Integer  expPos  =  str.length();  [CE]  ')'  expected  [FE]                AssertionError      [CONTEXT]      }  default  :  throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  }  }  else  {    if  (expPos  >  -1  &&  expPos  <  str.length()  -  1)  {      [BUGGY]  Integer  expPos  =  str.length();  [BUGGY]      exp  =  str.substring(expPos  +  1,  str.length());  }  else  {  exp  =  null;  }  if  (dec  ==  null  &&  exp  ==  null)  {  try  {  return  createInteger(str);  }  catch  (NumberFormatException  nfe)  {  //  NOPMD  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  	projects/Lang7/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	556	556	1	replace	Integer  expPos  =  str.length();	  int    expPos    =    str.length()    -    1;    	non-compiled	[CE]  ')'  expected	10	None	replace
94	[BUG]  [BUGGY]  String  str  =  str.substring(expPos  +  1,  str.length()).trim();  [CE]  ')'  expected  [FE]                    AssertionError      [CONTEXT]      }  default  :  throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  }  }  else  {    if  (expPos  >  -1  &&  expPos  <  str.length()  -  1)  {      [BUGGY]  String  str  =  str.substring(expPos  +  1,  str.length()).trim();  [BUGGY]      exp  =  str.substring(expPos  +  1,  str.length());  }  else  {  exp  =  null;  }  if  (dec  ==  null  &&  exp  ==  null)  {  try  {  return  createInteger(str);  }  catch  (NumberFormatException  nfe)  {  //  NOPMD  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  	projects/Lang7/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	556	556	1	replace	String  str  =  str.substring(expPos  +  1,  str.length()).trim();	  String    str    =    str.substring(expPos    +    1,    str.length()    +    1);    	non-compiled	[CE]  ')'  expected	27	None	replace
95	[BUG]  [BUGGY]  String  str  =  str.substring(expPos  +  1,  str.length();  [CE]  ')'  expected  [FE]                      AssertionError      [CONTEXT]      }  default  :  throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  }  }  else  {    if  (expPos  >  -1  &&  expPos  <  str.length()  -  1)  {      [BUGGY]  String  str  =  str.substring(expPos  +  1,  str.length();  [BUGGY]      exp  =  str.substring(expPos  +  1,  str.length());  }  else  {  exp  =  null;  }  if  (dec  ==  null  &&  exp  ==  null)  {  try  {  return  createInteger(str);  }  catch  (NumberFormatException  nfe)  {  //  NOPMD  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  	projects/Lang7/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	556	556	1	replace	String  str  =  str.substring(expPos  +  1,  str.length();	  String    str    =    str.substring(expPos    +    1,    str.length()    +    1);    	non-compiled	[CE]  ')'  expected	27	None	replace
96	[BUG]  [BUGGY]  int  expPos  =  str.lastIndexOf('  ')+  2;  [CE]  ')'  expected  [FE]                AssertionError      [CONTEXT]      }  default  :  throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  }  }  else  {    if  (expPos  >  -1  &&  expPos  <  str.length()  -  1)  {      [BUGGY]  int  expPos  =  str.lastIndexOf('  ')+  2;  [BUGGY]      exp  =  str.substring(expPos  +  1,  str.length());  }  else  {  exp  =  null;  }  if  (dec  ==  null  &&  exp  ==  null)  {  try  {  return  createInteger(str);  }  catch  (NumberFormatException  nfe)  {  //  NOPMD  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  	projects/Lang7/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	556	556	1	replace	int  expPos  =  str.lastIndexOf('  ')+  2;	  int    expPos    =    str.lastIndexOf('    ')+    1;    	non-compiled	[CE]  ')'  expected	20	None	replace
97	[BUG]  [BUGGY]  exp  +=  str.substring(expPos  +  1,  str.length()  -  1);  [CE]  ')'  expected  [FE]                AssertionError      [CONTEXT]      }  default  :  throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  }  }  else  {    if  (expPos  >  -1  &&  expPos  <  str.length()  -  1)  {      [BUGGY]  exp  +=  str.substring(expPos  +  1,  str.length()  -  1);  [BUGGY]      }  else  {  exp  =  null;  }  if  (dec  ==  null  &&  exp  ==  null)  {  try  {  return  createInteger(str);  }  catch  (NumberFormatException  nfe)  {  //  NOPMD  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  	projects/Lang7/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	556	556	1	replace	exp  +=  str.substring(expPos  +  1,  str.length()  -  1);	  exp    +=    str.substring(expPos    +    1,    str.length());    	non-compiled	[CE]  ')'  expected	4	None	replace
98	[BUG]  [BUGGY]  exp  +=  str.substring(expPos  +  1,  str.length()  -  2);  [CE]  ')'  expected  [FE]                  AssertionError      [CONTEXT]      }  default  :  throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  }  }  else  {    if  (expPos  >  -1  &&  expPos  <  str.length()  -  1)  {      [BUGGY]  exp  +=  str.substring(expPos  +  1,  str.length()  -  2);  [BUGGY]      }  else  {  exp  =  null;  }  if  (dec  ==  null  &&  exp  ==  null)  {  try  {  return  createInteger(str);  }  catch  (NumberFormatException  nfe)  {  //  NOPMD  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  	projects/Lang7/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	556	556	1	replace	exp  +=  str.substring(expPos  +  1,  str.length()  -  2);	  exp    +=    str.substring(expPos    +    1,    str.length());    	non-compiled	[CE]  ')'  expected	4	None	replace
99	[BUG]  [BUGGY]  exp  +=  str.substring(expPos  +  1,  str.length()  +  1);  [CE]  ')'  expected  [FE]                    AssertionError      [CONTEXT]      }  default  :  throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  }  }  else  {    if  (expPos  >  -1  &&  expPos  <  str.length()  -  1)  {      [BUGGY]  exp  +=  str.substring(expPos  +  1,  str.length()  +  1);  [BUGGY]      }  else  {  exp  =  null;  }  if  (dec  ==  null  &&  exp  ==  null)  {  try  {  return  createInteger(str);  }  catch  (NumberFormatException  nfe)  {  //  NOPMD  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  	projects/Lang7/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	556	556	1	replace	exp  +=  str.substring(expPos  +  1,  str.length()  +  1);	  exp    +=    str.substring(expPos    +    1,    str.length());    	non-compiled	[CE]  ')'  expected	4	None	replace
100	[BUG]  [BUGGY]  exp  =  str.substring(expPos  +  1,  str.length()  -  1)+  1;  [CE]  ')'  expected  [FE]                AssertionError      [CONTEXT]      }  default  :  throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  }  }  else  {    if  (expPos  >  -1  &&  expPos  <  str.length()  -  1)  {      [BUGGY]  exp  =  str.substring(expPos  +  1,  str.length()  -  1)+  1;  [BUGGY]      }  else  {  exp  =  null;  }  if  (dec  ==  null  &&  exp  ==  null)  {  try  {  return  createInteger(str);  }  catch  (NumberFormatException  nfe)  {  //  NOPMD  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  	projects/Lang7/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	556	556	1	replace	exp  =  str.substring(expPos  +  1,  str.length()  -  1)+  1;	  exp    =    str.substring(expPos    +    1,    str.length())+    1;    	non-compiled	[CE]  ')'  expected	47	None	replace
101	[BUG]  [BUGGY]  exp  =  str.substring(expPos  +  1,  str.length())+  2;  [CE]  ')'  expected  [FE]                  AssertionError      [CONTEXT]      }  default  :  throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  }  }  else  {    if  (expPos  >  -1  &&  expPos  <  str.length()  -  1)  {      [BUGGY]  exp  =  str.substring(expPos  +  1,  str.length())+  2;  [BUGGY]      }  else  {  exp  =  null;  }  if  (dec  ==  null  &&  exp  ==  null)  {  try  {  return  createInteger(str);  }  catch  (NumberFormatException  nfe)  {  //  NOPMD  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  	projects/Lang7/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	556	556	1	replace	exp  =  str.substring(expPos  +  1,  str.length())+  2;	  exp    =    str.substring(expPos    +    1,    str.length())+    1;    	non-compiled	[CE]  ')'  expected	47	None	replace
102	[BUG]  [BUGGY]  exp  =  str.substring(expPos  +  1,  str.length())/  1;  [CE]  ')'  expected  [FE]                    AssertionError      [CONTEXT]      }  default  :  throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  }  }  else  {    if  (expPos  >  -1  &&  expPos  <  str.length()  -  1)  {      [BUGGY]  exp  =  str.substring(expPos  +  1,  str.length())/  1;  [BUGGY]      }  else  {  exp  =  null;  }  if  (dec  ==  null  &&  exp  ==  null)  {  try  {  return  createInteger(str);  }  catch  (NumberFormatException  nfe)  {  //  NOPMD  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  	projects/Lang7/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	556	556	1	replace	exp  =  str.substring(expPos  +  1,  str.length())/  1;	  exp    =    str.substring(expPos    +    1,    str.length())+    1;    	non-compiled	[CE]  ')'  expected	47	None	replace
103	[BUG]  [BUGGY]  int  expPos  =  str.indexOf('.',  decPos);  [CE]  ')'  expected  [FE]                    AssertionError      [CONTEXT]      }  default  :  throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  }  }  else  {    if  (expPos  >  -1  &&  expPos  <  str.length()  -  1)  {      [BUGGY]  int  expPos  =  str.indexOf('.',  decPos);  [BUGGY]      exp  =  str.substring(expPos  +  1,  str.length());  }  else  {  exp  =  null;  }  if  (dec  ==  null  &&  exp  ==  null)  {  try  {  return  createInteger(str);  }  catch  (NumberFormatException  nfe)  {  //  NOPMD  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  	projects/Lang7/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	556	556	1	replace	int  expPos  =  str.indexOf('.',  decPos);	  int    expPos    =    str.indexOf('.',    expPos);    	non-compiled	[CE]  ')'  expected	17	None	replace
104	[BUG]  [BUGGY]  String  str  =  str.substring(expPos  +  1,  expPos.length());  [CE]  ')'  expected  [FE]                  AssertionError      [CONTEXT]      }  default  :  throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  }  }  else  {    if  (expPos  >  -1  &&  expPos  <  str.length()  -  1)  {      [BUGGY]  String  str  =  str.substring(expPos  +  1,  expPos.length());  [BUGGY]      exp  =  str.substring(expPos  +  1,  str.length());  }  else  {  exp  =  null;  }  if  (dec  ==  null  &&  exp  ==  null)  {  try  {  return  createInteger(str);  }  catch  (NumberFormatException  nfe)  {  //  NOPMD  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  	projects/Lang7/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	556	556	1	replace	String  str  =  str.substring(expPos  +  1,  expPos.length());	  String    str    =    str.substring(expPos    +    1,    str.length()    -    1);    	non-compiled	[CE]  ')'  expected	26	None	replace
105	[BUG]  [BUGGY]  String  str  =  str.substring(ExpPos  +  1,  str.length());  [CE]  ')'  expected  [FE]                      AssertionError      [CONTEXT]      }  default  :  throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  }  }  else  {    if  (expPos  >  -1  &&  expPos  <  str.length()  -  1)  {      [BUGGY]  String  str  =  str.substring(ExpPos  +  1,  str.length());  [BUGGY]      exp  =  str.substring(expPos  +  1,  str.length());  }  else  {  exp  =  null;  }  if  (dec  ==  null  &&  exp  ==  null)  {  try  {  return  createInteger(str);  }  catch  (NumberFormatException  nfe)  {  //  NOPMD  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  	projects/Lang7/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	556	556	1	replace	String  str  =  str.substring(ExpPos  +  1,  str.length());	  String    str    =    str.substring(expPos    +    1,    str.length()    -    2);    	non-compiled	[CE]  ')'  expected	28	None	replace
106	[BUG]  [BUGGY]  String  str  =  string.substring(expPos  +  1,  str.length());  [CE]  ')'  expected  [FE]                        AssertionError      [CONTEXT]      }  default  :  throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  }  }  else  {    if  (expPos  >  -1  &&  expPos  <  str.length()  -  1)  {      [BUGGY]  String  str  =  string.substring(expPos  +  1,  str.length());  [BUGGY]      exp  =  str.substring(expPos  +  1,  str.length());  }  else  {  exp  =  null;  }  if  (dec  ==  null  &&  exp  ==  null)  {  try  {  return  createInteger(str);  }  catch  (NumberFormatException  nfe)  {  //  NOPMD  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  	projects/Lang7/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	556	556	1	replace	String  str  =  string.substring(expPos  +  1,  str.length());	  String    str    =    str.substring(expPos    +    1,    str.length()    -    2);    	non-compiled	[CE]  ')'  expected	28	None	replace
107	[BUG]  [BUGGY]  aughtExceptionHandler.throwUnsupportedOperationException( " ");  [CE]  ')'  expected  [FE]                        AssertionError      [CONTEXT]      }  default  :  throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  }  }  else  {    if  (expPos  >  -1  &&  expPos  <  str.length()  -  1)  {      [BUGGY]  aughtExceptionHandler.throwUnsupportedOperationException( " ");  [BUGGY]      }  else  {  exp  =  null;  }  if  (dec  ==  null  &&  exp  ==  null)  {  try  {  return  createInteger(str);  }  catch  (NumberFormatException  nfe)  {  //  NOPMD  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  	projects/Lang7/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	556	556	1	replace	aughtExceptionHandler.throwUnsupportedOperationException( " ");	  if(expPos    >    -1    &&    expPos    <    str.length()    -    1)    {    throw    new    NumberFormatException(   "   ");    }    	non-compiled	[CE]  ')'  expected	38	None	replace
108	[BUG]  [BUGGY]  aughtExceptionHandler.throwMissingException( " ");  [CE]  ')'  expected  [FE]                          AssertionError      [CONTEXT]      }  default  :  throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  }  }  else  {    if  (expPos  >  -1  &&  expPos  <  str.length()  -  1)  {      [BUGGY]  aughtExceptionHandler.throwMissingException( " ");  [BUGGY]      }  else  {  exp  =  null;  }  if  (dec  ==  null  &&  exp  ==  null)  {  try  {  return  createInteger(str);  }  catch  (NumberFormatException  nfe)  {  //  NOPMD  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  	projects/Lang7/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	556	556	1	replace	aughtExceptionHandler.throwMissingException( " ");	  if(expPos    >    -1    &&    expPos    <    str.length()    -    1)    {    throw    new    NumberFormatException(   "   ");    }    	non-compiled	[CE]  ')'  expected	38	None	replace
109	[BUG]  [BUGGY]  asticSequence(str,  expPos);  [CE]  ')'  expected  [FE]                            AssertionError      [CONTEXT]      }  default  :  throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  }  }  else  {    if  (expPos  >  -1  &&  expPos  <  str.length()  -  1)  {      [BUGGY]  asticSequence(str,  expPos);  [BUGGY]      }  else  {  exp  =  null;  }  if  (dec  ==  null  &&  exp  ==  null)  {  try  {  return  createInteger(str);  }  catch  (NumberFormatException  nfe)  {  //  NOPMD  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  	projects/Lang7/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	556	556	1	replace	asticSequence(str,  expPos);	  if(expPos    >    -1    &&    expPos    <    str.length()    -    1)    {    throw    new    NumberFormatException(   "   ");    }    	non-compiled	[CE]  ')'  expected	38	None	replace
110	[BUG]  [BUGGY]  aughtExceptionHandler.throwUnquotedException( " ");  [CE]  ')'  expected  [FE]                              AssertionError      [CONTEXT]      }  default  :  throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  }  }  else  {    if  (expPos  >  -1  &&  expPos  <  str.length()  -  1)  {      [BUGGY]  aughtExceptionHandler.throwUnquotedException( " ");  [BUGGY]      }  else  {  exp  =  null;  }  if  (dec  ==  null  &&  exp  ==  null)  {  try  {  return  createInteger(str);  }  catch  (NumberFormatException  nfe)  {  //  NOPMD  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  	projects/Lang7/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	556	556	1	replace	aughtExceptionHandler.throwUnquotedException( " ");	  if(expPos    >    -1    &&    expPos    <    str.length()    -    1)    {    throw    new    NumberFormatException(   "   ");    }    	non-compiled	[CE]  ')'  expected	38	None	replace
111	[BUG]  [BUGGY]  int  expPos  =  str.indexOf('  ')/  4;  [CE]  ')'  expected  [FE]                    AssertionError      [CONTEXT]      }  default  :  throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  }  }  else  {    if  (expPos  >  -1  &&  expPos  <  str.length()  -  1)  {      [BUGGY]  int  expPos  =  str.indexOf('  ')/  4;  [BUGGY]      exp  =  str.substring(expPos  +  1,  str.length());  }  else  {  exp  =  null;  }  if  (dec  ==  null  &&  exp  ==  null)  {  try  {  return  createInteger(str);  }  catch  (NumberFormatException  nfe)  {  //  NOPMD  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  	projects/Lang7/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	556	556	1	replace	int  expPos  =  str.indexOf('  ')/  4;	  int    expPos    =    str.indexOf('    ')/    1;    	non-compiled	[CE]  ')'  expected	22	None	replace
112	[BUG]  [BUGGY]  expPos  =  str.length();  [CE]  ')'  expected  [FE]                      AssertionError      [CONTEXT]      }  default  :  throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  }  }  else  {    if  (expPos  >  -1  &&  expPos  <  str.length()  -  1)  {      [BUGGY]  expPos  =  str.length();  [BUGGY]      }  else  {  exp  =  null;  }  if  (dec  ==  null  &&  exp  ==  null)  {  try  {  return  createInteger(str);  }  catch  (NumberFormatException  nfe)  {  //  NOPMD  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  	projects/Lang7/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	556	556	1	replace	expPos  =  str.length();	  if(expPos    >    -1    &&    expPos    <    str.length()    -    1)    {    return    createInteger(str);    }    	non-compiled	[CE]  ')'  expected	37	None	replace
113	[BUG]  [BUGGY]  MutableString  dec  =  getDec(str,  expPos);  [CE]  ')'  expected  [FE]                        AssertionError      [CONTEXT]      }  default  :  throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  }  }  else  {    if  (expPos  >  -1  &&  expPos  <  str.length()  -  1)  {      [BUGGY]  MutableString  dec  =  getDec(str,  expPos);  [BUGGY]      }  else  {  exp  =  null;  }  if  (dec  ==  null  &&  exp  ==  null)  {  try  {  return  createInteger(str);  }  catch  (NumberFormatException  nfe)  {  //  NOPMD  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  	projects/Lang7/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	556	556	1	replace	MutableString  dec  =  getDec(str,  expPos);	  if(expPos    >    -1    &&    expPos    <    str.length()    -    1)    {    return    createInteger(str);    }    	non-compiled	[CE]  ')'  expected	37	None	replace
114	[BUG]  [BUGGY]  expPos  =  str.length()  -  1;  [CE]  ')'  expected  [FE]                          AssertionError      [CONTEXT]      }  default  :  throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  }  }  else  {    if  (expPos  >  -1  &&  expPos  <  str.length()  -  1)  {      [BUGGY]  expPos  =  str.length()  -  1;  [BUGGY]      }  else  {  exp  =  null;  }  if  (dec  ==  null  &&  exp  ==  null)  {  try  {  return  createInteger(str);  }  catch  (NumberFormatException  nfe)  {  //  NOPMD  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  	projects/Lang7/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	556	556	1	replace	expPos  =  str.length()  -  1;	  if(expPos    >    -1    &&    expPos    <    str.length()    -    1)    {    return    createInteger(str);    }    	non-compiled	[CE]  ')'  expected	37	None	replace
115	[BUG]  [BUGGY]  MutableString  dec  =  createDec(str,  expPos);  [CE]  ')'  expected  [FE]                            AssertionError      [CONTEXT]      }  default  :  throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  }  }  else  {    if  (expPos  >  -1  &&  expPos  <  str.length()  -  1)  {      [BUGGY]  MutableString  dec  =  createDec(str,  expPos);  [BUGGY]      }  else  {  exp  =  null;  }  if  (dec  ==  null  &&  exp  ==  null)  {  try  {  return  createInteger(str);  }  catch  (NumberFormatException  nfe)  {  //  NOPMD  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  	projects/Lang7/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	556	556	1	replace	MutableString  dec  =  createDec(str,  expPos);	  if(expPos    >    -1    &&    expPos    <    str.length()    -    1)    {    return    createInteger(str);    }    	non-compiled	[CE]  ')'  expected	37	None	replace
116	[BUG]  [BUGGY]  return  createBigInteger(str);  [CE]  ')'  expected  [FE]                    AssertionError      [CONTEXT]      }  default  :  throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  }  }  else  {    if  (expPos  >  -1  &&  expPos  <  str.length()  -  1)  {      [BUGGY]  return  createBigInteger(str);  [BUGGY]      }  else  {  exp  =  null;  }  if  (dec  ==  null  &&  exp  ==  null)  {  try  {  return  createInteger(str);  }  catch  (NumberFormatException  nfe)  {  //  NOPMD  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  	projects/Lang7/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	556	556	1	replace	return  createBigInteger(str);	  if(expPos    >    -1    &&    expPos    <    str.length()    -    1)    {    return    createLong(str);    }    	non-compiled	[CE]  ')'  expected	36	None	replace
117	[BUG]  [BUGGY]  return  createInteger(str);  [CE]  ')'  expected  [FE]                      AssertionError      [CONTEXT]      }  default  :  throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  }  }  else  {    if  (expPos  >  -1  &&  expPos  <  str.length()  -  1)  {      [BUGGY]  return  createInteger(str);  [BUGGY]      }  else  {  exp  =  null;  }  if  (dec  ==  null  &&  exp  ==  null)  {  try  {  return  createInteger(str);  }  catch  (NumberFormatException  nfe)  {  //  NOPMD  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  	projects/Lang7/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	556	556	1	replace	return  createInteger(str);	  if(expPos    >    -1    &&    expPos    <    str.length()    -    1)    {    return    createLong(str);    }    	non-compiled	[CE]  ')'  expected	36	None	replace
118	[BUG]  [BUGGY]  return  createLong(str);  [CE]  ')'  expected  [FE]                        AssertionError      [CONTEXT]      }  default  :  throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  }  }  else  {    if  (expPos  >  -1  &&  expPos  <  str.length()  -  1)  {      [BUGGY]  return  createLong(str);  [BUGGY]      }  else  {  exp  =  null;  }  if  (dec  ==  null  &&  exp  ==  null)  {  try  {  return  createInteger(str);  }  catch  (NumberFormatException  nfe)  {  //  NOPMD  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  	projects/Lang7/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	556	556	1	replace	return  createLong(str);	  if(expPos    >    -1    &&    expPos    <    str.length()    -    1)    {    return    createLong(str);    }    	non-compiled	[CE]  ')'  expected	36	None	replace
119	[BUG]  [BUGGY]  String  str  =  str.substring(Expression.MIN_VALUE,  expPos  +  1,  str.length());  [CE]  ')'  expected  [FE]                      AssertionError      [CONTEXT]      }  default  :  throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  }  }  else  {    if  (expPos  >  -1  &&  expPos  <  str.length()  -  1)  {      [BUGGY]  String  str  =  str.substring(Expression.MIN_VALUE,  expPos  +  1,  str.length());  [BUGGY]      exp  =  str.substring(expPos  +  1,  str.length());  }  else  {  exp  =  null;  }  if  (dec  ==  null  &&  exp  ==  null)  {  try  {  return  createInteger(str);  }  catch  (NumberFormatException  nfe)  {  //  NOPMD  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  	projects/Lang7/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	556	556	1	replace	String  str  =  str.substring(Expression.MIN_VALUE,  expPos  +  1,  str.length());	  String    str    =    str.substring(expPos    +    1,    str.length()    -    2);    	non-compiled	[CE]  ')'  expected	28	None	replace
120	[BUG]  [BUGGY]  exp  =  str.substring(expPos  +  4,  str.length());  [CE]  ')'  expected  [FE]            AssertionError      [CONTEXT]      }  default  :  throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  }  }  else  {    if  (expPos  >  -1  &&  expPos  <  str.length()  -  1)  {      [BUGGY]  exp  =  str.substring(expPos  +  4,  str.length());  [BUGGY]      }  else  {  exp  =  null;  }  if  (dec  ==  null  &&  exp  ==  null)  {  try  {  return  createInteger(str);  }  catch  (NumberFormatException  nfe)  {  //  NOPMD  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  	projects/Lang7/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	556	556	1	replace	exp  =  str.substring(expPos  +  4,  str.length());	  exp    =    str.substring(expPos    +    2,    str.length());    	non-compiled	[CE]  ')'  expected	59	None	replace
121	[BUG]  [BUGGY]  String  str  =  str.substring(0,  expPos);  [CE]  ')'  expected  [FE]            AssertionError      [CONTEXT]      }  default  :  throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  }  }  else  {    if  (expPos  >  -1  &&  expPos  <  str.length()  -  1)  {      [BUGGY]  String  str  =  str.substring(0,  expPos);  [BUGGY]      exp  =  str.substring(expPos  +  1,  str.length());  }  else  {  exp  =  null;  }  if  (dec  ==  null  &&  exp  ==  null)  {  try  {  return  createInteger(str);  }  catch  (NumberFormatException  nfe)  {  //  NOPMD  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  	projects/Lang7/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	556	556	1	replace	String  str  =  str.substring(0,  expPos);	  String    str    =    str.substring(0,    str.length());    	non-compiled	[CE]  ')'  expected	7	None	replace
122	[BUG]  [BUGGY]  String  str  =  str.substring(0,  expPos  +  1);  [CE]  ')'  expected  [FE]              AssertionError      [CONTEXT]      }  default  :  throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  }  }  else  {    if  (expPos  >  -1  &&  expPos  <  str.length()  -  1)  {      [BUGGY]  String  str  =  str.substring(0,  expPos  +  1);  [BUGGY]      exp  =  str.substring(expPos  +  1,  str.length());  }  else  {  exp  =  null;  }  if  (dec  ==  null  &&  exp  ==  null)  {  try  {  return  createInteger(str);  }  catch  (NumberFormatException  nfe)  {  //  NOPMD  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  	projects/Lang7/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	556	556	1	replace	String  str  =  str.substring(0,  expPos  +  1);	  String    str    =    str.substring(0,    str.length());    	non-compiled	[CE]  ')'  expected	7	None	replace
123	[BUG]  [BUGGY]  exp  =  nfe.createInteger(str);  [CE]  ')'  expected  [FE]                    AssertionError      [CONTEXT]      }  default  :  throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  }  }  else  {    if  (expPos  >  -1  &&  expPos  <  str.length()  -  1)  {      [BUGGY]  exp  =  nfe.createInteger(str);  [BUGGY]      }  else  {  exp  =  null;  }  if  (dec  ==  null  &&  exp  ==  null)  {  try  {  return  createInteger(str);  }  catch  (NumberFormatException  nfe)  {  //  NOPMD  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  	projects/Lang7/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	556	556	1	replace	exp  =  nfe.createInteger(str);	  if(expPos    >    -1    &&    expPos    <    str.length()    -    1)    {    exp    =    null;    }    	non-compiled	[CE]  ')'  expected	45	None	replace
124	[BUG]  [BUGGY]  exp  =  nfe.createInteger(str,  decPos);  [CE]  ')'  expected  [FE]                      AssertionError      [CONTEXT]      }  default  :  throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  }  }  else  {    if  (expPos  >  -1  &&  expPos  <  str.length()  -  1)  {      [BUGGY]  exp  =  nfe.createInteger(str,  decPos);  [BUGGY]      }  else  {  exp  =  null;  }  if  (dec  ==  null  &&  exp  ==  null)  {  try  {  return  createInteger(str);  }  catch  (NumberFormatException  nfe)  {  //  NOPMD  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  	projects/Lang7/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	556	556	1	replace	exp  =  nfe.createInteger(str,  decPos);	  if(expPos    >    -1    &&    expPos    <    str.length()    -    1)    {    exp    =    null;    }    	non-compiled	[CE]  ')'  expected	45	None	replace
125	[BUG]  [BUGGY]  exp  =  nfe.createNumber(str,  decPos);  [CE]  ')'  expected  [FE]                        AssertionError      [CONTEXT]      }  default  :  throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  }  }  else  {    if  (expPos  >  -1  &&  expPos  <  str.length()  -  1)  {      [BUGGY]  exp  =  nfe.createNumber(str,  decPos);  [BUGGY]      }  else  {  exp  =  null;  }  if  (dec  ==  null  &&  exp  ==  null)  {  try  {  return  createInteger(str);  }  catch  (NumberFormatException  nfe)  {  //  NOPMD  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  	projects/Lang7/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	556	556	1	replace	exp  =  nfe.createNumber(str,  decPos);	  if(expPos    >    -1    &&    expPos    <    str.length()    -    1)    {    exp    =    null;    }    	non-compiled	[CE]  ')'  expected	45	None	replace
126	[BUG]  [BUGGY]  int  expPos  =  str.indexOf('-')+  1;  [CE]  ')'  expected  [FE]                  AssertionError      [CONTEXT]      }  default  :  throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  }  }  else  {    if  (expPos  >  -1  &&  expPos  <  str.length()  -  1)  {      [BUGGY]  int  expPos  =  str.indexOf('-')+  1;  [BUGGY]      exp  =  str.substring(expPos  +  1,  str.length());  }  else  {  exp  =  null;  }  if  (dec  ==  null  &&  exp  ==  null)  {  try  {  return  createInteger(str);  }  catch  (NumberFormatException  nfe)  {  //  NOPMD  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  	projects/Lang7/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	556	556	1	replace	int  expPos  =  str.indexOf('-')+  1;	  int    expPos    =    str.lastIndexOf('-');    	non-compiled	[CE]  ')'  expected	12	None	replace
127	[BUG]  [BUGGY]  int  expPos  =  str.lastIndexOf('-',  expPos  -  1);  [CE]  ')'  expected  [FE]                    AssertionError      [CONTEXT]      }  default  :  throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  }  }  else  {    if  (expPos  >  -1  &&  expPos  <  str.length()  -  1)  {      [BUGGY]  int  expPos  =  str.lastIndexOf('-',  expPos  -  1);  [BUGGY]      exp  =  str.substring(expPos  +  1,  str.length());  }  else  {  exp  =  null;  }  if  (dec  ==  null  &&  exp  ==  null)  {  try  {  return  createInteger(str);  }  catch  (NumberFormatException  nfe)  {  //  NOPMD  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  	projects/Lang7/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	556	556	1	replace	int  expPos  =  str.lastIndexOf('-',  expPos  -  1);	  int    expPos    =    str.lastIndexOf('-');    	non-compiled	[CE]  ')'  expected	12	None	replace
128	[BUG]  [BUGGY]  bucket  <  =  0  ||  expPos  >  -1  &&  expPos  <  str.length()  -  1)  {  throw  new  NumberFormatException( " ");  }  [CE]  ')'  expected  [FE]                        AssertionError      [CONTEXT]      }  default  :  throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  }  }  else  {    if  (expPos  >  -1  &&  expPos  <  str.length()  -  1)  {      [BUGGY]  bucket  <  =  0  ||  expPos  >  -1  &&  expPos  <  str.length()  -  1)  {  throw  new  NumberFormatException( " ");  }  [BUGGY]      }  else  {  exp  =  null;  }  if  (dec  ==  null  &&  exp  ==  null)  {  try  {  return  createInteger(str);  }  catch  (NumberFormatException  nfe)  {  //  NOPMD  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  	projects/Lang7/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	556	556	1	replace	bucket  <  =  0  ||  expPos  >  -1  &&  expPos  <  str.length()  -  1)  {  throw  new  NumberFormatException( " ");  }	  if(expPos    >    -1    &&    expPos    <    str.length()    -    1)    {    throw    new    NumberFormatException(   "   ");    }    	non-compiled	[CE]  ')'  expected	38	None	replace
129	[BUG]  [BUGGY]  bucket  <  =  0  ||  expPos  >  -1  &&  expPos  <  str.length())  {  throw  new  NumberFormatException( " ");  }  [CE]  ')'  expected  [FE]                          AssertionError      [CONTEXT]      }  default  :  throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  }  }  else  {    if  (expPos  >  -1  &&  expPos  <  str.length()  -  1)  {      [BUGGY]  bucket  <  =  0  ||  expPos  >  -1  &&  expPos  <  str.length())  {  throw  new  NumberFormatException( " ");  }  [BUGGY]      }  else  {  exp  =  null;  }  if  (dec  ==  null  &&  exp  ==  null)  {  try  {  return  createInteger(str);  }  catch  (NumberFormatException  nfe)  {  //  NOPMD  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  	projects/Lang7/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	556	556	1	replace	bucket  <  =  0  ||  expPos  >  -1  &&  expPos  <  str.length())  {  throw  new  NumberFormatException( " ");  }	  if(expPos    >    -1    &&    expPos    <    str.length()    -    1)    {    throw    new    NumberFormatException(   "   ");    }    	non-compiled	[CE]  ')'  expected	38	None	replace
130	[BUG]  [BUGGY]  bucket  <  =  0  &&  expPos  <  str.length()  -  1)  {  throw  new  NumberFormatException( " ");  }  [CE]  ')'  expected  [FE]                            AssertionError      [CONTEXT]      }  default  :  throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  }  }  else  {    if  (expPos  >  -1  &&  expPos  <  str.length()  -  1)  {      [BUGGY]  bucket  <  =  0  &&  expPos  <  str.length()  -  1)  {  throw  new  NumberFormatException( " ");  }  [BUGGY]      }  else  {  exp  =  null;  }  if  (dec  ==  null  &&  exp  ==  null)  {  try  {  return  createInteger(str);  }  catch  (NumberFormatException  nfe)  {  //  NOPMD  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  	projects/Lang7/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	556	556	1	replace	bucket  <  =  0  &&  expPos  <  str.length()  -  1)  {  throw  new  NumberFormatException( " ");  }	  if(expPos    >    -1    &&    expPos    <    str.length()    -    1)    {    throw    new    NumberFormatException(   "   ");    }    	non-compiled	[CE]  ')'  expected	38	None	replace
131	[BUG]  [BUGGY]  bucket  <  =  0  ||  expPos  >  -1  &&  expPos  <  str.length()  -  1)  {  throw  new  NumberFormatException( " ");  [CE]  ')'  expected  [FE]                              AssertionError      [CONTEXT]      }  default  :  throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  }  }  else  {    if  (expPos  >  -1  &&  expPos  <  str.length()  -  1)  {      [BUGGY]  bucket  <  =  0  ||  expPos  >  -1  &&  expPos  <  str.length()  -  1)  {  throw  new  NumberFormatException( " ");  [BUGGY]      }  else  {  exp  =  null;  }  if  (dec  ==  null  &&  exp  ==  null)  {  try  {  return  createInteger(str);  }  catch  (NumberFormatException  nfe)  {  //  NOPMD  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  	projects/Lang7/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	556	556	1	replace	bucket  <  =  0  ||  expPos  >  -1  &&  expPos  <  str.length()  -  1)  {  throw  new  NumberFormatException( " ");	  if(expPos    >    -1    &&    expPos    <    str.length()    -    1)    {    throw    new    NumberFormatException(   "   ");    }    	non-compiled	[CE]  ')'  expected	38	None	replace
132	[BUG]  [BUGGY]  int  expPos  =  str.indexOf('.',  expPos  +  1).length();  [CE]  ')'  expected  [FE]                      AssertionError      [CONTEXT]      }  default  :  throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  }  }  else  {    if  (expPos  >  -1  &&  expPos  <  str.length()  -  1)  {      [BUGGY]  int  expPos  =  str.indexOf('.',  expPos  +  1).length();  [BUGGY]      exp  =  str.substring(expPos  +  1,  str.length());  }  else  {  exp  =  null;  }  if  (dec  ==  null  &&  exp  ==  null)  {  try  {  return  createInteger(str);  }  catch  (NumberFormatException  nfe)  {  //  NOPMD  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  	projects/Lang7/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	556	556	1	replace	int  expPos  =  str.indexOf('.',  expPos  +  1).length();	  int    expPos    =    str.indexOf('.',    expPos    +    1);    	non-compiled	[CE]  ')'  expected	18	None	replace
133	[BUG]  [BUGGY]  if(dec  ==  null  &&  expPos  <  hexDigits)  {  return  createBigInteger(str);  }  [CE]  ')'  expected  [FE]                    AssertionError      [CONTEXT]      }  default  :  throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  }  }  else  {    if  (expPos  >  -1  &&  expPos  <  str.length()  -  1)  {      [BUGGY]  if(dec  ==  null  &&  expPos  <  hexDigits)  {  return  createBigInteger(str);  }  [BUGGY]      }  else  {  exp  =  null;  }  if  (dec  ==  null  &&  exp  ==  null)  {  try  {  return  createInteger(str);  }  catch  (NumberFormatException  nfe)  {  //  NOPMD  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  	projects/Lang7/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	556	556	1	replace	if(dec  ==  null  &&  expPos  <  hexDigits)  {  return  createBigInteger(str);  }	  if(dec    ==    null    &&    exp    ==    null)    {    return    createBigInteger(str);    }    	non-compiled	[CE]  ')'  expected	52	None	replace
134	[BUG]  [BUGGY]  Integer  dec  =  createInteger(str.substring(decPos));  [CE]  ')'  expected  [FE]                  AssertionError      [CONTEXT]      }  default  :  throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  }  }  else  {    if  (expPos  >  -1  &&  expPos  <  str.length()  -  1)  {      [BUGGY]  Integer  dec  =  createInteger(str.substring(decPos));  [BUGGY]      exp  =  str.substring(expPos  +  1,  str.length());  }  else  {  exp  =  null;  }  if  (dec  ==  null  &&  exp  ==  null)  {  try  {  return  createInteger(str);  }  catch  (NumberFormatException  nfe)  {  //  NOPMD  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  	projects/Lang7/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	556	556	1	replace	Integer  dec  =  createInteger(str.substring(decPos));	  Integer    dec    =    createInteger(str.substring(expPos));    	non-compiled	[CE]  ')'  expected	16	None	replace
135	[BUG]  [BUGGY]  exp  =  str.substring(expPos  +  1,  str.length())+  3;  [CE]  ')'  expected  [FE]                AssertionError      [CONTEXT]      }  default  :  throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  }  }  else  {    if  (expPos  >  -1  &&  expPos  <  str.length()  -  1)  {      [BUGGY]  exp  =  str.substring(expPos  +  1,  str.length())+  3;  [BUGGY]      }  else  {  exp  =  null;  }  if  (dec  ==  null  &&  exp  ==  null)  {  try  {  return  createInteger(str);  }  catch  (NumberFormatException  nfe)  {  //  NOPMD  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  	projects/Lang7/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	556	556	1	replace	exp  =  str.substring(expPos  +  1,  str.length())+  3;	  exp    =    str.substring(expPos    +    1,    str.length())+    1;    	non-compiled	[CE]  ')'  expected	47	None	replace
136	[BUG]  [BUGGY]  exp  =  str.substring(0,  expPos.length())+  1;  [CE]  ')'  expected  [FE]                  AssertionError      [CONTEXT]      }  default  :  throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  }  }  else  {    if  (expPos  >  -1  &&  expPos  <  str.length()  -  1)  {      [BUGGY]  exp  =  str.substring(0,  expPos.length())+  1;  [BUGGY]      }  else  {  exp  =  null;  }  if  (dec  ==  null  &&  exp  ==  null)  {  try  {  return  createInteger(str);  }  catch  (NumberFormatException  nfe)  {  //  NOPMD  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  	projects/Lang7/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	556	556	1	replace	exp  =  str.substring(0,  expPos.length())+  1;	  exp    =    str.substring(0,    str.length())+    1;    	non-compiled	[CE]  ')'  expected	55	None	replace
137	[BUG]  [BUGGY]  exp  =  str.substring(0,  expPos.length());  [CE]  ')'  expected  [FE]                      AssertionError      [CONTEXT]      }  default  :  throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  }  }  else  {    if  (expPos  >  -1  &&  expPos  <  str.length()  -  1)  {      [BUGGY]  exp  =  str.substring(0,  expPos.length());  [BUGGY]      }  else  {  exp  =  null;  }  if  (dec  ==  null  &&  exp  ==  null)  {  try  {  return  createInteger(str);  }  catch  (NumberFormatException  nfe)  {  //  NOPMD  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  	projects/Lang7/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	556	556	1	replace	exp  =  str.substring(0,  expPos.length());	  exp    =    str.substring(0,    str.length();    	non-compiled	[CE]  ')'  expected	32	None	replace
138	[BUG]  [BUGGY]  exp  =  str.substring(0,  expPos.length();  [CE]  ')'  expected  [FE]                        AssertionError      [CONTEXT]      }  default  :  throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  }  }  else  {    if  (expPos  >  -1  &&  expPos  <  str.length()  -  1)  {      [BUGGY]  exp  =  str.substring(0,  expPos.length();  [BUGGY]      }  else  {  exp  =  null;  }  if  (dec  ==  null  &&  exp  ==  null)  {  try  {  return  createInteger(str);  }  catch  (NumberFormatException  nfe)  {  //  NOPMD  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  	projects/Lang7/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	556	556	1	replace	exp  =  str.substring(0,  expPos.length();	  exp    =    str.substring(0,    str.length();    	non-compiled	[CE]  ')'  expected	32	None	replace
139	[BUG]  [BUGGY]  exp  =  str.substring(0,  expPos);  [CE]  ')'  expected  [FE]                          AssertionError      [CONTEXT]      }  default  :  throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  }  }  else  {    if  (expPos  >  -1  &&  expPos  <  str.length()  -  1)  {      [BUGGY]  exp  =  str.substring(0,  expPos);  [BUGGY]      }  else  {  exp  =  null;  }  if  (dec  ==  null  &&  exp  ==  null)  {  try  {  return  createInteger(str);  }  catch  (NumberFormatException  nfe)  {  //  NOPMD  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  	projects/Lang7/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	556	556	1	replace	exp  =  str.substring(0,  expPos);	  exp    =    str.substring(0,    str.length();    	non-compiled	[CE]  ')'  expected	32	None	replace
140	[BUG]  [BUGGY]  expPos  =  str.substring(expPos  +  1,  str.length()  -  4);  [CE]  ')'  expected  [FE]              AssertionError      [CONTEXT]      }  default  :  throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  }  }  else  {    if  (expPos  >  -1  &&  expPos  <  str.length()  -  1)  {      [BUGGY]  expPos  =  str.substring(expPos  +  1,  str.length()  -  4);  [BUGGY]      }  else  {  exp  =  null;  }  if  (dec  ==  null  &&  exp  ==  null)  {  try  {  return  createInteger(str);  }  catch  (NumberFormatException  nfe)  {  //  NOPMD  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  	projects/Lang7/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	556	556	1	replace	expPos  =  str.substring(expPos  +  1,  str.length()  -  4);	  expPos    =    str.substring(expPos    +    1,    str.length());    	non-compiled	[CE]  ')'  expected	3	None	replace
141	[BUG]  [BUGGY]  exp  =  str.substring(expPos,  str.length());  [CE]  ')'  expected  [FE]                  AssertionError      [CONTEXT]      }  default  :  throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  }  }  else  {    if  (expPos  >  -1  &&  expPos  <  str.length()  -  1)  {      [BUGGY]  exp  =  str.substring(expPos,  str.length());  [BUGGY]      }  else  {  exp  =  null;  }  if  (dec  ==  null  &&  exp  ==  null)  {  try  {  return  createInteger(str);  }  catch  (NumberFormatException  nfe)  {  //  NOPMD  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  	projects/Lang7/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	556	556	1	replace	exp  =  str.substring(expPos,  str.length());	  exp    =    str.substring(0,    str.length());    	non-compiled	[CE]  ')'  expected	30	None	replace
142	[BUG]  [BUGGY]  Integer  dec  =  createInteger(str,  expPos  -  1);  [CE]  ')'  expected  [FE]              AssertionError      [CONTEXT]      }  default  :  throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  }  }  else  {    if  (expPos  >  -1  &&  expPos  <  str.length()  -  1)  {      [BUGGY]  Integer  dec  =  createInteger(str,  expPos  -  1);  [BUGGY]      exp  =  str.substring(expPos  +  1,  str.length());  }  else  {  exp  =  null;  }  if  (dec  ==  null  &&  exp  ==  null)  {  try  {  return  createInteger(str);  }  catch  (NumberFormatException  nfe)  {  //  NOPMD  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  	projects/Lang7/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	556	556	1	replace	Integer  dec  =  createInteger(str,  expPos  -  1);	  Integer    dec    =    createInteger(str,    expPos);    	non-compiled	[CE]  ')'  expected	14	None	replace
143	[BUG]  [BUGGY]  Integer  dec  =  createInteger(str,  hexDigits);  [CE]  ')'  expected  [FE]                AssertionError      [CONTEXT]      }  default  :  throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  }  }  else  {    if  (expPos  >  -1  &&  expPos  <  str.length()  -  1)  {      [BUGGY]  Integer  dec  =  createInteger(str,  hexDigits);  [BUGGY]      exp  =  str.substring(expPos  +  1,  str.length());  }  else  {  exp  =  null;  }  if  (dec  ==  null  &&  exp  ==  null)  {  try  {  return  createInteger(str);  }  catch  (NumberFormatException  nfe)  {  //  NOPMD  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  	projects/Lang7/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	556	556	1	replace	Integer  dec  =  createInteger(str,  hexDigits);	  Integer    dec    =    createInteger(str,    expPos);    	non-compiled	[CE]  ')'  expected	14	None	replace
144	[BUG]  [BUGGY]  Integer  dec  =  createInteger(str,  DEC_ZERO);  [CE]  ')'  expected  [FE]                  AssertionError      [CONTEXT]      }  default  :  throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  }  }  else  {    if  (expPos  >  -1  &&  expPos  <  str.length()  -  1)  {      [BUGGY]  Integer  dec  =  createInteger(str,  DEC_ZERO);  [BUGGY]      exp  =  str.substring(expPos  +  1,  str.length());  }  else  {  exp  =  null;  }  if  (dec  ==  null  &&  exp  ==  null)  {  try  {  return  createInteger(str);  }  catch  (NumberFormatException  nfe)  {  //  NOPMD  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  	projects/Lang7/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	556	556	1	replace	Integer  dec  =  createInteger(str,  DEC_ZERO);	  Integer    dec    =    createInteger(str,    expPos);    	non-compiled	[CE]  ')'  expected	14	None	replace
145	[BUG]  [BUGGY]  int  decPos  =  str.indexOf('.',  expPos  +  1).length();  [CE]  ')'  expected  [FE]              AssertionError      [CONTEXT]      }  default  :  throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  }  }  else  {    if  (expPos  >  -1  &&  expPos  <  str.length()  -  1)  {      [BUGGY]  int  decPos  =  str.indexOf('.',  expPos  +  1).length();  [BUGGY]      exp  =  str.substring(expPos  +  1,  str.length());  }  else  {  exp  =  null;  }  if  (dec  ==  null  &&  exp  ==  null)  {  try  {  return  createInteger(str);  }  catch  (NumberFormatException  nfe)  {  //  NOPMD  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  	projects/Lang7/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	556	556	1	replace	int  decPos  =  str.indexOf('.',  expPos  +  1).length();	  int    decPos    =    str.indexOf('.',    expPos    +    1);    	non-compiled	[CE]  ')'  expected	34	None	replace
146	[BUG]  [BUGGY]  String  str  =  str.substring(0,  expPos  +  1,  str.length());  [CE]  ')'  expected  [FE]                AssertionError      [CONTEXT]      }  default  :  throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  }  }  else  {    if  (expPos  >  -1  &&  expPos  <  str.length()  -  1)  {      [BUGGY]  String  str  =  str.substring(0,  expPos  +  1,  str.length());  [BUGGY]      exp  =  str.substring(expPos  +  1,  str.length());  }  else  {  exp  =  null;  }  if  (dec  ==  null  &&  exp  ==  null)  {  try  {  return  createInteger(str);  }  catch  (NumberFormatException  nfe)  {  //  NOPMD  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  	projects/Lang7/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	556	556	1	replace	String  str  =  str.substring(0,  expPos  +  1,  str.length());	  String    str    =    str.substring(0,    expPos.length());    	non-compiled	[CE]  ')'  expected	9	None	replace
147	[BUG]  [BUGGY]  String  str  =  str.substring(0,  expPos  -  1);  [CE]  ')'  expected  [FE]                  AssertionError      [CONTEXT]      }  default  :  throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  }  }  else  {    if  (expPos  >  -1  &&  expPos  <  str.length()  -  1)  {      [BUGGY]  String  str  =  str.substring(0,  expPos  -  1);  [BUGGY]      exp  =  str.substring(expPos  +  1,  str.length());  }  else  {  exp  =  null;  }  if  (dec  ==  null  &&  exp  ==  null)  {  try  {  return  createInteger(str);  }  catch  (NumberFormatException  nfe)  {  //  NOPMD  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  	projects/Lang7/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	556	556	1	replace	String  str  =  str.substring(0,  expPos  -  1);	  String    str    =    str.substring(0,    expPos.length());    	non-compiled	[CE]  ')'  expected	9	None	replace
148	[BUG]  [BUGGY]  Integer  dec  =  createInteger(str  +  1,  expPos);  [CE]  ')'  expected  [FE]            AssertionError      [CONTEXT]      }  default  :  throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  }  }  else  {    if  (expPos  >  -1  &&  expPos  <  str.length()  -  1)  {      [BUGGY]  Integer  dec  =  createInteger(str  +  1,  expPos);  [BUGGY]      exp  =  str.substring(expPos  +  1,  str.length());  }  else  {  exp  =  null;  }  if  (dec  ==  null  &&  exp  ==  null)  {  try  {  return  createInteger(str);  }  catch  (NumberFormatException  nfe)  {  //  NOPMD  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  	projects/Lang7/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	556	556	1	replace	Integer  dec  =  createInteger(str  +  1,  expPos);	  Integer    dec    =    createInteger(str    +    1);    	non-compiled	[CE]  ')'  expected	43	None	replace
149	[BUG]  [BUGGY]  Integer  dec  =  getInteger(str);  [CE]  ')'  expected  [FE]              AssertionError      [CONTEXT]      }  default  :  throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  }  }  else  {    if  (expPos  >  -1  &&  expPos  <  str.length()  -  1)  {      [BUGGY]  Integer  dec  =  getInteger(str);  [BUGGY]      exp  =  str.substring(expPos  +  1,  str.length());  }  else  {  exp  =  null;  }  if  (dec  ==  null  &&  exp  ==  null)  {  try  {  return  createInteger(str);  }  catch  (NumberFormatException  nfe)  {  //  NOPMD  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  	projects/Lang7/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	556	556	1	replace	Integer  dec  =  getInteger(str);	  Integer    dec    =    createInteger(decPos);    	non-compiled	[CE]  ')'  expected	44	None	replace
150	[BUG]  [BUGGY]  Integer  dec  =  createInteger(str.charAt(0));  [CE]  ')'  expected  [FE]                AssertionError      [CONTEXT]      }  default  :  throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  }  }  else  {    if  (expPos  >  -1  &&  expPos  <  str.length()  -  1)  {      [BUGGY]  Integer  dec  =  createInteger(str.charAt(0));  [BUGGY]      exp  =  str.substring(expPos  +  1,  str.length());  }  else  {  exp  =  null;  }  if  (dec  ==  null  &&  exp  ==  null)  {  try  {  return  createInteger(str);  }  catch  (NumberFormatException  nfe)  {  //  NOPMD  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  	projects/Lang7/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	556	556	1	replace	Integer  dec  =  createInteger(str.charAt(0));	  Integer    dec    =    createInteger(str.length());    	non-compiled	[CE]  ')'  expected	15	None	replace
151	[BUG]  [BUGGY]  MutableDecimal  dec  =  createMutableDecimal(str);  [CE]  ')'  expected  [FE]                      AssertionError      [CONTEXT]      }  default  :  throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  }  }  else  {    if  (expPos  >  -1  &&  expPos  <  str.length()  -  1)  {      [BUGGY]  MutableDecimal  dec  =  createMutableDecimal(str);  [BUGGY]      }  else  {  exp  =  null;  }  if  (dec  ==  null  &&  exp  ==  null)  {  try  {  return  createInteger(str);  }  catch  (NumberFormatException  nfe)  {  //  NOPMD  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  	projects/Lang7/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	556	556	1	replace	MutableDecimal  dec  =  createMutableDecimal(str);	  if(dec    ==    null    &&    exp    ==    null)    {    return    createInteger(str);    }    	non-compiled	[CE]  ')'  expected	53	None	replace
152	[BUG]  [BUGGY]  NeighborDecimal  dec  =  getDecimalDecimal(str);  [CE]  ')'  expected  [FE]                        AssertionError      [CONTEXT]      }  default  :  throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  }  }  else  {    if  (expPos  >  -1  &&  expPos  <  str.length()  -  1)  {      [BUGGY]  NeighborDecimal  dec  =  getDecimalDecimal(str);  [BUGGY]      }  else  {  exp  =  null;  }  if  (dec  ==  null  &&  exp  ==  null)  {  try  {  return  createInteger(str);  }  catch  (NumberFormatException  nfe)  {  //  NOPMD  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  	projects/Lang7/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	556	556	1	replace	NeighborDecimal  dec  =  getDecimalDecimal(str);	  if(dec    ==    null    &&    exp    ==    null)    {    return    createInteger(str);    }    	non-compiled	[CE]  ')'  expected	53	None	replace
153	[BUG]  [BUGGY]  NeighborDecimal  dec  =  getDecimalDecimal();  [CE]  ')'  expected  [FE]                          AssertionError      [CONTEXT]      }  default  :  throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  }  }  else  {    if  (expPos  >  -1  &&  expPos  <  str.length()  -  1)  {      [BUGGY]  NeighborDecimal  dec  =  getDecimalDecimal();  [BUGGY]      }  else  {  exp  =  null;  }  if  (dec  ==  null  &&  exp  ==  null)  {  try  {  return  createInteger(str);  }  catch  (NumberFormatException  nfe)  {  //  NOPMD  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  	projects/Lang7/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	556	556	1	replace	NeighborDecimal  dec  =  getDecimalDecimal();	  if(dec    ==    null    &&    exp    ==    null)    {    return    createInteger(str);    }    	non-compiled	[CE]  ')'  expected	53	None	replace
154	[BUG]  [BUGGY]  exp  =  str.substring(0,  str.length()));  [CE]  ')'  expected  [FE]                    AssertionError      [CONTEXT]      }  default  :  throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  }  }  else  {    if  (expPos  >  -1  &&  expPos  <  str.length()  -  1)  {      [BUGGY]  exp  =  str.substring(0,  str.length()));  [BUGGY]      }  else  {  exp  =  null;  }  if  (dec  ==  null  &&  exp  ==  null)  {  try  {  return  createInteger(str);  }  catch  (NumberFormatException  nfe)  {  //  NOPMD  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  	projects/Lang7/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	556	556	1	replace	exp  =  str.substring(0,  str.length()));	  exp    =    str.substring(0,    str.length()    +    1);    	non-compiled	[CE]  ')'  expected	31	None	replace
155	[BUG]  [BUGGY]  Integer  dec  =  createInteger(str.substring(expPos  +  1),  decPos);  [CE]  ')'  expected  [FE]            AssertionError      [CONTEXT]      }  default  :  throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  }  }  else  {    if  (expPos  >  -1  &&  expPos  <  str.length()  -  1)  {      [BUGGY]  Integer  dec  =  createInteger(str.substring(expPos  +  1),  decPos);  [BUGGY]      exp  =  str.substring(expPos  +  1,  str.length());  }  else  {  exp  =  null;  }  if  (dec  ==  null  &&  exp  ==  null)  {  try  {  return  createInteger(str);  }  catch  (NumberFormatException  nfe)  {  //  NOPMD  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  	projects/Lang7/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	556	556	1	replace	Integer  dec  =  createInteger(str.substring(expPos  +  1),  decPos);	  Integer    dec    =    createInteger(str.substring(expPos    +    1));    	non-compiled	[CE]  ')'  expected	54	None	replace
156	[BUG]  [BUGGY]  Integer  dec  =  createInteger(str.substring(0,  expPos  +  1));  [CE]  ')'  expected  [FE]              AssertionError      [CONTEXT]      }  default  :  throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  }  }  else  {    if  (expPos  >  -1  &&  expPos  <  str.length()  -  1)  {      [BUGGY]  Integer  dec  =  createInteger(str.substring(0,  expPos  +  1));  [BUGGY]      exp  =  str.substring(expPos  +  1,  str.length());  }  else  {  exp  =  null;  }  if  (dec  ==  null  &&  exp  ==  null)  {  try  {  return  createInteger(str);  }  catch  (NumberFormatException  nfe)  {  //  NOPMD  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  	projects/Lang7/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	556	556	1	replace	Integer  dec  =  createInteger(str.substring(0,  expPos  +  1));	  Integer    dec    =    createInteger(str.substring(expPos    +    1));    	non-compiled	[CE]  ')'  expected	54	None	replace
157	[BUG]  [BUGGY]  exp  =  str.substring(expPos  +  1,  str.length()  *  2);  [CE]  ')'  expected  [FE]                  AssertionError      [CONTEXT]      }  default  :  throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  }  }  else  {    if  (expPos  >  -1  &&  expPos  <  str.length()  -  1)  {      [BUGGY]  exp  =  str.substring(expPos  +  1,  str.length()  *  2);  [BUGGY]      }  else  {  exp  =  null;  }  if  (dec  ==  null  &&  exp  ==  null)  {  try  {  return  createInteger(str);  }  catch  (NumberFormatException  nfe)  {  //  NOPMD  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  	projects/Lang7/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	556	556	1	replace	exp  =  str.substring(expPos  +  1,  str.length()  *  2);	  exp    =    str.substring(expPos    +    1,    str.length();    	non-compiled	[CE]  ')'  expected	5	None	replace
158	[BUG]  [BUGGY]  Integer  dec  =  createInteger(str.substring(decPos,  expPos));  [CE]  ')'  expected  [FE]              AssertionError      [CONTEXT]      }  default  :  throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  }  }  else  {    if  (expPos  >  -1  &&  expPos  <  str.length()  -  1)  {      [BUGGY]  Integer  dec  =  createInteger(str.substring(decPos,  expPos));  [BUGGY]      exp  =  str.substring(expPos  +  1,  str.length());  }  else  {  exp  =  null;  }  if  (dec  ==  null  &&  exp  ==  null)  {  try  {  return  createInteger(str);  }  catch  (NumberFormatException  nfe)  {  //  NOPMD  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  	projects/Lang7/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	556	556	1	replace	Integer  dec  =  createInteger(str.substring(decPos,  expPos));	  Integer    dec    =    createInteger(str,    expPos);    	non-compiled	[CE]  ')'  expected	14	None	replace
159	[BUG]  [BUGGY]  int  decPos  =  str.indexOf('.')/  1;  [CE]  ')'  expected  [FE]                AssertionError      [CONTEXT]      }  default  :  throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  }  }  else  {    if  (expPos  >  -1  &&  expPos  <  str.length()  -  1)  {      [BUGGY]  int  decPos  =  str.indexOf('.')/  1;  [BUGGY]      exp  =  str.substring(expPos  +  1,  str.length());  }  else  {  exp  =  null;  }  if  (dec  ==  null  &&  exp  ==  null)  {  try  {  return  createInteger(str);  }  catch  (NumberFormatException  nfe)  {  //  NOPMD  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  	projects/Lang7/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	556	556	1	replace	int  decPos  =  str.indexOf('.')/  1;	  int    decPos    =    str.indexOf('.')+    1;    	non-compiled	[CE]  ')'  expected	50	None	replace
160	[BUG]  [BUGGY]  if(expPos  >  -1  &&  expPos  <  str.length()  -  1)  {  [CE]  ')'  expected  [FE]                    AssertionError      [CONTEXT]      }  default  :  throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  }  }  else  {    if  (expPos  >  -1  &&  expPos  <  str.length()  -  1)  {      [BUGGY]  if(expPos  >  -1  &&  expPos  <  str.length()  -  1)  {  [BUGGY]      }  else  {  exp  =  null;  }  if  (dec  ==  null  &&  exp  ==  null)  {  try  {  return  createInteger(str);  }  catch  (NumberFormatException  nfe)  {  //  NOPMD  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  	projects/Lang7/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	556	556	1	replace	if(expPos  >  -1  &&  expPos  <  str.length()  -  1)  {	  if(dec    ==    null    &&    exp    ==    null)    {    return    createBigInteger(str);    }    	non-compiled	[CE]  ')'  expected	52	None	replace
161	[BUG]  [BUGGY]  if(expPos  >=  decPos)  {  return  createBigInteger(str);  }  [CE]  ')'  expected  [FE]                      AssertionError      [CONTEXT]      }  default  :  throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  }  }  else  {    if  (expPos  >  -1  &&  expPos  <  str.length()  -  1)  {      [BUGGY]  if(expPos  >=  decPos)  {  return  createBigInteger(str);  }  [BUGGY]      }  else  {  exp  =  null;  }  if  (dec  ==  null  &&  exp  ==  null)  {  try  {  return  createInteger(str);  }  catch  (NumberFormatException  nfe)  {  //  NOPMD  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  	projects/Lang7/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	556	556	1	replace	if(expPos  >=  decPos)  {  return  createBigInteger(str);  }	  if(dec    ==    null    &&    exp    ==    null)    {    return    createBigInteger(str);    }    	non-compiled	[CE]  ')'  expected	52	None	replace
162	[BUG]  [BUGGY]  int  expPos  =  str.lastIndexOf('.')/  1;  [CE]  ')'  expected  [FE]              AssertionError      [CONTEXT]      }  default  :  throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  }  }  else  {    if  (expPos  >  -1  &&  expPos  <  str.length()  -  1)  {      [BUGGY]  int  expPos  =  str.lastIndexOf('.')/  1;  [BUGGY]      exp  =  str.substring(expPos  +  1,  str.length());  }  else  {  exp  =  null;  }  if  (dec  ==  null  &&  exp  ==  null)  {  try  {  return  createInteger(str);  }  catch  (NumberFormatException  nfe)  {  //  NOPMD  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  	projects/Lang7/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	556	556	1	replace	int  expPos  =  str.lastIndexOf('.')/  1;	  int    expPos    =    str.lastIndexOf('.')+    1;    	non-compiled	[CE]  ')'  expected	58	None	replace
163	[BUG]  [BUGGY]  aughtExceptionHandler.handleMalformedException( " ");  [CE]  ')'  expected  [FE]                      AssertionError      [CONTEXT]      }  default  :  throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  }  }  else  {    if  (expPos  >  -1  &&  expPos  <  str.length()  -  1)  {      [BUGGY]  aughtExceptionHandler.handleMalformedException( " ");  [BUGGY]      }  else  {  exp  =  null;  }  if  (dec  ==  null  &&  exp  ==  null)  {  try  {  return  createInteger(str);  }  catch  (NumberFormatException  nfe)  {  //  NOPMD  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  	projects/Lang7/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	556	556	1	replace	aughtExceptionHandler.handleMalformedException( " ");	  if(expPos    >    -1    &&    expPos    <    str.length()    -    1)    {    return    createInteger(str);    }    	non-compiled	[CE]  ')'  expected	37	None	replace
164	[BUG]  [BUGGY]  while(expPos  >  -1  &&  expPos  <  str.length()  -  1)  {  return  createLong(str);  [CE]  ')'  expected  [FE]                    AssertionError      [CONTEXT]      }  default  :  throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  }  }  else  {    if  (expPos  >  -1  &&  expPos  <  str.length()  -  1)  {      [BUGGY]  while(expPos  >  -1  &&  expPos  <  str.length()  -  1)  {  return  createLong(str);  [BUGGY]      }  else  {  exp  =  null;  }  if  (dec  ==  null  &&  exp  ==  null)  {  try  {  return  createInteger(str);  }  catch  (NumberFormatException  nfe)  {  //  NOPMD  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  	projects/Lang7/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	556	556	1	replace	while(expPos  >  -1  &&  expPos  <  str.length()  -  1)  {  return  createLong(str);	  if(expPos    >    -1    &&    expPos    <    str.length()    -    1)    {    return    createLong(str);    }    	non-compiled	[CE]  ')'  expected	36	None	replace
165	[BUG]  [BUGGY]  while(expPos  >  -1  &&  expPos  <  str.length())  {  return  createLong(str);  [CE]  ')'  expected  [FE]                      AssertionError      [CONTEXT]      }  default  :  throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  }  }  else  {    if  (expPos  >  -1  &&  expPos  <  str.length()  -  1)  {      [BUGGY]  while(expPos  >  -1  &&  expPos  <  str.length())  {  return  createLong(str);  [BUGGY]      }  else  {  exp  =  null;  }  if  (dec  ==  null  &&  exp  ==  null)  {  try  {  return  createInteger(str);  }  catch  (NumberFormatException  nfe)  {  //  NOPMD  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  	projects/Lang7/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	556	556	1	replace	while(expPos  >  -1  &&  expPos  <  str.length())  {  return  createLong(str);	  if(expPos    >    -1    &&    expPos    <    str.length()    -    1)    {    return    createLong(str);    }    	non-compiled	[CE]  ')'  expected	36	None	replace
166	[BUG]  [BUGGY]  while(expPos  >  -1  &&  expPos  <  str.length()  -  1)  {  return  createInteger(str);  [CE]  ')'  expected  [FE]                        AssertionError      [CONTEXT]      }  default  :  throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  }  }  else  {    if  (expPos  >  -1  &&  expPos  <  str.length()  -  1)  {      [BUGGY]  while(expPos  >  -1  &&  expPos  <  str.length()  -  1)  {  return  createInteger(str);  [BUGGY]      }  else  {  exp  =  null;  }  if  (dec  ==  null  &&  exp  ==  null)  {  try  {  return  createInteger(str);  }  catch  (NumberFormatException  nfe)  {  //  NOPMD  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  	projects/Lang7/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	556	556	1	replace	while(expPos  >  -1  &&  expPos  <  str.length()  -  1)  {  return  createInteger(str);	  if(expPos    >    -1    &&    expPos    <    str.length()    -    1)    {    return    createLong(str);    }    	non-compiled	[CE]  ')'  expected	36	None	replace
167	[BUG]  [BUGGY]  int  expPos  =  str.indexOf('-');  [CE]  ')'  expected  [FE]                  AssertionError      [CONTEXT]      }  default  :  throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  }  }  else  {    if  (expPos  >  -1  &&  expPos  <  str.length()  -  1)  {      [BUGGY]  int  expPos  =  str.indexOf('-');  [BUGGY]      exp  =  str.substring(expPos  +  1,  str.length());  }  else  {  exp  =  null;  }  if  (dec  ==  null  &&  exp  ==  null)  {  try  {  return  createInteger(str);  }  catch  (NumberFormatException  nfe)  {  //  NOPMD  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  	projects/Lang7/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	556	556	1	replace	int  expPos  =  str.indexOf('-');	  int    expPos    =    str.lastIndexOf('-');    	non-compiled	[CE]  ')'  expected	12	None	replace
168	[BUG]  [BUGGY]  String  str  =  str.substring(0,  expPos  +  2);  [CE]  ')'  expected  [FE]                AssertionError      [CONTEXT]      }  default  :  throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  }  }  else  {    if  (expPos  >  -1  &&  expPos  <  str.length()  -  1)  {      [BUGGY]  String  str  =  str.substring(0,  expPos  +  2);  [BUGGY]      exp  =  str.substring(expPos  +  1,  str.length());  }  else  {  exp  =  null;  }  if  (dec  ==  null  &&  exp  ==  null)  {  try  {  return  createInteger(str);  }  catch  (NumberFormatException  nfe)  {  //  NOPMD  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  	projects/Lang7/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	556	556	1	replace	String  str  =  str.substring(0,  expPos  +  2);	  String    str    =    str.substring(0,    expPos.length());    	non-compiled	[CE]  ')'  expected	9	None	replace
169	[BUG]  [BUGGY]  exp  =  str.substring(0,  expPos  +  1);  [CE]  ')'  expected  [FE]                  AssertionError      [CONTEXT]      }  default  :  throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  }  }  else  {    if  (expPos  >  -1  &&  expPos  <  str.length()  -  1)  {      [BUGGY]  exp  =  str.substring(0,  expPos  +  1);  [BUGGY]      }  else  {  exp  =  null;  }  if  (dec  ==  null  &&  exp  ==  null)  {  try  {  return  createInteger(str);  }  catch  (NumberFormatException  nfe)  {  //  NOPMD  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  	projects/Lang7/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	556	556	1	replace	exp  =  str.substring(0,  expPos  +  1);	  exp    =    str.substring(0,    str.length());    	non-compiled	[CE]  ')'  expected	30	None	replace
170	[BUG]  [BUGGY]  exp  =  str.substring(expPos,  str.length()  -  1);  [CE]  ')'  expected  [FE]                    AssertionError      [CONTEXT]      }  default  :  throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  }  }  else  {    if  (expPos  >  -1  &&  expPos  <  str.length()  -  1)  {      [BUGGY]  exp  =  str.substring(expPos,  str.length()  -  1);  [BUGGY]      }  else  {  exp  =  null;  }  if  (dec  ==  null  &&  exp  ==  null)  {  try  {  return  createInteger(str);  }  catch  (NumberFormatException  nfe)  {  //  NOPMD  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  	projects/Lang7/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	556	556	1	replace	exp  =  str.substring(expPos,  str.length()  -  1);	  exp    =    str.substring(0,    str.length());    	non-compiled	[CE]  ')'  expected	30	None	replace
171	[BUG]  [BUGGY]  Integer  dec  =  createInteger(str.substring(decPos,  expPos  +  1));  [CE]  ')'  expected  [FE]            AssertionError      [CONTEXT]      }  default  :  throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  }  }  else  {    if  (expPos  >  -1  &&  expPos  <  str.length()  -  1)  {      [BUGGY]  Integer  dec  =  createInteger(str.substring(decPos,  expPos  +  1));  [BUGGY]      exp  =  str.substring(expPos  +  1,  str.length());  }  else  {  exp  =  null;  }  if  (dec  ==  null  &&  exp  ==  null)  {  try  {  return  createInteger(str);  }  catch  (NumberFormatException  nfe)  {  //  NOPMD  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  	projects/Lang7/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	556	556	1	replace	Integer  dec  =  createInteger(str.substring(decPos,  expPos  +  1));	  Integer    dec    =    createInteger(str.substring(expPos    +    1));    	non-compiled	[CE]  ')'  expected	54	None	replace
172	[BUG]  [BUGGY]  int  expPos  =  str.indexOf('.')/  1;  [CE]  ')'  expected  [FE]                    AssertionError      [CONTEXT]      }  default  :  throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  }  }  else  {    if  (expPos  >  -1  &&  expPos  <  str.length()  -  1)  {      [BUGGY]  int  expPos  =  str.indexOf('.')/  1;  [BUGGY]      exp  =  str.substring(expPos  +  1,  str.length());  }  else  {  exp  =  null;  }  if  (dec  ==  null  &&  exp  ==  null)  {  try  {  return  createInteger(str);  }  catch  (NumberFormatException  nfe)  {  //  NOPMD  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  	projects/Lang7/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	556	556	1	replace	int  expPos  =  str.indexOf('.')/  1;	  int    expPos    =    str.indexOf('.')+    1;    	non-compiled	[CE]  ')'  expected	41	None	replace
173	[BUG]  [BUGGY]  if(expPos  >  -1  &&  expPos  <  str.length()  -  1)  {  while(dec  ==  null  &&  expPos  <  decPos)  {  return  createInteger(str);  }  [CE]  ')'  expected  [FE]                      AssertionError      [CONTEXT]      }  default  :  throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  }  }  else  {    if  (expPos  >  -1  &&  expPos  <  str.length()  -  1)  {      [BUGGY]  if(expPos  >  -1  &&  expPos  <  str.length()  -  1)  {  while(dec  ==  null  &&  expPos  <  decPos)  {  return  createInteger(str);  }  [BUGGY]      }  else  {  exp  =  null;  }  if  (dec  ==  null  &&  exp  ==  null)  {  try  {  return  createInteger(str);  }  catch  (NumberFormatException  nfe)  {  //  NOPMD  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  	projects/Lang7/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	556	556	1	replace	if(expPos  >  -1  &&  expPos  <  str.length()  -  1)  {  while(dec  ==  null  &&  expPos  <  decPos)  {  return  createInteger(str);  }	  if(dec    ==    null    &&    exp    ==    null)    {    return    createInteger(str);    }    	non-compiled	[CE]  ')'  expected	53	None	replace
174	[BUG]  [BUGGY]  if(expPos  >  -1  &&  expPos  <  str.length()  -  1)  {  if(dec  ==  null  &&  exp  ==  null)  {  return  createNumber(str);  }  [CE]  ')'  expected  [FE]                        AssertionError      [CONTEXT]      }  default  :  throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  }  }  else  {    if  (expPos  >  -1  &&  expPos  <  str.length()  -  1)  {      [BUGGY]  if(expPos  >  -1  &&  expPos  <  str.length()  -  1)  {  if(dec  ==  null  &&  exp  ==  null)  {  return  createNumber(str);  }  [BUGGY]      }  else  {  exp  =  null;  }  if  (dec  ==  null  &&  exp  ==  null)  {  try  {  return  createInteger(str);  }  catch  (NumberFormatException  nfe)  {  //  NOPMD  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  	projects/Lang7/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	556	556	1	replace	if(expPos  >  -1  &&  expPos  <  str.length()  -  1)  {  if(dec  ==  null  &&  exp  ==  null)  {  return  createNumber(str);  }	  if(dec    ==    null    &&    exp    ==    null)    {    return    createInteger(str);    }    	non-compiled	[CE]  ')'  expected	53	None	replace
175	[BUG]  [BUGGY]  String  str  =  str.substring(0,  expPos.length())+  1;  [CE]  ')'  expected  [FE]            AssertionError      [CONTEXT]      }  default  :  throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  }  }  else  {    if  (expPos  >  -1  &&  expPos  <  str.length()  -  1)  {      [BUGGY]  String  str  =  str.substring(0,  expPos.length())+  1;  [BUGGY]      exp  =  str.substring(expPos  +  1,  str.length());  }  else  {  exp  =  null;  }  if  (dec  ==  null  &&  exp  ==  null)  {  try  {  return  createInteger(str);  }  catch  (NumberFormatException  nfe)  {  //  NOPMD  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  	projects/Lang7/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	556	556	1	replace	String  str  =  str.substring(0,  expPos.length())+  1;	  String    str    =    str.substring(0,    expPos.length()    -    1);    	non-compiled	[CE]  ')'  expected	57	None	replace
176	[BUG]  [BUGGY]  String  str  =  str.substring(0,  expPos).trim();  [CE]  ')'  expected  [FE]            AssertionError      [CONTEXT]      }  default  :  throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  }  }  else  {    if  (expPos  >  -1  &&  expPos  <  str.length()  -  1)  {      [BUGGY]  String  str  =  str.substring(0,  expPos).trim();  [BUGGY]      exp  =  str.substring(expPos  +  1,  str.length());  }  else  {  exp  =  null;  }  if  (dec  ==  null  &&  exp  ==  null)  {  try  {  return  createInteger(str);  }  catch  (NumberFormatException  nfe)  {  //  NOPMD  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  	projects/Lang7/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	556	556	1	replace	String  str  =  str.substring(0,  expPos).trim();	  String    str    =    str.substring(0,    str.length());    	non-compiled	[CE]  ')'  expected	7	None	replace
177	[BUG]  [BUGGY]  exp  =  str.substring(expPos,  str.length())+  1;  [CE]  ')'  expected  [FE]                  AssertionError      [CONTEXT]      }  default  :  throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  }  }  else  {    if  (expPos  >  -1  &&  expPos  <  str.length()  -  1)  {      [BUGGY]  exp  =  str.substring(expPos,  str.length())+  1;  [BUGGY]      }  else  {  exp  =  null;  }  if  (dec  ==  null  &&  exp  ==  null)  {  try  {  return  createInteger(str);  }  catch  (NumberFormatException  nfe)  {  //  NOPMD  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  	projects/Lang7/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	556	556	1	replace	exp  =  str.substring(expPos,  str.length())+  1;	  exp    =    str.substring(0,    str.length())+    1;    	non-compiled	[CE]  ')'  expected	55	None	replace
178	[BUG]  [BUGGY]  bucket  <  0,  expPos  =  str.length();  [CE]  ')'  expected  [FE]                        AssertionError      [CONTEXT]      }  default  :  throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  }  }  else  {    if  (expPos  >  -1  &&  expPos  <  str.length()  -  1)  {      [BUGGY]  bucket  <  0,  expPos  =  str.length();  [BUGGY]      }  else  {  exp  =  null;  }  if  (dec  ==  null  &&  exp  ==  null)  {  try  {  return  createInteger(str);  }  catch  (NumberFormatException  nfe)  {  //  NOPMD  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  	projects/Lang7/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	556	556	1	replace	bucket  <  0,  expPos  =  str.length();	  if(expPos    >    -1    &&    expPos    <    str.length()    -    1)    {    throw    new    NumberFormatException(   "   ");    }    	non-compiled	[CE]  ')'  expected	38	None	replace
179	[BUG]  [BUGGY]  aughtException( " ");  [CE]  ')'  expected  [FE]                          AssertionError      [CONTEXT]      }  default  :  throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  }  }  else  {    if  (expPos  >  -1  &&  expPos  <  str.length()  -  1)  {      [BUGGY]  aughtException( " ");  [BUGGY]      }  else  {  exp  =  null;  }  if  (dec  ==  null  &&  exp  ==  null)  {  try  {  return  createInteger(str);  }  catch  (NumberFormatException  nfe)  {  //  NOPMD  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  	projects/Lang7/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	556	556	1	replace	aughtException( " ");	  if(expPos    >    -1    &&    expPos    <    str.length()    -    1)    {    throw    new    NumberFormatException(   "   ");    }    	non-compiled	[CE]  ')'  expected	38	None	replace
180	[BUG]  [BUGGY]  exp  -=  str.substring(expPos  +  1,  str.length()  *  2);  [CE]  ')'  expected  [FE]              AssertionError      [CONTEXT]      }  default  :  throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  }  }  else  {    if  (expPos  >  -1  &&  expPos  <  str.length()  -  1)  {      [BUGGY]  exp  -=  str.substring(expPos  +  1,  str.length()  *  2);  [BUGGY]      }  else  {  exp  =  null;  }  if  (dec  ==  null  &&  exp  ==  null)  {  try  {  return  createInteger(str);  }  catch  (NumberFormatException  nfe)  {  //  NOPMD  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  	projects/Lang7/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	556	556	1	replace	exp  -=  str.substring(expPos  +  1,  str.length()  *  2);	  exp    -=    str.substring(expPos    +    1,    str.length());    	non-compiled	[CE]  ')'  expected	51	None	replace
181	[BUG]  [BUGGY]  exp  =  str.substring(expPos,  expPos  +  1,  str.length()  -  1);  [CE]  ')'  expected  [FE]              AssertionError      [CONTEXT]      }  default  :  throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  }  }  else  {    if  (expPos  >  -1  &&  expPos  <  str.length()  -  1)  {      [BUGGY]  exp  =  str.substring(expPos,  expPos  +  1,  str.length()  -  1);  [BUGGY]      }  else  {  exp  =  null;  }  if  (dec  ==  null  &&  exp  ==  null)  {  try  {  return  createInteger(str);  }  catch  (NumberFormatException  nfe)  {  //  NOPMD  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  	projects/Lang7/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	556	556	1	replace	exp  =  str.substring(expPos,  expPos  +  1,  str.length()  -  1);	  exp    =    str.substring(Expression.MIN_VALUE,    expPos    +    1,    str.length());    	non-compiled	[CE]  ')'  expected	39	None	replace
182	[BUG]  [BUGGY]  exp  = " "  +  str.substring(expPos  +  1,  str.length());  [CE]  ')'  expected  [FE]            AssertionError      [CONTEXT]      }  default  :  throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  }  }  else  {    if  (expPos  >  -1  &&  expPos  <  str.length()  -  1)  {      [BUGGY]  exp  = " "  +  str.substring(expPos  +  1,  str.length());  [BUGGY]      }  else  {  exp  =  null;  }  if  (dec  ==  null  &&  exp  ==  null)  {  try  {  return  createInteger(str);  }  catch  (NumberFormatException  nfe)  {  //  NOPMD  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  	projects/Lang7/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	556	556	1	replace	exp  = " "  +  str.substring(expPos  +  1,  str.length());	  exp    =    string.substring(expPos    +    1,    str.length());    	non-compiled	[CE]  ')'  expected	6	None	replace
183	[BUG]  [BUGGY]  int  expPos  =  str.lastIndexOf('.')-  1;  [CE]  ')'  expected  [FE]              AssertionError      [CONTEXT]      }  default  :  throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  }  }  else  {    if  (expPos  >  -1  &&  expPos  <  str.length()  -  1)  {      [BUGGY]  int  expPos  =  str.lastIndexOf('.')-  1;  [BUGGY]      exp  =  str.substring(expPos  +  1,  str.length());  }  else  {  exp  =  null;  }  if  (dec  ==  null  &&  exp  ==  null)  {  try  {  return  createInteger(str);  }  catch  (NumberFormatException  nfe)  {  //  NOPMD  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  	projects/Lang7/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	556	556	1	replace	int  expPos  =  str.lastIndexOf('.')-  1;	  int    expPos    =    str.length()    -    1;    	non-compiled	[CE]  ')'  expected	10	None	replace
184	[BUG]  [BUGGY]  int  expPos  =  str.lastIndexOf('-')+  1;  [CE]  ')'  expected  [FE]                AssertionError      [CONTEXT]      }  default  :  throw  new  NumberFormatException(str  +       "  is  not  a  valid  number.     ");  }  }  else  {    if  (expPos  >  -1  &&  expPos  <  str.length()  -  1)  {      [BUGGY]  int  expPos  =  str.lastIndexOf('-')+  1;  [BUGGY]      exp  =  str.substring(expPos  +  1,  str.length());  }  else  {  exp  =  null;  }  if  (dec  ==  null  &&  exp  ==  null)  {  try  {  return  createInteger(str);  }  catch  (NumberFormatException  nfe)  {  //  NOPMD  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  	projects/Lang7/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	556	556	1	replace	int  expPos  =  str.lastIndexOf('-')+  1;	  int    expPos    =    str.length()    -    1;    	non-compiled	[CE]  ')'  expected	10	None	replace
