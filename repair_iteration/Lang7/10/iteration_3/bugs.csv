bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  return  createNumber(str,  1);  [CE]  'catch'  without  'try'  [FE]                      AssertionError      [CONTEXT]      public  static  Number  createNumber(String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {      [BUGGY]  return  createNumber(str,  1);  [BUGGY]      }  if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(     "A  blank  string  is  not  a  valid  number     ");  }  if  (str.startsWith(     "--     "))  {  return  null;  }  if  (str.startsWith(     "0x     ")  ||  str.startsWith(     "-0x     ")  ||  str.startsWith(     "0X     ")  ||  str.startsWith(     "-0X     "))  {  int  hexDigits  =  str.length()  -  2;  //  drop  0x  if  (str.startsWith(     "-     "))  {  //  drop  -  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  	projects/Lang7/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	447	447	1	replace	return  createNumber(str,  1);	  return    createNumber(str,    0);    	non-compiled	[CE]  'catch'  without  'try'	72	None	replace
2	[BUG]  [BUGGY]  return  createNumber(str,  0L);  [CE]  'catch'  without  'try'  [FE]                        AssertionError      [CONTEXT]      public  static  Number  createNumber(String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {      [BUGGY]  return  createNumber(str,  0L);  [BUGGY]      }  if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(     "A  blank  string  is  not  a  valid  number     ");  }  if  (str.startsWith(     "--     "))  {  return  null;  }  if  (str.startsWith(     "0x     ")  ||  str.startsWith(     "-0x     ")  ||  str.startsWith(     "0X     ")  ||  str.startsWith(     "-0X     "))  {  int  hexDigits  =  str.length()  -  2;  //  drop  0x  if  (str.startsWith(     "-     "))  {  //  drop  -  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  	projects/Lang7/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	447	447	1	replace	return  createNumber(str,  0L);	  return    createNumber(str,    0);    	non-compiled	[CE]  'catch'  without  'try'	72	None	replace
3	[BUG]  [BUGGY]  return  createNumber(str,  0,  str.length());  [CE]  'catch'  without  'try'  [FE]                          AssertionError      [CONTEXT]      public  static  Number  createNumber(String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {      [BUGGY]  return  createNumber(str,  0,  str.length());  [BUGGY]      }  if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(     "A  blank  string  is  not  a  valid  number     ");  }  if  (str.startsWith(     "--     "))  {  return  null;  }  if  (str.startsWith(     "0x     ")  ||  str.startsWith(     "-0x     ")  ||  str.startsWith(     "0X     ")  ||  str.startsWith(     "-0X     "))  {  int  hexDigits  =  str.length()  -  2;  //  drop  0x  if  (str.startsWith(     "-     "))  {  //  drop  -  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  	projects/Lang7/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	447	447	1	replace	return  createNumber(str,  0,  str.length());	  return    createNumber(str,    0);    	non-compiled	[CE]  'catch'  without  'try'	72	None	replace
4	[BUG]  [BUGGY]  Number  str  =  createNumber(str,  expPos);  [CE]  'catch'  without  'try'  [FE]            AssertionError      [CONTEXT]      public  static  Number  createNumber(String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {      [BUGGY]  Number  str  =  createNumber(str,  expPos);  [BUGGY]      return  null;  }  if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(     "A  blank  string  is  not  a  valid  number     ");  }  if  (str.startsWith(     "--     "))  {  return  null;  }  if  (str.startsWith(     "0x     ")  ||  str.startsWith(     "-0x     ")  ||  str.startsWith(     "0X     ")  ||  str.startsWith(     "-0X     "))  {  int  hexDigits  =  str.length()  -  2;  //  drop  0x  if  (str.startsWith(     "-     "))  {  //  drop  -  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  	projects/Lang7/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	447	447	1	replace	Number  str  =  createNumber(str,  expPos);	  Number    str    =    createNumber(str,    hexDigits);    	non-compiled	[CE]  'catch'  without  'try'	41	None	replace
5	[BUG]  [BUGGY]  Number  str  =  createNumber(str,  hexDigits,  exp);  [CE]  'catch'  without  'try'  [FE]              AssertionError      [CONTEXT]      public  static  Number  createNumber(String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {      [BUGGY]  Number  str  =  createNumber(str,  hexDigits,  exp);  [BUGGY]      return  null;  }  if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(     "A  blank  string  is  not  a  valid  number     ");  }  if  (str.startsWith(     "--     "))  {  return  null;  }  if  (str.startsWith(     "0x     ")  ||  str.startsWith(     "-0x     ")  ||  str.startsWith(     "0X     ")  ||  str.startsWith(     "-0X     "))  {  int  hexDigits  =  str.length()  -  2;  //  drop  0x  if  (str.startsWith(     "-     "))  {  //  drop  -  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  	projects/Lang7/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	447	447	1	replace	Number  str  =  createNumber(str,  hexDigits,  exp);	  Number    str    =    createNumber(str,    hexDigits);    	non-compiled	[CE]  'catch'  without  'try'	41	None	replace
6	[BUG]  [BUGGY]  Number  str  =  createNumber(str,  hexDigits,  expPos);  [CE]  'catch'  without  'try'  [FE]                AssertionError      [CONTEXT]      public  static  Number  createNumber(String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {      [BUGGY]  Number  str  =  createNumber(str,  hexDigits,  expPos);  [BUGGY]      return  null;  }  if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(     "A  blank  string  is  not  a  valid  number     ");  }  if  (str.startsWith(     "--     "))  {  return  null;  }  if  (str.startsWith(     "0x     ")  ||  str.startsWith(     "-0x     ")  ||  str.startsWith(     "0X     ")  ||  str.startsWith(     "-0X     "))  {  int  hexDigits  =  str.length()  -  2;  //  drop  0x  if  (str.startsWith(     "-     "))  {  //  drop  -  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  	projects/Lang7/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	447	447	1	replace	Number  str  =  createNumber(str,  hexDigits,  expPos);	  Number    str    =    createNumber(str,    hexDigits);    	non-compiled	[CE]  'catch'  without  'try'	41	None	replace
7	[BUG]  [BUGGY]  Number  str  =  createNumber(str,  hexDigits,  0);  [CE]  'catch'  without  'try'  [FE]                  AssertionError      [CONTEXT]      public  static  Number  createNumber(String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {      [BUGGY]  Number  str  =  createNumber(str,  hexDigits,  0);  [BUGGY]      return  null;  }  if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(     "A  blank  string  is  not  a  valid  number     ");  }  if  (str.startsWith(     "--     "))  {  return  null;  }  if  (str.startsWith(     "0x     ")  ||  str.startsWith(     "-0x     ")  ||  str.startsWith(     "0X     ")  ||  str.startsWith(     "-0X     "))  {  int  hexDigits  =  str.length()  -  2;  //  drop  0x  if  (str.startsWith(     "-     "))  {  //  drop  -  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  	projects/Lang7/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	447	447	1	replace	Number  str  =  createNumber(str,  hexDigits,  0);	  Number    str    =    createNumber(str,    hexDigits);    	non-compiled	[CE]  'catch'  without  'try'	41	None	replace
8	[BUG]  [BUGGY]  return(str  ==  null)?  null  :  new  Double(str.length()  +  1);  [CE]  'catch'  without  'try'  [FE]              AssertionError      [CONTEXT]      public  static  Number  createNumber(String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {      [BUGGY]  return(str  ==  null)?  null  :  new  Double(str.length()  +  1);  [BUGGY]      }  if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(     "A  blank  string  is  not  a  valid  number     ");  }  if  (str.startsWith(     "--     "))  {  return  null;  }  if  (str.startsWith(     "0x     ")  ||  str.startsWith(     "-0x     ")  ||  str.startsWith(     "0X     ")  ||  str.startsWith(     "-0X     "))  {  int  hexDigits  =  str.length()  -  2;  //  drop  0x  if  (str.startsWith(     "-     "))  {  //  drop  -  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  	projects/Lang7/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	447	447	1	replace	return(str  ==  null)?  null  :  new  Double(str.length()  +  1);	  return(str    ==    null)?    null    :    new    Double(str.length());    	non-compiled	[CE]  'catch'  without  'try'	52	None	replace
9	[BUG]  [BUGGY]  return(str  ==  null)?  null  :  new  Double(str.length()  +  2);  [CE]  'catch'  without  'try'  [FE]                AssertionError      [CONTEXT]      public  static  Number  createNumber(String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {      [BUGGY]  return(str  ==  null)?  null  :  new  Double(str.length()  +  2);  [BUGGY]      }  if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(     "A  blank  string  is  not  a  valid  number     ");  }  if  (str.startsWith(     "--     "))  {  return  null;  }  if  (str.startsWith(     "0x     ")  ||  str.startsWith(     "-0x     ")  ||  str.startsWith(     "0X     ")  ||  str.startsWith(     "-0X     "))  {  int  hexDigits  =  str.length()  -  2;  //  drop  0x  if  (str.startsWith(     "-     "))  {  //  drop  -  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  	projects/Lang7/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	447	447	1	replace	return(str  ==  null)?  null  :  new  Double(str.length()  +  2);	  return(str    ==    null)?    null    :    new    Double(str.length());    	non-compiled	[CE]  'catch'  without  'try'	52	None	replace
10	[BUG]  [BUGGY]  return(str  ==  null)?  null  :  new  Double(str.length()  *  2);  [CE]  'catch'  without  'try'  [FE]                  AssertionError      [CONTEXT]      public  static  Number  createNumber(String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {      [BUGGY]  return(str  ==  null)?  null  :  new  Double(str.length()  *  2);  [BUGGY]      }  if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(     "A  blank  string  is  not  a  valid  number     ");  }  if  (str.startsWith(     "--     "))  {  return  null;  }  if  (str.startsWith(     "0x     ")  ||  str.startsWith(     "-0x     ")  ||  str.startsWith(     "0X     ")  ||  str.startsWith(     "-0X     "))  {  int  hexDigits  =  str.length()  -  2;  //  drop  0x  if  (str.startsWith(     "-     "))  {  //  drop  -  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  	projects/Lang7/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	447	447	1	replace	return(str  ==  null)?  null  :  new  Double(str.length()  *  2);	  return(str    ==    null)?    null    :    new    Double(str.length());    	non-compiled	[CE]  'catch'  without  'try'	52	None	replace
11	[BUG]  [BUGGY]  return  new  Number(str.length()  +  2);  [CE]  'catch'  without  'try'  [FE]                AssertionError      [CONTEXT]      public  static  Number  createNumber(String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {      [BUGGY]  return  new  Number(str.length()  +  2);  [BUGGY]      }  if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(     "A  blank  string  is  not  a  valid  number     ");  }  if  (str.startsWith(     "--     "))  {  return  null;  }  if  (str.startsWith(     "0x     ")  ||  str.startsWith(     "-0x     ")  ||  str.startsWith(     "0X     ")  ||  str.startsWith(     "-0X     "))  {  int  hexDigits  =  str.length()  -  2;  //  drop  0x  if  (str.startsWith(     "-     "))  {  //  drop  -  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  	projects/Lang7/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	447	447	1	replace	return  new  Number(str.length()  +  2);	  return    new    Number(str.length()    -    2);    	non-compiled	[CE]  'catch'  without  'try'	8	None	replace
12	[BUG]  [BUGGY]  return  new  Number(str.length();  [CE]  ')'  expected  [FE]                  AssertionError      [CONTEXT]      public  static  Number  createNumber(String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {      [BUGGY]  return  new  Number(str.length();  [BUGGY]      }  if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(     "A  blank  string  is  not  a  valid  number     ");  }  if  (str.startsWith(     "--     "))  {  return  null;  }  if  (str.startsWith(     "0x     ")  ||  str.startsWith(     "-0x     ")  ||  str.startsWith(     "0X     ")  ||  str.startsWith(     "-0X     "))  {  int  hexDigits  =  str.length()  -  2;  //  drop  0x  if  (str.startsWith(     "-     "))  {  //  drop  -  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  	projects/Lang7/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	447	447	1	replace	return  new  Number(str.length();	  return    new    Number(str.length()    -    2);    	non-compiled	[CE]  ')'  expected	8	None	replace
13	[BUG]  [BUGGY]  return  new  Number(str,  str.length());  [CE]  'catch'  without  'try'  [FE]                    AssertionError      [CONTEXT]      public  static  Number  createNumber(String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {      [BUGGY]  return  new  Number(str,  str.length());  [BUGGY]      }  if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(     "A  blank  string  is  not  a  valid  number     ");  }  if  (str.startsWith(     "--     "))  {  return  null;  }  if  (str.startsWith(     "0x     ")  ||  str.startsWith(     "-0x     ")  ||  str.startsWith(     "0X     ")  ||  str.startsWith(     "-0X     "))  {  int  hexDigits  =  str.length()  -  2;  //  drop  0x  if  (str.startsWith(     "-     "))  {  //  drop  -  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  	projects/Lang7/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	447	447	1	replace	return  new  Number(str,  str.length());	  return    new    Number(str.length()    -    2);    	non-compiled	[CE]  'catch'  without  'try'	8	None	replace
14	[BUG]  [BUGGY]  NumberUtils.copyValue(str,  mant);  [CE]  'catch'  without  'try'  [FE]                      AssertionError      [CONTEXT]      public  static  Number  createNumber(String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {      [BUGGY]  NumberUtils.copyValue(str,  mant);  [BUGGY]      return  null;  }  if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(     "A  blank  string  is  not  a  valid  number     ");  }  if  (str.startsWith(     "--     "))  {  return  null;  }  if  (str.startsWith(     "0x     ")  ||  str.startsWith(     "-0x     ")  ||  str.startsWith(     "0X     ")  ||  str.startsWith(     "-0X     "))  {  int  hexDigits  =  str.length()  -  2;  //  drop  0x  if  (str.startsWith(     "-     "))  {  //  drop  -  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  	projects/Lang7/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	447	447	1	replace	NumberUtils.copyValue(str,  mant);	  NumberUtils.copyValue(mant,    str);    	non-compiled	[CE]  'catch'  without  'try'	66	None	replace
15	[BUG]  [BUGGY]  NumberUtils.copyNumber(str,  mant);  [CE]  'catch'  without  'try'  [FE]                        AssertionError      [CONTEXT]      public  static  Number  createNumber(String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {      [BUGGY]  NumberUtils.copyNumber(str,  mant);  [BUGGY]      return  null;  }  if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(     "A  blank  string  is  not  a  valid  number     ");  }  if  (str.startsWith(     "--     "))  {  return  null;  }  if  (str.startsWith(     "0x     ")  ||  str.startsWith(     "-0x     ")  ||  str.startsWith(     "0X     ")  ||  str.startsWith(     "-0X     "))  {  int  hexDigits  =  str.length()  -  2;  //  drop  0x  if  (str.startsWith(     "-     "))  {  //  drop  -  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  	projects/Lang7/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	447	447	1	replace	NumberUtils.copyNumber(str,  mant);	  NumberUtils.copyValue(mant,    str);    	non-compiled	[CE]  'catch'  without  'try'	66	None	replace
16	[BUG]  [BUGGY]  NumberUtils.copyValue(str,  str);  [CE]  'catch'  without  'try'  [FE]                          AssertionError      [CONTEXT]      public  static  Number  createNumber(String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {      [BUGGY]  NumberUtils.copyValue(str,  str);  [BUGGY]      return  null;  }  if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(     "A  blank  string  is  not  a  valid  number     ");  }  if  (str.startsWith(     "--     "))  {  return  null;  }  if  (str.startsWith(     "0x     ")  ||  str.startsWith(     "-0x     ")  ||  str.startsWith(     "0X     ")  ||  str.startsWith(     "-0X     "))  {  int  hexDigits  =  str.length()  -  2;  //  drop  0x  if  (str.startsWith(     "-     "))  {  //  drop  -  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  	projects/Lang7/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	447	447	1	replace	NumberUtils.copyValue(str,  str);	  NumberUtils.copyValue(mant,    str);    	non-compiled	[CE]  'catch'  without  'try'	66	None	replace
17	[BUG]  [BUGGY]  Number  str  =  getNumber(str.substring(1));  [CE]  'catch'  without  'try'  [FE]                  AssertionError      [CONTEXT]      public  static  Number  createNumber(String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {      [BUGGY]  Number  str  =  getNumber(str.substring(1));  [BUGGY]      return  null;  }  if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(     "A  blank  string  is  not  a  valid  number     ");  }  if  (str.startsWith(     "--     "))  {  return  null;  }  if  (str.startsWith(     "0x     ")  ||  str.startsWith(     "-0x     ")  ||  str.startsWith(     "0X     ")  ||  str.startsWith(     "-0X     "))  {  int  hexDigits  =  str.length()  -  2;  //  drop  0x  if  (str.startsWith(     "-     "))  {  //  drop  -  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  	projects/Lang7/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	447	447	1	replace	Number  str  =  getNumber(str.substring(1));	  Number    str    =    getNumber(str.toLowerCase());    	non-compiled	[CE]  'catch'  without  'try'	45	None	replace
18	[BUG]  [BUGGY]  Number  str  =  getNumber(str.getValue());  [CE]  'catch'  without  'try'  [FE]                    AssertionError      [CONTEXT]      public  static  Number  createNumber(String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {      [BUGGY]  Number  str  =  getNumber(str.getValue());  [BUGGY]      return  null;  }  if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(     "A  blank  string  is  not  a  valid  number     ");  }  if  (str.startsWith(     "--     "))  {  return  null;  }  if  (str.startsWith(     "0x     ")  ||  str.startsWith(     "-0x     ")  ||  str.startsWith(     "0X     ")  ||  str.startsWith(     "-0X     "))  {  int  hexDigits  =  str.length()  -  2;  //  drop  0x  if  (str.startsWith(     "-     "))  {  //  drop  -  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  	projects/Lang7/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	447	447	1	replace	Number  str  =  getNumber(str.getValue());	  Number    str    =    getNumber(str.toLowerCase());    	non-compiled	[CE]  'catch'  without  'try'	45	None	replace
19	[BUG]  [BUGGY]  String  decPos  =  str.length();  [CE]  'catch'  without  'try'  [FE]                    AssertionError      [CONTEXT]      public  static  Number  createNumber(String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {      [BUGGY]  String  decPos  =  str.length();  [BUGGY]      return  null;  }  if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(     "A  blank  string  is  not  a  valid  number     ");  }  if  (str.startsWith(     "--     "))  {  return  null;  }  if  (str.startsWith(     "0x     ")  ||  str.startsWith(     "-0x     ")  ||  str.startsWith(     "0X     ")  ||  str.startsWith(     "-0X     "))  {  int  hexDigits  =  str.length()  -  2;  //  drop  0x  if  (str.startsWith(     "-     "))  {  //  drop  -  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  	projects/Lang7/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	447	447	1	replace	String  decPos  =  str.length();	  char    decPos    =    str.length();    	non-compiled	[CE]  'catch'  without  'try'	73	None	replace
20	[BUG]  [BUGGY]  char  decPos  =  str.length()  +  1;  [CE]  'catch'  without  'try'  [FE]                      AssertionError      [CONTEXT]      public  static  Number  createNumber(String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {      [BUGGY]  char  decPos  =  str.length()  +  1;  [BUGGY]      return  null;  }  if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(     "A  blank  string  is  not  a  valid  number     ");  }  if  (str.startsWith(     "--     "))  {  return  null;  }  if  (str.startsWith(     "0x     ")  ||  str.startsWith(     "-0x     ")  ||  str.startsWith(     "0X     ")  ||  str.startsWith(     "-0X     "))  {  int  hexDigits  =  str.length()  -  2;  //  drop  0x  if  (str.startsWith(     "-     "))  {  //  drop  -  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  	projects/Lang7/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	447	447	1	replace	char  decPos  =  str.length()  +  1;	  char    decPos    =    str.length();    	non-compiled	[CE]  'catch'  without  'try'	73	None	replace
21	[BUG]  [BUGGY]  NumberUtils.copyNumber(mant,  str);  [CE]  illegal  start  of  type  [FE]                      AssertionError      [CONTEXT]      public  static  Number  createNumber(String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {      [BUGGY]  NumberUtils.copyNumber(mant,  str);  [BUGGY]      return  null;  }  if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(     "A  blank  string  is  not  a  valid  number     ");  }  if  (str.startsWith(     "--     "))  {  return  null;  }  if  (str.startsWith(     "0x     ")  ||  str.startsWith(     "-0x     ")  ||  str.startsWith(     "0X     ")  ||  str.startsWith(     "-0X     "))  {  int  hexDigits  =  str.length()  -  2;  //  drop  0x  if  (str.startsWith(     "-     "))  {  //  drop  -  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  	projects/Lang7/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	447	447	1	replace	NumberUtils.copyNumber(mant,  str);	  NumberUtils.copyNumber(str,    str);    	non-compiled	[CE]  illegal  start  of  type	38	None	replace
22	[BUG]  [BUGGY]  int  decPos  =  str.lastIndexOf('.',  DEC_PREFIX  +  1);  [CE]  illegal  start  of  type  [FE]                AssertionError      [CONTEXT]      public  static  Number  createNumber(String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {      [BUGGY]  int  decPos  =  str.lastIndexOf('.',  DEC_PREFIX  +  1);  [BUGGY]      return  null;  }  if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(     "A  blank  string  is  not  a  valid  number     ");  }  if  (str.startsWith(     "--     "))  {  return  null;  }  if  (str.startsWith(     "0x     ")  ||  str.startsWith(     "-0x     ")  ||  str.startsWith(     "0X     ")  ||  str.startsWith(     "-0X     "))  {  int  hexDigits  =  str.length()  -  2;  //  drop  0x  if  (str.startsWith(     "-     "))  {  //  drop  -  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  	projects/Lang7/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	447	447	1	replace	int  decPos  =  str.lastIndexOf('.',  DEC_PREFIX  +  1);	  int    decPos    =    str.lastIndexOf('.',    DEC_PREFIX);    	non-compiled	[CE]  illegal  start  of  type	76	None	replace
23	[BUG]  [BUGGY]  int  decPos  =  str.indexOf('.',  DEC_PREFIX);  [CE]  illegal  start  of  type  [FE]                  AssertionError      [CONTEXT]      public  static  Number  createNumber(String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {      [BUGGY]  int  decPos  =  str.indexOf('.',  DEC_PREFIX);  [BUGGY]      return  null;  }  if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(     "A  blank  string  is  not  a  valid  number     ");  }  if  (str.startsWith(     "--     "))  {  return  null;  }  if  (str.startsWith(     "0x     ")  ||  str.startsWith(     "-0x     ")  ||  str.startsWith(     "0X     ")  ||  str.startsWith(     "-0X     "))  {  int  hexDigits  =  str.length()  -  2;  //  drop  0x  if  (str.startsWith(     "-     "))  {  //  drop  -  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  	projects/Lang7/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	447	447	1	replace	int  decPos  =  str.indexOf('.',  DEC_PREFIX);	  int    decPos    =    str.lastIndexOf('.',    DEC_PREFIX);    	non-compiled	[CE]  illegal  start  of  type	76	None	replace
24	[BUG]  [BUGGY]  int  decPos  =  str.lastIndexOf('.',  12);  [CE]  illegal  start  of  type  [FE]                    AssertionError      [CONTEXT]      public  static  Number  createNumber(String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {      [BUGGY]  int  decPos  =  str.lastIndexOf('.',  12);  [BUGGY]      return  null;  }  if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(     "A  blank  string  is  not  a  valid  number     ");  }  if  (str.startsWith(     "--     "))  {  return  null;  }  if  (str.startsWith(     "0x     ")  ||  str.startsWith(     "-0x     ")  ||  str.startsWith(     "0X     ")  ||  str.startsWith(     "-0X     "))  {  int  hexDigits  =  str.length()  -  2;  //  drop  0x  if  (str.startsWith(     "-     "))  {  //  drop  -  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  	projects/Lang7/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	447	447	1	replace	int  decPos  =  str.lastIndexOf('.',  12);	  int    decPos    =    str.lastIndexOf('.',    DEC_PREFIX);    	non-compiled	[CE]  illegal  start  of  type	76	None	replace
25	[BUG]  [BUGGY]  Throwables.throw  new  NumberFormatException( "A  blank  string  is  not  a  valid  number. ");  [CE]  <identifier>  expected  [FE]              AssertionError      [CONTEXT]      public  static  Number  createNumber(String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {      [BUGGY]  Throwables.throw  new  NumberFormatException( "A  blank  string  is  not  a  valid  number. ");  [BUGGY]      }  if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(     "A  blank  string  is  not  a  valid  number     ");  }  if  (str.startsWith(     "--     "))  {  return  null;  }  if  (str.startsWith(     "0x     ")  ||  str.startsWith(     "-0x     ")  ||  str.startsWith(     "0X     ")  ||  str.startsWith(     "-0X     "))  {  int  hexDigits  =  str.length()  -  2;  //  drop  0x  if  (str.startsWith(     "-     "))  {  //  drop  -  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  	projects/Lang7/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	447	447	1	replace	Throwables.throw  new  NumberFormatException( "A  blank  string  is  not  a  valid  number. ");	  throw    new    NumberFormatException(   "A    blank    string    is    not    a    valid    number.   ");    	non-compiled	[CE]  <identifier>  expected	17	None	replace
26	[BUG]  [BUGGY]  throw  new  NumberFormatException( "A  blank  string  is  not  a  valid  number: "  +  str);  [CE]  illegal  start  of  type  [FE]                AssertionError      [CONTEXT]      public  static  Number  createNumber(String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {      [BUGGY]  throw  new  NumberFormatException( "A  blank  string  is  not  a  valid  number: "  +  str);  [BUGGY]      }  if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(     "A  blank  string  is  not  a  valid  number     ");  }  if  (str.startsWith(     "--     "))  {  return  null;  }  if  (str.startsWith(     "0x     ")  ||  str.startsWith(     "-0x     ")  ||  str.startsWith(     "0X     ")  ||  str.startsWith(     "-0X     "))  {  int  hexDigits  =  str.length()  -  2;  //  drop  0x  if  (str.startsWith(     "-     "))  {  //  drop  -  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  	projects/Lang7/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	447	447	1	replace	throw  new  NumberFormatException( "A  blank  string  is  not  a  valid  number: "  +  str);	  throw    new    NumberFormatException(   "A    blank    string    is    not    a    valid    number.   ");    	non-compiled	[CE]  illegal  start  of  type	17	None	replace
27	[BUG]  [BUGGY]  Number  str  =  getNumber(str.substring(0,  str.length()));  [CE]  illegal  start  of  type  [FE]                AssertionError      [CONTEXT]      public  static  Number  createNumber(String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {      [BUGGY]  Number  str  =  getNumber(str.substring(0,  str.length()));  [BUGGY]      return  null;  }  if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(     "A  blank  string  is  not  a  valid  number     ");  }  if  (str.startsWith(     "--     "))  {  return  null;  }  if  (str.startsWith(     "0x     ")  ||  str.startsWith(     "-0x     ")  ||  str.startsWith(     "0X     ")  ||  str.startsWith(     "-0X     "))  {  int  hexDigits  =  str.length()  -  2;  //  drop  0x  if  (str.startsWith(     "-     "))  {  //  drop  -  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  	projects/Lang7/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	447	447	1	replace	Number  str  =  getNumber(str.substring(0,  str.length()));	  Number    str    =    getNumber(str.substring(0,    str.length()    -    1));    	non-compiled	[CE]  illegal  start  of  type	101	None	replace
28	[BUG]  [BUGGY]  Number  str  =  getNumber(str.substring(0,  str.length()  1));  [CE]  [FE]                  AssertionError      [CONTEXT]      public  static  Number  createNumber(String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {      [BUGGY]  Number  str  =  getNumber(str.substring(0,  str.length()  1));  [BUGGY]      return  null;  }  if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(     "A  blank  string  is  not  a  valid  number     ");  }  if  (str.startsWith(     "--     "))  {  return  null;  }  if  (str.startsWith(     "0x     ")  ||  str.startsWith(     "-0x     ")  ||  str.startsWith(     "0X     ")  ||  str.startsWith(     "-0X     "))  {  int  hexDigits  =  str.length()  -  2;  //  drop  0x  if  (str.startsWith(     "-     "))  {  //  drop  -  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  	projects/Lang7/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	447	447	1	replace	Number  str  =  getNumber(str.substring(0,  str.length()  1));	  Number    str    =    getNumber(str.substring(0,    str.length()    -    1));    	non-compiled	[CE]  	101	None	replace
29	[BUG]  [BUGGY]  Number  str  =  getNumber(str.substring(0,  str.length()  +  1));  [CE]  illegal  start  of  type  [FE]                    AssertionError      [CONTEXT]      public  static  Number  createNumber(String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {      [BUGGY]  Number  str  =  getNumber(str.substring(0,  str.length()  +  1));  [BUGGY]      return  null;  }  if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(     "A  blank  string  is  not  a  valid  number     ");  }  if  (str.startsWith(     "--     "))  {  return  null;  }  if  (str.startsWith(     "0x     ")  ||  str.startsWith(     "-0x     ")  ||  str.startsWith(     "0X     ")  ||  str.startsWith(     "-0X     "))  {  int  hexDigits  =  str.length()  -  2;  //  drop  0x  if  (str.startsWith(     "-     "))  {  //  drop  -  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  	projects/Lang7/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	447	447	1	replace	Number  str  =  getNumber(str.substring(0,  str.length()  +  1));	  Number    str    =    getNumber(str.substring(0,    str.length()    -    1));    	non-compiled	[CE]  illegal  start  of  type	101	None	replace
30	[BUG]  [BUGGY]  throw  new  NumberFormatException( "A  blank  string  is  not  a  valid  number. ",  str);  [CE]  illegal  start  of  type  [FE]                  AssertionError      [CONTEXT]      public  static  Number  createNumber(String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {      [BUGGY]  throw  new  NumberFormatException( "A  blank  string  is  not  a  valid  number. ",  str);  [BUGGY]      }  if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(     "A  blank  string  is  not  a  valid  number     ");  }  if  (str.startsWith(     "--     "))  {  return  null;  }  if  (str.startsWith(     "0x     ")  ||  str.startsWith(     "-0x     ")  ||  str.startsWith(     "0X     ")  ||  str.startsWith(     "-0X     "))  {  int  hexDigits  =  str.length()  -  2;  //  drop  0x  if  (str.startsWith(     "-     "))  {  //  drop  -  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  	projects/Lang7/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	447	447	1	replace	throw  new  NumberFormatException( "A  blank  string  is  not  a  valid  number. ",  str);	  throw    new    NumberFormatException(   "A    blank    string    is    not    a    valid    number   ",    str);    	non-compiled	[CE]  illegal  start  of  type	19	None	replace
31	[BUG]  [BUGGY]  throw  new  NumberFormatException( "A  blank  string  is  not  a  valid  number ",  str.toCharArray());  [CE]  illegal  start  of  type  [FE]                    AssertionError      [CONTEXT]      public  static  Number  createNumber(String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {      [BUGGY]  throw  new  NumberFormatException( "A  blank  string  is  not  a  valid  number ",  str.toCharArray());  [BUGGY]      }  if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(     "A  blank  string  is  not  a  valid  number     ");  }  if  (str.startsWith(     "--     "))  {  return  null;  }  if  (str.startsWith(     "0x     ")  ||  str.startsWith(     "-0x     ")  ||  str.startsWith(     "0X     ")  ||  str.startsWith(     "-0X     "))  {  int  hexDigits  =  str.length()  -  2;  //  drop  0x  if  (str.startsWith(     "-     "))  {  //  drop  -  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  	projects/Lang7/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	447	447	1	replace	throw  new  NumberFormatException( "A  blank  string  is  not  a  valid  number ",  str.toCharArray());	  throw    new    NumberFormatException(   "A    blank    string    is    not    a    valid    number   ",    str);    	non-compiled	[CE]  illegal  start  of  type	19	None	replace
32	[BUG]  [BUGGY]  return(str  ==  null)?  null  :  new  Number(str.length()  +  2);  [CE]  illegal  start  of  type  [FE]            AssertionError      [CONTEXT]      public  static  Number  createNumber(String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {      [BUGGY]  return(str  ==  null)?  null  :  new  Number(str.length()  +  2);  [BUGGY]      }  if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(     "A  blank  string  is  not  a  valid  number     ");  }  if  (str.startsWith(     "--     "))  {  return  null;  }  if  (str.startsWith(     "0x     ")  ||  str.startsWith(     "-0x     ")  ||  str.startsWith(     "0X     ")  ||  str.startsWith(     "-0X     "))  {  int  hexDigits  =  str.length()  -  2;  //  drop  0x  if  (str.startsWith(     "-     "))  {  //  drop  -  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  	projects/Lang7/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	447	447	1	replace	return(str  ==  null)?  null  :  new  Number(str.length()  +  2);	  return(str!=    null)?    null    :    new    Number(str.length());    	non-compiled	[CE]  illegal  start  of  type	60	None	replace
33	[BUG]  [BUGGY]  return(str  ==  null)?  null  :  new  Long(str.length()  +  1);  [CE]  illegal  start  of  type  [FE]                  AssertionError      [CONTEXT]      public  static  Number  createNumber(String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {      [BUGGY]  return(str  ==  null)?  null  :  new  Long(str.length()  +  1);  [BUGGY]      }  if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(     "A  blank  string  is  not  a  valid  number     ");  }  if  (str.startsWith(     "--     "))  {  return  null;  }  if  (str.startsWith(     "0x     ")  ||  str.startsWith(     "-0x     ")  ||  str.startsWith(     "0X     ")  ||  str.startsWith(     "-0X     "))  {  int  hexDigits  =  str.length()  -  2;  //  drop  0x  if  (str.startsWith(     "-     "))  {  //  drop  -  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  	projects/Lang7/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	447	447	1	replace	return(str  ==  null)?  null  :  new  Long(str.length()  +  1);	  return(str!=    null)?    null    :    new    Long(str.length());    	non-compiled	[CE]  illegal  start  of  type	6	None	replace
34	[BUG]  [BUGGY]  Number  str  =  createNumber(str.substring(0,  str.length()));  [CE]  illegal  start  of  type  [FE]                AssertionError      [CONTEXT]      public  static  Number  createNumber(String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {      [BUGGY]  Number  str  =  createNumber(str.substring(0,  str.length()));  [BUGGY]      return  null;  }  if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(     "A  blank  string  is  not  a  valid  number     ");  }  if  (str.startsWith(     "--     "))  {  return  null;  }  if  (str.startsWith(     "0x     ")  ||  str.startsWith(     "-0x     ")  ||  str.startsWith(     "0X     ")  ||  str.startsWith(     "-0X     "))  {  int  hexDigits  =  str.length()  -  2;  //  drop  0x  if  (str.startsWith(     "-     "))  {  //  drop  -  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  	projects/Lang7/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	447	447	1	replace	Number  str  =  createNumber(str.substring(0,  str.length()));	  Number    str    =    createNumber(str.substring(0,    str.length()    -    1));    	non-compiled	[CE]  illegal  start  of  type	43	None	replace
35	[BUG]  [BUGGY]  Number  str  =  createNumber(str.substring(0,  str.length()  1));  [CE]  [FE]                  AssertionError      [CONTEXT]      public  static  Number  createNumber(String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {      [BUGGY]  Number  str  =  createNumber(str.substring(0,  str.length()  1));  [BUGGY]      return  null;  }  if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(     "A  blank  string  is  not  a  valid  number     ");  }  if  (str.startsWith(     "--     "))  {  return  null;  }  if  (str.startsWith(     "0x     ")  ||  str.startsWith(     "-0x     ")  ||  str.startsWith(     "0X     ")  ||  str.startsWith(     "-0X     "))  {  int  hexDigits  =  str.length()  -  2;  //  drop  0x  if  (str.startsWith(     "-     "))  {  //  drop  -  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  	projects/Lang7/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	447	447	1	replace	Number  str  =  createNumber(str.substring(0,  str.length()  1));	  Number    str    =    createNumber(str.substring(0,    str.length()    -    1));    	non-compiled	[CE]  	43	None	replace
36	[BUG]  [BUGGY]  Number  str  =  createNumber(str.substring(0,  str.length()  +  1));  [CE]  illegal  start  of  type  [FE]                    AssertionError      [CONTEXT]      public  static  Number  createNumber(String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {      [BUGGY]  Number  str  =  createNumber(str.substring(0,  str.length()  +  1));  [BUGGY]      return  null;  }  if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(     "A  blank  string  is  not  a  valid  number     ");  }  if  (str.startsWith(     "--     "))  {  return  null;  }  if  (str.startsWith(     "0x     ")  ||  str.startsWith(     "-0x     ")  ||  str.startsWith(     "0X     ")  ||  str.startsWith(     "-0X     "))  {  int  hexDigits  =  str.length()  -  2;  //  drop  0x  if  (str.startsWith(     "-     "))  {  //  drop  -  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  	projects/Lang7/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	447	447	1	replace	Number  str  =  createNumber(str.substring(0,  str.length()  +  1));	  Number    str    =    createNumber(str.substring(0,    str.length()    -    1));    	non-compiled	[CE]  illegal  start  of  type	43	None	replace
37	[BUG]  [BUGGY]  return  new  Double(str.doubleValue()  /  1);  [CE]  illegal  start  of  type  [FE]            AssertionError      [CONTEXT]      public  static  Number  createNumber(String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {      [BUGGY]  return  new  Double(str.doubleValue()  /  1);  [BUGGY]      }  if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(     "A  blank  string  is  not  a  valid  number     ");  }  if  (str.startsWith(     "--     "))  {  return  null;  }  if  (str.startsWith(     "0x     ")  ||  str.startsWith(     "-0x     ")  ||  str.startsWith(     "0X     ")  ||  str.startsWith(     "-0X     "))  {  int  hexDigits  =  str.length()  -  2;  //  drop  0x  if  (str.startsWith(     "-     "))  {  //  drop  -  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  	projects/Lang7/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	447	447	1	replace	return  new  Double(str.doubleValue()  /  1);	  return    new    Double(str.doubleValue()    +    1);    	non-compiled	[CE]  illegal  start  of  type	54	None	replace
38	[BUG]  [BUGGY]  return  new  Number(str.substring(0,  str.length()));  [CE]  illegal  start  of  type  [FE]                  AssertionError      [CONTEXT]      public  static  Number  createNumber(String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {      [BUGGY]  return  new  Number(str.substring(0,  str.length()));  [BUGGY]      }  if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(     "A  blank  string  is  not  a  valid  number     ");  }  if  (str.startsWith(     "--     "))  {  return  null;  }  if  (str.startsWith(     "0x     ")  ||  str.startsWith(     "-0x     ")  ||  str.startsWith(     "0X     ")  ||  str.startsWith(     "-0X     "))  {  int  hexDigits  =  str.length()  -  2;  //  drop  0x  if  (str.startsWith(     "-     "))  {  //  drop  -  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  	projects/Lang7/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	447	447	1	replace	return  new  Number(str.substring(0,  str.length()));	  return    new    Number(str.substring(0,    str.length()    -    1));    	non-compiled	[CE]  illegal  start  of  type	9	None	replace
39	[BUG]  [BUGGY]  return  new  Number(str.substring(0,  str.length()  +  1));  [CE]  illegal  start  of  type  [FE]                    AssertionError      [CONTEXT]      public  static  Number  createNumber(String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {      [BUGGY]  return  new  Number(str.substring(0,  str.length()  +  1));  [BUGGY]      }  if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(     "A  blank  string  is  not  a  valid  number     ");  }  if  (str.startsWith(     "--     "))  {  return  null;  }  if  (str.startsWith(     "0x     ")  ||  str.startsWith(     "-0x     ")  ||  str.startsWith(     "0X     ")  ||  str.startsWith(     "-0X     "))  {  int  hexDigits  =  str.length()  -  2;  //  drop  0x  if  (str.startsWith(     "-     "))  {  //  drop  -  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  	projects/Lang7/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	447	447	1	replace	return  new  Number(str.substring(0,  str.length()  +  1));	  return    new    Number(str.substring(0,    str.length()    -    1));    	non-compiled	[CE]  illegal  start  of  type	9	None	replace
40	[BUG]  [BUGGY]  return  new  Number(str.substring(0,  str.length()  1));  [CE]  [FE]                      AssertionError      [CONTEXT]      public  static  Number  createNumber(String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {      [BUGGY]  return  new  Number(str.substring(0,  str.length()  1));  [BUGGY]      }  if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(     "A  blank  string  is  not  a  valid  number     ");  }  if  (str.startsWith(     "--     "))  {  return  null;  }  if  (str.startsWith(     "0x     ")  ||  str.startsWith(     "-0x     ")  ||  str.startsWith(     "0X     ")  ||  str.startsWith(     "-0X     "))  {  int  hexDigits  =  str.length()  -  2;  //  drop  0x  if  (str.startsWith(     "-     "))  {  //  drop  -  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  	projects/Lang7/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	447	447	1	replace	return  new  Number(str.substring(0,  str.length()  1));	  return    new    Number(str.substring(0,    str.length()    -    1));    	non-compiled	[CE]  	9	None	replace
41	[BUG]  [BUGGY]  return(str  ==  null)?  null  :  new  Number(str.length()  *  2);  [CE]  illegal  start  of  type  [FE]            AssertionError      [CONTEXT]      public  static  Number  createNumber(String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {      [BUGGY]  return(str  ==  null)?  null  :  new  Number(str.length()  *  2);  [BUGGY]      }  if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(     "A  blank  string  is  not  a  valid  number     ");  }  if  (str.startsWith(     "--     "))  {  return  null;  }  if  (str.startsWith(     "0x     ")  ||  str.startsWith(     "-0x     ")  ||  str.startsWith(     "0X     ")  ||  str.startsWith(     "-0X     "))  {  int  hexDigits  =  str.length()  -  2;  //  drop  0x  if  (str.startsWith(     "-     "))  {  //  drop  -  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  	projects/Lang7/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	447	447	1	replace	return(str  ==  null)?  null  :  new  Number(str.length()  *  2);	  return(str    ==    null)?    null    :    new    Number(str.length());    	non-compiled	[CE]  illegal  start  of  type	57	None	replace
42	[BUG]  [BUGGY]  return  new  Double(str.length()  -  1);  [CE]  illegal  start  of  type  [FE]            AssertionError      [CONTEXT]      public  static  Number  createNumber(String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {      [BUGGY]  return  new  Double(str.length()  -  1);  [BUGGY]      }  if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(     "A  blank  string  is  not  a  valid  number     ");  }  if  (str.startsWith(     "--     "))  {  return  null;  }  if  (str.startsWith(     "0x     ")  ||  str.startsWith(     "-0x     ")  ||  str.startsWith(     "0X     ")  ||  str.startsWith(     "-0X     "))  {  int  hexDigits  =  str.length()  -  2;  //  drop  0x  if  (str.startsWith(     "-     "))  {  //  drop  -  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  	projects/Lang7/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	447	447	1	replace	return  new  Double(str.length()  -  1);	  return    new    Double(str.length());    	non-compiled	[CE]  illegal  start  of  type	103	None	replace
43	[BUG]  [BUGGY]  return  new  Double(str.length()  +  1);  [CE]  illegal  start  of  type  [FE]              AssertionError      [CONTEXT]      public  static  Number  createNumber(String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {      [BUGGY]  return  new  Double(str.length()  +  1);  [BUGGY]      }  if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(     "A  blank  string  is  not  a  valid  number     ");  }  if  (str.startsWith(     "--     "))  {  return  null;  }  if  (str.startsWith(     "0x     ")  ||  str.startsWith(     "-0x     ")  ||  str.startsWith(     "0X     ")  ||  str.startsWith(     "-0X     "))  {  int  hexDigits  =  str.length()  -  2;  //  drop  0x  if  (str.startsWith(     "-     "))  {  //  drop  -  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  	projects/Lang7/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	447	447	1	replace	return  new  Double(str.length()  +  1);	  return    new    Double(str.length());    	non-compiled	[CE]  illegal  start  of  type	103	None	replace
44	[BUG]  [BUGGY]  return  new  Double(str.length()  -  2);  [CE]  illegal  start  of  type  [FE]                AssertionError      [CONTEXT]      public  static  Number  createNumber(String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {      [BUGGY]  return  new  Double(str.length()  -  2);  [BUGGY]      }  if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(     "A  blank  string  is  not  a  valid  number     ");  }  if  (str.startsWith(     "--     "))  {  return  null;  }  if  (str.startsWith(     "0x     ")  ||  str.startsWith(     "-0x     ")  ||  str.startsWith(     "0X     ")  ||  str.startsWith(     "-0X     "))  {  int  hexDigits  =  str.length()  -  2;  //  drop  0x  if  (str.startsWith(     "-     "))  {  //  drop  -  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  	projects/Lang7/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	447	447	1	replace	return  new  Double(str.length()  -  2);	  return    new    Double(str.length());    	non-compiled	[CE]  illegal  start  of  type	103	None	replace
45	[BUG]  [BUGGY]  return  new  Double(str.length()  +  2);  [CE]  illegal  start  of  type  [FE]                  AssertionError      [CONTEXT]      public  static  Number  createNumber(String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {      [BUGGY]  return  new  Double(str.length()  +  2);  [BUGGY]      }  if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(     "A  blank  string  is  not  a  valid  number     ");  }  if  (str.startsWith(     "--     "))  {  return  null;  }  if  (str.startsWith(     "0x     ")  ||  str.startsWith(     "-0x     ")  ||  str.startsWith(     "0X     ")  ||  str.startsWith(     "-0X     "))  {  int  hexDigits  =  str.length()  -  2;  //  drop  0x  if  (str.startsWith(     "-     "))  {  //  drop  -  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  	projects/Lang7/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	447	447	1	replace	return  new  Double(str.length()  +  2);	  return    new    Double(str.length());    	non-compiled	[CE]  illegal  start  of  type	103	None	replace
46	[BUG]  [BUGGY]  String  str  =  str.substring(0,  str.length()  -  4);  [CE]  illegal  start  of  type  [FE]            AssertionError      [CONTEXT]      public  static  Number  createNumber(String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {      [BUGGY]  String  str  =  str.substring(0,  str.length()  -  4);  [BUGGY]      return  null;  }  if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(     "A  blank  string  is  not  a  valid  number     ");  }  if  (str.startsWith(     "--     "))  {  return  null;  }  if  (str.startsWith(     "0x     ")  ||  str.startsWith(     "-0x     ")  ||  str.startsWith(     "0X     ")  ||  str.startsWith(     "-0X     "))  {  int  hexDigits  =  str.length()  -  2;  //  drop  0x  if  (str.startsWith(     "-     "))  {  //  drop  -  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  	projects/Lang7/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	447	447	1	replace	String  str  =  str.substring(0,  str.length()  -  4);	  String    str    =    str.substring(0,    str.length());    	non-compiled	[CE]  illegal  start  of  type	10	None	replace
47	[BUG]  [BUGGY]  return  createNumber(str,  hexDigits);  [CE]  illegal  start  of  type  [FE]                    AssertionError      [CONTEXT]      public  static  Number  createNumber(String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {      [BUGGY]  return  createNumber(str,  hexDigits);  [BUGGY]      }  if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(     "A  blank  string  is  not  a  valid  number     ");  }  if  (str.startsWith(     "--     "))  {  return  null;  }  if  (str.startsWith(     "0x     ")  ||  str.startsWith(     "-0x     ")  ||  str.startsWith(     "0X     ")  ||  str.startsWith(     "-0X     "))  {  int  hexDigits  =  str.length()  -  2;  //  drop  0x  if  (str.startsWith(     "-     "))  {  //  drop  -  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  	projects/Lang7/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	447	447	1	replace	return  createNumber(str,  hexDigits);	  return    createNumber(str);    	non-compiled	[CE]  illegal  start  of  type	40	None	replace
48	[BUG]  [BUGGY]  return  createNumber(str.substring(0,  str.length()  -  1));  [CE]  illegal  start  of  type  [FE]                      AssertionError      [CONTEXT]      public  static  Number  createNumber(String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {      [BUGGY]  return  createNumber(str.substring(0,  str.length()  -  1));  [BUGGY]      }  if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(     "A  blank  string  is  not  a  valid  number     ");  }  if  (str.startsWith(     "--     "))  {  return  null;  }  if  (str.startsWith(     "0x     ")  ||  str.startsWith(     "-0x     ")  ||  str.startsWith(     "0X     ")  ||  str.startsWith(     "-0X     "))  {  int  hexDigits  =  str.length()  -  2;  //  drop  0x  if  (str.startsWith(     "-     "))  {  //  drop  -  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  	projects/Lang7/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	447	447	1	replace	return  createNumber(str.substring(0,  str.length()  -  1));	  return    createNumber(str);    	non-compiled	[CE]  illegal  start  of  type	40	None	replace
49	[BUG]  [BUGGY]  return  createNumber(str.substring(1));  [CE]  illegal  start  of  type  [FE]                        AssertionError      [CONTEXT]      public  static  Number  createNumber(String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {      [BUGGY]  return  createNumber(str.substring(1));  [BUGGY]      }  if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(     "A  blank  string  is  not  a  valid  number     ");  }  if  (str.startsWith(     "--     "))  {  return  null;  }  if  (str.startsWith(     "0x     ")  ||  str.startsWith(     "-0x     ")  ||  str.startsWith(     "0X     ")  ||  str.startsWith(     "-0X     "))  {  int  hexDigits  =  str.length()  -  2;  //  drop  0x  if  (str.startsWith(     "-     "))  {  //  drop  -  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  	projects/Lang7/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	447	447	1	replace	return  createNumber(str.substring(1));	  return    createNumber(str);    	non-compiled	[CE]  illegal  start  of  type	40	None	replace
50	[BUG]  [BUGGY]  return  new  Double(str.doubleValue()  *  1);  [CE]  illegal  start  of  type  [FE]              AssertionError      [CONTEXT]      public  static  Number  createNumber(String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {      [BUGGY]  return  new  Double(str.doubleValue()  *  1);  [BUGGY]      }  if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(     "A  blank  string  is  not  a  valid  number     ");  }  if  (str.startsWith(     "--     "))  {  return  null;  }  if  (str.startsWith(     "0x     ")  ||  str.startsWith(     "-0x     ")  ||  str.startsWith(     "0X     ")  ||  str.startsWith(     "-0X     "))  {  int  hexDigits  =  str.length()  -  2;  //  drop  0x  if  (str.startsWith(     "-     "))  {  //  drop  -  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  	projects/Lang7/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	447	447	1	replace	return  new  Double(str.doubleValue()  *  1);	  return    new    Double(str.doubleValue()    -    1);    	non-compiled	[CE]  illegal  start  of  type	55	None	replace
51	[BUG]  [BUGGY]  Number  str  =  getNumber(str,  1);  [CE]  illegal  start  of  type  [FE]                AssertionError      [CONTEXT]      public  static  Number  createNumber(String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {      [BUGGY]  Number  str  =  getNumber(str,  1);  [BUGGY]      return  null;  }  if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(     "A  blank  string  is  not  a  valid  number     ");  }  if  (str.startsWith(     "--     "))  {  return  null;  }  if  (str.startsWith(     "0x     ")  ||  str.startsWith(     "-0x     ")  ||  str.startsWith(     "0X     ")  ||  str.startsWith(     "-0X     "))  {  int  hexDigits  =  str.length()  -  2;  //  drop  0x  if  (str.startsWith(     "-     "))  {  //  drop  -  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  	projects/Lang7/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	447	447	1	replace	Number  str  =  getNumber(str,  1);	  Number    str    =    getNumber(str,    hexDigits);    	non-compiled	[CE]  illegal  start  of  type	64	None	replace
52	[BUG]  [BUGGY]  Number  str  =  getNumber(str,  hexDigits,  exp);  [CE]  illegal  start  of  type  [FE]                  AssertionError      [CONTEXT]      public  static  Number  createNumber(String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {      [BUGGY]  Number  str  =  getNumber(str,  hexDigits,  exp);  [BUGGY]      return  null;  }  if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(     "A  blank  string  is  not  a  valid  number     ");  }  if  (str.startsWith(     "--     "))  {  return  null;  }  if  (str.startsWith(     "0x     ")  ||  str.startsWith(     "-0x     ")  ||  str.startsWith(     "0X     ")  ||  str.startsWith(     "-0X     "))  {  int  hexDigits  =  str.length()  -  2;  //  drop  0x  if  (str.startsWith(     "-     "))  {  //  drop  -  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  	projects/Lang7/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	447	447	1	replace	Number  str  =  getNumber(str,  hexDigits,  exp);	  Number    str    =    getNumber(str,    hexDigits);    	non-compiled	[CE]  illegal  start  of  type	64	None	replace
53	[BUG]  [BUGGY]  Number  str  =  getNumber(str,  hexDigits,  0);  [CE]  illegal  start  of  type  [FE]                    AssertionError      [CONTEXT]      public  static  Number  createNumber(String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {      [BUGGY]  Number  str  =  getNumber(str,  hexDigits,  0);  [BUGGY]      return  null;  }  if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(     "A  blank  string  is  not  a  valid  number     ");  }  if  (str.startsWith(     "--     "))  {  return  null;  }  if  (str.startsWith(     "0x     ")  ||  str.startsWith(     "-0x     ")  ||  str.startsWith(     "0X     ")  ||  str.startsWith(     "-0X     "))  {  int  hexDigits  =  str.length()  -  2;  //  drop  0x  if  (str.startsWith(     "-     "))  {  //  drop  -  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  	projects/Lang7/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	447	447	1	replace	Number  str  =  getNumber(str,  hexDigits,  0);	  Number    str    =    getNumber(str,    hexDigits);    	non-compiled	[CE]  illegal  start  of  type	64	None	replace
54	[BUG]  [BUGGY]  Number  str  =  getNumber(str,  hexDigits,  expPos);  [CE]  illegal  start  of  type  [FE]                      AssertionError      [CONTEXT]      public  static  Number  createNumber(String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {      [BUGGY]  Number  str  =  getNumber(str,  hexDigits,  expPos);  [BUGGY]      return  null;  }  if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(     "A  blank  string  is  not  a  valid  number     ");  }  if  (str.startsWith(     "--     "))  {  return  null;  }  if  (str.startsWith(     "0x     ")  ||  str.startsWith(     "-0x     ")  ||  str.startsWith(     "0X     ")  ||  str.startsWith(     "-0X     "))  {  int  hexDigits  =  str.length()  -  2;  //  drop  0x  if  (str.startsWith(     "-     "))  {  //  drop  -  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  	projects/Lang7/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	447	447	1	replace	Number  str  =  getNumber(str,  hexDigits,  expPos);	  Number    str    =    getNumber(str,    hexDigits);    	non-compiled	[CE]  illegal  start  of  type	64	None	replace
55	[BUG]  [BUGGY]  Throwables.throw  new  NumberFormatException( "A  blank  string  is  not  a  valid  number ",  str);  [CE]  <identifier>  expected  [FE]                AssertionError      [CONTEXT]      public  static  Number  createNumber(String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {      [BUGGY]  Throwables.throw  new  NumberFormatException( "A  blank  string  is  not  a  valid  number ",  str);  [BUGGY]      }  if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(     "A  blank  string  is  not  a  valid  number     ");  }  if  (str.startsWith(     "--     "))  {  return  null;  }  if  (str.startsWith(     "0x     ")  ||  str.startsWith(     "-0x     ")  ||  str.startsWith(     "0X     ")  ||  str.startsWith(     "-0X     "))  {  int  hexDigits  =  str.length()  -  2;  //  drop  0x  if  (str.startsWith(     "-     "))  {  //  drop  -  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  	projects/Lang7/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	447	447	1	replace	Throwables.throw  new  NumberFormatException( "A  blank  string  is  not  a  valid  number ",  str);	  Throwables.throw    new    NumberFormatException(   "A    blank    string    is    not    a    valid    number   ");    	non-compiled	[CE]  <identifier>  expected	18	None	replace
56	[BUG]  [BUGGY]  Throwables.throw  new  NumberFormatException( "A  blank  string  is  not  a  valid  number, ");  [CE]  <identifier>  expected  [FE]                  AssertionError      [CONTEXT]      public  static  Number  createNumber(String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {      [BUGGY]  Throwables.throw  new  NumberFormatException( "A  blank  string  is  not  a  valid  number, ");  [BUGGY]      }  if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(     "A  blank  string  is  not  a  valid  number     ");  }  if  (str.startsWith(     "--     "))  {  return  null;  }  if  (str.startsWith(     "0x     ")  ||  str.startsWith(     "-0x     ")  ||  str.startsWith(     "0X     ")  ||  str.startsWith(     "-0X     "))  {  int  hexDigits  =  str.length()  -  2;  //  drop  0x  if  (str.startsWith(     "-     "))  {  //  drop  -  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  	projects/Lang7/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	447	447	1	replace	Throwables.throw  new  NumberFormatException( "A  blank  string  is  not  a  valid  number, ");	  Throwables.throw    new    NumberFormatException(   "A    blank    string    is    not    a    valid    number   ");    	non-compiled	[CE]  <identifier>  expected	18	None	replace
57	[BUG]  [BUGGY]  NumberUtils.copyNumber(str,  exp);  [CE]  illegal  start  of  type  [FE]                  AssertionError      [CONTEXT]      public  static  Number  createNumber(String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {      [BUGGY]  NumberUtils.copyNumber(str,  exp);  [BUGGY]      return  null;  }  if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(     "A  blank  string  is  not  a  valid  number     ");  }  if  (str.startsWith(     "--     "))  {  return  null;  }  if  (str.startsWith(     "0x     ")  ||  str.startsWith(     "-0x     ")  ||  str.startsWith(     "0X     ")  ||  str.startsWith(     "-0X     "))  {  int  hexDigits  =  str.length()  -  2;  //  drop  0x  if  (str.startsWith(     "-     "))  {  //  drop  -  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  	projects/Lang7/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	447	447	1	replace	NumberUtils.copyNumber(str,  exp);	  NumberUtils.copyValue(str,    decPos);    	non-compiled	[CE]  illegal  start  of  type	75	None	replace
58	[BUG]  [BUGGY]  int  decPos  =  str.lastIndexOf('.',  str.length());  [CE]  illegal  start  of  type  [FE]                AssertionError      [CONTEXT]      public  static  Number  createNumber(String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {      [BUGGY]  int  decPos  =  str.lastIndexOf('.',  str.length());  [BUGGY]      return  null;  }  if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(     "A  blank  string  is  not  a  valid  number     ");  }  if  (str.startsWith(     "--     "))  {  return  null;  }  if  (str.startsWith(     "0x     ")  ||  str.startsWith(     "-0x     ")  ||  str.startsWith(     "0X     ")  ||  str.startsWith(     "-0X     "))  {  int  hexDigits  =  str.length()  -  2;  //  drop  0x  if  (str.startsWith(     "-     "))  {  //  drop  -  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  	projects/Lang7/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	447	447	1	replace	int  decPos  =  str.lastIndexOf('.',  str.length());	  int    decPos    =    str.lastIndexOf('.',    dec);    	non-compiled	[CE]  illegal  start  of  type	91	None	replace
59	[BUG]  [BUGGY]  int  decPos  =  str.lastIndexOf('.',  str.length()  -  1);  [CE]  illegal  start  of  type  [FE]                  AssertionError      [CONTEXT]      public  static  Number  createNumber(String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {      [BUGGY]  int  decPos  =  str.lastIndexOf('.',  str.length()  -  1);  [BUGGY]      return  null;  }  if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(     "A  blank  string  is  not  a  valid  number     ");  }  if  (str.startsWith(     "--     "))  {  return  null;  }  if  (str.startsWith(     "0x     ")  ||  str.startsWith(     "-0x     ")  ||  str.startsWith(     "0X     ")  ||  str.startsWith(     "-0X     "))  {  int  hexDigits  =  str.length()  -  2;  //  drop  0x  if  (str.startsWith(     "-     "))  {  //  drop  -  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  	projects/Lang7/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	447	447	1	replace	int  decPos  =  str.lastIndexOf('.',  str.length()  -  1);	  int    decPos    =    str.lastIndexOf('.',    dec);    	non-compiled	[CE]  illegal  start  of  type	91	None	replace
60	[BUG]  [BUGGY]  return  new  Number(str.substring(0,  str.length()  +  2));  [CE]  illegal  start  of  type  [FE]              AssertionError      [CONTEXT]      public  static  Number  createNumber(String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {      [BUGGY]  return  new  Number(str.substring(0,  str.length()  +  2));  [BUGGY]      }  if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(     "A  blank  string  is  not  a  valid  number     ");  }  if  (str.startsWith(     "--     "))  {  return  null;  }  if  (str.startsWith(     "0x     ")  ||  str.startsWith(     "-0x     ")  ||  str.startsWith(     "0X     ")  ||  str.startsWith(     "-0X     "))  {  int  hexDigits  =  str.length()  -  2;  //  drop  0x  if  (str.startsWith(     "-     "))  {  //  drop  -  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  	projects/Lang7/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	447	447	1	replace	return  new  Number(str.substring(0,  str.length()  +  2));	  return    new    Number(str.substring(0,    str.length()    -    2));    	non-compiled	[CE]  illegal  start  of  type	85	None	replace
61	[BUG]  [BUGGY]  NumberUtils.copyPath(str,  hexDigits);  [CE]  illegal  start  of  type  [FE]                  AssertionError      [CONTEXT]      public  static  Number  createNumber(String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {      [BUGGY]  NumberUtils.copyPath(str,  hexDigits);  [BUGGY]      return  null;  }  if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(     "A  blank  string  is  not  a  valid  number     ");  }  if  (str.startsWith(     "--     "))  {  return  null;  }  if  (str.startsWith(     "0x     ")  ||  str.startsWith(     "-0x     ")  ||  str.startsWith(     "0X     ")  ||  str.startsWith(     "-0X     "))  {  int  hexDigits  =  str.length()  -  2;  //  drop  0x  if  (str.startsWith(     "-     "))  {  //  drop  -  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  	projects/Lang7/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	447	447	1	replace	NumberUtils.copyPath(str,  hexDigits);	  NumberUtils.copyPath(str);    	non-compiled	[CE]  illegal  start  of  type	87	None	replace
62	[BUG]  [BUGGY]  NumberUtils.copyPath(mant);  [CE]  illegal  start  of  type  [FE]                    AssertionError      [CONTEXT]      public  static  Number  createNumber(String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {      [BUGGY]  NumberUtils.copyPath(mant);  [BUGGY]      return  null;  }  if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(     "A  blank  string  is  not  a  valid  number     ");  }  if  (str.startsWith(     "--     "))  {  return  null;  }  if  (str.startsWith(     "0x     ")  ||  str.startsWith(     "-0x     ")  ||  str.startsWith(     "0X     ")  ||  str.startsWith(     "-0X     "))  {  int  hexDigits  =  str.length()  -  2;  //  drop  0x  if  (str.startsWith(     "-     "))  {  //  drop  -  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  	projects/Lang7/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	447	447	1	replace	NumberUtils.copyPath(mant);	  NumberUtils.copyPath(str);    	non-compiled	[CE]  illegal  start  of  type	87	None	replace
63	[BUG]  [BUGGY]  NumberUtils.copyPath(str,  dec);  [CE]  illegal  start  of  type  [FE]                      AssertionError      [CONTEXT]      public  static  Number  createNumber(String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {      [BUGGY]  NumberUtils.copyPath(str,  dec);  [BUGGY]      return  null;  }  if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(     "A  blank  string  is  not  a  valid  number     ");  }  if  (str.startsWith(     "--     "))  {  return  null;  }  if  (str.startsWith(     "0x     ")  ||  str.startsWith(     "-0x     ")  ||  str.startsWith(     "0X     ")  ||  str.startsWith(     "-0X     "))  {  int  hexDigits  =  str.length()  -  2;  //  drop  0x  if  (str.startsWith(     "-     "))  {  //  drop  -  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  	projects/Lang7/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	447	447	1	replace	NumberUtils.copyPath(str,  dec);	  NumberUtils.copyPath(str);    	non-compiled	[CE]  illegal  start  of  type	87	None	replace
64	[BUG]  [BUGGY]  NumberUtils.copyPath(str,  exp);  [CE]  illegal  start  of  type  [FE]                        AssertionError      [CONTEXT]      public  static  Number  createNumber(String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {      [BUGGY]  NumberUtils.copyPath(str,  exp);  [BUGGY]      return  null;  }  if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(     "A  blank  string  is  not  a  valid  number     ");  }  if  (str.startsWith(     "--     "))  {  return  null;  }  if  (str.startsWith(     "0x     ")  ||  str.startsWith(     "-0x     ")  ||  str.startsWith(     "0X     ")  ||  str.startsWith(     "-0X     "))  {  int  hexDigits  =  str.length()  -  2;  //  drop  0x  if  (str.startsWith(     "-     "))  {  //  drop  -  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  	projects/Lang7/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	447	447	1	replace	NumberUtils.copyPath(str,  exp);	  NumberUtils.copyPath(str);    	non-compiled	[CE]  illegal  start  of  type	87	None	replace
65	[BUG]  [BUGGY]  int  decPos  =  str.indexOf('.',  DECEMBER_PREFIX);  [CE]  illegal  start  of  type  [FE]                  AssertionError      [CONTEXT]      public  static  Number  createNumber(String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {      [BUGGY]  int  decPos  =  str.indexOf('.',  DECEMBER_PREFIX);  [BUGGY]      return  null;  }  if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(     "A  blank  string  is  not  a  valid  number     ");  }  if  (str.startsWith(     "--     "))  {  return  null;  }  if  (str.startsWith(     "0x     ")  ||  str.startsWith(     "-0x     ")  ||  str.startsWith(     "0X     ")  ||  str.startsWith(     "-0X     "))  {  int  hexDigits  =  str.length()  -  2;  //  drop  0x  if  (str.startsWith(     "-     "))  {  //  drop  -  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  	projects/Lang7/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	447	447	1	replace	int  decPos  =  str.indexOf('.',  DECEMBER_PREFIX);	  int    decPos    =    str.indexOf('.');    	non-compiled	[CE]  illegal  start  of  type	50	None	replace
66	[BUG]  [BUGGY]  int  decPos  =  str.indexOf('.',  DECEC_PREFIX);  [CE]  illegal  start  of  type  [FE]                    AssertionError      [CONTEXT]      public  static  Number  createNumber(String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {      [BUGGY]  int  decPos  =  str.indexOf('.',  DECEC_PREFIX);  [BUGGY]      return  null;  }  if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(     "A  blank  string  is  not  a  valid  number     ");  }  if  (str.startsWith(     "--     "))  {  return  null;  }  if  (str.startsWith(     "0x     ")  ||  str.startsWith(     "-0x     ")  ||  str.startsWith(     "0X     ")  ||  str.startsWith(     "-0X     "))  {  int  hexDigits  =  str.length()  -  2;  //  drop  0x  if  (str.startsWith(     "-     "))  {  //  drop  -  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  	projects/Lang7/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	447	447	1	replace	int  decPos  =  str.indexOf('.',  DECEC_PREFIX);	  int    decPos    =    str.indexOf('.');    	non-compiled	[CE]  illegal  start  of  type	50	None	replace
67	[BUG]  [BUGGY]  return  createNumber(str,  this);  [CE]  illegal  start  of  type  [FE]                    AssertionError      [CONTEXT]      public  static  Number  createNumber(String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {      [BUGGY]  return  createNumber(str,  this);  [BUGGY]      }  if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(     "A  blank  string  is  not  a  valid  number     ");  }  if  (str.startsWith(     "--     "))  {  return  null;  }  if  (str.startsWith(     "0x     ")  ||  str.startsWith(     "-0x     ")  ||  str.startsWith(     "0X     ")  ||  str.startsWith(     "-0X     "))  {  int  hexDigits  =  str.length()  -  2;  //  drop  0x  if  (str.startsWith(     "-     "))  {  //  drop  -  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  	projects/Lang7/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	447	447	1	replace	return  createNumber(str,  this);	  return    createNumber(str,    null);    	non-compiled	[CE]  illegal  start  of  type	71	None	replace
68	[BUG]  [BUGGY]  return  createNumber(str,  null,  hexDigits);  [CE]  illegal  start  of  type  [FE]                      AssertionError      [CONTEXT]      public  static  Number  createNumber(String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {      [BUGGY]  return  createNumber(str,  null,  hexDigits);  [BUGGY]      }  if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(     "A  blank  string  is  not  a  valid  number     ");  }  if  (str.startsWith(     "--     "))  {  return  null;  }  if  (str.startsWith(     "0x     ")  ||  str.startsWith(     "-0x     ")  ||  str.startsWith(     "0X     ")  ||  str.startsWith(     "-0X     "))  {  int  hexDigits  =  str.length()  -  2;  //  drop  0x  if  (str.startsWith(     "-     "))  {  //  drop  -  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  	projects/Lang7/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	447	447	1	replace	return  createNumber(str,  null,  hexDigits);	  return    createNumber(str,    null);    	non-compiled	[CE]  illegal  start  of  type	71	None	replace
69	[BUG]  [BUGGY]  return(str  ==  null)?  null  :  str.substring(0,  str.length());  [CE]  illegal  start  of  type  [FE]              AssertionError      [CONTEXT]      public  static  Number  createNumber(String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {      [BUGGY]  return(str  ==  null)?  null  :  str.substring(0,  str.length());  [BUGGY]      }  if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(     "A  blank  string  is  not  a  valid  number     ");  }  if  (str.startsWith(     "--     "))  {  return  null;  }  if  (str.startsWith(     "0x     ")  ||  str.startsWith(     "-0x     ")  ||  str.startsWith(     "0X     ")  ||  str.startsWith(     "-0X     "))  {  int  hexDigits  =  str.length()  -  2;  //  drop  0x  if  (str.startsWith(     "-     "))  {  //  drop  -  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  	projects/Lang7/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	447	447	1	replace	return(str  ==  null)?  null  :  str.substring(0,  str.length());	  return(str    ==    null)?    null    :    str.substring(0,    str.length()    -    2);    	non-compiled	[CE]  illegal  start  of  type	94	None	replace
70	[BUG]  [BUGGY]  return(str!=  null)?  null  :  str.substring(0,  str.length());  [CE]  illegal  start  of  type  [FE]                AssertionError      [CONTEXT]      public  static  Number  createNumber(String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {      [BUGGY]  return(str!=  null)?  null  :  str.substring(0,  str.length());  [BUGGY]      }  if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(     "A  blank  string  is  not  a  valid  number     ");  }  if  (str.startsWith(     "--     "))  {  return  null;  }  if  (str.startsWith(     "0x     ")  ||  str.startsWith(     "-0x     ")  ||  str.startsWith(     "0X     ")  ||  str.startsWith(     "-0X     "))  {  int  hexDigits  =  str.length()  -  2;  //  drop  0x  if  (str.startsWith(     "-     "))  {  //  drop  -  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  	projects/Lang7/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	447	447	1	replace	return(str!=  null)?  null  :  str.substring(0,  str.length());	  return(str    ==    null)?    null    :    str.substring(0,    str.length()    -    2);    	non-compiled	[CE]  illegal  start  of  type	94	None	replace
71	[BUG]  [BUGGY]  return(str  ==  null)?  null  :  str.substring(0,  str.length();  [CE]  [FE]                  AssertionError      [CONTEXT]      public  static  Number  createNumber(String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {      [BUGGY]  return(str  ==  null)?  null  :  str.substring(0,  str.length();  [BUGGY]      }  if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(     "A  blank  string  is  not  a  valid  number     ");  }  if  (str.startsWith(     "--     "))  {  return  null;  }  if  (str.startsWith(     "0x     ")  ||  str.startsWith(     "-0x     ")  ||  str.startsWith(     "0X     ")  ||  str.startsWith(     "-0X     "))  {  int  hexDigits  =  str.length()  -  2;  //  drop  0x  if  (str.startsWith(     "-     "))  {  //  drop  -  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  	projects/Lang7/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	447	447	1	replace	return(str  ==  null)?  null  :  str.substring(0,  str.length();	  return(str    ==    null)?    null    :    str.substring(0,    str.length()    -    2);    	non-compiled	[CE]  	94	None	replace
72	[BUG]  [BUGGY]  return(str  ==  null)?  null  :  new  Long(str.length()  +  2);  [CE]  illegal  start  of  type  [FE]                AssertionError      [CONTEXT]      public  static  Number  createNumber(String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {      [BUGGY]  return(str  ==  null)?  null  :  new  Long(str.length()  +  2);  [BUGGY]      }  if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(     "A  blank  string  is  not  a  valid  number     ");  }  if  (str.startsWith(     "--     "))  {  return  null;  }  if  (str.startsWith(     "0x     ")  ||  str.startsWith(     "-0x     ")  ||  str.startsWith(     "0X     ")  ||  str.startsWith(     "-0X     "))  {  int  hexDigits  =  str.length()  -  2;  //  drop  0x  if  (str.startsWith(     "-     "))  {  //  drop  -  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  	projects/Lang7/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	447	447	1	replace	return(str  ==  null)?  null  :  new  Long(str.length()  +  2);	  return(str    ==    null)?    null    :    new    Long(str.length());    	non-compiled	[CE]  illegal  start  of  type	5	None	replace
73	[BUG]  [BUGGY]  return(str  ==  null)?  null  :  new  Long(str.length()  *  2);  [CE]  illegal  start  of  type  [FE]                  AssertionError      [CONTEXT]      public  static  Number  createNumber(String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {      [BUGGY]  return(str  ==  null)?  null  :  new  Long(str.length()  *  2);  [BUGGY]      }  if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(     "A  blank  string  is  not  a  valid  number     ");  }  if  (str.startsWith(     "--     "))  {  return  null;  }  if  (str.startsWith(     "0x     ")  ||  str.startsWith(     "-0x     ")  ||  str.startsWith(     "0X     ")  ||  str.startsWith(     "-0X     "))  {  int  hexDigits  =  str.length()  -  2;  //  drop  0x  if  (str.startsWith(     "-     "))  {  //  drop  -  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  	projects/Lang7/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	447	447	1	replace	return(str  ==  null)?  null  :  new  Long(str.length()  *  2);	  return(str    ==    null)?    null    :    new    Long(str.length());    	non-compiled	[CE]  illegal  start  of  type	5	None	replace
74	[BUG]  [BUGGY]  int  decPos  =  str.lastIndexOf('.')/  1;  [CE]  illegal  start  of  type  [FE]                    AssertionError      [CONTEXT]      public  static  Number  createNumber(String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {      [BUGGY]  int  decPos  =  str.lastIndexOf('.')/  1;  [BUGGY]      return  null;  }  if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(     "A  blank  string  is  not  a  valid  number     ");  }  if  (str.startsWith(     "--     "))  {  return  null;  }  if  (str.startsWith(     "0x     ")  ||  str.startsWith(     "-0x     ")  ||  str.startsWith(     "0X     ")  ||  str.startsWith(     "-0X     "))  {  int  hexDigits  =  str.length()  -  2;  //  drop  0x  if  (str.startsWith(     "-     "))  {  //  drop  -  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  	projects/Lang7/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	447	447	1	replace	int  decPos  =  str.lastIndexOf('.')/  1;	  int    decPos    =    str.lastIndexOf('.')-    1;    	non-compiled	[CE]  illegal  start  of  type	104	None	replace
75	[BUG]  [BUGGY]  int  decPos  =  str.indexOf('.')-  1;  [CE]  illegal  start  of  type  [FE]                      AssertionError      [CONTEXT]      public  static  Number  createNumber(String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {      [BUGGY]  int  decPos  =  str.indexOf('.')-  1;  [BUGGY]      return  null;  }  if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(     "A  blank  string  is  not  a  valid  number     ");  }  if  (str.startsWith(     "--     "))  {  return  null;  }  if  (str.startsWith(     "0x     ")  ||  str.startsWith(     "-0x     ")  ||  str.startsWith(     "0X     ")  ||  str.startsWith(     "-0X     "))  {  int  hexDigits  =  str.length()  -  2;  //  drop  0x  if  (str.startsWith(     "-     "))  {  //  drop  -  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  	projects/Lang7/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	447	447	1	replace	int  decPos  =  str.indexOf('.')-  1;	  int    decPos    =    str.lastIndexOf('.')-    1;    	non-compiled	[CE]  illegal  start  of  type	104	None	replace
76	[BUG]  [BUGGY]  NumberUtils.copyDecimal(str,  exp);  [CE]  illegal  start  of  type  [FE]                      AssertionError      [CONTEXT]      public  static  Number  createNumber(String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {      [BUGGY]  NumberUtils.copyDecimal(str,  exp);  [BUGGY]      return  null;  }  if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(     "A  blank  string  is  not  a  valid  number     ");  }  if  (str.startsWith(     "--     "))  {  return  null;  }  if  (str.startsWith(     "0x     ")  ||  str.startsWith(     "-0x     ")  ||  str.startsWith(     "0X     ")  ||  str.startsWith(     "-0X     "))  {  int  hexDigits  =  str.length()  -  2;  //  drop  0x  if  (str.startsWith(     "-     "))  {  //  drop  -  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  	projects/Lang7/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	447	447	1	replace	NumberUtils.copyDecimal(str,  exp);	  NumberUtils.copyDecimal(str);    	non-compiled	[CE]  illegal  start  of  type	16	None	replace
77	[BUG]  [BUGGY]  NumberUtils.copyDecimal(mant);  [CE]  illegal  start  of  type  [FE]                        AssertionError      [CONTEXT]      public  static  Number  createNumber(String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {      [BUGGY]  NumberUtils.copyDecimal(mant);  [BUGGY]      return  null;  }  if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(     "A  blank  string  is  not  a  valid  number     ");  }  if  (str.startsWith(     "--     "))  {  return  null;  }  if  (str.startsWith(     "0x     ")  ||  str.startsWith(     "-0x     ")  ||  str.startsWith(     "0X     ")  ||  str.startsWith(     "-0X     "))  {  int  hexDigits  =  str.length()  -  2;  //  drop  0x  if  (str.startsWith(     "-     "))  {  //  drop  -  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  	projects/Lang7/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	447	447	1	replace	NumberUtils.copyDecimal(mant);	  NumberUtils.copyDecimal(str);    	non-compiled	[CE]  illegal  start  of  type	16	None	replace
78	[BUG]  [BUGGY]  NumberUtils.copyDecimal(dec);  [CE]  illegal  start  of  type  [FE]                          AssertionError      [CONTEXT]      public  static  Number  createNumber(String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {      [BUGGY]  NumberUtils.copyDecimal(dec);  [BUGGY]      return  null;  }  if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(     "A  blank  string  is  not  a  valid  number     ");  }  if  (str.startsWith(     "--     "))  {  return  null;  }  if  (str.startsWith(     "0x     ")  ||  str.startsWith(     "-0x     ")  ||  str.startsWith(     "0X     ")  ||  str.startsWith(     "-0X     "))  {  int  hexDigits  =  str.length()  -  2;  //  drop  0x  if  (str.startsWith(     "-     "))  {  //  drop  -  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  	projects/Lang7/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	447	447	1	replace	NumberUtils.copyDecimal(dec);	  NumberUtils.copyDecimal(str);    	non-compiled	[CE]  illegal  start  of  type	16	None	replace
79	[BUG]  [BUGGY]  NumberUtils.copyValue(str,  DEC);  [CE]  illegal  start  of  type  [FE]                AssertionError      [CONTEXT]      public  static  Number  createNumber(String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {      [BUGGY]  NumberUtils.copyValue(str,  DEC);  [BUGGY]      return  null;  }  if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(     "A  blank  string  is  not  a  valid  number     ");  }  if  (str.startsWith(     "--     "))  {  return  null;  }  if  (str.startsWith(     "0x     ")  ||  str.startsWith(     "-0x     ")  ||  str.startsWith(     "0X     ")  ||  str.startsWith(     "-0X     "))  {  int  hexDigits  =  str.length()  -  2;  //  drop  0x  if  (str.startsWith(     "-     "))  {  //  drop  -  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  	projects/Lang7/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	447	447	1	replace	NumberUtils.copyValue(str,  DEC);	  NumberUtils.copyValue(str,    exp);    	non-compiled	[CE]  illegal  start  of  type	20	None	replace
80	[BUG]  [BUGGY]  NumberUtils.copyValue(str,  exp,  hexDigits);  [CE]  illegal  start  of  type  [FE]                  AssertionError      [CONTEXT]      public  static  Number  createNumber(String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {      [BUGGY]  NumberUtils.copyValue(str,  exp,  hexDigits);  [BUGGY]      return  null;  }  if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(     "A  blank  string  is  not  a  valid  number     ");  }  if  (str.startsWith(     "--     "))  {  return  null;  }  if  (str.startsWith(     "0x     ")  ||  str.startsWith(     "-0x     ")  ||  str.startsWith(     "0X     ")  ||  str.startsWith(     "-0X     "))  {  int  hexDigits  =  str.length()  -  2;  //  drop  0x  if  (str.startsWith(     "-     "))  {  //  drop  -  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  	projects/Lang7/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	447	447	1	replace	NumberUtils.copyValue(str,  exp,  hexDigits);	  NumberUtils.copyValue(str,    exp);    	non-compiled	[CE]  illegal  start  of  type	20	None	replace
81	[BUG]  [BUGGY]  String  str  =  str.substring(0,  str.length()  -  1));  [CE]  [FE]              AssertionError      [CONTEXT]      public  static  Number  createNumber(String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {      [BUGGY]  String  str  =  str.substring(0,  str.length()  -  1));  [BUGGY]      return  null;  }  if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(     "A  blank  string  is  not  a  valid  number     ");  }  if  (str.startsWith(     "--     "))  {  return  null;  }  if  (str.startsWith(     "0x     ")  ||  str.startsWith(     "-0x     ")  ||  str.startsWith(     "0X     ")  ||  str.startsWith(     "-0X     "))  {  int  hexDigits  =  str.length()  -  2;  //  drop  0x  if  (str.startsWith(     "-     "))  {  //  drop  -  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  	projects/Lang7/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	447	447	1	replace	String  str  =  str.substring(0,  str.length()  -  1));	  String    str    =    str.substring(0,    str.length()));    	non-compiled	[CE]  	78	None	replace
82	[BUG]  [BUGGY]  String  str  =  str.substring(0,  str.length()  -  2));  [CE]  [FE]                AssertionError      [CONTEXT]      public  static  Number  createNumber(String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {      [BUGGY]  String  str  =  str.substring(0,  str.length()  -  2));  [BUGGY]      return  null;  }  if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(     "A  blank  string  is  not  a  valid  number     ");  }  if  (str.startsWith(     "--     "))  {  return  null;  }  if  (str.startsWith(     "0x     ")  ||  str.startsWith(     "-0x     ")  ||  str.startsWith(     "0X     ")  ||  str.startsWith(     "-0X     "))  {  int  hexDigits  =  str.length()  -  2;  //  drop  0x  if  (str.startsWith(     "-     "))  {  //  drop  -  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  	projects/Lang7/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	447	447	1	replace	String  str  =  str.substring(0,  str.length()  -  2));	  String    str    =    str.substring(0,    str.length()));    	non-compiled	[CE]  	78	None	replace
83	[BUG]  [BUGGY]  String  str  =  str.substring(0,  str.length()  +  1));  [CE]  [FE]                  AssertionError      [CONTEXT]      public  static  Number  createNumber(String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {      [BUGGY]  String  str  =  str.substring(0,  str.length()  +  1));  [BUGGY]      return  null;  }  if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(     "A  blank  string  is  not  a  valid  number     ");  }  if  (str.startsWith(     "--     "))  {  return  null;  }  if  (str.startsWith(     "0x     ")  ||  str.startsWith(     "-0x     ")  ||  str.startsWith(     "0X     ")  ||  str.startsWith(     "-0X     "))  {  int  hexDigits  =  str.length()  -  2;  //  drop  0x  if  (str.startsWith(     "-     "))  {  //  drop  -  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  	projects/Lang7/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	447	447	1	replace	String  str  =  str.substring(0,  str.length()  +  1));	  String    str    =    str.substring(0,    str.length()));    	non-compiled	[CE]  	78	None	replace
84	[BUG]  [BUGGY]  String  str  =  str.substring(0,  str.length());  return  this;  [CE]  illegal  start  of  type  [FE]                        AssertionError      [CONTEXT]      public  static  Number  createNumber(String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {      [BUGGY]  String  str  =  str.substring(0,  str.length());  return  this;  [BUGGY]      }  if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(     "A  blank  string  is  not  a  valid  number     ");  }  if  (str.startsWith(     "--     "))  {  return  null;  }  if  (str.startsWith(     "0x     ")  ||  str.startsWith(     "-0x     ")  ||  str.startsWith(     "0X     ")  ||  str.startsWith(     "-0X     "))  {  int  hexDigits  =  str.length()  -  2;  //  drop  0x  if  (str.startsWith(     "-     "))  {  //  drop  -  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  	projects/Lang7/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	447	447	1	replace	String  str  =  str.substring(0,  str.length());  return  this;	  String    str    =    str.substring(0,    str.length()    -    1);    return    null;    	non-compiled	[CE]  illegal  start  of  type	98	None	replace
85	[BUG]  [BUGGY]  String  str  =  str.substring(0,  str.length()  -  1);  return  this;  [CE]  illegal  start  of  type  [FE]                          AssertionError      [CONTEXT]      public  static  Number  createNumber(String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {      [BUGGY]  String  str  =  str.substring(0,  str.length()  -  1);  return  this;  [BUGGY]      }  if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(     "A  blank  string  is  not  a  valid  number     ");  }  if  (str.startsWith(     "--     "))  {  return  null;  }  if  (str.startsWith(     "0x     ")  ||  str.startsWith(     "-0x     ")  ||  str.startsWith(     "0X     ")  ||  str.startsWith(     "-0X     "))  {  int  hexDigits  =  str.length()  -  2;  //  drop  0x  if  (str.startsWith(     "-     "))  {  //  drop  -  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  	projects/Lang7/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	447	447	1	replace	String  str  =  str.substring(0,  str.length()  -  1);  return  this;	  String    str    =    str.substring(0,    str.length()    -    1);    return    null;    	non-compiled	[CE]  illegal  start  of  type	98	None	replace
86	[BUG]  [BUGGY]  String  str  =  str.substring(0,  str.length());  return  new  Number(str.length()  -  1);  [CE]  'catch'  without  'try'  [FE]                            AssertionError      [CONTEXT]      public  static  Number  createNumber(String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {      [BUGGY]  String  str  =  str.substring(0,  str.length());  return  new  Number(str.length()  -  1);  [BUGGY]      }  if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(     "A  blank  string  is  not  a  valid  number     ");  }  if  (str.startsWith(     "--     "))  {  return  null;  }  if  (str.startsWith(     "0x     ")  ||  str.startsWith(     "-0x     ")  ||  str.startsWith(     "0X     ")  ||  str.startsWith(     "-0X     "))  {  int  hexDigits  =  str.length()  -  2;  //  drop  0x  if  (str.startsWith(     "-     "))  {  //  drop  -  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  	projects/Lang7/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	447	447	1	replace	String  str  =  str.substring(0,  str.length());  return  new  Number(str.length()  -  1);	  String    str    =    str.substring(0,    str.length()    -    1);    return    null;    	non-compiled	[CE]  'catch'  without  'try'	98	None	replace
87	[BUG]  [BUGGY]  String  str  =  str.substring(0,  str.length());  return  new  Number(str.length());  [CE]  'catch'  without  'try'  [FE]                              AssertionError      [CONTEXT]      public  static  Number  createNumber(String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {      [BUGGY]  String  str  =  str.substring(0,  str.length());  return  new  Number(str.length());  [BUGGY]      }  if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(     "A  blank  string  is  not  a  valid  number     ");  }  if  (str.startsWith(     "--     "))  {  return  null;  }  if  (str.startsWith(     "0x     ")  ||  str.startsWith(     "-0x     ")  ||  str.startsWith(     "0X     ")  ||  str.startsWith(     "-0X     "))  {  int  hexDigits  =  str.length()  -  2;  //  drop  0x  if  (str.startsWith(     "-     "))  {  //  drop  -  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  	projects/Lang7/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	447	447	1	replace	String  str  =  str.substring(0,  str.length());  return  new  Number(str.length());	  String    str    =    str.substring(0,    str.length()    -    1);    return    null;    	non-compiled	[CE]  'catch'  without  'try'	98	None	replace
88	[BUG]  [BUGGY]  Number  str  =  createNumber(str.length()  -  1);  [CE]  'catch'  without  'try'  [FE]            AssertionError      [CONTEXT]      public  static  Number  createNumber(String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {      [BUGGY]  Number  str  =  createNumber(str.length()  -  1);  [BUGGY]      return  null;  }  if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(     "A  blank  string  is  not  a  valid  number     ");  }  if  (str.startsWith(     "--     "))  {  return  null;  }  if  (str.startsWith(     "0x     ")  ||  str.startsWith(     "-0x     ")  ||  str.startsWith(     "0X     ")  ||  str.startsWith(     "-0X     "))  {  int  hexDigits  =  str.length()  -  2;  //  drop  0x  if  (str.startsWith(     "-     "))  {  //  drop  -  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  	projects/Lang7/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	447	447	1	replace	Number  str  =  createNumber(str.length()  -  1);	  Number    str    =    createNumber(str.length());    	non-compiled	[CE]  'catch'  without  'try'	99	None	replace
89	[BUG]  [BUGGY]  Number  str  =  createNumber(str.length()  -  2);  [CE]  'catch'  without  'try'  [FE]              AssertionError      [CONTEXT]      public  static  Number  createNumber(String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {      [BUGGY]  Number  str  =  createNumber(str.length()  -  2);  [BUGGY]      return  null;  }  if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(     "A  blank  string  is  not  a  valid  number     ");  }  if  (str.startsWith(     "--     "))  {  return  null;  }  if  (str.startsWith(     "0x     ")  ||  str.startsWith(     "-0x     ")  ||  str.startsWith(     "0X     ")  ||  str.startsWith(     "-0X     "))  {  int  hexDigits  =  str.length()  -  2;  //  drop  0x  if  (str.startsWith(     "-     "))  {  //  drop  -  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  	projects/Lang7/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	447	447	1	replace	Number  str  =  createNumber(str.length()  -  2);	  Number    str    =    createNumber(str.length());    	non-compiled	[CE]  'catch'  without  'try'	99	None	replace
90	[BUG]  [BUGGY]  Number  str  =  createNumber(str.length()  +  1);  [CE]  illegal  start  of  type  [FE]                AssertionError      [CONTEXT]      public  static  Number  createNumber(String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {      [BUGGY]  Number  str  =  createNumber(str.length()  +  1);  [BUGGY]      return  null;  }  if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(     "A  blank  string  is  not  a  valid  number     ");  }  if  (str.startsWith(     "--     "))  {  return  null;  }  if  (str.startsWith(     "0x     ")  ||  str.startsWith(     "-0x     ")  ||  str.startsWith(     "0X     ")  ||  str.startsWith(     "-0X     "))  {  int  hexDigits  =  str.length()  -  2;  //  drop  0x  if  (str.startsWith(     "-     "))  {  //  drop  -  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  	projects/Lang7/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	447	447	1	replace	Number  str  =  createNumber(str.length()  +  1);	  Number    str    =    createNumber(str.length());    	non-compiled	[CE]  illegal  start  of  type	99	None	replace
91	[BUG]  [BUGGY]  Integer  str  =  createLong(str);  [CE]  'catch'  without  'try'  [FE]                  AssertionError      [CONTEXT]      public  static  Number  createNumber(String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {      [BUGGY]  Integer  str  =  createLong(str);  [BUGGY]      return  null;  }  if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(     "A  blank  string  is  not  a  valid  number     ");  }  if  (str.startsWith(     "--     "))  {  return  null;  }  if  (str.startsWith(     "0x     ")  ||  str.startsWith(     "-0x     ")  ||  str.startsWith(     "0X     ")  ||  str.startsWith(     "-0X     "))  {  int  hexDigits  =  str.length()  -  2;  //  drop  0x  if  (str.startsWith(     "-     "))  {  //  drop  -  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  	projects/Lang7/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	447	447	1	replace	Integer  str  =  createLong(str);	  Integer    str    =    createInteger(0);    	non-compiled	[CE]  'catch'  without  'try'	34	None	replace
92	[BUG]  [BUGGY]  Integer  str  =  createInteger(1);  [CE]  illegal  start  of  type  [FE]                    AssertionError      [CONTEXT]      public  static  Number  createNumber(String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {      [BUGGY]  Integer  str  =  createInteger(1);  [BUGGY]      return  null;  }  if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(     "A  blank  string  is  not  a  valid  number     ");  }  if  (str.startsWith(     "--     "))  {  return  null;  }  if  (str.startsWith(     "0x     ")  ||  str.startsWith(     "-0x     ")  ||  str.startsWith(     "0X     ")  ||  str.startsWith(     "-0X     "))  {  int  hexDigits  =  str.length()  -  2;  //  drop  0x  if  (str.startsWith(     "-     "))  {  //  drop  -  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  	projects/Lang7/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	447	447	1	replace	Integer  str  =  createInteger(1);	  Integer    str    =    createInteger(0);    	non-compiled	[CE]  illegal  start  of  type	34	None	replace
93	[BUG]  [BUGGY]  return  new  Number(Short.valueOf(str.length()  -  1));  [CE]  illegal  start  of  type  [FE]                AssertionError      [CONTEXT]      public  static  Number  createNumber(String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {      [BUGGY]  return  new  Number(Short.valueOf(str.length()  -  1));  [BUGGY]      }  if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(     "A  blank  string  is  not  a  valid  number     ");  }  if  (str.startsWith(     "--     "))  {  return  null;  }  if  (str.startsWith(     "0x     ")  ||  str.startsWith(     "-0x     ")  ||  str.startsWith(     "0X     ")  ||  str.startsWith(     "-0X     "))  {  int  hexDigits  =  str.length()  -  2;  //  drop  0x  if  (str.startsWith(     "-     "))  {  //  drop  -  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  	projects/Lang7/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	447	447	1	replace	return  new  Number(Short.valueOf(str.length()  -  1));	  return    new    Number(Short.valueOf(str.length()));    	non-compiled	[CE]  illegal  start  of  type	82	None	replace
94	[BUG]  [BUGGY]  return  new  Number(Short.valueOf(str.length()  +  1));  [CE]  illegal  start  of  type  [FE]                  AssertionError      [CONTEXT]      public  static  Number  createNumber(String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {      [BUGGY]  return  new  Number(Short.valueOf(str.length()  +  1));  [BUGGY]      }  if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(     "A  blank  string  is  not  a  valid  number     ");  }  if  (str.startsWith(     "--     "))  {  return  null;  }  if  (str.startsWith(     "0x     ")  ||  str.startsWith(     "-0x     ")  ||  str.startsWith(     "0X     ")  ||  str.startsWith(     "-0X     "))  {  int  hexDigits  =  str.length()  -  2;  //  drop  0x  if  (str.startsWith(     "-     "))  {  //  drop  -  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  	projects/Lang7/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	447	447	1	replace	return  new  Number(Short.valueOf(str.length()  +  1));	  return    new    Number(Short.valueOf(str.length()));    	non-compiled	[CE]  illegal  start  of  type	82	None	replace
95	[BUG]  [BUGGY]  return  new  Number(Long.valueOf(str.length()));  [CE]  illegal  start  of  type  [FE]                    AssertionError      [CONTEXT]      public  static  Number  createNumber(String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {      [BUGGY]  return  new  Number(Long.valueOf(str.length()));  [BUGGY]      }  if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(     "A  blank  string  is  not  a  valid  number     ");  }  if  (str.startsWith(     "--     "))  {  return  null;  }  if  (str.startsWith(     "0x     ")  ||  str.startsWith(     "-0x     ")  ||  str.startsWith(     "0X     ")  ||  str.startsWith(     "-0X     "))  {  int  hexDigits  =  str.length()  -  2;  //  drop  0x  if  (str.startsWith(     "-     "))  {  //  drop  -  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  	projects/Lang7/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	447	447	1	replace	return  new  Number(Long.valueOf(str.length()));	  return    new    Number(Short.valueOf(str.length()));    	non-compiled	[CE]  illegal  start  of  type	82	None	replace
96	[BUG]  [BUGGY]  throw  new  NumberFormatException( "A  blank  string  is  not  a  valid  number. "  +  str);  [CE]  illegal  start  of  type  [FE]              AssertionError      [CONTEXT]      public  static  Number  createNumber(String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {      [BUGGY]  throw  new  NumberFormatException( "A  blank  string  is  not  a  valid  number. "  +  str);  [BUGGY]      }  if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(     "A  blank  string  is  not  a  valid  number     ");  }  if  (str.startsWith(     "--     "))  {  return  null;  }  if  (str.startsWith(     "0x     ")  ||  str.startsWith(     "-0x     ")  ||  str.startsWith(     "0X     ")  ||  str.startsWith(     "-0X     "))  {  int  hexDigits  =  str.length()  -  2;  //  drop  0x  if  (str.startsWith(     "-     "))  {  //  drop  -  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  	projects/Lang7/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	447	447	1	replace	throw  new  NumberFormatException( "A  blank  string  is  not  a  valid  number. "  +  str);	  throw    new    NumberFormatException(   "A    blank    string    is    not    a    valid    number   "    +    str);    	non-compiled	[CE]  illegal  start  of  type	63	None	replace
97	[BUG]  [BUGGY]  Throwables.throw  new  NumberFormatException( "A  blank  string  is  not  a  valid  number "  +  str);  [CE]  <identifier>  expected  [FE]                AssertionError      [CONTEXT]      public  static  Number  createNumber(String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {      [BUGGY]  Throwables.throw  new  NumberFormatException( "A  blank  string  is  not  a  valid  number "  +  str);  [BUGGY]      }  if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(     "A  blank  string  is  not  a  valid  number     ");  }  if  (str.startsWith(     "--     "))  {  return  null;  }  if  (str.startsWith(     "0x     ")  ||  str.startsWith(     "-0x     ")  ||  str.startsWith(     "0X     ")  ||  str.startsWith(     "-0X     "))  {  int  hexDigits  =  str.length()  -  2;  //  drop  0x  if  (str.startsWith(     "-     "))  {  //  drop  -  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  	projects/Lang7/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	447	447	1	replace	Throwables.throw  new  NumberFormatException( "A  blank  string  is  not  a  valid  number "  +  str);	  throw    new    NumberFormatException(   "A    blank    string    is    not    a    valid    number   "    +    str);    	non-compiled	[CE]  <identifier>  expected	63	None	replace
98	[BUG]  [BUGGY]  String  str  =  str.substring(0,  str.length()  -  2;  [CE]  [FE]              AssertionError      [CONTEXT]      public  static  Number  createNumber(String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {      [BUGGY]  String  str  =  str.substring(0,  str.length()  -  2;  [BUGGY]      return  null;  }  if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(     "A  blank  string  is  not  a  valid  number     ");  }  if  (str.startsWith(     "--     "))  {  return  null;  }  if  (str.startsWith(     "0x     ")  ||  str.startsWith(     "-0x     ")  ||  str.startsWith(     "0X     ")  ||  str.startsWith(     "-0X     "))  {  int  hexDigits  =  str.length()  -  2;  //  drop  0x  if  (str.startsWith(     "-     "))  {  //  drop  -  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  	projects/Lang7/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	447	447	1	replace	String  str  =  str.substring(0,  str.length()  -  2;	  String    str    =    str.substring(0,    str.length();    	non-compiled	[CE]  	46	None	replace
99	[BUG]  [BUGGY]  Integer  decPos  =  str.length()  -  2;  [CE]  illegal  start  of  type  [FE]                    AssertionError      [CONTEXT]      public  static  Number  createNumber(String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {      [BUGGY]  Integer  decPos  =  str.length()  -  2;  [BUGGY]      return  null;  }  if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(     "A  blank  string  is  not  a  valid  number     ");  }  if  (str.startsWith(     "--     "))  {  return  null;  }  if  (str.startsWith(     "0x     ")  ||  str.startsWith(     "-0x     ")  ||  str.startsWith(     "0X     ")  ||  str.startsWith(     "-0X     "))  {  int  hexDigits  =  str.length()  -  2;  //  drop  0x  if  (str.startsWith(     "-     "))  {  //  drop  -  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  	projects/Lang7/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	447	447	1	replace	Integer  decPos  =  str.length()  -  2;	  Integer    decPos    =    str.length();    	non-compiled	[CE]  illegal  start  of  type	24	None	replace
100	[BUG]  [BUGGY]  Integer  decPos  =  str.length()  -  1;  [CE]  illegal  start  of  type  [FE]                      AssertionError      [CONTEXT]      public  static  Number  createNumber(String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {      [BUGGY]  Integer  decPos  =  str.length()  -  1;  [BUGGY]      return  null;  }  if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(     "A  blank  string  is  not  a  valid  number     ");  }  if  (str.startsWith(     "--     "))  {  return  null;  }  if  (str.startsWith(     "0x     ")  ||  str.startsWith(     "-0x     ")  ||  str.startsWith(     "0X     ")  ||  str.startsWith(     "-0X     "))  {  int  hexDigits  =  str.length()  -  2;  //  drop  0x  if  (str.startsWith(     "-     "))  {  //  drop  -  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  	projects/Lang7/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	447	447	1	replace	Integer  decPos  =  str.length()  -  1;	  Integer    decPos    =    str.length();    	non-compiled	[CE]  illegal  start  of  type	24	None	replace
101	[BUG]  [BUGGY]  Integer  decPos  =  str.length()  +  1;  [CE]  illegal  start  of  type  [FE]                        AssertionError      [CONTEXT]      public  static  Number  createNumber(String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {      [BUGGY]  Integer  decPos  =  str.length()  +  1;  [BUGGY]      return  null;  }  if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(     "A  blank  string  is  not  a  valid  number     ");  }  if  (str.startsWith(     "--     "))  {  return  null;  }  if  (str.startsWith(     "0x     ")  ||  str.startsWith(     "-0x     ")  ||  str.startsWith(     "0X     ")  ||  str.startsWith(     "-0X     "))  {  int  hexDigits  =  str.length()  -  2;  //  drop  0x  if  (str.startsWith(     "-     "))  {  //  drop  -  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  	projects/Lang7/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	447	447	1	replace	Integer  decPos  =  str.length()  +  1;	  Integer    decPos    =    str.length();    	non-compiled	[CE]  illegal  start  of  type	24	None	replace
102	[BUG]  [BUGGY]  Integer  decPos  =  str.length()  +  2;  [CE]  illegal  start  of  type  [FE]                          AssertionError      [CONTEXT]      public  static  Number  createNumber(String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {      [BUGGY]  Integer  decPos  =  str.length()  +  2;  [BUGGY]      return  null;  }  if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(     "A  blank  string  is  not  a  valid  number     ");  }  if  (str.startsWith(     "--     "))  {  return  null;  }  if  (str.startsWith(     "0x     ")  ||  str.startsWith(     "-0x     ")  ||  str.startsWith(     "0X     ")  ||  str.startsWith(     "-0X     "))  {  int  hexDigits  =  str.length()  -  2;  //  drop  0x  if  (str.startsWith(     "-     "))  {  //  drop  -  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  	projects/Lang7/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	447	447	1	replace	Integer  decPos  =  str.length()  +  2;	  Integer    decPos    =    str.length();    	non-compiled	[CE]  illegal  start  of  type	24	None	replace
103	[BUG]  [BUGGY]  String  str  =  str.substring(0,  str.length()  -  1)+  1;  [CE]  illegal  start  of  type  [FE]            AssertionError      [CONTEXT]      public  static  Number  createNumber(String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {      [BUGGY]  String  str  =  str.substring(0,  str.length()  -  1)+  1;  [BUGGY]      return  null;  }  if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(     "A  blank  string  is  not  a  valid  number     ");  }  if  (str.startsWith(     "--     "))  {  return  null;  }  if  (str.startsWith(     "0x     ")  ||  str.startsWith(     "-0x     ")  ||  str.startsWith(     "0X     ")  ||  str.startsWith(     "-0X     "))  {  int  hexDigits  =  str.length()  -  2;  //  drop  0x  if  (str.startsWith(     "-     "))  {  //  drop  -  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  	projects/Lang7/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	447	447	1	replace	String  str  =  str.substring(0,  str.length()  -  1)+  1;	  String    str    =    str.substring(0,    str.length())+    1;    	non-compiled	[CE]  illegal  start  of  type	106	None	replace
104	[BUG]  [BUGGY]  String  str  =  str.substring(0,  str.length()  +  1)+  1;  [CE]  illegal  start  of  type  [FE]              AssertionError      [CONTEXT]      public  static  Number  createNumber(String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {      [BUGGY]  String  str  =  str.substring(0,  str.length()  +  1)+  1;  [BUGGY]      return  null;  }  if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(     "A  blank  string  is  not  a  valid  number     ");  }  if  (str.startsWith(     "--     "))  {  return  null;  }  if  (str.startsWith(     "0x     ")  ||  str.startsWith(     "-0x     ")  ||  str.startsWith(     "0X     ")  ||  str.startsWith(     "-0X     "))  {  int  hexDigits  =  str.length()  -  2;  //  drop  0x  if  (str.startsWith(     "-     "))  {  //  drop  -  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  	projects/Lang7/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	447	447	1	replace	String  str  =  str.substring(0,  str.length()  +  1)+  1;	  String    str    =    str.substring(0,    str.length())+    1;    	non-compiled	[CE]  illegal  start  of  type	106	None	replace
105	[BUG]  [BUGGY]  String  str  =  str.substring(0,  str.length())+  2;  [CE]  illegal  start  of  type  [FE]                AssertionError      [CONTEXT]      public  static  Number  createNumber(String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {      [BUGGY]  String  str  =  str.substring(0,  str.length())+  2;  [BUGGY]      return  null;  }  if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(     "A  blank  string  is  not  a  valid  number     ");  }  if  (str.startsWith(     "--     "))  {  return  null;  }  if  (str.startsWith(     "0x     ")  ||  str.startsWith(     "-0x     ")  ||  str.startsWith(     "0X     ")  ||  str.startsWith(     "-0X     "))  {  int  hexDigits  =  str.length()  -  2;  //  drop  0x  if  (str.startsWith(     "-     "))  {  //  drop  -  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  	projects/Lang7/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	447	447	1	replace	String  str  =  str.substring(0,  str.length())+  2;	  String    str    =    str.substring(0,    str.length())+    1;    	non-compiled	[CE]  illegal  start  of  type	106	None	replace
106	[BUG]  [BUGGY]  NumberUtils.copyNumber(str,  dec,  hexDigits);  [CE]  illegal  start  of  type  [FE]                    AssertionError      [CONTEXT]      public  static  Number  createNumber(String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {      [BUGGY]  NumberUtils.copyNumber(str,  dec,  hexDigits);  [BUGGY]      return  null;  }  if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(     "A  blank  string  is  not  a  valid  number     ");  }  if  (str.startsWith(     "--     "))  {  return  null;  }  if  (str.startsWith(     "0x     ")  ||  str.startsWith(     "-0x     ")  ||  str.startsWith(     "0X     ")  ||  str.startsWith(     "-0X     "))  {  int  hexDigits  =  str.length()  -  2;  //  drop  0x  if  (str.startsWith(     "-     "))  {  //  drop  -  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  	projects/Lang7/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	447	447	1	replace	NumberUtils.copyNumber(str,  dec,  hexDigits);	  NumberUtils.copyNumber(str,    dec);    	non-compiled	[CE]  illegal  start  of  type	37	None	replace
107	[BUG]  [BUGGY]  NumberUtils.copyNumber(str,  ex);  [CE]  illegal  start  of  type  [FE]                      AssertionError      [CONTEXT]      public  static  Number  createNumber(String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {      [BUGGY]  NumberUtils.copyNumber(str,  ex);  [BUGGY]      return  null;  }  if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(     "A  blank  string  is  not  a  valid  number     ");  }  if  (str.startsWith(     "--     "))  {  return  null;  }  if  (str.startsWith(     "0x     ")  ||  str.startsWith(     "-0x     ")  ||  str.startsWith(     "0X     ")  ||  str.startsWith(     "-0X     "))  {  int  hexDigits  =  str.length()  -  2;  //  drop  0x  if  (str.startsWith(     "-     "))  {  //  drop  -  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  	projects/Lang7/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	447	447	1	replace	NumberUtils.copyNumber(str,  ex);	  NumberUtils.copyNumber(str,    dec);    	non-compiled	[CE]  illegal  start  of  type	37	None	replace
108	[BUG]  [BUGGY]  int  decPos  =  str.lastIndexOf('.',  2);  [CE]  illegal  start  of  type  [FE]                AssertionError      [CONTEXT]      public  static  Number  createNumber(String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {      [BUGGY]  int  decPos  =  str.lastIndexOf('.',  2);  [BUGGY]      return  null;  }  if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(     "A  blank  string  is  not  a  valid  number     ");  }  if  (str.startsWith(     "--     "))  {  return  null;  }  if  (str.startsWith(     "0x     ")  ||  str.startsWith(     "-0x     ")  ||  str.startsWith(     "0X     ")  ||  str.startsWith(     "-0X     "))  {  int  hexDigits  =  str.length()  -  2;  //  drop  0x  if  (str.startsWith(     "-     "))  {  //  drop  -  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  	projects/Lang7/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	447	447	1	replace	int  decPos  =  str.lastIndexOf('.',  2);	  int    decPos    =    str.lastIndexOf('.',    1);    	non-compiled	[CE]  illegal  start  of  type	49	None	replace
109	[BUG]  [BUGGY]  int  decPos  =  str.indexOf('.',  1);  [CE]  illegal  start  of  type  [FE]                  AssertionError      [CONTEXT]      public  static  Number  createNumber(String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {      [BUGGY]  int  decPos  =  str.indexOf('.',  1);  [BUGGY]      return  null;  }  if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(     "A  blank  string  is  not  a  valid  number     ");  }  if  (str.startsWith(     "--     "))  {  return  null;  }  if  (str.startsWith(     "0x     ")  ||  str.startsWith(     "-0x     ")  ||  str.startsWith(     "0X     ")  ||  str.startsWith(     "-0X     "))  {  int  hexDigits  =  str.length()  -  2;  //  drop  0x  if  (str.startsWith(     "-     "))  {  //  drop  -  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  	projects/Lang7/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	447	447	1	replace	int  decPos  =  str.indexOf('.',  1);	  int    decPos    =    str.lastIndexOf('.',    1);    	non-compiled	[CE]  illegal  start  of  type	49	None	replace
110	[BUG]  [BUGGY]  int  decPos  =  str.lastIndexOf('.',  0);  [CE]  illegal  start  of  type  [FE]                    AssertionError      [CONTEXT]      public  static  Number  createNumber(String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {      [BUGGY]  int  decPos  =  str.lastIndexOf('.',  0);  [BUGGY]      return  null;  }  if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(     "A  blank  string  is  not  a  valid  number     ");  }  if  (str.startsWith(     "--     "))  {  return  null;  }  if  (str.startsWith(     "0x     ")  ||  str.startsWith(     "-0x     ")  ||  str.startsWith(     "0X     ")  ||  str.startsWith(     "-0X     "))  {  int  hexDigits  =  str.length()  -  2;  //  drop  0x  if  (str.startsWith(     "-     "))  {  //  drop  -  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  	projects/Lang7/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	447	447	1	replace	int  decPos  =  str.lastIndexOf('.',  0);	  int    decPos    =    str.lastIndexOf('.',    1);    	non-compiled	[CE]  illegal  start  of  type	49	None	replace
111	[BUG]  [BUGGY]  return  new  Number(str.length()  +  2,  str.length());  [CE]  illegal  start  of  type  [FE]                    AssertionError      [CONTEXT]      public  static  Number  createNumber(String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {      [BUGGY]  return  new  Number(str.length()  +  2,  str.length());  [BUGGY]      }  if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(     "A  blank  string  is  not  a  valid  number     ");  }  if  (str.startsWith(     "--     "))  {  return  null;  }  if  (str.startsWith(     "0x     ")  ||  str.startsWith(     "-0x     ")  ||  str.startsWith(     "0X     ")  ||  str.startsWith(     "-0X     "))  {  int  hexDigits  =  str.length()  -  2;  //  drop  0x  if  (str.startsWith(     "-     "))  {  //  drop  -  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  	projects/Lang7/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	447	447	1	replace	return  new  Number(str.length()  +  2,  str.length());	  return    new    Number(str.length(),    str.length()    -    2);    	non-compiled	[CE]  illegal  start  of  type	2	None	replace
112	[BUG]  [BUGGY]  return  new  Number(str.length()  +  1,  str.length()  -  2);  [CE]  illegal  start  of  type  [FE]                      AssertionError      [CONTEXT]      public  static  Number  createNumber(String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {      [BUGGY]  return  new  Number(str.length()  +  1,  str.length()  -  2);  [BUGGY]      }  if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(     "A  blank  string  is  not  a  valid  number     ");  }  if  (str.startsWith(     "--     "))  {  return  null;  }  if  (str.startsWith(     "0x     ")  ||  str.startsWith(     "-0x     ")  ||  str.startsWith(     "0X     ")  ||  str.startsWith(     "-0X     "))  {  int  hexDigits  =  str.length()  -  2;  //  drop  0x  if  (str.startsWith(     "-     "))  {  //  drop  -  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  	projects/Lang7/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	447	447	1	replace	return  new  Number(str.length()  +  1,  str.length()  -  2);	  return    new    Number(str.length(),    str.length()    -    2);    	non-compiled	[CE]  illegal  start  of  type	2	None	replace
113	[BUG]  [BUGGY]  Integer  str  =  createInteger(str,  expPos);  [CE]  illegal  start  of  type  [FE]              AssertionError      [CONTEXT]      public  static  Number  createNumber(String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {      [BUGGY]  Integer  str  =  createInteger(str,  expPos);  [BUGGY]      return  null;  }  if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(     "A  blank  string  is  not  a  valid  number     ");  }  if  (str.startsWith(     "--     "))  {  return  null;  }  if  (str.startsWith(     "0x     ")  ||  str.startsWith(     "-0x     ")  ||  str.startsWith(     "0X     ")  ||  str.startsWith(     "-0X     "))  {  int  hexDigits  =  str.length()  -  2;  //  drop  0x  if  (str.startsWith(     "-     "))  {  //  drop  -  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  	projects/Lang7/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	447	447	1	replace	Integer  str  =  createInteger(str,  expPos);	  Integer    str    =    createInteger(str,    hexDigits);    	non-compiled	[CE]  illegal  start  of  type	84	None	replace
114	[BUG]  [BUGGY]  Integer  str  =  createInteger(str,  hexDigits,  exp);  [CE]  illegal  start  of  type  [FE]                AssertionError      [CONTEXT]      public  static  Number  createNumber(String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {      [BUGGY]  Integer  str  =  createInteger(str,  hexDigits,  exp);  [BUGGY]      return  null;  }  if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(     "A  blank  string  is  not  a  valid  number     ");  }  if  (str.startsWith(     "--     "))  {  return  null;  }  if  (str.startsWith(     "0x     ")  ||  str.startsWith(     "-0x     ")  ||  str.startsWith(     "0X     ")  ||  str.startsWith(     "-0X     "))  {  int  hexDigits  =  str.length()  -  2;  //  drop  0x  if  (str.startsWith(     "-     "))  {  //  drop  -  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  	projects/Lang7/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	447	447	1	replace	Integer  str  =  createInteger(str,  hexDigits,  exp);	  Integer    str    =    createInteger(str,    hexDigits);    	non-compiled	[CE]  illegal  start  of  type	84	None	replace
115	[BUG]  [BUGGY]  Integer  str  =  createInteger(str,  1);  [CE]  illegal  start  of  type  [FE]                  AssertionError      [CONTEXT]      public  static  Number  createNumber(String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {      [BUGGY]  Integer  str  =  createInteger(str,  1);  [BUGGY]      return  null;  }  if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(     "A  blank  string  is  not  a  valid  number     ");  }  if  (str.startsWith(     "--     "))  {  return  null;  }  if  (str.startsWith(     "0x     ")  ||  str.startsWith(     "-0x     ")  ||  str.startsWith(     "0X     ")  ||  str.startsWith(     "-0X     "))  {  int  hexDigits  =  str.length()  -  2;  //  drop  0x  if  (str.startsWith(     "-     "))  {  //  drop  -  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  	projects/Lang7/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	447	447	1	replace	Integer  str  =  createInteger(str,  1);	  Integer    str    =    createInteger(str,    hexDigits);    	non-compiled	[CE]  illegal  start  of  type	84	None	replace
116	[BUG]  [BUGGY]  Integer  str  =  createInteger(str,  2);  [CE]  illegal  start  of  type  [FE]                    AssertionError      [CONTEXT]      public  static  Number  createNumber(String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {      [BUGGY]  Integer  str  =  createInteger(str,  2);  [BUGGY]      return  null;  }  if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(     "A  blank  string  is  not  a  valid  number     ");  }  if  (str.startsWith(     "--     "))  {  return  null;  }  if  (str.startsWith(     "0x     ")  ||  str.startsWith(     "-0x     ")  ||  str.startsWith(     "0X     ")  ||  str.startsWith(     "-0X     "))  {  int  hexDigits  =  str.length()  -  2;  //  drop  0x  if  (str.startsWith(     "-     "))  {  //  drop  -  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  	projects/Lang7/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	447	447	1	replace	Integer  str  =  createInteger(str,  2);	  Integer    str    =    createInteger(str,    hexDigits);    	non-compiled	[CE]  illegal  start  of  type	84	None	replace
117	[BUG]  [BUGGY]  NumberUtils.copyValue(str,  dec,  hexDigits);  [CE]  illegal  start  of  type  [FE]                    AssertionError      [CONTEXT]      public  static  Number  createNumber(String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {      [BUGGY]  NumberUtils.copyValue(str,  dec,  hexDigits);  [BUGGY]      return  null;  }  if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(     "A  blank  string  is  not  a  valid  number     ");  }  if  (str.startsWith(     "--     "))  {  return  null;  }  if  (str.startsWith(     "0x     ")  ||  str.startsWith(     "-0x     ")  ||  str.startsWith(     "0X     ")  ||  str.startsWith(     "-0X     "))  {  int  hexDigits  =  str.length()  -  2;  //  drop  0x  if  (str.startsWith(     "-     "))  {  //  drop  -  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  	projects/Lang7/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	447	447	1	replace	NumberUtils.copyValue(str,  dec,  hexDigits);	  NumberUtils.copyValue(str,    dec);    	non-compiled	[CE]  illegal  start  of  type	15	None	replace
118	[BUG]  [BUGGY]  NumberUtils.copyValue(str,  ex);  [CE]  illegal  start  of  type  [FE]                      AssertionError      [CONTEXT]      public  static  Number  createNumber(String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {      [BUGGY]  NumberUtils.copyValue(str,  ex);  [BUGGY]      return  null;  }  if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(     "A  blank  string  is  not  a  valid  number     ");  }  if  (str.startsWith(     "--     "))  {  return  null;  }  if  (str.startsWith(     "0x     ")  ||  str.startsWith(     "-0x     ")  ||  str.startsWith(     "0X     ")  ||  str.startsWith(     "-0X     "))  {  int  hexDigits  =  str.length()  -  2;  //  drop  0x  if  (str.startsWith(     "-     "))  {  //  drop  -  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  	projects/Lang7/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	447	447	1	replace	NumberUtils.copyValue(str,  ex);	  NumberUtils.copyValue(str,    dec);    	non-compiled	[CE]  illegal  start  of  type	15	None	replace
119	[BUG]  [BUGGY]  Integer  str  =  createInteger(str.length()  -  1);  [CE]  illegal  start  of  type  [FE]              AssertionError      [CONTEXT]      public  static  Number  createNumber(String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {      [BUGGY]  Integer  str  =  createInteger(str.length()  -  1);  [BUGGY]      return  null;  }  if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(     "A  blank  string  is  not  a  valid  number     ");  }  if  (str.startsWith(     "--     "))  {  return  null;  }  if  (str.startsWith(     "0x     ")  ||  str.startsWith(     "-0x     ")  ||  str.startsWith(     "0X     ")  ||  str.startsWith(     "-0X     "))  {  int  hexDigits  =  str.length()  -  2;  //  drop  0x  if  (str.startsWith(     "-     "))  {  //  drop  -  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  	projects/Lang7/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	447	447	1	replace	Integer  str  =  createInteger(str.length()  -  1);	  Integer    str    =    createInteger(str.length());    	non-compiled	[CE]  illegal  start  of  type	32	None	replace
120	[BUG]  [BUGGY]  Integer  str  =  createInteger(str.length()  -  2);  [CE]  illegal  start  of  type  [FE]                AssertionError      [CONTEXT]      public  static  Number  createNumber(String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {      [BUGGY]  Integer  str  =  createInteger(str.length()  -  2);  [BUGGY]      return  null;  }  if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(     "A  blank  string  is  not  a  valid  number     ");  }  if  (str.startsWith(     "--     "))  {  return  null;  }  if  (str.startsWith(     "0x     ")  ||  str.startsWith(     "-0x     ")  ||  str.startsWith(     "0X     ")  ||  str.startsWith(     "-0X     "))  {  int  hexDigits  =  str.length()  -  2;  //  drop  0x  if  (str.startsWith(     "-     "))  {  //  drop  -  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  	projects/Lang7/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	447	447	1	replace	Integer  str  =  createInteger(str.length()  -  2);	  Integer    str    =    createInteger(str.length());    	non-compiled	[CE]  illegal  start  of  type	32	None	replace
121	[BUG]  [BUGGY]  Integer  str  =  createInteger(str.length()  +  1);  [CE]  illegal  start  of  type  [FE]                  AssertionError      [CONTEXT]      public  static  Number  createNumber(String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {      [BUGGY]  Integer  str  =  createInteger(str.length()  +  1);  [BUGGY]      return  null;  }  if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(     "A  blank  string  is  not  a  valid  number     ");  }  if  (str.startsWith(     "--     "))  {  return  null;  }  if  (str.startsWith(     "0x     ")  ||  str.startsWith(     "-0x     ")  ||  str.startsWith(     "0X     ")  ||  str.startsWith(     "-0X     "))  {  int  hexDigits  =  str.length()  -  2;  //  drop  0x  if  (str.startsWith(     "-     "))  {  //  drop  -  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  	projects/Lang7/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	447	447	1	replace	Integer  str  =  createInteger(str.length()  +  1);	  Integer    str    =    createInteger(str.length());    	non-compiled	[CE]  illegal  start  of  type	32	None	replace
122	[BUG]  [BUGGY]  Integer  str  =  createBigInteger(str.length());  [CE]  illegal  start  of  type  [FE]                    AssertionError      [CONTEXT]      public  static  Number  createNumber(String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {      [BUGGY]  Integer  str  =  createBigInteger(str.length());  [BUGGY]      return  null;  }  if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(     "A  blank  string  is  not  a  valid  number     ");  }  if  (str.startsWith(     "--     "))  {  return  null;  }  if  (str.startsWith(     "0x     ")  ||  str.startsWith(     "-0x     ")  ||  str.startsWith(     "0X     ")  ||  str.startsWith(     "-0X     "))  {  int  hexDigits  =  str.length()  -  2;  //  drop  0x  if  (str.startsWith(     "-     "))  {  //  drop  -  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  	projects/Lang7/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	447	447	1	replace	Integer  str  =  createBigInteger(str.length());	  Integer    str    =    createInteger(str.length());    	non-compiled	[CE]  illegal  start  of  type	32	None	replace
123	[BUG]  [BUGGY]  int  decPos  =  str.indexOf('.',  len);  [CE]  illegal  start  of  type  [FE]                  AssertionError      [CONTEXT]      public  static  Number  createNumber(String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {      [BUGGY]  int  decPos  =  str.indexOf('.',  len);  [BUGGY]      return  null;  }  if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(     "A  blank  string  is  not  a  valid  number     ");  }  if  (str.startsWith(     "--     "))  {  return  null;  }  if  (str.startsWith(     "0x     ")  ||  str.startsWith(     "-0x     ")  ||  str.startsWith(     "0X     ")  ||  str.startsWith(     "-0X     "))  {  int  hexDigits  =  str.length()  -  2;  //  drop  0x  if  (str.startsWith(     "-     "))  {  //  drop  -  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  	projects/Lang7/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	447	447	1	replace	int  decPos  =  str.indexOf('.',  len);	  int    decPos    =    str.lastIndexOf('.',    len);    	non-compiled	[CE]  illegal  start  of  type	92	None	replace
124	[BUG]  [BUGGY]  NumberUtils.copyNumber(str,  this.hexDigits,  str.length());  [CE]  illegal  start  of  type  [FE]                        AssertionError      [CONTEXT]      public  static  Number  createNumber(String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {      [BUGGY]  NumberUtils.copyNumber(str,  this.hexDigits,  str.length());  [BUGGY]      return  null;  }  if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(     "A  blank  string  is  not  a  valid  number     ");  }  if  (str.startsWith(     "--     "))  {  return  null;  }  if  (str.startsWith(     "0x     ")  ||  str.startsWith(     "-0x     ")  ||  str.startsWith(     "0X     ")  ||  str.startsWith(     "-0X     "))  {  int  hexDigits  =  str.length()  -  2;  //  drop  0x  if  (str.startsWith(     "-     "))  {  //  drop  -  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  	projects/Lang7/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	447	447	1	replace	NumberUtils.copyNumber(str,  this.hexDigits,  str.length());	  NumberUtils.copyNumber(str,    this.hexDigits);    	non-compiled	[CE]  illegal  start  of  type	39	None	replace
125	[BUG]  [BUGGY]  NumberUtils.copyNumber(str,  this.hexDigits,  str);  [CE]  illegal  start  of  type  [FE]                          AssertionError      [CONTEXT]      public  static  Number  createNumber(String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {      [BUGGY]  NumberUtils.copyNumber(str,  this.hexDigits,  str);  [BUGGY]      return  null;  }  if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(     "A  blank  string  is  not  a  valid  number     ");  }  if  (str.startsWith(     "--     "))  {  return  null;  }  if  (str.startsWith(     "0x     ")  ||  str.startsWith(     "-0x     ")  ||  str.startsWith(     "0X     ")  ||  str.startsWith(     "-0X     "))  {  int  hexDigits  =  str.length()  -  2;  //  drop  0x  if  (str.startsWith(     "-     "))  {  //  drop  -  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  	projects/Lang7/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	447	447	1	replace	NumberUtils.copyNumber(str,  this.hexDigits,  str);	  NumberUtils.copyNumber(str,    this.hexDigits);    	non-compiled	[CE]  illegal  start  of  type	39	None	replace
126	[BUG]  [BUGGY]  NumberUtils.copyNumber(str,  this.hexDigits,  0);  [CE]  illegal  start  of  type  [FE]                            AssertionError      [CONTEXT]      public  static  Number  createNumber(String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {      [BUGGY]  NumberUtils.copyNumber(str,  this.hexDigits,  0);  [BUGGY]      return  null;  }  if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(     "A  blank  string  is  not  a  valid  number     ");  }  if  (str.startsWith(     "--     "))  {  return  null;  }  if  (str.startsWith(     "0x     ")  ||  str.startsWith(     "-0x     ")  ||  str.startsWith(     "0X     ")  ||  str.startsWith(     "-0X     "))  {  int  hexDigits  =  str.length()  -  2;  //  drop  0x  if  (str.startsWith(     "-     "))  {  //  drop  -  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  	projects/Lang7/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	447	447	1	replace	NumberUtils.copyNumber(str,  this.hexDigits,  0);	  NumberUtils.copyNumber(str,    this.hexDigits);    	non-compiled	[CE]  illegal  start  of  type	39	None	replace
127	[BUG]  [BUGGY]  NumberUtils.copyNumber(str,  this.hexDigits,  hexDigits);  [CE]  illegal  start  of  type  [FE]                              AssertionError      [CONTEXT]      public  static  Number  createNumber(String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {      [BUGGY]  NumberUtils.copyNumber(str,  this.hexDigits,  hexDigits);  [BUGGY]      return  null;  }  if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(     "A  blank  string  is  not  a  valid  number     ");  }  if  (str.startsWith(     "--     "))  {  return  null;  }  if  (str.startsWith(     "0x     ")  ||  str.startsWith(     "-0x     ")  ||  str.startsWith(     "0X     ")  ||  str.startsWith(     "-0X     "))  {  int  hexDigits  =  str.length()  -  2;  //  drop  0x  if  (str.startsWith(     "-     "))  {  //  drop  -  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  	projects/Lang7/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	447	447	1	replace	NumberUtils.copyNumber(str,  this.hexDigits,  hexDigits);	  NumberUtils.copyNumber(str,    this.hexDigits);    	non-compiled	[CE]  illegal  start  of  type	39	None	replace
128	[BUG]  [BUGGY]  NumberUtils.setBlank(str,  0L);  [CE]  illegal  start  of  type  [FE]                  AssertionError      [CONTEXT]      public  static  Number  createNumber(String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {      [BUGGY]  NumberUtils.setBlank(str,  0L);  [BUGGY]      return  null;  }  if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(     "A  blank  string  is  not  a  valid  number     ");  }  if  (str.startsWith(     "--     "))  {  return  null;  }  if  (str.startsWith(     "0x     ")  ||  str.startsWith(     "-0x     ")  ||  str.startsWith(     "0X     ")  ||  str.startsWith(     "-0X     "))  {  int  hexDigits  =  str.length()  -  2;  //  drop  0x  if  (str.startsWith(     "-     "))  {  //  drop  -  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  	projects/Lang7/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	447	447	1	replace	NumberUtils.setBlank(str,  0L);	  NumberUtils.setBlank(str,    0);    	non-compiled	[CE]  illegal  start  of  type	12	None	replace
129	[BUG]  [BUGGY]  NumberUtils.setBlank(str,  1);  [CE]  illegal  start  of  type  [FE]                    AssertionError      [CONTEXT]      public  static  Number  createNumber(String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {      [BUGGY]  NumberUtils.setBlank(str,  1);  [BUGGY]      return  null;  }  if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(     "A  blank  string  is  not  a  valid  number     ");  }  if  (str.startsWith(     "--     "))  {  return  null;  }  if  (str.startsWith(     "0x     ")  ||  str.startsWith(     "-0x     ")  ||  str.startsWith(     "0X     ")  ||  str.startsWith(     "-0X     "))  {  int  hexDigits  =  str.length()  -  2;  //  drop  0x  if  (str.startsWith(     "-     "))  {  //  drop  -  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  	projects/Lang7/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	447	447	1	replace	NumberUtils.setBlank(str,  1);	  NumberUtils.setBlank(str,    0);    	non-compiled	[CE]  illegal  start  of  type	12	None	replace
130	[BUG]  [BUGGY]  NumberUtils.setBlank(str,  0,  str.length());  [CE]  illegal  start  of  type  [FE]                      AssertionError      [CONTEXT]      public  static  Number  createNumber(String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {      [BUGGY]  NumberUtils.setBlank(str,  0,  str.length());  [BUGGY]      return  null;  }  if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(     "A  blank  string  is  not  a  valid  number     ");  }  if  (str.startsWith(     "--     "))  {  return  null;  }  if  (str.startsWith(     "0x     ")  ||  str.startsWith(     "-0x     ")  ||  str.startsWith(     "0X     ")  ||  str.startsWith(     "-0X     "))  {  int  hexDigits  =  str.length()  -  2;  //  drop  0x  if  (str.startsWith(     "-     "))  {  //  drop  -  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  	projects/Lang7/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	447	447	1	replace	NumberUtils.setBlank(str,  0,  str.length());	  NumberUtils.setBlank(str,    0);    	non-compiled	[CE]  illegal  start  of  type	12	None	replace
131	[BUG]  [BUGGY]  int  decPos  =  str.indexOf('.',  -1);  [CE]  illegal  start  of  type  [FE]                    AssertionError      [CONTEXT]      public  static  Number  createNumber(String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {      [BUGGY]  int  decPos  =  str.indexOf('.',  -1);  [BUGGY]      return  null;  }  if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(     "A  blank  string  is  not  a  valid  number     ");  }  if  (str.startsWith(     "--     "))  {  return  null;  }  if  (str.startsWith(     "0x     ")  ||  str.startsWith(     "-0x     ")  ||  str.startsWith(     "0X     ")  ||  str.startsWith(     "-0X     "))  {  int  hexDigits  =  str.length()  -  2;  //  drop  0x  if  (str.startsWith(     "-     "))  {  //  drop  -  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  	projects/Lang7/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	447	447	1	replace	int  decPos  =  str.indexOf('.',  -1);	  int    decPos    =    str.lastIndexOf('.',    -1);    	non-compiled	[CE]  illegal  start  of  type	51	None	replace
132	[BUG]  [BUGGY]  return(str  ==  null)?  null  :  str.substring(0,  str.length()  +  1);  [CE]  illegal  start  of  type  [FE]            AssertionError      [CONTEXT]      public  static  Number  createNumber(String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {      [BUGGY]  return(str  ==  null)?  null  :  str.substring(0,  str.length()  +  1);  [BUGGY]      }  if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(     "A  blank  string  is  not  a  valid  number     ");  }  if  (str.startsWith(     "--     "))  {  return  null;  }  if  (str.startsWith(     "0x     ")  ||  str.startsWith(     "-0x     ")  ||  str.startsWith(     "0X     ")  ||  str.startsWith(     "-0X     "))  {  int  hexDigits  =  str.length()  -  2;  //  drop  0x  if  (str.startsWith(     "-     "))  {  //  drop  -  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  	projects/Lang7/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	447	447	1	replace	return(str  ==  null)?  null  :  str.substring(0,  str.length()  +  1);	  return(str    ==    null)?    null    :    str.substring(0,    str.length()    -    1);    	non-compiled	[CE]  illegal  start  of  type	93	None	replace
133	[BUG]  [BUGGY]  return  new  Double(str.doubleValue()  *  2);  [CE]  illegal  start  of  type  [FE]                AssertionError      [CONTEXT]      public  static  Number  createNumber(String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {      [BUGGY]  return  new  Double(str.doubleValue()  *  2);  [BUGGY]      }  if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(     "A  blank  string  is  not  a  valid  number     ");  }  if  (str.startsWith(     "--     "))  {  return  null;  }  if  (str.startsWith(     "0x     ")  ||  str.startsWith(     "-0x     ")  ||  str.startsWith(     "0X     ")  ||  str.startsWith(     "-0X     "))  {  int  hexDigits  =  str.length()  -  2;  //  drop  0x  if  (str.startsWith(     "-     "))  {  //  drop  -  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  	projects/Lang7/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	447	447	1	replace	return  new  Double(str.doubleValue()  *  2);	  return    new    Double(str.doubleValue()    /    2);    	non-compiled	[CE]  illegal  start  of  type	56	None	replace
134	[BUG]  [BUGGY]  return  new  Double(str.doubleValue()  +  2);  [CE]  illegal  start  of  type  [FE]                  AssertionError      [CONTEXT]      public  static  Number  createNumber(String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {      [BUGGY]  return  new  Double(str.doubleValue()  +  2);  [BUGGY]      }  if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(     "A  blank  string  is  not  a  valid  number     ");  }  if  (str.startsWith(     "--     "))  {  return  null;  }  if  (str.startsWith(     "0x     ")  ||  str.startsWith(     "-0x     ")  ||  str.startsWith(     "0X     ")  ||  str.startsWith(     "-0X     "))  {  int  hexDigits  =  str.length()  -  2;  //  drop  0x  if  (str.startsWith(     "-     "))  {  //  drop  -  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  	projects/Lang7/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	447	447	1	replace	return  new  Double(str.doubleValue()  +  2);	  return    new    Double(str.doubleValue()    /    2);    	non-compiled	[CE]  illegal  start  of  type	56	None	replace
135	[BUG]  [BUGGY]  return(str  ==  null)?  null  :  str.toUpperCase();  [CE]  illegal  start  of  type  [FE]                AssertionError      [CONTEXT]      public  static  Number  createNumber(String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {      [BUGGY]  return(str  ==  null)?  null  :  str.toUpperCase();  [BUGGY]      }  if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(     "A  blank  string  is  not  a  valid  number     ");  }  if  (str.startsWith(     "--     "))  {  return  null;  }  if  (str.startsWith(     "0x     ")  ||  str.startsWith(     "-0x     ")  ||  str.startsWith(     "0X     ")  ||  str.startsWith(     "-0X     "))  {  int  hexDigits  =  str.length()  -  2;  //  drop  0x  if  (str.startsWith(     "-     "))  {  //  drop  -  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  	projects/Lang7/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	447	447	1	replace	return(str  ==  null)?  null  :  str.toUpperCase();	  return(str    ==    null)?    null    :    str.toLowerCase();    	non-compiled	[CE]  illegal  start  of  type	95	None	replace
136	[BUG]  [BUGGY]  return(str!=  null)?  null  :  str.toLowerCase();  [CE]  illegal  start  of  type  [FE]                  AssertionError      [CONTEXT]      public  static  Number  createNumber(String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {      [BUGGY]  return(str!=  null)?  null  :  str.toLowerCase();  [BUGGY]      }  if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(     "A  blank  string  is  not  a  valid  number     ");  }  if  (str.startsWith(     "--     "))  {  return  null;  }  if  (str.startsWith(     "0x     ")  ||  str.startsWith(     "-0x     ")  ||  str.startsWith(     "0X     ")  ||  str.startsWith(     "-0X     "))  {  int  hexDigits  =  str.length()  -  2;  //  drop  0x  if  (str.startsWith(     "-     "))  {  //  drop  -  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  	projects/Lang7/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	447	447	1	replace	return(str!=  null)?  null  :  str.toLowerCase();	  return(str    ==    null)?    null    :    str.toLowerCase();    	non-compiled	[CE]  illegal  start  of  type	95	None	replace
137	[BUG]  [BUGGY]  Number  str  =  createNumber(str.toLowerCase());  [CE]  illegal  start  of  type  [FE]            AssertionError      [CONTEXT]      public  static  Number  createNumber(String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {      [BUGGY]  Number  str  =  createNumber(str.toLowerCase());  [BUGGY]      return  null;  }  if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(     "A  blank  string  is  not  a  valid  number     ");  }  if  (str.startsWith(     "--     "))  {  return  null;  }  if  (str.startsWith(     "0x     ")  ||  str.startsWith(     "-0x     ")  ||  str.startsWith(     "0X     ")  ||  str.startsWith(     "-0X     "))  {  int  hexDigits  =  str.length()  -  2;  //  drop  0x  if  (str.startsWith(     "-     "))  {  //  drop  -  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  	projects/Lang7/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	447	447	1	replace	Number  str  =  createNumber(str.toLowerCase());	  Number    str    =    createNumber(str.toUpperCase());    	non-compiled	[CE]  illegal  start  of  type	86	None	replace
138	[BUG]  [BUGGY]  Number  str  =  createNumber(str.toUpperCase(),  true);  [CE]  'catch'  without  'try'  [FE]              AssertionError      [CONTEXT]      public  static  Number  createNumber(String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {      [BUGGY]  Number  str  =  createNumber(str.toUpperCase(),  true);  [BUGGY]      return  null;  }  if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(     "A  blank  string  is  not  a  valid  number     ");  }  if  (str.startsWith(     "--     "))  {  return  null;  }  if  (str.startsWith(     "0x     ")  ||  str.startsWith(     "-0x     ")  ||  str.startsWith(     "0X     ")  ||  str.startsWith(     "-0X     "))  {  int  hexDigits  =  str.length()  -  2;  //  drop  0x  if  (str.startsWith(     "-     "))  {  //  drop  -  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  	projects/Lang7/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	447	447	1	replace	Number  str  =  createNumber(str.toUpperCase(),  true);	  Number    str    =    createNumber(str.toUpperCase());    	non-compiled	[CE]  'catch'  without  'try'	86	None	replace
139	[BUG]  [BUGGY]  return  new  Number(str.length()  +  1,  str.length()  -  1);  [CE]  'catch'  without  'try'  [FE]                  AssertionError      [CONTEXT]      public  static  Number  createNumber(String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {      [BUGGY]  return  new  Number(str.length()  +  1,  str.length()  -  1);  [BUGGY]      }  if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(     "A  blank  string  is  not  a  valid  number     ");  }  if  (str.startsWith(     "--     "))  {  return  null;  }  if  (str.startsWith(     "0x     ")  ||  str.startsWith(     "-0x     ")  ||  str.startsWith(     "0X     ")  ||  str.startsWith(     "-0X     "))  {  int  hexDigits  =  str.length()  -  2;  //  drop  0x  if  (str.startsWith(     "-     "))  {  //  drop  -  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  	projects/Lang7/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	447	447	1	replace	return  new  Number(str.length()  +  1,  str.length()  -  1);	  return    new    Number(str.length(),    str.length()    -    1);    	non-compiled	[CE]  'catch'  without  'try'	1	None	replace
140	[BUG]  [BUGGY]  NumberUtils.setBlank(str,  exp);  [CE]  illegal  start  of  type  [FE]                  AssertionError      [CONTEXT]      public  static  Number  createNumber(String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {      [BUGGY]  NumberUtils.setBlank(str,  exp);  [BUGGY]      return  null;  }  if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(     "A  blank  string  is  not  a  valid  number     ");  }  if  (str.startsWith(     "--     "))  {  return  null;  }  if  (str.startsWith(     "0x     ")  ||  str.startsWith(     "-0x     ")  ||  str.startsWith(     "0X     ")  ||  str.startsWith(     "-0X     "))  {  int  hexDigits  =  str.length()  -  2;  //  drop  0x  if  (str.startsWith(     "-     "))  {  //  drop  -  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  	projects/Lang7/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	447	447	1	replace	NumberUtils.setBlank(str,  exp);	  NumberUtils.setBlank(str,    dec);    	non-compiled	[CE]  illegal  start  of  type	102	None	replace
141	[BUG]  [BUGGY]  NumberUtils.setBlank(str,  dec,  hexDigits);  [CE]  'catch'  without  'try'  [FE]                    AssertionError      [CONTEXT]      public  static  Number  createNumber(String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {      [BUGGY]  NumberUtils.setBlank(str,  dec,  hexDigits);  [BUGGY]      return  null;  }  if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(     "A  blank  string  is  not  a  valid  number     ");  }  if  (str.startsWith(     "--     "))  {  return  null;  }  if  (str.startsWith(     "0x     ")  ||  str.startsWith(     "-0x     ")  ||  str.startsWith(     "0X     ")  ||  str.startsWith(     "-0X     "))  {  int  hexDigits  =  str.length()  -  2;  //  drop  0x  if  (str.startsWith(     "-     "))  {  //  drop  -  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  	projects/Lang7/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	447	447	1	replace	NumberUtils.setBlank(str,  dec,  hexDigits);	  NumberUtils.setBlank(str,    dec);    	non-compiled	[CE]  'catch'  without  'try'	102	None	replace
142	[BUG]  [BUGGY]  return  new  Number(str.length(),  4);  [CE]  'catch'  without  'try'  [FE]                  AssertionError      [CONTEXT]      public  static  Number  createNumber(String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {      [BUGGY]  return  new  Number(str.length(),  4);  [BUGGY]      }  if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(     "A  blank  string  is  not  a  valid  number     ");  }  if  (str.startsWith(     "--     "))  {  return  null;  }  if  (str.startsWith(     "0x     ")  ||  str.startsWith(     "-0x     ")  ||  str.startsWith(     "0X     ")  ||  str.startsWith(     "-0X     "))  {  int  hexDigits  =  str.length()  -  2;  //  drop  0x  if  (str.startsWith(     "-     "))  {  //  drop  -  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  	projects/Lang7/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	447	447	1	replace	return  new  Number(str.length(),  4);	  return    new    Number(str.length(),    2);    	non-compiled	[CE]  'catch'  without  'try'	90	None	replace
143	[BUG]  [BUGGY]  return  new  Number(str.length(),  3);  [CE]  'catch'  without  'try'  [FE]                    AssertionError      [CONTEXT]      public  static  Number  createNumber(String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {      [BUGGY]  return  new  Number(str.length(),  3);  [BUGGY]      }  if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(     "A  blank  string  is  not  a  valid  number     ");  }  if  (str.startsWith(     "--     "))  {  return  null;  }  if  (str.startsWith(     "0x     ")  ||  str.startsWith(     "-0x     ")  ||  str.startsWith(     "0X     ")  ||  str.startsWith(     "-0X     "))  {  int  hexDigits  =  str.length()  -  2;  //  drop  0x  if  (str.startsWith(     "-     "))  {  //  drop  -  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  	projects/Lang7/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	447	447	1	replace	return  new  Number(str.length(),  3);	  return    new    Number(str.length(),    2);    	non-compiled	[CE]  'catch'  without  'try'	90	None	replace
144	[BUG]  [BUGGY]  Integer  str  =  createInteger(str,  -1);  [CE]  'catch'  without  'try'  [FE]                    AssertionError      [CONTEXT]      public  static  Number  createNumber(String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {      [BUGGY]  Integer  str  =  createInteger(str,  -1);  [BUGGY]      return  null;  }  if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(     "A  blank  string  is  not  a  valid  number     ");  }  if  (str.startsWith(     "--     "))  {  return  null;  }  if  (str.startsWith(     "0x     ")  ||  str.startsWith(     "-0x     ")  ||  str.startsWith(     "0X     ")  ||  str.startsWith(     "-0X     "))  {  int  hexDigits  =  str.length()  -  2;  //  drop  0x  if  (str.startsWith(     "-     "))  {  //  drop  -  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  	projects/Lang7/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	447	447	1	replace	Integer  str  =  createInteger(str,  -1);	  Integer    str    =    createInteger(str,    0);    	non-compiled	[CE]  'catch'  without  'try'	35	None	replace
145	[BUG]  [BUGGY]  NumberUtils.copyValue(str,  exp,  0);  [CE]  'catch'  without  'try'  [FE]                AssertionError      [CONTEXT]      public  static  Number  createNumber(String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {      [BUGGY]  NumberUtils.copyValue(str,  exp,  0);  [BUGGY]      return  null;  }  if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(     "A  blank  string  is  not  a  valid  number     ");  }  if  (str.startsWith(     "--     "))  {  return  null;  }  if  (str.startsWith(     "0x     ")  ||  str.startsWith(     "-0x     ")  ||  str.startsWith(     "0X     ")  ||  str.startsWith(     "-0X     "))  {  int  hexDigits  =  str.length()  -  2;  //  drop  0x  if  (str.startsWith(     "-     "))  {  //  drop  -  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  	projects/Lang7/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	447	447	1	replace	NumberUtils.copyValue(str,  exp,  0);	  NumberUtils.copyValue(str,    hexDigits,    0);    	non-compiled	[CE]  'catch'  without  'try'	74	None	replace
146	[BUG]  [BUGGY]  NumberUtils.copyValue(str,  hexDigits,  0,  str.length());  [CE]  'catch'  without  'try'  [FE]                  AssertionError      [CONTEXT]      public  static  Number  createNumber(String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {      [BUGGY]  NumberUtils.copyValue(str,  hexDigits,  0,  str.length());  [BUGGY]      return  null;  }  if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(     "A  blank  string  is  not  a  valid  number     ");  }  if  (str.startsWith(     "--     "))  {  return  null;  }  if  (str.startsWith(     "0x     ")  ||  str.startsWith(     "-0x     ")  ||  str.startsWith(     "0X     ")  ||  str.startsWith(     "-0X     "))  {  int  hexDigits  =  str.length()  -  2;  //  drop  0x  if  (str.startsWith(     "-     "))  {  //  drop  -  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  	projects/Lang7/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	447	447	1	replace	NumberUtils.copyValue(str,  hexDigits,  0,  str.length());	  NumberUtils.copyValue(str,    hexDigits,    0);    	non-compiled	[CE]  'catch'  without  'try'	74	None	replace
147	[BUG]  [BUGGY]  NumberUtils.copyValue(str,  expPos,  0);  [CE]  'catch'  without  'try'  [FE]                    AssertionError      [CONTEXT]      public  static  Number  createNumber(String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {      [BUGGY]  NumberUtils.copyValue(str,  expPos,  0);  [BUGGY]      return  null;  }  if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(     "A  blank  string  is  not  a  valid  number     ");  }  if  (str.startsWith(     "--     "))  {  return  null;  }  if  (str.startsWith(     "0x     ")  ||  str.startsWith(     "-0x     ")  ||  str.startsWith(     "0X     ")  ||  str.startsWith(     "-0X     "))  {  int  hexDigits  =  str.length()  -  2;  //  drop  0x  if  (str.startsWith(     "-     "))  {  //  drop  -  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  	projects/Lang7/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	447	447	1	replace	NumberUtils.copyValue(str,  expPos,  0);	  NumberUtils.copyValue(str,    hexDigits,    0);    	non-compiled	[CE]  'catch'  without  'try'	74	None	replace
148	[BUG]  [BUGGY]  int  hexDigits  =  str.length()  /  2;  [CE]  'catch'  without  'try'  [FE]                  AssertionError      [CONTEXT]      public  static  Number  createNumber(String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {      [BUGGY]  int  hexDigits  =  str.length()  /  2;  [BUGGY]      return  null;  }  if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(     "A  blank  string  is  not  a  valid  number     ");  }  if  (str.startsWith(     "--     "))  {  return  null;  }  if  (str.startsWith(     "0x     ")  ||  str.startsWith(     "-0x     ")  ||  str.startsWith(     "0X     ")  ||  str.startsWith(     "-0X     "))  {  int  hexDigits  =  str.length()  -  2;  //  drop  0x  if  (str.startsWith(     "-     "))  {  //  drop  -  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  	projects/Lang7/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	447	447	1	replace	int  hexDigits  =  str.length()  /  2;	  int    hexDigits    =    str.length()    *    2;    	non-compiled	[CE]  'catch'  without  'try'	31	None	replace
149	[BUG]  [BUGGY]  return(str  >=  null)?  null  :  new  Number(str.length());  [CE]  'catch'  without  'try'  [FE]              AssertionError      [CONTEXT]      public  static  Number  createNumber(String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {      [BUGGY]  return(str  >=  null)?  null  :  new  Number(str.length());  [BUGGY]      }  if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(     "A  blank  string  is  not  a  valid  number     ");  }  if  (str.startsWith(     "--     "))  {  return  null;  }  if  (str.startsWith(     "0x     ")  ||  str.startsWith(     "-0x     ")  ||  str.startsWith(     "0X     ")  ||  str.startsWith(     "-0X     "))  {  int  hexDigits  =  str.length()  -  2;  //  drop  0x  if  (str.startsWith(     "-     "))  {  //  drop  -  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  	projects/Lang7/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	447	447	1	replace	return(str  >=  null)?  null  :  new  Number(str.length());	  return(str    ==    null)?    null    :    new    Number(str.length()    +    1);    	non-compiled	[CE]  'catch'  without  'try'	58	None	replace
150	[BUG]  [BUGGY]  return  new  Number(str.length()  *  1,  str.length());  [CE]  'catch'  without  'try'  [FE]                      AssertionError      [CONTEXT]      public  static  Number  createNumber(String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {      [BUGGY]  return  new  Number(str.length()  *  1,  str.length());  [BUGGY]      }  if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(     "A  blank  string  is  not  a  valid  number     ");  }  if  (str.startsWith(     "--     "))  {  return  null;  }  if  (str.startsWith(     "0x     ")  ||  str.startsWith(     "-0x     ")  ||  str.startsWith(     "0X     ")  ||  str.startsWith(     "-0X     "))  {  int  hexDigits  =  str.length()  -  2;  //  drop  0x  if  (str.startsWith(     "-     "))  {  //  drop  -  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  	projects/Lang7/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	447	447	1	replace	return  new  Number(str.length()  *  1,  str.length());	  return    new    Number(str.length()    +    1,    str.length());    	non-compiled	[CE]  'catch'  without  'try'	3	None	replace
151	[BUG]  [BUGGY]  return(str  ==  null)?  null  :  new  Number(str);  [CE]  'catch'  without  'try'  [FE]            AssertionError      [CONTEXT]      public  static  Number  createNumber(String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {      [BUGGY]  return(str  ==  null)?  null  :  new  Number(str);  [BUGGY]      }  if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(     "A  blank  string  is  not  a  valid  number     ");  }  if  (str.startsWith(     "--     "))  {  return  null;  }  if  (str.startsWith(     "0x     ")  ||  str.startsWith(     "-0x     ")  ||  str.startsWith(     "0X     ")  ||  str.startsWith(     "-0X     "))  {  int  hexDigits  =  str.length()  -  2;  //  drop  0x  if  (str.startsWith(     "-     "))  {  //  drop  -  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  	projects/Lang7/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	447	447	1	replace	return(str  ==  null)?  null  :  new  Number(str);	  return(null    ==    str)?    null    :    new    Number(str);    	non-compiled	[CE]  'catch'  without  'try'	67	None	replace
152	[BUG]  [BUGGY]  NumberUtils.copyPos(str,  hexDigits);  [CE]  illegal  start  of  type  [FE]                    AssertionError      [CONTEXT]      public  static  Number  createNumber(String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {      [BUGGY]  NumberUtils.copyPos(str,  hexDigits);  [BUGGY]      return  null;  }  if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(     "A  blank  string  is  not  a  valid  number     ");  }  if  (str.startsWith(     "--     "))  {  return  null;  }  if  (str.startsWith(     "0x     ")  ||  str.startsWith(     "-0x     ")  ||  str.startsWith(     "0X     ")  ||  str.startsWith(     "-0X     "))  {  int  hexDigits  =  str.length()  -  2;  //  drop  0x  if  (str.startsWith(     "-     "))  {  //  drop  -  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  	projects/Lang7/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	447	447	1	replace	NumberUtils.copyPos(str,  hexDigits);	  NumberUtils.copyPos(str);    	non-compiled	[CE]  illegal  start  of  type	88	None	replace
153	[BUG]  [BUGGY]  NumberUtils.copyPos(str,  dec);  [CE]  illegal  start  of  type  [FE]                      AssertionError      [CONTEXT]      public  static  Number  createNumber(String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {      [BUGGY]  NumberUtils.copyPos(str,  dec);  [BUGGY]      return  null;  }  if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(     "A  blank  string  is  not  a  valid  number     ");  }  if  (str.startsWith(     "--     "))  {  return  null;  }  if  (str.startsWith(     "0x     ")  ||  str.startsWith(     "-0x     ")  ||  str.startsWith(     "0X     ")  ||  str.startsWith(     "-0X     "))  {  int  hexDigits  =  str.length()  -  2;  //  drop  0x  if  (str.startsWith(     "-     "))  {  //  drop  -  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  	projects/Lang7/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	447	447	1	replace	NumberUtils.copyPos(str,  dec);	  NumberUtils.copyPos(str);    	non-compiled	[CE]  illegal  start  of  type	88	None	replace
154	[BUG]  [BUGGY]  NumberUtils.copyPos(mant);  [CE]  illegal  start  of  type  [FE]                        AssertionError      [CONTEXT]      public  static  Number  createNumber(String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {      [BUGGY]  NumberUtils.copyPos(mant);  [BUGGY]      return  null;  }  if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(     "A  blank  string  is  not  a  valid  number     ");  }  if  (str.startsWith(     "--     "))  {  return  null;  }  if  (str.startsWith(     "0x     ")  ||  str.startsWith(     "-0x     ")  ||  str.startsWith(     "0X     ")  ||  str.startsWith(     "-0X     "))  {  int  hexDigits  =  str.length()  -  2;  //  drop  0x  if  (str.startsWith(     "-     "))  {  //  drop  -  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  	projects/Lang7/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	447	447	1	replace	NumberUtils.copyPos(mant);	  NumberUtils.copyPos(str);    	non-compiled	[CE]  illegal  start  of  type	88	None	replace
155	[BUG]  [BUGGY]  NumberUtils.copyPos(str,  exp);  [CE]  illegal  start  of  type  [FE]                          AssertionError      [CONTEXT]      public  static  Number  createNumber(String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {      [BUGGY]  NumberUtils.copyPos(str,  exp);  [BUGGY]      return  null;  }  if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(     "A  blank  string  is  not  a  valid  number     ");  }  if  (str.startsWith(     "--     "))  {  return  null;  }  if  (str.startsWith(     "0x     ")  ||  str.startsWith(     "-0x     ")  ||  str.startsWith(     "0X     ")  ||  str.startsWith(     "-0X     "))  {  int  hexDigits  =  str.length()  -  2;  //  drop  0x  if  (str.startsWith(     "-     "))  {  //  drop  -  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  	projects/Lang7/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	447	447	1	replace	NumberUtils.copyPos(str,  exp);	  NumberUtils.copyPos(str);    	non-compiled	[CE]  illegal  start  of  type	88	None	replace
156	[BUG]  [BUGGY]  Integer  str  =  createBigDecimal(str);  [CE]  illegal  start  of  type  [FE]              AssertionError      [CONTEXT]      public  static  Number  createNumber(String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {      [BUGGY]  Integer  str  =  createBigDecimal(str);  [BUGGY]      return  null;  }  if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(     "A  blank  string  is  not  a  valid  number     ");  }  if  (str.startsWith(     "--     "))  {  return  null;  }  if  (str.startsWith(     "0x     ")  ||  str.startsWith(     "-0x     ")  ||  str.startsWith(     "0X     ")  ||  str.startsWith(     "-0X     "))  {  int  hexDigits  =  str.length()  -  2;  //  drop  0x  if  (str.startsWith(     "-     "))  {  //  drop  -  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  	projects/Lang7/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	447	447	1	replace	Integer  str  =  createBigDecimal(str);	  Integer    str    =    createBigInteger(str);    	non-compiled	[CE]  illegal  start  of  type	100	None	replace
157	[BUG]  [BUGGY]  NumberUtils.copyNumber(str,  expPos);  [CE]  illegal  start  of  type  [FE]                  AssertionError      [CONTEXT]      public  static  Number  createNumber(String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {      [BUGGY]  NumberUtils.copyNumber(str,  expPos);  [BUGGY]      return  null;  }  if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(     "A  blank  string  is  not  a  valid  number     ");  }  if  (str.startsWith(     "--     "))  {  return  null;  }  if  (str.startsWith(     "0x     ")  ||  str.startsWith(     "-0x     ")  ||  str.startsWith(     "0X     ")  ||  str.startsWith(     "-0X     "))  {  int  hexDigits  =  str.length()  -  2;  //  drop  0x  if  (str.startsWith(     "-     "))  {  //  drop  -  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  	projects/Lang7/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	447	447	1	replace	NumberUtils.copyNumber(str,  expPos);	  NumberUtils.copyNumber(str,    hexDigits);    	non-compiled	[CE]  illegal  start  of  type	36	None	replace
158	[BUG]  [BUGGY]  NumberUtils.copyNumber(str,  hexDigits,  exp);  [CE]  illegal  start  of  type  [FE]                    AssertionError      [CONTEXT]      public  static  Number  createNumber(String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {      [BUGGY]  NumberUtils.copyNumber(str,  hexDigits,  exp);  [BUGGY]      return  null;  }  if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(     "A  blank  string  is  not  a  valid  number     ");  }  if  (str.startsWith(     "--     "))  {  return  null;  }  if  (str.startsWith(     "0x     ")  ||  str.startsWith(     "-0x     ")  ||  str.startsWith(     "0X     ")  ||  str.startsWith(     "-0X     "))  {  int  hexDigits  =  str.length()  -  2;  //  drop  0x  if  (str.startsWith(     "-     "))  {  //  drop  -  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  	projects/Lang7/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	447	447	1	replace	NumberUtils.copyNumber(str,  hexDigits,  exp);	  NumberUtils.copyNumber(str,    hexDigits);    	non-compiled	[CE]  illegal  start  of  type	36	None	replace
159	[BUG]  [BUGGY]  NumberUtils.copyNumber(str,  decPos);  [CE]  illegal  start  of  type  [FE]                      AssertionError      [CONTEXT]      public  static  Number  createNumber(String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {      [BUGGY]  NumberUtils.copyNumber(str,  decPos);  [BUGGY]      return  null;  }  if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(     "A  blank  string  is  not  a  valid  number     ");  }  if  (str.startsWith(     "--     "))  {  return  null;  }  if  (str.startsWith(     "0x     ")  ||  str.startsWith(     "-0x     ")  ||  str.startsWith(     "0X     ")  ||  str.startsWith(     "-0X     "))  {  int  hexDigits  =  str.length()  -  2;  //  drop  0x  if  (str.startsWith(     "-     "))  {  //  drop  -  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  	projects/Lang7/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	447	447	1	replace	NumberUtils.copyNumber(str,  decPos);	  NumberUtils.copyNumber(str,    hexDigits);    	non-compiled	[CE]  illegal  start  of  type	36	None	replace
160	[BUG]  [BUGGY]  int  decPos  =  str.lastIndexOf('.')+  2;  [CE]  illegal  start  of  type  [FE]                      AssertionError      [CONTEXT]      public  static  Number  createNumber(String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {      [BUGGY]  int  decPos  =  str.lastIndexOf('.')+  2;  [BUGGY]      return  null;  }  if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(     "A  blank  string  is  not  a  valid  number     ");  }  if  (str.startsWith(     "--     "))  {  return  null;  }  if  (str.startsWith(     "0x     ")  ||  str.startsWith(     "-0x     ")  ||  str.startsWith(     "0X     ")  ||  str.startsWith(     "-0X     "))  {  int  hexDigits  =  str.length()  -  2;  //  drop  0x  if  (str.startsWith(     "-     "))  {  //  drop  -  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  	projects/Lang7/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	447	447	1	replace	int  decPos  =  str.lastIndexOf('.')+  2;	  int    decPos    =    str.lastIndexOf('.')+    1;    	non-compiled	[CE]  illegal  start  of  type	105	None	replace
161	[BUG]  [BUGGY]  int  decPos  =  str.indexOf('.')+  1;  [CE]  illegal  start  of  type  [FE]                        AssertionError      [CONTEXT]      public  static  Number  createNumber(String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {      [BUGGY]  int  decPos  =  str.indexOf('.')+  1;  [BUGGY]      return  null;  }  if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(     "A  blank  string  is  not  a  valid  number     ");  }  if  (str.startsWith(     "--     "))  {  return  null;  }  if  (str.startsWith(     "0x     ")  ||  str.startsWith(     "-0x     ")  ||  str.startsWith(     "0X     ")  ||  str.startsWith(     "-0X     "))  {  int  hexDigits  =  str.length()  -  2;  //  drop  0x  if  (str.startsWith(     "-     "))  {  //  drop  -  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  	projects/Lang7/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	447	447	1	replace	int  decPos  =  str.indexOf('.')+  1;	  int    decPos    =    str.lastIndexOf('.')+    1;    	non-compiled	[CE]  illegal  start  of  type	105	None	replace
162	[BUG]  [BUGGY]  NumberUtils.copyValue(hexDigits,  str,  exp);  [CE]  illegal  start  of  type  [FE]                      AssertionError      [CONTEXT]      public  static  Number  createNumber(String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {      [BUGGY]  NumberUtils.copyValue(hexDigits,  str,  exp);  [BUGGY]      return  null;  }  if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(     "A  blank  string  is  not  a  valid  number     ");  }  if  (str.startsWith(     "--     "))  {  return  null;  }  if  (str.startsWith(     "0x     ")  ||  str.startsWith(     "-0x     ")  ||  str.startsWith(     "0X     ")  ||  str.startsWith(     "-0X     "))  {  int  hexDigits  =  str.length()  -  2;  //  drop  0x  if  (str.startsWith(     "-     "))  {  //  drop  -  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  	projects/Lang7/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	447	447	1	replace	NumberUtils.copyValue(hexDigits,  str,  exp);	  NumberUtils.copyValue(hexDigits,    str);    	non-compiled	[CE]  illegal  start  of  type	23	None	replace
163	[BUG]  [BUGGY]  NumberUtils.copyValue(str,  HexDigits);  [CE]  illegal  start  of  type  [FE]                        AssertionError      [CONTEXT]      public  static  Number  createNumber(String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {      [BUGGY]  NumberUtils.copyValue(str,  HexDigits);  [BUGGY]      return  null;  }  if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(     "A  blank  string  is  not  a  valid  number     ");  }  if  (str.startsWith(     "--     "))  {  return  null;  }  if  (str.startsWith(     "0x     ")  ||  str.startsWith(     "-0x     ")  ||  str.startsWith(     "0X     ")  ||  str.startsWith(     "-0X     "))  {  int  hexDigits  =  str.length()  -  2;  //  drop  0x  if  (str.startsWith(     "-     "))  {  //  drop  -  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  	projects/Lang7/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	447	447	1	replace	NumberUtils.copyValue(str,  HexDigits);	  NumberUtils.copyValue(hexDigits,    str);    	non-compiled	[CE]  illegal  start  of  type	23	None	replace
164	[BUG]  [BUGGY]  NumberUtils.copyDecimal(hexDigits,  str);  [CE]  illegal  start  of  type  [FE]                          AssertionError      [CONTEXT]      public  static  Number  createNumber(String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {      [BUGGY]  NumberUtils.copyDecimal(hexDigits,  str);  [BUGGY]      return  null;  }  if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(     "A  blank  string  is  not  a  valid  number     ");  }  if  (str.startsWith(     "--     "))  {  return  null;  }  if  (str.startsWith(     "0x     ")  ||  str.startsWith(     "-0x     ")  ||  str.startsWith(     "0X     ")  ||  str.startsWith(     "-0X     "))  {  int  hexDigits  =  str.length()  -  2;  //  drop  0x  if  (str.startsWith(     "-     "))  {  //  drop  -  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  	projects/Lang7/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	447	447	1	replace	NumberUtils.copyDecimal(hexDigits,  str);	  NumberUtils.copyValue(hexDigits,    str);    	non-compiled	[CE]  illegal  start  of  type	23	None	replace
165	[BUG]  [BUGGY]  NumberUtils.setBlank(str,  hexDigits,  exp);  [CE]  illegal  start  of  type  [FE]                  AssertionError      [CONTEXT]      public  static  Number  createNumber(String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {      [BUGGY]  NumberUtils.setBlank(str,  hexDigits,  exp);  [BUGGY]      return  null;  }  if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(     "A  blank  string  is  not  a  valid  number     ");  }  if  (str.startsWith(     "--     "))  {  return  null;  }  if  (str.startsWith(     "0x     ")  ||  str.startsWith(     "-0x     ")  ||  str.startsWith(     "0X     ")  ||  str.startsWith(     "-0X     "))  {  int  hexDigits  =  str.length()  -  2;  //  drop  0x  if  (str.startsWith(     "-     "))  {  //  drop  -  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  	projects/Lang7/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	447	447	1	replace	NumberUtils.setBlank(str,  hexDigits,  exp);	  NumberUtils.setBlank(str,    hexDigits);    	non-compiled	[CE]  illegal  start  of  type	70	None	replace
166	[BUG]  [BUGGY]  NumberUtils.setBlank(str,  expPos);  [CE]  illegal  start  of  type  [FE]                    AssertionError      [CONTEXT]      public  static  Number  createNumber(String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {      [BUGGY]  NumberUtils.setBlank(str,  expPos);  [BUGGY]      return  null;  }  if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(     "A  blank  string  is  not  a  valid  number     ");  }  if  (str.startsWith(     "--     "))  {  return  null;  }  if  (str.startsWith(     "0x     ")  ||  str.startsWith(     "-0x     ")  ||  str.startsWith(     "0X     ")  ||  str.startsWith(     "-0X     "))  {  int  hexDigits  =  str.length()  -  2;  //  drop  0x  if  (str.startsWith(     "-     "))  {  //  drop  -  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  	projects/Lang7/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	447	447	1	replace	NumberUtils.setBlank(str,  expPos);	  NumberUtils.setBlank(str,    hexDigits);    	non-compiled	[CE]  illegal  start  of  type	70	None	replace
167	[BUG]  [BUGGY]  Integer  hexDigits  =  str.length()  -  2;  [CE]  illegal  start  of  type  [FE]            AssertionError      [CONTEXT]      public  static  Number  createNumber(String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {      [BUGGY]  Integer  hexDigits  =  str.length()  -  2;  [BUGGY]      return  null;  }  if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(     "A  blank  string  is  not  a  valid  number     ");  }  if  (str.startsWith(     "--     "))  {  return  null;  }  if  (str.startsWith(     "0x     ")  ||  str.startsWith(     "-0x     ")  ||  str.startsWith(     "0X     ")  ||  str.startsWith(     "-0X     "))  {  int  hexDigits  =  str.length()  -  2;  //  drop  0x  if  (str.startsWith(     "-     "))  {  //  drop  -  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  	projects/Lang7/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	447	447	1	replace	Integer  hexDigits  =  str.length()  -  2;	  Integer    hexDigits    =    str.length();    	non-compiled	[CE]  illegal  start  of  type	77	None	replace
168	[BUG]  [BUGGY]  Integer  hexDigits  =  str.length()  +  2;  [CE]  illegal  start  of  type  [FE]              AssertionError      [CONTEXT]      public  static  Number  createNumber(String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {      [BUGGY]  Integer  hexDigits  =  str.length()  +  2;  [BUGGY]      return  null;  }  if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(     "A  blank  string  is  not  a  valid  number     ");  }  if  (str.startsWith(     "--     "))  {  return  null;  }  if  (str.startsWith(     "0x     ")  ||  str.startsWith(     "-0x     ")  ||  str.startsWith(     "0X     ")  ||  str.startsWith(     "-0X     "))  {  int  hexDigits  =  str.length()  -  2;  //  drop  0x  if  (str.startsWith(     "-     "))  {  //  drop  -  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  	projects/Lang7/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	447	447	1	replace	Integer  hexDigits  =  str.length()  +  2;	  Integer    hexDigits    =    str.length();    	non-compiled	[CE]  illegal  start  of  type	77	None	replace
169	[BUG]  [BUGGY]  Integer  hexDigits  =  str.length()  -  1;  [CE]  illegal  start  of  type  [FE]                AssertionError      [CONTEXT]      public  static  Number  createNumber(String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {      [BUGGY]  Integer  hexDigits  =  str.length()  -  1;  [BUGGY]      return  null;  }  if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(     "A  blank  string  is  not  a  valid  number     ");  }  if  (str.startsWith(     "--     "))  {  return  null;  }  if  (str.startsWith(     "0x     ")  ||  str.startsWith(     "-0x     ")  ||  str.startsWith(     "0X     ")  ||  str.startsWith(     "-0X     "))  {  int  hexDigits  =  str.length()  -  2;  //  drop  0x  if  (str.startsWith(     "-     "))  {  //  drop  -  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  	projects/Lang7/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	447	447	1	replace	Integer  hexDigits  =  str.length()  -  1;	  Integer    hexDigits    =    str.length();    	non-compiled	[CE]  illegal  start  of  type	77	None	replace
170	[BUG]  [BUGGY]  NumberUtils.setLength(hexDigits);  [CE]  illegal  start  of  type  [FE]                    AssertionError      [CONTEXT]      public  static  Number  createNumber(String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {      [BUGGY]  NumberUtils.setLength(hexDigits);  [BUGGY]      return  null;  }  if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(     "A  blank  string  is  not  a  valid  number     ");  }  if  (str.startsWith(     "--     "))  {  return  null;  }  if  (str.startsWith(     "0x     ")  ||  str.startsWith(     "-0x     ")  ||  str.startsWith(     "0X     ")  ||  str.startsWith(     "-0X     "))  {  int  hexDigits  =  str.length()  -  2;  //  drop  0x  if  (str.startsWith(     "-     "))  {  //  drop  -  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  	projects/Lang7/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	447	447	1	replace	NumberUtils.setLength(hexDigits);	  NumberUtils.setLength(str);    	non-compiled	[CE]  illegal  start  of  type	13	None	replace
171	[BUG]  [BUGGY]  NumberUtils.setLength(0);  [CE]  illegal  start  of  type  [FE]                      AssertionError      [CONTEXT]      public  static  Number  createNumber(String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {      [BUGGY]  NumberUtils.setLength(0);  [BUGGY]      return  null;  }  if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(     "A  blank  string  is  not  a  valid  number     ");  }  if  (str.startsWith(     "--     "))  {  return  null;  }  if  (str.startsWith(     "0x     ")  ||  str.startsWith(     "-0x     ")  ||  str.startsWith(     "0X     ")  ||  str.startsWith(     "-0X     "))  {  int  hexDigits  =  str.length()  -  2;  //  drop  0x  if  (str.startsWith(     "-     "))  {  //  drop  -  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  	projects/Lang7/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	447	447	1	replace	NumberUtils.setLength(0);	  NumberUtils.setLength(str);    	non-compiled	[CE]  illegal  start  of  type	13	None	replace
172	[BUG]  [BUGGY]  NumberUtils.setLength(str.length());  [CE]  illegal  start  of  type  [FE]                        AssertionError      [CONTEXT]      public  static  Number  createNumber(String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {      [BUGGY]  NumberUtils.setLength(str.length());  [BUGGY]      return  null;  }  if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(     "A  blank  string  is  not  a  valid  number     ");  }  if  (str.startsWith(     "--     "))  {  return  null;  }  if  (str.startsWith(     "0x     ")  ||  str.startsWith(     "-0x     ")  ||  str.startsWith(     "0X     ")  ||  str.startsWith(     "-0X     "))  {  int  hexDigits  =  str.length()  -  2;  //  drop  0x  if  (str.startsWith(     "-     "))  {  //  drop  -  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  	projects/Lang7/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	447	447	1	replace	NumberUtils.setLength(str.length());	  NumberUtils.setLength(str);    	non-compiled	[CE]  illegal  start  of  type	13	None	replace
173	[BUG]  [BUGGY]  NumberUtils.setNumber(str);  [CE]  illegal  start  of  type  [FE]                          AssertionError      [CONTEXT]      public  static  Number  createNumber(String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {      [BUGGY]  NumberUtils.setNumber(str);  [BUGGY]      return  null;  }  if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(     "A  blank  string  is  not  a  valid  number     ");  }  if  (str.startsWith(     "--     "))  {  return  null;  }  if  (str.startsWith(     "0x     ")  ||  str.startsWith(     "-0x     ")  ||  str.startsWith(     "0X     ")  ||  str.startsWith(     "-0X     "))  {  int  hexDigits  =  str.length()  -  2;  //  drop  0x  if  (str.startsWith(     "-     "))  {  //  drop  -  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  	projects/Lang7/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	447	447	1	replace	NumberUtils.setNumber(str);	  NumberUtils.setLength(str);    	non-compiled	[CE]  illegal  start  of  type	13	None	replace
174	[BUG]  [BUGGY]  throw  new  NumberFormatException( " ");  [CE]  illegal  start  of  type  [FE]                      AssertionError      [CONTEXT]      public  static  Number  createNumber(String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {      [BUGGY]  throw  new  NumberFormatException( " ");  [BUGGY]      }  if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(     "A  blank  string  is  not  a  valid  number     ");  }  if  (str.startsWith(     "--     "))  {  return  null;  }  if  (str.startsWith(     "0x     ")  ||  str.startsWith(     "-0x     ")  ||  str.startsWith(     "0X     ")  ||  str.startsWith(     "-0X     "))  {  int  hexDigits  =  str.length()  -  2;  //  drop  0x  if  (str.startsWith(     "-     "))  {  //  drop  -  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  	projects/Lang7/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	447	447	1	replace	throw  new  NumberFormatException( " ");	  if(str.length()    ==    0)    {    throw    new    NumberFormatException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  type	97	None	replace
175	[BUG]  [BUGGY]  Thread.currentThread().setContextClassLoader(getClass().getClassLoader());  [CE]  illegal  start  of  type  [FE]                        AssertionError      [CONTEXT]      public  static  Number  createNumber(String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {      [BUGGY]  Thread.currentThread().setContextClassLoader(getClass().getClassLoader());  [BUGGY]      }  if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(     "A  blank  string  is  not  a  valid  number     ");  }  if  (str.startsWith(     "--     "))  {  return  null;  }  if  (str.startsWith(     "0x     ")  ||  str.startsWith(     "-0x     ")  ||  str.startsWith(     "0X     ")  ||  str.startsWith(     "-0X     "))  {  int  hexDigits  =  str.length()  -  2;  //  drop  0x  if  (str.startsWith(     "-     "))  {  //  drop  -  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  	projects/Lang7/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	447	447	1	replace	Thread.currentThread().setContextClassLoader(getClass().getClassLoader());	  if(str.length()    ==    0)    {    throw    new    NumberFormatException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  type	97	None	replace
176	[BUG]  [BUGGY]  Thread.currentThread().setContextClassLoader(this);  [CE]  illegal  start  of  type  [FE]                          AssertionError      [CONTEXT]      public  static  Number  createNumber(String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {      [BUGGY]  Thread.currentThread().setContextClassLoader(this);  [BUGGY]      }  if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(     "A  blank  string  is  not  a  valid  number     ");  }  if  (str.startsWith(     "--     "))  {  return  null;  }  if  (str.startsWith(     "0x     ")  ||  str.startsWith(     "-0x     ")  ||  str.startsWith(     "0X     ")  ||  str.startsWith(     "-0X     "))  {  int  hexDigits  =  str.length()  -  2;  //  drop  0x  if  (str.startsWith(     "-     "))  {  //  drop  -  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  	projects/Lang7/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	447	447	1	replace	Thread.currentThread().setContextClassLoader(this);	  if(str.length()    ==    0)    {    throw    new    NumberFormatException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  type	97	None	replace
177	[BUG]  [BUGGY]  Thread.currentThread().setContextClassLoader(null);  [CE]  illegal  start  of  type  [FE]                            AssertionError      [CONTEXT]      public  static  Number  createNumber(String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {      [BUGGY]  Thread.currentThread().setContextClassLoader(null);  [BUGGY]      }  if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(     "A  blank  string  is  not  a  valid  number     ");  }  if  (str.startsWith(     "--     "))  {  return  null;  }  if  (str.startsWith(     "0x     ")  ||  str.startsWith(     "-0x     ")  ||  str.startsWith(     "0X     ")  ||  str.startsWith(     "-0X     "))  {  int  hexDigits  =  str.length()  -  2;  //  drop  0x  if  (str.startsWith(     "-     "))  {  //  drop  -  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  	projects/Lang7/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	447	447	1	replace	Thread.currentThread().setContextClassLoader(null);	  if(str.length()    ==    0)    {    throw    new    NumberFormatException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  type	97	None	replace
178	[BUG]  [BUGGY]  return  new  Number(str.length()  /  2);  [CE]  illegal  start  of  type  [FE]                AssertionError      [CONTEXT]      public  static  Number  createNumber(String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {      [BUGGY]  return  new  Number(str.length()  /  2);  [BUGGY]      }  if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(     "A  blank  string  is  not  a  valid  number     ");  }  if  (str.startsWith(     "--     "))  {  return  null;  }  if  (str.startsWith(     "0x     ")  ||  str.startsWith(     "-0x     ")  ||  str.startsWith(     "0X     ")  ||  str.startsWith(     "-0X     "))  {  int  hexDigits  =  str.length()  -  2;  //  drop  0x  if  (str.startsWith(     "-     "))  {  //  drop  -  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  	projects/Lang7/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	447	447	1	replace	return  new  Number(str.length()  /  2);	  return    new    Number(str.length()    *    2);    	non-compiled	[CE]  illegal  start  of  type	48	None	replace
179	[BUG]  [BUGGY]  Number  str  =  createNumber(str.substring(2));  [CE]  illegal  start  of  type  [FE]              AssertionError      [CONTEXT]      public  static  Number  createNumber(String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {      [BUGGY]  Number  str  =  createNumber(str.substring(2));  [BUGGY]      return  null;  }  if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(     "A  blank  string  is  not  a  valid  number     ");  }  if  (str.startsWith(     "--     "))  {  return  null;  }  if  (str.startsWith(     "0x     ")  ||  str.startsWith(     "-0x     ")  ||  str.startsWith(     "0X     ")  ||  str.startsWith(     "-0X     "))  {  int  hexDigits  =  str.length()  -  2;  //  drop  0x  if  (str.startsWith(     "-     "))  {  //  drop  -  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  	projects/Lang7/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	447	447	1	replace	Number  str  =  createNumber(str.substring(2));	  Number    str    =    createNumber(str.substring(1));    	non-compiled	[CE]  illegal  start  of  type	42	None	replace
180	[BUG]  [BUGGY]  Number  str  =  createNumber(str.substring(1),  str.length());  [CE]  illegal  start  of  type  [FE]                AssertionError      [CONTEXT]      public  static  Number  createNumber(String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {      [BUGGY]  Number  str  =  createNumber(str.substring(1),  str.length());  [BUGGY]      return  null;  }  if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(     "A  blank  string  is  not  a  valid  number     ");  }  if  (str.startsWith(     "--     "))  {  return  null;  }  if  (str.startsWith(     "0x     ")  ||  str.startsWith(     "-0x     ")  ||  str.startsWith(     "0X     ")  ||  str.startsWith(     "-0X     "))  {  int  hexDigits  =  str.length()  -  2;  //  drop  0x  if  (str.startsWith(     "-     "))  {  //  drop  -  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  	projects/Lang7/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	447	447	1	replace	Number  str  =  createNumber(str.substring(1),  str.length());	  Number    str    =    createNumber(str.substring(1));    	non-compiled	[CE]  illegal  start  of  type	42	None	replace
181	[BUG]  [BUGGY]  Number  str  =  createNumber(str.substring(0,  str.length()  -  2));  [CE]  illegal  start  of  type  [FE]                  AssertionError      [CONTEXT]      public  static  Number  createNumber(String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {      [BUGGY]  Number  str  =  createNumber(str.substring(0,  str.length()  -  2));  [BUGGY]      return  null;  }  if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(     "A  blank  string  is  not  a  valid  number     ");  }  if  (str.startsWith(     "--     "))  {  return  null;  }  if  (str.startsWith(     "0x     ")  ||  str.startsWith(     "-0x     ")  ||  str.startsWith(     "0X     ")  ||  str.startsWith(     "-0X     "))  {  int  hexDigits  =  str.length()  -  2;  //  drop  0x  if  (str.startsWith(     "-     "))  {  //  drop  -  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  	projects/Lang7/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	447	447	1	replace	Number  str  =  createNumber(str.substring(0,  str.length()  -  2));	  Number    str    =    createNumber(str.substring(1));    	non-compiled	[CE]  illegal  start  of  type	42	None	replace
182	[BUG]  [BUGGY]  Integer  str  =  createInteger(str.substring(0,  str.length()  -  1));  [CE]  illegal  start  of  type  [FE]                AssertionError      [CONTEXT]      public  static  Number  createNumber(String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {      [BUGGY]  Integer  str  =  createInteger(str.substring(0,  str.length()  -  1));  [BUGGY]      return  null;  }  if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(     "A  blank  string  is  not  a  valid  number     ");  }  if  (str.startsWith(     "--     "))  {  return  null;  }  if  (str.startsWith(     "0x     ")  ||  str.startsWith(     "-0x     ")  ||  str.startsWith(     "0X     ")  ||  str.startsWith(     "-0X     "))  {  int  hexDigits  =  str.length()  -  2;  //  drop  0x  if  (str.startsWith(     "-     "))  {  //  drop  -  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  	projects/Lang7/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	447	447	1	replace	Integer  str  =  createInteger(str.substring(0,  str.length()  -  1));	  Integer    str    =    createInteger(str.substring(1));    	non-compiled	[CE]  illegal  start  of  type	33	None	replace
183	[BUG]  [BUGGY]  Integer  str  =  createInteger(str.substring(0,  str.length()  -  2));  [CE]  illegal  start  of  type  [FE]                  AssertionError      [CONTEXT]      public  static  Number  createNumber(String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {      [BUGGY]  Integer  str  =  createInteger(str.substring(0,  str.length()  -  2));  [BUGGY]      return  null;  }  if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(     "A  blank  string  is  not  a  valid  number     ");  }  if  (str.startsWith(     "--     "))  {  return  null;  }  if  (str.startsWith(     "0x     ")  ||  str.startsWith(     "-0x     ")  ||  str.startsWith(     "0X     ")  ||  str.startsWith(     "-0X     "))  {  int  hexDigits  =  str.length()  -  2;  //  drop  0x  if  (str.startsWith(     "-     "))  {  //  drop  -  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  	projects/Lang7/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	447	447	1	replace	Integer  str  =  createInteger(str.substring(0,  str.length()  -  2));	  Integer    str    =    createInteger(str.substring(1));    	non-compiled	[CE]  illegal  start  of  type	33	None	replace
184	[BUG]  [BUGGY]  Integer  str  =  createInteger(str.substring(0,  str.length()));  [CE]  illegal  start  of  type  [FE]                    AssertionError      [CONTEXT]      public  static  Number  createNumber(String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {      [BUGGY]  Integer  str  =  createInteger(str.substring(0,  str.length()));  [BUGGY]      return  null;  }  if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(     "A  blank  string  is  not  a  valid  number     ");  }  if  (str.startsWith(     "--     "))  {  return  null;  }  if  (str.startsWith(     "0x     ")  ||  str.startsWith(     "-0x     ")  ||  str.startsWith(     "0X     ")  ||  str.startsWith(     "-0X     "))  {  int  hexDigits  =  str.length()  -  2;  //  drop  0x  if  (str.startsWith(     "-     "))  {  //  drop  -  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  	projects/Lang7/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	447	447	1	replace	Integer  str  =  createInteger(str.substring(0,  str.length()));	  Integer    str    =    createInteger(str.substring(1));    	non-compiled	[CE]  illegal  start  of  type	33	None	replace
185	[BUG]  [BUGGY]  Integer  str  =  createInteger(str.substring(2));  [CE]  illegal  start  of  type  [FE]                      AssertionError      [CONTEXT]      public  static  Number  createNumber(String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {      [BUGGY]  Integer  str  =  createInteger(str.substring(2));  [BUGGY]      return  null;  }  if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(     "A  blank  string  is  not  a  valid  number     ");  }  if  (str.startsWith(     "--     "))  {  return  null;  }  if  (str.startsWith(     "0x     ")  ||  str.startsWith(     "-0x     ")  ||  str.startsWith(     "0X     ")  ||  str.startsWith(     "-0X     "))  {  int  hexDigits  =  str.length()  -  2;  //  drop  0x  if  (str.startsWith(     "-     "))  {  //  drop  -  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  	projects/Lang7/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	447	447	1	replace	Integer  str  =  createInteger(str.substring(2));	  Integer    str    =    createInteger(str.substring(1));    	non-compiled	[CE]  illegal  start  of  type	33	None	replace
186	[BUG]  [BUGGY]  if(str.length()  ==  0  ||  str.charAt(0)  ==  '-')  {  return  null;  }  [CE]  illegal  start  of  type  [FE]                    AssertionError      [CONTEXT]      public  static  Number  createNumber(String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {      [BUGGY]  if(str.length()  ==  0  ||  str.charAt(0)  ==  '-')  {  return  null;  }  [BUGGY]      }  if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(     "A  blank  string  is  not  a  valid  number     ");  }  if  (str.startsWith(     "--     "))  {  return  null;  }  if  (str.startsWith(     "0x     ")  ||  str.startsWith(     "-0x     ")  ||  str.startsWith(     "0X     ")  ||  str.startsWith(     "-0X     "))  {  int  hexDigits  =  str.length()  -  2;  //  drop  0x  if  (str.startsWith(     "-     "))  {  //  drop  -  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  	projects/Lang7/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	447	447	1	replace	if(str.length()  ==  0  ||  str.charAt(0)  ==  '-')  {  return  null;  }	  if(str.length()    ==    0)    {    return    null;    }    	non-compiled	[CE]  illegal  start  of  type	96	None	replace
187	[BUG]  [BUGGY]  return(str  ==  null  ||  str.length()  ==  0)?  null  :  new  Number(str.length());  [CE]  illegal  start  of  type  [FE]                AssertionError      [CONTEXT]      public  static  Number  createNumber(String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {      [BUGGY]  return(str  ==  null  ||  str.length()  ==  0)?  null  :  new  Number(str.length());  [BUGGY]      }  if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(     "A  blank  string  is  not  a  valid  number     ");  }  if  (str.startsWith(     "--     "))  {  return  null;  }  if  (str.startsWith(     "0x     ")  ||  str.startsWith(     "-0x     ")  ||  str.startsWith(     "0X     ")  ||  str.startsWith(     "-0X     "))  {  int  hexDigits  =  str.length()  -  2;  //  drop  0x  if  (str.startsWith(     "-     "))  {  //  drop  -  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  	projects/Lang7/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	447	447	1	replace	return(str  ==  null  ||  str.length()  ==  0)?  null  :  new  Number(str.length());	  return(null    ==    str.length())?    null    :    new    Number(str.length());    	non-compiled	[CE]  illegal  start  of  type	59	None	replace
188	[BUG]  [BUGGY]  NumberUtils.copyNumber(null,  str);  [CE]  illegal  start  of  type  [FE]                  AssertionError      [CONTEXT]      public  static  Number  createNumber(String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {      [BUGGY]  NumberUtils.copyNumber(null,  str);  [BUGGY]      return  null;  }  if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(     "A  blank  string  is  not  a  valid  number     ");  }  if  (str.startsWith(     "--     "))  {  return  null;  }  if  (str.startsWith(     "0x     ")  ||  str.startsWith(     "-0x     ")  ||  str.startsWith(     "0X     ")  ||  str.startsWith(     "-0X     "))  {  int  hexDigits  =  str.length()  -  2;  //  drop  0x  if  (str.startsWith(     "-     "))  {  //  drop  -  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  	projects/Lang7/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	447	447	1	replace	NumberUtils.copyNumber(null,  str);	  NumberUtils.copyNumber(mant);    	non-compiled	[CE]  illegal  start  of  type	83	None	replace
189	[BUG]  [BUGGY]  NumberUtils.copyString(str);  [CE]  illegal  start  of  type  [FE]                    AssertionError      [CONTEXT]      public  static  Number  createNumber(String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {      [BUGGY]  NumberUtils.copyString(str);  [BUGGY]      return  null;  }  if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(     "A  blank  string  is  not  a  valid  number     ");  }  if  (str.startsWith(     "--     "))  {  return  null;  }  if  (str.startsWith(     "0x     ")  ||  str.startsWith(     "-0x     ")  ||  str.startsWith(     "0X     ")  ||  str.startsWith(     "-0X     "))  {  int  hexDigits  =  str.length()  -  2;  //  drop  0x  if  (str.startsWith(     "-     "))  {  //  drop  -  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  	projects/Lang7/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	447	447	1	replace	NumberUtils.copyString(str);	  NumberUtils.copyValue(mant);    	non-compiled	[CE]  illegal  start  of  type	65	None	replace
190	[BUG]  [BUGGY]  NumberUtils.copyNull(str);  [CE]  illegal  start  of  type  [FE]                      AssertionError      [CONTEXT]      public  static  Number  createNumber(String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {      [BUGGY]  NumberUtils.copyNull(str);  [BUGGY]      return  null;  }  if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(     "A  blank  string  is  not  a  valid  number     ");  }  if  (str.startsWith(     "--     "))  {  return  null;  }  if  (str.startsWith(     "0x     ")  ||  str.startsWith(     "-0x     ")  ||  str.startsWith(     "0X     ")  ||  str.startsWith(     "-0X     "))  {  int  hexDigits  =  str.length()  -  2;  //  drop  0x  if  (str.startsWith(     "-     "))  {  //  drop  -  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  	projects/Lang7/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	447	447	1	replace	NumberUtils.copyNull(str);	  NumberUtils.copyValue(mant);    	non-compiled	[CE]  illegal  start  of  type	65	None	replace
191	[BUG]  [BUGGY]  NumberUtils.copyValue(str,  dec,  exp);  [CE]  illegal  start  of  type  [FE]                    AssertionError      [CONTEXT]      public  static  Number  createNumber(String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {      [BUGGY]  NumberUtils.copyValue(str,  dec,  exp);  [BUGGY]      return  null;  }  if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(     "A  blank  string  is  not  a  valid  number     ");  }  if  (str.startsWith(     "--     "))  {  return  null;  }  if  (str.startsWith(     "0x     ")  ||  str.startsWith(     "-0x     ")  ||  str.startsWith(     "0X     ")  ||  str.startsWith(     "-0X     "))  {  int  hexDigits  =  str.length()  -  2;  //  drop  0x  if  (str.startsWith(     "-     "))  {  //  drop  -  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  	projects/Lang7/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	447	447	1	replace	NumberUtils.copyValue(str,  dec,  exp);	  NumberUtils.copyValue(str,    hexDigits,    exp);    	non-compiled	[CE]  illegal  start  of  type	22	None	replace
192	[BUG]  [BUGGY]  NumberUtils.copyValue(str,  str,  exp);  [CE]  illegal  start  of  type  [FE]                      AssertionError      [CONTEXT]      public  static  Number  createNumber(String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {      [BUGGY]  NumberUtils.copyValue(str,  str,  exp);  [BUGGY]      return  null;  }  if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(     "A  blank  string  is  not  a  valid  number     ");  }  if  (str.startsWith(     "--     "))  {  return  null;  }  if  (str.startsWith(     "0x     ")  ||  str.startsWith(     "-0x     ")  ||  str.startsWith(     "0X     ")  ||  str.startsWith(     "-0X     "))  {  int  hexDigits  =  str.length()  -  2;  //  drop  0x  if  (str.startsWith(     "-     "))  {  //  drop  -  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  	projects/Lang7/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	447	447	1	replace	NumberUtils.copyValue(str,  str,  exp);	  NumberUtils.copyValue(str,    hexDigits,    exp);    	non-compiled	[CE]  illegal  start  of  type	22	None	replace
193	[BUG]  [BUGGY]  NumberUtils.copyValue(str,  desc,  exp);  [CE]  illegal  start  of  type  [FE]                        AssertionError      [CONTEXT]      public  static  Number  createNumber(String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {      [BUGGY]  NumberUtils.copyValue(str,  desc,  exp);  [BUGGY]      return  null;  }  if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(     "A  blank  string  is  not  a  valid  number     ");  }  if  (str.startsWith(     "--     "))  {  return  null;  }  if  (str.startsWith(     "0x     ")  ||  str.startsWith(     "-0x     ")  ||  str.startsWith(     "0X     ")  ||  str.startsWith(     "-0X     "))  {  int  hexDigits  =  str.length()  -  2;  //  drop  0x  if  (str.startsWith(     "-     "))  {  //  drop  -  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  	projects/Lang7/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	447	447	1	replace	NumberUtils.copyValue(str,  desc,  exp);	  NumberUtils.copyValue(str,    hexDigits,    exp);    	non-compiled	[CE]  illegal  start  of  type	22	None	replace
194	[BUG]  [BUGGY]  NumberUtils.setBlank(str,  0.0);  [CE]  illegal  start  of  type  [FE]                      AssertionError      [CONTEXT]      public  static  Number  createNumber(String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {      [BUGGY]  NumberUtils.setBlank(str,  0.0);  [BUGGY]      return  null;  }  if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(     "A  blank  string  is  not  a  valid  number     ");  }  if  (str.startsWith(     "--     "))  {  return  null;  }  if  (str.startsWith(     "0x     ")  ||  str.startsWith(     "-0x     ")  ||  str.startsWith(     "0X     ")  ||  str.startsWith(     "-0X     "))  {  int  hexDigits  =  str.length()  -  2;  //  drop  0x  if  (str.startsWith(     "-     "))  {  //  drop  -  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  	projects/Lang7/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	447	447	1	replace	NumberUtils.setBlank(str,  0.0);	  NumberUtils.setBlank(str,    1.0);    	non-compiled	[CE]  illegal  start  of  type	14	None	replace
195	[BUG]  [BUGGY]  NumberUtils.setBlank(str,  0.5);  [CE]  illegal  start  of  type  [FE]                        AssertionError      [CONTEXT]      public  static  Number  createNumber(String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {      [BUGGY]  NumberUtils.setBlank(str,  0.5);  [BUGGY]      return  null;  }  if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(     "A  blank  string  is  not  a  valid  number     ");  }  if  (str.startsWith(     "--     "))  {  return  null;  }  if  (str.startsWith(     "0x     ")  ||  str.startsWith(     "-0x     ")  ||  str.startsWith(     "0X     ")  ||  str.startsWith(     "-0X     "))  {  int  hexDigits  =  str.length()  -  2;  //  drop  0x  if  (str.startsWith(     "-     "))  {  //  drop  -  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  	projects/Lang7/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	447	447	1	replace	NumberUtils.setBlank(str,  0.5);	  NumberUtils.setBlank(str,    1.0);    	non-compiled	[CE]  illegal  start  of  type	14	None	replace
196	[BUG]  [BUGGY]  NumberUtils.setBlank(str,  5.0);  [CE]  illegal  start  of  type  [FE]                          AssertionError      [CONTEXT]      public  static  Number  createNumber(String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {      [BUGGY]  NumberUtils.setBlank(str,  5.0);  [BUGGY]      return  null;  }  if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(     "A  blank  string  is  not  a  valid  number     ");  }  if  (str.startsWith(     "--     "))  {  return  null;  }  if  (str.startsWith(     "0x     ")  ||  str.startsWith(     "-0x     ")  ||  str.startsWith(     "0X     ")  ||  str.startsWith(     "-0X     "))  {  int  hexDigits  =  str.length()  -  2;  //  drop  0x  if  (str.startsWith(     "-     "))  {  //  drop  -  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  	projects/Lang7/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	447	447	1	replace	NumberUtils.setBlank(str,  5.0);	  NumberUtils.setBlank(str,    1.0);    	non-compiled	[CE]  illegal  start  of  type	14	None	replace
197	[BUG]  [BUGGY]  NumberUtils.setBlank(str,  DEC_ZERO);  [CE]  illegal  start  of  type  [FE]                  AssertionError      [CONTEXT]      public  static  Number  createNumber(String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {      [BUGGY]  NumberUtils.setBlank(str,  DEC_ZERO);  [BUGGY]      return  null;  }  if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(     "A  blank  string  is  not  a  valid  number     ");  }  if  (str.startsWith(     "--     "))  {  return  null;  }  if  (str.startsWith(     "0x     ")  ||  str.startsWith(     "-0x     ")  ||  str.startsWith(     "0X     ")  ||  str.startsWith(     "-0X     "))  {  int  hexDigits  =  str.length()  -  2;  //  drop  0x  if  (str.startsWith(     "-     "))  {  //  drop  -  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  	projects/Lang7/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	447	447	1	replace	NumberUtils.setBlank(str,  DEC_ZERO);	  NumberUtils.setBlank(str,    dec);    	non-compiled	[CE]  illegal  start  of  type	102	None	replace
198	[BUG]  [BUGGY]  NumberUtils.setLength(hexDigits,  str);  [CE]  illegal  start  of  type  [FE]                    AssertionError      [CONTEXT]      public  static  Number  createNumber(String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {      [BUGGY]  NumberUtils.setLength(hexDigits,  str);  [BUGGY]      return  null;  }  if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(     "A  blank  string  is  not  a  valid  number     ");  }  if  (str.startsWith(     "--     "))  {  return  null;  }  if  (str.startsWith(     "0x     ")  ||  str.startsWith(     "-0x     ")  ||  str.startsWith(     "0X     ")  ||  str.startsWith(     "-0X     "))  {  int  hexDigits  =  str.length()  -  2;  //  drop  0x  if  (str.startsWith(     "-     "))  {  //  drop  -  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  	projects/Lang7/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	447	447	1	replace	NumberUtils.setLength(hexDigits,  str);	  NumberUtils.setLength(str);    	non-compiled	[CE]  illegal  start  of  type	13	None	replace
199	[BUG]  [BUGGY]  Number  str  =  getNumber(str,  hexDigits  +  1);  [CE]  illegal  start  of  type  [FE]                AssertionError      [CONTEXT]      public  static  Number  createNumber(String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {      [BUGGY]  Number  str  =  getNumber(str,  hexDigits  +  1);  [BUGGY]      return  null;  }  if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(     "A  blank  string  is  not  a  valid  number     ");  }  if  (str.startsWith(     "--     "))  {  return  null;  }  if  (str.startsWith(     "0x     ")  ||  str.startsWith(     "-0x     ")  ||  str.startsWith(     "0X     ")  ||  str.startsWith(     "-0X     "))  {  int  hexDigits  =  str.length()  -  2;  //  drop  0x  if  (str.startsWith(     "-     "))  {  //  drop  -  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  	projects/Lang7/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	447	447	1	replace	Number  str  =  getNumber(str,  hexDigits  +  1);	  Number    str    =    getNumber(str,    hexDigits);    	non-compiled	[CE]  illegal  start  of  type	64	None	replace
200	[BUG]  [BUGGY]  Number  str  =  getNumber(str,  DEC_ZERO);  [CE]  illegal  start  of  type  [FE]                  AssertionError      [CONTEXT]      public  static  Number  createNumber(String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {      [BUGGY]  Number  str  =  getNumber(str,  DEC_ZERO);  [BUGGY]      return  null;  }  if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(     "A  blank  string  is  not  a  valid  number     ");  }  if  (str.startsWith(     "--     "))  {  return  null;  }  if  (str.startsWith(     "0x     ")  ||  str.startsWith(     "-0x     ")  ||  str.startsWith(     "0X     ")  ||  str.startsWith(     "-0X     "))  {  int  hexDigits  =  str.length()  -  2;  //  drop  0x  if  (str.startsWith(     "-     "))  {  //  drop  -  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  	projects/Lang7/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	447	447	1	replace	Number  str  =  getNumber(str,  DEC_ZERO);	  Number    str    =    getNumber(str,    hexDigits);    	non-compiled	[CE]  illegal  start  of  type	64	None	replace
201	[BUG]  [BUGGY]  NumberUtils.copyNumber(str,  DEC);  [CE]  illegal  start  of  type  [FE]                    AssertionError      [CONTEXT]      public  static  Number  createNumber(String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {      [BUGGY]  NumberUtils.copyNumber(str,  DEC);  [BUGGY]      return  null;  }  if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(     "A  blank  string  is  not  a  valid  number     ");  }  if  (str.startsWith(     "--     "))  {  return  null;  }  if  (str.startsWith(     "0x     ")  ||  str.startsWith(     "-0x     ")  ||  str.startsWith(     "0X     ")  ||  str.startsWith(     "-0X     "))  {  int  hexDigits  =  str.length()  -  2;  //  drop  0x  if  (str.startsWith(     "-     "))  {  //  drop  -  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  	projects/Lang7/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	447	447	1	replace	NumberUtils.copyNumber(str,  DEC);	  NumberUtils.copyNumber(str,    dec);    	non-compiled	[CE]  illegal  start  of  type	37	None	replace
202	[BUG]  [BUGGY]  return  new  Number(Short.valueOf(str.length()  -  2));  [CE]  illegal  start  of  type  [FE]                AssertionError      [CONTEXT]      public  static  Number  createNumber(String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {      [BUGGY]  return  new  Number(Short.valueOf(str.length()  -  2));  [BUGGY]      }  if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(     "A  blank  string  is  not  a  valid  number     ");  }  if  (str.startsWith(     "--     "))  {  return  null;  }  if  (str.startsWith(     "0x     ")  ||  str.startsWith(     "-0x     ")  ||  str.startsWith(     "0X     ")  ||  str.startsWith(     "-0X     "))  {  int  hexDigits  =  str.length()  -  2;  //  drop  0x  if  (str.startsWith(     "-     "))  {  //  drop  -  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  	projects/Lang7/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	447	447	1	replace	return  new  Number(Short.valueOf(str.length()  -  2));	  return    new    Number(Short.valueOf(str.length()));    	non-compiled	[CE]  illegal  start  of  type	82	None	replace
203	[BUG]  [BUGGY]  int  decPos  =  str.indexOf('.',  DEC_PRECISION);  [CE]  illegal  start  of  type  [FE]                  AssertionError      [CONTEXT]      public  static  Number  createNumber(String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {      [BUGGY]  int  decPos  =  str.indexOf('.',  DEC_PRECISION);  [BUGGY]      return  null;  }  if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(     "A  blank  string  is  not  a  valid  number     ");  }  if  (str.startsWith(     "--     "))  {  return  null;  }  if  (str.startsWith(     "0x     ")  ||  str.startsWith(     "-0x     ")  ||  str.startsWith(     "0X     ")  ||  str.startsWith(     "-0X     "))  {  int  hexDigits  =  str.length()  -  2;  //  drop  0x  if  (str.startsWith(     "-     "))  {  //  drop  -  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  	projects/Lang7/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	447	447	1	replace	int  decPos  =  str.indexOf('.',  DEC_PRECISION);	  int    decPos    =    str.indexOf('.');    	non-compiled	[CE]  illegal  start  of  type	50	None	replace
204	[BUG]  [BUGGY]  if(str.length()!=  0)  {  return  null;  }  [CE]  illegal  start  of  type  [FE]                    AssertionError      [CONTEXT]      public  static  Number  createNumber(String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {      [BUGGY]  if(str.length()!=  0)  {  return  null;  }  [BUGGY]      }  if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(     "A  blank  string  is  not  a  valid  number     ");  }  if  (str.startsWith(     "--     "))  {  return  null;  }  if  (str.startsWith(     "0x     ")  ||  str.startsWith(     "-0x     ")  ||  str.startsWith(     "0X     ")  ||  str.startsWith(     "-0X     "))  {  int  hexDigits  =  str.length()  -  2;  //  drop  0x  if  (str.startsWith(     "-     "))  {  //  drop  -  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  	projects/Lang7/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	447	447	1	replace	if(str.length()!=  0)  {  return  null;  }	  if(str.length()    ==    0)    {    return    null;    }    	non-compiled	[CE]  illegal  start  of  type	96	None	replace
205	[BUG]  [BUGGY]  if(str.length()  ==  0)  {  return  this;  }  [CE]  illegal  start  of  type  [FE]                      AssertionError      [CONTEXT]      public  static  Number  createNumber(String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {      [BUGGY]  if(str.length()  ==  0)  {  return  this;  }  [BUGGY]      }  if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(     "A  blank  string  is  not  a  valid  number     ");  }  if  (str.startsWith(     "--     "))  {  return  null;  }  if  (str.startsWith(     "0x     ")  ||  str.startsWith(     "-0x     ")  ||  str.startsWith(     "0X     ")  ||  str.startsWith(     "-0X     "))  {  int  hexDigits  =  str.length()  -  2;  //  drop  0x  if  (str.startsWith(     "-     "))  {  //  drop  -  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  	projects/Lang7/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	447	447	1	replace	if(str.length()  ==  0)  {  return  this;  }	  if(str.length()    ==    0)    {    return    null;    }    	non-compiled	[CE]  illegal  start  of  type	96	None	replace
206	[BUG]  [BUGGY]  return  createNumber(str,  -1);  [CE]  illegal  start  of  type  [FE]                      AssertionError      [CONTEXT]      public  static  Number  createNumber(String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {      [BUGGY]  return  createNumber(str,  -1);  [BUGGY]      }  if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(     "A  blank  string  is  not  a  valid  number     ");  }  if  (str.startsWith(     "--     "))  {  return  null;  }  if  (str.startsWith(     "0x     ")  ||  str.startsWith(     "-0x     ")  ||  str.startsWith(     "0X     ")  ||  str.startsWith(     "-0X     "))  {  int  hexDigits  =  str.length()  -  2;  //  drop  0x  if  (str.startsWith(     "-     "))  {  //  drop  -  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  	projects/Lang7/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	447	447	1	replace	return  createNumber(str,  -1);	  return    createNumber(str,    0);    	non-compiled	[CE]  illegal  start  of  type	72	None	replace
207	[BUG]  [BUGGY]  NumberUtils.copyValue(str,  decPos,  0);  [CE]  illegal  start  of  type  [FE]                AssertionError      [CONTEXT]      public  static  Number  createNumber(String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {      [BUGGY]  NumberUtils.copyValue(str,  decPos,  0);  [BUGGY]      return  null;  }  if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(     "A  blank  string  is  not  a  valid  number     ");  }  if  (str.startsWith(     "--     "))  {  return  null;  }  if  (str.startsWith(     "0x     ")  ||  str.startsWith(     "-0x     ")  ||  str.startsWith(     "0X     ")  ||  str.startsWith(     "-0X     "))  {  int  hexDigits  =  str.length()  -  2;  //  drop  0x  if  (str.startsWith(     "-     "))  {  //  drop  -  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  	projects/Lang7/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	447	447	1	replace	NumberUtils.copyValue(str,  decPos,  0);	  NumberUtils.copyValue(str,    hexDigits,    0);    	non-compiled	[CE]  illegal  start  of  type	74	None	replace
208	[BUG]  [BUGGY]  NumberUtils.copyValue(str,  hexDigits,  1);  [CE]  illegal  start  of  type  [FE]                  AssertionError      [CONTEXT]      public  static  Number  createNumber(String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {      [BUGGY]  NumberUtils.copyValue(str,  hexDigits,  1);  [BUGGY]      return  null;  }  if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(     "A  blank  string  is  not  a  valid  number     ");  }  if  (str.startsWith(     "--     "))  {  return  null;  }  if  (str.startsWith(     "0x     ")  ||  str.startsWith(     "-0x     ")  ||  str.startsWith(     "0X     ")  ||  str.startsWith(     "-0X     "))  {  int  hexDigits  =  str.length()  -  2;  //  drop  0x  if  (str.startsWith(     "-     "))  {  //  drop  -  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  	projects/Lang7/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	447	447	1	replace	NumberUtils.copyValue(str,  hexDigits,  1);	  NumberUtils.copyValue(str,    hexDigits,    0);    	non-compiled	[CE]  illegal  start  of  type	74	None	replace
209	[BUG]  [BUGGY]  Return(str  ==  null)?  null  :  new  Number(str.length());  [CE]  not  a  statement  [FE]            AssertionError      [CONTEXT]      public  static  Number  createNumber(String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {      [BUGGY]  Return(str  ==  null)?  null  :  new  Number(str.length());  [BUGGY]      }  if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(     "A  blank  string  is  not  a  valid  number     ");  }  if  (str.startsWith(     "--     "))  {  return  null;  }  if  (str.startsWith(     "0x     ")  ||  str.startsWith(     "-0x     ")  ||  str.startsWith(     "0X     ")  ||  str.startsWith(     "-0X     "))  {  int  hexDigits  =  str.length()  -  2;  //  drop  0x  if  (str.startsWith(     "-     "))  {  //  drop  -  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  	projects/Lang7/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	447	447	1	replace	Return(str  ==  null)?  null  :  new  Number(str.length());	  return(str!=    null)?    null    :    new    Number(str.length());    	non-compiled	[CE]  not  a  statement	60	None	replace
210	[BUG]  [BUGGY]  NumberUtils.copyValue(str,  null);  [CE]  illegal  start  of  type  [FE]                      AssertionError      [CONTEXT]      public  static  Number  createNumber(String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {      [BUGGY]  NumberUtils.copyValue(str,  null);  [BUGGY]      return  null;  }  if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(     "A  blank  string  is  not  a  valid  number     ");  }  if  (str.startsWith(     "--     "))  {  return  null;  }  if  (str.startsWith(     "0x     ")  ||  str.startsWith(     "-0x     ")  ||  str.startsWith(     "0X     ")  ||  str.startsWith(     "-0X     "))  {  int  hexDigits  =  str.length()  -  2;  //  drop  0x  if  (str.startsWith(     "-     "))  {  //  drop  -  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  	projects/Lang7/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	447	447	1	replace	NumberUtils.copyValue(str,  null);	  NumberUtils.copyValue(mant,    str);    	non-compiled	[CE]  illegal  start  of  type	66	None	replace
211	[BUG]  [BUGGY]  NumberUtils.copyValue(str,  msg);  [CE]  illegal  start  of  type  [FE]                        AssertionError      [CONTEXT]      public  static  Number  createNumber(String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {      [BUGGY]  NumberUtils.copyValue(str,  msg);  [BUGGY]      return  null;  }  if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(     "A  blank  string  is  not  a  valid  number     ");  }  if  (str.startsWith(     "--     "))  {  return  null;  }  if  (str.startsWith(     "0x     ")  ||  str.startsWith(     "-0x     ")  ||  str.startsWith(     "0X     ")  ||  str.startsWith(     "-0X     "))  {  int  hexDigits  =  str.length()  -  2;  //  drop  0x  if  (str.startsWith(     "-     "))  {  //  drop  -  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  	projects/Lang7/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	447	447	1	replace	NumberUtils.copyValue(str,  msg);	  NumberUtils.copyValue(mant,    str);    	non-compiled	[CE]  illegal  start  of  type	66	None	replace
212	[BUG]  [BUGGY]  return  new  Number(str.length()  -  2,  2);  [CE]  illegal  start  of  type  [FE]                  AssertionError      [CONTEXT]      public  static  Number  createNumber(String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {      [BUGGY]  return  new  Number(str.length()  -  2,  2);  [BUGGY]      }  if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(     "A  blank  string  is  not  a  valid  number     ");  }  if  (str.startsWith(     "--     "))  {  return  null;  }  if  (str.startsWith(     "0x     ")  ||  str.startsWith(     "-0x     ")  ||  str.startsWith(     "0X     ")  ||  str.startsWith(     "-0X     "))  {  int  hexDigits  =  str.length()  -  2;  //  drop  0x  if  (str.startsWith(     "-     "))  {  //  drop  -  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  	projects/Lang7/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	447	447	1	replace	return  new  Number(str.length()  -  2,  2);	  return    new    Number(str.length(),    2);    	non-compiled	[CE]  illegal  start  of  type	90	None	replace
213	[BUG]  [BUGGY]  return(null!=  str)?  null  :  new  Long(str.length());  [CE]  illegal  start  of  type  [FE]                AssertionError      [CONTEXT]      public  static  Number  createNumber(String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {      [BUGGY]  return(null!=  str)?  null  :  new  Long(str.length());  [BUGGY]      }  if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(     "A  blank  string  is  not  a  valid  number     ");  }  if  (str.startsWith(     "--     "))  {  return  null;  }  if  (str.startsWith(     "0x     ")  ||  str.startsWith(     "-0x     ")  ||  str.startsWith(     "0X     ")  ||  str.startsWith(     "-0X     "))  {  int  hexDigits  =  str.length()  -  2;  //  drop  0x  if  (str.startsWith(     "-     "))  {  //  drop  -  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  	projects/Lang7/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	447	447	1	replace	return(null!=  str)?  null  :  new  Long(str.length());	  return(null    ==    str)?    null    :    new    Long(str.length()    +    1);    	non-compiled	[CE]  illegal  start  of  type	62	None	replace
214	[BUG]  [BUGGY]  Integer  str  =  createInteger(str,  3);  [CE]  illegal  start  of  type  [FE]              AssertionError      [CONTEXT]      public  static  Number  createNumber(String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {      [BUGGY]  Integer  str  =  createInteger(str,  3);  [BUGGY]      return  null;  }  if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(     "A  blank  string  is  not  a  valid  number     ");  }  if  (str.startsWith(     "--     "))  {  return  null;  }  if  (str.startsWith(     "0x     ")  ||  str.startsWith(     "-0x     ")  ||  str.startsWith(     "0X     ")  ||  str.startsWith(     "-0X     "))  {  int  hexDigits  =  str.length()  -  2;  //  drop  0x  if  (str.startsWith(     "-     "))  {  //  drop  -  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  	projects/Lang7/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	447	447	1	replace	Integer  str  =  createInteger(str,  3);	  Integer    str    =    createInteger(str,    hexDigits);    	non-compiled	[CE]  illegal  start  of  type	84	None	replace
215	[BUG]  [BUGGY]  Integer  str  =  createInteger(str,  hexDigits,  0);  [CE]  illegal  start  of  type  [FE]                AssertionError      [CONTEXT]      public  static  Number  createNumber(String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {      [BUGGY]  Integer  str  =  createInteger(str,  hexDigits,  0);  [BUGGY]      return  null;  }  if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(     "A  blank  string  is  not  a  valid  number     ");  }  if  (str.startsWith(     "--     "))  {  return  null;  }  if  (str.startsWith(     "0x     ")  ||  str.startsWith(     "-0x     ")  ||  str.startsWith(     "0X     ")  ||  str.startsWith(     "-0X     "))  {  int  hexDigits  =  str.length()  -  2;  //  drop  0x  if  (str.startsWith(     "-     "))  {  //  drop  -  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  	projects/Lang7/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	447	447	1	replace	Integer  str  =  createInteger(str,  hexDigits,  0);	  Integer    str    =    createInteger(str,    hexDigits);    	non-compiled	[CE]  illegal  start  of  type	84	None	replace
216	[BUG]  [BUGGY]  int  decPos  =  str.lastIndexOf('.',  4);  [CE]  illegal  start  of  type  [FE]                  AssertionError      [CONTEXT]      public  static  Number  createNumber(String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {      [BUGGY]  int  decPos  =  str.lastIndexOf('.',  4);  [BUGGY]      return  null;  }  if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(     "A  blank  string  is  not  a  valid  number     ");  }  if  (str.startsWith(     "--     "))  {  return  null;  }  if  (str.startsWith(     "0x     ")  ||  str.startsWith(     "-0x     ")  ||  str.startsWith(     "0X     ")  ||  str.startsWith(     "-0X     "))  {  int  hexDigits  =  str.length()  -  2;  //  drop  0x  if  (str.startsWith(     "-     "))  {  //  drop  -  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  	projects/Lang7/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	447	447	1	replace	int  decPos  =  str.lastIndexOf('.',  4);	  int    decPos    =    str.lastIndexOf('.',    len);    	non-compiled	[CE]  illegal  start  of  type	92	None	replace
217	[BUG]  [BUGGY]  return(null  ==  str)?  null  :  new  Number(str,  hexDigits);  [CE]  illegal  start  of  type  [FE]            AssertionError      [CONTEXT]      public  static  Number  createNumber(String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {      [BUGGY]  return(null  ==  str)?  null  :  new  Number(str,  hexDigits);  [BUGGY]      }  if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(     "A  blank  string  is  not  a  valid  number     ");  }  if  (str.startsWith(     "--     "))  {  return  null;  }  if  (str.startsWith(     "0x     ")  ||  str.startsWith(     "-0x     ")  ||  str.startsWith(     "0X     ")  ||  str.startsWith(     "-0X     "))  {  int  hexDigits  =  str.length()  -  2;  //  drop  0x  if  (str.startsWith(     "-     "))  {  //  drop  -  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  	projects/Lang7/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	447	447	1	replace	return(null  ==  str)?  null  :  new  Number(str,  hexDigits);	  return(null    ==    str)?    null    :    new    Number(str);    	non-compiled	[CE]  illegal  start  of  type	67	None	replace
218	[BUG]  [BUGGY]  return(null  ==  str)?  null  :  new  Number(hexDigits);  [CE]  illegal  start  of  type  [FE]              AssertionError      [CONTEXT]      public  static  Number  createNumber(String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {      [BUGGY]  return(null  ==  str)?  null  :  new  Number(hexDigits);  [BUGGY]      }  if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(     "A  blank  string  is  not  a  valid  number     ");  }  if  (str.startsWith(     "--     "))  {  return  null;  }  if  (str.startsWith(     "0x     ")  ||  str.startsWith(     "-0x     ")  ||  str.startsWith(     "0X     ")  ||  str.startsWith(     "-0X     "))  {  int  hexDigits  =  str.length()  -  2;  //  drop  0x  if  (str.startsWith(     "-     "))  {  //  drop  -  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  	projects/Lang7/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	447	447	1	replace	return(null  ==  str)?  null  :  new  Number(hexDigits);	  return(null    ==    str)?    null    :    new    Number(str);    	non-compiled	[CE]  illegal  start  of  type	67	None	replace
219	[BUG]  [BUGGY]  Number  str  =  getNumber(str.substring(2));  [CE]  illegal  start  of  type  [FE]                AssertionError      [CONTEXT]      public  static  Number  createNumber(String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {      [BUGGY]  Number  str  =  getNumber(str.substring(2));  [BUGGY]      return  null;  }  if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(     "A  blank  string  is  not  a  valid  number     ");  }  if  (str.startsWith(     "--     "))  {  return  null;  }  if  (str.startsWith(     "0x     ")  ||  str.startsWith(     "-0x     ")  ||  str.startsWith(     "0X     ")  ||  str.startsWith(     "-0X     "))  {  int  hexDigits  =  str.length()  -  2;  //  drop  0x  if  (str.startsWith(     "-     "))  {  //  drop  -  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  	projects/Lang7/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	447	447	1	replace	Number  str  =  getNumber(str.substring(2));	  Number    str    =    getNumber(str.toUpperCase());    	non-compiled	[CE]  illegal  start  of  type	44	None	replace
220	[BUG]  [BUGGY]  return  new  Number(Short.valueOf(str.charAt(0)));  [CE]  illegal  start  of  type  [FE]                AssertionError      [CONTEXT]      public  static  Number  createNumber(String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {      [BUGGY]  return  new  Number(Short.valueOf(str.charAt(0)));  [BUGGY]      }  if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(     "A  blank  string  is  not  a  valid  number     ");  }  if  (str.startsWith(     "--     "))  {  return  null;  }  if  (str.startsWith(     "0x     ")  ||  str.startsWith(     "-0x     ")  ||  str.startsWith(     "0X     ")  ||  str.startsWith(     "-0X     "))  {  int  hexDigits  =  str.length()  -  2;  //  drop  0x  if  (str.startsWith(     "-     "))  {  //  drop  -  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  	projects/Lang7/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	447	447	1	replace	return  new  Number(Short.valueOf(str.charAt(0)));	  return    new    Number(str.length()    -    2);    	non-compiled	[CE]  illegal  start  of  type	8	None	replace
221	[BUG]  [BUGGY]  NumberUtils.copyValue(str,  DEC_ZERO);  [CE]  illegal  start  of  type  [FE]                  AssertionError      [CONTEXT]      public  static  Number  createNumber(String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {      [BUGGY]  NumberUtils.copyValue(str,  DEC_ZERO);  [BUGGY]      return  null;  }  if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(     "A  blank  string  is  not  a  valid  number     ");  }  if  (str.startsWith(     "--     "))  {  return  null;  }  if  (str.startsWith(     "0x     ")  ||  str.startsWith(     "-0x     ")  ||  str.startsWith(     "0X     ")  ||  str.startsWith(     "-0X     "))  {  int  hexDigits  =  str.length()  -  2;  //  drop  0x  if  (str.startsWith(     "-     "))  {  //  drop  -  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  	projects/Lang7/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	447	447	1	replace	NumberUtils.copyValue(str,  DEC_ZERO);	  NumberUtils.copyValue(str,    expPos);    	non-compiled	[CE]  illegal  start  of  type	21	None	replace
222	[BUG]  [BUGGY]  NumberUtils.setBlank(str,  hexDigits,  0);  [CE]  illegal  start  of  type  [FE]                  AssertionError      [CONTEXT]      public  static  Number  createNumber(String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {      [BUGGY]  NumberUtils.setBlank(str,  hexDigits,  0);  [BUGGY]      return  null;  }  if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(     "A  blank  string  is  not  a  valid  number     ");  }  if  (str.startsWith(     "--     "))  {  return  null;  }  if  (str.startsWith(     "0x     ")  ||  str.startsWith(     "-0x     ")  ||  str.startsWith(     "0X     ")  ||  str.startsWith(     "-0X     "))  {  int  hexDigits  =  str.length()  -  2;  //  drop  0x  if  (str.startsWith(     "-     "))  {  //  drop  -  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  	projects/Lang7/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	447	447	1	replace	NumberUtils.setBlank(str,  hexDigits,  0);	  NumberUtils.setBlank(str,    hexDigits);    	non-compiled	[CE]  illegal  start  of  type	70	None	replace
223	[BUG]  [BUGGY]  NumberUtils.setBlank(str,  decPos);  [CE]  illegal  start  of  type  [FE]                    AssertionError      [CONTEXT]      public  static  Number  createNumber(String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {      [BUGGY]  NumberUtils.setBlank(str,  decPos);  [BUGGY]      return  null;  }  if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(     "A  blank  string  is  not  a  valid  number     ");  }  if  (str.startsWith(     "--     "))  {  return  null;  }  if  (str.startsWith(     "0x     ")  ||  str.startsWith(     "-0x     ")  ||  str.startsWith(     "0X     ")  ||  str.startsWith(     "-0X     "))  {  int  hexDigits  =  str.length()  -  2;  //  drop  0x  if  (str.startsWith(     "-     "))  {  //  drop  -  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  	projects/Lang7/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	447	447	1	replace	NumberUtils.setBlank(str,  decPos);	  NumberUtils.setBlank(str,    hexDigits);    	non-compiled	[CE]  illegal  start  of  type	70	None	replace
224	[BUG]  [BUGGY]  NumberUtils.setBlank(str,  hexDigits,  1);  [CE]  illegal  start  of  type  [FE]                      AssertionError      [CONTEXT]      public  static  Number  createNumber(String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {      [BUGGY]  NumberUtils.setBlank(str,  hexDigits,  1);  [BUGGY]      return  null;  }  if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(     "A  blank  string  is  not  a  valid  number     ");  }  if  (str.startsWith(     "--     "))  {  return  null;  }  if  (str.startsWith(     "0x     ")  ||  str.startsWith(     "-0x     ")  ||  str.startsWith(     "0X     ")  ||  str.startsWith(     "-0X     "))  {  int  hexDigits  =  str.length()  -  2;  //  drop  0x  if  (str.startsWith(     "-     "))  {  //  drop  -  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  	projects/Lang7/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	447	447	1	replace	NumberUtils.setBlank(str,  hexDigits,  1);	  NumberUtils.setBlank(str,    hexDigits);    	non-compiled	[CE]  illegal  start  of  type	70	None	replace
225	[BUG]  [BUGGY]  Integer  hexDigits  =  str.length()  *  2;  [CE]  illegal  start  of  type  [FE]            AssertionError      [CONTEXT]      public  static  Number  createNumber(String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {      [BUGGY]  Integer  hexDigits  =  str.length()  *  2;  [BUGGY]      return  null;  }  if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(     "A  blank  string  is  not  a  valid  number     ");  }  if  (str.startsWith(     "--     "))  {  return  null;  }  if  (str.startsWith(     "0x     ")  ||  str.startsWith(     "-0x     ")  ||  str.startsWith(     "0X     ")  ||  str.startsWith(     "-0X     "))  {  int  hexDigits  =  str.length()  -  2;  //  drop  0x  if  (str.startsWith(     "-     "))  {  //  drop  -  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  	projects/Lang7/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	447	447	1	replace	Integer  hexDigits  =  str.length()  *  2;	  Integer    hexDigits    =    str.length();    	non-compiled	[CE]  illegal  start  of  type	77	None	replace
226	[BUG]  [BUGGY]  NumberUtils.setBlank(str,  -1);  [CE]  illegal  start  of  type  [FE]                  AssertionError      [CONTEXT]      public  static  Number  createNumber(String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {      [BUGGY]  NumberUtils.setBlank(str,  -1);  [BUGGY]      return  null;  }  if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(     "A  blank  string  is  not  a  valid  number     ");  }  if  (str.startsWith(     "--     "))  {  return  null;  }  if  (str.startsWith(     "0x     ")  ||  str.startsWith(     "-0x     ")  ||  str.startsWith(     "0X     ")  ||  str.startsWith(     "-0X     "))  {  int  hexDigits  =  str.length()  -  2;  //  drop  0x  if  (str.startsWith(     "-     "))  {  //  drop  -  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  	projects/Lang7/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	447	447	1	replace	NumberUtils.setBlank(str,  -1);	  NumberUtils.setBlank(str,    0);    	non-compiled	[CE]  illegal  start  of  type	12	None	replace
227	[BUG]  [BUGGY]  return  new  Number(str.substring(0,  str.length()  -  2),  hexDigits);  [CE]  illegal  start  of  type  [FE]              AssertionError      [CONTEXT]      public  static  Number  createNumber(String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {      [BUGGY]  return  new  Number(str.substring(0,  str.length()  -  2),  hexDigits);  [BUGGY]      }  if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(     "A  blank  string  is  not  a  valid  number     ");  }  if  (str.startsWith(     "--     "))  {  return  null;  }  if  (str.startsWith(     "0x     ")  ||  str.startsWith(     "-0x     ")  ||  str.startsWith(     "0X     ")  ||  str.startsWith(     "-0X     "))  {  int  hexDigits  =  str.length()  -  2;  //  drop  0x  if  (str.startsWith(     "-     "))  {  //  drop  -  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  	projects/Lang7/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	447	447	1	replace	return  new  Number(str.substring(0,  str.length()  -  2),  hexDigits);	  return    new    Number(str.substring(0,    str.length()    -    2));    	non-compiled	[CE]  illegal  start  of  type	85	None	replace
228	[BUG]  [BUGGY]  NumberUtils.copyDecimal(str,  dec);  [CE]  illegal  start  of  type  [FE]                      AssertionError      [CONTEXT]      public  static  Number  createNumber(String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {      [BUGGY]  NumberUtils.copyDecimal(str,  dec);  [BUGGY]      return  null;  }  if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(     "A  blank  string  is  not  a  valid  number     ");  }  if  (str.startsWith(     "--     "))  {  return  null;  }  if  (str.startsWith(     "0x     ")  ||  str.startsWith(     "-0x     ")  ||  str.startsWith(     "0X     ")  ||  str.startsWith(     "-0X     "))  {  int  hexDigits  =  str.length()  -  2;  //  drop  0x  if  (str.startsWith(     "-     "))  {  //  drop  -  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  	projects/Lang7/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	447	447	1	replace	NumberUtils.copyDecimal(str,  dec);	  NumberUtils.copyDecimal(str);    	non-compiled	[CE]  illegal  start  of  type	16	None	replace
229	[BUG]  [BUGGY]  NumberUtils.copyDecimal(str,  hexDigits);  [CE]  illegal  start  of  type  [FE]                        AssertionError      [CONTEXT]      public  static  Number  createNumber(String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {      [BUGGY]  NumberUtils.copyDecimal(str,  hexDigits);  [BUGGY]      return  null;  }  if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(     "A  blank  string  is  not  a  valid  number     ");  }  if  (str.startsWith(     "--     "))  {  return  null;  }  if  (str.startsWith(     "0x     ")  ||  str.startsWith(     "-0x     ")  ||  str.startsWith(     "0X     ")  ||  str.startsWith(     "-0X     "))  {  int  hexDigits  =  str.length()  -  2;  //  drop  0x  if  (str.startsWith(     "-     "))  {  //  drop  -  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  	projects/Lang7/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	447	447	1	replace	NumberUtils.copyDecimal(str,  hexDigits);	  NumberUtils.copyDecimal(str);    	non-compiled	[CE]  illegal  start  of  type	16	None	replace
230	[BUG]  [BUGGY]  NumberUtils.copyDecimal(dec,  str);  [CE]  illegal  start  of  type  [FE]                          AssertionError      [CONTEXT]      public  static  Number  createNumber(String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {      [BUGGY]  NumberUtils.copyDecimal(dec,  str);  [BUGGY]      return  null;  }  if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(     "A  blank  string  is  not  a  valid  number     ");  }  if  (str.startsWith(     "--     "))  {  return  null;  }  if  (str.startsWith(     "0x     ")  ||  str.startsWith(     "-0x     ")  ||  str.startsWith(     "0X     ")  ||  str.startsWith(     "-0X     "))  {  int  hexDigits  =  str.length()  -  2;  //  drop  0x  if  (str.startsWith(     "-     "))  {  //  drop  -  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  	projects/Lang7/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	447	447	1	replace	NumberUtils.copyDecimal(dec,  str);	  NumberUtils.copyDecimal(str);    	non-compiled	[CE]  illegal  start  of  type	16	None	replace
231	[BUG]  [BUGGY]  return(null  ==  str.length())?  null  :  new  Number(str.length()  +  1);  [CE]  illegal  start  of  type  [FE]                AssertionError      [CONTEXT]      public  static  Number  createNumber(String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {      [BUGGY]  return(null  ==  str.length())?  null  :  new  Number(str.length()  +  1);  [BUGGY]      }  if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(     "A  blank  string  is  not  a  valid  number     ");  }  if  (str.startsWith(     "--     "))  {  return  null;  }  if  (str.startsWith(     "0x     ")  ||  str.startsWith(     "-0x     ")  ||  str.startsWith(     "0X     ")  ||  str.startsWith(     "-0X     "))  {  int  hexDigits  =  str.length()  -  2;  //  drop  0x  if  (str.startsWith(     "-     "))  {  //  drop  -  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  	projects/Lang7/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	447	447	1	replace	return(null  ==  str.length())?  null  :  new  Number(str.length()  +  1);	  return(null    ==    str.length())?    null    :    new    Number(str.length());    	non-compiled	[CE]  illegal  start  of  type	59	None	replace
232	[BUG]  [BUGGY]  NumberUtils.copyNumber(str,  hexDigits,  dec);  [CE]  illegal  start  of  type  [FE]                  AssertionError      [CONTEXT]      public  static  Number  createNumber(String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {      [BUGGY]  NumberUtils.copyNumber(str,  hexDigits,  dec);  [BUGGY]      return  null;  }  if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(     "A  blank  string  is  not  a  valid  number     ");  }  if  (str.startsWith(     "--     "))  {  return  null;  }  if  (str.startsWith(     "0x     ")  ||  str.startsWith(     "-0x     ")  ||  str.startsWith(     "0X     ")  ||  str.startsWith(     "-0X     "))  {  int  hexDigits  =  str.length()  -  2;  //  drop  0x  if  (str.startsWith(     "-     "))  {  //  drop  -  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  	projects/Lang7/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	447	447	1	replace	NumberUtils.copyNumber(str,  hexDigits,  dec);	  NumberUtils.copyNumber(str,    hexDigits);    	non-compiled	[CE]  illegal  start  of  type	36	None	replace
233	[BUG]  [BUGGY]  Return(str  ==  null)?  null  :  new  Long(str.length());  [CE]  not  a  statement  [FE]                  AssertionError      [CONTEXT]      public  static  Number  createNumber(String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {      [BUGGY]  Return(str  ==  null)?  null  :  new  Long(str.length());  [BUGGY]      }  if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(     "A  blank  string  is  not  a  valid  number     ");  }  if  (str.startsWith(     "--     "))  {  return  null;  }  if  (str.startsWith(     "0x     ")  ||  str.startsWith(     "-0x     ")  ||  str.startsWith(     "0X     ")  ||  str.startsWith(     "-0X     "))  {  int  hexDigits  =  str.length()  -  2;  //  drop  0x  if  (str.startsWith(     "-     "))  {  //  drop  -  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  	projects/Lang7/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	447	447	1	replace	Return(str  ==  null)?  null  :  new  Long(str.length());	  return(str!=    null)?    null    :    new    Long(str.length());    	non-compiled	[CE]  not  a  statement	6	None	replace
234	[BUG]  [BUGGY]  NumberUtils.copyValue(str,  DEC,  exp);  [CE]  illegal  start  of  type  [FE]                    AssertionError      [CONTEXT]      public  static  Number  createNumber(String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {      [BUGGY]  NumberUtils.copyValue(str,  DEC,  exp);  [BUGGY]      return  null;  }  if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(     "A  blank  string  is  not  a  valid  number     ");  }  if  (str.startsWith(     "--     "))  {  return  null;  }  if  (str.startsWith(     "0x     ")  ||  str.startsWith(     "-0x     ")  ||  str.startsWith(     "0X     ")  ||  str.startsWith(     "-0X     "))  {  int  hexDigits  =  str.length()  -  2;  //  drop  0x  if  (str.startsWith(     "-     "))  {  //  drop  -  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  	projects/Lang7/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	447	447	1	replace	NumberUtils.copyValue(str,  DEC,  exp);	  NumberUtils.copyValue(str,    hexDigits,    exp);    	non-compiled	[CE]  illegal  start  of  type	22	None	replace
235	[BUG]  [BUGGY]  NumberUtils.copyValue(hexDigits,  str,  0);  [CE]  illegal  start  of  type  [FE]                      AssertionError      [CONTEXT]      public  static  Number  createNumber(String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {      [BUGGY]  NumberUtils.copyValue(hexDigits,  str,  0);  [BUGGY]      return  null;  }  if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(     "A  blank  string  is  not  a  valid  number     ");  }  if  (str.startsWith(     "--     "))  {  return  null;  }  if  (str.startsWith(     "0x     ")  ||  str.startsWith(     "-0x     ")  ||  str.startsWith(     "0X     ")  ||  str.startsWith(     "-0X     "))  {  int  hexDigits  =  str.length()  -  2;  //  drop  0x  if  (str.startsWith(     "-     "))  {  //  drop  -  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  	projects/Lang7/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	447	447	1	replace	NumberUtils.copyValue(hexDigits,  str,  0);	  NumberUtils.copyValue(hexDigits,    str);    	non-compiled	[CE]  illegal  start  of  type	23	None	replace
236	[BUG]  [BUGGY]  NumberUtils.copyValue(hexDigits,  str,  dec);  [CE]  illegal  start  of  type  [FE]                        AssertionError      [CONTEXT]      public  static  Number  createNumber(String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {      [BUGGY]  NumberUtils.copyValue(hexDigits,  str,  dec);  [BUGGY]      return  null;  }  if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(     "A  blank  string  is  not  a  valid  number     ");  }  if  (str.startsWith(     "--     "))  {  return  null;  }  if  (str.startsWith(     "0x     ")  ||  str.startsWith(     "-0x     ")  ||  str.startsWith(     "0X     ")  ||  str.startsWith(     "-0X     "))  {  int  hexDigits  =  str.length()  -  2;  //  drop  0x  if  (str.startsWith(     "-     "))  {  //  drop  -  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  	projects/Lang7/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	447	447	1	replace	NumberUtils.copyValue(hexDigits,  str,  dec);	  NumberUtils.copyValue(hexDigits,    str);    	non-compiled	[CE]  illegal  start  of  type	23	None	replace
237	[BUG]  [BUGGY]  Integer  str  =  createInteger(str.substring(0,  2));  [CE]  illegal  start  of  type  [FE]                AssertionError      [CONTEXT]      public  static  Number  createNumber(String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {      [BUGGY]  Integer  str  =  createInteger(str.substring(0,  2));  [BUGGY]      return  null;  }  if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(     "A  blank  string  is  not  a  valid  number     ");  }  if  (str.startsWith(     "--     "))  {  return  null;  }  if  (str.startsWith(     "0x     ")  ||  str.startsWith(     "-0x     ")  ||  str.startsWith(     "0X     ")  ||  str.startsWith(     "-0X     "))  {  int  hexDigits  =  str.length()  -  2;  //  drop  0x  if  (str.startsWith(     "-     "))  {  //  drop  -  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  	projects/Lang7/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	447	447	1	replace	Integer  str  =  createInteger(str.substring(0,  2));	  Integer    str    =    createInteger(str.substring(1));    	non-compiled	[CE]  illegal  start  of  type	33	None	replace
238	[BUG]  [BUGGY]  Integer  str  =  createInteger(str.substring(0,  1));  [CE]  illegal  start  of  type  [FE]                  AssertionError      [CONTEXT]      public  static  Number  createNumber(String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {      [BUGGY]  Integer  str  =  createInteger(str.substring(0,  1));  [BUGGY]      return  null;  }  if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(     "A  blank  string  is  not  a  valid  number     ");  }  if  (str.startsWith(     "--     "))  {  return  null;  }  if  (str.startsWith(     "0x     ")  ||  str.startsWith(     "-0x     ")  ||  str.startsWith(     "0X     ")  ||  str.startsWith(     "-0X     "))  {  int  hexDigits  =  str.length()  -  2;  //  drop  0x  if  (str.startsWith(     "-     "))  {  //  drop  -  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  	projects/Lang7/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	447	447	1	replace	Integer  str  =  createInteger(str.substring(0,  1));	  Integer    str    =    createInteger(str.substring(1));    	non-compiled	[CE]  illegal  start  of  type	33	None	replace
239	[BUG]  [BUGGY]  return  new  Number(str.length()  -  1,  1);  [CE]  illegal  start  of  type  [FE]                      AssertionError      [CONTEXT]      public  static  Number  createNumber(String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {      [BUGGY]  return  new  Number(str.length()  -  1,  1);  [BUGGY]      }  if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(     "A  blank  string  is  not  a  valid  number     ");  }  if  (str.startsWith(     "--     "))  {  return  null;  }  if  (str.startsWith(     "0x     ")  ||  str.startsWith(     "-0x     ")  ||  str.startsWith(     "0X     ")  ||  str.startsWith(     "-0X     "))  {  int  hexDigits  =  str.length()  -  2;  //  drop  0x  if  (str.startsWith(     "-     "))  {  //  drop  -  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  	projects/Lang7/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	447	447	1	replace	return  new  Number(str.length()  -  1,  1);	  return    new    Number(str.length(),    1);    	non-compiled	[CE]  illegal  start  of  type	81	None	replace
240	[BUG]  [BUGGY]  return  new  Number(str.length()  -  2,  1);  [CE]  illegal  start  of  type  [FE]                        AssertionError      [CONTEXT]      public  static  Number  createNumber(String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {      [BUGGY]  return  new  Number(str.length()  -  2,  1);  [BUGGY]      }  if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(     "A  blank  string  is  not  a  valid  number     ");  }  if  (str.startsWith(     "--     "))  {  return  null;  }  if  (str.startsWith(     "0x     ")  ||  str.startsWith(     "-0x     ")  ||  str.startsWith(     "0X     ")  ||  str.startsWith(     "-0X     "))  {  int  hexDigits  =  str.length()  -  2;  //  drop  0x  if  (str.startsWith(     "-     "))  {  //  drop  -  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  	projects/Lang7/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	447	447	1	replace	return  new  Number(str.length()  -  2,  1);	  return    new    Number(str.length(),    1);    	non-compiled	[CE]  illegal  start  of  type	81	None	replace
241	[BUG]  [BUGGY]  throw  new  NumberFormatException( "A  blank  string  is  not  a  valid  number,  but ");  [CE]  illegal  start  of  type  [FE]              AssertionError      [CONTEXT]      public  static  Number  createNumber(String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {      [BUGGY]  throw  new  NumberFormatException( "A  blank  string  is  not  a  valid  number,  but ");  [BUGGY]      }  if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(     "A  blank  string  is  not  a  valid  number     ");  }  if  (str.startsWith(     "--     "))  {  return  null;  }  if  (str.startsWith(     "0x     ")  ||  str.startsWith(     "-0x     ")  ||  str.startsWith(     "0X     ")  ||  str.startsWith(     "-0X     "))  {  int  hexDigits  =  str.length()  -  2;  //  drop  0x  if  (str.startsWith(     "-     "))  {  //  drop  -  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  	projects/Lang7/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	447	447	1	replace	throw  new  NumberFormatException( "A  blank  string  is  not  a  valid  number,  but ");	  throw    new    NumberFormatException(   "A    blank    string    is    not    a    valid    number,   ");    	non-compiled	[CE]  illegal  start  of  type	89	None	replace
242	[BUG]  [BUGGY]  char  decPos  =  str.charAt(0);  [CE]  illegal  start  of  type  [FE]                    AssertionError      [CONTEXT]      public  static  Number  createNumber(String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {      [BUGGY]  char  decPos  =  str.charAt(0);  [BUGGY]      return  null;  }  if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(     "A  blank  string  is  not  a  valid  number     ");  }  if  (str.startsWith(     "--     "))  {  return  null;  }  if  (str.startsWith(     "0x     ")  ||  str.startsWith(     "-0x     ")  ||  str.startsWith(     "0X     ")  ||  str.startsWith(     "-0X     "))  {  int  hexDigits  =  str.length()  -  2;  //  drop  0x  if  (str.startsWith(     "-     "))  {  //  drop  -  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  	projects/Lang7/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	447	447	1	replace	char  decPos  =  str.charAt(0);	  char    decPos    =    str.length();    	non-compiled	[CE]  illegal  start  of  type	73	None	replace
243	[BUG]  [BUGGY]  Integer  str  =  createBigInteger(0);  [CE]  illegal  start  of  type  [FE]                  AssertionError      [CONTEXT]      public  static  Number  createNumber(String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {      [BUGGY]  Integer  str  =  createBigInteger(0);  [BUGGY]      return  null;  }  if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(     "A  blank  string  is  not  a  valid  number     ");  }  if  (str.startsWith(     "--     "))  {  return  null;  }  if  (str.startsWith(     "0x     ")  ||  str.startsWith(     "-0x     ")  ||  str.startsWith(     "0X     ")  ||  str.startsWith(     "-0X     "))  {  int  hexDigits  =  str.length()  -  2;  //  drop  0x  if  (str.startsWith(     "-     "))  {  //  drop  -  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  	projects/Lang7/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	447	447	1	replace	Integer  str  =  createBigInteger(0);	  Integer    str    =    createInteger(0);    	non-compiled	[CE]  illegal  start  of  type	34	None	replace
244	[BUG]  [BUGGY]  Throw  new  NumberFormatException( "A  blank  string  is  not  a  valid  number. ");  [CE]  not  a  statement  [FE]              AssertionError      [CONTEXT]      public  static  Number  createNumber(String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {      [BUGGY]  Throw  new  NumberFormatException( "A  blank  string  is  not  a  valid  number. ");  [BUGGY]      }  if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(     "A  blank  string  is  not  a  valid  number     ");  }  if  (str.startsWith(     "--     "))  {  return  null;  }  if  (str.startsWith(     "0x     ")  ||  str.startsWith(     "-0x     ")  ||  str.startsWith(     "0X     ")  ||  str.startsWith(     "-0X     "))  {  int  hexDigits  =  str.length()  -  2;  //  drop  0x  if  (str.startsWith(     "-     "))  {  //  drop  -  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  	projects/Lang7/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	447	447	1	replace	Throw  new  NumberFormatException( "A  blank  string  is  not  a  valid  number. ");	  throw    new    NumberFormatException(   "A    blank    string    is    not    a    valid    number.   ");    	non-compiled	[CE]  not  a  statement	17	None	replace
245	[BUG]  [BUGGY]  throw  new  NumberFormatException( "The  blank  string  is  not  a  valid  number. ");  [CE]  illegal  start  of  type  [FE]                AssertionError      [CONTEXT]      public  static  Number  createNumber(String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {      [BUGGY]  throw  new  NumberFormatException( "The  blank  string  is  not  a  valid  number. ");  [BUGGY]      }  if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(     "A  blank  string  is  not  a  valid  number     ");  }  if  (str.startsWith(     "--     "))  {  return  null;  }  if  (str.startsWith(     "0x     ")  ||  str.startsWith(     "-0x     ")  ||  str.startsWith(     "0X     ")  ||  str.startsWith(     "-0X     "))  {  int  hexDigits  =  str.length()  -  2;  //  drop  0x  if  (str.startsWith(     "-     "))  {  //  drop  -  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  	projects/Lang7/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	447	447	1	replace	throw  new  NumberFormatException( "The  blank  string  is  not  a  valid  number. ");	  throw    new    NumberFormatException(   "A    blank    string    is    not    a    valid    number.   ");    	non-compiled	[CE]  illegal  start  of  type	17	None	replace
246	[BUG]  [BUGGY]  new  NumberFormatException( "A  blank  string  is  not  a  valid  number. ");  [CE]  illegal  start  of  type  [FE]                  AssertionError      [CONTEXT]      public  static  Number  createNumber(String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {      [BUGGY]  new  NumberFormatException( "A  blank  string  is  not  a  valid  number. ");  [BUGGY]      }  if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(     "A  blank  string  is  not  a  valid  number     ");  }  if  (str.startsWith(     "--     "))  {  return  null;  }  if  (str.startsWith(     "0x     ")  ||  str.startsWith(     "-0x     ")  ||  str.startsWith(     "0X     ")  ||  str.startsWith(     "-0X     "))  {  int  hexDigits  =  str.length()  -  2;  //  drop  0x  if  (str.startsWith(     "-     "))  {  //  drop  -  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  	projects/Lang7/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	447	447	1	replace	new  NumberFormatException( "A  blank  string  is  not  a  valid  number. ");	  throw    new    NumberFormatException(   "A    blank    string    is    not    a    valid    number.   ");    	non-compiled	[CE]  illegal  start  of  type	17	None	replace
247	[BUG]  [BUGGY]  return(new  Number(str)?  null  :  new  Number(str.length());  [CE]  ')'  expected  [FE]            AssertionError      [CONTEXT]      public  static  Number  createNumber(String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {      [BUGGY]  return(new  Number(str)?  null  :  new  Number(str.length());  [BUGGY]      }  if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(     "A  blank  string  is  not  a  valid  number     ");  }  if  (str.startsWith(     "--     "))  {  return  null;  }  if  (str.startsWith(     "0x     ")  ||  str.startsWith(     "-0x     ")  ||  str.startsWith(     "0X     ")  ||  str.startsWith(     "-0X     "))  {  int  hexDigits  =  str.length()  -  2;  //  drop  0x  if  (str.startsWith(     "-     "))  {  //  drop  -  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  	projects/Lang7/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	447	447	1	replace	return(new  Number(str)?  null  :  new  Number(str.length());	  return(null    ==    str)?    null    :    new    Number(str.length()    +    1);    	non-compiled	[CE]  ')'  expected	61	None	replace
248	[BUG]  [BUGGY]  Number  str  =  getNumber(str.substring(0,  str.length()  -  2));  [CE]  illegal  start  of  type  [FE]                AssertionError      [CONTEXT]      public  static  Number  createNumber(String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {      [BUGGY]  Number  str  =  getNumber(str.substring(0,  str.length()  -  2));  [BUGGY]      return  null;  }  if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(     "A  blank  string  is  not  a  valid  number     ");  }  if  (str.startsWith(     "--     "))  {  return  null;  }  if  (str.startsWith(     "0x     ")  ||  str.startsWith(     "-0x     ")  ||  str.startsWith(     "0X     ")  ||  str.startsWith(     "-0X     "))  {  int  hexDigits  =  str.length()  -  2;  //  drop  0x  if  (str.startsWith(     "-     "))  {  //  drop  -  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  	projects/Lang7/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	447	447	1	replace	Number  str  =  getNumber(str.substring(0,  str.length()  -  2));	  Number    str    =    getNumber(str.substring(0,    str.length()    -    1));    	non-compiled	[CE]  illegal  start  of  type	101	None	replace
249	[BUG]  [BUGGY]  NumberUtils.copyPos(hexDigits,  str);  [CE]  illegal  start  of  type  [FE]                    AssertionError      [CONTEXT]      public  static  Number  createNumber(String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {      [BUGGY]  NumberUtils.copyPos(hexDigits,  str);  [BUGGY]      return  null;  }  if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(     "A  blank  string  is  not  a  valid  number     ");  }  if  (str.startsWith(     "--     "))  {  return  null;  }  if  (str.startsWith(     "0x     ")  ||  str.startsWith(     "-0x     ")  ||  str.startsWith(     "0X     ")  ||  str.startsWith(     "-0X     "))  {  int  hexDigits  =  str.length()  -  2;  //  drop  0x  if  (str.startsWith(     "-     "))  {  //  drop  -  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  	projects/Lang7/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	447	447	1	replace	NumberUtils.copyPos(hexDigits,  str);	  NumberUtils.copyPos(str);    	non-compiled	[CE]  illegal  start  of  type	88	None	replace
250	[BUG]  [BUGGY]  Return(str  ==  null)?  null  :  new  Double(str.length());  [CE]  not  a  statement  [FE]                AssertionError      [CONTEXT]      public  static  Number  createNumber(String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {      [BUGGY]  Return(str  ==  null)?  null  :  new  Double(str.length());  [BUGGY]      }  if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(     "A  blank  string  is  not  a  valid  number     ");  }  if  (str.startsWith(     "--     "))  {  return  null;  }  if  (str.startsWith(     "0x     ")  ||  str.startsWith(     "-0x     ")  ||  str.startsWith(     "0X     ")  ||  str.startsWith(     "-0X     "))  {  int  hexDigits  =  str.length()  -  2;  //  drop  0x  if  (str.startsWith(     "-     "))  {  //  drop  -  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  	projects/Lang7/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	447	447	1	replace	Return(str  ==  null)?  null  :  new  Double(str.length());	  return(str!=    null)?    null    :    new    Double(str.length());    	non-compiled	[CE]  not  a  statement	53	None	replace
251	[BUG]  [BUGGY]  return(null  ==  str)?  null  :  str.toLowerCase();  [CE]  illegal  start  of  type  [FE]                AssertionError      [CONTEXT]      public  static  Number  createNumber(String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {      [BUGGY]  return(null  ==  str)?  null  :  str.toLowerCase();  [BUGGY]      }  if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(     "A  blank  string  is  not  a  valid  number     ");  }  if  (str.startsWith(     "--     "))  {  return  null;  }  if  (str.startsWith(     "0x     ")  ||  str.startsWith(     "-0x     ")  ||  str.startsWith(     "0X     ")  ||  str.startsWith(     "-0X     "))  {  int  hexDigits  =  str.length()  -  2;  //  drop  0x  if  (str.startsWith(     "-     "))  {  //  drop  -  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  	projects/Lang7/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	447	447	1	replace	return(null  ==  str)?  null  :  str.toLowerCase();	  return(str    ==    null)?    null    :    str.toLowerCase();    	non-compiled	[CE]  illegal  start  of  type	95	None	replace
252	[BUG]  [BUGGY]  return  new  Number(str.length()  *  2,  str.length());  [CE]  illegal  start  of  type  [FE]                  AssertionError      [CONTEXT]      public  static  Number  createNumber(String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {      [BUGGY]  return  new  Number(str.length()  *  2,  str.length());  [BUGGY]      }  if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(     "A  blank  string  is  not  a  valid  number     ");  }  if  (str.startsWith(     "--     "))  {  return  null;  }  if  (str.startsWith(     "0x     ")  ||  str.startsWith(     "-0x     ")  ||  str.startsWith(     "0X     ")  ||  str.startsWith(     "-0X     "))  {  int  hexDigits  =  str.length()  -  2;  //  drop  0x  if  (str.startsWith(     "-     "))  {  //  drop  -  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  	projects/Lang7/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	447	447	1	replace	return  new  Number(str.length()  *  2,  str.length());	  return    new    Number(str.length()    -    2,    str.length());    	non-compiled	[CE]  illegal  start  of  type	79	None	replace
253	[BUG]  [BUGGY]  Number  str  =  createNumber(str,  1);  [CE]  illegal  start  of  type  [FE]            AssertionError      [CONTEXT]      public  static  Number  createNumber(String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {      [BUGGY]  Number  str  =  createNumber(str,  1);  [BUGGY]      return  null;  }  if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(     "A  blank  string  is  not  a  valid  number     ");  }  if  (str.startsWith(     "--     "))  {  return  null;  }  if  (str.startsWith(     "0x     ")  ||  str.startsWith(     "-0x     ")  ||  str.startsWith(     "0X     ")  ||  str.startsWith(     "-0X     "))  {  int  hexDigits  =  str.length()  -  2;  //  drop  0x  if  (str.startsWith(     "-     "))  {  //  drop  -  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  	projects/Lang7/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	447	447	1	replace	Number  str  =  createNumber(str,  1);	  Number    str    =    createNumber(str,    hexDigits);    	non-compiled	[CE]  illegal  start  of  type	41	None	replace
254	[BUG]  [BUGGY]  Number  str  =  createNumber(str,  hexDigits  +  1);  [CE]  illegal  start  of  type  [FE]              AssertionError      [CONTEXT]      public  static  Number  createNumber(String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {      [BUGGY]  Number  str  =  createNumber(str,  hexDigits  +  1);  [BUGGY]      return  null;  }  if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(     "A  blank  string  is  not  a  valid  number     ");  }  if  (str.startsWith(     "--     "))  {  return  null;  }  if  (str.startsWith(     "0x     ")  ||  str.startsWith(     "-0x     ")  ||  str.startsWith(     "0X     ")  ||  str.startsWith(     "-0X     "))  {  int  hexDigits  =  str.length()  -  2;  //  drop  0x  if  (str.startsWith(     "-     "))  {  //  drop  -  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  	projects/Lang7/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	447	447	1	replace	Number  str  =  createNumber(str,  hexDigits  +  1);	  Number    str    =    createNumber(str,    hexDigits);    	non-compiled	[CE]  illegal  start  of  type	41	None	replace
255	[BUG]  [BUGGY]  Number  str  =  createNumber(str,  hexDigits,  1);  [CE]  illegal  start  of  type  [FE]                AssertionError      [CONTEXT]      public  static  Number  createNumber(String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {      [BUGGY]  Number  str  =  createNumber(str,  hexDigits,  1);  [BUGGY]      return  null;  }  if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(     "A  blank  string  is  not  a  valid  number     ");  }  if  (str.startsWith(     "--     "))  {  return  null;  }  if  (str.startsWith(     "0x     ")  ||  str.startsWith(     "-0x     ")  ||  str.startsWith(     "0X     ")  ||  str.startsWith(     "-0X     "))  {  int  hexDigits  =  str.length()  -  2;  //  drop  0x  if  (str.startsWith(     "-     "))  {  //  drop  -  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  	projects/Lang7/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	447	447	1	replace	Number  str  =  createNumber(str,  hexDigits,  1);	  Number    str    =    createNumber(str,    hexDigits);    	non-compiled	[CE]  illegal  start  of  type	41	None	replace
256	[BUG]  [BUGGY]  int  decPos  =  str.lastIndexOf('.',  len)-  1;  [CE]  illegal  start  of  type  [FE]                    AssertionError      [CONTEXT]      public  static  Number  createNumber(String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {      [BUGGY]  int  decPos  =  str.lastIndexOf('.',  len)-  1;  [BUGGY]      return  null;  }  if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(     "A  blank  string  is  not  a  valid  number     ");  }  if  (str.startsWith(     "--     "))  {  return  null;  }  if  (str.startsWith(     "0x     ")  ||  str.startsWith(     "-0x     ")  ||  str.startsWith(     "0X     ")  ||  str.startsWith(     "-0X     "))  {  int  hexDigits  =  str.length()  -  2;  //  drop  0x  if  (str.startsWith(     "-     "))  {  //  drop  -  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  	projects/Lang7/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	447	447	1	replace	int  decPos  =  str.lastIndexOf('.',  len)-  1;	  int    decPos    =    str.lastIndexOf('.')-    1;    	non-compiled	[CE]  illegal  start  of  type	104	None	replace
257	[BUG]  [BUGGY]  NumberUtils.setBlank(str,  1.0f);  [CE]  illegal  start  of  type  [FE]                      AssertionError      [CONTEXT]      public  static  Number  createNumber(String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {      [BUGGY]  NumberUtils.setBlank(str,  1.0f);  [BUGGY]      return  null;  }  if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(     "A  blank  string  is  not  a  valid  number     ");  }  if  (str.startsWith(     "--     "))  {  return  null;  }  if  (str.startsWith(     "0x     ")  ||  str.startsWith(     "-0x     ")  ||  str.startsWith(     "0X     ")  ||  str.startsWith(     "-0X     "))  {  int  hexDigits  =  str.length()  -  2;  //  drop  0x  if  (str.startsWith(     "-     "))  {  //  drop  -  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  	projects/Lang7/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	447	447	1	replace	NumberUtils.setBlank(str,  1.0f);	  NumberUtils.setBlank(str,    1.0);    	non-compiled	[CE]  illegal  start  of  type	14	None	replace
258	[BUG]  [BUGGY]  Thread.currentThread().setContextClassLoader(getNumberContext());  [CE]  illegal  start  of  type  [FE]                      AssertionError      [CONTEXT]      public  static  Number  createNumber(String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {      [BUGGY]  Thread.currentThread().setContextClassLoader(getNumberContext());  [BUGGY]      }  if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(     "A  blank  string  is  not  a  valid  number     ");  }  if  (str.startsWith(     "--     "))  {  return  null;  }  if  (str.startsWith(     "0x     ")  ||  str.startsWith(     "-0x     ")  ||  str.startsWith(     "0X     ")  ||  str.startsWith(     "-0X     "))  {  int  hexDigits  =  str.length()  -  2;  //  drop  0x  if  (str.startsWith(     "-     "))  {  //  drop  -  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  	projects/Lang7/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	447	447	1	replace	Thread.currentThread().setContextClassLoader(getNumberContext());	  if(str.length()    ==    0)    {    throw    new    NumberFormatException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  type	97	None	replace
259	[BUG]  [BUGGY]  NumberFormatException  hexDigits  =  createNumber(str);  [CE]  illegal  start  of  type  [FE]                        AssertionError      [CONTEXT]      public  static  Number  createNumber(String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {      [BUGGY]  NumberFormatException  hexDigits  =  createNumber(str);  [BUGGY]      }  if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(     "A  blank  string  is  not  a  valid  number     ");  }  if  (str.startsWith(     "--     "))  {  return  null;  }  if  (str.startsWith(     "0x     ")  ||  str.startsWith(     "-0x     ")  ||  str.startsWith(     "0X     ")  ||  str.startsWith(     "-0X     "))  {  int  hexDigits  =  str.length()  -  2;  //  drop  0x  if  (str.startsWith(     "-     "))  {  //  drop  -  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  	projects/Lang7/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	447	447	1	replace	NumberFormatException  hexDigits  =  createNumber(str);	  if(str.length()    ==    0)    {    throw    new    NumberFormatException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  type	97	None	replace
260	[BUG]  [BUGGY]  NumberUtils.copyValue(str,  0,  str.length());  [CE]  illegal  start  of  type  [FE]                          AssertionError      [CONTEXT]      public  static  Number  createNumber(String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {      [BUGGY]  NumberUtils.copyValue(str,  0,  str.length());  [BUGGY]      }  if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(     "A  blank  string  is  not  a  valid  number     ");  }  if  (str.startsWith(     "--     "))  {  return  null;  }  if  (str.startsWith(     "0x     ")  ||  str.startsWith(     "-0x     ")  ||  str.startsWith(     "0X     ")  ||  str.startsWith(     "-0X     "))  {  int  hexDigits  =  str.length()  -  2;  //  drop  0x  if  (str.startsWith(     "-     "))  {  //  drop  -  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  	projects/Lang7/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	447	447	1	replace	NumberUtils.copyValue(str,  0,  str.length());	  if(str.length()    ==    0)    {    throw    new    NumberFormatException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  type	97	None	replace
261	[BUG]  [BUGGY]  Throw  new  NumberFormatException( "A  blank  string  is  not  a  valid  number "  +  str);  [CE]  not  a  statement  [FE]              AssertionError      [CONTEXT]      public  static  Number  createNumber(String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {      [BUGGY]  Throw  new  NumberFormatException( "A  blank  string  is  not  a  valid  number "  +  str);  [BUGGY]      }  if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(     "A  blank  string  is  not  a  valid  number     ");  }  if  (str.startsWith(     "--     "))  {  return  null;  }  if  (str.startsWith(     "0x     ")  ||  str.startsWith(     "-0x     ")  ||  str.startsWith(     "0X     ")  ||  str.startsWith(     "-0X     "))  {  int  hexDigits  =  str.length()  -  2;  //  drop  0x  if  (str.startsWith(     "-     "))  {  //  drop  -  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  	projects/Lang7/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	447	447	1	replace	Throw  new  NumberFormatException( "A  blank  string  is  not  a  valid  number "  +  str);	  throw    new    NumberFormatException(   "A    blank    string    is    not    a    valid    number   "    +    str);    	non-compiled	[CE]  not  a  statement	63	None	replace
262	[BUG]  [BUGGY]  int  decPos  =  str.indexOf('.',  dec);  [CE]  illegal  start  of  type  [FE]                AssertionError      [CONTEXT]      public  static  Number  createNumber(String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {      [BUGGY]  int  decPos  =  str.indexOf('.',  dec);  [BUGGY]      return  null;  }  if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(     "A  blank  string  is  not  a  valid  number     ");  }  if  (str.startsWith(     "--     "))  {  return  null;  }  if  (str.startsWith(     "0x     ")  ||  str.startsWith(     "-0x     ")  ||  str.startsWith(     "0X     ")  ||  str.startsWith(     "-0X     "))  {  int  hexDigits  =  str.length()  -  2;  //  drop  0x  if  (str.startsWith(     "-     "))  {  //  drop  -  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  	projects/Lang7/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	447	447	1	replace	int  decPos  =  str.indexOf('.',  dec);	  int    decPos    =    str.lastIndexOf('.',    dec);    	non-compiled	[CE]  illegal  start  of  type	91	None	replace
263	[BUG]  [BUGGY]  int  decPos  =  str.lastIndexOf('.',  exp);  [CE]  illegal  start  of  type  [FE]                  AssertionError      [CONTEXT]      public  static  Number  createNumber(String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {      [BUGGY]  int  decPos  =  str.lastIndexOf('.',  exp);  [BUGGY]      return  null;  }  if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(     "A  blank  string  is  not  a  valid  number     ");  }  if  (str.startsWith(     "--     "))  {  return  null;  }  if  (str.startsWith(     "0x     ")  ||  str.startsWith(     "-0x     ")  ||  str.startsWith(     "0X     ")  ||  str.startsWith(     "-0X     "))  {  int  hexDigits  =  str.length()  -  2;  //  drop  0x  if  (str.startsWith(     "-     "))  {  //  drop  -  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  	projects/Lang7/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	447	447	1	replace	int  decPos  =  str.lastIndexOf('.',  exp);	  int    decPos    =    str.lastIndexOf('.',    dec);    	non-compiled	[CE]  illegal  start  of  type	91	None	replace
264	[BUG]  [BUGGY]  String  str  =  str.substring(0,  str.length()  -  3);  [CE]  illegal  start  of  type  [FE]            AssertionError      [CONTEXT]      public  static  Number  createNumber(String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {      [BUGGY]  String  str  =  str.substring(0,  str.length()  -  3);  [BUGGY]      return  null;  }  if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(     "A  blank  string  is  not  a  valid  number     ");  }  if  (str.startsWith(     "--     "))  {  return  null;  }  if  (str.startsWith(     "0x     ")  ||  str.startsWith(     "-0x     ")  ||  str.startsWith(     "0X     ")  ||  str.startsWith(     "-0X     "))  {  int  hexDigits  =  str.length()  -  2;  //  drop  0x  if  (str.startsWith(     "-     "))  {  //  drop  -  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  	projects/Lang7/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	447	447	1	replace	String  str  =  str.substring(0,  str.length()  -  3);	  String    str    =    str.substring(0,    str.length());    	non-compiled	[CE]  illegal  start  of  type	10	None	replace
265	[BUG]  [BUGGY]  Return  new  Double(str.doubleValue());  [CE]  not  a  statement  [FE]            AssertionError      [CONTEXT]      public  static  Number  createNumber(String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {      [BUGGY]  Return  new  Double(str.doubleValue());  [BUGGY]      }  if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(     "A  blank  string  is  not  a  valid  number     ");  }  if  (str.startsWith(     "--     "))  {  return  null;  }  if  (str.startsWith(     "0x     ")  ||  str.startsWith(     "-0x     ")  ||  str.startsWith(     "0X     ")  ||  str.startsWith(     "-0X     "))  {  int  hexDigits  =  str.length()  -  2;  //  drop  0x  if  (str.startsWith(     "-     "))  {  //  drop  -  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  	projects/Lang7/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	447	447	1	replace	Return  new  Double(str.doubleValue());	  return    new    Double(str.doubleValue()    +    1);    	non-compiled	[CE]  not  a  statement	54	None	replace
266	[BUG]  [BUGGY]  return  new  Double(Str.doubleValue());  [CE]  illegal  start  of  type  [FE]              AssertionError      [CONTEXT]      public  static  Number  createNumber(String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {      [BUGGY]  return  new  Double(Str.doubleValue());  [BUGGY]      }  if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(     "A  blank  string  is  not  a  valid  number     ");  }  if  (str.startsWith(     "--     "))  {  return  null;  }  if  (str.startsWith(     "0x     ")  ||  str.startsWith(     "-0x     ")  ||  str.startsWith(     "0X     ")  ||  str.startsWith(     "-0X     "))  {  int  hexDigits  =  str.length()  -  2;  //  drop  0x  if  (str.startsWith(     "-     "))  {  //  drop  -  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  	projects/Lang7/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	447	447	1	replace	return  new  Double(Str.doubleValue());	  return    new    Double(str.doubleValue()    +    1);    	non-compiled	[CE]  illegal  start  of  type	54	None	replace
267	[BUG]  [BUGGY]  return(null  ==  str)?  null  :  new  Number(str,  dec);  [CE]  illegal  start  of  type  [FE]            AssertionError      [CONTEXT]      public  static  Number  createNumber(String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {      [BUGGY]  return(null  ==  str)?  null  :  new  Number(str,  dec);  [BUGGY]      }  if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(     "A  blank  string  is  not  a  valid  number     ");  }  if  (str.startsWith(     "--     "))  {  return  null;  }  if  (str.startsWith(     "0x     ")  ||  str.startsWith(     "-0x     ")  ||  str.startsWith(     "0X     ")  ||  str.startsWith(     "-0X     "))  {  int  hexDigits  =  str.length()  -  2;  //  drop  0x  if  (str.startsWith(     "-     "))  {  //  drop  -  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  	projects/Lang7/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	447	447	1	replace	return(null  ==  str)?  null  :  new  Number(str,  dec);	  return(null    ==    str)?    null    :    new    Number(str);    	non-compiled	[CE]  illegal  start  of  type	67	None	replace
268	[BUG]  [BUGGY]  return  createNumber(str,  null,  0);  [CE]  illegal  start  of  type  [FE]                    AssertionError      [CONTEXT]      public  static  Number  createNumber(String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {      [BUGGY]  return  createNumber(str,  null,  0);  [BUGGY]      }  if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(     "A  blank  string  is  not  a  valid  number     ");  }  if  (str.startsWith(     "--     "))  {  return  null;  }  if  (str.startsWith(     "0x     ")  ||  str.startsWith(     "-0x     ")  ||  str.startsWith(     "0X     ")  ||  str.startsWith(     "-0X     "))  {  int  hexDigits  =  str.length()  -  2;  //  drop  0x  if  (str.startsWith(     "-     "))  {  //  drop  -  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  	projects/Lang7/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	447	447	1	replace	return  createNumber(str,  null,  0);	  return    createNumber(str,    null);    	non-compiled	[CE]  illegal  start  of  type	71	None	replace
269	[BUG]  [BUGGY]  Integer  decPos  =  str.lastIndexOf('.');  [CE]  illegal  start  of  type  [FE]                    AssertionError      [CONTEXT]      public  static  Number  createNumber(String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {      [BUGGY]  Integer  decPos  =  str.lastIndexOf('.');  [BUGGY]      return  null;  }  if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(     "A  blank  string  is  not  a  valid  number     ");  }  if  (str.startsWith(     "--     "))  {  return  null;  }  if  (str.startsWith(     "0x     ")  ||  str.startsWith(     "-0x     ")  ||  str.startsWith(     "0X     ")  ||  str.startsWith(     "-0X     "))  {  int  hexDigits  =  str.length()  -  2;  //  drop  0x  if  (str.startsWith(     "-     "))  {  //  drop  -  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  	projects/Lang7/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	447	447	1	replace	Integer  decPos  =  str.lastIndexOf('.');	  Integer    decPos    =    str.length();    	non-compiled	[CE]  illegal  start  of  type	24	None	replace
270	[BUG]  [BUGGY]  return  new  Double(str.longValue());  [CE]  illegal  start  of  type  [FE]              AssertionError      [CONTEXT]      public  static  Number  createNumber(String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {      [BUGGY]  return  new  Double(str.longValue());  [BUGGY]      }  if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(     "A  blank  string  is  not  a  valid  number     ");  }  if  (str.startsWith(     "--     "))  {  return  null;  }  if  (str.startsWith(     "0x     ")  ||  str.startsWith(     "-0x     ")  ||  str.startsWith(     "0X     ")  ||  str.startsWith(     "-0X     "))  {  int  hexDigits  =  str.length()  -  2;  //  drop  0x  if  (str.startsWith(     "-     "))  {  //  drop  -  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  	projects/Lang7/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	447	447	1	replace	return  new  Double(str.longValue());	  return    new    Double(str.doubleValue()    -    1);    	non-compiled	[CE]  illegal  start  of  type	55	None	replace
271	[BUG]  [BUGGY]  Integer  str  =  createInteger(str,  4);  [CE]  illegal  start  of  type  [FE]              AssertionError      [CONTEXT]      public  static  Number  createNumber(String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {      [BUGGY]  Integer  str  =  createInteger(str,  4);  [BUGGY]      return  null;  }  if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(     "A  blank  string  is  not  a  valid  number     ");  }  if  (str.startsWith(     "--     "))  {  return  null;  }  if  (str.startsWith(     "0x     ")  ||  str.startsWith(     "-0x     ")  ||  str.startsWith(     "0X     ")  ||  str.startsWith(     "-0X     "))  {  int  hexDigits  =  str.length()  -  2;  //  drop  0x  if  (str.startsWith(     "-     "))  {  //  drop  -  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  	projects/Lang7/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	447	447	1	replace	Integer  str  =  createInteger(str,  4);	  Integer    str    =    createInteger(str,    hexDigits);    	non-compiled	[CE]  illegal  start  of  type	84	None	replace
272	[BUG]  [BUGGY]  return  new  NumberFormatException( "A  blank  string  is  not  a  valid  number. ");  [CE]  illegal  start  of  type  [FE]              AssertionError      [CONTEXT]      public  static  Number  createNumber(String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {      [BUGGY]  return  new  NumberFormatException( "A  blank  string  is  not  a  valid  number. ");  [BUGGY]      }  if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(     "A  blank  string  is  not  a  valid  number     ");  }  if  (str.startsWith(     "--     "))  {  return  null;  }  if  (str.startsWith(     "0x     ")  ||  str.startsWith(     "-0x     ")  ||  str.startsWith(     "0X     ")  ||  str.startsWith(     "-0X     "))  {  int  hexDigits  =  str.length()  -  2;  //  drop  0x  if  (str.startsWith(     "-     "))  {  //  drop  -  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  	projects/Lang7/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	447	447	1	replace	return  new  NumberFormatException( "A  blank  string  is  not  a  valid  number. ");	  throw    new    NumberFormatException(   "A    blank    string    is    not    a    valid    number.   ");    	non-compiled	[CE]  illegal  start  of  type	17	None	replace
273	[BUG]  [BUGGY]  throw  new  NumberFormatException( "A  blank  string  is  not  a  valid  number.  Please  check  the  length  of  the  str. ");  [CE]  illegal  start  of  type  [FE]                AssertionError      [CONTEXT]      public  static  Number  createNumber(String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {      [BUGGY]  throw  new  NumberFormatException( "A  blank  string  is  not  a  valid  number.  Please  check  the  length  of  the  str. ");  [BUGGY]      }  if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(     "A  blank  string  is  not  a  valid  number     ");  }  if  (str.startsWith(     "--     "))  {  return  null;  }  if  (str.startsWith(     "0x     ")  ||  str.startsWith(     "-0x     ")  ||  str.startsWith(     "0X     ")  ||  str.startsWith(     "-0X     "))  {  int  hexDigits  =  str.length()  -  2;  //  drop  0x  if  (str.startsWith(     "-     "))  {  //  drop  -  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  	projects/Lang7/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	447	447	1	replace	throw  new  NumberFormatException( "A  blank  string  is  not  a  valid  number.  Please  check  the  length  of  the  str. ");	  throw    new    NumberFormatException(   "A    blank    string    is    not    a    valid    number.   ");    	non-compiled	[CE]  illegal  start  of  type	17	None	replace
274	[BUG]  [BUGGY]  int  decPos  =  str.lastIndexOf('.',  16);  [CE]  illegal  start  of  type  [FE]                AssertionError      [CONTEXT]      public  static  Number  createNumber(String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {      [BUGGY]  int  decPos  =  str.lastIndexOf('.',  16);  [BUGGY]      return  null;  }  if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(     "A  blank  string  is  not  a  valid  number     ");  }  if  (str.startsWith(     "--     "))  {  return  null;  }  if  (str.startsWith(     "0x     ")  ||  str.startsWith(     "-0x     ")  ||  str.startsWith(     "0X     ")  ||  str.startsWith(     "-0X     "))  {  int  hexDigits  =  str.length()  -  2;  //  drop  0x  if  (str.startsWith(     "-     "))  {  //  drop  -  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  	projects/Lang7/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	447	447	1	replace	int  decPos  =  str.lastIndexOf('.',  16);	  int    decPos    =    str.lastIndexOf('.',    1);    	non-compiled	[CE]  illegal  start  of  type	49	None	replace
275	[BUG]  [BUGGY]  int  decPos  =  str.indexOf('.',  decPos);  [CE]  illegal  start  of  type  [FE]                  AssertionError      [CONTEXT]      public  static  Number  createNumber(String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {      [BUGGY]  int  decPos  =  str.indexOf('.',  decPos);  [BUGGY]      return  null;  }  if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(     "A  blank  string  is  not  a  valid  number     ");  }  if  (str.startsWith(     "--     "))  {  return  null;  }  if  (str.startsWith(     "0x     ")  ||  str.startsWith(     "-0x     ")  ||  str.startsWith(     "0X     ")  ||  str.startsWith(     "-0X     "))  {  int  hexDigits  =  str.length()  -  2;  //  drop  0x  if  (str.startsWith(     "-     "))  {  //  drop  -  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  	projects/Lang7/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	447	447	1	replace	int  decPos  =  str.indexOf('.',  decPos);	  int    decPos    =    str.indexOf('.');    	non-compiled	[CE]  illegal  start  of  type	50	None	replace
276	[BUG]  [BUGGY]  Number  str  =  getNumber(str.substring(0,  str.length()  2));  [CE]  [FE]                AssertionError      [CONTEXT]      public  static  Number  createNumber(String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {      [BUGGY]  Number  str  =  getNumber(str.substring(0,  str.length()  2));  [BUGGY]      return  null;  }  if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(     "A  blank  string  is  not  a  valid  number     ");  }  if  (str.startsWith(     "--     "))  {  return  null;  }  if  (str.startsWith(     "0x     ")  ||  str.startsWith(     "-0x     ")  ||  str.startsWith(     "0X     ")  ||  str.startsWith(     "-0X     "))  {  int  hexDigits  =  str.length()  -  2;  //  drop  0x  if  (str.startsWith(     "-     "))  {  //  drop  -  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  	projects/Lang7/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	447	447	1	replace	Number  str  =  getNumber(str.substring(0,  str.length()  2));	  Number    str    =    getNumber(str.substring(0,    str.length()    -    1));    	non-compiled	[CE]  	101	None	replace
277	[BUG]  [BUGGY]  NumberUtils.copyValue(str,  HEXDigits);  [CE]  illegal  start  of  type  [FE]                      AssertionError      [CONTEXT]      public  static  Number  createNumber(String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {      [BUGGY]  NumberUtils.copyValue(str,  HEXDigits);  [BUGGY]      return  null;  }  if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(     "A  blank  string  is  not  a  valid  number     ");  }  if  (str.startsWith(     "--     "))  {  return  null;  }  if  (str.startsWith(     "0x     ")  ||  str.startsWith(     "-0x     ")  ||  str.startsWith(     "0X     ")  ||  str.startsWith(     "-0X     "))  {  int  hexDigits  =  str.length()  -  2;  //  drop  0x  if  (str.startsWith(     "-     "))  {  //  drop  -  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  	projects/Lang7/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	447	447	1	replace	NumberUtils.copyValue(str,  HEXDigits);	  NumberUtils.copyValue(hexDigits,    str);    	non-compiled	[CE]  illegal  start  of  type	23	None	replace
278	[BUG]  [BUGGY]  NumberUtils.copyValue(str,  dec,  0);  [CE]  illegal  start  of  type  [FE]                AssertionError      [CONTEXT]      public  static  Number  createNumber(String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {      [BUGGY]  NumberUtils.copyValue(str,  dec,  0);  [BUGGY]      return  null;  }  if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(     "A  blank  string  is  not  a  valid  number     ");  }  if  (str.startsWith(     "--     "))  {  return  null;  }  if  (str.startsWith(     "0x     ")  ||  str.startsWith(     "-0x     ")  ||  str.startsWith(     "0X     ")  ||  str.startsWith(     "-0X     "))  {  int  hexDigits  =  str.length()  -  2;  //  drop  0x  if  (str.startsWith(     "-     "))  {  //  drop  -  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  	projects/Lang7/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	447	447	1	replace	NumberUtils.copyValue(str,  dec,  0);	  NumberUtils.copyValue(str,    hexDigits,    0);    	non-compiled	[CE]  illegal  start  of  type	74	None	replace
279	[BUG]  [BUGGY]  NumberUtils.copyNumber(str,  this.hexDigits,  dec);  [CE]  illegal  start  of  type  [FE]                        AssertionError      [CONTEXT]      public  static  Number  createNumber(String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {      [BUGGY]  NumberUtils.copyNumber(str,  this.hexDigits,  dec);  [BUGGY]      return  null;  }  if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(     "A  blank  string  is  not  a  valid  number     ");  }  if  (str.startsWith(     "--     "))  {  return  null;  }  if  (str.startsWith(     "0x     ")  ||  str.startsWith(     "-0x     ")  ||  str.startsWith(     "0X     ")  ||  str.startsWith(     "-0X     "))  {  int  hexDigits  =  str.length()  -  2;  //  drop  0x  if  (str.startsWith(     "-     "))  {  //  drop  -  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  	projects/Lang7/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	447	447	1	replace	NumberUtils.copyNumber(str,  this.hexDigits,  dec);	  NumberUtils.copyNumber(str,    this.hexDigits);    	non-compiled	[CE]  illegal  start  of  type	39	None	replace
280	[BUG]  [BUGGY]  Integer  hexDigits  =  str.lastIndexOf('.');  [CE]  illegal  start  of  type  [FE]            AssertionError      [CONTEXT]      public  static  Number  createNumber(String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {      [BUGGY]  Integer  hexDigits  =  str.lastIndexOf('.');  [BUGGY]      return  null;  }  if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(     "A  blank  string  is  not  a  valid  number     ");  }  if  (str.startsWith(     "--     "))  {  return  null;  }  if  (str.startsWith(     "0x     ")  ||  str.startsWith(     "-0x     ")  ||  str.startsWith(     "0X     ")  ||  str.startsWith(     "-0X     "))  {  int  hexDigits  =  str.length()  -  2;  //  drop  0x  if  (str.startsWith(     "-     "))  {  //  drop  -  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  	projects/Lang7/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	447	447	1	replace	Integer  hexDigits  =  str.lastIndexOf('.');	  Integer    hexDigits    =    str.length();    	non-compiled	[CE]  illegal  start  of  type	77	None	replace
281	[BUG]  [BUGGY]  Integer  strDigits  =  str.length();  [CE]  illegal  start  of  type  [FE]              AssertionError      [CONTEXT]      public  static  Number  createNumber(String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {      [BUGGY]  Integer  strDigits  =  str.length();  [BUGGY]      return  null;  }  if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(     "A  blank  string  is  not  a  valid  number     ");  }  if  (str.startsWith(     "--     "))  {  return  null;  }  if  (str.startsWith(     "0x     ")  ||  str.startsWith(     "-0x     ")  ||  str.startsWith(     "0X     ")  ||  str.startsWith(     "-0X     "))  {  int  hexDigits  =  str.length()  -  2;  //  drop  0x  if  (str.startsWith(     "-     "))  {  //  drop  -  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  	projects/Lang7/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	447	447	1	replace	Integer  strDigits  =  str.length();	  Integer    hexDigits    =    str.length();    	non-compiled	[CE]  illegal  start  of  type	77	None	replace
282	[BUG]  [BUGGY]  Integer  str  =  createBigInteger(str,  0);  [CE]  illegal  start  of  type  [FE]                    AssertionError      [CONTEXT]      public  static  Number  createNumber(String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {      [BUGGY]  Integer  str  =  createBigInteger(str,  0);  [BUGGY]      return  null;  }  if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(     "A  blank  string  is  not  a  valid  number     ");  }  if  (str.startsWith(     "--     "))  {  return  null;  }  if  (str.startsWith(     "0x     ")  ||  str.startsWith(     "-0x     ")  ||  str.startsWith(     "0X     ")  ||  str.startsWith(     "-0X     "))  {  int  hexDigits  =  str.length()  -  2;  //  drop  0x  if  (str.startsWith(     "-     "))  {  //  drop  -  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  	projects/Lang7/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	447	447	1	replace	Integer  str  =  createBigInteger(str,  0);	  Integer    str    =    createInteger(str,    0);    	non-compiled	[CE]  illegal  start  of  type	35	None	replace
283	[BUG]  [BUGGY]  Thread.currentThread().setContextClassLoader(getCurrentThread().getContextClass());  [CE]  illegal  start  of  type  [FE]                      AssertionError      [CONTEXT]      public  static  Number  createNumber(String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {      [BUGGY]  Thread.currentThread().setContextClassLoader(getCurrentThread().getContextClass());  [BUGGY]      }  if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(     "A  blank  string  is  not  a  valid  number     ");  }  if  (str.startsWith(     "--     "))  {  return  null;  }  if  (str.startsWith(     "0x     ")  ||  str.startsWith(     "-0x     ")  ||  str.startsWith(     "0X     ")  ||  str.startsWith(     "-0X     "))  {  int  hexDigits  =  str.length()  -  2;  //  drop  0x  if  (str.startsWith(     "-     "))  {  //  drop  -  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  	projects/Lang7/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	447	447	1	replace	Thread.currentThread().setContextClassLoader(getCurrentThread().getContextClass());	  if(str.length()    ==    0)    {    throw    new    NumberFormatException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  type	97	None	replace
284	[BUG]  [BUGGY]  aughtException( " ");  [CE]  illegal  start  of  type  [FE]                        AssertionError      [CONTEXT]      public  static  Number  createNumber(String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {      [BUGGY]  aughtException( " ");  [BUGGY]      }  if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(     "A  blank  string  is  not  a  valid  number     ");  }  if  (str.startsWith(     "--     "))  {  return  null;  }  if  (str.startsWith(     "0x     ")  ||  str.startsWith(     "-0x     ")  ||  str.startsWith(     "0X     ")  ||  str.startsWith(     "-0X     "))  {  int  hexDigits  =  str.length()  -  2;  //  drop  0x  if  (str.startsWith(     "-     "))  {  //  drop  -  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  	projects/Lang7/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	447	447	1	replace	aughtException( " ");	  if(str.length()    ==    0)    {    throw    new    NumberFormatException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  type	97	None	replace
285	[BUG]  [BUGGY]  Integer  str  =  createInteger(str.substring(2,  str.length()));  [CE]  illegal  start  of  type  [FE]                AssertionError      [CONTEXT]      public  static  Number  createNumber(String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {      [BUGGY]  Integer  str  =  createInteger(str.substring(2,  str.length()));  [BUGGY]      return  null;  }  if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(     "A  blank  string  is  not  a  valid  number     ");  }  if  (str.startsWith(     "--     "))  {  return  null;  }  if  (str.startsWith(     "0x     ")  ||  str.startsWith(     "-0x     ")  ||  str.startsWith(     "0X     ")  ||  str.startsWith(     "-0X     "))  {  int  hexDigits  =  str.length()  -  2;  //  drop  0x  if  (str.startsWith(     "-     "))  {  //  drop  -  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  	projects/Lang7/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	447	447	1	replace	Integer  str  =  createInteger(str.substring(2,  str.length()));	  Integer    str    =    createInteger(str.substring(1));    	non-compiled	[CE]  illegal  start  of  type	33	None	replace
286	[BUG]  [BUGGY]  return(str  ==  null)?  null  :  str.substring(1,  str.length());  [CE]  illegal  start  of  type  [FE]            AssertionError      [CONTEXT]      public  static  Number  createNumber(String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {      [BUGGY]  return(str  ==  null)?  null  :  str.substring(1,  str.length());  [BUGGY]      }  if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(     "A  blank  string  is  not  a  valid  number     ");  }  if  (str.startsWith(     "--     "))  {  return  null;  }  if  (str.startsWith(     "0x     ")  ||  str.startsWith(     "-0x     ")  ||  str.startsWith(     "0X     ")  ||  str.startsWith(     "-0X     "))  {  int  hexDigits  =  str.length()  -  2;  //  drop  0x  if  (str.startsWith(     "-     "))  {  //  drop  -  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  	projects/Lang7/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	447	447	1	replace	return(str  ==  null)?  null  :  str.substring(1,  str.length());	  return(str    ==    null)?    null    :    str.substring(0,    str.length()    -    1);    	non-compiled	[CE]  illegal  start  of  type	93	None	replace
287	[BUG]  [BUGGY]  int  decPos  =  str.lastIndexOf('.',  DEC_PREFIX)-  1;  [CE]  illegal  start  of  type  [FE]                    AssertionError      [CONTEXT]      public  static  Number  createNumber(String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {      [BUGGY]  int  decPos  =  str.lastIndexOf('.',  DEC_PREFIX)-  1;  [BUGGY]      return  null;  }  if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(     "A  blank  string  is  not  a  valid  number     ");  }  if  (str.startsWith(     "--     "))  {  return  null;  }  if  (str.startsWith(     "0x     ")  ||  str.startsWith(     "-0x     ")  ||  str.startsWith(     "0X     ")  ||  str.startsWith(     "-0X     "))  {  int  hexDigits  =  str.length()  -  2;  //  drop  0x  if  (str.startsWith(     "-     "))  {  //  drop  -  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  	projects/Lang7/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	447	447	1	replace	int  decPos  =  str.lastIndexOf('.',  DEC_PREFIX)-  1;	  int    decPos    =    str.lastIndexOf('.')-    1;    	non-compiled	[CE]  illegal  start  of  type	104	None	replace
288	[BUG]  [BUGGY]  char  decPos  =  str.charAt(str.length()  -  1);  [CE]  illegal  start  of  type  [FE]                    AssertionError      [CONTEXT]      public  static  Number  createNumber(String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {      [BUGGY]  char  decPos  =  str.charAt(str.length()  -  1);  [BUGGY]      return  null;  }  if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(     "A  blank  string  is  not  a  valid  number     ");  }  if  (str.startsWith(     "--     "))  {  return  null;  }  if  (str.startsWith(     "0x     ")  ||  str.startsWith(     "-0x     ")  ||  str.startsWith(     "0X     ")  ||  str.startsWith(     "-0X     "))  {  int  hexDigits  =  str.length()  -  2;  //  drop  0x  if  (str.startsWith(     "-     "))  {  //  drop  -  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  	projects/Lang7/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	447	447	1	replace	char  decPos  =  str.charAt(str.length()  -  1);	  char    decPos    =    str.length();    	non-compiled	[CE]  illegal  start  of  type	73	None	replace
289	[BUG]  [BUGGY]  return  new  Number(str.substring(1,  str.length()));  [CE]  illegal  start  of  type  [FE]                  AssertionError      [CONTEXT]      public  static  Number  createNumber(String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {      [BUGGY]  return  new  Number(str.substring(1,  str.length()));  [BUGGY]      }  if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(     "A  blank  string  is  not  a  valid  number     ");  }  if  (str.startsWith(     "--     "))  {  return  null;  }  if  (str.startsWith(     "0x     ")  ||  str.startsWith(     "-0x     ")  ||  str.startsWith(     "0X     ")  ||  str.startsWith(     "-0X     "))  {  int  hexDigits  =  str.length()  -  2;  //  drop  0x  if  (str.startsWith(     "-     "))  {  //  drop  -  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  	projects/Lang7/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	447	447	1	replace	return  new  Number(str.substring(1,  str.length()));	  return    new    Number(str.substring(0,    str.length()    -    1));    	non-compiled	[CE]  illegal  start  of  type	9	None	replace
290	[BUG]  [BUGGY]  Number  str  =  createNumber(str,  DEC_ZERO);  [CE]  illegal  start  of  type  [FE]            AssertionError      [CONTEXT]      public  static  Number  createNumber(String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {      [BUGGY]  Number  str  =  createNumber(str,  DEC_ZERO);  [BUGGY]      return  null;  }  if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(     "A  blank  string  is  not  a  valid  number     ");  }  if  (str.startsWith(     "--     "))  {  return  null;  }  if  (str.startsWith(     "0x     ")  ||  str.startsWith(     "-0x     ")  ||  str.startsWith(     "0X     ")  ||  str.startsWith(     "-0X     "))  {  int  hexDigits  =  str.length()  -  2;  //  drop  0x  if  (str.startsWith(     "-     "))  {  //  drop  -  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  	projects/Lang7/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	447	447	1	replace	Number  str  =  createNumber(str,  DEC_ZERO);	  Number    str    =    createNumber(str,    hexDigits);    	non-compiled	[CE]  illegal  start  of  type	41	None	replace
291	[BUG]  [BUGGY]  return  createNull();  [CE]  illegal  start  of  type  [FE]                    AssertionError      [CONTEXT]      public  static  Number  createNumber(String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {      [BUGGY]  return  createNull();  [BUGGY]      }  if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(     "A  blank  string  is  not  a  valid  number     ");  }  if  (str.startsWith(     "--     "))  {  return  null;  }  if  (str.startsWith(     "0x     ")  ||  str.startsWith(     "-0x     ")  ||  str.startsWith(     "0X     ")  ||  str.startsWith(     "-0X     "))  {  int  hexDigits  =  str.length()  -  2;  //  drop  0x  if  (str.startsWith(     "-     "))  {  //  drop  -  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  	projects/Lang7/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	447	447	1	replace	return  createNull();	  return    createNumber(str);    	non-compiled	[CE]  illegal  start  of  type	40	None	replace
292	[BUG]  [BUGGY]  Number  str  =  getNumber(str,  DEC_PREFIX);  [CE]  illegal  start  of  type  [FE]                AssertionError      [CONTEXT]      public  static  Number  createNumber(String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {      [BUGGY]  Number  str  =  getNumber(str,  DEC_PREFIX);  [BUGGY]      return  null;  }  if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(     "A  blank  string  is  not  a  valid  number     ");  }  if  (str.startsWith(     "--     "))  {  return  null;  }  if  (str.startsWith(     "0x     ")  ||  str.startsWith(     "-0x     ")  ||  str.startsWith(     "0X     ")  ||  str.startsWith(     "-0X     "))  {  int  hexDigits  =  str.length()  -  2;  //  drop  0x  if  (str.startsWith(     "-     "))  {  //  drop  -  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  	projects/Lang7/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	447	447	1	replace	Number  str  =  getNumber(str,  DEC_PREFIX);	  Number    str    =    getNumber(str,    hexDigits);    	non-compiled	[CE]  illegal  start  of  type	64	None	replace
293	[BUG]  [BUGGY]  Number  str  =  getNumber(str,  expPos);  [CE]  illegal  start  of  type  [FE]                  AssertionError      [CONTEXT]      public  static  Number  createNumber(String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {      [BUGGY]  Number  str  =  getNumber(str,  expPos);  [BUGGY]      return  null;  }  if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(     "A  blank  string  is  not  a  valid  number     ");  }  if  (str.startsWith(     "--     "))  {  return  null;  }  if  (str.startsWith(     "0x     ")  ||  str.startsWith(     "-0x     ")  ||  str.startsWith(     "0X     ")  ||  str.startsWith(     "-0X     "))  {  int  hexDigits  =  str.length()  -  2;  //  drop  0x  if  (str.startsWith(     "-     "))  {  //  drop  -  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  	projects/Lang7/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	447	447	1	replace	Number  str  =  getNumber(str,  expPos);	  Number    str    =    getNumber(str,    hexDigits);    	non-compiled	[CE]  illegal  start  of  type	64	None	replace
294	[BUG]  [BUGGY]  if(str.length()  <  =  0)  {  return  null;  }  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      public  static  Number  createNumber(String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {      [BUGGY]  if(str.length()  <  =  0)  {  return  null;  }  [BUGGY]      }  if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(     "A  blank  string  is  not  a  valid  number     ");  }  if  (str.startsWith(     "--     "))  {  return  null;  }  if  (str.startsWith(     "0x     ")  ||  str.startsWith(     "-0x     ")  ||  str.startsWith(     "0X     ")  ||  str.startsWith(     "-0X     "))  {  int  hexDigits  =  str.length()  -  2;  //  drop  0x  if  (str.startsWith(     "-     "))  {  //  drop  -  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  	projects/Lang7/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	447	447	1	replace	if(str.length()  <  =  0)  {  return  null;  }	  if(str.length()    ==    0)    {    return    null;    }    	non-compiled	[CE]  illegal  start  of  expression	96	None	replace
295	[BUG]  [BUGGY]  if(str.length()  ==  0  ||  str.charAt(0)!=  '-')  {  return  null;  }  [CE]  illegal  start  of  type  [FE]                      AssertionError      [CONTEXT]      public  static  Number  createNumber(String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {      [BUGGY]  if(str.length()  ==  0  ||  str.charAt(0)!=  '-')  {  return  null;  }  [BUGGY]      }  if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(     "A  blank  string  is  not  a  valid  number     ");  }  if  (str.startsWith(     "--     "))  {  return  null;  }  if  (str.startsWith(     "0x     ")  ||  str.startsWith(     "-0x     ")  ||  str.startsWith(     "0X     ")  ||  str.startsWith(     "-0X     "))  {  int  hexDigits  =  str.length()  -  2;  //  drop  0x  if  (str.startsWith(     "-     "))  {  //  drop  -  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  	projects/Lang7/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	447	447	1	replace	if(str.length()  ==  0  ||  str.charAt(0)!=  '-')  {  return  null;  }	  if(str.length()    ==    0)    {    return    null;    }    	non-compiled	[CE]  illegal  start  of  type	96	None	replace
296	[BUG]  [BUGGY]  NumberUtils.copyCurrentName(str);  [CE]  illegal  start  of  type  [FE]                    AssertionError      [CONTEXT]      public  static  Number  createNumber(String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {      [BUGGY]  NumberUtils.copyCurrentName(str);  [BUGGY]      return  null;  }  if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(     "A  blank  string  is  not  a  valid  number     ");  }  if  (str.startsWith(     "--     "))  {  return  null;  }  if  (str.startsWith(     "0x     ")  ||  str.startsWith(     "-0x     ")  ||  str.startsWith(     "0X     ")  ||  str.startsWith(     "-0X     "))  {  int  hexDigits  =  str.length()  -  2;  //  drop  0x  if  (str.startsWith(     "-     "))  {  //  drop  -  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  	projects/Lang7/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	447	447	1	replace	NumberUtils.copyCurrentName(str);	  NumberUtils.copyValue(mant);    	non-compiled	[CE]  illegal  start  of  type	65	None	replace
297	[BUG]  [BUGGY]  Number  str  =  createNumber(str.substring0,  str.length());  [CE]  illegal  start  of  type  [FE]              AssertionError      [CONTEXT]      public  static  Number  createNumber(String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {      [BUGGY]  Number  str  =  createNumber(str.substring0,  str.length());  [BUGGY]      return  null;  }  if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(     "A  blank  string  is  not  a  valid  number     ");  }  if  (str.startsWith(     "--     "))  {  return  null;  }  if  (str.startsWith(     "0x     ")  ||  str.startsWith(     "-0x     ")  ||  str.startsWith(     "0X     ")  ||  str.startsWith(     "-0X     "))  {  int  hexDigits  =  str.length()  -  2;  //  drop  0x  if  (str.startsWith(     "-     "))  {  //  drop  -  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  	projects/Lang7/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	447	447	1	replace	Number  str  =  createNumber(str.substring0,  str.length());	  Number    str    =    createNumber(str.substring(1));    	non-compiled	[CE]  illegal  start  of  type	42	None	replace
298	[BUG]  [BUGGY]  NumberUtils.setLength(str.length()  -  1);  [CE]  illegal  start  of  type  [FE]                    AssertionError      [CONTEXT]      public  static  Number  createNumber(String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {      [BUGGY]  NumberUtils.setLength(str.length()  -  1);  [BUGGY]      return  null;  }  if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(     "A  blank  string  is  not  a  valid  number     ");  }  if  (str.startsWith(     "--     "))  {  return  null;  }  if  (str.startsWith(     "0x     ")  ||  str.startsWith(     "-0x     ")  ||  str.startsWith(     "0X     ")  ||  str.startsWith(     "-0X     "))  {  int  hexDigits  =  str.length()  -  2;  //  drop  0x  if  (str.startsWith(     "-     "))  {  //  drop  -  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  	projects/Lang7/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	447	447	1	replace	NumberUtils.setLength(str.length()  -  1);	  NumberUtils.setLength(str);    	non-compiled	[CE]  illegal  start  of  type	13	None	replace
299	[BUG]  [BUGGY]  int  decPos  =  str.lastIndexOf('.',  decPos);  [CE]  illegal  start  of  type  [FE]                AssertionError      [CONTEXT]      public  static  Number  createNumber(String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {      [BUGGY]  int  decPos  =  str.lastIndexOf('.',  decPos);  [BUGGY]      return  null;  }  if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(     "A  blank  string  is  not  a  valid  number     ");  }  if  (str.startsWith(     "--     "))  {  return  null;  }  if  (str.startsWith(     "0x     ")  ||  str.startsWith(     "-0x     ")  ||  str.startsWith(     "0X     ")  ||  str.startsWith(     "-0X     "))  {  int  hexDigits  =  str.length()  -  2;  //  drop  0x  if  (str.startsWith(     "-     "))  {  //  drop  -  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  	projects/Lang7/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	447	447	1	replace	int  decPos  =  str.lastIndexOf('.',  decPos);	  int    decPos    =    str.lastIndexOf('.',    dec);    	non-compiled	[CE]  illegal  start  of  type	91	None	replace
300	[BUG]  [BUGGY]  return  createNull(str,  0);  [CE]  illegal  start  of  type  [FE]                      AssertionError      [CONTEXT]      public  static  Number  createNumber(String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {      [BUGGY]  return  createNull(str,  0);  [BUGGY]      }  if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(     "A  blank  string  is  not  a  valid  number     ");  }  if  (str.startsWith(     "--     "))  {  return  null;  }  if  (str.startsWith(     "0x     ")  ||  str.startsWith(     "-0x     ")  ||  str.startsWith(     "0X     ")  ||  str.startsWith(     "-0X     "))  {  int  hexDigits  =  str.length()  -  2;  //  drop  0x  if  (str.startsWith(     "-     "))  {  //  drop  -  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  	projects/Lang7/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	447	447	1	replace	return  createNull(str,  0);	  return    createNumber(str,    0);    	non-compiled	[CE]  illegal  start  of  type	72	None	replace
301	[BUG]  [BUGGY]  return(str  ==  null)?  null  :  new  Number(str.length();  [CE]  ')'  expected  [FE]              AssertionError      [CONTEXT]      public  static  Number  createNumber(String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {      [BUGGY]  return(str  ==  null)?  null  :  new  Number(str.length();  [BUGGY]      }  if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(     "A  blank  string  is  not  a  valid  number     ");  }  if  (str.startsWith(     "--     "))  {  return  null;  }  if  (str.startsWith(     "0x     ")  ||  str.startsWith(     "-0x     ")  ||  str.startsWith(     "0X     ")  ||  str.startsWith(     "-0X     "))  {  int  hexDigits  =  str.length()  -  2;  //  drop  0x  if  (str.startsWith(     "-     "))  {  //  drop  -  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  	projects/Lang7/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	447	447	1	replace	return(str  ==  null)?  null  :  new  Number(str.length();	  return(str    ==    null)?    null    :    new    Number(str.length()    +    1);    	non-compiled	[CE]  ')'  expected	58	None	replace
302	[BUG]  [BUGGY]  return(null!=  str)?  null  :  new  Double(str.length());  [CE]  illegal  start  of  type  [FE]              AssertionError      [CONTEXT]      public  static  Number  createNumber(String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {      [BUGGY]  return(null!=  str)?  null  :  new  Double(str.length());  [BUGGY]      }  if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(     "A  blank  string  is  not  a  valid  number     ");  }  if  (str.startsWith(     "--     "))  {  return  null;  }  if  (str.startsWith(     "0x     ")  ||  str.startsWith(     "-0x     ")  ||  str.startsWith(     "0X     ")  ||  str.startsWith(     "-0X     "))  {  int  hexDigits  =  str.length()  -  2;  //  drop  0x  if  (str.startsWith(     "-     "))  {  //  drop  -  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  	projects/Lang7/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	447	447	1	replace	return(null!=  str)?  null  :  new  Double(str.length());	  return(null    ==    str)?    null    :    new    Double(str.length()    +    1);    	non-compiled	[CE]  illegal  start  of  type	69	None	replace
