bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  [FE]  NumberFormatException  [FE]    NumberFormatException    [CONTEXT]    public  static  Number  createNumber(String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {  return  null;  }    [BUGGY]  int  decPos  =  str.lastIndexOf('  ');  [BUGGY]    if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(   "A  blank  string  is  not  a  valid  number   ");  }  if  (str.startsWith(   "--   "))  {  return  null;  }  if  (str.startsWith(   "0x   ")  ||  str.startsWith(   "-0x   ")  ||  str.startsWith(   "0X   ")  ||  str.startsWith(   "-0X   "))  {  int  hexDigits  =  str.length()  -  2;  //  drop  0x  if  (str.startsWith(   "-   "))  {  //  drop  -  hexDigits--;  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  	projects/Lang7/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.5773502691896258	449	449	1	add	int  decPos  =  str.lastIndexOf('  ');	      int    decPos    =    str.indexOf('    ');    	compilable	  [FE]  NumberFormatException  	17	1	replace
2	[BUG]  [BUGGY]  int  decPos  =  str.lastIndexOf('  ');  [FE]  NumberFormatException  [FE]    NumberFormatException    [CONTEXT]    public  static  Number  createNumber(String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {  return  null;  }    [BUGGY]  int  decPos  =  str.lastIndexOf('  ');  [BUGGY]    if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(   "A  blank  string  is  not  a  valid  number   ");  }  if  (str.startsWith(   "--   "))  {  return  null;  }  if  (str.startsWith(   "0x   ")  ||  str.startsWith(   "-0x   ")  ||  str.startsWith(   "0X   ")  ||  str.startsWith(   "-0X   "))  {  int  hexDigits  =  str.length()  -  2;  //  drop  0x  if  (str.startsWith(   "-   "))  {  //  drop  -  hexDigits--;  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  	projects/Lang7/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.5773502691896258	449	449	1	replace	int  decPos  =  str.lastIndexOf('  ');	      int    decPos    =    str.indexOf('    ');    	compilable	  [FE]  NumberFormatException  	17	1	replace
3	[BUG]  [BUGGY]  int  decPos  =  str.indexOf('  ',  exp);  [CE]  cannot  find  symbol  exp  [FE]      NumberFormatException    [CONTEXT]    public  static  Number  createNumber(String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {  return  null;  }    [BUGGY]  int  decPos  =  str.indexOf('  ',  exp);  [BUGGY]    if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(   "A  blank  string  is  not  a  valid  number   ");  }  if  (str.startsWith(   "--   "))  {  return  null;  }  if  (str.startsWith(   "0x   ")  ||  str.startsWith(   "-0x   ")  ||  str.startsWith(   "0X   ")  ||  str.startsWith(   "-0X   "))  {  int  hexDigits  =  str.length()  -  2;  //  drop  0x  if  (str.startsWith(   "-   "))  {  //  drop  -  hexDigits--;  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  	projects/Lang7/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.5773502691896258	449	449	1	replace	int  decPos  =  str.indexOf('  ',  exp);	      int    decPos    =    str.indexOf('    ');    	non-compiled	[CE]  cannot  find  symbol  exp	17	None	replace
4	[BUG]  [BUGGY]  int  decPos  =  str.indexOf('  ',  DECEMBER_PREFIX);  [CE]  cannot  find  symbol  DECEMBER_PREFIX  [FE]        NumberFormatException    [CONTEXT]    public  static  Number  createNumber(String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {  return  null;  }    [BUGGY]  int  decPos  =  str.indexOf('  ',  DECEMBER_PREFIX);  [BUGGY]    if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(   "A  blank  string  is  not  a  valid  number   ");  }  if  (str.startsWith(   "--   "))  {  return  null;  }  if  (str.startsWith(   "0x   ")  ||  str.startsWith(   "-0x   ")  ||  str.startsWith(   "0X   ")  ||  str.startsWith(   "-0X   "))  {  int  hexDigits  =  str.length()  -  2;  //  drop  0x  if  (str.startsWith(   "-   "))  {  //  drop  -  hexDigits--;  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  	projects/Lang7/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.5773502691896258	449	449	1	replace	int  decPos  =  str.indexOf('  ',  DECEMBER_PREFIX);	      int    decPos    =    str.indexOf('    ');    	non-compiled	[CE]  cannot  find  symbol  DECEMBER_PREFIX	17	None	replace
5	[BUG]  [BUGGY]      int  hexDigits  =  str.lastIndexOf('.');  int  hexDigits  =  str.lastIndexOf('.');  [CE]  variable  hexDigits  is  already  defined  in  method  createNumber(String)  [FE]    NumberFormatException    [CONTEXT]    public  static  Number  createNumber(String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {  return  null;  }    [BUGGY]      int  hexDigits  =  str.lastIndexOf('.');  int  hexDigits  =  str.lastIndexOf('.');  [BUGGY]    if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(   "A  blank  string  is  not  a  valid  number   ");  }  if  (str.startsWith(   "--   "))  {  return  null;  }  if  (str.startsWith(   "0x   ")  ||  str.startsWith(   "-0x   ")  ||  str.startsWith(   "0X   ")  ||  str.startsWith(   "-0X   "))  {  int  hexDigits  =  str.length()  -  2;  //  drop  0x  if  (str.startsWith(   "-   "))  {  //  drop  -  hexDigits--;  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  	projects/Lang7/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.5773502691896258	449	449	1	replace	        int    hexDigits    =    str.lastIndexOf('.');    int  hexDigits  =  str.lastIndexOf('.');	  	non-compiled	[CE]  variable  hexDigits  is  already  defined  in  method  createNumber(String)	8	None	add
6	[BUG]  [BUGGY]      int  hexDigits  =  str.lastIndexOf('.');  Integer  hexDigits  =  str.lastIndexOf('.');  [CE]  variable  hexDigits  is  already  defined  in  method  createNumber(String)  [FE]      NumberFormatException    [CONTEXT]    public  static  Number  createNumber(String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {  return  null;  }    [BUGGY]      int  hexDigits  =  str.lastIndexOf('.');  Integer  hexDigits  =  str.lastIndexOf('.');  [BUGGY]    if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(   "A  blank  string  is  not  a  valid  number   ");  }  if  (str.startsWith(   "--   "))  {  return  null;  }  if  (str.startsWith(   "0x   ")  ||  str.startsWith(   "-0x   ")  ||  str.startsWith(   "0X   ")  ||  str.startsWith(   "-0X   "))  {  int  hexDigits  =  str.length()  -  2;  //  drop  0x  if  (str.startsWith(   "-   "))  {  //  drop  -  hexDigits--;  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  	projects/Lang7/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.5773502691896258	449	449	1	replace	        int    hexDigits    =    str.lastIndexOf('.');    Integer  hexDigits  =  str.lastIndexOf('.');	  	non-compiled	[CE]  variable  hexDigits  is  already  defined  in  method  createNumber(String)	8	None	add
7	[BUG]  [BUGGY]      int  hexDigits  =  str.lastIndexOf('.');  int  hexDigits  =  str.indexOf('.');  [CE]  variable  hexDigits  is  already  defined  in  method  createNumber(String)  [FE]        NumberFormatException    [CONTEXT]    public  static  Number  createNumber(String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {  return  null;  }    [BUGGY]      int  hexDigits  =  str.lastIndexOf('.');  int  hexDigits  =  str.indexOf('.');  [BUGGY]    if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(   "A  blank  string  is  not  a  valid  number   ");  }  if  (str.startsWith(   "--   "))  {  return  null;  }  if  (str.startsWith(   "0x   ")  ||  str.startsWith(   "-0x   ")  ||  str.startsWith(   "0X   ")  ||  str.startsWith(   "-0X   "))  {  int  hexDigits  =  str.length()  -  2;  //  drop  0x  if  (str.startsWith(   "-   "))  {  //  drop  -  hexDigits--;  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  	projects/Lang7/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.5773502691896258	449	449	1	replace	        int    hexDigits    =    str.lastIndexOf('.');    int  hexDigits  =  str.indexOf('.');	  	non-compiled	[CE]  variable  hexDigits  is  already  defined  in  method  createNumber(String)	8	None	add
8	[BUG]  [BUGGY]      int  hexDigits  =  str.lastIndexOf('.');  int  hexDigits  =  str.lastIndexOf('.').length();  [CE]  variable  hexDigits  is  already  defined  in  method  createNumber(String)  [FE]          NumberFormatException    [CONTEXT]    public  static  Number  createNumber(String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {  return  null;  }    [BUGGY]      int  hexDigits  =  str.lastIndexOf('.');  int  hexDigits  =  str.lastIndexOf('.').length();  [BUGGY]    if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(   "A  blank  string  is  not  a  valid  number   ");  }  if  (str.startsWith(   "--   "))  {  return  null;  }  if  (str.startsWith(   "0x   ")  ||  str.startsWith(   "-0x   ")  ||  str.startsWith(   "0X   ")  ||  str.startsWith(   "-0X   "))  {  int  hexDigits  =  str.length()  -  2;  //  drop  0x  if  (str.startsWith(   "-   "))  {  //  drop  -  hexDigits--;  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  	projects/Lang7/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.5773502691896258	449	449	1	replace	        int    hexDigits    =    str.lastIndexOf('.');    int  hexDigits  =  str.lastIndexOf('.').length();	  	non-compiled	[CE]  variable  hexDigits  is  already  defined  in  method  createNumber(String)	8	None	add
9	[BUG]  [BUGGY]  Integer  str  =  createInteger(str.length()  -  2);  [CE]  illegal  start  of  type  [FE]                AssertionError    [CONTEXT]    public  static  Number  createNumber(String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {  return  null;  }    [BUGGY]  Integer  str  =  createInteger(str.length()  -  2);  [BUGGY]    if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(   "A  blank  string  is  not  a  valid  number   ");  }  if  (str.startsWith(   "--   "))  {  return  null;  }  if  (str.startsWith(   "0x   ")  ||  str.startsWith(   "-0x   ")  ||  str.startsWith(   "0X   ")  ||  str.startsWith(   "-0X   "))  {  int  hexDigits  =  str.length()  -  2;  //  drop  0x  if  (str.startsWith(   "-   "))  {  //  drop  -  hexDigits--;  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  	projects/Lang7/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.5773502691896258	449	449	1	replace	Integer  str  =  createInteger(str.length()  -  2);	      Integer    str    =    createInteger(str.length());    	non-compiled	[CE]  illegal  start  of  type	5	None	replace
10	[BUG]  [BUGGY]  Integer  str  =  createInteger(str.length()  -  1);  [CE]  illegal  start  of  type  [FE]                  AssertionError    [CONTEXT]    public  static  Number  createNumber(String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {  return  null;  }    [BUGGY]  Integer  str  =  createInteger(str.length()  -  1);  [BUGGY]    if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(   "A  blank  string  is  not  a  valid  number   ");  }  if  (str.startsWith(   "--   "))  {  return  null;  }  if  (str.startsWith(   "0x   ")  ||  str.startsWith(   "-0x   ")  ||  str.startsWith(   "0X   ")  ||  str.startsWith(   "-0X   "))  {  int  hexDigits  =  str.length()  -  2;  //  drop  0x  if  (str.startsWith(   "-   "))  {  //  drop  -  hexDigits--;  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  	projects/Lang7/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.5773502691896258	449	449	1	replace	Integer  str  =  createInteger(str.length()  -  1);	      Integer    str    =    createInteger(str.length());    	non-compiled	[CE]  illegal  start  of  type	5	None	replace
11	[BUG]  [BUGGY]  Integer  str  =  createInteger(str.length()  +  2);  [CE]  illegal  start  of  type  [FE]                    AssertionError    [CONTEXT]    public  static  Number  createNumber(String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {  return  null;  }    [BUGGY]  Integer  str  =  createInteger(str.length()  +  2);  [BUGGY]    if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(   "A  blank  string  is  not  a  valid  number   ");  }  if  (str.startsWith(   "--   "))  {  return  null;  }  if  (str.startsWith(   "0x   ")  ||  str.startsWith(   "-0x   ")  ||  str.startsWith(   "0X   ")  ||  str.startsWith(   "-0X   "))  {  int  hexDigits  =  str.length()  -  2;  //  drop  0x  if  (str.startsWith(   "-   "))  {  //  drop  -  hexDigits--;  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  	projects/Lang7/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.5773502691896258	449	449	1	replace	Integer  str  =  createInteger(str.length()  +  2);	      Integer    str    =    createInteger(str.length());    	non-compiled	[CE]  illegal  start  of  type	5	None	replace
12	[BUG]  [BUGGY]  Integer  str  =  createInteger(str.length()  +  1);  [CE]  illegal  start  of  type  [FE]                      AssertionError    [CONTEXT]    public  static  Number  createNumber(String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {  return  null;  }    [BUGGY]  Integer  str  =  createInteger(str.length()  +  1);  [BUGGY]    if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(   "A  blank  string  is  not  a  valid  number   ");  }  if  (str.startsWith(   "--   "))  {  return  null;  }  if  (str.startsWith(   "0x   ")  ||  str.startsWith(   "-0x   ")  ||  str.startsWith(   "0X   ")  ||  str.startsWith(   "-0X   "))  {  int  hexDigits  =  str.length()  -  2;  //  drop  0x  if  (str.startsWith(   "-   "))  {  //  drop  -  hexDigits--;  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  	projects/Lang7/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.5773502691896258	449	449	1	replace	Integer  str  =  createInteger(str.length()  +  1);	      Integer    str    =    createInteger(str.length());    	non-compiled	[CE]  illegal  start  of  type	5	None	replace
13	[BUG]  [BUGGY]  Integer  str  =  createInteger(0);  [CE]  illegal  start  of  type  [FE]            AssertionError    [CONTEXT]    public  static  Number  createNumber(String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {  return  null;  }    [BUGGY]  Integer  str  =  createInteger(0);  [BUGGY]    if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(   "A  blank  string  is  not  a  valid  number   ");  }  if  (str.startsWith(   "--   "))  {  return  null;  }  if  (str.startsWith(   "0x   ")  ||  str.startsWith(   "-0x   ")  ||  str.startsWith(   "0X   ")  ||  str.startsWith(   "-0X   "))  {  int  hexDigits  =  str.length()  -  2;  //  drop  0x  if  (str.startsWith(   "-   "))  {  //  drop  -  hexDigits--;  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  	projects/Lang7/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.5773502691896258	449	449	1	replace	Integer  str  =  createInteger(0);	      Integer    str    =    createInteger(str);    	non-compiled	[CE]  illegal  start  of  type	3	None	replace
14	[BUG]  [BUGGY]  Integer  str  =  createInteger(str.substring(1));  [CE]  illegal  start  of  type  [FE]              AssertionError    [CONTEXT]    public  static  Number  createNumber(String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {  return  null;  }    [BUGGY]  Integer  str  =  createInteger(str.substring(1));  [BUGGY]    if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(   "A  blank  string  is  not  a  valid  number   ");  }  if  (str.startsWith(   "--   "))  {  return  null;  }  if  (str.startsWith(   "0x   ")  ||  str.startsWith(   "-0x   ")  ||  str.startsWith(   "0X   ")  ||  str.startsWith(   "-0X   "))  {  int  hexDigits  =  str.length()  -  2;  //  drop  0x  if  (str.startsWith(   "-   "))  {  //  drop  -  hexDigits--;  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  	projects/Lang7/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.5773502691896258	449	449	1	replace	Integer  str  =  createInteger(str.substring(1));	      Integer    str    =    createInteger(str);    	non-compiled	[CE]  illegal  start  of  type	3	None	replace
15	[BUG]  [BUGGY]  int  str  =  str.length()  -  2;  [CE]  illegal  start  of  type  [FE]          AssertionError    [CONTEXT]    public  static  Number  createNumber(String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {  return  null;  }    [BUGGY]  int  str  =  str.length()  -  2;  [BUGGY]    if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(   "A  blank  string  is  not  a  valid  number   ");  }  if  (str.startsWith(   "--   "))  {  return  null;  }  if  (str.startsWith(   "0x   ")  ||  str.startsWith(   "-0x   ")  ||  str.startsWith(   "0X   ")  ||  str.startsWith(   "-0X   "))  {  int  hexDigits  =  str.length()  -  2;  //  drop  0x  if  (str.startsWith(   "-   "))  {  //  drop  -  hexDigits--;  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  	projects/Lang7/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.5773502691896258	449	449	1	replace	int  str  =  str.length()  -  2;	      int    str    =    str.length();    	non-compiled	[CE]  illegal  start  of  type	14	None	replace
16	[BUG]  [BUGGY]  int  str  =  str.length()  +  2;  [CE]  illegal  start  of  type  [FE]            AssertionError    [CONTEXT]    public  static  Number  createNumber(String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {  return  null;  }    [BUGGY]  int  str  =  str.length()  +  2;  [BUGGY]    if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(   "A  blank  string  is  not  a  valid  number   ");  }  if  (str.startsWith(   "--   "))  {  return  null;  }  if  (str.startsWith(   "0x   ")  ||  str.startsWith(   "-0x   ")  ||  str.startsWith(   "0X   ")  ||  str.startsWith(   "-0X   "))  {  int  hexDigits  =  str.length()  -  2;  //  drop  0x  if  (str.startsWith(   "-   "))  {  //  drop  -  hexDigits--;  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  	projects/Lang7/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.5773502691896258	449	449	1	replace	int  str  =  str.length()  +  2;	      int    str    =    str.length();    	non-compiled	[CE]  illegal  start  of  type	14	None	replace
17	[BUG]  [BUGGY]  int  str  =  str.length()  +  1;  [CE]  illegal  start  of  type  [FE]              AssertionError    [CONTEXT]    public  static  Number  createNumber(String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {  return  null;  }    [BUGGY]  int  str  =  str.length()  +  1;  [BUGGY]    if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(   "A  blank  string  is  not  a  valid  number   ");  }  if  (str.startsWith(   "--   "))  {  return  null;  }  if  (str.startsWith(   "0x   ")  ||  str.startsWith(   "-0x   ")  ||  str.startsWith(   "0X   ")  ||  str.startsWith(   "-0X   "))  {  int  hexDigits  =  str.length()  -  2;  //  drop  0x  if  (str.startsWith(   "-   "))  {  //  drop  -  hexDigits--;  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  	projects/Lang7/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.5773502691896258	449	449	1	replace	int  str  =  str.length()  +  1;	      int    str    =    str.length();    	non-compiled	[CE]  illegal  start  of  type	14	None	replace
18	[BUG]  [BUGGY]  if(StringUtils.isEmpty(str)||  StringUtils.isEmpty(str))  {  [CE]  unreachable  statement  [FE]        AssertionError    [CONTEXT]    public  static  Number  createNumber(String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {  return  null;  }    [BUGGY]  if(StringUtils.isEmpty(str)||  StringUtils.isEmpty(str))  {  [BUGGY]    throw  new  NumberFormatException(   "A  blank  string  is  not  a  valid  number   ");  }  if  (str.startsWith(   "--   "))  {  return  null;  }  if  (str.startsWith(   "0x   ")  ||  str.startsWith(   "-0x   ")  ||  str.startsWith(   "0X   ")  ||  str.startsWith(   "-0X   "))  {  int  hexDigits  =  str.length()  -  2;  //  drop  0x  if  (str.startsWith(   "-   "))  {  //  drop  -  hexDigits--;  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  	projects/Lang7/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.5773502691896258	449	449	1	replace	if(StringUtils.isEmpty(str)||  StringUtils.isEmpty(str))  {	  if(StringUtils.isBlank(str)||    StringUtils.isEmpty(str))    {    	non-compiled	[CE]  unreachable  statement	6	None	replace
19	[BUG]  [BUGGY]  [FE]  NumberFormatException  [FE]          AssertionError    [CONTEXT]    public  static  Number  createNumber(String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {  return  null;  }    [BUGGY]  if(StringUtils.isEmpty(str)||  StringUtils.isBlank(str))  {  [BUGGY]    throw  new  NumberFormatException(   "A  blank  string  is  not  a  valid  number   ");  }  if  (str.startsWith(   "--   "))  {  return  null;  }  if  (str.startsWith(   "0x   ")  ||  str.startsWith(   "-0x   ")  ||  str.startsWith(   "0X   ")  ||  str.startsWith(   "-0X   "))  {  int  hexDigits  =  str.length()  -  2;  //  drop  0x  if  (str.startsWith(   "-   "))  {  //  drop  -  hexDigits--;  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  	projects/Lang7/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.5773502691896258	449	449	1	add	if(StringUtils.isEmpty(str)||  StringUtils.isBlank(str))  {	  if(StringUtils.isBlank(str)||    StringUtils.isEmpty(str))    {    	compilable	  [FE]  NumberFormatException  	6	1	replace
20	[BUG]  [BUGGY]  if(StringUtils.isEmpty(str)||  StringUtils.isBlank(str))  {  [FE]  NumberFormatException  [FE]          AssertionError    [CONTEXT]    public  static  Number  createNumber(String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {  return  null;  }    [BUGGY]  if(StringUtils.isEmpty(str)||  StringUtils.isBlank(str))  {  [BUGGY]    throw  new  NumberFormatException(   "A  blank  string  is  not  a  valid  number   ");  }  if  (str.startsWith(   "--   "))  {  return  null;  }  if  (str.startsWith(   "0x   ")  ||  str.startsWith(   "-0x   ")  ||  str.startsWith(   "0X   ")  ||  str.startsWith(   "-0X   "))  {  int  hexDigits  =  str.length()  -  2;  //  drop  0x  if  (str.startsWith(   "-   "))  {  //  drop  -  hexDigits--;  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  	projects/Lang7/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.5773502691896258	449	449	1	replace	if(StringUtils.isEmpty(str)||  StringUtils.isBlank(str))  {	  if(StringUtils.isBlank(str)||    StringUtils.isEmpty(str))    {    	compilable	  [FE]  NumberFormatException  	6	1	replace
21	[BUG]  [BUGGY]  [FE]  NumberFormatException  [FE]            AssertionError    [CONTEXT]    public  static  Number  createNumber(String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {  return  null;  }    [BUGGY]  if(StringUtils.isBlank(str)||  StringUtils.isEmpty(str)||  str.length()  ==  0)  {  [BUGGY]    throw  new  NumberFormatException(   "A  blank  string  is  not  a  valid  number   ");  }  if  (str.startsWith(   "--   "))  {  return  null;  }  if  (str.startsWith(   "0x   ")  ||  str.startsWith(   "-0x   ")  ||  str.startsWith(   "0X   ")  ||  str.startsWith(   "-0X   "))  {  int  hexDigits  =  str.length()  -  2;  //  drop  0x  if  (str.startsWith(   "-   "))  {  //  drop  -  hexDigits--;  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  	projects/Lang7/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.5773502691896258	449	449	1	add	if(StringUtils.isBlank(str)||  StringUtils.isEmpty(str)||  str.length()  ==  0)  {	  if(StringUtils.isBlank(str)||    StringUtils.isEmpty(str))    {    	compilable	  [FE]  NumberFormatException  	6	1	replace
22	[BUG]  [BUGGY]  if(StringUtils.isBlank(str)||  StringUtils.isEmpty(str)||  str.length()  ==  0)  {  [FE]  NumberFormatException  [FE]            AssertionError    [CONTEXT]    public  static  Number  createNumber(String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {  return  null;  }    [BUGGY]  if(StringUtils.isBlank(str)||  StringUtils.isEmpty(str)||  str.length()  ==  0)  {  [BUGGY]    throw  new  NumberFormatException(   "A  blank  string  is  not  a  valid  number   ");  }  if  (str.startsWith(   "--   "))  {  return  null;  }  if  (str.startsWith(   "0x   ")  ||  str.startsWith(   "-0x   ")  ||  str.startsWith(   "0X   ")  ||  str.startsWith(   "-0X   "))  {  int  hexDigits  =  str.length()  -  2;  //  drop  0x  if  (str.startsWith(   "-   "))  {  //  drop  -  hexDigits--;  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  	projects/Lang7/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.5773502691896258	449	449	1	replace	if(StringUtils.isBlank(str)||  StringUtils.isEmpty(str)||  str.length()  ==  0)  {	  if(StringUtils.isBlank(str)||    StringUtils.isEmpty(str))    {    	compilable	  [FE]  NumberFormatException  	6	1	replace
23	[BUG]  [BUGGY]  [FE]  NumberFormatException  [FE]          AssertionError    [CONTEXT]    public  static  Number  createNumber(String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {  return  null;  }    [BUGGY]  if(!StringUtils.isBlank(str)||  StringUtils.isBlank(str))  {  [BUGGY]    throw  new  NumberFormatException(   "A  blank  string  is  not  a  valid  number   ");  }  if  (str.startsWith(   "--   "))  {  return  null;  }  if  (str.startsWith(   "0x   ")  ||  str.startsWith(   "-0x   ")  ||  str.startsWith(   "0X   ")  ||  str.startsWith(   "-0X   "))  {  int  hexDigits  =  str.length()  -  2;  //  drop  0x  if  (str.startsWith(   "-   "))  {  //  drop  -  hexDigits--;  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  	projects/Lang7/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.5773502691896258	449	449	1	add	if(!StringUtils.isBlank(str)||  StringUtils.isBlank(str))  {	  if(StringUtils.isBlank(str)||    StringUtils.isBlank(str))    {    	compilable	  [FE]  NumberFormatException  	7	1	replace
24	[BUG]  [BUGGY]  if(!StringUtils.isBlank(str)||  StringUtils.isBlank(str))  {  [FE]  NumberFormatException  [FE]          AssertionError    [CONTEXT]    public  static  Number  createNumber(String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {  return  null;  }    [BUGGY]  if(!StringUtils.isBlank(str)||  StringUtils.isBlank(str))  {  [BUGGY]    throw  new  NumberFormatException(   "A  blank  string  is  not  a  valid  number   ");  }  if  (str.startsWith(   "--   "))  {  return  null;  }  if  (str.startsWith(   "0x   ")  ||  str.startsWith(   "-0x   ")  ||  str.startsWith(   "0X   ")  ||  str.startsWith(   "-0X   "))  {  int  hexDigits  =  str.length()  -  2;  //  drop  0x  if  (str.startsWith(   "-   "))  {  //  drop  -  hexDigits--;  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  	projects/Lang7/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.5773502691896258	449	449	1	replace	if(!StringUtils.isBlank(str)||  StringUtils.isBlank(str))  {	  if(StringUtils.isBlank(str)||    StringUtils.isBlank(str))    {    	compilable	  [FE]  NumberFormatException  	7	1	replace
25	[BUG]  [BUGGY]  int  decPos  =  str.length()  -  2;  [CE]  illegal  start  of  type  [FE]    NumberFormatException    [CONTEXT]    public  static  Number  createNumber(String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {  return  null;  }    [BUGGY]  int  decPos  =  str.length()  -  2;  [BUGGY]    if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(   "A  blank  string  is  not  a  valid  number   ");  }  if  (str.startsWith(   "--   "))  {  return  null;  }  if  (str.startsWith(   "0x   ")  ||  str.startsWith(   "-0x   ")  ||  str.startsWith(   "0X   ")  ||  str.startsWith(   "-0X   "))  {  int  hexDigits  =  str.length()  -  2;  //  drop  0x  if  (str.startsWith(   "-   "))  {  //  drop  -  hexDigits--;  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  	projects/Lang7/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.5773502691896258	449	449	1	replace	int  decPos  =  str.length()  -  2;	      int    decPos    =    str.length();    	non-compiled	[CE]  illegal  start  of  type	13	None	replace
26	[BUG]  [BUGGY]  int  decPos  =  str.length()  +  2;  [CE]  illegal  start  of  type  [FE]      NumberFormatException    [CONTEXT]    public  static  Number  createNumber(String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {  return  null;  }    [BUGGY]  int  decPos  =  str.length()  +  2;  [BUGGY]    if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(   "A  blank  string  is  not  a  valid  number   ");  }  if  (str.startsWith(   "--   "))  {  return  null;  }  if  (str.startsWith(   "0x   ")  ||  str.startsWith(   "-0x   ")  ||  str.startsWith(   "0X   ")  ||  str.startsWith(   "-0X   "))  {  int  hexDigits  =  str.length()  -  2;  //  drop  0x  if  (str.startsWith(   "-   "))  {  //  drop  -  hexDigits--;  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  	projects/Lang7/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.5773502691896258	449	449	1	replace	int  decPos  =  str.length()  +  2;	      int    decPos    =    str.length();    	non-compiled	[CE]  illegal  start  of  type	13	None	replace
27	[BUG]  [BUGGY]  int  decPos  =  str.length()  +  1;  [CE]  illegal  start  of  type  [FE]        NumberFormatException    [CONTEXT]    public  static  Number  createNumber(String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {  return  null;  }    [BUGGY]  int  decPos  =  str.length()  +  1;  [BUGGY]    if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(   "A  blank  string  is  not  a  valid  number   ");  }  if  (str.startsWith(   "--   "))  {  return  null;  }  if  (str.startsWith(   "0x   ")  ||  str.startsWith(   "-0x   ")  ||  str.startsWith(   "0X   ")  ||  str.startsWith(   "-0X   "))  {  int  hexDigits  =  str.length()  -  2;  //  drop  0x  if  (str.startsWith(   "-   "))  {  //  drop  -  hexDigits--;  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  	projects/Lang7/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.5773502691896258	449	449	1	replace	int  decPos  =  str.length()  +  1;	      int    decPos    =    str.length();    	non-compiled	[CE]  illegal  start  of  type	13	None	replace
28	[BUG]  [BUGGY]  int  decPos  =  str.length()  -  1;  [CE]  illegal  start  of  type  [FE]          NumberFormatException    [CONTEXT]    public  static  Number  createNumber(String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {  return  null;  }    [BUGGY]  int  decPos  =  str.length()  -  1;  [BUGGY]    if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(   "A  blank  string  is  not  a  valid  number   ");  }  if  (str.startsWith(   "--   "))  {  return  null;  }  if  (str.startsWith(   "0x   ")  ||  str.startsWith(   "-0x   ")  ||  str.startsWith(   "0X   ")  ||  str.startsWith(   "-0X   "))  {  int  hexDigits  =  str.length()  -  2;  //  drop  0x  if  (str.startsWith(   "-   "))  {  //  drop  -  hexDigits--;  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  	projects/Lang7/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.5773502691896258	449	449	1	replace	int  decPos  =  str.length()  -  1;	      int    decPos    =    str.length();    	non-compiled	[CE]  illegal  start  of  type	13	None	replace
29	[BUG]  [BUGGY]  int  hexDigits  =  str.lastIndexOf('.',  1);  [CE]  illegal  start  of  type  [FE]    NumberFormatException    [CONTEXT]    public  static  Number  createNumber(String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {  return  null;  }    [BUGGY]  int  hexDigits  =  str.lastIndexOf('.',  1);  [BUGGY]    if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(   "A  blank  string  is  not  a  valid  number   ");  }  if  (str.startsWith(   "--   "))  {  return  null;  }  if  (str.startsWith(   "0x   ")  ||  str.startsWith(   "-0x   ")  ||  str.startsWith(   "0X   ")  ||  str.startsWith(   "-0X   "))  {  int  hexDigits  =  str.length()  -  2;  //  drop  0x  if  (str.startsWith(   "-   "))  {  //  drop  -  hexDigits--;  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  	projects/Lang7/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.5773502691896258	449	449	1	replace	int  hexDigits  =  str.lastIndexOf('.',  1);	      int    hexDigits    =    str.lastIndexOf('.');    	non-compiled	[CE]  illegal  start  of  type	9	None	replace
30	[BUG]  [BUGGY]  int  hexDigits  =  str.lastIndexOf('.',  4);  [CE]  illegal  start  of  type  [FE]      NumberFormatException    [CONTEXT]    public  static  Number  createNumber(String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {  return  null;  }    [BUGGY]  int  hexDigits  =  str.lastIndexOf('.',  4);  [BUGGY]    if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(   "A  blank  string  is  not  a  valid  number   ");  }  if  (str.startsWith(   "--   "))  {  return  null;  }  if  (str.startsWith(   "0x   ")  ||  str.startsWith(   "-0x   ")  ||  str.startsWith(   "0X   ")  ||  str.startsWith(   "-0X   "))  {  int  hexDigits  =  str.length()  -  2;  //  drop  0x  if  (str.startsWith(   "-   "))  {  //  drop  -  hexDigits--;  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  	projects/Lang7/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.5773502691896258	449	449	1	replace	int  hexDigits  =  str.lastIndexOf('.',  4);	      int    hexDigits    =    str.lastIndexOf('.');    	non-compiled	[CE]  illegal  start  of  type	9	None	replace
31	[BUG]  [BUGGY]  int  hexDigits  =  str.lastIndexOf('.',  2);  [CE]  illegal  start  of  type  [FE]        NumberFormatException    [CONTEXT]    public  static  Number  createNumber(String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {  return  null;  }    [BUGGY]  int  hexDigits  =  str.lastIndexOf('.',  2);  [BUGGY]    if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(   "A  blank  string  is  not  a  valid  number   ");  }  if  (str.startsWith(   "--   "))  {  return  null;  }  if  (str.startsWith(   "0x   ")  ||  str.startsWith(   "-0x   ")  ||  str.startsWith(   "0X   ")  ||  str.startsWith(   "-0X   "))  {  int  hexDigits  =  str.length()  -  2;  //  drop  0x  if  (str.startsWith(   "-   "))  {  //  drop  -  hexDigits--;  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  	projects/Lang7/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.5773502691896258	449	449	1	replace	int  hexDigits  =  str.lastIndexOf('.',  2);	      int    hexDigits    =    str.lastIndexOf('.');    	non-compiled	[CE]  illegal  start  of  type	9	None	replace
32	[BUG]  [BUGGY]  if(!StringUtils.isEmpty(str))  {  [CE]  variable  str  is  already  defined  in  method  createNumber(String)  [FE]          AssertionError    [CONTEXT]    public  static  Number  createNumber(String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {  return  null;  }    [BUGGY]  if(!StringUtils.isEmpty(str))  {  [BUGGY]    throw  new  NumberFormatException(   "A  blank  string  is  not  a  valid  number   ");  }  if  (str.startsWith(   "--   "))  {  return  null;  }  if  (str.startsWith(   "0x   ")  ||  str.startsWith(   "-0x   ")  ||  str.startsWith(   "0X   ")  ||  str.startsWith(   "-0X   "))  {  int  hexDigits  =  str.length()  -  2;  //  drop  0x  if  (str.startsWith(   "-   "))  {  //  drop  -  hexDigits--;  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  	projects/Lang7/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.5773502691896258	449	449	1	replace	if(!StringUtils.isEmpty(str))  {	  if(!StringUtils.isBlank(str))    {    	non-compiled	[CE]  variable  str  is  already  defined  in  method  createNumber(String)	11	None	replace
33	[BUG]  [BUGGY]  if(str  ==  null  ||!StringUtils.isBlank(str))  {  [CE]  variable  str  is  already  defined  in  method  createNumber(String)  [FE]            AssertionError    [CONTEXT]    public  static  Number  createNumber(String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {  return  null;  }    [BUGGY]  if(str  ==  null  ||!StringUtils.isBlank(str))  {  [BUGGY]    throw  new  NumberFormatException(   "A  blank  string  is  not  a  valid  number   ");  }  if  (str.startsWith(   "--   "))  {  return  null;  }  if  (str.startsWith(   "0x   ")  ||  str.startsWith(   "-0x   ")  ||  str.startsWith(   "0X   ")  ||  str.startsWith(   "-0X   "))  {  int  hexDigits  =  str.length()  -  2;  //  drop  0x  if  (str.startsWith(   "-   "))  {  //  drop  -  hexDigits--;  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  	projects/Lang7/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.5773502691896258	449	449	1	replace	if(str  ==  null  ||!StringUtils.isBlank(str))  {	  if(!StringUtils.isBlank(str))    {    	non-compiled	[CE]  variable  str  is  already  defined  in  method  createNumber(String)	11	None	replace
34	[BUG]  [BUGGY]  if(!StringUtils.isBlank(str)||!StringUtils.isEmpty(str))  {  [CE]  variable  str  is  already  defined  in  method  createNumber(String)  [FE]              AssertionError    [CONTEXT]    public  static  Number  createNumber(String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {  return  null;  }    [BUGGY]  if(!StringUtils.isBlank(str)||!StringUtils.isEmpty(str))  {  [BUGGY]    throw  new  NumberFormatException(   "A  blank  string  is  not  a  valid  number   ");  }  if  (str.startsWith(   "--   "))  {  return  null;  }  if  (str.startsWith(   "0x   ")  ||  str.startsWith(   "-0x   ")  ||  str.startsWith(   "0X   ")  ||  str.startsWith(   "-0X   "))  {  int  hexDigits  =  str.length()  -  2;  //  drop  0x  if  (str.startsWith(   "-   "))  {  //  drop  -  hexDigits--;  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  	projects/Lang7/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.5773502691896258	449	449	1	replace	if(!StringUtils.isBlank(str)||!StringUtils.isEmpty(str))  {	  if(!StringUtils.isBlank(str))    {    	non-compiled	[CE]  variable  str  is  already  defined  in  method  createNumber(String)	11	None	replace
35	[BUG]  [BUGGY]  if(str.length()  ==  0  ||!StringUtils.isBlank(str))  {  [CE]  variable  str  is  already  defined  in  method  createNumber(String)  [FE]                AssertionError    [CONTEXT]    public  static  Number  createNumber(String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {  return  null;  }    [BUGGY]  if(str.length()  ==  0  ||!StringUtils.isBlank(str))  {  [BUGGY]    throw  new  NumberFormatException(   "A  blank  string  is  not  a  valid  number   ");  }  if  (str.startsWith(   "--   "))  {  return  null;  }  if  (str.startsWith(   "0x   ")  ||  str.startsWith(   "-0x   ")  ||  str.startsWith(   "0X   ")  ||  str.startsWith(   "-0X   "))  {  int  hexDigits  =  str.length()  -  2;  //  drop  0x  if  (str.startsWith(   "-   "))  {  //  drop  -  hexDigits--;  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  	projects/Lang7/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.5773502691896258	449	449	1	replace	if(str.length()  ==  0  ||!StringUtils.isBlank(str))  {	  if(!StringUtils.isBlank(str))    {    	non-compiled	[CE]  variable  str  is  already  defined  in  method  createNumber(String)	11	None	replace
36	[BUG]  [BUGGY]  Number  str  =  createNumber(str,  hexDigits);  [CE]  illegal  start  of  type  [FE]          AssertionError    [CONTEXT]    public  static  Number  createNumber(String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {  return  null;  }    [BUGGY]  Number  str  =  createNumber(str,  hexDigits);  [BUGGY]    if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(   "A  blank  string  is  not  a  valid  number   ");  }  if  (str.startsWith(   "--   "))  {  return  null;  }  if  (str.startsWith(   "0x   ")  ||  str.startsWith(   "-0x   ")  ||  str.startsWith(   "0X   ")  ||  str.startsWith(   "-0X   "))  {  int  hexDigits  =  str.length()  -  2;  //  drop  0x  if  (str.startsWith(   "-   "))  {  //  drop  -  hexDigits--;  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  	projects/Lang7/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.5773502691896258	449	449	1	replace	Number  str  =  createNumber(str,  hexDigits);	      Number    str    =    createNumber(str);    	non-compiled	[CE]  illegal  start  of  type	2	None	replace
37	[BUG]  [BUGGY]  Number  str  =  createNumber(str.substring(0,  str.length()  -  1));  [CE]  illegal  start  of  type  [FE]            AssertionError    [CONTEXT]    public  static  Number  createNumber(String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {  return  null;  }    [BUGGY]  Number  str  =  createNumber(str.substring(0,  str.length()  -  1));  [BUGGY]    if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(   "A  blank  string  is  not  a  valid  number   ");  }  if  (str.startsWith(   "--   "))  {  return  null;  }  if  (str.startsWith(   "0x   ")  ||  str.startsWith(   "-0x   ")  ||  str.startsWith(   "0X   ")  ||  str.startsWith(   "-0X   "))  {  int  hexDigits  =  str.length()  -  2;  //  drop  0x  if  (str.startsWith(   "-   "))  {  //  drop  -  hexDigits--;  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  	projects/Lang7/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.5773502691896258	449	449	1	replace	Number  str  =  createNumber(str.substring(0,  str.length()  -  1));	      Number    str    =    createNumber(str);    	non-compiled	[CE]  illegal  start  of  type	2	None	replace
38	[BUG]  [BUGGY]  Number  str  =  createNumber(str.substring(0,  str.length()  -  2));  [CE]  illegal  start  of  type  [FE]              AssertionError    [CONTEXT]    public  static  Number  createNumber(String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {  return  null;  }    [BUGGY]  Number  str  =  createNumber(str.substring(0,  str.length()  -  2));  [BUGGY]    if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(   "A  blank  string  is  not  a  valid  number   ");  }  if  (str.startsWith(   "--   "))  {  return  null;  }  if  (str.startsWith(   "0x   ")  ||  str.startsWith(   "-0x   ")  ||  str.startsWith(   "0X   ")  ||  str.startsWith(   "-0X   "))  {  int  hexDigits  =  str.length()  -  2;  //  drop  0x  if  (str.startsWith(   "-   "))  {  //  drop  -  hexDigits--;  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  	projects/Lang7/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.5773502691896258	449	449	1	replace	Number  str  =  createNumber(str.substring(0,  str.length()  -  2));	      Number    str    =    createNumber(str);    	non-compiled	[CE]  illegal  start  of  type	2	None	replace
39	[BUG]  [BUGGY]  Number  str  =  createNumber(str.substring(1));  [CE]  illegal  start  of  type  [FE]                AssertionError    [CONTEXT]    public  static  Number  createNumber(String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {  return  null;  }    [BUGGY]  Number  str  =  createNumber(str.substring(1));  [BUGGY]    if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(   "A  blank  string  is  not  a  valid  number   ");  }  if  (str.startsWith(   "--   "))  {  return  null;  }  if  (str.startsWith(   "0x   ")  ||  str.startsWith(   "-0x   ")  ||  str.startsWith(   "0X   ")  ||  str.startsWith(   "-0X   "))  {  int  hexDigits  =  str.length()  -  2;  //  drop  0x  if  (str.startsWith(   "-   "))  {  //  drop  -  hexDigits--;  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  	projects/Lang7/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.5773502691896258	449	449	1	replace	Number  str  =  createNumber(str.substring(1));	      Number    str    =    createNumber(str);    	non-compiled	[CE]  illegal  start  of  type	2	None	replace
40	[BUG]  [BUGGY]  Number  str  =  getNumber(str,  hexDigits);  [CE]  illegal  start  of  type  [FE]              AssertionError    [CONTEXT]    public  static  Number  createNumber(String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {  return  null;  }    [BUGGY]  Number  str  =  getNumber(str,  hexDigits);  [BUGGY]    if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(   "A  blank  string  is  not  a  valid  number   ");  }  if  (str.startsWith(   "--   "))  {  return  null;  }  if  (str.startsWith(   "0x   ")  ||  str.startsWith(   "-0x   ")  ||  str.startsWith(   "0X   ")  ||  str.startsWith(   "-0X   "))  {  int  hexDigits  =  str.length()  -  2;  //  drop  0x  if  (str.startsWith(   "-   "))  {  //  drop  -  hexDigits--;  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  	projects/Lang7/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.5773502691896258	449	449	1	replace	Number  str  =  getNumber(str,  hexDigits);	      Number    str    =    getNumber(str);    	non-compiled	[CE]  illegal  start  of  type	4	None	replace
41	[BUG]  [BUGGY]  Number  str  =  getNumber(str,  0);  [CE]  illegal  start  of  type  [FE]                AssertionError    [CONTEXT]    public  static  Number  createNumber(String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {  return  null;  }    [BUGGY]  Number  str  =  getNumber(str,  0);  [BUGGY]    if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(   "A  blank  string  is  not  a  valid  number   ");  }  if  (str.startsWith(   "--   "))  {  return  null;  }  if  (str.startsWith(   "0x   ")  ||  str.startsWith(   "-0x   ")  ||  str.startsWith(   "0X   ")  ||  str.startsWith(   "-0X   "))  {  int  hexDigits  =  str.length()  -  2;  //  drop  0x  if  (str.startsWith(   "-   "))  {  //  drop  -  hexDigits--;  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  	projects/Lang7/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.5773502691896258	449	449	1	replace	Number  str  =  getNumber(str,  0);	      Number    str    =    getNumber(str);    	non-compiled	[CE]  illegal  start  of  type	4	None	replace
42	[BUG]  [BUGGY]  Number  str  =  getNumber(str.substring(1));  [CE]  illegal  start  of  type  [FE]                  AssertionError    [CONTEXT]    public  static  Number  createNumber(String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {  return  null;  }    [BUGGY]  Number  str  =  getNumber(str.substring(1));  [BUGGY]    if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(   "A  blank  string  is  not  a  valid  number   ");  }  if  (str.startsWith(   "--   "))  {  return  null;  }  if  (str.startsWith(   "0x   ")  ||  str.startsWith(   "-0x   ")  ||  str.startsWith(   "0X   ")  ||  str.startsWith(   "-0X   "))  {  int  hexDigits  =  str.length()  -  2;  //  drop  0x  if  (str.startsWith(   "-   "))  {  //  drop  -  hexDigits--;  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  	projects/Lang7/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.5773502691896258	449	449	1	replace	Number  str  =  getNumber(str.substring(1));	      Number    str    =    getNumber(str);    	non-compiled	[CE]  illegal  start  of  type	4	None	replace
43	[BUG]  [BUGGY]  int  str  =  str.indexOf('.',  0);  [CE]  illegal  start  of  type  [FE]            AssertionError    [CONTEXT]    public  static  Number  createNumber(String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {  return  null;  }    [BUGGY]  int  str  =  str.indexOf('.',  0);  [BUGGY]    if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(   "A  blank  string  is  not  a  valid  number   ");  }  if  (str.startsWith(   "--   "))  {  return  null;  }  if  (str.startsWith(   "0x   ")  ||  str.startsWith(   "-0x   ")  ||  str.startsWith(   "0X   ")  ||  str.startsWith(   "-0X   "))  {  int  hexDigits  =  str.length()  -  2;  //  drop  0x  if  (str.startsWith(   "-   "))  {  //  drop  -  hexDigits--;  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  	projects/Lang7/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.5773502691896258	449	449	1	replace	int  str  =  str.indexOf('.',  0);	      int    str    =    str.indexOf('.');    	non-compiled	[CE]  illegal  start  of  type	15	None	replace
44	[BUG]  [BUGGY]  int  str  =  str.lastIndexOf('.');  [CE]  illegal  start  of  type  [FE]              AssertionError    [CONTEXT]    public  static  Number  createNumber(String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {  return  null;  }    [BUGGY]  int  str  =  str.lastIndexOf('.');  [BUGGY]    if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(   "A  blank  string  is  not  a  valid  number   ");  }  if  (str.startsWith(   "--   "))  {  return  null;  }  if  (str.startsWith(   "0x   ")  ||  str.startsWith(   "-0x   ")  ||  str.startsWith(   "0X   ")  ||  str.startsWith(   "-0X   "))  {  int  hexDigits  =  str.length()  -  2;  //  drop  0x  if  (str.startsWith(   "-   "))  {  //  drop  -  hexDigits--;  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  	projects/Lang7/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.5773502691896258	449	449	1	replace	int  str  =  str.lastIndexOf('.');	      int    str    =    str.indexOf('.');    	non-compiled	[CE]  illegal  start  of  type	15	None	replace
45	[BUG]  [BUGGY]  int  str  =  str.indexOf('.',  1);  [CE]  illegal  start  of  type  [FE]                AssertionError    [CONTEXT]    public  static  Number  createNumber(String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {  return  null;  }    [BUGGY]  int  str  =  str.indexOf('.',  1);  [BUGGY]    if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(   "A  blank  string  is  not  a  valid  number   ");  }  if  (str.startsWith(   "--   "))  {  return  null;  }  if  (str.startsWith(   "0x   ")  ||  str.startsWith(   "-0x   ")  ||  str.startsWith(   "0X   ")  ||  str.startsWith(   "-0X   "))  {  int  hexDigits  =  str.length()  -  2;  //  drop  0x  if  (str.startsWith(   "-   "))  {  //  drop  -  hexDigits--;  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  	projects/Lang7/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.5773502691896258	449	449	1	replace	int  str  =  str.indexOf('.',  1);	      int    str    =    str.indexOf('.');    	non-compiled	[CE]  illegal  start  of  type	15	None	replace
46	[BUG]  [BUGGY]  int  str  =  str.indexOf('.',  4);  [CE]  illegal  start  of  type  [FE]                  AssertionError    [CONTEXT]    public  static  Number  createNumber(String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {  return  null;  }    [BUGGY]  int  str  =  str.indexOf('.',  4);  [BUGGY]    if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(   "A  blank  string  is  not  a  valid  number   ");  }  if  (str.startsWith(   "--   "))  {  return  null;  }  if  (str.startsWith(   "0x   ")  ||  str.startsWith(   "-0x   ")  ||  str.startsWith(   "0X   ")  ||  str.startsWith(   "-0X   "))  {  int  hexDigits  =  str.length()  -  2;  //  drop  0x  if  (str.startsWith(   "-   "))  {  //  drop  -  hexDigits--;  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  	projects/Lang7/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.5773502691896258	449	449	1	replace	int  str  =  str.indexOf('.',  4);	      int    str    =    str.indexOf('.');    	non-compiled	[CE]  illegal  start  of  type	15	None	replace
47	[BUG]  [BUGGY]      int  decPos  =  str.indexOf('  ');  int  decPos  =  str.indexOf('  ');  [CE]  unclosed  character  literal  [FE]    NumberFormatException    [CONTEXT]    public  static  Number  createNumber(String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {  return  null;  }    [BUGGY]      int  decPos  =  str.indexOf('  ');  int  decPos  =  str.indexOf('  ');  [BUGGY]    if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(   "A  blank  string  is  not  a  valid  number   ");  }  if  (str.startsWith(   "--   "))  {  return  null;  }  if  (str.startsWith(   "0x   ")  ||  str.startsWith(   "-0x   ")  ||  str.startsWith(   "0X   ")  ||  str.startsWith(   "-0X   "))  {  int  hexDigits  =  str.length()  -  2;  //  drop  0x  if  (str.startsWith(   "-   "))  {  //  drop  -  hexDigits--;  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  	projects/Lang7/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.5773502691896258	449	449	1	replace	        int    decPos    =    str.indexOf('    ');    int  decPos  =  str.indexOf('  ');	  	non-compiled	[CE]  unclosed  character  literal	16	None	add
48	[BUG]  [BUGGY]      int  decPos  =  str.indexOf('  ');  Integer  decPos  =  str.indexOf('  ');  [CE]  unclosed  character  literal  [FE]      NumberFormatException    [CONTEXT]    public  static  Number  createNumber(String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {  return  null;  }    [BUGGY]      int  decPos  =  str.indexOf('  ');  Integer  decPos  =  str.indexOf('  ');  [BUGGY]    if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(   "A  blank  string  is  not  a  valid  number   ");  }  if  (str.startsWith(   "--   "))  {  return  null;  }  if  (str.startsWith(   "0x   ")  ||  str.startsWith(   "-0x   ")  ||  str.startsWith(   "0X   ")  ||  str.startsWith(   "-0X   "))  {  int  hexDigits  =  str.length()  -  2;  //  drop  0x  if  (str.startsWith(   "-   "))  {  //  drop  -  hexDigits--;  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  	projects/Lang7/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.5773502691896258	449	449	1	replace	        int    decPos    =    str.indexOf('    ');    Integer  decPos  =  str.indexOf('  ');	  	non-compiled	[CE]  unclosed  character  literal	16	None	add
49	[BUG]  [BUGGY]      int  decPos  =  str.indexOf('  ');  int  descPos  =  str.indexOf('  ');  [CE]  unclosed  character  literal  [FE]        NumberFormatException    [CONTEXT]    public  static  Number  createNumber(String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {  return  null;  }    [BUGGY]      int  decPos  =  str.indexOf('  ');  int  descPos  =  str.indexOf('  ');  [BUGGY]    if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(   "A  blank  string  is  not  a  valid  number   ");  }  if  (str.startsWith(   "--   "))  {  return  null;  }  if  (str.startsWith(   "0x   ")  ||  str.startsWith(   "-0x   ")  ||  str.startsWith(   "0X   ")  ||  str.startsWith(   "-0X   "))  {  int  hexDigits  =  str.length()  -  2;  //  drop  0x  if  (str.startsWith(   "-   "))  {  //  drop  -  hexDigits--;  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  	projects/Lang7/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.5773502691896258	449	449	1	replace	        int    decPos    =    str.indexOf('    ');    int  descPos  =  str.indexOf('  ');	  	non-compiled	[CE]  unclosed  character  literal	16	None	add
50	[BUG]  [BUGGY]  int  hexDigits  =  str.length()  -  2;  [CE]  unclosed  character  literal  [FE]        AssertionError    [CONTEXT]    public  static  Number  createNumber(String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {  return  null;  }    [BUGGY]  int  hexDigits  =  str.length()  -  2;  [BUGGY]    if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(   "A  blank  string  is  not  a  valid  number   ");  }  if  (str.startsWith(   "--   "))  {  return  null;  }  if  (str.startsWith(   "0x   ")  ||  str.startsWith(   "-0x   ")  ||  str.startsWith(   "0X   ")  ||  str.startsWith(   "-0X   "))  {  int  hexDigits  =  str.length()  -  2;  //  drop  0x  if  (str.startsWith(   "-   "))  {  //  drop  -  hexDigits--;  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  	projects/Lang7/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.5773502691896258	449	449	1	replace	int  hexDigits  =  str.length()  -  2;	      int    hexDigits    =    str.length();    	non-compiled	[CE]  unclosed  character  literal	1	None	replace
51	[BUG]  [BUGGY]  int  hexDigits  =  str.length()  +  2;  [CE]  unclosed  character  literal  [FE]          AssertionError    [CONTEXT]    public  static  Number  createNumber(String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {  return  null;  }    [BUGGY]  int  hexDigits  =  str.length()  +  2;  [BUGGY]    if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(   "A  blank  string  is  not  a  valid  number   ");  }  if  (str.startsWith(   "--   "))  {  return  null;  }  if  (str.startsWith(   "0x   ")  ||  str.startsWith(   "-0x   ")  ||  str.startsWith(   "0X   ")  ||  str.startsWith(   "-0X   "))  {  int  hexDigits  =  str.length()  -  2;  //  drop  0x  if  (str.startsWith(   "-   "))  {  //  drop  -  hexDigits--;  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  	projects/Lang7/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.5773502691896258	449	449	1	replace	int  hexDigits  =  str.length()  +  2;	      int    hexDigits    =    str.length();    	non-compiled	[CE]  unclosed  character  literal	1	None	replace
52	[BUG]  [BUGGY]  char  hexDigits  =  str.length();  [CE]  unclosed  character  literal  [FE]            AssertionError    [CONTEXT]    public  static  Number  createNumber(String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {  return  null;  }    [BUGGY]  char  hexDigits  =  str.length();  [BUGGY]    if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(   "A  blank  string  is  not  a  valid  number   ");  }  if  (str.startsWith(   "--   "))  {  return  null;  }  if  (str.startsWith(   "0x   ")  ||  str.startsWith(   "-0x   ")  ||  str.startsWith(   "0X   ")  ||  str.startsWith(   "-0X   "))  {  int  hexDigits  =  str.length()  -  2;  //  drop  0x  if  (str.startsWith(   "-   "))  {  //  drop  -  hexDigits--;  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  	projects/Lang7/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.5773502691896258	449	449	1	replace	char  hexDigits  =  str.length();	      int    hexDigits    =    str.length();    	non-compiled	[CE]  unclosed  character  literal	1	None	replace
53	[BUG]  [BUGGY]  Integer  hexDigits  =  str.length();  [CE]  unclosed  character  literal  [FE]              AssertionError    [CONTEXT]    public  static  Number  createNumber(String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {  return  null;  }    [BUGGY]  Integer  hexDigits  =  str.length();  [BUGGY]    if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(   "A  blank  string  is  not  a  valid  number   ");  }  if  (str.startsWith(   "--   "))  {  return  null;  }  if  (str.startsWith(   "0x   ")  ||  str.startsWith(   "-0x   ")  ||  str.startsWith(   "0X   ")  ||  str.startsWith(   "-0X   "))  {  int  hexDigits  =  str.length()  -  2;  //  drop  0x  if  (str.startsWith(   "-   "))  {  //  drop  -  hexDigits--;  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  	projects/Lang7/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.5773502691896258	449	449	1	replace	Integer  hexDigits  =  str.length();	      int    hexDigits    =    str.length();    	non-compiled	[CE]  unclosed  character  literal	1	None	replace
54	[BUG]  [BUGGY]  if(str  ==  null  ||  StringUtils.isEmpty(str))  {  [CE]  unclosed  character  literal  [FE]        AssertionError    [CONTEXT]    public  static  Number  createNumber(String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {  return  null;  }    [BUGGY]  if(str  ==  null  ||  StringUtils.isEmpty(str))  {  [BUGGY]    throw  new  NumberFormatException(   "A  blank  string  is  not  a  valid  number   ");  }  if  (str.startsWith(   "--   "))  {  return  null;  }  if  (str.startsWith(   "0x   ")  ||  str.startsWith(   "-0x   ")  ||  str.startsWith(   "0X   ")  ||  str.startsWith(   "-0X   "))  {  int  hexDigits  =  str.length()  -  2;  //  drop  0x  if  (str.startsWith(   "-   "))  {  //  drop  -  hexDigits--;  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  	projects/Lang7/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.5773502691896258	449	449	1	replace	if(str  ==  null  ||  StringUtils.isEmpty(str))  {	  if(str    ==    null    ||    StringUtils.isBlank(str))    {    	non-compiled	[CE]  unclosed  character  literal	10	None	replace
55	[BUG]  [BUGGY]  if(str  ==  null  ||  StringUtils.isBlank(str)||  str.length()  ==  0)  {  [CE]  unclosed  character  literal  [FE]          AssertionError    [CONTEXT]    public  static  Number  createNumber(String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {  return  null;  }    [BUGGY]  if(str  ==  null  ||  StringUtils.isBlank(str)||  str.length()  ==  0)  {  [BUGGY]    throw  new  NumberFormatException(   "A  blank  string  is  not  a  valid  number   ");  }  if  (str.startsWith(   "--   "))  {  return  null;  }  if  (str.startsWith(   "0x   ")  ||  str.startsWith(   "-0x   ")  ||  str.startsWith(   "0X   ")  ||  str.startsWith(   "-0X   "))  {  int  hexDigits  =  str.length()  -  2;  //  drop  0x  if  (str.startsWith(   "-   "))  {  //  drop  -  hexDigits--;  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  	projects/Lang7/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.5773502691896258	449	449	1	replace	if(str  ==  null  ||  StringUtils.isBlank(str)||  str.length()  ==  0)  {	  if(str    ==    null    ||    StringUtils.isBlank(str))    {    	non-compiled	[CE]  unclosed  character  literal	10	None	replace
56	[BUG]  [BUGGY]  if(str  ==  null  ||  StringUtils.isBlank(str)||  str.startsWith( "- "))  {  [CE]  unclosed  character  literal  [FE]            AssertionError    [CONTEXT]    public  static  Number  createNumber(String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {  return  null;  }    [BUGGY]  if(str  ==  null  ||  StringUtils.isBlank(str)||  str.startsWith( "- "))  {  [BUGGY]    throw  new  NumberFormatException(   "A  blank  string  is  not  a  valid  number   ");  }  if  (str.startsWith(   "--   "))  {  return  null;  }  if  (str.startsWith(   "0x   ")  ||  str.startsWith(   "-0x   ")  ||  str.startsWith(   "0X   ")  ||  str.startsWith(   "-0X   "))  {  int  hexDigits  =  str.length()  -  2;  //  drop  0x  if  (str.startsWith(   "-   "))  {  //  drop  -  hexDigits--;  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  	projects/Lang7/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.5773502691896258	449	449	1	replace	if(str  ==  null  ||  StringUtils.isBlank(str)||  str.startsWith( "- "))  {	  if(str    ==    null    ||    StringUtils.isBlank(str))    {    	non-compiled	[CE]  unclosed  character  literal	10	None	replace
57	[BUG]  [BUGGY]      int  decPos  =  str.length();  int  decPos  =  str.length();  [CE]  unclosed  character  literal  [FE]    NumberFormatException    [CONTEXT]    public  static  Number  createNumber(String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {  return  null;  }    [BUGGY]      int  decPos  =  str.length();  int  decPos  =  str.length();  [BUGGY]    if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(   "A  blank  string  is  not  a  valid  number   ");  }  if  (str.startsWith(   "--   "))  {  return  null;  }  if  (str.startsWith(   "0x   ")  ||  str.startsWith(   "-0x   ")  ||  str.startsWith(   "0X   ")  ||  str.startsWith(   "-0X   "))  {  int  hexDigits  =  str.length()  -  2;  //  drop  0x  if  (str.startsWith(   "-   "))  {  //  drop  -  hexDigits--;  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  	projects/Lang7/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.5773502691896258	449	449	1	replace	        int    decPos    =    str.length();    int  decPos  =  str.length();	  	non-compiled	[CE]  unclosed  character  literal	12	None	add
58	[BUG]  [BUGGY]      int  decPos  =  str.length();  Integer  decPos  =  str.length();  [CE]  unclosed  character  literal  [FE]      NumberFormatException    [CONTEXT]    public  static  Number  createNumber(String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {  return  null;  }    [BUGGY]      int  decPos  =  str.length();  Integer  decPos  =  str.length();  [BUGGY]    if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(   "A  blank  string  is  not  a  valid  number   ");  }  if  (str.startsWith(   "--   "))  {  return  null;  }  if  (str.startsWith(   "0x   ")  ||  str.startsWith(   "-0x   ")  ||  str.startsWith(   "0X   ")  ||  str.startsWith(   "-0X   "))  {  int  hexDigits  =  str.length()  -  2;  //  drop  0x  if  (str.startsWith(   "-   "))  {  //  drop  -  hexDigits--;  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  	projects/Lang7/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.5773502691896258	449	449	1	replace	        int    decPos    =    str.length();    Integer  decPos  =  str.length();	  	non-compiled	[CE]  unclosed  character  literal	12	None	add
59	[BUG]  [BUGGY]      int  decPos  =  str.length();  int  descPos  =  str.length();  [CE]  unclosed  character  literal  [FE]        NumberFormatException    [CONTEXT]    public  static  Number  createNumber(String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {  return  null;  }    [BUGGY]      int  decPos  =  str.length();  int  descPos  =  str.length();  [BUGGY]    if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(   "A  blank  string  is  not  a  valid  number   ");  }  if  (str.startsWith(   "--   "))  {  return  null;  }  if  (str.startsWith(   "0x   ")  ||  str.startsWith(   "-0x   ")  ||  str.startsWith(   "0X   ")  ||  str.startsWith(   "-0X   "))  {  int  hexDigits  =  str.length()  -  2;  //  drop  0x  if  (str.startsWith(   "-   "))  {  //  drop  -  hexDigits--;  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  	projects/Lang7/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.5773502691896258	449	449	1	replace	        int    decPos    =    str.length();    int  descPos  =  str.length();	  	non-compiled	[CE]  unclosed  character  literal	12	None	add
60	[BUG]  [BUGGY]      int  decPos  =  str.length();  int  lecPos  =  str.length();  [CE]  unclosed  character  literal  [FE]          NumberFormatException    [CONTEXT]    public  static  Number  createNumber(String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {  return  null;  }    [BUGGY]      int  decPos  =  str.length();  int  lecPos  =  str.length();  [BUGGY]    if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(   "A  blank  string  is  not  a  valid  number   ");  }  if  (str.startsWith(   "--   "))  {  return  null;  }  if  (str.startsWith(   "0x   ")  ||  str.startsWith(   "-0x   ")  ||  str.startsWith(   "0X   ")  ||  str.startsWith(   "-0X   "))  {  int  hexDigits  =  str.length()  -  2;  //  drop  0x  if  (str.startsWith(   "-   "))  {  //  drop  -  hexDigits--;  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  	projects/Lang7/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.5773502691896258	449	449	1	replace	        int    decPos    =    str.length();    int  lecPos  =  str.length();	  	non-compiled	[CE]  unclosed  character  literal	12	None	add
61	[BUG]  [BUGGY]  if(str  ==  null  ||  StringUtils.isBlank(str)||  isEmpty(str))  {  [CE]  unclosed  character  literal  [FE]        AssertionError    [CONTEXT]    public  static  Number  createNumber(String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {  return  null;  }    [BUGGY]  if(str  ==  null  ||  StringUtils.isBlank(str)||  isEmpty(str))  {  [BUGGY]    throw  new  NumberFormatException(   "A  blank  string  is  not  a  valid  number   ");  }  if  (str.startsWith(   "--   "))  {  return  null;  }  if  (str.startsWith(   "0x   ")  ||  str.startsWith(   "-0x   ")  ||  str.startsWith(   "0X   ")  ||  str.startsWith(   "-0X   "))  {  int  hexDigits  =  str.length()  -  2;  //  drop  0x  if  (str.startsWith(   "-   "))  {  //  drop  -  hexDigits--;  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  	projects/Lang7/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.5773502691896258	449	449	1	replace	if(str  ==  null  ||  StringUtils.isBlank(str)||  isEmpty(str))  {	  if(str    ==    null    ||    StringUtils.isBlank(str))    {    	non-compiled	[CE]  unclosed  character  literal	10	None	replace
62	[BUG]  [BUGGY]      int  decPos  =  str.indexOf('  ');  int  lecPos  =  str.indexOf('  ');  [CE]  unclosed  character  literal  [FE]    NumberFormatException    [CONTEXT]    public  static  Number  createNumber(String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {  return  null;  }    [BUGGY]      int  decPos  =  str.indexOf('  ');  int  lecPos  =  str.indexOf('  ');  [BUGGY]    if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(   "A  blank  string  is  not  a  valid  number   ");  }  if  (str.startsWith(   "--   "))  {  return  null;  }  if  (str.startsWith(   "0x   ")  ||  str.startsWith(   "-0x   ")  ||  str.startsWith(   "0X   ")  ||  str.startsWith(   "-0X   "))  {  int  hexDigits  =  str.length()  -  2;  //  drop  0x  if  (str.startsWith(   "-   "))  {  //  drop  -  hexDigits--;  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  	projects/Lang7/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.5773502691896258	449	449	1	replace	        int    decPos    =    str.indexOf('    ');    int  lecPos  =  str.indexOf('  ');	  	non-compiled	[CE]  unclosed  character  literal	16	None	add
63	[BUG]  [BUGGY]  Integer  str  =  createBigInteger(str);  [CE]  unclosed  character  literal  [FE]            AssertionError    [CONTEXT]    public  static  Number  createNumber(String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {  return  null;  }    [BUGGY]  Integer  str  =  createBigInteger(str);  [BUGGY]    if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(   "A  blank  string  is  not  a  valid  number   ");  }  if  (str.startsWith(   "--   "))  {  return  null;  }  if  (str.startsWith(   "0x   ")  ||  str.startsWith(   "-0x   ")  ||  str.startsWith(   "0X   ")  ||  str.startsWith(   "-0X   "))  {  int  hexDigits  =  str.length()  -  2;  //  drop  0x  if  (str.startsWith(   "-   "))  {  //  drop  -  hexDigits--;  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  	projects/Lang7/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.5773502691896258	449	449	1	replace	Integer  str  =  createBigInteger(str);	      Integer    str    =    createInteger(str);    	non-compiled	[CE]  unclosed  character  literal	3	None	replace
64	[BUG]  [BUGGY]  if(!StringUtils.isBlank(str)||  StringUtils.isEmpty(str))  {  [CE]  unclosed  character  literal  [FE]          AssertionError    [CONTEXT]    public  static  Number  createNumber(String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {  return  null;  }    [BUGGY]  if(!StringUtils.isBlank(str)||  StringUtils.isEmpty(str))  {  [BUGGY]    throw  new  NumberFormatException(   "A  blank  string  is  not  a  valid  number   ");  }  if  (str.startsWith(   "--   "))  {  return  null;  }  if  (str.startsWith(   "0x   ")  ||  str.startsWith(   "-0x   ")  ||  str.startsWith(   "0X   ")  ||  str.startsWith(   "-0X   "))  {  int  hexDigits  =  str.length()  -  2;  //  drop  0x  if  (str.startsWith(   "-   "))  {  //  drop  -  hexDigits--;  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  	projects/Lang7/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.5773502691896258	449	449	1	replace	if(!StringUtils.isBlank(str)||  StringUtils.isEmpty(str))  {	  if(!StringUtils.isBlank(str))    {    	non-compiled	[CE]  unclosed  character  literal	11	None	replace
65	[BUG]  [BUGGY]  int  hexDigits  =  str.indexOf('.');  [CE]  unclosed  character  literal  [FE]    NumberFormatException    [CONTEXT]    public  static  Number  createNumber(String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {  return  null;  }    [BUGGY]  int  hexDigits  =  str.indexOf('.');  [BUGGY]    if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(   "A  blank  string  is  not  a  valid  number   ");  }  if  (str.startsWith(   "--   "))  {  return  null;  }  if  (str.startsWith(   "0x   ")  ||  str.startsWith(   "-0x   ")  ||  str.startsWith(   "0X   ")  ||  str.startsWith(   "-0X   "))  {  int  hexDigits  =  str.length()  -  2;  //  drop  0x  if  (str.startsWith(   "-   "))  {  //  drop  -  hexDigits--;  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  	projects/Lang7/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.5773502691896258	449	449	1	replace	int  hexDigits  =  str.indexOf('.');	      int    hexDigits    =    str.lastIndexOf('.');    	non-compiled	[CE]  unclosed  character  literal	9	None	replace
66	[BUG]  [BUGGY]  if(str  ==  null  ||  StringUtils.isBlank(str)||  StringUtils.isBlank(str))  {  [CE]  unclosed  character  literal  [FE]          AssertionError    [CONTEXT]    public  static  Number  createNumber(String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {  return  null;  }    [BUGGY]  if(str  ==  null  ||  StringUtils.isBlank(str)||  StringUtils.isBlank(str))  {  [BUGGY]    throw  new  NumberFormatException(   "A  blank  string  is  not  a  valid  number   ");  }  if  (str.startsWith(   "--   "))  {  return  null;  }  if  (str.startsWith(   "0x   ")  ||  str.startsWith(   "-0x   ")  ||  str.startsWith(   "0X   ")  ||  str.startsWith(   "-0X   "))  {  int  hexDigits  =  str.length()  -  2;  //  drop  0x  if  (str.startsWith(   "-   "))  {  //  drop  -  hexDigits--;  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  	projects/Lang7/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.5773502691896258	449	449	1	replace	if(str  ==  null  ||  StringUtils.isBlank(str)||  StringUtils.isBlank(str))  {	  if(StringUtils.isBlank(str)||    StringUtils.isBlank(str))    {    	non-compiled	[CE]  unclosed  character  literal	7	None	replace
67	[BUG]  [BUGGY]  if(StringUtils.isBlank(str)||  StringUtils.isWhitespace(str))  {  [CE]  unclosed  character  literal  [FE]            AssertionError    [CONTEXT]    public  static  Number  createNumber(String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {  return  null;  }    [BUGGY]  if(StringUtils.isBlank(str)||  StringUtils.isWhitespace(str))  {  [BUGGY]    throw  new  NumberFormatException(   "A  blank  string  is  not  a  valid  number   ");  }  if  (str.startsWith(   "--   "))  {  return  null;  }  if  (str.startsWith(   "0x   ")  ||  str.startsWith(   "-0x   ")  ||  str.startsWith(   "0X   ")  ||  str.startsWith(   "-0X   "))  {  int  hexDigits  =  str.length()  -  2;  //  drop  0x  if  (str.startsWith(   "-   "))  {  //  drop  -  hexDigits--;  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  	projects/Lang7/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.5773502691896258	449	449	1	replace	if(StringUtils.isBlank(str)||  StringUtils.isWhitespace(str))  {	  if(StringUtils.isBlank(str)||    StringUtils.isBlank(str))    {    	non-compiled	[CE]  unclosed  character  literal	7	None	replace
68	[BUG]  [BUGGY]  if(StringUtils.isBlank(str)&&  StringUtils.isBlank(str))  {  [CE]  unclosed  character  literal  [FE]              AssertionError    [CONTEXT]    public  static  Number  createNumber(String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {  return  null;  }    [BUGGY]  if(StringUtils.isBlank(str)&&  StringUtils.isBlank(str))  {  [BUGGY]    throw  new  NumberFormatException(   "A  blank  string  is  not  a  valid  number   ");  }  if  (str.startsWith(   "--   "))  {  return  null;  }  if  (str.startsWith(   "0x   ")  ||  str.startsWith(   "-0x   ")  ||  str.startsWith(   "0X   ")  ||  str.startsWith(   "-0X   "))  {  int  hexDigits  =  str.length()  -  2;  //  drop  0x  if  (str.startsWith(   "-   "))  {  //  drop  -  hexDigits--;  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  	projects/Lang7/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.5773502691896258	449	449	1	replace	if(StringUtils.isBlank(str)&&  StringUtils.isBlank(str))  {	  if(StringUtils.isBlank(str)||    StringUtils.isBlank(str))    {    	non-compiled	[CE]  unclosed  character  literal	7	None	replace
69	[BUG]  [BUGGY]  if(str  ==  null  ||  StringUtils.isBlank(str)||  StringUtils.isEmpty(str))  {  [CE]  unclosed  character  literal  [FE]        AssertionError    [CONTEXT]    public  static  Number  createNumber(String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {  return  null;  }    [BUGGY]  if(str  ==  null  ||  StringUtils.isBlank(str)||  StringUtils.isEmpty(str))  {  [BUGGY]    throw  new  NumberFormatException(   "A  blank  string  is  not  a  valid  number   ");  }  if  (str.startsWith(   "--   "))  {  return  null;  }  if  (str.startsWith(   "0x   ")  ||  str.startsWith(   "-0x   ")  ||  str.startsWith(   "0X   ")  ||  str.startsWith(   "-0X   "))  {  int  hexDigits  =  str.length()  -  2;  //  drop  0x  if  (str.startsWith(   "-   "))  {  //  drop  -  hexDigits--;  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  	projects/Lang7/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.5773502691896258	449	449	1	replace	if(str  ==  null  ||  StringUtils.isBlank(str)||  StringUtils.isEmpty(str))  {	  if(StringUtils.isBlank(str)||    StringUtils.isEmpty(str))    {    	non-compiled	[CE]  unclosed  character  literal	6	None	replace
70	[BUG]  [BUGGY]  if(StringUtils.isBlank(str)&&  StringUtils.isEmpty(str))  {  [CE]  unclosed  character  literal  [FE]          AssertionError    [CONTEXT]    public  static  Number  createNumber(String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {  return  null;  }    [BUGGY]  if(StringUtils.isBlank(str)&&  StringUtils.isEmpty(str))  {  [BUGGY]    throw  new  NumberFormatException(   "A  blank  string  is  not  a  valid  number   ");  }  if  (str.startsWith(   "--   "))  {  return  null;  }  if  (str.startsWith(   "0x   ")  ||  str.startsWith(   "-0x   ")  ||  str.startsWith(   "0X   ")  ||  str.startsWith(   "-0X   "))  {  int  hexDigits  =  str.length()  -  2;  //  drop  0x  if  (str.startsWith(   "-   "))  {  //  drop  -  hexDigits--;  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  	projects/Lang7/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.5773502691896258	449	449	1	replace	if(StringUtils.isBlank(str)&&  StringUtils.isEmpty(str))  {	  if(StringUtils.isBlank(str)||    StringUtils.isEmpty(str))    {    	non-compiled	[CE]  unclosed  character  literal	6	None	replace
71	[BUG]  [BUGGY]  int  str  =  str.indexOf('.',  -1);  [CE]  unclosed  character  literal  [FE]            AssertionError    [CONTEXT]    public  static  Number  createNumber(String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {  return  null;  }    [BUGGY]  int  str  =  str.indexOf('.',  -1);  [BUGGY]    if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(   "A  blank  string  is  not  a  valid  number   ");  }  if  (str.startsWith(   "--   "))  {  return  null;  }  if  (str.startsWith(   "0x   ")  ||  str.startsWith(   "-0x   ")  ||  str.startsWith(   "0X   ")  ||  str.startsWith(   "-0X   "))  {  int  hexDigits  =  str.length()  -  2;  //  drop  0x  if  (str.startsWith(   "-   "))  {  //  drop  -  hexDigits--;  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  	projects/Lang7/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.5773502691896258	449	449	1	replace	int  str  =  str.indexOf('.',  -1);	      int    str    =    str.indexOf('.');    	non-compiled	[CE]  unclosed  character  literal	15	None	replace
72	[BUG]  [BUGGY]  int  str  =  str.indexOf('.')+  1;  [CE]  unclosed  character  literal  [FE]              AssertionError    [CONTEXT]    public  static  Number  createNumber(String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {  return  null;  }    [BUGGY]  int  str  =  str.indexOf('.')+  1;  [BUGGY]    if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(   "A  blank  string  is  not  a  valid  number   ");  }  if  (str.startsWith(   "--   "))  {  return  null;  }  if  (str.startsWith(   "0x   ")  ||  str.startsWith(   "-0x   ")  ||  str.startsWith(   "0X   ")  ||  str.startsWith(   "-0X   "))  {  int  hexDigits  =  str.length()  -  2;  //  drop  0x  if  (str.startsWith(   "-   "))  {  //  drop  -  hexDigits--;  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  	projects/Lang7/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.5773502691896258	449	449	1	replace	int  str  =  str.indexOf('.')+  1;	      int    str    =    str.indexOf('.');    	non-compiled	[CE]  unclosed  character  literal	15	None	replace
73	[BUG]  [BUGGY]  int  decPos  =  str.indexOf('  ',  DEC_PREFIX);  [CE]  unclosed  character  literal  [FE]    NumberFormatException    [CONTEXT]    public  static  Number  createNumber(String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {  return  null;  }    [BUGGY]  int  decPos  =  str.indexOf('  ',  DEC_PREFIX);  [BUGGY]    if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(   "A  blank  string  is  not  a  valid  number   ");  }  if  (str.startsWith(   "--   "))  {  return  null;  }  if  (str.startsWith(   "0x   ")  ||  str.startsWith(   "-0x   ")  ||  str.startsWith(   "0X   ")  ||  str.startsWith(   "-0X   "))  {  int  hexDigits  =  str.length()  -  2;  //  drop  0x  if  (str.startsWith(   "-   "))  {  //  drop  -  hexDigits--;  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  	projects/Lang7/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.5773502691896258	449	449	1	replace	int  decPos  =  str.indexOf('  ',  DEC_PREFIX);	      int    decPos    =    str.indexOf('    ');    	non-compiled	[CE]  unclosed  character  literal	17	None	replace
74	[BUG]  [BUGGY]  int  decPos  =  str.indexOf('  ')+  1;  [CE]  unclosed  character  literal  [FE]      NumberFormatException    [CONTEXT]    public  static  Number  createNumber(String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {  return  null;  }    [BUGGY]  int  decPos  =  str.indexOf('  ')+  1;  [BUGGY]    if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(   "A  blank  string  is  not  a  valid  number   ");  }  if  (str.startsWith(   "--   "))  {  return  null;  }  if  (str.startsWith(   "0x   ")  ||  str.startsWith(   "-0x   ")  ||  str.startsWith(   "0X   ")  ||  str.startsWith(   "-0X   "))  {  int  hexDigits  =  str.length()  -  2;  //  drop  0x  if  (str.startsWith(   "-   "))  {  //  drop  -  hexDigits--;  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  	projects/Lang7/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.5773502691896258	449	449	1	replace	int  decPos  =  str.indexOf('  ')+  1;	      int    decPos    =    str.indexOf('    ');    	non-compiled	[CE]  unclosed  character  literal	17	None	replace
75	[BUG]  [BUGGY]      int  hexDigits  =  str.lastIndexOf('.');  int  hexDigits  =  str.lastIndexOf('.').lastIndexOf('.');  [CE]  unclosed  character  literal  [FE]    NumberFormatException    [CONTEXT]    public  static  Number  createNumber(String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {  return  null;  }    [BUGGY]      int  hexDigits  =  str.lastIndexOf('.');  int  hexDigits  =  str.lastIndexOf('.').lastIndexOf('.');  [BUGGY]    if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(   "A  blank  string  is  not  a  valid  number   ");  }  if  (str.startsWith(   "--   "))  {  return  null;  }  if  (str.startsWith(   "0x   ")  ||  str.startsWith(   "-0x   ")  ||  str.startsWith(   "0X   ")  ||  str.startsWith(   "-0X   "))  {  int  hexDigits  =  str.length()  -  2;  //  drop  0x  if  (str.startsWith(   "-   "))  {  //  drop  -  hexDigits--;  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  	projects/Lang7/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.5773502691896258	449	449	1	replace	        int    hexDigits    =    str.lastIndexOf('.');    int  hexDigits  =  str.lastIndexOf('.').lastIndexOf('.');	  	non-compiled	[CE]  unclosed  character  literal	8	None	add
76	[BUG]  [BUGGY]  Number  str  =  getNumber(str.toLowerCase());  [CE]  unclosed  character  literal  [FE]              AssertionError    [CONTEXT]    public  static  Number  createNumber(String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {  return  null;  }    [BUGGY]  Number  str  =  getNumber(str.toLowerCase());  [BUGGY]    if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(   "A  blank  string  is  not  a  valid  number   ");  }  if  (str.startsWith(   "--   "))  {  return  null;  }  if  (str.startsWith(   "0x   ")  ||  str.startsWith(   "-0x   ")  ||  str.startsWith(   "0X   ")  ||  str.startsWith(   "-0X   "))  {  int  hexDigits  =  str.length()  -  2;  //  drop  0x  if  (str.startsWith(   "-   "))  {  //  drop  -  hexDigits--;  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  	projects/Lang7/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.5773502691896258	449	449	1	replace	Number  str  =  getNumber(str.toLowerCase());	      Number    str    =    getNumber(str);    	non-compiled	[CE]  unclosed  character  literal	4	None	replace
77	[BUG]  [BUGGY]  Number  str  =  getNumber(str.toCharArray());  [CE]  unclosed  character  literal  [FE]                AssertionError    [CONTEXT]    public  static  Number  createNumber(String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {  return  null;  }    [BUGGY]  Number  str  =  getNumber(str.toCharArray());  [BUGGY]    if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(   "A  blank  string  is  not  a  valid  number   ");  }  if  (str.startsWith(   "--   "))  {  return  null;  }  if  (str.startsWith(   "0x   ")  ||  str.startsWith(   "-0x   ")  ||  str.startsWith(   "0X   ")  ||  str.startsWith(   "-0X   "))  {  int  hexDigits  =  str.length()  -  2;  //  drop  0x  if  (str.startsWith(   "-   "))  {  //  drop  -  hexDigits--;  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  	projects/Lang7/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.5773502691896258	449	449	1	replace	Number  str  =  getNumber(str.toCharArray());	      Number    str    =    getNumber(str);    	non-compiled	[CE]  unclosed  character  literal	4	None	replace
78	[BUG]  [BUGGY]  Number  str  =  createNumber(str.length());  [CE]  unclosed  character  literal  [FE]          AssertionError    [CONTEXT]    public  static  Number  createNumber(String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {  return  null;  }    [BUGGY]  Number  str  =  createNumber(str.length());  [BUGGY]    if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(   "A  blank  string  is  not  a  valid  number   ");  }  if  (str.startsWith(   "--   "))  {  return  null;  }  if  (str.startsWith(   "0x   ")  ||  str.startsWith(   "-0x   ")  ||  str.startsWith(   "0X   ")  ||  str.startsWith(   "-0X   "))  {  int  hexDigits  =  str.length()  -  2;  //  drop  0x  if  (str.startsWith(   "-   "))  {  //  drop  -  hexDigits--;  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  	projects/Lang7/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.5773502691896258	449	449	1	replace	Number  str  =  createNumber(str.length());	      Number    str    =    createNumber(str);    	non-compiled	[CE]  unclosed  character  literal	2	None	replace
79	[BUG]  [BUGGY]  if(!StringUtils.isBlank(str)||  str.length()  ==  0)  {  [CE]  unclosed  character  literal  [FE]          AssertionError    [CONTEXT]    public  static  Number  createNumber(String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {  return  null;  }    [BUGGY]  if(!StringUtils.isBlank(str)||  str.length()  ==  0)  {  [BUGGY]    throw  new  NumberFormatException(   "A  blank  string  is  not  a  valid  number   ");  }  if  (str.startsWith(   "--   "))  {  return  null;  }  if  (str.startsWith(   "0x   ")  ||  str.startsWith(   "-0x   ")  ||  str.startsWith(   "0X   ")  ||  str.startsWith(   "-0X   "))  {  int  hexDigits  =  str.length()  -  2;  //  drop  0x  if  (str.startsWith(   "-   "))  {  //  drop  -  hexDigits--;  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  	projects/Lang7/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.5773502691896258	449	449	1	replace	if(!StringUtils.isBlank(str)||  str.length()  ==  0)  {	  if(!StringUtils.isBlank(str))    {    	non-compiled	[CE]  unclosed  character  literal	11	None	replace
80	[BUG]  [BUGGY]  int  decPos  =  str.lastIndexOf('.');  [CE]  unclosed  character  literal  [FE]    NumberFormatException    [CONTEXT]    public  static  Number  createNumber(String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {  return  null;  }    [BUGGY]  int  decPos  =  str.lastIndexOf('.');  [BUGGY]    if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(   "A  blank  string  is  not  a  valid  number   ");  }  if  (str.startsWith(   "--   "))  {  return  null;  }  if  (str.startsWith(   "0x   ")  ||  str.startsWith(   "-0x   ")  ||  str.startsWith(   "0X   ")  ||  str.startsWith(   "-0X   "))  {  int  hexDigits  =  str.length()  -  2;  //  drop  0x  if  (str.startsWith(   "-   "))  {  //  drop  -  hexDigits--;  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  	projects/Lang7/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.5773502691896258	449	449	1	replace	int  decPos  =  str.lastIndexOf('.');	      int    decPos    =    str.length();    	non-compiled	[CE]  unclosed  character  literal	13	None	replace
81	[BUG]  [BUGGY]      int  decPos  =  str.length();  char  decPos  =  str.length();  [CE]  unclosed  character  literal  [FE]    NumberFormatException    [CONTEXT]    public  static  Number  createNumber(String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {  return  null;  }    [BUGGY]      int  decPos  =  str.length();  char  decPos  =  str.length();  [BUGGY]    if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(   "A  blank  string  is  not  a  valid  number   ");  }  if  (str.startsWith(   "--   "))  {  return  null;  }  if  (str.startsWith(   "0x   ")  ||  str.startsWith(   "-0x   ")  ||  str.startsWith(   "0X   ")  ||  str.startsWith(   "-0X   "))  {  int  hexDigits  =  str.length()  -  2;  //  drop  0x  if  (str.startsWith(   "-   "))  {  //  drop  -  hexDigits--;  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  	projects/Lang7/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.5773502691896258	449	449	1	replace	        int    decPos    =    str.length();    char  decPos  =  str.length();	  	non-compiled	[CE]  unclosed  character  literal	12	None	add
82	[BUG]  [BUGGY]      int  decPos  =  str.length();  int  expPos  =  str.length();  [CE]  unclosed  character  literal  [FE]      NumberFormatException    [CONTEXT]    public  static  Number  createNumber(String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {  return  null;  }    [BUGGY]      int  decPos  =  str.length();  int  expPos  =  str.length();  [BUGGY]    if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(   "A  blank  string  is  not  a  valid  number   ");  }  if  (str.startsWith(   "--   "))  {  return  null;  }  if  (str.startsWith(   "0x   ")  ||  str.startsWith(   "-0x   ")  ||  str.startsWith(   "0X   ")  ||  str.startsWith(   "-0X   "))  {  int  hexDigits  =  str.length()  -  2;  //  drop  0x  if  (str.startsWith(   "-   "))  {  //  drop  -  hexDigits--;  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  	projects/Lang7/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.5773502691896258	449	449	1	replace	        int    decPos    =    str.length();    int  expPos  =  str.length();	  	non-compiled	[CE]  unclosed  character  literal	12	None	add
83	[BUG]  [BUGGY]  Number  str  =  getNumber(str.toUpperCase());  [CE]  unclosed  character  literal  [FE]              AssertionError    [CONTEXT]    public  static  Number  createNumber(String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {  return  null;  }    [BUGGY]  Number  str  =  getNumber(str.toUpperCase());  [BUGGY]    if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(   "A  blank  string  is  not  a  valid  number   ");  }  if  (str.startsWith(   "--   "))  {  return  null;  }  if  (str.startsWith(   "0x   ")  ||  str.startsWith(   "-0x   ")  ||  str.startsWith(   "0X   ")  ||  str.startsWith(   "-0X   "))  {  int  hexDigits  =  str.length()  -  2;  //  drop  0x  if  (str.startsWith(   "-   "))  {  //  drop  -  hexDigits--;  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  	projects/Lang7/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.5773502691896258	449	449	1	replace	Number  str  =  getNumber(str.toUpperCase());	      Number    str    =    getNumber(str);    	non-compiled	[CE]  unclosed  character  literal	4	None	replace
84	[BUG]  [BUGGY]  int  decPos  =  str.indexOf('  ',  dec);  [CE]  unclosed  character  literal  [FE]    NumberFormatException    [CONTEXT]    public  static  Number  createNumber(String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {  return  null;  }    [BUGGY]  int  decPos  =  str.indexOf('  ',  dec);  [BUGGY]    if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(   "A  blank  string  is  not  a  valid  number   ");  }  if  (str.startsWith(   "--   "))  {  return  null;  }  if  (str.startsWith(   "0x   ")  ||  str.startsWith(   "-0x   ")  ||  str.startsWith(   "0X   ")  ||  str.startsWith(   "-0X   "))  {  int  hexDigits  =  str.length()  -  2;  //  drop  0x  if  (str.startsWith(   "-   "))  {  //  drop  -  hexDigits--;  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  	projects/Lang7/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.5773502691896258	449	449	1	replace	int  decPos  =  str.indexOf('  ',  dec);	      int    decPos    =    str.indexOf('    ');    	non-compiled	[CE]  unclosed  character  literal	17	None	replace
85	[BUG]  [BUGGY]  if(StringUtils.isBlank(str)||  StringUtils.isBlank(str)||  str.length()  ==  0)  {  [CE]  unclosed  character  literal  [FE]          AssertionError    [CONTEXT]    public  static  Number  createNumber(String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {  return  null;  }    [BUGGY]  if(StringUtils.isBlank(str)||  StringUtils.isBlank(str)||  str.length()  ==  0)  {  [BUGGY]    throw  new  NumberFormatException(   "A  blank  string  is  not  a  valid  number   ");  }  if  (str.startsWith(   "--   "))  {  return  null;  }  if  (str.startsWith(   "0x   ")  ||  str.startsWith(   "-0x   ")  ||  str.startsWith(   "0X   ")  ||  str.startsWith(   "-0X   "))  {  int  hexDigits  =  str.length()  -  2;  //  drop  0x  if  (str.startsWith(   "-   "))  {  //  drop  -  hexDigits--;  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  	projects/Lang7/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.5773502691896258	449	449	1	replace	if(StringUtils.isBlank(str)||  StringUtils.isBlank(str)||  str.length()  ==  0)  {	  if(StringUtils.isBlank(str)||    StringUtils.isBlank(str))    {    	non-compiled	[CE]  unclosed  character  literal	7	None	replace
86	[BUG]  [BUGGY]  if(str  ==  null  ||  StringUtils.isBlank(str)||  str.length()!=  0)  {  [CE]  unclosed  character  literal  [FE]        AssertionError    [CONTEXT]    public  static  Number  createNumber(String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {  return  null;  }    [BUGGY]  if(str  ==  null  ||  StringUtils.isBlank(str)||  str.length()!=  0)  {  [BUGGY]    throw  new  NumberFormatException(   "A  blank  string  is  not  a  valid  number   ");  }  if  (str.startsWith(   "--   "))  {  return  null;  }  if  (str.startsWith(   "0x   ")  ||  str.startsWith(   "-0x   ")  ||  str.startsWith(   "0X   ")  ||  str.startsWith(   "-0X   "))  {  int  hexDigits  =  str.length()  -  2;  //  drop  0x  if  (str.startsWith(   "-   "))  {  //  drop  -  hexDigits--;  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  	projects/Lang7/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.5773502691896258	449	449	1	replace	if(str  ==  null  ||  StringUtils.isBlank(str)||  str.length()!=  0)  {	  if(str    ==    null    ||    StringUtils.isBlank(str))    {    	non-compiled	[CE]  unclosed  character  literal	10	None	replace
87	[BUG]  [BUGGY]  int  str  =  str.indexOf('.',  dec);  [CE]  unclosed  character  literal  [FE]            AssertionError    [CONTEXT]    public  static  Number  createNumber(String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {  return  null;  }    [BUGGY]  int  str  =  str.indexOf('.',  dec);  [BUGGY]    if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(   "A  blank  string  is  not  a  valid  number   ");  }  if  (str.startsWith(   "--   "))  {  return  null;  }  if  (str.startsWith(   "0x   ")  ||  str.startsWith(   "-0x   ")  ||  str.startsWith(   "0X   ")  ||  str.startsWith(   "-0X   "))  {  int  hexDigits  =  str.length()  -  2;  //  drop  0x  if  (str.startsWith(   "-   "))  {  //  drop  -  hexDigits--;  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  	projects/Lang7/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.5773502691896258	449	449	1	replace	int  str  =  str.indexOf('.',  dec);	      int    str    =    str.indexOf('.');    	non-compiled	[CE]  unclosed  character  literal	15	None	replace
88	[BUG]  [BUGGY]  int  str  =  str.indexOf('.',  lastChar);  [CE]  unclosed  character  literal  [FE]              AssertionError    [CONTEXT]    public  static  Number  createNumber(String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {  return  null;  }    [BUGGY]  int  str  =  str.indexOf('.',  lastChar);  [BUGGY]    if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(   "A  blank  string  is  not  a  valid  number   ");  }  if  (str.startsWith(   "--   "))  {  return  null;  }  if  (str.startsWith(   "0x   ")  ||  str.startsWith(   "-0x   ")  ||  str.startsWith(   "0X   ")  ||  str.startsWith(   "-0X   "))  {  int  hexDigits  =  str.length()  -  2;  //  drop  0x  if  (str.startsWith(   "-   "))  {  //  drop  -  hexDigits--;  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  	projects/Lang7/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.5773502691896258	449	449	1	replace	int  str  =  str.indexOf('.',  lastChar);	      int    str    =    str.indexOf('.');    	non-compiled	[CE]  unclosed  character  literal	15	None	replace
89	[BUG]  [BUGGY]  Number  str  =  createString(str);  [CE]  unclosed  character  literal  [FE]          AssertionError    [CONTEXT]    public  static  Number  createNumber(String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {  return  null;  }    [BUGGY]  Number  str  =  createString(str);  [BUGGY]    if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(   "A  blank  string  is  not  a  valid  number   ");  }  if  (str.startsWith(   "--   "))  {  return  null;  }  if  (str.startsWith(   "0x   ")  ||  str.startsWith(   "-0x   ")  ||  str.startsWith(   "0X   ")  ||  str.startsWith(   "-0X   "))  {  int  hexDigits  =  str.length()  -  2;  //  drop  0x  if  (str.startsWith(   "-   "))  {  //  drop  -  hexDigits--;  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  	projects/Lang7/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.5773502691896258	449	449	1	replace	Number  str  =  createString(str);	      Number    str    =    createNumber(str);    	non-compiled	[CE]  unclosed  character  literal	2	None	replace
90	[BUG]  [BUGGY]  Number  str  =  createQuotedNumber(str);  [CE]  unclosed  character  literal  [FE]            AssertionError    [CONTEXT]    public  static  Number  createNumber(String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {  return  null;  }    [BUGGY]  Number  str  =  createQuotedNumber(str);  [BUGGY]    if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(   "A  blank  string  is  not  a  valid  number   ");  }  if  (str.startsWith(   "--   "))  {  return  null;  }  if  (str.startsWith(   "0x   ")  ||  str.startsWith(   "-0x   ")  ||  str.startsWith(   "0X   ")  ||  str.startsWith(   "-0X   "))  {  int  hexDigits  =  str.length()  -  2;  //  drop  0x  if  (str.startsWith(   "-   "))  {  //  drop  -  hexDigits--;  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  	projects/Lang7/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.5773502691896258	449	449	1	replace	Number  str  =  createQuotedNumber(str);	      Number    str    =    createNumber(str);    	non-compiled	[CE]  unclosed  character  literal	2	None	replace
91	[BUG]  [BUGGY]      int  decPos  =  str.indexOf('  ');  int  decPos  =  str.indexOf('  ').indexOf('  ');  [CE]  unclosed  character  literal  [FE]    NumberFormatException    [CONTEXT]    public  static  Number  createNumber(String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {  return  null;  }    [BUGGY]      int  decPos  =  str.indexOf('  ');  int  decPos  =  str.indexOf('  ').indexOf('  ');  [BUGGY]    if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(   "A  blank  string  is  not  a  valid  number   ");  }  if  (str.startsWith(   "--   "))  {  return  null;  }  if  (str.startsWith(   "0x   ")  ||  str.startsWith(   "-0x   ")  ||  str.startsWith(   "0X   ")  ||  str.startsWith(   "-0X   "))  {  int  hexDigits  =  str.length()  -  2;  //  drop  0x  if  (str.startsWith(   "-   "))  {  //  drop  -  hexDigits--;  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  	projects/Lang7/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.5773502691896258	449	449	1	replace	        int    decPos    =    str.indexOf('    ');    int  decPos  =  str.indexOf('  ').indexOf('  ');	  	non-compiled	[CE]  unclosed  character  literal	16	None	add
92	[BUG]  [BUGGY]  int  hexDigits  =  str.lastIndexOf('.',  16);  [CE]  unclosed  character  literal  [FE]    NumberFormatException    [CONTEXT]    public  static  Number  createNumber(String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {  return  null;  }    [BUGGY]  int  hexDigits  =  str.lastIndexOf('.',  16);  [BUGGY]    if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(   "A  blank  string  is  not  a  valid  number   ");  }  if  (str.startsWith(   "--   "))  {  return  null;  }  if  (str.startsWith(   "0x   ")  ||  str.startsWith(   "-0x   ")  ||  str.startsWith(   "0X   ")  ||  str.startsWith(   "-0X   "))  {  int  hexDigits  =  str.length()  -  2;  //  drop  0x  if  (str.startsWith(   "-   "))  {  //  drop  -  hexDigits--;  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  	projects/Lang7/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.5773502691896258	449	449	1	replace	int  hexDigits  =  str.lastIndexOf('.',  16);	      int    hexDigits    =    str.lastIndexOf('.');    	non-compiled	[CE]  unclosed  character  literal	9	None	replace
