bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]    int  hexDigits  =  str.length();  [CE]  ')'  expected  [FE]    AssertionError  [CONTEXT]  public  static  Number  createNumber(String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {  return  null;  }  [BUGGY]    int  hexDigits  =  str.length();  [BUGGY]  if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException( "A  blank  string  is  not  a  valid  number ");  }  if  (str.startsWith( "-- "))  {  return  null;  }  if  (str.startsWith( "0x ")  ||  str.startsWith( "-0x ")  ||  str.startsWith( "0X ")  ||  str.startsWith( "-0X "))  {  int  hexDigits  =  str.length()  -  2;  //  drop  0x  if  (str.startsWith( "- "))  {  //  drop  -  hexDigits--;  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  	projects/Lang7/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.5773502691896258	449	449	1	replace	    int  hexDigits  =  str.length();		non-compiled	[CE]  ')'  expected	90	None	add
2	[BUG]  [BUGGY]    Number  str  =  createNumber(str);  [CE]  ')'  expected  [FE]      AssertionError  [CONTEXT]  public  static  Number  createNumber(String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {  return  null;  }  [BUGGY]    Number  str  =  createNumber(str);  [BUGGY]  if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException( "A  blank  string  is  not  a  valid  number ");  }  if  (str.startsWith( "-- "))  {  return  null;  }  if  (str.startsWith( "0x ")  ||  str.startsWith( "-0x ")  ||  str.startsWith( "0X ")  ||  str.startsWith( "-0X "))  {  int  hexDigits  =  str.length()  -  2;  //  drop  0x  if  (str.startsWith( "- "))  {  //  drop  -  hexDigits--;  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  	projects/Lang7/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.5773502691896258	449	449	1	replace	    Number  str  =  createNumber(str);		non-compiled	[CE]  ')'  expected	90	None	add
3	[BUG]  [BUGGY]    Integer  str  =  createInteger(str);  [CE]  ')'  expected  [FE]        AssertionError  [CONTEXT]  public  static  Number  createNumber(String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {  return  null;  }  [BUGGY]    Integer  str  =  createInteger(str);  [BUGGY]  if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException( "A  blank  string  is  not  a  valid  number ");  }  if  (str.startsWith( "-- "))  {  return  null;  }  if  (str.startsWith( "0x ")  ||  str.startsWith( "-0x ")  ||  str.startsWith( "0X ")  ||  str.startsWith( "-0X "))  {  int  hexDigits  =  str.length()  -  2;  //  drop  0x  if  (str.startsWith( "- "))  {  //  drop  -  hexDigits--;  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  	projects/Lang7/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.5773502691896258	449	449	1	replace	    Integer  str  =  createInteger(str);		non-compiled	[CE]  ')'  expected	90	None	add
4	[BUG]  [BUGGY]    Number  str  =  getNumber(str);  [CE]  variable  str  is  already  defined  in  method  createNumber(String)  [FE]          AssertionError  [CONTEXT]  public  static  Number  createNumber(String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {  return  null;  }  [BUGGY]    Number  str  =  getNumber(str);  [BUGGY]  if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException( "A  blank  string  is  not  a  valid  number ");  }  if  (str.startsWith( "-- "))  {  return  null;  }  if  (str.startsWith( "0x ")  ||  str.startsWith( "-0x ")  ||  str.startsWith( "0X ")  ||  str.startsWith( "-0X "))  {  int  hexDigits  =  str.length()  -  2;  //  drop  0x  if  (str.startsWith( "- "))  {  //  drop  -  hexDigits--;  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  	projects/Lang7/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.5773502691896258	449	449	1	replace	    Number  str  =  getNumber(str);		non-compiled	[CE]  variable  str  is  already  defined  in  method  createNumber(String)	90	None	add
5	[BUG]  [BUGGY]    Integer  str  =  createInteger(str.length());  [CE]  variable  str  is  already  defined  in  method  createNumber(String)  [FE]            AssertionError  [CONTEXT]  public  static  Number  createNumber(String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {  return  null;  }  [BUGGY]    Integer  str  =  createInteger(str.length());  [BUGGY]  if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException( "A  blank  string  is  not  a  valid  number ");  }  if  (str.startsWith( "-- "))  {  return  null;  }  if  (str.startsWith( "0x ")  ||  str.startsWith( "-0x ")  ||  str.startsWith( "0X ")  ||  str.startsWith( "-0X "))  {  int  hexDigits  =  str.length()  -  2;  //  drop  0x  if  (str.startsWith( "- "))  {  //  drop  -  hexDigits--;  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  	projects/Lang7/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.5773502691896258	449	449	1	replace	    Integer  str  =  createInteger(str.length());		non-compiled	[CE]  variable  str  is  already  defined  in  method  createNumber(String)	90	None	add
6	[BUG]  [BUGGY]  if(StringUtils.isBlank(str)||  StringUtils.isEmpty(str))  {  [CE]  illegal  start  of  expression  [FE]    AssertionError  [CONTEXT]  public  static  Number  createNumber(String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {  return  null;  }  [BUGGY]  if(StringUtils.isBlank(str)||  StringUtils.isEmpty(str))  {  [BUGGY]  throw  new  NumberFormatException( "A  blank  string  is  not  a  valid  number ");  }  if  (str.startsWith( "-- "))  {  return  null;  }  if  (str.startsWith( "0x ")  ||  str.startsWith( "-0x ")  ||  str.startsWith( "0X ")  ||  str.startsWith( "-0X "))  {  int  hexDigits  =  str.length()  -  2;  //  drop  0x  if  (str.startsWith( "- "))  {  //  drop  -  hexDigits--;  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  	projects/Lang7/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.5773502691896258	449	449	1	replace	if(StringUtils.isBlank(str)||  StringUtils.isEmpty(str))  {	if  (StringUtils.isBlank(str))  {  	non-compiled	[CE]  illegal  start  of  expression	89	None	replace
7	[BUG]  [BUGGY]  if(StringUtils.isBlank(str)||  StringUtils.isBlank(str))  {  [CE]  illegal  start  of  expression  [FE]      AssertionError  [CONTEXT]  public  static  Number  createNumber(String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {  return  null;  }  [BUGGY]  if(StringUtils.isBlank(str)||  StringUtils.isBlank(str))  {  [BUGGY]  throw  new  NumberFormatException( "A  blank  string  is  not  a  valid  number ");  }  if  (str.startsWith( "-- "))  {  return  null;  }  if  (str.startsWith( "0x ")  ||  str.startsWith( "-0x ")  ||  str.startsWith( "0X ")  ||  str.startsWith( "-0X "))  {  int  hexDigits  =  str.length()  -  2;  //  drop  0x  if  (str.startsWith( "- "))  {  //  drop  -  hexDigits--;  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  	projects/Lang7/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.5773502691896258	449	449	1	replace	if(StringUtils.isBlank(str)||  StringUtils.isBlank(str))  {	if  (StringUtils.isBlank(str))  {  	non-compiled	[CE]  illegal  start  of  expression	89	None	replace
8	[BUG]  [BUGGY]  [FE]  NumberFormatException  [FE]    AssertionError  [CONTEXT]  public  static  Number  createNumber(String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {  return  null;  }  [BUGGY]    int  hexDigits  =  str.lastIndexOf('.');  [BUGGY]  if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException( "A  blank  string  is  not  a  valid  number ");  }  if  (str.startsWith( "-- "))  {  return  null;  }  if  (str.startsWith( "0x ")  ||  str.startsWith( "-0x ")  ||  str.startsWith( "0X ")  ||  str.startsWith( "-0X "))  {  int  hexDigits  =  str.length()  -  2;  //  drop  0x  if  (str.startsWith( "- "))  {  //  drop  -  hexDigits--;  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  	projects/Lang7/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.5773502691896258	449	449	1	add	    int  hexDigits  =  str.lastIndexOf('.');		compilable	  [FE]  NumberFormatException  	90	1	add
9	[BUG]  [BUGGY]    int  hexDigits  =  str.lastIndexOf('.');  [FE]  NumberFormatException  [FE]    AssertionError  [CONTEXT]  public  static  Number  createNumber(String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {  return  null;  }  [BUGGY]    int  hexDigits  =  str.lastIndexOf('.');  [BUGGY]  if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException( "A  blank  string  is  not  a  valid  number ");  }  if  (str.startsWith( "-- "))  {  return  null;  }  if  (str.startsWith( "0x ")  ||  str.startsWith( "-0x ")  ||  str.startsWith( "0X ")  ||  str.startsWith( "-0X "))  {  int  hexDigits  =  str.length()  -  2;  //  drop  0x  if  (str.startsWith( "- "))  {  //  drop  -  hexDigits--;  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  	projects/Lang7/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.5773502691896258	449	449	1	replace	    int  hexDigits  =  str.lastIndexOf('.');		compilable	  [FE]  NumberFormatException  	90	1	add
10	[BUG]  [BUGGY]  if(str  ==  null  ||  StringUtils.isBlank(str))  {  [CE]  illegal  start  of  expression  [FE]    AssertionError  [CONTEXT]  public  static  Number  createNumber(String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {  return  null;  }  [BUGGY]  if(str  ==  null  ||  StringUtils.isBlank(str))  {  [BUGGY]  throw  new  NumberFormatException( "A  blank  string  is  not  a  valid  number ");  }  if  (str.startsWith( "-- "))  {  return  null;  }  if  (str.startsWith( "0x ")  ||  str.startsWith( "-0x ")  ||  str.startsWith( "0X ")  ||  str.startsWith( "-0X "))  {  int  hexDigits  =  str.length()  -  2;  //  drop  0x  if  (str.startsWith( "- "))  {  //  drop  -  hexDigits--;  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  	projects/Lang7/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.5773502691896258	449	449	1	replace	if(str  ==  null  ||  StringUtils.isBlank(str))  {	if  (StringUtils.isBlank(str))  {  	non-compiled	[CE]  illegal  start  of  expression	89	None	replace
11	[BUG]  [BUGGY]  if(!StringUtils.isBlank(str))  {  [CE]  illegal  start  of  expression  [FE]      AssertionError  [CONTEXT]  public  static  Number  createNumber(String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {  return  null;  }  [BUGGY]  if(!StringUtils.isBlank(str))  {  [BUGGY]  throw  new  NumberFormatException( "A  blank  string  is  not  a  valid  number ");  }  if  (str.startsWith( "-- "))  {  return  null;  }  if  (str.startsWith( "0x ")  ||  str.startsWith( "-0x ")  ||  str.startsWith( "0X ")  ||  str.startsWith( "-0X "))  {  int  hexDigits  =  str.length()  -  2;  //  drop  0x  if  (str.startsWith( "- "))  {  //  drop  -  hexDigits--;  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  	projects/Lang7/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.5773502691896258	449	449	1	replace	if(!StringUtils.isBlank(str))  {	if  (StringUtils.isBlank(str))  {  	non-compiled	[CE]  illegal  start  of  expression	89	None	replace
12	[BUG]  [BUGGY]  [FE]  NumberFormatException  [FE]    AssertionError  [CONTEXT]  public  static  Number  createNumber(String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {  return  null;  }  [BUGGY]    int  decPos  =  str.length();  [BUGGY]  if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException( "A  blank  string  is  not  a  valid  number ");  }  if  (str.startsWith( "-- "))  {  return  null;  }  if  (str.startsWith( "0x ")  ||  str.startsWith( "-0x ")  ||  str.startsWith( "0X ")  ||  str.startsWith( "-0X "))  {  int  hexDigits  =  str.length()  -  2;  //  drop  0x  if  (str.startsWith( "- "))  {  //  drop  -  hexDigits--;  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  	projects/Lang7/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.5773502691896258	449	449	1	add	    int  decPos  =  str.length();		compilable	  [FE]  NumberFormatException  	90	1	add
13	[BUG]  [BUGGY]    int  decPos  =  str.length();  [FE]  NumberFormatException  [FE]    AssertionError  [CONTEXT]  public  static  Number  createNumber(String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {  return  null;  }  [BUGGY]    int  decPos  =  str.length();  [BUGGY]  if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException( "A  blank  string  is  not  a  valid  number ");  }  if  (str.startsWith( "-- "))  {  return  null;  }  if  (str.startsWith( "0x ")  ||  str.startsWith( "-0x ")  ||  str.startsWith( "0X ")  ||  str.startsWith( "-0X "))  {  int  hexDigits  =  str.length()  -  2;  //  drop  0x  if  (str.startsWith( "- "))  {  //  drop  -  hexDigits--;  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  	projects/Lang7/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.5773502691896258	449	449	1	replace	    int  decPos  =  str.length();		compilable	  [FE]  NumberFormatException  	90	1	add
14	[BUG]  [BUGGY]    int  str  =  str.length();  [CE]  variable  str  is  already  defined  in  method  createNumber(String)  [FE]      AssertionError  [CONTEXT]  public  static  Number  createNumber(String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {  return  null;  }  [BUGGY]    int  str  =  str.length();  [BUGGY]  if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException( "A  blank  string  is  not  a  valid  number ");  }  if  (str.startsWith( "-- "))  {  return  null;  }  if  (str.startsWith( "0x ")  ||  str.startsWith( "-0x ")  ||  str.startsWith( "0X ")  ||  str.startsWith( "-0X "))  {  int  hexDigits  =  str.length()  -  2;  //  drop  0x  if  (str.startsWith( "- "))  {  //  drop  -  hexDigits--;  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  	projects/Lang7/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.5773502691896258	449	449	1	replace	    int  str  =  str.length();		non-compiled	[CE]  variable  str  is  already  defined  in  method  createNumber(String)	90	None	add
15	[BUG]  [BUGGY]    int  str  =  str.indexOf('.');  [CE]  variable  str  is  already  defined  in  method  createNumber(String)  [FE]        AssertionError  [CONTEXT]  public  static  Number  createNumber(String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {  return  null;  }  [BUGGY]    int  str  =  str.indexOf('.');  [BUGGY]  if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException( "A  blank  string  is  not  a  valid  number ");  }  if  (str.startsWith( "-- "))  {  return  null;  }  if  (str.startsWith( "0x ")  ||  str.startsWith( "-0x ")  ||  str.startsWith( "0X ")  ||  str.startsWith( "-0X "))  {  int  hexDigits  =  str.length()  -  2;  //  drop  0x  if  (str.startsWith( "- "))  {  //  drop  -  hexDigits--;  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  	projects/Lang7/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.5773502691896258	449	449	1	replace	    int  str  =  str.indexOf('.');		non-compiled	[CE]  variable  str  is  already  defined  in  method  createNumber(String)	90	None	add
16	[BUG]  [BUGGY]  [FE]  NumberFormatException  [FE]          AssertionError  [CONTEXT]  public  static  Number  createNumber(String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {  return  null;  }  [BUGGY]    int  decPos  =  str.indexOf('  ');  [BUGGY]  if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException( "A  blank  string  is  not  a  valid  number ");  }  if  (str.startsWith( "-- "))  {  return  null;  }  if  (str.startsWith( "0x ")  ||  str.startsWith( "-0x ")  ||  str.startsWith( "0X ")  ||  str.startsWith( "-0X "))  {  int  hexDigits  =  str.length()  -  2;  //  drop  0x  if  (str.startsWith( "- "))  {  //  drop  -  hexDigits--;  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  	projects/Lang7/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.5773502691896258	449	449	1	add	    int  decPos  =  str.indexOf('  ');		compilable	  [FE]  NumberFormatException  	90	1	add
17	[BUG]  [BUGGY]    int  decPos  =  str.indexOf('  ');  [FE]  NumberFormatException  [FE]          AssertionError  [CONTEXT]  public  static  Number  createNumber(String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {  return  null;  }  [BUGGY]    int  decPos  =  str.indexOf('  ');  [BUGGY]  if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException( "A  blank  string  is  not  a  valid  number ");  }  if  (str.startsWith( "-- "))  {  return  null;  }  if  (str.startsWith( "0x ")  ||  str.startsWith( "-0x ")  ||  str.startsWith( "0X ")  ||  str.startsWith( "-0X "))  {  int  hexDigits  =  str.length()  -  2;  //  drop  0x  if  (str.startsWith( "- "))  {  //  drop  -  hexDigits--;  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  	projects/Lang7/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.5773502691896258	449	449	1	replace	    int  decPos  =  str.indexOf('  ');		compilable	  [FE]  NumberFormatException  	90	1	add
