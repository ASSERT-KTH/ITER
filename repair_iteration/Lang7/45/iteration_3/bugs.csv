bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  if(!StringUtils.isEmpty(mant))  {  [CE]  unclosed  character  literal  [FE]              AssertionError      [CONTEXT]      public  static  Number  createNumber(String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {  return  null;  }      [BUGGY]  if(!StringUtils.isEmpty(mant))  {  [BUGGY]      throw  new  NumberFormatException(     "A  blank  string  is  not  a  valid  number     ");  }  if  (str.startsWith(     "--     "))  {  return  null;  }  if  (str.startsWith(     "0x     ")  ||  str.startsWith(     "-0x     ")  ||  str.startsWith(     "0X     ")  ||  str.startsWith(     "-0X     "))  {  int  hexDigits  =  str.length()  -  2;  //  drop  0x  if  (str.startsWith(     "-     "))  {  //  drop  -  hexDigits--;  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  	projects/Lang7/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.5773502691896258	449	449	1	replace	if(!StringUtils.isEmpty(mant))  {	  if(!StringUtils.isEmpty(str))    {    	non-compiled	[CE]  unclosed  character  literal	32	None	replace
2	[BUG]  [BUGGY]  if(!StringUtils.isEmpty(str)||  str.length()  ==  0)  {  [CE]  unclosed  character  literal  [FE]                AssertionError      [CONTEXT]      public  static  Number  createNumber(String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {  return  null;  }      [BUGGY]  if(!StringUtils.isEmpty(str)||  str.length()  ==  0)  {  [BUGGY]      throw  new  NumberFormatException(     "A  blank  string  is  not  a  valid  number     ");  }  if  (str.startsWith(     "--     "))  {  return  null;  }  if  (str.startsWith(     "0x     ")  ||  str.startsWith(     "-0x     ")  ||  str.startsWith(     "0X     ")  ||  str.startsWith(     "-0X     "))  {  int  hexDigits  =  str.length()  -  2;  //  drop  0x  if  (str.startsWith(     "-     "))  {  //  drop  -  hexDigits--;  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  	projects/Lang7/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.5773502691896258	449	449	1	replace	if(!StringUtils.isEmpty(str)||  str.length()  ==  0)  {	  if(!StringUtils.isEmpty(str))    {    	non-compiled	[CE]  unclosed  character  literal	32	None	replace
3	[BUG]  [BUGGY]  if(!StringUtils.isEmpty(str)||!StringUtils.isEmpty(str))  {  [CE]  unclosed  character  literal  [FE]                  AssertionError      [CONTEXT]      public  static  Number  createNumber(String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {  return  null;  }      [BUGGY]  if(!StringUtils.isEmpty(str)||!StringUtils.isEmpty(str))  {  [BUGGY]      throw  new  NumberFormatException(     "A  blank  string  is  not  a  valid  number     ");  }  if  (str.startsWith(     "--     "))  {  return  null;  }  if  (str.startsWith(     "0x     ")  ||  str.startsWith(     "-0x     ")  ||  str.startsWith(     "0X     ")  ||  str.startsWith(     "-0X     "))  {  int  hexDigits  =  str.length()  -  2;  //  drop  0x  if  (str.startsWith(     "-     "))  {  //  drop  -  hexDigits--;  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  	projects/Lang7/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.5773502691896258	449	449	1	replace	if(!StringUtils.isEmpty(str)||!StringUtils.isEmpty(str))  {	  if(!StringUtils.isEmpty(str))    {    	non-compiled	[CE]  unclosed  character  literal	32	None	replace
4	[BUG]  [BUGGY]  Number  str  =  getNumber(str.length());  [CE]  unclosed  character  literal  [FE]                  AssertionError      [CONTEXT]      public  static  Number  createNumber(String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {  return  null;  }      [BUGGY]  Number  str  =  getNumber(str.length());  [BUGGY]      if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(     "A  blank  string  is  not  a  valid  number     ");  }  if  (str.startsWith(     "--     "))  {  return  null;  }  if  (str.startsWith(     "0x     ")  ||  str.startsWith(     "-0x     ")  ||  str.startsWith(     "0X     ")  ||  str.startsWith(     "-0X     "))  {  int  hexDigits  =  str.length()  -  2;  //  drop  0x  if  (str.startsWith(     "-     "))  {  //  drop  -  hexDigits--;  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  	projects/Lang7/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.5773502691896258	449	449	1	replace	Number  str  =  getNumber(str.length());	  Number    str    =    getNumber(str.toUpperCase());    	non-compiled	[CE]  unclosed  character  literal	83	None	replace
5	[BUG]  [BUGGY]  int  hexDigits  =  str.indexOf('.',  1);  [CE]  unclosed  character  literal  [FE]        NumberFormatException      [CONTEXT]      public  static  Number  createNumber(String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {  return  null;  }      [BUGGY]  int  hexDigits  =  str.indexOf('.',  1);  [BUGGY]      if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(     "A  blank  string  is  not  a  valid  number     ");  }  if  (str.startsWith(     "--     "))  {  return  null;  }  if  (str.startsWith(     "0x     ")  ||  str.startsWith(     "-0x     ")  ||  str.startsWith(     "0X     ")  ||  str.startsWith(     "-0X     "))  {  int  hexDigits  =  str.length()  -  2;  //  drop  0x  if  (str.startsWith(     "-     "))  {  //  drop  -  hexDigits--;  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  	projects/Lang7/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.5773502691896258	449	449	1	replace	int  hexDigits  =  str.indexOf('.',  1);	  int    hexDigits    =    str.indexOf('.');    	non-compiled	[CE]  unclosed  character  literal	65	None	replace
6	[BUG]  [BUGGY]  int  hexDigits  =  str.indexOf('.',  4);  [CE]  unclosed  character  literal  [FE]          NumberFormatException      [CONTEXT]      public  static  Number  createNumber(String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {  return  null;  }      [BUGGY]  int  hexDigits  =  str.indexOf('.',  4);  [BUGGY]      if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(     "A  blank  string  is  not  a  valid  number     ");  }  if  (str.startsWith(     "--     "))  {  return  null;  }  if  (str.startsWith(     "0x     ")  ||  str.startsWith(     "-0x     ")  ||  str.startsWith(     "0X     ")  ||  str.startsWith(     "-0X     "))  {  int  hexDigits  =  str.length()  -  2;  //  drop  0x  if  (str.startsWith(     "-     "))  {  //  drop  -  hexDigits--;  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  	projects/Lang7/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.5773502691896258	449	449	1	replace	int  hexDigits  =  str.indexOf('.',  4);	  int    hexDigits    =    str.indexOf('.');    	non-compiled	[CE]  unclosed  character  literal	65	None	replace
7	[BUG]  [BUGGY]  int  decPos  =  str.length()  -  2;  int  lecPos  =  str.length();  [CE]  unclosed  character  literal  [FE]              NumberFormatException      [CONTEXT]      public  static  Number  createNumber(String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {  return  null;  }      [BUGGY]  int  decPos  =  str.length()  -  2;  int  lecPos  =  str.length();  [BUGGY]      if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(     "A  blank  string  is  not  a  valid  number     ");  }  if  (str.startsWith(     "--     "))  {  return  null;  }  if  (str.startsWith(     "0x     ")  ||  str.startsWith(     "-0x     ")  ||  str.startsWith(     "0X     ")  ||  str.startsWith(     "-0X     "))  {  int  hexDigits  =  str.length()  -  2;  //  drop  0x  if  (str.startsWith(     "-     "))  {  //  drop  -  hexDigits--;  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  	projects/Lang7/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.5773502691896258	449	449	1	replace	int  decPos  =  str.length()  -  2;  int  lecPos  =  str.length();	          int    decPos    =    str.length();    int    lecPos    =    str.length();    	non-compiled	[CE]  unclosed  character  literal	60	None	replace
8	[BUG]  [BUGGY]  int  decPos  =  str.length();  int  lecPos  =  str.length()  -  2;  [CE]  unclosed  character  literal  [FE]                NumberFormatException      [CONTEXT]      public  static  Number  createNumber(String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {  return  null;  }      [BUGGY]  int  decPos  =  str.length();  int  lecPos  =  str.length()  -  2;  [BUGGY]      if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(     "A  blank  string  is  not  a  valid  number     ");  }  if  (str.startsWith(     "--     "))  {  return  null;  }  if  (str.startsWith(     "0x     ")  ||  str.startsWith(     "-0x     ")  ||  str.startsWith(     "0X     ")  ||  str.startsWith(     "-0X     "))  {  int  hexDigits  =  str.length()  -  2;  //  drop  0x  if  (str.startsWith(     "-     "))  {  //  drop  -  hexDigits--;  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  	projects/Lang7/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.5773502691896258	449	449	1	replace	int  decPos  =  str.length();  int  lecPos  =  str.length()  -  2;	          int    decPos    =    str.length();    int    lecPos    =    str.length();    	non-compiled	[CE]  unclosed  character  literal	60	None	replace
9	[BUG]  [BUGGY]  int  decPos  =  str.length()  -  1;  int  lecPos  =  str.length();  [CE]  unclosed  character  literal  [FE]                  NumberFormatException      [CONTEXT]      public  static  Number  createNumber(String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {  return  null;  }      [BUGGY]  int  decPos  =  str.length()  -  1;  int  lecPos  =  str.length();  [BUGGY]      if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(     "A  blank  string  is  not  a  valid  number     ");  }  if  (str.startsWith(     "--     "))  {  return  null;  }  if  (str.startsWith(     "0x     ")  ||  str.startsWith(     "-0x     ")  ||  str.startsWith(     "0X     ")  ||  str.startsWith(     "-0X     "))  {  int  hexDigits  =  str.length()  -  2;  //  drop  0x  if  (str.startsWith(     "-     "))  {  //  drop  -  hexDigits--;  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  	projects/Lang7/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.5773502691896258	449	449	1	replace	int  decPos  =  str.length()  -  1;  int  lecPos  =  str.length();	          int    decPos    =    str.length();    int    lecPos    =    str.length();    	non-compiled	[CE]  unclosed  character  literal	60	None	replace
10	[BUG]  [BUGGY]  Number  str  =  getNumber(str,  1);  [CE]  unclosed  character  literal  [FE]                    AssertionError      [CONTEXT]      public  static  Number  createNumber(String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {  return  null;  }      [BUGGY]  Number  str  =  getNumber(str,  1);  [BUGGY]      if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(     "A  blank  string  is  not  a  valid  number     ");  }  if  (str.startsWith(     "--     "))  {  return  null;  }  if  (str.startsWith(     "0x     ")  ||  str.startsWith(     "-0x     ")  ||  str.startsWith(     "0X     ")  ||  str.startsWith(     "-0X     "))  {  int  hexDigits  =  str.length()  -  2;  //  drop  0x  if  (str.startsWith(     "-     "))  {  //  drop  -  hexDigits--;  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  	projects/Lang7/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.5773502691896258	449	449	1	replace	Number  str  =  getNumber(str,  1);	  Number    str    =    getNumber(str,    0);    	non-compiled	[CE]  unclosed  character  literal	41	None	replace
11	[BUG]  [BUGGY]  Number  str  =  getNumber(str,  0L);  [CE]  unclosed  character  literal  [FE]                      AssertionError      [CONTEXT]      public  static  Number  createNumber(String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {  return  null;  }      [BUGGY]  Number  str  =  getNumber(str,  0L);  [BUGGY]      if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(     "A  blank  string  is  not  a  valid  number     ");  }  if  (str.startsWith(     "--     "))  {  return  null;  }  if  (str.startsWith(     "0x     ")  ||  str.startsWith(     "-0x     ")  ||  str.startsWith(     "0X     ")  ||  str.startsWith(     "-0X     "))  {  int  hexDigits  =  str.length()  -  2;  //  drop  0x  if  (str.startsWith(     "-     "))  {  //  drop  -  hexDigits--;  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  	projects/Lang7/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.5773502691896258	449	449	1	replace	Number  str  =  getNumber(str,  0L);	  Number    str    =    getNumber(str,    0);    	non-compiled	[CE]  unclosed  character  literal	41	None	replace
12	[BUG]  [BUGGY]  Number  str  =  getNumber(str,  2);  [CE]  unclosed  character  literal  [FE]                        AssertionError      [CONTEXT]      public  static  Number  createNumber(String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {  return  null;  }      [BUGGY]  Number  str  =  getNumber(str,  2);  [BUGGY]      if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(     "A  blank  string  is  not  a  valid  number     ");  }  if  (str.startsWith(     "--     "))  {  return  null;  }  if  (str.startsWith(     "0x     ")  ||  str.startsWith(     "-0x     ")  ||  str.startsWith(     "0X     ")  ||  str.startsWith(     "-0X     "))  {  int  hexDigits  =  str.length()  -  2;  //  drop  0x  if  (str.startsWith(     "-     "))  {  //  drop  -  hexDigits--;  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  	projects/Lang7/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.5773502691896258	449	449	1	replace	Number  str  =  getNumber(str,  2);	  Number    str    =    getNumber(str,    0);    	non-compiled	[CE]  unclosed  character  literal	41	None	replace
13	[BUG]  [BUGGY]  if(!StringUtils.isEmpty(str)||  StringUtils.isEmpty(str))  {  [CE]  unclosed  character  literal  [FE]            AssertionError      [CONTEXT]      public  static  Number  createNumber(String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {  return  null;  }      [BUGGY]  if(!StringUtils.isEmpty(str)||  StringUtils.isEmpty(str))  {  [BUGGY]      throw  new  NumberFormatException(     "A  blank  string  is  not  a  valid  number     ");  }  if  (str.startsWith(     "--     "))  {  return  null;  }  if  (str.startsWith(     "0x     ")  ||  str.startsWith(     "-0x     ")  ||  str.startsWith(     "0X     ")  ||  str.startsWith(     "-0X     "))  {  int  hexDigits  =  str.length()  -  2;  //  drop  0x  if  (str.startsWith(     "-     "))  {  //  drop  -  hexDigits--;  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  	projects/Lang7/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.5773502691896258	449	449	1	replace	if(!StringUtils.isEmpty(str)||  StringUtils.isEmpty(str))  {	  if(StringUtils.isEmpty(str)||    StringUtils.isEmpty(str))    {    	non-compiled	[CE]  unclosed  character  literal	18	None	replace
14	[BUG]  [BUGGY]  Number  str  =  getNumber(str,  expPos);  [CE]  unclosed  character  literal  [FE]                  AssertionError      [CONTEXT]      public  static  Number  createNumber(String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {  return  null;  }      [BUGGY]  Number  str  =  getNumber(str,  expPos);  [BUGGY]      if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(     "A  blank  string  is  not  a  valid  number     ");  }  if  (str.startsWith(     "--     "))  {  return  null;  }  if  (str.startsWith(     "0x     ")  ||  str.startsWith(     "-0x     ")  ||  str.startsWith(     "0X     ")  ||  str.startsWith(     "-0X     "))  {  int  hexDigits  =  str.length()  -  2;  //  drop  0x  if  (str.startsWith(     "-     "))  {  //  drop  -  hexDigits--;  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  	projects/Lang7/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.5773502691896258	449	449	1	replace	Number  str  =  getNumber(str,  expPos);	  Number    str    =    getNumber(str,    hexDigits);    	non-compiled	[CE]  unclosed  character  literal	40	None	replace
15	[BUG]  [BUGGY]  Number  str  =  getNumber(str,  hexDigits,  exp);  [CE]  unclosed  character  literal  [FE]                    AssertionError      [CONTEXT]      public  static  Number  createNumber(String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {  return  null;  }      [BUGGY]  Number  str  =  getNumber(str,  hexDigits,  exp);  [BUGGY]      if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(     "A  blank  string  is  not  a  valid  number     ");  }  if  (str.startsWith(     "--     "))  {  return  null;  }  if  (str.startsWith(     "0x     ")  ||  str.startsWith(     "-0x     ")  ||  str.startsWith(     "0X     ")  ||  str.startsWith(     "-0X     "))  {  int  hexDigits  =  str.length()  -  2;  //  drop  0x  if  (str.startsWith(     "-     "))  {  //  drop  -  hexDigits--;  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  	projects/Lang7/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.5773502691896258	449	449	1	replace	Number  str  =  getNumber(str,  hexDigits,  exp);	  Number    str    =    getNumber(str,    hexDigits);    	non-compiled	[CE]  unclosed  character  literal	40	None	replace
16	[BUG]  [BUGGY]  Number  str  =  getNumber(str,  hexDigits,  expPos);  [CE]  unclosed  character  literal  [FE]                      AssertionError      [CONTEXT]      public  static  Number  createNumber(String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {  return  null;  }      [BUGGY]  Number  str  =  getNumber(str,  hexDigits,  expPos);  [BUGGY]      if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(     "A  blank  string  is  not  a  valid  number     ");  }  if  (str.startsWith(     "--     "))  {  return  null;  }  if  (str.startsWith(     "0x     ")  ||  str.startsWith(     "-0x     ")  ||  str.startsWith(     "0X     ")  ||  str.startsWith(     "-0X     "))  {  int  hexDigits  =  str.length()  -  2;  //  drop  0x  if  (str.startsWith(     "-     "))  {  //  drop  -  hexDigits--;  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  	projects/Lang7/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.5773502691896258	449	449	1	replace	Number  str  =  getNumber(str,  hexDigits,  expPos);	  Number    str    =    getNumber(str,    hexDigits);    	non-compiled	[CE]  unclosed  character  literal	40	None	replace
17	[BUG]  [BUGGY]  Number  str  =  getNumber(str,  exp);  [CE]  unclosed  character  literal  [FE]                        AssertionError      [CONTEXT]      public  static  Number  createNumber(String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {  return  null;  }      [BUGGY]  Number  str  =  getNumber(str,  exp);  [BUGGY]      if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(     "A  blank  string  is  not  a  valid  number     ");  }  if  (str.startsWith(     "--     "))  {  return  null;  }  if  (str.startsWith(     "0x     ")  ||  str.startsWith(     "-0x     ")  ||  str.startsWith(     "0X     ")  ||  str.startsWith(     "-0X     "))  {  int  hexDigits  =  str.length()  -  2;  //  drop  0x  if  (str.startsWith(     "-     "))  {  //  drop  -  hexDigits--;  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  	projects/Lang7/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.5773502691896258	449	449	1	replace	Number  str  =  getNumber(str,  exp);	  Number    str    =    getNumber(str,    hexDigits);    	non-compiled	[CE]  unclosed  character  literal	40	None	replace
18	[BUG]  [BUGGY]  int  str  =  str.indexOf('.',  2);  [CE]  unclosed  character  literal  [FE]                    AssertionError      [CONTEXT]      public  static  Number  createNumber(String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {  return  null;  }      [BUGGY]  int  str  =  str.indexOf('.',  2);  [BUGGY]      if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(     "A  blank  string  is  not  a  valid  number     ");  }  if  (str.startsWith(     "--     "))  {  return  null;  }  if  (str.startsWith(     "0x     ")  ||  str.startsWith(     "-0x     ")  ||  str.startsWith(     "0X     ")  ||  str.startsWith(     "-0X     "))  {  int  hexDigits  =  str.length()  -  2;  //  drop  0x  if  (str.startsWith(     "-     "))  {  //  drop  -  hexDigits--;  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  	projects/Lang7/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.5773502691896258	449	449	1	replace	int  str  =  str.indexOf('.',  2);	  int    str    =    str.indexOf('.',    1);    	non-compiled	[CE]  unclosed  character  literal	45	None	replace
19	[BUG]  [BUGGY]  int  hexDigits  =  str.lastIndexOf('.',  12);  [CE]  unclosed  character  literal  [FE]        NumberFormatException      [CONTEXT]      public  static  Number  createNumber(String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {  return  null;  }      [BUGGY]  int  hexDigits  =  str.lastIndexOf('.',  12);  [BUGGY]      if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(     "A  blank  string  is  not  a  valid  number     ");  }  if  (str.startsWith(     "--     "))  {  return  null;  }  if  (str.startsWith(     "0x     ")  ||  str.startsWith(     "-0x     ")  ||  str.startsWith(     "0X     ")  ||  str.startsWith(     "-0X     "))  {  int  hexDigits  =  str.length()  -  2;  //  drop  0x  if  (str.startsWith(     "-     "))  {  //  drop  -  hexDigits--;  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  	projects/Lang7/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.5773502691896258	449	449	1	replace	int  hexDigits  =  str.lastIndexOf('.',  12);	  int    hexDigits    =    str.lastIndexOf('.',    16);    	non-compiled	[CE]  unclosed  character  literal	92	None	replace
20	[BUG]  [BUGGY]  int  hexDigits  =  str.lastIndexOf('.',  10);  [CE]  unclosed  character  literal  [FE]          NumberFormatException      [CONTEXT]      public  static  Number  createNumber(String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {  return  null;  }      [BUGGY]  int  hexDigits  =  str.lastIndexOf('.',  10);  [BUGGY]      if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(     "A  blank  string  is  not  a  valid  number     ");  }  if  (str.startsWith(     "--     "))  {  return  null;  }  if  (str.startsWith(     "0x     ")  ||  str.startsWith(     "-0x     ")  ||  str.startsWith(     "0X     ")  ||  str.startsWith(     "-0X     "))  {  int  hexDigits  =  str.length()  -  2;  //  drop  0x  if  (str.startsWith(     "-     "))  {  //  drop  -  hexDigits--;  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  	projects/Lang7/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.5773502691896258	449	449	1	replace	int  hexDigits  =  str.lastIndexOf('.',  10);	  int    hexDigits    =    str.lastIndexOf('.',    16);    	non-compiled	[CE]  unclosed  character  literal	92	None	replace
21	[BUG]  [BUGGY]  int  hexDigits  =  str.indexOf('.',  16);  [CE]  unclosed  character  literal  [FE]            NumberFormatException      [CONTEXT]      public  static  Number  createNumber(String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {  return  null;  }      [BUGGY]  int  hexDigits  =  str.indexOf('.',  16);  [BUGGY]      if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(     "A  blank  string  is  not  a  valid  number     ");  }  if  (str.startsWith(     "--     "))  {  return  null;  }  if  (str.startsWith(     "0x     ")  ||  str.startsWith(     "-0x     ")  ||  str.startsWith(     "0X     ")  ||  str.startsWith(     "-0X     "))  {  int  hexDigits  =  str.length()  -  2;  //  drop  0x  if  (str.startsWith(     "-     "))  {  //  drop  -  hexDigits--;  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  	projects/Lang7/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.5773502691896258	449	449	1	replace	int  hexDigits  =  str.indexOf('.',  16);	  int    hexDigits    =    str.lastIndexOf('.',    16);    	non-compiled	[CE]  unclosed  character  literal	92	None	replace
22	[BUG]  [BUGGY]  Integer  str  =  createBigInteger(str.length());  [CE]  unclosed  character  literal  [FE]                AssertionError      [CONTEXT]      public  static  Number  createNumber(String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {  return  null;  }      [BUGGY]  Integer  str  =  createBigInteger(str.length());  [BUGGY]      if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(     "A  blank  string  is  not  a  valid  number     ");  }  if  (str.startsWith(     "--     "))  {  return  null;  }  if  (str.startsWith(     "0x     ")  ||  str.startsWith(     "-0x     ")  ||  str.startsWith(     "0X     ")  ||  str.startsWith(     "-0X     "))  {  int  hexDigits  =  str.length()  -  2;  //  drop  0x  if  (str.startsWith(     "-     "))  {  //  drop  -  hexDigits--;  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  	projects/Lang7/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.5773502691896258	449	449	1	replace	Integer  str  =  createBigInteger(str.length());	  Integer    str    =    createBigInteger(str);    	non-compiled	[CE]  unclosed  character  literal	63	None	replace
23	[BUG]  [BUGGY]  Integer  str  =  createBigDecimal(str);  [CE]  unclosed  character  literal  [FE]                  AssertionError      [CONTEXT]      public  static  Number  createNumber(String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {  return  null;  }      [BUGGY]  Integer  str  =  createBigDecimal(str);  [BUGGY]      if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(     "A  blank  string  is  not  a  valid  number     ");  }  if  (str.startsWith(     "--     "))  {  return  null;  }  if  (str.startsWith(     "0x     ")  ||  str.startsWith(     "-0x     ")  ||  str.startsWith(     "0X     ")  ||  str.startsWith(     "-0X     "))  {  int  hexDigits  =  str.length()  -  2;  //  drop  0x  if  (str.startsWith(     "-     "))  {  //  drop  -  hexDigits--;  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  	projects/Lang7/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.5773502691896258	449	449	1	replace	Integer  str  =  createBigDecimal(str);	  Integer    str    =    createBigInteger(str);    	non-compiled	[CE]  unclosed  character  literal	63	None	replace
24	[BUG]  [BUGGY]  Integer  str  =  createLong(str);  [CE]  unclosed  character  literal  [FE]                    AssertionError      [CONTEXT]      public  static  Number  createNumber(String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {  return  null;  }      [BUGGY]  Integer  str  =  createLong(str);  [BUGGY]      if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(     "A  blank  string  is  not  a  valid  number     ");  }  if  (str.startsWith(     "--     "))  {  return  null;  }  if  (str.startsWith(     "0x     ")  ||  str.startsWith(     "-0x     ")  ||  str.startsWith(     "0X     ")  ||  str.startsWith(     "-0X     "))  {  int  hexDigits  =  str.length()  -  2;  //  drop  0x  if  (str.startsWith(     "-     "))  {  //  drop  -  hexDigits--;  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  	projects/Lang7/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.5773502691896258	449	449	1	replace	Integer  str  =  createLong(str);	  Integer    str    =    createBigInteger(str);    	non-compiled	[CE]  unclosed  character  literal	63	None	replace
25	[BUG]  [BUGGY]  if(!StringUtils.isBlank(str)||  StringUtils.isBlank(str)||  str.length()  ==  0)  {  [CE]  unclosed  character  literal  [FE]              AssertionError      [CONTEXT]      public  static  Number  createNumber(String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {  return  null;  }      [BUGGY]  if(!StringUtils.isBlank(str)||  StringUtils.isBlank(str)||  str.length()  ==  0)  {  [BUGGY]      throw  new  NumberFormatException(     "A  blank  string  is  not  a  valid  number     ");  }  if  (str.startsWith(     "--     "))  {  return  null;  }  if  (str.startsWith(     "0x     ")  ||  str.startsWith(     "-0x     ")  ||  str.startsWith(     "0X     ")  ||  str.startsWith(     "-0X     "))  {  int  hexDigits  =  str.length()  -  2;  //  drop  0x  if  (str.startsWith(     "-     "))  {  //  drop  -  hexDigits--;  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  	projects/Lang7/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.5773502691896258	449	449	1	replace	if(!StringUtils.isBlank(str)||  StringUtils.isBlank(str)||  str.length()  ==  0)  {	  if(StringUtils.isBlank(str)||    StringUtils.isBlank(str)||    str.length()    ==    0)    {    	non-compiled	[CE]  unclosed  character  literal	85	None	replace
26	[BUG]  [BUGGY]  if(StringUtils.isBlank(str)||  StringUtils.isBlank(str)||  str.length()!=  0)  {  [CE]  unclosed  character  literal  [FE]                AssertionError      [CONTEXT]      public  static  Number  createNumber(String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {  return  null;  }      [BUGGY]  if(StringUtils.isBlank(str)||  StringUtils.isBlank(str)||  str.length()!=  0)  {  [BUGGY]      throw  new  NumberFormatException(     "A  blank  string  is  not  a  valid  number     ");  }  if  (str.startsWith(     "--     "))  {  return  null;  }  if  (str.startsWith(     "0x     ")  ||  str.startsWith(     "-0x     ")  ||  str.startsWith(     "0X     ")  ||  str.startsWith(     "-0X     "))  {  int  hexDigits  =  str.length()  -  2;  //  drop  0x  if  (str.startsWith(     "-     "))  {  //  drop  -  hexDigits--;  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  	projects/Lang7/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.5773502691896258	449	449	1	replace	if(StringUtils.isBlank(str)||  StringUtils.isBlank(str)||  str.length()!=  0)  {	  if(StringUtils.isBlank(str)||    StringUtils.isBlank(str)||    str.length()    ==    0)    {    	non-compiled	[CE]  unclosed  character  literal	85	None	replace
27	[BUG]  [BUGGY]  if(StringUtils.isEmpty(str)||  StringUtils.isBlank(str)||  str.length()  ==  0)  {  [CE]  unclosed  character  literal  [FE]                  AssertionError      [CONTEXT]      public  static  Number  createNumber(String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {  return  null;  }      [BUGGY]  if(StringUtils.isEmpty(str)||  StringUtils.isBlank(str)||  str.length()  ==  0)  {  [BUGGY]      throw  new  NumberFormatException(     "A  blank  string  is  not  a  valid  number     ");  }  if  (str.startsWith(     "--     "))  {  return  null;  }  if  (str.startsWith(     "0x     ")  ||  str.startsWith(     "-0x     ")  ||  str.startsWith(     "0X     ")  ||  str.startsWith(     "-0X     "))  {  int  hexDigits  =  str.length()  -  2;  //  drop  0x  if  (str.startsWith(     "-     "))  {  //  drop  -  hexDigits--;  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  	projects/Lang7/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.5773502691896258	449	449	1	replace	if(StringUtils.isEmpty(str)||  StringUtils.isBlank(str)||  str.length()  ==  0)  {	  if(StringUtils.isBlank(str)||    StringUtils.isBlank(str)||    str.length()    ==    0)    {    	non-compiled	[CE]  unclosed  character  literal	85	None	replace
28	[BUG]  [BUGGY]  int  hexDigits  =  str.lastIndexOf('.').lastIndexOf('.');  [CE]  unclosed  character  literal  [FE]        NumberFormatException      [CONTEXT]      public  static  Number  createNumber(String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {  return  null;  }      [BUGGY]  int  hexDigits  =  str.lastIndexOf('.').lastIndexOf('.');  [BUGGY]      if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(     "A  blank  string  is  not  a  valid  number     ");  }  if  (str.startsWith(     "--     "))  {  return  null;  }  if  (str.startsWith(     "0x     ")  ||  str.startsWith(     "-0x     ")  ||  str.startsWith(     "0X     ")  ||  str.startsWith(     "-0X     "))  {  int  hexDigits  =  str.length()  -  2;  //  drop  0x  if  (str.startsWith(     "-     "))  {  //  drop  -  hexDigits--;  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  	projects/Lang7/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.5773502691896258	449	449	1	replace	int  hexDigits  =  str.lastIndexOf('.').lastIndexOf('.');	          int    hexDigits    =    str.lastIndexOf('.');    int    hexDigits    =    str.lastIndexOf('.').lastIndexOf('.');    	non-compiled	[CE]  unclosed  character  literal	75	None	replace
29	[BUG]  [BUGGY]  char  hexDigits  =  str.lastIndexOf('.').lastIndexOf('.');  [CE]  unclosed  character  literal  [FE]          NumberFormatException      [CONTEXT]      public  static  Number  createNumber(String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {  return  null;  }      [BUGGY]  char  hexDigits  =  str.lastIndexOf('.').lastIndexOf('.');  [BUGGY]      if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(     "A  blank  string  is  not  a  valid  number     ");  }  if  (str.startsWith(     "--     "))  {  return  null;  }  if  (str.startsWith(     "0x     ")  ||  str.startsWith(     "-0x     ")  ||  str.startsWith(     "0X     ")  ||  str.startsWith(     "-0X     "))  {  int  hexDigits  =  str.length()  -  2;  //  drop  0x  if  (str.startsWith(     "-     "))  {  //  drop  -  hexDigits--;  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  	projects/Lang7/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.5773502691896258	449	449	1	replace	char  hexDigits  =  str.lastIndexOf('.').lastIndexOf('.');	          int    hexDigits    =    str.lastIndexOf('.');    int    hexDigits    =    str.lastIndexOf('.').lastIndexOf('.');    	non-compiled	[CE]  unclosed  character  literal	75	None	replace
30	[BUG]  [BUGGY]  int  hexDigits  =  str.lastIndexOf('.').length();  [CE]  unclosed  character  literal  [FE]            NumberFormatException      [CONTEXT]      public  static  Number  createNumber(String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {  return  null;  }      [BUGGY]  int  hexDigits  =  str.lastIndexOf('.').length();  [BUGGY]      if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(     "A  blank  string  is  not  a  valid  number     ");  }  if  (str.startsWith(     "--     "))  {  return  null;  }  if  (str.startsWith(     "0x     ")  ||  str.startsWith(     "-0x     ")  ||  str.startsWith(     "0X     ")  ||  str.startsWith(     "-0X     "))  {  int  hexDigits  =  str.length()  -  2;  //  drop  0x  if  (str.startsWith(     "-     "))  {  //  drop  -  hexDigits--;  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  	projects/Lang7/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.5773502691896258	449	449	1	replace	int  hexDigits  =  str.lastIndexOf('.').length();	          int    hexDigits    =    str.lastIndexOf('.');    int    hexDigits    =    str.lastIndexOf('.').lastIndexOf('.');    	non-compiled	[CE]  unclosed  character  literal	75	None	replace
31	[BUG]  [BUGGY]  Integer  str  =  createInteger(1);  [CE]  unclosed  character  literal  [FE]                AssertionError      [CONTEXT]      public  static  Number  createNumber(String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {  return  null;  }      [BUGGY]  Integer  str  =  createInteger(1);  [BUGGY]      if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(     "A  blank  string  is  not  a  valid  number     ");  }  if  (str.startsWith(     "--     "))  {  return  null;  }  if  (str.startsWith(     "0x     ")  ||  str.startsWith(     "-0x     ")  ||  str.startsWith(     "0X     ")  ||  str.startsWith(     "-0X     "))  {  int  hexDigits  =  str.length()  -  2;  //  drop  0x  if  (str.startsWith(     "-     "))  {  //  drop  -  hexDigits--;  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  	projects/Lang7/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.5773502691896258	449	449	1	replace	Integer  str  =  createInteger(1);	  Integer    str    =    createInteger(0);    	non-compiled	[CE]  unclosed  character  literal	13	None	replace
32	[BUG]  [BUGGY]  int  str  =  str.lastIndexOf('.',  -1);  [CE]  unclosed  character  literal  [FE]                AssertionError      [CONTEXT]      public  static  Number  createNumber(String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {  return  null;  }      [BUGGY]  int  str  =  str.lastIndexOf('.',  -1);  [BUGGY]      if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(     "A  blank  string  is  not  a  valid  number     ");  }  if  (str.startsWith(     "--     "))  {  return  null;  }  if  (str.startsWith(     "0x     ")  ||  str.startsWith(     "-0x     ")  ||  str.startsWith(     "0X     ")  ||  str.startsWith(     "-0X     "))  {  int  hexDigits  =  str.length()  -  2;  //  drop  0x  if  (str.startsWith(     "-     "))  {  //  drop  -  hexDigits--;  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  	projects/Lang7/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.5773502691896258	449	449	1	replace	int  str  =  str.lastIndexOf('.',  -1);	  int    str    =    str.indexOf('.',    -1);    	non-compiled	[CE]  unclosed  character  literal	71	None	replace
33	[BUG]  [BUGGY]  int  decPos  =  str.lastIndexOf('  ');  int  descPos  =  str.indexOf('  ');  [CE]  unclosed  character  literal  [FE]            NumberFormatException      [CONTEXT]      public  static  Number  createNumber(String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {  return  null;  }      [BUGGY]  int  decPos  =  str.lastIndexOf('  ');  int  descPos  =  str.indexOf('  ');  [BUGGY]      if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(     "A  blank  string  is  not  a  valid  number     ");  }  if  (str.startsWith(     "--     "))  {  return  null;  }  if  (str.startsWith(     "0x     ")  ||  str.startsWith(     "-0x     ")  ||  str.startsWith(     "0X     ")  ||  str.startsWith(     "-0X     "))  {  int  hexDigits  =  str.length()  -  2;  //  drop  0x  if  (str.startsWith(     "-     "))  {  //  drop  -  hexDigits--;  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  	projects/Lang7/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.5773502691896258	449	449	1	replace	int  decPos  =  str.lastIndexOf('  ');  int  descPos  =  str.indexOf('  ');	          int    decPos    =    str.indexOf('    ');    int    descPos    =    str.indexOf('    ');    	non-compiled	[CE]  unclosed  character  literal	49	None	replace
34	[BUG]  [BUGGY]  int  decPos  =  str.length();  int  descPos  =  str.indexOf('  ');  [CE]  unclosed  character  literal  [FE]              NumberFormatException      [CONTEXT]      public  static  Number  createNumber(String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {  return  null;  }      [BUGGY]  int  decPos  =  str.length();  int  descPos  =  str.indexOf('  ');  [BUGGY]      if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(     "A  blank  string  is  not  a  valid  number     ");  }  if  (str.startsWith(     "--     "))  {  return  null;  }  if  (str.startsWith(     "0x     ")  ||  str.startsWith(     "-0x     ")  ||  str.startsWith(     "0X     ")  ||  str.startsWith(     "-0X     "))  {  int  hexDigits  =  str.length()  -  2;  //  drop  0x  if  (str.startsWith(     "-     "))  {  //  drop  -  hexDigits--;  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  	projects/Lang7/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.5773502691896258	449	449	1	replace	int  decPos  =  str.length();  int  descPos  =  str.indexOf('  ');	          int    decPos    =    str.indexOf('    ');    int    descPos    =    str.indexOf('    ');    	non-compiled	[CE]  unclosed  character  literal	49	None	replace
35	[BUG]  [BUGGY]  int  decPos  =  str.indexOf('  ',  str.length());  int  descPos  =  str.indexOf('  ');  [CE]  unclosed  character  literal  [FE]                NumberFormatException      [CONTEXT]      public  static  Number  createNumber(String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {  return  null;  }      [BUGGY]  int  decPos  =  str.indexOf('  ',  str.length());  int  descPos  =  str.indexOf('  ');  [BUGGY]      if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(     "A  blank  string  is  not  a  valid  number     ");  }  if  (str.startsWith(     "--     "))  {  return  null;  }  if  (str.startsWith(     "0x     ")  ||  str.startsWith(     "-0x     ")  ||  str.startsWith(     "0X     ")  ||  str.startsWith(     "-0X     "))  {  int  hexDigits  =  str.length()  -  2;  //  drop  0x  if  (str.startsWith(     "-     "))  {  //  drop  -  hexDigits--;  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  	projects/Lang7/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.5773502691896258	449	449	1	replace	int  decPos  =  str.indexOf('  ',  str.length());  int  descPos  =  str.indexOf('  ');	          int    decPos    =    str.indexOf('    ');    int    descPos    =    str.indexOf('    ');    	non-compiled	[CE]  unclosed  character  literal	49	None	replace
36	[BUG]  [BUGGY]  int  decPos  =  str.indexOf('  ',  str.length()  -  2);  int  descPos  =  str.indexOf('  ');  [CE]  unclosed  character  literal  [FE]                  NumberFormatException      [CONTEXT]      public  static  Number  createNumber(String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {  return  null;  }      [BUGGY]  int  decPos  =  str.indexOf('  ',  str.length()  -  2);  int  descPos  =  str.indexOf('  ');  [BUGGY]      if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(     "A  blank  string  is  not  a  valid  number     ");  }  if  (str.startsWith(     "--     "))  {  return  null;  }  if  (str.startsWith(     "0x     ")  ||  str.startsWith(     "-0x     ")  ||  str.startsWith(     "0X     ")  ||  str.startsWith(     "-0X     "))  {  int  hexDigits  =  str.length()  -  2;  //  drop  0x  if  (str.startsWith(     "-     "))  {  //  drop  -  hexDigits--;  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  	projects/Lang7/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.5773502691896258	449	449	1	replace	int  decPos  =  str.indexOf('  ',  str.length()  -  2);  int  descPos  =  str.indexOf('  ');	          int    decPos    =    str.indexOf('    ');    int    descPos    =    str.indexOf('    ');    	non-compiled	[CE]  unclosed  character  literal	49	None	replace
37	[BUG]  [BUGGY]  if(str.length()  ==  0  ||  StringUtils.isBlank(str))  {  [CE]  unclosed  character  literal  [FE]                    AssertionError      [CONTEXT]      public  static  Number  createNumber(String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {  return  null;  }      [BUGGY]  if(str.length()  ==  0  ||  StringUtils.isBlank(str))  {  [BUGGY]      throw  new  NumberFormatException(     "A  blank  string  is  not  a  valid  number     ");  }  if  (str.startsWith(     "--     "))  {  return  null;  }  if  (str.startsWith(     "0x     ")  ||  str.startsWith(     "-0x     ")  ||  str.startsWith(     "0X     ")  ||  str.startsWith(     "-0X     "))  {  int  hexDigits  =  str.length()  -  2;  //  drop  0x  if  (str.startsWith(     "-     "))  {  //  drop  -  hexDigits--;  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  	projects/Lang7/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.5773502691896258	449	449	1	replace	if(str.length()  ==  0  ||  StringUtils.isBlank(str))  {	  if(str.length()    ==    0    ||!StringUtils.isBlank(str))    {    	non-compiled	[CE]  unclosed  character  literal	35	None	replace
38	[BUG]  [BUGGY]  if(hexDigits.length()  ==  0  ||!StringUtils.isBlank(str))  {  [CE]  unclosed  character  literal  [FE]                      AssertionError      [CONTEXT]      public  static  Number  createNumber(String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {  return  null;  }      [BUGGY]  if(hexDigits.length()  ==  0  ||!StringUtils.isBlank(str))  {  [BUGGY]      throw  new  NumberFormatException(     "A  blank  string  is  not  a  valid  number     ");  }  if  (str.startsWith(     "--     "))  {  return  null;  }  if  (str.startsWith(     "0x     ")  ||  str.startsWith(     "-0x     ")  ||  str.startsWith(     "0X     ")  ||  str.startsWith(     "-0X     "))  {  int  hexDigits  =  str.length()  -  2;  //  drop  0x  if  (str.startsWith(     "-     "))  {  //  drop  -  hexDigits--;  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  	projects/Lang7/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.5773502691896258	449	449	1	replace	if(hexDigits.length()  ==  0  ||!StringUtils.isBlank(str))  {	  if(str.length()    ==    0    ||!StringUtils.isBlank(str))    {    	non-compiled	[CE]  unclosed  character  literal	35	None	replace
39	[BUG]  [BUGGY]  if(StringUtils.isBlank(str)||  StringUtils.isEmpty(str)||  str.length()!=  0)  {  [CE]  unclosed  character  literal  [FE]    NumberFormatException    [CONTEXT]      public  static  Number  createNumber(String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {  return  null;  }      [BUGGY]  if(StringUtils.isBlank(str)||  StringUtils.isEmpty(str)||  str.length()!=  0)  {  [BUGGY]      throw  new  NumberFormatException(     "A  blank  string  is  not  a  valid  number     ");  }  if  (str.startsWith(     "--     "))  {  return  null;  }  if  (str.startsWith(     "0x     ")  ||  str.startsWith(     "-0x     ")  ||  str.startsWith(     "0X     ")  ||  str.startsWith(     "-0X     "))  {  int  hexDigits  =  str.length()  -  2;  //  drop  0x  if  (str.startsWith(     "-     "))  {  //  drop  -  hexDigits--;  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  	projects/Lang7/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.5773502691896258	449	449	1	replace	if(StringUtils.isBlank(str)||  StringUtils.isEmpty(str)||  str.length()!=  0)  {	  if(StringUtils.isBlank(str)||    StringUtils.isEmpty(str)||    str.length()    ==    0)    {    	non-compiled	[CE]  unclosed  character  literal	22	None	replace
40	[BUG]  [BUGGY]  if(StringUtils.isEmpty(str)||  StringUtils.isEmpty(str)||  str.length()  ==  0)  {  [CE]  unclosed  character  literal  [FE]      NumberFormatException    [CONTEXT]      public  static  Number  createNumber(String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {  return  null;  }      [BUGGY]  if(StringUtils.isEmpty(str)||  StringUtils.isEmpty(str)||  str.length()  ==  0)  {  [BUGGY]      throw  new  NumberFormatException(     "A  blank  string  is  not  a  valid  number     ");  }  if  (str.startsWith(     "--     "))  {  return  null;  }  if  (str.startsWith(     "0x     ")  ||  str.startsWith(     "-0x     ")  ||  str.startsWith(     "0X     ")  ||  str.startsWith(     "-0X     "))  {  int  hexDigits  =  str.length()  -  2;  //  drop  0x  if  (str.startsWith(     "-     "))  {  //  drop  -  hexDigits--;  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  	projects/Lang7/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.5773502691896258	449	449	1	replace	if(StringUtils.isEmpty(str)||  StringUtils.isEmpty(str)||  str.length()  ==  0)  {	  if(StringUtils.isBlank(str)||    StringUtils.isEmpty(str)||    str.length()    ==    0)    {    	non-compiled	[CE]  unclosed  character  literal	22	None	replace
41	[BUG]  [BUGGY]  if(str  ==  null  ||  StringUtils.isBlank(str)&&  str.length()  ==  0)  {  [CE]  unclosed  character  literal  [FE]              AssertionError      [CONTEXT]      public  static  Number  createNumber(String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {  return  null;  }      [BUGGY]  if(str  ==  null  ||  StringUtils.isBlank(str)&&  str.length()  ==  0)  {  [BUGGY]      throw  new  NumberFormatException(     "A  blank  string  is  not  a  valid  number     ");  }  if  (str.startsWith(     "--     "))  {  return  null;  }  if  (str.startsWith(     "0x     ")  ||  str.startsWith(     "-0x     ")  ||  str.startsWith(     "0X     ")  ||  str.startsWith(     "-0X     "))  {  int  hexDigits  =  str.length()  -  2;  //  drop  0x  if  (str.startsWith(     "-     "))  {  //  drop  -  hexDigits--;  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  	projects/Lang7/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.5773502691896258	449	449	1	replace	if(str  ==  null  ||  StringUtils.isBlank(str)&&  str.length()  ==  0)  {	  if(str    ==    null    ||    StringUtils.isBlank(str)||    str.length()    ==    0)    {    	non-compiled	[CE]  unclosed  character  literal	55	None	replace
42	[BUG]  [BUGGY]  if(str  ==  null  ||  StringUtils.isEmpty(str)||  str.length()  ==  0)  {  [CE]  unclosed  character  literal  [FE]                AssertionError      [CONTEXT]      public  static  Number  createNumber(String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {  return  null;  }      [BUGGY]  if(str  ==  null  ||  StringUtils.isEmpty(str)||  str.length()  ==  0)  {  [BUGGY]      throw  new  NumberFormatException(     "A  blank  string  is  not  a  valid  number     ");  }  if  (str.startsWith(     "--     "))  {  return  null;  }  if  (str.startsWith(     "0x     ")  ||  str.startsWith(     "-0x     ")  ||  str.startsWith(     "0X     ")  ||  str.startsWith(     "-0X     "))  {  int  hexDigits  =  str.length()  -  2;  //  drop  0x  if  (str.startsWith(     "-     "))  {  //  drop  -  hexDigits--;  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  	projects/Lang7/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.5773502691896258	449	449	1	replace	if(str  ==  null  ||  StringUtils.isEmpty(str)||  str.length()  ==  0)  {	  if(str    ==    null    ||    StringUtils.isBlank(str)||    str.length()    ==    0)    {    	non-compiled	[CE]  unclosed  character  literal	55	None	replace
43	[BUG]  [BUGGY]  if(str  ==  null  ||  str.length()  ==  0)  {  [CE]  unclosed  character  literal  [FE]            AssertionError      [CONTEXT]      public  static  Number  createNumber(String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {  return  null;  }      [BUGGY]  if(str  ==  null  ||  str.length()  ==  0)  {  [BUGGY]      throw  new  NumberFormatException(     "A  blank  string  is  not  a  valid  number     ");  }  if  (str.startsWith(     "--     "))  {  return  null;  }  if  (str.startsWith(     "0x     ")  ||  str.startsWith(     "-0x     ")  ||  str.startsWith(     "0X     ")  ||  str.startsWith(     "-0X     "))  {  int  hexDigits  =  str.length()  -  2;  //  drop  0x  if  (str.startsWith(     "-     "))  {  //  drop  -  hexDigits--;  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  	projects/Lang7/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.5773502691896258	449	449	1	replace	if(str  ==  null  ||  str.length()  ==  0)  {	  if(str    ==    null    ||    StringUtils.isEmpty(str))    {    	non-compiled	[CE]  unclosed  character  literal	54	None	replace
44	[BUG]  [BUGGY]  Integer  decPos  =  str.length();  [CE]  unclosed  character  literal  [FE]              NumberFormatException      [CONTEXT]      public  static  Number  createNumber(String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {  return  null;  }      [BUGGY]  Integer  decPos  =  str.length();  [BUGGY]      if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(     "A  blank  string  is  not  a  valid  number     ");  }  if  (str.startsWith(     "--     "))  {  return  null;  }  if  (str.startsWith(     "0x     ")  ||  str.startsWith(     "-0x     ")  ||  str.startsWith(     "0X     ")  ||  str.startsWith(     "-0X     "))  {  int  hexDigits  =  str.length()  -  2;  //  drop  0x  if  (str.startsWith(     "-     "))  {  //  drop  -  hexDigits--;  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  	projects/Lang7/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.5773502691896258	449	449	1	replace	Integer  decPos  =  str.length();	  int    decPos    =    str.length()    -    1;    	non-compiled	[CE]  unclosed  character  literal	28	None	replace
45	[BUG]  [BUGGY]  int  decPos  =  str.lastIndexOf('  ');  int  decPos  =  str.indexOf('  ');  [CE]  unclosed  character  literal  [FE]        NumberFormatException      [CONTEXT]      public  static  Number  createNumber(String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {  return  null;  }      [BUGGY]  int  decPos  =  str.lastIndexOf('  ');  int  decPos  =  str.indexOf('  ');  [BUGGY]      if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(     "A  blank  string  is  not  a  valid  number     ");  }  if  (str.startsWith(     "--     "))  {  return  null;  }  if  (str.startsWith(     "0x     ")  ||  str.startsWith(     "-0x     ")  ||  str.startsWith(     "0X     ")  ||  str.startsWith(     "-0X     "))  {  int  hexDigits  =  str.length()  -  2;  //  drop  0x  if  (str.startsWith(     "-     "))  {  //  drop  -  hexDigits--;  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  	projects/Lang7/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.5773502691896258	449	449	1	replace	int  decPos  =  str.lastIndexOf('  ');  int  decPos  =  str.indexOf('  ');	          int    decPos    =    str.indexOf('    ');    int    decPos    =    str.indexOf('    ');    	non-compiled	[CE]  unclosed  character  literal	47	None	replace
46	[BUG]  [BUGGY]  int  decPos  =  str.indexOf('  ',  str.length());  [CE]  unclosed  character  literal  [FE]          NumberFormatException      [CONTEXT]      public  static  Number  createNumber(String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {  return  null;  }      [BUGGY]  int  decPos  =  str.indexOf('  ',  str.length());  [BUGGY]      if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(     "A  blank  string  is  not  a  valid  number     ");  }  if  (str.startsWith(     "--     "))  {  return  null;  }  if  (str.startsWith(     "0x     ")  ||  str.startsWith(     "-0x     ")  ||  str.startsWith(     "0X     ")  ||  str.startsWith(     "-0X     "))  {  int  hexDigits  =  str.length()  -  2;  //  drop  0x  if  (str.startsWith(     "-     "))  {  //  drop  -  hexDigits--;  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  	projects/Lang7/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.5773502691896258	449	449	1	replace	int  decPos  =  str.indexOf('  ',  str.length());	          int    decPos    =    str.indexOf('    ');    int    decPos    =    str.indexOf('    ');    	non-compiled	[CE]  unclosed  character  literal	47	None	replace
47	[BUG]  [BUGGY]  int  hexDigits  =  str.length()  -  1;  [CE]  unclosed  character  literal  [FE]        NumberFormatException      [CONTEXT]      public  static  Number  createNumber(String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {  return  null;  }      [BUGGY]  int  hexDigits  =  str.length()  -  1;  [BUGGY]      if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(     "A  blank  string  is  not  a  valid  number     ");  }  if  (str.startsWith(     "--     "))  {  return  null;  }  if  (str.startsWith(     "0x     ")  ||  str.startsWith(     "-0x     ")  ||  str.startsWith(     "0X     ")  ||  str.startsWith(     "-0X     "))  {  int  hexDigits  =  str.length()  -  2;  //  drop  0x  if  (str.startsWith(     "-     "))  {  //  drop  -  hexDigits--;  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  	projects/Lang7/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.5773502691896258	449	449	1	replace	int  hexDigits  =  str.length()  -  1;	  int    hexDigits    =    str.lastIndexOf('.',    1);    	non-compiled	[CE]  unclosed  character  literal	29	None	replace
48	[BUG]  [BUGGY]  Integer  hexDigits  =  str.lastIndexOf('.');  [CE]  unclosed  character  literal  [FE]          NumberFormatException      [CONTEXT]      public  static  Number  createNumber(String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {  return  null;  }      [BUGGY]  Integer  hexDigits  =  str.lastIndexOf('.');  [BUGGY]      if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(     "A  blank  string  is  not  a  valid  number     ");  }  if  (str.startsWith(     "--     "))  {  return  null;  }  if  (str.startsWith(     "0x     ")  ||  str.startsWith(     "-0x     ")  ||  str.startsWith(     "0X     ")  ||  str.startsWith(     "-0X     "))  {  int  hexDigits  =  str.length()  -  2;  //  drop  0x  if  (str.startsWith(     "-     "))  {  //  drop  -  hexDigits--;  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  	projects/Lang7/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.5773502691896258	449	449	1	replace	Integer  hexDigits  =  str.lastIndexOf('.');	          int    hexDigits    =    str.lastIndexOf('.');    Integer    hexDigits    =    str.lastIndexOf('.');    	non-compiled	[CE]  unclosed  character  literal	6	None	replace
49	[BUG]  [BUGGY]  Integer  hexDigits  =  str.indexOf('.');  [CE]  unclosed  character  literal  [FE]            NumberFormatException      [CONTEXT]      public  static  Number  createNumber(String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {  return  null;  }      [BUGGY]  Integer  hexDigits  =  str.indexOf('.');  [BUGGY]      if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(     "A  blank  string  is  not  a  valid  number     ");  }  if  (str.startsWith(     "--     "))  {  return  null;  }  if  (str.startsWith(     "0x     ")  ||  str.startsWith(     "-0x     ")  ||  str.startsWith(     "0X     ")  ||  str.startsWith(     "-0X     "))  {  int  hexDigits  =  str.length()  -  2;  //  drop  0x  if  (str.startsWith(     "-     "))  {  //  drop  -  hexDigits--;  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  	projects/Lang7/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.5773502691896258	449	449	1	replace	Integer  hexDigits  =  str.indexOf('.');	          int    hexDigits    =    str.lastIndexOf('.');    Integer    hexDigits    =    str.lastIndexOf('.');    	non-compiled	[CE]  unclosed  character  literal	6	None	replace
50	[BUG]  [BUGGY]  int  str  =  createInteger(str.length());  [CE]  unclosed  character  literal  [FE]                    AssertionError      [CONTEXT]      public  static  Number  createNumber(String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {  return  null;  }      [BUGGY]  int  str  =  createInteger(str.length());  [BUGGY]      if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(     "A  blank  string  is  not  a  valid  number     ");  }  if  (str.startsWith(     "--     "))  {  return  null;  }  if  (str.startsWith(     "0x     ")  ||  str.startsWith(     "-0x     ")  ||  str.startsWith(     "0X     ")  ||  str.startsWith(     "-0X     "))  {  int  hexDigits  =  str.length()  -  2;  //  drop  0x  if  (str.startsWith(     "-     "))  {  //  drop  -  hexDigits--;  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  	projects/Lang7/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.5773502691896258	449	449	1	replace	int  str  =  createInteger(str.length());	  Integer    str    =    createInteger(str.length()    -    2);    	non-compiled	[CE]  unclosed  character  literal	9	None	replace
51	[BUG]  [BUGGY]  Integer  str  =  getInteger(str.length());  [CE]  unclosed  character  literal  [FE]                      AssertionError      [CONTEXT]      public  static  Number  createNumber(String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {  return  null;  }      [BUGGY]  Integer  str  =  getInteger(str.length());  [BUGGY]      if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(     "A  blank  string  is  not  a  valid  number     ");  }  if  (str.startsWith(     "--     "))  {  return  null;  }  if  (str.startsWith(     "0x     ")  ||  str.startsWith(     "-0x     ")  ||  str.startsWith(     "0X     ")  ||  str.startsWith(     "-0X     "))  {  int  hexDigits  =  str.length()  -  2;  //  drop  0x  if  (str.startsWith(     "-     "))  {  //  drop  -  hexDigits--;  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  	projects/Lang7/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.5773502691896258	449	449	1	replace	Integer  str  =  getInteger(str.length());	  Integer    str    =    createInteger(str.length()    -    2);    	non-compiled	[CE]  unclosed  character  literal	9	None	replace
52	[BUG]  [BUGGY]  int  str  =  str.lastIndexOf('.',  dec);  [CE]  unclosed  character  literal  [FE]                AssertionError      [CONTEXT]      public  static  Number  createNumber(String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {  return  null;  }      [BUGGY]  int  str  =  str.lastIndexOf('.',  dec);  [BUGGY]      if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(     "A  blank  string  is  not  a  valid  number     ");  }  if  (str.startsWith(     "--     "))  {  return  null;  }  if  (str.startsWith(     "0x     ")  ||  str.startsWith(     "-0x     ")  ||  str.startsWith(     "0X     ")  ||  str.startsWith(     "-0X     "))  {  int  hexDigits  =  str.length()  -  2;  //  drop  0x  if  (str.startsWith(     "-     "))  {  //  drop  -  hexDigits--;  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  	projects/Lang7/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.5773502691896258	449	449	1	replace	int  str  =  str.lastIndexOf('.',  dec);	  int    str    =    str.indexOf('.',    dec);    	non-compiled	[CE]  unclosed  character  literal	87	None	replace
53	[BUG]  [BUGGY]  int  str  =  dec.indexOf('.',  str);  [CE]  unclosed  character  literal  [FE]                  AssertionError      [CONTEXT]      public  static  Number  createNumber(String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {  return  null;  }      [BUGGY]  int  str  =  dec.indexOf('.',  str);  [BUGGY]      if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(     "A  blank  string  is  not  a  valid  number     ");  }  if  (str.startsWith(     "--     "))  {  return  null;  }  if  (str.startsWith(     "0x     ")  ||  str.startsWith(     "-0x     ")  ||  str.startsWith(     "0X     ")  ||  str.startsWith(     "-0X     "))  {  int  hexDigits  =  str.length()  -  2;  //  drop  0x  if  (str.startsWith(     "-     "))  {  //  drop  -  hexDigits--;  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  	projects/Lang7/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.5773502691896258	449	449	1	replace	int  str  =  dec.indexOf('.',  str);	  int    str    =    str.indexOf('.',    dec);    	non-compiled	[CE]  unclosed  character  literal	87	None	replace
54	[BUG]  [BUGGY]  int  descPos  =  str.length();  [CE]  unclosed  character  literal  [FE]            NumberFormatException      [CONTEXT]      public  static  Number  createNumber(String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {  return  null;  }      [BUGGY]  int  descPos  =  str.length();  [BUGGY]      if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(     "A  blank  string  is  not  a  valid  number     ");  }  if  (str.startsWith(     "--     "))  {  return  null;  }  if  (str.startsWith(     "0x     ")  ||  str.startsWith(     "-0x     ")  ||  str.startsWith(     "0X     ")  ||  str.startsWith(     "-0X     "))  {  int  hexDigits  =  str.length()  -  2;  //  drop  0x  if  (str.startsWith(     "-     "))  {  //  drop  -  hexDigits--;  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  	projects/Lang7/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.5773502691896258	449	449	1	replace	int  descPos  =  str.length();	          int    decPos    =    str.length();    int    descPos    =    str.length();    	non-compiled	[CE]  unclosed  character  literal	59	None	replace
55	[BUG]  [BUGGY]  int  decPos  =  str.indexOf('  ').indexOf('  ');  [CE]  unclosed  character  literal  [FE]        NumberFormatException      [CONTEXT]      public  static  Number  createNumber(String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {  return  null;  }      [BUGGY]  int  decPos  =  str.indexOf('  ').indexOf('  ');  [BUGGY]      if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(     "A  blank  string  is  not  a  valid  number     ");  }  if  (str.startsWith(     "--     "))  {  return  null;  }  if  (str.startsWith(     "0x     ")  ||  str.startsWith(     "-0x     ")  ||  str.startsWith(     "0X     ")  ||  str.startsWith(     "-0X     "))  {  int  hexDigits  =  str.length()  -  2;  //  drop  0x  if  (str.startsWith(     "-     "))  {  //  drop  -  hexDigits--;  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  	projects/Lang7/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.5773502691896258	449	449	1	replace	int  decPos  =  str.indexOf('  ').indexOf('  ');	          int    decPos    =    str.indexOf('    ');    int    decPos    =    str.indexOf('    ').indexOf('    ');    	non-compiled	[CE]  unclosed  character  literal	91	None	replace
56	[BUG]  [BUGGY]  int  decPos  =  str.lastIndexOf('  ').indexOf('  ');  [CE]  unclosed  character  literal  [FE]          NumberFormatException      [CONTEXT]      public  static  Number  createNumber(String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {  return  null;  }      [BUGGY]  int  decPos  =  str.lastIndexOf('  ').indexOf('  ');  [BUGGY]      if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(     "A  blank  string  is  not  a  valid  number     ");  }  if  (str.startsWith(     "--     "))  {  return  null;  }  if  (str.startsWith(     "0x     ")  ||  str.startsWith(     "-0x     ")  ||  str.startsWith(     "0X     ")  ||  str.startsWith(     "-0X     "))  {  int  hexDigits  =  str.length()  -  2;  //  drop  0x  if  (str.startsWith(     "-     "))  {  //  drop  -  hexDigits--;  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  	projects/Lang7/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.5773502691896258	449	449	1	replace	int  decPos  =  str.lastIndexOf('  ').indexOf('  ');	          int    decPos    =    str.indexOf('    ');    int    decPos    =    str.indexOf('    ').indexOf('    ');    	non-compiled	[CE]  unclosed  character  literal	91	None	replace
57	[BUG]  [BUGGY]  int  decPos  =  str.indexOf('  ').indexOf('  ')+  1;  [CE]  unclosed  character  literal  [FE]            NumberFormatException      [CONTEXT]      public  static  Number  createNumber(String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {  return  null;  }      [BUGGY]  int  decPos  =  str.indexOf('  ').indexOf('  ')+  1;  [BUGGY]      if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(     "A  blank  string  is  not  a  valid  number     ");  }  if  (str.startsWith(     "--     "))  {  return  null;  }  if  (str.startsWith(     "0x     ")  ||  str.startsWith(     "-0x     ")  ||  str.startsWith(     "0X     ")  ||  str.startsWith(     "-0X     "))  {  int  hexDigits  =  str.length()  -  2;  //  drop  0x  if  (str.startsWith(     "-     "))  {  //  drop  -  hexDigits--;  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  	projects/Lang7/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.5773502691896258	449	449	1	replace	int  decPos  =  str.indexOf('  ').indexOf('  ')+  1;	          int    decPos    =    str.indexOf('    ');    int    decPos    =    str.indexOf('    ').indexOf('    ');    	non-compiled	[CE]  unclosed  character  literal	91	None	replace
58	[BUG]  [BUGGY]  int  decPos  =  str.indexOf('  ');  int  decPos  =  str.lastIndexOf('  ').indexOf('  ');  [CE]  unclosed  character  literal  [FE]              NumberFormatException      [CONTEXT]      public  static  Number  createNumber(String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {  return  null;  }      [BUGGY]  int  decPos  =  str.indexOf('  ');  int  decPos  =  str.lastIndexOf('  ').indexOf('  ');  [BUGGY]      if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(     "A  blank  string  is  not  a  valid  number     ");  }  if  (str.startsWith(     "--     "))  {  return  null;  }  if  (str.startsWith(     "0x     ")  ||  str.startsWith(     "-0x     ")  ||  str.startsWith(     "0X     ")  ||  str.startsWith(     "-0X     "))  {  int  hexDigits  =  str.length()  -  2;  //  drop  0x  if  (str.startsWith(     "-     "))  {  //  drop  -  hexDigits--;  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  	projects/Lang7/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.5773502691896258	449	449	1	replace	int  decPos  =  str.indexOf('  ');  int  decPos  =  str.lastIndexOf('  ').indexOf('  ');	          int    decPos    =    str.indexOf('    ');    int    decPos    =    str.indexOf('    ').indexOf('    ');    	non-compiled	[CE]  unclosed  character  literal	91	None	replace
59	[BUG]  [BUGGY]  if(!StringUtils.isBlank(str)||  StringUtils.isBlank(str))  {  if(!StringUtils.isBlank(str)||  StringUtils.isBlank(str))  {  [CE]  unclosed  character  literal  [FE]    NumberFormatException    [CONTEXT]      public  static  Number  createNumber(String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {  return  null;  }      [BUGGY]  if(!StringUtils.isBlank(str)||  StringUtils.isBlank(str))  {  if(!StringUtils.isBlank(str)||  StringUtils.isBlank(str))  {  [BUGGY]      throw  new  NumberFormatException(     "A  blank  string  is  not  a  valid  number     ");  }  if  (str.startsWith(     "--     "))  {  return  null;  }  if  (str.startsWith(     "0x     ")  ||  str.startsWith(     "-0x     ")  ||  str.startsWith(     "0X     ")  ||  str.startsWith(     "-0X     "))  {  int  hexDigits  =  str.length()  -  2;  //  drop  0x  if  (str.startsWith(     "-     "))  {  //  drop  -  hexDigits--;  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  	projects/Lang7/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.5773502691896258	449	449	1	replace	if(!StringUtils.isBlank(str)||    StringUtils.isBlank(str))    {    if(!StringUtils.isBlank(str)||  StringUtils.isBlank(str))  {	  	non-compiled	[CE]  unclosed  character  literal	23	None	add
60	[BUG]  [BUGGY]  if(!StringUtils.isBlank(str)||  StringUtils.isBlank(str))  {  If(!StringUtils.isBlank(str)||  StringUtils.isBlank(str))  {  [CE]  ';'  expected  [FE]      NumberFormatException    [CONTEXT]      public  static  Number  createNumber(String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {  return  null;  }      [BUGGY]  if(!StringUtils.isBlank(str)||  StringUtils.isBlank(str))  {  If(!StringUtils.isBlank(str)||  StringUtils.isBlank(str))  {  [BUGGY]      throw  new  NumberFormatException(     "A  blank  string  is  not  a  valid  number     ");  }  if  (str.startsWith(     "--     "))  {  return  null;  }  if  (str.startsWith(     "0x     ")  ||  str.startsWith(     "-0x     ")  ||  str.startsWith(     "0X     ")  ||  str.startsWith(     "-0X     "))  {  int  hexDigits  =  str.length()  -  2;  //  drop  0x  if  (str.startsWith(     "-     "))  {  //  drop  -  hexDigits--;  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  	projects/Lang7/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.5773502691896258	449	449	1	replace	if(!StringUtils.isBlank(str)||    StringUtils.isBlank(str))    {    If(!StringUtils.isBlank(str)||  StringUtils.isBlank(str))  {	  	non-compiled	[CE]  ';'  expected	23	None	add
61	[BUG]  [BUGGY]  int  decPos  =  str.lastIndexOf('  ',  DEC_PREFIX);  [CE]  unclosed  character  literal  [FE]        NumberFormatException      [CONTEXT]      public  static  Number  createNumber(String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {  return  null;  }      [BUGGY]  int  decPos  =  str.lastIndexOf('  ',  DEC_PREFIX);  [BUGGY]      if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(     "A  blank  string  is  not  a  valid  number     ");  }  if  (str.startsWith(     "--     "))  {  return  null;  }  if  (str.startsWith(     "0x     ")  ||  str.startsWith(     "-0x     ")  ||  str.startsWith(     "0X     ")  ||  str.startsWith(     "-0X     "))  {  int  hexDigits  =  str.length()  -  2;  //  drop  0x  if  (str.startsWith(     "-     "))  {  //  drop  -  hexDigits--;  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  	projects/Lang7/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.5773502691896258	449	449	1	replace	int  decPos  =  str.lastIndexOf('  ',  DEC_PREFIX);	  int    decPos    =    str.indexOf('    ',    DEC_PREFIX);    	non-compiled	[CE]  unclosed  character  literal	73	None	replace
62	[BUG]  [BUGGY]  int  decPos  =  str.indexOf('  ',  DEC_PREFIX  +  1);  [CE]  unclosed  character  literal  [FE]          NumberFormatException      [CONTEXT]      public  static  Number  createNumber(String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {  return  null;  }      [BUGGY]  int  decPos  =  str.indexOf('  ',  DEC_PREFIX  +  1);  [BUGGY]      if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(     "A  blank  string  is  not  a  valid  number     ");  }  if  (str.startsWith(     "--     "))  {  return  null;  }  if  (str.startsWith(     "0x     ")  ||  str.startsWith(     "-0x     ")  ||  str.startsWith(     "0X     ")  ||  str.startsWith(     "-0X     "))  {  int  hexDigits  =  str.length()  -  2;  //  drop  0x  if  (str.startsWith(     "-     "))  {  //  drop  -  hexDigits--;  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  	projects/Lang7/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.5773502691896258	449	449	1	replace	int  decPos  =  str.indexOf('  ',  DEC_PREFIX  +  1);	  int    decPos    =    str.indexOf('    ',    DEC_PREFIX);    	non-compiled	[CE]  unclosed  character  literal	73	None	replace
63	[BUG]  [BUGGY]  int  decPos  =  str.indexOf('  ',  1);  [CE]  unclosed  character  literal  [FE]            NumberFormatException      [CONTEXT]      public  static  Number  createNumber(String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {  return  null;  }      [BUGGY]  int  decPos  =  str.indexOf('  ',  1);  [BUGGY]      if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(     "A  blank  string  is  not  a  valid  number     ");  }  if  (str.startsWith(     "--     "))  {  return  null;  }  if  (str.startsWith(     "0x     ")  ||  str.startsWith(     "-0x     ")  ||  str.startsWith(     "0X     ")  ||  str.startsWith(     "-0X     "))  {  int  hexDigits  =  str.length()  -  2;  //  drop  0x  if  (str.startsWith(     "-     "))  {  //  drop  -  hexDigits--;  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  	projects/Lang7/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.5773502691896258	449	449	1	replace	int  decPos  =  str.indexOf('  ',  1);	  int    decPos    =    str.indexOf('    ',    DEC_PREFIX);    	non-compiled	[CE]  unclosed  character  literal	73	None	replace
64	[BUG]  [BUGGY]  int  decPos  =  str.indexOf('  ',  4);  [CE]  unclosed  character  literal  [FE]              NumberFormatException      [CONTEXT]      public  static  Number  createNumber(String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {  return  null;  }      [BUGGY]  int  decPos  =  str.indexOf('  ',  4);  [BUGGY]      if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(     "A  blank  string  is  not  a  valid  number     ");  }  if  (str.startsWith(     "--     "))  {  return  null;  }  if  (str.startsWith(     "0x     ")  ||  str.startsWith(     "-0x     ")  ||  str.startsWith(     "0X     ")  ||  str.startsWith(     "-0X     "))  {  int  hexDigits  =  str.length()  -  2;  //  drop  0x  if  (str.startsWith(     "-     "))  {  //  drop  -  hexDigits--;  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  	projects/Lang7/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.5773502691896258	449	449	1	replace	int  decPos  =  str.indexOf('  ',  4);	  int    decPos    =    str.indexOf('    ',    DEC_PREFIX);    	non-compiled	[CE]  unclosed  character  literal	73	None	replace
65	[BUG]  [BUGGY]  Number  str  =  createQuotedNumber(str,  hexDigits);  [CE]  unclosed  character  literal  [FE]                AssertionError      [CONTEXT]      public  static  Number  createNumber(String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {  return  null;  }      [BUGGY]  Number  str  =  createQuotedNumber(str,  hexDigits);  [BUGGY]      if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(     "A  blank  string  is  not  a  valid  number     ");  }  if  (str.startsWith(     "--     "))  {  return  null;  }  if  (str.startsWith(     "0x     ")  ||  str.startsWith(     "-0x     ")  ||  str.startsWith(     "0X     ")  ||  str.startsWith(     "-0X     "))  {  int  hexDigits  =  str.length()  -  2;  //  drop  0x  if  (str.startsWith(     "-     "))  {  //  drop  -  hexDigits--;  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  	projects/Lang7/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.5773502691896258	449	449	1	replace	Number  str  =  createQuotedNumber(str,  hexDigits);	  Number    str    =    createQuotedNumber(str);    	non-compiled	[CE]  unclosed  character  literal	90	None	replace
66	[BUG]  [BUGGY]  Number  str  =  createQuotedString(str);  [CE]  unclosed  character  literal  [FE]                  AssertionError      [CONTEXT]      public  static  Number  createNumber(String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {  return  null;  }      [BUGGY]  Number  str  =  createQuotedString(str);  [BUGGY]      if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(     "A  blank  string  is  not  a  valid  number     ");  }  if  (str.startsWith(     "--     "))  {  return  null;  }  if  (str.startsWith(     "0x     ")  ||  str.startsWith(     "-0x     ")  ||  str.startsWith(     "0X     ")  ||  str.startsWith(     "-0X     "))  {  int  hexDigits  =  str.length()  -  2;  //  drop  0x  if  (str.startsWith(     "-     "))  {  //  drop  -  hexDigits--;  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  	projects/Lang7/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.5773502691896258	449	449	1	replace	Number  str  =  createQuotedString(str);	  Number    str    =    createQuotedNumber(str);    	non-compiled	[CE]  unclosed  character  literal	90	None	replace
67	[BUG]  [BUGGY]  Number  str  =  createQuotedNumber(str.substring(1));  [CE]  unclosed  character  literal  [FE]                    AssertionError      [CONTEXT]      public  static  Number  createNumber(String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {  return  null;  }      [BUGGY]  Number  str  =  createQuotedNumber(str.substring(1));  [BUGGY]      if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(     "A  blank  string  is  not  a  valid  number     ");  }  if  (str.startsWith(     "--     "))  {  return  null;  }  if  (str.startsWith(     "0x     ")  ||  str.startsWith(     "-0x     ")  ||  str.startsWith(     "0X     ")  ||  str.startsWith(     "-0X     "))  {  int  hexDigits  =  str.length()  -  2;  //  drop  0x  if  (str.startsWith(     "-     "))  {  //  drop  -  hexDigits--;  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  	projects/Lang7/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.5773502691896258	449	449	1	replace	Number  str  =  createQuotedNumber(str.substring(1));	  Number    str    =    createQuotedNumber(str);    	non-compiled	[CE]  unclosed  character  literal	90	None	replace
68	[BUG]  [BUGGY]  Number  str  =  createNumber(str.length()  -  2);  [CE]  unclosed  character  literal  [FE]              AssertionError      [CONTEXT]      public  static  Number  createNumber(String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {  return  null;  }      [BUGGY]  Number  str  =  createNumber(str.length()  -  2);  [BUGGY]      if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(     "A  blank  string  is  not  a  valid  number     ");  }  if  (str.startsWith(     "--     "))  {  return  null;  }  if  (str.startsWith(     "0x     ")  ||  str.startsWith(     "-0x     ")  ||  str.startsWith(     "0X     ")  ||  str.startsWith(     "-0X     "))  {  int  hexDigits  =  str.length()  -  2;  //  drop  0x  if  (str.startsWith(     "-     "))  {  //  drop  -  hexDigits--;  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  	projects/Lang7/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.5773502691896258	449	449	1	replace	Number  str  =  createNumber(str.length()  -  2);	  Number    str    =    createNumber(str.length());    	non-compiled	[CE]  unclosed  character  literal	78	None	replace
69	[BUG]  [BUGGY]  Number  str  =  createNumber(str.length()  -  1);  [CE]  unclosed  character  literal  [FE]                AssertionError      [CONTEXT]      public  static  Number  createNumber(String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {  return  null;  }      [BUGGY]  Number  str  =  createNumber(str.length()  -  1);  [BUGGY]      if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(     "A  blank  string  is  not  a  valid  number     ");  }  if  (str.startsWith(     "--     "))  {  return  null;  }  if  (str.startsWith(     "0x     ")  ||  str.startsWith(     "-0x     ")  ||  str.startsWith(     "0X     ")  ||  str.startsWith(     "-0X     "))  {  int  hexDigits  =  str.length()  -  2;  //  drop  0x  if  (str.startsWith(     "-     "))  {  //  drop  -  hexDigits--;  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  	projects/Lang7/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.5773502691896258	449	449	1	replace	Number  str  =  createNumber(str.length()  -  1);	  Number    str    =    createNumber(str.length());    	non-compiled	[CE]  unclosed  character  literal	78	None	replace
70	[BUG]  [BUGGY]  if(str  ==  null  ||  StringUtils.isBlank(str)||  str.length()  >=  0)  {  [CE]  unclosed  character  literal  [FE]            AssertionError      [CONTEXT]      public  static  Number  createNumber(String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {  return  null;  }      [BUGGY]  if(str  ==  null  ||  StringUtils.isBlank(str)||  str.length()  >=  0)  {  [BUGGY]      throw  new  NumberFormatException(     "A  blank  string  is  not  a  valid  number     ");  }  if  (str.startsWith(     "--     "))  {  return  null;  }  if  (str.startsWith(     "0x     ")  ||  str.startsWith(     "-0x     ")  ||  str.startsWith(     "0X     ")  ||  str.startsWith(     "-0X     "))  {  int  hexDigits  =  str.length()  -  2;  //  drop  0x  if  (str.startsWith(     "-     "))  {  //  drop  -  hexDigits--;  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  	projects/Lang7/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.5773502691896258	449	449	1	replace	if(str  ==  null  ||  StringUtils.isBlank(str)||  str.length()  >=  0)  {	  if(str    ==    null    ||    StringUtils.isBlank(str)||    str.length()!=    0)    {    	non-compiled	[CE]  unclosed  character  literal	86	None	replace
71	[BUG]  [BUGGY]  if(str  ==  null  ||  StringUtils.isBlank(str)&&  str.length()!=  0)  {  [CE]  unclosed  character  literal  [FE]              AssertionError      [CONTEXT]      public  static  Number  createNumber(String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {  return  null;  }      [BUGGY]  if(str  ==  null  ||  StringUtils.isBlank(str)&&  str.length()!=  0)  {  [BUGGY]      throw  new  NumberFormatException(     "A  blank  string  is  not  a  valid  number     ");  }  if  (str.startsWith(     "--     "))  {  return  null;  }  if  (str.startsWith(     "0x     ")  ||  str.startsWith(     "-0x     ")  ||  str.startsWith(     "0X     ")  ||  str.startsWith(     "-0X     "))  {  int  hexDigits  =  str.length()  -  2;  //  drop  0x  if  (str.startsWith(     "-     "))  {  //  drop  -  hexDigits--;  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  	projects/Lang7/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.5773502691896258	449	449	1	replace	if(str  ==  null  ||  StringUtils.isBlank(str)&&  str.length()!=  0)  {	  if(str    ==    null    ||    StringUtils.isBlank(str)||    str.length()!=    0)    {    	non-compiled	[CE]  unclosed  character  literal	86	None	replace
72	[BUG]  [BUGGY]  Number  str  =  createNumber(str.substring(0,  str.length()));  [CE]  unclosed  character  literal  [FE]                  AssertionError      [CONTEXT]      public  static  Number  createNumber(String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {  return  null;  }      [BUGGY]  Number  str  =  createNumber(str.substring(0,  str.length()));  [BUGGY]      if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(     "A  blank  string  is  not  a  valid  number     ");  }  if  (str.startsWith(     "--     "))  {  return  null;  }  if  (str.startsWith(     "0x     ")  ||  str.startsWith(     "-0x     ")  ||  str.startsWith(     "0X     ")  ||  str.startsWith(     "-0X     "))  {  int  hexDigits  =  str.length()  -  2;  //  drop  0x  if  (str.startsWith(     "-     "))  {  //  drop  -  hexDigits--;  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  	projects/Lang7/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.5773502691896258	449	449	1	replace	Number  str  =  createNumber(str.substring(0,  str.length()));	  Number    str    =    createNumber(str.substring(0,    str.length()    -    2));    	non-compiled	[CE]  unclosed  character  literal	38	None	replace
73	[BUG]  [BUGGY]  Number  str  =  createNumber(str.substring(0,  str.length()  +  2));  [CE]  unclosed  character  literal  [FE]                    AssertionError      [CONTEXT]      public  static  Number  createNumber(String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {  return  null;  }      [BUGGY]  Number  str  =  createNumber(str.substring(0,  str.length()  +  2));  [BUGGY]      if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(     "A  blank  string  is  not  a  valid  number     ");  }  if  (str.startsWith(     "--     "))  {  return  null;  }  if  (str.startsWith(     "0x     ")  ||  str.startsWith(     "-0x     ")  ||  str.startsWith(     "0X     ")  ||  str.startsWith(     "-0X     "))  {  int  hexDigits  =  str.length()  -  2;  //  drop  0x  if  (str.startsWith(     "-     "))  {  //  drop  -  hexDigits--;  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  	projects/Lang7/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.5773502691896258	449	449	1	replace	Number  str  =  createNumber(str.substring(0,  str.length()  +  2));	  Number    str    =    createNumber(str.substring(0,    str.length()    -    2));    	non-compiled	[CE]  unclosed  character  literal	38	None	replace
74	[BUG]  [BUGGY]  int  decPos  =  str.length()  -  2;  int  expPos  =  str.length();  [CE]  unclosed  character  literal  [FE]          NumberFormatException      [CONTEXT]      public  static  Number  createNumber(String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {  return  null;  }      [BUGGY]  int  decPos  =  str.length()  -  2;  int  expPos  =  str.length();  [BUGGY]      if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(     "A  blank  string  is  not  a  valid  number     ");  }  if  (str.startsWith(     "--     "))  {  return  null;  }  if  (str.startsWith(     "0x     ")  ||  str.startsWith(     "-0x     ")  ||  str.startsWith(     "0X     ")  ||  str.startsWith(     "-0X     "))  {  int  hexDigits  =  str.length()  -  2;  //  drop  0x  if  (str.startsWith(     "-     "))  {  //  drop  -  hexDigits--;  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  	projects/Lang7/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.5773502691896258	449	449	1	replace	int  decPos  =  str.length()  -  2;  int  expPos  =  str.length();	          int    decPos    =    str.length();    int    expPos    =    str.length();    	non-compiled	[CE]  unclosed  character  literal	82	None	replace
75	[BUG]  [BUGGY]  int  decPos  =  str.length()  -  1;  int  expPos  =  str.length();  [CE]  unclosed  character  literal  [FE]            NumberFormatException      [CONTEXT]      public  static  Number  createNumber(String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {  return  null;  }      [BUGGY]  int  decPos  =  str.length()  -  1;  int  expPos  =  str.length();  [BUGGY]      if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(     "A  blank  string  is  not  a  valid  number     ");  }  if  (str.startsWith(     "--     "))  {  return  null;  }  if  (str.startsWith(     "0x     ")  ||  str.startsWith(     "-0x     ")  ||  str.startsWith(     "0X     ")  ||  str.startsWith(     "-0X     "))  {  int  hexDigits  =  str.length()  -  2;  //  drop  0x  if  (str.startsWith(     "-     "))  {  //  drop  -  hexDigits--;  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  	projects/Lang7/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.5773502691896258	449	449	1	replace	int  decPos  =  str.length()  -  1;  int  expPos  =  str.length();	          int    decPos    =    str.length();    int    expPos    =    str.length();    	non-compiled	[CE]  unclosed  character  literal	82	None	replace
76	[BUG]  [BUGGY]  if(StringUtils.isEmpty(str)&&  StringUtils.isBlank(str))  {  [CE]  unclosed  character  literal  [FE]                  AssertionError      [CONTEXT]      public  static  Number  createNumber(String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {  return  null;  }      [BUGGY]  if(StringUtils.isEmpty(str)&&  StringUtils.isBlank(str))  {  [BUGGY]      throw  new  NumberFormatException(     "A  blank  string  is  not  a  valid  number     ");  }  if  (str.startsWith(     "--     "))  {  return  null;  }  if  (str.startsWith(     "0x     ")  ||  str.startsWith(     "-0x     ")  ||  str.startsWith(     "0X     ")  ||  str.startsWith(     "-0X     "))  {  int  hexDigits  =  str.length()  -  2;  //  drop  0x  if  (str.startsWith(     "-     "))  {  //  drop  -  hexDigits--;  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  	projects/Lang7/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.5773502691896258	449	449	1	replace	if(StringUtils.isEmpty(str)&&  StringUtils.isBlank(str))  {	  if(StringUtils.isBlank(str)&&    StringUtils.isBlank(str))    {    	non-compiled	[CE]  unclosed  character  literal	68	None	replace
77	[BUG]  [BUGGY]  if(StringUtils.isEmpty(str)||  StringUtils.isBlank(str))  {  if(StringUtils.isEmpty(str)||  StringUtils.isBlank(str))  {  [CE]  unclosed  character  literal  [FE]    NumberFormatException    [CONTEXT]      public  static  Number  createNumber(String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {  return  null;  }      [BUGGY]  if(StringUtils.isEmpty(str)||  StringUtils.isBlank(str))  {  if(StringUtils.isEmpty(str)||  StringUtils.isBlank(str))  {  [BUGGY]      throw  new  NumberFormatException(     "A  blank  string  is  not  a  valid  number     ");  }  if  (str.startsWith(     "--     "))  {  return  null;  }  if  (str.startsWith(     "0x     ")  ||  str.startsWith(     "-0x     ")  ||  str.startsWith(     "0X     ")  ||  str.startsWith(     "-0X     "))  {  int  hexDigits  =  str.length()  -  2;  //  drop  0x  if  (str.startsWith(     "-     "))  {  //  drop  -  hexDigits--;  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  	projects/Lang7/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.5773502691896258	449	449	1	replace	if(StringUtils.isEmpty(str)||    StringUtils.isBlank(str))    {    if(StringUtils.isEmpty(str)||  StringUtils.isBlank(str))  {	  	non-compiled	[CE]  unclosed  character  literal	19	None	add
78	[BUG]  [BUGGY]  if(StringUtils.isEmpty(str)||  StringUtils.isBlank(str))  {  If(StringUtils.isEmpty(str)||  StringUtils.isBlank(str))  {  [CE]  ';'  expected  [FE]      NumberFormatException    [CONTEXT]      public  static  Number  createNumber(String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {  return  null;  }      [BUGGY]  if(StringUtils.isEmpty(str)||  StringUtils.isBlank(str))  {  If(StringUtils.isEmpty(str)||  StringUtils.isBlank(str))  {  [BUGGY]      throw  new  NumberFormatException(     "A  blank  string  is  not  a  valid  number     ");  }  if  (str.startsWith(     "--     "))  {  return  null;  }  if  (str.startsWith(     "0x     ")  ||  str.startsWith(     "-0x     ")  ||  str.startsWith(     "0X     ")  ||  str.startsWith(     "-0X     "))  {  int  hexDigits  =  str.length()  -  2;  //  drop  0x  if  (str.startsWith(     "-     "))  {  //  drop  -  hexDigits--;  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  	projects/Lang7/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.5773502691896258	449	449	1	replace	if(StringUtils.isEmpty(str)||    StringUtils.isBlank(str))    {    If(StringUtils.isEmpty(str)||  StringUtils.isBlank(str))  {	  	non-compiled	[CE]  ';'  expected	19	None	add
79	[BUG]  [BUGGY]  int  decPos  =  str.lastIndexOf('  ',  1);  [CE]  unclosed  character  literal  [FE]    NumberFormatException    [CONTEXT]      public  static  Number  createNumber(String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {  return  null;  }      [BUGGY]  int  decPos  =  str.lastIndexOf('  ',  1);  [BUGGY]      if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(     "A  blank  string  is  not  a  valid  number     ");  }  if  (str.startsWith(     "--     "))  {  return  null;  }  if  (str.startsWith(     "0x     ")  ||  str.startsWith(     "-0x     ")  ||  str.startsWith(     "0X     ")  ||  str.startsWith(     "-0X     "))  {  int  hexDigits  =  str.length()  -  2;  //  drop  0x  if  (str.startsWith(     "-     "))  {  //  drop  -  hexDigits--;  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  	projects/Lang7/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.5773502691896258	449	449	1	replace	int  decPos  =  str.lastIndexOf('  ',  1);	  int    decPos    =    str.lastIndexOf('    ');    	non-compiled	[CE]  unclosed  character  literal	2	None	replace
80	[BUG]  [BUGGY]  int  decPos  =  str.lastIndexOf('  ',  4);  [CE]  unclosed  character  literal  [FE]      NumberFormatException    [CONTEXT]      public  static  Number  createNumber(String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {  return  null;  }      [BUGGY]  int  decPos  =  str.lastIndexOf('  ',  4);  [BUGGY]      if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(     "A  blank  string  is  not  a  valid  number     ");  }  if  (str.startsWith(     "--     "))  {  return  null;  }  if  (str.startsWith(     "0x     ")  ||  str.startsWith(     "-0x     ")  ||  str.startsWith(     "0X     ")  ||  str.startsWith(     "-0X     "))  {  int  hexDigits  =  str.length()  -  2;  //  drop  0x  if  (str.startsWith(     "-     "))  {  //  drop  -  hexDigits--;  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  	projects/Lang7/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.5773502691896258	449	449	1	replace	int  decPos  =  str.lastIndexOf('  ',  4);	  int    decPos    =    str.lastIndexOf('    ');    	non-compiled	[CE]  unclosed  character  literal	2	None	replace
81	[BUG]  [BUGGY]  Number  str  =  createNumber(str.substring(2));  [CE]  unclosed  character  literal  [FE]                    AssertionError      [CONTEXT]      public  static  Number  createNumber(String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {  return  null;  }      [BUGGY]  Number  str  =  createNumber(str.substring(2));  [BUGGY]      if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(     "A  blank  string  is  not  a  valid  number     ");  }  if  (str.startsWith(     "--     "))  {  return  null;  }  if  (str.startsWith(     "0x     ")  ||  str.startsWith(     "-0x     ")  ||  str.startsWith(     "0X     ")  ||  str.startsWith(     "-0X     "))  {  int  hexDigits  =  str.length()  -  2;  //  drop  0x  if  (str.startsWith(     "-     "))  {  //  drop  -  hexDigits--;  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  	projects/Lang7/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.5773502691896258	449	449	1	replace	Number  str  =  createNumber(str.substring(2));	  Number    str    =    createNumber(str.substring(1));    	non-compiled	[CE]  unclosed  character  literal	39	None	replace
82	[BUG]  [BUGGY]  String  hexDigits  =  str.length();  [CE]  unclosed  character  literal  [FE]                AssertionError      [CONTEXT]      public  static  Number  createNumber(String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {  return  null;  }      [BUGGY]  String  hexDigits  =  str.length();  [BUGGY]      if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(     "A  blank  string  is  not  a  valid  number     ");  }  if  (str.startsWith(     "--     "))  {  return  null;  }  if  (str.startsWith(     "0x     ")  ||  str.startsWith(     "-0x     ")  ||  str.startsWith(     "0X     ")  ||  str.startsWith(     "-0X     "))  {  int  hexDigits  =  str.length()  -  2;  //  drop  0x  if  (str.startsWith(     "-     "))  {  //  drop  -  hexDigits--;  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  	projects/Lang7/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.5773502691896258	449	449	1	replace	String  hexDigits  =  str.length();	  char    hexDigits    =    str.length();    	non-compiled	[CE]  unclosed  character  literal	52	None	replace
83	[BUG]  [BUGGY]  char  hexDigits  =  str.length()  -  2;  [CE]  unclosed  character  literal  [FE]                  AssertionError      [CONTEXT]      public  static  Number  createNumber(String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {  return  null;  }      [BUGGY]  char  hexDigits  =  str.length()  -  2;  [BUGGY]      if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(     "A  blank  string  is  not  a  valid  number     ");  }  if  (str.startsWith(     "--     "))  {  return  null;  }  if  (str.startsWith(     "0x     ")  ||  str.startsWith(     "-0x     ")  ||  str.startsWith(     "0X     ")  ||  str.startsWith(     "-0X     "))  {  int  hexDigits  =  str.length()  -  2;  //  drop  0x  if  (str.startsWith(     "-     "))  {  //  drop  -  hexDigits--;  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  	projects/Lang7/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.5773502691896258	449	449	1	replace	char  hexDigits  =  str.length()  -  2;	  char    hexDigits    =    str.length();    	non-compiled	[CE]  unclosed  character  literal	52	None	replace
84	[BUG]  [BUGGY]  char  hexDigits  =  str.length()  +  1;  [CE]  unclosed  character  literal  [FE]                    AssertionError      [CONTEXT]      public  static  Number  createNumber(String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {  return  null;  }      [BUGGY]  char  hexDigits  =  str.length()  +  1;  [BUGGY]      if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(     "A  blank  string  is  not  a  valid  number     ");  }  if  (str.startsWith(     "--     "))  {  return  null;  }  if  (str.startsWith(     "0x     ")  ||  str.startsWith(     "-0x     ")  ||  str.startsWith(     "0X     ")  ||  str.startsWith(     "-0X     "))  {  int  hexDigits  =  str.length()  -  2;  //  drop  0x  if  (str.startsWith(     "-     "))  {  //  drop  -  hexDigits--;  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  	projects/Lang7/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.5773502691896258	449	449	1	replace	char  hexDigits  =  str.length()  +  1;	  char    hexDigits    =    str.length();    	non-compiled	[CE]  unclosed  character  literal	52	None	replace
85	[BUG]  [BUGGY]  Integer  str  =  createInteger(str,  str.length());  [CE]  unclosed  character  literal  [FE]                        AssertionError      [CONTEXT]      public  static  Number  createNumber(String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {  return  null;  }      [BUGGY]  Integer  str  =  createInteger(str,  str.length());  [BUGGY]      if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(     "A  blank  string  is  not  a  valid  number     ");  }  if  (str.startsWith(     "--     "))  {  return  null;  }  if  (str.startsWith(     "0x     ")  ||  str.startsWith(     "-0x     ")  ||  str.startsWith(     "0X     ")  ||  str.startsWith(     "-0X     "))  {  int  hexDigits  =  str.length()  -  2;  //  drop  0x  if  (str.startsWith(     "-     "))  {  //  drop  -  hexDigits--;  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  	projects/Lang7/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.5773502691896258	449	449	1	replace	Integer  str  =  createInteger(str,  str.length());	  Integer    str    =    createInteger(str.length()    +    2);    	non-compiled	[CE]  unclosed  character  literal	11	None	replace
86	[BUG]  [BUGGY]  if(str  ==  null  ||  StringUtils.isEmpty(str)||  isEmpty(str))  {  [CE]  unclosed  character  literal  [FE]            AssertionError      [CONTEXT]      public  static  Number  createNumber(String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {  return  null;  }      [BUGGY]  if(str  ==  null  ||  StringUtils.isEmpty(str)||  isEmpty(str))  {  [BUGGY]      throw  new  NumberFormatException(     "A  blank  string  is  not  a  valid  number     ");  }  if  (str.startsWith(     "--     "))  {  return  null;  }  if  (str.startsWith(     "0x     ")  ||  str.startsWith(     "-0x     ")  ||  str.startsWith(     "0X     ")  ||  str.startsWith(     "-0X     "))  {  int  hexDigits  =  str.length()  -  2;  //  drop  0x  if  (str.startsWith(     "-     "))  {  //  drop  -  hexDigits--;  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  	projects/Lang7/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.5773502691896258	449	449	1	replace	if(str  ==  null  ||  StringUtils.isEmpty(str)||  isEmpty(str))  {	  if(str    ==    null    ||    StringUtils.isBlank(str)||    isEmpty(str))    {    	non-compiled	[CE]  unclosed  character  literal	61	None	replace
87	[BUG]  [BUGGY]  if(str  ==  null  ||  StringUtils.isBlank(str)&&  isEmpty(str))  {  [CE]  unclosed  character  literal  [FE]              AssertionError      [CONTEXT]      public  static  Number  createNumber(String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {  return  null;  }      [BUGGY]  if(str  ==  null  ||  StringUtils.isBlank(str)&&  isEmpty(str))  {  [BUGGY]      throw  new  NumberFormatException(     "A  blank  string  is  not  a  valid  number     ");  }  if  (str.startsWith(     "--     "))  {  return  null;  }  if  (str.startsWith(     "0x     ")  ||  str.startsWith(     "-0x     ")  ||  str.startsWith(     "0X     ")  ||  str.startsWith(     "-0X     "))  {  int  hexDigits  =  str.length()  -  2;  //  drop  0x  if  (str.startsWith(     "-     "))  {  //  drop  -  hexDigits--;  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  	projects/Lang7/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.5773502691896258	449	449	1	replace	if(str  ==  null  ||  StringUtils.isBlank(str)&&  isEmpty(str))  {	  if(str    ==    null    ||    StringUtils.isBlank(str)||    isEmpty(str))    {    	non-compiled	[CE]  unclosed  character  literal	61	None	replace
88	[BUG]  [BUGGY]  if(str  ==  null  ||  StringUtils.isBlank(str)||  isNullOrEmpty(str))  {  [CE]  unclosed  character  literal  [FE]                AssertionError      [CONTEXT]      public  static  Number  createNumber(String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {  return  null;  }      [BUGGY]  if(str  ==  null  ||  StringUtils.isBlank(str)||  isNullOrEmpty(str))  {  [BUGGY]      throw  new  NumberFormatException(     "A  blank  string  is  not  a  valid  number     ");  }  if  (str.startsWith(     "--     "))  {  return  null;  }  if  (str.startsWith(     "0x     ")  ||  str.startsWith(     "-0x     ")  ||  str.startsWith(     "0X     ")  ||  str.startsWith(     "-0X     "))  {  int  hexDigits  =  str.length()  -  2;  //  drop  0x  if  (str.startsWith(     "-     "))  {  //  drop  -  hexDigits--;  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  	projects/Lang7/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.5773502691896258	449	449	1	replace	if(str  ==  null  ||  StringUtils.isBlank(str)||  isNullOrEmpty(str))  {	  if(str    ==    null    ||    StringUtils.isBlank(str)||    isEmpty(str))    {    	non-compiled	[CE]  unclosed  character  literal	61	None	replace
89	[BUG]  [BUGGY]  Number  str  =  getNumber(str.substring(0,  str.length()  -  1));  [CE]  unclosed  character  literal  [FE]                      AssertionError      [CONTEXT]      public  static  Number  createNumber(String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {  return  null;  }      [BUGGY]  Number  str  =  getNumber(str.substring(0,  str.length()  -  1));  [BUGGY]      if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(     "A  blank  string  is  not  a  valid  number     ");  }  if  (str.startsWith(     "--     "))  {  return  null;  }  if  (str.startsWith(     "0x     ")  ||  str.startsWith(     "-0x     ")  ||  str.startsWith(     "0X     ")  ||  str.startsWith(     "-0X     "))  {  int  hexDigits  =  str.length()  -  2;  //  drop  0x  if  (str.startsWith(     "-     "))  {  //  drop  -  hexDigits--;  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  	projects/Lang7/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.5773502691896258	449	449	1	replace	Number  str  =  getNumber(str.substring(0,  str.length()  -  1));	  Number    str    =    getNumber(str.substring(1));    	non-compiled	[CE]  unclosed  character  literal	42	None	replace
90	[BUG]  [BUGGY]  Number  str  =  getNumber(str.substring(0,  str.length()  -  2));  [CE]  unclosed  character  literal  [FE]                        AssertionError      [CONTEXT]      public  static  Number  createNumber(String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {  return  null;  }      [BUGGY]  Number  str  =  getNumber(str.substring(0,  str.length()  -  2));  [BUGGY]      if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(     "A  blank  string  is  not  a  valid  number     ");  }  if  (str.startsWith(     "--     "))  {  return  null;  }  if  (str.startsWith(     "0x     ")  ||  str.startsWith(     "-0x     ")  ||  str.startsWith(     "0X     ")  ||  str.startsWith(     "-0X     "))  {  int  hexDigits  =  str.length()  -  2;  //  drop  0x  if  (str.startsWith(     "-     "))  {  //  drop  -  hexDigits--;  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  	projects/Lang7/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.5773502691896258	449	449	1	replace	Number  str  =  getNumber(str.substring(0,  str.length()  -  2));	  Number    str    =    getNumber(str.substring(1));    	non-compiled	[CE]  unclosed  character  literal	42	None	replace
91	[BUG]  [BUGGY]  Number  str  =  getNumber(str.substring(0,  str.length()));  [CE]  unclosed  character  literal  [FE]                          AssertionError      [CONTEXT]      public  static  Number  createNumber(String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {  return  null;  }      [BUGGY]  Number  str  =  getNumber(str.substring(0,  str.length()));  [BUGGY]      if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(     "A  blank  string  is  not  a  valid  number     ");  }  if  (str.startsWith(     "--     "))  {  return  null;  }  if  (str.startsWith(     "0x     ")  ||  str.startsWith(     "-0x     ")  ||  str.startsWith(     "0X     ")  ||  str.startsWith(     "-0X     "))  {  int  hexDigits  =  str.length()  -  2;  //  drop  0x  if  (str.startsWith(     "-     "))  {  //  drop  -  hexDigits--;  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  	projects/Lang7/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.5773502691896258	449	449	1	replace	Number  str  =  getNumber(str.substring(0,  str.length()));	  Number    str    =    getNumber(str.substring(1));    	non-compiled	[CE]  unclosed  character  literal	42	None	replace
92	[BUG]  [BUGGY]  Number  str  =  getNumber(str.substring(2));  [CE]  unclosed  character  literal  [FE]                            AssertionError      [CONTEXT]      public  static  Number  createNumber(String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {  return  null;  }      [BUGGY]  Number  str  =  getNumber(str.substring(2));  [BUGGY]      if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(     "A  blank  string  is  not  a  valid  number     ");  }  if  (str.startsWith(     "--     "))  {  return  null;  }  if  (str.startsWith(     "0x     ")  ||  str.startsWith(     "-0x     ")  ||  str.startsWith(     "0X     ")  ||  str.startsWith(     "-0X     "))  {  int  hexDigits  =  str.length()  -  2;  //  drop  0x  if  (str.startsWith(     "-     "))  {  //  drop  -  hexDigits--;  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  	projects/Lang7/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.5773502691896258	449	449	1	replace	Number  str  =  getNumber(str.substring(2));	  Number    str    =    getNumber(str.substring(1));    	non-compiled	[CE]  unclosed  character  literal	42	None	replace
93	[BUG]  [BUGGY]  char  decPos  =  str.length();  [CE]  unclosed  character  literal  [FE]        NumberFormatException      [CONTEXT]      public  static  Number  createNumber(String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {  return  null;  }      [BUGGY]  char  decPos  =  str.length();  [BUGGY]      if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(     "A  blank  string  is  not  a  valid  number     ");  }  if  (str.startsWith(     "--     "))  {  return  null;  }  if  (str.startsWith(     "0x     ")  ||  str.startsWith(     "-0x     ")  ||  str.startsWith(     "0X     ")  ||  str.startsWith(     "-0X     "))  {  int  hexDigits  =  str.length()  -  2;  //  drop  0x  if  (str.startsWith(     "-     "))  {  //  drop  -  hexDigits--;  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  	projects/Lang7/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.5773502691896258	449	449	1	replace	char  decPos  =  str.length();	          int    decPos    =    str.length();    int    decPos    =    str.length();    	non-compiled	[CE]  unclosed  character  literal	57	None	replace
94	[BUG]  [BUGGY]  Number  str  =  createString(str,  hexDigits);  [CE]  unclosed  character  literal  [FE]              AssertionError      [CONTEXT]      public  static  Number  createNumber(String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {  return  null;  }      [BUGGY]  Number  str  =  createString(str,  hexDigits);  [BUGGY]      if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(     "A  blank  string  is  not  a  valid  number     ");  }  if  (str.startsWith(     "--     "))  {  return  null;  }  if  (str.startsWith(     "0x     ")  ||  str.startsWith(     "-0x     ")  ||  str.startsWith(     "0X     ")  ||  str.startsWith(     "-0X     "))  {  int  hexDigits  =  str.length()  -  2;  //  drop  0x  if  (str.startsWith(     "-     "))  {  //  drop  -  hexDigits--;  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  	projects/Lang7/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.5773502691896258	449	449	1	replace	Number  str  =  createString(str,  hexDigits);	  Number    str    =    createString(str);    	non-compiled	[CE]  unclosed  character  literal	89	None	replace
95	[BUG]  [BUGGY]  Number  str  =  createNull();  [CE]  unclosed  character  literal  [FE]                AssertionError      [CONTEXT]      public  static  Number  createNumber(String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {  return  null;  }      [BUGGY]  Number  str  =  createNull();  [BUGGY]      if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(     "A  blank  string  is  not  a  valid  number     ");  }  if  (str.startsWith(     "--     "))  {  return  null;  }  if  (str.startsWith(     "0x     ")  ||  str.startsWith(     "-0x     ")  ||  str.startsWith(     "0X     ")  ||  str.startsWith(     "-0X     "))  {  int  hexDigits  =  str.length()  -  2;  //  drop  0x  if  (str.startsWith(     "-     "))  {  //  drop  -  hexDigits--;  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  	projects/Lang7/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.5773502691896258	449	449	1	replace	Number  str  =  createNull();	  Number    str    =    createString(str);    	non-compiled	[CE]  unclosed  character  literal	89	None	replace
96	[BUG]  [BUGGY]  if(!StringUtils.isBlank(str)||  StringUtils.isWhitespace(str))  {  [CE]  unclosed  character  literal  [FE]                AssertionError      [CONTEXT]      public  static  Number  createNumber(String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {  return  null;  }      [BUGGY]  if(!StringUtils.isBlank(str)||  StringUtils.isWhitespace(str))  {  [BUGGY]      throw  new  NumberFormatException(     "A  blank  string  is  not  a  valid  number     ");  }  if  (str.startsWith(     "--     "))  {  return  null;  }  if  (str.startsWith(     "0x     ")  ||  str.startsWith(     "-0x     ")  ||  str.startsWith(     "0X     ")  ||  str.startsWith(     "-0X     "))  {  int  hexDigits  =  str.length()  -  2;  //  drop  0x  if  (str.startsWith(     "-     "))  {  //  drop  -  hexDigits--;  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  	projects/Lang7/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.5773502691896258	449	449	1	replace	if(!StringUtils.isBlank(str)||  StringUtils.isWhitespace(str))  {	  if(StringUtils.isBlank(str)||    StringUtils.isWhitespace(str))    {    	non-compiled	[CE]  unclosed  character  literal	67	None	replace
97	[BUG]  [BUGGY]  if(StringUtils.isBlank(str)&&  StringUtils.isWhitespace(str))  {  [CE]  unclosed  character  literal  [FE]                  AssertionError      [CONTEXT]      public  static  Number  createNumber(String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {  return  null;  }      [BUGGY]  if(StringUtils.isBlank(str)&&  StringUtils.isWhitespace(str))  {  [BUGGY]      throw  new  NumberFormatException(     "A  blank  string  is  not  a  valid  number     ");  }  if  (str.startsWith(     "--     "))  {  return  null;  }  if  (str.startsWith(     "0x     ")  ||  str.startsWith(     "-0x     ")  ||  str.startsWith(     "0X     ")  ||  str.startsWith(     "-0X     "))  {  int  hexDigits  =  str.length()  -  2;  //  drop  0x  if  (str.startsWith(     "-     "))  {  //  drop  -  hexDigits--;  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  	projects/Lang7/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.5773502691896258	449	449	1	replace	if(StringUtils.isBlank(str)&&  StringUtils.isWhitespace(str))  {	  if(StringUtils.isBlank(str)||    StringUtils.isWhitespace(str))    {    	non-compiled	[CE]  unclosed  character  literal	67	None	replace
98	[BUG]  [BUGGY]  int  decPos  =  str.lastIndexOf('.',  DEC_PREFIX);  [CE]  unclosed  character  literal  [FE]        NumberFormatException      [CONTEXT]      public  static  Number  createNumber(String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {  return  null;  }      [BUGGY]  int  decPos  =  str.lastIndexOf('.',  DEC_PREFIX);  [BUGGY]      if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(     "A  blank  string  is  not  a  valid  number     ");  }  if  (str.startsWith(     "--     "))  {  return  null;  }  if  (str.startsWith(     "0x     ")  ||  str.startsWith(     "-0x     ")  ||  str.startsWith(     "0X     ")  ||  str.startsWith(     "-0X     "))  {  int  hexDigits  =  str.length()  -  2;  //  drop  0x  if  (str.startsWith(     "-     "))  {  //  drop  -  hexDigits--;  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  	projects/Lang7/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.5773502691896258	449	449	1	replace	int  decPos  =  str.lastIndexOf('.',  DEC_PREFIX);	  int    decPos    =    str.lastIndexOf('.');    	non-compiled	[CE]  unclosed  character  literal	80	None	replace
99	[BUG]  [BUGGY]  int  decPos  =  str.lastIndexOf('.',  1);  [CE]  unclosed  character  literal  [FE]          NumberFormatException      [CONTEXT]      public  static  Number  createNumber(String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {  return  null;  }      [BUGGY]  int  decPos  =  str.lastIndexOf('.',  1);  [BUGGY]      if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(     "A  blank  string  is  not  a  valid  number     ");  }  if  (str.startsWith(     "--     "))  {  return  null;  }  if  (str.startsWith(     "0x     ")  ||  str.startsWith(     "-0x     ")  ||  str.startsWith(     "0X     ")  ||  str.startsWith(     "-0X     "))  {  int  hexDigits  =  str.length()  -  2;  //  drop  0x  if  (str.startsWith(     "-     "))  {  //  drop  -  hexDigits--;  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  	projects/Lang7/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.5773502691896258	449	449	1	replace	int  decPos  =  str.lastIndexOf('.',  1);	  int    decPos    =    str.lastIndexOf('.');    	non-compiled	[CE]  unclosed  character  literal	80	None	replace
100	[BUG]  [BUGGY]  int  decPos  =  str.lastIndexOf('.',  -1);  [CE]  unclosed  character  literal  [FE]            NumberFormatException      [CONTEXT]      public  static  Number  createNumber(String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {  return  null;  }      [BUGGY]  int  decPos  =  str.lastIndexOf('.',  -1);  [BUGGY]      if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(     "A  blank  string  is  not  a  valid  number     ");  }  if  (str.startsWith(     "--     "))  {  return  null;  }  if  (str.startsWith(     "0x     ")  ||  str.startsWith(     "-0x     ")  ||  str.startsWith(     "0X     ")  ||  str.startsWith(     "-0X     "))  {  int  hexDigits  =  str.length()  -  2;  //  drop  0x  if  (str.startsWith(     "-     "))  {  //  drop  -  hexDigits--;  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  	projects/Lang7/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.5773502691896258	449	449	1	replace	int  decPos  =  str.lastIndexOf('.',  -1);	  int    decPos    =    str.lastIndexOf('.');    	non-compiled	[CE]  unclosed  character  literal	80	None	replace
101	[BUG]  [BUGGY]  int  decPos  =  str.lastIndexOf('  ');  int  lecPos  =  str.indexOf('  ');  [CE]  unclosed  character  literal  [FE]        NumberFormatException      [CONTEXT]      public  static  Number  createNumber(String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {  return  null;  }      [BUGGY]  int  decPos  =  str.lastIndexOf('  ');  int  lecPos  =  str.indexOf('  ');  [BUGGY]      if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(     "A  blank  string  is  not  a  valid  number     ");  }  if  (str.startsWith(     "--     "))  {  return  null;  }  if  (str.startsWith(     "0x     ")  ||  str.startsWith(     "-0x     ")  ||  str.startsWith(     "0X     ")  ||  str.startsWith(     "-0X     "))  {  int  hexDigits  =  str.length()  -  2;  //  drop  0x  if  (str.startsWith(     "-     "))  {  //  drop  -  hexDigits--;  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  	projects/Lang7/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.5773502691896258	449	449	1	replace	int  decPos  =  str.lastIndexOf('  ');  int  lecPos  =  str.indexOf('  ');	          int    decPos    =    str.indexOf('    ');    int    lecPos    =    str.indexOf('    ');    	non-compiled	[CE]  unclosed  character  literal	62	None	replace
102	[BUG]  [BUGGY]  int  decPos  =  str.length();  int  lecPos  =  str.indexOf('  ');  [CE]  unclosed  character  literal  [FE]          NumberFormatException      [CONTEXT]      public  static  Number  createNumber(String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {  return  null;  }      [BUGGY]  int  decPos  =  str.length();  int  lecPos  =  str.indexOf('  ');  [BUGGY]      if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(     "A  blank  string  is  not  a  valid  number     ");  }  if  (str.startsWith(     "--     "))  {  return  null;  }  if  (str.startsWith(     "0x     ")  ||  str.startsWith(     "-0x     ")  ||  str.startsWith(     "0X     ")  ||  str.startsWith(     "-0X     "))  {  int  hexDigits  =  str.length()  -  2;  //  drop  0x  if  (str.startsWith(     "-     "))  {  //  drop  -  hexDigits--;  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  	projects/Lang7/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.5773502691896258	449	449	1	replace	int  decPos  =  str.length();  int  lecPos  =  str.indexOf('  ');	          int    decPos    =    str.indexOf('    ');    int    lecPos    =    str.indexOf('    ');    	non-compiled	[CE]  unclosed  character  literal	62	None	replace
103	[BUG]  [BUGGY]  int  decPos  =  str.indexOf('  ',  str.length());  int  lecPos  =  str.indexOf('  ');  [CE]  unclosed  character  literal  [FE]            NumberFormatException      [CONTEXT]      public  static  Number  createNumber(String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {  return  null;  }      [BUGGY]  int  decPos  =  str.indexOf('  ',  str.length());  int  lecPos  =  str.indexOf('  ');  [BUGGY]      if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(     "A  blank  string  is  not  a  valid  number     ");  }  if  (str.startsWith(     "--     "))  {  return  null;  }  if  (str.startsWith(     "0x     ")  ||  str.startsWith(     "-0x     ")  ||  str.startsWith(     "0X     ")  ||  str.startsWith(     "-0X     "))  {  int  hexDigits  =  str.length()  -  2;  //  drop  0x  if  (str.startsWith(     "-     "))  {  //  drop  -  hexDigits--;  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  	projects/Lang7/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.5773502691896258	449	449	1	replace	int  decPos  =  str.indexOf('  ',  str.length());  int  lecPos  =  str.indexOf('  ');	          int    decPos    =    str.indexOf('    ');    int    lecPos    =    str.indexOf('    ');    	non-compiled	[CE]  unclosed  character  literal	62	None	replace
104	[BUG]  [BUGGY]  int  decPos  =  str.indexOf('  ',  lecPos);  [CE]  unclosed  character  literal  [FE]              NumberFormatException      [CONTEXT]      public  static  Number  createNumber(String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {  return  null;  }      [BUGGY]  int  decPos  =  str.indexOf('  ',  lecPos);  [BUGGY]      if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(     "A  blank  string  is  not  a  valid  number     ");  }  if  (str.startsWith(     "--     "))  {  return  null;  }  if  (str.startsWith(     "0x     ")  ||  str.startsWith(     "-0x     ")  ||  str.startsWith(     "0X     ")  ||  str.startsWith(     "-0X     "))  {  int  hexDigits  =  str.length()  -  2;  //  drop  0x  if  (str.startsWith(     "-     "))  {  //  drop  -  hexDigits--;  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  	projects/Lang7/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.5773502691896258	449	449	1	replace	int  decPos  =  str.indexOf('  ',  lecPos);	          int    decPos    =    str.indexOf('    ');    int    lecPos    =    str.indexOf('    ');    	non-compiled	[CE]  unclosed  character  literal	62	None	replace
105	[BUG]  [BUGGY]  Number  str  =  getNumber(str.getValue());  [CE]  unclosed  character  literal  [FE]                    AssertionError      [CONTEXT]      public  static  Number  createNumber(String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {  return  null;  }      [BUGGY]  Number  str  =  getNumber(str.getValue());  [BUGGY]      if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(     "A  blank  string  is  not  a  valid  number     ");  }  if  (str.startsWith(     "--     "))  {  return  null;  }  if  (str.startsWith(     "0x     ")  ||  str.startsWith(     "-0x     ")  ||  str.startsWith(     "0X     ")  ||  str.startsWith(     "-0X     "))  {  int  hexDigits  =  str.length()  -  2;  //  drop  0x  if  (str.startsWith(     "-     "))  {  //  drop  -  hexDigits--;  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  	projects/Lang7/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.5773502691896258	449	449	1	replace	Number  str  =  getNumber(str.getValue());	  Number    str    =    getNumber(str.toCharArray());    	non-compiled	[CE]  unclosed  character  literal	77	None	replace
106	[BUG]  [BUGGY]  Integer  decPos  =  str.indexOf('  ');  [CE]  unclosed  character  literal  [FE]          NumberFormatException      [CONTEXT]      public  static  Number  createNumber(String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {  return  null;  }      [BUGGY]  Integer  decPos  =  str.indexOf('  ');  [BUGGY]      if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(     "A  blank  string  is  not  a  valid  number     ");  }  if  (str.startsWith(     "--     "))  {  return  null;  }  if  (str.startsWith(     "0x     ")  ||  str.startsWith(     "-0x     ")  ||  str.startsWith(     "0X     ")  ||  str.startsWith(     "-0X     "))  {  int  hexDigits  =  str.length()  -  2;  //  drop  0x  if  (str.startsWith(     "-     "))  {  //  drop  -  hexDigits--;  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  	projects/Lang7/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.5773502691896258	449	449	1	replace	Integer  decPos  =  str.indexOf('  ');	          int    decPos    =    str.indexOf('    ');    Integer    decPos    =    str.indexOf('    ');    	non-compiled	[CE]  unclosed  character  literal	48	None	replace
107	[BUG]  [BUGGY]  int  decPos  =  str.lastIndexOf('  ');  Integer  decPos  =  str.indexOf('  ');  [CE]  unclosed  character  literal  [FE]            NumberFormatException      [CONTEXT]      public  static  Number  createNumber(String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {  return  null;  }      [BUGGY]  int  decPos  =  str.lastIndexOf('  ');  Integer  decPos  =  str.indexOf('  ');  [BUGGY]      if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(     "A  blank  string  is  not  a  valid  number     ");  }  if  (str.startsWith(     "--     "))  {  return  null;  }  if  (str.startsWith(     "0x     ")  ||  str.startsWith(     "-0x     ")  ||  str.startsWith(     "0X     ")  ||  str.startsWith(     "-0X     "))  {  int  hexDigits  =  str.length()  -  2;  //  drop  0x  if  (str.startsWith(     "-     "))  {  //  drop  -  hexDigits--;  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  	projects/Lang7/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.5773502691896258	449	449	1	replace	int  decPos  =  str.lastIndexOf('  ');  Integer  decPos  =  str.indexOf('  ');	          int    decPos    =    str.indexOf('    ');    Integer    decPos    =    str.indexOf('    ');    	non-compiled	[CE]  unclosed  character  literal	48	None	replace
108	[BUG]  [BUGGY]  int  decPos  =  str.indexOf('  ');  Integer  decPos  =  str.indexOf('  ',  decPos);  [CE]  unclosed  character  literal  [FE]              NumberFormatException      [CONTEXT]      public  static  Number  createNumber(String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {  return  null;  }      [BUGGY]  int  decPos  =  str.indexOf('  ');  Integer  decPos  =  str.indexOf('  ',  decPos);  [BUGGY]      if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(     "A  blank  string  is  not  a  valid  number     ");  }  if  (str.startsWith(     "--     "))  {  return  null;  }  if  (str.startsWith(     "0x     ")  ||  str.startsWith(     "-0x     ")  ||  str.startsWith(     "0X     ")  ||  str.startsWith(     "-0X     "))  {  int  hexDigits  =  str.length()  -  2;  //  drop  0x  if  (str.startsWith(     "-     "))  {  //  drop  -  hexDigits--;  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  	projects/Lang7/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.5773502691896258	449	449	1	replace	int  decPos  =  str.indexOf('  ');  Integer  decPos  =  str.indexOf('  ',  decPos);	          int    decPos    =    str.indexOf('    ');    Integer    decPos    =    str.indexOf('    ');    	non-compiled	[CE]  unclosed  character  literal	48	None	replace
109	[BUG]  [BUGGY]  int  decPos  =  str.length();  Integer  decPos  =  str.indexOf('  ');  [CE]  unclosed  character  literal  [FE]                NumberFormatException      [CONTEXT]      public  static  Number  createNumber(String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {  return  null;  }      [BUGGY]  int  decPos  =  str.length();  Integer  decPos  =  str.indexOf('  ');  [BUGGY]      if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(     "A  blank  string  is  not  a  valid  number     ");  }  if  (str.startsWith(     "--     "))  {  return  null;  }  if  (str.startsWith(     "0x     ")  ||  str.startsWith(     "-0x     ")  ||  str.startsWith(     "0X     ")  ||  str.startsWith(     "-0X     "))  {  int  hexDigits  =  str.length()  -  2;  //  drop  0x  if  (str.startsWith(     "-     "))  {  //  drop  -  hexDigits--;  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  	projects/Lang7/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.5773502691896258	449	449	1	replace	int  decPos  =  str.length();  Integer  decPos  =  str.indexOf('  ');	          int    decPos    =    str.indexOf('    ');    Integer    decPos    =    str.indexOf('    ');    	non-compiled	[CE]  unclosed  character  literal	48	None	replace
110	[BUG]  [BUGGY]  Number  str  =  createNumber(str.substring(0,  str.length()  +  1));  [CE]  unclosed  character  literal  [FE]                AssertionError      [CONTEXT]      public  static  Number  createNumber(String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {  return  null;  }      [BUGGY]  Number  str  =  createNumber(str.substring(0,  str.length()  +  1));  [BUGGY]      if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(     "A  blank  string  is  not  a  valid  number     ");  }  if  (str.startsWith(     "--     "))  {  return  null;  }  if  (str.startsWith(     "0x     ")  ||  str.startsWith(     "-0x     ")  ||  str.startsWith(     "0X     ")  ||  str.startsWith(     "-0X     "))  {  int  hexDigits  =  str.length()  -  2;  //  drop  0x  if  (str.startsWith(     "-     "))  {  //  drop  -  hexDigits--;  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  	projects/Lang7/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.5773502691896258	449	449	1	replace	Number  str  =  createNumber(str.substring(0,  str.length()  +  1));	  Number    str    =    createNumber(str.substring(0,    str.length()    -    1));    	non-compiled	[CE]  unclosed  character  literal	37	None	replace
111	[BUG]  [BUGGY]  Number  str  =  createNumber(str.substring(0,  str.length()  1));  [CE]  ')'  expected  [FE]                  AssertionError      [CONTEXT]      public  static  Number  createNumber(String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {  return  null;  }      [BUGGY]  Number  str  =  createNumber(str.substring(0,  str.length()  1));  [BUGGY]      if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(     "A  blank  string  is  not  a  valid  number     ");  }  if  (str.startsWith(     "--     "))  {  return  null;  }  if  (str.startsWith(     "0x     ")  ||  str.startsWith(     "-0x     ")  ||  str.startsWith(     "0X     ")  ||  str.startsWith(     "-0X     "))  {  int  hexDigits  =  str.length()  -  2;  //  drop  0x  if  (str.startsWith(     "-     "))  {  //  drop  -  hexDigits--;  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  	projects/Lang7/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.5773502691896258	449	449	1	replace	Number  str  =  createNumber(str.substring(0,  str.length()  1));	  Number    str    =    createNumber(str.substring(0,    str.length()    -    1));    	non-compiled	[CE]  ')'  expected	37	None	replace
112	[BUG]  [BUGGY]  Integer  str  =  str.length();  [CE]  unclosed  character  literal  [FE]              AssertionError      [CONTEXT]      public  static  Number  createNumber(String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {  return  null;  }      [BUGGY]  Integer  str  =  str.length();  [BUGGY]      if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(     "A  blank  string  is  not  a  valid  number     ");  }  if  (str.startsWith(     "--     "))  {  return  null;  }  if  (str.startsWith(     "0x     ")  ||  str.startsWith(     "-0x     ")  ||  str.startsWith(     "0X     ")  ||  str.startsWith(     "-0X     "))  {  int  hexDigits  =  str.length()  -  2;  //  drop  0x  if  (str.startsWith(     "-     "))  {  //  drop  -  hexDigits--;  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  	projects/Lang7/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.5773502691896258	449	449	1	replace	Integer  str  =  str.length();	  int    str    =    str.length()    -    2;    	non-compiled	[CE]  unclosed  character  literal	15	None	replace
113	[BUG]  [BUGGY]  char  str  =  str.length();  [CE]  unclosed  character  literal  [FE]                AssertionError      [CONTEXT]      public  static  Number  createNumber(String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {  return  null;  }      [BUGGY]  char  str  =  str.length();  [BUGGY]      if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(     "A  blank  string  is  not  a  valid  number     ");  }  if  (str.startsWith(     "--     "))  {  return  null;  }  if  (str.startsWith(     "0x     ")  ||  str.startsWith(     "-0x     ")  ||  str.startsWith(     "0X     ")  ||  str.startsWith(     "-0X     "))  {  int  hexDigits  =  str.length()  -  2;  //  drop  0x  if  (str.startsWith(     "-     "))  {  //  drop  -  hexDigits--;  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  	projects/Lang7/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.5773502691896258	449	449	1	replace	char  str  =  str.length();	  int    str    =    str.length()    -    2;    	non-compiled	[CE]  unclosed  character  literal	15	None	replace
114	[BUG]  [BUGGY]  if(!StringUtils.isBlank(mant)||!StringUtils.isEmpty(mant))  {  [CE]  unclosed  character  literal  [FE]                  AssertionError      [CONTEXT]      public  static  Number  createNumber(String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {  return  null;  }      [BUGGY]  if(!StringUtils.isBlank(mant)||!StringUtils.isEmpty(mant))  {  [BUGGY]      throw  new  NumberFormatException(     "A  blank  string  is  not  a  valid  number     ");  }  if  (str.startsWith(     "--     "))  {  return  null;  }  if  (str.startsWith(     "0x     ")  ||  str.startsWith(     "-0x     ")  ||  str.startsWith(     "0X     ")  ||  str.startsWith(     "-0X     "))  {  int  hexDigits  =  str.length()  -  2;  //  drop  0x  if  (str.startsWith(     "-     "))  {  //  drop  -  hexDigits--;  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  	projects/Lang7/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.5773502691896258	449	449	1	replace	if(!StringUtils.isBlank(mant)||!StringUtils.isEmpty(mant))  {	  if(!StringUtils.isBlank(str)||!StringUtils.isEmpty(str))    {    	non-compiled	[CE]  unclosed  character  literal	34	None	replace
115	[BUG]  [BUGGY]  if(!StringUtils.isBlank(str)&&!StringUtils.isEmpty(str))  {  [CE]  unclosed  character  literal  [FE]                    AssertionError      [CONTEXT]      public  static  Number  createNumber(String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {  return  null;  }      [BUGGY]  if(!StringUtils.isBlank(str)&&!StringUtils.isEmpty(str))  {  [BUGGY]      throw  new  NumberFormatException(     "A  blank  string  is  not  a  valid  number     ");  }  if  (str.startsWith(     "--     "))  {  return  null;  }  if  (str.startsWith(     "0x     ")  ||  str.startsWith(     "-0x     ")  ||  str.startsWith(     "0X     ")  ||  str.startsWith(     "-0X     "))  {  int  hexDigits  =  str.length()  -  2;  //  drop  0x  if  (str.startsWith(     "-     "))  {  //  drop  -  hexDigits--;  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  	projects/Lang7/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.5773502691896258	449	449	1	replace	if(!StringUtils.isBlank(str)&&!StringUtils.isEmpty(str))  {	  if(!StringUtils.isBlank(str)||!StringUtils.isEmpty(str))    {    	non-compiled	[CE]  unclosed  character  literal	34	None	replace
116	[BUG]  [BUGGY]  int  str  =  str.lastIndexOf('.',  1);  [CE]  unclosed  character  literal  [FE]                  AssertionError      [CONTEXT]      public  static  Number  createNumber(String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {  return  null;  }      [BUGGY]  int  str  =  str.lastIndexOf('.',  1);  [BUGGY]      if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(     "A  blank  string  is  not  a  valid  number     ");  }  if  (str.startsWith(     "--     "))  {  return  null;  }  if  (str.startsWith(     "0x     ")  ||  str.startsWith(     "-0x     ")  ||  str.startsWith(     "0X     ")  ||  str.startsWith(     "-0X     "))  {  int  hexDigits  =  str.length()  -  2;  //  drop  0x  if  (str.startsWith(     "-     "))  {  //  drop  -  hexDigits--;  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  	projects/Lang7/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.5773502691896258	449	449	1	replace	int  str  =  str.lastIndexOf('.',  1);	  int    str    =    str.lastIndexOf('.');    	non-compiled	[CE]  unclosed  character  literal	44	None	replace
117	[BUG]  [BUGGY]  int  str  =  str.lastIndexOf('.',  4);  [CE]  unclosed  character  literal  [FE]                    AssertionError      [CONTEXT]      public  static  Number  createNumber(String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {  return  null;  }      [BUGGY]  int  str  =  str.lastIndexOf('.',  4);  [BUGGY]      if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(     "A  blank  string  is  not  a  valid  number     ");  }  if  (str.startsWith(     "--     "))  {  return  null;  }  if  (str.startsWith(     "0x     ")  ||  str.startsWith(     "-0x     ")  ||  str.startsWith(     "0X     ")  ||  str.startsWith(     "-0X     "))  {  int  hexDigits  =  str.length()  -  2;  //  drop  0x  if  (str.startsWith(     "-     "))  {  //  drop  -  hexDigits--;  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  	projects/Lang7/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.5773502691896258	449	449	1	replace	int  str  =  str.lastIndexOf('.',  4);	  int    str    =    str.lastIndexOf('.');    	non-compiled	[CE]  unclosed  character  literal	44	None	replace
118	[BUG]  [BUGGY]  int  str  =  str.lastIndexOf('.',  2);  [CE]  unclosed  character  literal  [FE]                      AssertionError      [CONTEXT]      public  static  Number  createNumber(String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {  return  null;  }      [BUGGY]  int  str  =  str.lastIndexOf('.',  2);  [BUGGY]      if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(     "A  blank  string  is  not  a  valid  number     ");  }  if  (str.startsWith(     "--     "))  {  return  null;  }  if  (str.startsWith(     "0x     ")  ||  str.startsWith(     "-0x     ")  ||  str.startsWith(     "0X     ")  ||  str.startsWith(     "-0X     "))  {  int  hexDigits  =  str.length()  -  2;  //  drop  0x  if  (str.startsWith(     "-     "))  {  //  drop  -  hexDigits--;  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  	projects/Lang7/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.5773502691896258	449	449	1	replace	int  str  =  str.lastIndexOf('.',  2);	  int    str    =    str.lastIndexOf('.');    	non-compiled	[CE]  unclosed  character  literal	44	None	replace
119	[BUG]  [BUGGY]  Integer  hexDigits  =  str.length()  -  2;  [CE]  unclosed  character  literal  [FE]                  AssertionError      [CONTEXT]      public  static  Number  createNumber(String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {  return  null;  }      [BUGGY]  Integer  hexDigits  =  str.length()  -  2;  [BUGGY]      if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(     "A  blank  string  is  not  a  valid  number     ");  }  if  (str.startsWith(     "--     "))  {  return  null;  }  if  (str.startsWith(     "0x     ")  ||  str.startsWith(     "-0x     ")  ||  str.startsWith(     "0X     ")  ||  str.startsWith(     "-0X     "))  {  int  hexDigits  =  str.length()  -  2;  //  drop  0x  if  (str.startsWith(     "-     "))  {  //  drop  -  hexDigits--;  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  	projects/Lang7/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.5773502691896258	449	449	1	replace	Integer  hexDigits  =  str.length()  -  2;	  Integer    hexDigits    =    str.length();    	non-compiled	[CE]  unclosed  character  literal	53	None	replace
120	[BUG]  [BUGGY]  Integer  hexDigits  =  str.length()  +  2;  [CE]  unclosed  character  literal  [FE]                    AssertionError      [CONTEXT]      public  static  Number  createNumber(String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {  return  null;  }      [BUGGY]  Integer  hexDigits  =  str.length()  +  2;  [BUGGY]      if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(     "A  blank  string  is  not  a  valid  number     ");  }  if  (str.startsWith(     "--     "))  {  return  null;  }  if  (str.startsWith(     "0x     ")  ||  str.startsWith(     "-0x     ")  ||  str.startsWith(     "0X     ")  ||  str.startsWith(     "-0X     "))  {  int  hexDigits  =  str.length()  -  2;  //  drop  0x  if  (str.startsWith(     "-     "))  {  //  drop  -  hexDigits--;  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  	projects/Lang7/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.5773502691896258	449	449	1	replace	Integer  hexDigits  =  str.length()  +  2;	  Integer    hexDigits    =    str.length();    	non-compiled	[CE]  unclosed  character  literal	53	None	replace
121	[BUG]  [BUGGY]  Integer  hexDigits  =  str.length()  +  1;  [CE]  unclosed  character  literal  [FE]                      AssertionError      [CONTEXT]      public  static  Number  createNumber(String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {  return  null;  }      [BUGGY]  Integer  hexDigits  =  str.length()  +  1;  [BUGGY]      if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(     "A  blank  string  is  not  a  valid  number     ");  }  if  (str.startsWith(     "--     "))  {  return  null;  }  if  (str.startsWith(     "0x     ")  ||  str.startsWith(     "-0x     ")  ||  str.startsWith(     "0X     ")  ||  str.startsWith(     "-0X     "))  {  int  hexDigits  =  str.length()  -  2;  //  drop  0x  if  (str.startsWith(     "-     "))  {  //  drop  -  hexDigits--;  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  	projects/Lang7/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.5773502691896258	449	449	1	replace	Integer  hexDigits  =  str.length()  +  1;	  Integer    hexDigits    =    str.length();    	non-compiled	[CE]  unclosed  character  literal	53	None	replace
122	[BUG]  [BUGGY]  Number  str  =  createNumber(str,  expPos);  [CE]  unclosed  character  literal  [FE]              AssertionError      [CONTEXT]      public  static  Number  createNumber(String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {  return  null;  }      [BUGGY]  Number  str  =  createNumber(str,  expPos);  [BUGGY]      if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(     "A  blank  string  is  not  a  valid  number     ");  }  if  (str.startsWith(     "--     "))  {  return  null;  }  if  (str.startsWith(     "0x     ")  ||  str.startsWith(     "-0x     ")  ||  str.startsWith(     "0X     ")  ||  str.startsWith(     "-0X     "))  {  int  hexDigits  =  str.length()  -  2;  //  drop  0x  if  (str.startsWith(     "-     "))  {  //  drop  -  hexDigits--;  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  	projects/Lang7/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.5773502691896258	449	449	1	replace	Number  str  =  createNumber(str,  expPos);	  Number    str    =    createNumber(str,    hexDigits);    	non-compiled	[CE]  unclosed  character  literal	36	None	replace
123	[BUG]  [BUGGY]  Number  str  =  createNumber(str,  hexDigits,  exp);  [CE]  unclosed  character  literal  [FE]                AssertionError      [CONTEXT]      public  static  Number  createNumber(String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {  return  null;  }      [BUGGY]  Number  str  =  createNumber(str,  hexDigits,  exp);  [BUGGY]      if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(     "A  blank  string  is  not  a  valid  number     ");  }  if  (str.startsWith(     "--     "))  {  return  null;  }  if  (str.startsWith(     "0x     ")  ||  str.startsWith(     "-0x     ")  ||  str.startsWith(     "0X     ")  ||  str.startsWith(     "-0X     "))  {  int  hexDigits  =  str.length()  -  2;  //  drop  0x  if  (str.startsWith(     "-     "))  {  //  drop  -  hexDigits--;  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  	projects/Lang7/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.5773502691896258	449	449	1	replace	Number  str  =  createNumber(str,  hexDigits,  exp);	  Number    str    =    createNumber(str,    hexDigits);    	non-compiled	[CE]  unclosed  character  literal	36	None	replace
124	[BUG]  [BUGGY]  Number  str  =  createNumber(str,  exp);  [CE]  unclosed  character  literal  [FE]                  AssertionError      [CONTEXT]      public  static  Number  createNumber(String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {  return  null;  }      [BUGGY]  Number  str  =  createNumber(str,  exp);  [BUGGY]      if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(     "A  blank  string  is  not  a  valid  number     ");  }  if  (str.startsWith(     "--     "))  {  return  null;  }  if  (str.startsWith(     "0x     ")  ||  str.startsWith(     "-0x     ")  ||  str.startsWith(     "0X     ")  ||  str.startsWith(     "-0X     "))  {  int  hexDigits  =  str.length()  -  2;  //  drop  0x  if  (str.startsWith(     "-     "))  {  //  drop  -  hexDigits--;  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  	projects/Lang7/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.5773502691896258	449	449	1	replace	Number  str  =  createNumber(str,  exp);	  Number    str    =    createNumber(str,    hexDigits);    	non-compiled	[CE]  unclosed  character  literal	36	None	replace
125	[BUG]  [BUGGY]  Number  str  =  createNumber(str,  hexDigits,  expPos);  [CE]  unclosed  character  literal  [FE]                    AssertionError      [CONTEXT]      public  static  Number  createNumber(String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {  return  null;  }      [BUGGY]  Number  str  =  createNumber(str,  hexDigits,  expPos);  [BUGGY]      if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(     "A  blank  string  is  not  a  valid  number     ");  }  if  (str.startsWith(     "--     "))  {  return  null;  }  if  (str.startsWith(     "0x     ")  ||  str.startsWith(     "-0x     ")  ||  str.startsWith(     "0X     ")  ||  str.startsWith(     "-0X     "))  {  int  hexDigits  =  str.length()  -  2;  //  drop  0x  if  (str.startsWith(     "-     "))  {  //  drop  -  hexDigits--;  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  	projects/Lang7/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.5773502691896258	449	449	1	replace	Number  str  =  createNumber(str,  hexDigits,  expPos);	  Number    str    =    createNumber(str,    hexDigits);    	non-compiled	[CE]  unclosed  character  literal	36	None	replace
126	[BUG]  [BUGGY]  Integer  str  =  createInteger(str.substring(0,  str.length()  -  1));  [CE]  unclosed  character  literal  [FE]                  AssertionError      [CONTEXT]      public  static  Number  createNumber(String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {  return  null;  }      [BUGGY]  Integer  str  =  createInteger(str.substring(0,  str.length()  -  1));  [BUGGY]      if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(     "A  blank  string  is  not  a  valid  number     ");  }  if  (str.startsWith(     "--     "))  {  return  null;  }  if  (str.startsWith(     "0x     ")  ||  str.startsWith(     "-0x     ")  ||  str.startsWith(     "0X     ")  ||  str.startsWith(     "-0X     "))  {  int  hexDigits  =  str.length()  -  2;  //  drop  0x  if  (str.startsWith(     "-     "))  {  //  drop  -  hexDigits--;  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  	projects/Lang7/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.5773502691896258	449	449	1	replace	Integer  str  =  createInteger(str.substring(0,  str.length()  -  1));	  Integer    str    =    createInteger(str.substring(1));    	non-compiled	[CE]  unclosed  character  literal	14	None	replace
127	[BUG]  [BUGGY]  Integer  str  =  createInteger(str.substring(0,  str.length()  -  2));  [CE]  unclosed  character  literal  [FE]                    AssertionError      [CONTEXT]      public  static  Number  createNumber(String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {  return  null;  }      [BUGGY]  Integer  str  =  createInteger(str.substring(0,  str.length()  -  2));  [BUGGY]      if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(     "A  blank  string  is  not  a  valid  number     ");  }  if  (str.startsWith(     "--     "))  {  return  null;  }  if  (str.startsWith(     "0x     ")  ||  str.startsWith(     "-0x     ")  ||  str.startsWith(     "0X     ")  ||  str.startsWith(     "-0X     "))  {  int  hexDigits  =  str.length()  -  2;  //  drop  0x  if  (str.startsWith(     "-     "))  {  //  drop  -  hexDigits--;  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  	projects/Lang7/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.5773502691896258	449	449	1	replace	Integer  str  =  createInteger(str.substring(0,  str.length()  -  2));	  Integer    str    =    createInteger(str.substring(1));    	non-compiled	[CE]  unclosed  character  literal	14	None	replace
128	[BUG]  [BUGGY]  Integer  str  =  createInteger(str.substring(0,  str.length()));  [CE]  unclosed  character  literal  [FE]                      AssertionError      [CONTEXT]      public  static  Number  createNumber(String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {  return  null;  }      [BUGGY]  Integer  str  =  createInteger(str.substring(0,  str.length()));  [BUGGY]      if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(     "A  blank  string  is  not  a  valid  number     ");  }  if  (str.startsWith(     "--     "))  {  return  null;  }  if  (str.startsWith(     "0x     ")  ||  str.startsWith(     "-0x     ")  ||  str.startsWith(     "0X     ")  ||  str.startsWith(     "-0X     "))  {  int  hexDigits  =  str.length()  -  2;  //  drop  0x  if  (str.startsWith(     "-     "))  {  //  drop  -  hexDigits--;  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  	projects/Lang7/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.5773502691896258	449	449	1	replace	Integer  str  =  createInteger(str.substring(0,  str.length()));	  Integer    str    =    createInteger(str.substring(1));    	non-compiled	[CE]  unclosed  character  literal	14	None	replace
129	[BUG]  [BUGGY]  Integer  str  =  createInteger(str.substring(2));  [CE]  unclosed  character  literal  [FE]                        AssertionError      [CONTEXT]      public  static  Number  createNumber(String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {  return  null;  }      [BUGGY]  Integer  str  =  createInteger(str.substring(2));  [BUGGY]      if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(     "A  blank  string  is  not  a  valid  number     ");  }  if  (str.startsWith(     "--     "))  {  return  null;  }  if  (str.startsWith(     "0x     ")  ||  str.startsWith(     "-0x     ")  ||  str.startsWith(     "0X     ")  ||  str.startsWith(     "-0X     "))  {  int  hexDigits  =  str.length()  -  2;  //  drop  0x  if  (str.startsWith(     "-     "))  {  //  drop  -  hexDigits--;  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  	projects/Lang7/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.5773502691896258	449	449	1	replace	Integer  str  =  createInteger(str.substring(2));	  Integer    str    =    createInteger(str.substring(1));    	non-compiled	[CE]  unclosed  character  literal	14	None	replace
130	[BUG]  [BUGGY]  int  decPos  =  str.indexOf('  ',  DECEMBER_ZERO);  [CE]  unclosed  character  literal  [FE]            NumberFormatException      [CONTEXT]      public  static  Number  createNumber(String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {  return  null;  }      [BUGGY]  int  decPos  =  str.indexOf('  ',  DECEMBER_ZERO);  [BUGGY]      if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(     "A  blank  string  is  not  a  valid  number     ");  }  if  (str.startsWith(     "--     "))  {  return  null;  }  if  (str.startsWith(     "0x     ")  ||  str.startsWith(     "-0x     ")  ||  str.startsWith(     "0X     ")  ||  str.startsWith(     "-0X     "))  {  int  hexDigits  =  str.length()  -  2;  //  drop  0x  if  (str.startsWith(     "-     "))  {  //  drop  -  hexDigits--;  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  	projects/Lang7/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.5773502691896258	449	449	1	replace	int  decPos  =  str.indexOf('  ',  DECEMBER_ZERO);	  int    decPos    =    str.indexOf('    ',    DECEMBER_PREFIX);    	non-compiled	[CE]  unclosed  character  literal	4	None	replace
131	[BUG]  [BUGGY]  int  decPos  =  str.indexOf('  ',  expPos);  [CE]  unclosed  character  literal  [FE]              NumberFormatException      [CONTEXT]      public  static  Number  createNumber(String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {  return  null;  }      [BUGGY]  int  decPos  =  str.indexOf('  ',  expPos);  [BUGGY]      if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(     "A  blank  string  is  not  a  valid  number     ");  }  if  (str.startsWith(     "--     "))  {  return  null;  }  if  (str.startsWith(     "0x     ")  ||  str.startsWith(     "-0x     ")  ||  str.startsWith(     "0X     ")  ||  str.startsWith(     "-0X     "))  {  int  hexDigits  =  str.length()  -  2;  //  drop  0x  if  (str.startsWith(     "-     "))  {  //  drop  -  hexDigits--;  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  	projects/Lang7/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.5773502691896258	449	449	1	replace	int  decPos  =  str.indexOf('  ',  expPos);	  int    decPos    =    str.indexOf('    ',    DECEMBER_PREFIX);    	non-compiled	[CE]  unclosed  character  literal	4	None	replace
132	[BUG]  [BUGGY]  int  decPos  =  str.indexOf('  ',  DECEMBER_QUOTE);  [CE]  unclosed  character  literal  [FE]                NumberFormatException      [CONTEXT]      public  static  Number  createNumber(String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {  return  null;  }      [BUGGY]  int  decPos  =  str.indexOf('  ',  DECEMBER_QUOTE);  [BUGGY]      if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(     "A  blank  string  is  not  a  valid  number     ");  }  if  (str.startsWith(     "--     "))  {  return  null;  }  if  (str.startsWith(     "0x     ")  ||  str.startsWith(     "-0x     ")  ||  str.startsWith(     "0X     ")  ||  str.startsWith(     "-0X     "))  {  int  hexDigits  =  str.length()  -  2;  //  drop  0x  if  (str.startsWith(     "-     "))  {  //  drop  -  hexDigits--;  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  	projects/Lang7/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.5773502691896258	449	449	1	replace	int  decPos  =  str.indexOf('  ',  DECEMBER_QUOTE);	  int    decPos    =    str.indexOf('    ',    DECEMBER_PREFIX);    	non-compiled	[CE]  unclosed  character  literal	4	None	replace
133	[BUG]  [BUGGY]  int  decPos  =  str.indexOf('  ',  str.charAt(decPos));  [CE]  unclosed  character  literal  [FE]          NumberFormatException      [CONTEXT]      public  static  Number  createNumber(String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {  return  null;  }      [BUGGY]  int  decPos  =  str.indexOf('  ',  str.charAt(decPos));  [BUGGY]      if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(     "A  blank  string  is  not  a  valid  number     ");  }  if  (str.startsWith(     "--     "))  {  return  null;  }  if  (str.startsWith(     "0x     ")  ||  str.startsWith(     "-0x     ")  ||  str.startsWith(     "0X     ")  ||  str.startsWith(     "-0X     "))  {  int  hexDigits  =  str.length()  -  2;  //  drop  0x  if  (str.startsWith(     "-     "))  {  //  drop  -  hexDigits--;  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  	projects/Lang7/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.5773502691896258	449	449	1	replace	int  decPos  =  str.indexOf('  ',  str.charAt(decPos));	  int    decPos    =    str.indexOf('    ',    exp);    	non-compiled	[CE]  unclosed  character  literal	3	None	replace
134	[BUG]  [BUGGY]  int  decPos  =  str.indexOf('  ',  str.charAt(i));  [CE]  unclosed  character  literal  [FE]            NumberFormatException      [CONTEXT]      public  static  Number  createNumber(String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {  return  null;  }      [BUGGY]  int  decPos  =  str.indexOf('  ',  str.charAt(i));  [BUGGY]      if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(     "A  blank  string  is  not  a  valid  number     ");  }  if  (str.startsWith(     "--     "))  {  return  null;  }  if  (str.startsWith(     "0x     ")  ||  str.startsWith(     "-0x     ")  ||  str.startsWith(     "0X     ")  ||  str.startsWith(     "-0X     "))  {  int  hexDigits  =  str.length()  -  2;  //  drop  0x  if  (str.startsWith(     "-     "))  {  //  drop  -  hexDigits--;  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  	projects/Lang7/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.5773502691896258	449	449	1	replace	int  decPos  =  str.indexOf('  ',  str.charAt(i));	  int    decPos    =    str.indexOf('    ',    exp);    	non-compiled	[CE]  unclosed  character  literal	3	None	replace
135	[BUG]  [BUGGY]  int  decPos  =  str.indexOf('  ',  str.charAt(0));  [CE]  unclosed  character  literal  [FE]              NumberFormatException      [CONTEXT]      public  static  Number  createNumber(String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {  return  null;  }      [BUGGY]  int  decPos  =  str.indexOf('  ',  str.charAt(0));  [BUGGY]      if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(     "A  blank  string  is  not  a  valid  number     ");  }  if  (str.startsWith(     "--     "))  {  return  null;  }  if  (str.startsWith(     "0x     ")  ||  str.startsWith(     "-0x     ")  ||  str.startsWith(     "0X     ")  ||  str.startsWith(     "-0X     "))  {  int  hexDigits  =  str.length()  -  2;  //  drop  0x  if  (str.startsWith(     "-     "))  {  //  drop  -  hexDigits--;  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  	projects/Lang7/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.5773502691896258	449	449	1	replace	int  decPos  =  str.indexOf('  ',  str.charAt(0));	  int    decPos    =    str.indexOf('    ',    exp);    	non-compiled	[CE]  unclosed  character  literal	3	None	replace
136	[BUG]  [BUGGY]  int  str  =  str.lastIndexOf('.')+  1;  [CE]  unclosed  character  literal  [FE]                  AssertionError      [CONTEXT]      public  static  Number  createNumber(String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {  return  null;  }      [BUGGY]  int  str  =  str.lastIndexOf('.')+  1;  [BUGGY]      if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(     "A  blank  string  is  not  a  valid  number     ");  }  if  (str.startsWith(     "--     "))  {  return  null;  }  if  (str.startsWith(     "0x     ")  ||  str.startsWith(     "-0x     ")  ||  str.startsWith(     "0X     ")  ||  str.startsWith(     "-0X     "))  {  int  hexDigits  =  str.length()  -  2;  //  drop  0x  if  (str.startsWith(     "-     "))  {  //  drop  -  hexDigits--;  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  	projects/Lang7/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.5773502691896258	449	449	1	replace	int  str  =  str.lastIndexOf('.')+  1;	  int    str    =    str.indexOf('.')+    1;    	non-compiled	[CE]  unclosed  character  literal	72	None	replace
137	[BUG]  [BUGGY]  int  str  =  str.indexOf('.')+  2;  [CE]  unclosed  character  literal  [FE]                    AssertionError      [CONTEXT]      public  static  Number  createNumber(String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {  return  null;  }      [BUGGY]  int  str  =  str.indexOf('.')+  2;  [BUGGY]      if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(     "A  blank  string  is  not  a  valid  number     ");  }  if  (str.startsWith(     "--     "))  {  return  null;  }  if  (str.startsWith(     "0x     ")  ||  str.startsWith(     "-0x     ")  ||  str.startsWith(     "0X     ")  ||  str.startsWith(     "-0X     "))  {  int  hexDigits  =  str.length()  -  2;  //  drop  0x  if  (str.startsWith(     "-     "))  {  //  drop  -  hexDigits--;  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  	projects/Lang7/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.5773502691896258	449	449	1	replace	int  str  =  str.indexOf('.')+  2;	  int    str    =    str.indexOf('.')+    1;    	non-compiled	[CE]  unclosed  character  literal	72	None	replace
138	[BUG]  [BUGGY]  int  str  =  str.indexOf('.',  lastChar)+  1;  [CE]  unclosed  character  literal  [FE]                      AssertionError      [CONTEXT]      public  static  Number  createNumber(String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {  return  null;  }      [BUGGY]  int  str  =  str.indexOf('.',  lastChar)+  1;  [BUGGY]      if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(     "A  blank  string  is  not  a  valid  number     ");  }  if  (str.startsWith(     "--     "))  {  return  null;  }  if  (str.startsWith(     "0x     ")  ||  str.startsWith(     "-0x     ")  ||  str.startsWith(     "0X     ")  ||  str.startsWith(     "-0X     "))  {  int  hexDigits  =  str.length()  -  2;  //  drop  0x  if  (str.startsWith(     "-     "))  {  //  drop  -  hexDigits--;  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  	projects/Lang7/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.5773502691896258	449	449	1	replace	int  str  =  str.indexOf('.',  lastChar)+  1;	  int    str    =    str.indexOf('.')+    1;    	non-compiled	[CE]  unclosed  character  literal	72	None	replace
139	[BUG]  [BUGGY]  int  decPos  =  str.lastIndexOf('  ');  int  decPos  =  str.lastIndexOf('  ');  [CE]  unclosed  character  literal  [FE]    NumberFormatException    [CONTEXT]      public  static  Number  createNumber(String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {  return  null;  }      [BUGGY]  int  decPos  =  str.lastIndexOf('  ');  int  decPos  =  str.lastIndexOf('  ');  [BUGGY]      if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(     "A  blank  string  is  not  a  valid  number     ");  }  if  (str.startsWith(     "--     "))  {  return  null;  }  if  (str.startsWith(     "0x     ")  ||  str.startsWith(     "-0x     ")  ||  str.startsWith(     "0X     ")  ||  str.startsWith(     "-0X     "))  {  int  hexDigits  =  str.length()  -  2;  //  drop  0x  if  (str.startsWith(     "-     "))  {  //  drop  -  hexDigits--;  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  	projects/Lang7/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.5773502691896258	449	449	1	replace	int    decPos    =    str.lastIndexOf('    ');    int  decPos  =  str.lastIndexOf('  ');	  	non-compiled	[CE]  unclosed  character  literal	1	None	add
140	[BUG]  [BUGGY]  int  decPos  =  str.lastIndexOf('  ');  Integer  decPos  =  str.lastIndexOf('  ');  [CE]  unclosed  character  literal  [FE]      NumberFormatException    [CONTEXT]      public  static  Number  createNumber(String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {  return  null;  }      [BUGGY]  int  decPos  =  str.lastIndexOf('  ');  Integer  decPos  =  str.lastIndexOf('  ');  [BUGGY]      if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(     "A  blank  string  is  not  a  valid  number     ");  }  if  (str.startsWith(     "--     "))  {  return  null;  }  if  (str.startsWith(     "0x     ")  ||  str.startsWith(     "-0x     ")  ||  str.startsWith(     "0X     ")  ||  str.startsWith(     "-0X     "))  {  int  hexDigits  =  str.length()  -  2;  //  drop  0x  if  (str.startsWith(     "-     "))  {  //  drop  -  hexDigits--;  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  	projects/Lang7/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.5773502691896258	449	449	1	replace	int    decPos    =    str.lastIndexOf('    ');    Integer  decPos  =  str.lastIndexOf('  ');	  	non-compiled	[CE]  unclosed  character  literal	1	None	add
141	[BUG]  [BUGGY]  int  decPos  =  str.lastIndexOf('  ');  int  descPos  =  str.lastIndexOf('  ');  [CE]  unclosed  character  literal  [FE]        NumberFormatException    [CONTEXT]      public  static  Number  createNumber(String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {  return  null;  }      [BUGGY]  int  decPos  =  str.lastIndexOf('  ');  int  descPos  =  str.lastIndexOf('  ');  [BUGGY]      if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(     "A  blank  string  is  not  a  valid  number     ");  }  if  (str.startsWith(     "--     "))  {  return  null;  }  if  (str.startsWith(     "0x     ")  ||  str.startsWith(     "-0x     ")  ||  str.startsWith(     "0X     ")  ||  str.startsWith(     "-0X     "))  {  int  hexDigits  =  str.length()  -  2;  //  drop  0x  if  (str.startsWith(     "-     "))  {  //  drop  -  hexDigits--;  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  	projects/Lang7/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.5773502691896258	449	449	1	replace	int    decPos    =    str.lastIndexOf('    ');    int  descPos  =  str.lastIndexOf('  ');	  	non-compiled	[CE]  unclosed  character  literal	1	None	add
142	[BUG]  [BUGGY]  if(str  ==  null  ||  StringUtils.isEmpty(str)||  StringUtils.isBlank(str))  {  [CE]  unclosed  character  literal  [FE]              AssertionError      [CONTEXT]      public  static  Number  createNumber(String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {  return  null;  }      [BUGGY]  if(str  ==  null  ||  StringUtils.isEmpty(str)||  StringUtils.isBlank(str))  {  [BUGGY]      throw  new  NumberFormatException(     "A  blank  string  is  not  a  valid  number     ");  }  if  (str.startsWith(     "--     "))  {  return  null;  }  if  (str.startsWith(     "0x     ")  ||  str.startsWith(     "-0x     ")  ||  str.startsWith(     "0X     ")  ||  str.startsWith(     "-0X     "))  {  int  hexDigits  =  str.length()  -  2;  //  drop  0x  if  (str.startsWith(     "-     "))  {  //  drop  -  hexDigits--;  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  	projects/Lang7/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.5773502691896258	449	449	1	replace	if(str  ==  null  ||  StringUtils.isEmpty(str)||  StringUtils.isBlank(str))  {	  if(str    ==    null    ||    StringUtils.isBlank(str)||    StringUtils.isBlank(str))    {    	non-compiled	[CE]  unclosed  character  literal	66	None	replace
143	[BUG]  [BUGGY]  if(!StringUtils.isEmpty(str)||  StringUtils.isBlank(str))  {  [CE]  unclosed  character  literal  [FE]    NumberFormatException    [CONTEXT]      public  static  Number  createNumber(String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {  return  null;  }      [BUGGY]  if(!StringUtils.isEmpty(str)||  StringUtils.isBlank(str))  {  [BUGGY]      throw  new  NumberFormatException(     "A  blank  string  is  not  a  valid  number     ");  }  if  (str.startsWith(     "--     "))  {  return  null;  }  if  (str.startsWith(     "0x     ")  ||  str.startsWith(     "-0x     ")  ||  str.startsWith(     "0X     ")  ||  str.startsWith(     "-0X     "))  {  int  hexDigits  =  str.length()  -  2;  //  drop  0x  if  (str.startsWith(     "-     "))  {  //  drop  -  hexDigits--;  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  	projects/Lang7/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.5773502691896258	449	449	1	replace	if(!StringUtils.isEmpty(str)||  StringUtils.isBlank(str))  {	  if(StringUtils.isEmpty(str)||    StringUtils.isBlank(str))    {    	non-compiled	[CE]  unclosed  character  literal	20	None	replace
144	[BUG]  [BUGGY]  int  str  =  str.indexOf('.',  '_');  [CE]  unclosed  character  literal  [FE]                  AssertionError      [CONTEXT]      public  static  Number  createNumber(String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {  return  null;  }      [BUGGY]  int  str  =  str.indexOf('.',  '_');  [BUGGY]      if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(     "A  blank  string  is  not  a  valid  number     ");  }  if  (str.startsWith(     "--     "))  {  return  null;  }  if  (str.startsWith(     "0x     ")  ||  str.startsWith(     "-0x     ")  ||  str.startsWith(     "0X     ")  ||  str.startsWith(     "-0X     "))  {  int  hexDigits  =  str.length()  -  2;  //  drop  0x  if  (str.startsWith(     "-     "))  {  //  drop  -  hexDigits--;  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  	projects/Lang7/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.5773502691896258	449	449	1	replace	int  str  =  str.indexOf('.',  '_');	  int    str    =    str.indexOf('.',    lastChar);    	non-compiled	[CE]  unclosed  character  literal	88	None	replace
145	[BUG]  [BUGGY]  int  str  =  str.lastIndexOf('.',  lastChar);  [CE]  unclosed  character  literal  [FE]                    AssertionError      [CONTEXT]      public  static  Number  createNumber(String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {  return  null;  }      [BUGGY]  int  str  =  str.lastIndexOf('.',  lastChar);  [BUGGY]      if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(     "A  blank  string  is  not  a  valid  number     ");  }  if  (str.startsWith(     "--     "))  {  return  null;  }  if  (str.startsWith(     "0x     ")  ||  str.startsWith(     "-0x     ")  ||  str.startsWith(     "0X     ")  ||  str.startsWith(     "-0X     "))  {  int  hexDigits  =  str.length()  -  2;  //  drop  0x  if  (str.startsWith(     "-     "))  {  //  drop  -  hexDigits--;  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  	projects/Lang7/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.5773502691896258	449	449	1	replace	int  str  =  str.lastIndexOf('.',  lastChar);	  int    str    =    str.indexOf('.',    lastChar);    	non-compiled	[CE]  unclosed  character  literal	88	None	replace
146	[BUG]  [BUGGY]  int  str  =  str.indexOf('.',  str.length());  [CE]  unclosed  character  literal  [FE]                      AssertionError      [CONTEXT]      public  static  Number  createNumber(String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {  return  null;  }      [BUGGY]  int  str  =  str.indexOf('.',  str.length());  [BUGGY]      if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(     "A  blank  string  is  not  a  valid  number     ");  }  if  (str.startsWith(     "--     "))  {  return  null;  }  if  (str.startsWith(     "0x     ")  ||  str.startsWith(     "-0x     ")  ||  str.startsWith(     "0X     ")  ||  str.startsWith(     "-0X     "))  {  int  hexDigits  =  str.length()  -  2;  //  drop  0x  if  (str.startsWith(     "-     "))  {  //  drop  -  hexDigits--;  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  	projects/Lang7/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.5773502691896258	449	449	1	replace	int  str  =  str.indexOf('.',  str.length());	  int    str    =    str.indexOf('.',    lastChar);    	non-compiled	[CE]  unclosed  character  literal	88	None	replace
147	[BUG]  [BUGGY]  if(str  ==  null  ||  StringUtils.isEmpty(str)||  StringUtils.isEmpty(str))  {  [CE]  unclosed  character  literal  [FE]            AssertionError      [CONTEXT]      public  static  Number  createNumber(String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {  return  null;  }      [BUGGY]  if(str  ==  null  ||  StringUtils.isEmpty(str)||  StringUtils.isEmpty(str))  {  [BUGGY]      throw  new  NumberFormatException(     "A  blank  string  is  not  a  valid  number     ");  }  if  (str.startsWith(     "--     "))  {  return  null;  }  if  (str.startsWith(     "0x     ")  ||  str.startsWith(     "-0x     ")  ||  str.startsWith(     "0X     ")  ||  str.startsWith(     "-0X     "))  {  int  hexDigits  =  str.length()  -  2;  //  drop  0x  if  (str.startsWith(     "-     "))  {  //  drop  -  hexDigits--;  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  	projects/Lang7/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.5773502691896258	449	449	1	replace	if(str  ==  null  ||  StringUtils.isEmpty(str)||  StringUtils.isEmpty(str))  {	  if(str    ==    null    ||    StringUtils.isBlank(str)||    StringUtils.isEmpty(str))    {    	non-compiled	[CE]  unclosed  character  literal	69	None	replace
148	[BUG]  [BUGGY]  if(str  ==  null  ||  StringUtils.isBlank(str)&&  StringUtils.isEmpty(str))  {  [CE]  unclosed  character  literal  [FE]              AssertionError      [CONTEXT]      public  static  Number  createNumber(String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {  return  null;  }      [BUGGY]  if(str  ==  null  ||  StringUtils.isBlank(str)&&  StringUtils.isEmpty(str))  {  [BUGGY]      throw  new  NumberFormatException(     "A  blank  string  is  not  a  valid  number     ");  }  if  (str.startsWith(     "--     "))  {  return  null;  }  if  (str.startsWith(     "0x     ")  ||  str.startsWith(     "-0x     ")  ||  str.startsWith(     "0X     ")  ||  str.startsWith(     "-0X     "))  {  int  hexDigits  =  str.length()  -  2;  //  drop  0x  if  (str.startsWith(     "-     "))  {  //  drop  -  hexDigits--;  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  	projects/Lang7/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.5773502691896258	449	449	1	replace	if(str  ==  null  ||  StringUtils.isBlank(str)&&  StringUtils.isEmpty(str))  {	  if(str    ==    null    ||    StringUtils.isBlank(str)||    StringUtils.isEmpty(str))    {    	non-compiled	[CE]  unclosed  character  literal	69	None	replace
149	[BUG]  [BUGGY]  int  str  =  str.length()  -  1;  [CE]  unclosed  character  literal  [FE]                  AssertionError      [CONTEXT]      public  static  Number  createNumber(String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {  return  null;  }      [BUGGY]  int  str  =  str.length()  -  1;  [BUGGY]      if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(     "A  blank  string  is  not  a  valid  number     ");  }  if  (str.startsWith(     "--     "))  {  return  null;  }  if  (str.startsWith(     "0x     ")  ||  str.startsWith(     "-0x     ")  ||  str.startsWith(     "0X     ")  ||  str.startsWith(     "-0X     "))  {  int  hexDigits  =  str.length()  -  2;  //  drop  0x  if  (str.startsWith(     "-     "))  {  //  drop  -  hexDigits--;  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  	projects/Lang7/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.5773502691896258	449	449	1	replace	int  str  =  str.length()  -  1;	  int    str    =    str.length()    +    1;    	non-compiled	[CE]  unclosed  character  literal	17	None	replace
150	[BUG]  [BUGGY]  if(!StringUtils.isBlank(str)&&  str.length()  ==  0)  {  [CE]  unclosed  character  literal  [FE]              AssertionError      [CONTEXT]      public  static  Number  createNumber(String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {  return  null;  }      [BUGGY]  if(!StringUtils.isBlank(str)&&  str.length()  ==  0)  {  [BUGGY]      throw  new  NumberFormatException(     "A  blank  string  is  not  a  valid  number     ");  }  if  (str.startsWith(     "--     "))  {  return  null;  }  if  (str.startsWith(     "0x     ")  ||  str.startsWith(     "-0x     ")  ||  str.startsWith(     "0X     ")  ||  str.startsWith(     "-0X     "))  {  int  hexDigits  =  str.length()  -  2;  //  drop  0x  if  (str.startsWith(     "-     "))  {  //  drop  -  hexDigits--;  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  	projects/Lang7/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.5773502691896258	449	449	1	replace	if(!StringUtils.isBlank(str)&&  str.length()  ==  0)  {	  if(!StringUtils.isBlank(str)||    str.length()    ==    0)    {    	non-compiled	[CE]  unclosed  character  literal	79	None	replace
151	[BUG]  [BUGGY]  if(!StringUtils.isBlank(str)||  str.length()!=  0)  {  [CE]  unclosed  character  literal  [FE]                AssertionError      [CONTEXT]      public  static  Number  createNumber(String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {  return  null;  }      [BUGGY]  if(!StringUtils.isBlank(str)||  str.length()!=  0)  {  [BUGGY]      throw  new  NumberFormatException(     "A  blank  string  is  not  a  valid  number     ");  }  if  (str.startsWith(     "--     "))  {  return  null;  }  if  (str.startsWith(     "0x     ")  ||  str.startsWith(     "-0x     ")  ||  str.startsWith(     "0X     ")  ||  str.startsWith(     "-0X     "))  {  int  hexDigits  =  str.length()  -  2;  //  drop  0x  if  (str.startsWith(     "-     "))  {  //  drop  -  hexDigits--;  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  	projects/Lang7/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.5773502691896258	449	449	1	replace	if(!StringUtils.isBlank(str)||  str.length()!=  0)  {	  if(!StringUtils.isBlank(str)||    str.length()    ==    0)    {    	non-compiled	[CE]  unclosed  character  literal	79	None	replace
152	[BUG]  [BUGGY]  int  decPos  =  str.length();  String  decPos  =  str.length();  [CE]  unclosed  character  literal  [FE]        NumberFormatException      [CONTEXT]      public  static  Number  createNumber(String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {  return  null;  }      [BUGGY]  int  decPos  =  str.length();  String  decPos  =  str.length();  [BUGGY]      if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(     "A  blank  string  is  not  a  valid  number     ");  }  if  (str.startsWith(     "--     "))  {  return  null;  }  if  (str.startsWith(     "0x     ")  ||  str.startsWith(     "-0x     ")  ||  str.startsWith(     "0X     ")  ||  str.startsWith(     "-0X     "))  {  int  hexDigits  =  str.length()  -  2;  //  drop  0x  if  (str.startsWith(     "-     "))  {  //  drop  -  hexDigits--;  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  	projects/Lang7/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.5773502691896258	449	449	1	replace	int  decPos  =  str.length();  String  decPos  =  str.length();	          int    decPos    =    str.length();    char    decPos    =    str.length();    	non-compiled	[CE]  unclosed  character  literal	81	None	replace
153	[BUG]  [BUGGY]  String  decPos  =  str.length();  [CE]  unclosed  character  literal  [FE]          NumberFormatException      [CONTEXT]      public  static  Number  createNumber(String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {  return  null;  }      [BUGGY]  String  decPos  =  str.length();  [BUGGY]      if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(     "A  blank  string  is  not  a  valid  number     ");  }  if  (str.startsWith(     "--     "))  {  return  null;  }  if  (str.startsWith(     "0x     ")  ||  str.startsWith(     "-0x     ")  ||  str.startsWith(     "0X     ")  ||  str.startsWith(     "-0X     "))  {  int  hexDigits  =  str.length()  -  2;  //  drop  0x  if  (str.startsWith(     "-     "))  {  //  drop  -  hexDigits--;  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  	projects/Lang7/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.5773502691896258	449	449	1	replace	String  decPos  =  str.length();	          int    decPos    =    str.length();    char    decPos    =    str.length();    	non-compiled	[CE]  unclosed  character  literal	81	None	replace
154	[BUG]  [BUGGY]  Integer  decPos  =  str.length();  String  decPos  =  str.length();  [CE]  unclosed  character  literal  [FE]            NumberFormatException      [CONTEXT]      public  static  Number  createNumber(String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {  return  null;  }      [BUGGY]  Integer  decPos  =  str.length();  String  decPos  =  str.length();  [BUGGY]      if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(     "A  blank  string  is  not  a  valid  number     ");  }  if  (str.startsWith(     "--     "))  {  return  null;  }  if  (str.startsWith(     "0x     ")  ||  str.startsWith(     "-0x     ")  ||  str.startsWith(     "0X     ")  ||  str.startsWith(     "-0X     "))  {  int  hexDigits  =  str.length()  -  2;  //  drop  0x  if  (str.startsWith(     "-     "))  {  //  drop  -  hexDigits--;  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  	projects/Lang7/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.5773502691896258	449	449	1	replace	Integer  decPos  =  str.length();  String  decPos  =  str.length();	          int    decPos    =    str.length();    char    decPos    =    str.length();    	non-compiled	[CE]  unclosed  character  literal	81	None	replace
155	[BUG]  [BUGGY]  int  decPos  =  str.indexOf('  ')+  2;  [CE]  unclosed  character  literal  [FE]          NumberFormatException      [CONTEXT]      public  static  Number  createNumber(String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {  return  null;  }      [BUGGY]  int  decPos  =  str.indexOf('  ')+  2;  [BUGGY]      if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(     "A  blank  string  is  not  a  valid  number     ");  }  if  (str.startsWith(     "--     "))  {  return  null;  }  if  (str.startsWith(     "0x     ")  ||  str.startsWith(     "-0x     ")  ||  str.startsWith(     "0X     ")  ||  str.startsWith(     "-0X     "))  {  int  hexDigits  =  str.length()  -  2;  //  drop  0x  if  (str.startsWith(     "-     "))  {  //  drop  -  hexDigits--;  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  	projects/Lang7/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.5773502691896258	449	449	1	replace	int  decPos  =  str.indexOf('  ')+  2;	  int    decPos    =    str.indexOf('    ')+    1;    	non-compiled	[CE]  unclosed  character  literal	74	None	replace
156	[BUG]  [BUGGY]  int  decPos  =  str.lastIndexOf('  ')+  1;  [CE]  unclosed  character  literal  [FE]            NumberFormatException      [CONTEXT]      public  static  Number  createNumber(String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {  return  null;  }      [BUGGY]  int  decPos  =  str.lastIndexOf('  ')+  1;  [BUGGY]      if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(     "A  blank  string  is  not  a  valid  number     ");  }  if  (str.startsWith(     "--     "))  {  return  null;  }  if  (str.startsWith(     "0x     ")  ||  str.startsWith(     "-0x     ")  ||  str.startsWith(     "0X     ")  ||  str.startsWith(     "-0X     "))  {  int  hexDigits  =  str.length()  -  2;  //  drop  0x  if  (str.startsWith(     "-     "))  {  //  drop  -  hexDigits--;  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  	projects/Lang7/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.5773502691896258	449	449	1	replace	int  decPos  =  str.lastIndexOf('  ')+  1;	  int    decPos    =    str.indexOf('    ')+    1;    	non-compiled	[CE]  unclosed  character  literal	74	None	replace
157	[BUG]  [BUGGY]  if(str  ==  null  ||!StringUtils.isBlank(s))  {  [CE]  unclosed  character  literal  [FE]                AssertionError      [CONTEXT]      public  static  Number  createNumber(String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {  return  null;  }      [BUGGY]  if(str  ==  null  ||!StringUtils.isBlank(s))  {  [BUGGY]      throw  new  NumberFormatException(     "A  blank  string  is  not  a  valid  number     ");  }  if  (str.startsWith(     "--     "))  {  return  null;  }  if  (str.startsWith(     "0x     ")  ||  str.startsWith(     "-0x     ")  ||  str.startsWith(     "0X     ")  ||  str.startsWith(     "-0X     "))  {  int  hexDigits  =  str.length()  -  2;  //  drop  0x  if  (str.startsWith(     "-     "))  {  //  drop  -  hexDigits--;  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  	projects/Lang7/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.5773502691896258	449	449	1	replace	if(str  ==  null  ||!StringUtils.isBlank(s))  {	  if(str    ==    null    ||!StringUtils.isBlank(str))    {    	non-compiled	[CE]  unclosed  character  literal	33	None	replace
158	[BUG]  [BUGGY]  if(str  ==  null  ||  StringUtils.isBlank(str)||  str.startsWith( "-0 "))  {  [CE]  unclosed  character  literal  [FE]                AssertionError      [CONTEXT]      public  static  Number  createNumber(String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {  return  null;  }      [BUGGY]  if(str  ==  null  ||  StringUtils.isBlank(str)||  str.startsWith( "-0 "))  {  [BUGGY]      throw  new  NumberFormatException(     "A  blank  string  is  not  a  valid  number     ");  }  if  (str.startsWith(     "--     "))  {  return  null;  }  if  (str.startsWith(     "0x     ")  ||  str.startsWith(     "-0x     ")  ||  str.startsWith(     "0X     ")  ||  str.startsWith(     "-0X     "))  {  int  hexDigits  =  str.length()  -  2;  //  drop  0x  if  (str.startsWith(     "-     "))  {  //  drop  -  hexDigits--;  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  	projects/Lang7/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.5773502691896258	449	449	1	replace	if(str  ==  null  ||  StringUtils.isBlank(str)||  str.startsWith( "-0 "))  {	  if(str    ==    null    ||    StringUtils.isBlank(str)||    str.startsWith(   "-   "))    {    	non-compiled	[CE]  unclosed  character  literal	56	None	replace
159	[BUG]  [BUGGY]  if(str  ==  null  ||  StringUtils.isBlank(str)||  str.startsWith( ".0 "))  {  [CE]  unclosed  character  literal  [FE]                  AssertionError      [CONTEXT]      public  static  Number  createNumber(String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {  return  null;  }      [BUGGY]  if(str  ==  null  ||  StringUtils.isBlank(str)||  str.startsWith( ".0 "))  {  [BUGGY]      throw  new  NumberFormatException(     "A  blank  string  is  not  a  valid  number     ");  }  if  (str.startsWith(     "--     "))  {  return  null;  }  if  (str.startsWith(     "0x     ")  ||  str.startsWith(     "-0x     ")  ||  str.startsWith(     "0X     ")  ||  str.startsWith(     "-0X     "))  {  int  hexDigits  =  str.length()  -  2;  //  drop  0x  if  (str.startsWith(     "-     "))  {  //  drop  -  hexDigits--;  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  	projects/Lang7/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.5773502691896258	449	449	1	replace	if(str  ==  null  ||  StringUtils.isBlank(str)||  str.startsWith( ".0 "))  {	  if(str    ==    null    ||    StringUtils.isBlank(str)||    str.startsWith(   "-   "))    {    	non-compiled	[CE]  unclosed  character  literal	56	None	replace
160	[BUG]  [BUGGY]  if(str  ==  null  ||  StringUtils.isBlank(str)||  str.startsWith( "0x "))  {  [CE]  unclosed  character  literal  [FE]                    AssertionError      [CONTEXT]      public  static  Number  createNumber(String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {  return  null;  }      [BUGGY]  if(str  ==  null  ||  StringUtils.isBlank(str)||  str.startsWith( "0x "))  {  [BUGGY]      throw  new  NumberFormatException(     "A  blank  string  is  not  a  valid  number     ");  }  if  (str.startsWith(     "--     "))  {  return  null;  }  if  (str.startsWith(     "0x     ")  ||  str.startsWith(     "-0x     ")  ||  str.startsWith(     "0X     ")  ||  str.startsWith(     "-0X     "))  {  int  hexDigits  =  str.length()  -  2;  //  drop  0x  if  (str.startsWith(     "-     "))  {  //  drop  -  hexDigits--;  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  	projects/Lang7/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.5773502691896258	449	449	1	replace	if(str  ==  null  ||  StringUtils.isBlank(str)||  str.startsWith( "0x "))  {	  if(str    ==    null    ||    StringUtils.isBlank(str)||    str.startsWith(   "-   "))    {    	non-compiled	[CE]  unclosed  character  literal	56	None	replace
161	[BUG]  [BUGGY]  int  hexDigits  =  str.lastIndexOf('.',  3);  [CE]  unclosed  character  literal  [FE]          NumberFormatException      [CONTEXT]      public  static  Number  createNumber(String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {  return  null;  }      [BUGGY]  int  hexDigits  =  str.lastIndexOf('.',  3);  [BUGGY]      if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(     "A  blank  string  is  not  a  valid  number     ");  }  if  (str.startsWith(     "--     "))  {  return  null;  }  if  (str.startsWith(     "0x     ")  ||  str.startsWith(     "-0x     ")  ||  str.startsWith(     "0X     ")  ||  str.startsWith(     "-0X     "))  {  int  hexDigits  =  str.length()  -  2;  //  drop  0x  if  (str.startsWith(     "-     "))  {  //  drop  -  hexDigits--;  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  	projects/Lang7/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.5773502691896258	449	449	1	replace	int  hexDigits  =  str.lastIndexOf('.',  3);	  int    hexDigits    =    str.lastIndexOf('.',    4);    	non-compiled	[CE]  unclosed  character  literal	30	None	replace
162	[BUG]  [BUGGY]  if(StringUtils.isBlank(str)||  StringUtils.isEmpty(str)||  str.length()  ==  0)  {  if(StringUtils.isBlank(str)||  StringUtils.isEmpty(str)||  str.length()  ==  0)  {  [CE]  unclosed  character  literal  [FE]    NumberFormatException    [CONTEXT]      public  static  Number  createNumber(String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {  return  null;  }      [BUGGY]  if(StringUtils.isBlank(str)||  StringUtils.isEmpty(str)||  str.length()  ==  0)  {  if(StringUtils.isBlank(str)||  StringUtils.isEmpty(str)||  str.length()  ==  0)  {  [BUGGY]      throw  new  NumberFormatException(     "A  blank  string  is  not  a  valid  number     ");  }  if  (str.startsWith(     "--     "))  {  return  null;  }  if  (str.startsWith(     "0x     ")  ||  str.startsWith(     "-0x     ")  ||  str.startsWith(     "0X     ")  ||  str.startsWith(     "-0X     "))  {  int  hexDigits  =  str.length()  -  2;  //  drop  0x  if  (str.startsWith(     "-     "))  {  //  drop  -  hexDigits--;  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  	projects/Lang7/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.5773502691896258	449	449	1	replace	if(StringUtils.isBlank(str)||    StringUtils.isEmpty(str)||    str.length()    ==    0)    {    if(StringUtils.isBlank(str)||  StringUtils.isEmpty(str)||  str.length()  ==  0)  {	  	non-compiled	[CE]  unclosed  character  literal	21	None	add
163	[BUG]  [BUGGY]  if(StringUtils.isBlank(str)||  StringUtils.isEmpty(str)||  str.length()  ==  0)  {  if(StringUtils.isBlank(str)||  StringUtils.isEmpty(str)||  str.length()!=  0)  {  [CE]  unclosed  character  literal  [FE]      NumberFormatException    [CONTEXT]      public  static  Number  createNumber(String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {  return  null;  }      [BUGGY]  if(StringUtils.isBlank(str)||  StringUtils.isEmpty(str)||  str.length()  ==  0)  {  if(StringUtils.isBlank(str)||  StringUtils.isEmpty(str)||  str.length()!=  0)  {  [BUGGY]      throw  new  NumberFormatException(     "A  blank  string  is  not  a  valid  number     ");  }  if  (str.startsWith(     "--     "))  {  return  null;  }  if  (str.startsWith(     "0x     ")  ||  str.startsWith(     "-0x     ")  ||  str.startsWith(     "0X     ")  ||  str.startsWith(     "-0X     "))  {  int  hexDigits  =  str.length()  -  2;  //  drop  0x  if  (str.startsWith(     "-     "))  {  //  drop  -  hexDigits--;  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  	projects/Lang7/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.5773502691896258	449	449	1	replace	if(StringUtils.isBlank(str)||    StringUtils.isEmpty(str)||    str.length()    ==    0)    {    if(StringUtils.isBlank(str)||  StringUtils.isEmpty(str)||  str.length()!=  0)  {	  	non-compiled	[CE]  unclosed  character  literal	21	None	add
164	[BUG]  [BUGGY]  if(StringUtils.isBlank(str)||  StringUtils.isEmpty(str)||  str.length()  ==  0)  {  If(StringUtils.isBlank(str)||  StringUtils.isEmpty(str)||  str.length()  ==  0)  {  [CE]  ';'  expected  [FE]        NumberFormatException    [CONTEXT]      public  static  Number  createNumber(String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {  return  null;  }      [BUGGY]  if(StringUtils.isBlank(str)||  StringUtils.isEmpty(str)||  str.length()  ==  0)  {  If(StringUtils.isBlank(str)||  StringUtils.isEmpty(str)||  str.length()  ==  0)  {  [BUGGY]      throw  new  NumberFormatException(     "A  blank  string  is  not  a  valid  number     ");  }  if  (str.startsWith(     "--     "))  {  return  null;  }  if  (str.startsWith(     "0x     ")  ||  str.startsWith(     "-0x     ")  ||  str.startsWith(     "0X     ")  ||  str.startsWith(     "-0X     "))  {  int  hexDigits  =  str.length()  -  2;  //  drop  0x  if  (str.startsWith(     "-     "))  {  //  drop  -  hexDigits--;  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  	projects/Lang7/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.5773502691896258	449	449	1	replace	if(StringUtils.isBlank(str)||    StringUtils.isEmpty(str)||    str.length()    ==    0)    {    If(StringUtils.isBlank(str)||  StringUtils.isEmpty(str)||  str.length()  ==  0)  {	  	non-compiled	[CE]  ';'  expected	21	None	add
165	[BUG]  [BUGGY]  if(StringUtils.isBlank(str)&&  StringUtils.isEmpty(str)||  str.length()  ==  0)  {  [CE]  unclosed  character  literal  [FE]              AssertionError      [CONTEXT]      public  static  Number  createNumber(String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {  return  null;  }      [BUGGY]  if(StringUtils.isBlank(str)&&  StringUtils.isEmpty(str)||  str.length()  ==  0)  {  [BUGGY]      throw  new  NumberFormatException(     "A  blank  string  is  not  a  valid  number     ");  }  if  (str.startsWith(     "--     "))  {  return  null;  }  if  (str.startsWith(     "0x     ")  ||  str.startsWith(     "-0x     ")  ||  str.startsWith(     "0X     ")  ||  str.startsWith(     "-0X     "))  {  int  hexDigits  =  str.length()  -  2;  //  drop  0x  if  (str.startsWith(     "-     "))  {  //  drop  -  hexDigits--;  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  	projects/Lang7/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.5773502691896258	449	449	1	replace	if(StringUtils.isBlank(str)&&  StringUtils.isEmpty(str)||  str.length()  ==  0)  {	  if(StringUtils.isBlank(str)&&    StringUtils.isEmpty(str))    {    	non-compiled	[CE]  unclosed  character  literal	70	None	replace
166	[BUG]  [BUGGY]  if(!StringUtils.isBlank(str)&&  StringUtils.isBlank(str))  {  [CE]  unclosed  character  literal  [FE]    NumberFormatException    [CONTEXT]      public  static  Number  createNumber(String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {  return  null;  }      [BUGGY]  if(!StringUtils.isBlank(str)&&  StringUtils.isBlank(str))  {  [BUGGY]      throw  new  NumberFormatException(     "A  blank  string  is  not  a  valid  number     ");  }  if  (str.startsWith(     "--     "))  {  return  null;  }  if  (str.startsWith(     "0x     ")  ||  str.startsWith(     "-0x     ")  ||  str.startsWith(     "0X     ")  ||  str.startsWith(     "-0X     "))  {  int  hexDigits  =  str.length()  -  2;  //  drop  0x  if  (str.startsWith(     "-     "))  {  //  drop  -  hexDigits--;  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  	projects/Lang7/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.5773502691896258	449	449	1	replace	if(!StringUtils.isBlank(str)&&  StringUtils.isBlank(str))  {	  if(!StringUtils.isBlank(str)||    StringUtils.isBlank(str))    {    	non-compiled	[CE]  unclosed  character  literal	24	None	replace
167	[BUG]  [BUGGY]  if(!StringUtils.isBlank(str)&&  StringUtils.isEmpty(str))  {  [CE]  unclosed  character  literal  [FE]              AssertionError      [CONTEXT]      public  static  Number  createNumber(String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {  return  null;  }      [BUGGY]  if(!StringUtils.isBlank(str)&&  StringUtils.isEmpty(str))  {  [BUGGY]      throw  new  NumberFormatException(     "A  blank  string  is  not  a  valid  number     ");  }  if  (str.startsWith(     "--     "))  {  return  null;  }  if  (str.startsWith(     "0x     ")  ||  str.startsWith(     "-0x     ")  ||  str.startsWith(     "0X     ")  ||  str.startsWith(     "-0X     "))  {  int  hexDigits  =  str.length()  -  2;  //  drop  0x  if  (str.startsWith(     "-     "))  {  //  drop  -  hexDigits--;  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  	projects/Lang7/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.5773502691896258	449	449	1	replace	if(!StringUtils.isBlank(str)&&  StringUtils.isEmpty(str))  {	  if(!StringUtils.isBlank(str)||    StringUtils.isEmpty(str))    {    	non-compiled	[CE]  unclosed  character  literal	64	None	replace
168	[BUG]  [BUGGY]  int  decPos  =  str.lastIndexOf('  ',  dec);  [CE]  unclosed  character  literal  [FE]        NumberFormatException      [CONTEXT]      public  static  Number  createNumber(String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {  return  null;  }      [BUGGY]  int  decPos  =  str.lastIndexOf('  ',  dec);  [BUGGY]      if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(     "A  blank  string  is  not  a  valid  number     ");  }  if  (str.startsWith(     "--     "))  {  return  null;  }  if  (str.startsWith(     "0x     ")  ||  str.startsWith(     "-0x     ")  ||  str.startsWith(     "0X     ")  ||  str.startsWith(     "-0X     "))  {  int  hexDigits  =  str.length()  -  2;  //  drop  0x  if  (str.startsWith(     "-     "))  {  //  drop  -  hexDigits--;  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  	projects/Lang7/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.5773502691896258	449	449	1	replace	int  decPos  =  str.lastIndexOf('  ',  dec);	  int    decPos    =    str.indexOf('    ',    dec);    	non-compiled	[CE]  unclosed  character  literal	84	None	replace
169	[BUG]  [BUGGY]  int  decPos  =  str.indexOf('  ',  len);  [CE]  unclosed  character  literal  [FE]          NumberFormatException      [CONTEXT]      public  static  Number  createNumber(String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {  return  null;  }      [BUGGY]  int  decPos  =  str.indexOf('  ',  len);  [BUGGY]      if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(     "A  blank  string  is  not  a  valid  number     ");  }  if  (str.startsWith(     "--     "))  {  return  null;  }  if  (str.startsWith(     "0x     ")  ||  str.startsWith(     "-0x     ")  ||  str.startsWith(     "0X     ")  ||  str.startsWith(     "-0X     "))  {  int  hexDigits  =  str.length()  -  2;  //  drop  0x  if  (str.startsWith(     "-     "))  {  //  drop  -  hexDigits--;  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  	projects/Lang7/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.5773502691896258	449	449	1	replace	int  decPos  =  str.indexOf('  ',  len);	  int    decPos    =    str.indexOf('    ',    dec);    	non-compiled	[CE]  unclosed  character  literal	84	None	replace
170	[BUG]  [BUGGY]  int  hexDigits  =  str.length()  -  16;  [CE]  unclosed  character  literal  [FE]        NumberFormatException      [CONTEXT]      public  static  Number  createNumber(String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {  return  null;  }      [BUGGY]  int  hexDigits  =  str.length()  -  16;  [BUGGY]      if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(     "A  blank  string  is  not  a  valid  number     ");  }  if  (str.startsWith(     "--     "))  {  return  null;  }  if  (str.startsWith(     "0x     ")  ||  str.startsWith(     "-0x     ")  ||  str.startsWith(     "0X     ")  ||  str.startsWith(     "-0X     "))  {  int  hexDigits  =  str.length()  -  2;  //  drop  0x  if  (str.startsWith(     "-     "))  {  //  drop  -  hexDigits--;  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  	projects/Lang7/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.5773502691896258	449	449	1	replace	int  hexDigits  =  str.length()  -  16;	  int    hexDigits    =    str.lastIndexOf('.',    16);    	non-compiled	[CE]  unclosed  character  literal	92	None	replace
171	[BUG]  [BUGGY]  if(StringUtils.isEmpty(str)||  StringUtils.isWhitespace(str))  {  [CE]  unclosed  character  literal  [FE]            AssertionError      [CONTEXT]      public  static  Number  createNumber(String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {  return  null;  }      [BUGGY]  if(StringUtils.isEmpty(str)||  StringUtils.isWhitespace(str))  {  [BUGGY]      throw  new  NumberFormatException(     "A  blank  string  is  not  a  valid  number     ");  }  if  (str.startsWith(     "--     "))  {  return  null;  }  if  (str.startsWith(     "0x     ")  ||  str.startsWith(     "-0x     ")  ||  str.startsWith(     "0X     ")  ||  str.startsWith(     "-0X     "))  {  int  hexDigits  =  str.length()  -  2;  //  drop  0x  if  (str.startsWith(     "-     "))  {  //  drop  -  hexDigits--;  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  	projects/Lang7/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.5773502691896258	449	449	1	replace	if(StringUtils.isEmpty(str)||  StringUtils.isWhitespace(str))  {	  if(StringUtils.isEmpty(str)||    StringUtils.isEmpty(str))    {    	non-compiled	[CE]  unclosed  character  literal	18	None	replace
172	[BUG]  [BUGGY]  if(StringUtils.isNumeric(str)||  StringUtils.isEmpty(str))  {  [CE]  unclosed  character  literal  [FE]              AssertionError      [CONTEXT]      public  static  Number  createNumber(String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {  return  null;  }      [BUGGY]  if(StringUtils.isNumeric(str)||  StringUtils.isEmpty(str))  {  [BUGGY]      throw  new  NumberFormatException(     "A  blank  string  is  not  a  valid  number     ");  }  if  (str.startsWith(     "--     "))  {  return  null;  }  if  (str.startsWith(     "0x     ")  ||  str.startsWith(     "-0x     ")  ||  str.startsWith(     "0X     ")  ||  str.startsWith(     "-0X     "))  {  int  hexDigits  =  str.length()  -  2;  //  drop  0x  if  (str.startsWith(     "-     "))  {  //  drop  -  hexDigits--;  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  	projects/Lang7/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.5773502691896258	449	449	1	replace	if(StringUtils.isNumeric(str)||  StringUtils.isEmpty(str))  {	  if(StringUtils.isEmpty(str)||    StringUtils.isEmpty(str))    {    	non-compiled	[CE]  unclosed  character  literal	18	None	replace
173	[BUG]  [BUGGY]  if(str  ==  null  ||  StringUtils.isBlank(str)&&  StringUtils.isBlank(str))  {  [CE]  unclosed  character  literal  [FE]                  AssertionError      [CONTEXT]      public  static  Number  createNumber(String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {  return  null;  }      [BUGGY]  if(str  ==  null  ||  StringUtils.isBlank(str)&&  StringUtils.isBlank(str))  {  [BUGGY]      throw  new  NumberFormatException(     "A  blank  string  is  not  a  valid  number     ");  }  if  (str.startsWith(     "--     "))  {  return  null;  }  if  (str.startsWith(     "0x     ")  ||  str.startsWith(     "-0x     ")  ||  str.startsWith(     "0X     ")  ||  str.startsWith(     "-0X     "))  {  int  hexDigits  =  str.length()  -  2;  //  drop  0x  if  (str.startsWith(     "-     "))  {  //  drop  -  hexDigits--;  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  	projects/Lang7/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.5773502691896258	449	449	1	replace	if(str  ==  null  ||  StringUtils.isBlank(str)&&  StringUtils.isBlank(str))  {	  if(StringUtils.isBlank(str)&&    StringUtils.isBlank(str))    {    	non-compiled	[CE]  unclosed  character  literal	68	None	replace
174	[BUG]  [BUGGY]  int  decPos  =  str.length()  -  2;  Integer  decPos  =  str.length();  [CE]  unclosed  character  literal  [FE]          NumberFormatException      [CONTEXT]      public  static  Number  createNumber(String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {  return  null;  }      [BUGGY]  int  decPos  =  str.length()  -  2;  Integer  decPos  =  str.length();  [BUGGY]      if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(     "A  blank  string  is  not  a  valid  number     ");  }  if  (str.startsWith(     "--     "))  {  return  null;  }  if  (str.startsWith(     "0x     ")  ||  str.startsWith(     "-0x     ")  ||  str.startsWith(     "0X     ")  ||  str.startsWith(     "-0X     "))  {  int  hexDigits  =  str.length()  -  2;  //  drop  0x  if  (str.startsWith(     "-     "))  {  //  drop  -  hexDigits--;  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  	projects/Lang7/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.5773502691896258	449	449	1	replace	int  decPos  =  str.length()  -  2;  Integer  decPos  =  str.length();	          int    decPos    =    str.length();    Integer    decPos    =    str.length();    	non-compiled	[CE]  unclosed  character  literal	58	None	replace
175	[BUG]  [BUGGY]  int  decPos  =  str.length();  Integer  decPos  =  str.charAt(str.length()  -  1);  [CE]  unclosed  character  literal  [FE]            NumberFormatException      [CONTEXT]      public  static  Number  createNumber(String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {  return  null;  }      [BUGGY]  int  decPos  =  str.length();  Integer  decPos  =  str.charAt(str.length()  -  1);  [BUGGY]      if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(     "A  blank  string  is  not  a  valid  number     ");  }  if  (str.startsWith(     "--     "))  {  return  null;  }  if  (str.startsWith(     "0x     ")  ||  str.startsWith(     "-0x     ")  ||  str.startsWith(     "0X     ")  ||  str.startsWith(     "-0X     "))  {  int  hexDigits  =  str.length()  -  2;  //  drop  0x  if  (str.startsWith(     "-     "))  {  //  drop  -  hexDigits--;  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  	projects/Lang7/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.5773502691896258	449	449	1	replace	int  decPos  =  str.length();  Integer  decPos  =  str.charAt(str.length()  -  1);	          int    decPos    =    str.length();    Integer    decPos    =    str.length();    	non-compiled	[CE]  unclosed  character  literal	58	None	replace
176	[BUG]  [BUGGY]  if(!StringUtils.isBlank(str)||!StringUtils.isEmpty(short))  {  [CE]  '.class'  expected  [FE]                  AssertionError      [CONTEXT]      public  static  Number  createNumber(String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {  return  null;  }      [BUGGY]  if(!StringUtils.isBlank(str)||!StringUtils.isEmpty(short))  {  [BUGGY]      throw  new  NumberFormatException(     "A  blank  string  is  not  a  valid  number     ");  }  if  (str.startsWith(     "--     "))  {  return  null;  }  if  (str.startsWith(     "0x     ")  ||  str.startsWith(     "-0x     ")  ||  str.startsWith(     "0X     ")  ||  str.startsWith(     "-0X     "))  {  int  hexDigits  =  str.length()  -  2;  //  drop  0x  if  (str.startsWith(     "-     "))  {  //  drop  -  hexDigits--;  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  	projects/Lang7/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.5773502691896258	449	449	1	replace	if(!StringUtils.isBlank(str)||!StringUtils.isEmpty(short))  {	  if(!StringUtils.isBlank(str)||!StringUtils.isEmpty(str))    {    	non-compiled	[CE]  '.class'  expected	34	None	replace
177	[BUG]  [BUGGY]  int  decPos  =  str.indexOf('  ')+  1;  int  lecPos  =  str.indexOf('  ');  [CE]  unclosed  character  literal  [FE]        NumberFormatException      [CONTEXT]      public  static  Number  createNumber(String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {  return  null;  }      [BUGGY]  int  decPos  =  str.indexOf('  ')+  1;  int  lecPos  =  str.indexOf('  ');  [BUGGY]      if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(     "A  blank  string  is  not  a  valid  number     ");  }  if  (str.startsWith(     "--     "))  {  return  null;  }  if  (str.startsWith(     "0x     ")  ||  str.startsWith(     "-0x     ")  ||  str.startsWith(     "0X     ")  ||  str.startsWith(     "-0X     "))  {  int  hexDigits  =  str.length()  -  2;  //  drop  0x  if  (str.startsWith(     "-     "))  {  //  drop  -  hexDigits--;  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  	projects/Lang7/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.5773502691896258	449	449	1	replace	int  decPos  =  str.indexOf('  ')+  1;  int  lecPos  =  str.indexOf('  ');	          int    decPos    =    str.indexOf('    ');    int    lecPos    =    str.indexOf('    ');    	non-compiled	[CE]  unclosed  character  literal	62	None	replace
178	[BUG]  [BUGGY]  if(StringUtils.isBlank(str)||  StringUtils.isEmpty(str)||  str.length()  ==  4)  {  [CE]  unclosed  character  literal  [FE]    NumberFormatException    [CONTEXT]      public  static  Number  createNumber(String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {  return  null;  }      [BUGGY]  if(StringUtils.isBlank(str)||  StringUtils.isEmpty(str)||  str.length()  ==  4)  {  [BUGGY]      throw  new  NumberFormatException(     "A  blank  string  is  not  a  valid  number     ");  }  if  (str.startsWith(     "--     "))  {  return  null;  }  if  (str.startsWith(     "0x     ")  ||  str.startsWith(     "-0x     ")  ||  str.startsWith(     "0X     ")  ||  str.startsWith(     "-0X     "))  {  int  hexDigits  =  str.length()  -  2;  //  drop  0x  if  (str.startsWith(     "-     "))  {  //  drop  -  hexDigits--;  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  	projects/Lang7/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.5773502691896258	449	449	1	replace	if(StringUtils.isBlank(str)||  StringUtils.isEmpty(str)||  str.length()  ==  4)  {	  if(StringUtils.isBlank(str)||    StringUtils.isEmpty(str)||    str.length()    ==    0)    {    	non-compiled	[CE]  unclosed  character  literal	22	None	replace
179	[BUG]  [BUGGY]  if(str  ==  null  ||  StringUtils.isBlank(str)||  str.startsWith( "-- "))  {  [CE]  unclosed  character  literal  [FE]                AssertionError      [CONTEXT]      public  static  Number  createNumber(String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {  return  null;  }      [BUGGY]  if(str  ==  null  ||  StringUtils.isBlank(str)||  str.startsWith( "-- "))  {  [BUGGY]      throw  new  NumberFormatException(     "A  blank  string  is  not  a  valid  number     ");  }  if  (str.startsWith(     "--     "))  {  return  null;  }  if  (str.startsWith(     "0x     ")  ||  str.startsWith(     "-0x     ")  ||  str.startsWith(     "0X     ")  ||  str.startsWith(     "-0X     "))  {  int  hexDigits  =  str.length()  -  2;  //  drop  0x  if  (str.startsWith(     "-     "))  {  //  drop  -  hexDigits--;  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  	projects/Lang7/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.5773502691896258	449	449	1	replace	if(str  ==  null  ||  StringUtils.isBlank(str)||  str.startsWith( "-- "))  {	  if(str    ==    null    ||    StringUtils.isBlank(str)||    str.startsWith(   "-   "))    {    	non-compiled	[CE]  unclosed  character  literal	56	None	replace
180	[BUG]  [BUGGY]  if(str  ==  null  ||  StringUtils.isBlank(str)||  str.startsWith( "-+ "))  {  [CE]  unclosed  character  literal  [FE]                  AssertionError      [CONTEXT]      public  static  Number  createNumber(String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {  return  null;  }      [BUGGY]  if(str  ==  null  ||  StringUtils.isBlank(str)||  str.startsWith( "-+ "))  {  [BUGGY]      throw  new  NumberFormatException(     "A  blank  string  is  not  a  valid  number     ");  }  if  (str.startsWith(     "--     "))  {  return  null;  }  if  (str.startsWith(     "0x     ")  ||  str.startsWith(     "-0x     ")  ||  str.startsWith(     "0X     ")  ||  str.startsWith(     "-0X     "))  {  int  hexDigits  =  str.length()  -  2;  //  drop  0x  if  (str.startsWith(     "-     "))  {  //  drop  -  hexDigits--;  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  	projects/Lang7/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.5773502691896258	449	449	1	replace	if(str  ==  null  ||  StringUtils.isBlank(str)||  str.startsWith( "-+ "))  {	  if(str    ==    null    ||    StringUtils.isBlank(str)||    str.startsWith(   "-   "))    {    	non-compiled	[CE]  unclosed  character  literal	56	None	replace
181	[BUG]  [BUGGY]  Number  str  =  getNumber(str,  -1);  [CE]  unclosed  character  literal  [FE]                    AssertionError      [CONTEXT]      public  static  Number  createNumber(String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {  return  null;  }      [BUGGY]  Number  str  =  getNumber(str,  -1);  [BUGGY]      if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(     "A  blank  string  is  not  a  valid  number     ");  }  if  (str.startsWith(     "--     "))  {  return  null;  }  if  (str.startsWith(     "0x     ")  ||  str.startsWith(     "-0x     ")  ||  str.startsWith(     "0X     ")  ||  str.startsWith(     "-0X     "))  {  int  hexDigits  =  str.length()  -  2;  //  drop  0x  if  (str.startsWith(     "-     "))  {  //  drop  -  hexDigits--;  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  	projects/Lang7/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.5773502691896258	449	449	1	replace	Number  str  =  getNumber(str,  -1);	  Number    str    =    getNumber(str,    0);    	non-compiled	[CE]  unclosed  character  literal	41	None	replace
182	[BUG]  [BUGGY]  Integer  str  =  createInteger(StringUtils.stringValue(str.length()));  [CE]  unclosed  character  literal  [FE]                    AssertionError      [CONTEXT]      public  static  Number  createNumber(String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {  return  null;  }      [BUGGY]  Integer  str  =  createInteger(StringUtils.stringValue(str.length()));  [BUGGY]      if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(     "A  blank  string  is  not  a  valid  number     ");  }  if  (str.startsWith(     "--     "))  {  return  null;  }  if  (str.startsWith(     "0x     ")  ||  str.startsWith(     "-0x     ")  ||  str.startsWith(     "0X     ")  ||  str.startsWith(     "-0X     "))  {  int  hexDigits  =  str.length()  -  2;  //  drop  0x  if  (str.startsWith(     "-     "))  {  //  drop  -  hexDigits--;  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  	projects/Lang7/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.5773502691896258	449	449	1	replace	Integer  str  =  createInteger(StringUtils.stringValue(str.length()));	  Integer    str    =    createInteger(str.length()    -    2);    	non-compiled	[CE]  unclosed  character  literal	9	None	replace
183	[BUG]  [BUGGY]  Integer  str  =  createInteger(StringUtils.repeat(str));  [CE]  unclosed  character  literal  [FE]                      AssertionError      [CONTEXT]      public  static  Number  createNumber(String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {  return  null;  }      [BUGGY]  Integer  str  =  createInteger(StringUtils.repeat(str));  [BUGGY]      if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(     "A  blank  string  is  not  a  valid  number     ");  }  if  (str.startsWith(     "--     "))  {  return  null;  }  if  (str.startsWith(     "0x     ")  ||  str.startsWith(     "-0x     ")  ||  str.startsWith(     "0X     ")  ||  str.startsWith(     "-0X     "))  {  int  hexDigits  =  str.length()  -  2;  //  drop  0x  if  (str.startsWith(     "-     "))  {  //  drop  -  hexDigits--;  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  	projects/Lang7/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.5773502691896258	449	449	1	replace	Integer  str  =  createInteger(StringUtils.repeat(str));	  Integer    str    =    createInteger(str.length()    -    2);    	non-compiled	[CE]  unclosed  character  literal	9	None	replace
184	[BUG]  [BUGGY]  if(StringUtils.isBlank(str)||  StringUtils.isBlank(str)||  str.length()  ==  4)  {  [CE]  unclosed  character  literal  [FE]              AssertionError      [CONTEXT]      public  static  Number  createNumber(String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {  return  null;  }      [BUGGY]  if(StringUtils.isBlank(str)||  StringUtils.isBlank(str)||  str.length()  ==  4)  {  [BUGGY]      throw  new  NumberFormatException(     "A  blank  string  is  not  a  valid  number     ");  }  if  (str.startsWith(     "--     "))  {  return  null;  }  if  (str.startsWith(     "0x     ")  ||  str.startsWith(     "-0x     ")  ||  str.startsWith(     "0X     ")  ||  str.startsWith(     "-0X     "))  {  int  hexDigits  =  str.length()  -  2;  //  drop  0x  if  (str.startsWith(     "-     "))  {  //  drop  -  hexDigits--;  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  	projects/Lang7/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.5773502691896258	449	449	1	replace	if(StringUtils.isBlank(str)||  StringUtils.isBlank(str)||  str.length()  ==  4)  {	  if(StringUtils.isBlank(str)||    StringUtils.isBlank(str)||    str.length()    ==    0)    {    	non-compiled	[CE]  unclosed  character  literal	85	None	replace
185	[BUG]  [BUGGY]  if(str  ==  null  ||!StringUtils.isBlank(str)||  StringUtils.isEmpty(str))  {  [CE]  unclosed  character  literal  [FE]              AssertionError      [CONTEXT]      public  static  Number  createNumber(String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {  return  null;  }      [BUGGY]  if(str  ==  null  ||!StringUtils.isBlank(str)||  StringUtils.isEmpty(str))  {  [BUGGY]      throw  new  NumberFormatException(     "A  blank  string  is  not  a  valid  number     ");  }  if  (str.startsWith(     "--     "))  {  return  null;  }  if  (str.startsWith(     "0x     ")  ||  str.startsWith(     "-0x     ")  ||  str.startsWith(     "0X     ")  ||  str.startsWith(     "-0X     "))  {  int  hexDigits  =  str.length()  -  2;  //  drop  0x  if  (str.startsWith(     "-     "))  {  //  drop  -  hexDigits--;  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  	projects/Lang7/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.5773502691896258	449	449	1	replace	if(str  ==  null  ||!StringUtils.isBlank(str)||  StringUtils.isEmpty(str))  {	  if(!StringUtils.isBlank(str)||    StringUtils.isEmpty(str))    {    	non-compiled	[CE]  unclosed  character  literal	64	None	replace
186	[BUG]  [BUGGY]  int  decPos  =  str.indexOf('  ',  DECEMBER_ONE);  [CE]  unclosed  character  literal  [FE]            NumberFormatException      [CONTEXT]      public  static  Number  createNumber(String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {  return  null;  }      [BUGGY]  int  decPos  =  str.indexOf('  ',  DECEMBER_ONE);  [BUGGY]      if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(     "A  blank  string  is  not  a  valid  number     ");  }  if  (str.startsWith(     "--     "))  {  return  null;  }  if  (str.startsWith(     "0x     ")  ||  str.startsWith(     "-0x     ")  ||  str.startsWith(     "0X     ")  ||  str.startsWith(     "-0X     "))  {  int  hexDigits  =  str.length()  -  2;  //  drop  0x  if  (str.startsWith(     "-     "))  {  //  drop  -  hexDigits--;  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  	projects/Lang7/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.5773502691896258	449	449	1	replace	int  decPos  =  str.indexOf('  ',  DECEMBER_ONE);	  int    decPos    =    str.indexOf('    ',    DECEMBER_PREFIX);    	non-compiled	[CE]  unclosed  character  literal	4	None	replace
187	[BUG]  [BUGGY]  int  decPos  =  str.indexOf('  ',  DECEMBER_MINUS_ONE);  [CE]  unclosed  character  literal  [FE]              NumberFormatException      [CONTEXT]      public  static  Number  createNumber(String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {  return  null;  }      [BUGGY]  int  decPos  =  str.indexOf('  ',  DECEMBER_MINUS_ONE);  [BUGGY]      if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(     "A  blank  string  is  not  a  valid  number     ");  }  if  (str.startsWith(     "--     "))  {  return  null;  }  if  (str.startsWith(     "0x     ")  ||  str.startsWith(     "-0x     ")  ||  str.startsWith(     "0X     ")  ||  str.startsWith(     "-0X     "))  {  int  hexDigits  =  str.length()  -  2;  //  drop  0x  if  (str.startsWith(     "-     "))  {  //  drop  -  hexDigits--;  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  	projects/Lang7/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.5773502691896258	449	449	1	replace	int  decPos  =  str.indexOf('  ',  DECEMBER_MINUS_ONE);	  int    decPos    =    str.indexOf('    ',    DECEMBER_PREFIX);    	non-compiled	[CE]  unclosed  character  literal	4	None	replace
188	[BUG]  [BUGGY]  int  decPos  =  str.indexOf('  ',  DECECEMBER_ZERO);  [CE]  unclosed  character  literal  [FE]                NumberFormatException      [CONTEXT]      public  static  Number  createNumber(String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {  return  null;  }      [BUGGY]  int  decPos  =  str.indexOf('  ',  DECECEMBER_ZERO);  [BUGGY]      if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(     "A  blank  string  is  not  a  valid  number     ");  }  if  (str.startsWith(     "--     "))  {  return  null;  }  if  (str.startsWith(     "0x     ")  ||  str.startsWith(     "-0x     ")  ||  str.startsWith(     "0X     ")  ||  str.startsWith(     "-0X     "))  {  int  hexDigits  =  str.length()  -  2;  //  drop  0x  if  (str.startsWith(     "-     "))  {  //  drop  -  hexDigits--;  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  	projects/Lang7/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.5773502691896258	449	449	1	replace	int  decPos  =  str.indexOf('  ',  DECECEMBER_ZERO);	  int    decPos    =    str.indexOf('    ',    DECEMBER_PREFIX);    	non-compiled	[CE]  unclosed  character  literal	4	None	replace
189	[BUG]  [BUGGY]  int  decPos  =  str.indexOf('  ')+  3;  [CE]  unclosed  character  literal  [FE]          NumberFormatException      [CONTEXT]      public  static  Number  createNumber(String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {  return  null;  }      [BUGGY]  int  decPos  =  str.indexOf('  ')+  3;  [BUGGY]      if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(     "A  blank  string  is  not  a  valid  number     ");  }  if  (str.startsWith(     "--     "))  {  return  null;  }  if  (str.startsWith(     "0x     ")  ||  str.startsWith(     "-0x     ")  ||  str.startsWith(     "0X     ")  ||  str.startsWith(     "-0X     "))  {  int  hexDigits  =  str.length()  -  2;  //  drop  0x  if  (str.startsWith(     "-     "))  {  //  drop  -  hexDigits--;  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  	projects/Lang7/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.5773502691896258	449	449	1	replace	int  decPos  =  str.indexOf('  ')+  3;	  int    decPos    =    str.indexOf('    ')+    1;    	non-compiled	[CE]  unclosed  character  literal	74	None	replace
190	[BUG]  [BUGGY]  Number  str  =  createNumber(str.substring(1),  str.length());  [CE]  unclosed  character  literal  [FE]                    AssertionError      [CONTEXT]      public  static  Number  createNumber(String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {  return  null;  }      [BUGGY]  Number  str  =  createNumber(str.substring(1),  str.length());  [BUGGY]      if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(     "A  blank  string  is  not  a  valid  number     ");  }  if  (str.startsWith(     "--     "))  {  return  null;  }  if  (str.startsWith(     "0x     ")  ||  str.startsWith(     "-0x     ")  ||  str.startsWith(     "0X     ")  ||  str.startsWith(     "-0X     "))  {  int  hexDigits  =  str.length()  -  2;  //  drop  0x  if  (str.startsWith(     "-     "))  {  //  drop  -  hexDigits--;  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  	projects/Lang7/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.5773502691896258	449	449	1	replace	Number  str  =  createNumber(str.substring(1),  str.length());	  Number    str    =    createNumber(str.substring(1));    	non-compiled	[CE]  unclosed  character  literal	39	None	replace
191	[BUG]  [BUGGY]  if(str  ==  null  ||!StringUtils.isBlank(str)||  str.length()  ==  0)  {  [CE]  unclosed  character  literal  [FE]              AssertionError      [CONTEXT]      public  static  Number  createNumber(String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {  return  null;  }      [BUGGY]  if(str  ==  null  ||!StringUtils.isBlank(str)||  str.length()  ==  0)  {  [BUGGY]      throw  new  NumberFormatException(     "A  blank  string  is  not  a  valid  number     ");  }  if  (str.startsWith(     "--     "))  {  return  null;  }  if  (str.startsWith(     "0x     ")  ||  str.startsWith(     "-0x     ")  ||  str.startsWith(     "0X     ")  ||  str.startsWith(     "-0X     "))  {  int  hexDigits  =  str.length()  -  2;  //  drop  0x  if  (str.startsWith(     "-     "))  {  //  drop  -  hexDigits--;  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  	projects/Lang7/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.5773502691896258	449	449	1	replace	if(str  ==  null  ||!StringUtils.isBlank(str)||  str.length()  ==  0)  {	  if(!StringUtils.isBlank(str)||    str.length()    ==    0)    {    	non-compiled	[CE]  unclosed  character  literal	79	None	replace
192	[BUG]  [BUGGY]  int  hexDigits  =  str.lastIndexOf('.',  4);  Integer  hexDigits  =  str.lastIndexOf('.');  [CE]  unclosed  character  literal  [FE]          NumberFormatException      [CONTEXT]      public  static  Number  createNumber(String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {  return  null;  }      [BUGGY]  int  hexDigits  =  str.lastIndexOf('.',  4);  Integer  hexDigits  =  str.lastIndexOf('.');  [BUGGY]      if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(     "A  blank  string  is  not  a  valid  number     ");  }  if  (str.startsWith(     "--     "))  {  return  null;  }  if  (str.startsWith(     "0x     ")  ||  str.startsWith(     "-0x     ")  ||  str.startsWith(     "0X     ")  ||  str.startsWith(     "-0X     "))  {  int  hexDigits  =  str.length()  -  2;  //  drop  0x  if  (str.startsWith(     "-     "))  {  //  drop  -  hexDigits--;  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  	projects/Lang7/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.5773502691896258	449	449	1	replace	int  hexDigits  =  str.lastIndexOf('.',  4);  Integer  hexDigits  =  str.lastIndexOf('.');	          int    hexDigits    =    str.lastIndexOf('.');    Integer    hexDigits    =    str.lastIndexOf('.');    	non-compiled	[CE]  unclosed  character  literal	6	None	replace
193	[BUG]  [BUGGY]  int  hexDigits  =  str.length();  Integer  hexDigits  =  str.lastIndexOf('.');  [CE]  unclosed  character  literal  [FE]            NumberFormatException      [CONTEXT]      public  static  Number  createNumber(String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {  return  null;  }      [BUGGY]  int  hexDigits  =  str.length();  Integer  hexDigits  =  str.lastIndexOf('.');  [BUGGY]      if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(     "A  blank  string  is  not  a  valid  number     ");  }  if  (str.startsWith(     "--     "))  {  return  null;  }  if  (str.startsWith(     "0x     ")  ||  str.startsWith(     "-0x     ")  ||  str.startsWith(     "0X     ")  ||  str.startsWith(     "-0X     "))  {  int  hexDigits  =  str.length()  -  2;  //  drop  0x  if  (str.startsWith(     "-     "))  {  //  drop  -  hexDigits--;  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  	projects/Lang7/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.5773502691896258	449	449	1	replace	int  hexDigits  =  str.length();  Integer  hexDigits  =  str.lastIndexOf('.');	          int    hexDigits    =    str.lastIndexOf('.');    Integer    hexDigits    =    str.lastIndexOf('.');    	non-compiled	[CE]  unclosed  character  literal	6	None	replace
194	[BUG]  [BUGGY]  int  hexDigits  =  str.lastIndexOf('.');  Integer  hexDigits  =  str.lastIndexOf('.',  hexDigits);  [CE]  unclosed  character  literal  [FE]              NumberFormatException      [CONTEXT]      public  static  Number  createNumber(String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {  return  null;  }      [BUGGY]  int  hexDigits  =  str.lastIndexOf('.');  Integer  hexDigits  =  str.lastIndexOf('.',  hexDigits);  [BUGGY]      if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(     "A  blank  string  is  not  a  valid  number     ");  }  if  (str.startsWith(     "--     "))  {  return  null;  }  if  (str.startsWith(     "0x     ")  ||  str.startsWith(     "-0x     ")  ||  str.startsWith(     "0X     ")  ||  str.startsWith(     "-0X     "))  {  int  hexDigits  =  str.length()  -  2;  //  drop  0x  if  (str.startsWith(     "-     "))  {  //  drop  -  hexDigits--;  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  	projects/Lang7/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.5773502691896258	449	449	1	replace	int  hexDigits  =  str.lastIndexOf('.');  Integer  hexDigits  =  str.lastIndexOf('.',  hexDigits);	          int    hexDigits    =    str.lastIndexOf('.');    Integer    hexDigits    =    str.lastIndexOf('.');    	non-compiled	[CE]  unclosed  character  literal	6	None	replace
195	[BUG]  [BUGGY]  if(str  ==  null  ||  StringUtils.isBlank(s)||  StringUtils.isEmpty(s))  {  [CE]  unclosed  character  literal  [FE]            AssertionError      [CONTEXT]      public  static  Number  createNumber(String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {  return  null;  }      [BUGGY]  if(str  ==  null  ||  StringUtils.isBlank(s)||  StringUtils.isEmpty(s))  {  [BUGGY]      throw  new  NumberFormatException(     "A  blank  string  is  not  a  valid  number     ");  }  if  (str.startsWith(     "--     "))  {  return  null;  }  if  (str.startsWith(     "0x     ")  ||  str.startsWith(     "-0x     ")  ||  str.startsWith(     "0X     ")  ||  str.startsWith(     "-0X     "))  {  int  hexDigits  =  str.length()  -  2;  //  drop  0x  if  (str.startsWith(     "-     "))  {  //  drop  -  hexDigits--;  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  	projects/Lang7/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.5773502691896258	449	449	1	replace	if(str  ==  null  ||  StringUtils.isBlank(s)||  StringUtils.isEmpty(s))  {	  if(str    ==    null    ||    StringUtils.isBlank(str)||    StringUtils.isEmpty(str))    {    	non-compiled	[CE]  unclosed  character  literal	69	None	replace
196	[BUG]  [BUGGY]  if(str  ==  null  ||  StringUtils.isBlank(str)||  StringUtils.isEmpty(short))  {  [CE]  '.class'  expected  [FE]              AssertionError      [CONTEXT]      public  static  Number  createNumber(String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {  return  null;  }      [BUGGY]  if(str  ==  null  ||  StringUtils.isBlank(str)||  StringUtils.isEmpty(short))  {  [BUGGY]      throw  new  NumberFormatException(     "A  blank  string  is  not  a  valid  number     ");  }  if  (str.startsWith(     "--     "))  {  return  null;  }  if  (str.startsWith(     "0x     ")  ||  str.startsWith(     "-0x     ")  ||  str.startsWith(     "0X     ")  ||  str.startsWith(     "-0X     "))  {  int  hexDigits  =  str.length()  -  2;  //  drop  0x  if  (str.startsWith(     "-     "))  {  //  drop  -  hexDigits--;  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  	projects/Lang7/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.5773502691896258	449	449	1	replace	if(str  ==  null  ||  StringUtils.isBlank(str)||  StringUtils.isEmpty(short))  {	  if(str    ==    null    ||    StringUtils.isBlank(str)||    StringUtils.isEmpty(str))    {    	non-compiled	[CE]  '.class'  expected	69	None	replace
197	[BUG]  [BUGGY]  if(str  ==  null  ||  StringUtils.isBlank(s)||  StringUtils.isBlank(s))  {  [CE]  unclosed  character  literal  [FE]              AssertionError      [CONTEXT]      public  static  Number  createNumber(String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {  return  null;  }      [BUGGY]  if(str  ==  null  ||  StringUtils.isBlank(s)||  StringUtils.isBlank(s))  {  [BUGGY]      throw  new  NumberFormatException(     "A  blank  string  is  not  a  valid  number     ");  }  if  (str.startsWith(     "--     "))  {  return  null;  }  if  (str.startsWith(     "0x     ")  ||  str.startsWith(     "-0x     ")  ||  str.startsWith(     "0X     ")  ||  str.startsWith(     "-0X     "))  {  int  hexDigits  =  str.length()  -  2;  //  drop  0x  if  (str.startsWith(     "-     "))  {  //  drop  -  hexDigits--;  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  	projects/Lang7/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.5773502691896258	449	449	1	replace	if(str  ==  null  ||  StringUtils.isBlank(s)||  StringUtils.isBlank(s))  {	  if(str    ==    null    ||    StringUtils.isBlank(str)||    StringUtils.isBlank(str))    {    	non-compiled	[CE]  unclosed  character  literal	66	None	replace
198	[BUG]  [BUGGY]  if(str  ==  null  ||  StringUtils.isBlank(str)||  StringUtils.isWhitespace(str))  {  [CE]  unclosed  character  literal  [FE]                AssertionError      [CONTEXT]      public  static  Number  createNumber(String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {  return  null;  }      [BUGGY]  if(str  ==  null  ||  StringUtils.isBlank(str)||  StringUtils.isWhitespace(str))  {  [BUGGY]      throw  new  NumberFormatException(     "A  blank  string  is  not  a  valid  number     ");  }  if  (str.startsWith(     "--     "))  {  return  null;  }  if  (str.startsWith(     "0x     ")  ||  str.startsWith(     "-0x     ")  ||  str.startsWith(     "0X     ")  ||  str.startsWith(     "-0X     "))  {  int  hexDigits  =  str.length()  -  2;  //  drop  0x  if  (str.startsWith(     "-     "))  {  //  drop  -  hexDigits--;  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  	projects/Lang7/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.5773502691896258	449	449	1	replace	if(str  ==  null  ||  StringUtils.isBlank(str)||  StringUtils.isWhitespace(str))  {	  if(str    ==    null    ||    StringUtils.isBlank(str)||    StringUtils.isBlank(str))    {    	non-compiled	[CE]  unclosed  character  literal	66	None	replace
199	[BUG]  [BUGGY]  int  decPos  =  str.length()  -  2;  int  descPos  =  str.length();  [CE]  unclosed  character  literal  [FE]            NumberFormatException      [CONTEXT]      public  static  Number  createNumber(String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {  return  null;  }      [BUGGY]  int  decPos  =  str.length()  -  2;  int  descPos  =  str.length();  [BUGGY]      if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(     "A  blank  string  is  not  a  valid  number     ");  }  if  (str.startsWith(     "--     "))  {  return  null;  }  if  (str.startsWith(     "0x     ")  ||  str.startsWith(     "-0x     ")  ||  str.startsWith(     "0X     ")  ||  str.startsWith(     "-0X     "))  {  int  hexDigits  =  str.length()  -  2;  //  drop  0x  if  (str.startsWith(     "-     "))  {  //  drop  -  hexDigits--;  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  	projects/Lang7/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.5773502691896258	449	449	1	replace	int  decPos  =  str.length()  -  2;  int  descPos  =  str.length();	          int    decPos    =    str.length();    int    descPos    =    str.length();    	non-compiled	[CE]  unclosed  character  literal	59	None	replace
200	[BUG]  [BUGGY]  int  decPos  =  str.length();  int  descPos  =  str.length()  -  2;  [CE]  unclosed  character  literal  [FE]              NumberFormatException      [CONTEXT]      public  static  Number  createNumber(String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {  return  null;  }      [BUGGY]  int  decPos  =  str.length();  int  descPos  =  str.length()  -  2;  [BUGGY]      if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(     "A  blank  string  is  not  a  valid  number     ");  }  if  (str.startsWith(     "--     "))  {  return  null;  }  if  (str.startsWith(     "0x     ")  ||  str.startsWith(     "-0x     ")  ||  str.startsWith(     "0X     ")  ||  str.startsWith(     "-0X     "))  {  int  hexDigits  =  str.length()  -  2;  //  drop  0x  if  (str.startsWith(     "-     "))  {  //  drop  -  hexDigits--;  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  	projects/Lang7/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.5773502691896258	449	449	1	replace	int  decPos  =  str.length();  int  descPos  =  str.length()  -  2;	          int    decPos    =    str.length();    int    descPos    =    str.length();    	non-compiled	[CE]  unclosed  character  literal	59	None	replace
201	[BUG]  [BUGGY]  int  decPos  =  str.indexOf('  ',  DEC_ZERO);  [CE]  unclosed  character  literal  [FE]          NumberFormatException      [CONTEXT]      public  static  Number  createNumber(String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {  return  null;  }      [BUGGY]  int  decPos  =  str.indexOf('  ',  DEC_ZERO);  [BUGGY]      if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(     "A  blank  string  is  not  a  valid  number     ");  }  if  (str.startsWith(     "--     "))  {  return  null;  }  if  (str.startsWith(     "0x     ")  ||  str.startsWith(     "-0x     ")  ||  str.startsWith(     "0X     ")  ||  str.startsWith(     "-0X     "))  {  int  hexDigits  =  str.length()  -  2;  //  drop  0x  if  (str.startsWith(     "-     "))  {  //  drop  -  hexDigits--;  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  	projects/Lang7/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.5773502691896258	449	449	1	replace	int  decPos  =  str.indexOf('  ',  DEC_ZERO);	  int    decPos    =    str.indexOf('    ',    exp);    	non-compiled	[CE]  unclosed  character  literal	3	None	replace
202	[BUG]  [BUGGY]  int  decPos  =  str.indexOf('  ',  DEC_MINUS_ONE);  [CE]  unclosed  character  literal  [FE]            NumberFormatException      [CONTEXT]      public  static  Number  createNumber(String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {  return  null;  }      [BUGGY]  int  decPos  =  str.indexOf('  ',  DEC_MINUS_ONE);  [BUGGY]      if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(     "A  blank  string  is  not  a  valid  number     ");  }  if  (str.startsWith(     "--     "))  {  return  null;  }  if  (str.startsWith(     "0x     ")  ||  str.startsWith(     "-0x     ")  ||  str.startsWith(     "0X     ")  ||  str.startsWith(     "-0X     "))  {  int  hexDigits  =  str.length()  -  2;  //  drop  0x  if  (str.startsWith(     "-     "))  {  //  drop  -  hexDigits--;  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  	projects/Lang7/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.5773502691896258	449	449	1	replace	int  decPos  =  str.indexOf('  ',  DEC_MINUS_ONE);	  int    decPos    =    str.indexOf('    ',    exp);    	non-compiled	[CE]  unclosed  character  literal	3	None	replace
203	[BUG]  [BUGGY]  int  decPos  =  str.indexOf('  ',  SHORT_ZERO);  [CE]  unclosed  character  literal  [FE]              NumberFormatException      [CONTEXT]      public  static  Number  createNumber(String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {  return  null;  }      [BUGGY]  int  decPos  =  str.indexOf('  ',  SHORT_ZERO);  [BUGGY]      if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(     "A  blank  string  is  not  a  valid  number     ");  }  if  (str.startsWith(     "--     "))  {  return  null;  }  if  (str.startsWith(     "0x     ")  ||  str.startsWith(     "-0x     ")  ||  str.startsWith(     "0X     ")  ||  str.startsWith(     "-0X     "))  {  int  hexDigits  =  str.length()  -  2;  //  drop  0x  if  (str.startsWith(     "-     "))  {  //  drop  -  hexDigits--;  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  	projects/Lang7/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.5773502691896258	449	449	1	replace	int  decPos  =  str.indexOf('  ',  SHORT_ZERO);	  int    decPos    =    str.indexOf('    ',    exp);    	non-compiled	[CE]  unclosed  character  literal	3	None	replace
204	[BUG]  [BUGGY]  Number  str  =  createNumber(str,  hexDigits,  0);  [CE]  unclosed  character  literal  [FE]              AssertionError      [CONTEXT]      public  static  Number  createNumber(String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {  return  null;  }      [BUGGY]  Number  str  =  createNumber(str,  hexDigits,  0);  [BUGGY]      if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(     "A  blank  string  is  not  a  valid  number     ");  }  if  (str.startsWith(     "--     "))  {  return  null;  }  if  (str.startsWith(     "0x     ")  ||  str.startsWith(     "-0x     ")  ||  str.startsWith(     "0X     ")  ||  str.startsWith(     "-0X     "))  {  int  hexDigits  =  str.length()  -  2;  //  drop  0x  if  (str.startsWith(     "-     "))  {  //  drop  -  hexDigits--;  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  	projects/Lang7/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.5773502691896258	449	449	1	replace	Number  str  =  createNumber(str,  hexDigits,  0);	  Number    str    =    createNumber(str,    hexDigits);    	non-compiled	[CE]  unclosed  character  literal	36	None	replace
205	[BUG]  [BUGGY]  Number  str  =  createNumber(str,  hexDigits,  1);  [CE]  unclosed  character  literal  [FE]                AssertionError      [CONTEXT]      public  static  Number  createNumber(String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {  return  null;  }      [BUGGY]  Number  str  =  createNumber(str,  hexDigits,  1);  [BUGGY]      if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(     "A  blank  string  is  not  a  valid  number     ");  }  if  (str.startsWith(     "--     "))  {  return  null;  }  if  (str.startsWith(     "0x     ")  ||  str.startsWith(     "-0x     ")  ||  str.startsWith(     "0X     ")  ||  str.startsWith(     "-0X     "))  {  int  hexDigits  =  str.length()  -  2;  //  drop  0x  if  (str.startsWith(     "-     "))  {  //  drop  -  hexDigits--;  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  	projects/Lang7/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.5773502691896258	449	449	1	replace	Number  str  =  createNumber(str,  hexDigits,  1);	  Number    str    =    createNumber(str,    hexDigits);    	non-compiled	[CE]  unclosed  character  literal	36	None	replace
206	[BUG]  [BUGGY]  Number  str  =  createNumber(str,  1);  [CE]  unclosed  character  literal  [FE]                  AssertionError      [CONTEXT]      public  static  Number  createNumber(String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {  return  null;  }      [BUGGY]  Number  str  =  createNumber(str,  1);  [BUGGY]      if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(     "A  blank  string  is  not  a  valid  number     ");  }  if  (str.startsWith(     "--     "))  {  return  null;  }  if  (str.startsWith(     "0x     ")  ||  str.startsWith(     "-0x     ")  ||  str.startsWith(     "0X     ")  ||  str.startsWith(     "-0X     "))  {  int  hexDigits  =  str.length()  -  2;  //  drop  0x  if  (str.startsWith(     "-     "))  {  //  drop  -  hexDigits--;  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  	projects/Lang7/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.5773502691896258	449	449	1	replace	Number  str  =  createNumber(str,  1);	  Number    str    =    createNumber(str,    hexDigits);    	non-compiled	[CE]  unclosed  character  literal	36	None	replace
207	[BUG]  [BUGGY]  if(StringUtils.isBlank(str)||  StringUtils.isWhitespace(str)||  Character.isDigit(str))  {  [CE]  unclosed  character  literal  [FE]                AssertionError      [CONTEXT]      public  static  Number  createNumber(String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {  return  null;  }      [BUGGY]  if(StringUtils.isBlank(str)||  StringUtils.isWhitespace(str)||  Character.isDigit(str))  {  [BUGGY]      throw  new  NumberFormatException(     "A  blank  string  is  not  a  valid  number     ");  }  if  (str.startsWith(     "--     "))  {  return  null;  }  if  (str.startsWith(     "0x     ")  ||  str.startsWith(     "-0x     ")  ||  str.startsWith(     "0X     ")  ||  str.startsWith(     "-0X     "))  {  int  hexDigits  =  str.length()  -  2;  //  drop  0x  if  (str.startsWith(     "-     "))  {  //  drop  -  hexDigits--;  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  	projects/Lang7/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.5773502691896258	449	449	1	replace	if(StringUtils.isBlank(str)||  StringUtils.isWhitespace(str)||  Character.isDigit(str))  {	  if(StringUtils.isBlank(str)||    StringUtils.isWhitespace(str))    {    	non-compiled	[CE]  unclosed  character  literal	67	None	replace
208	[BUG]  [BUGGY]  if(StringUtils.isBlank(str)||  StringUtils.isWhitespace(str)||  str.length()  ==  0)  {  [CE]  unclosed  character  literal  [FE]                  AssertionError      [CONTEXT]      public  static  Number  createNumber(String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {  return  null;  }      [BUGGY]  if(StringUtils.isBlank(str)||  StringUtils.isWhitespace(str)||  str.length()  ==  0)  {  [BUGGY]      throw  new  NumberFormatException(     "A  blank  string  is  not  a  valid  number     ");  }  if  (str.startsWith(     "--     "))  {  return  null;  }  if  (str.startsWith(     "0x     ")  ||  str.startsWith(     "-0x     ")  ||  str.startsWith(     "0X     ")  ||  str.startsWith(     "-0X     "))  {  int  hexDigits  =  str.length()  -  2;  //  drop  0x  if  (str.startsWith(     "-     "))  {  //  drop  -  hexDigits--;  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  	projects/Lang7/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.5773502691896258	449	449	1	replace	if(StringUtils.isBlank(str)||  StringUtils.isWhitespace(str)||  str.length()  ==  0)  {	  if(StringUtils.isBlank(str)||    StringUtils.isWhitespace(str))    {    	non-compiled	[CE]  unclosed  character  literal	67	None	replace
209	[BUG]  [BUGGY]  if(StringUtils.isEmpty(str)||  StringUtils.isBlank(str)||  Character.isDigit(str))  {  [CE]  unclosed  character  literal  [FE]    NumberFormatException    [CONTEXT]      public  static  Number  createNumber(String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {  return  null;  }      [BUGGY]  if(StringUtils.isEmpty(str)||  StringUtils.isBlank(str)||  Character.isDigit(str))  {  [BUGGY]      throw  new  NumberFormatException(     "A  blank  string  is  not  a  valid  number     ");  }  if  (str.startsWith(     "--     "))  {  return  null;  }  if  (str.startsWith(     "0x     ")  ||  str.startsWith(     "-0x     ")  ||  str.startsWith(     "0X     ")  ||  str.startsWith(     "-0X     "))  {  int  hexDigits  =  str.length()  -  2;  //  drop  0x  if  (str.startsWith(     "-     "))  {  //  drop  -  hexDigits--;  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  	projects/Lang7/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.5773502691896258	449	449	1	replace	if(StringUtils.isEmpty(str)||  StringUtils.isBlank(str)||  Character.isDigit(str))  {	  if(StringUtils.isEmpty(str)||    StringUtils.isBlank(str))    {    	non-compiled	[CE]  unclosed  character  literal	20	None	replace
210	[BUG]  [BUGGY]  int  decPos  =  str.indexOf('.');  [CE]  unclosed  character  literal  [FE]        NumberFormatException      [CONTEXT]      public  static  Number  createNumber(String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {  return  null;  }      [BUGGY]  int  decPos  =  str.indexOf('.');  [BUGGY]      if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(     "A  blank  string  is  not  a  valid  number     ");  }  if  (str.startsWith(     "--     "))  {  return  null;  }  if  (str.startsWith(     "0x     ")  ||  str.startsWith(     "-0x     ")  ||  str.startsWith(     "0X     ")  ||  str.startsWith(     "-0X     "))  {  int  hexDigits  =  str.length()  -  2;  //  drop  0x  if  (str.startsWith(     "-     "))  {  //  drop  -  hexDigits--;  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  	projects/Lang7/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.5773502691896258	449	449	1	replace	int  decPos  =  str.indexOf('.');	  int    decPos    =    str.lastIndexOf('.');    	non-compiled	[CE]  unclosed  character  literal	80	None	replace
211	[BUG]  [BUGGY]  if(str  ==  null  ||!StringUtils.isBlank(str)||  StringUtils.isBlank(str))  {  [CE]  unclosed  character  literal  [FE]    NumberFormatException    [CONTEXT]      public  static  Number  createNumber(String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {  return  null;  }      [BUGGY]  if(str  ==  null  ||!StringUtils.isBlank(str)||  StringUtils.isBlank(str))  {  [BUGGY]      throw  new  NumberFormatException(     "A  blank  string  is  not  a  valid  number     ");  }  if  (str.startsWith(     "--     "))  {  return  null;  }  if  (str.startsWith(     "0x     ")  ||  str.startsWith(     "-0x     ")  ||  str.startsWith(     "0X     ")  ||  str.startsWith(     "-0X     "))  {  int  hexDigits  =  str.length()  -  2;  //  drop  0x  if  (str.startsWith(     "-     "))  {  //  drop  -  hexDigits--;  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  	projects/Lang7/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.5773502691896258	449	449	1	replace	if(str  ==  null  ||!StringUtils.isBlank(str)||  StringUtils.isBlank(str))  {	  if(!StringUtils.isBlank(str)||    StringUtils.isBlank(str))    {    	non-compiled	[CE]  unclosed  character  literal	24	None	replace
212	[BUG]  [BUGGY]  int  decPos  =  str.indexOf('  ')+  1;  Integer  decPos  =  str.indexOf('  ');  [CE]  unclosed  character  literal  [FE]          NumberFormatException      [CONTEXT]      public  static  Number  createNumber(String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {  return  null;  }      [BUGGY]  int  decPos  =  str.indexOf('  ')+  1;  Integer  decPos  =  str.indexOf('  ');  [BUGGY]      if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(     "A  blank  string  is  not  a  valid  number     ");  }  if  (str.startsWith(     "--     "))  {  return  null;  }  if  (str.startsWith(     "0x     ")  ||  str.startsWith(     "-0x     ")  ||  str.startsWith(     "0X     ")  ||  str.startsWith(     "-0X     "))  {  int  hexDigits  =  str.length()  -  2;  //  drop  0x  if  (str.startsWith(     "-     "))  {  //  drop  -  hexDigits--;  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  	projects/Lang7/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.5773502691896258	449	449	1	replace	int  decPos  =  str.indexOf('  ')+  1;  Integer  decPos  =  str.indexOf('  ');	          int    decPos    =    str.indexOf('    ');    Integer    decPos    =    str.indexOf('    ');    	non-compiled	[CE]  unclosed  character  literal	48	None	replace
213	[BUG]  [BUGGY]  int  decPos  =  str.length();  char  decPos  =  str.charAt(str.length()  -  1);  [CE]  unclosed  character  literal  [FE]        NumberFormatException      [CONTEXT]      public  static  Number  createNumber(String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {  return  null;  }      [BUGGY]  int  decPos  =  str.length();  char  decPos  =  str.charAt(str.length()  -  1);  [BUGGY]      if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(     "A  blank  string  is  not  a  valid  number     ");  }  if  (str.startsWith(     "--     "))  {  return  null;  }  if  (str.startsWith(     "0x     ")  ||  str.startsWith(     "-0x     ")  ||  str.startsWith(     "0X     ")  ||  str.startsWith(     "-0X     "))  {  int  hexDigits  =  str.length()  -  2;  //  drop  0x  if  (str.startsWith(     "-     "))  {  //  drop  -  hexDigits--;  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  	projects/Lang7/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.5773502691896258	449	449	1	replace	int  decPos  =  str.length();  char  decPos  =  str.charAt(str.length()  -  1);	          int    decPos    =    str.length();    char    decPos    =    str.length();    	non-compiled	[CE]  unclosed  character  literal	81	None	replace
214	[BUG]  [BUGGY]  int  decPos  =  str.length();  char  decPos  =  str.charAt(str.length()  -  2);  [CE]  unclosed  character  literal  [FE]          NumberFormatException      [CONTEXT]      public  static  Number  createNumber(String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {  return  null;  }      [BUGGY]  int  decPos  =  str.length();  char  decPos  =  str.charAt(str.length()  -  2);  [BUGGY]      if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(     "A  blank  string  is  not  a  valid  number     ");  }  if  (str.startsWith(     "--     "))  {  return  null;  }  if  (str.startsWith(     "0x     ")  ||  str.startsWith(     "-0x     ")  ||  str.startsWith(     "0X     ")  ||  str.startsWith(     "-0X     "))  {  int  hexDigits  =  str.length()  -  2;  //  drop  0x  if  (str.startsWith(     "-     "))  {  //  drop  -  hexDigits--;  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  	projects/Lang7/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.5773502691896258	449	449	1	replace	int  decPos  =  str.length();  char  decPos  =  str.charAt(str.length()  -  2);	          int    decPos    =    str.length();    char    decPos    =    str.length();    	non-compiled	[CE]  unclosed  character  literal	81	None	replace
215	[BUG]  [BUGGY]  int  decPos  =  str.indexOf('  ');  int  decPos  =  str.indexOf('  ',  decPos);  [CE]  unclosed  character  literal  [FE]        NumberFormatException      [CONTEXT]      public  static  Number  createNumber(String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {  return  null;  }      [BUGGY]  int  decPos  =  str.indexOf('  ');  int  decPos  =  str.indexOf('  ',  decPos);  [BUGGY]      if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(     "A  blank  string  is  not  a  valid  number     ");  }  if  (str.startsWith(     "--     "))  {  return  null;  }  if  (str.startsWith(     "0x     ")  ||  str.startsWith(     "-0x     ")  ||  str.startsWith(     "0X     ")  ||  str.startsWith(     "-0X     "))  {  int  hexDigits  =  str.length()  -  2;  //  drop  0x  if  (str.startsWith(     "-     "))  {  //  drop  -  hexDigits--;  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  	projects/Lang7/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.5773502691896258	449	449	1	replace	int  decPos  =  str.indexOf('  ');  int  decPos  =  str.indexOf('  ',  decPos);	          int    decPos    =    str.indexOf('    ');    int    decPos    =    str.indexOf('    ');    	non-compiled	[CE]  unclosed  character  literal	47	None	replace
216	[BUG]  [BUGGY]  int  decPos  =  str.indexOf('  ',  DEC_PREFIX);  int  decPos  =  str.indexOf('  ');  [CE]  unclosed  character  literal  [FE]          NumberFormatException      [CONTEXT]      public  static  Number  createNumber(String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {  return  null;  }      [BUGGY]  int  decPos  =  str.indexOf('  ',  DEC_PREFIX);  int  decPos  =  str.indexOf('  ');  [BUGGY]      if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(     "A  blank  string  is  not  a  valid  number     ");  }  if  (str.startsWith(     "--     "))  {  return  null;  }  if  (str.startsWith(     "0x     ")  ||  str.startsWith(     "-0x     ")  ||  str.startsWith(     "0X     ")  ||  str.startsWith(     "-0X     "))  {  int  hexDigits  =  str.length()  -  2;  //  drop  0x  if  (str.startsWith(     "-     "))  {  //  drop  -  hexDigits--;  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  	projects/Lang7/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.5773502691896258	449	449	1	replace	int  decPos  =  str.indexOf('  ',  DEC_PREFIX);  int  decPos  =  str.indexOf('  ');	          int    decPos    =    str.indexOf('    ');    int    decPos    =    str.indexOf('    ');    	non-compiled	[CE]  unclosed  character  literal	47	None	replace
217	[BUG]  [BUGGY]  int  decPos  =  str.indexOf('  ',  len);  int  decPos  =  str.indexOf('  ');  [CE]  unclosed  character  literal  [FE]            NumberFormatException      [CONTEXT]      public  static  Number  createNumber(String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {  return  null;  }      [BUGGY]  int  decPos  =  str.indexOf('  ',  len);  int  decPos  =  str.indexOf('  ');  [BUGGY]      if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(     "A  blank  string  is  not  a  valid  number     ");  }  if  (str.startsWith(     "--     "))  {  return  null;  }  if  (str.startsWith(     "0x     ")  ||  str.startsWith(     "-0x     ")  ||  str.startsWith(     "0X     ")  ||  str.startsWith(     "-0X     "))  {  int  hexDigits  =  str.length()  -  2;  //  drop  0x  if  (str.startsWith(     "-     "))  {  //  drop  -  hexDigits--;  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  	projects/Lang7/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.5773502691896258	449	449	1	replace	int  decPos  =  str.indexOf('  ',  len);  int  decPos  =  str.indexOf('  ');	          int    decPos    =    str.indexOf('    ');    int    decPos    =    str.indexOf('    ');    	non-compiled	[CE]  unclosed  character  literal	47	None	replace
218	[BUG]  [BUGGY]  int  decPos  =  str.indexOf('  ')+  1;  int  decPos  =  str.indexOf('  ').indexOf('  ');  [CE]  unclosed  character  literal  [FE]        NumberFormatException      [CONTEXT]      public  static  Number  createNumber(String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {  return  null;  }      [BUGGY]  int  decPos  =  str.indexOf('  ')+  1;  int  decPos  =  str.indexOf('  ').indexOf('  ');  [BUGGY]      if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(     "A  blank  string  is  not  a  valid  number     ");  }  if  (str.startsWith(     "--     "))  {  return  null;  }  if  (str.startsWith(     "0x     ")  ||  str.startsWith(     "-0x     ")  ||  str.startsWith(     "0X     ")  ||  str.startsWith(     "-0X     "))  {  int  hexDigits  =  str.length()  -  2;  //  drop  0x  if  (str.startsWith(     "-     "))  {  //  drop  -  hexDigits--;  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  	projects/Lang7/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.5773502691896258	449	449	1	replace	int  decPos  =  str.indexOf('  ')+  1;  int  decPos  =  str.indexOf('  ').indexOf('  ');	          int    decPos    =    str.indexOf('    ');    int    decPos    =    str.indexOf('    ').indexOf('    ');    	non-compiled	[CE]  unclosed  character  literal	91	None	replace
219	[BUG]  [BUGGY]  int  decPos  =  str.indexOf('  ');  int  decPos  =  str.indexOf('  ').indexOf('  ',  expPos);  [CE]  unclosed  character  literal  [FE]          NumberFormatException      [CONTEXT]      public  static  Number  createNumber(String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {  return  null;  }      [BUGGY]  int  decPos  =  str.indexOf('  ');  int  decPos  =  str.indexOf('  ').indexOf('  ',  expPos);  [BUGGY]      if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(     "A  blank  string  is  not  a  valid  number     ");  }  if  (str.startsWith(     "--     "))  {  return  null;  }  if  (str.startsWith(     "0x     ")  ||  str.startsWith(     "-0x     ")  ||  str.startsWith(     "0X     ")  ||  str.startsWith(     "-0X     "))  {  int  hexDigits  =  str.length()  -  2;  //  drop  0x  if  (str.startsWith(     "-     "))  {  //  drop  -  hexDigits--;  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  	projects/Lang7/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.5773502691896258	449	449	1	replace	int  decPos  =  str.indexOf('  ');  int  decPos  =  str.indexOf('  ').indexOf('  ',  expPos);	          int    decPos    =    str.indexOf('    ');    int    decPos    =    str.indexOf('    ').indexOf('    ');    	non-compiled	[CE]  unclosed  character  literal	91	None	replace
220	[BUG]  [BUGGY]  int  decPos  =  str.indexOf('  ');  int  decPos  =  str.indexOf('  ').indexOf('  ')+  1;  [CE]  unclosed  character  literal  [FE]            NumberFormatException      [CONTEXT]      public  static  Number  createNumber(String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {  return  null;  }      [BUGGY]  int  decPos  =  str.indexOf('  ');  int  decPos  =  str.indexOf('  ').indexOf('  ')+  1;  [BUGGY]      if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(     "A  blank  string  is  not  a  valid  number     ");  }  if  (str.startsWith(     "--     "))  {  return  null;  }  if  (str.startsWith(     "0x     ")  ||  str.startsWith(     "-0x     ")  ||  str.startsWith(     "0X     ")  ||  str.startsWith(     "-0X     "))  {  int  hexDigits  =  str.length()  -  2;  //  drop  0x  if  (str.startsWith(     "-     "))  {  //  drop  -  hexDigits--;  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  	projects/Lang7/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.5773502691896258	449	449	1	replace	int  decPos  =  str.indexOf('  ');  int  decPos  =  str.indexOf('  ').indexOf('  ')+  1;	          int    decPos    =    str.indexOf('    ');    int    decPos    =    str.indexOf('    ').indexOf('    ');    	non-compiled	[CE]  unclosed  character  literal	91	None	replace
221	[BUG]  [BUGGY]  int  decPos  =  str.indexOf('  ',  len);  int  descPos  =  str.indexOf('  ');  [CE]  unclosed  character  literal  [FE]            NumberFormatException      [CONTEXT]      public  static  Number  createNumber(String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {  return  null;  }      [BUGGY]  int  decPos  =  str.indexOf('  ',  len);  int  descPos  =  str.indexOf('  ');  [BUGGY]      if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(     "A  blank  string  is  not  a  valid  number     ");  }  if  (str.startsWith(     "--     "))  {  return  null;  }  if  (str.startsWith(     "0x     ")  ||  str.startsWith(     "-0x     ")  ||  str.startsWith(     "0X     ")  ||  str.startsWith(     "-0X     "))  {  int  hexDigits  =  str.length()  -  2;  //  drop  0x  if  (str.startsWith(     "-     "))  {  //  drop  -  hexDigits--;  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  	projects/Lang7/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.5773502691896258	449	449	1	replace	int  decPos  =  str.indexOf('  ',  len);  int  descPos  =  str.indexOf('  ');	          int    decPos    =    str.indexOf('    ');    int    descPos    =    str.indexOf('    ');    	non-compiled	[CE]  unclosed  character  literal	49	None	replace
222	[BUG]  [BUGGY]  int  decPos  =  str.indexOf('  ',  DEC_PREFIX);  int  descPos  =  str.indexOf('  ');  [CE]  unclosed  character  literal  [FE]              NumberFormatException      [CONTEXT]      public  static  Number  createNumber(String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {  return  null;  }      [BUGGY]  int  decPos  =  str.indexOf('  ',  DEC_PREFIX);  int  descPos  =  str.indexOf('  ');  [BUGGY]      if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(     "A  blank  string  is  not  a  valid  number     ");  }  if  (str.startsWith(     "--     "))  {  return  null;  }  if  (str.startsWith(     "0x     ")  ||  str.startsWith(     "-0x     ")  ||  str.startsWith(     "0X     ")  ||  str.startsWith(     "-0X     "))  {  int  hexDigits  =  str.length()  -  2;  //  drop  0x  if  (str.startsWith(     "-     "))  {  //  drop  -  hexDigits--;  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  	projects/Lang7/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.5773502691896258	449	449	1	replace	int  decPos  =  str.indexOf('  ',  DEC_PREFIX);  int  descPos  =  str.indexOf('  ');	          int    decPos    =    str.indexOf('    ');    int    descPos    =    str.indexOf('    ');    	non-compiled	[CE]  unclosed  character  literal	49	None	replace
223	[BUG]  [BUGGY]  int  decPos  =  str.indexOf('  ');  int  descPos  =  str.indexOf('  ',  decPos);  [CE]  unclosed  character  literal  [FE]                NumberFormatException      [CONTEXT]      public  static  Number  createNumber(String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {  return  null;  }      [BUGGY]  int  decPos  =  str.indexOf('  ');  int  descPos  =  str.indexOf('  ',  decPos);  [BUGGY]      if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(     "A  blank  string  is  not  a  valid  number     ");  }  if  (str.startsWith(     "--     "))  {  return  null;  }  if  (str.startsWith(     "0x     ")  ||  str.startsWith(     "-0x     ")  ||  str.startsWith(     "0X     ")  ||  str.startsWith(     "-0X     "))  {  int  hexDigits  =  str.length()  -  2;  //  drop  0x  if  (str.startsWith(     "-     "))  {  //  drop  -  hexDigits--;  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  	projects/Lang7/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.5773502691896258	449	449	1	replace	int  decPos  =  str.indexOf('  ');  int  descPos  =  str.indexOf('  ',  decPos);	          int    decPos    =    str.indexOf('    ');    int    descPos    =    str.indexOf('    ');    	non-compiled	[CE]  unclosed  character  literal	49	None	replace
224	[BUG]  [BUGGY]  if(str.length()  ==  0  ||!StringUtils.isBlank(s))  {  [CE]  unclosed  character  literal  [FE]                    AssertionError      [CONTEXT]      public  static  Number  createNumber(String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {  return  null;  }      [BUGGY]  if(str.length()  ==  0  ||!StringUtils.isBlank(s))  {  [BUGGY]      throw  new  NumberFormatException(     "A  blank  string  is  not  a  valid  number     ");  }  if  (str.startsWith(     "--     "))  {  return  null;  }  if  (str.startsWith(     "0x     ")  ||  str.startsWith(     "-0x     ")  ||  str.startsWith(     "0X     ")  ||  str.startsWith(     "-0X     "))  {  int  hexDigits  =  str.length()  -  2;  //  drop  0x  if  (str.startsWith(     "-     "))  {  //  drop  -  hexDigits--;  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  	projects/Lang7/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.5773502691896258	449	449	1	replace	if(str.length()  ==  0  ||!StringUtils.isBlank(s))  {	  if(str.length()    ==    0    ||!StringUtils.isBlank(str))    {    	non-compiled	[CE]  unclosed  character  literal	35	None	replace
225	[BUG]  [BUGGY]  int  hexDigits  =  str.lastIndexOf('.').indexOf('.');  [CE]  unclosed  character  literal  [FE]        NumberFormatException      [CONTEXT]      public  static  Number  createNumber(String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {  return  null;  }      [BUGGY]  int  hexDigits  =  str.lastIndexOf('.').indexOf('.');  [BUGGY]      if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(     "A  blank  string  is  not  a  valid  number     ");  }  if  (str.startsWith(     "--     "))  {  return  null;  }  if  (str.startsWith(     "0x     ")  ||  str.startsWith(     "-0x     ")  ||  str.startsWith(     "0X     ")  ||  str.startsWith(     "-0X     "))  {  int  hexDigits  =  str.length()  -  2;  //  drop  0x  if  (str.startsWith(     "-     "))  {  //  drop  -  hexDigits--;  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  	projects/Lang7/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.5773502691896258	449	449	1	replace	int  hexDigits  =  str.lastIndexOf('.').indexOf('.');	          int    hexDigits    =    str.lastIndexOf('.');    int    hexDigits    =    str.lastIndexOf('.').lastIndexOf('.');    	non-compiled	[CE]  unclosed  character  literal	75	None	replace
226	[BUG]  [BUGGY]  if(str  ==  null  ||  StringUtils.isEmpty(s)||  isEmpty(s))  {  [CE]  unclosed  character  literal  [FE]            AssertionError      [CONTEXT]      public  static  Number  createNumber(String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {  return  null;  }      [BUGGY]  if(str  ==  null  ||  StringUtils.isEmpty(s)||  isEmpty(s))  {  [BUGGY]      throw  new  NumberFormatException(     "A  blank  string  is  not  a  valid  number     ");  }  if  (str.startsWith(     "--     "))  {  return  null;  }  if  (str.startsWith(     "0x     ")  ||  str.startsWith(     "-0x     ")  ||  str.startsWith(     "0X     ")  ||  str.startsWith(     "-0X     "))  {  int  hexDigits  =  str.length()  -  2;  //  drop  0x  if  (str.startsWith(     "-     "))  {  //  drop  -  hexDigits--;  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  	projects/Lang7/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.5773502691896258	449	449	1	replace	if(str  ==  null  ||  StringUtils.isEmpty(s)||  isEmpty(s))  {	  if(str    ==    null    ||    StringUtils.isBlank(str)||    isEmpty(str))    {    	non-compiled	[CE]  unclosed  character  literal	61	None	replace
227	[BUG]  [BUGGY]  Integer  str  =  createBigInteger(0);  [CE]  unclosed  character  literal  [FE]                AssertionError      [CONTEXT]      public  static  Number  createNumber(String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {  return  null;  }      [BUGGY]  Integer  str  =  createBigInteger(0);  [BUGGY]      if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(     "A  blank  string  is  not  a  valid  number     ");  }  if  (str.startsWith(     "--     "))  {  return  null;  }  if  (str.startsWith(     "0x     ")  ||  str.startsWith(     "-0x     ")  ||  str.startsWith(     "0X     ")  ||  str.startsWith(     "-0X     "))  {  int  hexDigits  =  str.length()  -  2;  //  drop  0x  if  (str.startsWith(     "-     "))  {  //  drop  -  hexDigits--;  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  	projects/Lang7/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.5773502691896258	449	449	1	replace	Integer  str  =  createBigInteger(0);	  Integer    str    =    createInteger(0);    	non-compiled	[CE]  unclosed  character  literal	13	None	replace
228	[BUG]  [BUGGY]  char  hexDigits  =  str.length()  +  2;  [CE]  unclosed  character  literal  [FE]                AssertionError      [CONTEXT]      public  static  Number  createNumber(String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {  return  null;  }      [BUGGY]  char  hexDigits  =  str.length()  +  2;  [BUGGY]      if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(     "A  blank  string  is  not  a  valid  number     ");  }  if  (str.startsWith(     "--     "))  {  return  null;  }  if  (str.startsWith(     "0x     ")  ||  str.startsWith(     "-0x     ")  ||  str.startsWith(     "0X     ")  ||  str.startsWith(     "-0X     "))  {  int  hexDigits  =  str.length()  -  2;  //  drop  0x  if  (str.startsWith(     "-     "))  {  //  drop  -  hexDigits--;  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  	projects/Lang7/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.5773502691896258	449	449	1	replace	char  hexDigits  =  str.length()  +  2;	  char    hexDigits    =    str.length();    	non-compiled	[CE]  unclosed  character  literal	52	None	replace
229	[BUG]  [BUGGY]  Integer  hexDigits  =  str.length()  *  2;  [CE]  unclosed  character  literal  [FE]                  AssertionError      [CONTEXT]      public  static  Number  createNumber(String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {  return  null;  }      [BUGGY]  Integer  hexDigits  =  str.length()  *  2;  [BUGGY]      if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(     "A  blank  string  is  not  a  valid  number     ");  }  if  (str.startsWith(     "--     "))  {  return  null;  }  if  (str.startsWith(     "0x     ")  ||  str.startsWith(     "-0x     ")  ||  str.startsWith(     "0X     ")  ||  str.startsWith(     "-0X     "))  {  int  hexDigits  =  str.length()  -  2;  //  drop  0x  if  (str.startsWith(     "-     "))  {  //  drop  -  hexDigits--;  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  	projects/Lang7/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.5773502691896258	449	449	1	replace	Integer  hexDigits  =  str.length()  *  2;	  Integer    hexDigits    =    str.length();    	non-compiled	[CE]  unclosed  character  literal	53	None	replace
230	[BUG]  [BUGGY]  Number  str  =  getNumber(str,  hexDigits,  0);  [CE]  unclosed  character  literal  [FE]                  AssertionError      [CONTEXT]      public  static  Number  createNumber(String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {  return  null;  }      [BUGGY]  Number  str  =  getNumber(str,  hexDigits,  0);  [BUGGY]      if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(     "A  blank  string  is  not  a  valid  number     ");  }  if  (str.startsWith(     "--     "))  {  return  null;  }  if  (str.startsWith(     "0x     ")  ||  str.startsWith(     "-0x     ")  ||  str.startsWith(     "0X     ")  ||  str.startsWith(     "-0X     "))  {  int  hexDigits  =  str.length()  -  2;  //  drop  0x  if  (str.startsWith(     "-     "))  {  //  drop  -  hexDigits--;  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  	projects/Lang7/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.5773502691896258	449	449	1	replace	Number  str  =  getNumber(str,  hexDigits,  0);	  Number    str    =    getNumber(str,    hexDigits);    	non-compiled	[CE]  unclosed  character  literal	40	None	replace
231	[BUG]  [BUGGY]  Number  str  =  getNumber(str,  DEC_ZERO);  [CE]  unclosed  character  literal  [FE]                    AssertionError      [CONTEXT]      public  static  Number  createNumber(String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {  return  null;  }      [BUGGY]  Number  str  =  getNumber(str,  DEC_ZERO);  [BUGGY]      if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(     "A  blank  string  is  not  a  valid  number     ");  }  if  (str.startsWith(     "--     "))  {  return  null;  }  if  (str.startsWith(     "0x     ")  ||  str.startsWith(     "-0x     ")  ||  str.startsWith(     "0X     ")  ||  str.startsWith(     "-0X     "))  {  int  hexDigits  =  str.length()  -  2;  //  drop  0x  if  (str.startsWith(     "-     "))  {  //  drop  -  hexDigits--;  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  	projects/Lang7/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.5773502691896258	449	449	1	replace	Number  str  =  getNumber(str,  DEC_ZERO);	  Number    str    =    getNumber(str,    hexDigits);    	non-compiled	[CE]  unclosed  character  literal	40	None	replace
232	[BUG]  [BUGGY]  Number  str  =  getNumber(str,  hexDigits,  1);  [CE]  unclosed  character  literal  [FE]                      AssertionError      [CONTEXT]      public  static  Number  createNumber(String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {  return  null;  }      [BUGGY]  Number  str  =  getNumber(str,  hexDigits,  1);  [BUGGY]      if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(     "A  blank  string  is  not  a  valid  number     ");  }  if  (str.startsWith(     "--     "))  {  return  null;  }  if  (str.startsWith(     "0x     ")  ||  str.startsWith(     "-0x     ")  ||  str.startsWith(     "0X     ")  ||  str.startsWith(     "-0X     "))  {  int  hexDigits  =  str.length()  -  2;  //  drop  0x  if  (str.startsWith(     "-     "))  {  //  drop  -  hexDigits--;  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  	projects/Lang7/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.5773502691896258	449	449	1	replace	Number  str  =  getNumber(str,  hexDigits,  1);	  Number    str    =    getNumber(str,    hexDigits);    	non-compiled	[CE]  unclosed  character  literal	40	None	replace
233	[BUG]  [BUGGY]  if(!StringUtils.isEmpty(str)||!StringUtils.isBlank(str))  {  [CE]  unclosed  character  literal  [FE]              AssertionError      [CONTEXT]      public  static  Number  createNumber(String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {  return  null;  }      [BUGGY]  if(!StringUtils.isEmpty(str)||!StringUtils.isBlank(str))  {  [BUGGY]      throw  new  NumberFormatException(     "A  blank  string  is  not  a  valid  number     ");  }  if  (str.startsWith(     "--     "))  {  return  null;  }  if  (str.startsWith(     "0x     ")  ||  str.startsWith(     "-0x     ")  ||  str.startsWith(     "0X     ")  ||  str.startsWith(     "-0X     "))  {  int  hexDigits  =  str.length()  -  2;  //  drop  0x  if  (str.startsWith(     "-     "))  {  //  drop  -  hexDigits--;  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  	projects/Lang7/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.5773502691896258	449	449	1	replace	if(!StringUtils.isEmpty(str)||!StringUtils.isBlank(str))  {	  if(!StringUtils.isEmpty(str))    {    	non-compiled	[CE]  unclosed  character  literal	32	None	replace
234	[BUG]  [BUGGY]  int  decPos  =  str.length();  int  expPos  =  str.length()  -  2;  [CE]  unclosed  character  literal  [FE]          NumberFormatException      [CONTEXT]      public  static  Number  createNumber(String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {  return  null;  }      [BUGGY]  int  decPos  =  str.length();  int  expPos  =  str.length()  -  2;  [BUGGY]      if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(     "A  blank  string  is  not  a  valid  number     ");  }  if  (str.startsWith(     "--     "))  {  return  null;  }  if  (str.startsWith(     "0x     ")  ||  str.startsWith(     "-0x     ")  ||  str.startsWith(     "0X     ")  ||  str.startsWith(     "-0X     "))  {  int  hexDigits  =  str.length()  -  2;  //  drop  0x  if  (str.startsWith(     "-     "))  {  //  drop  -  hexDigits--;  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  	projects/Lang7/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.5773502691896258	449	449	1	replace	int  decPos  =  str.length();  int  expPos  =  str.length()  -  2;	          int    decPos    =    str.length();    int    expPos    =    str.length();    	non-compiled	[CE]  unclosed  character  literal	82	None	replace
235	[BUG]  [BUGGY]  Number  str  =  getNumber(str,  DEC_SHORT_ZERO);  [CE]  unclosed  character  literal  [FE]                  AssertionError      [CONTEXT]      public  static  Number  createNumber(String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {  return  null;  }      [BUGGY]  Number  str  =  getNumber(str,  DEC_SHORT_ZERO);  [BUGGY]      if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(     "A  blank  string  is  not  a  valid  number     ");  }  if  (str.startsWith(     "--     "))  {  return  null;  }  if  (str.startsWith(     "0x     ")  ||  str.startsWith(     "-0x     ")  ||  str.startsWith(     "0X     ")  ||  str.startsWith(     "-0X     "))  {  int  hexDigits  =  str.length()  -  2;  //  drop  0x  if  (str.startsWith(     "-     "))  {  //  drop  -  hexDigits--;  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  	projects/Lang7/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.5773502691896258	449	449	1	replace	Number  str  =  getNumber(str,  DEC_SHORT_ZERO);	  Number    str    =    getNumber(str,    hexDigits);    	non-compiled	[CE]  unclosed  character  literal	40	None	replace
236	[BUG]  [BUGGY]  Number  str  =  createString(str,  expPos);  [CE]  unclosed  character  literal  [FE]              AssertionError      [CONTEXT]      public  static  Number  createNumber(String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {  return  null;  }      [BUGGY]  Number  str  =  createString(str,  expPos);  [BUGGY]      if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(     "A  blank  string  is  not  a  valid  number     ");  }  if  (str.startsWith(     "--     "))  {  return  null;  }  if  (str.startsWith(     "0x     ")  ||  str.startsWith(     "-0x     ")  ||  str.startsWith(     "0X     ")  ||  str.startsWith(     "-0X     "))  {  int  hexDigits  =  str.length()  -  2;  //  drop  0x  if  (str.startsWith(     "-     "))  {  //  drop  -  hexDigits--;  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  	projects/Lang7/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.5773502691896258	449	449	1	replace	Number  str  =  createString(str,  expPos);	  Number    str    =    createString(str);    	non-compiled	[CE]  unclosed  character  literal	89	None	replace
237	[BUG]  [BUGGY]  Number  str  =  createLong(str);  [CE]  unclosed  character  literal  [FE]                AssertionError      [CONTEXT]      public  static  Number  createNumber(String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {  return  null;  }      [BUGGY]  Number  str  =  createLong(str);  [BUGGY]      if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(     "A  blank  string  is  not  a  valid  number     ");  }  if  (str.startsWith(     "--     "))  {  return  null;  }  if  (str.startsWith(     "0x     ")  ||  str.startsWith(     "-0x     ")  ||  str.startsWith(     "0X     ")  ||  str.startsWith(     "-0X     "))  {  int  hexDigits  =  str.length()  -  2;  //  drop  0x  if  (str.startsWith(     "-     "))  {  //  drop  -  hexDigits--;  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  	projects/Lang7/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.5773502691896258	449	449	1	replace	Number  str  =  createLong(str);	  Number    str    =    createString(str);    	non-compiled	[CE]  unclosed  character  literal	89	None	replace
238	[BUG]  [BUGGY]  if(str  ==  null  ||  StringUtils.isEmpty(str)||  str.length()!=  0)  {  [CE]  unclosed  character  literal  [FE]            AssertionError      [CONTEXT]      public  static  Number  createNumber(String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {  return  null;  }      [BUGGY]  if(str  ==  null  ||  StringUtils.isEmpty(str)||  str.length()!=  0)  {  [BUGGY]      throw  new  NumberFormatException(     "A  blank  string  is  not  a  valid  number     ");  }  if  (str.startsWith(     "--     "))  {  return  null;  }  if  (str.startsWith(     "0x     ")  ||  str.startsWith(     "-0x     ")  ||  str.startsWith(     "0X     ")  ||  str.startsWith(     "-0X     "))  {  int  hexDigits  =  str.length()  -  2;  //  drop  0x  if  (str.startsWith(     "-     "))  {  //  drop  -  hexDigits--;  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  	projects/Lang7/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.5773502691896258	449	449	1	replace	if(str  ==  null  ||  StringUtils.isEmpty(str)||  str.length()!=  0)  {	  if(str    ==    null    ||    StringUtils.isBlank(str)||    str.length()!=    0)    {    	non-compiled	[CE]  unclosed  character  literal	86	None	replace
239	[BUG]  [BUGGY]  int  hexDigits  =  str.lastIndexOf('.',  1);  Integer  hexDigits  =  str.lastIndexOf('.');  [CE]  unclosed  character  literal  [FE]          NumberFormatException      [CONTEXT]      public  static  Number  createNumber(String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {  return  null;  }      [BUGGY]  int  hexDigits  =  str.lastIndexOf('.',  1);  Integer  hexDigits  =  str.lastIndexOf('.');  [BUGGY]      if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(     "A  blank  string  is  not  a  valid  number     ");  }  if  (str.startsWith(     "--     "))  {  return  null;  }  if  (str.startsWith(     "0x     ")  ||  str.startsWith(     "-0x     ")  ||  str.startsWith(     "0X     ")  ||  str.startsWith(     "-0X     "))  {  int  hexDigits  =  str.length()  -  2;  //  drop  0x  if  (str.startsWith(     "-     "))  {  //  drop  -  hexDigits--;  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  	projects/Lang7/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.5773502691896258	449	449	1	replace	int  hexDigits  =  str.lastIndexOf('.',  1);  Integer  hexDigits  =  str.lastIndexOf('.');	          int    hexDigits    =    str.lastIndexOf('.');    Integer    hexDigits    =    str.lastIndexOf('.');    	non-compiled	[CE]  unclosed  character  literal	6	None	replace
240	[BUG]  [BUGGY]  int  hexDigits  =  str.lastIndexOf('.',  3);  Integer  hexDigits  =  str.lastIndexOf('.');  [CE]  unclosed  character  literal  [FE]            NumberFormatException      [CONTEXT]      public  static  Number  createNumber(String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {  return  null;  }      [BUGGY]  int  hexDigits  =  str.lastIndexOf('.',  3);  Integer  hexDigits  =  str.lastIndexOf('.');  [BUGGY]      if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(     "A  blank  string  is  not  a  valid  number     ");  }  if  (str.startsWith(     "--     "))  {  return  null;  }  if  (str.startsWith(     "0x     ")  ||  str.startsWith(     "-0x     ")  ||  str.startsWith(     "0X     ")  ||  str.startsWith(     "-0X     "))  {  int  hexDigits  =  str.length()  -  2;  //  drop  0x  if  (str.startsWith(     "-     "))  {  //  drop  -  hexDigits--;  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  	projects/Lang7/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.5773502691896258	449	449	1	replace	int  hexDigits  =  str.lastIndexOf('.',  3);  Integer  hexDigits  =  str.lastIndexOf('.');	          int    hexDigits    =    str.lastIndexOf('.');    Integer    hexDigits    =    str.lastIndexOf('.');    	non-compiled	[CE]  unclosed  character  literal	6	None	replace
241	[BUG]  [BUGGY]  if(str  ==  null  ||  StringUtils.isWhitespace(str)||  StringUtils.isEmpty(str))  {  [CE]  unclosed  character  literal  [FE]            AssertionError      [CONTEXT]      public  static  Number  createNumber(String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {  return  null;  }      [BUGGY]  if(str  ==  null  ||  StringUtils.isWhitespace(str)||  StringUtils.isEmpty(str))  {  [BUGGY]      throw  new  NumberFormatException(     "A  blank  string  is  not  a  valid  number     ");  }  if  (str.startsWith(     "--     "))  {  return  null;  }  if  (str.startsWith(     "0x     ")  ||  str.startsWith(     "-0x     ")  ||  str.startsWith(     "0X     ")  ||  str.startsWith(     "-0X     "))  {  int  hexDigits  =  str.length()  -  2;  //  drop  0x  if  (str.startsWith(     "-     "))  {  //  drop  -  hexDigits--;  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  	projects/Lang7/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.5773502691896258	449	449	1	replace	if(str  ==  null  ||  StringUtils.isWhitespace(str)||  StringUtils.isEmpty(str))  {	  if(str    ==    null    ||    StringUtils.isBlank(str)||    StringUtils.isEmpty(str))    {    	non-compiled	[CE]  unclosed  character  literal	69	None	replace
242	[BUG]  [BUGGY]  int  decPos  =  str.indexOf('  ',  DEC_POP);  int  lecPos  =  str.indexOf('  ');  [CE]  unclosed  character  literal  [FE]        NumberFormatException      [CONTEXT]      public  static  Number  createNumber(String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {  return  null;  }      [BUGGY]  int  decPos  =  str.indexOf('  ',  DEC_POP);  int  lecPos  =  str.indexOf('  ');  [BUGGY]      if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(     "A  blank  string  is  not  a  valid  number     ");  }  if  (str.startsWith(     "--     "))  {  return  null;  }  if  (str.startsWith(     "0x     ")  ||  str.startsWith(     "-0x     ")  ||  str.startsWith(     "0X     ")  ||  str.startsWith(     "-0X     "))  {  int  hexDigits  =  str.length()  -  2;  //  drop  0x  if  (str.startsWith(     "-     "))  {  //  drop  -  hexDigits--;  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  	projects/Lang7/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.5773502691896258	449	449	1	replace	int  decPos  =  str.indexOf('  ',  DEC_POP);  int  lecPos  =  str.indexOf('  ');	          int    decPos    =    str.indexOf('    ');    int    lecPos    =    str.indexOf('    ');    	non-compiled	[CE]  unclosed  character  literal	62	None	replace
243	[BUG]  [BUGGY]  int  decPos  =  str.indexOf('  ');  int  lecPos  =  str.indexOf('  ',  decPos);  [CE]  unclosed  character  literal  [FE]          NumberFormatException      [CONTEXT]      public  static  Number  createNumber(String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {  return  null;  }      [BUGGY]  int  decPos  =  str.indexOf('  ');  int  lecPos  =  str.indexOf('  ',  decPos);  [BUGGY]      if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(     "A  blank  string  is  not  a  valid  number     ");  }  if  (str.startsWith(     "--     "))  {  return  null;  }  if  (str.startsWith(     "0x     ")  ||  str.startsWith(     "-0x     ")  ||  str.startsWith(     "0X     ")  ||  str.startsWith(     "-0X     "))  {  int  hexDigits  =  str.length()  -  2;  //  drop  0x  if  (str.startsWith(     "-     "))  {  //  drop  -  hexDigits--;  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  	projects/Lang7/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.5773502691896258	449	449	1	replace	int  decPos  =  str.indexOf('  ');  int  lecPos  =  str.indexOf('  ',  decPos);	          int    decPos    =    str.indexOf('    ');    int    lecPos    =    str.indexOf('    ');    	non-compiled	[CE]  unclosed  character  literal	62	None	replace
244	[BUG]  [BUGGY]  int  hexDigits  =  str.indexOf('.',  lastChar);  [CE]  unclosed  character  literal  [FE]        NumberFormatException      [CONTEXT]      public  static  Number  createNumber(String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {  return  null;  }      [BUGGY]  int  hexDigits  =  str.indexOf('.',  lastChar);  [BUGGY]      if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(     "A  blank  string  is  not  a  valid  number     ");  }  if  (str.startsWith(     "--     "))  {  return  null;  }  if  (str.startsWith(     "0x     ")  ||  str.startsWith(     "-0x     ")  ||  str.startsWith(     "0X     ")  ||  str.startsWith(     "-0X     "))  {  int  hexDigits  =  str.length()  -  2;  //  drop  0x  if  (str.startsWith(     "-     "))  {  //  drop  -  hexDigits--;  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  	projects/Lang7/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.5773502691896258	449	449	1	replace	int  hexDigits  =  str.indexOf('.',  lastChar);	  int    hexDigits    =    str.indexOf('.');    	non-compiled	[CE]  unclosed  character  literal	65	None	replace
245	[BUG]  [BUGGY]  int  hexDigits  =  str.indexOf('.',  len);  [CE]  unclosed  character  literal  [FE]          NumberFormatException      [CONTEXT]      public  static  Number  createNumber(String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {  return  null;  }      [BUGGY]  int  hexDigits  =  str.indexOf('.',  len);  [BUGGY]      if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(     "A  blank  string  is  not  a  valid  number     ");  }  if  (str.startsWith(     "--     "))  {  return  null;  }  if  (str.startsWith(     "0x     ")  ||  str.startsWith(     "-0x     ")  ||  str.startsWith(     "0X     ")  ||  str.startsWith(     "-0X     "))  {  int  hexDigits  =  str.length()  -  2;  //  drop  0x  if  (str.startsWith(     "-     "))  {  //  drop  -  hexDigits--;  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  	projects/Lang7/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.5773502691896258	449	449	1	replace	int  hexDigits  =  str.indexOf('.',  len);	  int    hexDigits    =    str.indexOf('.');    	non-compiled	[CE]  unclosed  character  literal	65	None	replace
246	[BUG]  [BUGGY]  Number  str  =  createNumber(str.substring(0,  str.length()  -  1);  [CE]  ')'  expected  [FE]                    AssertionError      [CONTEXT]      public  static  Number  createNumber(String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {  return  null;  }      [BUGGY]  Number  str  =  createNumber(str.substring(0,  str.length()  -  1);  [BUGGY]      if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(     "A  blank  string  is  not  a  valid  number     ");  }  if  (str.startsWith(     "--     "))  {  return  null;  }  if  (str.startsWith(     "0x     ")  ||  str.startsWith(     "-0x     ")  ||  str.startsWith(     "0X     ")  ||  str.startsWith(     "-0X     "))  {  int  hexDigits  =  str.length()  -  2;  //  drop  0x  if  (str.startsWith(     "-     "))  {  //  drop  -  hexDigits--;  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  	projects/Lang7/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.5773502691896258	449	449	1	replace	Number  str  =  createNumber(str.substring(0,  str.length()  -  1);	  Number    str    =    createNumber(str.substring(1));    	non-compiled	[CE]  ')'  expected	39	None	replace
247	[BUG]  [BUGGY]  int  decPos  =  str.indexOf('  ',  DEC_POP);  Integer  decPos  =  str.indexOf('  ');  [CE]  unclosed  character  literal  [FE]          NumberFormatException      [CONTEXT]      public  static  Number  createNumber(String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {  return  null;  }      [BUGGY]  int  decPos  =  str.indexOf('  ',  DEC_POP);  Integer  decPos  =  str.indexOf('  ');  [BUGGY]      if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(     "A  blank  string  is  not  a  valid  number     ");  }  if  (str.startsWith(     "--     "))  {  return  null;  }  if  (str.startsWith(     "0x     ")  ||  str.startsWith(     "-0x     ")  ||  str.startsWith(     "0X     ")  ||  str.startsWith(     "-0X     "))  {  int  hexDigits  =  str.length()  -  2;  //  drop  0x  if  (str.startsWith(     "-     "))  {  //  drop  -  hexDigits--;  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  	projects/Lang7/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.5773502691896258	449	449	1	replace	int  decPos  =  str.indexOf('  ',  DEC_POP);  Integer  decPos  =  str.indexOf('  ');	          int    decPos    =    str.indexOf('    ');    Integer    decPos    =    str.indexOf('    ');    	non-compiled	[CE]  unclosed  character  literal	48	None	replace
248	[BUG]  [BUGGY]  Number  str  =  createNumber(str,  dec);  [CE]  unclosed  character  literal  [FE]              AssertionError      [CONTEXT]      public  static  Number  createNumber(String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {  return  null;  }      [BUGGY]  Number  str  =  createNumber(str,  dec);  [BUGGY]      if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(     "A  blank  string  is  not  a  valid  number     ");  }  if  (str.startsWith(     "--     "))  {  return  null;  }  if  (str.startsWith(     "0x     ")  ||  str.startsWith(     "-0x     ")  ||  str.startsWith(     "0X     ")  ||  str.startsWith(     "-0X     "))  {  int  hexDigits  =  str.length()  -  2;  //  drop  0x  if  (str.startsWith(     "-     "))  {  //  drop  -  hexDigits--;  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  	projects/Lang7/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.5773502691896258	449	449	1	replace	Number  str  =  createNumber(str,  dec);	  Number    str    =    createNumber(str,    hexDigits);    	non-compiled	[CE]  unclosed  character  literal	36	None	replace
249	[BUG]  [BUGGY]  int  decPos  =  str.indexOf('  ',  DECEMBER_TO_STRING);  [CE]  unclosed  character  literal  [FE]            NumberFormatException      [CONTEXT]      public  static  Number  createNumber(String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {  return  null;  }      [BUGGY]  int  decPos  =  str.indexOf('  ',  DECEMBER_TO_STRING);  [BUGGY]      if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(     "A  blank  string  is  not  a  valid  number     ");  }  if  (str.startsWith(     "--     "))  {  return  null;  }  if  (str.startsWith(     "0x     ")  ||  str.startsWith(     "-0x     ")  ||  str.startsWith(     "0X     ")  ||  str.startsWith(     "-0X     "))  {  int  hexDigits  =  str.length()  -  2;  //  drop  0x  if  (str.startsWith(     "-     "))  {  //  drop  -  hexDigits--;  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  	projects/Lang7/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.5773502691896258	449	449	1	replace	int  decPos  =  str.indexOf('  ',  DECEMBER_TO_STRING);	  int    decPos    =    str.indexOf('    ',    DECEMBER_PREFIX);    	non-compiled	[CE]  unclosed  character  literal	4	None	replace
250	[BUG]  [BUGGY]  int  decPos  =  str.lastIndexOf('.',  dec);  [CE]  unclosed  character  literal  [FE]        NumberFormatException      [CONTEXT]      public  static  Number  createNumber(String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {  return  null;  }      [BUGGY]  int  decPos  =  str.lastIndexOf('.',  dec);  [BUGGY]      if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(     "A  blank  string  is  not  a  valid  number     ");  }  if  (str.startsWith(     "--     "))  {  return  null;  }  if  (str.startsWith(     "0x     ")  ||  str.startsWith(     "-0x     ")  ||  str.startsWith(     "0X     ")  ||  str.startsWith(     "-0X     "))  {  int  hexDigits  =  str.length()  -  2;  //  drop  0x  if  (str.startsWith(     "-     "))  {  //  drop  -  hexDigits--;  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  	projects/Lang7/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.5773502691896258	449	449	1	replace	int  decPos  =  str.lastIndexOf('.',  dec);	  int    decPos    =    str.lastIndexOf('.');    	non-compiled	[CE]  unclosed  character  literal	80	None	replace
251	[BUG]  [BUGGY]  int  decPos  =  str.lastIndexOf('.',  DEC_POINT);  [CE]  unclosed  character  literal  [FE]          NumberFormatException      [CONTEXT]      public  static  Number  createNumber(String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {  return  null;  }      [BUGGY]  int  decPos  =  str.lastIndexOf('.',  DEC_POINT);  [BUGGY]      if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(     "A  blank  string  is  not  a  valid  number     ");  }  if  (str.startsWith(     "--     "))  {  return  null;  }  if  (str.startsWith(     "0x     ")  ||  str.startsWith(     "-0x     ")  ||  str.startsWith(     "0X     ")  ||  str.startsWith(     "-0X     "))  {  int  hexDigits  =  str.length()  -  2;  //  drop  0x  if  (str.startsWith(     "-     "))  {  //  drop  -  hexDigits--;  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  	projects/Lang7/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.5773502691896258	449	449	1	replace	int  decPos  =  str.lastIndexOf('.',  DEC_POINT);	  int    decPos    =    str.lastIndexOf('.');    	non-compiled	[CE]  unclosed  character  literal	80	None	replace
252	[BUG]  [BUGGY]  Number  str  =  createNumber(str,  0);  [CE]  unclosed  character  literal  [FE]                    AssertionError      [CONTEXT]      public  static  Number  createNumber(String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {  return  null;  }      [BUGGY]  Number  str  =  createNumber(str,  0);  [BUGGY]      if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(     "A  blank  string  is  not  a  valid  number     ");  }  if  (str.startsWith(     "--     "))  {  return  null;  }  if  (str.startsWith(     "0x     ")  ||  str.startsWith(     "-0x     ")  ||  str.startsWith(     "0X     ")  ||  str.startsWith(     "-0X     "))  {  int  hexDigits  =  str.length()  -  2;  //  drop  0x  if  (str.startsWith(     "-     "))  {  //  drop  -  hexDigits--;  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  	projects/Lang7/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.5773502691896258	449	449	1	replace	Number  str  =  createNumber(str,  0);	  Number    str    =    getNumber(str,    0);    	non-compiled	[CE]  unclosed  character  literal	41	None	replace
253	[BUG]  [BUGGY]  Number  str  =  getNumber(str,  4);  [CE]  unclosed  character  literal  [FE]                      AssertionError      [CONTEXT]      public  static  Number  createNumber(String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {  return  null;  }      [BUGGY]  Number  str  =  getNumber(str,  4);  [BUGGY]      if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(     "A  blank  string  is  not  a  valid  number     ");  }  if  (str.startsWith(     "--     "))  {  return  null;  }  if  (str.startsWith(     "0x     ")  ||  str.startsWith(     "-0x     ")  ||  str.startsWith(     "0X     ")  ||  str.startsWith(     "-0X     "))  {  int  hexDigits  =  str.length()  -  2;  //  drop  0x  if  (str.startsWith(     "-     "))  {  //  drop  -  hexDigits--;  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  	projects/Lang7/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.5773502691896258	449	449	1	replace	Number  str  =  getNumber(str,  4);	  Number    str    =    getNumber(str,    0);    	non-compiled	[CE]  unclosed  character  literal	41	None	replace
254	[BUG]  [BUGGY]  int  decPos  =  str.indexOf('  ',  DEC_POP);  int  descPos  =  str.indexOf('  ');  [CE]  unclosed  character  literal  [FE]            NumberFormatException      [CONTEXT]      public  static  Number  createNumber(String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {  return  null;  }      [BUGGY]  int  decPos  =  str.indexOf('  ',  DEC_POP);  int  descPos  =  str.indexOf('  ');  [BUGGY]      if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(     "A  blank  string  is  not  a  valid  number     ");  }  if  (str.startsWith(     "--     "))  {  return  null;  }  if  (str.startsWith(     "0x     ")  ||  str.startsWith(     "-0x     ")  ||  str.startsWith(     "0X     ")  ||  str.startsWith(     "-0X     "))  {  int  hexDigits  =  str.length()  -  2;  //  drop  0x  if  (str.startsWith(     "-     "))  {  //  drop  -  hexDigits--;  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  	projects/Lang7/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.5773502691896258	449	449	1	replace	int  decPos  =  str.indexOf('  ',  DEC_POP);  int  descPos  =  str.indexOf('  ');	          int    decPos    =    str.indexOf('    ');    int    descPos    =    str.indexOf('    ');    	non-compiled	[CE]  unclosed  character  literal	49	None	replace
255	[BUG]  [BUGGY]  if(str  ==  null  ||  StringUtils.isWhitespace(str)||  isEmpty(str))  {  [CE]  unclosed  character  literal  [FE]            AssertionError      [CONTEXT]      public  static  Number  createNumber(String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {  return  null;  }      [BUGGY]  if(str  ==  null  ||  StringUtils.isWhitespace(str)||  isEmpty(str))  {  [BUGGY]      throw  new  NumberFormatException(     "A  blank  string  is  not  a  valid  number     ");  }  if  (str.startsWith(     "--     "))  {  return  null;  }  if  (str.startsWith(     "0x     ")  ||  str.startsWith(     "-0x     ")  ||  str.startsWith(     "0X     ")  ||  str.startsWith(     "-0X     "))  {  int  hexDigits  =  str.length()  -  2;  //  drop  0x  if  (str.startsWith(     "-     "))  {  //  drop  -  hexDigits--;  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  	projects/Lang7/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.5773502691896258	449	449	1	replace	if(str  ==  null  ||  StringUtils.isWhitespace(str)||  isEmpty(str))  {	  if(str    ==    null    ||    StringUtils.isBlank(str)||    isEmpty(str))    {    	non-compiled	[CE]  unclosed  character  literal	61	None	replace
256	[BUG]  [BUGGY]  int  decPos  =  str.lastIndexOf('  ');  int  decPos  =  str.lastIndexOf('  ').lastIndexOf('  ');  [CE]  unclosed  character  literal  [FE]    NumberFormatException    [CONTEXT]      public  static  Number  createNumber(String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {  return  null;  }      [BUGGY]  int  decPos  =  str.lastIndexOf('  ');  int  decPos  =  str.lastIndexOf('  ').lastIndexOf('  ');  [BUGGY]      if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(     "A  blank  string  is  not  a  valid  number     ");  }  if  (str.startsWith(     "--     "))  {  return  null;  }  if  (str.startsWith(     "0x     ")  ||  str.startsWith(     "-0x     ")  ||  str.startsWith(     "0X     ")  ||  str.startsWith(     "-0X     "))  {  int  hexDigits  =  str.length()  -  2;  //  drop  0x  if  (str.startsWith(     "-     "))  {  //  drop  -  hexDigits--;  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  	projects/Lang7/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.5773502691896258	449	449	1	replace	int    decPos    =    str.lastIndexOf('    ');    int  decPos  =  str.lastIndexOf('  ').lastIndexOf('  ');	  	non-compiled	[CE]  unclosed  character  literal	1	None	add
257	[BUG]  [BUGGY]  Number  str  =  getNumber(str.toUpperCase()  +  1);  [CE]  unclosed  character  literal  [FE]                  AssertionError      [CONTEXT]      public  static  Number  createNumber(String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {  return  null;  }      [BUGGY]  Number  str  =  getNumber(str.toUpperCase()  +  1);  [BUGGY]      if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(     "A  blank  string  is  not  a  valid  number     ");  }  if  (str.startsWith(     "--     "))  {  return  null;  }  if  (str.startsWith(     "0x     ")  ||  str.startsWith(     "-0x     ")  ||  str.startsWith(     "0X     ")  ||  str.startsWith(     "-0X     "))  {  int  hexDigits  =  str.length()  -  2;  //  drop  0x  if  (str.startsWith(     "-     "))  {  //  drop  -  hexDigits--;  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  	projects/Lang7/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.5773502691896258	449	449	1	replace	Number  str  =  getNumber(str.toUpperCase()  +  1);	  Number    str    =    getNumber(str.toUpperCase());    	non-compiled	[CE]  unclosed  character  literal	83	None	replace
258	[BUG]  [BUGGY]  int  hexDigits  =  str.lastIndexOf('.',  4).lastIndexOf('.');  [CE]  unclosed  character  literal  [FE]        NumberFormatException      [CONTEXT]      public  static  Number  createNumber(String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {  return  null;  }      [BUGGY]  int  hexDigits  =  str.lastIndexOf('.',  4).lastIndexOf('.');  [BUGGY]      if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(     "A  blank  string  is  not  a  valid  number     ");  }  if  (str.startsWith(     "--     "))  {  return  null;  }  if  (str.startsWith(     "0x     ")  ||  str.startsWith(     "-0x     ")  ||  str.startsWith(     "0X     ")  ||  str.startsWith(     "-0X     "))  {  int  hexDigits  =  str.length()  -  2;  //  drop  0x  if  (str.startsWith(     "-     "))  {  //  drop  -  hexDigits--;  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  	projects/Lang7/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.5773502691896258	449	449	1	replace	int  hexDigits  =  str.lastIndexOf('.',  4).lastIndexOf('.');	          int    hexDigits    =    str.lastIndexOf('.');    int    hexDigits    =    str.lastIndexOf('.').lastIndexOf('.');    	non-compiled	[CE]  unclosed  character  literal	75	None	replace
259	[BUG]  [BUGGY]  int  decPos  =  str.length();  Integer  decPos  =  str.charAt(0);  [CE]  unclosed  character  literal  [FE]          NumberFormatException      [CONTEXT]      public  static  Number  createNumber(String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {  return  null;  }      [BUGGY]  int  decPos  =  str.length();  Integer  decPos  =  str.charAt(0);  [BUGGY]      if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(     "A  blank  string  is  not  a  valid  number     ");  }  if  (str.startsWith(     "--     "))  {  return  null;  }  if  (str.startsWith(     "0x     ")  ||  str.startsWith(     "-0x     ")  ||  str.startsWith(     "0X     ")  ||  str.startsWith(     "-0X     "))  {  int  hexDigits  =  str.length()  -  2;  //  drop  0x  if  (str.startsWith(     "-     "))  {  //  drop  -  hexDigits--;  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  	projects/Lang7/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.5773502691896258	449	449	1	replace	int  decPos  =  str.length();  Integer  decPos  =  str.charAt(0);	          int    decPos    =    str.length();    Integer    decPos    =    str.length();    	non-compiled	[CE]  unclosed  character  literal	58	None	replace
260	[BUG]  [BUGGY]  int  hexDigits  =  str.lastIndexOf('.',  len);  [CE]  unclosed  character  literal  [FE]            NumberFormatException      [CONTEXT]      public  static  Number  createNumber(String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {  return  null;  }      [BUGGY]  int  hexDigits  =  str.lastIndexOf('.',  len);  [BUGGY]      if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(     "A  blank  string  is  not  a  valid  number     ");  }  if  (str.startsWith(     "--     "))  {  return  null;  }  if  (str.startsWith(     "0x     ")  ||  str.startsWith(     "-0x     ")  ||  str.startsWith(     "0X     ")  ||  str.startsWith(     "-0X     "))  {  int  hexDigits  =  str.length()  -  2;  //  drop  0x  if  (str.startsWith(     "-     "))  {  //  drop  -  hexDigits--;  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  	projects/Lang7/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.5773502691896258	449	449	1	replace	int  hexDigits  =  str.lastIndexOf('.',  len);	          int    hexDigits    =    str.lastIndexOf('.');    int    hexDigits    =    str.indexOf('.');    	non-compiled	[CE]  unclosed  character  literal	7	None	replace
261	[BUG]  [BUGGY]  char  decPos  =  str.length();  int  descPos  =  str.length();  [CE]  unclosed  character  literal  [FE]            NumberFormatException      [CONTEXT]      public  static  Number  createNumber(String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {  return  null;  }      [BUGGY]  char  decPos  =  str.length();  int  descPos  =  str.length();  [BUGGY]      if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(     "A  blank  string  is  not  a  valid  number     ");  }  if  (str.startsWith(     "--     "))  {  return  null;  }  if  (str.startsWith(     "0x     ")  ||  str.startsWith(     "-0x     ")  ||  str.startsWith(     "0X     ")  ||  str.startsWith(     "-0X     "))  {  int  hexDigits  =  str.length()  -  2;  //  drop  0x  if  (str.startsWith(     "-     "))  {  //  drop  -  hexDigits--;  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  	projects/Lang7/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.5773502691896258	449	449	1	replace	char  decPos  =  str.length();  int  descPos  =  str.length();	          int    decPos    =    str.length();    int    descPos    =    str.length();    	non-compiled	[CE]  unclosed  character  literal	59	None	replace
262	[BUG]  [BUGGY]  Integer  str  =  createInteger(str.substring(2,  str.length()));  [CE]  unclosed  character  literal  [FE]                  AssertionError      [CONTEXT]      public  static  Number  createNumber(String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {  return  null;  }      [BUGGY]  Integer  str  =  createInteger(str.substring(2,  str.length()));  [BUGGY]      if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(     "A  blank  string  is  not  a  valid  number     ");  }  if  (str.startsWith(     "--     "))  {  return  null;  }  if  (str.startsWith(     "0x     ")  ||  str.startsWith(     "-0x     ")  ||  str.startsWith(     "0X     ")  ||  str.startsWith(     "-0X     "))  {  int  hexDigits  =  str.length()  -  2;  //  drop  0x  if  (str.startsWith(     "-     "))  {  //  drop  -  hexDigits--;  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  	projects/Lang7/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.5773502691896258	449	449	1	replace	Integer  str  =  createInteger(str.substring(2,  str.length()));	  Integer    str    =    createInteger(str.substring(1));    	non-compiled	[CE]  unclosed  character  literal	14	None	replace
263	[BUG]  [BUGGY]  int  decPos  =  str.indexOf('  ',  DEC);  [CE]  unclosed  character  literal  [FE]        NumberFormatException      [CONTEXT]      public  static  Number  createNumber(String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {  return  null;  }      [BUGGY]  int  decPos  =  str.indexOf('  ',  DEC);  [BUGGY]      if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(     "A  blank  string  is  not  a  valid  number     ");  }  if  (str.startsWith(     "--     "))  {  return  null;  }  if  (str.startsWith(     "0x     ")  ||  str.startsWith(     "-0x     ")  ||  str.startsWith(     "0X     ")  ||  str.startsWith(     "-0X     "))  {  int  hexDigits  =  str.length()  -  2;  //  drop  0x  if  (str.startsWith(     "-     "))  {  //  drop  -  hexDigits--;  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  	projects/Lang7/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.5773502691896258	449	449	1	replace	int  decPos  =  str.indexOf('  ',  DEC);	  int    decPos    =    str.indexOf('    ',    dec);    	non-compiled	[CE]  unclosed  character  literal	84	None	replace
264	[BUG]  [BUGGY]  if(!StringUtils.isEmpty(str)||  str.startsWith( "- "))  {  [CE]  unclosed  character  literal  [FE]              AssertionError      [CONTEXT]      public  static  Number  createNumber(String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {  return  null;  }      [BUGGY]  if(!StringUtils.isEmpty(str)||  str.startsWith( "- "))  {  [BUGGY]      throw  new  NumberFormatException(     "A  blank  string  is  not  a  valid  number     ");  }  if  (str.startsWith(     "--     "))  {  return  null;  }  if  (str.startsWith(     "0x     ")  ||  str.startsWith(     "-0x     ")  ||  str.startsWith(     "0X     ")  ||  str.startsWith(     "-0X     "))  {  int  hexDigits  =  str.length()  -  2;  //  drop  0x  if  (str.startsWith(     "-     "))  {  //  drop  -  hexDigits--;  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  	projects/Lang7/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.5773502691896258	449	449	1	replace	if(!StringUtils.isEmpty(str)||  str.startsWith( "- "))  {	  if(!StringUtils.isEmpty(str))    {    	non-compiled	[CE]  unclosed  character  literal	32	None	replace
265	[BUG]  [BUGGY]  if(!StringUtils.isEmpty(str)||  str.length()!=  0)  {  [CE]  unclosed  character  literal  [FE]                AssertionError      [CONTEXT]      public  static  Number  createNumber(String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {  return  null;  }      [BUGGY]  if(!StringUtils.isEmpty(str)||  str.length()!=  0)  {  [BUGGY]      throw  new  NumberFormatException(     "A  blank  string  is  not  a  valid  number     ");  }  if  (str.startsWith(     "--     "))  {  return  null;  }  if  (str.startsWith(     "0x     ")  ||  str.startsWith(     "-0x     ")  ||  str.startsWith(     "0X     ")  ||  str.startsWith(     "-0X     "))  {  int  hexDigits  =  str.length()  -  2;  //  drop  0x  if  (str.startsWith(     "-     "))  {  //  drop  -  hexDigits--;  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  	projects/Lang7/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.5773502691896258	449	449	1	replace	if(!StringUtils.isEmpty(str)||  str.length()!=  0)  {	  if(!StringUtils.isEmpty(str))    {    	non-compiled	[CE]  unclosed  character  literal	32	None	replace
266	[BUG]  [BUGGY]  if(!StringUtils.isEmpty(str)||  str.length()  <  =  0)  {  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      public  static  Number  createNumber(String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {  return  null;  }      [BUGGY]  if(!StringUtils.isEmpty(str)||  str.length()  <  =  0)  {  [BUGGY]      throw  new  NumberFormatException(     "A  blank  string  is  not  a  valid  number     ");  }  if  (str.startsWith(     "--     "))  {  return  null;  }  if  (str.startsWith(     "0x     ")  ||  str.startsWith(     "-0x     ")  ||  str.startsWith(     "0X     ")  ||  str.startsWith(     "-0X     "))  {  int  hexDigits  =  str.length()  -  2;  //  drop  0x  if  (str.startsWith(     "-     "))  {  //  drop  -  hexDigits--;  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  	projects/Lang7/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.5773502691896258	449	449	1	replace	if(!StringUtils.isEmpty(str)||  str.length()  <  =  0)  {	  if(!StringUtils.isEmpty(str))    {    	non-compiled	[CE]  illegal  start  of  expression	32	None	replace
267	[BUG]  [BUGGY]  Number  str  =  createNumber(str.toCharArray());  [CE]  unclosed  character  literal  [FE]                    AssertionError      [CONTEXT]      public  static  Number  createNumber(String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {  return  null;  }      [BUGGY]  Number  str  =  createNumber(str.toCharArray());  [BUGGY]      if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(     "A  blank  string  is  not  a  valid  number     ");  }  if  (str.startsWith(     "--     "))  {  return  null;  }  if  (str.startsWith(     "0x     ")  ||  str.startsWith(     "-0x     ")  ||  str.startsWith(     "0X     ")  ||  str.startsWith(     "-0X     "))  {  int  hexDigits  =  str.length()  -  2;  //  drop  0x  if  (str.startsWith(     "-     "))  {  //  drop  -  hexDigits--;  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  	projects/Lang7/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.5773502691896258	449	449	1	replace	Number  str  =  createNumber(str.toCharArray());	  Number    str    =    getNumber(str.toCharArray());    	non-compiled	[CE]  unclosed  character  literal	77	None	replace
268	[BUG]  [BUGGY]  int  decPos  =  str.indexOf('  ')/  1;  [CE]  unclosed  character  literal  [FE]          NumberFormatException      [CONTEXT]      public  static  Number  createNumber(String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {  return  null;  }      [BUGGY]  int  decPos  =  str.indexOf('  ')/  1;  [BUGGY]      if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(     "A  blank  string  is  not  a  valid  number     ");  }  if  (str.startsWith(     "--     "))  {  return  null;  }  if  (str.startsWith(     "0x     ")  ||  str.startsWith(     "-0x     ")  ||  str.startsWith(     "0X     ")  ||  str.startsWith(     "-0X     "))  {  int  hexDigits  =  str.length()  -  2;  //  drop  0x  if  (str.startsWith(     "-     "))  {  //  drop  -  hexDigits--;  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  	projects/Lang7/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.5773502691896258	449	449	1	replace	int  decPos  =  str.indexOf('  ')/  1;	  int    decPos    =    str.indexOf('    ')+    1;    	non-compiled	[CE]  unclosed  character  literal	74	None	replace
269	[BUG]  [BUGGY]  if(str.length()  ==  0  ||!StringUtils.isEmpty(str))  {  [CE]  unclosed  character  literal  [FE]                    AssertionError      [CONTEXT]      public  static  Number  createNumber(String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {  return  null;  }      [BUGGY]  if(str.length()  ==  0  ||!StringUtils.isEmpty(str))  {  [BUGGY]      throw  new  NumberFormatException(     "A  blank  string  is  not  a  valid  number     ");  }  if  (str.startsWith(     "--     "))  {  return  null;  }  if  (str.startsWith(     "0x     ")  ||  str.startsWith(     "-0x     ")  ||  str.startsWith(     "0X     ")  ||  str.startsWith(     "-0X     "))  {  int  hexDigits  =  str.length()  -  2;  //  drop  0x  if  (str.startsWith(     "-     "))  {  //  drop  -  hexDigits--;  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  	projects/Lang7/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.5773502691896258	449	449	1	replace	if(str.length()  ==  0  ||!StringUtils.isEmpty(str))  {	  if(str.length()    ==    0    ||!StringUtils.isBlank(str))    {    	non-compiled	[CE]  unclosed  character  literal	35	None	replace
270	[BUG]  [BUGGY]  int  decPos  =  str.indexOf('  ').indexOf('  ',  DEC_PREFIX);  [CE]  unclosed  character  literal  [FE]        NumberFormatException      [CONTEXT]      public  static  Number  createNumber(String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {  return  null;  }      [BUGGY]  int  decPos  =  str.indexOf('  ').indexOf('  ',  DEC_PREFIX);  [BUGGY]      if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(     "A  blank  string  is  not  a  valid  number     ");  }  if  (str.startsWith(     "--     "))  {  return  null;  }  if  (str.startsWith(     "0x     ")  ||  str.startsWith(     "-0x     ")  ||  str.startsWith(     "0X     ")  ||  str.startsWith(     "-0X     "))  {  int  hexDigits  =  str.length()  -  2;  //  drop  0x  if  (str.startsWith(     "-     "))  {  //  drop  -  hexDigits--;  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  	projects/Lang7/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.5773502691896258	449	449	1	replace	int  decPos  =  str.indexOf('  ').indexOf('  ',  DEC_PREFIX);	          int    decPos    =    str.indexOf('    ');    int    decPos    =    str.indexOf('    ').indexOf('    ');    	non-compiled	[CE]  unclosed  character  literal	91	None	replace
271	[BUG]  [BUGGY]  int  decPos  =  str.indexOf('  ',  DEC_POP).indexOf('  ');  [CE]  unclosed  character  literal  [FE]          NumberFormatException      [CONTEXT]      public  static  Number  createNumber(String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {  return  null;  }      [BUGGY]  int  decPos  =  str.indexOf('  ',  DEC_POP).indexOf('  ');  [BUGGY]      if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(     "A  blank  string  is  not  a  valid  number     ");  }  if  (str.startsWith(     "--     "))  {  return  null;  }  if  (str.startsWith(     "0x     ")  ||  str.startsWith(     "-0x     ")  ||  str.startsWith(     "0X     ")  ||  str.startsWith(     "-0X     "))  {  int  hexDigits  =  str.length()  -  2;  //  drop  0x  if  (str.startsWith(     "-     "))  {  //  drop  -  hexDigits--;  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  	projects/Lang7/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.5773502691896258	449	449	1	replace	int  decPos  =  str.indexOf('  ',  DEC_POP).indexOf('  ');	          int    decPos    =    str.indexOf('    ');    int    decPos    =    str.indexOf('    ').indexOf('    ');    	non-compiled	[CE]  unclosed  character  literal	91	None	replace
272	[BUG]  [BUGGY]  int  str  =  str.lastIndexOf('.',  0);  [CE]  unclosed  character  literal  [FE]                AssertionError      [CONTEXT]      public  static  Number  createNumber(String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {  return  null;  }      [BUGGY]  int  str  =  str.lastIndexOf('.',  0);  [BUGGY]      if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(     "A  blank  string  is  not  a  valid  number     ");  }  if  (str.startsWith(     "--     "))  {  return  null;  }  if  (str.startsWith(     "0x     ")  ||  str.startsWith(     "-0x     ")  ||  str.startsWith(     "0X     ")  ||  str.startsWith(     "-0X     "))  {  int  hexDigits  =  str.length()  -  2;  //  drop  0x  if  (str.startsWith(     "-     "))  {  //  drop  -  hexDigits--;  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  	projects/Lang7/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.5773502691896258	449	449	1	replace	int  str  =  str.lastIndexOf('.',  0);	  int    str    =    str.indexOf('.',    0);    	non-compiled	[CE]  unclosed  character  literal	43	None	replace
273	[BUG]  [BUGGY]  int  hexDigits  =  str.lastIndexOf('.',  4).length();  [CE]  unclosed  character  literal  [FE]              NumberFormatException      [CONTEXT]      public  static  Number  createNumber(String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {  return  null;  }      [BUGGY]  int  hexDigits  =  str.lastIndexOf('.',  4).length();  [BUGGY]      if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(     "A  blank  string  is  not  a  valid  number     ");  }  if  (str.startsWith(     "--     "))  {  return  null;  }  if  (str.startsWith(     "0x     ")  ||  str.startsWith(     "-0x     ")  ||  str.startsWith(     "0X     ")  ||  str.startsWith(     "-0X     "))  {  int  hexDigits  =  str.length()  -  2;  //  drop  0x  if  (str.startsWith(     "-     "))  {  //  drop  -  hexDigits--;  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  	projects/Lang7/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.5773502691896258	449	449	1	replace	int  hexDigits  =  str.lastIndexOf('.',  4).length();	          int    hexDigits    =    str.lastIndexOf('.');    int    hexDigits    =    str.lastIndexOf('.').length();    	non-compiled	[CE]  unclosed  character  literal	8	None	replace
274	[BUG]  [BUGGY]  int  hexDigits  =  str.lastIndexOf('.',  3).length();  [CE]  unclosed  character  literal  [FE]                NumberFormatException      [CONTEXT]      public  static  Number  createNumber(String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {  return  null;  }      [BUGGY]  int  hexDigits  =  str.lastIndexOf('.',  3).length();  [BUGGY]      if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(     "A  blank  string  is  not  a  valid  number     ");  }  if  (str.startsWith(     "--     "))  {  return  null;  }  if  (str.startsWith(     "0x     ")  ||  str.startsWith(     "-0x     ")  ||  str.startsWith(     "0X     ")  ||  str.startsWith(     "-0X     "))  {  int  hexDigits  =  str.length()  -  2;  //  drop  0x  if  (str.startsWith(     "-     "))  {  //  drop  -  hexDigits--;  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  	projects/Lang7/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.5773502691896258	449	449	1	replace	int  hexDigits  =  str.lastIndexOf('.',  3).length();	          int    hexDigits    =    str.lastIndexOf('.');    int    hexDigits    =    str.lastIndexOf('.').length();    	non-compiled	[CE]  unclosed  character  literal	8	None	replace
275	[BUG]  [BUGGY]  int  hexDigits  =  str.lastIndexOf('.',  2).length();  [CE]  unclosed  character  literal  [FE]                  NumberFormatException      [CONTEXT]      public  static  Number  createNumber(String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {  return  null;  }      [BUGGY]  int  hexDigits  =  str.lastIndexOf('.',  2).length();  [BUGGY]      if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(     "A  blank  string  is  not  a  valid  number     ");  }  if  (str.startsWith(     "--     "))  {  return  null;  }  if  (str.startsWith(     "0x     ")  ||  str.startsWith(     "-0x     ")  ||  str.startsWith(     "0X     ")  ||  str.startsWith(     "-0X     "))  {  int  hexDigits  =  str.length()  -  2;  //  drop  0x  if  (str.startsWith(     "-     "))  {  //  drop  -  hexDigits--;  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  	projects/Lang7/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.5773502691896258	449	449	1	replace	int  hexDigits  =  str.lastIndexOf('.',  2).length();	          int    hexDigits    =    str.lastIndexOf('.');    int    hexDigits    =    str.lastIndexOf('.').length();    	non-compiled	[CE]  unclosed  character  literal	8	None	replace
276	[BUG]  [BUGGY]  if(StringUtils.isBlank(str)||  StringUtils.isWhitespace(str)||  str.startsWith( "- "))  {  [CE]  unclosed  character  literal  [FE]                AssertionError      [CONTEXT]      public  static  Number  createNumber(String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {  return  null;  }      [BUGGY]  if(StringUtils.isBlank(str)||  StringUtils.isWhitespace(str)||  str.startsWith( "- "))  {  [BUGGY]      throw  new  NumberFormatException(     "A  blank  string  is  not  a  valid  number     ");  }  if  (str.startsWith(     "--     "))  {  return  null;  }  if  (str.startsWith(     "0x     ")  ||  str.startsWith(     "-0x     ")  ||  str.startsWith(     "0X     ")  ||  str.startsWith(     "-0X     "))  {  int  hexDigits  =  str.length()  -  2;  //  drop  0x  if  (str.startsWith(     "-     "))  {  //  drop  -  hexDigits--;  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  	projects/Lang7/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.5773502691896258	449	449	1	replace	if(StringUtils.isBlank(str)||  StringUtils.isWhitespace(str)||  str.startsWith( "- "))  {	  if(StringUtils.isBlank(str)||    StringUtils.isWhitespace(str))    {    	non-compiled	[CE]  unclosed  character  literal	67	None	replace
277	[BUG]  [BUGGY]  if(!StringUtils.isBlank(str)||  StringUtils.isBlank(str))  {  if(!StringUtils.equal(str)||  StringUtils.isBlank(str))  {  [CE]  unclosed  character  literal  [FE]    NumberFormatException    [CONTEXT]      public  static  Number  createNumber(String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {  return  null;  }      [BUGGY]  if(!StringUtils.isBlank(str)||  StringUtils.isBlank(str))  {  if(!StringUtils.equal(str)||  StringUtils.isBlank(str))  {  [BUGGY]      throw  new  NumberFormatException(     "A  blank  string  is  not  a  valid  number     ");  }  if  (str.startsWith(     "--     "))  {  return  null;  }  if  (str.startsWith(     "0x     ")  ||  str.startsWith(     "-0x     ")  ||  str.startsWith(     "0X     ")  ||  str.startsWith(     "-0X     "))  {  int  hexDigits  =  str.length()  -  2;  //  drop  0x  if  (str.startsWith(     "-     "))  {  //  drop  -  hexDigits--;  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  	projects/Lang7/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.5773502691896258	449	449	1	replace	if(!StringUtils.isBlank(str)||    StringUtils.isBlank(str))    {    if(!StringUtils.equal(str)||  StringUtils.isBlank(str))  {	  	non-compiled	[CE]  unclosed  character  literal	23	None	add
278	[BUG]  [BUGGY]  int  str  =  str.indexOf('.',  '-');  [CE]  unclosed  character  literal  [FE]                  AssertionError      [CONTEXT]      public  static  Number  createNumber(String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {  return  null;  }      [BUGGY]  int  str  =  str.indexOf('.',  '-');  [BUGGY]      if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(     "A  blank  string  is  not  a  valid  number     ");  }  if  (str.startsWith(     "--     "))  {  return  null;  }  if  (str.startsWith(     "0x     ")  ||  str.startsWith(     "-0x     ")  ||  str.startsWith(     "0X     ")  ||  str.startsWith(     "-0X     "))  {  int  hexDigits  =  str.length()  -  2;  //  drop  0x  if  (str.startsWith(     "-     "))  {  //  drop  -  hexDigits--;  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  	projects/Lang7/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.5773502691896258	449	449	1	replace	int  str  =  str.indexOf('.',  '-');	  int    str    =    str.indexOf('.',    lastChar);    	non-compiled	[CE]  unclosed  character  literal	88	None	replace
279	[BUG]  [BUGGY]  int  str  =  str.indexOf('.')/  1;  [CE]  unclosed  character  literal  [FE]                  AssertionError      [CONTEXT]      public  static  Number  createNumber(String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {  return  null;  }      [BUGGY]  int  str  =  str.indexOf('.')/  1;  [BUGGY]      if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(     "A  blank  string  is  not  a  valid  number     ");  }  if  (str.startsWith(     "--     "))  {  return  null;  }  if  (str.startsWith(     "0x     ")  ||  str.startsWith(     "-0x     ")  ||  str.startsWith(     "0X     ")  ||  str.startsWith(     "-0X     "))  {  int  hexDigits  =  str.length()  -  2;  //  drop  0x  if  (str.startsWith(     "-     "))  {  //  drop  -  hexDigits--;  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  	projects/Lang7/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.5773502691896258	449	449	1	replace	int  str  =  str.indexOf('.')/  1;	  int    str    =    str.indexOf('.')+    1;    	non-compiled	[CE]  unclosed  character  literal	72	None	replace
280	[BUG]  [BUGGY]  int  decPos  =  str.indexOf('  ',  DEC_POP);  [CE]  unclosed  character  literal  [FE]        NumberFormatException      [CONTEXT]      public  static  Number  createNumber(String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {  return  null;  }      [BUGGY]  int  decPos  =  str.indexOf('  ',  DEC_POP);  [BUGGY]      if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(     "A  blank  string  is  not  a  valid  number     ");  }  if  (str.startsWith(     "--     "))  {  return  null;  }  if  (str.startsWith(     "0x     ")  ||  str.startsWith(     "-0x     ")  ||  str.startsWith(     "0X     ")  ||  str.startsWith(     "-0X     "))  {  int  hexDigits  =  str.length()  -  2;  //  drop  0x  if  (str.startsWith(     "-     "))  {  //  drop  -  hexDigits--;  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  	projects/Lang7/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.5773502691896258	449	449	1	replace	int  decPos  =  str.indexOf('  ',  DEC_POP);	          int    decPos    =    str.indexOf('    ');    int    decPos    =    str.indexOf('    ');    	non-compiled	[CE]  unclosed  character  literal	47	None	replace
281	[BUG]  [BUGGY]  int  decPos  =  str.indexOf('  ',  decPos);  [CE]  unclosed  character  literal  [FE]          NumberFormatException      [CONTEXT]      public  static  Number  createNumber(String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {  return  null;  }      [BUGGY]  int  decPos  =  str.indexOf('  ',  decPos);  [BUGGY]      if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(     "A  blank  string  is  not  a  valid  number     ");  }  if  (str.startsWith(     "--     "))  {  return  null;  }  if  (str.startsWith(     "0x     ")  ||  str.startsWith(     "-0x     ")  ||  str.startsWith(     "0X     ")  ||  str.startsWith(     "-0X     "))  {  int  hexDigits  =  str.length()  -  2;  //  drop  0x  if  (str.startsWith(     "-     "))  {  //  drop  -  hexDigits--;  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  	projects/Lang7/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.5773502691896258	449	449	1	replace	int  decPos  =  str.indexOf('  ',  decPos);	          int    decPos    =    str.indexOf('    ');    int    decPos    =    str.indexOf('    ');    	non-compiled	[CE]  unclosed  character  literal	47	None	replace
282	[BUG]  [BUGGY]  int  decPos  =  str.length()  -  2;  String  decPos  =  str.length();  [CE]  unclosed  character  literal  [FE]        NumberFormatException      [CONTEXT]      public  static  Number  createNumber(String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {  return  null;  }      [BUGGY]  int  decPos  =  str.length()  -  2;  String  decPos  =  str.length();  [BUGGY]      if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(     "A  blank  string  is  not  a  valid  number     ");  }  if  (str.startsWith(     "--     "))  {  return  null;  }  if  (str.startsWith(     "0x     ")  ||  str.startsWith(     "-0x     ")  ||  str.startsWith(     "0X     ")  ||  str.startsWith(     "-0X     "))  {  int  hexDigits  =  str.length()  -  2;  //  drop  0x  if  (str.startsWith(     "-     "))  {  //  drop  -  hexDigits--;  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  	projects/Lang7/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.5773502691896258	449	449	1	replace	int  decPos  =  str.length()  -  2;  String  decPos  =  str.length();	          int    decPos    =    str.length();    char    decPos    =    str.length();    	non-compiled	[CE]  unclosed  character  literal	81	None	replace
283	[BUG]  [BUGGY]  int  str  =  str.indexOf('.',  dec  +  1);  [CE]  unclosed  character  literal  [FE]                AssertionError      [CONTEXT]      public  static  Number  createNumber(String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {  return  null;  }      [BUGGY]  int  str  =  str.indexOf('.',  dec  +  1);  [BUGGY]      if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(     "A  blank  string  is  not  a  valid  number     ");  }  if  (str.startsWith(     "--     "))  {  return  null;  }  if  (str.startsWith(     "0x     ")  ||  str.startsWith(     "-0x     ")  ||  str.startsWith(     "0X     ")  ||  str.startsWith(     "-0X     "))  {  int  hexDigits  =  str.length()  -  2;  //  drop  0x  if  (str.startsWith(     "-     "))  {  //  drop  -  hexDigits--;  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  	projects/Lang7/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.5773502691896258	449	449	1	replace	int  str  =  str.indexOf('.',  dec  +  1);	  int    str    =    str.indexOf('.',    dec);    	non-compiled	[CE]  unclosed  character  literal	87	None	replace
284	[BUG]  [BUGGY]  int  str  =  str.indexOf('.',  DEC);  [CE]  unclosed  character  literal  [FE]                  AssertionError      [CONTEXT]      public  static  Number  createNumber(String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {  return  null;  }      [BUGGY]  int  str  =  str.indexOf('.',  DEC);  [BUGGY]      if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(     "A  blank  string  is  not  a  valid  number     ");  }  if  (str.startsWith(     "--     "))  {  return  null;  }  if  (str.startsWith(     "0x     ")  ||  str.startsWith(     "-0x     ")  ||  str.startsWith(     "0X     ")  ||  str.startsWith(     "-0X     "))  {  int  hexDigits  =  str.length()  -  2;  //  drop  0x  if  (str.startsWith(     "-     "))  {  //  drop  -  hexDigits--;  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  	projects/Lang7/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.5773502691896258	449	449	1	replace	int  str  =  str.indexOf('.',  DEC);	  int    str    =    str.indexOf('.',    dec);    	non-compiled	[CE]  unclosed  character  literal	87	None	replace
285	[BUG]  [BUGGY]  int  decPos  =  str.lastIndexOf('  ',  16);  [CE]  unclosed  character  literal  [FE]    NumberFormatException    [CONTEXT]      public  static  Number  createNumber(String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {  return  null;  }      [BUGGY]  int  decPos  =  str.lastIndexOf('  ',  16);  [BUGGY]      if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(     "A  blank  string  is  not  a  valid  number     ");  }  if  (str.startsWith(     "--     "))  {  return  null;  }  if  (str.startsWith(     "0x     ")  ||  str.startsWith(     "-0x     ")  ||  str.startsWith(     "0X     ")  ||  str.startsWith(     "-0X     "))  {  int  hexDigits  =  str.length()  -  2;  //  drop  0x  if  (str.startsWith(     "-     "))  {  //  drop  -  hexDigits--;  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  	projects/Lang7/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.5773502691896258	449	449	1	replace	int  decPos  =  str.lastIndexOf('  ',  16);	  int    decPos    =    str.lastIndexOf('    ');    	non-compiled	[CE]  unclosed  character  literal	2	None	replace
