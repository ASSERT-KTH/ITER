bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  Integer  hexDigits  =  createInteger(str.length());  [CE]  ')'  expected  [FE]        AssertionError    [CONTEXT]    public  static  Number  createNumber(String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {  return  null;  }  if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(   "A  blank  string  is  not  a  valid  number   ");  }  if  (str.startsWith(   "--   "))  {    [BUGGY]  Integer  hexDigits  =  createInteger(str.length());  [BUGGY]    return  null;  }  if  (str.startsWith(   "0x   ")  ||  str.startsWith(   "-0x   ")  ||  str.startsWith(   "0X   ")  ||  str.startsWith(   "-0X   "))  {  int  hexDigits  =  str.length()  -  2;  //  drop  0x  if  (str.startsWith(   "-   "))  {  //  drop  -  hexDigits--;  }  if  (hexDigits  >  8)  {  //  too  many  for  an  int  return  createLong(str);  }  return  createInteger(str);  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  	projects/Lang7/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	453	453	1	replace	Integer  hexDigits  =  createInteger(str.length());	      Integer    hexDigits    =    createInteger(str);    	non-compiled	[CE]  ')'  expected	11	None	replace
2	[BUG]  [BUGGY]  Integer  hexDigits  =  createInteger(0);  [CE]  ')'  expected  [FE]          AssertionError    [CONTEXT]    public  static  Number  createNumber(String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {  return  null;  }  if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(   "A  blank  string  is  not  a  valid  number   ");  }  if  (str.startsWith(   "--   "))  {    [BUGGY]  Integer  hexDigits  =  createInteger(0);  [BUGGY]    return  null;  }  if  (str.startsWith(   "0x   ")  ||  str.startsWith(   "-0x   ")  ||  str.startsWith(   "0X   ")  ||  str.startsWith(   "-0X   "))  {  int  hexDigits  =  str.length()  -  2;  //  drop  0x  if  (str.startsWith(   "-   "))  {  //  drop  -  hexDigits--;  }  if  (hexDigits  >  8)  {  //  too  many  for  an  int  return  createLong(str);  }  return  createInteger(str);  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  	projects/Lang7/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	453	453	1	replace	Integer  hexDigits  =  createInteger(0);	      Integer    hexDigits    =    createInteger(str);    	non-compiled	[CE]  ')'  expected	11	None	replace
3	[BUG]  [BUGGY]  Integer  hexDigits  =  createLong(str);  [CE]  ')'  expected  [FE]            AssertionError    [CONTEXT]    public  static  Number  createNumber(String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {  return  null;  }  if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(   "A  blank  string  is  not  a  valid  number   ");  }  if  (str.startsWith(   "--   "))  {    [BUGGY]  Integer  hexDigits  =  createLong(str);  [BUGGY]    return  null;  }  if  (str.startsWith(   "0x   ")  ||  str.startsWith(   "-0x   ")  ||  str.startsWith(   "0X   ")  ||  str.startsWith(   "-0X   "))  {  int  hexDigits  =  str.length()  -  2;  //  drop  0x  if  (str.startsWith(   "-   "))  {  //  drop  -  hexDigits--;  }  if  (hexDigits  >  8)  {  //  too  many  for  an  int  return  createLong(str);  }  return  createInteger(str);  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  	projects/Lang7/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	453	453	1	replace	Integer  hexDigits  =  createLong(str);	      Integer    hexDigits    =    createInteger(str);    	non-compiled	[CE]  ')'  expected	11	None	replace
4	[BUG]  [BUGGY]  String  str  =  str.substring(0,  str.length());  [CE]  ')'  expected  [FE]        AssertionError    [CONTEXT]    public  static  Number  createNumber(String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {  return  null;  }  if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(   "A  blank  string  is  not  a  valid  number   ");  }  if  (str.startsWith(   "--   "))  {    [BUGGY]  String  str  =  str.substring(0,  str.length());  [BUGGY]    return  null;  }  if  (str.startsWith(   "0x   ")  ||  str.startsWith(   "-0x   ")  ||  str.startsWith(   "0X   ")  ||  str.startsWith(   "-0X   "))  {  int  hexDigits  =  str.length()  -  2;  //  drop  0x  if  (str.startsWith(   "-   "))  {  //  drop  -  hexDigits--;  }  if  (hexDigits  >  8)  {  //  too  many  for  an  int  return  createLong(str);  }  return  createInteger(str);  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  	projects/Lang7/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	453	453	1	replace	String  str  =  str.substring(0,  str.length());	      String    str    =    str.substring(0,    str.length()    -    2);    	non-compiled	[CE]  ')'  expected	1	None	replace
5	[BUG]  [BUGGY]  String  str  =  str.substring(0,  str.length();  [CE]  ')'  expected  [FE]          AssertionError    [CONTEXT]    public  static  Number  createNumber(String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {  return  null;  }  if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(   "A  blank  string  is  not  a  valid  number   ");  }  if  (str.startsWith(   "--   "))  {    [BUGGY]  String  str  =  str.substring(0,  str.length();  [BUGGY]    return  null;  }  if  (str.startsWith(   "0x   ")  ||  str.startsWith(   "-0x   ")  ||  str.startsWith(   "0X   ")  ||  str.startsWith(   "-0X   "))  {  int  hexDigits  =  str.length()  -  2;  //  drop  0x  if  (str.startsWith(   "-   "))  {  //  drop  -  hexDigits--;  }  if  (hexDigits  >  8)  {  //  too  many  for  an  int  return  createLong(str);  }  return  createInteger(str);  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  	projects/Lang7/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	453	453	1	replace	String  str  =  str.substring(0,  str.length();	      String    str    =    str.substring(0,    str.length()    -    2);    	non-compiled	[CE]  ')'  expected	1	None	replace
6	[BUG]  [BUGGY]  String  str  =  str.substring(0,  str.length()  +  2);  [CE]  ')'  expected  [FE]            AssertionError    [CONTEXT]    public  static  Number  createNumber(String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {  return  null;  }  if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(   "A  blank  string  is  not  a  valid  number   ");  }  if  (str.startsWith(   "--   "))  {    [BUGGY]  String  str  =  str.substring(0,  str.length()  +  2);  [BUGGY]    return  null;  }  if  (str.startsWith(   "0x   ")  ||  str.startsWith(   "-0x   ")  ||  str.startsWith(   "0X   ")  ||  str.startsWith(   "-0X   "))  {  int  hexDigits  =  str.length()  -  2;  //  drop  0x  if  (str.startsWith(   "-   "))  {  //  drop  -  hexDigits--;  }  if  (hexDigits  >  8)  {  //  too  many  for  an  int  return  createLong(str);  }  return  createInteger(str);  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  	projects/Lang7/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	453	453	1	replace	String  str  =  str.substring(0,  str.length()  +  2);	      String    str    =    str.substring(0,    str.length()    -    2);    	non-compiled	[CE]  ')'  expected	1	None	replace
7	[BUG]  [BUGGY]  throw  new  NumberFormatException( "A  blank  string  is  not  a  valid  number. ");  [CE]  ')'  expected  [FE]          AssertionError    [CONTEXT]    public  static  Number  createNumber(String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {  return  null;  }  if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(   "A  blank  string  is  not  a  valid  number   ");  }  if  (str.startsWith(   "--   "))  {    [BUGGY]  throw  new  NumberFormatException( "A  blank  string  is  not  a  valid  number. ");  [BUGGY]    }  if  (str.startsWith(   "0x   ")  ||  str.startsWith(   "-0x   ")  ||  str.startsWith(   "0X   ")  ||  str.startsWith(   "-0X   "))  {  int  hexDigits  =  str.length()  -  2;  //  drop  0x  if  (str.startsWith(   "-   "))  {  //  drop  -  hexDigits--;  }  if  (hexDigits  >  8)  {  //  too  many  for  an  int  return  createLong(str);  }  return  createInteger(str);  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  	projects/Lang7/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	453	453	1	replace	throw  new  NumberFormatException( "A  blank  string  is  not  a  valid  number. ");	  throw    new    NumberFormatException(   "A    blank    string    is    not    a    valid    number   ");    	non-compiled	[CE]  ')'  expected	6	None	replace
8	[BUG]  [BUGGY]  throw  new  NumberFormatException( "A  blank  string  is  not  a  valid  number ",  str);  [CE]  ')'  expected  [FE]            AssertionError    [CONTEXT]    public  static  Number  createNumber(String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {  return  null;  }  if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(   "A  blank  string  is  not  a  valid  number   ");  }  if  (str.startsWith(   "--   "))  {    [BUGGY]  throw  new  NumberFormatException( "A  blank  string  is  not  a  valid  number ",  str);  [BUGGY]    }  if  (str.startsWith(   "0x   ")  ||  str.startsWith(   "-0x   ")  ||  str.startsWith(   "0X   ")  ||  str.startsWith(   "-0X   "))  {  int  hexDigits  =  str.length()  -  2;  //  drop  0x  if  (str.startsWith(   "-   "))  {  //  drop  -  hexDigits--;  }  if  (hexDigits  >  8)  {  //  too  many  for  an  int  return  createLong(str);  }  return  createInteger(str);  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  	projects/Lang7/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	453	453	1	replace	throw  new  NumberFormatException( "A  blank  string  is  not  a  valid  number ",  str);	  throw    new    NumberFormatException(   "A    blank    string    is    not    a    valid    number   ");    	non-compiled	[CE]  ')'  expected	6	None	replace
9	[BUG]  [BUGGY]  throw  new  NumberFormatException( "A  blank  string  is  not  a  valid  number: "  +  str);  [CE]  ')'  expected  [FE]              AssertionError    [CONTEXT]    public  static  Number  createNumber(String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {  return  null;  }  if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(   "A  blank  string  is  not  a  valid  number   ");  }  if  (str.startsWith(   "--   "))  {    [BUGGY]  throw  new  NumberFormatException( "A  blank  string  is  not  a  valid  number: "  +  str);  [BUGGY]    }  if  (str.startsWith(   "0x   ")  ||  str.startsWith(   "-0x   ")  ||  str.startsWith(   "0X   ")  ||  str.startsWith(   "-0X   "))  {  int  hexDigits  =  str.length()  -  2;  //  drop  0x  if  (str.startsWith(   "-   "))  {  //  drop  -  hexDigits--;  }  if  (hexDigits  >  8)  {  //  too  many  for  an  int  return  createLong(str);  }  return  createInteger(str);  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  	projects/Lang7/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	453	453	1	replace	throw  new  NumberFormatException( "A  blank  string  is  not  a  valid  number: "  +  str);	  throw    new    NumberFormatException(   "A    blank    string    is    not    a    valid    number   ");    	non-compiled	[CE]  ')'  expected	6	None	replace
10	[BUG]  [BUGGY]  return(null  ==  str.length())?  null  :  new  Long(str.length());  [CE]  ')'  expected  [FE]        AssertionError    [CONTEXT]    public  static  Number  createNumber(String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {  return  null;  }  if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(   "A  blank  string  is  not  a  valid  number   ");  }  if  (str.startsWith(   "--   "))  {    [BUGGY]  return(null  ==  str.length())?  null  :  new  Long(str.length());  [BUGGY]    }  if  (str.startsWith(   "0x   ")  ||  str.startsWith(   "-0x   ")  ||  str.startsWith(   "0X   ")  ||  str.startsWith(   "-0X   "))  {  int  hexDigits  =  str.length()  -  2;  //  drop  0x  if  (str.startsWith(   "-   "))  {  //  drop  -  hexDigits--;  }  if  (hexDigits  >  8)  {  //  too  many  for  an  int  return  createLong(str);  }  return  createInteger(str);  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  	projects/Lang7/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	453	453	1	replace	return(null  ==  str.length())?  null  :  new  Long(str.length());	  return    this;    	non-compiled	[CE]  ')'  expected	5	None	replace
11	[BUG]  [BUGGY]  return(null  ==  str.length())?  null  :  new  Number(str.length());  [CE]  ')'  expected  [FE]          AssertionError    [CONTEXT]    public  static  Number  createNumber(String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {  return  null;  }  if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(   "A  blank  string  is  not  a  valid  number   ");  }  if  (str.startsWith(   "--   "))  {    [BUGGY]  return(null  ==  str.length())?  null  :  new  Number(str.length());  [BUGGY]    }  if  (str.startsWith(   "0x   ")  ||  str.startsWith(   "-0x   ")  ||  str.startsWith(   "0X   ")  ||  str.startsWith(   "-0X   "))  {  int  hexDigits  =  str.length()  -  2;  //  drop  0x  if  (str.startsWith(   "-   "))  {  //  drop  -  hexDigits--;  }  if  (hexDigits  >  8)  {  //  too  many  for  an  int  return  createLong(str);  }  return  createInteger(str);  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  	projects/Lang7/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	453	453	1	replace	return(null  ==  str.length())?  null  :  new  Number(str.length());	  return    this;    	non-compiled	[CE]  ')'  expected	5	None	replace
12	[BUG]  [BUGGY]  return  new  Long(hexDigits);  [CE]  ')'  expected  [FE]        AssertionError    [CONTEXT]    public  static  Number  createNumber(String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {  return  null;  }  if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(   "A  blank  string  is  not  a  valid  number   ");  }  if  (str.startsWith(   "--   "))  {    [BUGGY]  return  new  Long(hexDigits);  [BUGGY]    }  if  (str.startsWith(   "0x   ")  ||  str.startsWith(   "-0x   ")  ||  str.startsWith(   "0X   ")  ||  str.startsWith(   "-0X   "))  {  int  hexDigits  =  str.length()  -  2;  //  drop  0x  if  (str.startsWith(   "-   "))  {  //  drop  -  hexDigits--;  }  if  (hexDigits  >  8)  {  //  too  many  for  an  int  return  createLong(str);  }  return  createInteger(str);  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  	projects/Lang7/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	453	453	1	replace	return  new  Long(hexDigits);	  return    new    Long(str);    	non-compiled	[CE]  ')'  expected	9	None	replace
13	[BUG]  [BUGGY]  return  new  Long(str  +  1);  [CE]  ')'  expected  [FE]          AssertionError    [CONTEXT]    public  static  Number  createNumber(String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {  return  null;  }  if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(   "A  blank  string  is  not  a  valid  number   ");  }  if  (str.startsWith(   "--   "))  {    [BUGGY]  return  new  Long(str  +  1);  [BUGGY]    }  if  (str.startsWith(   "0x   ")  ||  str.startsWith(   "-0x   ")  ||  str.startsWith(   "0X   ")  ||  str.startsWith(   "-0X   "))  {  int  hexDigits  =  str.length()  -  2;  //  drop  0x  if  (str.startsWith(   "-   "))  {  //  drop  -  hexDigits--;  }  if  (hexDigits  >  8)  {  //  too  many  for  an  int  return  createLong(str);  }  return  createInteger(str);  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  	projects/Lang7/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	453	453	1	replace	return  new  Long(str  +  1);	  return    new    Long(str);    	non-compiled	[CE]  ')'  expected	9	None	replace
14	[BUG]  [BUGGY]  int  hexDigits  =  str.length()  -  2;  [CE]  ')'  expected  [FE]          AssertionError    [CONTEXT]    public  static  Number  createNumber(String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {  return  null;  }  if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(   "A  blank  string  is  not  a  valid  number   ");  }  if  (str.startsWith(   "--   "))  {    [BUGGY]  int  hexDigits  =  str.length()  -  2;  [BUGGY]    return  null;  }  if  (str.startsWith(   "0x   ")  ||  str.startsWith(   "-0x   ")  ||  str.startsWith(   "0X   ")  ||  str.startsWith(   "-0X   "))  {  int  hexDigits  =  str.length()  -  2;  //  drop  0x  if  (str.startsWith(   "-   "))  {  //  drop  -  hexDigits--;  }  if  (hexDigits  >  8)  {  //  too  many  for  an  int  return  createLong(str);  }  return  createInteger(str);  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  	projects/Lang7/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	453	453	1	replace	int  hexDigits  =  str.length()  -  2;	      int    hexDigits    =    str.length();    	non-compiled	[CE]  ')'  expected	2	None	replace
15	[BUG]  [BUGGY]  int  hexDigits  =  str.length()  +  2;  [CE]  ')'  expected  [FE]            AssertionError    [CONTEXT]    public  static  Number  createNumber(String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {  return  null;  }  if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(   "A  blank  string  is  not  a  valid  number   ");  }  if  (str.startsWith(   "--   "))  {    [BUGGY]  int  hexDigits  =  str.length()  +  2;  [BUGGY]    return  null;  }  if  (str.startsWith(   "0x   ")  ||  str.startsWith(   "-0x   ")  ||  str.startsWith(   "0X   ")  ||  str.startsWith(   "-0X   "))  {  int  hexDigits  =  str.length()  -  2;  //  drop  0x  if  (str.startsWith(   "-   "))  {  //  drop  -  hexDigits--;  }  if  (hexDigits  >  8)  {  //  too  many  for  an  int  return  createLong(str);  }  return  createInteger(str);  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  	projects/Lang7/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	453	453	1	replace	int  hexDigits  =  str.length()  +  2;	      int    hexDigits    =    str.length();    	non-compiled	[CE]  ')'  expected	2	None	replace
16	[BUG]  [BUGGY]  Integer  hexDigits  =  str.length();  [CE]  ')'  expected  [FE]              AssertionError    [CONTEXT]    public  static  Number  createNumber(String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {  return  null;  }  if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(   "A  blank  string  is  not  a  valid  number   ");  }  if  (str.startsWith(   "--   "))  {    [BUGGY]  Integer  hexDigits  =  str.length();  [BUGGY]    return  null;  }  if  (str.startsWith(   "0x   ")  ||  str.startsWith(   "-0x   ")  ||  str.startsWith(   "0X   ")  ||  str.startsWith(   "-0X   "))  {  int  hexDigits  =  str.length()  -  2;  //  drop  0x  if  (str.startsWith(   "-   "))  {  //  drop  -  hexDigits--;  }  if  (hexDigits  >  8)  {  //  too  many  for  an  int  return  createLong(str);  }  return  createInteger(str);  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  	projects/Lang7/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	453	453	1	replace	Integer  hexDigits  =  str.length();	      int    hexDigits    =    str.length();    	non-compiled	[CE]  ')'  expected	2	None	replace
17	[BUG]  [BUGGY]  int  hexDigits  =  str.length()  *  2;  [CE]  ')'  expected  [FE]                AssertionError    [CONTEXT]    public  static  Number  createNumber(String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {  return  null;  }  if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(   "A  blank  string  is  not  a  valid  number   ");  }  if  (str.startsWith(   "--   "))  {    [BUGGY]  int  hexDigits  =  str.length()  *  2;  [BUGGY]    return  null;  }  if  (str.startsWith(   "0x   ")  ||  str.startsWith(   "-0x   ")  ||  str.startsWith(   "0X   ")  ||  str.startsWith(   "-0X   "))  {  int  hexDigits  =  str.length()  -  2;  //  drop  0x  if  (str.startsWith(   "-   "))  {  //  drop  -  hexDigits--;  }  if  (hexDigits  >  8)  {  //  too  many  for  an  int  return  createLong(str);  }  return  createInteger(str);  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  	projects/Lang7/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	453	453	1	replace	int  hexDigits  =  str.length()  *  2;	      int    hexDigits    =    str.length();    	non-compiled	[CE]  ')'  expected	2	None	replace
18	[BUG]  [BUGGY]  return  new  Integer(0);  [CE]  ')'  expected  [FE]        AssertionError    [CONTEXT]    public  static  Number  createNumber(String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {  return  null;  }  if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(   "A  blank  string  is  not  a  valid  number   ");  }  if  (str.startsWith(   "--   "))  {    [BUGGY]  return  new  Integer(0);  [BUGGY]    }  if  (str.startsWith(   "0x   ")  ||  str.startsWith(   "-0x   ")  ||  str.startsWith(   "0X   ")  ||  str.startsWith(   "-0X   "))  {  int  hexDigits  =  str.length()  -  2;  //  drop  0x  if  (str.startsWith(   "-   "))  {  //  drop  -  hexDigits--;  }  if  (hexDigits  >  8)  {  //  too  many  for  an  int  return  createLong(str);  }  return  createInteger(str);  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  	projects/Lang7/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	453	453	1	replace	return  new  Integer(0);	  return    new    Integer(str);    	non-compiled	[CE]  ')'  expected	12	None	replace
19	[BUG]  [BUGGY]  return  new  Double(str);  [CE]  ')'  expected  [FE]          AssertionError    [CONTEXT]    public  static  Number  createNumber(String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {  return  null;  }  if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(   "A  blank  string  is  not  a  valid  number   ");  }  if  (str.startsWith(   "--   "))  {    [BUGGY]  return  new  Double(str);  [BUGGY]    }  if  (str.startsWith(   "0x   ")  ||  str.startsWith(   "-0x   ")  ||  str.startsWith(   "0X   ")  ||  str.startsWith(   "-0X   "))  {  int  hexDigits  =  str.length()  -  2;  //  drop  0x  if  (str.startsWith(   "-   "))  {  //  drop  -  hexDigits--;  }  if  (hexDigits  >  8)  {  //  too  many  for  an  int  return  createLong(str);  }  return  createInteger(str);  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  	projects/Lang7/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	453	453	1	replace	return  new  Double(str);	  return    new    Integer(str);    	non-compiled	[CE]  ')'  expected	12	None	replace
20	[BUG]  [BUGGY]  return  new  Integer(str.length());  [CE]  ')'  expected  [FE]            AssertionError    [CONTEXT]    public  static  Number  createNumber(String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {  return  null;  }  if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(   "A  blank  string  is  not  a  valid  number   ");  }  if  (str.startsWith(   "--   "))  {    [BUGGY]  return  new  Integer(str.length());  [BUGGY]    }  if  (str.startsWith(   "0x   ")  ||  str.startsWith(   "-0x   ")  ||  str.startsWith(   "0X   ")  ||  str.startsWith(   "-0X   "))  {  int  hexDigits  =  str.length()  -  2;  //  drop  0x  if  (str.startsWith(   "-   "))  {  //  drop  -  hexDigits--;  }  if  (hexDigits  >  8)  {  //  too  many  for  an  int  return  createLong(str);  }  return  createInteger(str);  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  	projects/Lang7/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	453	453	1	replace	return  new  Integer(str.length());	  return    new    Integer(str);    	non-compiled	[CE]  ')'  expected	12	None	replace
21	[BUG]  [BUGGY]  int  decPos  =  str.length()  -  2;  [CE]  ')'  expected  [FE]        AssertionError    [CONTEXT]    public  static  Number  createNumber(String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {  return  null;  }  if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(   "A  blank  string  is  not  a  valid  number   ");  }  if  (str.startsWith(   "--   "))  {    [BUGGY]  int  decPos  =  str.length()  -  2;  [BUGGY]    return  null;  }  if  (str.startsWith(   "0x   ")  ||  str.startsWith(   "-0x   ")  ||  str.startsWith(   "0X   ")  ||  str.startsWith(   "-0X   "))  {  int  hexDigits  =  str.length()  -  2;  //  drop  0x  if  (str.startsWith(   "-   "))  {  //  drop  -  hexDigits--;  }  if  (hexDigits  >  8)  {  //  too  many  for  an  int  return  createLong(str);  }  return  createInteger(str);  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  	projects/Lang7/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	453	453	1	replace	int  decPos  =  str.length()  -  2;	      int    decPos    =    str.length();    	non-compiled	[CE]  ')'  expected	13	None	replace
22	[BUG]  [BUGGY]  int  decPos  =  str.length()  +  2;  [CE]  ')'  expected  [FE]          AssertionError    [CONTEXT]    public  static  Number  createNumber(String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {  return  null;  }  if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(   "A  blank  string  is  not  a  valid  number   ");  }  if  (str.startsWith(   "--   "))  {    [BUGGY]  int  decPos  =  str.length()  +  2;  [BUGGY]    return  null;  }  if  (str.startsWith(   "0x   ")  ||  str.startsWith(   "-0x   ")  ||  str.startsWith(   "0X   ")  ||  str.startsWith(   "-0X   "))  {  int  hexDigits  =  str.length()  -  2;  //  drop  0x  if  (str.startsWith(   "-   "))  {  //  drop  -  hexDigits--;  }  if  (hexDigits  >  8)  {  //  too  many  for  an  int  return  createLong(str);  }  return  createInteger(str);  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  	projects/Lang7/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	453	453	1	replace	int  decPos  =  str.length()  +  2;	      int    decPos    =    str.length();    	non-compiled	[CE]  ')'  expected	13	None	replace
23	[BUG]  [BUGGY]  int  decPos  =  str.length()  +  1;  [CE]  ')'  expected  [FE]            AssertionError    [CONTEXT]    public  static  Number  createNumber(String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {  return  null;  }  if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(   "A  blank  string  is  not  a  valid  number   ");  }  if  (str.startsWith(   "--   "))  {    [BUGGY]  int  decPos  =  str.length()  +  1;  [BUGGY]    return  null;  }  if  (str.startsWith(   "0x   ")  ||  str.startsWith(   "-0x   ")  ||  str.startsWith(   "0X   ")  ||  str.startsWith(   "-0X   "))  {  int  hexDigits  =  str.length()  -  2;  //  drop  0x  if  (str.startsWith(   "-   "))  {  //  drop  -  hexDigits--;  }  if  (hexDigits  >  8)  {  //  too  many  for  an  int  return  createLong(str);  }  return  createInteger(str);  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  	projects/Lang7/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	453	453	1	replace	int  decPos  =  str.length()  +  1;	      int    decPos    =    str.length();    	non-compiled	[CE]  ')'  expected	13	None	replace
24	[BUG]  [BUGGY]  int  decPos  =  str.length()  -  1;  [CE]  ')'  expected  [FE]              AssertionError    [CONTEXT]    public  static  Number  createNumber(String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {  return  null;  }  if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(   "A  blank  string  is  not  a  valid  number   ");  }  if  (str.startsWith(   "--   "))  {    [BUGGY]  int  decPos  =  str.length()  -  1;  [BUGGY]    return  null;  }  if  (str.startsWith(   "0x   ")  ||  str.startsWith(   "-0x   ")  ||  str.startsWith(   "0X   ")  ||  str.startsWith(   "-0X   "))  {  int  hexDigits  =  str.length()  -  2;  //  drop  0x  if  (str.startsWith(   "-   "))  {  //  drop  -  hexDigits--;  }  if  (hexDigits  >  8)  {  //  too  many  for  an  int  return  createLong(str);  }  return  createInteger(str);  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  	projects/Lang7/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	453	453	1	replace	int  decPos  =  str.length()  -  1;	      int    decPos    =    str.length();    	non-compiled	[CE]  ')'  expected	13	None	replace
25	[BUG]  [BUGGY]  Integer  str  =  createInteger(str.length());  [CE]  ')'  expected  [FE]              AssertionError    [CONTEXT]    public  static  Number  createNumber(String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {  return  null;  }  if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(   "A  blank  string  is  not  a  valid  number   ");  }  if  (str.startsWith(   "--   "))  {    [BUGGY]  Integer  str  =  createInteger(str.length());  [BUGGY]    return  null;  }  if  (str.startsWith(   "0x   ")  ||  str.startsWith(   "-0x   ")  ||  str.startsWith(   "0X   ")  ||  str.startsWith(   "-0X   "))  {  int  hexDigits  =  str.length()  -  2;  //  drop  0x  if  (str.startsWith(   "-   "))  {  //  drop  -  hexDigits--;  }  if  (hexDigits  >  8)  {  //  too  many  for  an  int  return  createLong(str);  }  return  createInteger(str);  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  	projects/Lang7/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	453	453	1	replace	Integer  str  =  createInteger(str.length());	      Integer    str    =    createInteger(str);    	non-compiled	[CE]  ')'  expected	4	None	replace
26	[BUG]  [BUGGY]  Integer  str  =  createInteger(str.substring(1));  [CE]  ')'  expected  [FE]                AssertionError    [CONTEXT]    public  static  Number  createNumber(String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {  return  null;  }  if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(   "A  blank  string  is  not  a  valid  number   ");  }  if  (str.startsWith(   "--   "))  {    [BUGGY]  Integer  str  =  createInteger(str.substring(1));  [BUGGY]    return  null;  }  if  (str.startsWith(   "0x   ")  ||  str.startsWith(   "-0x   ")  ||  str.startsWith(   "0X   ")  ||  str.startsWith(   "-0X   "))  {  int  hexDigits  =  str.length()  -  2;  //  drop  0x  if  (str.startsWith(   "-   "))  {  //  drop  -  hexDigits--;  }  if  (hexDigits  >  8)  {  //  too  many  for  an  int  return  createLong(str);  }  return  createInteger(str);  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  	projects/Lang7/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	453	453	1	replace	Integer  str  =  createInteger(str.substring(1));	      Integer    str    =    createInteger(str);    	non-compiled	[CE]  ')'  expected	4	None	replace
27	[BUG]  [BUGGY]  Integer  str  =  createInteger(0);  [CE]  ')'  expected  [FE]                  AssertionError    [CONTEXT]    public  static  Number  createNumber(String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {  return  null;  }  if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(   "A  blank  string  is  not  a  valid  number   ");  }  if  (str.startsWith(   "--   "))  {    [BUGGY]  Integer  str  =  createInteger(0);  [BUGGY]    return  null;  }  if  (str.startsWith(   "0x   ")  ||  str.startsWith(   "-0x   ")  ||  str.startsWith(   "0X   ")  ||  str.startsWith(   "-0X   "))  {  int  hexDigits  =  str.length()  -  2;  //  drop  0x  if  (str.startsWith(   "-   "))  {  //  drop  -  hexDigits--;  }  if  (hexDigits  >  8)  {  //  too  many  for  an  int  return  createLong(str);  }  return  createInteger(str);  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  	projects/Lang7/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	453	453	1	replace	Integer  str  =  createInteger(0);	      Integer    str    =    createInteger(str);    	non-compiled	[CE]  ')'  expected	4	None	replace
28	[BUG]  [BUGGY]  Integer  str  =  createInteger(str.intValue());  [CE]  ')'  expected  [FE]                    AssertionError    [CONTEXT]    public  static  Number  createNumber(String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {  return  null;  }  if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(   "A  blank  string  is  not  a  valid  number   ");  }  if  (str.startsWith(   "--   "))  {    [BUGGY]  Integer  str  =  createInteger(str.intValue());  [BUGGY]    return  null;  }  if  (str.startsWith(   "0x   ")  ||  str.startsWith(   "-0x   ")  ||  str.startsWith(   "0X   ")  ||  str.startsWith(   "-0X   "))  {  int  hexDigits  =  str.length()  -  2;  //  drop  0x  if  (str.startsWith(   "-   "))  {  //  drop  -  hexDigits--;  }  if  (hexDigits  >  8)  {  //  too  many  for  an  int  return  createLong(str);  }  return  createInteger(str);  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  	projects/Lang7/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	453	453	1	replace	Integer  str  =  createInteger(str.intValue());	      Integer    str    =    createInteger(str);    	non-compiled	[CE]  ')'  expected	4	None	replace
29	[BUG]  [BUGGY]  return  new  Number(str.substring(0,  str.length()));  [CE]  ')'  expected  [FE]              AssertionError    [CONTEXT]    public  static  Number  createNumber(String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {  return  null;  }  if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(   "A  blank  string  is  not  a  valid  number   ");  }  if  (str.startsWith(   "--   "))  {    [BUGGY]  return  new  Number(str.substring(0,  str.length()));  [BUGGY]    }  if  (str.startsWith(   "0x   ")  ||  str.startsWith(   "-0x   ")  ||  str.startsWith(   "0X   ")  ||  str.startsWith(   "-0X   "))  {  int  hexDigits  =  str.length()  -  2;  //  drop  0x  if  (str.startsWith(   "-   "))  {  //  drop  -  hexDigits--;  }  if  (hexDigits  >  8)  {  //  too  many  for  an  int  return  createLong(str);  }  return  createInteger(str);  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  	projects/Lang7/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	453	453	1	replace	return  new  Number(str.substring(0,  str.length()));	  return    new    Number(str.substring(0,    str.length()    -    1));    	non-compiled	[CE]  ')'  expected	8	None	replace
30	[BUG]  [BUGGY]  return  new  Number(str.substring(0,  str.length()  +  1));  [CE]  [FE]                AssertionError    [CONTEXT]    public  static  Number  createNumber(String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {  return  null;  }  if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(   "A  blank  string  is  not  a  valid  number   ");  }  if  (str.startsWith(   "--   "))  {    [BUGGY]  return  new  Number(str.substring(0,  str.length()  +  1));  [BUGGY]    }  if  (str.startsWith(   "0x   ")  ||  str.startsWith(   "-0x   ")  ||  str.startsWith(   "0X   ")  ||  str.startsWith(   "-0X   "))  {  int  hexDigits  =  str.length()  -  2;  //  drop  0x  if  (str.startsWith(   "-   "))  {  //  drop  -  hexDigits--;  }  if  (hexDigits  >  8)  {  //  too  many  for  an  int  return  createLong(str);  }  return  createInteger(str);  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  	projects/Lang7/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	453	453	1	replace	return  new  Number(str.substring(0,  str.length()  +  1));	  return    new    Number(str.substring(0,    str.length()    -    1));    	non-compiled	[CE]  	8	None	replace
31	[BUG]  [BUGGY]  return  new  Number(str.substring(0,  str.length()  -  2));  [CE]  ')'  expected  [FE]                  AssertionError    [CONTEXT]    public  static  Number  createNumber(String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {  return  null;  }  if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(   "A  blank  string  is  not  a  valid  number   ");  }  if  (str.startsWith(   "--   "))  {    [BUGGY]  return  new  Number(str.substring(0,  str.length()  -  2));  [BUGGY]    }  if  (str.startsWith(   "0x   ")  ||  str.startsWith(   "-0x   ")  ||  str.startsWith(   "0X   ")  ||  str.startsWith(   "-0X   "))  {  int  hexDigits  =  str.length()  -  2;  //  drop  0x  if  (str.startsWith(   "-   "))  {  //  drop  -  hexDigits--;  }  if  (hexDigits  >  8)  {  //  too  many  for  an  int  return  createLong(str);  }  return  createInteger(str);  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  	projects/Lang7/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	453	453	1	replace	return  new  Number(str.substring(0,  str.length()  -  2));	  return    new    Number(str.substring(0,    str.length()    -    1));    	non-compiled	[CE]  ')'  expected	8	None	replace
32	[BUG]  [BUGGY]  String  str  =  str.substring(0,  str.length()  +  1);  [CE]  ')'  expected  [FE]            AssertionError    [CONTEXT]    public  static  Number  createNumber(String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {  return  null;  }  if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(   "A  blank  string  is  not  a  valid  number   ");  }  if  (str.startsWith(   "--   "))  {    [BUGGY]  String  str  =  str.substring(0,  str.length()  +  1);  [BUGGY]    return  null;  }  if  (str.startsWith(   "0x   ")  ||  str.startsWith(   "-0x   ")  ||  str.startsWith(   "0X   ")  ||  str.startsWith(   "-0X   "))  {  int  hexDigits  =  str.length()  -  2;  //  drop  0x  if  (str.startsWith(   "-   "))  {  //  drop  -  hexDigits--;  }  if  (hexDigits  >  8)  {  //  too  many  for  an  int  return  createLong(str);  }  return  createInteger(str);  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  	projects/Lang7/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	453	453	1	replace	String  str  =  str.substring(0,  str.length()  +  1);	      String    str    =    str.substring(0,    str.length()    -    1);    	non-compiled	[CE]  ')'  expected	3	None	replace
33	[BUG]  [BUGGY]  return  new  Long(str.length()  -  2);  [CE]  ')'  expected  [FE]          AssertionError    [CONTEXT]    public  static  Number  createNumber(String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {  return  null;  }  if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(   "A  blank  string  is  not  a  valid  number   ");  }  if  (str.startsWith(   "--   "))  {    [BUGGY]  return  new  Long(str.length()  -  2);  [BUGGY]    }  if  (str.startsWith(   "0x   ")  ||  str.startsWith(   "-0x   ")  ||  str.startsWith(   "0X   ")  ||  str.startsWith(   "-0X   "))  {  int  hexDigits  =  str.length()  -  2;  //  drop  0x  if  (str.startsWith(   "-   "))  {  //  drop  -  hexDigits--;  }  if  (hexDigits  >  8)  {  //  too  many  for  an  int  return  createLong(str);  }  return  createInteger(str);  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  	projects/Lang7/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	453	453	1	replace	return  new  Long(str.length()  -  2);	  return    new    Long(str.length());    	non-compiled	[CE]  ')'  expected	10	None	replace
34	[BUG]  [BUGGY]  return  new  Long(str.length()  +  1);  [CE]  ')'  expected  [FE]            AssertionError    [CONTEXT]    public  static  Number  createNumber(String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {  return  null;  }  if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(   "A  blank  string  is  not  a  valid  number   ");  }  if  (str.startsWith(   "--   "))  {    [BUGGY]  return  new  Long(str.length()  +  1);  [BUGGY]    }  if  (str.startsWith(   "0x   ")  ||  str.startsWith(   "-0x   ")  ||  str.startsWith(   "0X   ")  ||  str.startsWith(   "-0X   "))  {  int  hexDigits  =  str.length()  -  2;  //  drop  0x  if  (str.startsWith(   "-   "))  {  //  drop  -  hexDigits--;  }  if  (hexDigits  >  8)  {  //  too  many  for  an  int  return  createLong(str);  }  return  createInteger(str);  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  	projects/Lang7/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	453	453	1	replace	return  new  Long(str.length()  +  1);	  return    new    Long(str.length());    	non-compiled	[CE]  ')'  expected	10	None	replace
35	[BUG]  [BUGGY]  return  new  Long(str.length()  -  1);  [CE]  ')'  expected  [FE]              AssertionError    [CONTEXT]    public  static  Number  createNumber(String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {  return  null;  }  if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(   "A  blank  string  is  not  a  valid  number   ");  }  if  (str.startsWith(   "--   "))  {    [BUGGY]  return  new  Long(str.length()  -  1);  [BUGGY]    }  if  (str.startsWith(   "0x   ")  ||  str.startsWith(   "-0x   ")  ||  str.startsWith(   "0X   ")  ||  str.startsWith(   "-0X   "))  {  int  hexDigits  =  str.length()  -  2;  //  drop  0x  if  (str.startsWith(   "-   "))  {  //  drop  -  hexDigits--;  }  if  (hexDigits  >  8)  {  //  too  many  for  an  int  return  createLong(str);  }  return  createInteger(str);  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  	projects/Lang7/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	453	453	1	replace	return  new  Long(str.length()  -  1);	  return    new    Long(str.length());    	non-compiled	[CE]  ')'  expected	10	None	replace
36	[BUG]  [BUGGY]  return  new  Long(str.length()  +  2);  [CE]  ')'  expected  [FE]                AssertionError    [CONTEXT]    public  static  Number  createNumber(String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {  return  null;  }  if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(   "A  blank  string  is  not  a  valid  number   ");  }  if  (str.startsWith(   "--   "))  {    [BUGGY]  return  new  Long(str.length()  +  2);  [BUGGY]    }  if  (str.startsWith(   "0x   ")  ||  str.startsWith(   "-0x   ")  ||  str.startsWith(   "0X   ")  ||  str.startsWith(   "-0X   "))  {  int  hexDigits  =  str.length()  -  2;  //  drop  0x  if  (str.startsWith(   "-   "))  {  //  drop  -  hexDigits--;  }  if  (hexDigits  >  8)  {  //  too  many  for  an  int  return  createLong(str);  }  return  createInteger(str);  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  	projects/Lang7/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	453	453	1	replace	return  new  Long(str.length()  +  2);	  return    new    Long(str.length());    	non-compiled	[CE]  ')'  expected	10	None	replace
37	[BUG]  [BUGGY]  return  new  Number(str.substring(0,  str.length()  -  1),  hexDigits);  [CE]  ')'  expected  [FE]              AssertionError    [CONTEXT]    public  static  Number  createNumber(String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {  return  null;  }  if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(   "A  blank  string  is  not  a  valid  number   ");  }  if  (str.startsWith(   "--   "))  {    [BUGGY]  return  new  Number(str.substring(0,  str.length()  -  1),  hexDigits);  [BUGGY]    }  if  (str.startsWith(   "0x   ")  ||  str.startsWith(   "-0x   ")  ||  str.startsWith(   "0X   ")  ||  str.startsWith(   "-0X   "))  {  int  hexDigits  =  str.length()  -  2;  //  drop  0x  if  (str.startsWith(   "-   "))  {  //  drop  -  hexDigits--;  }  if  (hexDigits  >  8)  {  //  too  many  for  an  int  return  createLong(str);  }  return  createInteger(str);  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  	projects/Lang7/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	453	453	1	replace	return  new  Number(str.substring(0,  str.length()  -  1),  hexDigits);	  return    new    Number(str.substring(0,    str.length()    -    1));    	non-compiled	[CE]  ')'  expected	8	None	replace
38	[BUG]  [BUGGY]  char  hexDigits  =  str.length();  [CE]  ')'  expected  [FE]          AssertionError    [CONTEXT]    public  static  Number  createNumber(String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {  return  null;  }  if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(   "A  blank  string  is  not  a  valid  number   ");  }  if  (str.startsWith(   "--   "))  {    [BUGGY]  char  hexDigits  =  str.length();  [BUGGY]    return  null;  }  if  (str.startsWith(   "0x   ")  ||  str.startsWith(   "-0x   ")  ||  str.startsWith(   "0X   ")  ||  str.startsWith(   "-0X   "))  {  int  hexDigits  =  str.length()  -  2;  //  drop  0x  if  (str.startsWith(   "-   "))  {  //  drop  -  hexDigits--;  }  if  (hexDigits  >  8)  {  //  too  many  for  an  int  return  createLong(str);  }  return  createInteger(str);  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  	projects/Lang7/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	453	453	1	replace	char  hexDigits  =  str.length();	      int    hexDigits    =    str.length();    	non-compiled	[CE]  ')'  expected	2	None	replace
39	[BUG]  [BUGGY]  Integer  hexDigits  =  createBigInteger(str);  [CE]  ')'  expected  [FE]        AssertionError    [CONTEXT]    public  static  Number  createNumber(String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {  return  null;  }  if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(   "A  blank  string  is  not  a  valid  number   ");  }  if  (str.startsWith(   "--   "))  {    [BUGGY]  Integer  hexDigits  =  createBigInteger(str);  [BUGGY]    return  null;  }  if  (str.startsWith(   "0x   ")  ||  str.startsWith(   "-0x   ")  ||  str.startsWith(   "0X   ")  ||  str.startsWith(   "-0X   "))  {  int  hexDigits  =  str.length()  -  2;  //  drop  0x  if  (str.startsWith(   "-   "))  {  //  drop  -  hexDigits--;  }  if  (hexDigits  >  8)  {  //  too  many  for  an  int  return  createLong(str);  }  return  createInteger(str);  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  	projects/Lang7/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	453	453	1	replace	Integer  hexDigits  =  createBigInteger(str);	      Integer    hexDigits    =    createInteger(str);    	non-compiled	[CE]  ')'  expected	11	None	replace
40	[BUG]  [BUGGY]  throw  new  NumberFormatException( "Number  is  not  a  valid  number ");  [CE]  ')'  expected  [FE]            AssertionError    [CONTEXT]    public  static  Number  createNumber(String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {  return  null;  }  if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(   "A  blank  string  is  not  a  valid  number   ");  }  if  (str.startsWith(   "--   "))  {    [BUGGY]  throw  new  NumberFormatException( "Number  is  not  a  valid  number ");  [BUGGY]    }  if  (str.startsWith(   "0x   ")  ||  str.startsWith(   "-0x   ")  ||  str.startsWith(   "0X   ")  ||  str.startsWith(   "-0X   "))  {  int  hexDigits  =  str.length()  -  2;  //  drop  0x  if  (str.startsWith(   "-   "))  {  //  drop  -  hexDigits--;  }  if  (hexDigits  >  8)  {  //  too  many  for  an  int  return  createLong(str);  }  return  createInteger(str);  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  	projects/Lang7/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	453	453	1	replace	throw  new  NumberFormatException( "Number  is  not  a  valid  number ");	  throw    new    NumberFormatException(   "   ");    	non-compiled	[CE]  ')'  expected	7	None	replace
41	[BUG]  [BUGGY]  return  new  Integer(hexDigits);  [CE]  ')'  expected  [FE]        AssertionError    [CONTEXT]    public  static  Number  createNumber(String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {  return  null;  }  if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(   "A  blank  string  is  not  a  valid  number   ");  }  if  (str.startsWith(   "--   "))  {    [BUGGY]  return  new  Integer(hexDigits);  [BUGGY]    }  if  (str.startsWith(   "0x   ")  ||  str.startsWith(   "-0x   ")  ||  str.startsWith(   "0X   ")  ||  str.startsWith(   "-0X   "))  {  int  hexDigits  =  str.length()  -  2;  //  drop  0x  if  (str.startsWith(   "-   "))  {  //  drop  -  hexDigits--;  }  if  (hexDigits  >  8)  {  //  too  many  for  an  int  return  createLong(str);  }  return  createInteger(str);  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  	projects/Lang7/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	453	453	1	replace	return  new  Integer(hexDigits);	  return    new    Integer(str);    	non-compiled	[CE]  ')'  expected	12	None	replace
42	[BUG]  [BUGGY]  return  createBigInteger(str);  [CE]  ')'  expected  [FE]          AssertionError    [CONTEXT]    public  static  Number  createNumber(String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {  return  null;  }  if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(   "A  blank  string  is  not  a  valid  number   ");  }  if  (str.startsWith(   "--   "))  {    [BUGGY]  return  createBigInteger(str);  [BUGGY]    }  if  (str.startsWith(   "0x   ")  ||  str.startsWith(   "-0x   ")  ||  str.startsWith(   "0X   ")  ||  str.startsWith(   "-0X   "))  {  int  hexDigits  =  str.length()  -  2;  //  drop  0x  if  (str.startsWith(   "-   "))  {  //  drop  -  hexDigits--;  }  if  (hexDigits  >  8)  {  //  too  many  for  an  int  return  createLong(str);  }  return  createInteger(str);  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  	projects/Lang7/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	453	453	1	replace	return  createBigInteger(str);	  return    new    Integer(str);    	non-compiled	[CE]  ')'  expected	12	None	replace
43	[BUG]  [BUGGY]  Integer  str  =  createInteger(hexDigits);  [CE]  ')'  expected  [FE]              AssertionError    [CONTEXT]    public  static  Number  createNumber(String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {  return  null;  }  if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(   "A  blank  string  is  not  a  valid  number   ");  }  if  (str.startsWith(   "--   "))  {    [BUGGY]  Integer  str  =  createInteger(hexDigits);  [BUGGY]    return  null;  }  if  (str.startsWith(   "0x   ")  ||  str.startsWith(   "-0x   ")  ||  str.startsWith(   "0X   ")  ||  str.startsWith(   "-0X   "))  {  int  hexDigits  =  str.length()  -  2;  //  drop  0x  if  (str.startsWith(   "-   "))  {  //  drop  -  hexDigits--;  }  if  (hexDigits  >  8)  {  //  too  many  for  an  int  return  createLong(str);  }  return  createInteger(str);  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  	projects/Lang7/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	453	453	1	replace	Integer  str  =  createInteger(hexDigits);	      Integer    str    =    createInteger(str);    	non-compiled	[CE]  ')'  expected	4	None	replace
44	[BUG]  [BUGGY]  return(null  ==  str)?  null  :  new  Long(str.length());  [CE]  ')'  expected  [FE]        AssertionError    [CONTEXT]    public  static  Number  createNumber(String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {  return  null;  }  if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(   "A  blank  string  is  not  a  valid  number   ");  }  if  (str.startsWith(   "--   "))  {    [BUGGY]  return(null  ==  str)?  null  :  new  Long(str.length());  [BUGGY]    }  if  (str.startsWith(   "0x   ")  ||  str.startsWith(   "-0x   ")  ||  str.startsWith(   "0X   ")  ||  str.startsWith(   "-0X   "))  {  int  hexDigits  =  str.length()  -  2;  //  drop  0x  if  (str.startsWith(   "-   "))  {  //  drop  -  hexDigits--;  }  if  (hexDigits  >  8)  {  //  too  many  for  an  int  return  createLong(str);  }  return  createInteger(str);  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  	projects/Lang7/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	453	453	1	replace	return(null  ==  str)?  null  :  new  Long(str.length());	  return    this;    	non-compiled	[CE]  ')'  expected	5	None	replace
45	[BUG]  [BUGGY]  throw  new  NumberFormatException( "A  blank  string  is  not  a  valid  number "  +  str);  [CE]  ')'  expected  [FE]          AssertionError    [CONTEXT]    public  static  Number  createNumber(String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {  return  null;  }  if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(   "A  blank  string  is  not  a  valid  number   ");  }  if  (str.startsWith(   "--   "))  {    [BUGGY]  throw  new  NumberFormatException( "A  blank  string  is  not  a  valid  number "  +  str);  [BUGGY]    }  if  (str.startsWith(   "0x   ")  ||  str.startsWith(   "-0x   ")  ||  str.startsWith(   "0X   ")  ||  str.startsWith(   "-0X   "))  {  int  hexDigits  =  str.length()  -  2;  //  drop  0x  if  (str.startsWith(   "-   "))  {  //  drop  -  hexDigits--;  }  if  (hexDigits  >  8)  {  //  too  many  for  an  int  return  createLong(str);  }  return  createInteger(str);  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  	projects/Lang7/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	453	453	1	replace	throw  new  NumberFormatException( "A  blank  string  is  not  a  valid  number "  +  str);	  throw    new    NumberFormatException(   "A    blank    string    is    not    a    valid    number   ");    	non-compiled	[CE]  ')'  expected	6	None	replace
46	[BUG]  [BUGGY]  return  new  Long(str)+  1;  [CE]  ')'  expected  [FE]        AssertionError    [CONTEXT]    public  static  Number  createNumber(String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {  return  null;  }  if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(   "A  blank  string  is  not  a  valid  number   ");  }  if  (str.startsWith(   "--   "))  {    [BUGGY]  return  new  Long(str)+  1;  [BUGGY]    }  if  (str.startsWith(   "0x   ")  ||  str.startsWith(   "-0x   ")  ||  str.startsWith(   "0X   ")  ||  str.startsWith(   "-0X   "))  {  int  hexDigits  =  str.length()  -  2;  //  drop  0x  if  (str.startsWith(   "-   "))  {  //  drop  -  hexDigits--;  }  if  (hexDigits  >  8)  {  //  too  many  for  an  int  return  createLong(str);  }  return  createInteger(str);  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  	projects/Lang7/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	453	453	1	replace	return  new  Long(str)+  1;	  return    new    Long(str);    	non-compiled	[CE]  ')'  expected	9	None	replace
47	[BUG]  [BUGGY]  throw  new  NumberFormatException( "A  blank  string  is  not  a  valid  number, ");  [CE]  ')'  expected  [FE]          AssertionError    [CONTEXT]    public  static  Number  createNumber(String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {  return  null;  }  if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(   "A  blank  string  is  not  a  valid  number   ");  }  if  (str.startsWith(   "--   "))  {    [BUGGY]  throw  new  NumberFormatException( "A  blank  string  is  not  a  valid  number, ");  [BUGGY]    }  if  (str.startsWith(   "0x   ")  ||  str.startsWith(   "-0x   ")  ||  str.startsWith(   "0X   ")  ||  str.startsWith(   "-0X   "))  {  int  hexDigits  =  str.length()  -  2;  //  drop  0x  if  (str.startsWith(   "-   "))  {  //  drop  -  hexDigits--;  }  if  (hexDigits  >  8)  {  //  too  many  for  an  int  return  createLong(str);  }  return  createInteger(str);  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  	projects/Lang7/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	453	453	1	replace	throw  new  NumberFormatException( "A  blank  string  is  not  a  valid  number, ");	  throw    new    NumberFormatException(   "A    blank    string    is    not    a    valid    number   ");    	non-compiled	[CE]  ')'  expected	6	None	replace
48	[BUG]  [BUGGY]  Integer  str  =  createBigInteger(str);  [CE]  ')'  expected  [FE]              AssertionError    [CONTEXT]    public  static  Number  createNumber(String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {  return  null;  }  if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(   "A  blank  string  is  not  a  valid  number   ");  }  if  (str.startsWith(   "--   "))  {    [BUGGY]  Integer  str  =  createBigInteger(str);  [BUGGY]    return  null;  }  if  (str.startsWith(   "0x   ")  ||  str.startsWith(   "-0x   ")  ||  str.startsWith(   "0X   ")  ||  str.startsWith(   "-0X   "))  {  int  hexDigits  =  str.length()  -  2;  //  drop  0x  if  (str.startsWith(   "-   "))  {  //  drop  -  hexDigits--;  }  if  (hexDigits  >  8)  {  //  too  many  for  an  int  return  createLong(str);  }  return  createInteger(str);  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  	projects/Lang7/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	453	453	1	replace	Integer  str  =  createBigInteger(str);	      Integer    str    =    createInteger(str);    	non-compiled	[CE]  ')'  expected	4	None	replace
49	[BUG]  [BUGGY]  Integer  hexDigits  =  createInteger(str,  expPos);  [CE]  [FE]        AssertionError    [CONTEXT]    public  static  Number  createNumber(String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {  return  null;  }  if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(   "A  blank  string  is  not  a  valid  number   ");  }  if  (str.startsWith(   "--   "))  {    [BUGGY]  Integer  hexDigits  =  createInteger(str,  expPos);  [BUGGY]    return  null;  }  if  (str.startsWith(   "0x   ")  ||  str.startsWith(   "-0x   ")  ||  str.startsWith(   "0X   ")  ||  str.startsWith(   "-0X   "))  {  int  hexDigits  =  str.length()  -  2;  //  drop  0x  if  (str.startsWith(   "-   "))  {  //  drop  -  hexDigits--;  }  if  (hexDigits  >  8)  {  //  too  many  for  an  int  return  createLong(str);  }  return  createInteger(str);  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  	projects/Lang7/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	453	453	1	replace	Integer  hexDigits  =  createInteger(str,  expPos);	      Integer    hexDigits    =    createInteger(str);    	non-compiled	[CE]  	11	None	replace
50	[BUG]  [BUGGY]  int  decPos  =  str.lastIndexOf('-')+  1;  [CE]  ')'  expected  [FE]        AssertionError    [CONTEXT]    public  static  Number  createNumber(String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {  return  null;  }  if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(   "A  blank  string  is  not  a  valid  number   ");  }  if  (str.startsWith(   "--   "))  {    [BUGGY]  int  decPos  =  str.lastIndexOf('-')+  1;  [BUGGY]    return  null;  }  if  (str.startsWith(   "0x   ")  ||  str.startsWith(   "-0x   ")  ||  str.startsWith(   "0X   ")  ||  str.startsWith(   "-0X   "))  {  int  hexDigits  =  str.length()  -  2;  //  drop  0x  if  (str.startsWith(   "-   "))  {  //  drop  -  hexDigits--;  }  if  (hexDigits  >  8)  {  //  too  many  for  an  int  return  createLong(str);  }  return  createInteger(str);  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  	projects/Lang7/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	453	453	1	replace	int  decPos  =  str.lastIndexOf('-')+  1;	      int    decPos    =    str.length();    	non-compiled	[CE]  ')'  expected	13	None	replace
51	[BUG]  [BUGGY]  return(null  ==  str)?  null  :  new  Double(str.length());  [CE]  [FE]        AssertionError    [CONTEXT]    public  static  Number  createNumber(String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {  return  null;  }  if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(   "A  blank  string  is  not  a  valid  number   ");  }  if  (str.startsWith(   "--   "))  {    [BUGGY]  return(null  ==  str)?  null  :  new  Double(str.length());  [BUGGY]    }  if  (str.startsWith(   "0x   ")  ||  str.startsWith(   "-0x   ")  ||  str.startsWith(   "0X   ")  ||  str.startsWith(   "-0X   "))  {  int  hexDigits  =  str.length()  -  2;  //  drop  0x  if  (str.startsWith(   "-   "))  {  //  drop  -  hexDigits--;  }  if  (hexDigits  >  8)  {  //  too  many  for  an  int  return  createLong(str);  }  return  createInteger(str);  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  	projects/Lang7/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	453	453	1	replace	return(null  ==  str)?  null  :  new  Double(str.length());	  return    this;    	non-compiled	[CE]  	5	None	replace
52	[BUG]  [BUGGY]  return(null  ==  str)?  null  :  new  Integer(str);  [CE]  [FE]          AssertionError    [CONTEXT]    public  static  Number  createNumber(String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {  return  null;  }  if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(   "A  blank  string  is  not  a  valid  number   ");  }  if  (str.startsWith(   "--   "))  {    [BUGGY]  return(null  ==  str)?  null  :  new  Integer(str);  [BUGGY]    }  if  (str.startsWith(   "0x   ")  ||  str.startsWith(   "-0x   ")  ||  str.startsWith(   "0X   ")  ||  str.startsWith(   "-0X   "))  {  int  hexDigits  =  str.length()  -  2;  //  drop  0x  if  (str.startsWith(   "-   "))  {  //  drop  -  hexDigits--;  }  if  (hexDigits  >  8)  {  //  too  many  for  an  int  return  createLong(str);  }  return  createInteger(str);  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  	projects/Lang7/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	453	453	1	replace	return(null  ==  str)?  null  :  new  Integer(str);	  return    this;    	non-compiled	[CE]  	5	None	replace
53	[BUG]  [BUGGY]  return  new  Number(str.substring(0,  str.length()  1));  [CE]  [FE]              AssertionError    [CONTEXT]    public  static  Number  createNumber(String  str)  throws  NumberFormatException  {  if  (str  ==  null)  {  return  null;  }  if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException(   "A  blank  string  is  not  a  valid  number   ");  }  if  (str.startsWith(   "--   "))  {    [BUGGY]  return  new  Number(str.substring(0,  str.length()  1));  [BUGGY]    }  if  (str.startsWith(   "0x   ")  ||  str.startsWith(   "-0x   ")  ||  str.startsWith(   "0X   ")  ||  str.startsWith(   "-0X   "))  {  int  hexDigits  =  str.length()  -  2;  //  drop  0x  if  (str.startsWith(   "-   "))  {  //  drop  -  hexDigits--;  }  if  (hexDigits  >  8)  {  //  too  many  for  an  int  return  createLong(str);  }  return  createInteger(str);  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  	projects/Lang7/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	0.7071067811865475	453	453	1	replace	return  new  Number(str.substring(0,  str.length()  1));	  return    new    Number(str.substring(0,    str.length()    -    1));    	non-compiled	[CE]  	8	None	replace
