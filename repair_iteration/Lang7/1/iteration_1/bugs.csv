bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]    AssertionError  [CONTEXT]  }  if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException( "A  blank  string  is  not  a  valid  number ");  }  if  (str.startsWith( "-- "))  {  return  null;  }  if  (str.startsWith( "0x ")  ||  str.startsWith( "-0x ")  ||  str.startsWith( "0X ")  ||  str.startsWith( "-0X "))  {  int  hexDigits  =  str.length()  -  2;  //  drop  0x  if  (str.startsWith( "- "))  {  //  drop  -  [BUGGY]  hexDigits  -=  2;  [BUGGY]  }  if  (hexDigits  >  8)  {  //  too  many  for  an  int  return  createLong(str);  }  return  createInteger(str);  }  char  lastChar  =  str.charAt(str.length()  -  1);  String  mant;  String  dec;  String  exp;  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  	projects/Lang7/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	458	458	1	add	hexDigits  -=  2;	hexDigits--;  	compilable	  [FE]  AssertionError  	1	1	replace
2	[BUG]  [BUGGY]  hexDigits  -=  2;  [FE]  AssertionError  [FE]    AssertionError  [CONTEXT]  }  if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException( "A  blank  string  is  not  a  valid  number ");  }  if  (str.startsWith( "-- "))  {  return  null;  }  if  (str.startsWith( "0x ")  ||  str.startsWith( "-0x ")  ||  str.startsWith( "0X ")  ||  str.startsWith( "-0X "))  {  int  hexDigits  =  str.length()  -  2;  //  drop  0x  if  (str.startsWith( "- "))  {  //  drop  -  [BUGGY]  hexDigits  -=  2;  [BUGGY]  }  if  (hexDigits  >  8)  {  //  too  many  for  an  int  return  createLong(str);  }  return  createInteger(str);  }  char  lastChar  =  str.charAt(str.length()  -  1);  String  mant;  String  dec;  String  exp;  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  	projects/Lang7/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	458	458	1	replace	hexDigits  -=  2;	hexDigits--;  	compilable	  [FE]  AssertionError  	1	1	replace
3	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]      AssertionError  [CONTEXT]  }  if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException( "A  blank  string  is  not  a  valid  number ");  }  if  (str.startsWith( "-- "))  {  return  null;  }  if  (str.startsWith( "0x ")  ||  str.startsWith( "-0x ")  ||  str.startsWith( "0X ")  ||  str.startsWith( "-0X "))  {  int  hexDigits  =  str.length()  -  2;  //  drop  0x  if  (str.startsWith( "- "))  {  //  drop  -  [BUGGY]  hexDigits  -=  1;  [BUGGY]  }  if  (hexDigits  >  8)  {  //  too  many  for  an  int  return  createLong(str);  }  return  createInteger(str);  }  char  lastChar  =  str.charAt(str.length()  -  1);  String  mant;  String  dec;  String  exp;  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  	projects/Lang7/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	458	458	1	add	hexDigits  -=  1;	hexDigits--;  	compilable	  [FE]  AssertionError  	1	1	replace
4	[BUG]  [BUGGY]  hexDigits  -=  1;  [FE]  AssertionError  [FE]      AssertionError  [CONTEXT]  }  if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException( "A  blank  string  is  not  a  valid  number ");  }  if  (str.startsWith( "-- "))  {  return  null;  }  if  (str.startsWith( "0x ")  ||  str.startsWith( "-0x ")  ||  str.startsWith( "0X ")  ||  str.startsWith( "-0X "))  {  int  hexDigits  =  str.length()  -  2;  //  drop  0x  if  (str.startsWith( "- "))  {  //  drop  -  [BUGGY]  hexDigits  -=  1;  [BUGGY]  }  if  (hexDigits  >  8)  {  //  too  many  for  an  int  return  createLong(str);  }  return  createInteger(str);  }  char  lastChar  =  str.charAt(str.length()  -  1);  String  mant;  String  dec;  String  exp;  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  	projects/Lang7/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	458	458	1	replace	hexDigits  -=  1;	hexDigits--;  	compilable	  [FE]  AssertionError  	1	1	replace
5	[BUG]  [BUGGY]  [FE]  AssertionError  [FE]        AssertionError  [CONTEXT]  }  if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException( "A  blank  string  is  not  a  valid  number ");  }  if  (str.startsWith( "-- "))  {  return  null;  }  if  (str.startsWith( "0x ")  ||  str.startsWith( "-0x ")  ||  str.startsWith( "0X ")  ||  str.startsWith( "-0X "))  {  int  hexDigits  =  str.length()  -  2;  //  drop  0x  if  (str.startsWith( "- "))  {  //  drop  -  [BUGGY]    [BUGGY]  }  if  (hexDigits  >  8)  {  //  too  many  for  an  int  return  createLong(str);  }  return  createInteger(str);  }  char  lastChar  =  str.charAt(str.length()  -  1);  String  mant;  String  dec;  String  exp;  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  	projects/Lang7/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	458	458	1	add	  	hexDigits--;  	compilable	  [FE]  AssertionError  	1	1	replace
6	[BUG]  [BUGGY]    [FE]  AssertionError  [FE]        AssertionError  [CONTEXT]  }  if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException( "A  blank  string  is  not  a  valid  number ");  }  if  (str.startsWith( "-- "))  {  return  null;  }  if  (str.startsWith( "0x ")  ||  str.startsWith( "-0x ")  ||  str.startsWith( "0X ")  ||  str.startsWith( "-0X "))  {  int  hexDigits  =  str.length()  -  2;  //  drop  0x  if  (str.startsWith( "- "))  {  //  drop  -  [BUGGY]    [BUGGY]  }  if  (hexDigits  >  8)  {  //  too  many  for  an  int  return  createLong(str);  }  return  createInteger(str);  }  char  lastChar  =  str.charAt(str.length()  -  1);  String  mant;  String  dec;  String  exp;  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  	projects/Lang7/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	458	458	1	replace	  	hexDigits--;  	compilable	  [FE]  AssertionError  	1	1	replace
7	[BUG]  [BUGGY]    hexDigits  =  str.length();  [CE]  cannot  find  symbol  pfxLen  [FE]    AssertionError  [CONTEXT]  }  if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException( "A  blank  string  is  not  a  valid  number ");  }  if  (str.startsWith( "-- "))  {  return  null;  }  if  (str.startsWith( "0x ")  ||  str.startsWith( "-0x ")  ||  str.startsWith( "0X ")  ||  str.startsWith( "-0X "))  {  int  hexDigits  =  str.length()  -  2;  //  drop  0x  if  (str.startsWith( "- "))  {  //  drop  -  [BUGGY]    hexDigits  =  str.length();  [BUGGY]  hexDigits--;  }  if  (hexDigits  >  8)  {  //  too  many  for  an  int  return  createLong(str);  }  return  createInteger(str);  }  char  lastChar  =  str.charAt(str.length()  -  1);  String  mant;  String  dec;  String  exp;  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  	projects/Lang7/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	458	458	1	replace	    hexDigits  =  str.length();		non-compiled	[CE]  cannot  find  symbol  pfxLen	2	None	add
8	[BUG]  [BUGGY]    int  hexDigits  =  str.length();  [CE]  variable  hexDigits  is  already  defined  in  method  createNumber(String)  [FE]      AssertionError  [CONTEXT]  }  if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException( "A  blank  string  is  not  a  valid  number ");  }  if  (str.startsWith( "-- "))  {  return  null;  }  if  (str.startsWith( "0x ")  ||  str.startsWith( "-0x ")  ||  str.startsWith( "0X ")  ||  str.startsWith( "-0X "))  {  int  hexDigits  =  str.length()  -  2;  //  drop  0x  if  (str.startsWith( "- "))  {  //  drop  -  [BUGGY]    int  hexDigits  =  str.length();  [BUGGY]  hexDigits--;  }  if  (hexDigits  >  8)  {  //  too  many  for  an  int  return  createLong(str);  }  return  createInteger(str);  }  char  lastChar  =  str.charAt(str.length()  -  1);  String  mant;  String  dec;  String  exp;  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  	projects/Lang7/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	458	458	1	replace	    int  hexDigits  =  str.length();		non-compiled	[CE]  variable  hexDigits  is  already  defined  in  method  createNumber(String)	2	None	add
9	[BUG]  [BUGGY]    ||  str.startsWith( "- "))  {  return  null;  [CE]  illegal  start  of  expression  [FE]        AssertionError  [CONTEXT]  }  if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException( "A  blank  string  is  not  a  valid  number ");  }  if  (str.startsWith( "-- "))  {  return  null;  }  if  (str.startsWith( "0x ")  ||  str.startsWith( "-0x ")  ||  str.startsWith( "0X ")  ||  str.startsWith( "-0X "))  {  int  hexDigits  =  str.length()  -  2;  //  drop  0x  if  (str.startsWith( "- "))  {  //  drop  -  [BUGGY]    ||  str.startsWith( "- "))  {  return  null;  [BUGGY]  hexDigits--;  }  if  (hexDigits  >  8)  {  //  too  many  for  an  int  return  createLong(str);  }  return  createInteger(str);  }  char  lastChar  =  str.charAt(str.length()  -  1);  String  mant;  String  dec;  String  exp;  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  	projects/Lang7/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	458	458	1	replace	    ||  str.startsWith( "- "))  {  return  null;		non-compiled	[CE]  illegal  start  of  expression	2	None	add
10	[BUG]  [BUGGY]    int  hexDigits  =  str.length()  -  2;  [CE]  variable  hexDigits  is  already  defined  in  method  createNumber(String)  [FE]          AssertionError  [CONTEXT]  }  if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException( "A  blank  string  is  not  a  valid  number ");  }  if  (str.startsWith( "-- "))  {  return  null;  }  if  (str.startsWith( "0x ")  ||  str.startsWith( "-0x ")  ||  str.startsWith( "0X ")  ||  str.startsWith( "-0X "))  {  int  hexDigits  =  str.length()  -  2;  //  drop  0x  if  (str.startsWith( "- "))  {  //  drop  -  [BUGGY]    int  hexDigits  =  str.length()  -  2;  [BUGGY]  hexDigits--;  }  if  (hexDigits  >  8)  {  //  too  many  for  an  int  return  createLong(str);  }  return  createInteger(str);  }  char  lastChar  =  str.charAt(str.length()  -  1);  String  mant;  String  dec;  String  exp;  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  	projects/Lang7/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	458	458	1	replace	    int  hexDigits  =  str.length()  -  2;		non-compiled	[CE]  variable  hexDigits  is  already  defined  in  method  createNumber(String)	2	None	add
11	[BUG]  [BUGGY]  hexDigits  =  str.length()  -  2;  [CE]  cannot  find  symbol  pfx  [FE]    AssertionError  [CONTEXT]  }  if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException( "A  blank  string  is  not  a  valid  number ");  }  if  (str.startsWith( "-- "))  {  return  null;  }  if  (str.startsWith( "0x ")  ||  str.startsWith( "-0x ")  ||  str.startsWith( "0X ")  ||  str.startsWith( "-0X "))  {  int  hexDigits  =  str.length()  -  2;  //  drop  0x  if  (str.startsWith( "- "))  {  //  drop  -  [BUGGY]  hexDigits  =  str.length()  -  2;  [BUGGY]  }  if  (hexDigits  >  8)  {  //  too  many  for  an  int  return  createLong(str);  }  return  createInteger(str);  }  char  lastChar  =  str.charAt(str.length()  -  1);  String  mant;  String  dec;  String  exp;  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  	projects/Lang7/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	458	458	1	replace	hexDigits  =  str.length()  -  2;	hexDigits--;  	non-compiled	[CE]  cannot  find  symbol  pfx	1	None	replace
12	[BUG]  [BUGGY]    Integer  hexDigits  =  createInteger(str);  [CE]  illegal  start  of  expression  [FE]    AssertionError  [CONTEXT]  }  if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException( "A  blank  string  is  not  a  valid  number ");  }  if  (str.startsWith( "-- "))  {  return  null;  }  if  (str.startsWith( "0x ")  ||  str.startsWith( "-0x ")  ||  str.startsWith( "0X ")  ||  str.startsWith( "-0X "))  {  int  hexDigits  =  str.length()  -  2;  //  drop  0x  if  (str.startsWith( "- "))  {  //  drop  -  [BUGGY]    Integer  hexDigits  =  createInteger(str);  [BUGGY]  hexDigits--;  }  if  (hexDigits  >  8)  {  //  too  many  for  an  int  return  createLong(str);  }  return  createInteger(str);  }  char  lastChar  =  str.charAt(str.length()  -  1);  String  mant;  String  dec;  String  exp;  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  	projects/Lang7/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	458	458	1	replace	    Integer  hexDigits  =  createInteger(str);		non-compiled	[CE]  illegal  start  of  expression	2	None	add
13	[BUG]  [BUGGY]    hexDigits  =  str.charAt(hexDigits  -  1);  [CE]  illegal  start  of  expression  [FE]      AssertionError  [CONTEXT]  }  if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException( "A  blank  string  is  not  a  valid  number ");  }  if  (str.startsWith( "-- "))  {  return  null;  }  if  (str.startsWith( "0x ")  ||  str.startsWith( "-0x ")  ||  str.startsWith( "0X ")  ||  str.startsWith( "-0X "))  {  int  hexDigits  =  str.length()  -  2;  //  drop  0x  if  (str.startsWith( "- "))  {  //  drop  -  [BUGGY]    hexDigits  =  str.charAt(hexDigits  -  1);  [BUGGY]  hexDigits--;  }  if  (hexDigits  >  8)  {  //  too  many  for  an  int  return  createLong(str);  }  return  createInteger(str);  }  char  lastChar  =  str.charAt(str.length()  -  1);  String  mant;  String  dec;  String  exp;  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  	projects/Lang7/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	458	458	1	replace	    hexDigits  =  str.charAt(hexDigits  -  1);		non-compiled	[CE]  illegal  start  of  expression	2	None	add
14	[BUG]  [BUGGY]    hexDigits  =  str.charAt(hexDigits);  [CE]  illegal  start  of  expression  [FE]        AssertionError  [CONTEXT]  }  if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException( "A  blank  string  is  not  a  valid  number ");  }  if  (str.startsWith( "-- "))  {  return  null;  }  if  (str.startsWith( "0x ")  ||  str.startsWith( "-0x ")  ||  str.startsWith( "0X ")  ||  str.startsWith( "-0X "))  {  int  hexDigits  =  str.length()  -  2;  //  drop  0x  if  (str.startsWith( "- "))  {  //  drop  -  [BUGGY]    hexDigits  =  str.charAt(hexDigits);  [BUGGY]  hexDigits--;  }  if  (hexDigits  >  8)  {  //  too  many  for  an  int  return  createLong(str);  }  return  createInteger(str);  }  char  lastChar  =  str.charAt(str.length()  -  1);  String  mant;  String  dec;  String  exp;  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  	projects/Lang7/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	458	458	1	replace	    hexDigits  =  str.charAt(hexDigits);		non-compiled	[CE]  illegal  start  of  expression	2	None	add
15	[BUG]  [BUGGY]    int  decPos  =  str.length();  [CE]  illegal  start  of  expression  [FE]    AssertionError  [CONTEXT]  }  if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException( "A  blank  string  is  not  a  valid  number ");  }  if  (str.startsWith( "-- "))  {  return  null;  }  if  (str.startsWith( "0x ")  ||  str.startsWith( "-0x ")  ||  str.startsWith( "0X ")  ||  str.startsWith( "-0X "))  {  int  hexDigits  =  str.length()  -  2;  //  drop  0x  if  (str.startsWith( "- "))  {  //  drop  -  [BUGGY]    int  decPos  =  str.length();  [BUGGY]  hexDigits--;  }  if  (hexDigits  >  8)  {  //  too  many  for  an  int  return  createLong(str);  }  return  createInteger(str);  }  char  lastChar  =  str.charAt(str.length()  -  1);  String  mant;  String  dec;  String  exp;  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  	projects/Lang7/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	458	458	1	replace	    int  decPos  =  str.length();		non-compiled	[CE]  illegal  start  of  expression	2	None	add
16	[BUG]  [BUGGY]    hexDigits  =  str.indexOf( "- ");  [CE]  illegal  start  of  expression  [FE]      AssertionError  [CONTEXT]  }  if  (StringUtils.isBlank(str))  {  throw  new  NumberFormatException( "A  blank  string  is  not  a  valid  number ");  }  if  (str.startsWith( "-- "))  {  return  null;  }  if  (str.startsWith( "0x ")  ||  str.startsWith( "-0x ")  ||  str.startsWith( "0X ")  ||  str.startsWith( "-0X "))  {  int  hexDigits  =  str.length()  -  2;  //  drop  0x  if  (str.startsWith( "- "))  {  //  drop  -  [BUGGY]    hexDigits  =  str.indexOf( "- ");  [BUGGY]  hexDigits--;  }  if  (hexDigits  >  8)  {  //  too  many  for  an  int  return  createLong(str);  }  return  createInteger(str);  }  char  lastChar  =  str.charAt(str.length()  -  1);  String  mant;  String  dec;  String  exp;  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  	projects/Lang7/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	458	458	1	replace	    hexDigits  =  str.indexOf( "- ");		non-compiled	[CE]  illegal  start  of  expression	2	None	add
