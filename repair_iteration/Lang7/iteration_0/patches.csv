bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number
this_action1	[BUG]  [BUGGY]    :  throw  new  NumberFormatException(str  + "  is  not  a  valid  number. ");  [CE]  illegal  start  of  expression  [CONTEXT]    case  'd'  :  case  'D'  :  try  {  Double  d  =  NumberUtils.createDouble(numeric);  if  (!(d.isInfinite()  ||  (d.floatValue()  ==  0.0D  &&  !allZeros)))  {  return  d;  }  }  catch  (NumberFormatException  nfe)  {  //  NOPMD    [BUGGY]    :  throw  new  NumberFormatException(str  + "  is  not  a  valid  number. ");  [BUGGY]  }  try  {  return  createBigDecimal(numeric);  }  catch  (NumberFormatException  e)  {  //  NOPMD  }  default  :  throw  new  NumberFormatException(str  +   "  is  not  a  valid  number. ");  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  	projects/Lang7/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	541	541	1	replace	    :  throw  new  NumberFormatException(str  + "  is  not  a  valid  number. ");		non-compiled	[CE]  illegal  start  of  expression	12	None	add
2	[BUG]  [BUGGY]    :  throw  new  NumberFormatException( "  is  not  a  valid  number. ");  [CE]  illegal  start  of  expression  [CONTEXT]    case  'd'  :  case  'D'  :  try  {  Double  d  =  NumberUtils.createDouble(numeric);  if  (!(d.isInfinite()  ||  (d.floatValue()  ==  0.0D  &&  !allZeros)))  {  return  d;  }  }  catch  (NumberFormatException  nfe)  {  //  NOPMD    [BUGGY]    :  throw  new  NumberFormatException( "  is  not  a  valid  number. ");  [BUGGY]  }  try  {  return  createBigDecimal(numeric);  }  catch  (NumberFormatException  e)  {  //  NOPMD  }  default  :  throw  new  NumberFormatException(str  +   "  is  not  a  valid  number. ");  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  	projects/Lang7/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	541	541	1	replace	    :  throw  new  NumberFormatException( "  is  not  a  valid  number. ");		non-compiled	[CE]  illegal  start  of  expression	12	None	add
3	[BUG]  [BUGGY]    if(numeric.charAt(0)  ==  '-')  {  String  dec  =  NumberUtils.createDecimal(numeric);  if(dec  ==  null  &&  exp.length  >  0)  {  return  d;  }  [CE]  orphaned  default  [CONTEXT]    case  'd'  :  case  'D'  :  try  {  Double  d  =  NumberUtils.createDouble(numeric);  if  (!(d.isInfinite()  ||  (d.floatValue()  ==  0.0D  &&  !allZeros)))  {  return  d;  }  }  catch  (NumberFormatException  nfe)  {  //  NOPMD    [BUGGY]    if(numeric.charAt(0)  ==  '-')  {  String  dec  =  NumberUtils.createDecimal(numeric);  if(dec  ==  null  &&  exp.length  >  0)  {  return  d;  }  [BUGGY]  }  try  {  return  createBigDecimal(numeric);  }  catch  (NumberFormatException  e)  {  //  NOPMD  }  default  :  throw  new  NumberFormatException(str  +   "  is  not  a  valid  number. ");  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  	projects/Lang7/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	541	541	1	replace	    if(numeric.charAt(0)  ==  '-')  {  String  dec  =  NumberUtils.createDecimal(numeric);  if(dec  ==  null  &&  exp.length  >  0)  {  return  d;  }		non-compiled	[CE]  orphaned  default	12	None	add
4	[BUG]  [BUGGY]    if(numeric.charAt(0)  ==  '-')  {  String  dec  =  NumberUtils.createDecimal(numeric);  if(dec  ==  null  &&  dec.length  >  0)  {  return  dec;  }  [CE]  orphaned  default  [CONTEXT]    case  'd'  :  case  'D'  :  try  {  Double  d  =  NumberUtils.createDouble(numeric);  if  (!(d.isInfinite()  ||  (d.floatValue()  ==  0.0D  &&  !allZeros)))  {  return  d;  }  }  catch  (NumberFormatException  nfe)  {  //  NOPMD    [BUGGY]    if(numeric.charAt(0)  ==  '-')  {  String  dec  =  NumberUtils.createDecimal(numeric);  if(dec  ==  null  &&  dec.length  >  0)  {  return  dec;  }  [BUGGY]  }  try  {  return  createBigDecimal(numeric);  }  catch  (NumberFormatException  e)  {  //  NOPMD  }  default  :  throw  new  NumberFormatException(str  +   "  is  not  a  valid  number. ");  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  	projects/Lang7/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	541	541	1	replace	    if(numeric.charAt(0)  ==  '-')  {  String  dec  =  NumberUtils.createDecimal(numeric);  if(dec  ==  null  &&  dec.length  >  0)  {  return  dec;  }		non-compiled	[CE]  orphaned  default	12	None	add
5	[BUG]  [BUGGY]    if(numeric.charAt(0)  ==  '-')  {  String  dec  =  NumberUtils.createDecimal(numeric);  if(dec  ==  null  &&  exp.length  >  0)  {  return  dec;  }  [CE]  orphaned  default  [CONTEXT]    case  'd'  :  case  'D'  :  try  {  Double  d  =  NumberUtils.createDouble(numeric);  if  (!(d.isInfinite()  ||  (d.floatValue()  ==  0.0D  &&  !allZeros)))  {  return  d;  }  }  catch  (NumberFormatException  nfe)  {  //  NOPMD    [BUGGY]    if(numeric.charAt(0)  ==  '-')  {  String  dec  =  NumberUtils.createDecimal(numeric);  if(dec  ==  null  &&  exp.length  >  0)  {  return  dec;  }  [BUGGY]  }  try  {  return  createBigDecimal(numeric);  }  catch  (NumberFormatException  e)  {  //  NOPMD  }  default  :  throw  new  NumberFormatException(str  +   "  is  not  a  valid  number. ");  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  	projects/Lang7/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	541	541	1	replace	    if(numeric.charAt(0)  ==  '-')  {  String  dec  =  NumberUtils.createDecimal(numeric);  if(dec  ==  null  &&  exp.length  >  0)  {  return  dec;  }		non-compiled	[CE]  orphaned  default	12	None	add
11	[BUG]  [BUGGY]    String  numeric  =  str.substring(0,  str.length()  -  1);  [CE]  variable  numeric  is  already  defined  in  method  createNumber(String)  [CONTEXT]  if  (dec  ==  null  &&  exp  ==  null  &&  (numeric.charAt(0)  ==  '-'  &&  isDigits(numeric.substring(1))  ||  isDigits(numeric)))  {  try  {  return  createLong(numeric);  }  catch  (NumberFormatException  nfe)  {  //  NOPMD  }  [BUGGY]    String  numeric  =  str.substring(0,  str.length()  -  1);  [BUGGY]  return  createBigInteger(numeric);  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  	projects/Lang7/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	514	514	1	replace	    String  numeric  =  str.substring(0,  str.length()  -  1);		non-compiled	[CE]  variable  numeric  is  already  defined  in  method  createNumber(String)	8	None	add
12	[BUG]  [BUGGY]    if(dec  ==  null  &&  exp  ==  null)  {  String  numeric  =  dec.toString();  if(numeric.charAt(0)  ==  '-'  &&  isDigits(numeric.substring(1))  ||  isDigits(numeric  [CE]  ')'  expected  [CONTEXT]  if  (dec  ==  null  &&  exp  ==  null  &&  (numeric.charAt(0)  ==  '-'  &&  isDigits(numeric.substring(1))  ||  isDigits(numeric)))  {  try  {  return  createLong(numeric);  }  catch  (NumberFormatException  nfe)  {  //  NOPMD  }  [BUGGY]    if(dec  ==  null  &&  exp  ==  null)  {  String  numeric  =  dec.toString();  if(numeric.charAt(0)  ==  '-'  &&  isDigits(numeric.substring(1))  ||  isDigits(numeric  [BUGGY]  return  createBigInteger(numeric);  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  	projects/Lang7/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	514	514	1	replace	    if(dec  ==  null  &&  exp  ==  null)  {  String  numeric  =  dec.toString();  if(numeric.charAt(0)  ==  '-'  &&  isDigits(numeric.substring(1))  ||  isDigits(numeric		non-compiled	[CE]  ')'  expected	8	None	add
13	[BUG]  [BUGGY]    if(dec  ==  null  &&  exp  ==  null)  {  String  numeric  =  dec.toString();  if(numeric.charAt(0)  ==  '-'  &&  isDigits(numeric.substring(2)))  {  return  createBigDecimal(numeric);  }  [CE]  orphaned  case  [CONTEXT]  if  (dec  ==  null  &&  exp  ==  null  &&  (numeric.charAt(0)  ==  '-'  &&  isDigits(numeric.substring(1))  ||  isDigits(numeric)))  {  try  {  return  createLong(numeric);  }  catch  (NumberFormatException  nfe)  {  //  NOPMD  }  [BUGGY]    if(dec  ==  null  &&  exp  ==  null)  {  String  numeric  =  dec.toString();  if(numeric.charAt(0)  ==  '-'  &&  isDigits(numeric.substring(2)))  {  return  createBigDecimal(numeric);  }  [BUGGY]  return  createBigInteger(numeric);  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  	projects/Lang7/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	514	514	1	replace	    if(dec  ==  null  &&  exp  ==  null)  {  String  numeric  =  dec.toString();  if(numeric.charAt(0)  ==  '-'  &&  isDigits(numeric.substring(2)))  {  return  createBigDecimal(numeric);  }		non-compiled	[CE]  orphaned  case	8	None	add
14	[BUG]  [BUGGY]    if(dec  ==  null  &&  exp  ==  null)  {  String  numeric  =  dec.toString();  if(numeric.charAt(0)  ==  '-'  &&  isDigits(numeric.substring(3)))  {  return  createBigDecimal(numeric);  }  [CE]  orphaned  case  [CONTEXT]  if  (dec  ==  null  &&  exp  ==  null  &&  (numeric.charAt(0)  ==  '-'  &&  isDigits(numeric.substring(1))  ||  isDigits(numeric)))  {  try  {  return  createLong(numeric);  }  catch  (NumberFormatException  nfe)  {  //  NOPMD  }  [BUGGY]    if(dec  ==  null  &&  exp  ==  null)  {  String  numeric  =  dec.toString();  if(numeric.charAt(0)  ==  '-'  &&  isDigits(numeric.substring(3)))  {  return  createBigDecimal(numeric);  }  [BUGGY]  return  createBigInteger(numeric);  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  	projects/Lang7/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	514	514	1	replace	    if(dec  ==  null  &&  exp  ==  null)  {  String  numeric  =  dec.toString();  if(numeric.charAt(0)  ==  '-'  &&  isDigits(numeric.substring(3)))  {  return  createBigDecimal(numeric);  }		non-compiled	[CE]  orphaned  case	8	None	add
15	[BUG]  [BUGGY]    if(dec  ==  null  &&  exp  ==  null)  {  String  numeric  =  dec.toString();  if(numeric.charAt(0)  ==  '-'  &&  isDigits(numeric.substring(1))  ||  isDigits(numeric.  [CE]  <identifier>  expected  [CONTEXT]  if  (dec  ==  null  &&  exp  ==  null  &&  (numeric.charAt(0)  ==  '-'  &&  isDigits(numeric.substring(1))  ||  isDigits(numeric)))  {  try  {  return  createLong(numeric);  }  catch  (NumberFormatException  nfe)  {  //  NOPMD  }  [BUGGY]    if(dec  ==  null  &&  exp  ==  null)  {  String  numeric  =  dec.toString();  if(numeric.charAt(0)  ==  '-'  &&  isDigits(numeric.substring(1))  ||  isDigits(numeric.  [BUGGY]  return  createBigInteger(numeric);  }  [CLASS]  NumberUtils  [METHOD]  createNumber  [RETURN_TYPE]  Number  String  str  [VARIABLES]  Integer  INTEGER_MINUS_ONE  INTEGER_ONE  INTEGER_ZERO  Float  FLOAT_MINUS_ONE  FLOAT_ONE  FLOAT_ZERO  f  boolean  allZeros  Byte  BYTE_MINUS_ONE  BYTE_ONE  BYTE_ZERO  Long  LONG_MINUS_ONE  LONG_ONE  LONG_ZERO  char  lastChar  NumberFormatException  e  nfe  String  dec  exp  mant  numeric  str  Double  DOUBLE_MINUS_ONE  DOUBLE_ONE  DOUBLE_ZERO  d  Short  SHORT_MINUS_ONE  SHORT_ONE  SHORT_ZERO  int  decPos  expPos  hexDigits  	projects/Lang7/src/main/java/org/apache/commons/lang3/math/NumberUtils.java	1.0	514	514	1	replace	    if(dec  ==  null  &&  exp  ==  null)  {  String  numeric  =  dec.toString();  if(numeric.charAt(0)  ==  '-'  &&  isDigits(numeric.substring(1))  ||  isDigits(numeric.		non-compiled	[CE]  <identifier>  expected	8	None	add
