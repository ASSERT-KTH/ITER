projects/Math80/src/main/java/org/apache/commons/math/linear/EigenDecompositionImpl.java958work[j]=d;
projects/Math80/src/main/java/org/apache/commons/math/linear/EigenDecompositionImpl.java958work[j]=d+work[i];
projects/Math80/src/main/java/org/apache/commons/math/linear/EigenDecompositionImpl.java958work[j]=0;
projects/Math80/src/main/java/org/apache/commons/math/linear/EigenDecompositionImpl.java958work[j]=i;
projects/Math80/src/main/java/org/apache/commons/math/linear/EigenDecompositionImpl.java958
projects/Math80/src/main/java/org/apache/commons/math/linear/EigenDecompositionImpl.java958d=work[i+2];
projects/Math80/src/main/java/org/apache/commons/math/linear/EigenDecompositionImpl.java958work[j]=Math.max(work[i+2]/TOLERANCE_2*d);
projects/Math80/src/main/java/org/apache/commons/math/linear/EigenDecompositionImpl.java958work[j]=Math.max(work[i+2]/TOLERANCE_2);
projects/Math80/src/main/java/org/apache/commons/math/linear/EigenDecompositionImpl.java958d=work[i+1];
projects/Math80/src/main/java/org/apache/commons/math/linear/EigenDecompositionImpl.java958work[j]=Math.max(work[i+2]*d);
projects/Math80/src/main/java/org/apache/commons/math/linear/EigenDecompositionImpl.java958work[i+2]=0.0;
projects/Math80/src/main/java/org/apache/commons/math/linear/EigenDecompositionImpl.java958d=work[i+2]*Math.pow(0,work[i+2]);
projects/Math80/src/main/java/org/apache/commons/math/linear/EigenDecompositionImpl.java958d=work[i+2]*Math.pow(0,work[i+3]);
projects/Math80/src/main/java/org/apache/commons/math/linear/EigenDecompositionImpl.java958d=work[i+2]*MathUtils.SAFE_MIN;
projects/Math80/src/main/java/org/apache/commons/math/linear/EigenDecompositionImpl.java958work[j]=d+work[i+1];
projects/Math80/src/main/java/org/apache/commons/math/linear/EigenDecompositionImpl.java958work[j]=d+work[i+2];
projects/Math80/src/main/java/org/apache/commons/math/linear/EigenDecompositionImpl.java958if((MathUtils.SAFE_MIN*work[i+2]<0)&&(MathUtils.SAFE_MIN*work[j]<0)){finaldoubletmp=work[i+2]*(work[i+2]/work[
projects/Math80/src/main/java/org/apache/commons/math/linear/EigenDecompositionImpl.java958if((MathUtils.SAFE_MIN*work[i+2]<0)&&(MathUtils.SAFE_MIN*work[j]<0)){finaldoubled=work[i+2]*(work[i+2]/work[
projects/Math80/src/main/java/org/apache/commons/math/linear/EigenDecompositionImpl.java958if((MathUtils.SAFE_MIN*work[i+2]<0)&&(MathUtils.SAFE_MIN*work[j]<=0)){finaldoubletmp=work[i+2]*(work[i+2]/work[
projects/Math80/src/main/java/org/apache/commons/math/linear/EigenDecompositionImpl.java958if((MathUtils.SAFE_MIN*work[i+2]<0)&&(MathUtils.SAFE_MIN*work[j]<0)){finaldoubletmp=work[i+2]*(work[i+2]/work[i
projects/Math80/src/main/java/org/apache/commons/math/linear/EigenDecompositionImpl.java958if((MathUtils.SAFE_MIN*work[i+2]<0)&&(MathUtils.SAFE_MIN*work[j]<0)){finaldoubletmp=work[i+2]*(work[i+3]/work[
