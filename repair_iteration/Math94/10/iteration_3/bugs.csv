bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  ((  u  &  1)  ==  0  &&  v  &  1)  ==  0)  {  u  /=  31;  k++;  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;      [BUGGY]  ((  u  &  1)  ==  0  &&  v  &  1)  ==  0)  {  u  /=  31;  k++;  [BUGGY]      v  /=  2;  k++;  //  cast  out  twos.  }  if  (k  ==  31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }    int  t  =  ((u  &  1)  ==  1)  ?  v  :  -(u  /  2)/*  B3  */;    [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  short  NS  PS  ZS  boolean  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  k  t  u  v  	projects/Math94/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	431	431	1	replace	((  u  &  1)  ==  0  &&  v  &  1)  ==  0)  {  u  /=  31;  k++;	  ((    u    &    1)    ==    0    &&    v    &    1)    ==    0)    {    u    /=    2;    k++;    	non-compiled	[CE]  <identifier>  expected	13	None	replace
2	[BUG]  [BUGGY]  ((  u  &  1)  ==  0  &&  v  &  1)  ==  0)  {  u  /=  3;  k++;  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;      [BUGGY]  ((  u  &  1)  ==  0  &&  v  &  1)  ==  0)  {  u  /=  3;  k++;  [BUGGY]      v  /=  2;  k++;  //  cast  out  twos.  }  if  (k  ==  31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }    int  t  =  ((u  &  1)  ==  1)  ?  v  :  -(u  /  2)/*  B3  */;    [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  short  NS  PS  ZS  boolean  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  k  t  u  v  	projects/Math94/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	431	431	1	replace	((  u  &  1)  ==  0  &&  v  &  1)  ==  0)  {  u  /=  3;  k++;	  ((    u    &    1)    ==    0    &&    v    &    1)    ==    0)    {    u    /=    2;    k++;    	non-compiled	[CE]  <identifier>  expected	13	None	replace
3	[BUG]  [BUGGY]  if(k  >  31)  {  k++;  }  [CE]  <identifier>  expected  [FE]            AssertionFailedError      [CONTEXT]      u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;      [BUGGY]  if(k  >  31)  {  k++;  }  [BUGGY]      v  /=  2;  k++;  //  cast  out  twos.  }  if  (k  ==  31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }    int  t  =  ((u  &  1)  ==  1)  ?  v  :  -(u  /  2)/*  B3  */;    [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  short  NS  PS  ZS  boolean  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  k  t  u  v  	projects/Math94/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	431	431	1	replace	if(k  >  31)  {  k++;  }	  if(v    >    31)    {    k++;    }    	non-compiled	[CE]  <identifier>  expected	31	None	replace
4	[BUG]  [BUGGY]  if(k  ==  31)  {  k++;  }  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;      [BUGGY]  if(k  ==  31)  {  k++;  }  [BUGGY]      v  /=  2;  k++;  //  cast  out  twos.  }  if  (k  ==  31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }    int  t  =  ((u  &  1)  ==  1)  ?  v  :  -(u  /  2)/*  B3  */;    [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  short  NS  PS  ZS  boolean  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  k  t  u  v  	projects/Math94/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	431	431	1	replace	if(k  ==  31)  {  k++;  }	  if(v    >    31)    {    k++;    }    	non-compiled	[CE]  <identifier>  expected	31	None	replace
5	[BUG]  [BUGGY]  if(t  >  31)  {  k++;  }  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;      [BUGGY]  if(t  >  31)  {  k++;  }  [BUGGY]      v  /=  2;  k++;  //  cast  out  twos.  }  if  (k  ==  31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }    int  t  =  ((u  &  1)  ==  1)  ?  v  :  -(u  /  2)/*  B3  */;    [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  short  NS  PS  ZS  boolean  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  k  t  u  v  	projects/Math94/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	431	431	1	replace	if(t  >  31)  {  k++;  }	  if(v    >    31)    {    k++;    }    	non-compiled	[CE]  <identifier>  expected	31	None	replace
6	[BUG]  [BUGGY]  ((  u  &  1)  ==  1  &&  k  <  31)?  v  :  -(u  /  2)/  B3  */);  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;      [BUGGY]  ((  u  &  1)  ==  1  &&  k  <  31)?  v  :  -(u  /  2)/  B3  */);  [BUGGY]      v  /=  2;  k++;  //  cast  out  twos.  }  if  (k  ==  31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }    int  t  =  ((u  &  1)  ==  1)  ?  v  :  -(u  /  2)/*  B3  */;    [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  short  NS  PS  ZS  boolean  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  k  t  u  v  	projects/Math94/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	431	431	1	replace	((  u  &  1)  ==  1  &&  k  <  31)?  v  :  -(u  /  2)/  B3  */);	  ((    u    &    1)    ==    1    &&    k    <    31)?    v    :    -(u    /    2)/*    B3    */);    	non-compiled	[CE]  <identifier>  expected	16	None	replace
7	[BUG]  [BUGGY]  ((  u  &  1)  ==  1  &&  k  <  32)?  v  :  -(u  /  2)/*  B3  */);  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;      [BUGGY]  ((  u  &  1)  ==  1  &&  k  <  32)?  v  :  -(u  /  2)/*  B3  */);  [BUGGY]      v  /=  2;  k++;  //  cast  out  twos.  }  if  (k  ==  31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }    int  t  =  ((u  &  1)  ==  1)  ?  v  :  -(u  /  2)/*  B3  */;    [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  short  NS  PS  ZS  boolean  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  k  t  u  v  	projects/Math94/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	431	431	1	replace	((  u  &  1)  ==  1  &&  k  <  32)?  v  :  -(u  /  2)/*  B3  */);	  ((    u    &    1)    ==    1    &&    k    <    31)?    v    :    -(u    /    2)/*    B3    */);    	non-compiled	[CE]  <identifier>  expected	16	None	replace
8	[BUG]  [BUGGY]  ((  u  &  1)  ==  1  &&  v  &  2)  ==  1  &&  k  <  31)  {  u  /=  2;  k++;  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;      [BUGGY]  ((  u  &  1)  ==  1  &&  v  &  2)  ==  1  &&  k  <  31)  {  u  /=  2;  k++;  [BUGGY]      v  /=  2;  k++;  //  cast  out  twos.  }  if  (k  ==  31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }    int  t  =  ((u  &  1)  ==  1)  ?  v  :  -(u  /  2)/*  B3  */;    [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  short  NS  PS  ZS  boolean  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  k  t  u  v  	projects/Math94/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	431	431	1	replace	((  u  &  1)  ==  1  &&  v  &  2)  ==  1  &&  k  <  31)  {  u  /=  2;  k++;	  ((    u    &    1)    ==    0    &&    v    &    2)    ==    0    &&    k    <    31)    {    u    /=    2;    k++;    	non-compiled	[CE]  <identifier>  expected	14	None	replace
9	[BUG]  [BUGGY]  ((  u  &  1)  ==  0  &&  v  &  2)  ==  0)  {  u  /=  2;  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;      [BUGGY]  ((  u  &  1)  ==  0  &&  v  &  2)  ==  0)  {  u  /=  2;  [BUGGY]      v  /=  2;  k++;  //  cast  out  twos.  }  if  (k  ==  31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }    int  t  =  ((u  &  1)  ==  1)  ?  v  :  -(u  /  2)/*  B3  */;    [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  short  NS  PS  ZS  boolean  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  k  t  u  v  	projects/Math94/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	431	431	1	replace	((  u  &  1)  ==  0  &&  v  &  2)  ==  0)  {  u  /=  2;	  ((    u    &    1)    ==    0    &&    v    &    2)    ==    0    &&    k    <    31)    {    u    /=    2;    k++;    	non-compiled	[CE]  <identifier>  expected	14	None	replace
10	[BUG]  [BUGGY]  ((  u  &  1)  ==  0  &&  k  <  31)?  v  :  -(u  /  2)/  4  */);  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;      [BUGGY]  ((  u  &  1)  ==  0  &&  k  <  31)?  v  :  -(u  /  2)/  4  */);  [BUGGY]      v  /=  2;  k++;  //  cast  out  twos.  }  if  (k  ==  31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }    int  t  =  ((u  &  1)  ==  1)  ?  v  :  -(u  /  2)/*  B3  */;    [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  short  NS  PS  ZS  boolean  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  k  t  u  v  	projects/Math94/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	431	431	1	replace	((  u  &  1)  ==  0  &&  k  <  31)?  v  :  -(u  /  2)/  4  */);	  ((    u    &    1)    ==    0    &&    k    <    31)?    v    :    -(u    /    2)/    B3    */);    	non-compiled	[CE]  <identifier>  expected	17	None	replace
11	[BUG]  [BUGGY]  ((  u  &  1)  ==  0  &&  k  <  31)?  v  :  -(u  /  2)/  2);  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;      [BUGGY]  ((  u  &  1)  ==  0  &&  k  <  31)?  v  :  -(u  /  2)/  2);  [BUGGY]      v  /=  2;  k++;  //  cast  out  twos.  }  if  (k  ==  31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }    int  t  =  ((u  &  1)  ==  1)  ?  v  :  -(u  /  2)/*  B3  */;    [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  short  NS  PS  ZS  boolean  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  k  t  u  v  	projects/Math94/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	431	431	1	replace	((  u  &  1)  ==  0  &&  k  <  31)?  v  :  -(u  /  2)/  2);	  ((    u    &    1)    ==    0    &&    k    <    31)?    v    :    -(u    /    2)/    B3    */);    	non-compiled	[CE]  <identifier>  expected	17	None	replace
12	[BUG]  [BUGGY]  ((  u  &  1)  ==  0  &&  k  &  1)  ==  0  &&  k  <  31)  {  throw  new  ArithmeticException( "overflow:  gcd  is  2  >=  31 ");  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;      [BUGGY]  ((  u  &  1)  ==  0  &&  k  &  1)  ==  0  &&  k  <  31)  {  throw  new  ArithmeticException( "overflow:  gcd  is  2  >=  31 ");  [BUGGY]      v  /=  2;  k++;  //  cast  out  twos.  }  if  (k  ==  31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }    int  t  =  ((u  &  1)  ==  1)  ?  v  :  -(u  /  2)/*  B3  */;    [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  short  NS  PS  ZS  boolean  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  k  t  u  v  	projects/Math94/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	431	431	1	replace	((  u  &  1)  ==  0  &&  k  &  1)  ==  0  &&  k  <  31)  {  throw  new  ArithmeticException( "overflow:  gcd  is  2  >=  31 ");	  ((    u    &    1)    ==    0    &&    k    &    1)    ==    0    &&    k    <    31)    {    throw    new    ArithmeticException(   "overflow:    gcd    is    2    >>    31   ");    	non-compiled	[CE]  <identifier>  expected	2	None	replace
13	[BUG]  [BUGGY]  if(t  >  0)  {  k++;  }  else  {  throw  new  ArithmeticException( "overflow:  gcd  is  2  >>  31 ");  }  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;      [BUGGY]  if(t  >  0)  {  k++;  }  else  {  throw  new  ArithmeticException( "overflow:  gcd  is  2  >>  31 ");  }  [BUGGY]      v  /=  2;  k++;  //  cast  out  twos.  }  if  (k  ==  31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }    int  t  =  ((u  &  1)  ==  1)  ?  v  :  -(u  /  2)/*  B3  */;    [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  short  NS  PS  ZS  boolean  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  k  t  u  v  	projects/Math94/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	431	431	1	replace	if(t  >  0)  {  k++;  }  else  {  throw  new  ArithmeticException( "overflow:  gcd  is  2  >>  31 ");  }	  if(t    >    0)    {    k++;    }    else    {    throw    new    ArithmeticException(   "   ");    }    	non-compiled	[CE]  <identifier>  expected	23	None	replace
14	[BUG]  [BUGGY]  if(t  >  0)  {  k++;  }  else  {  throw  new  ArithmeticException( "overflow:  gcd  is  2  ==  31 ");  }  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;      [BUGGY]  if(t  >  0)  {  k++;  }  else  {  throw  new  ArithmeticException( "overflow:  gcd  is  2  ==  31 ");  }  [BUGGY]      v  /=  2;  k++;  //  cast  out  twos.  }  if  (k  ==  31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }    int  t  =  ((u  &  1)  ==  1)  ?  v  :  -(u  /  2)/*  B3  */;    [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  short  NS  PS  ZS  boolean  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  k  t  u  v  	projects/Math94/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	431	431	1	replace	if(t  >  0)  {  k++;  }  else  {  throw  new  ArithmeticException( "overflow:  gcd  is  2  ==  31 ");  }	  if(t    >    0)    {    k++;    }    else    {    throw    new    ArithmeticException(   "   ");    }    	non-compiled	[CE]  <identifier>  expected	23	None	replace
15	[BUG]  [BUGGY]  ((  u  &  1)  ==  0  &&  v  &  2)  ==  0)  {  throw  new  ArithmeticException( "Overflow:  gcd  is  2  >>  31 ");  }  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;      [BUGGY]  ((  u  &  1)  ==  0  &&  v  &  2)  ==  0)  {  throw  new  ArithmeticException( "Overflow:  gcd  is  2  >>  31 ");  }  [BUGGY]      v  /=  2;  k++;  //  cast  out  twos.  }  if  (k  ==  31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }    int  t  =  ((u  &  1)  ==  1)  ?  v  :  -(u  /  2)/*  B3  */;    [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  short  NS  PS  ZS  boolean  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  k  t  u  v  	projects/Math94/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	431	431	1	replace	((  u  &  1)  ==  0  &&  v  &  2)  ==  0)  {  throw  new  ArithmeticException( "Overflow:  gcd  is  2  >>  31 ");  }	  ((    u    &    1)    ==    0    &&    v    &    2)    ==    0    &&    k    <    31)    {    throw    new    ArithmeticException(   "Overflow:    gcd    is    2    >>    31   ");    }    	non-compiled	[CE]  <identifier>  expected	27	None	replace
16	[BUG]  [BUGGY]  ((  u  &  1)  ==  0  &&  v  &  2)  ==  0  &&  k  <  31)  {  throw  new  ArithmeticException( "Overflow:  gcd  is  2  >=  31 ");  }  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;      [BUGGY]  ((  u  &  1)  ==  0  &&  v  &  2)  ==  0  &&  k  <  31)  {  throw  new  ArithmeticException( "Overflow:  gcd  is  2  >=  31 ");  }  [BUGGY]      v  /=  2;  k++;  //  cast  out  twos.  }  if  (k  ==  31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }    int  t  =  ((u  &  1)  ==  1)  ?  v  :  -(u  /  2)/*  B3  */;    [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  short  NS  PS  ZS  boolean  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  k  t  u  v  	projects/Math94/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	431	431	1	replace	((  u  &  1)  ==  0  &&  v  &  2)  ==  0  &&  k  <  31)  {  throw  new  ArithmeticException( "Overflow:  gcd  is  2  >=  31 ");  }	  ((    u    &    1)    ==    0    &&    v    &    2)    ==    0    &&    k    <    31)    {    throw    new    ArithmeticException(   "Overflow:    gcd    is    2    >>    31   ");    }    	non-compiled	[CE]  <identifier>  expected	27	None	replace
17	[BUG]  [BUGGY]  ((  u  &  1)  ==  0  &&  k  &  1)  ==  0  &&  31)  {  u  /=  2;  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;      [BUGGY]  ((  u  &  1)  ==  0  &&  k  &  1)  ==  0  &&  31)  {  u  /=  2;  [BUGGY]      v  /=  2;  k++;  //  cast  out  twos.  }  if  (k  ==  31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }    int  t  =  ((u  &  1)  ==  1)  ?  v  :  -(u  /  2)/*  B3  */;    [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  short  NS  PS  ZS  boolean  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  k  t  u  v  	projects/Math94/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	431	431	1	replace	((  u  &  1)  ==  0  &&  k  &  1)  ==  0  &&  31)  {  u  /=  2;	  ((    u    &    1)    ==    0    &&    k    &    1)    ==    0    &&    k    <    31)    {    u    /=    2;    	non-compiled	[CE]  <identifier>  expected	3	None	replace
18	[BUG]  [BUGGY]  ((  u  &  1)  ==  0  &&  k  &  2)  ==  0  &&  k  <  31)  {  u  /=  2;  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;      [BUGGY]  ((  u  &  1)  ==  0  &&  k  &  2)  ==  0  &&  k  <  31)  {  u  /=  2;  [BUGGY]      v  /=  2;  k++;  //  cast  out  twos.  }  if  (k  ==  31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }    int  t  =  ((u  &  1)  ==  1)  ?  v  :  -(u  /  2)/*  B3  */;    [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  short  NS  PS  ZS  boolean  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  k  t  u  v  	projects/Math94/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	431	431	1	replace	((  u  &  1)  ==  0  &&  k  &  2)  ==  0  &&  k  <  31)  {  u  /=  2;	  ((    u    &    1)    ==    0    &&    k    &    1)    ==    0    &&    k    <    31)    {    u    /=    2;    	non-compiled	[CE]  <identifier>  expected	3	None	replace
19	[BUG]  [BUGGY]  ((  u  &  1)  ==  0  &&  k  &  1)  ==  0  &&  k  <  31)  {  u  /=  3;  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;      [BUGGY]  ((  u  &  1)  ==  0  &&  k  &  1)  ==  0  &&  k  <  31)  {  u  /=  3;  [BUGGY]      v  /=  2;  k++;  //  cast  out  twos.  }  if  (k  ==  31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }    int  t  =  ((u  &  1)  ==  1)  ?  v  :  -(u  /  2)/*  B3  */;    [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  short  NS  PS  ZS  boolean  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  k  t  u  v  	projects/Math94/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	431	431	1	replace	((  u  &  1)  ==  0  &&  k  &  1)  ==  0  &&  k  <  31)  {  u  /=  3;	  ((    u    &    1)    ==    0    &&    k    &    1)    ==    0    &&    k    <    31)    {    u    /=    2;    	non-compiled	[CE]  <identifier>  expected	3	None	replace
20	[BUG]  [BUGGY]  ((  u  &  1)  ==  0  &&  k  &  1)  ==  0  &&  k  <  32)  {  u  /=  2;  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;      [BUGGY]  ((  u  &  1)  ==  0  &&  k  &  1)  ==  0  &&  k  <  32)  {  u  /=  2;  [BUGGY]      v  /=  2;  k++;  //  cast  out  twos.  }  if  (k  ==  31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }    int  t  =  ((u  &  1)  ==  1)  ?  v  :  -(u  /  2)/*  B3  */;    [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  short  NS  PS  ZS  boolean  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  k  t  u  v  	projects/Math94/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	431	431	1	replace	((  u  &  1)  ==  0  &&  k  &  1)  ==  0  &&  k  <  32)  {  u  /=  2;	  ((    u    &    1)    ==    0    &&    v    &    1)    ==    0    &&    k    <    32)    {    u    /=    2;    	non-compiled	[CE]  <identifier>  expected	34	None	replace
21	[BUG]  [BUGGY]  ((  u  &  1)  ==  0  &&  v  &  1)  ==  0  &&  k  <  32)  {  u  /=  3;  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;      [BUGGY]  ((  u  &  1)  ==  0  &&  v  &  1)  ==  0  &&  k  <  32)  {  u  /=  3;  [BUGGY]      v  /=  2;  k++;  //  cast  out  twos.  }  if  (k  ==  31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }    int  t  =  ((u  &  1)  ==  1)  ?  v  :  -(u  /  2)/*  B3  */;    [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  short  NS  PS  ZS  boolean  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  k  t  u  v  	projects/Math94/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	431	431	1	replace	((  u  &  1)  ==  0  &&  v  &  1)  ==  0  &&  k  <  32)  {  u  /=  3;	  ((    u    &    1)    ==    0    &&    v    &    1)    ==    0    &&    k    <    32)    {    u    /=    2;    	non-compiled	[CE]  <identifier>  expected	34	None	replace
22	[BUG]  [BUGGY]  ((  u  &  1)  ==  0  &&  k  <  31)?  -(u  /  2):  -(v  /  2)/  B3  */);  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;      [BUGGY]  ((  u  &  1)  ==  0  &&  k  <  31)?  -(u  /  2):  -(v  /  2)/  B3  */);  [BUGGY]      v  /=  2;  k++;  //  cast  out  twos.  }  if  (k  ==  31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }    int  t  =  ((u  &  1)  ==  1)  ?  v  :  -(u  /  2)/*  B3  */;    [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  short  NS  PS  ZS  boolean  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  k  t  u  v  	projects/Math94/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	431	431	1	replace	((  u  &  1)  ==  0  &&  k  <  31)?  -(u  /  2):  -(v  /  2)/  B3  */);	  ((    u    &    1)    ==    0    &&    k    <    31)?    -(u    /    2):    -(u    /    2)/    B3    */);    	non-compiled	[CE]  <identifier>  expected	19	None	replace
23	[BUG]  [BUGGY]  ((  u  &  1)  ==  0  &&  k  <  31)?  -(u  /  2):  -(v  %  2)/  B3  */);  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;      [BUGGY]  ((  u  &  1)  ==  0  &&  k  <  31)?  -(u  /  2):  -(v  %  2)/  B3  */);  [BUGGY]      v  /=  2;  k++;  //  cast  out  twos.  }  if  (k  ==  31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }    int  t  =  ((u  &  1)  ==  1)  ?  v  :  -(u  /  2)/*  B3  */;    [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  short  NS  PS  ZS  boolean  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  k  t  u  v  	projects/Math94/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	431	431	1	replace	((  u  &  1)  ==  0  &&  k  <  31)?  -(u  /  2):  -(v  %  2)/  B3  */);	  ((    u    &    1)    ==    0    &&    k    <    31)?    -(u    /    2):    -(u    /    2)/    B3    */);    	non-compiled	[CE]  <identifier>  expected	19	None	replace
24	[BUG]  [BUGGY]  ((  u  &  1)  ==  0  &&  k  <  31)?  -(u  /  2):  -(u  %  2)/  B3  */);  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;      [BUGGY]  ((  u  &  1)  ==  0  &&  k  <  31)?  -(u  /  2):  -(u  %  2)/  B3  */);  [BUGGY]      v  /=  2;  k++;  //  cast  out  twos.  }  if  (k  ==  31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }    int  t  =  ((u  &  1)  ==  1)  ?  v  :  -(u  /  2)/*  B3  */;    [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  short  NS  PS  ZS  boolean  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  k  t  u  v  	projects/Math94/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	431	431	1	replace	((  u  &  1)  ==  0  &&  k  <  31)?  -(u  /  2):  -(u  %  2)/  B3  */);	  ((    u    &    1)    ==    0    &&    k    <    31)?    -(u    /    2):    -(u    /    2)/    B3    */);    	non-compiled	[CE]  <identifier>  expected	19	None	replace
25	[BUG]  [BUGGY]  ((  u  &  1)  ==  0  &&  k  <  31)?  t  :  -(u  /  2)/  B3  */);  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;      [BUGGY]  ((  u  &  1)  ==  0  &&  k  <  31)?  t  :  -(u  /  2)/  B3  */);  [BUGGY]      k++;  //  cast  out  twos.  }  if  (k  ==  31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }    int  t  =  ((u  &  1)  ==  1)  ?  v  :  -(u  /  2)/*  B3  */;    [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  short  NS  PS  ZS  boolean  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  k  t  u  v  	projects/Math94/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	431	431	1	replace	((  u  &  1)  ==  0  &&  k  <  31)?  t  :  -(u  /  2)/  B3  */);	  ((    u    &    1)    ==    0    &&    k    <    31)?    t    :    -(u    /    2)/*    B3    */);    	non-compiled	[CE]  <identifier>  expected	12	None	replace
26	[BUG]  [BUGGY]  ((  u  &  1)  ==  0  &&  k  &  1)  ==  0  &&  k  <  31)  {  throw  new  ArithmeticException( "gcd  is  2  >>  31 ");  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;      [BUGGY]  ((  u  &  1)  ==  0  &&  k  &  1)  ==  0  &&  k  <  31)  {  throw  new  ArithmeticException( "gcd  is  2  >>  31 ");  [BUGGY]      v  /=  2;  k++;  //  cast  out  twos.  }  if  (k  ==  31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }    int  t  =  ((u  &  1)  ==  1)  ?  v  :  -(u  /  2)/*  B3  */;    [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  short  NS  PS  ZS  boolean  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  k  t  u  v  	projects/Math94/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	431	431	1	replace	((  u  &  1)  ==  0  &&  k  &  1)  ==  0  &&  k  <  31)  {  throw  new  ArithmeticException( "gcd  is  2  >>  31 ");	  ((    u    &    1)    ==    0    &&    v    &    1)    ==    0    &&    k    <    31)    {    throw    new    ArithmeticException(   "gcd    is    2    >>    31   ");    	non-compiled	[CE]  <identifier>  expected	54	None	replace
27	[BUG]  [BUGGY]  ((  u  &  1)  ==  0  &&  v  &  1)  ==  0  &&  k  <  31)  {  throw  new  ArithmeticException( "gcd  is  2  >=  31 ");  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]      u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;      [BUGGY]  ((  u  &  1)  ==  0  &&  v  &  1)  ==  0  &&  k  <  31)  {  throw  new  ArithmeticException( "gcd  is  2  >=  31 ");  [BUGGY]      v  /=  2;  k++;  //  cast  out  twos.  }  if  (k  ==  31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }    int  t  =  ((u  &  1)  ==  1)  ?  v  :  -(u  /  2)/*  B3  */;    [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  short  NS  PS  ZS  boolean  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  k  t  u  v  	projects/Math94/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	431	431	1	replace	((  u  &  1)  ==  0  &&  v  &  1)  ==  0  &&  k  <  31)  {  throw  new  ArithmeticException( "gcd  is  2  >=  31 ");	  ((    u    &    1)    ==    0    &&    v    &    1)    ==    0    &&    k    <    31)    {    throw    new    ArithmeticException(   "gcd    is    2    >>    31   ");    	non-compiled	[CE]  <identifier>  expected	54	None	replace
28	[BUG]  [BUGGY]  ((  u  &  1)  ==  0  &&  v  &  1)  ==  0)  {  throw  new  ArithmeticException( "overflow:  gcd  is  2  >=  31 ");  }  [CE]  <identifier>  expected  [FE]            AssertionFailedError      [CONTEXT]      u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;      [BUGGY]  ((  u  &  1)  ==  0  &&  v  &  1)  ==  0)  {  throw  new  ArithmeticException( "overflow:  gcd  is  2  >=  31 ");  }  [BUGGY]      v  /=  2;  k++;  //  cast  out  twos.  }  if  (k  ==  31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }    int  t  =  ((u  &  1)  ==  1)  ?  v  :  -(u  /  2)/*  B3  */;    [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  short  NS  PS  ZS  boolean  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  k  t  u  v  	projects/Math94/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	431	431	1	replace	((  u  &  1)  ==  0  &&  v  &  1)  ==  0)  {  throw  new  ArithmeticException( "overflow:  gcd  is  2  >=  31 ");  }	  ((    u    &    1)    ==    0    &&    v    &    1)    ==    0)    {    throw    new    ArithmeticException(   "overflow:    gcd    is    2    >>    31   ");    }    	non-compiled	[CE]  <identifier>  expected	39	None	replace
29	[BUG]  [BUGGY]  ((  u  &  1)  ==  0  &&  k  <  31)  {  throw  new  ArithmeticException( "overflow:  gcd  is  2  >>  31 ");  }  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;      [BUGGY]  ((  u  &  1)  ==  0  &&  k  <  31)  {  throw  new  ArithmeticException( "overflow:  gcd  is  2  >>  31 ");  }  [BUGGY]      v  /=  2;  k++;  //  cast  out  twos.  }  if  (k  ==  31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }    int  t  =  ((u  &  1)  ==  1)  ?  v  :  -(u  /  2)/*  B3  */;    [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  short  NS  PS  ZS  boolean  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  k  t  u  v  	projects/Math94/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	431	431	1	replace	((  u  &  1)  ==  0  &&  k  <  31)  {  throw  new  ArithmeticException( "overflow:  gcd  is  2  >>  31 ");  }	  ((    u    &    1)    ==    0    &&    v    &    1)    ==    0)    {    throw    new    ArithmeticException(   "overflow:    gcd    is    2    >>    31   ");    }    	non-compiled	[CE]  <identifier>  expected	39	None	replace
30	[BUG]  [BUGGY]  ((  u  &  1)  ==  0  &&  v  &  2)  ==  0)  {  throw  new  ArithmeticException( "overflow:  gcd  is  2  >>  31 ");  }  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;      [BUGGY]  ((  u  &  1)  ==  0  &&  v  &  2)  ==  0)  {  throw  new  ArithmeticException( "overflow:  gcd  is  2  >>  31 ");  }  [BUGGY]      v  /=  2;  k++;  //  cast  out  twos.  }  if  (k  ==  31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }    int  t  =  ((u  &  1)  ==  1)  ?  v  :  -(u  /  2)/*  B3  */;    [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  short  NS  PS  ZS  boolean  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  k  t  u  v  	projects/Math94/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	431	431	1	replace	((  u  &  1)  ==  0  &&  v  &  2)  ==  0)  {  throw  new  ArithmeticException( "overflow:  gcd  is  2  >>  31 ");  }	  ((    u    &    1)    ==    0    &&    v    &    1)    ==    0)    {    throw    new    ArithmeticException(   "overflow:    gcd    is    2    >>    31   ");    }    	non-compiled	[CE]  <identifier>  expected	39	None	replace
31	[BUG]  [BUGGY]  if(t  <  =  0)  {  k++;  }  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;      [BUGGY]  if(t  <  =  0)  {  k++;  }  [BUGGY]      v  /=  2;  k++;  //  cast  out  twos.  }  if  (k  ==  31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }    int  t  =  ((u  &  1)  ==  1)  ?  v  :  -(u  /  2)/*  B3  */;    [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  short  NS  PS  ZS  boolean  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  k  t  u  v  	projects/Math94/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	431	431	1	replace	if(t  <  =  0)  {  k++;  }	  if(t    >    0)    {    k++;    }    	non-compiled	[CE]  <identifier>  expected	32	None	replace
32	[BUG]  [BUGGY]  if(t  ==  0)  {  k++;  }  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;      [BUGGY]  if(t  ==  0)  {  k++;  }  [BUGGY]      v  /=  2;  k++;  //  cast  out  twos.  }  if  (k  ==  31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }    int  t  =  ((u  &  1)  ==  1)  ?  v  :  -(u  /  2)/*  B3  */;    [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  short  NS  PS  ZS  boolean  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  k  t  u  v  	projects/Math94/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	431	431	1	replace	if(t  ==  0)  {  k++;  }	  if(t    >    0)    {    k++;    }    	non-compiled	[CE]  <identifier>  expected	32	None	replace
33	[BUG]  [BUGGY]  if(k  >  0)  {  k++;  }  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;      [BUGGY]  if(k  >  0)  {  k++;  }  [BUGGY]      v  /=  2;  k++;  //  cast  out  twos.  }  if  (k  ==  31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }    int  t  =  ((u  &  1)  ==  1)  ?  v  :  -(u  /  2)/*  B3  */;    [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  short  NS  PS  ZS  boolean  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  k  t  u  v  	projects/Math94/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	431	431	1	replace	if(k  >  0)  {  k++;  }	  if(t    >    0)    {    k++;    }    	non-compiled	[CE]  <identifier>  expected	32	None	replace
34	[BUG]  [BUGGY]  ((  u  &  1)  ==  1  &&  v  &  1)  ==  1  &&  k  <  32)  {  u  /=  2;  k++;  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;      [BUGGY]  ((  u  &  1)  ==  1  &&  v  &  1)  ==  1  &&  k  <  32)  {  u  /=  2;  k++;  [BUGGY]      v  /=  2;  k++;  //  cast  out  twos.  }  if  (k  ==  31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }    int  t  =  ((u  &  1)  ==  1)  ?  v  :  -(u  /  2)/*  B3  */;    [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  short  NS  PS  ZS  boolean  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  k  t  u  v  	projects/Math94/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	431	431	1	replace	((  u  &  1)  ==  1  &&  v  &  1)  ==  1  &&  k  <  32)  {  u  /=  2;  k++;	  ((    u    &    1)    ==    1    &&    v    &    1)    ==    1    &&    k    <    31)    {    u    /=    2;    k++;    	non-compiled	[CE]  <identifier>  expected	15	None	replace
35	[BUG]  [BUGGY]  ((  u  &  1)  ==  1  &&  v  &  1)  ==  1  &&  k  <  31)  {  u  /=  2;  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;      [BUGGY]  ((  u  &  1)  ==  1  &&  v  &  1)  ==  1  &&  k  <  31)  {  u  /=  2;  [BUGGY]      v  /=  2;  k++;  //  cast  out  twos.  }  if  (k  ==  31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }    int  t  =  ((u  &  1)  ==  1)  ?  v  :  -(u  /  2)/*  B3  */;    [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  short  NS  PS  ZS  boolean  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  k  t  u  v  	projects/Math94/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	431	431	1	replace	((  u  &  1)  ==  1  &&  v  &  1)  ==  1  &&  k  <  31)  {  u  /=  2;	  ((    u    &    1)    ==    1    &&    v    &    1)    ==    1    &&    k    <    31)    {    u    /=    2;    k++;    	non-compiled	[CE]  <identifier>  expected	15	None	replace
36	[BUG]  [BUGGY]  ((  u  &  1)  ==  0  &&  v  &  1)  ==  0)  {  throw  new  ArithmeticException( "Overflow:  gcd  is  2  >=  31 ");  }  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;      [BUGGY]  ((  u  &  1)  ==  0  &&  v  &  1)  ==  0)  {  throw  new  ArithmeticException( "Overflow:  gcd  is  2  >=  31 ");  }  [BUGGY]      v  /=  2;  k++;  //  cast  out  twos.  }  if  (k  ==  31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }    int  t  =  ((u  &  1)  ==  1)  ?  v  :  -(u  /  2)/*  B3  */;    [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  short  NS  PS  ZS  boolean  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  k  t  u  v  	projects/Math94/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	431	431	1	replace	((  u  &  1)  ==  0  &&  v  &  1)  ==  0)  {  throw  new  ArithmeticException( "Overflow:  gcd  is  2  >=  31 ");  }	  ((    u    &    1)    ==    0    &&    v    &    1)    ==    0)    {    throw    new    ArithmeticException(   "Overflow:    gcd    is    2    >>    31   ");    }    	non-compiled	[CE]  <identifier>  expected	48	None	replace
37	[BUG]  [BUGGY]  ((  u  &  1)  ==  0  &&  k  <  31)  {  throw  new  ArithmeticException( "Overflow:  gcd  is  2  >>  31 ");  }  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;      [BUGGY]  ((  u  &  1)  ==  0  &&  k  <  31)  {  throw  new  ArithmeticException( "Overflow:  gcd  is  2  >>  31 ");  }  [BUGGY]      v  /=  2;  k++;  //  cast  out  twos.  }  if  (k  ==  31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }    int  t  =  ((u  &  1)  ==  1)  ?  v  :  -(u  /  2)/*  B3  */;    [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  short  NS  PS  ZS  boolean  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  k  t  u  v  	projects/Math94/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	431	431	1	replace	((  u  &  1)  ==  0  &&  k  <  31)  {  throw  new  ArithmeticException( "Overflow:  gcd  is  2  >>  31 ");  }	  ((    u    &    1)    ==    0    &&    v    &    1)    ==    0)    {    throw    new    ArithmeticException(   "Overflow:    gcd    is    2    >>    31   ");    }    	non-compiled	[CE]  <identifier>  expected	48	None	replace
38	[BUG]  [BUGGY]  if(t  ==  0)  {  if(v  >  0)  {  k++;  }  else  {  throw  new  ArithmeticException( " ");  }  [CE]  <identifier>  expected  [FE]            AssertionFailedError      [CONTEXT]      u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;      [BUGGY]  if(t  ==  0)  {  if(v  >  0)  {  k++;  }  else  {  throw  new  ArithmeticException( " ");  }  [BUGGY]      v  /=  2;  k++;  //  cast  out  twos.  }  if  (k  ==  31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }    int  t  =  ((u  &  1)  ==  1)  ?  v  :  -(u  /  2)/*  B3  */;    [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  short  NS  PS  ZS  boolean  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  k  t  u  v  	projects/Math94/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	431	431	1	replace	if(t  ==  0)  {  if(v  >  0)  {  k++;  }  else  {  throw  new  ArithmeticException( " ");  }	  if(v    >    0)    {    k++;    }    else    {    throw    new    ArithmeticException(   "   ");    }    	non-compiled	[CE]  <identifier>  expected	38	None	replace
39	[BUG]  [BUGGY]  ((  u  +  1)  ==  0  &&  v  &  1)  ==  0  &&  k  <  31)  {  throw  new  ArithmeticException( "overflow:  gcd  is  2  >=  31 ");  }  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;      [BUGGY]  ((  u  +  1)  ==  0  &&  v  &  1)  ==  0  &&  k  <  31)  {  throw  new  ArithmeticException( "overflow:  gcd  is  2  >=  31 ");  }  [BUGGY]      v  /=  2;  k++;  //  cast  out  twos.  }  if  (k  ==  31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }    int  t  =  ((u  &  1)  ==  1)  ?  v  :  -(u  /  2)/*  B3  */;    [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  short  NS  PS  ZS  boolean  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  k  t  u  v  	projects/Math94/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	431	431	1	replace	((  u  +  1)  ==  0  &&  v  &  1)  ==  0  &&  k  <  31)  {  throw  new  ArithmeticException( "overflow:  gcd  is  2  >=  31 ");  }	  ((    u    +    1)    ==    0    &&    v    &    1)    ==    0    &&    k    <    31)    {    throw    new    ArithmeticException(   "overflow:    gcd    is    2    >>    31   ");    }    	non-compiled	[CE]  <identifier>  expected	40	None	replace
40	[BUG]  [BUGGY]  ((  u  +  1)  ==  1  &&  v  &  1)  ==  1  &&  k  <  31)  {  throw  new  ArithmeticException( "overflow:  gcd  is  2  >>  31 ");  }  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;      [BUGGY]  ((  u  +  1)  ==  1  &&  v  &  1)  ==  1  &&  k  <  31)  {  throw  new  ArithmeticException( "overflow:  gcd  is  2  >>  31 ");  }  [BUGGY]      v  /=  2;  k++;  //  cast  out  twos.  }  if  (k  ==  31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }    int  t  =  ((u  &  1)  ==  1)  ?  v  :  -(u  /  2)/*  B3  */;    [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  short  NS  PS  ZS  boolean  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  k  t  u  v  	projects/Math94/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	431	431	1	replace	((  u  +  1)  ==  1  &&  v  &  1)  ==  1  &&  k  <  31)  {  throw  new  ArithmeticException( "overflow:  gcd  is  2  >>  31 ");  }	  ((    u    +    1)    ==    0    &&    v    &    1)    ==    0    &&    k    <    31)    {    throw    new    ArithmeticException(   "overflow:    gcd    is    2    >>    31   ");    }    	non-compiled	[CE]  <identifier>  expected	40	None	replace
41	[BUG]  [BUGGY]  ((  u  &  1)  ==  0  &&  k  &  1)  ==  0  &&  k  <  31)  {  u  /=  2;  }  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;      [BUGGY]  ((  u  &  1)  ==  0  &&  k  &  1)  ==  0  &&  k  <  31)  {  u  /=  2;  }  [BUGGY]      v  /=  2;  k++;  //  cast  out  twos.  }  if  (k  ==  31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }    int  t  =  ((u  &  1)  ==  1)  ?  v  :  -(u  /  2)/*  B3  */;    [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  short  NS  PS  ZS  boolean  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  k  t  u  v  	projects/Math94/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	431	431	1	replace	((  u  &  1)  ==  0  &&  k  &  1)  ==  0  &&  k  <  31)  {  u  /=  2;  }	  ((    u    &    1)    ==    0    &&    v    &    1)    ==    0    &&    k    <    31)    {    u    /=    2;    }    	non-compiled	[CE]  <identifier>  expected	5	None	replace
42	[BUG]  [BUGGY]  ((  u  &  1)  ==  0  &&  v  &  2)  ==  0  &&  k  <  31)  {  u  /=  2;  }  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]      u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;      [BUGGY]  ((  u  &  1)  ==  0  &&  v  &  2)  ==  0  &&  k  <  31)  {  u  /=  2;  }  [BUGGY]      v  /=  2;  k++;  //  cast  out  twos.  }  if  (k  ==  31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }    int  t  =  ((u  &  1)  ==  1)  ?  v  :  -(u  /  2)/*  B3  */;    [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  short  NS  PS  ZS  boolean  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  k  t  u  v  	projects/Math94/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	431	431	1	replace	((  u  &  1)  ==  0  &&  v  &  2)  ==  0  &&  k  <  31)  {  u  /=  2;  }	  ((    u    &    1)    ==    0    &&    v    &    1)    ==    0    &&    k    <    31)    {    u    /=    2;    }    	non-compiled	[CE]  <identifier>  expected	5	None	replace
43	[BUG]  [BUGGY]  ((  u  &  1)  ==  0  &&  v  &  1)  ==  0)  {  u  /=  2;  }  [CE]  <identifier>  expected  [FE]                          AssertionFailedError      [CONTEXT]      u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;      [BUGGY]  ((  u  &  1)  ==  0  &&  v  &  1)  ==  0)  {  u  /=  2;  }  [BUGGY]      v  /=  2;  k++;  //  cast  out  twos.  }  if  (k  ==  31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }    int  t  =  ((u  &  1)  ==  1)  ?  v  :  -(u  /  2)/*  B3  */;    [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  short  NS  PS  ZS  boolean  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  k  t  u  v  	projects/Math94/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	431	431	1	replace	((  u  &  1)  ==  0  &&  v  &  1)  ==  0)  {  u  /=  2;  }	  ((    u    &    1)    ==    0    &&    v    &    1)    ==    0    &&    k    <    31)    {    u    /=    2;    }    	non-compiled	[CE]  <identifier>  expected	5	None	replace
44	[BUG]  [BUGGY]  ((  u  &  1)  ==  0  &&  v  &  2)  ==  0  &&  k  <  31)  {  throw  new  ArithmeticException( "overflow:  gcd  is  2  >=  31 ");  }  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;      [BUGGY]  ((  u  &  1)  ==  0  &&  v  &  2)  ==  0  &&  k  <  31)  {  throw  new  ArithmeticException( "overflow:  gcd  is  2  >=  31 ");  }  [BUGGY]      v  /=  2;  k++;  //  cast  out  twos.  }  if  (k  ==  31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }    int  t  =  ((u  &  1)  ==  1)  ?  v  :  -(u  /  2)/*  B3  */;    [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  short  NS  PS  ZS  boolean  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  k  t  u  v  	projects/Math94/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	431	431	1	replace	((  u  &  1)  ==  0  &&  v  &  2)  ==  0  &&  k  <  31)  {  throw  new  ArithmeticException( "overflow:  gcd  is  2  >=  31 ");  }	  ((    u    &    1)    ==    0    &&    v    &    2)    ==    0    &&    k    <    31)    {    throw    new    ArithmeticException(   "overflow:    gcd    is    2    >>    31   ");    }    	non-compiled	[CE]  <identifier>  expected	26	None	replace
45	[BUG]  [BUGGY]  ((  u  &  1)  ==  0  &&  v  &  2)  ==  0)  {  throw  new  ArithmeticException( "overflow:  gcd  is  2  >=  31 ");  }  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;      [BUGGY]  ((  u  &  1)  ==  0  &&  v  &  2)  ==  0)  {  throw  new  ArithmeticException( "overflow:  gcd  is  2  >=  31 ");  }  [BUGGY]      v  /=  2;  k++;  //  cast  out  twos.  }  if  (k  ==  31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }    int  t  =  ((u  &  1)  ==  1)  ?  v  :  -(u  /  2)/*  B3  */;    [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  short  NS  PS  ZS  boolean  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  k  t  u  v  	projects/Math94/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	431	431	1	replace	((  u  &  1)  ==  0  &&  v  &  2)  ==  0)  {  throw  new  ArithmeticException( "overflow:  gcd  is  2  >=  31 ");  }	  ((    u    &    1)    ==    0    &&    v    &    2)    ==    0    &&    k    <    31)    {    throw    new    ArithmeticException(   "overflow:    gcd    is    2    >>    31   ");    }    	non-compiled	[CE]  <identifier>  expected	26	None	replace
46	[BUG]  [BUGGY]  if(t  >  31)  {  k++;  }  else  {  throw  new  ArithmeticException( "overflow:  gcd  is  2  >>  31 ");  }  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;      [BUGGY]  if(t  >  31)  {  k++;  }  else  {  throw  new  ArithmeticException( "overflow:  gcd  is  2  >>  31 ");  }  [BUGGY]      v  /=  2;  k++;  //  cast  out  twos.  }  if  (k  ==  31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }    int  t  =  ((u  &  1)  ==  1)  ?  v  :  -(u  /  2)/*  B3  */;    [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  short  NS  PS  ZS  boolean  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  k  t  u  v  	projects/Math94/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	431	431	1	replace	if(t  >  31)  {  k++;  }  else  {  throw  new  ArithmeticException( "overflow:  gcd  is  2  >>  31 ");  }	  if(t    >    31)    {    k++;    }    else    {    throw    new    ArithmeticException(   "   ");    }    	non-compiled	[CE]  <identifier>  expected	24	None	replace
47	[BUG]  [BUGGY]  if(t  <  31)  {  k++;  }  else  {  throw  new  ArithmeticException( "overflow:  gcd  is  2  >>  31 ");  }  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;      [BUGGY]  if(t  <  31)  {  k++;  }  else  {  throw  new  ArithmeticException( "overflow:  gcd  is  2  >>  31 ");  }  [BUGGY]      v  /=  2;  k++;  //  cast  out  twos.  }  if  (k  ==  31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }    int  t  =  ((u  &  1)  ==  1)  ?  v  :  -(u  /  2)/*  B3  */;    [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  short  NS  PS  ZS  boolean  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  k  t  u  v  	projects/Math94/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	431	431	1	replace	if(t  <  31)  {  k++;  }  else  {  throw  new  ArithmeticException( "overflow:  gcd  is  2  >>  31 ");  }	  if(t    >    31)    {    k++;    }    else    {    throw    new    ArithmeticException(   "   ");    }    	non-compiled	[CE]  <identifier>  expected	24	None	replace
48	[BUG]  [BUGGY]  ((  u  &  1)  ==  0  &&  v  &  2)  ==  0)  {  throw  new  ArithmeticException( "overflow:  gcd  is  2  >>  31 ");  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;      [BUGGY]  ((  u  &  1)  ==  0  &&  v  &  2)  ==  0)  {  throw  new  ArithmeticException( "overflow:  gcd  is  2  >>  31 ");  [BUGGY]      v  /=  2;  k++;  //  cast  out  twos.  }  if  (k  ==  31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }    int  t  =  ((u  &  1)  ==  1)  ?  v  :  -(u  /  2)/*  B3  */;    [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  short  NS  PS  ZS  boolean  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  k  t  u  v  	projects/Math94/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	431	431	1	replace	((  u  &  1)  ==  0  &&  v  &  2)  ==  0)  {  throw  new  ArithmeticException( "overflow:  gcd  is  2  >>  31 ");	  ((    u    &    1)    ==    0    &&    v    &    2)    ==    0    &&    k    <    31)    {    throw    new    ArithmeticException(   "overflow:    gcd    is    2    >>    31   ");    	non-compiled	[CE]  <identifier>  expected	37	None	replace
49	[BUG]  [BUGGY]  ((  u  &  1)  ==  0  &&  v  &  2)  ==  0  &&  k  <  31)  {  throw  new  ArithmeticException( "overflow:  gcd  is  2  >=  31 ");  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;      [BUGGY]  ((  u  &  1)  ==  0  &&  v  &  2)  ==  0  &&  k  <  31)  {  throw  new  ArithmeticException( "overflow:  gcd  is  2  >=  31 ");  [BUGGY]      v  /=  2;  k++;  //  cast  out  twos.  }  if  (k  ==  31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }    int  t  =  ((u  &  1)  ==  1)  ?  v  :  -(u  /  2)/*  B3  */;    [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  short  NS  PS  ZS  boolean  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  k  t  u  v  	projects/Math94/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	431	431	1	replace	((  u  &  1)  ==  0  &&  v  &  2)  ==  0  &&  k  <  31)  {  throw  new  ArithmeticException( "overflow:  gcd  is  2  >=  31 ");	  ((    u    &    1)    ==    0    &&    v    &    2)    ==    0    &&    k    <    31)    {    throw    new    ArithmeticException(   "overflow:    gcd    is    2    >>    31   ");    	non-compiled	[CE]  <identifier>  expected	37	None	replace
50	[BUG]  [BUGGY]  ((  u  &  1)  ==  0  &&  k  &  2)  ==  0  &&  k  <  31)  {  throw  new  ArithmeticException( "overflow:  gcd  is  2  >>  31 ");  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]      u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;      [BUGGY]  ((  u  &  1)  ==  0  &&  k  &  2)  ==  0  &&  k  <  31)  {  throw  new  ArithmeticException( "overflow:  gcd  is  2  >>  31 ");  [BUGGY]      v  /=  2;  k++;  //  cast  out  twos.  }  if  (k  ==  31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }    int  t  =  ((u  &  1)  ==  1)  ?  v  :  -(u  /  2)/*  B3  */;    [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  short  NS  PS  ZS  boolean  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  k  t  u  v  	projects/Math94/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	431	431	1	replace	((  u  &  1)  ==  0  &&  k  &  2)  ==  0  &&  k  <  31)  {  throw  new  ArithmeticException( "overflow:  gcd  is  2  >>  31 ");	  ((    u    &    1)    ==    0    &&    v    &    2)    ==    0    &&    k    <    31)    {    throw    new    ArithmeticException(   "overflow:    gcd    is    2    >>    31   ");    	non-compiled	[CE]  <identifier>  expected	37	None	replace
51	[BUG]  [BUGGY]  ((  u  &  1)  ==  0  &&  v  &  2)  ==  0)  {  u  /=  31;  k++;  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;      [BUGGY]  ((  u  &  1)  ==  0  &&  v  &  2)  ==  0)  {  u  /=  31;  k++;  [BUGGY]      v  /=  2;  k++;  //  cast  out  twos.  }  if  (k  ==  31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }    int  t  =  ((u  &  1)  ==  1)  ?  v  :  -(u  /  2)/*  B3  */;    [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  short  NS  PS  ZS  boolean  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  k  t  u  v  	projects/Math94/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	431	431	1	replace	((  u  &  1)  ==  0  &&  v  &  2)  ==  0)  {  u  /=  31;  k++;	  ((    u    &    1)    ==    0    &&    v    &    2)    ==    0)    {    u    /=    2;    k++;    	non-compiled	[CE]  <identifier>  expected	42	None	replace
52	[BUG]  [BUGGY]  ((  u  &  1)  ==  0  &&  v  &  2)  ==  0)  {  u  /=  3;  k++;  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;      [BUGGY]  ((  u  &  1)  ==  0  &&  v  &  2)  ==  0)  {  u  /=  3;  k++;  [BUGGY]      v  /=  2;  k++;  //  cast  out  twos.  }  if  (k  ==  31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }    int  t  =  ((u  &  1)  ==  1)  ?  v  :  -(u  /  2)/*  B3  */;    [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  short  NS  PS  ZS  boolean  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  k  t  u  v  	projects/Math94/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	431	431	1	replace	((  u  &  1)  ==  0  &&  v  &  2)  ==  0)  {  u  /=  3;  k++;	  ((    u    &    1)    ==    0    &&    v    &    2)    ==    0)    {    u    /=    2;    k++;    	non-compiled	[CE]  <identifier>  expected	42	None	replace
53	[BUG]  [BUGGY]  ((  u  &  1)  ==  0  &&  v  &  2)  ==  0)  {  u  /=  32;  k++;  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;      [BUGGY]  ((  u  &  1)  ==  0  &&  v  &  2)  ==  0)  {  u  /=  32;  k++;  [BUGGY]      v  /=  2;  k++;  //  cast  out  twos.  }  if  (k  ==  31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }    int  t  =  ((u  &  1)  ==  1)  ?  v  :  -(u  /  2)/*  B3  */;    [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  short  NS  PS  ZS  boolean  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  k  t  u  v  	projects/Math94/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	431	431	1	replace	((  u  &  1)  ==  0  &&  v  &  2)  ==  0)  {  u  /=  32;  k++;	  ((    u    &    1)    ==    0    &&    v    &    2)    ==    0)    {    u    /=    2;    k++;    	non-compiled	[CE]  <identifier>  expected	42	None	replace
54	[BUG]  [BUGGY]  if(t  ==  0)  {  k++;  }  else  {  throw  new  ArithmeticException( "overflow:  gcd  is  2  >>  31 ");  }  [CE]  <identifier>  expected  [FE]            AssertionFailedError      [CONTEXT]      u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;      [BUGGY]  if(t  ==  0)  {  k++;  }  else  {  throw  new  ArithmeticException( "overflow:  gcd  is  2  >>  31 ");  }  [BUGGY]      v  /=  2;  k++;  //  cast  out  twos.  }  if  (k  ==  31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }    int  t  =  ((u  &  1)  ==  1)  ?  v  :  -(u  /  2)/*  B3  */;    [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  short  NS  PS  ZS  boolean  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  k  t  u  v  	projects/Math94/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	431	431	1	replace	if(t  ==  0)  {  k++;  }  else  {  throw  new  ArithmeticException( "overflow:  gcd  is  2  >>  31 ");  }	  if(t    ==    0)    {    k++;    }    else    {    throw    new    ArithmeticException(   "   ");    }    	non-compiled	[CE]  <identifier>  expected	22	None	replace
55	[BUG]  [BUGGY]  ((  u  +  1)  ==  0  &&  v  &  1)  ==  0)  {  u  /=  2;  k++;  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;      [BUGGY]  ((  u  +  1)  ==  0  &&  v  &  1)  ==  0)  {  u  /=  2;  k++;  [BUGGY]      v  /=  2;  k++;  //  cast  out  twos.  }  if  (k  ==  31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }    int  t  =  ((u  &  1)  ==  1)  ?  v  :  -(u  /  2)/*  B3  */;    [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  short  NS  PS  ZS  boolean  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  k  t  u  v  	projects/Math94/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	431	431	1	replace	((  u  +  1)  ==  0  &&  v  &  1)  ==  0)  {  u  /=  2;  k++;	  ((    u    +    1)    ==    0    &&    v    &    1)    ==    0    &&    k    <    31)    {    u    /=    2;    k++;    	non-compiled	[CE]  <identifier>  expected	41	None	replace
56	[BUG]  [BUGGY]  ((  u  +  1)  ==  1  &&  v  &  1)  ==  1  &&  k  <  31)  {  u  /=  2;  k++;  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;      [BUGGY]  ((  u  +  1)  ==  1  &&  v  &  1)  ==  1  &&  k  <  31)  {  u  /=  2;  k++;  [BUGGY]      v  /=  2;  k++;  //  cast  out  twos.  }  if  (k  ==  31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }    int  t  =  ((u  &  1)  ==  1)  ?  v  :  -(u  /  2)/*  B3  */;    [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  short  NS  PS  ZS  boolean  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  k  t  u  v  	projects/Math94/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	431	431	1	replace	((  u  +  1)  ==  1  &&  v  &  1)  ==  1  &&  k  <  31)  {  u  /=  2;  k++;	  ((    u    +    1)    ==    0    &&    v    &    1)    ==    0    &&    k    <    31)    {    u    /=    2;    k++;    	non-compiled	[CE]  <identifier>  expected	41	None	replace
57	[BUG]  [BUGGY]  v  %  2  ==  3;  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;      [BUGGY]  v  %  2  ==  3;  [BUGGY]      k++;  //  cast  out  twos.  }  if  (k  ==  31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }    int  t  =  ((u  &  1)  ==  1)  ?  v  :  -(u  /  2)/*  B3  */;    [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  short  NS  PS  ZS  boolean  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  k  t  u  v  	projects/Math94/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	431	431	1	replace	v  %  2  ==  3;	  v    %    2    ==    1;    	non-compiled	[CE]  <identifier>  expected	49	None	replace
58	[BUG]  [BUGGY]  v  %  2  ==  4;  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;      [BUGGY]  v  %  2  ==  4;  [BUGGY]      k++;  //  cast  out  twos.  }  if  (k  ==  31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }    int  t  =  ((u  &  1)  ==  1)  ?  v  :  -(u  /  2)/*  B3  */;    [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  short  NS  PS  ZS  boolean  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  k  t  u  v  	projects/Math94/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	431	431	1	replace	v  %  2  ==  4;	  v    %    2    ==    1;    	non-compiled	[CE]  <identifier>  expected	49	None	replace
59	[BUG]  [BUGGY]  v  %  2!=  1;  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;      [BUGGY]  v  %  2!=  1;  [BUGGY]      k++;  //  cast  out  twos.  }  if  (k  ==  31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }    int  t  =  ((u  &  1)  ==  1)  ?  v  :  -(u  /  2)/*  B3  */;    [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  short  NS  PS  ZS  boolean  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  k  t  u  v  	projects/Math94/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	431	431	1	replace	v  %  2!=  1;	  v    %    2    ==    1;    	non-compiled	[CE]  <identifier>  expected	49	None	replace
60	[BUG]  [BUGGY]  try  {  for(int  k  =  0;  k  <  2;  k++)  {  throw  new  ArithmeticException( "overflow:  gcd  is  2  >>  31 ");  }  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;      [BUGGY]  try  {  for(int  k  =  0;  k  <  2;  k++)  {  throw  new  ArithmeticException( "overflow:  gcd  is  2  >>  31 ");  }  [BUGGY]      k++;  //  cast  out  twos.  }  if  (k  ==  31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }    int  t  =  ((u  &  1)  ==  1)  ?  v  :  -(u  /  2)/*  B3  */;    [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  short  NS  PS  ZS  boolean  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  k  t  u  v  	projects/Math94/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	431	431	1	replace	try  {  for(int  k  =  0;  k  <  2;  k++)  {  throw  new  ArithmeticException( "overflow:  gcd  is  2  >>  31 ");  }	  if(t    >    0)    {    for(int    k    =    0;    k    <    2;    k++)    {    throw    new    ArithmeticException(   "overflow:    gcd    is    2    >>    31   ");    }    	non-compiled	[CE]  <identifier>  expected	45	None	replace
61	[BUG]  [BUGGY]  while(t  <  0)  {  for(int  k  =  0;  k  <  2;  k++)  {  throw  new  ArithmeticException( "overflow:  gcd  is  2  >>  31 ");  }  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;      [BUGGY]  while(t  <  0)  {  for(int  k  =  0;  k  <  2;  k++)  {  throw  new  ArithmeticException( "overflow:  gcd  is  2  >>  31 ");  }  [BUGGY]      k++;  //  cast  out  twos.  }  if  (k  ==  31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }    int  t  =  ((u  &  1)  ==  1)  ?  v  :  -(u  /  2)/*  B3  */;    [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  short  NS  PS  ZS  boolean  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  k  t  u  v  	projects/Math94/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	431	431	1	replace	while(t  <  0)  {  for(int  k  =  0;  k  <  2;  k++)  {  throw  new  ArithmeticException( "overflow:  gcd  is  2  >>  31 ");  }	  if(t    >    0)    {    for(int    k    =    0;    k    <    2;    k++)    {    throw    new    ArithmeticException(   "overflow:    gcd    is    2    >>    31   ");    }    	non-compiled	[CE]  <identifier>  expected	45	None	replace
62	[BUG]  [BUGGY]  while(t  <  0)  {  for(int  k  =  0;  k  <  2;  k++)  {  throw  new  ArithmeticException( "overflow:  gcd  is  2  >=  31 ");  }  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;      [BUGGY]  while(t  <  0)  {  for(int  k  =  0;  k  <  2;  k++)  {  throw  new  ArithmeticException( "overflow:  gcd  is  2  >=  31 ");  }  [BUGGY]      k++;  //  cast  out  twos.  }  if  (k  ==  31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }    int  t  =  ((u  &  1)  ==  1)  ?  v  :  -(u  /  2)/*  B3  */;    [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  short  NS  PS  ZS  boolean  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  k  t  u  v  	projects/Math94/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	431	431	1	replace	while(t  <  0)  {  for(int  k  =  0;  k  <  2;  k++)  {  throw  new  ArithmeticException( "overflow:  gcd  is  2  >=  31 ");  }	  if(t    >    0)    {    for(int    k    =    0;    k    <    2;    k++)    {    throw    new    ArithmeticException(   "overflow:    gcd    is    2    >>    31   ");    }    	non-compiled	[CE]  <identifier>  expected	45	None	replace
63	[BUG]  [BUGGY]  if(v  >  0)  {  for(int  k  =  0;  k  <  2;  k++)  {  throw  new  ArithmeticException( "overflow:  gcd  is  2  >>  31 ");  }  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]      u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;      [BUGGY]  if(v  >  0)  {  for(int  k  =  0;  k  <  2;  k++)  {  throw  new  ArithmeticException( "overflow:  gcd  is  2  >>  31 ");  }  [BUGGY]      k++;  //  cast  out  twos.  }  if  (k  ==  31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }    int  t  =  ((u  &  1)  ==  1)  ?  v  :  -(u  /  2)/*  B3  */;    [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  short  NS  PS  ZS  boolean  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  k  t  u  v  	projects/Math94/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	431	431	1	replace	if(v  >  0)  {  for(int  k  =  0;  k  <  2;  k++)  {  throw  new  ArithmeticException( "overflow:  gcd  is  2  >>  31 ");  }	  if(t    >    0)    {    for(int    k    =    0;    k    <    2;    k++)    {    throw    new    ArithmeticException(   "overflow:    gcd    is    2    >>    31   ");    }    	non-compiled	[CE]  <identifier>  expected	45	None	replace
64	[BUG]  [BUGGY]  ((  u  &  1)  ==  0  &&  v  &  1)  ==  0  &&  31)  {  u  /=  2;  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;      [BUGGY]  ((  u  &  1)  ==  0  &&  v  &  1)  ==  0  &&  31)  {  u  /=  2;  [BUGGY]      v  /=  2;  k++;  //  cast  out  twos.  }  if  (k  ==  31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }    int  t  =  ((u  &  1)  ==  1)  ?  v  :  -(u  /  2)/*  B3  */;    [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  short  NS  PS  ZS  boolean  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  k  t  u  v  	projects/Math94/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	431	431	1	replace	((  u  &  1)  ==  0  &&  v  &  1)  ==  0  &&  31)  {  u  /=  2;	  ((    u    &    1)    ==    0    &&    v    &    1)    ==    0    &&    k    <    31)    {    u    /=    3;    	non-compiled	[CE]  <identifier>  expected	52	None	replace
65	[BUG]  [BUGGY]  try  {  for(int  k  =  0;  k  <  2;  k++)  {  throw  new  ArithmeticException( "Overflow:  gcd  is  2  >>  31 ");  }  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;      [BUGGY]  try  {  for(int  k  =  0;  k  <  2;  k++)  {  throw  new  ArithmeticException( "Overflow:  gcd  is  2  >>  31 ");  }  [BUGGY]      k++;  //  cast  out  twos.  }  if  (k  ==  31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }    int  t  =  ((u  &  1)  ==  1)  ?  v  :  -(u  /  2)/*  B3  */;    [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  short  NS  PS  ZS  boolean  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  k  t  u  v  	projects/Math94/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	431	431	1	replace	try  {  for(int  k  =  0;  k  <  2;  k++)  {  throw  new  ArithmeticException( "Overflow:  gcd  is  2  >>  31 ");  }	  if(t    >    0)    {    for(int    k    =    0;    k    <    2;    k++)    {    throw    new    ArithmeticException(   "Overflow:    gcd    is    2    >>    31   ");    }    	non-compiled	[CE]  <identifier>  expected	46	None	replace
66	[BUG]  [BUGGY]  while(t  <  0)  {  for(int  k  =  0;  k  <  2;  k++)  {  throw  new  ArithmeticException( "Overflow:  gcd  is  2  >>  31 ");  }  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;      [BUGGY]  while(t  <  0)  {  for(int  k  =  0;  k  <  2;  k++)  {  throw  new  ArithmeticException( "Overflow:  gcd  is  2  >>  31 ");  }  [BUGGY]      k++;  //  cast  out  twos.  }  if  (k  ==  31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }    int  t  =  ((u  &  1)  ==  1)  ?  v  :  -(u  /  2)/*  B3  */;    [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  short  NS  PS  ZS  boolean  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  k  t  u  v  	projects/Math94/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	431	431	1	replace	while(t  <  0)  {  for(int  k  =  0;  k  <  2;  k++)  {  throw  new  ArithmeticException( "Overflow:  gcd  is  2  >>  31 ");  }	  if(t    >    0)    {    for(int    k    =    0;    k    <    2;    k++)    {    throw    new    ArithmeticException(   "Overflow:    gcd    is    2    >>    31   ");    }    	non-compiled	[CE]  <identifier>  expected	46	None	replace
67	[BUG]  [BUGGY]  ((  u  &  1)  ==  0  &&  v  &  1)  ==  0)  {  throw  new  ArithmeticException( "overflow:  gcd  is  2  >=  31 ");  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;      [BUGGY]  ((  u  &  1)  ==  0  &&  v  &  1)  ==  0)  {  throw  new  ArithmeticException( "overflow:  gcd  is  2  >=  31 ");  [BUGGY]      v  /=  2;  k++;  //  cast  out  twos.  }  if  (k  ==  31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }    int  t  =  ((u  &  1)  ==  1)  ?  v  :  -(u  /  2)/*  B3  */;    [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  short  NS  PS  ZS  boolean  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  k  t  u  v  	projects/Math94/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	431	431	1	replace	((  u  &  1)  ==  0  &&  v  &  1)  ==  0)  {  throw  new  ArithmeticException( "overflow:  gcd  is  2  >=  31 ");	  ((    u    &    1)    ==    0    &&    v    &    1)    ==    0)    {    throw    new    ArithmeticException(   "overflow:    gcd    is    2    >>    31   ");    	non-compiled	[CE]  <identifier>  expected	53	None	replace
68	[BUG]  [BUGGY]  ((  u  &  1)  ==  0  &&  k  <  31)  {  throw  new  ArithmeticException( "overflow:  gcd  is  2  >>  31 ");  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;      [BUGGY]  ((  u  &  1)  ==  0  &&  k  <  31)  {  throw  new  ArithmeticException( "overflow:  gcd  is  2  >>  31 ");  [BUGGY]      v  /=  2;  k++;  //  cast  out  twos.  }  if  (k  ==  31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }    int  t  =  ((u  &  1)  ==  1)  ?  v  :  -(u  /  2)/*  B3  */;    [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  short  NS  PS  ZS  boolean  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  k  t  u  v  	projects/Math94/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	431	431	1	replace	((  u  &  1)  ==  0  &&  k  <  31)  {  throw  new  ArithmeticException( "overflow:  gcd  is  2  >>  31 ");	  ((    u    &    1)    ==    0    &&    v    &    1)    ==    0)    {    throw    new    ArithmeticException(   "overflow:    gcd    is    2    >>    31   ");    	non-compiled	[CE]  <identifier>  expected	53	None	replace
69	[BUG]  [BUGGY]  ((  u  &  1)  ==  0  &&  k  &  1)  ==  0  &&  k  <  31)  {  throw  new  ArithmeticException( "overflow:  gcd  is  2  >=  31 ");  }  [CE]  <identifier>  expected  [FE]            AssertionFailedError      [CONTEXT]      u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;      [BUGGY]  ((  u  &  1)  ==  0  &&  k  &  1)  ==  0  &&  k  <  31)  {  throw  new  ArithmeticException( "overflow:  gcd  is  2  >=  31 ");  }  [BUGGY]      v  /=  2;  k++;  //  cast  out  twos.  }  if  (k  ==  31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }    int  t  =  ((u  &  1)  ==  1)  ?  v  :  -(u  /  2)/*  B3  */;    [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  short  NS  PS  ZS  boolean  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  k  t  u  v  	projects/Math94/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	431	431	1	replace	((  u  &  1)  ==  0  &&  k  &  1)  ==  0  &&  k  <  31)  {  throw  new  ArithmeticException( "overflow:  gcd  is  2  >=  31 ");  }	  ((    u    &    1)    ==    0    &&    v    &    1)    ==    0    &&    k    <    31)    {    throw    new    ArithmeticException(   "overflow:    gcd    is    2    >=    31   ");    }    	non-compiled	[CE]  <identifier>  expected	10	None	replace
70	[BUG]  [BUGGY]  ((  u  &  1)  ==  1  &&  v  <  31)?  v  :  -(u  /  2)/*  B3  */);  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;      [BUGGY]  ((  u  &  1)  ==  1  &&  v  <  31)?  v  :  -(u  /  2)/*  B3  */);  [BUGGY]      v  /=  2;  k++;  //  cast  out  twos.  }  if  (k  ==  31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }    int  t  =  ((u  &  1)  ==  1)  ?  v  :  -(u  /  2)/*  B3  */;    [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  short  NS  PS  ZS  boolean  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  k  t  u  v  	projects/Math94/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	431	431	1	replace	((  u  &  1)  ==  1  &&  v  <  31)?  v  :  -(u  /  2)/*  B3  */);	  ((    u    &    1)    ==    0    &&    v    <    31)?    v    :    -(u    /    2)/*    B3    */);    	non-compiled	[CE]  <identifier>  expected	35	None	replace
71	[BUG]  [BUGGY]  ((  u  &  1)  ==  0  &&  v  <  32)?  v  :  -(u  /  2)/*  B3  */);  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;      [BUGGY]  ((  u  &  1)  ==  0  &&  v  <  32)?  v  :  -(u  /  2)/*  B3  */);  [BUGGY]      v  /=  2;  k++;  //  cast  out  twos.  }  if  (k  ==  31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }    int  t  =  ((u  &  1)  ==  1)  ?  v  :  -(u  /  2)/*  B3  */;    [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  short  NS  PS  ZS  boolean  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  k  t  u  v  	projects/Math94/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	431	431	1	replace	((  u  &  1)  ==  0  &&  v  <  32)?  v  :  -(u  /  2)/*  B3  */);	  ((    u    &    1)    ==    0    &&    v    <    31)?    v    :    -(u    /    2)/*    B3    */);    	non-compiled	[CE]  <identifier>  expected	35	None	replace
72	[BUG]  [BUGGY]  if(k  >=  31)  {  k++;  }  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;      [BUGGY]  if(k  >=  31)  {  k++;  }  [BUGGY]      v  /=  2;  k++;  //  cast  out  twos.  }  if  (k  ==  31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }    int  t  =  ((u  &  1)  ==  1)  ?  v  :  -(u  /  2)/*  B3  */;    [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  short  NS  PS  ZS  boolean  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  k  t  u  v  	projects/Math94/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	431	431	1	replace	if(k  >=  31)  {  k++;  }	  if(v    >    0)    {    k++;    }    	non-compiled	[CE]  <identifier>  expected	33	None	replace
73	[BUG]  [BUGGY]  try  {  for(int  k  =  0;  k  <  2;  k++)  {  throw  new  ArithmeticException( "overflow:  Gcd  is  2  >>  31 ");  }  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;      [BUGGY]  try  {  for(int  k  =  0;  k  <  2;  k++)  {  throw  new  ArithmeticException( "overflow:  Gcd  is  2  >>  31 ");  }  [BUGGY]      k++;  //  cast  out  twos.  }  if  (k  ==  31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }    int  t  =  ((u  &  1)  ==  1)  ?  v  :  -(u  /  2)/*  B3  */;    [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  short  NS  PS  ZS  boolean  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  k  t  u  v  	projects/Math94/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	431	431	1	replace	try  {  for(int  k  =  0;  k  <  2;  k++)  {  throw  new  ArithmeticException( "overflow:  Gcd  is  2  >>  31 ");  }	  if(t    >    0)    {    for(int    k    =    0;    k    <    2;    k++)    {    throw    new    ArithmeticException(   "overflow:    Gcd    is    2    >>    31   ");    }    	non-compiled	[CE]  <identifier>  expected	47	None	replace
74	[BUG]  [BUGGY]  while(t  <  0)  {  for(int  k  =  0;  k  <  2;  k++)  {  throw  new  ArithmeticException( "overflow:  Gcd  is  2  >>  31 ");  }  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]      u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;      [BUGGY]  while(t  <  0)  {  for(int  k  =  0;  k  <  2;  k++)  {  throw  new  ArithmeticException( "overflow:  Gcd  is  2  >>  31 ");  }  [BUGGY]      k++;  //  cast  out  twos.  }  if  (k  ==  31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }    int  t  =  ((u  &  1)  ==  1)  ?  v  :  -(u  /  2)/*  B3  */;    [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  short  NS  PS  ZS  boolean  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  k  t  u  v  	projects/Math94/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	431	431	1	replace	while(t  <  0)  {  for(int  k  =  0;  k  <  2;  k++)  {  throw  new  ArithmeticException( "overflow:  Gcd  is  2  >>  31 ");  }	  if(t    >    0)    {    for(int    k    =    0;    k    <    2;    k++)    {    throw    new    ArithmeticException(   "overflow:    Gcd    is    2    >>    31   ");    }    	non-compiled	[CE]  <identifier>  expected	47	None	replace
75	[BUG]  [BUGGY]  if(t  ==  0)  {  for(int  k  =  0;  k  <  2;  k++)  {  throw  new  ArithmeticException( "overflow:  Gcd  is  2  >>  31 ");  }  [CE]  <identifier>  expected  [FE]                          AssertionFailedError      [CONTEXT]      u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;      [BUGGY]  if(t  ==  0)  {  for(int  k  =  0;  k  <  2;  k++)  {  throw  new  ArithmeticException( "overflow:  Gcd  is  2  >>  31 ");  }  [BUGGY]      k++;  //  cast  out  twos.  }  if  (k  ==  31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }    int  t  =  ((u  &  1)  ==  1)  ?  v  :  -(u  /  2)/*  B3  */;    [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  short  NS  PS  ZS  boolean  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  k  t  u  v  	projects/Math94/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	431	431	1	replace	if(t  ==  0)  {  for(int  k  =  0;  k  <  2;  k++)  {  throw  new  ArithmeticException( "overflow:  Gcd  is  2  >>  31 ");  }	  if(t    >    0)    {    for(int    k    =    0;    k    <    2;    k++)    {    throw    new    ArithmeticException(   "overflow:    Gcd    is    2    >>    31   ");    }    	non-compiled	[CE]  <identifier>  expected	47	None	replace
76	[BUG]  [BUGGY]  while(t  <  0)  {  for(int  k  =  0;  k  <  2;  k++)  {  throw  new  ArithmeticException( "overflow:  Gcd  is  2  >=  31 ");  }  [CE]  <identifier>  expected  [FE]                            AssertionFailedError      [CONTEXT]      u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;      [BUGGY]  while(t  <  0)  {  for(int  k  =  0;  k  <  2;  k++)  {  throw  new  ArithmeticException( "overflow:  Gcd  is  2  >=  31 ");  }  [BUGGY]      k++;  //  cast  out  twos.  }  if  (k  ==  31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }    int  t  =  ((u  &  1)  ==  1)  ?  v  :  -(u  /  2)/*  B3  */;    [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  short  NS  PS  ZS  boolean  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  k  t  u  v  	projects/Math94/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	431	431	1	replace	while(t  <  0)  {  for(int  k  =  0;  k  <  2;  k++)  {  throw  new  ArithmeticException( "overflow:  Gcd  is  2  >=  31 ");  }	  if(t    >    0)    {    for(int    k    =    0;    k    <    2;    k++)    {    throw    new    ArithmeticException(   "overflow:    Gcd    is    2    >>    31   ");    }    	non-compiled	[CE]  <identifier>  expected	47	None	replace
77	[BUG]  [BUGGY]  ((  u  &  1)  ==  0  &&  k  <  31)?  v  :  -(u  /  2)/  4  *  B3  */);  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;      [BUGGY]  ((  u  &  1)  ==  0  &&  k  <  31)?  v  :  -(u  /  2)/  4  *  B3  */);  [BUGGY]      v  /=  2;  k++;  //  cast  out  twos.  }  if  (k  ==  31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }    int  t  =  ((u  &  1)  ==  1)  ?  v  :  -(u  /  2)/*  B3  */;    [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  short  NS  PS  ZS  boolean  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  k  t  u  v  	projects/Math94/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	431	431	1	replace	((  u  &  1)  ==  0  &&  k  <  31)?  v  :  -(u  /  2)/  4  *  B3  */);	  ((    u    &    1)    ==    0    &&    k    <    31)?    v    :    -(u    /    2)/    2    *    B3    */);    	non-compiled	[CE]  <identifier>  expected	44	None	replace
78	[BUG]  [BUGGY]  ((  u  &  1)  ==  0  &&  k  <  31)?  v  :  -(u  /  2)/  3  *  B3  */);  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;      [BUGGY]  ((  u  &  1)  ==  0  &&  k  <  31)?  v  :  -(u  /  2)/  3  *  B3  */);  [BUGGY]      v  /=  2;  k++;  //  cast  out  twos.  }  if  (k  ==  31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }    int  t  =  ((u  &  1)  ==  1)  ?  v  :  -(u  /  2)/*  B3  */;    [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  short  NS  PS  ZS  boolean  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  k  t  u  v  	projects/Math94/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	431	431	1	replace	((  u  &  1)  ==  0  &&  k  <  31)?  v  :  -(u  /  2)/  3  *  B3  */);	  ((    u    &    1)    ==    0    &&    k    <    31)?    v    :    -(u    /    2)/    2    *    B3    */);    	non-compiled	[CE]  <identifier>  expected	44	None	replace
79	[BUG]  [BUGGY]  ((  u  &  1)  ==  0  &&  k  <  31)?  v  :  -(u  /  2)/  1  *  B3  */);  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;      [BUGGY]  ((  u  &  1)  ==  0  &&  k  <  31)?  v  :  -(u  /  2)/  1  *  B3  */);  [BUGGY]      v  /=  2;  k++;  //  cast  out  twos.  }  if  (k  ==  31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }    int  t  =  ((u  &  1)  ==  1)  ?  v  :  -(u  /  2)/*  B3  */;    [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  short  NS  PS  ZS  boolean  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  k  t  u  v  	projects/Math94/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	431	431	1	replace	((  u  &  1)  ==  0  &&  k  <  31)?  v  :  -(u  /  2)/  1  *  B3  */);	  ((    u    &    1)    ==    0    &&    k    <    31)?    v    :    -(u    /    2)/    2    *    B3    */);    	non-compiled	[CE]  <identifier>  expected	44	None	replace
80	[BUG]  [BUGGY]  ((  u  &  1)  ==  0  &&  k  &  1)  ==  0  &&  k  <  31)  {  throw  new  ArithmeticException( "Overflow:  gcd  is  2  >=  31 ");  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;      [BUGGY]  ((  u  &  1)  ==  0  &&  k  &  1)  ==  0  &&  k  <  31)  {  throw  new  ArithmeticException( "Overflow:  gcd  is  2  >=  31 ");  [BUGGY]      v  /=  2;  k++;  //  cast  out  twos.  }  if  (k  ==  31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }    int  t  =  ((u  &  1)  ==  1)  ?  v  :  -(u  /  2)/*  B3  */;    [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  short  NS  PS  ZS  boolean  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  k  t  u  v  	projects/Math94/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	431	431	1	replace	((  u  &  1)  ==  0  &&  k  &  1)  ==  0  &&  k  <  31)  {  throw  new  ArithmeticException( "Overflow:  gcd  is  2  >=  31 ");	  ((    u    &    1)    ==    0    &&    k    &    1)    ==    0    &&    k    <    31)    {    throw    new    ArithmeticException(   "Overflow:    gcd    is    2    >>    31   ");    	non-compiled	[CE]  <identifier>  expected	9	None	replace
81	[BUG]  [BUGGY]  ((  u  &  1)  ==  0  &&  v  &  1)  ==  0)  {  throw  new  ArithmeticException( "Overflow:  gcd  is  2  >=  31 ");  [CE]  <identifier>  expected  [FE]            AssertionFailedError      [CONTEXT]      u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;      [BUGGY]  ((  u  &  1)  ==  0  &&  v  &  1)  ==  0)  {  throw  new  ArithmeticException( "Overflow:  gcd  is  2  >=  31 ");  [BUGGY]      v  /=  2;  k++;  //  cast  out  twos.  }  if  (k  ==  31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }    int  t  =  ((u  &  1)  ==  1)  ?  v  :  -(u  /  2)/*  B3  */;    [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  short  NS  PS  ZS  boolean  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  k  t  u  v  	projects/Math94/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	431	431	1	replace	((  u  &  1)  ==  0  &&  v  &  1)  ==  0)  {  throw  new  ArithmeticException( "Overflow:  gcd  is  2  >=  31 ");	  ((    u    &    1)    ==    0    &&    v    &    1)    ==    0)    {    throw    new    ArithmeticException(   "Overflow:    gcd    is    2    >>    31   ");    	non-compiled	[CE]  <identifier>  expected	43	None	replace
82	[BUG]  [BUGGY]  ((  u  &  1)  ==  0  &&  k  <  31)  {  throw  new  ArithmeticException( "Overflow:  gcd  is  2  >>  31 ");  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;      [BUGGY]  ((  u  &  1)  ==  0  &&  k  <  31)  {  throw  new  ArithmeticException( "Overflow:  gcd  is  2  >>  31 ");  [BUGGY]      v  /=  2;  k++;  //  cast  out  twos.  }  if  (k  ==  31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }    int  t  =  ((u  &  1)  ==  1)  ?  v  :  -(u  /  2)/*  B3  */;    [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  short  NS  PS  ZS  boolean  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  k  t  u  v  	projects/Math94/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	431	431	1	replace	((  u  &  1)  ==  0  &&  k  <  31)  {  throw  new  ArithmeticException( "Overflow:  gcd  is  2  >>  31 ");	  ((    u    &    1)    ==    0    &&    v    &    1)    ==    0)    {    throw    new    ArithmeticException(   "Overflow:    gcd    is    2    >>    31   ");    	non-compiled	[CE]  <identifier>  expected	43	None	replace
83	[BUG]  [BUGGY]  ((  u  +  1)  ==  1  &&  v  &  1)  ==  1  &&  k  <  31)  {  u  /=  2;  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;      [BUGGY]  ((  u  +  1)  ==  1  &&  v  &  1)  ==  1  &&  k  <  31)  {  u  /=  2;  [BUGGY]      v  /=  2;  k++;  //  cast  out  twos.  }  if  (k  ==  31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }    int  t  =  ((u  &  1)  ==  1)  ?  v  :  -(u  /  2)/*  B3  */;    [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  short  NS  PS  ZS  boolean  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  k  t  u  v  	projects/Math94/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	431	431	1	replace	((  u  +  1)  ==  1  &&  v  &  1)  ==  1  &&  k  <  31)  {  u  /=  2;	  ((    u    +    1)    ==    0    &&    v    &    1)    ==    0    &&    k    <    31)    {    u    /=    2;    	non-compiled	[CE]  <identifier>  expected	51	None	replace
84	[BUG]  [BUGGY]  ((  u  +  1)  ==  0  &&  v  &  1)  ==  0  &&  k  <  31)  {  u  /=  2;  }  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;      [BUGGY]  ((  u  +  1)  ==  0  &&  v  &  1)  ==  0  &&  k  <  31)  {  u  /=  2;  }  [BUGGY]      v  /=  2;  k++;  //  cast  out  twos.  }  if  (k  ==  31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }    int  t  =  ((u  &  1)  ==  1)  ?  v  :  -(u  /  2)/*  B3  */;    [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  short  NS  PS  ZS  boolean  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  k  t  u  v  	projects/Math94/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	431	431	1	replace	((  u  +  1)  ==  0  &&  v  &  1)  ==  0  &&  k  <  31)  {  u  /=  2;  }	  ((    u    +    1)    ==    0    &&    v    &    1)    ==    0    &&    k    <    31)    {    u    /=    2;    	non-compiled	[CE]  <identifier>  expected	51	None	replace
85	[BUG]  [BUGGY]  ((  u  &  1)  ==  0  &&  k  &  1)  ==  0  &&  k  <  31)  {  throw  new  ArithmeticException( "Overflow:  gcd  is  2  >=  31 ");  }  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;      [BUGGY]  ((  u  &  1)  ==  0  &&  k  &  1)  ==  0  &&  k  <  31)  {  throw  new  ArithmeticException( "Overflow:  gcd  is  2  >=  31 ");  }  [BUGGY]      v  /=  2;  k++;  //  cast  out  twos.  }  if  (k  ==  31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }    int  t  =  ((u  &  1)  ==  1)  ?  v  :  -(u  /  2)/*  B3  */;    [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  short  NS  PS  ZS  boolean  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  k  t  u  v  	projects/Math94/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	431	431	1	replace	((  u  &  1)  ==  0  &&  k  &  1)  ==  0  &&  k  <  31)  {  throw  new  ArithmeticException( "Overflow:  gcd  is  2  >=  31 ");  }	  ((    u    &    1)    ==    0    &&    k    &    1)    ==    0    &&    k    <    31)    {    throw    new    ArithmeticException(   "Overflow:    gcd    is    2    >>    31   ");    }    	non-compiled	[CE]  <identifier>  expected	21	None	replace
86	[BUG]  [BUGGY]  ((  u  &  1)  ==  0  &&  k  <  31)?  v  :  -(u  /  2)/  B3  */,  t);  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;      [BUGGY]  ((  u  &  1)  ==  0  &&  k  <  31)?  v  :  -(u  /  2)/  B3  */,  t);  [BUGGY]      v  /=  2;  k++;  //  cast  out  twos.  }  if  (k  ==  31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }    int  t  =  ((u  &  1)  ==  1)  ?  v  :  -(u  /  2)/*  B3  */;    [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  short  NS  PS  ZS  boolean  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  k  t  u  v  	projects/Math94/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	431	431	1	replace	((  u  &  1)  ==  0  &&  k  <  31)?  v  :  -(u  /  2)/  B3  */,  t);	  ((    u    &    1)    ==    0    &&    k    <    31)?    v    :    -(u    /    2)/*    B3    */,    t);    	non-compiled	[CE]  <identifier>  expected	36	None	replace
87	[BUG]  [BUGGY]  ((  u  &  1)  ==  1  &&  k  <  31)?  v  :  -(u  /  2)/*  B3  */,  t);  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;      [BUGGY]  ((  u  &  1)  ==  1  &&  k  <  31)?  v  :  -(u  /  2)/*  B3  */,  t);  [BUGGY]      v  /=  2;  k++;  //  cast  out  twos.  }  if  (k  ==  31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }    int  t  =  ((u  &  1)  ==  1)  ?  v  :  -(u  /  2)/*  B3  */;    [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  short  NS  PS  ZS  boolean  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  k  t  u  v  	projects/Math94/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	431	431	1	replace	((  u  &  1)  ==  1  &&  k  <  31)?  v  :  -(u  /  2)/*  B3  */,  t);	  ((    u    &    1)    ==    0    &&    k    <    31)?    v    :    -(u    /    2)/*    B3    */,    t);    	non-compiled	[CE]  <identifier>  expected	36	None	replace
88	[BUG]  [BUGGY]  ((  u  &  1)  ==  0  &&  v  &  1)  ==  0)  {  u  /=  32;  k++;  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;      [BUGGY]  ((  u  &  1)  ==  0  &&  v  &  1)  ==  0)  {  u  /=  32;  k++;  [BUGGY]      v  /=  2;  k++;  //  cast  out  twos.  }  if  (k  ==  31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }    int  t  =  ((u  &  1)  ==  1)  ?  v  :  -(u  /  2)/*  B3  */;    [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  short  NS  PS  ZS  boolean  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  k  t  u  v  	projects/Math94/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	431	431	1	replace	((  u  &  1)  ==  0  &&  v  &  1)  ==  0)  {  u  /=  32;  k++;	  ((    u    &    1)    ==    0    &&    v    &    1)    ==    0    &&    k    <    32)    {    u    /=    2;    k++;    	non-compiled	[CE]  <identifier>  expected	29	None	replace
89	[BUG]  [BUGGY]  ((  u  &  1)  ==  0  &&  v  &  2)  ==  0)  {  throw  new  ArithmeticException( "Overflow:  gcd  is  2  >>  31 ");  [CE]  <identifier>  expected  [FE]            AssertionFailedError      [CONTEXT]      u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;      [BUGGY]  ((  u  &  1)  ==  0  &&  v  &  2)  ==  0)  {  throw  new  ArithmeticException( "Overflow:  gcd  is  2  >>  31 ");  [BUGGY]      v  /=  2;  k++;  //  cast  out  twos.  }  if  (k  ==  31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }    int  t  =  ((u  &  1)  ==  1)  ?  v  :  -(u  /  2)/*  B3  */;    [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  short  NS  PS  ZS  boolean  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  k  t  u  v  	projects/Math94/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	431	431	1	replace	((  u  &  1)  ==  0  &&  v  &  2)  ==  0)  {  throw  new  ArithmeticException( "Overflow:  gcd  is  2  >>  31 ");	  ((    u    &    1)    ==    0    &&    v    &    2)    ==    0    &&    k    <    31)    {    throw    new    ArithmeticException(   "Overflow:    gcd    is    2    >>    31   ");    	non-compiled	[CE]  <identifier>  expected	30	None	replace
90	[BUG]  [BUGGY]  ((  u  &  1)  ==  0  &&  k  &  2)  ==  0  &&  k  <  31)  {  throw  new  ArithmeticException( "Overflow:  gcd  is  2  >>  31 ");  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;      [BUGGY]  ((  u  &  1)  ==  0  &&  k  &  2)  ==  0  &&  k  <  31)  {  throw  new  ArithmeticException( "Overflow:  gcd  is  2  >>  31 ");  [BUGGY]      v  /=  2;  k++;  //  cast  out  twos.  }  if  (k  ==  31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }    int  t  =  ((u  &  1)  ==  1)  ?  v  :  -(u  /  2)/*  B3  */;    [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  short  NS  PS  ZS  boolean  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  k  t  u  v  	projects/Math94/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	431	431	1	replace	((  u  &  1)  ==  0  &&  k  &  2)  ==  0  &&  k  <  31)  {  throw  new  ArithmeticException( "Overflow:  gcd  is  2  >>  31 ");	  ((    u    &    1)    ==    0    &&    v    &    2)    ==    0    &&    k    <    31)    {    throw    new    ArithmeticException(   "Overflow:    gcd    is    2    >>    31   ");    	non-compiled	[CE]  <identifier>  expected	30	None	replace
91	[BUG]  [BUGGY]  ((  u  +  1)  ==  0  &&  v  &  2)  ==  0  &&  k  <  31)  {  throw  new  ArithmeticException( "overflow:  gcd  is  2  >>  31 ");  }  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;      [BUGGY]  ((  u  +  1)  ==  0  &&  v  &  2)  ==  0  &&  k  <  31)  {  throw  new  ArithmeticException( "overflow:  gcd  is  2  >>  31 ");  }  [BUGGY]      v  /=  2;  k++;  //  cast  out  twos.  }  if  (k  ==  31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }    int  t  =  ((u  &  1)  ==  1)  ?  v  :  -(u  /  2)/*  B3  */;    [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  short  NS  PS  ZS  boolean  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  k  t  u  v  	projects/Math94/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	431	431	1	replace	((  u  +  1)  ==  0  &&  v  &  2)  ==  0  &&  k  <  31)  {  throw  new  ArithmeticException( "overflow:  gcd  is  2  >>  31 ");  }	  ((    u    +    1)    ==    0    &&    v    &    1)    ==    0    &&    k    <    31)    {    throw    new    ArithmeticException(   "overflow:    gcd    is    2    >>    31   ");    }    	non-compiled	[CE]  <identifier>  expected	40	None	replace
92	[BUG]  [BUGGY]  ((  u  &  1)  ==  1  &&  k  <  31)?  v  :  -(u  /  2)/  *  B3  */  +  2);  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;      [BUGGY]  ((  u  &  1)  ==  1  &&  k  <  31)?  v  :  -(u  /  2)/  *  B3  */  +  2);  [BUGGY]      v  /=  2;  k++;  //  cast  out  twos.  }  if  (k  ==  31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }    int  t  =  ((u  &  1)  ==  1)  ?  v  :  -(u  /  2)/*  B3  */;    [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  short  NS  PS  ZS  boolean  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  k  t  u  v  	projects/Math94/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	431	431	1	replace	((  u  &  1)  ==  1  &&  k  <  31)?  v  :  -(u  /  2)/  *  B3  */  +  2);	  ((    u    &    1)    ==    1    &&    k    <    31)?    v    :    -(u    /    2)/*    B3    */);    	non-compiled	[CE]  <identifier>  expected	16	None	replace
93	[BUG]  [BUGGY]  if(t  <  =  0)  {  k++;  }  else  {  throw  new  ArithmeticException( " ");  }  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;      [BUGGY]  if(t  <  =  0)  {  k++;  }  else  {  throw  new  ArithmeticException( " ");  }  [BUGGY]      v  /=  2;  k++;  //  cast  out  twos.  }  if  (k  ==  31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }    int  t  =  ((u  &  1)  ==  1)  ?  v  :  -(u  /  2)/*  B3  */;    [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  short  NS  PS  ZS  boolean  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  k  t  u  v  	projects/Math94/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	431	431	1	replace	if(t  <  =  0)  {  k++;  }  else  {  throw  new  ArithmeticException( " ");  }	  if(t    >    0)    {    k++;    }    else    {    throw    new    ArithmeticException(   "   ");    }    	non-compiled	[CE]  <identifier>  expected	23	None	replace
94	[BUG]  [BUGGY]  ettyPrinter.println( "Overflow:  gcd  is  2  >>  31 ");  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;      [BUGGY]  ettyPrinter.println( "Overflow:  gcd  is  2  >>  31 ");  [BUGGY]      k++;  //  cast  out  twos.  }  if  (k  ==  31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }    int  t  =  ((u  &  1)  ==  1)  ?  v  :  -(u  /  2)/*  B3  */;    [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  short  NS  PS  ZS  boolean  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  k  t  u  v  	projects/Math94/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	431	431	1	replace	ettyPrinter.println( "Overflow:  gcd  is  2  >>  31 ");	  if(t    >    0)    {    for(int    k    =    0;    k    <    2;    k++)    {    throw    new    ArithmeticException(   "Overflow:    gcd    is    2    >>    31   ");    }    	non-compiled	[CE]  <identifier>  expected	46	None	replace
95	[BUG]  [BUGGY]  ettyPrinter.println( "Overflow:  gcd  is  2  >=  31 ");  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;      [BUGGY]  ettyPrinter.println( "Overflow:  gcd  is  2  >=  31 ");  [BUGGY]      k++;  //  cast  out  twos.  }  if  (k  ==  31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }    int  t  =  ((u  &  1)  ==  1)  ?  v  :  -(u  /  2)/*  B3  */;    [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  short  NS  PS  ZS  boolean  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  k  t  u  v  	projects/Math94/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	431	431	1	replace	ettyPrinter.println( "Overflow:  gcd  is  2  >=  31 ");	  if(t    >    0)    {    for(int    k    =    0;    k    <    2;    k++)    {    throw    new    ArithmeticException(   "Overflow:    gcd    is    2    >>    31   ");    }    	non-compiled	[CE]  <identifier>  expected	46	None	replace
96	[BUG]  [BUGGY]  ettyPrinter.println( "Overflow:  gcd  is  2  ^  31 ");  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]      u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;      [BUGGY]  ettyPrinter.println( "Overflow:  gcd  is  2  ^  31 ");  [BUGGY]      k++;  //  cast  out  twos.  }  if  (k  ==  31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }    int  t  =  ((u  &  1)  ==  1)  ?  v  :  -(u  /  2)/*  B3  */;    [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  short  NS  PS  ZS  boolean  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  k  t  u  v  	projects/Math94/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	431	431	1	replace	ettyPrinter.println( "Overflow:  gcd  is  2  ^  31 ");	  if(t    >    0)    {    for(int    k    =    0;    k    <    2;    k++)    {    throw    new    ArithmeticException(   "Overflow:    gcd    is    2    >>    31   ");    }    	non-compiled	[CE]  <identifier>  expected	46	None	replace
97	[BUG]  [BUGGY]  Integer  v  =  (Integer)u.next();  [CE]  <identifier>  expected  [FE]                          AssertionFailedError      [CONTEXT]      u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;      [BUGGY]  Integer  v  =  (Integer)u.next();  [BUGGY]      k++;  //  cast  out  twos.  }  if  (k  ==  31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }    int  t  =  ((u  &  1)  ==  1)  ?  v  :  -(u  /  2)/*  B3  */;    [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  short  NS  PS  ZS  boolean  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  k  t  u  v  	projects/Math94/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	431	431	1	replace	Integer  v  =  (Integer)u.next();	  if(t    >    0)    {    for(int    k    =    0;    k    <    2;    k++)    {    throw    new    ArithmeticException(   "Overflow:    gcd    is    2    >>    31   ");    }    	non-compiled	[CE]  <identifier>  expected	46	None	replace
98	[BUG]  [BUGGY]  v  /=  32  +  2;  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;      [BUGGY]  v  /=  32  +  2;  [BUGGY]      k++;  //  cast  out  twos.  }  if  (k  ==  31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }    int  t  =  ((u  &  1)  ==  1)  ?  v  :  -(u  /  2)/*  B3  */;    [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  short  NS  PS  ZS  boolean  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  k  t  u  v  	projects/Math94/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	431	431	1	replace	v  /=  32  +  2;	  v    /=    32    +    1;    	non-compiled	[CE]  <identifier>  expected	28	None	replace
99	[BUG]  [BUGGY]  ((  u  &  1)  ==  0  &&  v  &  2)  ==  0  &&  k  <  32)  {  u  /=  2;  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;      [BUGGY]  ((  u  &  1)  ==  0  &&  v  &  2)  ==  0  &&  k  <  32)  {  u  /=  2;  [BUGGY]      v  /=  2;  k++;  //  cast  out  twos.  }  if  (k  ==  31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }    int  t  =  ((u  &  1)  ==  1)  ?  v  :  -(u  /  2)/*  B3  */;    [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  short  NS  PS  ZS  boolean  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  k  t  u  v  	projects/Math94/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	431	431	1	replace	((  u  &  1)  ==  0  &&  v  &  2)  ==  0  &&  k  <  32)  {  u  /=  2;	  ((    u    &    1)    ==    0    &&    v    &    1)    ==    0    &&    k    <    32)    {    u    /=    2;    	non-compiled	[CE]  <identifier>  expected	34	None	replace
100	[BUG]  [BUGGY]  if(u  ==  0)  {  k++;  }  else  {  throw  new  ArithmeticException( " ");  }  [CE]  <identifier>  expected  [FE]            AssertionFailedError      [CONTEXT]      u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;      [BUGGY]  if(u  ==  0)  {  k++;  }  else  {  throw  new  ArithmeticException( " ");  }  [BUGGY]      v  /=  2;  k++;  //  cast  out  twos.  }  if  (k  ==  31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }    int  t  =  ((u  &  1)  ==  1)  ?  v  :  -(u  /  2)/*  B3  */;    [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  short  NS  PS  ZS  boolean  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  k  t  u  v  	projects/Math94/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	431	431	1	replace	if(u  ==  0)  {  k++;  }  else  {  throw  new  ArithmeticException( " ");  }	  if(t    ==    0)    {    k++;    }    else    {    throw    new    ArithmeticException(   "   ");    }    	non-compiled	[CE]  <identifier>  expected	22	None	replace
101	[BUG]  [BUGGY]  ((  v  &  1)  ==  0  &&  v  &  1)  ==  0)  {  throw  new  ArithmeticException( "overflow:  gcd  is  2  >>  31 ");  }  [CE]  <identifier>  expected  [FE]            AssertionFailedError      [CONTEXT]      u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;      [BUGGY]  ((  v  &  1)  ==  0  &&  v  &  1)  ==  0)  {  throw  new  ArithmeticException( "overflow:  gcd  is  2  >>  31 ");  }  [BUGGY]      v  /=  2;  k++;  //  cast  out  twos.  }  if  (k  ==  31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }    int  t  =  ((u  &  1)  ==  1)  ?  v  :  -(u  /  2)/*  B3  */;    [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  short  NS  PS  ZS  boolean  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  k  t  u  v  	projects/Math94/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	431	431	1	replace	((  v  &  1)  ==  0  &&  v  &  1)  ==  0)  {  throw  new  ArithmeticException( "overflow:  gcd  is  2  >>  31 ");  }	  ((    u    &    1)    ==    0    &&    v    &    1)    ==    0)    {    throw    new    ArithmeticException(   "overflow:    gcd    is    2    >>    31   ");    }    	non-compiled	[CE]  <identifier>  expected	39	None	replace
102	[BUG]  [BUGGY]  if(u  >  0)  {  k++;  }  else  {  throw  new  ArithmeticException( " ");  }  [CE]  <identifier>  expected  [FE]            AssertionFailedError      [CONTEXT]      u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;      [BUGGY]  if(u  >  0)  {  k++;  }  else  {  throw  new  ArithmeticException( " ");  }  [BUGGY]      v  /=  2;  k++;  //  cast  out  twos.  }  if  (k  ==  31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }    int  t  =  ((u  &  1)  ==  1)  ?  v  :  -(u  /  2)/*  B3  */;    [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  short  NS  PS  ZS  boolean  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  k  t  u  v  	projects/Math94/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	431	431	1	replace	if(u  >  0)  {  k++;  }  else  {  throw  new  ArithmeticException( " ");  }	  if(v    >    0)    {    k++;    }    else    {    throw    new    ArithmeticException(   "   ");    }    	non-compiled	[CE]  <identifier>  expected	38	None	replace
103	[BUG]  [BUGGY]  if(u  >  0)  {  v++;  }  else  {  throw  new  ArithmeticException( " ");  }  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;      [BUGGY]  if(u  >  0)  {  v++;  }  else  {  throw  new  ArithmeticException( " ");  }  [BUGGY]      v  /=  2;  k++;  //  cast  out  twos.  }  if  (k  ==  31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }    int  t  =  ((u  &  1)  ==  1)  ?  v  :  -(u  /  2)/*  B3  */;    [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  short  NS  PS  ZS  boolean  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  k  t  u  v  	projects/Math94/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	431	431	1	replace	if(u  >  0)  {  v++;  }  else  {  throw  new  ArithmeticException( " ");  }	  if(v    >    0)    {    k++;    }    else    {    throw    new    ArithmeticException(   "   ");    }    	non-compiled	[CE]  <identifier>  expected	38	None	replace
104	[BUG]  [BUGGY]  ((  u  +  1)  ==  0  &&  v  &  1)  ==  0  &&  k  <  32)  {  u  /=  2;  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;      [BUGGY]  ((  u  +  1)  ==  0  &&  v  &  1)  ==  0  &&  k  <  32)  {  u  /=  2;  [BUGGY]      v  /=  2;  k++;  //  cast  out  twos.  }  if  (k  ==  31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }    int  t  =  ((u  &  1)  ==  1)  ?  v  :  -(u  /  2)/*  B3  */;    [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  short  NS  PS  ZS  boolean  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  k  t  u  v  	projects/Math94/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	431	431	1	replace	((  u  +  1)  ==  0  &&  v  &  1)  ==  0  &&  k  <  32)  {  u  /=  2;	  ((    u    +    1)    ==    0    &&    v    &    1)    ==    0    &&    k    <    31)    {    u    /=    2;    	non-compiled	[CE]  <identifier>  expected	51	None	replace
105	[BUG]  [BUGGY]  ((  u  +  1)  ==  0  &&  v  &  2)  ==  0  &&  k  <  31)  {  u  /=  2;  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;      [BUGGY]  ((  u  +  1)  ==  0  &&  v  &  2)  ==  0  &&  k  <  31)  {  u  /=  2;  [BUGGY]      v  /=  2;  k++;  //  cast  out  twos.  }  if  (k  ==  31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }    int  t  =  ((u  &  1)  ==  1)  ?  v  :  -(u  /  2)/*  B3  */;    [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  short  NS  PS  ZS  boolean  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  k  t  u  v  	projects/Math94/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	431	431	1	replace	((  u  +  1)  ==  0  &&  v  &  2)  ==  0  &&  k  <  31)  {  u  /=  2;	  ((    u    +    1)    ==    0    &&    v    &    1)    ==    0    &&    k    <    31)    {    u    /=    2;    	non-compiled	[CE]  <identifier>  expected	51	None	replace
106	[BUG]  [BUGGY]  ((  u  +  1)  ==  0  &&  v  &  1)  ==  0  &&  k  <  31)  {  u  /=  3;  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;      [BUGGY]  ((  u  +  1)  ==  0  &&  v  &  1)  ==  0  &&  k  <  31)  {  u  /=  3;  [BUGGY]      v  /=  2;  k++;  //  cast  out  twos.  }  if  (k  ==  31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }    int  t  =  ((u  &  1)  ==  1)  ?  v  :  -(u  /  2)/*  B3  */;    [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  short  NS  PS  ZS  boolean  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  k  t  u  v  	projects/Math94/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	431	431	1	replace	((  u  +  1)  ==  0  &&  v  &  1)  ==  0  &&  k  <  31)  {  u  /=  3;	  ((    u    +    1)    ==    0    &&    v    &    1)    ==    0    &&    k    <    31)    {    u    /=    2;    	non-compiled	[CE]  <identifier>  expected	51	None	replace
107	[BUG]  [BUGGY]  ((  u  &  1)  ==  0  &&  v  <  31)?  v  :  -(u  /  2)/*  B3  */,  k);  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;      [BUGGY]  ((  u  &  1)  ==  0  &&  v  <  31)?  v  :  -(u  /  2)/*  B3  */,  k);  [BUGGY]      v  /=  2;  k++;  //  cast  out  twos.  }  if  (k  ==  31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }    int  t  =  ((u  &  1)  ==  1)  ?  v  :  -(u  /  2)/*  B3  */;    [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  short  NS  PS  ZS  boolean  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  k  t  u  v  	projects/Math94/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	431	431	1	replace	((  u  &  1)  ==  0  &&  v  <  31)?  v  :  -(u  /  2)/*  B3  */,  k);	  ((    u    &    1)    ==    0    &&    v    <    31)?    v    :    -(u    /    2)/*    B3    */);    	non-compiled	[CE]  <identifier>  expected	35	None	replace
108	[BUG]  [BUGGY]  ((  u  &  1)  ==  0  &&  v  &  1)  ==  1  &&  k  <  31)  {  u  /=  2;  k++;  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;      [BUGGY]  ((  u  &  1)  ==  0  &&  v  &  1)  ==  1  &&  k  <  31)  {  u  /=  2;  k++;  [BUGGY]      v  /=  2;  k++;  //  cast  out  twos.  }  if  (k  ==  31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }    int  t  =  ((u  &  1)  ==  1)  ?  v  :  -(u  /  2)/*  B3  */;    [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  short  NS  PS  ZS  boolean  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  k  t  u  v  	projects/Math94/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	431	431	1	replace	((  u  &  1)  ==  0  &&  v  &  1)  ==  1  &&  k  <  31)  {  u  /=  2;  k++;	  ((    u    &    1)    ==    1    &&    v    &    1)    ==    1    &&    k    <    31)    {    u    /=    2;    k++;    	non-compiled	[CE]  <identifier>  expected	15	None	replace
109	[BUG]  [BUGGY]  ((  u  &  1)  ==  0  &&  k  &  2)  ==  0  &&  k  <  31)  {  throw  new  ArithmeticException( "overflow:  gcd  is  2  >>  31 ");  }  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;      [BUGGY]  ((  u  &  1)  ==  0  &&  k  &  2)  ==  0  &&  k  <  31)  {  throw  new  ArithmeticException( "overflow:  gcd  is  2  >>  31 ");  }  [BUGGY]      v  /=  2;  k++;  //  cast  out  twos.  }  if  (k  ==  31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }    int  t  =  ((u  &  1)  ==  1)  ?  v  :  -(u  /  2)/*  B3  */;    [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  short  NS  PS  ZS  boolean  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  k  t  u  v  	projects/Math94/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	431	431	1	replace	((  u  &  1)  ==  0  &&  k  &  2)  ==  0  &&  k  <  31)  {  throw  new  ArithmeticException( "overflow:  gcd  is  2  >>  31 ");  }	  ((    u    &    1)    ==    0    &&    v    &    2)    ==    0    &&    k    <    31)    {    throw    new    ArithmeticException(   "overflow:    gcd    is    2    >>    31   ");    }    	non-compiled	[CE]  <identifier>  expected	26	None	replace
110	[BUG]  [BUGGY]  ((  v  &  1)  ==  0  &&  v  &  1)  ==  0)  {  throw  new  ArithmeticException( "Overflow:  gcd  is  2  >>  31 ");  }  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;      [BUGGY]  ((  v  &  1)  ==  0  &&  v  &  1)  ==  0)  {  throw  new  ArithmeticException( "Overflow:  gcd  is  2  >>  31 ");  }  [BUGGY]      v  /=  2;  k++;  //  cast  out  twos.  }  if  (k  ==  31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }    int  t  =  ((u  &  1)  ==  1)  ?  v  :  -(u  /  2)/*  B3  */;    [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  short  NS  PS  ZS  boolean  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  k  t  u  v  	projects/Math94/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	431	431	1	replace	((  v  &  1)  ==  0  &&  v  &  1)  ==  0)  {  throw  new  ArithmeticException( "Overflow:  gcd  is  2  >>  31 ");  }	  ((    u    &    1)    ==    0    &&    v    &    1)    ==    0)    {    throw    new    ArithmeticException(   "Overflow:    gcd    is    2    >>    31   ");    }    	non-compiled	[CE]  <identifier>  expected	48	None	replace
111	[BUG]  [BUGGY]  ((  u  &  1)  ==  0  &&  k  <  31)?  v  :  -(u  /  2)/*  B3  */,  t  +  1);  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;      [BUGGY]  ((  u  &  1)  ==  0  &&  k  <  31)?  v  :  -(u  /  2)/*  B3  */,  t  +  1);  [BUGGY]      v  /=  2;  k++;  //  cast  out  twos.  }  if  (k  ==  31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }    int  t  =  ((u  &  1)  ==  1)  ?  v  :  -(u  /  2)/*  B3  */;    [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  short  NS  PS  ZS  boolean  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  k  t  u  v  	projects/Math94/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	431	431	1	replace	((  u  &  1)  ==  0  &&  k  <  31)?  v  :  -(u  /  2)/*  B3  */,  t  +  1);	  ((    u    &    1)    ==    0    &&    k    <    31)?    v    :    -(u    /    2)/*    B3    */,    t);    	non-compiled	[CE]  <identifier>  expected	36	None	replace
112	[BUG]  [BUGGY]  ((  v  &  1)  ==  0  &&  v  &  1)  ==  0)  {  throw  new  ArithmeticException( "overflow:  gcd  is  2  >>  31 ");  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;      [BUGGY]  ((  v  &  1)  ==  0  &&  v  &  1)  ==  0)  {  throw  new  ArithmeticException( "overflow:  gcd  is  2  >>  31 ");  [BUGGY]      v  /=  2;  k++;  //  cast  out  twos.  }  if  (k  ==  31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }    int  t  =  ((u  &  1)  ==  1)  ?  v  :  -(u  /  2)/*  B3  */;    [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  short  NS  PS  ZS  boolean  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  k  t  u  v  	projects/Math94/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	431	431	1	replace	((  v  &  1)  ==  0  &&  v  &  1)  ==  0)  {  throw  new  ArithmeticException( "overflow:  gcd  is  2  >>  31 ");	  ((    u    &    1)    ==    0    &&    v    &    1)    ==    0)    {    throw    new    ArithmeticException(   "overflow:    gcd    is    2    >>    31   ");    	non-compiled	[CE]  <identifier>  expected	53	None	replace
113	[BUG]  [BUGGY]  ((  u  &  1)  ==  0  &&  k  &  2)  ==  0  &&  k  <  31)  {  throw  new  ArithmeticException( "Overflow:  gcd  is  2  >>  31 ");  }  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;      [BUGGY]  ((  u  &  1)  ==  0  &&  k  &  2)  ==  0  &&  k  <  31)  {  throw  new  ArithmeticException( "Overflow:  gcd  is  2  >>  31 ");  }  [BUGGY]      v  /=  2;  k++;  //  cast  out  twos.  }  if  (k  ==  31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }    int  t  =  ((u  &  1)  ==  1)  ?  v  :  -(u  /  2)/*  B3  */;    [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  short  NS  PS  ZS  boolean  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  k  t  u  v  	projects/Math94/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	431	431	1	replace	((  u  &  1)  ==  0  &&  k  &  2)  ==  0  &&  k  <  31)  {  throw  new  ArithmeticException( "Overflow:  gcd  is  2  >>  31 ");  }	  ((    u    &    1)    ==    0    &&    k    &    1)    ==    0    &&    k    <    31)    {    throw    new    ArithmeticException(   "Overflow:    gcd    is    2    >>    31   ");    }    	non-compiled	[CE]  <identifier>  expected	21	None	replace
114	[BUG]  [BUGGY]  ((  u  +  1)  ==  0  &&  v  &  1)  ==  0  &&  k  <  32)  {  u  /=  2;  k++;  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;      [BUGGY]  ((  u  +  1)  ==  0  &&  v  &  1)  ==  0  &&  k  <  32)  {  u  /=  2;  k++;  [BUGGY]      v  /=  2;  k++;  //  cast  out  twos.  }  if  (k  ==  31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }    int  t  =  ((u  &  1)  ==  1)  ?  v  :  -(u  /  2)/*  B3  */;    [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  short  NS  PS  ZS  boolean  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  k  t  u  v  	projects/Math94/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	431	431	1	replace	((  u  +  1)  ==  0  &&  v  &  1)  ==  0  &&  k  <  32)  {  u  /=  2;  k++;	  ((    u    +    1)    ==    0    &&    v    &    1)    ==    0    &&    k    <    31)    {    u    /=    2;    k++;    	non-compiled	[CE]  <identifier>  expected	41	None	replace
115	[BUG]  [BUGGY]  ((  u  +  1)  ==  0  &&  v  &  2)  ==  0  &&  k  <  31)  {  u  /=  2;  k++;  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;      [BUGGY]  ((  u  +  1)  ==  0  &&  v  &  2)  ==  0  &&  k  <  31)  {  u  /=  2;  k++;  [BUGGY]      v  /=  2;  k++;  //  cast  out  twos.  }  if  (k  ==  31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }    int  t  =  ((u  &  1)  ==  1)  ?  v  :  -(u  /  2)/*  B3  */;    [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  short  NS  PS  ZS  boolean  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  k  t  u  v  	projects/Math94/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	431	431	1	replace	((  u  +  1)  ==  0  &&  v  &  2)  ==  0  &&  k  <  31)  {  u  /=  2;  k++;	  ((    u    +    1)    ==    0    &&    v    &    1)    ==    0    &&    k    <    31)    {    u    /=    2;    k++;    	non-compiled	[CE]  <identifier>  expected	41	None	replace
116	[BUG]  [BUGGY]  ((  u  &  1)  ==  0  &&  k  <  31)?  -(v  /  2):  -(v  /  2)/*  B3  */);  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;      [BUGGY]  ((  u  &  1)  ==  0  &&  k  <  31)?  -(v  /  2):  -(v  /  2)/*  B3  */);  [BUGGY]      v  /=  2;  k++;  //  cast  out  twos.  }  if  (k  ==  31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }    int  t  =  ((u  &  1)  ==  1)  ?  v  :  -(u  /  2)/*  B3  */;    [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  short  NS  PS  ZS  boolean  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  k  t  u  v  	projects/Math94/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	431	431	1	replace	((  u  &  1)  ==  0  &&  k  <  31)?  -(v  /  2):  -(v  /  2)/*  B3  */);	  ((    u    &    1)    ==    0    &&    k    <    31)?    -(u    /    2):    -(v    /    2)/*    B3    */);    	non-compiled	[CE]  <identifier>  expected	18	None	replace
117	[BUG]  [BUGGY]  if(t  ==  31)  {  k++;  }  else  {  throw  new  ArithmeticException( " ");  }  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;      [BUGGY]  if(t  ==  31)  {  k++;  }  else  {  throw  new  ArithmeticException( " ");  }  [BUGGY]      v  /=  2;  k++;  //  cast  out  twos.  }  if  (k  ==  31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }    int  t  =  ((u  &  1)  ==  1)  ?  v  :  -(u  /  2)/*  B3  */;    [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  short  NS  PS  ZS  boolean  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  k  t  u  v  	projects/Math94/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	431	431	1	replace	if(t  ==  31)  {  k++;  }  else  {  throw  new  ArithmeticException( " ");  }	  if(t    >    31)    {    k++;    }    else    {    throw    new    ArithmeticException(   "   ");    }    	non-compiled	[CE]  <identifier>  expected	24	None	replace
118	[BUG]  [BUGGY]  if(t  <  =  31)  {  k++;  }  else  {  throw  new  ArithmeticException( " ");  }  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;      [BUGGY]  if(t  <  =  31)  {  k++;  }  else  {  throw  new  ArithmeticException( " ");  }  [BUGGY]      v  /=  2;  k++;  //  cast  out  twos.  }  if  (k  ==  31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }    int  t  =  ((u  &  1)  ==  1)  ?  v  :  -(u  /  2)/*  B3  */;    [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  short  NS  PS  ZS  boolean  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  k  t  u  v  	projects/Math94/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	431	431	1	replace	if(t  <  =  31)  {  k++;  }  else  {  throw  new  ArithmeticException( " ");  }	  if(t    >    31)    {    k++;    }    else    {    throw    new    ArithmeticException(   "   ");    }    	non-compiled	[CE]  <identifier>  expected	24	None	replace
119	[BUG]  [BUGGY]  if(u  >  0)  {  k++;  }  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;      [BUGGY]  if(u  >  0)  {  k++;  }  [BUGGY]      v  /=  2;  k++;  //  cast  out  twos.  }  if  (k  ==  31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }    int  t  =  ((u  &  1)  ==  1)  ?  v  :  -(u  /  2)/*  B3  */;    [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  short  NS  PS  ZS  boolean  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  k  t  u  v  	projects/Math94/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	431	431	1	replace	if(u  >  0)  {  k++;  }	  if(v    >    0)    {    k++;    }    	non-compiled	[CE]  <identifier>  expected	33	None	replace
120	[BUG]  [BUGGY]  ((  u  &  1)  ==  0  &&  v  &  1)  ==  31)  {  u  /=  2;  k++;  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;      [BUGGY]  ((  u  &  1)  ==  0  &&  v  &  1)  ==  31)  {  u  /=  2;  k++;  [BUGGY]      v  /=  2;  k++;  //  cast  out  twos.  }  if  (k  ==  31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }    int  t  =  ((u  &  1)  ==  1)  ?  v  :  -(u  /  2)/*  B3  */;    [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  short  NS  PS  ZS  boolean  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  k  t  u  v  	projects/Math94/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	431	431	1	replace	((  u  &  1)  ==  0  &&  v  &  1)  ==  31)  {  u  /=  2;  k++;	  ((    u    &    1)    ==    0    &&    v    &    1)    ==    0)    {    u    /=    2;    k++;    	non-compiled	[CE]  <identifier>  expected	13	None	replace
121	[BUG]  [BUGGY]  ((  u  &  1)  ==  0  &&  k  <  31)?  v  :  -(u  /  2)/  2  *  B3  */  +  1);  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;      [BUGGY]  ((  u  &  1)  ==  0  &&  k  <  31)?  v  :  -(u  /  2)/  2  *  B3  */  +  1);  [BUGGY]      v  /=  2;  k++;  //  cast  out  twos.  }  if  (k  ==  31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }    int  t  =  ((u  &  1)  ==  1)  ?  v  :  -(u  /  2)/*  B3  */;    [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  short  NS  PS  ZS  boolean  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  k  t  u  v  	projects/Math94/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	431	431	1	replace	((  u  &  1)  ==  0  &&  k  <  31)?  v  :  -(u  /  2)/  2  *  B3  */  +  1);	  ((    u    &    1)    ==    0    &&    k    <    31)?    v    :    -(u    /    2)/    2    *    B3    */);    	non-compiled	[CE]  <identifier>  expected	44	None	replace
122	[BUG]  [BUGGY]  ((  u  &  1)  ==  0  &&  k  <  31)?  v  :  -(u  /  2)/  2  */);  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;      [BUGGY]  ((  u  &  1)  ==  0  &&  k  <  31)?  v  :  -(u  /  2)/  2  */);  [BUGGY]      v  /=  2;  k++;  //  cast  out  twos.  }  if  (k  ==  31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }    int  t  =  ((u  &  1)  ==  1)  ?  v  :  -(u  /  2)/*  B3  */;    [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  short  NS  PS  ZS  boolean  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  k  t  u  v  	projects/Math94/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	431	431	1	replace	((  u  &  1)  ==  0  &&  k  <  31)?  v  :  -(u  /  2)/  2  */);	  ((    u    &    1)    ==    0    &&    k    <    31)?    v    :    -(u    /    2)/    B3    */);    	non-compiled	[CE]  <identifier>  expected	17	None	replace
123	[BUG]  [BUGGY]  ettyPrinter.println( "Overflow:  Gcd  is  2  >>  31 ");  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;      [BUGGY]  ettyPrinter.println( "Overflow:  Gcd  is  2  >>  31 ");  [BUGGY]      k++;  //  cast  out  twos.  }  if  (k  ==  31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }    int  t  =  ((u  &  1)  ==  1)  ?  v  :  -(u  /  2)/*  B3  */;    [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  short  NS  PS  ZS  boolean  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  k  t  u  v  	projects/Math94/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	431	431	1	replace	ettyPrinter.println( "Overflow:  Gcd  is  2  >>  31 ");	  if(t    >    0)    {    for(int    k    =    0;    k    <    2;    k++)    {    throw    new    ArithmeticException(   "overflow:    Gcd    is    2    >>    31   ");    }    	non-compiled	[CE]  <identifier>  expected	47	None	replace
124	[BUG]  [BUGGY]  ettyPrinter.println( "Overflow:  Gcd  is  2  >=  31 ");  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]      u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;      [BUGGY]  ettyPrinter.println( "Overflow:  Gcd  is  2  >=  31 ");  [BUGGY]      k++;  //  cast  out  twos.  }  if  (k  ==  31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }    int  t  =  ((u  &  1)  ==  1)  ?  v  :  -(u  /  2)/*  B3  */;    [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  short  NS  PS  ZS  boolean  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  k  t  u  v  	projects/Math94/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	431	431	1	replace	ettyPrinter.println( "Overflow:  Gcd  is  2  >=  31 ");	  if(t    >    0)    {    for(int    k    =    0;    k    <    2;    k++)    {    throw    new    ArithmeticException(   "overflow:    Gcd    is    2    >>    31   ");    }    	non-compiled	[CE]  <identifier>  expected	47	None	replace
125	[BUG]  [BUGGY]  ettyPrinter.println( "Overflow:  gcd  is  2  <  31 ");  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;      [BUGGY]  ettyPrinter.println( "Overflow:  gcd  is  2  <  31 ");  [BUGGY]      k++;  //  cast  out  twos.  }  if  (k  ==  31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }    int  t  =  ((u  &  1)  ==  1)  ?  v  :  -(u  /  2)/*  B3  */;    [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  short  NS  PS  ZS  boolean  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  k  t  u  v  	projects/Math94/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	431	431	1	replace	ettyPrinter.println( "Overflow:  gcd  is  2  <  31 ");	  if(t    >    0)    {    for(int    k    =    0;    k    <    2;    k++)    {    throw    new    ArithmeticException(   "overflow:    gcd    is    2    >>    31   ");    }    	non-compiled	[CE]  <identifier>  expected	45	None	replace
126	[BUG]  [BUGGY]  v  %  2  ==  31;  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;      [BUGGY]  v  %  2  ==  31;  [BUGGY]      k++;  //  cast  out  twos.  }  if  (k  ==  31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }    int  t  =  ((u  &  1)  ==  1)  ?  v  :  -(u  /  2)/*  B3  */;    [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  short  NS  PS  ZS  boolean  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  k  t  u  v  	projects/Math94/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	431	431	1	replace	v  %  2  ==  31;	  v    %    2    ==    1;    	non-compiled	[CE]  <identifier>  expected	49	None	replace
127	[BUG]  [BUGGY]  ((  u  &  1)  ==  0  &&  k  <  31)?  -(v  /  2):  -(u  /  2)/  B3  */);  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;      [BUGGY]  ((  u  &  1)  ==  0  &&  k  <  31)?  -(v  /  2):  -(u  /  2)/  B3  */);  [BUGGY]      v  /=  2;  k++;  //  cast  out  twos.  }  if  (k  ==  31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }    int  t  =  ((u  &  1)  ==  1)  ?  v  :  -(u  /  2)/*  B3  */;    [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  short  NS  PS  ZS  boolean  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  k  t  u  v  	projects/Math94/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	431	431	1	replace	((  u  &  1)  ==  0  &&  k  <  31)?  -(v  /  2):  -(u  /  2)/  B3  */);	  ((    u    &    1)    ==    0    &&    k    <    31)?    -(v    /    2):    -(u    /    2)/*    B3    */);    	non-compiled	[CE]  <identifier>  expected	25	None	replace
128	[BUG]  [BUGGY]  ((  u  &  1)  ==  0  &&  k  <  31)?  -(v  %  2):  -(u  %  2)/*  B3  */);  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;      [BUGGY]  ((  u  &  1)  ==  0  &&  k  <  31)?  -(v  %  2):  -(u  %  2)/*  B3  */);  [BUGGY]      v  /=  2;  k++;  //  cast  out  twos.  }  if  (k  ==  31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }    int  t  =  ((u  &  1)  ==  1)  ?  v  :  -(u  /  2)/*  B3  */;    [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  short  NS  PS  ZS  boolean  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  k  t  u  v  	projects/Math94/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	431	431	1	replace	((  u  &  1)  ==  0  &&  k  <  31)?  -(v  %  2):  -(u  %  2)/*  B3  */);	  ((    u    &    1)    ==    0    &&    k    <    31)?    -(v    /    2):    -(u    /    2)/*    B3    */);    	non-compiled	[CE]  <identifier>  expected	25	None	replace
129	[BUG]  [BUGGY]  ((  u  &  1)  ==  0  &&  v  &  1)  ==  0  &&  k  <  31)  {  throw  new  ArithmeticException( "gcd  is  2  >>  31 ");  }  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;      [BUGGY]  ((  u  &  1)  ==  0  &&  v  &  1)  ==  0  &&  k  <  31)  {  throw  new  ArithmeticException( "gcd  is  2  >>  31 ");  }  [BUGGY]      v  /=  2;  k++;  //  cast  out  twos.  }  if  (k  ==  31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }    int  t  =  ((u  &  1)  ==  1)  ?  v  :  -(u  /  2)/*  B3  */;    [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  short  NS  PS  ZS  boolean  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  k  t  u  v  	projects/Math94/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	431	431	1	replace	((  u  &  1)  ==  0  &&  v  &  1)  ==  0  &&  k  <  31)  {  throw  new  ArithmeticException( "gcd  is  2  >>  31 ");  }	  ((    u    &    1)    ==    0    &&    v    &    1)    ==    0    &&    k    <    31)    {    throw    new    ArithmeticException(   "gcd    is    2    >>    31   ");    	non-compiled	[CE]  <identifier>  expected	54	None	replace
130	[BUG]  [BUGGY]  ((  u  &  1)  ==  0  &&  v  &  2)  ==  0  &&  k  <  31)  {  throw  new  ArithmeticException( "gcd  is  2  >>  31 ");  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]      u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;      [BUGGY]  ((  u  &  1)  ==  0  &&  v  &  2)  ==  0  &&  k  <  31)  {  throw  new  ArithmeticException( "gcd  is  2  >>  31 ");  [BUGGY]      v  /=  2;  k++;  //  cast  out  twos.  }  if  (k  ==  31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }    int  t  =  ((u  &  1)  ==  1)  ?  v  :  -(u  /  2)/*  B3  */;    [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  short  NS  PS  ZS  boolean  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  k  t  u  v  	projects/Math94/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	431	431	1	replace	((  u  &  1)  ==  0  &&  v  &  2)  ==  0  &&  k  <  31)  {  throw  new  ArithmeticException( "gcd  is  2  >>  31 ");	  ((    u    &    1)    ==    0    &&    v    &    1)    ==    0    &&    k    <    31)    {    throw    new    ArithmeticException(   "gcd    is    2    >>    31   ");    	non-compiled	[CE]  <identifier>  expected	54	None	replace
131	[BUG]  [BUGGY]  ((  u  &  1)  ==  0  &&  k  <  31)?  -(u  /  2):  -(u  /  2)/  4  */);  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;      [BUGGY]  ((  u  &  1)  ==  0  &&  k  <  31)?  -(u  /  2):  -(u  /  2)/  4  */);  [BUGGY]      v  /=  2;  k++;  //  cast  out  twos.  }  if  (k  ==  31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }    int  t  =  ((u  &  1)  ==  1)  ?  v  :  -(u  /  2)/*  B3  */;    [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  short  NS  PS  ZS  boolean  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  k  t  u  v  	projects/Math94/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	431	431	1	replace	((  u  &  1)  ==  0  &&  k  <  31)?  -(u  /  2):  -(u  /  2)/  4  */);	  ((    u    &    1)    ==    0    &&    k    <    31)?    -(u    /    2):    -(u    /    2)/    B3    */);    	non-compiled	[CE]  <identifier>  expected	19	None	replace
132	[BUG]  [BUGGY]  if(k  >  31)  {  k++;  }  else  {  throw  new  ArithmeticException( "overflow:  gcd  is  2  >>  31 ");  }  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;      [BUGGY]  if(k  >  31)  {  k++;  }  else  {  throw  new  ArithmeticException( "overflow:  gcd  is  2  >>  31 ");  }  [BUGGY]      v  /=  2;  k++;  //  cast  out  twos.  }  if  (k  ==  31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }    int  t  =  ((u  &  1)  ==  1)  ?  v  :  -(u  /  2)/*  B3  */;    [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  short  NS  PS  ZS  boolean  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  k  t  u  v  	projects/Math94/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	431	431	1	replace	if(k  >  31)  {  k++;  }  else  {  throw  new  ArithmeticException( "overflow:  gcd  is  2  >>  31 ");  }	  if(t    >    31)    {    k++;    }    else    {    throw    new    ArithmeticException(   "   ");    }    	non-compiled	[CE]  <identifier>  expected	24	None	replace
133	[BUG]  [BUGGY]  if(k  ==  31)  {  k++;  }  else  {  throw  new  ArithmeticException( " ");  }  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;      [BUGGY]  if(k  ==  31)  {  k++;  }  else  {  throw  new  ArithmeticException( " ");  }  [BUGGY]      v  /=  2;  k++;  //  cast  out  twos.  }  if  (k  ==  31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }    int  t  =  ((u  &  1)  ==  1)  ?  v  :  -(u  /  2)/*  B3  */;    [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  short  NS  PS  ZS  boolean  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  k  t  u  v  	projects/Math94/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	431	431	1	replace	if(k  ==  31)  {  k++;  }  else  {  throw  new  ArithmeticException( " ");  }	  if(t    >    31)    {    k++;    }    else    {    throw    new    ArithmeticException(   "   ");    }    	non-compiled	[CE]  <identifier>  expected	24	None	replace
134	[BUG]  [BUGGY]  ((  u  &  1)  ==  0  &&  k  <  31)?  -(v  &  2):  -(u  /  2)/  B3  */);  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;      [BUGGY]  ((  u  &  1)  ==  0  &&  k  <  31)?  -(v  &  2):  -(u  /  2)/  B3  */);  [BUGGY]      v  /=  2;  k++;  //  cast  out  twos.  }  if  (k  ==  31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }    int  t  =  ((u  &  1)  ==  1)  ?  v  :  -(u  /  2)/*  B3  */;    [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  short  NS  PS  ZS  boolean  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  k  t  u  v  	projects/Math94/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	431	431	1	replace	((  u  &  1)  ==  0  &&  k  <  31)?  -(v  &  2):  -(u  /  2)/  B3  */);	  ((    u    &    1)    ==    0    &&    k    <    31)?    -(u    /    2):    -(u    /    2)/    B3    */);    	non-compiled	[CE]  <identifier>  expected	19	None	replace
135	[BUG]  [BUGGY]  ((  u  &  1)  ==  0  &&  k  <  31)?  -(t  /  2):  -(u  /  2)/  B3  */);  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;      [BUGGY]  ((  u  &  1)  ==  0  &&  k  <  31)?  -(t  /  2):  -(u  /  2)/  B3  */);  [BUGGY]      v  /=  2;  k++;  //  cast  out  twos.  }  if  (k  ==  31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }    int  t  =  ((u  &  1)  ==  1)  ?  v  :  -(u  /  2)/*  B3  */;    [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  short  NS  PS  ZS  boolean  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  k  t  u  v  	projects/Math94/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	431	431	1	replace	((  u  &  1)  ==  0  &&  k  <  31)?  -(t  /  2):  -(u  /  2)/  B3  */);	  ((    u    &    1)    ==    0    &&    k    <    31)?    -(u    /    2):    -(u    /    2)/    B3    */);    	non-compiled	[CE]  <identifier>  expected	19	None	replace
136	[BUG]  [BUGGY]  if(k  <  31)  {  k++;  }  [CE]  <identifier>  expected  [FE]            AssertionFailedError      [CONTEXT]      u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;      [BUGGY]  if(k  <  31)  {  k++;  }  [BUGGY]      v  /=  2;  k++;  //  cast  out  twos.  }  if  (k  ==  31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }    int  t  =  ((u  &  1)  ==  1)  ?  v  :  -(u  /  2)/*  B3  */;    [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  short  NS  PS  ZS  boolean  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  k  t  u  v  	projects/Math94/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	431	431	1	replace	if(k  <  31)  {  k++;  }	  if(v    >    31)    {    k++;    }    	non-compiled	[CE]  <identifier>  expected	31	None	replace
137	[BUG]  [BUGGY]  ((  u  &  1)  ==  0  &&  v  &  2)  ==  0)  {  u  +=  2;  k++;  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;      [BUGGY]  ((  u  &  1)  ==  0  &&  v  &  2)  ==  0)  {  u  +=  2;  k++;  [BUGGY]      v  /=  2;  k++;  //  cast  out  twos.  }  if  (k  ==  31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }    int  t  =  ((u  &  1)  ==  1)  ?  v  :  -(u  /  2)/*  B3  */;    [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  short  NS  PS  ZS  boolean  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  k  t  u  v  	projects/Math94/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	431	431	1	replace	((  u  &  1)  ==  0  &&  v  &  2)  ==  0)  {  u  +=  2;  k++;	  ((    u    &    1)    ==    0    &&    v    &    2)    ==    0    &&    k    <    31)    {    u    /=    2;    k++;    	non-compiled	[CE]  <identifier>  expected	14	None	replace
138	[BUG]  [BUGGY]  ((  u  &  1)  ==  0  &&  k  <  31)?  -(v  /  2):  -(v  /  2)/  B3  */);  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;      [BUGGY]  ((  u  &  1)  ==  0  &&  k  <  31)?  -(v  /  2):  -(v  /  2)/  B3  */);  [BUGGY]      v  /=  2;  k++;  //  cast  out  twos.  }  if  (k  ==  31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }    int  t  =  ((u  &  1)  ==  1)  ?  v  :  -(u  /  2)/*  B3  */;    [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  short  NS  PS  ZS  boolean  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  k  t  u  v  	projects/Math94/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	431	431	1	replace	((  u  &  1)  ==  0  &&  k  <  31)?  -(v  /  2):  -(v  /  2)/  B3  */);	  ((    u    &    1)    ==    0    &&    k    <    31)?    -(u    /    2):    -(v    /    2)/*    B3    */);    	non-compiled	[CE]  <identifier>  expected	18	None	replace
139	[BUG]  [BUGGY]  ((  u  &  1)  ==  0  &&  k  <  31)?  -(v  &  2):  -(v  /  2)/  B3  */);  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;      [BUGGY]  ((  u  &  1)  ==  0  &&  k  <  31)?  -(v  &  2):  -(v  /  2)/  B3  */);  [BUGGY]      v  /=  2;  k++;  //  cast  out  twos.  }  if  (k  ==  31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }    int  t  =  ((u  &  1)  ==  1)  ?  v  :  -(u  /  2)/*  B3  */;    [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  short  NS  PS  ZS  boolean  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  k  t  u  v  	projects/Math94/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	431	431	1	replace	((  u  &  1)  ==  0  &&  k  <  31)?  -(v  &  2):  -(v  /  2)/  B3  */);	  ((    u    &    1)    ==    0    &&    k    <    31)?    -(u    /    2):    -(v    /    2)/*    B3    */);    	non-compiled	[CE]  <identifier>  expected	18	None	replace
140	[BUG]  [BUGGY]  ((  u  &  1)  ==  0  &&  k  <  31)?  t  :  -(u  /  2)/  2  *  B3  */);  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;      [BUGGY]  ((  u  &  1)  ==  0  &&  k  <  31)?  t  :  -(u  /  2)/  2  *  B3  */);  [BUGGY]      k++;  //  cast  out  twos.  }  if  (k  ==  31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }    int  t  =  ((u  &  1)  ==  1)  ?  v  :  -(u  /  2)/*  B3  */;    [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  short  NS  PS  ZS  boolean  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  k  t  u  v  	projects/Math94/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	431	431	1	replace	((  u  &  1)  ==  0  &&  k  <  31)?  t  :  -(u  /  2)/  2  *  B3  */);	  ((    u    &    1)    ==    0    &&    k    <    31)?    t    :    -(u    /    2)/*    B3    */);    	non-compiled	[CE]  <identifier>  expected	12	None	replace
141	[BUG]  [BUGGY]  ((  u  &  1)  ==  0  &&  k  <  31)?  v  :  -(u  /  2)/  2  *  B3  */,  t);  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;      [BUGGY]  ((  u  &  1)  ==  0  &&  k  <  31)?  v  :  -(u  /  2)/  2  *  B3  */,  t);  [BUGGY]      v  /=  2;  k++;  //  cast  out  twos.  }  if  (k  ==  31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }    int  t  =  ((u  &  1)  ==  1)  ?  v  :  -(u  /  2)/*  B3  */;    [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  short  NS  PS  ZS  boolean  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  k  t  u  v  	projects/Math94/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	431	431	1	replace	((  u  &  1)  ==  0  &&  k  <  31)?  v  :  -(u  /  2)/  2  *  B3  */,  t);	  ((    u    &    1)    ==    0    &&    k    <    31)?    v    :    -(u    /    2)/*    B3    */,    t);    	non-compiled	[CE]  <identifier>  expected	36	None	replace
142	[BUG]  [BUGGY]  if(k  <  31)  {  k++;  }  else  {  throw  new  ArithmeticException( "overflow:  gcd  is  2  >>  31 ");  }  [CE]  <identifier>  expected  [FE]            AssertionFailedError      [CONTEXT]      u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;      [BUGGY]  if(k  <  31)  {  k++;  }  else  {  throw  new  ArithmeticException( "overflow:  gcd  is  2  >>  31 ");  }  [BUGGY]      v  /=  2;  k++;  //  cast  out  twos.  }  if  (k  ==  31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }    int  t  =  ((u  &  1)  ==  1)  ?  v  :  -(u  /  2)/*  B3  */;    [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  short  NS  PS  ZS  boolean  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  k  t  u  v  	projects/Math94/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	431	431	1	replace	if(k  <  31)  {  k++;  }  else  {  throw  new  ArithmeticException( "overflow:  gcd  is  2  >>  31 ");  }	  if(v    >    0)    {    k++;    }    else    {    throw    new    ArithmeticException(   "   ");    }    	non-compiled	[CE]  <identifier>  expected	38	None	replace
143	[BUG]  [BUGGY]  while(t  >  0)  {  for(int  k  =  0;  k  <  2;  k++)  {  throw  new  ArithmeticException( "overflow:  gcd  is  2  >>  31 ");  }  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;      [BUGGY]  while(t  >  0)  {  for(int  k  =  0;  k  <  2;  k++)  {  throw  new  ArithmeticException( "overflow:  gcd  is  2  >>  31 ");  }  [BUGGY]      k++;  //  cast  out  twos.  }  if  (k  ==  31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }    int  t  =  ((u  &  1)  ==  1)  ?  v  :  -(u  /  2)/*  B3  */;    [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  short  NS  PS  ZS  boolean  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  k  t  u  v  	projects/Math94/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	431	431	1	replace	while(t  >  0)  {  for(int  k  =  0;  k  <  2;  k++)  {  throw  new  ArithmeticException( "overflow:  gcd  is  2  >>  31 ");  }	  if(t    >    0)    {    for(int    k    =    0;    k    <    2;    k++)    {    throw    new    ArithmeticException(   "overflow:    gcd    is    2    >>    31   ");    }    	non-compiled	[CE]  <identifier>  expected	45	None	replace
144	[BUG]  [BUGGY]  if(t  >  0)  {  for(int  k  =  0;  k  <  2;  k++)  {  throw  new  ArithmeticException( "overflow:  gcd  is  2  >=  31 ");  }  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;      [BUGGY]  if(t  >  0)  {  for(int  k  =  0;  k  <  2;  k++)  {  throw  new  ArithmeticException( "overflow:  gcd  is  2  >=  31 ");  }  [BUGGY]      k++;  //  cast  out  twos.  }  if  (k  ==  31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }    int  t  =  ((u  &  1)  ==  1)  ?  v  :  -(u  /  2)/*  B3  */;    [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  short  NS  PS  ZS  boolean  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  k  t  u  v  	projects/Math94/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	431	431	1	replace	if(t  >  0)  {  for(int  k  =  0;  k  <  2;  k++)  {  throw  new  ArithmeticException( "overflow:  gcd  is  2  >=  31 ");  }	  if(t    >    0)    {    for(int    k    =    0;    k    <    2;    k++)    {    throw    new    ArithmeticException(   "overflow:    gcd    is    2    >>    31   ");    }    	non-compiled	[CE]  <identifier>  expected	45	None	replace
145	[BUG]  [BUGGY]  ((  u  &  1)  ==  0  &&  v  &  2)  ==  0)  {  throw  new  ArithmeticException( "Overflow:  gcd  is  2  >=  31 ");  }  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;      [BUGGY]  ((  u  &  1)  ==  0  &&  v  &  2)  ==  0)  {  throw  new  ArithmeticException( "Overflow:  gcd  is  2  >=  31 ");  }  [BUGGY]      v  /=  2;  k++;  //  cast  out  twos.  }  if  (k  ==  31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }    int  t  =  ((u  &  1)  ==  1)  ?  v  :  -(u  /  2)/*  B3  */;    [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  short  NS  PS  ZS  boolean  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  k  t  u  v  	projects/Math94/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	431	431	1	replace	((  u  &  1)  ==  0  &&  v  &  2)  ==  0)  {  throw  new  ArithmeticException( "Overflow:  gcd  is  2  >=  31 ");  }	  ((    u    &    1)    ==    0    &&    v    &    2)    ==    0    &&    k    <    31)    {    throw    new    ArithmeticException(   "Overflow:    gcd    is    2    >>    31   ");    }    	non-compiled	[CE]  <identifier>  expected	27	None	replace
146	[BUG]  [BUGGY]  ((  u  +  1)  ==  0  ||  v  &  1)  ==  0  ||  k  <  31)  {  u  /=  2;  k++;  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;      [BUGGY]  ((  u  +  1)  ==  0  ||  v  &  1)  ==  0  ||  k  <  31)  {  u  /=  2;  k++;  [BUGGY]      v  /=  2;  k++;  //  cast  out  twos.  }  if  (k  ==  31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }    int  t  =  ((u  &  1)  ==  1)  ?  v  :  -(u  /  2)/*  B3  */;    [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  short  NS  PS  ZS  boolean  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  k  t  u  v  	projects/Math94/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	431	431	1	replace	((  u  +  1)  ==  0  ||  v  &  1)  ==  0  ||  k  <  31)  {  u  /=  2;  k++;	  ((    u    +    1)    ==    0    &&    v    &    1)    ==    0    &&    k    <    31)    {    u    /=    2;    k++;    	non-compiled	[CE]  <identifier>  expected	41	None	replace
147	[BUG]  [BUGGY]  ((  u  &  1)  ==  0  &&  v  &  2)  ==  0)  {  throw  new  ArithmeticException( "gcd  is  2  >>  31 ");  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;      [BUGGY]  ((  u  &  1)  ==  0  &&  v  &  2)  ==  0)  {  throw  new  ArithmeticException( "gcd  is  2  >>  31 ");  [BUGGY]      v  /=  2;  k++;  //  cast  out  twos.  }  if  (k  ==  31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }    int  t  =  ((u  &  1)  ==  1)  ?  v  :  -(u  /  2)/*  B3  */;    [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  short  NS  PS  ZS  boolean  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  k  t  u  v  	projects/Math94/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	431	431	1	replace	((  u  &  1)  ==  0  &&  v  &  2)  ==  0)  {  throw  new  ArithmeticException( "gcd  is  2  >>  31 ");	  ((    u    &    1)    ==    0    &&    v    &    2)    ==    0    &&    k    <    31)    {    throw    new    ArithmeticException(   "overflow:    gcd    is    2    >>    31   ");    	non-compiled	[CE]  <identifier>  expected	37	None	replace
148	[BUG]  [BUGGY]  ((  u  &  1)  ==  0  &&  v  &  1)  ==  0)  {  u  +=  2;  k++;  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;      [BUGGY]  ((  u  &  1)  ==  0  &&  v  &  1)  ==  0)  {  u  +=  2;  k++;  [BUGGY]      v  /=  2;  k++;  //  cast  out  twos.  }  if  (k  ==  31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }    int  t  =  ((u  &  1)  ==  1)  ?  v  :  -(u  /  2)/*  B3  */;    [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  short  NS  PS  ZS  boolean  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  k  t  u  v  	projects/Math94/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	431	431	1	replace	((  u  &  1)  ==  0  &&  v  &  1)  ==  0)  {  u  +=  2;  k++;	  ((    u    &    1)    ==    0    &&    v    &    1)    ==    0)    {    u    /=    2;    k++;    	non-compiled	[CE]  <identifier>  expected	13	None	replace
149	[BUG]  [BUGGY]  ((  u  +  1)  ==  0  &&  v  &  2)  ==  0)  {  u  /=  2;  k++;  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;      [BUGGY]  ((  u  +  1)  ==  0  &&  v  &  2)  ==  0)  {  u  /=  2;  k++;  [BUGGY]      v  /=  2;  k++;  //  cast  out  twos.  }  if  (k  ==  31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }    int  t  =  ((u  &  1)  ==  1)  ?  v  :  -(u  /  2)/*  B3  */;    [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  short  NS  PS  ZS  boolean  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  k  t  u  v  	projects/Math94/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	431	431	1	replace	((  u  +  1)  ==  0  &&  v  &  2)  ==  0)  {  u  /=  2;  k++;	  ((    u    &    1)    ==    0    &&    v    &    2)    ==    0)    {    u    /=    2;    k++;    	non-compiled	[CE]  <identifier>  expected	42	None	replace
150	[BUG]  [BUGGY]  ((  u  &  1)  ==  1  &&  v  &  1)  ==  1  &&  k  <  31)  {  u  +=  2;  k++;  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;      [BUGGY]  ((  u  &  1)  ==  1  &&  v  &  1)  ==  1  &&  k  <  31)  {  u  +=  2;  k++;  [BUGGY]      v  /=  2;  k++;  //  cast  out  twos.  }  if  (k  ==  31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }    int  t  =  ((u  &  1)  ==  1)  ?  v  :  -(u  /  2)/*  B3  */;    [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  short  NS  PS  ZS  boolean  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  k  t  u  v  	projects/Math94/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	431	431	1	replace	((  u  &  1)  ==  1  &&  v  &  1)  ==  1  &&  k  <  31)  {  u  +=  2;  k++;	  ((    u    &    1)    ==    1    &&    v    &    1)    ==    1    &&    k    <    31)    {    u    /=    2;    k++;    	non-compiled	[CE]  <identifier>  expected	15	None	replace
151	[BUG]  [BUGGY]  ((  u  &  1)  ==  0  &&  v  <  31)?  v  :  -(u  /  2)/  B3  */);  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;      [BUGGY]  ((  u  &  1)  ==  0  &&  v  <  31)?  v  :  -(u  /  2)/  B3  */);  [BUGGY]      v  /=  2;  k++;  //  cast  out  twos.  }  if  (k  ==  31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }    int  t  =  ((u  &  1)  ==  1)  ?  v  :  -(u  /  2)/*  B3  */;    [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  short  NS  PS  ZS  boolean  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  k  t  u  v  	projects/Math94/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	431	431	1	replace	((  u  &  1)  ==  0  &&  v  <  31)?  v  :  -(u  /  2)/  B3  */);	  ((    u    &    1)    ==    0    &&    v    <    31)?    v    :    -(u    /    2)/*    B3    */);    	non-compiled	[CE]  <identifier>  expected	35	None	replace
152	[BUG]  [BUGGY]  ((  u  &  1)  ==  0  &&  v  <  31)?  v  :  -(u  /  2)/  2  *  B3  */);  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;      [BUGGY]  ((  u  &  1)  ==  0  &&  v  <  31)?  v  :  -(u  /  2)/  2  *  B3  */);  [BUGGY]      v  /=  2;  k++;  //  cast  out  twos.  }  if  (k  ==  31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }    int  t  =  ((u  &  1)  ==  1)  ?  v  :  -(u  /  2)/*  B3  */;    [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  short  NS  PS  ZS  boolean  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  k  t  u  v  	projects/Math94/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	431	431	1	replace	((  u  &  1)  ==  0  &&  v  <  31)?  v  :  -(u  /  2)/  2  *  B3  */);	  ((    u    &    1)    ==    0    &&    v    <    31)?    v    :    -(u    /    2)/*    B3    */);    	non-compiled	[CE]  <identifier>  expected	35	None	replace
153	[BUG]  [BUGGY]  ((  u  +  1)  ==  0  &&  k  &  1)  ==  0  &&  k  <  31)  {  throw  new  ArithmeticException( "overflow:  gcd  is  2  >>  31 ");  }  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;      [BUGGY]  ((  u  +  1)  ==  0  &&  k  &  1)  ==  0  &&  k  <  31)  {  throw  new  ArithmeticException( "overflow:  gcd  is  2  >>  31 ");  }  [BUGGY]      v  /=  2;  k++;  //  cast  out  twos.  }  if  (k  ==  31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }    int  t  =  ((u  &  1)  ==  1)  ?  v  :  -(u  /  2)/*  B3  */;    [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  short  NS  PS  ZS  boolean  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  k  t  u  v  	projects/Math94/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	431	431	1	replace	((  u  +  1)  ==  0  &&  k  &  1)  ==  0  &&  k  <  31)  {  throw  new  ArithmeticException( "overflow:  gcd  is  2  >>  31 ");  }	  ((    u    &    1)    ==    0    &&    k    &    1)    ==    0    &&    k    <    31)    {    throw    new    ArithmeticException(   "overflow:    gcd    is    2    >>    31   ");    }    	non-compiled	[CE]  <identifier>  expected	11	None	replace
154	[BUG]  [BUGGY]  ((  u  +  1)  ==  0  &&  v  &  1)  ==  0)  {  throw  new  ArithmeticException( "overflow:  gcd  is  2  >>  31 ");  }  [CE]  <identifier>  expected  [FE]            AssertionFailedError      [CONTEXT]      u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;      [BUGGY]  ((  u  +  1)  ==  0  &&  v  &  1)  ==  0)  {  throw  new  ArithmeticException( "overflow:  gcd  is  2  >>  31 ");  }  [BUGGY]      v  /=  2;  k++;  //  cast  out  twos.  }  if  (k  ==  31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }    int  t  =  ((u  &  1)  ==  1)  ?  v  :  -(u  /  2)/*  B3  */;    [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  short  NS  PS  ZS  boolean  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  k  t  u  v  	projects/Math94/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	431	431	1	replace	((  u  +  1)  ==  0  &&  v  &  1)  ==  0)  {  throw  new  ArithmeticException( "overflow:  gcd  is  2  >>  31 ");  }	  ((    u    &    1)    ==    0    &&    v    &    1)    ==    0)    {    throw    new    ArithmeticException(   "overflow:    gcd    is    2    >>    31   ");    }    	non-compiled	[CE]  <identifier>  expected	39	None	replace
155	[BUG]  [BUGGY]  ((  u  &  1)  ==  0  &&  v  &  1)  ==  0)  {  throw  new  ArithmeticException( "gcd  is  2  >>  31 ");  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;      [BUGGY]  ((  u  &  1)  ==  0  &&  v  &  1)  ==  0)  {  throw  new  ArithmeticException( "gcd  is  2  >>  31 ");  [BUGGY]      v  /=  2;  k++;  //  cast  out  twos.  }  if  (k  ==  31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }    int  t  =  ((u  &  1)  ==  1)  ?  v  :  -(u  /  2)/*  B3  */;    [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  short  NS  PS  ZS  boolean  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  k  t  u  v  	projects/Math94/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	431	431	1	replace	((  u  &  1)  ==  0  &&  v  &  1)  ==  0)  {  throw  new  ArithmeticException( "gcd  is  2  >>  31 ");	  ((    u    &    1)    ==    0    &&    v    &    1)    ==    0    &&    k    <    31)    {    throw    new    ArithmeticException(   "gcd    is    2    >>    31   ");    	non-compiled	[CE]  <identifier>  expected	54	None	replace
156	[BUG]  [BUGGY]  ((  u  &  1)  ==  1  &&  k  <  31)?  v  :  -(u  /  2)/  2  *  B3  */);  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;      [BUGGY]  ((  u  &  1)  ==  1  &&  k  <  31)?  v  :  -(u  /  2)/  2  *  B3  */);  [BUGGY]      v  /=  2;  k++;  //  cast  out  twos.  }  if  (k  ==  31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }    int  t  =  ((u  &  1)  ==  1)  ?  v  :  -(u  /  2)/*  B3  */;    [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  short  NS  PS  ZS  boolean  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  k  t  u  v  	projects/Math94/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	431	431	1	replace	((  u  &  1)  ==  1  &&  k  <  31)?  v  :  -(u  /  2)/  2  *  B3  */);	  ((    u    &    1)    ==    1    &&    k    <    31)?    v    :    -(u    /    2)/*    B3    */);    	non-compiled	[CE]  <identifier>  expected	16	None	replace
157	[BUG]  [BUGGY]  ((  u  &  1)  ==  0  &&  k  <  31)?  v  :  -(u  /  2)/  2  +  1  *  B3  */);  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;      [BUGGY]  ((  u  &  1)  ==  0  &&  k  <  31)?  v  :  -(u  /  2)/  2  +  1  *  B3  */);  [BUGGY]      v  /=  2;  k++;  //  cast  out  twos.  }  if  (k  ==  31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }    int  t  =  ((u  &  1)  ==  1)  ?  v  :  -(u  /  2)/*  B3  */;    [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  short  NS  PS  ZS  boolean  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  k  t  u  v  	projects/Math94/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	431	431	1	replace	((  u  &  1)  ==  0  &&  k  <  31)?  v  :  -(u  /  2)/  2  +  1  *  B3  */);	  ((    u    &    1)    ==    0    &&    k    <    31)?    v    :    -(u    /    2)/    2    *    B3    */);    	non-compiled	[CE]  <identifier>  expected	44	None	replace
158	[BUG]  [BUGGY]  while(t  >  0)  {  for(int  k  =  0;  k  <  2;  k++)  {  throw  new  ArithmeticException( "Overflow:  gcd  is  2  >>  31 ");  }  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;      [BUGGY]  while(t  >  0)  {  for(int  k  =  0;  k  <  2;  k++)  {  throw  new  ArithmeticException( "Overflow:  gcd  is  2  >>  31 ");  }  [BUGGY]      k++;  //  cast  out  twos.  }  if  (k  ==  31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }    int  t  =  ((u  &  1)  ==  1)  ?  v  :  -(u  /  2)/*  B3  */;    [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  short  NS  PS  ZS  boolean  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  k  t  u  v  	projects/Math94/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	431	431	1	replace	while(t  >  0)  {  for(int  k  =  0;  k  <  2;  k++)  {  throw  new  ArithmeticException( "Overflow:  gcd  is  2  >>  31 ");  }	  if(t    >    0)    {    for(int    k    =    0;    k    <    2;    k++)    {    throw    new    ArithmeticException(   "Overflow:    gcd    is    2    >>    31   ");    }    	non-compiled	[CE]  <identifier>  expected	46	None	replace
159	[BUG]  [BUGGY]  while(t  >  0)  {  for(int  k  =  0;  k  <  2;  k++)  {  throw  new  ArithmeticException( "overflow:  Gcd  is  2  >>  31 ");  }  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;      [BUGGY]  while(t  >  0)  {  for(int  k  =  0;  k  <  2;  k++)  {  throw  new  ArithmeticException( "overflow:  Gcd  is  2  >>  31 ");  }  [BUGGY]      k++;  //  cast  out  twos.  }  if  (k  ==  31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }    int  t  =  ((u  &  1)  ==  1)  ?  v  :  -(u  /  2)/*  B3  */;    [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  short  NS  PS  ZS  boolean  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  k  t  u  v  	projects/Math94/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	431	431	1	replace	while(t  >  0)  {  for(int  k  =  0;  k  <  2;  k++)  {  throw  new  ArithmeticException( "overflow:  Gcd  is  2  >>  31 ");  }	  if(t    >    0)    {    for(int    k    =    0;    k    <    2;    k++)    {    throw    new    ArithmeticException(   "overflow:    Gcd    is    2    >>    31   ");    }    	non-compiled	[CE]  <identifier>  expected	47	None	replace
160	[BUG]  [BUGGY]  if(k  ==  0)  {  k++;  }  else  {  throw  new  ArithmeticException( "overflow:  gcd  is  2  >>  31 ");  }  [CE]  <identifier>  expected  [FE]            AssertionFailedError      [CONTEXT]      u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;      [BUGGY]  if(k  ==  0)  {  k++;  }  else  {  throw  new  ArithmeticException( "overflow:  gcd  is  2  >>  31 ");  }  [BUGGY]      v  /=  2;  k++;  //  cast  out  twos.  }  if  (k  ==  31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }    int  t  =  ((u  &  1)  ==  1)  ?  v  :  -(u  /  2)/*  B3  */;    [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  short  NS  PS  ZS  boolean  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  k  t  u  v  	projects/Math94/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	431	431	1	replace	if(k  ==  0)  {  k++;  }  else  {  throw  new  ArithmeticException( "overflow:  gcd  is  2  >>  31 ");  }	  if(t    ==    0)    {    k++;    }    else    {    throw    new    ArithmeticException(   "   ");    }    	non-compiled	[CE]  <identifier>  expected	22	None	replace
161	[BUG]  [BUGGY]  ((  u  +  1)  ==  0  &&  k  &  1)  ==  0  &&  k  <  31)  {  u  /=  2;  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;      [BUGGY]  ((  u  +  1)  ==  0  &&  k  &  1)  ==  0  &&  k  <  31)  {  u  /=  2;  [BUGGY]      v  /=  2;  k++;  //  cast  out  twos.  }  if  (k  ==  31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }    int  t  =  ((u  &  1)  ==  1)  ?  v  :  -(u  /  2)/*  B3  */;    [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  short  NS  PS  ZS  boolean  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  k  t  u  v  	projects/Math94/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	431	431	1	replace	((  u  +  1)  ==  0  &&  k  &  1)  ==  0  &&  k  <  31)  {  u  /=  2;	  ((    u    &    1)    ==    0    &&    k    &    1)    ==    0    &&    k    <    31)    {    u    /=    2;    	non-compiled	[CE]  <identifier>  expected	3	None	replace
