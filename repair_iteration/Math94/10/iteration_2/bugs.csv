bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  ((  u  &  1)  ==  0  &&  v  &  1)  ==  0  &&  k  <  31)  {  throw  new  ArithmeticException( "overflow:  gcd  is  2  >=  31 ");  [CE]  <identifier>  expected  [FE]                AssertionFailedError    [CONTEXT]    u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;    [BUGGY]  ((  u  &  1)  ==  0  &&  v  &  1)  ==  0  &&  k  <  31)  {  throw  new  ArithmeticException( "overflow:  gcd  is  2  >=  31 ");  [BUGGY]    v  /=  2;  k++;  //  cast  out  twos.  }  if  (k  ==  31)  {  throw  new  ArithmeticException(   "overflow:  gcd  is  2^31   ");  }    int  t  =  ((u  &  1)  ==  1)  ?  v  :  -(u  /  2)/*  B3  */;    [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  short  NS  PS  ZS  boolean  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  k  t  u  v  	projects/Math94/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	431	431	1	replace	((  u  &  1)  ==  0  &&  v  &  1)  ==  0  &&  k  <  31)  {  throw  new  ArithmeticException( "overflow:  gcd  is  2  >=  31 ");	      ((    u    &    1)    ==    0    &&    v    &    1)    ==    0    &&    k    <    31)    {    throw    new    ArithmeticException(   "overflow:    gcd    is    2    >>    31   ");    	non-compiled	[CE]  <identifier>  expected	9	None	replace
2	[BUG]  [BUGGY]  ((  u  &  1)  ==  0  &&  k  &  1)  ==  0  &&  k  <  31)  {  throw  new  ArithmeticException( "overflow:  gcd  is  2  >>  31 ");  [CE]  <identifier>  expected  [FE]                  AssertionFailedError    [CONTEXT]    u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;    [BUGGY]  ((  u  &  1)  ==  0  &&  k  &  1)  ==  0  &&  k  <  31)  {  throw  new  ArithmeticException( "overflow:  gcd  is  2  >>  31 ");  [BUGGY]    v  /=  2;  k++;  //  cast  out  twos.  }  if  (k  ==  31)  {  throw  new  ArithmeticException(   "overflow:  gcd  is  2^31   ");  }    int  t  =  ((u  &  1)  ==  1)  ?  v  :  -(u  /  2)/*  B3  */;    [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  short  NS  PS  ZS  boolean  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  k  t  u  v  	projects/Math94/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	431	431	1	replace	((  u  &  1)  ==  0  &&  k  &  1)  ==  0  &&  k  <  31)  {  throw  new  ArithmeticException( "overflow:  gcd  is  2  >>  31 ");	      ((    u    &    1)    ==    0    &&    v    &    1)    ==    0    &&    k    <    31)    {    throw    new    ArithmeticException(   "overflow:    gcd    is    2    >>    31   ");    	non-compiled	[CE]  <identifier>  expected	9	None	replace
3	[BUG]  [BUGGY]  ((  u  &  1)  ==  0  &&  k  &  1)  ==  0  &&  k  <  31)  {  u  /=  2;  [CE]  <identifier>  expected  [FE]              AssertionFailedError    [CONTEXT]    u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;    [BUGGY]  ((  u  &  1)  ==  0  &&  k  &  1)  ==  0  &&  k  <  31)  {  u  /=  2;  [BUGGY]    v  /=  2;  k++;  //  cast  out  twos.  }  if  (k  ==  31)  {  throw  new  ArithmeticException(   "overflow:  gcd  is  2^31   ");  }    int  t  =  ((u  &  1)  ==  1)  ?  v  :  -(u  /  2)/*  B3  */;    [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  short  NS  PS  ZS  boolean  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  k  t  u  v  	projects/Math94/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	431	431	1	replace	((  u  &  1)  ==  0  &&  k  &  1)  ==  0  &&  k  <  31)  {  u  /=  2;	      ((    u    &    1)    ==    0    &&    v    &    1)    ==    0    &&    k    <    31)    {    u    /=    2;    	non-compiled	[CE]  <identifier>  expected	8	None	replace
4	[BUG]  [BUGGY]  ((  u  &  1)  ==  0  &&  v  &  2)  ==  0  &&  k  <  31)  {  u  /=  2;  [CE]  <identifier>  expected  [FE]                AssertionFailedError    [CONTEXT]    u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;    [BUGGY]  ((  u  &  1)  ==  0  &&  v  &  2)  ==  0  &&  k  <  31)  {  u  /=  2;  [BUGGY]    v  /=  2;  k++;  //  cast  out  twos.  }  if  (k  ==  31)  {  throw  new  ArithmeticException(   "overflow:  gcd  is  2^31   ");  }    int  t  =  ((u  &  1)  ==  1)  ?  v  :  -(u  /  2)/*  B3  */;    [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  short  NS  PS  ZS  boolean  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  k  t  u  v  	projects/Math94/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	431	431	1	replace	((  u  &  1)  ==  0  &&  v  &  2)  ==  0  &&  k  <  31)  {  u  /=  2;	      ((    u    &    1)    ==    0    &&    v    &    1)    ==    0    &&    k    <    31)    {    u    /=    2;    	non-compiled	[CE]  <identifier>  expected	8	None	replace
5	[BUG]  [BUGGY]  ((  u  &  1)  ==  0  &&  v  &  1)  ==  0  &&  k  <  31)  {  u  /=  2;  }  [CE]  <identifier>  expected  [FE]                  AssertionFailedError    [CONTEXT]    u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;    [BUGGY]  ((  u  &  1)  ==  0  &&  v  &  1)  ==  0  &&  k  <  31)  {  u  /=  2;  }  [BUGGY]    v  /=  2;  k++;  //  cast  out  twos.  }  if  (k  ==  31)  {  throw  new  ArithmeticException(   "overflow:  gcd  is  2^31   ");  }    int  t  =  ((u  &  1)  ==  1)  ?  v  :  -(u  /  2)/*  B3  */;    [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  short  NS  PS  ZS  boolean  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  k  t  u  v  	projects/Math94/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	431	431	1	replace	((  u  &  1)  ==  0  &&  v  &  1)  ==  0  &&  k  <  31)  {  u  /=  2;  }	      ((    u    &    1)    ==    0    &&    v    &    1)    ==    0    &&    k    <    31)    {    u    /=    2;    	non-compiled	[CE]  <identifier>  expected	8	None	replace
6	[BUG]  [BUGGY]  v  /=  32;  [CE]  <identifier>  expected  [FE]        AssertionFailedError    [CONTEXT]    u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;    [BUGGY]  v  /=  32;  [BUGGY]    k++;  //  cast  out  twos.  }  if  (k  ==  31)  {  throw  new  ArithmeticException(   "overflow:  gcd  is  2^31   ");  }    int  t  =  ((u  &  1)  ==  1)  ?  v  :  -(u  /  2)/*  B3  */;    [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  short  NS  PS  ZS  boolean  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  k  t  u  v  	projects/Math94/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	431	431	1	replace	v  /=  32;	  v    /=    31;    	non-compiled	[CE]  <identifier>  expected	10	None	replace
7	[BUG]  [BUGGY]  v  /=  3  +  1;  [CE]  <identifier>  expected  [FE]          AssertionFailedError    [CONTEXT]    u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;    [BUGGY]  v  /=  3  +  1;  [BUGGY]    k++;  //  cast  out  twos.  }  if  (k  ==  31)  {  throw  new  ArithmeticException(   "overflow:  gcd  is  2^31   ");  }    int  t  =  ((u  &  1)  ==  1)  ?  v  :  -(u  /  2)/*  B3  */;    [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  short  NS  PS  ZS  boolean  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  k  t  u  v  	projects/Math94/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	431	431	1	replace	v  /=  3  +  1;	  v    /=    2    +    1;    	non-compiled	[CE]  <identifier>  expected	11	None	replace
8	[BUG]  [BUGGY]  ((  u  &  1)  ==  0  &&  v  &  1)  ==  0  &&  k  <  31)  {  throw  new  ArithmeticException( "Overflow:  gcd  is  2  >=  31 ");  [CE]  <identifier>  expected  [FE]        AssertionFailedError    [CONTEXT]    u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;    [BUGGY]  ((  u  &  1)  ==  0  &&  v  &  1)  ==  0  &&  k  <  31)  {  throw  new  ArithmeticException( "Overflow:  gcd  is  2  >=  31 ");  [BUGGY]    v  /=  2;  k++;  //  cast  out  twos.  }  if  (k  ==  31)  {  throw  new  ArithmeticException(   "overflow:  gcd  is  2^31   ");  }    int  t  =  ((u  &  1)  ==  1)  ?  v  :  -(u  /  2)/*  B3  */;    [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  short  NS  PS  ZS  boolean  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  k  t  u  v  	projects/Math94/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	431	431	1	replace	((  u  &  1)  ==  0  &&  v  &  1)  ==  0  &&  k  <  31)  {  throw  new  ArithmeticException( "Overflow:  gcd  is  2  >=  31 ");	      ((    u    &    1)    ==    0    &&    v    &    1)    ==    0    &&    k    <    31)    {    throw    new    ArithmeticException(   "Overflow:    gcd    is    2    >>    31   ");    	non-compiled	[CE]  <identifier>  expected	16	None	replace
9	[BUG]  [BUGGY]  ((  u  &  1)  ==  0  &&  k  &  1)  ==  0  &&  k  <  31)  {  throw  new  ArithmeticException( "Overflow:  gcd  is  2  >>  31 ");  [CE]  <identifier>  expected  [FE]          AssertionFailedError    [CONTEXT]    u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;    [BUGGY]  ((  u  &  1)  ==  0  &&  k  &  1)  ==  0  &&  k  <  31)  {  throw  new  ArithmeticException( "Overflow:  gcd  is  2  >>  31 ");  [BUGGY]    v  /=  2;  k++;  //  cast  out  twos.  }  if  (k  ==  31)  {  throw  new  ArithmeticException(   "overflow:  gcd  is  2^31   ");  }    int  t  =  ((u  &  1)  ==  1)  ?  v  :  -(u  /  2)/*  B3  */;    [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  short  NS  PS  ZS  boolean  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  k  t  u  v  	projects/Math94/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	431	431	1	replace	((  u  &  1)  ==  0  &&  k  &  1)  ==  0  &&  k  <  31)  {  throw  new  ArithmeticException( "Overflow:  gcd  is  2  >>  31 ");	      ((    u    &    1)    ==    0    &&    v    &    1)    ==    0    &&    k    <    31)    {    throw    new    ArithmeticException(   "Overflow:    gcd    is    2    >>    31   ");    	non-compiled	[CE]  <identifier>  expected	16	None	replace
10	[BUG]  [BUGGY]  ((  u  &  1)  ==  0  &&  v  &  1)  ==  0  &&  k  <  31)  {  throw  new  ArithmeticException( "overflow:  gcd  is  2  >=  31 ");  }  [CE]  <identifier>  expected  [FE]        AssertionFailedError    [CONTEXT]    u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;    [BUGGY]  ((  u  &  1)  ==  0  &&  v  &  1)  ==  0  &&  k  <  31)  {  throw  new  ArithmeticException( "overflow:  gcd  is  2  >=  31 ");  }  [BUGGY]    v  /=  2;  k++;  //  cast  out  twos.  }  if  (k  ==  31)  {  throw  new  ArithmeticException(   "overflow:  gcd  is  2^31   ");  }    int  t  =  ((u  &  1)  ==  1)  ?  v  :  -(u  /  2)/*  B3  */;    [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  short  NS  PS  ZS  boolean  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  k  t  u  v  	projects/Math94/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	431	431	1	replace	((  u  &  1)  ==  0  &&  v  &  1)  ==  0  &&  k  <  31)  {  throw  new  ArithmeticException( "overflow:  gcd  is  2  >=  31 ");  }	      ((    u    &    1)    ==    0    &&    v    &    1)    ==    0    &&    k    <    31)    {    throw    new    ArithmeticException(   "overflow:    gcd    is    2    >>    31   ");    }    	non-compiled	[CE]  <identifier>  expected	12	None	replace
11	[BUG]  [BUGGY]  ((  u  &  1)  ==  0  &&  k  &  1)  ==  0  &&  k  <  31)  {  throw  new  ArithmeticException( "overflow:  gcd  is  2  >>  31 ");  }  [CE]  <identifier>  expected  [FE]          AssertionFailedError    [CONTEXT]    u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;    [BUGGY]  ((  u  &  1)  ==  0  &&  k  &  1)  ==  0  &&  k  <  31)  {  throw  new  ArithmeticException( "overflow:  gcd  is  2  >>  31 ");  }  [BUGGY]    v  /=  2;  k++;  //  cast  out  twos.  }  if  (k  ==  31)  {  throw  new  ArithmeticException(   "overflow:  gcd  is  2^31   ");  }    int  t  =  ((u  &  1)  ==  1)  ?  v  :  -(u  /  2)/*  B3  */;    [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  short  NS  PS  ZS  boolean  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  k  t  u  v  	projects/Math94/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	431	431	1	replace	((  u  &  1)  ==  0  &&  k  &  1)  ==  0  &&  k  <  31)  {  throw  new  ArithmeticException( "overflow:  gcd  is  2  >>  31 ");  }	      ((    u    &    1)    ==    0    &&    v    &    1)    ==    0    &&    k    <    31)    {    throw    new    ArithmeticException(   "overflow:    gcd    is    2    >>    31   ");    }    	non-compiled	[CE]  <identifier>  expected	12	None	replace
12	[BUG]  [BUGGY]  ((  u  &  1)  ==  0  &&  k  <  31)?  t  :  -(u  /  2)/*  B3  */);  [CE]  <identifier>  expected  [FE]              AssertionFailedError    [CONTEXT]    u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;    [BUGGY]  ((  u  &  1)  ==  0  &&  k  <  31)?  t  :  -(u  /  2)/*  B3  */);  [BUGGY]    k++;  //  cast  out  twos.  }  if  (k  ==  31)  {  throw  new  ArithmeticException(   "overflow:  gcd  is  2^31   ");  }    int  t  =  ((u  &  1)  ==  1)  ?  v  :  -(u  /  2)/*  B3  */;    [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  short  NS  PS  ZS  boolean  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  k  t  u  v  	projects/Math94/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	431	431	1	replace	((  u  &  1)  ==  0  &&  k  <  31)?  t  :  -(u  /  2)/*  B3  */);	      	non-compiled	[CE]  <identifier>  expected	4	None	replace
13	[BUG]  [BUGGY]  ((  u  &  1)  ==  0  &&  v  &  1)  ==  0)  {  u  /=  2;  k++;  [CE]  <identifier>  expected  [FE]            AssertionFailedError    [CONTEXT]    u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;    [BUGGY]  ((  u  &  1)  ==  0  &&  v  &  1)  ==  0)  {  u  /=  2;  k++;  [BUGGY]    v  /=  2;  k++;  //  cast  out  twos.  }  if  (k  ==  31)  {  throw  new  ArithmeticException(   "overflow:  gcd  is  2^31   ");  }    int  t  =  ((u  &  1)  ==  1)  ?  v  :  -(u  /  2)/*  B3  */;    [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  short  NS  PS  ZS  boolean  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  k  t  u  v  	projects/Math94/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	431	431	1	replace	((  u  &  1)  ==  0  &&  v  &  1)  ==  0)  {  u  /=  2;  k++;	      ((    u    &    1)    ==    0    &&    v    &    1)    ==    0    &&    k    <    31)    {    u    /=    2;    k++;    	non-compiled	[CE]  <identifier>  expected	7	None	replace
14	[BUG]  [BUGGY]  ((  u  &  1)  ==  0  &&  v  &  2)  ==  0  &&  k  <  31)  {  u  /=  2;  k++;  [CE]  <identifier>  expected  [FE]              AssertionFailedError    [CONTEXT]    u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;    [BUGGY]  ((  u  &  1)  ==  0  &&  v  &  2)  ==  0  &&  k  <  31)  {  u  /=  2;  k++;  [BUGGY]    v  /=  2;  k++;  //  cast  out  twos.  }  if  (k  ==  31)  {  throw  new  ArithmeticException(   "overflow:  gcd  is  2^31   ");  }    int  t  =  ((u  &  1)  ==  1)  ?  v  :  -(u  /  2)/*  B3  */;    [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  short  NS  PS  ZS  boolean  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  k  t  u  v  	projects/Math94/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	431	431	1	replace	((  u  &  1)  ==  0  &&  v  &  2)  ==  0  &&  k  <  31)  {  u  /=  2;  k++;	      ((    u    &    1)    ==    0    &&    v    &    1)    ==    0    &&    k    <    31)    {    u    /=    2;    k++;    	non-compiled	[CE]  <identifier>  expected	7	None	replace
15	[BUG]  [BUGGY]  ((  u  &  1)  ==  1  &&  v  &  1)  ==  1  &&  k  <  31)  {  u  /=  2;  k++;  [CE]  <identifier>  expected  [FE]                AssertionFailedError    [CONTEXT]    u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;    [BUGGY]  ((  u  &  1)  ==  1  &&  v  &  1)  ==  1  &&  k  <  31)  {  u  /=  2;  k++;  [BUGGY]    v  /=  2;  k++;  //  cast  out  twos.  }  if  (k  ==  31)  {  throw  new  ArithmeticException(   "overflow:  gcd  is  2^31   ");  }    int  t  =  ((u  &  1)  ==  1)  ?  v  :  -(u  /  2)/*  B3  */;    [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  short  NS  PS  ZS  boolean  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  k  t  u  v  	projects/Math94/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	431	431	1	replace	((  u  &  1)  ==  1  &&  v  &  1)  ==  1  &&  k  <  31)  {  u  /=  2;  k++;	      ((    u    &    1)    ==    0    &&    v    &    1)    ==    0    &&    k    <    31)    {    u    /=    2;    k++;    	non-compiled	[CE]  <identifier>  expected	7	None	replace
16	[BUG]  [BUGGY]  ((  u  &  1)  ==  1  &&  k  <  31)?  v  :  -(u  /  2)/*  B3  */);  [CE]  <identifier>  expected  [FE]          AssertionFailedError    [CONTEXT]    u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;    [BUGGY]  ((  u  &  1)  ==  1  &&  k  <  31)?  v  :  -(u  /  2)/*  B3  */);  [BUGGY]    v  /=  2;  k++;  //  cast  out  twos.  }  if  (k  ==  31)  {  throw  new  ArithmeticException(   "overflow:  gcd  is  2^31   ");  }    int  t  =  ((u  &  1)  ==  1)  ?  v  :  -(u  /  2)/*  B3  */;    [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  short  NS  PS  ZS  boolean  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  k  t  u  v  	projects/Math94/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	431	431	1	replace	((  u  &  1)  ==  1  &&  k  <  31)?  v  :  -(u  /  2)/*  B3  */);	      ((    u    &    1)    ==    0    &&    k    <    31)?    v    :    -(u    /    2)/*    B3    */);    	non-compiled	[CE]  <identifier>  expected	6	None	replace
17	[BUG]  [BUGGY]  ((  u  &  1)  ==  0  &&  k  <  31)?  v  :  -(u  /  2)/  B3  */);  [CE]  <identifier>  expected  [FE]            AssertionFailedError    [CONTEXT]    u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;    [BUGGY]  ((  u  &  1)  ==  0  &&  k  <  31)?  v  :  -(u  /  2)/  B3  */);  [BUGGY]    v  /=  2;  k++;  //  cast  out  twos.  }  if  (k  ==  31)  {  throw  new  ArithmeticException(   "overflow:  gcd  is  2^31   ");  }    int  t  =  ((u  &  1)  ==  1)  ?  v  :  -(u  /  2)/*  B3  */;    [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  short  NS  PS  ZS  boolean  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  k  t  u  v  	projects/Math94/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	431	431	1	replace	((  u  &  1)  ==  0  &&  k  <  31)?  v  :  -(u  /  2)/  B3  */);	      ((    u    &    1)    ==    0    &&    k    <    31)?    v    :    -(u    /    2)/*    B3    */);    	non-compiled	[CE]  <identifier>  expected	6	None	replace
18	[BUG]  [BUGGY]  ((  u  &  1)  ==  0  &&  k  <  31)?  -(u  /  2):  -(v  /  2)/*  B3  */);  [CE]  <identifier>  expected  [FE]            AssertionFailedError    [CONTEXT]    u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;    [BUGGY]  ((  u  &  1)  ==  0  &&  k  <  31)?  -(u  /  2):  -(v  /  2)/*  B3  */);  [BUGGY]    v  /=  2;  k++;  //  cast  out  twos.  }  if  (k  ==  31)  {  throw  new  ArithmeticException(   "overflow:  gcd  is  2^31   ");  }    int  t  =  ((u  &  1)  ==  1)  ?  v  :  -(u  /  2)/*  B3  */;    [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  short  NS  PS  ZS  boolean  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  k  t  u  v  	projects/Math94/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	431	431	1	replace	((  u  &  1)  ==  0  &&  k  <  31)?  -(u  /  2):  -(v  /  2)/*  B3  */);	      ((    u    &    1)    ==    0    &&    k    <    31)?    -(u    /    2):    -(u    /    2)/*    B3    */);    	non-compiled	[CE]  <identifier>  expected	14	None	replace
19	[BUG]  [BUGGY]  ((  u  &  1)  ==  0  &&  k  <  31)?  -(u  /  2):  -(u  /  2)/  B3  */);  [CE]  <identifier>  expected  [FE]              AssertionFailedError    [CONTEXT]    u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;    [BUGGY]  ((  u  &  1)  ==  0  &&  k  <  31)?  -(u  /  2):  -(u  /  2)/  B3  */);  [BUGGY]    v  /=  2;  k++;  //  cast  out  twos.  }  if  (k  ==  31)  {  throw  new  ArithmeticException(   "overflow:  gcd  is  2^31   ");  }    int  t  =  ((u  &  1)  ==  1)  ?  v  :  -(u  /  2)/*  B3  */;    [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  short  NS  PS  ZS  boolean  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  k  t  u  v  	projects/Math94/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	431	431	1	replace	((  u  &  1)  ==  0  &&  k  <  31)?  -(u  /  2):  -(u  /  2)/  B3  */);	      ((    u    &    1)    ==    0    &&    k    <    31)?    -(u    /    2):    -(u    /    2)/*    B3    */);    	non-compiled	[CE]  <identifier>  expected	14	None	replace
20	[BUG]  [BUGGY]  ((  u  &  1)  ==  0  &&  v  &  1)  ==  0  &&  k  <  31)  {  throw  new  ArithmeticException( "Overflow:  gcd  is  2  >=  31 ");  }  [CE]  <identifier>  expected  [FE]              AssertionFailedError    [CONTEXT]    u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;    [BUGGY]  ((  u  &  1)  ==  0  &&  v  &  1)  ==  0  &&  k  <  31)  {  throw  new  ArithmeticException( "Overflow:  gcd  is  2  >=  31 ");  }  [BUGGY]    v  /=  2;  k++;  //  cast  out  twos.  }  if  (k  ==  31)  {  throw  new  ArithmeticException(   "overflow:  gcd  is  2^31   ");  }    int  t  =  ((u  &  1)  ==  1)  ?  v  :  -(u  /  2)/*  B3  */;    [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  short  NS  PS  ZS  boolean  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  k  t  u  v  	projects/Math94/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	431	431	1	replace	((  u  &  1)  ==  0  &&  v  &  1)  ==  0  &&  k  <  31)  {  throw  new  ArithmeticException( "Overflow:  gcd  is  2  >=  31 ");  }	      ((    u    &    1)    ==    0    &&    v    &    1)    ==    0    &&    k    <    31)    {    throw    new    ArithmeticException(   "Overflow:    gcd    is    2    >>    31   ");    }    	non-compiled	[CE]  <identifier>  expected	15	None	replace
21	[BUG]  [BUGGY]  ((  u  &  1)  ==  0  &&  k  &  1)  ==  0  &&  k  <  31)  {  throw  new  ArithmeticException( "Overflow:  gcd  is  2  >>  31 ");  }  [CE]  <identifier>  expected  [FE]                AssertionFailedError    [CONTEXT]    u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;    [BUGGY]  ((  u  &  1)  ==  0  &&  k  &  1)  ==  0  &&  k  <  31)  {  throw  new  ArithmeticException( "Overflow:  gcd  is  2  >>  31 ");  }  [BUGGY]    v  /=  2;  k++;  //  cast  out  twos.  }  if  (k  ==  31)  {  throw  new  ArithmeticException(   "overflow:  gcd  is  2^31   ");  }    int  t  =  ((u  &  1)  ==  1)  ?  v  :  -(u  /  2)/*  B3  */;    [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  short  NS  PS  ZS  boolean  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  k  t  u  v  	projects/Math94/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	431	431	1	replace	((  u  &  1)  ==  0  &&  k  &  1)  ==  0  &&  k  <  31)  {  throw  new  ArithmeticException( "Overflow:  gcd  is  2  >>  31 ");  }	      ((    u    &    1)    ==    0    &&    v    &    1)    ==    0    &&    k    <    31)    {    throw    new    ArithmeticException(   "Overflow:    gcd    is    2    >>    31   ");    }    	non-compiled	[CE]  <identifier>  expected	15	None	replace
22	[BUG]  [BUGGY]  if(t  ==  0)  {  k++;  }  else  {  throw  new  ArithmeticException( " ");  }  [CE]  <identifier>  expected  [FE]        AssertionFailedError    [CONTEXT]    u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;    [BUGGY]  if(t  ==  0)  {  k++;  }  else  {  throw  new  ArithmeticException( " ");  }  [BUGGY]    v  /=  2;  k++;  //  cast  out  twos.  }  if  (k  ==  31)  {  throw  new  ArithmeticException(   "overflow:  gcd  is  2^31   ");  }    int  t  =  ((u  &  1)  ==  1)  ?  v  :  -(u  /  2)/*  B3  */;    [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  short  NS  PS  ZS  boolean  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  k  t  u  v  	projects/Math94/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	431	431	1	replace	if(t  ==  0)  {  k++;  }  else  {  throw  new  ArithmeticException( " ");  }	      k++;    	non-compiled	[CE]  <identifier>  expected	5	None	replace
23	[BUG]  [BUGGY]  if(t  >  0)  {  k++;  }  else  {  throw  new  ArithmeticException( " ");  }  [CE]  <identifier>  expected  [FE]          AssertionFailedError    [CONTEXT]    u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;    [BUGGY]  if(t  >  0)  {  k++;  }  else  {  throw  new  ArithmeticException( " ");  }  [BUGGY]    v  /=  2;  k++;  //  cast  out  twos.  }  if  (k  ==  31)  {  throw  new  ArithmeticException(   "overflow:  gcd  is  2^31   ");  }    int  t  =  ((u  &  1)  ==  1)  ?  v  :  -(u  /  2)/*  B3  */;    [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  short  NS  PS  ZS  boolean  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  k  t  u  v  	projects/Math94/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	431	431	1	replace	if(t  >  0)  {  k++;  }  else  {  throw  new  ArithmeticException( " ");  }	      k++;    	non-compiled	[CE]  <identifier>  expected	5	None	replace
24	[BUG]  [BUGGY]  if(t  >  31)  {  k++;  }  else  {  throw  new  ArithmeticException( " ");  }  [CE]  <identifier>  expected  [FE]            AssertionFailedError    [CONTEXT]    u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;    [BUGGY]  if(t  >  31)  {  k++;  }  else  {  throw  new  ArithmeticException( " ");  }  [BUGGY]    v  /=  2;  k++;  //  cast  out  twos.  }  if  (k  ==  31)  {  throw  new  ArithmeticException(   "overflow:  gcd  is  2^31   ");  }    int  t  =  ((u  &  1)  ==  1)  ?  v  :  -(u  /  2)/*  B3  */;    [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  short  NS  PS  ZS  boolean  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  k  t  u  v  	projects/Math94/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	431	431	1	replace	if(t  >  31)  {  k++;  }  else  {  throw  new  ArithmeticException( " ");  }	      k++;    	non-compiled	[CE]  <identifier>  expected	5	None	replace
25	[BUG]  [BUGGY]  ((  u  &  1)  ==  0  &&  k  <  31)?  -(v  /  2):  -(u  /  2)/*  B3  */);  [CE]  <identifier>  expected  [FE]            AssertionFailedError    [CONTEXT]    u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;    [BUGGY]  ((  u  &  1)  ==  0  &&  k  <  31)?  -(v  /  2):  -(u  /  2)/*  B3  */);  [BUGGY]    v  /=  2;  k++;  //  cast  out  twos.  }  if  (k  ==  31)  {  throw  new  ArithmeticException(   "overflow:  gcd  is  2^31   ");  }    int  t  =  ((u  &  1)  ==  1)  ?  v  :  -(u  /  2)/*  B3  */;    [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  short  NS  PS  ZS  boolean  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  k  t  u  v  	projects/Math94/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	431	431	1	replace	((  u  &  1)  ==  0  &&  k  <  31)?  -(v  /  2):  -(u  /  2)/*  B3  */);	      ((    u    &    1)    ==    0    &&    k    <    31)?    -(u    /    2):    -(u    /    2)/*    B3    */);    	non-compiled	[CE]  <identifier>  expected	14	None	replace
26	[BUG]  [BUGGY]  ((  u  &  1)  ==  0  &&  v  &  2)  ==  0  &&  k  <  31)  {  throw  new  ArithmeticException( "overflow:  gcd  is  2  >>  31 ");  }  [CE]  <identifier>  expected  [FE]          AssertionFailedError    [CONTEXT]    u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;    [BUGGY]  ((  u  &  1)  ==  0  &&  v  &  2)  ==  0  &&  k  <  31)  {  throw  new  ArithmeticException( "overflow:  gcd  is  2  >>  31 ");  }  [BUGGY]    v  /=  2;  k++;  //  cast  out  twos.  }  if  (k  ==  31)  {  throw  new  ArithmeticException(   "overflow:  gcd  is  2^31   ");  }    int  t  =  ((u  &  1)  ==  1)  ?  v  :  -(u  /  2)/*  B3  */;    [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  short  NS  PS  ZS  boolean  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  k  t  u  v  	projects/Math94/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	431	431	1	replace	((  u  &  1)  ==  0  &&  v  &  2)  ==  0  &&  k  <  31)  {  throw  new  ArithmeticException( "overflow:  gcd  is  2  >>  31 ");  }	      ((    u    &    1)    ==    0    &&    v    &    1)    ==    0    &&    k    <    31)    {    throw    new    ArithmeticException(   "overflow:    gcd    is    2!=    31   ");    }    	non-compiled	[CE]  <identifier>  expected	13	None	replace
27	[BUG]  [BUGGY]  ((  u  &  1)  ==  0  &&  v  &  2)  ==  0  &&  k  <  31)  {  throw  new  ArithmeticException( "Overflow:  gcd  is  2  >>  31 ");  }  [CE]  <identifier>  expected  [FE]              AssertionFailedError    [CONTEXT]    u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;    [BUGGY]  ((  u  &  1)  ==  0  &&  v  &  2)  ==  0  &&  k  <  31)  {  throw  new  ArithmeticException( "Overflow:  gcd  is  2  >>  31 ");  }  [BUGGY]    v  /=  2;  k++;  //  cast  out  twos.  }  if  (k  ==  31)  {  throw  new  ArithmeticException(   "overflow:  gcd  is  2^31   ");  }    int  t  =  ((u  &  1)  ==  1)  ?  v  :  -(u  /  2)/*  B3  */;    [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  short  NS  PS  ZS  boolean  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  k  t  u  v  	projects/Math94/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	431	431	1	replace	((  u  &  1)  ==  0  &&  v  &  2)  ==  0  &&  k  <  31)  {  throw  new  ArithmeticException( "Overflow:  gcd  is  2  >>  31 ");  }	      ((    u    &    1)    ==    0    &&    v    &    1)    ==    0    &&    k    <    31)    {    throw    new    ArithmeticException(   "Overflow:    gcd    is    2    >>    31   ");    }    	non-compiled	[CE]  <identifier>  expected	15	None	replace
28	[BUG]  [BUGGY]  v  /=  32  +  1;  [CE]  <identifier>  expected  [FE]          AssertionFailedError    [CONTEXT]    u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;    [BUGGY]  v  /=  32  +  1;  [BUGGY]    k++;  //  cast  out  twos.  }  if  (k  ==  31)  {  throw  new  ArithmeticException(   "overflow:  gcd  is  2^31   ");  }    int  t  =  ((u  &  1)  ==  1)  ?  v  :  -(u  /  2)/*  B3  */;    [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  short  NS  PS  ZS  boolean  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  k  t  u  v  	projects/Math94/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	431	431	1	replace	v  /=  32  +  1;	  v    /=    2    +    1;    	non-compiled	[CE]  <identifier>  expected	11	None	replace
29	[BUG]  [BUGGY]  ((  u  &  1)  ==  0  &&  v  &  1)  ==  0  &&  k  <  32)  {  u  /=  2;  k++;  [CE]  <identifier>  expected  [FE]            AssertionFailedError    [CONTEXT]    u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;    [BUGGY]  ((  u  &  1)  ==  0  &&  v  &  1)  ==  0  &&  k  <  32)  {  u  /=  2;  k++;  [BUGGY]    v  /=  2;  k++;  //  cast  out  twos.  }  if  (k  ==  31)  {  throw  new  ArithmeticException(   "overflow:  gcd  is  2^31   ");  }    int  t  =  ((u  &  1)  ==  1)  ?  v  :  -(u  /  2)/*  B3  */;    [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  short  NS  PS  ZS  boolean  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  k  t  u  v  	projects/Math94/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	431	431	1	replace	((  u  &  1)  ==  0  &&  v  &  1)  ==  0  &&  k  <  32)  {  u  /=  2;  k++;	      ((    u    &    1)    ==    0    &&    v    &    1)    ==    0    &&    k    <    31)    {    u    /=    2;    k++;    	non-compiled	[CE]  <identifier>  expected	7	None	replace
30	[BUG]  [BUGGY]  ((  u  &  1)  ==  0  &&  v  &  2)  ==  0  &&  k  <  31)  {  throw  new  ArithmeticException( "Overflow:  gcd  is  2  >>  31 ");  [CE]  <identifier>  expected  [FE]        AssertionFailedError    [CONTEXT]    u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;    [BUGGY]  ((  u  &  1)  ==  0  &&  v  &  2)  ==  0  &&  k  <  31)  {  throw  new  ArithmeticException( "Overflow:  gcd  is  2  >>  31 ");  [BUGGY]    v  /=  2;  k++;  //  cast  out  twos.  }  if  (k  ==  31)  {  throw  new  ArithmeticException(   "overflow:  gcd  is  2^31   ");  }    int  t  =  ((u  &  1)  ==  1)  ?  v  :  -(u  /  2)/*  B3  */;    [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  short  NS  PS  ZS  boolean  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  k  t  u  v  	projects/Math94/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	431	431	1	replace	((  u  &  1)  ==  0  &&  v  &  2)  ==  0  &&  k  <  31)  {  throw  new  ArithmeticException( "Overflow:  gcd  is  2  >>  31 ");	      ((    u    &    1)    ==    0    &&    v    &    1)    ==    0    &&    k    <    31)    {    throw    new    ArithmeticException(   "Overflow:    gcd    is    2    >>    31   ");    	non-compiled	[CE]  <identifier>  expected	16	None	replace
31	[BUG]  [BUGGY]  if(v  >  31)  {  k++;  }  [CE]  <identifier>  expected  [FE]        AssertionFailedError    [CONTEXT]    u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;    [BUGGY]  if(v  >  31)  {  k++;  }  [BUGGY]    v  /=  2;  k++;  //  cast  out  twos.  }  if  (k  ==  31)  {  throw  new  ArithmeticException(   "overflow:  gcd  is  2^31   ");  }    int  t  =  ((u  &  1)  ==  1)  ?  v  :  -(u  /  2)/*  B3  */;    [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  short  NS  PS  ZS  boolean  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  k  t  u  v  	projects/Math94/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	431	431	1	replace	if(v  >  31)  {  k++;  }	      k++;    	non-compiled	[CE]  <identifier>  expected	5	None	replace
32	[BUG]  [BUGGY]  if(t  >  0)  {  k++;  }  [CE]  <identifier>  expected  [FE]          AssertionFailedError    [CONTEXT]    u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;    [BUGGY]  if(t  >  0)  {  k++;  }  [BUGGY]    v  /=  2;  k++;  //  cast  out  twos.  }  if  (k  ==  31)  {  throw  new  ArithmeticException(   "overflow:  gcd  is  2^31   ");  }    int  t  =  ((u  &  1)  ==  1)  ?  v  :  -(u  /  2)/*  B3  */;    [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  short  NS  PS  ZS  boolean  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  k  t  u  v  	projects/Math94/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	431	431	1	replace	if(t  >  0)  {  k++;  }	      k++;    	non-compiled	[CE]  <identifier>  expected	5	None	replace
33	[BUG]  [BUGGY]  if(v  >  0)  {  k++;  }  [CE]  <identifier>  expected  [FE]            AssertionFailedError    [CONTEXT]    u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;    [BUGGY]  if(v  >  0)  {  k++;  }  [BUGGY]    v  /=  2;  k++;  //  cast  out  twos.  }  if  (k  ==  31)  {  throw  new  ArithmeticException(   "overflow:  gcd  is  2^31   ");  }    int  t  =  ((u  &  1)  ==  1)  ?  v  :  -(u  /  2)/*  B3  */;    [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  short  NS  PS  ZS  boolean  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  k  t  u  v  	projects/Math94/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	431	431	1	replace	if(v  >  0)  {  k++;  }	      k++;    	non-compiled	[CE]  <identifier>  expected	5	None	replace
34	[BUG]  [BUGGY]  ((  u  &  1)  ==  0  &&  v  &  1)  ==  0  &&  k  <  32)  {  u  /=  2;  [CE]  <identifier>  expected  [FE]              AssertionFailedError    [CONTEXT]    u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;    [BUGGY]  ((  u  &  1)  ==  0  &&  v  &  1)  ==  0  &&  k  <  32)  {  u  /=  2;  [BUGGY]    v  /=  2;  k++;  //  cast  out  twos.  }  if  (k  ==  31)  {  throw  new  ArithmeticException(   "overflow:  gcd  is  2^31   ");  }    int  t  =  ((u  &  1)  ==  1)  ?  v  :  -(u  /  2)/*  B3  */;    [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  short  NS  PS  ZS  boolean  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  k  t  u  v  	projects/Math94/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	431	431	1	replace	((  u  &  1)  ==  0  &&  v  &  1)  ==  0  &&  k  <  32)  {  u  /=  2;	      ((    u    &    1)    ==    0    &&    v    &    1)    ==    0    &&    k    <    31)    {    u    /=    2;    	non-compiled	[CE]  <identifier>  expected	8	None	replace
35	[BUG]  [BUGGY]  ((  u  &  1)  ==  0  &&  v  <  31)?  v  :  -(u  /  2)/*  B3  */);  [CE]  <identifier>  expected  [FE]          AssertionFailedError    [CONTEXT]    u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;    [BUGGY]  ((  u  &  1)  ==  0  &&  v  <  31)?  v  :  -(u  /  2)/*  B3  */);  [BUGGY]    v  /=  2;  k++;  //  cast  out  twos.  }  if  (k  ==  31)  {  throw  new  ArithmeticException(   "overflow:  gcd  is  2^31   ");  }    int  t  =  ((u  &  1)  ==  1)  ?  v  :  -(u  /  2)/*  B3  */;    [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  short  NS  PS  ZS  boolean  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  k  t  u  v  	projects/Math94/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	431	431	1	replace	((  u  &  1)  ==  0  &&  v  <  31)?  v  :  -(u  /  2)/*  B3  */);	      ((    u    &    1)    ==    0    &&    k    <    31)?    v    :    -(u    /    2)/*    B3    */);    	non-compiled	[CE]  <identifier>  expected	6	None	replace
36	[BUG]  [BUGGY]  ((  u  &  1)  ==  0  &&  k  <  31)?  v  :  -(u  /  2)/*  B3  */,  t);  [CE]  <identifier>  expected  [FE]            AssertionFailedError    [CONTEXT]    u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;    [BUGGY]  ((  u  &  1)  ==  0  &&  k  <  31)?  v  :  -(u  /  2)/*  B3  */,  t);  [BUGGY]    v  /=  2;  k++;  //  cast  out  twos.  }  if  (k  ==  31)  {  throw  new  ArithmeticException(   "overflow:  gcd  is  2^31   ");  }    int  t  =  ((u  &  1)  ==  1)  ?  v  :  -(u  /  2)/*  B3  */;    [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  short  NS  PS  ZS  boolean  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  k  t  u  v  	projects/Math94/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	431	431	1	replace	((  u  &  1)  ==  0  &&  k  <  31)?  v  :  -(u  /  2)/*  B3  */,  t);	      ((    u    &    1)    ==    0    &&    k    <    31)?    v    :    -(u    /    2)/*    B3    */);    	non-compiled	[CE]  <identifier>  expected	6	None	replace
37	[BUG]  [BUGGY]  ((  u  &  1)  ==  0  &&  v  &  2)  ==  0  &&  k  <  31)  {  throw  new  ArithmeticException( "overflow:  gcd  is  2  >>  31 ");  [CE]  <identifier>  expected  [FE]                AssertionFailedError    [CONTEXT]    u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;    [BUGGY]  ((  u  &  1)  ==  0  &&  v  &  2)  ==  0  &&  k  <  31)  {  throw  new  ArithmeticException( "overflow:  gcd  is  2  >>  31 ");  [BUGGY]    v  /=  2;  k++;  //  cast  out  twos.  }  if  (k  ==  31)  {  throw  new  ArithmeticException(   "overflow:  gcd  is  2^31   ");  }    int  t  =  ((u  &  1)  ==  1)  ?  v  :  -(u  /  2)/*  B3  */;    [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  short  NS  PS  ZS  boolean  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  k  t  u  v  	projects/Math94/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	431	431	1	replace	((  u  &  1)  ==  0  &&  v  &  2)  ==  0  &&  k  <  31)  {  throw  new  ArithmeticException( "overflow:  gcd  is  2  >>  31 ");	      ((    u    &    1)    ==    0    &&    v    &    1)    ==    0    &&    k    <    31)    {    throw    new    ArithmeticException(   "overflow:    gcd    is    2    >>    31   ");    	non-compiled	[CE]  <identifier>  expected	9	None	replace
38	[BUG]  [BUGGY]  if(v  >  0)  {  k++;  }  else  {  throw  new  ArithmeticException( " ");  }  [CE]  <identifier>  expected  [FE]        AssertionFailedError    [CONTEXT]    u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;    [BUGGY]  if(v  >  0)  {  k++;  }  else  {  throw  new  ArithmeticException( " ");  }  [BUGGY]    v  /=  2;  k++;  //  cast  out  twos.  }  if  (k  ==  31)  {  throw  new  ArithmeticException(   "overflow:  gcd  is  2^31   ");  }    int  t  =  ((u  &  1)  ==  1)  ?  v  :  -(u  /  2)/*  B3  */;    [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  short  NS  PS  ZS  boolean  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  k  t  u  v  	projects/Math94/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	431	431	1	replace	if(v  >  0)  {  k++;  }  else  {  throw  new  ArithmeticException( " ");  }	      k++;    	non-compiled	[CE]  <identifier>  expected	5	None	replace
39	[BUG]  [BUGGY]  ((  u  &  1)  ==  0  &&  v  &  1)  ==  0)  {  throw  new  ArithmeticException( "overflow:  gcd  is  2  >>  31 ");  }  [CE]  <identifier>  expected  [FE]        AssertionFailedError    [CONTEXT]    u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;    [BUGGY]  ((  u  &  1)  ==  0  &&  v  &  1)  ==  0)  {  throw  new  ArithmeticException( "overflow:  gcd  is  2  >>  31 ");  }  [BUGGY]    v  /=  2;  k++;  //  cast  out  twos.  }  if  (k  ==  31)  {  throw  new  ArithmeticException(   "overflow:  gcd  is  2^31   ");  }    int  t  =  ((u  &  1)  ==  1)  ?  v  :  -(u  /  2)/*  B3  */;    [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  short  NS  PS  ZS  boolean  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  k  t  u  v  	projects/Math94/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	431	431	1	replace	((  u  &  1)  ==  0  &&  v  &  1)  ==  0)  {  throw  new  ArithmeticException( "overflow:  gcd  is  2  >>  31 ");  }	      ((    u    &    1)    ==    0    &&    v    &    1)    ==    0    &&    k    <    31)    {    throw    new    ArithmeticException(   "overflow:    gcd    is    2    >>    31   ");    }    	non-compiled	[CE]  <identifier>  expected	12	None	replace
40	[BUG]  [BUGGY]  ((  u  +  1)  ==  0  &&  v  &  1)  ==  0  &&  k  <  31)  {  throw  new  ArithmeticException( "overflow:  gcd  is  2  >>  31 ");  }  [CE]  <identifier>  expected  [FE]          AssertionFailedError    [CONTEXT]    u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;    [BUGGY]  ((  u  +  1)  ==  0  &&  v  &  1)  ==  0  &&  k  <  31)  {  throw  new  ArithmeticException( "overflow:  gcd  is  2  >>  31 ");  }  [BUGGY]    v  /=  2;  k++;  //  cast  out  twos.  }  if  (k  ==  31)  {  throw  new  ArithmeticException(   "overflow:  gcd  is  2^31   ");  }    int  t  =  ((u  &  1)  ==  1)  ?  v  :  -(u  /  2)/*  B3  */;    [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  short  NS  PS  ZS  boolean  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  k  t  u  v  	projects/Math94/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	431	431	1	replace	((  u  +  1)  ==  0  &&  v  &  1)  ==  0  &&  k  <  31)  {  throw  new  ArithmeticException( "overflow:  gcd  is  2  >>  31 ");  }	      ((    u    &    1)    ==    0    &&    v    &    1)    ==    0    &&    k    <    31)    {    throw    new    ArithmeticException(   "overflow:    gcd    is    2    >>    31   ");    }    	non-compiled	[CE]  <identifier>  expected	12	None	replace
41	[BUG]  [BUGGY]  ((  u  +  1)  ==  0  &&  v  &  1)  ==  0  &&  k  <  31)  {  u  /=  2;  k++;  [CE]  <identifier>  expected  [FE]            AssertionFailedError    [CONTEXT]    u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;    [BUGGY]  ((  u  +  1)  ==  0  &&  v  &  1)  ==  0  &&  k  <  31)  {  u  /=  2;  k++;  [BUGGY]    v  /=  2;  k++;  //  cast  out  twos.  }  if  (k  ==  31)  {  throw  new  ArithmeticException(   "overflow:  gcd  is  2^31   ");  }    int  t  =  ((u  &  1)  ==  1)  ?  v  :  -(u  /  2)/*  B3  */;    [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  short  NS  PS  ZS  boolean  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  k  t  u  v  	projects/Math94/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	431	431	1	replace	((  u  +  1)  ==  0  &&  v  &  1)  ==  0  &&  k  <  31)  {  u  /=  2;  k++;	      ((    u    &    1)    ==    0    &&    v    &    1)    ==    0    &&    k    <    31)    {    u    /=    2;    k++;    	non-compiled	[CE]  <identifier>  expected	7	None	replace
42	[BUG]  [BUGGY]  ((  u  &  1)  ==  0  &&  v  &  2)  ==  0)  {  u  /=  2;  k++;  [CE]  <identifier>  expected  [FE]              AssertionFailedError    [CONTEXT]    u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;    [BUGGY]  ((  u  &  1)  ==  0  &&  v  &  2)  ==  0)  {  u  /=  2;  k++;  [BUGGY]    v  /=  2;  k++;  //  cast  out  twos.  }  if  (k  ==  31)  {  throw  new  ArithmeticException(   "overflow:  gcd  is  2^31   ");  }    int  t  =  ((u  &  1)  ==  1)  ?  v  :  -(u  /  2)/*  B3  */;    [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  short  NS  PS  ZS  boolean  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  k  t  u  v  	projects/Math94/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	431	431	1	replace	((  u  &  1)  ==  0  &&  v  &  2)  ==  0)  {  u  /=  2;  k++;	      ((    u    &    1)    ==    0    &&    v    &    1)    ==    0    &&    k    <    31)    {    u    /=    2;    k++;    	non-compiled	[CE]  <identifier>  expected	7	None	replace
43	[BUG]  [BUGGY]  ((  u  &  1)  ==  0  &&  v  &  1)  ==  0)  {  throw  new  ArithmeticException( "Overflow:  gcd  is  2  >>  31 ");  [CE]  <identifier>  expected  [FE]        AssertionFailedError    [CONTEXT]    u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;    [BUGGY]  ((  u  &  1)  ==  0  &&  v  &  1)  ==  0)  {  throw  new  ArithmeticException( "Overflow:  gcd  is  2  >>  31 ");  [BUGGY]    v  /=  2;  k++;  //  cast  out  twos.  }  if  (k  ==  31)  {  throw  new  ArithmeticException(   "overflow:  gcd  is  2^31   ");  }    int  t  =  ((u  &  1)  ==  1)  ?  v  :  -(u  /  2)/*  B3  */;    [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  short  NS  PS  ZS  boolean  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  k  t  u  v  	projects/Math94/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	431	431	1	replace	((  u  &  1)  ==  0  &&  v  &  1)  ==  0)  {  throw  new  ArithmeticException( "Overflow:  gcd  is  2  >>  31 ");	      ((    u    &    1)    ==    0    &&    v    &    1)    ==    0    &&    k    <    31)    {    throw    new    ArithmeticException(   "Overflow:    gcd    is    2    >>    31   ");    	non-compiled	[CE]  <identifier>  expected	16	None	replace
44	[BUG]  [BUGGY]  ((  u  &  1)  ==  0  &&  k  <  31)?  v  :  -(u  /  2)/  2  *  B3  */);  [CE]  <identifier>  expected  [FE]          AssertionFailedError    [CONTEXT]    u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;    [BUGGY]  ((  u  &  1)  ==  0  &&  k  <  31)?  v  :  -(u  /  2)/  2  *  B3  */);  [BUGGY]    v  /=  2;  k++;  //  cast  out  twos.  }  if  (k  ==  31)  {  throw  new  ArithmeticException(   "overflow:  gcd  is  2^31   ");  }    int  t  =  ((u  &  1)  ==  1)  ?  v  :  -(u  /  2)/*  B3  */;    [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  short  NS  PS  ZS  boolean  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  k  t  u  v  	projects/Math94/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	431	431	1	replace	((  u  &  1)  ==  0  &&  k  <  31)?  v  :  -(u  /  2)/  2  *  B3  */);	      ((    u    &    1)    ==    0    &&    k    <    31)?    v    :    -(u    /    2)/*    B3    */);    	non-compiled	[CE]  <identifier>  expected	6	None	replace
45	[BUG]  [BUGGY]  if(t  >  0)  {  for(int  k  =  0;  k  <  2;  k++)  {  throw  new  ArithmeticException( "overflow:  gcd  is  2  >>  31 ");  }  [CE]  <identifier>  expected  [FE]              AssertionFailedError    [CONTEXT]    u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;    [BUGGY]  if(t  >  0)  {  for(int  k  =  0;  k  <  2;  k++)  {  throw  new  ArithmeticException( "overflow:  gcd  is  2  >>  31 ");  }  [BUGGY]    k++;  //  cast  out  twos.  }  if  (k  ==  31)  {  throw  new  ArithmeticException(   "overflow:  gcd  is  2^31   ");  }    int  t  =  ((u  &  1)  ==  1)  ?  v  :  -(u  /  2)/*  B3  */;    [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  short  NS  PS  ZS  boolean  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  k  t  u  v  	projects/Math94/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	431	431	1	replace	if(t  >  0)  {  for(int  k  =  0;  k  <  2;  k++)  {  throw  new  ArithmeticException( "overflow:  gcd  is  2  >>  31 ");  }	      	non-compiled	[CE]  <identifier>  expected	4	None	replace
46	[BUG]  [BUGGY]  if(t  >  0)  {  for(int  k  =  0;  k  <  2;  k++)  {  throw  new  ArithmeticException( "Overflow:  gcd  is  2  >>  31 ");  }  [CE]  <identifier>  expected  [FE]                AssertionFailedError    [CONTEXT]    u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;    [BUGGY]  if(t  >  0)  {  for(int  k  =  0;  k  <  2;  k++)  {  throw  new  ArithmeticException( "Overflow:  gcd  is  2  >>  31 ");  }  [BUGGY]    k++;  //  cast  out  twos.  }  if  (k  ==  31)  {  throw  new  ArithmeticException(   "overflow:  gcd  is  2^31   ");  }    int  t  =  ((u  &  1)  ==  1)  ?  v  :  -(u  /  2)/*  B3  */;    [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  short  NS  PS  ZS  boolean  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  k  t  u  v  	projects/Math94/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	431	431	1	replace	if(t  >  0)  {  for(int  k  =  0;  k  <  2;  k++)  {  throw  new  ArithmeticException( "Overflow:  gcd  is  2  >>  31 ");  }	      	non-compiled	[CE]  <identifier>  expected	4	None	replace
47	[BUG]  [BUGGY]  if(t  >  0)  {  for(int  k  =  0;  k  <  2;  k++)  {  throw  new  ArithmeticException( "overflow:  Gcd  is  2  >>  31 ");  }  [CE]  <identifier>  expected  [FE]                  AssertionFailedError    [CONTEXT]    u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;    [BUGGY]  if(t  >  0)  {  for(int  k  =  0;  k  <  2;  k++)  {  throw  new  ArithmeticException( "overflow:  Gcd  is  2  >>  31 ");  }  [BUGGY]    k++;  //  cast  out  twos.  }  if  (k  ==  31)  {  throw  new  ArithmeticException(   "overflow:  gcd  is  2^31   ");  }    int  t  =  ((u  &  1)  ==  1)  ?  v  :  -(u  /  2)/*  B3  */;    [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  short  NS  PS  ZS  boolean  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  k  t  u  v  	projects/Math94/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	431	431	1	replace	if(t  >  0)  {  for(int  k  =  0;  k  <  2;  k++)  {  throw  new  ArithmeticException( "overflow:  Gcd  is  2  >>  31 ");  }	      	non-compiled	[CE]  <identifier>  expected	4	None	replace
48	[BUG]  [BUGGY]  ((  u  &  1)  ==  0  &&  v  &  1)  ==  0)  {  throw  new  ArithmeticException( "Overflow:  gcd  is  2  >>  31 ");  }  [CE]  <identifier>  expected  [FE]              AssertionFailedError    [CONTEXT]    u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;    [BUGGY]  ((  u  &  1)  ==  0  &&  v  &  1)  ==  0)  {  throw  new  ArithmeticException( "Overflow:  gcd  is  2  >>  31 ");  }  [BUGGY]    v  /=  2;  k++;  //  cast  out  twos.  }  if  (k  ==  31)  {  throw  new  ArithmeticException(   "overflow:  gcd  is  2^31   ");  }    int  t  =  ((u  &  1)  ==  1)  ?  v  :  -(u  /  2)/*  B3  */;    [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  short  NS  PS  ZS  boolean  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  k  t  u  v  	projects/Math94/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	431	431	1	replace	((  u  &  1)  ==  0  &&  v  &  1)  ==  0)  {  throw  new  ArithmeticException( "Overflow:  gcd  is  2  >>  31 ");  }	      ((    u    &    1)    ==    0    &&    v    &    1)    ==    0    &&    k    <    31)    {    throw    new    ArithmeticException(   "Overflow:    gcd    is    2    >>    31   ");    }    	non-compiled	[CE]  <identifier>  expected	15	None	replace
49	[BUG]  [BUGGY]  v  %  2  ==  1;  [CE]  <identifier>  expected  [FE]            AssertionFailedError    [CONTEXT]    u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;    [BUGGY]  v  %  2  ==  1;  [BUGGY]    k++;  //  cast  out  twos.  }  if  (k  ==  31)  {  throw  new  ArithmeticException(   "overflow:  gcd  is  2^31   ");  }    int  t  =  ((u  &  1)  ==  1)  ?  v  :  -(u  /  2)/*  B3  */;    [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  short  NS  PS  ZS  boolean  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  k  t  u  v  	projects/Math94/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	431	431	1	replace	v  %  2  ==  1;	  v    /=    1;    	non-compiled	[CE]  <identifier>  expected	3	None	replace
50	[BUG]  [BUGGY]  v  /=  4  +  1;  [CE]  <identifier>  expected  [FE]          AssertionFailedError    [CONTEXT]    u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;    [BUGGY]  v  /=  4  +  1;  [BUGGY]    k++;  //  cast  out  twos.  }  if  (k  ==  31)  {  throw  new  ArithmeticException(   "overflow:  gcd  is  2^31   ");  }    int  t  =  ((u  &  1)  ==  1)  ?  v  :  -(u  /  2)/*  B3  */;    [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  short  NS  PS  ZS  boolean  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  k  t  u  v  	projects/Math94/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	431	431	1	replace	v  /=  4  +  1;	  v    /=    2    +    1;    	non-compiled	[CE]  <identifier>  expected	11	None	replace
51	[BUG]  [BUGGY]  ((  u  +  1)  ==  0  &&  v  &  1)  ==  0  &&  k  <  31)  {  u  /=  2;  [CE]  <identifier>  expected  [FE]              AssertionFailedError    [CONTEXT]    u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;    [BUGGY]  ((  u  +  1)  ==  0  &&  v  &  1)  ==  0  &&  k  <  31)  {  u  /=  2;  [BUGGY]    v  /=  2;  k++;  //  cast  out  twos.  }  if  (k  ==  31)  {  throw  new  ArithmeticException(   "overflow:  gcd  is  2^31   ");  }    int  t  =  ((u  &  1)  ==  1)  ?  v  :  -(u  /  2)/*  B3  */;    [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  short  NS  PS  ZS  boolean  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  k  t  u  v  	projects/Math94/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	431	431	1	replace	((  u  +  1)  ==  0  &&  v  &  1)  ==  0  &&  k  <  31)  {  u  /=  2;	      ((    u    &    1)    ==    0    &&    v    &    1)    ==    0    &&    k    <    31)    {    u    /=    2;    	non-compiled	[CE]  <identifier>  expected	8	None	replace
52	[BUG]  [BUGGY]  ((  u  &  1)  ==  0  &&  v  &  1)  ==  0  &&  k  <  31)  {  u  /=  3;  [CE]  <identifier>  expected  [FE]                AssertionFailedError    [CONTEXT]    u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;    [BUGGY]  ((  u  &  1)  ==  0  &&  v  &  1)  ==  0  &&  k  <  31)  {  u  /=  3;  [BUGGY]    v  /=  2;  k++;  //  cast  out  twos.  }  if  (k  ==  31)  {  throw  new  ArithmeticException(   "overflow:  gcd  is  2^31   ");  }    int  t  =  ((u  &  1)  ==  1)  ?  v  :  -(u  /  2)/*  B3  */;    [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  short  NS  PS  ZS  boolean  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  k  t  u  v  	projects/Math94/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	431	431	1	replace	((  u  &  1)  ==  0  &&  v  &  1)  ==  0  &&  k  <  31)  {  u  /=  3;	      ((    u    &    1)    ==    0    &&    v    &    1)    ==    0    &&    k    <    31)    {    u    /=    2;    	non-compiled	[CE]  <identifier>  expected	8	None	replace
53	[BUG]  [BUGGY]  ((  u  &  1)  ==  0  &&  v  &  1)  ==  0)  {  throw  new  ArithmeticException( "overflow:  gcd  is  2  >>  31 ");  [CE]  <identifier>  expected  [FE]                AssertionFailedError    [CONTEXT]    u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;    [BUGGY]  ((  u  &  1)  ==  0  &&  v  &  1)  ==  0)  {  throw  new  ArithmeticException( "overflow:  gcd  is  2  >>  31 ");  [BUGGY]    v  /=  2;  k++;  //  cast  out  twos.  }  if  (k  ==  31)  {  throw  new  ArithmeticException(   "overflow:  gcd  is  2^31   ");  }    int  t  =  ((u  &  1)  ==  1)  ?  v  :  -(u  /  2)/*  B3  */;    [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  short  NS  PS  ZS  boolean  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  k  t  u  v  	projects/Math94/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	431	431	1	replace	((  u  &  1)  ==  0  &&  v  &  1)  ==  0)  {  throw  new  ArithmeticException( "overflow:  gcd  is  2  >>  31 ");	      ((    u    &    1)    ==    0    &&    v    &    1)    ==    0    &&    k    <    31)    {    throw    new    ArithmeticException(   "overflow:    gcd    is    2    >>    31   ");    	non-compiled	[CE]  <identifier>  expected	9	None	replace
54	[BUG]  [BUGGY]  ((  u  &  1)  ==  0  &&  v  &  1)  ==  0  &&  k  <  31)  {  throw  new  ArithmeticException( "gcd  is  2  >>  31 ");  [CE]  <identifier>  expected  [FE]                  AssertionFailedError    [CONTEXT]    u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;    [BUGGY]  ((  u  &  1)  ==  0  &&  v  &  1)  ==  0  &&  k  <  31)  {  throw  new  ArithmeticException( "gcd  is  2  >>  31 ");  [BUGGY]    v  /=  2;  k++;  //  cast  out  twos.  }  if  (k  ==  31)  {  throw  new  ArithmeticException(   "overflow:  gcd  is  2^31   ");  }    int  t  =  ((u  &  1)  ==  1)  ?  v  :  -(u  /  2)/*  B3  */;    [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  short  NS  PS  ZS  boolean  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  k  t  u  v  	projects/Math94/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	431	431	1	replace	((  u  &  1)  ==  0  &&  v  &  1)  ==  0  &&  k  <  31)  {  throw  new  ArithmeticException( "gcd  is  2  >>  31 ");	      ((    u    &    1)    ==    0    &&    v    &    1)    ==    0    &&    k    <    31)    {    throw    new    ArithmeticException(   "overflow:    gcd    is    2    >>    31   ");    	non-compiled	[CE]  <identifier>  expected	9	None	replace
