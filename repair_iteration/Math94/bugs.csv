bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	failing_test_number	action	patch
1	[BUG] [BUGGY] if (u * v == 0) { [FE] AssertionFailedError [CONTEXT] public static int gcd(int u, int v) { [BUGGY] if (u * v == 0) { [BUGGY] return (Math.abs(u) + Math.abs(v)); }      if (u > 0) { u = -u; } // make u negative [CLASS] MathUtils [METHOD] gcd [RETURN_TYPE] int  int u int v [VARIABLES] short NS PS ZS boolean double EPSILON SAFE_MIN TWO_PI logSum x y byte NB PB ZB int k t u v  	projects/Math94/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	412	412	1	replace	
2	[BUG] [BUGGY] [FE] AssertionFailedError [CONTEXT] public static int gcd(int u, int v) { [BUGGY] [BUGGY] if (u * v == 0) { return (Math.abs(u) + Math.abs(v)); }      if (u > 0) { u = -u; } // make u negative [CLASS] MathUtils [METHOD] gcd [RETURN_TYPE] int  int u int v [VARIABLES] short NS PS ZS boolean double EPSILON SAFE_MIN TWO_PI logSum x y byte NB PB ZB int k t u v  	projects/Math94/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	412	412	1	add	
3	[BUG] [BUGGY] return (Math.abs(u) + Math.abs(v)); [FE] AssertionFailedError [CONTEXT] public static int gcd(int u, int v) { if (u * v == 0) { [BUGGY] return (Math.abs(u) + Math.abs(v)); [BUGGY] }      if (u > 0) { u = -u; } // make u negative if (v > 0) { [CLASS] MathUtils [METHOD] gcd [RETURN_TYPE] int  int u int v [VARIABLES] short NS PS ZS boolean double EPSILON SAFE_MIN TWO_PI logSum x y byte NB PB ZB int k t u v  	projects/Math94/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	413	413	1	replace	
4	[BUG] [BUGGY] [FE] AssertionFailedError [CONTEXT] public static int gcd(int u, int v) { if (u * v == 0) { [BUGGY] [BUGGY] return (Math.abs(u) + Math.abs(v)); }      if (u > 0) { u = -u; } // make u negative if (v > 0) { [CLASS] MathUtils [METHOD] gcd [RETURN_TYPE] int  int u int v [VARIABLES] short NS PS ZS boolean double EPSILON SAFE_MIN TWO_PI logSum x y byte NB PB ZB int k t u v  	projects/Math94/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	413	413	1	add	
5	[BUG] [BUGGY] if (u > 0) { [FE] AssertionFailedError [CONTEXT] public static int gcd(int u, int v) { if (u * v == 0) { return (Math.abs(u) + Math.abs(v)); }      [BUGGY] if (u > 0) { [BUGGY] u = -u; } // make u negative if (v > 0) { v = -v; } // make v negative  int k = 0; while ((u & 1) == 0 && (v & 1) == 0 && k < 31) { // while u and v are  u /= 2; [CLASS] MathUtils [METHOD] gcd [RETURN_TYPE] int  int u int v [VARIABLES] short NS PS ZS boolean double EPSILON SAFE_MIN TWO_PI logSum x y byte NB PB ZB int k t u v  	projects/Math94/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	420	420	1	replace	
6	[BUG] [BUGGY] [FE] AssertionFailedError [CONTEXT] public static int gcd(int u, int v) { if (u * v == 0) { return (Math.abs(u) + Math.abs(v)); }      [BUGGY] [BUGGY] if (u > 0) { u = -u; } // make u negative if (v > 0) { v = -v; } // make v negative  int k = 0; while ((u & 1) == 0 && (v & 1) == 0 && k < 31) { // while u and v are  u /= 2; [CLASS] MathUtils [METHOD] gcd [RETURN_TYPE] int  int u int v [VARIABLES] short NS PS ZS boolean double EPSILON SAFE_MIN TWO_PI logSum x y byte NB PB ZB int k t u v  	projects/Math94/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	420	420	1	add	
7	[BUG] [BUGGY] u = -u; [FE] AssertionFailedError [CONTEXT] public static int gcd(int u, int v) { if (u * v == 0) { return (Math.abs(u) + Math.abs(v)); }      if (u > 0) { [BUGGY] u = -u; [BUGGY] } // make u negative if (v > 0) { v = -v; } // make v negative  int k = 0; while ((u & 1) == 0 && (v & 1) == 0 && k < 31) { // while u and v are  u /= 2; v /= 2; [CLASS] MathUtils [METHOD] gcd [RETURN_TYPE] int  int u int v [VARIABLES] short NS PS ZS boolean double EPSILON SAFE_MIN TWO_PI logSum x y byte NB PB ZB int k t u v  	projects/Math94/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	421	421	1	replace	
8	[BUG] [BUGGY] [FE] AssertionFailedError [CONTEXT] public static int gcd(int u, int v) { if (u * v == 0) { return (Math.abs(u) + Math.abs(v)); }      if (u > 0) { [BUGGY] [BUGGY] u = -u; } // make u negative if (v > 0) { v = -v; } // make v negative  int k = 0; while ((u & 1) == 0 && (v & 1) == 0 && k < 31) { // while u and v are  u /= 2; v /= 2; [CLASS] MathUtils [METHOD] gcd [RETURN_TYPE] int  int u int v [VARIABLES] short NS PS ZS boolean double EPSILON SAFE_MIN TWO_PI logSum x y byte NB PB ZB int k t u v  	projects/Math94/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	421	421	1	add	
9	[BUG] [BUGGY] if (v > 0) { [FE] AssertionFailedError [CONTEXT] return (Math.abs(u) + Math.abs(v)); }      if (u > 0) { u = -u; } // make u negative [BUGGY] if (v > 0) { [BUGGY] v = -v; } // make v negative  int k = 0; while ((u & 1) == 0 && (v & 1) == 0 && k < 31) { // while u and v are  u /= 2; v /= 2; k++; // cast out twos. } [CLASS] MathUtils [METHOD] gcd [RETURN_TYPE] int  int u int v [VARIABLES] short NS PS ZS boolean double EPSILON SAFE_MIN TWO_PI logSum x y byte NB PB ZB int k t u v  	projects/Math94/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	423	423	1	replace	
10	[BUG] [BUGGY] [FE] AssertionFailedError [CONTEXT] return (Math.abs(u) + Math.abs(v)); }      if (u > 0) { u = -u; } // make u negative [BUGGY] [BUGGY] if (v > 0) { v = -v; } // make v negative  int k = 0; while ((u & 1) == 0 && (v & 1) == 0 && k < 31) { // while u and v are  u /= 2; v /= 2; k++; // cast out twos. } [CLASS] MathUtils [METHOD] gcd [RETURN_TYPE] int  int u int v [VARIABLES] short NS PS ZS boolean double EPSILON SAFE_MIN TWO_PI logSum x y byte NB PB ZB int k t u v  	projects/Math94/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	423	423	1	add	
11	[BUG] [BUGGY] v = -v; [FE] AssertionFailedError [CONTEXT] }      if (u > 0) { u = -u; } // make u negative if (v > 0) { [BUGGY] v = -v; [BUGGY] } // make v negative  int k = 0; while ((u & 1) == 0 && (v & 1) == 0 && k < 31) { // while u and v are  u /= 2; v /= 2; k++; // cast out twos. } if (k == 31) { [CLASS] MathUtils [METHOD] gcd [RETURN_TYPE] int  int u int v [VARIABLES] short NS PS ZS boolean double EPSILON SAFE_MIN TWO_PI logSum x y byte NB PB ZB int k t u v  	projects/Math94/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	424	424	1	replace	
12	[BUG] [BUGGY] [FE] AssertionFailedError [CONTEXT] }      if (u > 0) { u = -u; } // make u negative if (v > 0) { [BUGGY] [BUGGY] v = -v; } // make v negative  int k = 0; while ((u & 1) == 0 && (v & 1) == 0 && k < 31) { // while u and v are  u /= 2; v /= 2; k++; // cast out twos. } if (k == 31) { [CLASS] MathUtils [METHOD] gcd [RETURN_TYPE] int  int u int v [VARIABLES] short NS PS ZS boolean double EPSILON SAFE_MIN TWO_PI logSum x y byte NB PB ZB int k t u v  	projects/Math94/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	424	424	1	add	
13	[BUG] [BUGGY] int k = 0; [FE] AssertionFailedError [CONTEXT]    if (u > 0) { u = -u; } // make u negative if (v > 0) { v = -v; } // make v negative  [BUGGY] int k = 0; [BUGGY] while ((u & 1) == 0 && (v & 1) == 0 && k < 31) { // while u and v are  u /= 2; v /= 2; k++; // cast out twos. } if (k == 31) { throw new ArithmeticException("overflow: gcd is 2^31"); }  [CLASS] MathUtils [METHOD] gcd [RETURN_TYPE] int  int u int v [VARIABLES] short NS PS ZS boolean double EPSILON SAFE_MIN TWO_PI logSum x y byte NB PB ZB int k t u v  	projects/Math94/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	427	427	1	replace	
14	[BUG] [BUGGY] [FE] AssertionFailedError [CONTEXT]    if (u > 0) { u = -u; } // make u negative if (v > 0) { v = -v; } // make v negative  [BUGGY] [BUGGY] int k = 0; while ((u & 1) == 0 && (v & 1) == 0 && k < 31) { // while u and v are  u /= 2; v /= 2; k++; // cast out twos. } if (k == 31) { throw new ArithmeticException("overflow: gcd is 2^31"); }  [CLASS] MathUtils [METHOD] gcd [RETURN_TYPE] int  int u int v [VARIABLES] short NS PS ZS boolean double EPSILON SAFE_MIN TWO_PI logSum x y byte NB PB ZB int k t u v  	projects/Math94/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	427	427	1	add	
15	[BUG] [BUGGY] while ((u & 1) == 0 && (v & 1) == 0 && k < 31) { // while u and v are    // both even...  u /= 2; [FE] AssertionFailedError [CONTEXT]   if (u > 0) { u = -u; } // make u negative if (v > 0) { v = -v; } // make v negative  int k = 0; [BUGGY] while ((u & 1) == 0 && (v & 1) == 0 && k < 31) { // while u and v are               // both even...      u /= 2; [BUGGY]  u /= 2; v /= 2; k++; // cast out twos. } if (k == 31) { throw new ArithmeticException("overflow: gcd is 2^31"); }   [CLASS] MathUtils [METHOD] gcd [RETURN_TYPE] int  int u int v [VARIABLES] short NS PS ZS boolean double EPSILON SAFE_MIN TWO_PI logSum x y byte NB PB ZB int k t u v  	projects/Math94/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	428	430	1	replace	
16	[BUG] [BUGGY] [FE] AssertionFailedError [CONTEXT]   if (u > 0) { u = -u; } // make u negative if (v > 0) { v = -v; } // make v negative  int k = 0; [BUGGY] [BUGGY] while ((u & 1) == 0 && (v & 1) == 0 && k < 31) { // while u and v are               // both even...      u /= 2;  u /= 2; v /= 2; k++; // cast out twos. } if (k == 31) { throw new ArithmeticException("overflow: gcd is 2^31"); }   [CLASS] MathUtils [METHOD] gcd [RETURN_TYPE] int  int u int v [VARIABLES] short NS PS ZS boolean double EPSILON SAFE_MIN TWO_PI logSum x y byte NB PB ZB int k t u v  	projects/Math94/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	428	430	1	add	
17	[BUG] [BUGGY] u /= 2; [FE] AssertionFailedError [CONTEXT] if (u > 0) { u = -u; } // make u negative if (v > 0) { v = -v; } // make v negative  int k = 0; while ((u & 1) == 0 && (v & 1) == 0 && k < 31) { // while u and v are  [BUGGY] u /= 2; [BUGGY] v /= 2; k++; // cast out twos. } if (k == 31) { throw new ArithmeticException("overflow: gcd is 2^31"); }   int t = ((u & 1) == 1) ? v : -(u / 2)/* B3 */;  [CLASS] MathUtils [METHOD] gcd [RETURN_TYPE] int  int u int v [VARIABLES] short NS PS ZS boolean double EPSILON SAFE_MIN TWO_PI logSum x y byte NB PB ZB int k t u v  	projects/Math94/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	430	430	1	replace	
18	[BUG] [BUGGY] [FE] AssertionFailedError [CONTEXT] if (u > 0) { u = -u; } // make u negative if (v > 0) { v = -v; } // make v negative  int k = 0; while ((u & 1) == 0 && (v & 1) == 0 && k < 31) { // while u and v are  [BUGGY] [BUGGY] u /= 2; v /= 2; k++; // cast out twos. } if (k == 31) { throw new ArithmeticException("overflow: gcd is 2^31"); }   int t = ((u & 1) == 1) ? v : -(u / 2)/* B3 */;  [CLASS] MathUtils [METHOD] gcd [RETURN_TYPE] int  int u int v [VARIABLES] short NS PS ZS boolean double EPSILON SAFE_MIN TWO_PI logSum x y byte NB PB ZB int k t u v  	projects/Math94/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	430	430	1	add	
19	[BUG] [BUGGY] v /= 2; [FE] AssertionFailedError [CONTEXT] u = -u; } // make u negative if (v > 0) { v = -v; } // make v negative  int k = 0; while ((u & 1) == 0 && (v & 1) == 0 && k < 31) { // while u and v are  u /= 2; [BUGGY] v /= 2; [BUGGY] k++; // cast out twos. } if (k == 31) { throw new ArithmeticException("overflow: gcd is 2^31"); }   int t = ((u & 1) == 1) ? v : -(u / 2)/* B3 */;   [CLASS] MathUtils [METHOD] gcd [RETURN_TYPE] int  int u int v [VARIABLES] short NS PS ZS boolean double EPSILON SAFE_MIN TWO_PI logSum x y byte NB PB ZB int k t u v  	projects/Math94/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	431	431	1	replace	
20	[BUG] [BUGGY] [FE] AssertionFailedError [CONTEXT] u = -u; } // make u negative if (v > 0) { v = -v; } // make v negative  int k = 0; while ((u & 1) == 0 && (v & 1) == 0 && k < 31) { // while u and v are  u /= 2; [BUGGY] [BUGGY] v /= 2; k++; // cast out twos. } if (k == 31) { throw new ArithmeticException("overflow: gcd is 2^31"); }   int t = ((u & 1) == 1) ? v : -(u / 2)/* B3 */;   [CLASS] MathUtils [METHOD] gcd [RETURN_TYPE] int  int u int v [VARIABLES] short NS PS ZS boolean double EPSILON SAFE_MIN TWO_PI logSum x y byte NB PB ZB int k t u v  	projects/Math94/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	431	431	1	add	
21	[BUG] [BUGGY] k++; // cast out twos. } [FE] AssertionFailedError [CONTEXT] } // make u negative if (v > 0) { v = -v; } // make v negative  int k = 0; while ((u & 1) == 0 && (v & 1) == 0 && k < 31) { // while u and v are  u /= 2; v /= 2; [BUGGY] k++; // cast out twos.  } [BUGGY] } if (k == 31) { throw new ArithmeticException("overflow: gcd is 2^31"); }   int t = ((u & 1) == 1) ? v : -(u / 2)/* B3 */;   do { [CLASS] MathUtils [METHOD] gcd [RETURN_TYPE] int  int u int v [VARIABLES] short NS PS ZS boolean double EPSILON SAFE_MIN TWO_PI logSum x y byte NB PB ZB int k t u v  	projects/Math94/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	432	433	1	replace	
22	[BUG] [BUGGY] [FE] AssertionFailedError [CONTEXT] } // make u negative if (v > 0) { v = -v; } // make v negative  int k = 0; while ((u & 1) == 0 && (v & 1) == 0 && k < 31) { // while u and v are  u /= 2; v /= 2; [BUGGY] [BUGGY] k++; // cast out twos.  } } if (k == 31) { throw new ArithmeticException("overflow: gcd is 2^31"); }   int t = ((u & 1) == 1) ? v : -(u / 2)/* B3 */;   do { [CLASS] MathUtils [METHOD] gcd [RETURN_TYPE] int  int u int v [VARIABLES] short NS PS ZS boolean double EPSILON SAFE_MIN TWO_PI logSum x y byte NB PB ZB int k t u v  	projects/Math94/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	432	433	1	add	
23	[BUG] [BUGGY] if (k == 31) { [FE] AssertionFailedError [CONTEXT] v = -v; } // make v negative  int k = 0; while ((u & 1) == 0 && (v & 1) == 0 && k < 31) { // while u and v are  u /= 2; v /= 2; k++; // cast out twos. } [BUGGY] if (k == 31) { [BUGGY] throw new ArithmeticException("overflow: gcd is 2^31"); }   int t = ((u & 1) == 1) ? v : -(u / 2)/* B3 */;   do {   [CLASS] MathUtils [METHOD] gcd [RETURN_TYPE] int  int u int v [VARIABLES] short NS PS ZS boolean double EPSILON SAFE_MIN TWO_PI logSum x y byte NB PB ZB int k t u v  	projects/Math94/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	434	434	1	replace	
24	[BUG] [BUGGY] [FE] AssertionFailedError [CONTEXT] v = -v; } // make v negative  int k = 0; while ((u & 1) == 0 && (v & 1) == 0 && k < 31) { // while u and v are  u /= 2; v /= 2; k++; // cast out twos. } [BUGGY] [BUGGY] if (k == 31) { throw new ArithmeticException("overflow: gcd is 2^31"); }   int t = ((u & 1) == 1) ? v : -(u / 2)/* B3 */;   do {   [CLASS] MathUtils [METHOD] gcd [RETURN_TYPE] int  int u int v [VARIABLES] short NS PS ZS boolean double EPSILON SAFE_MIN TWO_PI logSum x y byte NB PB ZB int k t u v  	projects/Math94/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	434	434	1	add	
25	[BUG] [BUGGY] int t = ((u & 1) == 1) ? v : -(u / 2)/* B3 */; [FE] AssertionFailedError [CONTEXT]  u /= 2; v /= 2; k++; // cast out twos. } if (k == 31) { throw new ArithmeticException("overflow: gcd is 2^31"); }   [BUGGY] int t = ((u & 1) == 1) ? v : -(u / 2)/* B3 */; [BUGGY]   do {   while ((t & 1) == 0) { // while t is even.. t /= 2; // cast out twos }  if (t > 0) { [CLASS] MathUtils [METHOD] gcd [RETURN_TYPE] int  int u int v [VARIABLES] short NS PS ZS boolean double EPSILON SAFE_MIN TWO_PI logSum x y byte NB PB ZB int k t u v  	projects/Math94/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	439	439	1	replace	
26	[BUG] [BUGGY] [FE] AssertionFailedError [CONTEXT]  u /= 2; v /= 2; k++; // cast out twos. } if (k == 31) { throw new ArithmeticException("overflow: gcd is 2^31"); }   [BUGGY] [BUGGY] int t = ((u & 1) == 1) ? v : -(u / 2)/* B3 */;   do {   while ((t & 1) == 0) { // while t is even.. t /= 2; // cast out twos }  if (t > 0) { [CLASS] MathUtils [METHOD] gcd [RETURN_TYPE] int  int u int v [VARIABLES] short NS PS ZS boolean double EPSILON SAFE_MIN TWO_PI logSum x y byte NB PB ZB int k t u v  	projects/Math94/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	439	439	1	add	
27	[BUG] [BUGGY] while ((t & 1) == 0) { // while t is even.. t /= 2; // cast out twos  } [FE] AssertionFailedError [CONTEXT] throw new ArithmeticException("overflow: gcd is 2^31"); }   int t = ((u & 1) == 1) ? v : -(u / 2)/* B3 */;   do {   [BUGGY] while ((t & 1) == 0) { // while t is even..    t /= 2; // cast out twos      } [BUGGY] t /= 2; // cast out twos }  if (t > 0) { u = -t; } else { v = t; }  t = (v - u) / 2; [CLASS] MathUtils [METHOD] gcd [RETURN_TYPE] int  int u int v [VARIABLES] short NS PS ZS boolean double EPSILON SAFE_MIN TWO_PI logSum x y byte NB PB ZB int k t u v  	projects/Math94/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	445	447	1	replace	
28	[BUG] [BUGGY] [FE] AssertionFailedError [CONTEXT] throw new ArithmeticException("overflow: gcd is 2^31"); }   int t = ((u & 1) == 1) ? v : -(u / 2)/* B3 */;   do {   [BUGGY] [BUGGY] while ((t & 1) == 0) { // while t is even..    t /= 2; // cast out twos      } t /= 2; // cast out twos }  if (t > 0) { u = -t; } else { v = t; }  t = (v - u) / 2; [CLASS] MathUtils [METHOD] gcd [RETURN_TYPE] int  int u int v [VARIABLES] short NS PS ZS boolean double EPSILON SAFE_MIN TWO_PI logSum x y byte NB PB ZB int k t u v  	projects/Math94/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	445	447	1	add	
29	[BUG] [BUGGY] t /= 2; // cast out twos } [FE] AssertionFailedError [CONTEXT] }   int t = ((u & 1) == 1) ? v : -(u / 2)/* B3 */;   do {   while ((t & 1) == 0) { // while t is even.. [BUGGY] t /= 2; // cast out twos   } [BUGGY] }  if (t > 0) { u = -t; } else { v = t; }  t = (v - u) / 2;  [CLASS] MathUtils [METHOD] gcd [RETURN_TYPE] int  int u int v [VARIABLES] short NS PS ZS boolean double EPSILON SAFE_MIN TWO_PI logSum x y byte NB PB ZB int k t u v  	projects/Math94/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	446	447	1	replace	
30	[BUG] [BUGGY] [FE] AssertionFailedError [CONTEXT] }   int t = ((u & 1) == 1) ? v : -(u / 2)/* B3 */;   do {   while ((t & 1) == 0) { // while t is even.. [BUGGY] [BUGGY] t /= 2; // cast out twos   } }  if (t > 0) { u = -t; } else { v = t; }  t = (v - u) / 2;  [CLASS] MathUtils [METHOD] gcd [RETURN_TYPE] int  int u int v [VARIABLES] short NS PS ZS boolean double EPSILON SAFE_MIN TWO_PI logSum x y byte NB PB ZB int k t u v  	projects/Math94/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	446	447	1	add	
31	[BUG] [BUGGY] if (t > 0) { [FE] AssertionFailedError [CONTEXT] int t = ((u & 1) == 1) ? v : -(u / 2)/* B3 */;   do {   while ((t & 1) == 0) { // while t is even.. t /= 2; // cast out twos }  [BUGGY] if (t > 0) { [BUGGY] u = -t; } else { v = t; }  t = (v - u) / 2;   } while (t != 0); return -u * (1 << k); // gcd is u*2^k [CLASS] MathUtils [METHOD] gcd [RETURN_TYPE] int  int u int v [VARIABLES] short NS PS ZS boolean double EPSILON SAFE_MIN TWO_PI logSum x y byte NB PB ZB int k t u v  	projects/Math94/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	449	449	1	replace	
32	[BUG] [BUGGY] [FE] AssertionFailedError [CONTEXT] int t = ((u & 1) == 1) ? v : -(u / 2)/* B3 */;   do {   while ((t & 1) == 0) { // while t is even.. t /= 2; // cast out twos }  [BUGGY] [BUGGY] if (t > 0) { u = -t; } else { v = t; }  t = (v - u) / 2;   } while (t != 0); return -u * (1 << k); // gcd is u*2^k [CLASS] MathUtils [METHOD] gcd [RETURN_TYPE] int  int u int v [VARIABLES] short NS PS ZS boolean double EPSILON SAFE_MIN TWO_PI logSum x y byte NB PB ZB int k t u v  	projects/Math94/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	449	449	1	add	
33	[BUG] [BUGGY] u = -t; [FE] AssertionFailedError [CONTEXT]   do {   while ((t & 1) == 0) { // while t is even.. t /= 2; // cast out twos }  if (t > 0) { [BUGGY] u = -t; [BUGGY] } else { v = t; }  t = (v - u) / 2;   } while (t != 0); return -u * (1 << k); // gcd is u*2^k } [CLASS] MathUtils [METHOD] gcd [RETURN_TYPE] int  int u int v [VARIABLES] short NS PS ZS boolean double EPSILON SAFE_MIN TWO_PI logSum x y byte NB PB ZB int k t u v  	projects/Math94/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	450	450	1	replace	
34	[BUG] [BUGGY] [FE] AssertionFailedError [CONTEXT]   do {   while ((t & 1) == 0) { // while t is even.. t /= 2; // cast out twos }  if (t > 0) { [BUGGY] [BUGGY] u = -t; } else { v = t; }  t = (v - u) / 2;   } while (t != 0); return -u * (1 << k); // gcd is u*2^k } [CLASS] MathUtils [METHOD] gcd [RETURN_TYPE] int  int u int v [VARIABLES] short NS PS ZS boolean double EPSILON SAFE_MIN TWO_PI logSum x y byte NB PB ZB int k t u v  	projects/Math94/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	450	450	1	add	
35	[BUG] [BUGGY] v = t; [FE] AssertionFailedError [CONTEXT] if (t > 0) { u = -t; } else { [BUGGY] v = t; [BUGGY] } [CLASS] MathUtils [METHOD] gcd [RETURN_TYPE] int  int u int v [VARIABLES] short NS PS ZS boolean double EPSILON SAFE_MIN TWO_PI logSum x y byte NB PB ZB int k t u v  	projects/Math94/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	452	452	1	replace	
36	[BUG] [BUGGY] [FE] AssertionFailedError [CONTEXT] if (t > 0) { u = -t; } else { [BUGGY] [BUGGY] v = t; } [CLASS] MathUtils [METHOD] gcd [RETURN_TYPE] int  int u int v [VARIABLES] short NS PS ZS boolean double EPSILON SAFE_MIN TWO_PI logSum x y byte NB PB ZB int k t u v  	projects/Math94/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	452	452	1	add	
37	[BUG] [BUGGY] t = (v - u) / 2; [FE] AssertionFailedError [CONTEXT] while ((t & 1) == 0) { // while t is even.. t /= 2; // cast out twos }  if (t > 0) { u = -t; } else { v = t; }  [BUGGY] t = (v - u) / 2; [BUGGY]   } while (t != 0); return -u * (1 << k); // gcd is u*2^k } [CLASS] MathUtils [METHOD] gcd [RETURN_TYPE] int  int u int v [VARIABLES] short NS PS ZS boolean double EPSILON SAFE_MIN TWO_PI logSum x y byte NB PB ZB int k t u v  	projects/Math94/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	455	455	1	replace	
38	[BUG] [BUGGY] [FE] AssertionFailedError [CONTEXT] while ((t & 1) == 0) { // while t is even.. t /= 2; // cast out twos }  if (t > 0) { u = -t; } else { v = t; }  [BUGGY] [BUGGY] t = (v - u) / 2;   } while (t != 0); return -u * (1 << k); // gcd is u*2^k } [CLASS] MathUtils [METHOD] gcd [RETURN_TYPE] int  int u int v [VARIABLES] short NS PS ZS boolean double EPSILON SAFE_MIN TWO_PI logSum x y byte NB PB ZB int k t u v  	projects/Math94/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	455	455	1	add	
39	[BUG] [BUGGY] } while (t != 0); [FE] AssertionFailedError [CONTEXT]  if (t > 0) { u = -t; } else { v = t; }  t = (v - u) / 2;   [BUGGY] } while (t != 0); [BUGGY] return -u * (1 << k); // gcd is u*2^k } [CLASS] MathUtils [METHOD] gcd [RETURN_TYPE] int  int u int v [VARIABLES] short NS PS ZS boolean double EPSILON SAFE_MIN TWO_PI logSum x y byte NB PB ZB int k t u v  	projects/Math94/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	458	458	1	replace	
40	[BUG] [BUGGY] [FE] AssertionFailedError [CONTEXT]  if (t > 0) { u = -t; } else { v = t; }  t = (v - u) / 2;   [BUGGY] [BUGGY] } while (t != 0); return -u * (1 << k); // gcd is u*2^k } [CLASS] MathUtils [METHOD] gcd [RETURN_TYPE] int  int u int v [VARIABLES] short NS PS ZS boolean double EPSILON SAFE_MIN TWO_PI logSum x y byte NB PB ZB int k t u v  	projects/Math94/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	458	458	1	add	
41	[BUG] [BUGGY] return -u * (1 << k); // gcd is u*2^k } [FE] AssertionFailedError [CONTEXT] if (t > 0) { u = -t; } else { v = t; }  t = (v - u) / 2;   } while (t != 0); [BUGGY] return -u * (1 << k); // gcd is u*2^k } [BUGGY] } [CLASS] MathUtils [METHOD] gcd [RETURN_TYPE] int  int u int v [VARIABLES] short NS PS ZS boolean double EPSILON SAFE_MIN TWO_PI logSum x y byte NB PB ZB int k t u v  	projects/Math94/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	459	460	1	replace	
42	[BUG] [BUGGY] [FE] AssertionFailedError [CONTEXT] if (t > 0) { u = -t; } else { v = t; }  t = (v - u) / 2;   } while (t != 0); [BUGGY] [BUGGY] return -u * (1 << k); // gcd is u*2^k } } [CLASS] MathUtils [METHOD] gcd [RETURN_TYPE] int  int u int v [VARIABLES] short NS PS ZS boolean double EPSILON SAFE_MIN TWO_PI logSum x y byte NB PB ZB int k t u v  	projects/Math94/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	459	460	1	add	
