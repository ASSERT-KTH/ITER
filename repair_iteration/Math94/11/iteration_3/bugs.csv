bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  if(k  <  =  0)  {  k++;  }  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  v  /=  2;      [BUGGY]  if(k  <  =  0)  {  k++;  }  [BUGGY]      }  if  (k  ==  31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }    int  t  =  ((u  &  1)  ==  1)  ?  v  :  -(u  /  2)/*  B3  */;    do  {  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  short  NS  PS  ZS  boolean  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  k  t  u  v  	projects/Math94/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	432	433	1	replace	if(k  <  =  0)  {  k++;  }	  if(t    <    =    0)    {    k++;    }    	non-compiled	[CE]  <identifier>  expected	16	None	replace
2	[BUG]  [BUGGY]  try  {  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  v  /=  2;      [BUGGY]  try  {  [BUGGY]      k++;  //  cast  out  twos.  }  }  if  (k  ==  31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }    int  t  =  ((u  &  1)  ==  1)  ?  v  :  -(u  /  2)/*  B3  */;    do  {  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  short  NS  PS  ZS  boolean  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  k  t  u  v  	projects/Math94/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	432	433	1	replace	try  {	  try    {    [Delete]    catch(NumberFormatException    nfe)    {    throw    new    ArithmeticException(   "Overflow:    gcd    is    2    >>    31   ");    }    	non-compiled	[CE]  <identifier>  expected	119	None	replace
3	[BUG]  [BUGGY]  throw  new  ArithmeticException( "Overflow:  gcd  is  2  >>  31 ");  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  v  /=  2;      [BUGGY]  throw  new  ArithmeticException( "Overflow:  gcd  is  2  >>  31 ");  [BUGGY]      k++;  //  cast  out  twos.  }  }  if  (k  ==  31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }    int  t  =  ((u  &  1)  ==  1)  ?  v  :  -(u  /  2)/*  B3  */;    do  {  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  short  NS  PS  ZS  boolean  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  k  t  u  v  	projects/Math94/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	432	433	1	replace	throw  new  ArithmeticException( "Overflow:  gcd  is  2  >>  31 ");	  try    {    [Delete]    catch(NumberFormatException    nfe)    {    throw    new    ArithmeticException(   "Overflow:    gcd    is    2    >>    31   ");    }    	non-compiled	[CE]  <identifier>  expected	119	None	replace
4	[BUG]  [BUGGY]  throw  new  ArithmeticException( "Overflow:  gcd  is  2  >=  31 ");  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  v  /=  2;      [BUGGY]  throw  new  ArithmeticException( "Overflow:  gcd  is  2  >=  31 ");  [BUGGY]      k++;  //  cast  out  twos.  }  }  if  (k  ==  31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }    int  t  =  ((u  &  1)  ==  1)  ?  v  :  -(u  /  2)/*  B3  */;    do  {  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  short  NS  PS  ZS  boolean  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  k  t  u  v  	projects/Math94/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	432	433	1	replace	throw  new  ArithmeticException( "Overflow:  gcd  is  2  >=  31 ");	  try    {    [Delete]    catch(NumberFormatException    nfe)    {    throw    new    ArithmeticException(   "Overflow:    gcd    is    2    >>    31   ");    }    	non-compiled	[CE]  <identifier>  expected	119	None	replace
5	[BUG]  [BUGGY]  throw  new  ArithmeticException( "Overflow:  gcd  is  2  ==  31 ");  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  v  /=  2;      [BUGGY]  throw  new  ArithmeticException( "Overflow:  gcd  is  2  ==  31 ");  [BUGGY]      k++;  //  cast  out  twos.  }  }  if  (k  ==  31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }    int  t  =  ((u  &  1)  ==  1)  ?  v  :  -(u  /  2)/*  B3  */;    do  {  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  short  NS  PS  ZS  boolean  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  k  t  u  v  	projects/Math94/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	432	433	1	replace	throw  new  ArithmeticException( "Overflow:  gcd  is  2  ==  31 ");	  try    {    [Delete]    catch(NumberFormatException    nfe)    {    throw    new    ArithmeticException(   "Overflow:    gcd    is    2    >>    31   ");    }    	non-compiled	[CE]  <identifier>  expected	119	None	replace
6	[BUG]  [BUGGY]  while(t  <  =  0)  {  for(int  k  =  0;  k  <  2;  k++)  {  throw  new  ArithmeticException( "gcd  is  2  >>  31 ");  }  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  v  /=  2;      [BUGGY]  while(t  <  =  0)  {  for(int  k  =  0;  k  <  2;  k++)  {  throw  new  ArithmeticException( "gcd  is  2  >>  31 ");  }  [BUGGY]      k++;  //  cast  out  twos.  }  }  if  (k  ==  31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }    int  t  =  ((u  &  1)  ==  1)  ?  v  :  -(u  /  2)/*  B3  */;    do  {  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  short  NS  PS  ZS  boolean  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  k  t  u  v  	projects/Math94/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	432	433	1	replace	while(t  <  =  0)  {  for(int  k  =  0;  k  <  2;  k++)  {  throw  new  ArithmeticException( "gcd  is  2  >>  31 ");  }	  while(t    >    0)    {    for(int    k    =    0;    k    <    2;    k++)    {    throw    new    ArithmeticException(   "gcd    is    2    >>    31   ");    }    	non-compiled	[CE]  <identifier>  expected	47	None	replace
7	[BUG]  [BUGGY]  while(t  >=  0)  {  for(int  k  =  0;  k  <  2;  k++)  {  throw  new  ArithmeticException( "gcd  is  2  >>  31 ");  }  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]      }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  v  /=  2;      [BUGGY]  while(t  >=  0)  {  for(int  k  =  0;  k  <  2;  k++)  {  throw  new  ArithmeticException( "gcd  is  2  >>  31 ");  }  [BUGGY]      k++;  //  cast  out  twos.  }  }  if  (k  ==  31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }    int  t  =  ((u  &  1)  ==  1)  ?  v  :  -(u  /  2)/*  B3  */;    do  {  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  short  NS  PS  ZS  boolean  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  k  t  u  v  	projects/Math94/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	432	433	1	replace	while(t  >=  0)  {  for(int  k  =  0;  k  <  2;  k++)  {  throw  new  ArithmeticException( "gcd  is  2  >>  31 ");  }	  while(t    >    0)    {    for(int    k    =    0;    k    <    2;    k++)    {    throw    new    ArithmeticException(   "gcd    is    2    >>    31   ");    }    	non-compiled	[CE]  <identifier>  expected	47	None	replace
8	[BUG]  [BUGGY]  Mutation(t  >  0)  {  throw  new  ArithmeticException( "Overflow:  gcd  is  2  >>  31 ");  }  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  v  /=  2;      [BUGGY]  Mutation(t  >  0)  {  throw  new  ArithmeticException( "Overflow:  gcd  is  2  >>  31 ");  }  [BUGGY]      k++;  //  cast  out  twos.  }  }  if  (k  ==  31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }    int  t  =  ((u  &  1)  ==  1)  ?  v  :  -(u  /  2)/*  B3  */;    do  {  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  short  NS  PS  ZS  boolean  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  k  t  u  v  	projects/Math94/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	432	433	1	replace	Mutation(t  >  0)  {  throw  new  ArithmeticException( "Overflow:  gcd  is  2  >>  31 ");  }	  mutation(t    >    0)    {    throw    new    ArithmeticException(   "Overflow:    gcd    is    2    >>    31   ");    }    	non-compiled	[CE]  <identifier>  expected	56	None	replace
9	[BUG]  [BUGGY]  Mutation(t  >  0)  {  throw  new  ArithmeticException( "Overflow:  gcd  is  2  <  31 ");  }  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  v  /=  2;      [BUGGY]  Mutation(t  >  0)  {  throw  new  ArithmeticException( "Overflow:  gcd  is  2  <  31 ");  }  [BUGGY]      k++;  //  cast  out  twos.  }  }  if  (k  ==  31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }    int  t  =  ((u  &  1)  ==  1)  ?  v  :  -(u  /  2)/*  B3  */;    do  {  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  short  NS  PS  ZS  boolean  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  k  t  u  v  	projects/Math94/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	432	433	1	replace	Mutation(t  >  0)  {  throw  new  ArithmeticException( "Overflow:  gcd  is  2  <  31 ");  }	  mutation(t    >    0)    {    throw    new    ArithmeticException(   "Overflow:    gcd    is    2    >>    31   ");    }    	non-compiled	[CE]  <identifier>  expected	56	None	replace
10	[BUG]  [BUGGY]  Mutation(t  >  0)  {  throw  new  ArithmeticException( "Overflow:  gcd  is  2  >=  31 ");  }  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  v  /=  2;      [BUGGY]  Mutation(t  >  0)  {  throw  new  ArithmeticException( "Overflow:  gcd  is  2  >=  31 ");  }  [BUGGY]      k++;  //  cast  out  twos.  }  }  if  (k  ==  31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }    int  t  =  ((u  &  1)  ==  1)  ?  v  :  -(u  /  2)/*  B3  */;    do  {  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  short  NS  PS  ZS  boolean  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  k  t  u  v  	projects/Math94/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	432	433	1	replace	Mutation(t  >  0)  {  throw  new  ArithmeticException( "Overflow:  gcd  is  2  >=  31 ");  }	  mutation(t    >    0)    {    throw    new    ArithmeticException(   "Overflow:    gcd    is    2    >>    31   ");    }    	non-compiled	[CE]  <identifier>  expected	56	None	replace
11	[BUG]  [BUGGY]  Mutation(t  >  0)  {  throw  new  ArithmeticException( "overflow:  gcd  is  2  >>  31 ");  }  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  v  /=  2;      [BUGGY]  Mutation(t  >  0)  {  throw  new  ArithmeticException( "overflow:  gcd  is  2  >>  31 ");  }  [BUGGY]      k++;  //  cast  out  twos.  }  }  if  (k  ==  31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }    int  t  =  ((u  &  1)  ==  1)  ?  v  :  -(u  /  2)/*  B3  */;    do  {  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  short  NS  PS  ZS  boolean  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  k  t  u  v  	projects/Math94/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	432	433	1	replace	Mutation(t  >  0)  {  throw  new  ArithmeticException( "overflow:  gcd  is  2  >>  31 ");  }	  mutation(t    >    0)    {    throw    new    ArithmeticException(   "Overflow:    gcd    is    2    >>    31   ");    }    	non-compiled	[CE]  <identifier>  expected	56	None	replace
12	[BUG]  [BUGGY]  while((  u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  if(t  >  0)  {  for(int  k  =  0;  k  <  2;  k++)  {  v  =  -k;  }  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]      }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  v  /=  2;      [BUGGY]  while((  u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  if(t  >  0)  {  for(int  k  =  0;  k  <  2;  k++)  {  v  =  -k;  }  [BUGGY]      }  if  (k  ==  31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }    int  t  =  ((u  &  1)  ==  1)  ?  v  :  -(u  /  2)/*  B3  */;    do  {  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  short  NS  PS  ZS  boolean  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  k  t  u  v  	projects/Math94/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	432	433	1	replace	while((  u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  if(t  >  0)  {  for(int  k  =  0;  k  <  2;  k++)  {  v  =  -k;  }	  if(t    >    0)    {    for(int    k    =    0;    k    <    2;    k++)    {    v    =    -k;    }    	non-compiled	[CE]  <identifier>  expected	113	None	replace
13	[BUG]  [BUGGY]  if(t  >  31)  {  for(int  k  =  0;  k  <  2;  k++)  {  v  =  -k;  }  [CE]  <identifier>  expected  [FE]                          AssertionFailedError      [CONTEXT]      }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  v  /=  2;      [BUGGY]  if(t  >  31)  {  for(int  k  =  0;  k  <  2;  k++)  {  v  =  -k;  }  [BUGGY]      }  if  (k  ==  31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }    int  t  =  ((u  &  1)  ==  1)  ?  v  :  -(u  /  2)/*  B3  */;    do  {  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  short  NS  PS  ZS  boolean  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  k  t  u  v  	projects/Math94/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	432	433	1	replace	if(t  >  31)  {  for(int  k  =  0;  k  <  2;  k++)  {  v  =  -k;  }	  if(t    >    0)    {    for(int    k    =    0;    k    <    2;    k++)    {    v    =    -k;    }    	non-compiled	[CE]  <identifier>  expected	113	None	replace
14	[BUG]  [BUGGY]  while((  u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  t  =  -(u  /  2)/*  B3  */;  [CE]  <identifier>  expected  [FE]                            AssertionFailedError      [CONTEXT]      }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  v  /=  2;      [BUGGY]  while((  u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  t  =  -(u  /  2)/*  B3  */;  [BUGGY]      }  if  (k  ==  31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }    int  t  =  ((u  &  1)  ==  1)  ?  v  :  -(u  /  2)/*  B3  */;    do  {  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  short  NS  PS  ZS  boolean  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  k  t  u  v  	projects/Math94/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	432	433	1	replace	while((  u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  t  =  -(u  /  2)/*  B3  */;	  if(t    >    0)    {    for(int    k    =    0;    k    <    2;    k++)    {    v    =    -k;    }    	non-compiled	[CE]  <identifier>  expected	113	None	replace
15	[BUG]  [BUGGY]  while((  u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  if(t  >  0)  {  for(int  k  =  0;  k  <  2;  k++)  {  [CE]  <identifier>  expected  [FE]                              AssertionFailedError      [CONTEXT]      }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  v  /=  2;      [BUGGY]  while((  u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  if(t  >  0)  {  for(int  k  =  0;  k  <  2;  k++)  {  [BUGGY]      }  if  (k  ==  31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }    int  t  =  ((u  &  1)  ==  1)  ?  v  :  -(u  /  2)/*  B3  */;    do  {  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  short  NS  PS  ZS  boolean  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  k  t  u  v  	projects/Math94/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	432	433	1	replace	while((  u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  if(t  >  0)  {  for(int  k  =  0;  k  <  2;  k++)  {	  if(t    >    0)    {    for(int    k    =    0;    k    <    2;    k++)    {    v    =    -k;    }    	non-compiled	[CE]  <identifier>  expected	113	None	replace
16	[BUG]  [BUGGY]  if(t  ==  0)  {  if(v  >  0)  {  k++;  }  else  {  throw  new  ArithmeticException( "overflow:  gcd  is  2  >>  31 ");  }  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  v  /=  2;      [BUGGY]  if(t  ==  0)  {  if(v  >  0)  {  k++;  }  else  {  throw  new  ArithmeticException( "overflow:  gcd  is  2  >>  31 ");  }  [BUGGY]      }  if  (k  ==  31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }    int  t  =  ((u  &  1)  ==  1)  ?  v  :  -(u  /  2)/*  B3  */;    do  {  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  short  NS  PS  ZS  boolean  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  k  t  u  v  	projects/Math94/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	432	433	1	replace	if(t  ==  0)  {  if(v  >  0)  {  k++;  }  else  {  throw  new  ArithmeticException( "overflow:  gcd  is  2  >>  31 ");  }	  if(k    ==    31)    {    if(v    >    0)    {    k++;    }    else    {    throw    new    ArithmeticException(   "overflow:    gcd    is    2    >=    31   ");    }    	non-compiled	[CE]  <identifier>  expected	10	None	replace
17	[BUG]  [BUGGY]  if(t  ==  0)  {  if(v  >  0)  {  k++;  }  else  {  throw  new  ArithmeticException( "overflow:  gcd  is  2  >=  31 ");  }  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  v  /=  2;      [BUGGY]  if(t  ==  0)  {  if(v  >  0)  {  k++;  }  else  {  throw  new  ArithmeticException( "overflow:  gcd  is  2  >=  31 ");  }  [BUGGY]      }  if  (k  ==  31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }    int  t  =  ((u  &  1)  ==  1)  ?  v  :  -(u  /  2)/*  B3  */;    do  {  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  short  NS  PS  ZS  boolean  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  k  t  u  v  	projects/Math94/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	432	433	1	replace	if(t  ==  0)  {  if(v  >  0)  {  k++;  }  else  {  throw  new  ArithmeticException( "overflow:  gcd  is  2  >=  31 ");  }	  if(k    ==    31)    {    if(v    >    0)    {    k++;    }    else    {    throw    new    ArithmeticException(   "overflow:    gcd    is    2    >=    31   ");    }    	non-compiled	[CE]  <identifier>  expected	10	None	replace
18	[BUG]  [BUGGY]  if(t  ==  0)  {  if(v  >  0)  {  k++;  }  else  {  throw  new  ArithmeticException( "Overflow:  gcd  is  2  >>  31 ");  }  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  v  /=  2;      [BUGGY]  if(t  ==  0)  {  if(v  >  0)  {  k++;  }  else  {  throw  new  ArithmeticException( "Overflow:  gcd  is  2  >>  31 ");  }  [BUGGY]      }  if  (k  ==  31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }    int  t  =  ((u  &  1)  ==  1)  ?  v  :  -(u  /  2)/*  B3  */;    do  {  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  short  NS  PS  ZS  boolean  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  k  t  u  v  	projects/Math94/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	432	433	1	replace	if(t  ==  0)  {  if(v  >  0)  {  k++;  }  else  {  throw  new  ArithmeticException( "Overflow:  gcd  is  2  >>  31 ");  }	  if(k    ==    31)    {    if(v    >    0)    {    k++;    }    else    {    throw    new    ArithmeticException(   "overflow:    gcd    is    2    >=    31   ");    }    	non-compiled	[CE]  <identifier>  expected	10	None	replace
19	[BUG]  [BUGGY]  if(t  ==  0)  {  if(v  >  0)  {  k++;  }  else  {  throw  new  ArithmeticException( "Overflow:  gcd  is  2  >=  31 ");  }  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]      }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  v  /=  2;      [BUGGY]  if(t  ==  0)  {  if(v  >  0)  {  k++;  }  else  {  throw  new  ArithmeticException( "Overflow:  gcd  is  2  >=  31 ");  }  [BUGGY]      }  if  (k  ==  31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }    int  t  =  ((u  &  1)  ==  1)  ?  v  :  -(u  /  2)/*  B3  */;    do  {  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  short  NS  PS  ZS  boolean  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  k  t  u  v  	projects/Math94/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	432	433	1	replace	if(t  ==  0)  {  if(v  >  0)  {  k++;  }  else  {  throw  new  ArithmeticException( "Overflow:  gcd  is  2  >=  31 ");  }	  if(k    ==    31)    {    if(v    >    0)    {    k++;    }    else    {    throw    new    ArithmeticException(   "overflow:    gcd    is    2    >=    31   ");    }    	non-compiled	[CE]  <identifier>  expected	10	None	replace
20	[BUG]  [BUGGY]  int  k  =  ((  u  &  1)  ==  0  &&  v  &  2)  ==  0  &&  k  <  32)  {  u  /=  2;  v  /=  3;  }  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  v  /=  2;      [BUGGY]  int  k  =  ((  u  &  1)  ==  0  &&  v  &  2)  ==  0  &&  k  <  32)  {  u  /=  2;  v  /=  3;  }  [BUGGY]      k++;  //  cast  out  twos.  }  }  if  (k  ==  31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }    int  t  =  ((u  &  1)  ==  1)  ?  v  :  -(u  /  2)/*  B3  */;    do  {  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  short  NS  PS  ZS  boolean  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  k  t  u  v  	projects/Math94/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	432	433	1	replace	int  k  =  ((  u  &  1)  ==  0  &&  v  &  2)  ==  0  &&  k  <  32)  {  u  /=  2;  v  /=  3;  }	  int    k    =    ((    u    &    1)    ==    0    &&    v    &    1)    ==    0    &&    k    <    32)    {    u    /=    2;    v    /=    3;    }    	non-compiled	[CE]  <identifier>  expected	66	None	replace
21	[BUG]  [BUGGY]  if(t  <  31)  {  k++;  }  else  {  throw  new  ArithmeticException( "overflow:  gcd  is  2  >>  31 ");  }  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  v  /=  2;      [BUGGY]  if(t  <  31)  {  k++;  }  else  {  throw  new  ArithmeticException( "overflow:  gcd  is  2  >>  31 ");  }  [BUGGY]      }  if  (k  ==  31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }    int  t  =  ((u  &  1)  ==  1)  ?  v  :  -(u  /  2)/*  B3  */;    do  {  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  short  NS  PS  ZS  boolean  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  k  t  u  v  	projects/Math94/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	432	433	1	replace	if(t  <  31)  {  k++;  }  else  {  throw  new  ArithmeticException( "overflow:  gcd  is  2  >>  31 ");  }	  if(t    >    31)    {    k++;    }    else    {    throw    new    ArithmeticException(   "   ");    }    	non-compiled	[CE]  <identifier>  expected	44	None	replace
22	[BUG]  [BUGGY]  k++;  }  else  {  throw  new  ArithmeticException( " ");  }  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  v  /=  2;      [BUGGY]  k++;  }  else  {  throw  new  ArithmeticException( " ");  }  [BUGGY]      }  if  (k  ==  31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }    int  t  =  ((u  &  1)  ==  1)  ?  v  :  -(u  /  2)/*  B3  */;    do  {  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  short  NS  PS  ZS  boolean  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  k  t  u  v  	projects/Math94/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	432	433	1	replace	k++;  }  else  {  throw  new  ArithmeticException( " ");  }	  if(t    >    31)    {    k++;    }    else    {    throw    new    ArithmeticException(   "   ");    }    	non-compiled	[CE]  <identifier>  expected	44	None	replace
23	[BUG]  [BUGGY]  k++;  }  else  {  throw  new  ArithmeticException( "overflow:  gcd  is  2  >>  31 ");  }  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  v  /=  2;      [BUGGY]  k++;  }  else  {  throw  new  ArithmeticException( "overflow:  gcd  is  2  >>  31 ");  }  [BUGGY]      }  if  (k  ==  31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }    int  t  =  ((u  &  1)  ==  1)  ?  v  :  -(u  /  2)/*  B3  */;    do  {  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  short  NS  PS  ZS  boolean  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  k  t  u  v  	projects/Math94/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	432	433	1	replace	k++;  }  else  {  throw  new  ArithmeticException( "overflow:  gcd  is  2  >>  31 ");  }	  if(t    >    31)    {    k++;    }    else    {    throw    new    ArithmeticException(   "   ");    }    	non-compiled	[CE]  <identifier>  expected	44	None	replace
24	[BUG]  [BUGGY]  safeThan  <  ArithmeticException.DEFAULT_NUMBER_ERROR  ||  k  >  31)  {  throw  new  ArithmeticException( "overflow:  gcd  is  2  >>  31 ");  }  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  v  /=  2;      [BUGGY]  safeThan  <  ArithmeticException.DEFAULT_NUMBER_ERROR  ||  k  >  31)  {  throw  new  ArithmeticException( "overflow:  gcd  is  2  >>  31 ");  }  [BUGGY]      k++;  //  cast  out  twos.  }  }  if  (k  ==  31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }    int  t  =  ((u  &  1)  ==  1)  ?  v  :  -(u  /  2)/*  B3  */;    do  {  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  short  NS  PS  ZS  boolean  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  k  t  u  v  	projects/Math94/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	432	433	1	replace	safeThan  <  ArithmeticException.DEFAULT_NUMBER_ERROR  ||  k  >  31)  {  throw  new  ArithmeticException( "overflow:  gcd  is  2  >>  31 ");  }	  safeThan    <    ArithmeticException.DEFAULT_NUMBER_ERROR    ||    t    >    0)    {    throw    new    ArithmeticException(   "overflow:    gcd    is    2    >>    31   ");    }    	non-compiled	[CE]  <identifier>  expected	98	None	replace
25	[BUG]  [BUGGY]  safeThan  <  ArithmeticException.DEFAULT_NUMBER_ERROR  ||  k  >  0)  {  throw  new  ArithmeticException( "overflow:  gcd  is  2  >>  31 ");  }  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  v  /=  2;      [BUGGY]  safeThan  <  ArithmeticException.DEFAULT_NUMBER_ERROR  ||  k  >  0)  {  throw  new  ArithmeticException( "overflow:  gcd  is  2  >>  31 ");  }  [BUGGY]      k++;  //  cast  out  twos.  }  }  if  (k  ==  31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }    int  t  =  ((u  &  1)  ==  1)  ?  v  :  -(u  /  2)/*  B3  */;    do  {  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  short  NS  PS  ZS  boolean  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  k  t  u  v  	projects/Math94/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	432	433	1	replace	safeThan  <  ArithmeticException.DEFAULT_NUMBER_ERROR  ||  k  >  0)  {  throw  new  ArithmeticException( "overflow:  gcd  is  2  >>  31 ");  }	  safeThan    <    ArithmeticException.DEFAULT_NUMBER_ERROR    ||    t    >    0)    {    throw    new    ArithmeticException(   "overflow:    gcd    is    2    >>    31   ");    }    	non-compiled	[CE]  <identifier>  expected	98	None	replace
26	[BUG]  [BUGGY]  safeThan  <  ArithmeticException.DEFAULT_NUMBER_ERROR  &&  t  >  0)  {  throw  new  ArithmeticException( "overflow:  gcd  is  2  >>  31 ");  }  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  v  /=  2;      [BUGGY]  safeThan  <  ArithmeticException.DEFAULT_NUMBER_ERROR  &&  t  >  0)  {  throw  new  ArithmeticException( "overflow:  gcd  is  2  >>  31 ");  }  [BUGGY]      k++;  //  cast  out  twos.  }  }  if  (k  ==  31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }    int  t  =  ((u  &  1)  ==  1)  ?  v  :  -(u  /  2)/*  B3  */;    do  {  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  short  NS  PS  ZS  boolean  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  k  t  u  v  	projects/Math94/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	432	433	1	replace	safeThan  <  ArithmeticException.DEFAULT_NUMBER_ERROR  &&  t  >  0)  {  throw  new  ArithmeticException( "overflow:  gcd  is  2  >>  31 ");  }	  safeThan    <    ArithmeticException.DEFAULT_NUMBER_ERROR    ||    t    >    0)    {    throw    new    ArithmeticException(   "overflow:    gcd    is    2    >>    31   ");    }    	non-compiled	[CE]  <identifier>  expected	98	None	replace
27	[BUG]  [BUGGY]  mutation(t  >  0)  {  k++;  }  else  {  throw  new  ArithmeticException( "Overflow:  gcd  is  2  >>  31 ");  }  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  v  /=  2;      [BUGGY]  mutation(t  >  0)  {  k++;  }  else  {  throw  new  ArithmeticException( "Overflow:  gcd  is  2  >>  31 ");  }  [BUGGY]      }  if  (k  ==  31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }    int  t  =  ((u  &  1)  ==  1)  ?  v  :  -(u  /  2)/*  B3  */;    do  {  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  short  NS  PS  ZS  boolean  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  k  t  u  v  	projects/Math94/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	432	433	1	replace	mutation(t  >  0)  {  k++;  }  else  {  throw  new  ArithmeticException( "Overflow:  gcd  is  2  >>  31 ");  }	  if(t    >    0)    {    k++;    }    else    {    throw    new    ArithmeticException(   "Overflow:    gcd    is    2    >=    31   ");    }    	non-compiled	[CE]  <identifier>  expected	37	None	replace
28	[BUG]  [BUGGY]  mutation(t  >  0)  {  k++;  }  else  {  throw  new  ArithmeticException( "Overflow:  gcd  is  2  >=  31 ");  }  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]      }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  v  /=  2;      [BUGGY]  mutation(t  >  0)  {  k++;  }  else  {  throw  new  ArithmeticException( "Overflow:  gcd  is  2  >=  31 ");  }  [BUGGY]      }  if  (k  ==  31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }    int  t  =  ((u  &  1)  ==  1)  ?  v  :  -(u  /  2)/*  B3  */;    do  {  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  short  NS  PS  ZS  boolean  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  k  t  u  v  	projects/Math94/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	432	433	1	replace	mutation(t  >  0)  {  k++;  }  else  {  throw  new  ArithmeticException( "Overflow:  gcd  is  2  >=  31 ");  }	  if(t    >    0)    {    k++;    }    else    {    throw    new    ArithmeticException(   "Overflow:    gcd    is    2    >=    31   ");    }    	non-compiled	[CE]  <identifier>  expected	37	None	replace
29	[BUG]  [BUGGY]  mutation(t  >  0)  {  k++;  }  else  {  throw  new  ArithmeticException( "Overflow:  gcd  is  2  ==  31 ");  }  [CE]  <identifier>  expected  [FE]                          AssertionFailedError      [CONTEXT]      }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  v  /=  2;      [BUGGY]  mutation(t  >  0)  {  k++;  }  else  {  throw  new  ArithmeticException( "Overflow:  gcd  is  2  ==  31 ");  }  [BUGGY]      }  if  (k  ==  31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }    int  t  =  ((u  &  1)  ==  1)  ?  v  :  -(u  /  2)/*  B3  */;    do  {  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  short  NS  PS  ZS  boolean  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  k  t  u  v  	projects/Math94/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	432	433	1	replace	mutation(t  >  0)  {  k++;  }  else  {  throw  new  ArithmeticException( "Overflow:  gcd  is  2  ==  31 ");  }	  if(t    >    0)    {    k++;    }    else    {    throw    new    ArithmeticException(   "Overflow:    gcd    is    2    >=    31   ");    }    	non-compiled	[CE]  <identifier>  expected	37	None	replace
30	[BUG]  [BUGGY]  if(t  ==  0)  {  if(v  >  0)  {  k++;  }  else  {  throw  new  ArithmeticException( "overflow:  gcd  is  2!=  31 ");  }  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  v  /=  2;      [BUGGY]  if(t  ==  0)  {  if(v  >  0)  {  k++;  }  else  {  throw  new  ArithmeticException( "overflow:  gcd  is  2!=  31 ");  }  [BUGGY]      }  if  (k  ==  31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }    int  t  =  ((u  &  1)  ==  1)  ?  v  :  -(u  /  2)/*  B3  */;    do  {  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  short  NS  PS  ZS  boolean  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  k  t  u  v  	projects/Math94/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	432	433	1	replace	if(t  ==  0)  {  if(v  >  0)  {  k++;  }  else  {  throw  new  ArithmeticException( "overflow:  gcd  is  2!=  31 ");  }	  if(k    ==    31)    {    if(v    >    0)    {    k++;    }    else    {    throw    new    ArithmeticException(   "overflow:    gcd    is    2    >>    31   ");    }    	non-compiled	[CE]  <identifier>  expected	8	None	replace
31	[BUG]  [BUGGY]  int  k  =  ((  u  &  1)  ==  1  &&  v  &  1)  ==  1  &&  k  <  32)  {  u  /=  2;  v  /=  2;  }  [CE]  <identifier>  expected  [FE]            AssertionFailedError      [CONTEXT]      }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  v  /=  2;      [BUGGY]  int  k  =  ((  u  &  1)  ==  1  &&  v  &  1)  ==  1  &&  k  <  32)  {  u  /=  2;  v  /=  2;  }  [BUGGY]      k++;  //  cast  out  twos.  }  }  if  (k  ==  31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }    int  t  =  ((u  &  1)  ==  1)  ?  v  :  -(u  /  2)/*  B3  */;    do  {  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  short  NS  PS  ZS  boolean  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  k  t  u  v  	projects/Math94/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	432	433	1	replace	int  k  =  ((  u  &  1)  ==  1  &&  v  &  1)  ==  1  &&  k  <  32)  {  u  /=  2;  v  /=  2;  }	  int    k    =    ((    u    &    1)    ==    0    &&    v    &    1)    ==    0    &&    k    <    32)    {    u    /=    2;    v    /=    2;    }    	non-compiled	[CE]  <identifier>  expected	80	None	replace
32	[BUG]  [BUGGY]  safeThan  <  ArithmeticException.DEFAULT_NUMBER_INT)  {  throw  new  ArithmeticException( "overflow:  gcd  is  2  {  31 ");  }  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  v  /=  2;      [BUGGY]  safeThan  <  ArithmeticException.DEFAULT_NUMBER_INT)  {  throw  new  ArithmeticException( "overflow:  gcd  is  2  {  31 ");  }  [BUGGY]      k++;  //  cast  out  twos.  }  }  if  (k  ==  31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }    int  t  =  ((u  &  1)  ==  1)  ?  v  :  -(u  /  2)/*  B3  */;    do  {  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  short  NS  PS  ZS  boolean  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  k  t  u  v  	projects/Math94/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	432	433	1	replace	safeThan  <  ArithmeticException.DEFAULT_NUMBER_INT)  {  throw  new  ArithmeticException( "overflow:  gcd  is  2  {  31 ");  }	  safeThan    <    ArithmeticException.DEFAULT_NUMBER_INT)    {    throw    new    ArithmeticException(   "overflow:    gcd    is    2    ==    31   ");    }    	non-compiled	[CE]  <identifier>  expected	88	None	replace
33	[BUG]  [BUGGY]  safeThan(v)  {  throw  new  ArithmeticException( "overflow:  gcd  is  2  {  31 ");  }  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  v  /=  2;      [BUGGY]  safeThan(v)  {  throw  new  ArithmeticException( "overflow:  gcd  is  2  {  31 ");  }  [BUGGY]      k++;  //  cast  out  twos.  }  }  if  (k  ==  31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }    int  t  =  ((u  &  1)  ==  1)  ?  v  :  -(u  /  2)/*  B3  */;    do  {  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  short  NS  PS  ZS  boolean  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  k  t  u  v  	projects/Math94/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	432	433	1	replace	safeThan(v)  {  throw  new  ArithmeticException( "overflow:  gcd  is  2  {  31 ");  }	  safeThan    <    ArithmeticException.DEFAULT_NUMBER_INT)    {    throw    new    ArithmeticException(   "overflow:    gcd    is    2    ==    31   ");    }    	non-compiled	[CE]  <identifier>  expected	88	None	replace
34	[BUG]  [BUGGY]  k++;  }  else  {  throw  new  ArithmeticException( "Overflow:  gcd  is  2  >>  31 ");  }  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  v  /=  2;      [BUGGY]  k++;  }  else  {  throw  new  ArithmeticException( "Overflow:  gcd  is  2  >>  31 ");  }  [BUGGY]      }  if  (k  ==  31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }    int  t  =  ((u  &  1)  ==  1)  ?  v  :  -(u  /  2)/*  B3  */;    do  {  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  short  NS  PS  ZS  boolean  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  k  t  u  v  	projects/Math94/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	432	433	1	replace	k++;  }  else  {  throw  new  ArithmeticException( "Overflow:  gcd  is  2  >>  31 ");  }	  if(v    <    =    0)    {    k++;    }    else    {    throw    new    ArithmeticException(   "Overflow:    gcd    is    2    >>    31   ");    }    	non-compiled	[CE]  <identifier>  expected	103	None	replace
35	[BUG]  [BUGGY]  if(k  <  =  0)  {  k++;  }  else  {  throw  new  ArithmeticException( "Overflow:  gcd  is  2  >>  31 ");  }  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  v  /=  2;      [BUGGY]  if(k  <  =  0)  {  k++;  }  else  {  throw  new  ArithmeticException( "Overflow:  gcd  is  2  >>  31 ");  }  [BUGGY]      }  if  (k  ==  31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }    int  t  =  ((u  &  1)  ==  1)  ?  v  :  -(u  /  2)/*  B3  */;    do  {  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  short  NS  PS  ZS  boolean  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  k  t  u  v  	projects/Math94/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	432	433	1	replace	if(k  <  =  0)  {  k++;  }  else  {  throw  new  ArithmeticException( "Overflow:  gcd  is  2  >>  31 ");  }	  if(v    <    =    0)    {    k++;    }    else    {    throw    new    ArithmeticException(   "Overflow:    gcd    is    2    >>    31   ");    }    	non-compiled	[CE]  <identifier>  expected	103	None	replace
36	[BUG]  [BUGGY]  if(k  <  =  0)  {  k++;  }  else  {  throw  new  ArithmeticException( "Overflow:  gcd  is  2  >=  31 ");  }  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  v  /=  2;      [BUGGY]  if(k  <  =  0)  {  k++;  }  else  {  throw  new  ArithmeticException( "Overflow:  gcd  is  2  >=  31 ");  }  [BUGGY]      }  if  (k  ==  31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }    int  t  =  ((u  &  1)  ==  1)  ?  v  :  -(u  /  2)/*  B3  */;    do  {  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  short  NS  PS  ZS  boolean  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  k  t  u  v  	projects/Math94/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	432	433	1	replace	if(k  <  =  0)  {  k++;  }  else  {  throw  new  ArithmeticException( "Overflow:  gcd  is  2  >=  31 ");  }	  if(v    <    =    0)    {    k++;    }    else    {    throw    new    ArithmeticException(   "Overflow:    gcd    is    2    >>    31   ");    }    	non-compiled	[CE]  <identifier>  expected	103	None	replace
37	[BUG]  [BUGGY]  String  k  =  ((  u  &  1)  ==  0  &&  v  &  1)  ==  0  &&  k  <  31)  {  u  /=  2;  v  /=  2;  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  v  /=  2;      [BUGGY]  String  k  =  ((  u  &  1)  ==  0  &&  v  &  1)  ==  0  &&  k  <  31)  {  u  /=  2;  v  /=  2;  [BUGGY]      k++;  //  cast  out  twos.  }  }  if  (k  ==  31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }    int  t  =  ((u  &  1)  ==  1)  ?  v  :  -(u  /  2)/*  B3  */;    do  {  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  short  NS  PS  ZS  boolean  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  k  t  u  v  	projects/Math94/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	432	433	1	replace	String  k  =  ((  u  &  1)  ==  0  &&  v  &  1)  ==  0  &&  k  <  31)  {  u  /=  2;  v  /=  2;	  char    k    =    ((    u    &    1)    ==    0    &&    v    &    1)    ==    0    &&    k    <    31)    {    u    /=    2;    v    /=    2;    	non-compiled	[CE]  <identifier>  expected	123	None	replace
38	[BUG]  [BUGGY]  char  k  =  ((  u  &  1)  ==  0  &&  v  &  1)  ==  0  &&  k  <  31)  {  u  /=  2;  v  /=  3;  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  v  /=  2;      [BUGGY]  char  k  =  ((  u  &  1)  ==  0  &&  v  &  1)  ==  0  &&  k  <  31)  {  u  /=  2;  v  /=  3;  [BUGGY]      k++;  //  cast  out  twos.  }  }  if  (k  ==  31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }    int  t  =  ((u  &  1)  ==  1)  ?  v  :  -(u  /  2)/*  B3  */;    do  {  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  short  NS  PS  ZS  boolean  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  k  t  u  v  	projects/Math94/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	432	433	1	replace	char  k  =  ((  u  &  1)  ==  0  &&  v  &  1)  ==  0  &&  k  <  31)  {  u  /=  2;  v  /=  3;	  char    k    =    ((    u    &    1)    ==    0    &&    v    &    1)    ==    0    &&    k    <    31)    {    u    /=    2;    v    /=    2;    	non-compiled	[CE]  <identifier>  expected	123	None	replace
39	[BUG]  [BUGGY]  int  k  =  ((  u  &  1)  ==  0  &&  v  &  1)  ==  0  &&  k  <  31)  {  u  +=  3;  v  /=  2;  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  v  /=  2;      [BUGGY]  int  k  =  ((  u  &  1)  ==  0  &&  v  &  1)  ==  0  &&  k  <  31)  {  u  +=  3;  v  /=  2;  [BUGGY]      k++;  //  cast  out  twos.  }  }  if  (k  ==  31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }    int  t  =  ((u  &  1)  ==  1)  ?  v  :  -(u  /  2)/*  B3  */;    do  {  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  short  NS  PS  ZS  boolean  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  k  t  u  v  	projects/Math94/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	432	433	1	replace	int  k  =  ((  u  &  1)  ==  0  &&  v  &  1)  ==  0  &&  k  <  31)  {  u  +=  3;  v  /=  2;	  int    k    =    ((    u    &    1)    ==    0    &&    v    &    1)    ==    0    &&    k    <    31)    {    u    +=    2;    v    /=    2;    	non-compiled	[CE]  <identifier>  expected	124	None	replace
40	[BUG]  [BUGGY]  int  k  =  ((  u  &  1)  ==  0  &&  v  &  1)  ==  0  &&  k  <  31)  {  u  +=  4;  v  /=  2;  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  v  /=  2;      [BUGGY]  int  k  =  ((  u  &  1)  ==  0  &&  v  &  1)  ==  0  &&  k  <  31)  {  u  +=  4;  v  /=  2;  [BUGGY]      k++;  //  cast  out  twos.  }  }  if  (k  ==  31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }    int  t  =  ((u  &  1)  ==  1)  ?  v  :  -(u  /  2)/*  B3  */;    do  {  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  short  NS  PS  ZS  boolean  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  k  t  u  v  	projects/Math94/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	432	433	1	replace	int  k  =  ((  u  &  1)  ==  0  &&  v  &  1)  ==  0  &&  k  <  31)  {  u  +=  4;  v  /=  2;	  int    k    =    ((    u    &    1)    ==    0    &&    v    &    1)    ==    0    &&    k    <    31)    {    u    +=    2;    v    /=    2;    	non-compiled	[CE]  <identifier>  expected	124	None	replace
41	[BUG]  [BUGGY]  int  k  =  ((  u  &  1)  ==  0  &&  v  &  1)  ==  0  &&  k  <  31)  {  u  +=  2;  v  /=  2;  }  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  v  /=  2;      [BUGGY]  int  k  =  ((  u  &  1)  ==  0  &&  v  &  1)  ==  0  &&  k  <  31)  {  u  +=  2;  v  /=  2;  }  [BUGGY]      k++;  //  cast  out  twos.  }  }  if  (k  ==  31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }    int  t  =  ((u  &  1)  ==  1)  ?  v  :  -(u  /  2)/*  B3  */;    do  {  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  short  NS  PS  ZS  boolean  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  k  t  u  v  	projects/Math94/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	432	433	1	replace	int  k  =  ((  u  &  1)  ==  0  &&  v  &  1)  ==  0  &&  k  <  31)  {  u  +=  2;  v  /=  2;  }	  int    k    =    ((    u    &    1)    ==    0    &&    v    &    1)    ==    0    &&    k    <    31)    {    u    +=    2;    v    /=    2;    	non-compiled	[CE]  <identifier>  expected	124	None	replace
42	[BUG]  [BUGGY]  if(t  ==  0)  {  k++;  }  else  {  throw  new  ArithmeticException( "overflow:  gcd  is  2  >>  31 ");  }  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  v  /=  2;      [BUGGY]  if(t  ==  0)  {  k++;  }  else  {  throw  new  ArithmeticException( "overflow:  gcd  is  2  >>  31 ");  }  [BUGGY]      }  if  (k  ==  31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }    int  t  =  ((u  &  1)  ==  1)  ?  v  :  -(u  /  2)/*  B3  */;    do  {  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  short  NS  PS  ZS  boolean  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  k  t  u  v  	projects/Math94/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	432	433	1	replace	if(t  ==  0)  {  k++;  }  else  {  throw  new  ArithmeticException( "overflow:  gcd  is  2  >>  31 ");  }	  if(v    ==    0)    {    k++;    }    else    {    throw    new    ArithmeticException(   "overflow:    gcd    is    2    >=    31   ");    }    	non-compiled	[CE]  <identifier>  expected	77	None	replace
43	[BUG]  [BUGGY]  if(t  ==  0)  {  k++;  }  else  {  throw  new  ArithmeticException( "overflow:  gcd  is  2  >=  31 ");  }  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  v  /=  2;      [BUGGY]  if(t  ==  0)  {  k++;  }  else  {  throw  new  ArithmeticException( "overflow:  gcd  is  2  >=  31 ");  }  [BUGGY]      }  if  (k  ==  31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }    int  t  =  ((u  &  1)  ==  1)  ?  v  :  -(u  /  2)/*  B3  */;    do  {  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  short  NS  PS  ZS  boolean  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  k  t  u  v  	projects/Math94/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	432	433	1	replace	if(t  ==  0)  {  k++;  }  else  {  throw  new  ArithmeticException( "overflow:  gcd  is  2  >=  31 ");  }	  if(v    ==    0)    {    k++;    }    else    {    throw    new    ArithmeticException(   "overflow:    gcd    is    2    >=    31   ");    }    	non-compiled	[CE]  <identifier>  expected	77	None	replace
44	[BUG]  [BUGGY]  if(k  ==  0)  {  k++;  }  else  {  throw  new  ArithmeticException( "overflow:  gcd  is  2  >>  31 ");  }  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  v  /=  2;      [BUGGY]  if(k  ==  0)  {  k++;  }  else  {  throw  new  ArithmeticException( "overflow:  gcd  is  2  >>  31 ");  }  [BUGGY]      }  if  (k  ==  31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }    int  t  =  ((u  &  1)  ==  1)  ?  v  :  -(u  /  2)/*  B3  */;    do  {  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  short  NS  PS  ZS  boolean  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  k  t  u  v  	projects/Math94/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	432	433	1	replace	if(k  ==  0)  {  k++;  }  else  {  throw  new  ArithmeticException( "overflow:  gcd  is  2  >>  31 ");  }	  if(v    ==    0)    {    k++;    }    else    {    throw    new    ArithmeticException(   "overflow:    gcd    is    2    >=    31   ");    }    	non-compiled	[CE]  <identifier>  expected	77	None	replace
45	[BUG]  [BUGGY]  mutation(t  >  0)  {  k++;  }  else  {  throw  new  ArithmeticException( "overflow:  gcd  is  2  >=  31 ");  }  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  v  /=  2;      [BUGGY]  mutation(t  >  0)  {  k++;  }  else  {  throw  new  ArithmeticException( "overflow:  gcd  is  2  >=  31 ");  }  [BUGGY]      }  if  (k  ==  31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }    int  t  =  ((u  &  1)  ==  1)  ?  v  :  -(u  /  2)/*  B3  */;    do  {  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  short  NS  PS  ZS  boolean  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  k  t  u  v  	projects/Math94/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	432	433	1	replace	mutation(t  >  0)  {  k++;  }  else  {  throw  new  ArithmeticException( "overflow:  gcd  is  2  >=  31 ");  }	  if(t    >    0)    {    k++;    }    else    {    throw    new    ArithmeticException(   "overflow:    gcd    is    2    >=    31   ");    }    	non-compiled	[CE]  <identifier>  expected	11	None	replace
46	[BUG]  [BUGGY]  mutation(t  >  0)  {  k++;  }  else  {  throw  new  ArithmeticException( "overflow:  gcd  is  2  <  31 ");  }  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  v  /=  2;      [BUGGY]  mutation(t  >  0)  {  k++;  }  else  {  throw  new  ArithmeticException( "overflow:  gcd  is  2  <  31 ");  }  [BUGGY]      }  if  (k  ==  31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }    int  t  =  ((u  &  1)  ==  1)  ?  v  :  -(u  /  2)/*  B3  */;    do  {  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  short  NS  PS  ZS  boolean  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  k  t  u  v  	projects/Math94/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	432	433	1	replace	mutation(t  >  0)  {  k++;  }  else  {  throw  new  ArithmeticException( "overflow:  gcd  is  2  <  31 ");  }	  if(t    >    0)    {    k++;    }    else    {    throw    new    ArithmeticException(   "overflow:    gcd    is    2    >=    31   ");    }    	non-compiled	[CE]  <identifier>  expected	11	None	replace
47	[BUG]  [BUGGY]  for(int  k  =  0;  k  <  2;  k++)  {  throw  new  ArithmeticException( "overflow:  Gcd  is  2  >>  31 ");  }  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  v  /=  2;      [BUGGY]  for(int  k  =  0;  k  <  2;  k++)  {  throw  new  ArithmeticException( "overflow:  Gcd  is  2  >>  31 ");  }  [BUGGY]      k++;  //  cast  out  twos.  }  }  if  (k  ==  31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }    int  t  =  ((u  &  1)  ==  1)  ?  v  :  -(u  /  2)/*  B3  */;    do  {  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  short  NS  PS  ZS  boolean  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  k  t  u  v  	projects/Math94/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	432	433	1	replace	for(int  k  =  0;  k  <  2;  k++)  {  throw  new  ArithmeticException( "overflow:  Gcd  is  2  >>  31 ");  }	  if(v    >    31)    {    for(int    k    =    0;    k    <    2;    k++)    {    throw    new    ArithmeticException(   "overflow:    Gcd    is    2    >>    31   ");    }    	non-compiled	[CE]  <identifier>  expected	51	None	replace
48	[BUG]  [BUGGY]  if(t  ==  0)  {  for(int  k  =  0;  k  <  2;  k++)  {  throw  new  ArithmeticException( "overflow:  Gcd  is  2  >>  31 ");  }  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]      }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  v  /=  2;      [BUGGY]  if(t  ==  0)  {  for(int  k  =  0;  k  <  2;  k++)  {  throw  new  ArithmeticException( "overflow:  Gcd  is  2  >>  31 ");  }  [BUGGY]      k++;  //  cast  out  twos.  }  }  if  (k  ==  31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }    int  t  =  ((u  &  1)  ==  1)  ?  v  :  -(u  /  2)/*  B3  */;    do  {  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  short  NS  PS  ZS  boolean  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  k  t  u  v  	projects/Math94/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	432	433	1	replace	if(t  ==  0)  {  for(int  k  =  0;  k  <  2;  k++)  {  throw  new  ArithmeticException( "overflow:  Gcd  is  2  >>  31 ");  }	  if(v    >    31)    {    for(int    k    =    0;    k    <    2;    k++)    {    throw    new    ArithmeticException(   "overflow:    Gcd    is    2    >>    31   ");    }    	non-compiled	[CE]  <identifier>  expected	51	None	replace
49	[BUG]  [BUGGY]  while(v  <  31)  {  for(int  k  =  0;  k  <  2;  k++)  {  throw  new  ArithmeticException( "overflow:  Gcd  is  2  >>  31 ");  }  [CE]  <identifier>  expected  [FE]                          AssertionFailedError      [CONTEXT]      }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  v  /=  2;      [BUGGY]  while(v  <  31)  {  for(int  k  =  0;  k  <  2;  k++)  {  throw  new  ArithmeticException( "overflow:  Gcd  is  2  >>  31 ");  }  [BUGGY]      k++;  //  cast  out  twos.  }  }  if  (k  ==  31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }    int  t  =  ((u  &  1)  ==  1)  ?  v  :  -(u  /  2)/*  B3  */;    do  {  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  short  NS  PS  ZS  boolean  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  k  t  u  v  	projects/Math94/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	432	433	1	replace	while(v  <  31)  {  for(int  k  =  0;  k  <  2;  k++)  {  throw  new  ArithmeticException( "overflow:  Gcd  is  2  >>  31 ");  }	  if(v    >    31)    {    for(int    k    =    0;    k    <    2;    k++)    {    throw    new    ArithmeticException(   "overflow:    Gcd    is    2    >>    31   ");    }    	non-compiled	[CE]  <identifier>  expected	51	None	replace
50	[BUG]  [BUGGY]  safeThan  <  ArithmeticException.DEFAULT_NUMBER_ERROR  ||  k  >  0)  {  throw  new  ArithmeticException( "Overflow:  gcd  is  2  >>  31 ");  }  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  v  /=  2;      [BUGGY]  safeThan  <  ArithmeticException.DEFAULT_NUMBER_ERROR  ||  k  >  0)  {  throw  new  ArithmeticException( "Overflow:  gcd  is  2  >>  31 ");  }  [BUGGY]      k++;  //  cast  out  twos.  }  }  if  (k  ==  31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }    int  t  =  ((u  &  1)  ==  1)  ?  v  :  -(u  /  2)/*  B3  */;    do  {  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  short  NS  PS  ZS  boolean  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  k  t  u  v  	projects/Math94/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	432	433	1	replace	safeThan  <  ArithmeticException.DEFAULT_NUMBER_ERROR  ||  k  >  0)  {  throw  new  ArithmeticException( "Overflow:  gcd  is  2  >>  31 ");  }	  safeThan    <    ArithmeticException.DEFAULT_NUMBER_ERROR    ||    t    >    0)    {    throw    new    ArithmeticException(   "Overflow:    gcd    is    2    >>    31   ");    }    	non-compiled	[CE]  <identifier>  expected	85	None	replace
51	[BUG]  [BUGGY]  safeThan  <  ArithmeticException.DEFAULT_NUMBER_ERROR  ||  k  >  31)  {  throw  new  ArithmeticException( "Overflow:  gcd  is  2  >>  31 ");  }  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  v  /=  2;      [BUGGY]  safeThan  <  ArithmeticException.DEFAULT_NUMBER_ERROR  ||  k  >  31)  {  throw  new  ArithmeticException( "Overflow:  gcd  is  2  >>  31 ");  }  [BUGGY]      k++;  //  cast  out  twos.  }  }  if  (k  ==  31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }    int  t  =  ((u  &  1)  ==  1)  ?  v  :  -(u  /  2)/*  B3  */;    do  {  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  short  NS  PS  ZS  boolean  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  k  t  u  v  	projects/Math94/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	432	433	1	replace	safeThan  <  ArithmeticException.DEFAULT_NUMBER_ERROR  ||  k  >  31)  {  throw  new  ArithmeticException( "Overflow:  gcd  is  2  >>  31 ");  }	  safeThan    <    ArithmeticException.DEFAULT_NUMBER_ERROR    ||    t    >    0)    {    throw    new    ArithmeticException(   "Overflow:    gcd    is    2    >>    31   ");    }    	non-compiled	[CE]  <identifier>  expected	85	None	replace
52	[BUG]  [BUGGY]  safeThan  <  ArithmeticException.DEFAULT_NUMBER_ERROR  &&  t  >  0)  {  throw  new  ArithmeticException( "Overflow:  gcd  is  2  >>  31 ");  }  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  v  /=  2;      [BUGGY]  safeThan  <  ArithmeticException.DEFAULT_NUMBER_ERROR  &&  t  >  0)  {  throw  new  ArithmeticException( "Overflow:  gcd  is  2  >>  31 ");  }  [BUGGY]      k++;  //  cast  out  twos.  }  }  if  (k  ==  31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }    int  t  =  ((u  &  1)  ==  1)  ?  v  :  -(u  /  2)/*  B3  */;    do  {  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  short  NS  PS  ZS  boolean  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  k  t  u  v  	projects/Math94/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	432	433	1	replace	safeThan  <  ArithmeticException.DEFAULT_NUMBER_ERROR  &&  t  >  0)  {  throw  new  ArithmeticException( "Overflow:  gcd  is  2  >>  31 ");  }	  safeThan    <    ArithmeticException.DEFAULT_NUMBER_ERROR    ||    t    >    0)    {    throw    new    ArithmeticException(   "Overflow:    gcd    is    2    >>    31   ");    }    	non-compiled	[CE]  <identifier>  expected	85	None	replace
53	[BUG]  [BUGGY]  k++;  }  else  {  throw  new  ArithmeticException( "Overflow:  gcd  is  2  >=  31 ");  }  [CE]  <identifier>  expected  [FE]            AssertionFailedError      [CONTEXT]      }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  v  /=  2;      [BUGGY]  k++;  }  else  {  throw  new  ArithmeticException( "Overflow:  gcd  is  2  >=  31 ");  }  [BUGGY]      }  if  (k  ==  31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }    int  t  =  ((u  &  1)  ==  1)  ?  v  :  -(u  /  2)/*  B3  */;    do  {  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  short  NS  PS  ZS  boolean  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  k  t  u  v  	projects/Math94/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	432	433	1	replace	k++;  }  else  {  throw  new  ArithmeticException( "Overflow:  gcd  is  2  >=  31 ");  }	  if(v    <    31)    {    k++;    }    else    {    throw    new    ArithmeticException(   "Overflow:    gcd    is    2    >>    31   ");    }    	non-compiled	[CE]  <identifier>  expected	63	None	replace
54	[BUG]  [BUGGY]  k++;  }  else  {  throw  new  ArithmeticException( "Overflow:  gcd  is  2  ==  31 ");  }  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  v  /=  2;      [BUGGY]  k++;  }  else  {  throw  new  ArithmeticException( "Overflow:  gcd  is  2  ==  31 ");  }  [BUGGY]      }  if  (k  ==  31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }    int  t  =  ((u  &  1)  ==  1)  ?  v  :  -(u  /  2)/*  B3  */;    do  {  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  short  NS  PS  ZS  boolean  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  k  t  u  v  	projects/Math94/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	432	433	1	replace	k++;  }  else  {  throw  new  ArithmeticException( "Overflow:  gcd  is  2  ==  31 ");  }	  if(v    <    31)    {    k++;    }    else    {    throw    new    ArithmeticException(   "Overflow:    gcd    is    2    >>    31   ");    }    	non-compiled	[CE]  <identifier>  expected	63	None	replace
55	[BUG]  [BUGGY]  safeThan(v)  {  throw  new  ArithmeticException( "overflow:  gcd  is  2  >>  31 ");  }  [CE]  <identifier>  expected  [FE]            AssertionFailedError      [CONTEXT]      }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  v  /=  2;      [BUGGY]  safeThan(v)  {  throw  new  ArithmeticException( "overflow:  gcd  is  2  >>  31 ");  }  [BUGGY]      k++;  //  cast  out  twos.  }  }  if  (k  ==  31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }    int  t  =  ((u  &  1)  ==  1)  ?  v  :  -(u  /  2)/*  B3  */;    do  {  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  short  NS  PS  ZS  boolean  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  k  t  u  v  	projects/Math94/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	432	433	1	replace	safeThan(v)  {  throw  new  ArithmeticException( "overflow:  gcd  is  2  >>  31 ");  }	  safeThan    <    ArithmeticException.DEFAULT_NUMBER_ERROR)    {    throw    new    ArithmeticException(   "overflow:    gcd    is    2    >>    31   ");    }    	non-compiled	[CE]  <identifier>  expected	96	None	replace
56	[BUG]  [BUGGY]  safeThan  <  ArithmeticException.DEFAULT_NUMBER_ERROR)  {  throw  new  ArithmeticException( "overflow:  gcd  is  2  <  <  31 ");  }  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  v  /=  2;      [BUGGY]  safeThan  <  ArithmeticException.DEFAULT_NUMBER_ERROR)  {  throw  new  ArithmeticException( "overflow:  gcd  is  2  <  <  31 ");  }  [BUGGY]      k++;  //  cast  out  twos.  }  }  if  (k  ==  31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }    int  t  =  ((u  &  1)  ==  1)  ?  v  :  -(u  /  2)/*  B3  */;    do  {  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  short  NS  PS  ZS  boolean  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  k  t  u  v  	projects/Math94/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	432	433	1	replace	safeThan  <  ArithmeticException.DEFAULT_NUMBER_ERROR)  {  throw  new  ArithmeticException( "overflow:  gcd  is  2  <  <  31 ");  }	  safeThan    <    ArithmeticException.DEFAULT_NUMBER_ERROR)    {    throw    new    ArithmeticException(   "overflow:    gcd    is    2    >>    31   ");    }    	non-compiled	[CE]  <identifier>  expected	96	None	replace
57	[BUG]  [BUGGY]  safeThan(v)  {  throw  new  ArithmeticException( "overflow:  gcd  is  2  >=  31 ");  }  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  v  /=  2;      [BUGGY]  safeThan(v)  {  throw  new  ArithmeticException( "overflow:  gcd  is  2  >=  31 ");  }  [BUGGY]      k++;  //  cast  out  twos.  }  }  if  (k  ==  31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }    int  t  =  ((u  &  1)  ==  1)  ?  v  :  -(u  /  2)/*  B3  */;    do  {  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  short  NS  PS  ZS  boolean  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  k  t  u  v  	projects/Math94/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	432	433	1	replace	safeThan(v)  {  throw  new  ArithmeticException( "overflow:  gcd  is  2  >=  31 ");  }	  safeThan    <    ArithmeticException.DEFAULT_NUMBER_ERROR)    {    throw    new    ArithmeticException(   "overflow:    gcd    is    2    >>    31   ");    }    	non-compiled	[CE]  <identifier>  expected	96	None	replace
58	[BUG]  [BUGGY]  while(t  <  =  0)  {  for(int  k  =  0;  k  <  2;  k++)  {  throw  new  ArithmeticException( "Overflow:  gcd  is  2  >>  31 ");  }  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  v  /=  2;      [BUGGY]  while(t  <  =  0)  {  for(int  k  =  0;  k  <  2;  k++)  {  throw  new  ArithmeticException( "Overflow:  gcd  is  2  >>  31 ");  }  [BUGGY]      k++;  //  cast  out  twos.  }  }  if  (k  ==  31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }    int  t  =  ((u  &  1)  ==  1)  ?  v  :  -(u  /  2)/*  B3  */;    do  {  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  short  NS  PS  ZS  boolean  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  k  t  u  v  	projects/Math94/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	432	433	1	replace	while(t  <  =  0)  {  for(int  k  =  0;  k  <  2;  k++)  {  throw  new  ArithmeticException( "Overflow:  gcd  is  2  >>  31 ");  }	  while(t    <    0)    {    for(int    k    =    0;    k    <    2;    k++)    {    throw    new    ArithmeticException(   "Overflow:    gcd    is    2    >>    31   ");    }    	non-compiled	[CE]  <identifier>  expected	1	None	replace
59	[BUG]  [BUGGY]  while(t  >=  0)  {  for(int  k  =  0;  k  <  2;  k++)  {  throw  new  ArithmeticException( "Overflow:  gcd  is  2  >>  31 ");  }  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  v  /=  2;      [BUGGY]  while(t  >=  0)  {  for(int  k  =  0;  k  <  2;  k++)  {  throw  new  ArithmeticException( "Overflow:  gcd  is  2  >>  31 ");  }  [BUGGY]      k++;  //  cast  out  twos.  }  }  if  (k  ==  31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }    int  t  =  ((u  &  1)  ==  1)  ?  v  :  -(u  /  2)/*  B3  */;    do  {  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  short  NS  PS  ZS  boolean  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  k  t  u  v  	projects/Math94/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	432	433	1	replace	while(t  >=  0)  {  for(int  k  =  0;  k  <  2;  k++)  {  throw  new  ArithmeticException( "Overflow:  gcd  is  2  >>  31 ");  }	  while(t    <    0)    {    for(int    k    =    0;    k    <    2;    k++)    {    throw    new    ArithmeticException(   "Overflow:    gcd    is    2    >>    31   ");    }    	non-compiled	[CE]  <identifier>  expected	1	None	replace
60	[BUG]  [BUGGY]  while(t  >  0)  {  for(int  k  =  0;  k  <  2;  k++)  {  throw  new  ArithmeticException( "Overflow:  gcd  is  2  >=  31 ");  }  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  v  /=  2;      [BUGGY]  while(t  >  0)  {  for(int  k  =  0;  k  <  2;  k++)  {  throw  new  ArithmeticException( "Overflow:  gcd  is  2  >=  31 ");  }  [BUGGY]      k++;  //  cast  out  twos.  }  }  if  (k  ==  31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }    int  t  =  ((u  &  1)  ==  1)  ?  v  :  -(u  /  2)/*  B3  */;    do  {  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  short  NS  PS  ZS  boolean  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  k  t  u  v  	projects/Math94/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	432	433	1	replace	while(t  >  0)  {  for(int  k  =  0;  k  <  2;  k++)  {  throw  new  ArithmeticException( "Overflow:  gcd  is  2  >=  31 ");  }	  while(t    <    0)    {    for(int    k    =    0;    k    <    2;    k++)    {    throw    new    ArithmeticException(   "Overflow:    gcd    is    2    >>    31   ");    }    	non-compiled	[CE]  <identifier>  expected	1	None	replace
61	[BUG]  [BUGGY]  if(k  ==  31)  {  aughtException( "overflow:  gcd  is  2  {  31 ");  }  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  v  /=  2;      [BUGGY]  if(k  ==  31)  {  aughtException( "overflow:  gcd  is  2  {  31 ");  }  [BUGGY]      k++;  //  cast  out  twos.  }  }  if  (k  ==  31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }    int  t  =  ((u  &  1)  ==  1)  ?  v  :  -(u  /  2)/*  B3  */;    do  {  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  short  NS  PS  ZS  boolean  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  k  t  u  v  	projects/Math94/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	432	433	1	replace	if(k  ==  31)  {  aughtException( "overflow:  gcd  is  2  {  31 ");  }	  aughtException(   "overflow:    gcd    is    2    {    31   ");    	non-compiled	[CE]  <identifier>  expected	18	None	replace
62	[BUG]  [BUGGY]  if(k  <  31)  {  aughtException( "overflow:  gcd  is  2  {  31 ");  }  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  v  /=  2;      [BUGGY]  if(k  <  31)  {  aughtException( "overflow:  gcd  is  2  {  31 ");  }  [BUGGY]      k++;  //  cast  out  twos.  }  }  if  (k  ==  31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }    int  t  =  ((u  &  1)  ==  1)  ?  v  :  -(u  /  2)/*  B3  */;    do  {  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  short  NS  PS  ZS  boolean  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  k  t  u  v  	projects/Math94/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	432	433	1	replace	if(k  <  31)  {  aughtException( "overflow:  gcd  is  2  {  31 ");  }	  aughtException(   "overflow:    gcd    is    2    {    31   ");    	non-compiled	[CE]  <identifier>  expected	18	None	replace
63	[BUG]  [BUGGY]  if(k  ==  31)  {  aughtException( "Overflow:  gcd  is  2  {  31 ");  }  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  v  /=  2;      [BUGGY]  if(k  ==  31)  {  aughtException( "Overflow:  gcd  is  2  {  31 ");  }  [BUGGY]      k++;  //  cast  out  twos.  }  }  if  (k  ==  31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }    int  t  =  ((u  &  1)  ==  1)  ?  v  :  -(u  /  2)/*  B3  */;    do  {  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  short  NS  PS  ZS  boolean  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  k  t  u  v  	projects/Math94/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	432	433	1	replace	if(k  ==  31)  {  aughtException( "Overflow:  gcd  is  2  {  31 ");  }	  aughtException(   "overflow:    gcd    is    2    {    31   ");    	non-compiled	[CE]  <identifier>  expected	18	None	replace
64	[BUG]  [BUGGY]  safeThan(v)  {  throw  new  ArithmeticException( "overflow:  gcd  is  2  <  31 ");  }  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  v  /=  2;      [BUGGY]  safeThan(v)  {  throw  new  ArithmeticException( "overflow:  gcd  is  2  <  31 ");  }  [BUGGY]      k++;  //  cast  out  twos.  }  }  if  (k  ==  31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }    int  t  =  ((u  &  1)  ==  1)  ?  v  :  -(u  /  2)/*  B3  */;    do  {  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  short  NS  PS  ZS  boolean  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  k  t  u  v  	projects/Math94/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	432	433	1	replace	safeThan(v)  {  throw  new  ArithmeticException( "overflow:  gcd  is  2  <  31 ");  }	  safeThan    <    ArithmeticException.DEFAULT_NUMBER_ERROR)    {    throw    new    ArithmeticException(   "overflow:    gcd    is    2    >=    31   ");    }    	non-compiled	[CE]  <identifier>  expected	99	None	replace
65	[BUG]  [BUGGY]  aughtExceptionHandler.throwAsIgnoredException( " ");  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  v  /=  2;      [BUGGY]  aughtExceptionHandler.throwAsIgnoredException( " ");  [BUGGY]      }  if  (k  ==  31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }    int  t  =  ((u  &  1)  ==  1)  ?  v  :  -(u  /  2)/*  B3  */;    do  {  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  short  NS  PS  ZS  boolean  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  k  t  u  v  	projects/Math94/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	432	433	1	replace	aughtExceptionHandler.throwAsIgnoredException( " ");	  if(k    ==    31)    {    throw    new    ArithmeticException(   "overflow:    gcd    is    2    >>    31   ");    }    	non-compiled	[CE]  <identifier>  expected	92	None	replace
66	[BUG]  [BUGGY]  mutation( "overflow:  gcd  is  2 ");  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  v  /=  2;      [BUGGY]  mutation( "overflow:  gcd  is  2 ");  [BUGGY]      }  if  (k  ==  31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }    int  t  =  ((u  &  1)  ==  1)  ?  v  :  -(u  /  2)/*  B3  */;    do  {  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  short  NS  PS  ZS  boolean  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  k  t  u  v  	projects/Math94/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	432	433	1	replace	mutation( "overflow:  gcd  is  2 ");	  if(k    ==    31)    {    throw    new    ArithmeticException(   "overflow:    gcd    is    2    >>    31   ");    }    	non-compiled	[CE]  <identifier>  expected	92	None	replace
67	[BUG]  [BUGGY]  safeThan(v  <  ArithmeticException.DEFAULT_NUMBER_INT)  {  throw  new  ArithmeticException( "overflow:  gcd  is  2  >>  31 ");  }  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  v  /=  2;      [BUGGY]  safeThan(v  <  ArithmeticException.DEFAULT_NUMBER_INT)  {  throw  new  ArithmeticException( "overflow:  gcd  is  2  >>  31 ");  }  [BUGGY]      k++;  //  cast  out  twos.  }  }  if  (k  ==  31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }    int  t  =  ((u  &  1)  ==  1)  ?  v  :  -(u  /  2)/*  B3  */;    do  {  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  short  NS  PS  ZS  boolean  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  k  t  u  v  	projects/Math94/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	432	433	1	replace	safeThan(v  <  ArithmeticException.DEFAULT_NUMBER_INT)  {  throw  new  ArithmeticException( "overflow:  gcd  is  2  >>  31 ");  }	  safeThan    <    ArithmeticException.DEFAULT_NUMBER_INT)    {    throw    new    ArithmeticException(   "overflow:    gcd    is    2    >>    31   ");    }    	non-compiled	[CE]  <identifier>  expected	97	None	replace
68	[BUG]  [BUGGY]  safeThan  <  ArithmeticException.DEFAULT_NUMBER_INT)  {  throw  new  ArithmeticException( "overflow:  gcd  is  2   ");  }  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  v  /=  2;      [BUGGY]  safeThan  <  ArithmeticException.DEFAULT_NUMBER_INT)  {  throw  new  ArithmeticException( "overflow:  gcd  is  2   ");  }  [BUGGY]      k++;  //  cast  out  twos.  }  }  if  (k  ==  31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }    int  t  =  ((u  &  1)  ==  1)  ?  v  :  -(u  /  2)/*  B3  */;    do  {  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  short  NS  PS  ZS  boolean  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  k  t  u  v  	projects/Math94/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	432	433	1	replace	safeThan  <  ArithmeticException.DEFAULT_NUMBER_INT)  {  throw  new  ArithmeticException( "overflow:  gcd  is  2   ");  }	  safeThan    <    ArithmeticException.DEFAULT_NUMBER_INT)    {    throw    new    ArithmeticException(   "overflow:    gcd    is    2    >>    31   ");    }    	non-compiled	[CE]  <identifier>  expected	97	None	replace
69	[BUG]  [BUGGY]  safeThan(v  <  ArithmeticException.DEFAULT_NUMBER_INT)  {  throw  new  ArithmeticException( "overflow:  gcd  is  2  >=  31 ");  }  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  v  /=  2;      [BUGGY]  safeThan(v  <  ArithmeticException.DEFAULT_NUMBER_INT)  {  throw  new  ArithmeticException( "overflow:  gcd  is  2  >=  31 ");  }  [BUGGY]      k++;  //  cast  out  twos.  }  }  if  (k  ==  31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }    int  t  =  ((u  &  1)  ==  1)  ?  v  :  -(u  /  2)/*  B3  */;    do  {  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  short  NS  PS  ZS  boolean  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  k  t  u  v  	projects/Math94/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	432	433	1	replace	safeThan(v  <  ArithmeticException.DEFAULT_NUMBER_INT)  {  throw  new  ArithmeticException( "overflow:  gcd  is  2  >=  31 ");  }	  safeThan    <    ArithmeticException.DEFAULT_NUMBER_INT)    {    throw    new    ArithmeticException(   "overflow:    gcd    is    2    >>    31   ");    }    	non-compiled	[CE]  <identifier>  expected	97	None	replace
70	[BUG]  [BUGGY]  if(k  ==  31)  {  aughtException( "overflow:  gcd  is  2  >>  31 ");  }  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  v  /=  2;      [BUGGY]  if(k  ==  31)  {  aughtException( "overflow:  gcd  is  2  >>  31 ");  }  [BUGGY]      k++;  //  cast  out  twos.  }  }  if  (k  ==  31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }    int  t  =  ((u  &  1)  ==  1)  ?  v  :  -(u  /  2)/*  B3  */;    do  {  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  short  NS  PS  ZS  boolean  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  k  t  u  v  	projects/Math94/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	432	433	1	replace	if(k  ==  31)  {  aughtException( "overflow:  gcd  is  2  >>  31 ");  }	  aughtException(   "overflow:    gcd    is    2    >=    31   ");    	non-compiled	[CE]  <identifier>  expected	33	None	replace
71	[BUG]  [BUGGY]  if(k  ==  31)  {  aughtException( "overflow:  gcd  is  2  >=  31 ");  }  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  v  /=  2;      [BUGGY]  if(k  ==  31)  {  aughtException( "overflow:  gcd  is  2  >=  31 ");  }  [BUGGY]      k++;  //  cast  out  twos.  }  }  if  (k  ==  31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }    int  t  =  ((u  &  1)  ==  1)  ?  v  :  -(u  /  2)/*  B3  */;    do  {  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  short  NS  PS  ZS  boolean  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  k  t  u  v  	projects/Math94/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	432	433	1	replace	if(k  ==  31)  {  aughtException( "overflow:  gcd  is  2  >=  31 ");  }	  aughtException(   "overflow:    gcd    is    2    >=    31   ");    	non-compiled	[CE]  <identifier>  expected	33	None	replace
72	[BUG]  [BUGGY]  if(k  ==  31)  {  aughtException( "overflow:  gcd  is  2!=  31 ");  }  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  v  /=  2;      [BUGGY]  if(k  ==  31)  {  aughtException( "overflow:  gcd  is  2!=  31 ");  }  [BUGGY]      k++;  //  cast  out  twos.  }  }  if  (k  ==  31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }    int  t  =  ((u  &  1)  ==  1)  ?  v  :  -(u  /  2)/*  B3  */;    do  {  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  short  NS  PS  ZS  boolean  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  k  t  u  v  	projects/Math94/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	432	433	1	replace	if(k  ==  31)  {  aughtException( "overflow:  gcd  is  2!=  31 ");  }	  aughtException(   "overflow:    gcd    is    2    >=    31   ");    	non-compiled	[CE]  <identifier>  expected	33	None	replace
73	[BUG]  [BUGGY]  while(t  >=  0)  {  for(int  k  =  0;  k  <  2;  k++)  {  throw  new  ArithmeticException( "overflow:  gcd  is  2  {  31 ");  }  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  v  /=  2;      [BUGGY]  while(t  >=  0)  {  for(int  k  =  0;  k  <  2;  k++)  {  throw  new  ArithmeticException( "overflow:  gcd  is  2  {  31 ");  }  [BUGGY]      k++;  //  cast  out  twos.  }  }  if  (k  ==  31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }    int  t  =  ((u  &  1)  ==  1)  ?  v  :  -(u  /  2)/*  B3  */;    do  {  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  short  NS  PS  ZS  boolean  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  k  t  u  v  	projects/Math94/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	432	433	1	replace	while(t  >=  0)  {  for(int  k  =  0;  k  <  2;  k++)  {  throw  new  ArithmeticException( "overflow:  gcd  is  2  {  31 ");  }	  while(t    <    0)    {    for(int    k    =    0;    k    <    2;    k++)    {    throw    new    ArithmeticException(   "overflow:    gcd    is    2    ==    31   ");    }    	non-compiled	[CE]  <identifier>  expected	25	None	replace
74	[BUG]  [BUGGY]  while(v  <  0)  {  for(int  k  =  0;  k  <  2;  k++)  {  throw  new  ArithmeticException( "overflow:  gcd  is  2  {  31 ");  }  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  v  /=  2;      [BUGGY]  while(v  <  0)  {  for(int  k  =  0;  k  <  2;  k++)  {  throw  new  ArithmeticException( "overflow:  gcd  is  2  {  31 ");  }  [BUGGY]      k++;  //  cast  out  twos.  }  }  if  (k  ==  31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }    int  t  =  ((u  &  1)  ==  1)  ?  v  :  -(u  /  2)/*  B3  */;    do  {  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  short  NS  PS  ZS  boolean  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  k  t  u  v  	projects/Math94/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	432	433	1	replace	while(v  <  0)  {  for(int  k  =  0;  k  <  2;  k++)  {  throw  new  ArithmeticException( "overflow:  gcd  is  2  {  31 ");  }	  while(t    <    0)    {    for(int    k    =    0;    k    <    2;    k++)    {    throw    new    ArithmeticException(   "overflow:    gcd    is    2    ==    31   ");    }    	non-compiled	[CE]  <identifier>  expected	25	None	replace
75	[BUG]  [BUGGY]  while(t  <  =  0)  {  for(int  k  =  0;  k  <  2;  k++)  {  throw  new  ArithmeticException( "overflow:  gcd  is  2  ==  31 ");  }  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  v  /=  2;      [BUGGY]  while(t  <  =  0)  {  for(int  k  =  0;  k  <  2;  k++)  {  throw  new  ArithmeticException( "overflow:  gcd  is  2  ==  31 ");  }  [BUGGY]      k++;  //  cast  out  twos.  }  }  if  (k  ==  31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }    int  t  =  ((u  &  1)  ==  1)  ?  v  :  -(u  /  2)/*  B3  */;    do  {  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  short  NS  PS  ZS  boolean  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  k  t  u  v  	projects/Math94/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	432	433	1	replace	while(t  <  =  0)  {  for(int  k  =  0;  k  <  2;  k++)  {  throw  new  ArithmeticException( "overflow:  gcd  is  2  ==  31 ");  }	  while(t    <    0)    {    for(int    k    =    0;    k    <    2;    k++)    {    throw    new    ArithmeticException(   "overflow:    gcd    is    2    ==    31   ");    }    	non-compiled	[CE]  <identifier>  expected	25	None	replace
76	[BUG]  [BUGGY]  if(t  >  0)  {  if(v  <  31)  {  k++;  }  else  {  throw  new  ArithmeticException( "overflow:  gcd  is  2  >>  31 ");  }  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  v  /=  2;      [BUGGY]  if(t  >  0)  {  if(v  <  31)  {  k++;  }  else  {  throw  new  ArithmeticException( "overflow:  gcd  is  2  >>  31 ");  }  [BUGGY]      }  if  (k  ==  31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }    int  t  =  ((u  &  1)  ==  1)  ?  v  :  -(u  /  2)/*  B3  */;    do  {  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  short  NS  PS  ZS  boolean  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  k  t  u  v  	projects/Math94/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	432	433	1	replace	if(t  >  0)  {  if(v  <  31)  {  k++;  }  else  {  throw  new  ArithmeticException( "overflow:  gcd  is  2  >>  31 ");  }	  if(v    <    31)    {    k++;    }    else    {    throw    new    ArithmeticException(   "overflow:    gcd    is    2    >>    31   ");    }    	non-compiled	[CE]  <identifier>  expected	127	None	replace
77	[BUG]  [BUGGY]  if(t  >  0)  {  if(v  <  31)  {  k++;  }  else  {  throw  new  ArithmeticException( "overflow:  gcd  is  2  >=  31 ");  }  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  v  /=  2;      [BUGGY]  if(t  >  0)  {  if(v  <  31)  {  k++;  }  else  {  throw  new  ArithmeticException( "overflow:  gcd  is  2  >=  31 ");  }  [BUGGY]      }  if  (k  ==  31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }    int  t  =  ((u  &  1)  ==  1)  ?  v  :  -(u  /  2)/*  B3  */;    do  {  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  short  NS  PS  ZS  boolean  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  k  t  u  v  	projects/Math94/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	432	433	1	replace	if(t  >  0)  {  if(v  <  31)  {  k++;  }  else  {  throw  new  ArithmeticException( "overflow:  gcd  is  2  >=  31 ");  }	  if(v    <    31)    {    k++;    }    else    {    throw    new    ArithmeticException(   "overflow:    gcd    is    2    >>    31   ");    }    	non-compiled	[CE]  <identifier>  expected	127	None	replace
78	[BUG]  [BUGGY]  if(t  >  0)  {  if(v  <  31)  {  k++;  }  else  {  throw  new  ArithmeticException( "overflow:  gcd  is  2  ==  31 ");  }  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  v  /=  2;      [BUGGY]  if(t  >  0)  {  if(v  <  31)  {  k++;  }  else  {  throw  new  ArithmeticException( "overflow:  gcd  is  2  ==  31 ");  }  [BUGGY]      }  if  (k  ==  31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }    int  t  =  ((u  &  1)  ==  1)  ?  v  :  -(u  /  2)/*  B3  */;    do  {  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  short  NS  PS  ZS  boolean  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  k  t  u  v  	projects/Math94/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	432	433	1	replace	if(t  >  0)  {  if(v  <  31)  {  k++;  }  else  {  throw  new  ArithmeticException( "overflow:  gcd  is  2  ==  31 ");  }	  if(v    <    31)    {    k++;    }    else    {    throw    new    ArithmeticException(   "overflow:    gcd    is    2    >>    31   ");    }    	non-compiled	[CE]  <identifier>  expected	127	None	replace
79	[BUG]  [BUGGY]  try  {  [Delete]  catch(Exception  e)  {  throw  new  ArithmeticException( "Overflow:  gcd  is  2  <  31 ");  }  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  v  /=  2;      [BUGGY]  try  {  [Delete]  catch(Exception  e)  {  throw  new  ArithmeticException( "Overflow:  gcd  is  2  <  31 ");  }  [BUGGY]      }  if  (k  ==  31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }    int  t  =  ((u  &  1)  ==  1)  ?  v  :  -(u  /  2)/*  B3  */;    do  {  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  short  NS  PS  ZS  boolean  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  k  t  u  v  	projects/Math94/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	432	433	1	replace	try  {  [Delete]  catch(Exception  e)  {  throw  new  ArithmeticException( "Overflow:  gcd  is  2  <  31 ");  }	  if(t    ==    0)    {    throw    new    ArithmeticException(   "Overflow:    gcd    is    2    <    31       ");    }    	non-compiled	[CE]  <identifier>  expected	13	None	replace
80	[BUG]  [BUGGY]  mutation(t  ==  0)  {  throw  new  ArithmeticException( "Overflow:  gcd  is  2  <  31 ");  }  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  v  /=  2;      [BUGGY]  mutation(t  ==  0)  {  throw  new  ArithmeticException( "Overflow:  gcd  is  2  <  31 ");  }  [BUGGY]      }  if  (k  ==  31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }    int  t  =  ((u  &  1)  ==  1)  ?  v  :  -(u  /  2)/*  B3  */;    do  {  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  short  NS  PS  ZS  boolean  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  k  t  u  v  	projects/Math94/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	432	433	1	replace	mutation(t  ==  0)  {  throw  new  ArithmeticException( "Overflow:  gcd  is  2  <  31 ");  }	  if(t    ==    0)    {    throw    new    ArithmeticException(   "Overflow:    gcd    is    2    <    31       ");    }    	non-compiled	[CE]  <identifier>  expected	13	None	replace
81	[BUG]  [BUGGY]  try  {  [Delete]  catch(IllegalArgumentException  e)  {  throw  new  ArithmeticException( "Overflow:  gcd  is  2  <  31 ");  }  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]      }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  v  /=  2;      [BUGGY]  try  {  [Delete]  catch(IllegalArgumentException  e)  {  throw  new  ArithmeticException( "Overflow:  gcd  is  2  <  31 ");  }  [BUGGY]      }  if  (k  ==  31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }    int  t  =  ((u  &  1)  ==  1)  ?  v  :  -(u  /  2)/*  B3  */;    do  {  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  short  NS  PS  ZS  boolean  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  k  t  u  v  	projects/Math94/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	432	433	1	replace	try  {  [Delete]  catch(IllegalArgumentException  e)  {  throw  new  ArithmeticException( "Overflow:  gcd  is  2  <  31 ");  }	  if(t    ==    0)    {    throw    new    ArithmeticException(   "Overflow:    gcd    is    2    <    31       ");    }    	non-compiled	[CE]  <identifier>  expected	13	None	replace
82	[BUG]  [BUGGY]  try  {  [Delete]  catch(IllegalArgumentException  t)  {  throw  new  ArithmeticException( "Overflow:  gcd  is  2  <  31 ");  }  [CE]  <identifier>  expected  [FE]                          AssertionFailedError      [CONTEXT]      }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  v  /=  2;      [BUGGY]  try  {  [Delete]  catch(IllegalArgumentException  t)  {  throw  new  ArithmeticException( "Overflow:  gcd  is  2  <  31 ");  }  [BUGGY]      }  if  (k  ==  31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }    int  t  =  ((u  &  1)  ==  1)  ?  v  :  -(u  /  2)/*  B3  */;    do  {  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  short  NS  PS  ZS  boolean  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  k  t  u  v  	projects/Math94/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	432	433	1	replace	try  {  [Delete]  catch(IllegalArgumentException  t)  {  throw  new  ArithmeticException( "Overflow:  gcd  is  2  <  31 ");  }	  if(t    ==    0)    {    throw    new    ArithmeticException(   "Overflow:    gcd    is    2    <    31       ");    }    	non-compiled	[CE]  <identifier>  expected	13	None	replace
83	[BUG]  [BUGGY]  while(v  >  0)  {  for(int  k  =  0;  k  <  2;  k++)  {  throw  new  ArithmeticException( "overflow:  gcd  is  2  {  31 ");  }  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  v  /=  2;      [BUGGY]  while(v  >  0)  {  for(int  k  =  0;  k  <  2;  k++)  {  throw  new  ArithmeticException( "overflow:  gcd  is  2  {  31 ");  }  [BUGGY]      k++;  //  cast  out  twos.  }  }  if  (k  ==  31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }    int  t  =  ((u  &  1)  ==  1)  ?  v  :  -(u  /  2)/*  B3  */;    do  {  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  short  NS  PS  ZS  boolean  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  k  t  u  v  	projects/Math94/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	432	433	1	replace	while(v  >  0)  {  for(int  k  =  0;  k  <  2;  k++)  {  throw  new  ArithmeticException( "overflow:  gcd  is  2  {  31 ");  }	  while(t    >    0)    {    for(int    k    =    0;    k    <    2;    k++)    {    throw    new    ArithmeticException(   "overflow:    gcd    is    2    ==    31   ");    }    	non-compiled	[CE]  <identifier>  expected	27	None	replace
84	[BUG]  [BUGGY]  while(t  <  =  0)  {  for(int  k  =  0;  k  <  2;  k++)  {  throw  new  ArithmeticException( "overflow:  gcd  is  2  {  31 ");  }  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  v  /=  2;      [BUGGY]  while(t  <  =  0)  {  for(int  k  =  0;  k  <  2;  k++)  {  throw  new  ArithmeticException( "overflow:  gcd  is  2  {  31 ");  }  [BUGGY]      k++;  //  cast  out  twos.  }  }  if  (k  ==  31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }    int  t  =  ((u  &  1)  ==  1)  ?  v  :  -(u  /  2)/*  B3  */;    do  {  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  short  NS  PS  ZS  boolean  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  k  t  u  v  	projects/Math94/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	432	433	1	replace	while(t  <  =  0)  {  for(int  k  =  0;  k  <  2;  k++)  {  throw  new  ArithmeticException( "overflow:  gcd  is  2  {  31 ");  }	  while(t    >    0)    {    for(int    k    =    0;    k    <    2;    k++)    {    throw    new    ArithmeticException(   "overflow:    gcd    is    2    ==    31   ");    }    	non-compiled	[CE]  <identifier>  expected	27	None	replace
85	[BUG]  [BUGGY]  if(k  ==  0)  {  k++;  //  cast  out  twos.  }  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  v  /=  2;      [BUGGY]  if(k  ==  0)  {  k++;  //  cast  out  twos.  }  [BUGGY]      }  if  (k  ==  31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }    int  t  =  ((u  &  1)  ==  1)  ?  v  :  -(u  /  2)/*  B3  */;    do  {  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  short  NS  PS  ZS  boolean  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  k  t  u  v  	projects/Math94/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	432	433	1	replace	if(k  ==  0)  {  k++;  //  cast  out  twos.  }	  if(t    ==    0)    {    k++;    //    cast    out    twos.    }    	non-compiled	[CE]  <identifier>  expected	23	None	replace
86	[BUG]  [BUGGY]  if(k  >=  31)  {  k++;  }  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  v  /=  2;      [BUGGY]  if(k  >=  31)  {  k++;  }  [BUGGY]      }  if  (k  ==  31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }    int  t  =  ((u  &  1)  ==  1)  ?  v  :  -(u  /  2)/*  B3  */;    do  {  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  short  NS  PS  ZS  boolean  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  k  t  u  v  	projects/Math94/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	432	433	1	replace	if(k  >=  31)  {  k++;  }	  if(k    >=    31)    {    k++;    //    cast    out    twos.    }    	non-compiled	[CE]  <identifier>  expected	69	None	replace
87	[BUG]  [BUGGY]  aught(new  ArithmeticException( "gcd  is  2  {  31 "));  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  v  /=  2;      [BUGGY]  aught(new  ArithmeticException( "gcd  is  2  {  31 "));  [BUGGY]      k++;  //  cast  out  twos.  }  }  if  (k  ==  31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }    int  t  =  ((u  &  1)  ==  1)  ?  v  :  -(u  /  2)/*  B3  */;    do  {  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  short  NS  PS  ZS  boolean  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  k  t  u  v  	projects/Math94/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	432	433	1	replace	aught(new  ArithmeticException( "gcd  is  2  {  31 "));	  aught(new    ArithmeticException(   "overflow:    gcd    is    2    {    31   "));    	non-compiled	[CE]  <identifier>  expected	107	None	replace
88	[BUG]  [BUGGY]  aught(new  ArithmeticException( "Overflow:  gcd  is  2  {  31   "));  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  v  /=  2;      [BUGGY]  aught(new  ArithmeticException( "Overflow:  gcd  is  2  {  31   "));  [BUGGY]      k++;  //  cast  out  twos.  }  }  if  (k  ==  31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }    int  t  =  ((u  &  1)  ==  1)  ?  v  :  -(u  /  2)/*  B3  */;    do  {  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  short  NS  PS  ZS  boolean  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  k  t  u  v  	projects/Math94/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	432	433	1	replace	aught(new  ArithmeticException( "Overflow:  gcd  is  2  {  31   "));	  aught(new    ArithmeticException(   "overflow:    gcd    is    2    {    31   "));    	non-compiled	[CE]  <identifier>  expected	107	None	replace
89	[BUG]  [BUGGY]  aught(new  ArithmeticException( "overflow:  gcd  is  2  {  3  }   "));  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  v  /=  2;      [BUGGY]  aught(new  ArithmeticException( "overflow:  gcd  is  2  {  3  }   "));  [BUGGY]      k++;  //  cast  out  twos.  }  }  if  (k  ==  31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }    int  t  =  ((u  &  1)  ==  1)  ?  v  :  -(u  /  2)/*  B3  */;    do  {  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  short  NS  PS  ZS  boolean  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  k  t  u  v  	projects/Math94/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	432	433	1	replace	aught(new  ArithmeticException( "overflow:  gcd  is  2  {  3  }   "));	  aught(new    ArithmeticException(   "overflow:    gcd    is    2    {    31   "));    	non-compiled	[CE]  <identifier>  expected	107	None	replace
90	[BUG]  [BUGGY]  int  k  =  ((  u  &  1)  ==  1  &&  v  &  1)  ==  1  &&  k  <  32)?  -(u  /  2)/*  B3  */;  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  v  /=  2;      [BUGGY]  int  k  =  ((  u  &  1)  ==  1  &&  v  &  1)  ==  1  &&  k  <  32)?  -(u  /  2)/*  B3  */;  [BUGGY]      k++;  //  cast  out  twos.  }  }  if  (k  ==  31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }    int  t  =  ((u  &  1)  ==  1)  ?  v  :  -(u  /  2)/*  B3  */;    do  {  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  short  NS  PS  ZS  boolean  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  k  t  u  v  	projects/Math94/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	432	433	1	replace	int  k  =  ((  u  &  1)  ==  1  &&  v  &  1)  ==  1  &&  k  <  32)?  -(u  /  2)/*  B3  */;	  int    k    =    ((    u    &    1)    ==    0    &&    v    &    1)    ==    0    &&    k    <    32)?    -(u    /    2)/*    B3    */;    	non-compiled	[CE]  <identifier>  expected	71	None	replace
91	[BUG]  [BUGGY]  Mutation(t  >  0)  {  throw  new  ArithmeticException( "Overflow:  gcd  is  2  {  31 ");  }  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  v  /=  2;      [BUGGY]  Mutation(t  >  0)  {  throw  new  ArithmeticException( "Overflow:  gcd  is  2  {  31 ");  }  [BUGGY]      k++;  //  cast  out  twos.  }  }  if  (k  ==  31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }    int  t  =  ((u  &  1)  ==  1)  ?  v  :  -(u  /  2)/*  B3  */;    do  {  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  short  NS  PS  ZS  boolean  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  k  t  u  v  	projects/Math94/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	432	433	1	replace	Mutation(t  >  0)  {  throw  new  ArithmeticException( "Overflow:  gcd  is  2  {  31 ");  }	  mutation(t    >    0)    {    throw    new    ArithmeticException(   "Overflow:    gcd    is    2    ==    31   ");    }    	non-compiled	[CE]  <identifier>  expected	58	None	replace
92	[BUG]  [BUGGY]  Mutation(t  >  0)  {  throw  new  ArithmeticException( "Overflow:  gcd  is  2  ==  31 ");  }  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  v  /=  2;      [BUGGY]  Mutation(t  >  0)  {  throw  new  ArithmeticException( "Overflow:  gcd  is  2  ==  31 ");  }  [BUGGY]      k++;  //  cast  out  twos.  }  }  if  (k  ==  31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }    int  t  =  ((u  &  1)  ==  1)  ?  v  :  -(u  /  2)/*  B3  */;    do  {  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  short  NS  PS  ZS  boolean  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  k  t  u  v  	projects/Math94/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	432	433	1	replace	Mutation(t  >  0)  {  throw  new  ArithmeticException( "Overflow:  gcd  is  2  ==  31 ");  }	  mutation(t    >    0)    {    throw    new    ArithmeticException(   "Overflow:    gcd    is    2    ==    31   ");    }    	non-compiled	[CE]  <identifier>  expected	58	None	replace
93	[BUG]  [BUGGY]  while(t  <  =  0)  {  for(int  k  =  0;  k  <  2;  k++)  {  throw  new  ArithmeticException( "overflow:  Gcd  is  2  >>  31 ");  }  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  v  /=  2;      [BUGGY]  while(t  <  =  0)  {  for(int  k  =  0;  k  <  2;  k++)  {  throw  new  ArithmeticException( "overflow:  Gcd  is  2  >>  31 ");  }  [BUGGY]      k++;  //  cast  out  twos.  }  }  if  (k  ==  31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }    int  t  =  ((u  &  1)  ==  1)  ?  v  :  -(u  /  2)/*  B3  */;    do  {  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  short  NS  PS  ZS  boolean  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  k  t  u  v  	projects/Math94/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	432	433	1	replace	while(t  <  =  0)  {  for(int  k  =  0;  k  <  2;  k++)  {  throw  new  ArithmeticException( "overflow:  Gcd  is  2  >>  31 ");  }	  while(t    <    0)    {    for(int    k    =    0;    k    <    2;    k++)    {    throw    new    ArithmeticException(   "overflow:    Gcd    is    2    >>    31   ");    }    	non-compiled	[CE]  <identifier>  expected	48	None	replace
94	[BUG]  [BUGGY]  while(t  >=  0)  {  for(int  k  =  0;  k  <  2;  k++)  {  throw  new  ArithmeticException( "overflow:  Gcd  is  2  >>  31 ");  }  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  v  /=  2;      [BUGGY]  while(t  >=  0)  {  for(int  k  =  0;  k  <  2;  k++)  {  throw  new  ArithmeticException( "overflow:  Gcd  is  2  >>  31 ");  }  [BUGGY]      k++;  //  cast  out  twos.  }  }  if  (k  ==  31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }    int  t  =  ((u  &  1)  ==  1)  ?  v  :  -(u  /  2)/*  B3  */;    do  {  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  short  NS  PS  ZS  boolean  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  k  t  u  v  	projects/Math94/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	432	433	1	replace	while(t  >=  0)  {  for(int  k  =  0;  k  <  2;  k++)  {  throw  new  ArithmeticException( "overflow:  Gcd  is  2  >>  31 ");  }	  while(t    <    0)    {    for(int    k    =    0;    k    <    2;    k++)    {    throw    new    ArithmeticException(   "overflow:    Gcd    is    2    >>    31   ");    }    	non-compiled	[CE]  <identifier>  expected	48	None	replace
95	[BUG]  [BUGGY]  while(v  <  0)  {  for(int  k  =  0;  k  <  2;  k++)  {  throw  new  ArithmeticException( "overflow:  Gcd  is  2  >>  31 ");  }  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  v  /=  2;      [BUGGY]  while(v  <  0)  {  for(int  k  =  0;  k  <  2;  k++)  {  throw  new  ArithmeticException( "overflow:  Gcd  is  2  >>  31 ");  }  [BUGGY]      k++;  //  cast  out  twos.  }  }  if  (k  ==  31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }    int  t  =  ((u  &  1)  ==  1)  ?  v  :  -(u  /  2)/*  B3  */;    do  {  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  short  NS  PS  ZS  boolean  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  k  t  u  v  	projects/Math94/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	432	433	1	replace	while(v  <  0)  {  for(int  k  =  0;  k  <  2;  k++)  {  throw  new  ArithmeticException( "overflow:  Gcd  is  2  >>  31 ");  }	  while(t    <    0)    {    for(int    k    =    0;    k    <    2;    k++)    {    throw    new    ArithmeticException(   "overflow:    Gcd    is    2    >>    31   ");    }    	non-compiled	[CE]  <identifier>  expected	48	None	replace
96	[BUG]  [BUGGY]  try  {  [Delete]  catch(Exception  e)  {  throw  new  ArithmeticException( "overflow:  gcd  is  2  <  31 ");  }  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  v  /=  2;      [BUGGY]  try  {  [Delete]  catch(Exception  e)  {  throw  new  ArithmeticException( "overflow:  gcd  is  2  <  31 ");  }  [BUGGY]      }  if  (k  ==  31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }    int  t  =  ((u  &  1)  ==  1)  ?  v  :  -(u  /  2)/*  B3  */;    do  {  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  short  NS  PS  ZS  boolean  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  k  t  u  v  	projects/Math94/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	432	433	1	replace	try  {  [Delete]  catch(Exception  e)  {  throw  new  ArithmeticException( "overflow:  gcd  is  2  <  31 ");  }	  if(t    ==    0)    {    throw    new    ArithmeticException(   "overflow:    gcd    is    2    <    31       ");    }    	non-compiled	[CE]  <identifier>  expected	12	None	replace
97	[BUG]  [BUGGY]  aughtException( "overflow:  gcd  is  2  <  31 ");  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  v  /=  2;      [BUGGY]  aughtException( "overflow:  gcd  is  2  <  31 ");  [BUGGY]      }  if  (k  ==  31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }    int  t  =  ((u  &  1)  ==  1)  ?  v  :  -(u  /  2)/*  B3  */;    do  {  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  short  NS  PS  ZS  boolean  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  k  t  u  v  	projects/Math94/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	432	433	1	replace	aughtException( "overflow:  gcd  is  2  <  31 ");	  if(t    ==    0)    {    throw    new    ArithmeticException(   "overflow:    gcd    is    2    <    31       ");    }    	non-compiled	[CE]  <identifier>  expected	12	None	replace
98	[BUG]  [BUGGY]  aughtException( "Overflow:  gcd  is  2  <  31 ");  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  v  /=  2;      [BUGGY]  aughtException( "Overflow:  gcd  is  2  <  31 ");  [BUGGY]      }  if  (k  ==  31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }    int  t  =  ((u  &  1)  ==  1)  ?  v  :  -(u  /  2)/*  B3  */;    do  {  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  short  NS  PS  ZS  boolean  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  k  t  u  v  	projects/Math94/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	432	433	1	replace	aughtException( "Overflow:  gcd  is  2  <  31 ");	  if(t    ==    0)    {    throw    new    ArithmeticException(   "overflow:    gcd    is    2    <    31       ");    }    	non-compiled	[CE]  <identifier>  expected	12	None	replace
99	[BUG]  [BUGGY]  if(t  >  0)  {  if(k  >=  31)  {  k++;  }  else  {  throw  new  ArithmeticException( "Overflow:  gcd  is  2  >>  31 ");  }  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  v  /=  2;      [BUGGY]  if(t  >  0)  {  if(k  >=  31)  {  k++;  }  else  {  throw  new  ArithmeticException( "Overflow:  gcd  is  2  >>  31 ");  }  [BUGGY]      }  if  (k  ==  31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }    int  t  =  ((u  &  1)  ==  1)  ?  v  :  -(u  /  2)/*  B3  */;    do  {  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  short  NS  PS  ZS  boolean  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  k  t  u  v  	projects/Math94/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	432	433	1	replace	if(t  >  0)  {  if(k  >=  31)  {  k++;  }  else  {  throw  new  ArithmeticException( "Overflow:  gcd  is  2  >>  31 ");  }	  if(k    >=    31)    {    k++;    }    else    {    throw    new    ArithmeticException(   "Overflow:    gcd    is    2    >>    31   ");    }    	non-compiled	[CE]  <identifier>  expected	130	None	replace
100	[BUG]  [BUGGY]  if(t  >  0)  {  k++;  }  else  {  throw  new  ArithmeticException( "Overflow:  gcd  is  2  ==  31 ");  }  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  v  /=  2;      [BUGGY]  if(t  >  0)  {  k++;  }  else  {  throw  new  ArithmeticException( "Overflow:  gcd  is  2  ==  31 ");  }  [BUGGY]      }  if  (k  ==  31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }    int  t  =  ((u  &  1)  ==  1)  ?  v  :  -(u  /  2)/*  B3  */;    do  {  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  short  NS  PS  ZS  boolean  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  k  t  u  v  	projects/Math94/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	432	433	1	replace	if(t  >  0)  {  k++;  }  else  {  throw  new  ArithmeticException( "Overflow:  gcd  is  2  ==  31 ");  }	  if(k    >=    31)    {    k++;    }    else    {    throw    new    ArithmeticException(   "Overflow:    gcd    is    2    >>    31   ");    }    	non-compiled	[CE]  <identifier>  expected	130	None	replace
101	[BUG]  [BUGGY]  while(t  <  =  0)  {  for(int  k  =  0;  k  <  2;  k++)  {  throw  new  ArithmeticException( "overflow:  gcd  is  2  >>  31 ");  }  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]      }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  v  /=  2;      [BUGGY]  while(t  <  =  0)  {  for(int  k  =  0;  k  <  2;  k++)  {  throw  new  ArithmeticException( "overflow:  gcd  is  2  >>  31 ");  }  [BUGGY]      k++;  //  cast  out  twos.  }  }  if  (k  ==  31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }    int  t  =  ((u  &  1)  ==  1)  ?  v  :  -(u  /  2)/*  B3  */;    do  {  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  short  NS  PS  ZS  boolean  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  k  t  u  v  	projects/Math94/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	432	433	1	replace	while(t  <  =  0)  {  for(int  k  =  0;  k  <  2;  k++)  {  throw  new  ArithmeticException( "overflow:  gcd  is  2  >>  31 ");  }	  while(t    <    0)    {    for(int    k    =    0;    k    <    2;    k++)    {    throw    new    ArithmeticException(   "overflow:    gcd    is    2    >>    31   ");    }    	non-compiled	[CE]  <identifier>  expected	4	None	replace
102	[BUG]  [BUGGY]  while(t  >=  0)  {  for(int  k  =  0;  k  <  2;  k++)  {  throw  new  ArithmeticException( "overflow:  gcd  is  2  >>  31 ");  }  [CE]  <identifier>  expected  [FE]                          AssertionFailedError      [CONTEXT]      }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  v  /=  2;      [BUGGY]  while(t  >=  0)  {  for(int  k  =  0;  k  <  2;  k++)  {  throw  new  ArithmeticException( "overflow:  gcd  is  2  >>  31 ");  }  [BUGGY]      k++;  //  cast  out  twos.  }  }  if  (k  ==  31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }    int  t  =  ((u  &  1)  ==  1)  ?  v  :  -(u  /  2)/*  B3  */;    do  {  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  short  NS  PS  ZS  boolean  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  k  t  u  v  	projects/Math94/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	432	433	1	replace	while(t  >=  0)  {  for(int  k  =  0;  k  <  2;  k++)  {  throw  new  ArithmeticException( "overflow:  gcd  is  2  >>  31 ");  }	  while(t    <    0)    {    for(int    k    =    0;    k    <    2;    k++)    {    throw    new    ArithmeticException(   "overflow:    gcd    is    2    >>    31   ");    }    	non-compiled	[CE]  <identifier>  expected	4	None	replace
103	[BUG]  [BUGGY]  while(v  <  0)  {  for(int  k  =  0;  k  <  2;  k++)  {  throw  new  ArithmeticException( "overflow:  gcd  is  2  >>  31 ");  }  [CE]  <identifier>  expected  [FE]                            AssertionFailedError      [CONTEXT]      }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  v  /=  2;      [BUGGY]  while(v  <  0)  {  for(int  k  =  0;  k  <  2;  k++)  {  throw  new  ArithmeticException( "overflow:  gcd  is  2  >>  31 ");  }  [BUGGY]      k++;  //  cast  out  twos.  }  }  if  (k  ==  31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }    int  t  =  ((u  &  1)  ==  1)  ?  v  :  -(u  /  2)/*  B3  */;    do  {  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  short  NS  PS  ZS  boolean  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  k  t  u  v  	projects/Math94/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	432	433	1	replace	while(v  <  0)  {  for(int  k  =  0;  k  <  2;  k++)  {  throw  new  ArithmeticException( "overflow:  gcd  is  2  >>  31 ");  }	  while(t    <    0)    {    for(int    k    =    0;    k    <    2;    k++)    {    throw    new    ArithmeticException(   "overflow:    gcd    is    2    >>    31   ");    }    	non-compiled	[CE]  <identifier>  expected	4	None	replace
104	[BUG]  [BUGGY]  while(t  >  0)  {  for(int  k  =  0;  k  <  2;  k++)  {  throw  new  ArithmeticException( "overflow:  Gcd  is  2  >=  31 ");  }  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  v  /=  2;      [BUGGY]  while(t  >  0)  {  for(int  k  =  0;  k  <  2;  k++)  {  throw  new  ArithmeticException( "overflow:  Gcd  is  2  >=  31 ");  }  [BUGGY]      k++;  //  cast  out  twos.  }  }  if  (k  ==  31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }    int  t  =  ((u  &  1)  ==  1)  ?  v  :  -(u  /  2)/*  B3  */;    do  {  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  short  NS  PS  ZS  boolean  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  k  t  u  v  	projects/Math94/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	432	433	1	replace	while(t  >  0)  {  for(int  k  =  0;  k  <  2;  k++)  {  throw  new  ArithmeticException( "overflow:  Gcd  is  2  >=  31 ");  }	  while(t    <    0)    {    for(int    k    =    0;    k    <    2;    k++)    {    throw    new    ArithmeticException(   "overflow:    Gcd    is    2    >=    31   ");    }    	non-compiled	[CE]  <identifier>  expected	78	None	replace
105	[BUG]  [BUGGY]  Mutation(t  >  0)  {  k++;  }  else  {  throw  new  ArithmeticException( "overflow:  gcd  is  2  ==  31 ");  }  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  v  /=  2;      [BUGGY]  Mutation(t  >  0)  {  k++;  }  else  {  throw  new  ArithmeticException( "overflow:  gcd  is  2  ==  31 ");  }  [BUGGY]      }  if  (k  ==  31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }    int  t  =  ((u  &  1)  ==  1)  ?  v  :  -(u  /  2)/*  B3  */;    do  {  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  short  NS  PS  ZS  boolean  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  k  t  u  v  	projects/Math94/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	432	433	1	replace	Mutation(t  >  0)  {  k++;  }  else  {  throw  new  ArithmeticException( "overflow:  gcd  is  2  ==  31 ");  }	  mutation(t    >    0)    {    k++;    }    else    {    throw    new    ArithmeticException(   "overflow:    gcd    is    2    ==    31   ");    }    	non-compiled	[CE]  <identifier>  expected	53	None	replace
106	[BUG]  [BUGGY]  Mutation(t  >  0)  {  k++;  }  else  {  throw  new  ArithmeticException( "overflow:  gcd  is  2  {  31 ");  }  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  v  /=  2;      [BUGGY]  Mutation(t  >  0)  {  k++;  }  else  {  throw  new  ArithmeticException( "overflow:  gcd  is  2  {  31 ");  }  [BUGGY]      }  if  (k  ==  31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }    int  t  =  ((u  &  1)  ==  1)  ?  v  :  -(u  /  2)/*  B3  */;    do  {  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  short  NS  PS  ZS  boolean  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  k  t  u  v  	projects/Math94/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	432	433	1	replace	Mutation(t  >  0)  {  k++;  }  else  {  throw  new  ArithmeticException( "overflow:  gcd  is  2  {  31 ");  }	  mutation(t    >    0)    {    k++;    }    else    {    throw    new    ArithmeticException(   "overflow:    gcd    is    2    ==    31   ");    }    	non-compiled	[CE]  <identifier>  expected	53	None	replace
107	[BUG]  [BUGGY]  Mutation(t  >  0)  {  k++;  }  else  {  throw  new  ArithmeticException( "overflow:  gcd  is  2  >>  31 ");  }  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  v  /=  2;      [BUGGY]  Mutation(t  >  0)  {  k++;  }  else  {  throw  new  ArithmeticException( "overflow:  gcd  is  2  >>  31 ");  }  [BUGGY]      }  if  (k  ==  31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }    int  t  =  ((u  &  1)  ==  1)  ?  v  :  -(u  /  2)/*  B3  */;    do  {  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  short  NS  PS  ZS  boolean  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  k  t  u  v  	projects/Math94/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	432	433	1	replace	Mutation(t  >  0)  {  k++;  }  else  {  throw  new  ArithmeticException( "overflow:  gcd  is  2  >>  31 ");  }	  mutation(t    >    0)    {    k++;    }    else    {    throw    new    ArithmeticException(   "overflow:    gcd    is    2    ==    31   ");    }    	non-compiled	[CE]  <identifier>  expected	53	None	replace
108	[BUG]  [BUGGY]  Mutation(t  >  0)  {  k++;  }  else  {  throw  new  ArithmeticException( "Overflow:  gcd  is  2  ==  31 ");  }  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]      }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  v  /=  2;      [BUGGY]  Mutation(t  >  0)  {  k++;  }  else  {  throw  new  ArithmeticException( "Overflow:  gcd  is  2  ==  31 ");  }  [BUGGY]      }  if  (k  ==  31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }    int  t  =  ((u  &  1)  ==  1)  ?  v  :  -(u  /  2)/*  B3  */;    do  {  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  short  NS  PS  ZS  boolean  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  k  t  u  v  	projects/Math94/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	432	433	1	replace	Mutation(t  >  0)  {  k++;  }  else  {  throw  new  ArithmeticException( "Overflow:  gcd  is  2  ==  31 ");  }	  mutation(t    >    0)    {    k++;    }    else    {    throw    new    ArithmeticException(   "overflow:    gcd    is    2    ==    31   ");    }    	non-compiled	[CE]  <identifier>  expected	53	None	replace
109	[BUG]  [BUGGY]  while(v  >  0)  {  for(int  k  =  0;  k  <  2;  k++)  {  throw  new  ArithmeticException( "overflow:  gcd  is  2  >>  31 ");  }  [CE]  <identifier>  expected  [FE]            AssertionFailedError      [CONTEXT]      }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  v  /=  2;      [BUGGY]  while(v  >  0)  {  for(int  k  =  0;  k  <  2;  k++)  {  throw  new  ArithmeticException( "overflow:  gcd  is  2  >>  31 ");  }  [BUGGY]      k++;  //  cast  out  twos.  }  }  if  (k  ==  31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }    int  t  =  ((u  &  1)  ==  1)  ?  v  :  -(u  /  2)/*  B3  */;    do  {  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  short  NS  PS  ZS  boolean  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  k  t  u  v  	projects/Math94/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	432	433	1	replace	while(v  >  0)  {  for(int  k  =  0;  k  <  2;  k++)  {  throw  new  ArithmeticException( "overflow:  gcd  is  2  >>  31 ");  }	  if(v    >    0)    {    for(int    k    =    0;    k    <    2;    k++)    {    throw    new    ArithmeticException(   "overflow:    gcd    is    2    >>    31   ");    }    	non-compiled	[CE]  <identifier>  expected	29	None	replace
110	[BUG]  [BUGGY]  if(t  ==  0)  {  for(int  k  =  0;  k  <  2;  k++)  {  throw  new  ArithmeticException( "overflow:  gcd  is  2  >>  31 ");  }  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  v  /=  2;      [BUGGY]  if(t  ==  0)  {  for(int  k  =  0;  k  <  2;  k++)  {  throw  new  ArithmeticException( "overflow:  gcd  is  2  >>  31 ");  }  [BUGGY]      k++;  //  cast  out  twos.  }  }  if  (k  ==  31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }    int  t  =  ((u  &  1)  ==  1)  ?  v  :  -(u  /  2)/*  B3  */;    do  {  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  short  NS  PS  ZS  boolean  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  k  t  u  v  	projects/Math94/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	432	433	1	replace	if(t  ==  0)  {  for(int  k  =  0;  k  <  2;  k++)  {  throw  new  ArithmeticException( "overflow:  gcd  is  2  >>  31 ");  }	  if(v    >    0)    {    for(int    k    =    0;    k    <    2;    k++)    {    throw    new    ArithmeticException(   "overflow:    gcd    is    2    >>    31   ");    }    	non-compiled	[CE]  <identifier>  expected	29	None	replace
111	[BUG]  [BUGGY]  int  k  =  ((  u  &  1)  ==  0  &&  v  <  31)  {  u  /=  2;  v  /=  2;  }  [CE]  <identifier>  expected  [FE]            AssertionFailedError      [CONTEXT]      }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  v  /=  2;      [BUGGY]  int  k  =  ((  u  &  1)  ==  0  &&  v  <  31)  {  u  /=  2;  v  /=  2;  }  [BUGGY]      k++;  //  cast  out  twos.  }  }  if  (k  ==  31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }    int  t  =  ((u  &  1)  ==  1)  ?  v  :  -(u  /  2)/*  B3  */;    do  {  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  short  NS  PS  ZS  boolean  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  k  t  u  v  	projects/Math94/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	432	433	1	replace	int  k  =  ((  u  &  1)  ==  0  &&  v  <  31)  {  u  /=  2;  v  /=  2;  }	  int    k    =    ((    u    &    1)    ==    0    &&    v    &    1)    ==    0)    {    u    /=    2;    v    /=    2;    }    	non-compiled	[CE]  <identifier>  expected	39	None	replace
112	[BUG]  [BUGGY]  int  k  =  ((  u  &  1)  ==  1  &&  v  &  1)  ==  0)  {  u  /=  2;  v  /=  2;  }  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  v  /=  2;      [BUGGY]  int  k  =  ((  u  &  1)  ==  1  &&  v  &  1)  ==  0)  {  u  /=  2;  v  /=  2;  }  [BUGGY]      k++;  //  cast  out  twos.  }  }  if  (k  ==  31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }    int  t  =  ((u  &  1)  ==  1)  ?  v  :  -(u  /  2)/*  B3  */;    do  {  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  short  NS  PS  ZS  boolean  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  k  t  u  v  	projects/Math94/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	432	433	1	replace	int  k  =  ((  u  &  1)  ==  1  &&  v  &  1)  ==  0)  {  u  /=  2;  v  /=  2;  }	  int    k    =    ((    u    &    1)    ==    0    &&    v    &    1)    ==    0)    {    u    /=    2;    v    /=    2;    }    	non-compiled	[CE]  <identifier>  expected	39	None	replace
113	[BUG]  [BUGGY]  safeThan  <  ArithmeticException.DEFAULT_NUMBER_ERROR)  {  throw  new  ArithmeticException( "overflow:  gcd  is  2  {  31 ");  }  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  v  /=  2;      [BUGGY]  safeThan  <  ArithmeticException.DEFAULT_NUMBER_ERROR)  {  throw  new  ArithmeticException( "overflow:  gcd  is  2  {  31 ");  }  [BUGGY]      k++;  //  cast  out  twos.  }  }  if  (k  ==  31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }    int  t  =  ((u  &  1)  ==  1)  ?  v  :  -(u  /  2)/*  B3  */;    do  {  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  short  NS  PS  ZS  boolean  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  k  t  u  v  	projects/Math94/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	432	433	1	replace	safeThan  <  ArithmeticException.DEFAULT_NUMBER_ERROR)  {  throw  new  ArithmeticException( "overflow:  gcd  is  2  {  31 ");  }	  safeThan    <    ArithmeticException.DEFAULT_NUMBER_ERROR)    {    throw    new    ArithmeticException(   "overflow:    gcd    is    2    ==    31   ");    }    	non-compiled	[CE]  <identifier>  expected	87	None	replace
114	[BUG]  [BUGGY]  try  {  for(int  k  =  0;  k  <  31;  k++)  {  throw  new  ArithmeticException( "gcd  is  2  >>  31 ");  }  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  v  /=  2;      [BUGGY]  try  {  for(int  k  =  0;  k  <  31;  k++)  {  throw  new  ArithmeticException( "gcd  is  2  >>  31 ");  }  [BUGGY]      k++;  //  cast  out  twos.  }  }  if  (k  ==  31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }    int  t  =  ((u  &  1)  ==  1)  ?  v  :  -(u  /  2)/*  B3  */;    do  {  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  short  NS  PS  ZS  boolean  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  k  t  u  v  	projects/Math94/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	432	433	1	replace	try  {  for(int  k  =  0;  k  <  31;  k++)  {  throw  new  ArithmeticException( "gcd  is  2  >>  31 ");  }	  try    {    for(int    k    =    0;    k    <    2;    k++)    {    throw    new    ArithmeticException(   "gcd    is    2    >>    31   ");    }    	non-compiled	[CE]  <identifier>  expected	129	None	replace
115	[BUG]  [BUGGY]  try  {  for(int  k  =  0;  k  <  2;  k++)  {  throw  new  ArithmeticException( "overflow:  gcd  is  2  >=  31 ");  }  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  v  /=  2;      [BUGGY]  try  {  for(int  k  =  0;  k  <  2;  k++)  {  throw  new  ArithmeticException( "overflow:  gcd  is  2  >=  31 ");  }  [BUGGY]      k++;  //  cast  out  twos.  }  }  if  (k  ==  31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }    int  t  =  ((u  &  1)  ==  1)  ?  v  :  -(u  /  2)/*  B3  */;    do  {  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  short  NS  PS  ZS  boolean  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  k  t  u  v  	projects/Math94/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	432	433	1	replace	try  {  for(int  k  =  0;  k  <  2;  k++)  {  throw  new  ArithmeticException( "overflow:  gcd  is  2  >=  31 ");  }	  try    {    for(int    k    =    0;    k    <    2;    k++)    {    throw    new    ArithmeticException(   "gcd    is    2    >>    31   ");    }    	non-compiled	[CE]  <identifier>  expected	129	None	replace
116	[BUG]  [BUGGY]  try  {  for(int  k  =  0;  k  <  3;  k++)  {  throw  new  ArithmeticException( "gcd  is  2  >>  31 ");  }  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]      }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  v  /=  2;      [BUGGY]  try  {  for(int  k  =  0;  k  <  3;  k++)  {  throw  new  ArithmeticException( "gcd  is  2  >>  31 ");  }  [BUGGY]      k++;  //  cast  out  twos.  }  }  if  (k  ==  31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }    int  t  =  ((u  &  1)  ==  1)  ?  v  :  -(u  /  2)/*  B3  */;    do  {  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  short  NS  PS  ZS  boolean  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  k  t  u  v  	projects/Math94/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	432	433	1	replace	try  {  for(int  k  =  0;  k  <  3;  k++)  {  throw  new  ArithmeticException( "gcd  is  2  >>  31 ");  }	  try    {    for(int    k    =    0;    k    <    2;    k++)    {    throw    new    ArithmeticException(   "gcd    is    2    >>    31   ");    }    	non-compiled	[CE]  <identifier>  expected	129	None	replace
117	[BUG]  [BUGGY]  int  k  =  ((  u  &  1)  ==  0  &&  v  &  2)  ==  0)  {  u  /=  2;  v  /=  3;  }  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  v  /=  2;      [BUGGY]  int  k  =  ((  u  &  1)  ==  0  &&  v  &  2)  ==  0)  {  u  /=  2;  v  /=  3;  }  [BUGGY]      k++;  //  cast  out  twos.  }  }  if  (k  ==  31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }    int  t  =  ((u  &  1)  ==  1)  ?  v  :  -(u  /  2)/*  B3  */;    do  {  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  short  NS  PS  ZS  boolean  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  k  t  u  v  	projects/Math94/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	432	433	1	replace	int  k  =  ((  u  &  1)  ==  0  &&  v  &  2)  ==  0)  {  u  /=  2;  v  /=  3;  }	  int    k    =    ((    u    &    1)    ==    0    &&    v    &    2)    ==    0    &&    k    <    31)    {    u    /=    2;    v    /=    3;    }    	non-compiled	[CE]  <identifier>  expected	62	None	replace
118	[BUG]  [BUGGY]  int  k  =  ((  u  &  1)  ==  1  &&  v  &  2)  ==  1  &&  k  <  31)  {  u  /=  2;  v  /=  3;  }  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  v  /=  2;      [BUGGY]  int  k  =  ((  u  &  1)  ==  1  &&  v  &  2)  ==  1  &&  k  <  31)  {  u  /=  2;  v  /=  3;  }  [BUGGY]      k++;  //  cast  out  twos.  }  }  if  (k  ==  31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }    int  t  =  ((u  &  1)  ==  1)  ?  v  :  -(u  /  2)/*  B3  */;    do  {  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  short  NS  PS  ZS  boolean  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  k  t  u  v  	projects/Math94/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	432	433	1	replace	int  k  =  ((  u  &  1)  ==  1  &&  v  &  2)  ==  1  &&  k  <  31)  {  u  /=  2;  v  /=  3;  }	  int    k    =    ((    u    &    1)    ==    0    &&    v    &    2)    ==    0    &&    k    <    31)    {    u    /=    2;    v    /=    3;    }    	non-compiled	[CE]  <identifier>  expected	62	None	replace
119	[BUG]  [BUGGY]  int  k  =((  u  &  1)  ==  0  &&  v  &  2)  ==  0)&&  k  <  31)  {  u  /=  2;  v  /=  3;  }  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]      }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  v  /=  2;      [BUGGY]  int  k  =((  u  &  1)  ==  0  &&  v  &  2)  ==  0)&&  k  <  31)  {  u  /=  2;  v  /=  3;  }  [BUGGY]      k++;  //  cast  out  twos.  }  }  if  (k  ==  31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }    int  t  =  ((u  &  1)  ==  1)  ?  v  :  -(u  /  2)/*  B3  */;    do  {  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  short  NS  PS  ZS  boolean  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  k  t  u  v  	projects/Math94/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	432	433	1	replace	int  k  =((  u  &  1)  ==  0  &&  v  &  2)  ==  0)&&  k  <  31)  {  u  /=  2;  v  /=  3;  }	  int    k    =    ((    u    &    1)    ==    0    &&    v    &    2)    ==    0    &&    k    <    31)    {    u    /=    2;    v    /=    3;    }    	non-compiled	[CE]  <identifier>  expected	62	None	replace
120	[BUG]  [BUGGY]  if(k  <  0)  {  k++;  //  cast  out  twos.  }  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  v  /=  2;      [BUGGY]  if(k  <  0)  {  k++;  //  cast  out  twos.  }  [BUGGY]      }  if  (k  ==  31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }    int  t  =  ((u  &  1)  ==  1)  ?  v  :  -(u  /  2)/*  B3  */;    do  {  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  short  NS  PS  ZS  boolean  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  k  t  u  v  	projects/Math94/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	432	433	1	replace	if(k  <  0)  {  k++;  //  cast  out  twos.  }	  if(t    <    0)    {    k++;    //    cast    out    twos.    }    	non-compiled	[CE]  <identifier>  expected	7	None	replace
121	[BUG]  [BUGGY]  k++;  }  else  {  throw  new  ArithmeticException( "overflow:  gcd  is  2  {  31 ");  }  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  v  /=  2;      [BUGGY]  k++;  }  else  {  throw  new  ArithmeticException( "overflow:  gcd  is  2  {  31 ");  }  [BUGGY]      }  if  (k  ==  31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }    int  t  =  ((u  &  1)  ==  1)  ?  v  :  -(u  /  2)/*  B3  */;    do  {  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  short  NS  PS  ZS  boolean  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  k  t  u  v  	projects/Math94/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	432	433	1	replace	k++;  }  else  {  throw  new  ArithmeticException( "overflow:  gcd  is  2  {  31 ");  }	  k++;    }    else    {    throw    new    ArithmeticException(   "overflow:    gcd    is    2    ==    31   ");    }    	non-compiled	[CE]  <identifier>  expected	109	None	replace
122	[BUG]  [BUGGY]  int  k  =  ((  u  &  1)  ==  1  &&  v  &  1)  ==  1  &&  k  <  31)?  -(u  /  2)/  B3  */;  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  v  /=  2;      [BUGGY]  int  k  =  ((  u  &  1)  ==  1  &&  v  &  1)  ==  1  &&  k  <  31)?  -(u  /  2)/  B3  */;  [BUGGY]      k++;  //  cast  out  twos.  }  }  if  (k  ==  31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }    int  t  =  ((u  &  1)  ==  1)  ?  v  :  -(u  /  2)/*  B3  */;    do  {  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  short  NS  PS  ZS  boolean  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  k  t  u  v  	projects/Math94/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	432	433	1	replace	int  k  =  ((  u  &  1)  ==  1  &&  v  &  1)  ==  1  &&  k  <  31)?  -(u  /  2)/  B3  */;	  int    k    =    ((    u    &    1)    ==    1    &&    v    &    1)    ==    1    &&    k    <    31)?    -(u    /    2)/*    B3    */;    	non-compiled	[CE]  <identifier>  expected	41	None	replace
123	[BUG]  [BUGGY]  if(k  <  =  0)  {  k++;  }  else  {  throw  new  ArithmeticException( "overflow:  gcd  is  2  >>  31 ");  }  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  v  /=  2;      [BUGGY]  if(k  <  =  0)  {  k++;  }  else  {  throw  new  ArithmeticException( "overflow:  gcd  is  2  >>  31 ");  }  [BUGGY]      }  if  (k  ==  31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }    int  t  =  ((u  &  1)  ==  1)  ?  v  :  -(u  /  2)/*  B3  */;    do  {  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  short  NS  PS  ZS  boolean  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  k  t  u  v  	projects/Math94/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	432	433	1	replace	if(k  <  =  0)  {  k++;  }  else  {  throw  new  ArithmeticException( "overflow:  gcd  is  2  >>  31 ");  }	  if(v    <    =    0)    {    k++;    }    else    {    throw    new    ArithmeticException(   "overflow:    gcd    is    2    >>    31   ");    }    	non-compiled	[CE]  <identifier>  expected	76	None	replace
124	[BUG]  [BUGGY]  if(k  <  =  0)  {  k++;  }  else  {  throw  new  ArithmeticException( "overflow:  gcd  is  2  >=  31 ");  }  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  v  /=  2;      [BUGGY]  if(k  <  =  0)  {  k++;  }  else  {  throw  new  ArithmeticException( "overflow:  gcd  is  2  >=  31 ");  }  [BUGGY]      }  if  (k  ==  31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }    int  t  =  ((u  &  1)  ==  1)  ?  v  :  -(u  /  2)/*  B3  */;    do  {  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  short  NS  PS  ZS  boolean  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  k  t  u  v  	projects/Math94/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	432	433	1	replace	if(k  <  =  0)  {  k++;  }  else  {  throw  new  ArithmeticException( "overflow:  gcd  is  2  >=  31 ");  }	  if(v    <    =    0)    {    k++;    }    else    {    throw    new    ArithmeticException(   "overflow:    gcd    is    2    >>    31   ");    }    	non-compiled	[CE]  <identifier>  expected	76	None	replace
125	[BUG]  [BUGGY]  while(v  >  0)  {  for(int  k  =  0;  k  <  2;  k++)  {  throw  new  ArithmeticException( "overflow:  Gcd  is  2  >>  31 ");  }  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  v  /=  2;      [BUGGY]  while(v  >  0)  {  for(int  k  =  0;  k  <  2;  k++)  {  throw  new  ArithmeticException( "overflow:  Gcd  is  2  >>  31 ");  }  [BUGGY]      k++;  //  cast  out  twos.  }  }  if  (k  ==  31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }    int  t  =  ((u  &  1)  ==  1)  ?  v  :  -(u  /  2)/*  B3  */;    do  {  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  short  NS  PS  ZS  boolean  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  k  t  u  v  	projects/Math94/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	432	433	1	replace	while(v  >  0)  {  for(int  k  =  0;  k  <  2;  k++)  {  throw  new  ArithmeticException( "overflow:  Gcd  is  2  >>  31 ");  }	  while(t    >    0)    {    for(int    k    =    0;    k    <    2;    k++)    {    throw    new    ArithmeticException(   "overflow:    Gcd    is    2    >>    31   ");    }    	non-compiled	[CE]  <identifier>  expected	49	None	replace
126	[BUG]  [BUGGY]  Mutation(t  >  0)  {  k++;  }  else  {  throw  new  ArithmeticException( "Overflow:  gcd  is  2  {  31 ");  }  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  v  /=  2;      [BUGGY]  Mutation(t  >  0)  {  k++;  }  else  {  throw  new  ArithmeticException( "Overflow:  gcd  is  2  {  31 ");  }  [BUGGY]      }  if  (k  ==  31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }    int  t  =  ((u  &  1)  ==  1)  ?  v  :  -(u  /  2)/*  B3  */;    do  {  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  short  NS  PS  ZS  boolean  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  k  t  u  v  	projects/Math94/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	432	433	1	replace	Mutation(t  >  0)  {  k++;  }  else  {  throw  new  ArithmeticException( "Overflow:  gcd  is  2  {  31 ");  }	  mutation(t    >    0)    {    k++;    }    else    {    throw    new    ArithmeticException(   "Overflow:    gcd    is    2    {    31   ");    }    	non-compiled	[CE]  <identifier>  expected	55	None	replace
127	[BUG]  [BUGGY]  Mutation(t)  {  k++;  }  else  {  throw  new  ArithmeticException( "Overflow:  gcd  is  2  {  31 ");  }  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]      }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  v  /=  2;      [BUGGY]  Mutation(t)  {  k++;  }  else  {  throw  new  ArithmeticException( "Overflow:  gcd  is  2  {  31 ");  }  [BUGGY]      }  if  (k  ==  31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }    int  t  =  ((u  &  1)  ==  1)  ?  v  :  -(u  /  2)/*  B3  */;    do  {  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  short  NS  PS  ZS  boolean  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  k  t  u  v  	projects/Math94/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	432	433	1	replace	Mutation(t)  {  k++;  }  else  {  throw  new  ArithmeticException( "Overflow:  gcd  is  2  {  31 ");  }	  mutation(t    >    0)    {    k++;    }    else    {    throw    new    ArithmeticException(   "Overflow:    gcd    is    2    {    31   ");    }    	non-compiled	[CE]  <identifier>  expected	55	None	replace
128	[BUG]  [BUGGY]  safeThan  <  ArithmeticException.DEFAULT_NUMBER_ERROR)  {  throw  new  ArithmeticException( "Overflow:  gcd  is  2  {  31 ");  }  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  v  /=  2;      [BUGGY]  safeThan  <  ArithmeticException.DEFAULT_NUMBER_ERROR)  {  throw  new  ArithmeticException( "Overflow:  gcd  is  2  {  31 ");  }  [BUGGY]      k++;  //  cast  out  twos.  }  }  if  (k  ==  31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }    int  t  =  ((u  &  1)  ==  1)  ?  v  :  -(u  /  2)/*  B3  */;    do  {  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  short  NS  PS  ZS  boolean  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  k  t  u  v  	projects/Math94/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	432	433	1	replace	safeThan  <  ArithmeticException.DEFAULT_NUMBER_ERROR)  {  throw  new  ArithmeticException( "Overflow:  gcd  is  2  {  31 ");  }	  safeThan    <    ArithmeticException.DEFAULT_NUMBER_ERROR)    {    throw    new    ArithmeticException(   "Overflow:    gcd    is    2    ==    31   ");    }    	non-compiled	[CE]  <identifier>  expected	100	None	replace
129	[BUG]  [BUGGY]  int  k  =  ((  u  &  1)  ==  0  &&  v  &  1)  ==  0  &&  31)?  -(u  /  2)/  B3  */;  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  v  /=  2;      [BUGGY]  int  k  =  ((  u  &  1)  ==  0  &&  v  &  1)  ==  0  &&  31)?  -(u  /  2)/  B3  */;  [BUGGY]      k++;  //  cast  out  twos.  }  }  if  (k  ==  31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }    int  t  =  ((u  &  1)  ==  1)  ?  v  :  -(u  /  2)/*  B3  */;    do  {  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  short  NS  PS  ZS  boolean  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  k  t  u  v  	projects/Math94/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	432	433	1	replace	int  k  =  ((  u  &  1)  ==  0  &&  v  &  1)  ==  0  &&  31)?  -(u  /  2)/  B3  */;	  int    k    =    ((    u    &    1)    ==    0    &&    v    &    1)    ==    0    &&    k    <    31)?    -(u    /    2)/    B3    */;    	non-compiled	[CE]  <identifier>  expected	70	None	replace
130	[BUG]  [BUGGY]  int  k  =  ((  u  &  1)  ==  0  &&  v  &  1)  ==  0  &&  k  <  31)?  -(u  /  2)*  B3  */;  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  v  /=  2;      [BUGGY]  int  k  =  ((  u  &  1)  ==  0  &&  v  &  1)  ==  0  &&  k  <  31)?  -(u  /  2)*  B3  */;  [BUGGY]      k++;  //  cast  out  twos.  }  }  if  (k  ==  31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }    int  t  =  ((u  &  1)  ==  1)  ?  v  :  -(u  /  2)/*  B3  */;    do  {  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  short  NS  PS  ZS  boolean  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  k  t  u  v  	projects/Math94/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	432	433	1	replace	int  k  =  ((  u  &  1)  ==  0  &&  v  &  1)  ==  0  &&  k  <  31)?  -(u  /  2)*  B3  */;	  int    k    =    ((    u    &    1)    ==    0    &&    v    &    1)    ==    0    &&    k    <    31)?    -(u    /    2)/    B3    */;    	non-compiled	[CE]  <identifier>  expected	70	None	replace
131	[BUG]  [BUGGY]  if(k  ==  31)  {  k++;  }  else  {  throw  new  ArithmeticException( " ");  }  [CE]  <identifier>  expected  [FE]            AssertionFailedError      [CONTEXT]      }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  v  /=  2;      [BUGGY]  if(k  ==  31)  {  k++;  }  else  {  throw  new  ArithmeticException( " ");  }  [BUGGY]      }  if  (k  ==  31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }    int  t  =  ((u  &  1)  ==  1)  ?  v  :  -(u  /  2)/*  B3  */;    do  {  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  short  NS  PS  ZS  boolean  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  k  t  u  v  	projects/Math94/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	432	433	1	replace	if(k  ==  31)  {  k++;  }  else  {  throw  new  ArithmeticException( " ");  }	  if(v    <    31)    {    k++;    }    else    {    throw    new    ArithmeticException(   "   ");    }    	non-compiled	[CE]  <identifier>  expected	114	None	replace
132	[BUG]  [BUGGY]  try  {  for(int  k  =  0;  k  <  31;  k++)  {  throw  new  ArithmeticException( "overflow:  gcd  is  2  >>  31 ");  }  [CE]  <identifier>  expected  [FE]            AssertionFailedError      [CONTEXT]      }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  v  /=  2;      [BUGGY]  try  {  for(int  k  =  0;  k  <  31;  k++)  {  throw  new  ArithmeticException( "overflow:  gcd  is  2  >>  31 ");  }  [BUGGY]      k++;  //  cast  out  twos.  }  }  if  (k  ==  31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }    int  t  =  ((u  &  1)  ==  1)  ?  v  :  -(u  /  2)/*  B3  */;    do  {  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  short  NS  PS  ZS  boolean  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  k  t  u  v  	projects/Math94/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	432	433	1	replace	try  {  for(int  k  =  0;  k  <  31;  k++)  {  throw  new  ArithmeticException( "overflow:  gcd  is  2  >>  31 ");  }	  try    {    for(int    k    =    0;    k    <    2;    k++)    {    throw    new    ArithmeticException(   "overflow:    gcd    is    2    >>    31   ");    }    	non-compiled	[CE]  <identifier>  expected	122	None	replace
133	[BUG]  [BUGGY]  try  {  for(int  k  =  0;  k  <  3;  k++)  {  throw  new  ArithmeticException( "overflow:  gcd  is  2  >>  31 ");  }  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  v  /=  2;      [BUGGY]  try  {  for(int  k  =  0;  k  <  3;  k++)  {  throw  new  ArithmeticException( "overflow:  gcd  is  2  >>  31 ");  }  [BUGGY]      k++;  //  cast  out  twos.  }  }  if  (k  ==  31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }    int  t  =  ((u  &  1)  ==  1)  ?  v  :  -(u  /  2)/*  B3  */;    do  {  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  short  NS  PS  ZS  boolean  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  k  t  u  v  	projects/Math94/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	432	433	1	replace	try  {  for(int  k  =  0;  k  <  3;  k++)  {  throw  new  ArithmeticException( "overflow:  gcd  is  2  >>  31 ");  }	  try    {    for(int    k    =    0;    k    <    2;    k++)    {    throw    new    ArithmeticException(   "overflow:    gcd    is    2    >>    31   ");    }    	non-compiled	[CE]  <identifier>  expected	122	None	replace
134	[BUG]  [BUGGY]  try  {  for(int  k  =  1;  k  <  2;  k++)  {  throw  new  ArithmeticException( "overflow:  gcd  is  2  >>  31 ");  }  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  v  /=  2;      [BUGGY]  try  {  for(int  k  =  1;  k  <  2;  k++)  {  throw  new  ArithmeticException( "overflow:  gcd  is  2  >>  31 ");  }  [BUGGY]      k++;  //  cast  out  twos.  }  }  if  (k  ==  31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }    int  t  =  ((u  &  1)  ==  1)  ?  v  :  -(u  /  2)/*  B3  */;    do  {  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  short  NS  PS  ZS  boolean  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  k  t  u  v  	projects/Math94/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	432	433	1	replace	try  {  for(int  k  =  1;  k  <  2;  k++)  {  throw  new  ArithmeticException( "overflow:  gcd  is  2  >>  31 ");  }	  try    {    for(int    k    =    0;    k    <    2;    k++)    {    throw    new    ArithmeticException(   "overflow:    gcd    is    2    >>    31   ");    }    	non-compiled	[CE]  <identifier>  expected	122	None	replace
135	[BUG]  [BUGGY]  try  {  for(int  k  =  0;  k  <  2;  k++)  {  throw  new  ArithmeticException( "overflow:  gcd  is  2   ");  }  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  v  /=  2;      [BUGGY]  try  {  for(int  k  =  0;  k  <  2;  k++)  {  throw  new  ArithmeticException( "overflow:  gcd  is  2   ");  }  [BUGGY]      k++;  //  cast  out  twos.  }  }  if  (k  ==  31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }    int  t  =  ((u  &  1)  ==  1)  ?  v  :  -(u  /  2)/*  B3  */;    do  {  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  short  NS  PS  ZS  boolean  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  k  t  u  v  	projects/Math94/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	432	433	1	replace	try  {  for(int  k  =  0;  k  <  2;  k++)  {  throw  new  ArithmeticException( "overflow:  gcd  is  2   ");  }	  try    {    for(int    k    =    0;    k    <    2;    k++)    {    throw    new    ArithmeticException(   "overflow:    gcd    is    2    >>    31   ");    }    	non-compiled	[CE]  <identifier>  expected	122	None	replace
136	[BUG]  [BUGGY]  try  {  [Delete]  catch(Exception  e)  {  throw  new  ArithmeticException( " ");  }  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  v  /=  2;      [BUGGY]  try  {  [Delete]  catch(Exception  e)  {  throw  new  ArithmeticException( " ");  }  [BUGGY]      }  if  (k  ==  31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }    int  t  =  ((u  &  1)  ==  1)  ?  v  :  -(u  /  2)/*  B3  */;    do  {  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  short  NS  PS  ZS  boolean  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  k  t  u  v  	projects/Math94/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	432	433	1	replace	try  {  [Delete]  catch(Exception  e)  {  throw  new  ArithmeticException( " ");  }	  if(t    >    0)    {    throw    new    ArithmeticException(   "   ");    }    	non-compiled	[CE]  <identifier>  expected	112	None	replace
137	[BUG]  [BUGGY]  try  {  [Delete]  catch(Exception  t)  {  throw  new  ArithmeticException( " ");  }  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]      }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  v  /=  2;      [BUGGY]  try  {  [Delete]  catch(Exception  t)  {  throw  new  ArithmeticException( " ");  }  [BUGGY]      }  if  (k  ==  31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }    int  t  =  ((u  &  1)  ==  1)  ?  v  :  -(u  /  2)/*  B3  */;    do  {  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  short  NS  PS  ZS  boolean  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  k  t  u  v  	projects/Math94/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	432	433	1	replace	try  {  [Delete]  catch(Exception  t)  {  throw  new  ArithmeticException( " ");  }	  if(t    >    0)    {    throw    new    ArithmeticException(   "   ");    }    	non-compiled	[CE]  <identifier>  expected	112	None	replace
138	[BUG]  [BUGGY]  mutation(t  >  0)  {  throw  new  ArithmeticException( " ");  }  [CE]  <identifier>  expected  [FE]                          AssertionFailedError      [CONTEXT]      }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  v  /=  2;      [BUGGY]  mutation(t  >  0)  {  throw  new  ArithmeticException( " ");  }  [BUGGY]      }  if  (k  ==  31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }    int  t  =  ((u  &  1)  ==  1)  ?  v  :  -(u  /  2)/*  B3  */;    do  {  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  short  NS  PS  ZS  boolean  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  k  t  u  v  	projects/Math94/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	432	433	1	replace	mutation(t  >  0)  {  throw  new  ArithmeticException( " ");  }	  if(t    >    0)    {    throw    new    ArithmeticException(   "   ");    }    	non-compiled	[CE]  <identifier>  expected	112	None	replace
139	[BUG]  [BUGGY]  bucket  <  =  0)  {  throw  new  ArithmeticException( " ");  }  [CE]  <identifier>  expected  [FE]                            AssertionFailedError      [CONTEXT]      }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  v  /=  2;      [BUGGY]  bucket  <  =  0)  {  throw  new  ArithmeticException( " ");  }  [BUGGY]      }  if  (k  ==  31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }    int  t  =  ((u  &  1)  ==  1)  ?  v  :  -(u  /  2)/*  B3  */;    do  {  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  short  NS  PS  ZS  boolean  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  k  t  u  v  	projects/Math94/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	432	433	1	replace	bucket  <  =  0)  {  throw  new  ArithmeticException( " ");  }	  if(t    >    0)    {    throw    new    ArithmeticException(   "   ");    }    	non-compiled	[CE]  <identifier>  expected	112	None	replace
140	[BUG]  [BUGGY]  int  k  =  ((  u  &  1)  ==  0  &&  v  <  31)  {  u  /=  2;  v  /=  3;  }  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  v  /=  2;      [BUGGY]  int  k  =  ((  u  &  1)  ==  0  &&  v  <  31)  {  u  /=  2;  v  /=  3;  }  [BUGGY]      k++;  //  cast  out  twos.  }  }  if  (k  ==  31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }    int  t  =  ((u  &  1)  ==  1)  ?  v  :  -(u  /  2)/*  B3  */;    do  {  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  short  NS  PS  ZS  boolean  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  k  t  u  v  	projects/Math94/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	432	433	1	replace	int  k  =  ((  u  &  1)  ==  0  &&  v  <  31)  {  u  /=  2;  v  /=  3;  }	  int    k    =    ((    u    &    1)    ==    0    &&    v    &    1)    ==    0)    {    u    /=    2;    v    /=    3;    }    	non-compiled	[CE]  <identifier>  expected	61	None	replace
141	[BUG]  [BUGGY]  int  k  =  ((  u  &  1)  ==  1  &&  v  &  1)  ==  0)  {  u  /=  2;  v  /=  3;  }  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  v  /=  2;      [BUGGY]  int  k  =  ((  u  &  1)  ==  1  &&  v  &  1)  ==  0)  {  u  /=  2;  v  /=  3;  }  [BUGGY]      k++;  //  cast  out  twos.  }  }  if  (k  ==  31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }    int  t  =  ((u  &  1)  ==  1)  ?  v  :  -(u  /  2)/*  B3  */;    do  {  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  short  NS  PS  ZS  boolean  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  k  t  u  v  	projects/Math94/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	432	433	1	replace	int  k  =  ((  u  &  1)  ==  1  &&  v  &  1)  ==  0)  {  u  /=  2;  v  /=  3;  }	  int    k    =    ((    u    &    1)    ==    0    &&    v    &    1)    ==    0)    {    u    /=    2;    v    /=    3;    }    	non-compiled	[CE]  <identifier>  expected	61	None	replace
142	[BUG]  [BUGGY]  Mutation(t  >  0)  {  throw  new  ArithmeticException( "overflow:  gcd  is  2  {  31 ");  }  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  v  /=  2;      [BUGGY]  Mutation(t  >  0)  {  throw  new  ArithmeticException( "overflow:  gcd  is  2  {  31 ");  }  [BUGGY]      k++;  //  cast  out  twos.  }  }  if  (k  ==  31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }    int  t  =  ((u  &  1)  ==  1)  ?  v  :  -(u  /  2)/*  B3  */;    do  {  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  short  NS  PS  ZS  boolean  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  k  t  u  v  	projects/Math94/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	432	433	1	replace	Mutation(t  >  0)  {  throw  new  ArithmeticException( "overflow:  gcd  is  2  {  31 ");  }	  mutation(t    >    0)    {    throw    new    ArithmeticException(   "Overflow:    gcd    is    2    {    31   ");    }    	non-compiled	[CE]  <identifier>  expected	60	None	replace
143	[BUG]  [BUGGY]  Mutation(v  >  0)  {  throw  new  ArithmeticException( "Overflow:  gcd  is  2  {  31 ");  }  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  v  /=  2;      [BUGGY]  Mutation(v  >  0)  {  throw  new  ArithmeticException( "Overflow:  gcd  is  2  {  31 ");  }  [BUGGY]      k++;  //  cast  out  twos.  }  }  if  (k  ==  31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }    int  t  =  ((u  &  1)  ==  1)  ?  v  :  -(u  /  2)/*  B3  */;    do  {  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  short  NS  PS  ZS  boolean  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  k  t  u  v  	projects/Math94/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	432	433	1	replace	Mutation(v  >  0)  {  throw  new  ArithmeticException( "Overflow:  gcd  is  2  {  31 ");  }	  mutation(t    >    0)    {    throw    new    ArithmeticException(   "Overflow:    gcd    is    2    {    31   ");    }    	non-compiled	[CE]  <identifier>  expected	60	None	replace
144	[BUG]  [BUGGY]  int  k  =  ((  u  &  1)  ==  0  &&  v  &  1)  ==  0)  {  u  /=  2;  v  /=  2;  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  v  /=  2;      [BUGGY]  int  k  =  ((  u  &  1)  ==  0  &&  v  &  1)  ==  0)  {  u  /=  2;  v  /=  2;  [BUGGY]      k++;  //  cast  out  twos.  }  }  if  (k  ==  31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }    int  t  =  ((u  &  1)  ==  1)  ?  v  :  -(u  /  2)/*  B3  */;    do  {  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  short  NS  PS  ZS  boolean  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  k  t  u  v  	projects/Math94/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	432	433	1	replace	int  k  =  ((  u  &  1)  ==  0  &&  v  &  1)  ==  0)  {  u  /=  2;  v  /=  2;	  int    k    =    ((    u    &    1)    ==    0    &&    v    &    1)    ==    0    &&    k    <    32)    {    u    /=    2;    v    /=    2;    	non-compiled	[CE]  <identifier>  expected	72	None	replace
145	[BUG]  [BUGGY]  while(t  >  0)  {  for(int  k  =  0;  k  <  2;  k++)  {  throw  new  ArithmeticException( "gcd  is  2  >=  31 ");  }  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  v  /=  2;      [BUGGY]  while(t  >  0)  {  for(int  k  =  0;  k  <  2;  k++)  {  throw  new  ArithmeticException( "gcd  is  2  >=  31 ");  }  [BUGGY]      k++;  //  cast  out  twos.  }  }  if  (k  ==  31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }    int  t  =  ((u  &  1)  ==  1)  ?  v  :  -(u  /  2)/*  B3  */;    do  {  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  short  NS  PS  ZS  boolean  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  k  t  u  v  	projects/Math94/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	432	433	1	replace	while(t  >  0)  {  for(int  k  =  0;  k  <  2;  k++)  {  throw  new  ArithmeticException( "gcd  is  2  >=  31 ");  }	  while(t    <    0)    {    for(int    k    =    0;    k    <    2;    k++)    {    throw    new    ArithmeticException(   "gcd    is    2    >=    31   ");    }    	non-compiled	[CE]  <identifier>  expected	81	None	replace
146	[BUG]  [BUGGY]  while(t  <  =  0)  {  for(int  k  =  0;  k  <  2;  k++)  {  throw  new  ArithmeticException( "gcd  is  2  >=  31 ");  }  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  v  /=  2;      [BUGGY]  while(t  <  =  0)  {  for(int  k  =  0;  k  <  2;  k++)  {  throw  new  ArithmeticException( "gcd  is  2  >=  31 ");  }  [BUGGY]      k++;  //  cast  out  twos.  }  }  if  (k  ==  31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }    int  t  =  ((u  &  1)  ==  1)  ?  v  :  -(u  /  2)/*  B3  */;    do  {  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  short  NS  PS  ZS  boolean  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  k  t  u  v  	projects/Math94/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	432	433	1	replace	while(t  <  =  0)  {  for(int  k  =  0;  k  <  2;  k++)  {  throw  new  ArithmeticException( "gcd  is  2  >=  31 ");  }	  while(t    <    0)    {    for(int    k    =    0;    k    <    2;    k++)    {    throw    new    ArithmeticException(   "gcd    is    2    >=    31   ");    }    	non-compiled	[CE]  <identifier>  expected	81	None	replace
147	[BUG]  [BUGGY]  vikalError( "Overflow:  gcd  is  2  >>  31 ");  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  v  /=  2;      [BUGGY]  vikalError( "Overflow:  gcd  is  2  >>  31 ");  [BUGGY]      }  if  (k  ==  31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }    int  t  =  ((u  &  1)  ==  1)  ?  v  :  -(u  /  2)/*  B3  */;    do  {  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  short  NS  PS  ZS  boolean  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  k  t  u  v  	projects/Math94/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	432	433	1	replace	vikalError( "Overflow:  gcd  is  2  >>  31 ");	  if(k    ==    31)    {    throw    new    ArithmeticException(   "Overflow:    gcd    is    2    >>    31   ");    }    	non-compiled	[CE]  <identifier>  expected	91	None	replace
148	[BUG]  [BUGGY]  vikalError( "Overflow:  gcd  is  2  ^  31 ");  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  v  /=  2;      [BUGGY]  vikalError( "Overflow:  gcd  is  2  ^  31 ");  [BUGGY]      }  if  (k  ==  31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }    int  t  =  ((u  &  1)  ==  1)  ?  v  :  -(u  /  2)/*  B3  */;    do  {  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  short  NS  PS  ZS  boolean  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  k  t  u  v  	projects/Math94/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	432	433	1	replace	vikalError( "Overflow:  gcd  is  2  ^  31 ");	  if(k    ==    31)    {    throw    new    ArithmeticException(   "Overflow:    gcd    is    2    >>    31   ");    }    	non-compiled	[CE]  <identifier>  expected	91	None	replace
149	[BUG]  [BUGGY]  aughtException( "Overflow:  gcd  is  2  >=  31 ");  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  v  /=  2;      [BUGGY]  aughtException( "Overflow:  gcd  is  2  >=  31 ");  [BUGGY]      }  if  (k  ==  31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }    int  t  =  ((u  &  1)  ==  1)  ?  v  :  -(u  /  2)/*  B3  */;    do  {  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  short  NS  PS  ZS  boolean  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  k  t  u  v  	projects/Math94/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	432	433	1	replace	aughtException( "Overflow:  gcd  is  2  >=  31 ");	  if(k    ==    31)    {    throw    new    ArithmeticException(   "Overflow:    gcd    is    2    >>    31   ");    }    	non-compiled	[CE]  <identifier>  expected	91	None	replace
150	[BUG]  [BUGGY]  int  k  =  ((  u  &  1)  ==  0  &&  v  &  1)  ==  0  &&  k  <  31)  {  u  /=  3;  v  /=  2;  }  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  v  /=  2;      [BUGGY]  int  k  =  ((  u  &  1)  ==  0  &&  v  &  1)  ==  0  &&  k  <  31)  {  u  /=  3;  v  /=  2;  }  [BUGGY]      k++;  //  cast  out  twos.  }  }  if  (k  ==  31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }    int  t  =  ((u  &  1)  ==  1)  ?  v  :  -(u  /  2)/*  B3  */;    do  {  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  short  NS  PS  ZS  boolean  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  k  t  u  v  	projects/Math94/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	432	433	1	replace	int  k  =  ((  u  &  1)  ==  0  &&  v  &  1)  ==  0  &&  k  <  31)  {  u  /=  3;  v  /=  2;  }	  int    k    =    ((    u    &    1)    ==    0    &&    v    &    1)    ==    0    &&    k    <    31)    {    u    /=    3;    v    /=    2;    	non-compiled	[CE]  <identifier>  expected	38	None	replace
151	[BUG]  [BUGGY]  int  k  =  ((  u  &  1)  ==  0  &&  v  &  1)  ==  0)  {  u  /=  3;  v  /=  2;  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  v  /=  2;      [BUGGY]  int  k  =  ((  u  &  1)  ==  0  &&  v  &  1)  ==  0)  {  u  /=  3;  v  /=  2;  [BUGGY]      k++;  //  cast  out  twos.  }  }  if  (k  ==  31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }    int  t  =  ((u  &  1)  ==  1)  ?  v  :  -(u  /  2)/*  B3  */;    do  {  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  short  NS  PS  ZS  boolean  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  k  t  u  v  	projects/Math94/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	432	433	1	replace	int  k  =  ((  u  &  1)  ==  0  &&  v  &  1)  ==  0)  {  u  /=  3;  v  /=  2;	  int    k    =    ((    u    &    1)    ==    0    &&    v    &    1)    ==    0    &&    k    <    31)    {    u    /=    3;    v    /=    2;    	non-compiled	[CE]  <identifier>  expected	38	None	replace
152	[BUG]  [BUGGY]  if(t  <  31)  {  k++;  //  cast  out  twos.  }  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  v  /=  2;      [BUGGY]  if(t  <  31)  {  k++;  //  cast  out  twos.  }  [BUGGY]      }  if  (k  ==  31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }    int  t  =  ((u  &  1)  ==  1)  ?  v  :  -(u  /  2)/*  B3  */;    do  {  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  short  NS  PS  ZS  boolean  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  k  t  u  v  	projects/Math94/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	432	433	1	replace	if(t  <  31)  {  k++;  //  cast  out  twos.  }	  if(t    >    31)    {    k++;    //    cast    out    twos.    }    	non-compiled	[CE]  <identifier>  expected	74	None	replace
153	[BUG]  [BUGGY]  if(k  <  31)  {  k++;  }  [CE]  <identifier>  expected  [FE]            AssertionFailedError      [CONTEXT]      }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  v  /=  2;      [BUGGY]  if(k  <  31)  {  k++;  }  [BUGGY]      }  if  (k  ==  31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }    int  t  =  ((u  &  1)  ==  1)  ?  v  :  -(u  /  2)/*  B3  */;    do  {  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  short  NS  PS  ZS  boolean  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  k  t  u  v  	projects/Math94/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	432	433	1	replace	if(k  <  31)  {  k++;  }	  if(k    >    0)    {    k++;    }    	non-compiled	[CE]  <identifier>  expected	132	None	replace
154	[BUG]  [BUGGY]  if(k  ==  0)  {  k++;  }  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  v  /=  2;      [BUGGY]  if(k  ==  0)  {  k++;  }  [BUGGY]      }  if  (k  ==  31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }    int  t  =  ((u  &  1)  ==  1)  ?  v  :  -(u  /  2)/*  B3  */;    do  {  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  short  NS  PS  ZS  boolean  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  k  t  u  v  	projects/Math94/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	432	433	1	replace	if(k  ==  0)  {  k++;  }	  if(k    >    0)    {    k++;    }    	non-compiled	[CE]  <identifier>  expected	132	None	replace
155	[BUG]  [BUGGY]  if(k  >  31)  {  k++;  }  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  v  /=  2;      [BUGGY]  if(k  >  31)  {  k++;  }  [BUGGY]      }  if  (k  ==  31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }    int  t  =  ((u  &  1)  ==  1)  ?  v  :  -(u  /  2)/*  B3  */;    do  {  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  short  NS  PS  ZS  boolean  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  k  t  u  v  	projects/Math94/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	432	433	1	replace	if(k  >  31)  {  k++;  }	  if(k    >    0)    {    k++;    }    	non-compiled	[CE]  <identifier>  expected	132	None	replace
156	[BUG]  [BUGGY]  if(v  >  0)  {  k++;  }  else  {  throw  new  ArithmeticException( "overflow:  gcd  is  2  >=  31 ");  }  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  v  /=  2;      [BUGGY]  if(v  >  0)  {  k++;  }  else  {  throw  new  ArithmeticException( "overflow:  gcd  is  2  >=  31 ");  }  [BUGGY]      }  if  (k  ==  31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }    int  t  =  ((u  &  1)  ==  1)  ?  v  :  -(u  /  2)/*  B3  */;    do  {  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  short  NS  PS  ZS  boolean  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  k  t  u  v  	projects/Math94/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	432	433	1	replace	if(v  >  0)  {  k++;  }  else  {  throw  new  ArithmeticException( "overflow:  gcd  is  2  >=  31 ");  }	  if(k    >    0)    {    k++;    }    else    {    throw    new    ArithmeticException(   "overflow:    gcd    is    2    >>    31   ");    }    	non-compiled	[CE]  <identifier>  expected	128	None	replace
157	[BUG]  [BUGGY]  if(t  ==  0)  {  if(v  >  0)  {  k++;  }  else  {  throw  new  ArithmeticException( "Overflow:  gcd  is  2!=  31 ");  }  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  v  /=  2;      [BUGGY]  if(t  ==  0)  {  if(v  >  0)  {  k++;  }  else  {  throw  new  ArithmeticException( "Overflow:  gcd  is  2!=  31 ");  }  [BUGGY]      }  if  (k  ==  31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }    int  t  =  ((u  &  1)  ==  1)  ?  v  :  -(u  /  2)/*  B3  */;    do  {  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  short  NS  PS  ZS  boolean  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  k  t  u  v  	projects/Math94/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	432	433	1	replace	if(t  ==  0)  {  if(v  >  0)  {  k++;  }  else  {  throw  new  ArithmeticException( "Overflow:  gcd  is  2!=  31 ");  }	  if(k    ==    31)    {    if(v    >    0)    {    k++;    }    else    {    throw    new    ArithmeticException(   "Overflow:    gcd    is    2    >>    31   ");    }    	non-compiled	[CE]  <identifier>  expected	34	None	replace
158	[BUG]  [BUGGY]  if(t  ==  0)  {  if(v  >  0)  {  k++;  }  else  {  throw  new  ArithmeticException( "Overflow:  gcd  is  2  [Delete]  31 ");  }  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  v  /=  2;      [BUGGY]  if(t  ==  0)  {  if(v  >  0)  {  k++;  }  else  {  throw  new  ArithmeticException( "Overflow:  gcd  is  2  [Delete]  31 ");  }  [BUGGY]      }  if  (k  ==  31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }    int  t  =  ((u  &  1)  ==  1)  ?  v  :  -(u  /  2)/*  B3  */;    do  {  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  short  NS  PS  ZS  boolean  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  k  t  u  v  	projects/Math94/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	432	433	1	replace	if(t  ==  0)  {  if(v  >  0)  {  k++;  }  else  {  throw  new  ArithmeticException( "Overflow:  gcd  is  2  [Delete]  31 ");  }	  if(k    ==    31)    {    if(v    >    0)    {    k++;    }    else    {    throw    new    ArithmeticException(   "Overflow:    gcd    is    2    >>    31   ");    }    	non-compiled	[CE]  <identifier>  expected	34	None	replace
159	[BUG]  [BUGGY]  if(k  ==  31)  {  aughtException( "overflow:  gcd  is  2  ==  31 ");  }  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  v  /=  2;      [BUGGY]  if(k  ==  31)  {  aughtException( "overflow:  gcd  is  2  ==  31 ");  }  [BUGGY]      k++;  //  cast  out  twos.  }  }  if  (k  ==  31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }    int  t  =  ((u  &  1)  ==  1)  ?  v  :  -(u  /  2)/*  B3  */;    do  {  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  short  NS  PS  ZS  boolean  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  k  t  u  v  	projects/Math94/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	432	433	1	replace	if(k  ==  31)  {  aughtException( "overflow:  gcd  is  2  ==  31 ");  }	  aughtException(   "overflow:    gcd    is    2    ==    31   ");    	non-compiled	[CE]  <identifier>  expected	20	None	replace
160	[BUG]  [BUGGY]  int  k  =  ((  u  &  1)  ==  0  &&  v  &  1)  ==  0)?  -(u  /  2)/*  B3  */;  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  v  /=  2;      [BUGGY]  int  k  =  ((  u  &  1)  ==  0  &&  v  &  1)  ==  0)?  -(u  /  2)/*  B3  */;  [BUGGY]      k++;  //  cast  out  twos.  }  }  if  (k  ==  31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }    int  t  =  ((u  &  1)  ==  1)  ?  v  :  -(u  /  2)/*  B3  */;    do  {  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  short  NS  PS  ZS  boolean  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  k  t  u  v  	projects/Math94/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	432	433	1	replace	int  k  =  ((  u  &  1)  ==  0  &&  v  &  1)  ==  0)?  -(u  /  2)/*  B3  */;	  int    k    =    ((    u    &    1)    ==    0    &&    v    &    1)    ==    0    &&    31)?    -(u    /    2)/*    B3    */;    	non-compiled	[CE]  <identifier>  expected	42	None	replace
161	[BUG]  [BUGGY]  int  k  =  ((  u  &  1)  ==  1  &&  v  &  1)  ==  1  &&  31)?  -(u  /  2)/*  B3  */;  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  v  /=  2;      [BUGGY]  int  k  =  ((  u  &  1)  ==  1  &&  v  &  1)  ==  1  &&  31)?  -(u  /  2)/*  B3  */;  [BUGGY]      k++;  //  cast  out  twos.  }  }  if  (k  ==  31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }    int  t  =  ((u  &  1)  ==  1)  ?  v  :  -(u  /  2)/*  B3  */;    do  {  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  short  NS  PS  ZS  boolean  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  k  t  u  v  	projects/Math94/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	432	433	1	replace	int  k  =  ((  u  &  1)  ==  1  &&  v  &  1)  ==  1  &&  31)?  -(u  /  2)/*  B3  */;	  int    k    =    ((    u    &    1)    ==    0    &&    v    &    1)    ==    0    &&    31)?    -(u    /    2)/*    B3    */;    	non-compiled	[CE]  <identifier>  expected	42	None	replace
162	[BUG]  [BUGGY]  int  k  =  ((  u  &  1)  ==  31  &&  v  &  1)  ==  31)?  -(u  /  2)/*  B3  */;  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  v  /=  2;      [BUGGY]  int  k  =  ((  u  &  1)  ==  31  &&  v  &  1)  ==  31)?  -(u  /  2)/*  B3  */;  [BUGGY]      k++;  //  cast  out  twos.  }  }  if  (k  ==  31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }    int  t  =  ((u  &  1)  ==  1)  ?  v  :  -(u  /  2)/*  B3  */;    do  {  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  short  NS  PS  ZS  boolean  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  k  t  u  v  	projects/Math94/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	432	433	1	replace	int  k  =  ((  u  &  1)  ==  31  &&  v  &  1)  ==  31)?  -(u  /  2)/*  B3  */;	  int    k    =    ((    u    &    1)    ==    0    &&    v    &    1)    ==    0    &&    31)?    -(u    /    2)/*    B3    */;    	non-compiled	[CE]  <identifier>  expected	42	None	replace
163	[BUG]  [BUGGY]  if(t  <  31)  {  k++;  }  [CE]  <identifier>  expected  [FE]            AssertionFailedError      [CONTEXT]      }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  v  /=  2;      [BUGGY]  if(t  <  31)  {  k++;  }  [BUGGY]      }  if  (k  ==  31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }    int  t  =  ((u  &  1)  ==  1)  ?  v  :  -(u  /  2)/*  B3  */;    do  {  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  short  NS  PS  ZS  boolean  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  k  t  u  v  	projects/Math94/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	432	433	1	replace	if(t  <  31)  {  k++;  }	  if(t    >    31)    {    k++;    }    	non-compiled	[CE]  <identifier>  expected	83	None	replace
164	[BUG]  [BUGGY]  safeThan(v  <  ArithmeticException.DEFAULT_NUMBER_INT)  {  throw  new  ArithmeticException( "Overflow:  gcd  is  2  >>  31 ");  }  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  v  /=  2;      [BUGGY]  safeThan(v  <  ArithmeticException.DEFAULT_NUMBER_INT)  {  throw  new  ArithmeticException( "Overflow:  gcd  is  2  >>  31 ");  }  [BUGGY]      k++;  //  cast  out  twos.  }  }  if  (k  ==  31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }    int  t  =  ((u  &  1)  ==  1)  ?  v  :  -(u  /  2)/*  B3  */;    do  {  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  short  NS  PS  ZS  boolean  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  k  t  u  v  	projects/Math94/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	432	433	1	replace	safeThan(v  <  ArithmeticException.DEFAULT_NUMBER_INT)  {  throw  new  ArithmeticException( "Overflow:  gcd  is  2  >>  31 ");  }	  safeThan    <    ArithmeticException.DEFAULT_NUMBER_INT)    {    throw    new    ArithmeticException(   "Overflow:    gcd    is    2    >>    31   ");    }    	non-compiled	[CE]  <identifier>  expected	86	None	replace
165	[BUG]  [BUGGY]  safeThan(v)  {  throw  new  ArithmeticException( "Overflow:  gcd  is  2  >>  31 ");  }  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  v  /=  2;      [BUGGY]  safeThan(v)  {  throw  new  ArithmeticException( "Overflow:  gcd  is  2  >>  31 ");  }  [BUGGY]      k++;  //  cast  out  twos.  }  }  if  (k  ==  31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }    int  t  =  ((u  &  1)  ==  1)  ?  v  :  -(u  /  2)/*  B3  */;    do  {  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  short  NS  PS  ZS  boolean  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  k  t  u  v  	projects/Math94/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	432	433	1	replace	safeThan(v)  {  throw  new  ArithmeticException( "Overflow:  gcd  is  2  >>  31 ");  }	  safeThan    <    ArithmeticException.DEFAULT_NUMBER_INT)    {    throw    new    ArithmeticException(   "Overflow:    gcd    is    2    >>    31   ");    }    	non-compiled	[CE]  <identifier>  expected	86	None	replace
166	[BUG]  [BUGGY]  mutation(t  >  0)  {  k++;  }  else  {  throw  new  ArithmeticException( "overflow:  gcd  is  2  {  31. ");  }  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  v  /=  2;      [BUGGY]  mutation(t  >  0)  {  k++;  }  else  {  throw  new  ArithmeticException( "overflow:  gcd  is  2  {  31. ");  }  [BUGGY]      }  if  (k  ==  31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }    int  t  =  ((u  &  1)  ==  1)  ?  v  :  -(u  /  2)/*  B3  */;    do  {  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  short  NS  PS  ZS  boolean  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  k  t  u  v  	projects/Math94/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	432	433	1	replace	mutation(t  >  0)  {  k++;  }  else  {  throw  new  ArithmeticException( "overflow:  gcd  is  2  {  31. ");  }	  if(t    >    0)    {    k++;    }    else    {    throw    new    ArithmeticException(   "overflow:    gcd    is    2    {    31   ");    }    	non-compiled	[CE]  <identifier>  expected	73	None	replace
167	[BUG]  [BUGGY]  safeThan  <  ArithmeticException.DEFAULT_NUMBER_ERROR  ||  k  >  0)  {  throw  new  ArithmeticException( "Overflow:  gcd  is  2  {  31 ");  }  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  v  /=  2;      [BUGGY]  safeThan  <  ArithmeticException.DEFAULT_NUMBER_ERROR  ||  k  >  0)  {  throw  new  ArithmeticException( "Overflow:  gcd  is  2  {  31 ");  }  [BUGGY]      k++;  //  cast  out  twos.  }  }  if  (k  ==  31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }    int  t  =  ((u  &  1)  ==  1)  ?  v  :  -(u  /  2)/*  B3  */;    do  {  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  short  NS  PS  ZS  boolean  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  k  t  u  v  	projects/Math94/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	432	433	1	replace	safeThan  <  ArithmeticException.DEFAULT_NUMBER_ERROR  ||  k  >  0)  {  throw  new  ArithmeticException( "Overflow:  gcd  is  2  {  31 ");  }	  safeThan    <    ArithmeticException.DEFAULT_NUMBER_ERROR    ||    t    >    0)    {    throw    new    ArithmeticException(   "Overflow:    gcd    is    2    ==    31   ");    }    	non-compiled	[CE]  <identifier>  expected	101	None	replace
168	[BUG]  [BUGGY]  safeThan  <  ArithmeticException.DEFAULT_NUMBER_ERROR  &&  t  >  0)  {  throw  new  ArithmeticException( "Overflow:  gcd  is  2  ==  31 ");  }  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  v  /=  2;      [BUGGY]  safeThan  <  ArithmeticException.DEFAULT_NUMBER_ERROR  &&  t  >  0)  {  throw  new  ArithmeticException( "Overflow:  gcd  is  2  ==  31 ");  }  [BUGGY]      k++;  //  cast  out  twos.  }  }  if  (k  ==  31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }    int  t  =  ((u  &  1)  ==  1)  ?  v  :  -(u  /  2)/*  B3  */;    do  {  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  short  NS  PS  ZS  boolean  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  k  t  u  v  	projects/Math94/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	432	433	1	replace	safeThan  <  ArithmeticException.DEFAULT_NUMBER_ERROR  &&  t  >  0)  {  throw  new  ArithmeticException( "Overflow:  gcd  is  2  ==  31 ");  }	  safeThan    <    ArithmeticException.DEFAULT_NUMBER_ERROR    ||    t    >    0)    {    throw    new    ArithmeticException(   "Overflow:    gcd    is    2    ==    31   ");    }    	non-compiled	[CE]  <identifier>  expected	101	None	replace
169	[BUG]  [BUGGY]  safeThan  <  ArithmeticException.DEFAULT_NUMBER_ERROR  ||  k  >  31)  {  throw  new  ArithmeticException( "Overflow:  gcd  is  2  {  31 ");  }  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]      }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  v  /=  2;      [BUGGY]  safeThan  <  ArithmeticException.DEFAULT_NUMBER_ERROR  ||  k  >  31)  {  throw  new  ArithmeticException( "Overflow:  gcd  is  2  {  31 ");  }  [BUGGY]      k++;  //  cast  out  twos.  }  }  if  (k  ==  31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }    int  t  =  ((u  &  1)  ==  1)  ?  v  :  -(u  /  2)/*  B3  */;    do  {  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  short  NS  PS  ZS  boolean  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  k  t  u  v  	projects/Math94/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	432	433	1	replace	safeThan  <  ArithmeticException.DEFAULT_NUMBER_ERROR  ||  k  >  31)  {  throw  new  ArithmeticException( "Overflow:  gcd  is  2  {  31 ");  }	  safeThan    <    ArithmeticException.DEFAULT_NUMBER_ERROR    ||    t    >    0)    {    throw    new    ArithmeticException(   "Overflow:    gcd    is    2    ==    31   ");    }    	non-compiled	[CE]  <identifier>  expected	101	None	replace
170	[BUG]  [BUGGY]  if(k  <  31)  {  k++;  //  cast  out  twos.  }  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  v  /=  2;      [BUGGY]  if(k  <  31)  {  k++;  //  cast  out  twos.  }  [BUGGY]      }  if  (k  ==  31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }    int  t  =  ((u  &  1)  ==  1)  ?  v  :  -(u  /  2)/*  B3  */;    do  {  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  short  NS  PS  ZS  boolean  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  k  t  u  v  	projects/Math94/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	432	433	1	replace	if(k  <  31)  {  k++;  //  cast  out  twos.  }	  if(v    <    31)    {    k++;    //    cast    out    twos.    }    	non-compiled	[CE]  <identifier>  expected	68	None	replace
171	[BUG]  [BUGGY]  safeThan  <  ArithmeticException.DEFAULT_NUMBER_INT)  {  throw  new  ArithmeticException( "Overflow:  gcd  is  2  {  31 ");  }  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  v  /=  2;      [BUGGY]  safeThan  <  ArithmeticException.DEFAULT_NUMBER_INT)  {  throw  new  ArithmeticException( "Overflow:  gcd  is  2  {  31 ");  }  [BUGGY]      k++;  //  cast  out  twos.  }  }  if  (k  ==  31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }    int  t  =  ((u  &  1)  ==  1)  ?  v  :  -(u  /  2)/*  B3  */;    do  {  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  short  NS  PS  ZS  boolean  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  k  t  u  v  	projects/Math94/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	432	433	1	replace	safeThan  <  ArithmeticException.DEFAULT_NUMBER_INT)  {  throw  new  ArithmeticException( "Overflow:  gcd  is  2  {  31 ");  }	  safeThan    <    ArithmeticException.DEFAULT_NUMBER_INT)    {    throw    new    ArithmeticException(   "Overflow:    gcd    is    2    ==    31   ");    }    	non-compiled	[CE]  <identifier>  expected	102	None	replace
172	[BUG]  [BUGGY]  safeThan(v  <  ArithmeticException.DEFAULT_NUMBER_INT)  {  throw  new  ArithmeticException( "Overflow:  gcd  is  2  {  31 ");  }  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]      }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  v  /=  2;      [BUGGY]  safeThan(v  <  ArithmeticException.DEFAULT_NUMBER_INT)  {  throw  new  ArithmeticException( "Overflow:  gcd  is  2  {  31 ");  }  [BUGGY]      k++;  //  cast  out  twos.  }  }  if  (k  ==  31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }    int  t  =  ((u  &  1)  ==  1)  ?  v  :  -(u  /  2)/*  B3  */;    do  {  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  short  NS  PS  ZS  boolean  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  k  t  u  v  	projects/Math94/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	432	433	1	replace	safeThan(v  <  ArithmeticException.DEFAULT_NUMBER_INT)  {  throw  new  ArithmeticException( "Overflow:  gcd  is  2  {  31 ");  }	  safeThan    <    ArithmeticException.DEFAULT_NUMBER_INT)    {    throw    new    ArithmeticException(   "Overflow:    gcd    is    2    ==    31   ");    }    	non-compiled	[CE]  <identifier>  expected	102	None	replace
173	[BUG]  [BUGGY]  aught(new  ArithmeticException( "Overflow:  gcd  is  2  ^  31 "));  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  v  /=  2;      [BUGGY]  aught(new  ArithmeticException( "Overflow:  gcd  is  2  ^  31 "));  [BUGGY]      k++;  //  cast  out  twos.  }  }  if  (k  ==  31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }    int  t  =  ((u  &  1)  ==  1)  ?  v  :  -(u  /  2)/*  B3  */;    do  {  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  short  NS  PS  ZS  boolean  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  k  t  u  v  	projects/Math94/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	432	433	1	replace	aught(new  ArithmeticException( "Overflow:  gcd  is  2  ^  31 "));	  aught(new    ArithmeticException(   "Overflow:    gcd    is    2    >>    31   "));    	non-compiled	[CE]  <identifier>  expected	137	None	replace
174	[BUG]  [BUGGY]  aught(new  ArithmeticException( "Overflow:  gcd  is  2  >>  32 "));  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  v  /=  2;      [BUGGY]  aught(new  ArithmeticException( "Overflow:  gcd  is  2  >>  32 "));  [BUGGY]      k++;  //  cast  out  twos.  }  }  if  (k  ==  31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }    int  t  =  ((u  &  1)  ==  1)  ?  v  :  -(u  /  2)/*  B3  */;    do  {  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  short  NS  PS  ZS  boolean  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  k  t  u  v  	projects/Math94/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	432	433	1	replace	aught(new  ArithmeticException( "Overflow:  gcd  is  2  >>  32 "));	  aught(new    ArithmeticException(   "Overflow:    gcd    is    2    >>    31   "));    	non-compiled	[CE]  <identifier>  expected	137	None	replace
175	[BUG]  [BUGGY]  safeThan  <  ArithmeticException.DEFAULT_NUMBER_INT  ||  safeThan  >  0)  {  throw  new  ArithmeticException( "overflow:  gcd  is  2  {  31 ");  }  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  v  /=  2;      [BUGGY]  safeThan  <  ArithmeticException.DEFAULT_NUMBER_INT  ||  safeThan  >  0)  {  throw  new  ArithmeticException( "overflow:  gcd  is  2  {  31 ");  }  [BUGGY]      k++;  //  cast  out  twos.  }  }  if  (k  ==  31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }    int  t  =  ((u  &  1)  ==  1)  ?  v  :  -(u  /  2)/*  B3  */;    do  {  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  short  NS  PS  ZS  boolean  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  k  t  u  v  	projects/Math94/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	432	433	1	replace	safeThan  <  ArithmeticException.DEFAULT_NUMBER_INT  ||  safeThan  >  0)  {  throw  new  ArithmeticException( "overflow:  gcd  is  2  {  31 ");  }	  safeThan    <    ArithmeticException.DEFAULT_NUMBER_INT    ||    safeThan    >=    0)    {    throw    new    ArithmeticException(   "overflow:    gcd    is    2    ==    31   ");    }    	non-compiled	[CE]  <identifier>  expected	90	None	replace
176	[BUG]  [BUGGY]  safeThan  <  ArithmeticException.DEFAULT_NUMBER_INT  ||  safeThan  >  0)  {  throw  new  ArithmeticException( "overflow:  gcd  is  2  ==  31 ");  }  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]      }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  v  /=  2;      [BUGGY]  safeThan  <  ArithmeticException.DEFAULT_NUMBER_INT  ||  safeThan  >  0)  {  throw  new  ArithmeticException( "overflow:  gcd  is  2  ==  31 ");  }  [BUGGY]      k++;  //  cast  out  twos.  }  }  if  (k  ==  31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }    int  t  =  ((u  &  1)  ==  1)  ?  v  :  -(u  /  2)/*  B3  */;    do  {  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  short  NS  PS  ZS  boolean  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  k  t  u  v  	projects/Math94/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	432	433	1	replace	safeThan  <  ArithmeticException.DEFAULT_NUMBER_INT  ||  safeThan  >  0)  {  throw  new  ArithmeticException( "overflow:  gcd  is  2  ==  31 ");  }	  safeThan    <    ArithmeticException.DEFAULT_NUMBER_INT    ||    safeThan    >=    0)    {    throw    new    ArithmeticException(   "overflow:    gcd    is    2    ==    31   ");    }    	non-compiled	[CE]  <identifier>  expected	90	None	replace
177	[BUG]  [BUGGY]  ||  v  >  0)  {  for(int  k  =  0;  k  <  2;  k++)  {  throw  new  ArithmeticException( "overflow:  gcd  is  2  {  31 ");  }  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  v  /=  2;      [BUGGY]  ||  v  >  0)  {  for(int  k  =  0;  k  <  2;  k++)  {  throw  new  ArithmeticException( "overflow:  gcd  is  2  {  31 ");  }  [BUGGY]      k++;  //  cast  out  twos.  }  }  if  (k  ==  31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }    int  t  =  ((u  &  1)  ==  1)  ?  v  :  -(u  /  2)/*  B3  */;    do  {  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  short  NS  PS  ZS  boolean  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  k  t  u  v  	projects/Math94/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	432	433	1	replace	||  v  >  0)  {  for(int  k  =  0;  k  <  2;  k++)  {  throw  new  ArithmeticException( "overflow:  gcd  is  2  {  31 ");  }	  if(v    >    0)    {    for(int    k    =    0;    k    <    2;    k++)    {    throw    new    ArithmeticException(   "overflow:    gcd    is    2    ==    31   ");    }    	non-compiled	[CE]  <identifier>  expected	94	None	replace
178	[BUG]  [BUGGY]  if(t  ==  0)  {  for(int  k  =  0;  k  <  2;  k++)  {  throw  new  ArithmeticException( "overflow:  gcd  is  2  {  31 ");  }  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  v  /=  2;      [BUGGY]  if(t  ==  0)  {  for(int  k  =  0;  k  <  2;  k++)  {  throw  new  ArithmeticException( "overflow:  gcd  is  2  {  31 ");  }  [BUGGY]      k++;  //  cast  out  twos.  }  }  if  (k  ==  31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }    int  t  =  ((u  &  1)  ==  1)  ?  v  :  -(u  /  2)/*  B3  */;    do  {  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  short  NS  PS  ZS  boolean  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  k  t  u  v  	projects/Math94/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	432	433	1	replace	if(t  ==  0)  {  for(int  k  =  0;  k  <  2;  k++)  {  throw  new  ArithmeticException( "overflow:  gcd  is  2  {  31 ");  }	  if(v    >    0)    {    for(int    k    =    0;    k    <    2;    k++)    {    throw    new    ArithmeticException(   "overflow:    gcd    is    2    ==    31   ");    }    	non-compiled	[CE]  <identifier>  expected	94	None	replace
179	[BUG]  [BUGGY]  ||  v  >  0)  {  for(int  k  =  0;  k  <  2;  k++)  {  throw  new  ArithmeticException( "overflow:  gcd  is  2  ==  31 ");  }  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  v  /=  2;      [BUGGY]  ||  v  >  0)  {  for(int  k  =  0;  k  <  2;  k++)  {  throw  new  ArithmeticException( "overflow:  gcd  is  2  ==  31 ");  }  [BUGGY]      k++;  //  cast  out  twos.  }  }  if  (k  ==  31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }    int  t  =  ((u  &  1)  ==  1)  ?  v  :  -(u  /  2)/*  B3  */;    do  {  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  short  NS  PS  ZS  boolean  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  k  t  u  v  	projects/Math94/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	432	433	1	replace	||  v  >  0)  {  for(int  k  =  0;  k  <  2;  k++)  {  throw  new  ArithmeticException( "overflow:  gcd  is  2  ==  31 ");  }	  if(v    >    0)    {    for(int    k    =    0;    k    <    2;    k++)    {    throw    new    ArithmeticException(   "overflow:    gcd    is    2    ==    31   ");    }    	non-compiled	[CE]  <identifier>  expected	94	None	replace
180	[BUG]  [BUGGY]  while(t  >  0)  {  for(int  k  =  0;  k  <  2;  k++)  {  throw  new  ArithmeticException( "overflow:  gcd  is  2  >=  31 ");  }  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  v  /=  2;      [BUGGY]  while(t  >  0)  {  for(int  k  =  0;  k  <  2;  k++)  {  throw  new  ArithmeticException( "overflow:  gcd  is  2  >=  31 ");  }  [BUGGY]      k++;  //  cast  out  twos.  }  }  if  (k  ==  31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }    int  t  =  ((u  &  1)  ==  1)  ?  v  :  -(u  /  2)/*  B3  */;    do  {  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  short  NS  PS  ZS  boolean  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  k  t  u  v  	projects/Math94/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	432	433	1	replace	while(t  >  0)  {  for(int  k  =  0;  k  <  2;  k++)  {  throw  new  ArithmeticException( "overflow:  gcd  is  2  >=  31 ");  }	  while(t    <    0)    {    for(int    k    =    0;    k    <    2;    k++)    {    throw    new    ArithmeticException(   "overflow:    gcd    is    2    >=    31   ");    }    	non-compiled	[CE]  <identifier>  expected	30	None	replace
181	[BUG]  [BUGGY]  while(t  >  0)  {  for(int  k  =  0;  k  <  2;  k++)  {  throw  new  ArithmeticException( "overflow:  Gcd  is  2  >>  31.   ");  }  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  v  /=  2;      [BUGGY]  while(t  >  0)  {  for(int  k  =  0;  k  <  2;  k++)  {  throw  new  ArithmeticException( "overflow:  Gcd  is  2  >>  31.   ");  }  [BUGGY]      k++;  //  cast  out  twos.  }  }  if  (k  ==  31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }    int  t  =  ((u  &  1)  ==  1)  ?  v  :  -(u  /  2)/*  B3  */;    do  {  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  short  NS  PS  ZS  boolean  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  k  t  u  v  	projects/Math94/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	432	433	1	replace	while(t  >  0)  {  for(int  k  =  0;  k  <  2;  k++)  {  throw  new  ArithmeticException( "overflow:  Gcd  is  2  >>  31.   ");  }	  while(t    <    0)    {    for(int    k    =    0;    k    <    2;    k++)    {    throw    new    ArithmeticException(   "overflow:    Gcd    is    2    >>    31.   ");    }    	non-compiled	[CE]  <identifier>  expected	79	None	replace
182	[BUG]  [BUGGY]  while(t  <  =  0)  {  for(int  k  =  0;  k  <  2;  k++)  {  throw  new  ArithmeticException( "overflow:  Gcd  is  2  >>  31.   ");  }  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  v  /=  2;      [BUGGY]  while(t  <  =  0)  {  for(int  k  =  0;  k  <  2;  k++)  {  throw  new  ArithmeticException( "overflow:  Gcd  is  2  >>  31.   ");  }  [BUGGY]      k++;  //  cast  out  twos.  }  }  if  (k  ==  31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }    int  t  =  ((u  &  1)  ==  1)  ?  v  :  -(u  /  2)/*  B3  */;    do  {  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  short  NS  PS  ZS  boolean  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  k  t  u  v  	projects/Math94/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	432	433	1	replace	while(t  <  =  0)  {  for(int  k  =  0;  k  <  2;  k++)  {  throw  new  ArithmeticException( "overflow:  Gcd  is  2  >>  31.   ");  }	  while(t    <    0)    {    for(int    k    =    0;    k    <    2;    k++)    {    throw    new    ArithmeticException(   "overflow:    Gcd    is    2    >>    31.   ");    }    	non-compiled	[CE]  <identifier>  expected	79	None	replace
183	[BUG]  [BUGGY]  while(t  >=  0)  {  for(int  k  =  0;  k  <  2;  k++)  {  throw  new  ArithmeticException( "overflow:  Gcd  is  2  >>  31.   ");  }  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  v  /=  2;      [BUGGY]  while(t  >=  0)  {  for(int  k  =  0;  k  <  2;  k++)  {  throw  new  ArithmeticException( "overflow:  Gcd  is  2  >>  31.   ");  }  [BUGGY]      k++;  //  cast  out  twos.  }  }  if  (k  ==  31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }    int  t  =  ((u  &  1)  ==  1)  ?  v  :  -(u  /  2)/*  B3  */;    do  {  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  short  NS  PS  ZS  boolean  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  k  t  u  v  	projects/Math94/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	432	433	1	replace	while(t  >=  0)  {  for(int  k  =  0;  k  <  2;  k++)  {  throw  new  ArithmeticException( "overflow:  Gcd  is  2  >>  31.   ");  }	  while(t    <    0)    {    for(int    k    =    0;    k    <    2;    k++)    {    throw    new    ArithmeticException(   "overflow:    Gcd    is    2    >>    31.   ");    }    	non-compiled	[CE]  <identifier>  expected	79	None	replace
184	[BUG]  [BUGGY]  while(t  >  0)  {  for(int  k  =  0;  k  <  31;  k++)  {  v  =  -k;  }  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  v  /=  2;      [BUGGY]  while(t  >  0)  {  for(int  k  =  0;  k  <  31;  k++)  {  v  =  -k;  }  [BUGGY]      }  if  (k  ==  31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }    int  t  =  ((u  &  1)  ==  1)  ?  v  :  -(u  /  2)/*  B3  */;    do  {  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  short  NS  PS  ZS  boolean  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  k  t  u  v  	projects/Math94/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	432	433	1	replace	while(t  >  0)  {  for(int  k  =  0;  k  <  31;  k++)  {  v  =  -k;  }	  if(t    >    0)    {    for(int    k    =    0;    k    <    31;    k++)    {    v    =    -k;    }    	non-compiled	[CE]  <identifier>  expected	110	None	replace
185	[BUG]  [BUGGY]  while((  u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  v  =  -k;  }  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  v  /=  2;      [BUGGY]  while((  u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  v  =  -k;  }  [BUGGY]      }  if  (k  ==  31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }    int  t  =  ((u  &  1)  ==  1)  ?  v  :  -(u  /  2)/*  B3  */;    do  {  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  short  NS  PS  ZS  boolean  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  k  t  u  v  	projects/Math94/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	432	433	1	replace	while((  u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  v  =  -k;  }	  if(t    >    0)    {    for(int    k    =    0;    k    <    31;    k++)    {    v    =    -k;    }    	non-compiled	[CE]  <identifier>  expected	110	None	replace
186	[BUG]  [BUGGY]  try  {  for(int  k  =  0;  k  <  31;  k++)  {  throw  new  ArithmeticException( "overflow:  gcd  is  2  ==  31 ");  }  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  v  /=  2;      [BUGGY]  try  {  for(int  k  =  0;  k  <  31;  k++)  {  throw  new  ArithmeticException( "overflow:  gcd  is  2  ==  31 ");  }  [BUGGY]      k++;  //  cast  out  twos.  }  }  if  (k  ==  31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }    int  t  =  ((u  &  1)  ==  1)  ?  v  :  -(u  /  2)/*  B3  */;    do  {  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  short  NS  PS  ZS  boolean  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  k  t  u  v  	projects/Math94/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	432	433	1	replace	try  {  for(int  k  =  0;  k  <  31;  k++)  {  throw  new  ArithmeticException( "overflow:  gcd  is  2  ==  31 ");  }	  try    {    for(int    k    =    0;    k    <    2;    k++)    {    throw    new    ArithmeticException(   "overflow:    gcd    is    2    ==    31   ");    }    	non-compiled	[CE]  <identifier>  expected	121	None	replace
187	[BUG]  [BUGGY]  try  {  for(int  k  =  1;  k  <  2;  k++)  {  throw  new  ArithmeticException( "overflow:  gcd  is  2  {  31 ");  }  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  v  /=  2;      [BUGGY]  try  {  for(int  k  =  1;  k  <  2;  k++)  {  throw  new  ArithmeticException( "overflow:  gcd  is  2  {  31 ");  }  [BUGGY]      k++;  //  cast  out  twos.  }  }  if  (k  ==  31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }    int  t  =  ((u  &  1)  ==  1)  ?  v  :  -(u  /  2)/*  B3  */;    do  {  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  short  NS  PS  ZS  boolean  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  k  t  u  v  	projects/Math94/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	432	433	1	replace	try  {  for(int  k  =  1;  k  <  2;  k++)  {  throw  new  ArithmeticException( "overflow:  gcd  is  2  {  31 ");  }	  try    {    for(int    k    =    0;    k    <    2;    k++)    {    throw    new    ArithmeticException(   "overflow:    gcd    is    2    ==    31   ");    }    	non-compiled	[CE]  <identifier>  expected	121	None	replace
188	[BUG]  [BUGGY]  try  {  for(int  k  =  0;  k  <  3;  k++)  {  throw  new  ArithmeticException( "overflow:  gcd  is  2  {  31 ");  }  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  v  /=  2;      [BUGGY]  try  {  for(int  k  =  0;  k  <  3;  k++)  {  throw  new  ArithmeticException( "overflow:  gcd  is  2  {  31 ");  }  [BUGGY]      k++;  //  cast  out  twos.  }  }  if  (k  ==  31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }    int  t  =  ((u  &  1)  ==  1)  ?  v  :  -(u  /  2)/*  B3  */;    do  {  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  short  NS  PS  ZS  boolean  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  k  t  u  v  	projects/Math94/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	432	433	1	replace	try  {  for(int  k  =  0;  k  <  3;  k++)  {  throw  new  ArithmeticException( "overflow:  gcd  is  2  {  31 ");  }	  try    {    for(int    k    =    0;    k    <    2;    k++)    {    throw    new    ArithmeticException(   "overflow:    gcd    is    2    ==    31   ");    }    	non-compiled	[CE]  <identifier>  expected	121	None	replace
189	[BUG]  [BUGGY]  try  {  for(int  k  =  0;  k  <  31;  k++)  {  throw  new  ArithmeticException( "overflow:  gcd  is  2  {  31 ");  }  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  v  /=  2;      [BUGGY]  try  {  for(int  k  =  0;  k  <  31;  k++)  {  throw  new  ArithmeticException( "overflow:  gcd  is  2  {  31 ");  }  [BUGGY]      k++;  //  cast  out  twos.  }  }  if  (k  ==  31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }    int  t  =  ((u  &  1)  ==  1)  ?  v  :  -(u  /  2)/*  B3  */;    do  {  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  short  NS  PS  ZS  boolean  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  k  t  u  v  	projects/Math94/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	432	433	1	replace	try  {  for(int  k  =  0;  k  <  31;  k++)  {  throw  new  ArithmeticException( "overflow:  gcd  is  2  {  31 ");  }	  try    {    for(int    k    =    0;    k    <    2;    k++)    {    throw    new    ArithmeticException(   "overflow:    gcd    is    2    ==    31   ");    }    	non-compiled	[CE]  <identifier>  expected	121	None	replace
190	[BUG]  [BUGGY]  if(k  ==  31)  {  throw  new  ArithmeticException( "Overflow:  gcd  is  2  {  31 ");  }  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  v  /=  2;      [BUGGY]  if(k  ==  31)  {  throw  new  ArithmeticException( "Overflow:  gcd  is  2  {  31 ");  }  [BUGGY]      k++;  //  cast  out  twos.  }  }  if  (k  ==  31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }    int  t  =  ((u  &  1)  ==  1)  ?  v  :  -(u  /  2)/*  B3  */;    do  {  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  short  NS  PS  ZS  boolean  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  k  t  u  v  	projects/Math94/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	432	433	1	replace	if(k  ==  31)  {  throw  new  ArithmeticException( "Overflow:  gcd  is  2  {  31 ");  }	  aughtException(   "Overflow:    gcd    is    2    {    31   ");    	non-compiled	[CE]  <identifier>  expected	19	None	replace
191	[BUG]  [BUGGY]  if(k  <  31)  {  aughtException( "Overflow:  gcd  is  2  {  31 ");  }  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  v  /=  2;      [BUGGY]  if(k  <  31)  {  aughtException( "Overflow:  gcd  is  2  {  31 ");  }  [BUGGY]      k++;  //  cast  out  twos.  }  }  if  (k  ==  31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }    int  t  =  ((u  &  1)  ==  1)  ?  v  :  -(u  /  2)/*  B3  */;    do  {  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  short  NS  PS  ZS  boolean  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  k  t  u  v  	projects/Math94/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	432	433	1	replace	if(k  <  31)  {  aughtException( "Overflow:  gcd  is  2  {  31 ");  }	  aughtException(   "Overflow:    gcd    is    2    {    31   ");    	non-compiled	[CE]  <identifier>  expected	19	None	replace
192	[BUG]  [BUGGY]  if(k  ==  31)  {  aughtException( "Overflow:  gcd  is  2  >>  31 ");  }  [CE]  <identifier>  expected  [FE]            AssertionFailedError      [CONTEXT]      }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  v  /=  2;      [BUGGY]  if(k  ==  31)  {  aughtException( "Overflow:  gcd  is  2  >>  31 ");  }  [BUGGY]      k++;  //  cast  out  twos.  }  }  if  (k  ==  31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }    int  t  =  ((u  &  1)  ==  1)  ?  v  :  -(u  /  2)/*  B3  */;    do  {  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  short  NS  PS  ZS  boolean  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  k  t  u  v  	projects/Math94/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	432	433	1	replace	if(k  ==  31)  {  aughtException( "Overflow:  gcd  is  2  >>  31 ");  }	  aughtException(   "Overflow:    gcd    is    2    >>    31   ");    	non-compiled	[CE]  <identifier>  expected	31	None	replace
193	[BUG]  [BUGGY]  if(k  ==  31)  {  aughtException( "Overflow:  gcd  is  2  >=  31 ");  }  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  v  /=  2;      [BUGGY]  if(k  ==  31)  {  aughtException( "Overflow:  gcd  is  2  >=  31 ");  }  [BUGGY]      k++;  //  cast  out  twos.  }  }  if  (k  ==  31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }    int  t  =  ((u  &  1)  ==  1)  ?  v  :  -(u  /  2)/*  B3  */;    do  {  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  short  NS  PS  ZS  boolean  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  k  t  u  v  	projects/Math94/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	432	433	1	replace	if(k  ==  31)  {  aughtException( "Overflow:  gcd  is  2  >=  31 ");  }	  aughtException(   "Overflow:    gcd    is    2    >>    31   ");    	non-compiled	[CE]  <identifier>  expected	31	None	replace
194	[BUG]  [BUGGY]  if(k  ==  31)  {  aughtException( "Overflow:  gcd  is  2  >>  31 ");  }  else  {  throw  new  ArithmeticException( "Overflow:  gcd  is  2  >=  31 ");  }  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  v  /=  2;      [BUGGY]  if(k  ==  31)  {  aughtException( "Overflow:  gcd  is  2  >>  31 ");  }  else  {  throw  new  ArithmeticException( "Overflow:  gcd  is  2  >=  31 ");  }  [BUGGY]      k++;  //  cast  out  twos.  }  }  if  (k  ==  31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }    int  t  =  ((u  &  1)  ==  1)  ?  v  :  -(u  /  2)/*  B3  */;    do  {  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  short  NS  PS  ZS  boolean  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  k  t  u  v  	projects/Math94/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	432	433	1	replace	if(k  ==  31)  {  aughtException( "Overflow:  gcd  is  2  >>  31 ");  }  else  {  throw  new  ArithmeticException( "Overflow:  gcd  is  2  >=  31 ");  }	  aughtException(   "Overflow:    gcd    is    2    >>    31   ");    	non-compiled	[CE]  <identifier>  expected	31	None	replace
195	[BUG]  [BUGGY]  if(k  ==  31)  {  aughtException( "Overflow:  gcd  is  2  >>  31 ");  }  else  {  throw  new  ArithmeticException( "Overflow:  gcd  is  2!=  31 ");  }  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  v  /=  2;      [BUGGY]  if(k  ==  31)  {  aughtException( "Overflow:  gcd  is  2  >>  31 ");  }  else  {  throw  new  ArithmeticException( "Overflow:  gcd  is  2!=  31 ");  }  [BUGGY]      k++;  //  cast  out  twos.  }  }  if  (k  ==  31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }    int  t  =  ((u  &  1)  ==  1)  ?  v  :  -(u  /  2)/*  B3  */;    do  {  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  short  NS  PS  ZS  boolean  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  k  t  u  v  	projects/Math94/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	432	433	1	replace	if(k  ==  31)  {  aughtException( "Overflow:  gcd  is  2  >>  31 ");  }  else  {  throw  new  ArithmeticException( "Overflow:  gcd  is  2!=  31 ");  }	  aughtException(   "Overflow:    gcd    is    2    >>    31   ");    	non-compiled	[CE]  <identifier>  expected	31	None	replace
196	[BUG]  [BUGGY]  while(t  <  =  0)  {  for(int  k  =  0;  k  <  2;  k++)  {  throw  new  ArithmeticException( "Overflow:  gcd  is  2  >=  31 ");  }  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  v  /=  2;      [BUGGY]  while(t  <  =  0)  {  for(int  k  =  0;  k  <  2;  k++)  {  throw  new  ArithmeticException( "Overflow:  gcd  is  2  >=  31 ");  }  [BUGGY]      k++;  //  cast  out  twos.  }  }  if  (k  ==  31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }    int  t  =  ((u  &  1)  ==  1)  ?  v  :  -(u  /  2)/*  B3  */;    do  {  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  short  NS  PS  ZS  boolean  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  k  t  u  v  	projects/Math94/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	432	433	1	replace	while(t  <  =  0)  {  for(int  k  =  0;  k  <  2;  k++)  {  throw  new  ArithmeticException( "Overflow:  gcd  is  2  >=  31 ");  }	  while(t    <    0)    {    for(int    k    =    0;    k    <    2;    k++)    {    throw    new    ArithmeticException(   "Overflow:    gcd    is    2    >=    31   ");    }    	non-compiled	[CE]  <identifier>  expected	93	None	replace
197	[BUG]  [BUGGY]  aught(new  ArithmeticException( "overflow:  gcd  is  2  {  1  }   "));  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  v  /=  2;      [BUGGY]  aught(new  ArithmeticException( "overflow:  gcd  is  2  {  1  }   "));  [BUGGY]      k++;  //  cast  out  twos.  }  }  if  (k  ==  31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }    int  t  =  ((u  &  1)  ==  1)  ?  v  :  -(u  /  2)/*  B3  */;    do  {  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  short  NS  PS  ZS  boolean  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  k  t  u  v  	projects/Math94/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	432	433	1	replace	aught(new  ArithmeticException( "overflow:  gcd  is  2  {  1  }   "));	  aught(new    ArithmeticException(   "overflow:    gcd    is    2    ==    31   "));    	non-compiled	[CE]  <identifier>  expected	106	None	replace
198	[BUG]  [BUGGY]  aught(new  ArithmeticException( "overflow:  gcd  is  2  <  31   "));  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  v  /=  2;      [BUGGY]  aught(new  ArithmeticException( "overflow:  gcd  is  2  <  31   "));  [BUGGY]      k++;  //  cast  out  twos.  }  }  if  (k  ==  31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }    int  t  =  ((u  &  1)  ==  1)  ?  v  :  -(u  /  2)/*  B3  */;    do  {  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  short  NS  PS  ZS  boolean  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  k  t  u  v  	projects/Math94/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	432	433	1	replace	aught(new  ArithmeticException( "overflow:  gcd  is  2  <  31   "));	  aught(new    ArithmeticException(   "overflow:    gcd    is    2    ==    31   "));    	non-compiled	[CE]  <identifier>  expected	106	None	replace
199	[BUG]  [BUGGY]  try  {  for(int  k  =  0;  k  <  31;  k++)  {  throw  new  ArithmeticException( "overflow:  Gcd  is  2  >>  31 ");  }  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  v  /=  2;      [BUGGY]  try  {  for(int  k  =  0;  k  <  31;  k++)  {  throw  new  ArithmeticException( "overflow:  Gcd  is  2  >>  31 ");  }  [BUGGY]      k++;  //  cast  out  twos.  }  }  if  (k  ==  31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }    int  t  =  ((u  &  1)  ==  1)  ?  v  :  -(u  /  2)/*  B3  */;    do  {  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  short  NS  PS  ZS  boolean  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  k  t  u  v  	projects/Math94/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	432	433	1	replace	try  {  for(int  k  =  0;  k  <  31;  k++)  {  throw  new  ArithmeticException( "overflow:  Gcd  is  2  >>  31 ");  }	  try    {    for(int    k    =    0;    k    <    2;    k++)    {    throw    new    ArithmeticException(   "overflow:    Gcd    is    2    >>    31   ");    }    	non-compiled	[CE]  <identifier>  expected	117	None	replace
200	[BUG]  [BUGGY]  try  {  for(int  k  =  0;  k  <  3;  k++)  {  throw  new  ArithmeticException( "overflow:  Gcd  is  2  >>  31 ");  }  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  v  /=  2;      [BUGGY]  try  {  for(int  k  =  0;  k  <  3;  k++)  {  throw  new  ArithmeticException( "overflow:  Gcd  is  2  >>  31 ");  }  [BUGGY]      k++;  //  cast  out  twos.  }  }  if  (k  ==  31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }    int  t  =  ((u  &  1)  ==  1)  ?  v  :  -(u  /  2)/*  B3  */;    do  {  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  short  NS  PS  ZS  boolean  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  k  t  u  v  	projects/Math94/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	432	433	1	replace	try  {  for(int  k  =  0;  k  <  3;  k++)  {  throw  new  ArithmeticException( "overflow:  Gcd  is  2  >>  31 ");  }	  try    {    for(int    k    =    0;    k    <    2;    k++)    {    throw    new    ArithmeticException(   "overflow:    Gcd    is    2    >>    31   ");    }    	non-compiled	[CE]  <identifier>  expected	117	None	replace
201	[BUG]  [BUGGY]  try  {  for(int  k  =  1;  k  <  2;  k++)  {  throw  new  ArithmeticException( "overflow:  Gcd  is  2  >>  31 ");  }  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  v  /=  2;      [BUGGY]  try  {  for(int  k  =  1;  k  <  2;  k++)  {  throw  new  ArithmeticException( "overflow:  Gcd  is  2  >>  31 ");  }  [BUGGY]      k++;  //  cast  out  twos.  }  }  if  (k  ==  31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }    int  t  =  ((u  &  1)  ==  1)  ?  v  :  -(u  /  2)/*  B3  */;    do  {  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  short  NS  PS  ZS  boolean  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  k  t  u  v  	projects/Math94/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	432	433	1	replace	try  {  for(int  k  =  1;  k  <  2;  k++)  {  throw  new  ArithmeticException( "overflow:  Gcd  is  2  >>  31 ");  }	  try    {    for(int    k    =    0;    k    <    2;    k++)    {    throw    new    ArithmeticException(   "overflow:    Gcd    is    2    >>    31   ");    }    	non-compiled	[CE]  <identifier>  expected	117	None	replace
202	[BUG]  [BUGGY]  if(k  ==  31)  {  throw  new  ArithmeticException( "Overflow:  gcd  is  2  ==  31 ");  }  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  v  /=  2;      [BUGGY]  if(k  ==  31)  {  throw  new  ArithmeticException( "Overflow:  gcd  is  2  ==  31 ");  }  [BUGGY]      k++;  //  cast  out  twos.  }  }  if  (k  ==  31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }    int  t  =  ((u  &  1)  ==  1)  ?  v  :  -(u  /  2)/*  B3  */;    do  {  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  short  NS  PS  ZS  boolean  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  k  t  u  v  	projects/Math94/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	432	433	1	replace	if(k  ==  31)  {  throw  new  ArithmeticException( "Overflow:  gcd  is  2  ==  31 ");  }	  aughtException(   "Overflow:    gcd    is    2    ==    31   ");    	non-compiled	[CE]  <identifier>  expected	59	None	replace
203	[BUG]  [BUGGY]  if(k  ==  31)  {  aughtException( "Overflow:  gcd  is  2  ==  31 ");  }  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  v  /=  2;      [BUGGY]  if(k  ==  31)  {  aughtException( "Overflow:  gcd  is  2  ==  31 ");  }  [BUGGY]      k++;  //  cast  out  twos.  }  }  if  (k  ==  31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }    int  t  =  ((u  &  1)  ==  1)  ?  v  :  -(u  /  2)/*  B3  */;    do  {  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  short  NS  PS  ZS  boolean  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  k  t  u  v  	projects/Math94/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	432	433	1	replace	if(k  ==  31)  {  aughtException( "Overflow:  gcd  is  2  ==  31 ");  }	  aughtException(   "Overflow:    gcd    is    2    ==    31   ");    	non-compiled	[CE]  <identifier>  expected	59	None	replace
204	[BUG]  [BUGGY]  safeThan  <  ArithmeticException.DEFAULT_NUMBER_ERROR  ||  k  >  0)  {  throw  new  ArithmeticException( "overflow:  gcd  is  2  {  31 ");  }  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  v  /=  2;      [BUGGY]  safeThan  <  ArithmeticException.DEFAULT_NUMBER_ERROR  ||  k  >  0)  {  throw  new  ArithmeticException( "overflow:  gcd  is  2  {  31 ");  }  [BUGGY]      k++;  //  cast  out  twos.  }  }  if  (k  ==  31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }    int  t  =  ((u  &  1)  ==  1)  ?  v  :  -(u  /  2)/*  B3  */;    do  {  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  short  NS  PS  ZS  boolean  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  k  t  u  v  	projects/Math94/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	432	433	1	replace	safeThan  <  ArithmeticException.DEFAULT_NUMBER_ERROR  ||  k  >  0)  {  throw  new  ArithmeticException( "overflow:  gcd  is  2  {  31 ");  }	  safeThan    <    ArithmeticException.DEFAULT_NUMBER_ERROR    ||    t    >    0)    {    throw    new    ArithmeticException(   "overflow:    gcd    is    2    ==    31   ");    }    	non-compiled	[CE]  <identifier>  expected	89	None	replace
205	[BUG]  [BUGGY]  safeThan  <  ArithmeticException.DEFAULT_NUMBER_ERROR  ||  k  >  31)  {  throw  new  ArithmeticException( "overflow:  gcd  is  2  {  31 ");  }  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  v  /=  2;      [BUGGY]  safeThan  <  ArithmeticException.DEFAULT_NUMBER_ERROR  ||  k  >  31)  {  throw  new  ArithmeticException( "overflow:  gcd  is  2  {  31 ");  }  [BUGGY]      k++;  //  cast  out  twos.  }  }  if  (k  ==  31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }    int  t  =  ((u  &  1)  ==  1)  ?  v  :  -(u  /  2)/*  B3  */;    do  {  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  short  NS  PS  ZS  boolean  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  k  t  u  v  	projects/Math94/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	432	433	1	replace	safeThan  <  ArithmeticException.DEFAULT_NUMBER_ERROR  ||  k  >  31)  {  throw  new  ArithmeticException( "overflow:  gcd  is  2  {  31 ");  }	  safeThan    <    ArithmeticException.DEFAULT_NUMBER_ERROR    ||    t    >    0)    {    throw    new    ArithmeticException(   "overflow:    gcd    is    2    ==    31   ");    }    	non-compiled	[CE]  <identifier>  expected	89	None	replace
206	[BUG]  [BUGGY]  safeThan  <  ArithmeticException.DEFAULT_NUMBER_ERROR  &&  t  >  0)  {  throw  new  ArithmeticException( "overflow:  gcd  is  2  ==  31 ");  }  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]      }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  v  /=  2;      [BUGGY]  safeThan  <  ArithmeticException.DEFAULT_NUMBER_ERROR  &&  t  >  0)  {  throw  new  ArithmeticException( "overflow:  gcd  is  2  ==  31 ");  }  [BUGGY]      k++;  //  cast  out  twos.  }  }  if  (k  ==  31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }    int  t  =  ((u  &  1)  ==  1)  ?  v  :  -(u  /  2)/*  B3  */;    do  {  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  short  NS  PS  ZS  boolean  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  k  t  u  v  	projects/Math94/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	432	433	1	replace	safeThan  <  ArithmeticException.DEFAULT_NUMBER_ERROR  &&  t  >  0)  {  throw  new  ArithmeticException( "overflow:  gcd  is  2  ==  31 ");  }	  safeThan    <    ArithmeticException.DEFAULT_NUMBER_ERROR    ||    t    >    0)    {    throw    new    ArithmeticException(   "overflow:    gcd    is    2    ==    31   ");    }    	non-compiled	[CE]  <identifier>  expected	89	None	replace
207	[BUG]  [BUGGY]  ||  t  ==  0)  {  k++;  }  [CE]  <identifier>  expected  [FE]            AssertionFailedError      [CONTEXT]      }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  v  /=  2;      [BUGGY]  ||  t  ==  0)  {  k++;  }  [BUGGY]      }  if  (k  ==  31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }    int  t  =  ((u  &  1)  ==  1)  ?  v  :  -(u  /  2)/*  B3  */;    do  {  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  short  NS  PS  ZS  boolean  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  k  t  u  v  	projects/Math94/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	432	433	1	replace	||  t  ==  0)  {  k++;  }	  ||    t    >    0)    {    k++;    }    	non-compiled	[CE]  <identifier>  expected	15	None	replace
208	[BUG]  [BUGGY]  ||  t  <  0)  {  k++;  }  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  v  /=  2;      [BUGGY]  ||  t  <  0)  {  k++;  }  [BUGGY]      }  if  (k  ==  31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }    int  t  =  ((u  &  1)  ==  1)  ?  v  :  -(u  /  2)/*  B3  */;    do  {  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  short  NS  PS  ZS  boolean  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  k  t  u  v  	projects/Math94/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	432	433	1	replace	||  t  <  0)  {  k++;  }	  ||    t    >    0)    {    k++;    }    	non-compiled	[CE]  <identifier>  expected	15	None	replace
209	[BUG]  [BUGGY]  ||  t!=  0)  {  k++;  }  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  v  /=  2;      [BUGGY]  ||  t!=  0)  {  k++;  }  [BUGGY]      }  if  (k  ==  31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }    int  t  =  ((u  &  1)  ==  1)  ?  v  :  -(u  /  2)/*  B3  */;    do  {  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  short  NS  PS  ZS  boolean  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  k  t  u  v  	projects/Math94/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	432	433	1	replace	||  t!=  0)  {  k++;  }	  ||    t    >    0)    {    k++;    }    	non-compiled	[CE]  <identifier>  expected	15	None	replace
210	[BUG]  [BUGGY]  ||  k  >  0)  {  k++;  }  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  v  /=  2;      [BUGGY]  ||  k  >  0)  {  k++;  }  [BUGGY]      }  if  (k  ==  31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }    int  t  =  ((u  &  1)  ==  1)  ?  v  :  -(u  /  2)/*  B3  */;    do  {  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  short  NS  PS  ZS  boolean  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  k  t  u  v  	projects/Math94/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	432	433	1	replace	||  k  >  0)  {  k++;  }	  ||    t    >    0)    {    k++;    }    	non-compiled	[CE]  <identifier>  expected	15	None	replace
211	[BUG]  [BUGGY]  if(t  ==  31)  {  if(v  >  0)  {  k++;  }  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  v  /=  2;      [BUGGY]  if(t  ==  31)  {  if(v  >  0)  {  k++;  }  [BUGGY]      }  if  (k  ==  31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }    int  t  =  ((u  &  1)  ==  1)  ?  v  :  -(u  /  2)/*  B3  */;    do  {  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  short  NS  PS  ZS  boolean  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  k  t  u  v  	projects/Math94/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	432	433	1	replace	if(t  ==  31)  {  if(v  >  0)  {  k++;  }	  if(v    >    0)    {    k++;    }    else    {    throw    new    ArithmeticException(   "   ");    }    	non-compiled	[CE]  <identifier>  expected	65	None	replace
212	[BUG]  [BUGGY]  if(t  ==  0)  {  k++;  }  else  {  throw  new  ArithmeticException( " ");  }  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  v  /=  2;      [BUGGY]  if(t  ==  0)  {  k++;  }  else  {  throw  new  ArithmeticException( " ");  }  [BUGGY]      }  if  (k  ==  31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }    int  t  =  ((u  &  1)  ==  1)  ?  v  :  -(u  /  2)/*  B3  */;    do  {  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  short  NS  PS  ZS  boolean  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  k  t  u  v  	projects/Math94/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	432	433	1	replace	if(t  ==  0)  {  k++;  }  else  {  throw  new  ArithmeticException( " ");  }	  if(v    >    0)    {    k++;    }    else    {    throw    new    ArithmeticException(   "   ");    }    	non-compiled	[CE]  <identifier>  expected	65	None	replace
213	[BUG]  [BUGGY]  Mutation(t  >  0)  {  k++;  }  else  {  throw  new  ArithmeticException( "overflow:  gcd  is  2  >=  31 ");  }  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  v  /=  2;      [BUGGY]  Mutation(t  >  0)  {  k++;  }  else  {  throw  new  ArithmeticException( "overflow:  gcd  is  2  >=  31 ");  }  [BUGGY]      }  if  (k  ==  31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }    int  t  =  ((u  &  1)  ==  1)  ?  v  :  -(u  /  2)/*  B3  */;    do  {  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  short  NS  PS  ZS  boolean  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  k  t  u  v  	projects/Math94/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	432	433	1	replace	Mutation(t  >  0)  {  k++;  }  else  {  throw  new  ArithmeticException( "overflow:  gcd  is  2  >=  31 ");  }	  mutation(t    >    0)    {    k++;    }    else    {    throw    new    ArithmeticException(   "overflow:    gcd    is    2    >>    31   ");    }    	non-compiled	[CE]  <identifier>  expected	54	None	replace
214	[BUG]  [BUGGY]  Mutation(t  >  0)  {  k++;  }  else  {  throw  new  ArithmeticException( "Overflow:  gcd  is  2  >>  31 ");  }  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  v  /=  2;      [BUGGY]  Mutation(t  >  0)  {  k++;  }  else  {  throw  new  ArithmeticException( "Overflow:  gcd  is  2  >>  31 ");  }  [BUGGY]      }  if  (k  ==  31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }    int  t  =  ((u  &  1)  ==  1)  ?  v  :  -(u  /  2)/*  B3  */;    do  {  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  short  NS  PS  ZS  boolean  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  k  t  u  v  	projects/Math94/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	432	433	1	replace	Mutation(t  >  0)  {  k++;  }  else  {  throw  new  ArithmeticException( "Overflow:  gcd  is  2  >>  31 ");  }	  mutation(t    >    0)    {    k++;    }    else    {    throw    new    ArithmeticException(   "overflow:    gcd    is    2    >>    31   ");    }    	non-compiled	[CE]  <identifier>  expected	54	None	replace
215	[BUG]  [BUGGY]  while(t  >  0)  {  for(int  k  =  0;  k  <  31;  k++)  {  throw  new  ArithmeticException( "overflow:  gcd  is  2  ==  31 ");  }  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  v  /=  2;      [BUGGY]  while(t  >  0)  {  for(int  k  =  0;  k  <  31;  k++)  {  throw  new  ArithmeticException( "overflow:  gcd  is  2  ==  31 ");  }  [BUGGY]      }  if  (k  ==  31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }    int  t  =  ((u  &  1)  ==  1)  ?  v  :  -(u  /  2)/*  B3  */;    do  {  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  short  NS  PS  ZS  boolean  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  k  t  u  v  	projects/Math94/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	432	433	1	replace	while(t  >  0)  {  for(int  k  =  0;  k  <  31;  k++)  {  throw  new  ArithmeticException( "overflow:  gcd  is  2  ==  31 ");  }	  if(t    >    0)    {    for(int    k    =    0;    k    <    31;    k++)    {    throw    new    ArithmeticException(   "overflow:    gcd    is    2    ==    31   ");    }    	non-compiled	[CE]  <identifier>  expected	14	None	replace
216	[BUG]  [BUGGY]  while(t  <  0)  {  for(int  k  =  0;  k  <  31;  k++)  {  throw  new  ArithmeticException( "overflow:  gcd  is  2  ==  31 ");  }  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]      }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  v  /=  2;      [BUGGY]  while(t  <  0)  {  for(int  k  =  0;  k  <  31;  k++)  {  throw  new  ArithmeticException( "overflow:  gcd  is  2  ==  31 ");  }  [BUGGY]      }  if  (k  ==  31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }    int  t  =  ((u  &  1)  ==  1)  ?  v  :  -(u  /  2)/*  B3  */;    do  {  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  short  NS  PS  ZS  boolean  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  k  t  u  v  	projects/Math94/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	432	433	1	replace	while(t  <  0)  {  for(int  k  =  0;  k  <  31;  k++)  {  throw  new  ArithmeticException( "overflow:  gcd  is  2  ==  31 ");  }	  if(t    >    0)    {    for(int    k    =    0;    k    <    31;    k++)    {    throw    new    ArithmeticException(   "overflow:    gcd    is    2    ==    31   ");    }    	non-compiled	[CE]  <identifier>  expected	14	None	replace
217	[BUG]  [BUGGY]  while(v  >  0)  {  for(int  k  =  0;  k  <  31;  k++)  {  throw  new  ArithmeticException( "overflow:  gcd  is  2  ==  31 ");  }  [CE]  <identifier>  expected  [FE]                          AssertionFailedError      [CONTEXT]      }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  v  /=  2;      [BUGGY]  while(v  >  0)  {  for(int  k  =  0;  k  <  31;  k++)  {  throw  new  ArithmeticException( "overflow:  gcd  is  2  ==  31 ");  }  [BUGGY]      }  if  (k  ==  31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }    int  t  =  ((u  &  1)  ==  1)  ?  v  :  -(u  /  2)/*  B3  */;    do  {  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  short  NS  PS  ZS  boolean  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  k  t  u  v  	projects/Math94/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	432	433	1	replace	while(v  >  0)  {  for(int  k  =  0;  k  <  31;  k++)  {  throw  new  ArithmeticException( "overflow:  gcd  is  2  ==  31 ");  }	  if(t    >    0)    {    for(int    k    =    0;    k    <    31;    k++)    {    throw    new    ArithmeticException(   "overflow:    gcd    is    2    ==    31   ");    }    	non-compiled	[CE]  <identifier>  expected	14	None	replace
218	[BUG]  [BUGGY]  while(t  >  0)  {  for(int  k  =  0;  k  <  31;  k++)  {  throw  new  ArithmeticException( "overflow:  gcd  is  2  >>  31 ");  }  [CE]  <identifier>  expected  [FE]                            AssertionFailedError      [CONTEXT]      }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  v  /=  2;      [BUGGY]  while(t  >  0)  {  for(int  k  =  0;  k  <  31;  k++)  {  throw  new  ArithmeticException( "overflow:  gcd  is  2  >>  31 ");  }  [BUGGY]      }  if  (k  ==  31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }    int  t  =  ((u  &  1)  ==  1)  ?  v  :  -(u  /  2)/*  B3  */;    do  {  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  short  NS  PS  ZS  boolean  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  k  t  u  v  	projects/Math94/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	432	433	1	replace	while(t  >  0)  {  for(int  k  =  0;  k  <  31;  k++)  {  throw  new  ArithmeticException( "overflow:  gcd  is  2  >>  31 ");  }	  if(t    >    0)    {    for(int    k    =    0;    k    <    31;    k++)    {    throw    new    ArithmeticException(   "overflow:    gcd    is    2    ==    31   ");    }    	non-compiled	[CE]  <identifier>  expected	14	None	replace
219	[BUG]  [BUGGY]  if(k  >  31)  {  k++;  }  else  {  throw  new  ArithmeticException( "overflow:  gcd  is  2  ==  31 ");  }  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  v  /=  2;      [BUGGY]  if(k  >  31)  {  k++;  }  else  {  throw  new  ArithmeticException( "overflow:  gcd  is  2  ==  31 ");  }  [BUGGY]      }  if  (k  ==  31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }    int  t  =  ((u  &  1)  ==  1)  ?  v  :  -(u  /  2)/*  B3  */;    do  {  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  short  NS  PS  ZS  boolean  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  k  t  u  v  	projects/Math94/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	432	433	1	replace	if(k  >  31)  {  k++;  }  else  {  throw  new  ArithmeticException( "overflow:  gcd  is  2  ==  31 ");  }	  if(t    >    31)    {    k++;    }    else    {    throw    new    ArithmeticException(   "overflow:    gcd    is    2    ==    31   ");    }    	non-compiled	[CE]  <identifier>  expected	45	None	replace
220	[BUG]  [BUGGY]  if(k  >  31)  {  k++;  }  else  {  throw  new  ArithmeticException( "overflow:  gcd  is  2  {  31 ");  }  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  v  /=  2;      [BUGGY]  if(k  >  31)  {  k++;  }  else  {  throw  new  ArithmeticException( "overflow:  gcd  is  2  {  31 ");  }  [BUGGY]      }  if  (k  ==  31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }    int  t  =  ((u  &  1)  ==  1)  ?  v  :  -(u  /  2)/*  B3  */;    do  {  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  short  NS  PS  ZS  boolean  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  k  t  u  v  	projects/Math94/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	432	433	1	replace	if(k  >  31)  {  k++;  }  else  {  throw  new  ArithmeticException( "overflow:  gcd  is  2  {  31 ");  }	  if(t    >    31)    {    k++;    }    else    {    throw    new    ArithmeticException(   "overflow:    gcd    is    2    ==    31   ");    }    	non-compiled	[CE]  <identifier>  expected	45	None	replace
221	[BUG]  [BUGGY]  aughtExceptionHandler(new  ArithmeticException( "gcd  is  2  >>  31 "));  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  v  /=  2;      [BUGGY]  aughtExceptionHandler(new  ArithmeticException( "gcd  is  2  >>  31 "));  [BUGGY]      k++;  //  cast  out  twos.  }  }  if  (k  ==  31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }    int  t  =  ((u  &  1)  ==  1)  ?  v  :  -(u  /  2)/*  B3  */;    do  {  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  short  NS  PS  ZS  boolean  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  k  t  u  v  	projects/Math94/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	432	433	1	replace	aughtExceptionHandler(new  ArithmeticException( "gcd  is  2  >>  31 "));	  aughtExceptionHandler(new    ArithmeticException(   "overflow:    gcd    is    2    >>    31   "));    	non-compiled	[CE]  <identifier>  expected	32	None	replace
222	[BUG]  [BUGGY]  aughtExceptionHandler(new  ArithmeticException( "overflow:  gcd  is  2  ^  31 "));  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  v  /=  2;      [BUGGY]  aughtExceptionHandler(new  ArithmeticException( "overflow:  gcd  is  2  ^  31 "));  [BUGGY]      k++;  //  cast  out  twos.  }  }  if  (k  ==  31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }    int  t  =  ((u  &  1)  ==  1)  ?  v  :  -(u  /  2)/*  B3  */;    do  {  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  short  NS  PS  ZS  boolean  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  k  t  u  v  	projects/Math94/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	432	433	1	replace	aughtExceptionHandler(new  ArithmeticException( "overflow:  gcd  is  2  ^  31 "));	  aughtExceptionHandler(new    ArithmeticException(   "overflow:    gcd    is    2    >>    31   "));    	non-compiled	[CE]  <identifier>  expected	32	None	replace
223	[BUG]  [BUGGY]  if(t  >  0)  {  k++;  //  cast  out  twos.  }  else  {  throw  new  ArithmeticException( " ");  }  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  v  /=  2;      [BUGGY]  if(t  >  0)  {  k++;  //  cast  out  twos.  }  else  {  throw  new  ArithmeticException( " ");  }  [BUGGY]      }  if  (k  ==  31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }    int  t  =  ((u  &  1)  ==  1)  ?  v  :  -(u  /  2)/*  B3  */;    do  {  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  short  NS  PS  ZS  boolean  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  k  t  u  v  	projects/Math94/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	432	433	1	replace	if(t  >  0)  {  k++;  //  cast  out  twos.  }  else  {  throw  new  ArithmeticException( " ");  }	  k++;    //    cast    out    twos.    	non-compiled	[CE]  <identifier>  expected	24	None	replace
224	[BUG]  [BUGGY]  if(t  >  31)  {  k++;  }  else  {  throw  new  ArithmeticException( "overflow:  gcd  is  2  >>  31 ");  }  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  v  /=  2;      [BUGGY]  if(t  >  31)  {  k++;  }  else  {  throw  new  ArithmeticException( "overflow:  gcd  is  2  >>  31 ");  }  [BUGGY]      }  if  (k  ==  31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }    int  t  =  ((u  &  1)  ==  1)  ?  v  :  -(u  /  2)/*  B3  */;    do  {  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  short  NS  PS  ZS  boolean  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  k  t  u  v  	projects/Math94/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	432	433	1	replace	if(t  >  31)  {  k++;  }  else  {  throw  new  ArithmeticException( "overflow:  gcd  is  2  >>  31 ");  }	  k++;    //    cast    out    twos.    	non-compiled	[CE]  <identifier>  expected	24	None	replace
225	[BUG]  [BUGGY]  if(k  ==  31)  {  aughtException( "overflow:  gcd  is  2  >>  31 ");  }  else  {  throw  new  ArithmeticException( "Overflow:  gcd  is  2  >=  31 ");  }  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  v  /=  2;      [BUGGY]  if(k  ==  31)  {  aughtException( "overflow:  gcd  is  2  >>  31 ");  }  else  {  throw  new  ArithmeticException( "Overflow:  gcd  is  2  >=  31 ");  }  [BUGGY]      k++;  //  cast  out  twos.  }  }  if  (k  ==  31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }    int  t  =  ((u  &  1)  ==  1)  ?  v  :  -(u  /  2)/*  B3  */;    do  {  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  short  NS  PS  ZS  boolean  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  k  t  u  v  	projects/Math94/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	432	433	1	replace	if(k  ==  31)  {  aughtException( "overflow:  gcd  is  2  >>  31 ");  }  else  {  throw  new  ArithmeticException( "Overflow:  gcd  is  2  >=  31 ");  }	  aughtException(   "overflow:    gcd    is    2    >>    31   ");    	non-compiled	[CE]  <identifier>  expected	21	None	replace
226	[BUG]  [BUGGY]  throw  new  ArithmeticException( "Overflow:  gcd  is  2  {  31 ");  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  v  /=  2;      [BUGGY]  throw  new  ArithmeticException( "Overflow:  gcd  is  2  {  31 ");  [BUGGY]      k++;  //  cast  out  twos.  }  }  if  (k  ==  31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }    int  t  =  ((u  &  1)  ==  1)  ?  v  :  -(u  /  2)/*  B3  */;    do  {  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  short  NS  PS  ZS  boolean  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  k  t  u  v  	projects/Math94/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	432	433	1	replace	throw  new  ArithmeticException( "Overflow:  gcd  is  2  {  31 ");	  try    {    [Delete]    catch(IllegalArgumentException    e)    {    throw    new    ArithmeticException(   "Overflow:    gcd    is    2    ==    31   ");    }    	non-compiled	[CE]  <identifier>  expected	133	None	replace
227	[BUG]  [BUGGY]  ||  t  >  0)  {  for(int  k  =  0;  k  <  2;  k++)  {  throw  new  ArithmeticException( "overflow:  gcd  is  2  {  31 ");  }  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  v  /=  2;      [BUGGY]  ||  t  >  0)  {  for(int  k  =  0;  k  <  2;  k++)  {  throw  new  ArithmeticException( "overflow:  gcd  is  2  {  31 ");  }  [BUGGY]      k++;  //  cast  out  twos.  }  }  if  (k  ==  31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }    int  t  =  ((u  &  1)  ==  1)  ?  v  :  -(u  /  2)/*  B3  */;    do  {  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  short  NS  PS  ZS  boolean  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  k  t  u  v  	projects/Math94/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	432	433	1	replace	||  t  >  0)  {  for(int  k  =  0;  k  <  2;  k++)  {  throw  new  ArithmeticException( "overflow:  gcd  is  2  {  31 ");  }	  if(t    >    0)    {    for(int    k    =    0;    k    <    2;    k++)    {    throw    new    ArithmeticException(   "overflow:    gcd    is    2    {    31   ");    }    	non-compiled	[CE]  <identifier>  expected	95	None	replace
228	[BUG]  [BUGGY]  if(v  >  0)  {  for(int  k  =  0;  k  <  2;  k++)  {  throw  new  ArithmeticException( "overflow:  gcd  is  2  {  31 ");  }  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  v  /=  2;      [BUGGY]  if(v  >  0)  {  for(int  k  =  0;  k  <  2;  k++)  {  throw  new  ArithmeticException( "overflow:  gcd  is  2  {  31 ");  }  [BUGGY]      k++;  //  cast  out  twos.  }  }  if  (k  ==  31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }    int  t  =  ((u  &  1)  ==  1)  ?  v  :  -(u  /  2)/*  B3  */;    do  {  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  short  NS  PS  ZS  boolean  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  k  t  u  v  	projects/Math94/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	432	433	1	replace	if(v  >  0)  {  for(int  k  =  0;  k  <  2;  k++)  {  throw  new  ArithmeticException( "overflow:  gcd  is  2  {  31 ");  }	  if(t    >    0)    {    for(int    k    =    0;    k    <    2;    k++)    {    throw    new    ArithmeticException(   "overflow:    gcd    is    2    {    31   ");    }    	non-compiled	[CE]  <identifier>  expected	95	None	replace
229	[BUG]  [BUGGY]  if(v  >  0)  {  k++;  }  else  {  throw  new  ArithmeticException( "overflow:  gcd  is  2  {  31 ");  }  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  v  /=  2;      [BUGGY]  if(v  >  0)  {  k++;  }  else  {  throw  new  ArithmeticException( "overflow:  gcd  is  2  {  31 ");  }  [BUGGY]      }  if  (k  ==  31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }    int  t  =  ((u  &  1)  ==  1)  ?  v  :  -(u  /  2)/*  B3  */;    do  {  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  short  NS  PS  ZS  boolean  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  k  t  u  v  	projects/Math94/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	432	433	1	replace	if(v  >  0)  {  k++;  }  else  {  throw  new  ArithmeticException( "overflow:  gcd  is  2  {  31 ");  }	  if(k    >    0)    {    k++;    }    else    {    throw    new    ArithmeticException(   "overflow:    gcd    is    2    ==    31   ");    }    	non-compiled	[CE]  <identifier>  expected	108	None	replace
230	[BUG]  [BUGGY]  if(v  >  0)  {  k++;  }  else  {  throw  new  ArithmeticException( "overflow:  gcd  is  2  ==  31 ");  }  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  v  /=  2;      [BUGGY]  if(v  >  0)  {  k++;  }  else  {  throw  new  ArithmeticException( "overflow:  gcd  is  2  ==  31 ");  }  [BUGGY]      }  if  (k  ==  31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }    int  t  =  ((u  &  1)  ==  1)  ?  v  :  -(u  /  2)/*  B3  */;    do  {  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  short  NS  PS  ZS  boolean  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  k  t  u  v  	projects/Math94/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	432	433	1	replace	if(v  >  0)  {  k++;  }  else  {  throw  new  ArithmeticException( "overflow:  gcd  is  2  ==  31 ");  }	  if(k    >    0)    {    k++;    }    else    {    throw    new    ArithmeticException(   "overflow:    gcd    is    2    ==    31   ");    }    	non-compiled	[CE]  <identifier>  expected	108	None	replace
231	[BUG]  [BUGGY]  int  k  =  ((  u  &  1)  ==  0  &&  v  &  2)  ==  0)  {  u  /=  2;  v  /=  2;  }  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  v  /=  2;      [BUGGY]  int  k  =  ((  u  &  1)  ==  0  &&  v  &  2)  ==  0)  {  u  /=  2;  v  /=  2;  }  [BUGGY]      k++;  //  cast  out  twos.  }  }  if  (k  ==  31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }    int  t  =  ((u  &  1)  ==  1)  ?  v  :  -(u  /  2)/*  B3  */;    do  {  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  short  NS  PS  ZS  boolean  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  k  t  u  v  	projects/Math94/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	432	433	1	replace	int  k  =  ((  u  &  1)  ==  0  &&  v  &  2)  ==  0)  {  u  /=  2;  v  /=  2;  }	  int    k    =    ((    u    &    1)    ==    0    &&    v    &    2)    ==    0    &&    k    <    31)    {    u    /=    2;    v    /=    2;    }    	non-compiled	[CE]  <identifier>  expected	40	None	replace
232	[BUG]  [BUGGY]  int  k  =  ((  u  &  1)  ==  1  &&  v  &  2)  ==  1  &&  k  <  31)  {  u  /=  2;  v  /=  2;  }  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  v  /=  2;      [BUGGY]  int  k  =  ((  u  &  1)  ==  1  &&  v  &  2)  ==  1  &&  k  <  31)  {  u  /=  2;  v  /=  2;  }  [BUGGY]      k++;  //  cast  out  twos.  }  }  if  (k  ==  31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }    int  t  =  ((u  &  1)  ==  1)  ?  v  :  -(u  /  2)/*  B3  */;    do  {  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  short  NS  PS  ZS  boolean  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  k  t  u  v  	projects/Math94/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	432	433	1	replace	int  k  =  ((  u  &  1)  ==  1  &&  v  &  2)  ==  1  &&  k  <  31)  {  u  /=  2;  v  /=  2;  }	  int    k    =    ((    u    &    1)    ==    0    &&    v    &    2)    ==    0    &&    k    <    31)    {    u    /=    2;    v    /=    2;    }    	non-compiled	[CE]  <identifier>  expected	40	None	replace
233	[BUG]  [BUGGY]  int  k  =  ((  u  &  1)  ==  0  &&  v  &  2)  ==  0)  {  u  /=  31;  v  /=  2;  }  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  v  /=  2;      [BUGGY]  int  k  =  ((  u  &  1)  ==  0  &&  v  &  2)  ==  0)  {  u  /=  31;  v  /=  2;  }  [BUGGY]      k++;  //  cast  out  twos.  }  }  if  (k  ==  31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }    int  t  =  ((u  &  1)  ==  1)  ?  v  :  -(u  /  2)/*  B3  */;    do  {  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  short  NS  PS  ZS  boolean  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  k  t  u  v  	projects/Math94/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	432	433	1	replace	int  k  =  ((  u  &  1)  ==  0  &&  v  &  2)  ==  0)  {  u  /=  31;  v  /=  2;  }	  int    k    =    ((    u    &    1)    ==    0    &&    v    &    2)    ==    0    &&    k    <    31)    {    u    /=    2;    v    /=    2;    }    	non-compiled	[CE]  <identifier>  expected	40	None	replace
234	[BUG]  [BUGGY]  throw  new  ArithmeticException( "overflow:  gcd  is  2  {  31 ");  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  v  /=  2;      [BUGGY]  throw  new  ArithmeticException( "overflow:  gcd  is  2  {  31 ");  [BUGGY]      k++;  //  cast  out  twos.  }  }  if  (k  ==  31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }    int  t  =  ((u  &  1)  ==  1)  ?  v  :  -(u  /  2)/*  B3  */;    do  {  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  short  NS  PS  ZS  boolean  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  k  t  u  v  	projects/Math94/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	432	433	1	replace	throw  new  ArithmeticException( "overflow:  gcd  is  2  {  31 ");	  try    {    [Delete]    catch(IllegalArgumentException    e)    {    throw    new    ArithmeticException(   "overflow:    gcd    is    2    ==    31   ");    }    	non-compiled	[CE]  <identifier>  expected	134	None	replace
235	[BUG]  [BUGGY]  Mutation(t)  {  k++;  }  else  {  throw  new  ArithmeticException( "overflow:  gcd  is  2  {  31 ");  }  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  v  /=  2;      [BUGGY]  Mutation(t)  {  k++;  }  else  {  throw  new  ArithmeticException( "overflow:  gcd  is  2  {  31 ");  }  [BUGGY]      }  if  (k  ==  31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }    int  t  =  ((u  &  1)  ==  1)  ?  v  :  -(u  /  2)/*  B3  */;    do  {  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  short  NS  PS  ZS  boolean  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  k  t  u  v  	projects/Math94/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	432	433	1	replace	Mutation(t)  {  k++;  }  else  {  throw  new  ArithmeticException( "overflow:  gcd  is  2  {  31 ");  }	  mutation(t    >    0)    {    k++;    }    else    {    throw    new    ArithmeticException(   "overflow:    gcd    is    2    {    31   ");    }    	non-compiled	[CE]  <identifier>  expected	52	None	replace
236	[BUG]  [BUGGY]  Mutation(t  >  0)  {  v++;  }  else  {  throw  new  ArithmeticException( "overflow:  gcd  is  2  {  31 ");  }  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  v  /=  2;      [BUGGY]  Mutation(t  >  0)  {  v++;  }  else  {  throw  new  ArithmeticException( "overflow:  gcd  is  2  {  31 ");  }  [BUGGY]      }  if  (k  ==  31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }    int  t  =  ((u  &  1)  ==  1)  ?  v  :  -(u  /  2)/*  B3  */;    do  {  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  short  NS  PS  ZS  boolean  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  k  t  u  v  	projects/Math94/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	432	433	1	replace	Mutation(t  >  0)  {  v++;  }  else  {  throw  new  ArithmeticException( "overflow:  gcd  is  2  {  31 ");  }	  mutation(t    >    0)    {    k++;    }    else    {    throw    new    ArithmeticException(   "overflow:    gcd    is    2    {    31   ");    }    	non-compiled	[CE]  <identifier>  expected	52	None	replace
237	[BUG]  [BUGGY]  if(k  <  =  0)  {  k++;  //  cast  out  twos.  }  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  v  /=  2;      [BUGGY]  if(k  <  =  0)  {  k++;  //  cast  out  twos.  }  [BUGGY]      }  if  (k  ==  31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }    int  t  =  ((u  &  1)  ==  1)  ?  v  :  -(u  /  2)/*  B3  */;    do  {  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  short  NS  PS  ZS  boolean  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  k  t  u  v  	projects/Math94/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	432	433	1	replace	if(k  <  =  0)  {  k++;  //  cast  out  twos.  }	  if(t    <    =    0)    {    k++;    //    cast    out    twos.    }    	non-compiled	[CE]  <identifier>  expected	5	None	replace
238	[BUG]  [BUGGY]  while(t  <  0)  {  for(int  k  =  0;  k  <  31;  k++)  {  throw  new  ArithmeticException( "overflow:  gcd  is  2  >>  31 ");  }  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  v  /=  2;      [BUGGY]  while(t  <  0)  {  for(int  k  =  0;  k  <  31;  k++)  {  throw  new  ArithmeticException( "overflow:  gcd  is  2  >>  31 ");  }  [BUGGY]      }  if  (k  ==  31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }    int  t  =  ((u  &  1)  ==  1)  ?  v  :  -(u  /  2)/*  B3  */;    do  {  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  short  NS  PS  ZS  boolean  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  k  t  u  v  	projects/Math94/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	432	433	1	replace	while(t  <  0)  {  for(int  k  =  0;  k  <  31;  k++)  {  throw  new  ArithmeticException( "overflow:  gcd  is  2  >>  31 ");  }	  if(t    >    0)    {    for(int    k    =    0;    k    <    31;    k++)    {    throw    new    ArithmeticException(   "overflow:    gcd    is    2    >>    31   ");    }    	non-compiled	[CE]  <identifier>  expected	111	None	replace
239	[BUG]  [BUGGY]  while(v  >  0)  {  for(int  k  =  0;  k  <  31;  k++)  {  throw  new  ArithmeticException( "overflow:  gcd  is  2  >>  31 ");  }  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  v  /=  2;      [BUGGY]  while(v  >  0)  {  for(int  k  =  0;  k  <  31;  k++)  {  throw  new  ArithmeticException( "overflow:  gcd  is  2  >>  31 ");  }  [BUGGY]      }  if  (k  ==  31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }    int  t  =  ((u  &  1)  ==  1)  ?  v  :  -(u  /  2)/*  B3  */;    do  {  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  short  NS  PS  ZS  boolean  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  k  t  u  v  	projects/Math94/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	432	433	1	replace	while(v  >  0)  {  for(int  k  =  0;  k  <  31;  k++)  {  throw  new  ArithmeticException( "overflow:  gcd  is  2  >>  31 ");  }	  if(t    >    0)    {    for(int    k    =    0;    k    <    31;    k++)    {    throw    new    ArithmeticException(   "overflow:    gcd    is    2    >>    31   ");    }    	non-compiled	[CE]  <identifier>  expected	111	None	replace
240	[BUG]  [BUGGY]  while(t  >  0)  {  for(int  k  =  0;  k  <  31;  k++)  {  throw  new  ArithmeticException( "overflow:  gcd  is  2  >=  31 ");  }  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]      }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  v  /=  2;      [BUGGY]  while(t  >  0)  {  for(int  k  =  0;  k  <  31;  k++)  {  throw  new  ArithmeticException( "overflow:  gcd  is  2  >=  31 ");  }  [BUGGY]      }  if  (k  ==  31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }    int  t  =  ((u  &  1)  ==  1)  ?  v  :  -(u  /  2)/*  B3  */;    do  {  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  short  NS  PS  ZS  boolean  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  k  t  u  v  	projects/Math94/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	432	433	1	replace	while(t  >  0)  {  for(int  k  =  0;  k  <  31;  k++)  {  throw  new  ArithmeticException( "overflow:  gcd  is  2  >=  31 ");  }	  if(t    >    0)    {    for(int    k    =    0;    k    <    31;    k++)    {    throw    new    ArithmeticException(   "overflow:    gcd    is    2    >>    31   ");    }    	non-compiled	[CE]  <identifier>  expected	111	None	replace
241	[BUG]  [BUGGY]  aught(new  ArithmeticException( "gcd  is  2  >>  31 "));  [CE]  <identifier>  expected  [FE]            AssertionFailedError      [CONTEXT]      }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  v  /=  2;      [BUGGY]  aught(new  ArithmeticException( "gcd  is  2  >>  31 "));  [BUGGY]      k++;  //  cast  out  twos.  }  }  if  (k  ==  31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }    int  t  =  ((u  &  1)  ==  1)  ?  v  :  -(u  /  2)/*  B3  */;    do  {  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  short  NS  PS  ZS  boolean  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  k  t  u  v  	projects/Math94/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	432	433	1	replace	aught(new  ArithmeticException( "gcd  is  2  >>  31 "));	  aught(new    ArithmeticException(   "overflow:    gcd    is    2    >>    31   "));    	non-compiled	[CE]  <identifier>  expected	136	None	replace
242	[BUG]  [BUGGY]  aught(new  ArithmeticException( "overflow:  gcd  is  2  ^  31   "));  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  v  /=  2;      [BUGGY]  aught(new  ArithmeticException( "overflow:  gcd  is  2  ^  31   "));  [BUGGY]      k++;  //  cast  out  twos.  }  }  if  (k  ==  31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }    int  t  =  ((u  &  1)  ==  1)  ?  v  :  -(u  /  2)/*  B3  */;    do  {  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  short  NS  PS  ZS  boolean  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  k  t  u  v  	projects/Math94/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	432	433	1	replace	aught(new  ArithmeticException( "overflow:  gcd  is  2  ^  31   "));	  aught(new    ArithmeticException(   "overflow:    gcd    is    2    >>    31   "));    	non-compiled	[CE]  <identifier>  expected	136	None	replace
243	[BUG]  [BUGGY]  while(t  ==  0)  {  for(int  k  =  0;  k  <  2;  k++)  {  throw  new  ArithmeticException( "Overflow:  gcd  is  2  >>  31 ");  }  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  v  /=  2;      [BUGGY]  while(t  ==  0)  {  for(int  k  =  0;  k  <  2;  k++)  {  throw  new  ArithmeticException( "Overflow:  gcd  is  2  >>  31 ");  }  [BUGGY]      k++;  //  cast  out  twos.  }  }  if  (k  ==  31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }    int  t  =  ((u  &  1)  ==  1)  ?  v  :  -(u  /  2)/*  B3  */;    do  {  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  short  NS  PS  ZS  boolean  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  k  t  u  v  	projects/Math94/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	432	433	1	replace	while(t  ==  0)  {  for(int  k  =  0;  k  <  2;  k++)  {  throw  new  ArithmeticException( "Overflow:  gcd  is  2  >>  31 ");  }	  while(t    >    0)    {    for(int    k    =    0;    k    <    2;    k++)    {    throw    new    ArithmeticException(   "Overflow:    gcd    is    2    >>    31   ");    }    	non-compiled	[CE]  <identifier>  expected	2	None	replace
244	[BUG]  [BUGGY]  if(t  >  0)  {  for(int  k  =  0;  k  <  31;  k++)  {  throw  new  ArithmeticException( "overflow:  Gcd  is  2  >>  31 ");  }  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  v  /=  2;      [BUGGY]  if(t  >  0)  {  for(int  k  =  0;  k  <  31;  k++)  {  throw  new  ArithmeticException( "overflow:  Gcd  is  2  >>  31 ");  }  [BUGGY]      k++;  //  cast  out  twos.  }  }  if  (k  ==  31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }    int  t  =  ((u  &  1)  ==  1)  ?  v  :  -(u  /  2)/*  B3  */;    do  {  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  short  NS  PS  ZS  boolean  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  k  t  u  v  	projects/Math94/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	432	433	1	replace	if(t  >  0)  {  for(int  k  =  0;  k  <  31;  k++)  {  throw  new  ArithmeticException( "overflow:  Gcd  is  2  >>  31 ");  }	  if(v    >    0)    {    for(int    k    =    0;    k    <    2;    k++)    {    throw    new    ArithmeticException(   "overflow:    Gcd    is    2    >>    31   ");    }    	non-compiled	[CE]  <identifier>  expected	50	None	replace
245	[BUG]  [BUGGY]  if(t  ==  31)  {  for(int  k  =  0;  k  <  2;  k++)  {  throw  new  ArithmeticException( "overflow:  Gcd  is  2  >>  31 ");  }  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  v  /=  2;      [BUGGY]  if(t  ==  31)  {  for(int  k  =  0;  k  <  2;  k++)  {  throw  new  ArithmeticException( "overflow:  Gcd  is  2  >>  31 ");  }  [BUGGY]      k++;  //  cast  out  twos.  }  }  if  (k  ==  31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }    int  t  =  ((u  &  1)  ==  1)  ?  v  :  -(u  /  2)/*  B3  */;    do  {  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  short  NS  PS  ZS  boolean  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  k  t  u  v  	projects/Math94/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	432	433	1	replace	if(t  ==  31)  {  for(int  k  =  0;  k  <  2;  k++)  {  throw  new  ArithmeticException( "overflow:  Gcd  is  2  >>  31 ");  }	  if(v    >    0)    {    for(int    k    =    0;    k    <    2;    k++)    {    throw    new    ArithmeticException(   "overflow:    Gcd    is    2    >>    31   ");    }    	non-compiled	[CE]  <identifier>  expected	50	None	replace
246	[BUG]  [BUGGY]  try  {  for(int  k  =  0;  k  <  31;  k++)  {  throw  new  ArithmeticException( "Overflow:  gcd  is  2  >>  31 ");  }  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  v  /=  2;      [BUGGY]  try  {  for(int  k  =  0;  k  <  31;  k++)  {  throw  new  ArithmeticException( "Overflow:  gcd  is  2  >>  31 ");  }  [BUGGY]      k++;  //  cast  out  twos.  }  }  if  (k  ==  31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }    int  t  =  ((u  &  1)  ==  1)  ?  v  :  -(u  /  2)/*  B3  */;    do  {  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  short  NS  PS  ZS  boolean  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  k  t  u  v  	projects/Math94/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	432	433	1	replace	try  {  for(int  k  =  0;  k  <  31;  k++)  {  throw  new  ArithmeticException( "Overflow:  gcd  is  2  >>  31 ");  }	  try    {    for(int    k    =    0;    k    <    2;    k++)    {    throw    new    ArithmeticException(   "Overflow:    gcd    is    2    >>    31   ");    }    	non-compiled	[CE]  <identifier>  expected	116	None	replace
247	[BUG]  [BUGGY]  try  {  for(int  k  =  1;  k  <  2;  k++)  {  throw  new  ArithmeticException( "Overflow:  gcd  is  2  >>  31 ");  }  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  v  /=  2;      [BUGGY]  try  {  for(int  k  =  1;  k  <  2;  k++)  {  throw  new  ArithmeticException( "Overflow:  gcd  is  2  >>  31 ");  }  [BUGGY]      k++;  //  cast  out  twos.  }  }  if  (k  ==  31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }    int  t  =  ((u  &  1)  ==  1)  ?  v  :  -(u  /  2)/*  B3  */;    do  {  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  short  NS  PS  ZS  boolean  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  k  t  u  v  	projects/Math94/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	432	433	1	replace	try  {  for(int  k  =  1;  k  <  2;  k++)  {  throw  new  ArithmeticException( "Overflow:  gcd  is  2  >>  31 ");  }	  try    {    for(int    k    =    0;    k    <    2;    k++)    {    throw    new    ArithmeticException(   "Overflow:    gcd    is    2    >>    31   ");    }    	non-compiled	[CE]  <identifier>  expected	116	None	replace
248	[BUG]  [BUGGY]  try  {  for(int  k  =  0;  k  <  3;  k++)  {  throw  new  ArithmeticException( "Overflow:  gcd  is  2  >>  31 ");  }  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  v  /=  2;      [BUGGY]  try  {  for(int  k  =  0;  k  <  3;  k++)  {  throw  new  ArithmeticException( "Overflow:  gcd  is  2  >>  31 ");  }  [BUGGY]      k++;  //  cast  out  twos.  }  }  if  (k  ==  31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }    int  t  =  ((u  &  1)  ==  1)  ?  v  :  -(u  /  2)/*  B3  */;    do  {  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  short  NS  PS  ZS  boolean  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  k  t  u  v  	projects/Math94/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	432	433	1	replace	try  {  for(int  k  =  0;  k  <  3;  k++)  {  throw  new  ArithmeticException( "Overflow:  gcd  is  2  >>  31 ");  }	  try    {    for(int    k    =    0;    k    <    2;    k++)    {    throw    new    ArithmeticException(   "Overflow:    gcd    is    2    >>    31   ");    }    	non-compiled	[CE]  <identifier>  expected	116	None	replace
249	[BUG]  [BUGGY]  if(t  ==  0)  {  k++;  }  else  {  throw  new  ArithmeticException( "Overflow:  gcd  is  2  >>  31 ");  }  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  v  /=  2;      [BUGGY]  if(t  ==  0)  {  k++;  }  else  {  throw  new  ArithmeticException( "Overflow:  gcd  is  2  >>  31 ");  }  [BUGGY]      }  if  (k  ==  31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }    int  t  =  ((u  &  1)  ==  1)  ?  v  :  -(u  /  2)/*  B3  */;    do  {  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  short  NS  PS  ZS  boolean  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  k  t  u  v  	projects/Math94/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	432	433	1	replace	if(t  ==  0)  {  k++;  }  else  {  throw  new  ArithmeticException( "Overflow:  gcd  is  2  >>  31 ");  }	  if(k    >=    31)    {    k++;    }    else    {    throw    new    ArithmeticException(   "overflow:    gcd    is    2    >>    31   ");    }    	non-compiled	[CE]  <identifier>  expected	126	None	replace
250	[BUG]  [BUGGY]  k++;  }  else  {  throw  new  ArithmeticException( "Overflow:  gcd  is  2  {  31 ");  }  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  v  /=  2;      [BUGGY]  k++;  }  else  {  throw  new  ArithmeticException( "Overflow:  gcd  is  2  {  31 ");  }  [BUGGY]      }  if  (k  ==  31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }    int  t  =  ((u  &  1)  ==  1)  ?  v  :  -(u  /  2)/*  B3  */;    do  {  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  short  NS  PS  ZS  boolean  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  k  t  u  v  	projects/Math94/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	432	433	1	replace	k++;  }  else  {  throw  new  ArithmeticException( "Overflow:  gcd  is  2  {  31 ");  }	  if(v    <    31)    {    k++;    }    else    {    throw    new    ArithmeticException(   "Overflow:    gcd    is    2    ==    31   ");    }    	non-compiled	[CE]  <identifier>  expected	64	None	replace
251	[BUG]  [BUGGY]  String  k  =  ((  u  &  1)  ==  0  &&  v  &  1)  ==  0  &&  k  <  31)  {  u  /=  2;  v  /=  2;  }  [CE]  <identifier>  expected  [FE]            AssertionFailedError      [CONTEXT]      }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  v  /=  2;      [BUGGY]  String  k  =  ((  u  &  1)  ==  0  &&  v  &  1)  ==  0  &&  k  <  31)  {  u  /=  2;  v  /=  2;  }  [BUGGY]      k++;  //  cast  out  twos.  }  }  if  (k  ==  31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }    int  t  =  ((u  &  1)  ==  1)  ?  v  :  -(u  /  2)/*  B3  */;    do  {  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  short  NS  PS  ZS  boolean  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  k  t  u  v  	projects/Math94/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	432	433	1	replace	String  k  =  ((  u  &  1)  ==  0  &&  v  &  1)  ==  0  &&  k  <  31)  {  u  /=  2;  v  /=  2;  }	  char    k    =    ((    u    &    1)    ==    0    &&    v    &    1)    ==    0    &&    k    <    31)    {    u    /=    2;    v    /=    2;    }    	non-compiled	[CE]  <identifier>  expected	125	None	replace
252	[BUG]  [BUGGY]  char  k  =  ((  u  &  1)  ==  0  &&  v  &  1)  ==  0)  {  u  /=  2;  v  /=  2;  }  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  v  /=  2;      [BUGGY]  char  k  =  ((  u  &  1)  ==  0  &&  v  &  1)  ==  0)  {  u  /=  2;  v  /=  2;  }  [BUGGY]      k++;  //  cast  out  twos.  }  }  if  (k  ==  31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }    int  t  =  ((u  &  1)  ==  1)  ?  v  :  -(u  /  2)/*  B3  */;    do  {  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  short  NS  PS  ZS  boolean  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  k  t  u  v  	projects/Math94/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	432	433	1	replace	char  k  =  ((  u  &  1)  ==  0  &&  v  &  1)  ==  0)  {  u  /=  2;  v  /=  2;  }	  char    k    =    ((    u    &    1)    ==    0    &&    v    &    1)    ==    0    &&    k    <    31)    {    u    /=    2;    v    /=    2;    }    	non-compiled	[CE]  <identifier>  expected	125	None	replace
253	[BUG]  [BUGGY]  while(t  <  0)  {  k++;  }  else  {  throw  new  ArithmeticException( " ");  }  [CE]  <identifier>  expected  [FE]            AssertionFailedError      [CONTEXT]      }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  v  /=  2;      [BUGGY]  while(t  <  0)  {  k++;  }  else  {  throw  new  ArithmeticException( " ");  }  [BUGGY]      }  if  (k  ==  31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }    int  t  =  ((u  &  1)  ==  1)  ?  v  :  -(u  /  2)/*  B3  */;    do  {  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  short  NS  PS  ZS  boolean  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  k  t  u  v  	projects/Math94/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	432	433	1	replace	while(t  <  0)  {  k++;  }  else  {  throw  new  ArithmeticException( " ");  }	  if(t    >    0)    {    k++;    }    else    {    throw    new    ArithmeticException(   "   ");    }    	non-compiled	[CE]  <identifier>  expected	43	None	replace
254	[BUG]  [BUGGY]  aughtExceptionHandler.throwAsIOException( " ");  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  v  /=  2;      [BUGGY]  aughtExceptionHandler.throwAsIOException( " ");  [BUGGY]      }  if  (k  ==  31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }    int  t  =  ((u  &  1)  ==  1)  ?  v  :  -(u  /  2)/*  B3  */;    do  {  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  short  NS  PS  ZS  boolean  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  k  t  u  v  	projects/Math94/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	432	433	1	replace	aughtExceptionHandler.throwAsIOException( " ");	  if(t    >    0)    {    k++;    }    else    {    throw    new    ArithmeticException(   "   ");    }    	non-compiled	[CE]  <identifier>  expected	43	None	replace
255	[BUG]  [BUGGY]  ettyPrinter.println( "Overflow:  gcd  is  2  >>  31 ");  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  v  /=  2;      [BUGGY]  ettyPrinter.println( "Overflow:  gcd  is  2  >>  31 ");  [BUGGY]      }  if  (k  ==  31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }    int  t  =  ((u  &  1)  ==  1)  ?  v  :  -(u  /  2)/*  B3  */;    do  {  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  short  NS  PS  ZS  boolean  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  k  t  u  v  	projects/Math94/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	432	433	1	replace	ettyPrinter.println( "Overflow:  gcd  is  2  >>  31 ");	  if(t    >    0)    {    for(int    k    =    0;    k    <    31;    k++)    {    throw    new    ArithmeticException(   "overflow:    gcd    is    2    >>    31   ");    }    	non-compiled	[CE]  <identifier>  expected	111	None	replace
256	[BUG]  [BUGGY]  ettyPrinter.println( "Overflow:  gcd  is  2  >=  31 ");  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  v  /=  2;      [BUGGY]  ettyPrinter.println( "Overflow:  gcd  is  2  >=  31 ");  [BUGGY]      }  if  (k  ==  31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }    int  t  =  ((u  &  1)  ==  1)  ?  v  :  -(u  /  2)/*  B3  */;    do  {  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  short  NS  PS  ZS  boolean  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  k  t  u  v  	projects/Math94/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	432	433	1	replace	ettyPrinter.println( "Overflow:  gcd  is  2  >=  31 ");	  if(t    >    0)    {    for(int    k    =    0;    k    <    31;    k++)    {    throw    new    ArithmeticException(   "overflow:    gcd    is    2    >>    31   ");    }    	non-compiled	[CE]  <identifier>  expected	111	None	replace
257	[BUG]  [BUGGY]  ettyPrinter.println( "Overflow:  gcd  is  2  ^  31 ");  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]      }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  v  /=  2;      [BUGGY]  ettyPrinter.println( "Overflow:  gcd  is  2  ^  31 ");  [BUGGY]      }  if  (k  ==  31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }    int  t  =  ((u  &  1)  ==  1)  ?  v  :  -(u  /  2)/*  B3  */;    do  {  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  short  NS  PS  ZS  boolean  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  k  t  u  v  	projects/Math94/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	432	433	1	replace	ettyPrinter.println( "Overflow:  gcd  is  2  ^  31 ");	  if(t    >    0)    {    for(int    k    =    0;    k    <    31;    k++)    {    throw    new    ArithmeticException(   "overflow:    gcd    is    2    >>    31   ");    }    	non-compiled	[CE]  <identifier>  expected	111	None	replace
258	[BUG]  [BUGGY]  ettyPrinter.println( "Overflow:  Gcd  is  2  >>  31 ");  [CE]  <identifier>  expected  [FE]                          AssertionFailedError      [CONTEXT]      }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  v  /=  2;      [BUGGY]  ettyPrinter.println( "Overflow:  Gcd  is  2  >>  31 ");  [BUGGY]      }  if  (k  ==  31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }    int  t  =  ((u  &  1)  ==  1)  ?  v  :  -(u  /  2)/*  B3  */;    do  {  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  short  NS  PS  ZS  boolean  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  k  t  u  v  	projects/Math94/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	432	433	1	replace	ettyPrinter.println( "Overflow:  Gcd  is  2  >>  31 ");	  if(t    >    0)    {    for(int    k    =    0;    k    <    31;    k++)    {    throw    new    ArithmeticException(   "overflow:    gcd    is    2    >>    31   ");    }    	non-compiled	[CE]  <identifier>  expected	111	None	replace
259	[BUG]  [BUGGY]  if(u  <  31)  {  k++;  }  else  {  throw  new  ArithmeticException( " ");  }  [CE]  <identifier>  expected  [FE]            AssertionFailedError      [CONTEXT]      }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  v  /=  2;      [BUGGY]  if(u  <  31)  {  k++;  }  else  {  throw  new  ArithmeticException( " ");  }  [BUGGY]      }  if  (k  ==  31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }    int  t  =  ((u  &  1)  ==  1)  ?  v  :  -(u  /  2)/*  B3  */;    do  {  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  short  NS  PS  ZS  boolean  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  k  t  u  v  	projects/Math94/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	432	433	1	replace	if(u  <  31)  {  k++;  }  else  {  throw  new  ArithmeticException( " ");  }	  if(v    <    31)    {    k++;    }    else    {    throw    new    ArithmeticException(   "   ");    }    	non-compiled	[CE]  <identifier>  expected	114	None	replace
260	[BUG]  [BUGGY]  if(u  <  31)  {  k++;  }  else  {  throw  new  ArithmeticException( "overflow:  gcd  is  2  >>  31 ");  }  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  v  /=  2;      [BUGGY]  if(u  <  31)  {  k++;  }  else  {  throw  new  ArithmeticException( "overflow:  gcd  is  2  >>  31 ");  }  [BUGGY]      }  if  (k  ==  31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }    int  t  =  ((u  &  1)  ==  1)  ?  v  :  -(u  /  2)/*  B3  */;    do  {  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  short  NS  PS  ZS  boolean  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  k  t  u  v  	projects/Math94/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	432	433	1	replace	if(u  <  31)  {  k++;  }  else  {  throw  new  ArithmeticException( "overflow:  gcd  is  2  >>  31 ");  }	  if(v    <    31)    {    k++;    }    else    {    throw    new    ArithmeticException(   "   ");    }    	non-compiled	[CE]  <identifier>  expected	114	None	replace
261	[BUG]  [BUGGY]  if(v  >  31)  {  k++;  }  else  {  throw  new  ArithmeticException( " ");  }  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  v  /=  2;      [BUGGY]  if(v  >  31)  {  k++;  }  else  {  throw  new  ArithmeticException( " ");  }  [BUGGY]      }  if  (k  ==  31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }    int  t  =  ((u  &  1)  ==  1)  ?  v  :  -(u  /  2)/*  B3  */;    do  {  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  short  NS  PS  ZS  boolean  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  k  t  u  v  	projects/Math94/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	432	433	1	replace	if(v  >  31)  {  k++;  }  else  {  throw  new  ArithmeticException( " ");  }	  if(v    <    31)    {    k++;    }    else    {    throw    new    ArithmeticException(   "   ");    }    	non-compiled	[CE]  <identifier>  expected	114	None	replace
262	[BUG]  [BUGGY]  if(t  >  0)  {  k++;  }  else  {  throw  new  ArithmeticException( "overflow:  gcd  is  2  {  31 ",  v);  }  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  v  /=  2;      [BUGGY]  if(t  >  0)  {  k++;  }  else  {  throw  new  ArithmeticException( "overflow:  gcd  is  2  {  31 ",  v);  }  [BUGGY]      }  if  (k  ==  31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }    int  t  =  ((u  &  1)  ==  1)  ?  v  :  -(u  /  2)/*  B3  */;    do  {  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  short  NS  PS  ZS  boolean  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  k  t  u  v  	projects/Math94/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	432	433	1	replace	if(t  >  0)  {  k++;  }  else  {  throw  new  ArithmeticException( "overflow:  gcd  is  2  {  31 ",  v);  }	  if(t    >    0)    {    k++;    }    else    {    throw    new    ArithmeticException(   "overflow:    gcd    is    2    {    31   ");    }    	non-compiled	[CE]  <identifier>  expected	73	None	replace
263	[BUG]  [BUGGY]  if(u  >  31)  {  for(int  k  =  0;  k  <  2;  k++)  {  v  =  -k;  }  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]      }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  v  /=  2;      [BUGGY]  if(u  >  31)  {  for(int  k  =  0;  k  <  2;  k++)  {  v  =  -k;  }  [BUGGY]      }  if  (k  ==  31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }    int  t  =  ((u  &  1)  ==  1)  ?  v  :  -(u  /  2)/*  B3  */;    do  {  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  short  NS  PS  ZS  boolean  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  k  t  u  v  	projects/Math94/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	432	433	1	replace	if(u  >  31)  {  for(int  k  =  0;  k  <  2;  k++)  {  v  =  -k;  }	  if(t    >    0)    {    for(int    k    =    0;    k    <    2;    k++)    {    v    =    -k;    }    	non-compiled	[CE]  <identifier>  expected	113	None	replace
264	[BUG]  [BUGGY]  while((  u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  for(int  k  =  0;  k  <  2;  k++)  {  v  =  -k;  }  [CE]  <identifier>  expected  [FE]                          AssertionFailedError      [CONTEXT]      }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  v  /=  2;      [BUGGY]  while((  u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  for(int  k  =  0;  k  <  2;  k++)  {  v  =  -k;  }  [BUGGY]      }  if  (k  ==  31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }    int  t  =  ((u  &  1)  ==  1)  ?  v  :  -(u  /  2)/*  B3  */;    do  {  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  short  NS  PS  ZS  boolean  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  k  t  u  v  	projects/Math94/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	432	433	1	replace	while((  u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  for(int  k  =  0;  k  <  2;  k++)  {  v  =  -k;  }	  if(t    >    0)    {    for(int    k    =    0;    k    <    2;    k++)    {    v    =    -k;    }    	non-compiled	[CE]  <identifier>  expected	113	None	replace
265	[BUG]  [BUGGY]  while((  u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  for(int  k  =  0;  k  <  4;  k++)  {  v  =  -k;  }  [CE]  <identifier>  expected  [FE]                            AssertionFailedError      [CONTEXT]      }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  v  /=  2;      [BUGGY]  while((  u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  for(int  k  =  0;  k  <  4;  k++)  {  v  =  -k;  }  [BUGGY]      }  if  (k  ==  31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }    int  t  =  ((u  &  1)  ==  1)  ?  v  :  -(u  /  2)/*  B3  */;    do  {  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  short  NS  PS  ZS  boolean  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  k  t  u  v  	projects/Math94/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	432	433	1	replace	while((  u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  for(int  k  =  0;  k  <  4;  k++)  {  v  =  -k;  }	  if(t    >    0)    {    for(int    k    =    0;    k    <    2;    k++)    {    v    =    -k;    }    	non-compiled	[CE]  <identifier>  expected	113	None	replace
266	[BUG]  [BUGGY]  ||  t  >  31)  {  k++;  }  [CE]  <identifier>  expected  [FE]            AssertionFailedError      [CONTEXT]      }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  v  /=  2;      [BUGGY]  ||  t  >  31)  {  k++;  }  [BUGGY]      }  if  (k  ==  31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }    int  t  =  ((u  &  1)  ==  1)  ?  v  :  -(u  /  2)/*  B3  */;    do  {  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  short  NS  PS  ZS  boolean  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  k  t  u  v  	projects/Math94/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	432	433	1	replace	||  t  >  31)  {  k++;  }	  ||    t    >    0)    {    k++;    }    	non-compiled	[CE]  <identifier>  expected	15	None	replace
267	[BUG]  [BUGGY]  ||  t  >=  0)  {  k++;  }  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  v  /=  2;      [BUGGY]  ||  t  >=  0)  {  k++;  }  [BUGGY]      }  if  (k  ==  31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }    int  t  =  ((u  &  1)  ==  1)  ?  v  :  -(u  /  2)/*  B3  */;    do  {  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  short  NS  PS  ZS  boolean  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  k  t  u  v  	projects/Math94/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	432	433	1	replace	||  t  >=  0)  {  k++;  }	  ||    t    >    0)    {    k++;    }    	non-compiled	[CE]  <identifier>  expected	15	None	replace
268	[BUG]  [BUGGY]  if(v  >  31)  {  k++;  }  else  {  throw  new  ArithmeticException( "overflow:  gcd  is  2  >>  31 ");  }  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  v  /=  2;      [BUGGY]  if(v  >  31)  {  k++;  }  else  {  throw  new  ArithmeticException( "overflow:  gcd  is  2  >>  31 ");  }  [BUGGY]      }  if  (k  ==  31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }    int  t  =  ((u  &  1)  ==  1)  ?  v  :  -(u  /  2)/*  B3  */;    do  {  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  short  NS  PS  ZS  boolean  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  k  t  u  v  	projects/Math94/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	432	433	1	replace	if(v  >  31)  {  k++;  }  else  {  throw  new  ArithmeticException( "overflow:  gcd  is  2  >>  31 ");  }	  if(k    ==    31)    {    if(v    >    0)    {    k++;    }    else    {    throw    new    ArithmeticException(   "overflow:    gcd    is    2    >=    31   ");    }    	non-compiled	[CE]  <identifier>  expected	10	None	replace
269	[BUG]  [BUGGY]  if(v  >  31)  {  k++;  }  else  {  throw  new  ArithmeticException( "overflow:  gcd  is  2  >=  31 ");  }  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  v  /=  2;      [BUGGY]  if(v  >  31)  {  k++;  }  else  {  throw  new  ArithmeticException( "overflow:  gcd  is  2  >=  31 ");  }  [BUGGY]      }  if  (k  ==  31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }    int  t  =  ((u  &  1)  ==  1)  ?  v  :  -(u  /  2)/*  B3  */;    do  {  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  short  NS  PS  ZS  boolean  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  k  t  u  v  	projects/Math94/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	432	433	1	replace	if(v  >  31)  {  k++;  }  else  {  throw  new  ArithmeticException( "overflow:  gcd  is  2  >=  31 ");  }	  if(k    ==    31)    {    if(v    >    0)    {    k++;    }    else    {    throw    new    ArithmeticException(   "overflow:    gcd    is    2    >=    31   ");    }    	non-compiled	[CE]  <identifier>  expected	10	None	replace
270	[BUG]  [BUGGY]  if(v  >  31)  {  k++;  }  [CE]  <identifier>  expected  [FE]            AssertionFailedError      [CONTEXT]      }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  v  /=  2;      [BUGGY]  if(v  >  31)  {  k++;  }  [BUGGY]      }  if  (k  ==  31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }    int  t  =  ((u  &  1)  ==  1)  ?  v  :  -(u  /  2)/*  B3  */;    do  {  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  short  NS  PS  ZS  boolean  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  k  t  u  v  	projects/Math94/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	432	433	1	replace	if(v  >  31)  {  k++;  }	  if(k    >    0)    {    k++;    }    	non-compiled	[CE]  <identifier>  expected	132	None	replace
271	[BUG]  [BUGGY]  int  k  =  ((  u  &  1)  ==  0  &&  v  &  1)  ==  0)  {  u  /=  3;  v  /=  2;  }  [CE]  <identifier>  expected  [FE]            AssertionFailedError      [CONTEXT]      }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  v  /=  2;      [BUGGY]  int  k  =  ((  u  &  1)  ==  0  &&  v  &  1)  ==  0)  {  u  /=  3;  v  /=  2;  }  [BUGGY]      k++;  //  cast  out  twos.  }  }  if  (k  ==  31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }    int  t  =  ((u  &  1)  ==  1)  ?  v  :  -(u  /  2)/*  B3  */;    do  {  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  short  NS  PS  ZS  boolean  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  k  t  u  v  	projects/Math94/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	432	433	1	replace	int  k  =  ((  u  &  1)  ==  0  &&  v  &  1)  ==  0)  {  u  /=  3;  v  /=  2;  }	  int    k    =    ((    u    &    1)    ==    0    &&    v    &    1)    ==    0)    {    u    /=    2;    v    /=    2;    }    	non-compiled	[CE]  <identifier>  expected	39	None	replace
272	[BUG]  [BUGGY]  if(v  >  0)  {  aughtException( "overflow:  gcd  is  2  {  31 ");  }  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  v  /=  2;      [BUGGY]  if(v  >  0)  {  aughtException( "overflow:  gcd  is  2  {  31 ");  }  [BUGGY]      k++;  //  cast  out  twos.  }  }  if  (k  ==  31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }    int  t  =  ((u  &  1)  ==  1)  ?  v  :  -(u  /  2)/*  B3  */;    do  {  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  short  NS  PS  ZS  boolean  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  k  t  u  v  	projects/Math94/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	432	433	1	replace	if(v  >  0)  {  aughtException( "overflow:  gcd  is  2  {  31 ");  }	  aughtException(   "overflow:    gcd    is    2    {    31   ");    	non-compiled	[CE]  <identifier>  expected	18	None	replace
273	[BUG]  [BUGGY]  aught(new  ArithmeticException( "overflow:  gcd  is  2  >>  32 "));  [CE]  <identifier>  expected  [FE]            AssertionFailedError      [CONTEXT]      }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  v  /=  2;      [BUGGY]  aught(new  ArithmeticException( "overflow:  gcd  is  2  >>  32 "));  [BUGGY]      k++;  //  cast  out  twos.  }  }  if  (k  ==  31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }    int  t  =  ((u  &  1)  ==  1)  ?  v  :  -(u  /  2)/*  B3  */;    do  {  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  short  NS  PS  ZS  boolean  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  k  t  u  v  	projects/Math94/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	432	433	1	replace	aught(new  ArithmeticException( "overflow:  gcd  is  2  >>  32 "));	  aught(new    ArithmeticException(   "overflow:    gcd    is    2    >>    31   "));    	non-compiled	[CE]  <identifier>  expected	136	None	replace
274	[BUG]  [BUGGY]  if(t  <  =  31)  {  k++;  }  else  {  throw  new  ArithmeticException( "overflow:  gcd  is  2  ==  31 ");  }  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  v  /=  2;      [BUGGY]  if(t  <  =  31)  {  k++;  }  else  {  throw  new  ArithmeticException( "overflow:  gcd  is  2  ==  31 ");  }  [BUGGY]      }  if  (k  ==  31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }    int  t  =  ((u  &  1)  ==  1)  ?  v  :  -(u  /  2)/*  B3  */;    do  {  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  short  NS  PS  ZS  boolean  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  k  t  u  v  	projects/Math94/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	432	433	1	replace	if(t  <  =  31)  {  k++;  }  else  {  throw  new  ArithmeticException( "overflow:  gcd  is  2  ==  31 ");  }	  if(t    >    31)    {    k++;    }    else    {    throw    new    ArithmeticException(   "overflow:    gcd    is    2    ==    31   ");    }    	non-compiled	[CE]  <identifier>  expected	45	None	replace
275	[BUG]  [BUGGY]  if(k  ==  31)  {  catch(IllegalArgumentException  e)  {  throw  new  ArithmeticException( "Overflow:  gcd  is  2  ==  31 ");  }  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  v  /=  2;      [BUGGY]  if(k  ==  31)  {  catch(IllegalArgumentException  e)  {  throw  new  ArithmeticException( "Overflow:  gcd  is  2  ==  31 ");  }  [BUGGY]      k++;  //  cast  out  twos.  }  }  if  (k  ==  31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }    int  t  =  ((u  &  1)  ==  1)  ?  v  :  -(u  /  2)/*  B3  */;    do  {  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  short  NS  PS  ZS  boolean  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  k  t  u  v  	projects/Math94/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	432	433	1	replace	if(k  ==  31)  {  catch(IllegalArgumentException  e)  {  throw  new  ArithmeticException( "Overflow:  gcd  is  2  ==  31 ");  }	  try    {    [Delete]    catch(IllegalArgumentException    e)    {    throw    new    ArithmeticException(   "Overflow:    gcd    is    2    ==    31   ");    }    	non-compiled	[CE]  <identifier>  expected	133	None	replace
276	[BUG]  [BUGGY]  if(k  ==  31)  {  catch(IllegalArgumentException  e)  {  throw  new  ArithmeticException( "overflow:  gcd  is  2  ==  31 ");  }  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  v  /=  2;      [BUGGY]  if(k  ==  31)  {  catch(IllegalArgumentException  e)  {  throw  new  ArithmeticException( "overflow:  gcd  is  2  ==  31 ");  }  [BUGGY]      k++;  //  cast  out  twos.  }  }  if  (k  ==  31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }    int  t  =  ((u  &  1)  ==  1)  ?  v  :  -(u  /  2)/*  B3  */;    do  {  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  short  NS  PS  ZS  boolean  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  k  t  u  v  	projects/Math94/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	432	433	1	replace	if(k  ==  31)  {  catch(IllegalArgumentException  e)  {  throw  new  ArithmeticException( "overflow:  gcd  is  2  ==  31 ");  }	  try    {    [Delete]    catch(IllegalArgumentException    e)    {    throw    new    ArithmeticException(   "Overflow:    gcd    is    2    ==    31   ");    }    	non-compiled	[CE]  <identifier>  expected	133	None	replace
277	[BUG]  [BUGGY]  int  k  =  ((  u  &  1)  ==  0  &&  v  &  2)  ==  0  &&  k  <  32)  {  u  /=  2;  v  /=  2;  }  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  v  /=  2;      [BUGGY]  int  k  =  ((  u  &  1)  ==  0  &&  v  &  2)  ==  0  &&  k  <  32)  {  u  /=  2;  v  /=  2;  }  [BUGGY]      k++;  //  cast  out  twos.  }  }  if  (k  ==  31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }    int  t  =  ((u  &  1)  ==  1)  ?  v  :  -(u  /  2)/*  B3  */;    do  {  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  short  NS  PS  ZS  boolean  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  k  t  u  v  	projects/Math94/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	432	433	1	replace	int  k  =  ((  u  &  1)  ==  0  &&  v  &  2)  ==  0  &&  k  <  32)  {  u  /=  2;  v  /=  2;  }	  int    k    =    ((    u    &    1)    ==    0    &&    v    &    2)    ==    0    &&    k    <    31)    {    u    /=    2;    v    /=    2;    }    	non-compiled	[CE]  <identifier>  expected	40	None	replace
278	[BUG]  [BUGGY]  if(v  ==  0)  {  k++;  }  else  {  throw  new  ArithmeticException( "Overflow:  gcd  is  2  >>  31 ");  }  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  v  /=  2;      [BUGGY]  if(v  ==  0)  {  k++;  }  else  {  throw  new  ArithmeticException( "Overflow:  gcd  is  2  >>  31 ");  }  [BUGGY]      }  if  (k  ==  31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }    int  t  =  ((u  &  1)  ==  1)  ?  v  :  -(u  /  2)/*  B3  */;    do  {  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  short  NS  PS  ZS  boolean  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  k  t  u  v  	projects/Math94/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	432	433	1	replace	if(v  ==  0)  {  k++;  }  else  {  throw  new  ArithmeticException( "Overflow:  gcd  is  2  >>  31 ");  }	  if(v    <    =    0)    {    k++;    }    else    {    throw    new    ArithmeticException(   "Overflow:    gcd    is    2    >>    31   ");    }    	non-compiled	[CE]  <identifier>  expected	103	None	replace
279	[BUG]  [BUGGY]  if(v  <  0)  {  k++;  }  else  {  throw  new  ArithmeticException( "Overflow:  gcd  is  2  >>  31 ");  }  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  v  /=  2;      [BUGGY]  if(v  <  0)  {  k++;  }  else  {  throw  new  ArithmeticException( "Overflow:  gcd  is  2  >>  31 ");  }  [BUGGY]      }  if  (k  ==  31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }    int  t  =  ((u  &  1)  ==  1)  ?  v  :  -(u  /  2)/*  B3  */;    do  {  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  short  NS  PS  ZS  boolean  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  k  t  u  v  	projects/Math94/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	432	433	1	replace	if(v  <  0)  {  k++;  }  else  {  throw  new  ArithmeticException( "Overflow:  gcd  is  2  >>  31 ");  }	  if(v    <    =    0)    {    k++;    }    else    {    throw    new    ArithmeticException(   "Overflow:    gcd    is    2    >>    31   ");    }    	non-compiled	[CE]  <identifier>  expected	103	None	replace
280	[BUG]  [BUGGY]  if(k  ==  31)  {  aught(new  ArithmeticException( "overflow:  gcd  is  2  ==  31 "));  }  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  v  /=  2;      [BUGGY]  if(k  ==  31)  {  aught(new  ArithmeticException( "overflow:  gcd  is  2  ==  31 "));  }  [BUGGY]      k++;  //  cast  out  twos.  }  }  if  (k  ==  31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }    int  t  =  ((u  &  1)  ==  1)  ?  v  :  -(u  /  2)/*  B3  */;    do  {  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  short  NS  PS  ZS  boolean  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  k  t  u  v  	projects/Math94/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	432	433	1	replace	if(k  ==  31)  {  aught(new  ArithmeticException( "overflow:  gcd  is  2  ==  31 "));  }	  aught(new    ArithmeticException(   "overflow:    gcd    is    2    ==    31   "));    	non-compiled	[CE]  <identifier>  expected	106	None	replace
281	[BUG]  [BUGGY]  if(k  ==  31)  {  aught(new  ArithmeticException( "overflow:  gcd  is  2  ==  31 "));  }  else  {  throw  new  ArithmeticException( "Overflow:  gcd  is  2  ==  31 ");  }  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  v  /=  2;      [BUGGY]  if(k  ==  31)  {  aught(new  ArithmeticException( "overflow:  gcd  is  2  ==  31 "));  }  else  {  throw  new  ArithmeticException( "Overflow:  gcd  is  2  ==  31 ");  }  [BUGGY]      k++;  //  cast  out  twos.  }  }  if  (k  ==  31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }    int  t  =  ((u  &  1)  ==  1)  ?  v  :  -(u  /  2)/*  B3  */;    do  {  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  short  NS  PS  ZS  boolean  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  k  t  u  v  	projects/Math94/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	432	433	1	replace	if(k  ==  31)  {  aught(new  ArithmeticException( "overflow:  gcd  is  2  ==  31 "));  }  else  {  throw  new  ArithmeticException( "Overflow:  gcd  is  2  ==  31 ");  }	  aught(new    ArithmeticException(   "overflow:    gcd    is    2    ==    31   "));    	non-compiled	[CE]  <identifier>  expected	106	None	replace
282	[BUG]  [BUGGY]  MutableToDebugLog.debugLog( "Overflow:  gcd  is  2  >>  31 ");  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  v  /=  2;      [BUGGY]  MutableToDebugLog.debugLog( "Overflow:  gcd  is  2  >>  31 ");  [BUGGY]      }  if  (k  ==  31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }    int  t  =  ((u  &  1)  ==  1)  ?  v  :  -(u  /  2)/*  B3  */;    do  {  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  short  NS  PS  ZS  boolean  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  k  t  u  v  	projects/Math94/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	432	433	1	replace	MutableToDebugLog.debugLog( "Overflow:  gcd  is  2  >>  31 ");	  if(t    >    0)    {    k++;    }    else    {    throw    new    ArithmeticException(   "Overflow:    gcd    is    2    >>    31   ");    }    	non-compiled	[CE]  <identifier>  expected	35	None	replace
283	[BUG]  [BUGGY]  if(v  >  31)  {  k++;  }  else  {  throw  new  ArithmeticException( "Overflow:  gcd  is  2  >>  31 ");  }  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  v  /=  2;      [BUGGY]  if(v  >  31)  {  k++;  }  else  {  throw  new  ArithmeticException( "Overflow:  gcd  is  2  >>  31 ");  }  [BUGGY]      }  if  (k  ==  31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }    int  t  =  ((u  &  1)  ==  1)  ?  v  :  -(u  /  2)/*  B3  */;    do  {  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  short  NS  PS  ZS  boolean  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  k  t  u  v  	projects/Math94/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	432	433	1	replace	if(v  >  31)  {  k++;  }  else  {  throw  new  ArithmeticException( "Overflow:  gcd  is  2  >>  31 ");  }	  if(k    >    0)    {    k++;    }    else    {    throw    new    ArithmeticException(   "Overflow:    gcd    is    2    >>    31   ");    }    	non-compiled	[CE]  <identifier>  expected	131	None	replace
284	[BUG]  [BUGGY]  if(v  >  31)  {  k++;  }  else  {  throw  new  ArithmeticException( "Overflow:  gcd  is  2  >=  31 ");  }  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  v  /=  2;      [BUGGY]  if(v  >  31)  {  k++;  }  else  {  throw  new  ArithmeticException( "Overflow:  gcd  is  2  >=  31 ");  }  [BUGGY]      }  if  (k  ==  31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }    int  t  =  ((u  &  1)  ==  1)  ?  v  :  -(u  /  2)/*  B3  */;    do  {  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  short  NS  PS  ZS  boolean  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  k  t  u  v  	projects/Math94/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	432	433	1	replace	if(v  >  31)  {  k++;  }  else  {  throw  new  ArithmeticException( "Overflow:  gcd  is  2  >=  31 ");  }	  if(k    >    0)    {    k++;    }    else    {    throw    new    ArithmeticException(   "Overflow:    gcd    is    2    >>    31   ");    }    	non-compiled	[CE]  <identifier>  expected	131	None	replace
285	[BUG]  [BUGGY]  safeThan  <  ArithmeticException.DEFAULT_NUMBER_INT  ||  safeThan  >  31)  {  throw  new  ArithmeticException( "overflow:  gcd  is  2  ==  31 ");  }  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  v  /=  2;      [BUGGY]  safeThan  <  ArithmeticException.DEFAULT_NUMBER_INT  ||  safeThan  >  31)  {  throw  new  ArithmeticException( "overflow:  gcd  is  2  ==  31 ");  }  [BUGGY]      k++;  //  cast  out  twos.  }  }  if  (k  ==  31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }    int  t  =  ((u  &  1)  ==  1)  ?  v  :  -(u  /  2)/*  B3  */;    do  {  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  short  NS  PS  ZS  boolean  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  k  t  u  v  	projects/Math94/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	432	433	1	replace	safeThan  <  ArithmeticException.DEFAULT_NUMBER_INT  ||  safeThan  >  31)  {  throw  new  ArithmeticException( "overflow:  gcd  is  2  ==  31 ");  }	  safeThan    <    ArithmeticException.DEFAULT_NUMBER_INT    ||    safeThan    >=    0)    {    throw    new    ArithmeticException(   "overflow:    gcd    is    2    ==    31   ");    }    	non-compiled	[CE]  <identifier>  expected	90	None	replace
286	[BUG]  [BUGGY]  safeThan  <  ArithmeticException.DEFAULT_NUMBER_INT  &&  safeThan  >=  0)  {  throw  new  ArithmeticException( "overflow:  gcd  is  2  ==  31 ");  }  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]      }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  v  /=  2;      [BUGGY]  safeThan  <  ArithmeticException.DEFAULT_NUMBER_INT  &&  safeThan  >=  0)  {  throw  new  ArithmeticException( "overflow:  gcd  is  2  ==  31 ");  }  [BUGGY]      k++;  //  cast  out  twos.  }  }  if  (k  ==  31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }    int  t  =  ((u  &  1)  ==  1)  ?  v  :  -(u  /  2)/*  B3  */;    do  {  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  short  NS  PS  ZS  boolean  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  k  t  u  v  	projects/Math94/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	432	433	1	replace	safeThan  <  ArithmeticException.DEFAULT_NUMBER_INT  &&  safeThan  >=  0)  {  throw  new  ArithmeticException( "overflow:  gcd  is  2  ==  31 ");  }	  safeThan    <    ArithmeticException.DEFAULT_NUMBER_INT    ||    safeThan    >=    0)    {    throw    new    ArithmeticException(   "overflow:    gcd    is    2    ==    31   ");    }    	non-compiled	[CE]  <identifier>  expected	90	None	replace
287	[BUG]  [BUGGY]  if(v  >  31)  {  k++;  }  else  {  throw  new  ArithmeticException( "overflow:  gcd  is  2  ==  31 ");  }  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  v  /=  2;      [BUGGY]  if(v  >  31)  {  k++;  }  else  {  throw  new  ArithmeticException( "overflow:  gcd  is  2  ==  31 ");  }  [BUGGY]      }  if  (k  ==  31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }    int  t  =  ((u  &  1)  ==  1)  ?  v  :  -(u  /  2)/*  B3  */;    do  {  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  short  NS  PS  ZS  boolean  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  k  t  u  v  	projects/Math94/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	432	433	1	replace	if(v  >  31)  {  k++;  }  else  {  throw  new  ArithmeticException( "overflow:  gcd  is  2  ==  31 ");  }	  if(k    >    0)    {    k++;    }    else    {    throw    new    ArithmeticException(   "overflow:    gcd    is    2    ==    31   ");    }    	non-compiled	[CE]  <identifier>  expected	108	None	replace
288	[BUG]  [BUGGY]  if(v  <  31)  {  k++;  }  else  {  throw  new  ArithmeticException( "overflow:  gcd  is  2  ==  31 ");  }  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  v  /=  2;      [BUGGY]  if(v  <  31)  {  k++;  }  else  {  throw  new  ArithmeticException( "overflow:  gcd  is  2  ==  31 ");  }  [BUGGY]      }  if  (k  ==  31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }    int  t  =  ((u  &  1)  ==  1)  ?  v  :  -(u  /  2)/*  B3  */;    do  {  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  short  NS  PS  ZS  boolean  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  k  t  u  v  	projects/Math94/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	432	433	1	replace	if(v  <  31)  {  k++;  }  else  {  throw  new  ArithmeticException( "overflow:  gcd  is  2  ==  31 ");  }	  if(k    >    0)    {    k++;    }    else    {    throw    new    ArithmeticException(   "overflow:    gcd    is    2    ==    31   ");    }    	non-compiled	[CE]  <identifier>  expected	108	None	replace
289	[BUG]  [BUGGY]  safeThan  <  =  0)  {  throw  new  ArithmeticException( "overflow:  gcd  is  2  <  31 ");  }  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  v  /=  2;      [BUGGY]  safeThan  <  =  0)  {  throw  new  ArithmeticException( "overflow:  gcd  is  2  <  31 ");  }  [BUGGY]      }  if  (k  ==  31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }    int  t  =  ((u  &  1)  ==  1)  ?  v  :  -(u  /  2)/*  B3  */;    do  {  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  short  NS  PS  ZS  boolean  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  k  t  u  v  	projects/Math94/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	432	433	1	replace	safeThan  <  =  0)  {  throw  new  ArithmeticException( "overflow:  gcd  is  2  <  31 ");  }	  if(t    ==    0)    {    throw    new    ArithmeticException(   "overflow:    gcd    is    2    <    31       ");    }    	non-compiled	[CE]  <identifier>  expected	12	None	replace
290	[BUG]  [BUGGY]  safeThan  <  ArithmeticException( "overflow:  gcd  is  2  <  31 ");  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  v  /=  2;      [BUGGY]  safeThan  <  ArithmeticException( "overflow:  gcd  is  2  <  31 ");  [BUGGY]      }  if  (k  ==  31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }    int  t  =  ((u  &  1)  ==  1)  ?  v  :  -(u  /  2)/*  B3  */;    do  {  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  short  NS  PS  ZS  boolean  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  k  t  u  v  	projects/Math94/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	432	433	1	replace	safeThan  <  ArithmeticException( "overflow:  gcd  is  2  <  31 ");	  if(t    ==    0)    {    throw    new    ArithmeticException(   "overflow:    gcd    is    2    <    31       ");    }    	non-compiled	[CE]  <identifier>  expected	12	None	replace
291	[BUG]  [BUGGY]  if(t  >  0)  {  if(v  >  0)  {  k++;  }  else  {  throw  new  ArithmeticException( "Overflow:  gcd  is  2  >>  31 ");  }  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  v  /=  2;      [BUGGY]  if(t  >  0)  {  if(v  >  0)  {  k++;  }  else  {  throw  new  ArithmeticException( "Overflow:  gcd  is  2  >>  31 ");  }  [BUGGY]      }  if  (k  ==  31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }    int  t  =  ((u  &  1)  ==  1)  ?  v  :  -(u  /  2)/*  B3  */;    do  {  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  short  NS  PS  ZS  boolean  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  k  t  u  v  	projects/Math94/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	432	433	1	replace	if(t  >  0)  {  if(v  >  0)  {  k++;  }  else  {  throw  new  ArithmeticException( "Overflow:  gcd  is  2  >>  31 ");  }	  if(k    ==    31)    {    if(v    >    0)    {    k++;    }    else    {    throw    new    ArithmeticException(   "Overflow:    gcd    is    2    >>    31   ");    }    	non-compiled	[CE]  <identifier>  expected	34	None	replace
292	[BUG]  [BUGGY]  if(t  >  0)  {  if(v  >  0)  {  k++;  }  else  {  throw  new  ArithmeticException( "Overflow:  gcd  is  2  >=  31 ");  }  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  v  /=  2;      [BUGGY]  if(t  >  0)  {  if(v  >  0)  {  k++;  }  else  {  throw  new  ArithmeticException( "Overflow:  gcd  is  2  >=  31 ");  }  [BUGGY]      }  if  (k  ==  31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }    int  t  =  ((u  &  1)  ==  1)  ?  v  :  -(u  /  2)/*  B3  */;    do  {  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  short  NS  PS  ZS  boolean  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  k  t  u  v  	projects/Math94/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	432	433	1	replace	if(t  >  0)  {  if(v  >  0)  {  k++;  }  else  {  throw  new  ArithmeticException( "Overflow:  gcd  is  2  >=  31 ");  }	  if(k    ==    31)    {    if(v    >    0)    {    k++;    }    else    {    throw    new    ArithmeticException(   "Overflow:    gcd    is    2    >>    31   ");    }    	non-compiled	[CE]  <identifier>  expected	34	None	replace
293	[BUG]  [BUGGY]  if(k  ==  31)  {  catch(IllegalArgumentException  e)  {  throw  new  ArithmeticException( "overflow:  gcd  is  2  >>  31 ");  }  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  v  /=  2;      [BUGGY]  if(k  ==  31)  {  catch(IllegalArgumentException  e)  {  throw  new  ArithmeticException( "overflow:  gcd  is  2  >>  31 ");  }  [BUGGY]      k++;  //  cast  out  twos.  }  }  if  (k  ==  31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }    int  t  =  ((u  &  1)  ==  1)  ?  v  :  -(u  /  2)/*  B3  */;    do  {  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  short  NS  PS  ZS  boolean  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  k  t  u  v  	projects/Math94/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	432	433	1	replace	if(k  ==  31)  {  catch(IllegalArgumentException  e)  {  throw  new  ArithmeticException( "overflow:  gcd  is  2  >>  31 ");  }	  try    {    [Delete]    catch(IllegalArgumentException    e)    {    throw    new    ArithmeticException(   "overflow:    gcd    is    2    ==    31   ");    }    	non-compiled	[CE]  <identifier>  expected	134	None	replace
294	[BUG]  [BUGGY]  if(u  >  31)  {  k++;  }  else  {  throw  new  ArithmeticException( " ");  }  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  v  /=  2;      [BUGGY]  if(u  >  31)  {  k++;  }  else  {  throw  new  ArithmeticException( " ");  }  [BUGGY]      }  if  (k  ==  31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }    int  t  =  ((u  &  1)  ==  1)  ?  v  :  -(u  /  2)/*  B3  */;    do  {  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  short  NS  PS  ZS  boolean  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  k  t  u  v  	projects/Math94/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	432	433	1	replace	if(u  >  31)  {  k++;  }  else  {  throw  new  ArithmeticException( " ");  }	  if(v    >    0)    {    k++;    }    else    {    throw    new    ArithmeticException(   "   ");    }    	non-compiled	[CE]  <identifier>  expected	65	None	replace
295	[BUG]  [BUGGY]  try  {  for(int  k  =  0;  k  <  4;  k++)  {  throw  new  ArithmeticException( "overflow:  gcd  is  2  >>  31 ");  }  [CE]  <identifier>  expected  [FE]            AssertionFailedError      [CONTEXT]      }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  v  /=  2;      [BUGGY]  try  {  for(int  k  =  0;  k  <  4;  k++)  {  throw  new  ArithmeticException( "overflow:  gcd  is  2  >>  31 ");  }  [BUGGY]      k++;  //  cast  out  twos.  }  }  if  (k  ==  31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }    int  t  =  ((u  &  1)  ==  1)  ?  v  :  -(u  /  2)/*  B3  */;    do  {  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  short  NS  PS  ZS  boolean  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  k  t  u  v  	projects/Math94/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	432	433	1	replace	try  {  for(int  k  =  0;  k  <  4;  k++)  {  throw  new  ArithmeticException( "overflow:  gcd  is  2  >>  31 ");  }	  try    {    for(int    k    =    0;    k    <    2;    k++)    {    throw    new    ArithmeticException(   "overflow:    gcd    is    2    >>    31   ");    }    	non-compiled	[CE]  <identifier>  expected	122	None	replace
296	[BUG]  [BUGGY]  if(k  ==  31)  {  k++;  }  else  {  throw  new  ArithmeticException( "Overflow:  gcd  is  2  >>  31 ");  }  [CE]  <identifier>  expected  [FE]            AssertionFailedError      [CONTEXT]      }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  v  /=  2;      [BUGGY]  if(k  ==  31)  {  k++;  }  else  {  throw  new  ArithmeticException( "Overflow:  gcd  is  2  >>  31 ");  }  [BUGGY]      }  if  (k  ==  31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }    int  t  =  ((u  &  1)  ==  1)  ?  v  :  -(u  /  2)/*  B3  */;    do  {  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  short  NS  PS  ZS  boolean  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  k  t  u  v  	projects/Math94/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	432	433	1	replace	if(k  ==  31)  {  k++;  }  else  {  throw  new  ArithmeticException( "Overflow:  gcd  is  2  >>  31 ");  }	  if(v    <    31)    {    k++;    }    else    {    throw    new    ArithmeticException(   "Overflow:    gcd    is    2    >>    31   ");    }    	non-compiled	[CE]  <identifier>  expected	63	None	replace
297	[BUG]  [BUGGY]  MutationFailedError  t  =  mutation(t  >  0)  {  k++;  }  else  {  throw  new  ArithmeticException( "Overflow:  gcd  is  2  {  31 ");  }  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  v  /=  2;      [BUGGY]  MutationFailedError  t  =  mutation(t  >  0)  {  k++;  }  else  {  throw  new  ArithmeticException( "Overflow:  gcd  is  2  {  31 ");  }  [BUGGY]      }  if  (k  ==  31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }    int  t  =  ((u  &  1)  ==  1)  ?  v  :  -(u  /  2)/*  B3  */;    do  {  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  short  NS  PS  ZS  boolean  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  k  t  u  v  	projects/Math94/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	432	433	1	replace	MutationFailedError  t  =  mutation(t  >  0)  {  k++;  }  else  {  throw  new  ArithmeticException( "Overflow:  gcd  is  2  {  31 ");  }	  mutation(t    >    0)    {    k++;    }    else    {    throw    new    ArithmeticException(   "Overflow:    gcd    is    2    {    31   ");    }    	non-compiled	[CE]  <identifier>  expected	55	None	replace
298	[BUG]  [BUGGY]  safeThan  <  ArithmeticException.DEFAULT_NUMBER_ERROR  ||  k  >  0)  {  throw  new  ArithmeticException( "Overflow:  gcd  is  2  ==  31 ");  }  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  v  /=  2;      [BUGGY]  safeThan  <  ArithmeticException.DEFAULT_NUMBER_ERROR  ||  k  >  0)  {  throw  new  ArithmeticException( "Overflow:  gcd  is  2  ==  31 ");  }  [BUGGY]      k++;  //  cast  out  twos.  }  }  if  (k  ==  31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }    int  t  =  ((u  &  1)  ==  1)  ?  v  :  -(u  /  2)/*  B3  */;    do  {  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  short  NS  PS  ZS  boolean  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  k  t  u  v  	projects/Math94/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	432	433	1	replace	safeThan  <  ArithmeticException.DEFAULT_NUMBER_ERROR  ||  k  >  0)  {  throw  new  ArithmeticException( "Overflow:  gcd  is  2  ==  31 ");  }	  safeThan    <    ArithmeticException.DEFAULT_NUMBER_ERROR    ||    t    >    0)    {    throw    new    ArithmeticException(   "Overflow:    gcd    is    2    ==    31   ");    }    	non-compiled	[CE]  <identifier>  expected	101	None	replace
299	[BUG]  [BUGGY]  safeThan  <  ArithmeticException.DEFAULT_NUMBER_ERROR  ||  v  >  0)  {  throw  new  ArithmeticException( "Overflow:  gcd  is  2  ==  31 ");  }  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  v  /=  2;      [BUGGY]  safeThan  <  ArithmeticException.DEFAULT_NUMBER_ERROR  ||  v  >  0)  {  throw  new  ArithmeticException( "Overflow:  gcd  is  2  ==  31 ");  }  [BUGGY]      k++;  //  cast  out  twos.  }  }  if  (k  ==  31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }    int  t  =  ((u  &  1)  ==  1)  ?  v  :  -(u  /  2)/*  B3  */;    do  {  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  short  NS  PS  ZS  boolean  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  k  t  u  v  	projects/Math94/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	432	433	1	replace	safeThan  <  ArithmeticException.DEFAULT_NUMBER_ERROR  ||  v  >  0)  {  throw  new  ArithmeticException( "Overflow:  gcd  is  2  ==  31 ");  }	  safeThan    <    ArithmeticException.DEFAULT_NUMBER_ERROR    ||    t    >    0)    {    throw    new    ArithmeticException(   "Overflow:    gcd    is    2    ==    31   ");    }    	non-compiled	[CE]  <identifier>  expected	101	None	replace
300	[BUG]  [BUGGY]  if(v  >  0)  {  aughtException( "overflow:  gcd  is  2  >>  31 ");  }  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  v  /=  2;      [BUGGY]  if(v  >  0)  {  aughtException( "overflow:  gcd  is  2  >>  31 ");  }  [BUGGY]      k++;  //  cast  out  twos.  }  }  if  (k  ==  31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }    int  t  =  ((u  &  1)  ==  1)  ?  v  :  -(u  /  2)/*  B3  */;    do  {  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  short  NS  PS  ZS  boolean  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  k  t  u  v  	projects/Math94/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	432	433	1	replace	if(v  >  0)  {  aughtException( "overflow:  gcd  is  2  >>  31 ");  }	  aughtException(   "overflow:    gcd    is    2    >=    31   ");    	non-compiled	[CE]  <identifier>  expected	33	None	replace
301	[BUG]  [BUGGY]  if(v  >  0)  {  aughtException( "overflow:  gcd  is  2  >=  31 ");  }  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  v  /=  2;      [BUGGY]  if(v  >  0)  {  aughtException( "overflow:  gcd  is  2  >=  31 ");  }  [BUGGY]      k++;  //  cast  out  twos.  }  }  if  (k  ==  31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }    int  t  =  ((u  &  1)  ==  1)  ?  v  :  -(u  /  2)/*  B3  */;    do  {  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  short  NS  PS  ZS  boolean  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  k  t  u  v  	projects/Math94/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	432	433	1	replace	if(v  >  0)  {  aughtException( "overflow:  gcd  is  2  >=  31 ");  }	  aughtException(   "overflow:    gcd    is    2    >=    31   ");    	non-compiled	[CE]  <identifier>  expected	33	None	replace
302	[BUG]  [BUGGY]  aughtException( "overflow:  gcd  is  2  <  <  31 ");  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  v  /=  2;      [BUGGY]  aughtException( "overflow:  gcd  is  2  <  <  31 ");  [BUGGY]      k++;  //  cast  out  twos.  }  }  if  (k  ==  31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }    int  t  =  ((u  &  1)  ==  1)  ?  v  :  -(u  /  2)/*  B3  */;    do  {  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  short  NS  PS  ZS  boolean  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  k  t  u  v  	projects/Math94/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	432	433	1	replace	aughtException( "overflow:  gcd  is  2  <  <  31 ");	  aughtException(   "overflow:    gcd    is    2    >=    31   ");    	non-compiled	[CE]  <identifier>  expected	33	None	replace
303	[BUG]  [BUGGY]  aughtException( "overflow:  gcd  is  2  {  31  }   ");  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  v  /=  2;      [BUGGY]  aughtException( "overflow:  gcd  is  2  {  31  }   ");  [BUGGY]      k++;  //  cast  out  twos.  }  }  if  (k  ==  31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }    int  t  =  ((u  &  1)  ==  1)  ?  v  :  -(u  /  2)/*  B3  */;    do  {  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  short  NS  PS  ZS  boolean  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  k  t  u  v  	projects/Math94/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	432	433	1	replace	aughtException( "overflow:  gcd  is  2  {  31  }   ");	  aughtException(   "overflow:    gcd    is    2    >=    31   ");    	non-compiled	[CE]  <identifier>  expected	33	None	replace
304	[BUG]  [BUGGY]  if(k  ==  31)  {  aught(new  ArithmeticException( "overflow:  gcd  is  2  {  31 "));  }  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  v  /=  2;      [BUGGY]  if(k  ==  31)  {  aught(new  ArithmeticException( "overflow:  gcd  is  2  {  31 "));  }  [BUGGY]      k++;  //  cast  out  twos.  }  }  if  (k  ==  31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }    int  t  =  ((u  &  1)  ==  1)  ?  v  :  -(u  /  2)/*  B3  */;    do  {  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  short  NS  PS  ZS  boolean  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  k  t  u  v  	projects/Math94/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	432	433	1	replace	if(k  ==  31)  {  aught(new  ArithmeticException( "overflow:  gcd  is  2  {  31 "));  }	  aught(new    ArithmeticException(   "overflow:    gcd    is    2    {    31   "));    	non-compiled	[CE]  <identifier>  expected	107	None	replace
305	[BUG]  [BUGGY]  safeThan  <  ArithmeticException.DEFAULT_NUMBER_INT)  {  throw  new  ArithmeticException( "overflow:  gcd  is  2  >=  31 ");  }  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  v  /=  2;      [BUGGY]  safeThan  <  ArithmeticException.DEFAULT_NUMBER_INT)  {  throw  new  ArithmeticException( "overflow:  gcd  is  2  >=  31 ");  }  [BUGGY]      k++;  //  cast  out  twos.  }  }  if  (k  ==  31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }    int  t  =  ((u  &  1)  ==  1)  ?  v  :  -(u  /  2)/*  B3  */;    do  {  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  short  NS  PS  ZS  boolean  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  k  t  u  v  	projects/Math94/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	432	433	1	replace	safeThan  <  ArithmeticException.DEFAULT_NUMBER_INT)  {  throw  new  ArithmeticException( "overflow:  gcd  is  2  >=  31 ");  }	  safeThan    <    ArithmeticException.DEFAULT_NUMBER_INT)    {    throw    new    ArithmeticException(   "overflow:    gcd    is    2    >>    31   ");    }    	non-compiled	[CE]  <identifier>  expected	97	None	replace
306	[BUG]  [BUGGY]  safeThan  <  ArithmeticException.INVALID_NUMBER_ERROR)  {  throw  new  ArithmeticException( "overflow:  gcd  is  2  >>  31 ");  }  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  v  /=  2;      [BUGGY]  safeThan  <  ArithmeticException.INVALID_NUMBER_ERROR)  {  throw  new  ArithmeticException( "overflow:  gcd  is  2  >>  31 ");  }  [BUGGY]      }  if  (k  ==  31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }    int  t  =  ((u  &  1)  ==  1)  ?  v  :  -(u  /  2)/*  B3  */;    do  {  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  short  NS  PS  ZS  boolean  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  k  t  u  v  	projects/Math94/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	432	433	1	replace	safeThan  <  ArithmeticException.INVALID_NUMBER_ERROR)  {  throw  new  ArithmeticException( "overflow:  gcd  is  2  >>  31 ");  }	  if(k    ==    31)    {    throw    new    ArithmeticException(   "overflow:    gcd    is    2    >>    31   ");    }    	non-compiled	[CE]  <identifier>  expected	92	None	replace
307	[BUG]  [BUGGY]  safeThan  <  =  0)  {  throw  new  ArithmeticException( "Overflow:  gcd  is  2  <  31 ");  }  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  v  /=  2;      [BUGGY]  safeThan  <  =  0)  {  throw  new  ArithmeticException( "Overflow:  gcd  is  2  <  31 ");  }  [BUGGY]      }  if  (k  ==  31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }    int  t  =  ((u  &  1)  ==  1)  ?  v  :  -(u  /  2)/*  B3  */;    do  {  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  short  NS  PS  ZS  boolean  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  k  t  u  v  	projects/Math94/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	432	433	1	replace	safeThan  <  =  0)  {  throw  new  ArithmeticException( "Overflow:  gcd  is  2  <  31 ");  }	  if(t    ==    0)    {    throw    new    ArithmeticException(   "Overflow:    gcd    is    2    <    31       ");    }    	non-compiled	[CE]  <identifier>  expected	13	None	replace
308	[BUG]  [BUGGY]  safeThan  <  ArithmeticException.DEFAULT_NUMBER_ERROR)  {  throw  new  ArithmeticException( "Overflow:  gcd  is  2  <  31 ");  }  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  v  /=  2;      [BUGGY]  safeThan  <  ArithmeticException.DEFAULT_NUMBER_ERROR)  {  throw  new  ArithmeticException( "Overflow:  gcd  is  2  <  31 ");  }  [BUGGY]      }  if  (k  ==  31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }    int  t  =  ((u  &  1)  ==  1)  ?  v  :  -(u  /  2)/*  B3  */;    do  {  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  short  NS  PS  ZS  boolean  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  k  t  u  v  	projects/Math94/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	432	433	1	replace	safeThan  <  ArithmeticException.DEFAULT_NUMBER_ERROR)  {  throw  new  ArithmeticException( "Overflow:  gcd  is  2  <  31 ");  }	  if(t    ==    0)    {    throw    new    ArithmeticException(   "Overflow:    gcd    is    2    <    31       ");    }    	non-compiled	[CE]  <identifier>  expected	13	None	replace
309	[BUG]  [BUGGY]  safeThan  <  ArithmeticException( "Overflow:  gcd  is  2  <  31 ");  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]      }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  v  /=  2;      [BUGGY]  safeThan  <  ArithmeticException( "Overflow:  gcd  is  2  <  31 ");  [BUGGY]      }  if  (k  ==  31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }    int  t  =  ((u  &  1)  ==  1)  ?  v  :  -(u  /  2)/*  B3  */;    do  {  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  short  NS  PS  ZS  boolean  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  k  t  u  v  	projects/Math94/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	432	433	1	replace	safeThan  <  ArithmeticException( "Overflow:  gcd  is  2  <  31 ");	  if(t    ==    0)    {    throw    new    ArithmeticException(   "Overflow:    gcd    is    2    <    31       ");    }    	non-compiled	[CE]  <identifier>  expected	13	None	replace
310	[BUG]  [BUGGY]  MutationFailedError.error( "Overflow:  gcd  is  2  {  31 ");  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  v  /=  2;      [BUGGY]  MutationFailedError.error( "Overflow:  gcd  is  2  {  31 ");  [BUGGY]      k++;  //  cast  out  twos.  }  }  if  (k  ==  31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }    int  t  =  ((u  &  1)  ==  1)  ?  v  :  -(u  /  2)/*  B3  */;    do  {  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  short  NS  PS  ZS  boolean  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  k  t  u  v  	projects/Math94/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	432	433	1	replace	MutationFailedError.error( "Overflow:  gcd  is  2  {  31 ");	  mutation(t    >    0)    {    throw    new    ArithmeticException(   "Overflow:    gcd    is    2    {    31   ");    }    	non-compiled	[CE]  <identifier>  expected	60	None	replace
311	[BUG]  [BUGGY]  char  k  =  ((  u  &  1)  ==  0  &&  v  &  1)  ==  0  &&  k  <  32)  {  u  /=  2;  v  /=  2;  }  [CE]  <identifier>  expected  [FE]            AssertionFailedError      [CONTEXT]      }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  v  /=  2;      [BUGGY]  char  k  =  ((  u  &  1)  ==  0  &&  v  &  1)  ==  0  &&  k  <  32)  {  u  /=  2;  v  /=  2;  }  [BUGGY]      k++;  //  cast  out  twos.  }  }  if  (k  ==  31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }    int  t  =  ((u  &  1)  ==  1)  ?  v  :  -(u  /  2)/*  B3  */;    do  {  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  short  NS  PS  ZS  boolean  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  k  t  u  v  	projects/Math94/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	432	433	1	replace	char  k  =  ((  u  &  1)  ==  0  &&  v  &  1)  ==  0  &&  k  <  32)  {  u  /=  2;  v  /=  2;  }	  char    k    =    ((    u    &    1)    ==    0    &&    v    &    1)    ==    0    &&    k    <    31)    {    u    /=    2;    v    /=    2;    }    	non-compiled	[CE]  <identifier>  expected	125	None	replace
312	[BUG]  [BUGGY]  while(t  ==  0)  {  for(int  k  =  0;  k  <  2;  k++)  {  throw  new  ArithmeticException( "gcd  is  2  >>  31 ");  }  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  v  /=  2;      [BUGGY]  while(t  ==  0)  {  for(int  k  =  0;  k  <  2;  k++)  {  throw  new  ArithmeticException( "gcd  is  2  >>  31 ");  }  [BUGGY]      k++;  //  cast  out  twos.  }  }  if  (k  ==  31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }    int  t  =  ((u  &  1)  ==  1)  ?  v  :  -(u  /  2)/*  B3  */;    do  {  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  short  NS  PS  ZS  boolean  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  k  t  u  v  	projects/Math94/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	432	433	1	replace	while(t  ==  0)  {  for(int  k  =  0;  k  <  2;  k++)  {  throw  new  ArithmeticException( "gcd  is  2  >>  31 ");  }	  while(t    >    0)    {    for(int    k    =    0;    k    <    2;    k++)    {    throw    new    ArithmeticException(   "gcd    is    2    >>    31   ");    }    	non-compiled	[CE]  <identifier>  expected	47	None	replace
313	[BUG]  [BUGGY]  if(k  ==  31)  {  k++;  //  cast  out  twos.  }  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  v  /=  2;      [BUGGY]  if(k  ==  31)  {  k++;  //  cast  out  twos.  }  [BUGGY]      }  if  (k  ==  31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }    int  t  =  ((u  &  1)  ==  1)  ?  v  :  -(u  /  2)/*  B3  */;    do  {  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  short  NS  PS  ZS  boolean  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  k  t  u  v  	projects/Math94/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	432	433	1	replace	if(k  ==  31)  {  k++;  //  cast  out  twos.  }	  if(v    <    31)    {    k++;    //    cast    out    twos.    }    	non-compiled	[CE]  <identifier>  expected	68	None	replace
314	[BUG]  [BUGGY]  if(v  <  0)  {  k++;  }  else  {  throw  new  ArithmeticException( "overflow:  gcd  is  2  >>  31 ");  }  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  v  /=  2;      [BUGGY]  if(v  <  0)  {  k++;  }  else  {  throw  new  ArithmeticException( "overflow:  gcd  is  2  >>  31 ");  }  [BUGGY]      }  if  (k  ==  31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }    int  t  =  ((u  &  1)  ==  1)  ?  v  :  -(u  /  2)/*  B3  */;    do  {  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  short  NS  PS  ZS  boolean  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  k  t  u  v  	projects/Math94/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	432	433	1	replace	if(v  <  0)  {  k++;  }  else  {  throw  new  ArithmeticException( "overflow:  gcd  is  2  >>  31 ");  }	  if(v    <    =    0)    {    k++;    }    else    {    throw    new    ArithmeticException(   "overflow:    gcd    is    2    >>    31   ");    }    	non-compiled	[CE]  <identifier>  expected	76	None	replace
315	[BUG]  [BUGGY]  int  k  =  ((  u  &  1)  ==  0  &&  v  &  1)  ==  0  &&  k  <  32)?  -(u  /  2)/  B3  */;  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  v  /=  2;      [BUGGY]  int  k  =  ((  u  &  1)  ==  0  &&  v  &  1)  ==  0  &&  k  <  32)?  -(u  /  2)/  B3  */;  [BUGGY]      k++;  //  cast  out  twos.  }  }  if  (k  ==  31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }    int  t  =  ((u  &  1)  ==  1)  ?  v  :  -(u  /  2)/*  B3  */;    do  {  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  short  NS  PS  ZS  boolean  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  k  t  u  v  	projects/Math94/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	432	433	1	replace	int  k  =  ((  u  &  1)  ==  0  &&  v  &  1)  ==  0  &&  k  <  32)?  -(u  /  2)/  B3  */;	  int    k    =    ((    u    &    1)    ==    0    &&    v    &    1)    ==    0    &&    k    <    31)?    -(u    /    2)/    B3    */;    	non-compiled	[CE]  <identifier>  expected	70	None	replace
316	[BUG]  [BUGGY]  int  k  =  ((  u  &  1)  ==  0  &&  v  &  1)  ==  0  &&  k  <  31)?  -(u  /  2)/  B3  */  +  1;  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  v  /=  2;      [BUGGY]  int  k  =  ((  u  &  1)  ==  0  &&  v  &  1)  ==  0  &&  k  <  31)?  -(u  /  2)/  B3  */  +  1;  [BUGGY]      k++;  //  cast  out  twos.  }  }  if  (k  ==  31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }    int  t  =  ((u  &  1)  ==  1)  ?  v  :  -(u  /  2)/*  B3  */;    do  {  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  short  NS  PS  ZS  boolean  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  k  t  u  v  	projects/Math94/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	432	433	1	replace	int  k  =  ((  u  &  1)  ==  0  &&  v  &  1)  ==  0  &&  k  <  31)?  -(u  /  2)/  B3  */  +  1;	  int    k    =    ((    u    &    1)    ==    0    &&    v    &    1)    ==    0    &&    k    <    31)?    -(u    /    2)/    B3    */;    	non-compiled	[CE]  <identifier>  expected	70	None	replace
317	[BUG]  [BUGGY]  if(t  <  0)  {  k++;  }  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  v  /=  2;      [BUGGY]  if(t  <  0)  {  k++;  }  [BUGGY]      }  if  (k  ==  31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }    int  t  =  ((u  &  1)  ==  1)  ?  v  :  -(u  /  2)/*  B3  */;    do  {  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  short  NS  PS  ZS  boolean  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  k  t  u  v  	projects/Math94/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	432	433	1	replace	if(t  <  0)  {  k++;  }	  if(t    <    =    0)    {    k++;    }    	non-compiled	[CE]  <identifier>  expected	16	None	replace
318	[BUG]  [BUGGY]  if(v  <  =  0)  {  k++;  }  else  {  throw  new  ArithmeticException( "overflow:  gcd  is  2  >=  31 ");  }  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  v  /=  2;      [BUGGY]  if(v  <  =  0)  {  k++;  }  else  {  throw  new  ArithmeticException( "overflow:  gcd  is  2  >=  31 ");  }  [BUGGY]      }  if  (k  ==  31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }    int  t  =  ((u  &  1)  ==  1)  ?  v  :  -(u  /  2)/*  B3  */;    do  {  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  short  NS  PS  ZS  boolean  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  k  t  u  v  	projects/Math94/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	432	433	1	replace	if(v  <  =  0)  {  k++;  }  else  {  throw  new  ArithmeticException( "overflow:  gcd  is  2  >=  31 ");  }	  if(v    ==    0)    {    k++;    }    else    {    throw    new    ArithmeticException(   "overflow:    gcd    is    2    >=    31   ");    }    	non-compiled	[CE]  <identifier>  expected	77	None	replace
319	[BUG]  [BUGGY]  if(t  >  0)  {  k++;  }  else  {  throw  new  ArithmeticException( "overflow:  gcd  is  2  <  31 ");  }  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  v  /=  2;      [BUGGY]  if(t  >  0)  {  k++;  }  else  {  throw  new  ArithmeticException( "overflow:  gcd  is  2  <  31 ");  }  [BUGGY]      }  if  (k  ==  31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }    int  t  =  ((u  &  1)  ==  1)  ?  v  :  -(u  /  2)/*  B3  */;    do  {  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  short  NS  PS  ZS  boolean  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  k  t  u  v  	projects/Math94/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	432	433	1	replace	if(t  >  0)  {  k++;  }  else  {  throw  new  ArithmeticException( "overflow:  gcd  is  2  <  31 ");  }	  if(t    >    0)    {    k++;    }    else    {    throw    new    ArithmeticException(   "overflow:    gcd    is    2    >=    31   ");    }    	non-compiled	[CE]  <identifier>  expected	11	None	replace
320	[BUG]  [BUGGY]  if(v  >  1)  {  for(int  k  =  0;  k  <  2;  k++)  {  throw  new  ArithmeticException( "overflow:  gcd  is  2  ==  31 ");  }  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  v  /=  2;      [BUGGY]  if(v  >  1)  {  for(int  k  =  0;  k  <  2;  k++)  {  throw  new  ArithmeticException( "overflow:  gcd  is  2  ==  31 ");  }  [BUGGY]      k++;  //  cast  out  twos.  }  }  if  (k  ==  31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }    int  t  =  ((u  &  1)  ==  1)  ?  v  :  -(u  /  2)/*  B3  */;    do  {  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  short  NS  PS  ZS  boolean  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  k  t  u  v  	projects/Math94/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	432	433	1	replace	if(v  >  1)  {  for(int  k  =  0;  k  <  2;  k++)  {  throw  new  ArithmeticException( "overflow:  gcd  is  2  ==  31 ");  }	  if(v    >    0)    {    for(int    k    =    0;    k    <    2;    k++)    {    throw    new    ArithmeticException(   "overflow:    gcd    is    2    ==    31   ");    }    	non-compiled	[CE]  <identifier>  expected	94	None	replace
321	[BUG]  [BUGGY]  if(v  >  1)  {  for(int  k  =  0;  k  <  2;  k++)  {  throw  new  ArithmeticException( "overflow:  gcd  is  2  {  31 ");  }  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  v  /=  2;      [BUGGY]  if(v  >  1)  {  for(int  k  =  0;  k  <  2;  k++)  {  throw  new  ArithmeticException( "overflow:  gcd  is  2  {  31 ");  }  [BUGGY]      k++;  //  cast  out  twos.  }  }  if  (k  ==  31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }    int  t  =  ((u  &  1)  ==  1)  ?  v  :  -(u  /  2)/*  B3  */;    do  {  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  short  NS  PS  ZS  boolean  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  k  t  u  v  	projects/Math94/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	432	433	1	replace	if(v  >  1)  {  for(int  k  =  0;  k  <  2;  k++)  {  throw  new  ArithmeticException( "overflow:  gcd  is  2  {  31 ");  }	  if(v    >    0)    {    for(int    k    =    0;    k    <    2;    k++)    {    throw    new    ArithmeticException(   "overflow:    gcd    is    2    ==    31   ");    }    	non-compiled	[CE]  <identifier>  expected	94	None	replace
322	[BUG]  [BUGGY]  if(v  >  0)  {  if(v  <  31)  {  k++;  }  else  {  throw  new  ArithmeticException( "overflow:  gcd  is  2  >>  31 ");  }  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  v  /=  2;      [BUGGY]  if(v  >  0)  {  if(v  <  31)  {  k++;  }  else  {  throw  new  ArithmeticException( "overflow:  gcd  is  2  >>  31 ");  }  [BUGGY]      }  if  (k  ==  31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }    int  t  =  ((u  &  1)  ==  1)  ?  v  :  -(u  /  2)/*  B3  */;    do  {  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  short  NS  PS  ZS  boolean  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  k  t  u  v  	projects/Math94/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	432	433	1	replace	if(v  >  0)  {  if(v  <  31)  {  k++;  }  else  {  throw  new  ArithmeticException( "overflow:  gcd  is  2  >>  31 ");  }	  if(v    <    31)    {    k++;    }    else    {    throw    new    ArithmeticException(   "overflow:    gcd    is    2    >>    31   ");    }    	non-compiled	[CE]  <identifier>  expected	127	None	replace
323	[BUG]  [BUGGY]  try  {  for(int  k  =  0;  k  <  2;  k++)  {  throw  new  ArithmeticException( "overflow:  gcd  is  2  {  31 ");  }  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  v  /=  2;      [BUGGY]  try  {  for(int  k  =  0;  k  <  2;  k++)  {  throw  new  ArithmeticException( "overflow:  gcd  is  2  {  31 ");  }  [BUGGY]      k++;  //  cast  out  twos.  }  }  if  (k  ==  31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }    int  t  =  ((u  &  1)  ==  1)  ?  v  :  -(u  /  2)/*  B3  */;    do  {  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  short  NS  PS  ZS  boolean  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  k  t  u  v  	projects/Math94/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	432	433	1	replace	try  {  for(int  k  =  0;  k  <  2;  k++)  {  throw  new  ArithmeticException( "overflow:  gcd  is  2  {  31 ");  }	  try    {    for(int    k    =    0;    k    <    2;    k++)    {    throw    new    ArithmeticException(   "overflow:    gcd    is    2    ==    31   ");    }    	non-compiled	[CE]  <identifier>  expected	121	None	replace
324	[BUG]  [BUGGY]  while(t  >=  0)  {  for(int  k  =  0;  k  <  2;  k++)  {  throw  new  ArithmeticException( "overflow:  gcd  is  2  ==  31 ");  }  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  v  /=  2;      [BUGGY]  while(t  >=  0)  {  for(int  k  =  0;  k  <  2;  k++)  {  throw  new  ArithmeticException( "overflow:  gcd  is  2  ==  31 ");  }  [BUGGY]      k++;  //  cast  out  twos.  }  }  if  (k  ==  31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }    int  t  =  ((u  &  1)  ==  1)  ?  v  :  -(u  /  2)/*  B3  */;    do  {  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  short  NS  PS  ZS  boolean  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  k  t  u  v  	projects/Math94/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	432	433	1	replace	while(t  >=  0)  {  for(int  k  =  0;  k  <  2;  k++)  {  throw  new  ArithmeticException( "overflow:  gcd  is  2  ==  31 ");  }	  while(t    >    0)    {    for(int    k    =    0;    k    <    2;    k++)    {    throw    new    ArithmeticException(   "overflow:    gcd    is    2    ==    31   ");    }    	non-compiled	[CE]  <identifier>  expected	27	None	replace
325	[BUG]  [BUGGY]  while(v  >  0)  {  for(int  k  =  0;  k  <  2;  k++)  {  throw  new  ArithmeticException( "overflow:  gcd  is  2  ==  31 ");  }  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  v  /=  2;      [BUGGY]  while(v  >  0)  {  for(int  k  =  0;  k  <  2;  k++)  {  throw  new  ArithmeticException( "overflow:  gcd  is  2  ==  31 ");  }  [BUGGY]      k++;  //  cast  out  twos.  }  }  if  (k  ==  31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }    int  t  =  ((u  &  1)  ==  1)  ?  v  :  -(u  /  2)/*  B3  */;    do  {  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  short  NS  PS  ZS  boolean  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  k  t  u  v  	projects/Math94/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	432	433	1	replace	while(v  >  0)  {  for(int  k  =  0;  k  <  2;  k++)  {  throw  new  ArithmeticException( "overflow:  gcd  is  2  ==  31 ");  }	  while(t    >    0)    {    for(int    k    =    0;    k    <    2;    k++)    {    throw    new    ArithmeticException(   "overflow:    gcd    is    2    ==    31   ");    }    	non-compiled	[CE]  <identifier>  expected	27	None	replace
326	[BUG]  [BUGGY]  aughtExceptionHandler(new  ArithmeticException( "overflow:  gcd  is  2  >>  32 "));  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  v  /=  2;      [BUGGY]  aughtExceptionHandler(new  ArithmeticException( "overflow:  gcd  is  2  >>  32 "));  [BUGGY]      k++;  //  cast  out  twos.  }  }  if  (k  ==  31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }    int  t  =  ((u  &  1)  ==  1)  ?  v  :  -(u  /  2)/*  B3  */;    do  {  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  short  NS  PS  ZS  boolean  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  k  t  u  v  	projects/Math94/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	432	433	1	replace	aughtExceptionHandler(new  ArithmeticException( "overflow:  gcd  is  2  >>  32 "));	  aughtExceptionHandler(new    ArithmeticException(   "overflow:    gcd    is    2    >>    31   "));    	non-compiled	[CE]  <identifier>  expected	32	None	replace
327	[BUG]  [BUGGY]  aughtExceptionHandler(new  ArithmeticException( "overflow:  gcd  is  2  ==  31 "));  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  v  /=  2;      [BUGGY]  aughtExceptionHandler(new  ArithmeticException( "overflow:  gcd  is  2  ==  31 "));  [BUGGY]      k++;  //  cast  out  twos.  }  }  if  (k  ==  31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }    int  t  =  ((u  &  1)  ==  1)  ?  v  :  -(u  /  2)/*  B3  */;    do  {  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  short  NS  PS  ZS  boolean  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  k  t  u  v  	projects/Math94/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	432	433	1	replace	aughtExceptionHandler(new  ArithmeticException( "overflow:  gcd  is  2  ==  31 "));	  aughtExceptionHandler(new    ArithmeticException(   "overflow:    gcd    is    2    >>    31   "));    	non-compiled	[CE]  <identifier>  expected	32	None	replace
328	[BUG]  [BUGGY]  k  =  ((  u  &  1)  ==  0  &&  v  &  1)  ==  0)  {  u  /=  2;  v  /=  3;  }  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  v  /=  2;      [BUGGY]  k  =  ((  u  &  1)  ==  0  &&  v  &  1)  ==  0)  {  u  /=  2;  v  /=  3;  }  [BUGGY]      k++;  //  cast  out  twos.  }  }  if  (k  ==  31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }    int  t  =  ((u  &  1)  ==  1)  ?  v  :  -(u  /  2)/*  B3  */;    do  {  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  short  NS  PS  ZS  boolean  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  k  t  u  v  	projects/Math94/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	432	433	1	replace	k  =  ((  u  &  1)  ==  0  &&  v  &  1)  ==  0)  {  u  /=  2;  v  /=  3;  }	  int    k    =    ((    u    &    1)    ==    0    &&    v    &    1)    ==    0)    {    u    /=    2;    v    /=    3;    }    	non-compiled	[CE]  <identifier>  expected	61	None	replace
329	[BUG]  [BUGGY]  MutationFailedError  t  =  mutation(t  >  0)  {  k++;  }  else  {  throw  new  ArithmeticException( "overflow:  gcd  is  2  ==  31 ");  }  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  v  /=  2;      [BUGGY]  MutationFailedError  t  =  mutation(t  >  0)  {  k++;  }  else  {  throw  new  ArithmeticException( "overflow:  gcd  is  2  ==  31 ");  }  [BUGGY]      }  if  (k  ==  31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }    int  t  =  ((u  &  1)  ==  1)  ?  v  :  -(u  /  2)/*  B3  */;    do  {  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  short  NS  PS  ZS  boolean  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  k  t  u  v  	projects/Math94/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	432	433	1	replace	MutationFailedError  t  =  mutation(t  >  0)  {  k++;  }  else  {  throw  new  ArithmeticException( "overflow:  gcd  is  2  ==  31 ");  }	  mutation(t    >    0)    {    k++;    }    else    {    throw    new    ArithmeticException(   "overflow:    gcd    is    2    ==    31   ");    }    	non-compiled	[CE]  <identifier>  expected	53	None	replace
330	[BUG]  [BUGGY]  ettyPrinter.println( "Overflow:  gcd  is  2  {  31 ");  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  v  /=  2;      [BUGGY]  ettyPrinter.println( "Overflow:  gcd  is  2  {  31 ");  [BUGGY]      }  if  (k  ==  31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }    int  t  =  ((u  &  1)  ==  1)  ?  v  :  -(u  /  2)/*  B3  */;    do  {  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  short  NS  PS  ZS  boolean  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  k  t  u  v  	projects/Math94/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	432	433	1	replace	ettyPrinter.println( "Overflow:  gcd  is  2  {  31 ");	  if(t    >    0)    {    for(int    k    =    0;    k    <    31;    k++)    {    throw    new    ArithmeticException(   "overflow:    gcd    is    2    ==    31   ");    }    	non-compiled	[CE]  <identifier>  expected	14	None	replace
331	[BUG]  [BUGGY]  ettyPrinter.println( "Overflow:  gcd  is  2  ==  31 ");  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]      }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  v  /=  2;      [BUGGY]  ettyPrinter.println( "Overflow:  gcd  is  2  ==  31 ");  [BUGGY]      }  if  (k  ==  31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }    int  t  =  ((u  &  1)  ==  1)  ?  v  :  -(u  /  2)/*  B3  */;    do  {  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  short  NS  PS  ZS  boolean  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  k  t  u  v  	projects/Math94/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	432	433	1	replace	ettyPrinter.println( "Overflow:  gcd  is  2  ==  31 ");	  if(t    >    0)    {    for(int    k    =    0;    k    <    31;    k++)    {    throw    new    ArithmeticException(   "overflow:    gcd    is    2    ==    31   ");    }    	non-compiled	[CE]  <identifier>  expected	14	None	replace
332	[BUG]  [BUGGY]  ettyPrinter.println( "Overflow:  Gcd  is  2  {  31 ");  [CE]  <identifier>  expected  [FE]                          AssertionFailedError      [CONTEXT]      }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  v  /=  2;      [BUGGY]  ettyPrinter.println( "Overflow:  Gcd  is  2  {  31 ");  [BUGGY]      }  if  (k  ==  31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }    int  t  =  ((u  &  1)  ==  1)  ?  v  :  -(u  /  2)/*  B3  */;    do  {  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  short  NS  PS  ZS  boolean  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  k  t  u  v  	projects/Math94/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	432	433	1	replace	ettyPrinter.println( "Overflow:  Gcd  is  2  {  31 ");	  if(t    >    0)    {    for(int    k    =    0;    k    <    31;    k++)    {    throw    new    ArithmeticException(   "overflow:    gcd    is    2    ==    31   ");    }    	non-compiled	[CE]  <identifier>  expected	14	None	replace
333	[BUG]  [BUGGY]  Integer  v  =  gcd.intValue();  [CE]  <identifier>  expected  [FE]                            AssertionFailedError      [CONTEXT]      }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  v  /=  2;      [BUGGY]  Integer  v  =  gcd.intValue();  [BUGGY]      }  if  (k  ==  31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }    int  t  =  ((u  &  1)  ==  1)  ?  v  :  -(u  /  2)/*  B3  */;    do  {  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  short  NS  PS  ZS  boolean  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  k  t  u  v  	projects/Math94/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	432	433	1	replace	Integer  v  =  gcd.intValue();	  if(t    >    0)    {    for(int    k    =    0;    k    <    31;    k++)    {    throw    new    ArithmeticException(   "overflow:    gcd    is    2    ==    31   ");    }    	non-compiled	[CE]  <identifier>  expected	14	None	replace
334	[BUG]  [BUGGY]  if(k  >=  0)  {  k++;  //  cast  out  twos.  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  v  /=  2;      [BUGGY]  if(k  >=  0)  {  k++;  //  cast  out  twos.  [BUGGY]      }  if  (k  ==  31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }    int  t  =  ((u  &  1)  ==  1)  ?  v  :  -(u  /  2)/*  B3  */;    do  {  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  short  NS  PS  ZS  boolean  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  k  t  u  v  	projects/Math94/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	432	433	1	replace	if(k  >=  0)  {  k++;  //  cast  out  twos.	  k++;    //    cast    out    twos.    	non-compiled	[CE]  <identifier>  expected	24	None	replace
335	[BUG]  [BUGGY]  try  {  for(int  k  =  0;  k  <  4;  k++)  {  throw  new  ArithmeticException( "overflow:  Gcd  is  2  >>  31 ");  }  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  v  /=  2;      [BUGGY]  try  {  for(int  k  =  0;  k  <  4;  k++)  {  throw  new  ArithmeticException( "overflow:  Gcd  is  2  >>  31 ");  }  [BUGGY]      k++;  //  cast  out  twos.  }  }  if  (k  ==  31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }    int  t  =  ((u  &  1)  ==  1)  ?  v  :  -(u  /  2)/*  B3  */;    do  {  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  short  NS  PS  ZS  boolean  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  k  t  u  v  	projects/Math94/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	432	433	1	replace	try  {  for(int  k  =  0;  k  <  4;  k++)  {  throw  new  ArithmeticException( "overflow:  Gcd  is  2  >>  31 ");  }	  try    {    for(int    k    =    0;    k    <    2;    k++)    {    throw    new    ArithmeticException(   "overflow:    Gcd    is    2    >>    31   ");    }    	non-compiled	[CE]  <identifier>  expected	117	None	replace
336	[BUG]  [BUGGY]  if(t  >  0)  {  k++;  }  else  {  throw  new  ArithmeticException( "Overflow:  gcd  is  2  <  31 ");  }  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  v  /=  2;      [BUGGY]  if(t  >  0)  {  k++;  }  else  {  throw  new  ArithmeticException( "Overflow:  gcd  is  2  <  31 ");  }  [BUGGY]      }  if  (k  ==  31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }    int  t  =  ((u  &  1)  ==  1)  ?  v  :  -(u  /  2)/*  B3  */;    do  {  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  short  NS  PS  ZS  boolean  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  k  t  u  v  	projects/Math94/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	432	433	1	replace	if(t  >  0)  {  k++;  }  else  {  throw  new  ArithmeticException( "Overflow:  gcd  is  2  <  31 ");  }	  if(t    >    0)    {    k++;    }    else    {    throw    new    ArithmeticException(   "Overflow:    gcd    is    2    >=    31   ");    }    	non-compiled	[CE]  <identifier>  expected	37	None	replace
337	[BUG]  [BUGGY]  safeThan  <  ArithmeticException.DEFAULT_NUMBER_ERROR)  {  throw  new  ArithmeticException( "Overflow:  gcd  is  2  >=  31 ");  }  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  v  /=  2;      [BUGGY]  safeThan  <  ArithmeticException.DEFAULT_NUMBER_ERROR)  {  throw  new  ArithmeticException( "Overflow:  gcd  is  2  >=  31 ");  }  [BUGGY]      k++;  //  cast  out  twos.  }  }  if  (k  ==  31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }    int  t  =  ((u  &  1)  ==  1)  ?  v  :  -(u  /  2)/*  B3  */;    do  {  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  short  NS  PS  ZS  boolean  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  k  t  u  v  	projects/Math94/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	432	433	1	replace	safeThan  <  ArithmeticException.DEFAULT_NUMBER_ERROR)  {  throw  new  ArithmeticException( "Overflow:  gcd  is  2  >=  31 ");  }	  safeThan    <    ArithmeticException.DEFAULT_NUMBER_ERROR)    {    throw    new    ArithmeticException(   "Overflow:    gcd    is    2    >>    31   ");    }    	non-compiled	[CE]  <identifier>  expected	84	None	replace
338	[BUG]  [BUGGY]  if(t  ==  31)  {  k++;  }  else  {  throw  new  ArithmeticException( " ");  }  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  v  /=  2;      [BUGGY]  if(t  ==  31)  {  k++;  }  else  {  throw  new  ArithmeticException( " ");  }  [BUGGY]      }  if  (k  ==  31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }    int  t  =  ((u  &  1)  ==  1)  ?  v  :  -(u  /  2)/*  B3  */;    do  {  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  short  NS  PS  ZS  boolean  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  k  t  u  v  	projects/Math94/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	432	433	1	replace	if(t  ==  31)  {  k++;  }  else  {  throw  new  ArithmeticException( " ");  }	  if(t    >    31)    {    k++;    }    else    {    throw    new    ArithmeticException(   "   ");    }    	non-compiled	[CE]  <identifier>  expected	44	None	replace
339	[BUG]  [BUGGY]  if(t  <  31)  {  k++;  }  else  {  throw  new  ArithmeticException( " ");  }  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  v  /=  2;      [BUGGY]  if(t  <  31)  {  k++;  }  else  {  throw  new  ArithmeticException( " ");  }  [BUGGY]      }  if  (k  ==  31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }    int  t  =  ((u  &  1)  ==  1)  ?  v  :  -(u  /  2)/*  B3  */;    do  {  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  short  NS  PS  ZS  boolean  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  k  t  u  v  	projects/Math94/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	432	433	1	replace	if(t  <  31)  {  k++;  }  else  {  throw  new  ArithmeticException( " ");  }	  if(t    >    31)    {    k++;    }    else    {    throw    new    ArithmeticException(   "   ");    }    	non-compiled	[CE]  <identifier>  expected	44	None	replace
340	[BUG]  [BUGGY]  int  k  =  ((  u  &  1)  ==  0  &&  v  &  1)  ==  0  &&  k  <  32)  {  u  /=  3;  v  /=  2;  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  v  /=  2;      [BUGGY]  int  k  =  ((  u  &  1)  ==  0  &&  v  &  1)  ==  0  &&  k  <  32)  {  u  /=  3;  v  /=  2;  [BUGGY]      k++;  //  cast  out  twos.  }  }  if  (k  ==  31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }    int  t  =  ((u  &  1)  ==  1)  ?  v  :  -(u  /  2)/*  B3  */;    do  {  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  short  NS  PS  ZS  boolean  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  k  t  u  v  	projects/Math94/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	432	433	1	replace	int  k  =  ((  u  &  1)  ==  0  &&  v  &  1)  ==  0  &&  k  <  32)  {  u  /=  3;  v  /=  2;	  int    k    =    ((    u    &    1)    ==    0    &&    v    &    1)    ==    0    &&    k    <    31)    {    u    /=    3;    v    /=    2;    	non-compiled	[CE]  <identifier>  expected	38	None	replace
341	[BUG]  [BUGGY]  int  k  =  ((  u  &  1)  ==  0  &&  v  &  1)  ==  0  &&  k  <  31)  {  u  /=  2;  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  v  /=  2;      [BUGGY]  int  k  =  ((  u  &  1)  ==  0  &&  v  &  1)  ==  0  &&  k  <  31)  {  u  /=  2;  [BUGGY]      k++;  //  cast  out  twos.  }  }  if  (k  ==  31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }    int  t  =  ((u  &  1)  ==  1)  ?  v  :  -(u  /  2)/*  B3  */;    do  {  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  short  NS  PS  ZS  boolean  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  k  t  u  v  	projects/Math94/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	432	433	1	replace	int  k  =  ((  u  &  1)  ==  0  &&  v  &  1)  ==  0  &&  k  <  31)  {  u  /=  2;	  int    k    =    ((    u    &    1)    ==    0    &&    v    &    1)    ==    0    &&    k    <    31)    {    u    /=    3;    v    /=    2;    	non-compiled	[CE]  <identifier>  expected	38	None	replace
342	[BUG]  [BUGGY]  if(v  >  0)  {  aughtException( "Overflow:  gcd  is  2  {  31 ");  }  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  v  /=  2;      [BUGGY]  if(v  >  0)  {  aughtException( "Overflow:  gcd  is  2  {  31 ");  }  [BUGGY]      k++;  //  cast  out  twos.  }  }  if  (k  ==  31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }    int  t  =  ((u  &  1)  ==  1)  ?  v  :  -(u  /  2)/*  B3  */;    do  {  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  short  NS  PS  ZS  boolean  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  k  t  u  v  	projects/Math94/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	432	433	1	replace	if(v  >  0)  {  aughtException( "Overflow:  gcd  is  2  {  31 ");  }	  aughtException(   "Overflow:    gcd    is    2    {    31   ");    	non-compiled	[CE]  <identifier>  expected	19	None	replace
343	[BUG]  [BUGGY]  aughtException( "Overflow:  gcd  is  2  {  31  }   ");  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  v  /=  2;      [BUGGY]  aughtException( "Overflow:  gcd  is  2  {  31  }   ");  [BUGGY]      k++;  //  cast  out  twos.  }  }  if  (k  ==  31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }    int  t  =  ((u  &  1)  ==  1)  ?  v  :  -(u  /  2)/*  B3  */;    do  {  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  short  NS  PS  ZS  boolean  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  k  t  u  v  	projects/Math94/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	432	433	1	replace	aughtException( "Overflow:  gcd  is  2  {  31  }   ");	  aughtException(   "Overflow:    gcd    is    2    {    31   ");    	non-compiled	[CE]  <identifier>  expected	19	None	replace
344	[BUG]  [BUGGY]  aughtException( "Overflow:  gcd  is  2  {  31, ");  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  v  /=  2;      [BUGGY]  aughtException( "Overflow:  gcd  is  2  {  31, ");  [BUGGY]      k++;  //  cast  out  twos.  }  }  if  (k  ==  31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }    int  t  =  ((u  &  1)  ==  1)  ?  v  :  -(u  /  2)/*  B3  */;    do  {  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  short  NS  PS  ZS  boolean  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  k  t  u  v  	projects/Math94/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	432	433	1	replace	aughtException( "Overflow:  gcd  is  2  {  31, ");	  aughtException(   "Overflow:    gcd    is    2    {    31   ");    	non-compiled	[CE]  <identifier>  expected	19	None	replace
345	[BUG]  [BUGGY]  if(k  ==  31)  {  catch(RuntimeException  rex)  {  throw  new  ArithmeticException( "Overflow:  gcd  is  2  >>  31 ");  }  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  v  /=  2;      [BUGGY]  if(k  ==  31)  {  catch(RuntimeException  rex)  {  throw  new  ArithmeticException( "Overflow:  gcd  is  2  >>  31 ");  }  [BUGGY]      k++;  //  cast  out  twos.  }  }  if  (k  ==  31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }    int  t  =  ((u  &  1)  ==  1)  ?  v  :  -(u  /  2)/*  B3  */;    do  {  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  short  NS  PS  ZS  boolean  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  k  t  u  v  	projects/Math94/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	432	433	1	replace	if(k  ==  31)  {  catch(RuntimeException  rex)  {  throw  new  ArithmeticException( "Overflow:  gcd  is  2  >>  31 ");  }	  try    {    [Delete]    catch(RuntimeException    rex)    {    throw    new    ArithmeticException(   "Overflow:    gcd    is    2    >>    31   ");    }    	non-compiled	[CE]  <identifier>  expected	120	None	replace
346	[BUG]  [BUGGY]  if(k  ==  31)  {  catch(RuntimeException  rex)  {  throw  new  ArithmeticException( "Overflow:  gcd  is  2  >=  31 ");  }  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  v  /=  2;      [BUGGY]  if(k  ==  31)  {  catch(RuntimeException  rex)  {  throw  new  ArithmeticException( "Overflow:  gcd  is  2  >=  31 ");  }  [BUGGY]      k++;  //  cast  out  twos.  }  }  if  (k  ==  31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }    int  t  =  ((u  &  1)  ==  1)  ?  v  :  -(u  /  2)/*  B3  */;    do  {  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  short  NS  PS  ZS  boolean  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  k  t  u  v  	projects/Math94/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	432	433	1	replace	if(k  ==  31)  {  catch(RuntimeException  rex)  {  throw  new  ArithmeticException( "Overflow:  gcd  is  2  >=  31 ");  }	  try    {    [Delete]    catch(RuntimeException    rex)    {    throw    new    ArithmeticException(   "Overflow:    gcd    is    2    >>    31   ");    }    	non-compiled	[CE]  <identifier>  expected	120	None	replace
347	[BUG]  [BUGGY]  safeThan  <  ArithmeticException.DEFAULT_NUMBER_ERROR  ||  v  >  0)  {  throw  new  ArithmeticException( "Overflow:  gcd  is  2  >>  31 ");  }  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  v  /=  2;      [BUGGY]  safeThan  <  ArithmeticException.DEFAULT_NUMBER_ERROR  ||  v  >  0)  {  throw  new  ArithmeticException( "Overflow:  gcd  is  2  >>  31 ");  }  [BUGGY]      k++;  //  cast  out  twos.  }  }  if  (k  ==  31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }    int  t  =  ((u  &  1)  ==  1)  ?  v  :  -(u  /  2)/*  B3  */;    do  {  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  short  NS  PS  ZS  boolean  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  k  t  u  v  	projects/Math94/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	432	433	1	replace	safeThan  <  ArithmeticException.DEFAULT_NUMBER_ERROR  ||  v  >  0)  {  throw  new  ArithmeticException( "Overflow:  gcd  is  2  >>  31 ");  }	  safeThan    <    ArithmeticException.DEFAULT_NUMBER_ERROR    ||    t    >    0)    {    throw    new    ArithmeticException(   "Overflow:    gcd    is    2    >>    31   ");    }    	non-compiled	[CE]  <identifier>  expected	85	None	replace
348	[BUG]  [BUGGY]  safeThan  <  ArithmeticException.DEFAULT_NUMBER_ERROR  ||  t  ==  0)  {  throw  new  ArithmeticException( "Overflow:  gcd  is  2  >>  31 ");  }  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  v  /=  2;      [BUGGY]  safeThan  <  ArithmeticException.DEFAULT_NUMBER_ERROR  ||  t  ==  0)  {  throw  new  ArithmeticException( "Overflow:  gcd  is  2  >>  31 ");  }  [BUGGY]      k++;  //  cast  out  twos.  }  }  if  (k  ==  31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }    int  t  =  ((u  &  1)  ==  1)  ?  v  :  -(u  /  2)/*  B3  */;    do  {  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  short  NS  PS  ZS  boolean  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  k  t  u  v  	projects/Math94/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	432	433	1	replace	safeThan  <  ArithmeticException.DEFAULT_NUMBER_ERROR  ||  t  ==  0)  {  throw  new  ArithmeticException( "Overflow:  gcd  is  2  >>  31 ");  }	  safeThan    <    ArithmeticException.DEFAULT_NUMBER_ERROR    ||    t    >    0)    {    throw    new    ArithmeticException(   "Overflow:    gcd    is    2    >>    31   ");    }    	non-compiled	[CE]  <identifier>  expected	85	None	replace
349	[BUG]  [BUGGY]  MutationFailedError  t  =  mutation(t  >  0)  {  k++;  }  else  {  throw  new  ArithmeticException( "overflow:  gcd  is  2  >>  31 ");  }  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  v  /=  2;      [BUGGY]  MutationFailedError  t  =  mutation(t  >  0)  {  k++;  }  else  {  throw  new  ArithmeticException( "overflow:  gcd  is  2  >>  31 ");  }  [BUGGY]      }  if  (k  ==  31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }    int  t  =  ((u  &  1)  ==  1)  ?  v  :  -(u  /  2)/*  B3  */;    do  {  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  short  NS  PS  ZS  boolean  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  k  t  u  v  	projects/Math94/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	432	433	1	replace	MutationFailedError  t  =  mutation(t  >  0)  {  k++;  }  else  {  throw  new  ArithmeticException( "overflow:  gcd  is  2  >>  31 ");  }	  mutation(t    >    0)    {    k++;    }    else    {    throw    new    ArithmeticException(   "overflow:    gcd    is    2    >>    31   ");    }    	non-compiled	[CE]  <identifier>  expected	54	None	replace
350	[BUG]  [BUGGY]  if(t  >  0)  {  k++;  }  else  {  throw  new  ArithmeticException( "overflow:  gcd  is  2!=  31 ");  }  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  v  /=  2;      [BUGGY]  if(t  >  0)  {  k++;  }  else  {  throw  new  ArithmeticException( "overflow:  gcd  is  2!=  31 ");  }  [BUGGY]      }  if  (k  ==  31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }    int  t  =  ((u  &  1)  ==  1)  ?  v  :  -(u  /  2)/*  B3  */;    do  {  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  short  NS  PS  ZS  boolean  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  k  t  u  v  	projects/Math94/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	432	433	1	replace	if(t  >  0)  {  k++;  }  else  {  throw  new  ArithmeticException( "overflow:  gcd  is  2!=  31 ");  }	  if(t    >    0)    {    k++;    }    else    {    throw    new    ArithmeticException(   "overflow:    gcd    is    2    >>    31   ");    }    	non-compiled	[CE]  <identifier>  expected	9	None	replace
351	[BUG]  [BUGGY]  if(v  >  0)  {  for(int  k  =  0;  k  <  31;  k++)  {  throw  new  ArithmeticException( "overflow:  gcd  is  2  >>  31 ");  }  [CE]  <identifier>  expected  [FE]            AssertionFailedError      [CONTEXT]      }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  v  /=  2;      [BUGGY]  if(v  >  0)  {  for(int  k  =  0;  k  <  31;  k++)  {  throw  new  ArithmeticException( "overflow:  gcd  is  2  >>  31 ");  }  [BUGGY]      k++;  //  cast  out  twos.  }  }  if  (k  ==  31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }    int  t  =  ((u  &  1)  ==  1)  ?  v  :  -(u  /  2)/*  B3  */;    do  {  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  short  NS  PS  ZS  boolean  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  k  t  u  v  	projects/Math94/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	432	433	1	replace	if(v  >  0)  {  for(int  k  =  0;  k  <  31;  k++)  {  throw  new  ArithmeticException( "overflow:  gcd  is  2  >>  31 ");  }	  if(v    >    0)    {    for(int    k    =    0;    k    <    2;    k++)    {    throw    new    ArithmeticException(   "overflow:    gcd    is    2    >>    31   ");    }    	non-compiled	[CE]  <identifier>  expected	29	None	replace
352	[BUG]  [BUGGY]  if(v  >  0)  {  for(int  k  =  0;  k  <  3;  k++)  {  throw  new  ArithmeticException( "overflow:  gcd  is  2  >>  31 ");  }  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  v  /=  2;      [BUGGY]  if(v  >  0)  {  for(int  k  =  0;  k  <  3;  k++)  {  throw  new  ArithmeticException( "overflow:  gcd  is  2  >>  31 ");  }  [BUGGY]      k++;  //  cast  out  twos.  }  }  if  (k  ==  31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }    int  t  =  ((u  &  1)  ==  1)  ?  v  :  -(u  /  2)/*  B3  */;    do  {  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  short  NS  PS  ZS  boolean  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  k  t  u  v  	projects/Math94/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	432	433	1	replace	if(v  >  0)  {  for(int  k  =  0;  k  <  3;  k++)  {  throw  new  ArithmeticException( "overflow:  gcd  is  2  >>  31 ");  }	  if(v    >    0)    {    for(int    k    =    0;    k    <    2;    k++)    {    throw    new    ArithmeticException(   "overflow:    gcd    is    2    >>    31   ");    }    	non-compiled	[CE]  <identifier>  expected	29	None	replace
353	[BUG]  [BUGGY]  if(v  >  0)  {  for(int  k  =  0;  k  <  4;  k++)  {  throw  new  ArithmeticException( "overflow:  gcd  is  2  >>  31 ");  }  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  v  /=  2;      [BUGGY]  if(v  >  0)  {  for(int  k  =  0;  k  <  4;  k++)  {  throw  new  ArithmeticException( "overflow:  gcd  is  2  >>  31 ");  }  [BUGGY]      k++;  //  cast  out  twos.  }  }  if  (k  ==  31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }    int  t  =  ((u  &  1)  ==  1)  ?  v  :  -(u  /  2)/*  B3  */;    do  {  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  short  NS  PS  ZS  boolean  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  k  t  u  v  	projects/Math94/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	432	433	1	replace	if(v  >  0)  {  for(int  k  =  0;  k  <  4;  k++)  {  throw  new  ArithmeticException( "overflow:  gcd  is  2  >>  31 ");  }	  if(v    >    0)    {    for(int    k    =    0;    k    <    2;    k++)    {    throw    new    ArithmeticException(   "overflow:    gcd    is    2    >>    31   ");    }    	non-compiled	[CE]  <identifier>  expected	29	None	replace
354	[BUG]  [BUGGY]  if(v  >  0)  {  k++;  }  else  {  throw  new  ArithmeticException( "Overflow:  gcd  is  2  ==  31 ");  }  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  v  /=  2;      [BUGGY]  if(v  >  0)  {  k++;  }  else  {  throw  new  ArithmeticException( "Overflow:  gcd  is  2  ==  31 ");  }  [BUGGY]      }  if  (k  ==  31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }    int  t  =  ((u  &  1)  ==  1)  ?  v  :  -(u  /  2)/*  B3  */;    do  {  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  short  NS  PS  ZS  boolean  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  k  t  u  v  	projects/Math94/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	432	433	1	replace	if(v  >  0)  {  k++;  }  else  {  throw  new  ArithmeticException( "Overflow:  gcd  is  2  ==  31 ");  }	  if(v    <    31)    {    k++;    }    else    {    throw    new    ArithmeticException(   "Overflow:    gcd    is    2    ==    31   ");    }    	non-compiled	[CE]  <identifier>  expected	64	None	replace
355	[BUG]  [BUGGY]  if(k  ==  31)  {  k++;  }  else  {  throw  new  ArithmeticException( "Overflow:  gcd  is  2  ==  31 ");  }  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  v  /=  2;      [BUGGY]  if(k  ==  31)  {  k++;  }  else  {  throw  new  ArithmeticException( "Overflow:  gcd  is  2  ==  31 ");  }  [BUGGY]      }  if  (k  ==  31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }    int  t  =  ((u  &  1)  ==  1)  ?  v  :  -(u  /  2)/*  B3  */;    do  {  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  short  NS  PS  ZS  boolean  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  k  t  u  v  	projects/Math94/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	432	433	1	replace	if(k  ==  31)  {  k++;  }  else  {  throw  new  ArithmeticException( "Overflow:  gcd  is  2  ==  31 ");  }	  if(v    <    31)    {    k++;    }    else    {    throw    new    ArithmeticException(   "Overflow:    gcd    is    2    ==    31   ");    }    	non-compiled	[CE]  <identifier>  expected	64	None	replace
356	[BUG]  [BUGGY]  if(v  <  0)  {  k++;  }  else  {  throw  new  ArithmeticException( "Overflow:  gcd  is  2  ==  31 ");  }  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  v  /=  2;      [BUGGY]  if(v  <  0)  {  k++;  }  else  {  throw  new  ArithmeticException( "Overflow:  gcd  is  2  ==  31 ");  }  [BUGGY]      }  if  (k  ==  31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }    int  t  =  ((u  &  1)  ==  1)  ?  v  :  -(u  /  2)/*  B3  */;    do  {  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  short  NS  PS  ZS  boolean  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  k  t  u  v  	projects/Math94/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	432	433	1	replace	if(v  <  0)  {  k++;  }  else  {  throw  new  ArithmeticException( "Overflow:  gcd  is  2  ==  31 ");  }	  if(v    <    31)    {    k++;    }    else    {    throw    new    ArithmeticException(   "Overflow:    gcd    is    2    ==    31   ");    }    	non-compiled	[CE]  <identifier>  expected	64	None	replace
357	[BUG]  [BUGGY]  if(v  >  0)  {  k++;  }  else  {  throw  new  ArithmeticException( "Overflow:  gcd  is  2  {  31 ");  }  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  v  /=  2;      [BUGGY]  if(v  >  0)  {  k++;  }  else  {  throw  new  ArithmeticException( "Overflow:  gcd  is  2  {  31 ");  }  [BUGGY]      }  if  (k  ==  31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }    int  t  =  ((u  &  1)  ==  1)  ?  v  :  -(u  /  2)/*  B3  */;    do  {  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  short  NS  PS  ZS  boolean  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  k  t  u  v  	projects/Math94/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	432	433	1	replace	if(v  >  0)  {  k++;  }  else  {  throw  new  ArithmeticException( "Overflow:  gcd  is  2  {  31 ");  }	  if(v    <    31)    {    k++;    }    else    {    throw    new    ArithmeticException(   "Overflow:    gcd    is    2    ==    31   ");    }    	non-compiled	[CE]  <identifier>  expected	64	None	replace
358	[BUG]  [BUGGY]  while((  u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  for(int  k  =  0;  k  <  31;  k++)  {  v  =  -k;  }  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  v  /=  2;      [BUGGY]  while((  u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  for(int  k  =  0;  k  <  31;  k++)  {  v  =  -k;  }  [BUGGY]      }  if  (k  ==  31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }    int  t  =  ((u  &  1)  ==  1)  ?  v  :  -(u  /  2)/*  B3  */;    do  {  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  short  NS  PS  ZS  boolean  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  k  t  u  v  	projects/Math94/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	432	433	1	replace	while((  u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  for(int  k  =  0;  k  <  31;  k++)  {  v  =  -k;  }	  if(t    >    0)    {    for(int    k    =    0;    k    <    31;    k++)    {    v    =    -k;    }    	non-compiled	[CE]  <identifier>  expected	110	None	replace
359	[BUG]  [BUGGY]  if(t  >  0)  {  for(int  k  =  0;  k  <  32;  k++)  {  v  =  -k;  }  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  v  /=  2;      [BUGGY]  if(t  >  0)  {  for(int  k  =  0;  k  <  32;  k++)  {  v  =  -k;  }  [BUGGY]      }  if  (k  ==  31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }    int  t  =  ((u  &  1)  ==  1)  ?  v  :  -(u  /  2)/*  B3  */;    do  {  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  short  NS  PS  ZS  boolean  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  k  t  u  v  	projects/Math94/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	432	433	1	replace	if(t  >  0)  {  for(int  k  =  0;  k  <  32;  k++)  {  v  =  -k;  }	  if(t    >    0)    {    for(int    k    =    0;    k    <    31;    k++)    {    v    =    -k;    }    	non-compiled	[CE]  <identifier>  expected	110	None	replace
360	[BUG]  [BUGGY]  while((  u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  for(int  k  =  0;  k  <  32;  k++)  {  v  =  -k;  }  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  v  /=  2;      [BUGGY]  while((  u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  for(int  k  =  0;  k  <  32;  k++)  {  v  =  -k;  }  [BUGGY]      }  if  (k  ==  31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }    int  t  =  ((u  &  1)  ==  1)  ?  v  :  -(u  /  2)/*  B3  */;    do  {  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  short  NS  PS  ZS  boolean  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  k  t  u  v  	projects/Math94/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	432	433	1	replace	while((  u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  for(int  k  =  0;  k  <  32;  k++)  {  v  =  -k;  }	  if(t    >    0)    {    for(int    k    =    0;    k    <    31;    k++)    {    v    =    -k;    }    	non-compiled	[CE]  <identifier>  expected	110	None	replace
361	[BUG]  [BUGGY]  aughtException( "Overflow:  gcd  is  2  >>  31;n ");  [CE]  <identifier>  expected  [FE]            AssertionFailedError      [CONTEXT]      }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  v  /=  2;      [BUGGY]  aughtException( "Overflow:  gcd  is  2  >>  31;n ");  [BUGGY]      k++;  //  cast  out  twos.  }  }  if  (k  ==  31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }    int  t  =  ((u  &  1)  ==  1)  ?  v  :  -(u  /  2)/*  B3  */;    do  {  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  short  NS  PS  ZS  boolean  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  k  t  u  v  	projects/Math94/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	432	433	1	replace	aughtException( "Overflow:  gcd  is  2  >>  31;n ");	  aughtException(   "Overflow:    gcd    is    2    >>    31   ");    	non-compiled	[CE]  <identifier>  expected	31	None	replace
362	[BUG]  [BUGGY]  if(v  >  0)  {  aughtException( "Overflow:  gcd  is  2  ==  31 ");  }  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  v  /=  2;      [BUGGY]  if(v  >  0)  {  aughtException( "Overflow:  gcd  is  2  ==  31 ");  }  [BUGGY]      k++;  //  cast  out  twos.  }  }  if  (k  ==  31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }    int  t  =  ((u  &  1)  ==  1)  ?  v  :  -(u  /  2)/*  B3  */;    do  {  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  short  NS  PS  ZS  boolean  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  k  t  u  v  	projects/Math94/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	432	433	1	replace	if(v  >  0)  {  aughtException( "Overflow:  gcd  is  2  ==  31 ");  }	  aughtException(   "Overflow:    gcd    is    2    ==    31   ");    	non-compiled	[CE]  <identifier>  expected	59	None	replace
363	[BUG]  [BUGGY]  if(v  >  0)  {  aughtException( "Overflow:  gcd  is  2  ==  31 ");  }  else  {  throw  new  ArithmeticException( "Overflow:  gcd  is  2  ==  31 ");  }  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  v  /=  2;      [BUGGY]  if(v  >  0)  {  aughtException( "Overflow:  gcd  is  2  ==  31 ");  }  else  {  throw  new  ArithmeticException( "Overflow:  gcd  is  2  ==  31 ");  }  [BUGGY]      k++;  //  cast  out  twos.  }  }  if  (k  ==  31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }    int  t  =  ((u  &  1)  ==  1)  ?  v  :  -(u  /  2)/*  B3  */;    do  {  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  short  NS  PS  ZS  boolean  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  k  t  u  v  	projects/Math94/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	432	433	1	replace	if(v  >  0)  {  aughtException( "Overflow:  gcd  is  2  ==  31 ");  }  else  {  throw  new  ArithmeticException( "Overflow:  gcd  is  2  ==  31 ");  }	  aughtException(   "Overflow:    gcd    is    2    ==    31   ");    	non-compiled	[CE]  <identifier>  expected	59	None	replace
364	[BUG]  [BUGGY]  if(k  ==  31)  {  aughtException( "Overflow:  gcd  is  2  ==  31 ");  }  else  {  throw  new  ArithmeticException( "Overflow:  gcd  is  2  ==  31 ");  }  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  v  /=  2;      [BUGGY]  if(k  ==  31)  {  aughtException( "Overflow:  gcd  is  2  ==  31 ");  }  else  {  throw  new  ArithmeticException( "Overflow:  gcd  is  2  ==  31 ");  }  [BUGGY]      k++;  //  cast  out  twos.  }  }  if  (k  ==  31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }    int  t  =  ((u  &  1)  ==  1)  ?  v  :  -(u  /  2)/*  B3  */;    do  {  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  short  NS  PS  ZS  boolean  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  k  t  u  v  	projects/Math94/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	432	433	1	replace	if(k  ==  31)  {  aughtException( "Overflow:  gcd  is  2  ==  31 ");  }  else  {  throw  new  ArithmeticException( "Overflow:  gcd  is  2  ==  31 ");  }	  aughtException(   "Overflow:    gcd    is    2    ==    31   ");    	non-compiled	[CE]  <identifier>  expected	59	None	replace
365	[BUG]  [BUGGY]  if(v  >  0)  {  aughtException( "overflow:  gcd  is  2  ==  31 ");  }  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  v  /=  2;      [BUGGY]  if(v  >  0)  {  aughtException( "overflow:  gcd  is  2  ==  31 ");  }  [BUGGY]      k++;  //  cast  out  twos.  }  }  if  (k  ==  31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }    int  t  =  ((u  &  1)  ==  1)  ?  v  :  -(u  /  2)/*  B3  */;    do  {  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  short  NS  PS  ZS  boolean  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  k  t  u  v  	projects/Math94/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	432	433	1	replace	if(v  >  0)  {  aughtException( "overflow:  gcd  is  2  ==  31 ");  }	  aughtException(   "overflow:    gcd    is    2    ==    31   ");    	non-compiled	[CE]  <identifier>  expected	20	None	replace
366	[BUG]  [BUGGY]  if(v  >  0)  {  aughtException( "overflow:  gcd  is  2  ==  31 ");  }  else  {  throw  new  ArithmeticException( "Overflow:  gcd  is  2  ==  31 ");  }  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  v  /=  2;      [BUGGY]  if(v  >  0)  {  aughtException( "overflow:  gcd  is  2  ==  31 ");  }  else  {  throw  new  ArithmeticException( "Overflow:  gcd  is  2  ==  31 ");  }  [BUGGY]      k++;  //  cast  out  twos.  }  }  if  (k  ==  31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }    int  t  =  ((u  &  1)  ==  1)  ?  v  :  -(u  /  2)/*  B3  */;    do  {  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  short  NS  PS  ZS  boolean  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  k  t  u  v  	projects/Math94/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	432	433	1	replace	if(v  >  0)  {  aughtException( "overflow:  gcd  is  2  ==  31 ");  }  else  {  throw  new  ArithmeticException( "Overflow:  gcd  is  2  ==  31 ");  }	  aughtException(   "overflow:    gcd    is    2    ==    31   ");    	non-compiled	[CE]  <identifier>  expected	20	None	replace
367	[BUG]  [BUGGY]  if(v  >  0)  {  aughtException( "overflow:  gcd  is  2  ==  31 ");  }  else  {  throw  new  ArithmeticException( "overflow:  gcd  is  2  ==  31 ");  }  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]      }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  v  /=  2;      [BUGGY]  if(v  >  0)  {  aughtException( "overflow:  gcd  is  2  ==  31 ");  }  else  {  throw  new  ArithmeticException( "overflow:  gcd  is  2  ==  31 ");  }  [BUGGY]      k++;  //  cast  out  twos.  }  }  if  (k  ==  31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }    int  t  =  ((u  &  1)  ==  1)  ?  v  :  -(u  /  2)/*  B3  */;    do  {  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  short  NS  PS  ZS  boolean  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  k  t  u  v  	projects/Math94/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	432	433	1	replace	if(v  >  0)  {  aughtException( "overflow:  gcd  is  2  ==  31 ");  }  else  {  throw  new  ArithmeticException( "overflow:  gcd  is  2  ==  31 ");  }	  aughtException(   "overflow:    gcd    is    2    ==    31   ");    	non-compiled	[CE]  <identifier>  expected	20	None	replace
368	[BUG]  [BUGGY]  if(v  >  0)  {  aughtException( "overflow:  gcd  is  2  >>  31 ");  }  else  {  throw  new  ArithmeticException( "Overflow:  gcd  is  2  >>  31 ");  }  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  v  /=  2;      [BUGGY]  if(v  >  0)  {  aughtException( "overflow:  gcd  is  2  >>  31 ");  }  else  {  throw  new  ArithmeticException( "Overflow:  gcd  is  2  >>  31 ");  }  [BUGGY]      k++;  //  cast  out  twos.  }  }  if  (k  ==  31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }    int  t  =  ((u  &  1)  ==  1)  ?  v  :  -(u  /  2)/*  B3  */;    do  {  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  short  NS  PS  ZS  boolean  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  k  t  u  v  	projects/Math94/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	432	433	1	replace	if(v  >  0)  {  aughtException( "overflow:  gcd  is  2  >>  31 ");  }  else  {  throw  new  ArithmeticException( "Overflow:  gcd  is  2  >>  31 ");  }	  aughtException(   "overflow:    gcd    is    2    >>    31   ");    	non-compiled	[CE]  <identifier>  expected	21	None	replace
369	[BUG]  [BUGGY]  if(v  >  0)  {  aughtException( "overflow:  gcd  is  2  >>  31 ");  }  else  {  throw  new  ArithmeticException( "overflow:  gcd  is  2  >>  31 ");  }  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]      }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  v  /=  2;      [BUGGY]  if(v  >  0)  {  aughtException( "overflow:  gcd  is  2  >>  31 ");  }  else  {  throw  new  ArithmeticException( "overflow:  gcd  is  2  >>  31 ");  }  [BUGGY]      k++;  //  cast  out  twos.  }  }  if  (k  ==  31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }    int  t  =  ((u  &  1)  ==  1)  ?  v  :  -(u  /  2)/*  B3  */;    do  {  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  short  NS  PS  ZS  boolean  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  k  t  u  v  	projects/Math94/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	432	433	1	replace	if(v  >  0)  {  aughtException( "overflow:  gcd  is  2  >>  31 ");  }  else  {  throw  new  ArithmeticException( "overflow:  gcd  is  2  >>  31 ");  }	  aughtException(   "overflow:    gcd    is    2    >>    31   ");    	non-compiled	[CE]  <identifier>  expected	21	None	replace
370	[BUG]  [BUGGY]  if(v  >  0)  {  aughtException( "overflow:  gcd  is  2  >>  31 ");  }  else  {  throw  new  ArithmeticException( "Overflow:  gcd  is  2  ==  31 ");  }  [CE]  <identifier>  expected  [FE]                          AssertionFailedError      [CONTEXT]      }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  v  /=  2;      [BUGGY]  if(v  >  0)  {  aughtException( "overflow:  gcd  is  2  >>  31 ");  }  else  {  throw  new  ArithmeticException( "Overflow:  gcd  is  2  ==  31 ");  }  [BUGGY]      k++;  //  cast  out  twos.  }  }  if  (k  ==  31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }    int  t  =  ((u  &  1)  ==  1)  ?  v  :  -(u  /  2)/*  B3  */;    do  {  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  short  NS  PS  ZS  boolean  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  k  t  u  v  	projects/Math94/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	432	433	1	replace	if(v  >  0)  {  aughtException( "overflow:  gcd  is  2  >>  31 ");  }  else  {  throw  new  ArithmeticException( "Overflow:  gcd  is  2  ==  31 ");  }	  aughtException(   "overflow:    gcd    is    2    >>    31   ");    	non-compiled	[CE]  <identifier>  expected	21	None	replace
371	[BUG]  [BUGGY]  safeThan  <  ArithmeticException.DEFAULT_NUMBER_ERROR  ||  k  >  0)  {  throw  new  ArithmeticException( "overflow:  gcd  is  2  ==  31 ");  }  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  v  /=  2;      [BUGGY]  safeThan  <  ArithmeticException.DEFAULT_NUMBER_ERROR  ||  k  >  0)  {  throw  new  ArithmeticException( "overflow:  gcd  is  2  ==  31 ");  }  [BUGGY]      k++;  //  cast  out  twos.  }  }  if  (k  ==  31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }    int  t  =  ((u  &  1)  ==  1)  ?  v  :  -(u  /  2)/*  B3  */;    do  {  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  short  NS  PS  ZS  boolean  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  k  t  u  v  	projects/Math94/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	432	433	1	replace	safeThan  <  ArithmeticException.DEFAULT_NUMBER_ERROR  ||  k  >  0)  {  throw  new  ArithmeticException( "overflow:  gcd  is  2  ==  31 ");  }	  safeThan    <    ArithmeticException.DEFAULT_NUMBER_ERROR    ||    t    >    0)    {    throw    new    ArithmeticException(   "overflow:    gcd    is    2    ==    31   ");    }    	non-compiled	[CE]  <identifier>  expected	89	None	replace
372	[BUG]  [BUGGY]  safeThan  <  ArithmeticException.DEFAULT_NUMBER_ERROR  ||  v  >  0)  {  throw  new  ArithmeticException( "overflow:  gcd  is  2  ==  31 ");  }  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  v  /=  2;      [BUGGY]  safeThan  <  ArithmeticException.DEFAULT_NUMBER_ERROR  ||  v  >  0)  {  throw  new  ArithmeticException( "overflow:  gcd  is  2  ==  31 ");  }  [BUGGY]      k++;  //  cast  out  twos.  }  }  if  (k  ==  31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }    int  t  =  ((u  &  1)  ==  1)  ?  v  :  -(u  /  2)/*  B3  */;    do  {  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  short  NS  PS  ZS  boolean  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  k  t  u  v  	projects/Math94/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	432	433	1	replace	safeThan  <  ArithmeticException.DEFAULT_NUMBER_ERROR  ||  v  >  0)  {  throw  new  ArithmeticException( "overflow:  gcd  is  2  ==  31 ");  }	  safeThan    <    ArithmeticException.DEFAULT_NUMBER_ERROR    ||    t    >    0)    {    throw    new    ArithmeticException(   "overflow:    gcd    is    2    ==    31   ");    }    	non-compiled	[CE]  <identifier>  expected	89	None	replace
373	[BUG]  [BUGGY]  safeThan  <  ArithmeticException.DEFAULT_NUMBER_ERROR  ||  t  ==  0)  {  throw  new  ArithmeticException( "overflow:  gcd  is  2  ==  31 ");  }  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]      }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  v  /=  2;      [BUGGY]  safeThan  <  ArithmeticException.DEFAULT_NUMBER_ERROR  ||  t  ==  0)  {  throw  new  ArithmeticException( "overflow:  gcd  is  2  ==  31 ");  }  [BUGGY]      k++;  //  cast  out  twos.  }  }  if  (k  ==  31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }    int  t  =  ((u  &  1)  ==  1)  ?  v  :  -(u  /  2)/*  B3  */;    do  {  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  short  NS  PS  ZS  boolean  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  k  t  u  v  	projects/Math94/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	432	433	1	replace	safeThan  <  ArithmeticException.DEFAULT_NUMBER_ERROR  ||  t  ==  0)  {  throw  new  ArithmeticException( "overflow:  gcd  is  2  ==  31 ");  }	  safeThan    <    ArithmeticException.DEFAULT_NUMBER_ERROR    ||    t    >    0)    {    throw    new    ArithmeticException(   "overflow:    gcd    is    2    ==    31   ");    }    	non-compiled	[CE]  <identifier>  expected	89	None	replace
374	[BUG]  [BUGGY]  if(v  >  0)  {  k++;  }  else  {  throw  new  ArithmeticException( "overflow:  gcd  is  2!=  31 ");  }  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  v  /=  2;      [BUGGY]  if(v  >  0)  {  k++;  }  else  {  throw  new  ArithmeticException( "overflow:  gcd  is  2!=  31 ");  }  [BUGGY]      }  if  (k  ==  31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }    int  t  =  ((u  &  1)  ==  1)  ?  v  :  -(u  /  2)/*  B3  */;    do  {  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  short  NS  PS  ZS  boolean  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  k  t  u  v  	projects/Math94/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	432	433	1	replace	if(v  >  0)  {  k++;  }  else  {  throw  new  ArithmeticException( "overflow:  gcd  is  2!=  31 ");  }	  if(k    >=    31)    {    k++;    }    else    {    throw    new    ArithmeticException(   "overflow:    gcd    is    2    >>    31   ");    }    	non-compiled	[CE]  <identifier>  expected	126	None	replace
375	[BUG]  [BUGGY]  int  k  =  ((  u  &  1)  ==  0  &&  v  &  1)  ==  0  &&  31)?  -(u  /  2)/  2  *  B3  */;  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  v  /=  2;      [BUGGY]  int  k  =  ((  u  &  1)  ==  0  &&  v  &  1)  ==  0  &&  31)?  -(u  /  2)/  2  *  B3  */;  [BUGGY]      k++;  //  cast  out  twos.  }  }  if  (k  ==  31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }    int  t  =  ((u  &  1)  ==  1)  ?  v  :  -(u  /  2)/*  B3  */;    do  {  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  short  NS  PS  ZS  boolean  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  k  t  u  v  	projects/Math94/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	432	433	1	replace	int  k  =  ((  u  &  1)  ==  0  &&  v  &  1)  ==  0  &&  31)?  -(u  /  2)/  2  *  B3  */;	  int    k    =    ((    u    &    1)    ==    0    &&    v    &    1)    ==    0    &&    31)?    -(u    /    2)/*    B3    */;    	non-compiled	[CE]  <identifier>  expected	42	None	replace
376	[BUG]  [BUGGY]  Mutation(t  >  0)  {  throw  new  ArithmeticException( "overflow:  gcd  is  2  ==  31 ");  }  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  v  /=  2;      [BUGGY]  Mutation(t  >  0)  {  throw  new  ArithmeticException( "overflow:  gcd  is  2  ==  31 ");  }  [BUGGY]      k++;  //  cast  out  twos.  }  }  if  (k  ==  31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }    int  t  =  ((u  &  1)  ==  1)  ?  v  :  -(u  /  2)/*  B3  */;    do  {  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  short  NS  PS  ZS  boolean  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  k  t  u  v  	projects/Math94/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	432	433	1	replace	Mutation(t  >  0)  {  throw  new  ArithmeticException( "overflow:  gcd  is  2  ==  31 ");  }	  mutation(t    >    0)    {    throw    new    ArithmeticException(   "Overflow:    gcd    is    2    ==    31   ");    }    	non-compiled	[CE]  <identifier>  expected	58	None	replace
377	[BUG]  [BUGGY]  safeThan  <  ArithmeticException.INVALID_NUMBER_ERROR)  {  throw  new  ArithmeticException( "Overflow:  gcd  is  2  >>  31 ");  }  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  v  /=  2;      [BUGGY]  safeThan  <  ArithmeticException.INVALID_NUMBER_ERROR)  {  throw  new  ArithmeticException( "Overflow:  gcd  is  2  >>  31 ");  }  [BUGGY]      }  if  (k  ==  31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }    int  t  =  ((u  &  1)  ==  1)  ?  v  :  -(u  /  2)/*  B3  */;    do  {  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  short  NS  PS  ZS  boolean  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  k  t  u  v  	projects/Math94/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	432	433	1	replace	safeThan  <  ArithmeticException.INVALID_NUMBER_ERROR)  {  throw  new  ArithmeticException( "Overflow:  gcd  is  2  >>  31 ");  }	  if(k    ==    31)    {    throw    new    ArithmeticException(   "Overflow:    gcd    is    2    >>    31   ");    }    	non-compiled	[CE]  <identifier>  expected	91	None	replace
378	[BUG]  [BUGGY]  safeThan  <  ArithmeticException.DEFAULT_NUMBER_ERROR  ||  v  >  0)  {  throw  new  ArithmeticException( "overflow:  gcd  is  2  >>  31 ");  }  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  v  /=  2;      [BUGGY]  safeThan  <  ArithmeticException.DEFAULT_NUMBER_ERROR  ||  v  >  0)  {  throw  new  ArithmeticException( "overflow:  gcd  is  2  >>  31 ");  }  [BUGGY]      k++;  //  cast  out  twos.  }  }  if  (k  ==  31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }    int  t  =  ((u  &  1)  ==  1)  ?  v  :  -(u  /  2)/*  B3  */;    do  {  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  short  NS  PS  ZS  boolean  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  k  t  u  v  	projects/Math94/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	432	433	1	replace	safeThan  <  ArithmeticException.DEFAULT_NUMBER_ERROR  ||  v  >  0)  {  throw  new  ArithmeticException( "overflow:  gcd  is  2  >>  31 ");  }	  safeThan    <    ArithmeticException.DEFAULT_NUMBER_ERROR    ||    t    >    0)    {    throw    new    ArithmeticException(   "overflow:    gcd    is    2    >>    31   ");    }    	non-compiled	[CE]  <identifier>  expected	98	None	replace
379	[BUG]  [BUGGY]  safeThan  <  ArithmeticException.DEFAULT_NUMBER_ERROR  ||  t  ==  0)  {  throw  new  ArithmeticException( "overflow:  gcd  is  2  >>  31 ");  }  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  v  /=  2;      [BUGGY]  safeThan  <  ArithmeticException.DEFAULT_NUMBER_ERROR  ||  t  ==  0)  {  throw  new  ArithmeticException( "overflow:  gcd  is  2  >>  31 ");  }  [BUGGY]      k++;  //  cast  out  twos.  }  }  if  (k  ==  31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }    int  t  =  ((u  &  1)  ==  1)  ?  v  :  -(u  /  2)/*  B3  */;    do  {  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  short  NS  PS  ZS  boolean  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  k  t  u  v  	projects/Math94/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	432	433	1	replace	safeThan  <  ArithmeticException.DEFAULT_NUMBER_ERROR  ||  t  ==  0)  {  throw  new  ArithmeticException( "overflow:  gcd  is  2  >>  31 ");  }	  safeThan    <    ArithmeticException.DEFAULT_NUMBER_ERROR    ||    t    >    0)    {    throw    new    ArithmeticException(   "overflow:    gcd    is    2    >>    31   ");    }    	non-compiled	[CE]  <identifier>  expected	98	None	replace
380	[BUG]  [BUGGY]  safeThan  <  ArithmeticException.DEFAULT_NUMBER_ERROR)  {  throw  new  ArithmeticException( "overflow:  gcd  is  2  {  31, ");  }  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  v  /=  2;      [BUGGY]  safeThan  <  ArithmeticException.DEFAULT_NUMBER_ERROR)  {  throw  new  ArithmeticException( "overflow:  gcd  is  2  {  31, ");  }  [BUGGY]      k++;  //  cast  out  twos.  }  }  if  (k  ==  31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }    int  t  =  ((u  &  1)  ==  1)  ?  v  :  -(u  /  2)/*  B3  */;    do  {  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  short  NS  PS  ZS  boolean  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  k  t  u  v  	projects/Math94/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	432	433	1	replace	safeThan  <  ArithmeticException.DEFAULT_NUMBER_ERROR)  {  throw  new  ArithmeticException( "overflow:  gcd  is  2  {  31, ");  }	  safeThan    <    ArithmeticException.DEFAULT_NUMBER_ERROR)    {    throw    new    ArithmeticException(   "overflow:    gcd    is    2    ==    31   ");    }    	non-compiled	[CE]  <identifier>  expected	87	None	replace
381	[BUG]  [BUGGY]  while(v  >  0)  {  for(int  k  =  0;  k  <  2;  k++)  {  throw  new  ArithmeticException( "Overflow:  gcd  is  2  >>  31 ");  }  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  v  /=  2;      [BUGGY]  while(v  >  0)  {  for(int  k  =  0;  k  <  2;  k++)  {  throw  new  ArithmeticException( "Overflow:  gcd  is  2  >>  31 ");  }  [BUGGY]      k++;  //  cast  out  twos.  }  }  if  (k  ==  31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }    int  t  =  ((u  &  1)  ==  1)  ?  v  :  -(u  /  2)/*  B3  */;    do  {  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  short  NS  PS  ZS  boolean  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  k  t  u  v  	projects/Math94/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	432	433	1	replace	while(v  >  0)  {  for(int  k  =  0;  k  <  2;  k++)  {  throw  new  ArithmeticException( "Overflow:  gcd  is  2  >>  31 ");  }	  while(t    >    0)    {    for(int    k    =    0;    k    <    2;    k++)    {    throw    new    ArithmeticException(   "Overflow:    gcd    is    2    >>    31   ");    }    	non-compiled	[CE]  <identifier>  expected	2	None	replace
382	[BUG]  [BUGGY]  try  {  for(int  k  =  0;  k  <  4;  k++)  {  throw  new  ArithmeticException( "gcd  is  2  >>  31 ");  }  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  v  /=  2;      [BUGGY]  try  {  for(int  k  =  0;  k  <  4;  k++)  {  throw  new  ArithmeticException( "gcd  is  2  >>  31 ");  }  [BUGGY]      k++;  //  cast  out  twos.  }  }  if  (k  ==  31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }    int  t  =  ((u  &  1)  ==  1)  ?  v  :  -(u  /  2)/*  B3  */;    do  {  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  short  NS  PS  ZS  boolean  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  k  t  u  v  	projects/Math94/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	432	433	1	replace	try  {  for(int  k  =  0;  k  <  4;  k++)  {  throw  new  ArithmeticException( "gcd  is  2  >>  31 ");  }	  try    {    for(int    k    =    0;    k    <    2;    k++)    {    throw    new    ArithmeticException(   "gcd    is    2    >>    31   ");    }    	non-compiled	[CE]  <identifier>  expected	129	None	replace
383	[BUG]  [BUGGY]  if(k  ==  31)  {  catch(NumberFormatException  nfe)  {  throw  new  ArithmeticException( "Overflow:  gcd  is  2  >>  31 ");  }  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  v  /=  2;      [BUGGY]  if(k  ==  31)  {  catch(NumberFormatException  nfe)  {  throw  new  ArithmeticException( "Overflow:  gcd  is  2  >>  31 ");  }  [BUGGY]      k++;  //  cast  out  twos.  }  }  if  (k  ==  31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }    int  t  =  ((u  &  1)  ==  1)  ?  v  :  -(u  /  2)/*  B3  */;    do  {  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  short  NS  PS  ZS  boolean  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  k  t  u  v  	projects/Math94/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	432	433	1	replace	if(k  ==  31)  {  catch(NumberFormatException  nfe)  {  throw  new  ArithmeticException( "Overflow:  gcd  is  2  >>  31 ");  }	  try    {    [Delete]    catch(NumberFormatException    nfe)    {    throw    new    ArithmeticException(   "Overflow:    gcd    is    2    >>    31   ");    }    	non-compiled	[CE]  <identifier>  expected	119	None	replace
384	[BUG]  [BUGGY]  if(k  ==  31)  {  catch(NumberFormatException  nfe)  {  throw  new  ArithmeticException( "Overflow:  gcd  is  2  >=  31 ");  }  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  v  /=  2;      [BUGGY]  if(k  ==  31)  {  catch(NumberFormatException  nfe)  {  throw  new  ArithmeticException( "Overflow:  gcd  is  2  >=  31 ");  }  [BUGGY]      k++;  //  cast  out  twos.  }  }  if  (k  ==  31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }    int  t  =  ((u  &  1)  ==  1)  ?  v  :  -(u  /  2)/*  B3  */;    do  {  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  short  NS  PS  ZS  boolean  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  k  t  u  v  	projects/Math94/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	432	433	1	replace	if(k  ==  31)  {  catch(NumberFormatException  nfe)  {  throw  new  ArithmeticException( "Overflow:  gcd  is  2  >=  31 ");  }	  try    {    [Delete]    catch(NumberFormatException    nfe)    {    throw    new    ArithmeticException(   "Overflow:    gcd    is    2    >>    31   ");    }    	non-compiled	[CE]  <identifier>  expected	119	None	replace
385	[BUG]  [BUGGY]  if(v  <  31)  {  k++;  }  else  {  throw  new  ArithmeticException( "Overflow:  gcd  is  2  >=  31 ");  }  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  v  /=  2;      [BUGGY]  if(v  <  31)  {  k++;  }  else  {  throw  new  ArithmeticException( "Overflow:  gcd  is  2  >=  31 ");  }  [BUGGY]      }  if  (k  ==  31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }    int  t  =  ((u  &  1)  ==  1)  ?  v  :  -(u  /  2)/*  B3  */;    do  {  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  short  NS  PS  ZS  boolean  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  k  t  u  v  	projects/Math94/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	432	433	1	replace	if(v  <  31)  {  k++;  }  else  {  throw  new  ArithmeticException( "Overflow:  gcd  is  2  >=  31 ");  }	  if(v    >    0)    {    k++;    }    else    {    throw    new    ArithmeticException(   "Overflow:    gcd    is    2    >=    31   ");    }    	non-compiled	[CE]  <identifier>  expected	105	None	replace
386	[BUG]  [BUGGY]  char  k  =  ((  u  &  1)  ==  0  &&  v  &  1)  ==  0  &&  k  <  32)  {  u  /=  2;  v  /=  2;  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  v  /=  2;      [BUGGY]  char  k  =  ((  u  &  1)  ==  0  &&  v  &  1)  ==  0  &&  k  <  32)  {  u  /=  2;  v  /=  2;  [BUGGY]      k++;  //  cast  out  twos.  }  }  if  (k  ==  31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }    int  t  =  ((u  &  1)  ==  1)  ?  v  :  -(u  /  2)/*  B3  */;    do  {  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  short  NS  PS  ZS  boolean  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  k  t  u  v  	projects/Math94/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	432	433	1	replace	char  k  =  ((  u  &  1)  ==  0  &&  v  &  1)  ==  0  &&  k  <  32)  {  u  /=  2;  v  /=  2;	  char    k    =    ((    u    &    1)    ==    0    &&    v    &    1)    ==    0    &&    k    <    31)    {    u    /=    2;    v    /=    2;    	non-compiled	[CE]  <identifier>  expected	123	None	replace
387	[BUG]  [BUGGY]  if(v  ==  0)  {  k++;  }  else  {  throw  new  ArithmeticException( "Overflow:  gcd  is  2  >=  31 ");  }  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  v  /=  2;      [BUGGY]  if(v  ==  0)  {  k++;  }  else  {  throw  new  ArithmeticException( "Overflow:  gcd  is  2  >=  31 ");  }  [BUGGY]      }  if  (k  ==  31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }    int  t  =  ((u  &  1)  ==  1)  ?  v  :  -(u  /  2)/*  B3  */;    do  {  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  short  NS  PS  ZS  boolean  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  k  t  u  v  	projects/Math94/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	432	433	1	replace	if(v  ==  0)  {  k++;  }  else  {  throw  new  ArithmeticException( "Overflow:  gcd  is  2  >=  31 ");  }	  if(v    <    =    0)    {    k++;    }    else    {    throw    new    ArithmeticException(   "Overflow:    gcd    is    2    >=    31   ");    }    	non-compiled	[CE]  <identifier>  expected	104	None	replace
388	[BUG]  [BUGGY]  safeThan  <  ArithmeticException.DEFAULT_THRESHOLD)  {  throw  new  ArithmeticException( " ");  }  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  v  /=  2;      [BUGGY]  safeThan  <  ArithmeticException.DEFAULT_THRESHOLD)  {  throw  new  ArithmeticException( " ");  }  [BUGGY]      }  if  (k  ==  31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }    int  t  =  ((u  &  1)  ==  1)  ?  v  :  -(u  /  2)/*  B3  */;    do  {  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  short  NS  PS  ZS  boolean  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  k  t  u  v  	projects/Math94/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	432	433	1	replace	safeThan  <  ArithmeticException.DEFAULT_THRESHOLD)  {  throw  new  ArithmeticException( " ");  }	  if(t    >    0)    {    throw    new    ArithmeticException(   "   ");    }    	non-compiled	[CE]  <identifier>  expected	112	None	replace
389	[BUG]  [BUGGY]  safeThan  <  ArithmeticException.DEFAULT_NUMBER_ERROR)  {  throw  new  ArithmeticException( " ");  }  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]      }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  v  /=  2;      [BUGGY]  safeThan  <  ArithmeticException.DEFAULT_NUMBER_ERROR)  {  throw  new  ArithmeticException( " ");  }  [BUGGY]      }  if  (k  ==  31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }    int  t  =  ((u  &  1)  ==  1)  ?  v  :  -(u  /  2)/*  B3  */;    do  {  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  short  NS  PS  ZS  boolean  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  k  t  u  v  	projects/Math94/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	432	433	1	replace	safeThan  <  ArithmeticException.DEFAULT_NUMBER_ERROR)  {  throw  new  ArithmeticException( " ");  }	  if(t    >    0)    {    throw    new    ArithmeticException(   "   ");    }    	non-compiled	[CE]  <identifier>  expected	112	None	replace
390	[BUG]  [BUGGY]  safeThan  <  ArithmeticExceptionHandler>  t  =  new  ArithmeticException( " ");  [CE]  <identifier>  expected  [FE]                          AssertionFailedError      [CONTEXT]      }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  v  /=  2;      [BUGGY]  safeThan  <  ArithmeticExceptionHandler>  t  =  new  ArithmeticException( " ");  [BUGGY]      }  if  (k  ==  31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }    int  t  =  ((u  &  1)  ==  1)  ?  v  :  -(u  /  2)/*  B3  */;    do  {  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  short  NS  PS  ZS  boolean  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  k  t  u  v  	projects/Math94/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	432	433	1	replace	safeThan  <  ArithmeticExceptionHandler>  t  =  new  ArithmeticException( " ");	  if(t    >    0)    {    throw    new    ArithmeticException(   "   ");    }    	non-compiled	[CE]  <identifier>  expected	112	None	replace
391	[BUG]  [BUGGY]  if(v  <  31)  {  if(v  >  0)  {  k++;  }  else  {  throw  new  ArithmeticException( "Overflow:  gcd  is  2  >=  31 ");  }  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  v  /=  2;      [BUGGY]  if(v  <  31)  {  if(v  >  0)  {  k++;  }  else  {  throw  new  ArithmeticException( "Overflow:  gcd  is  2  >=  31 ");  }  [BUGGY]      }  if  (k  ==  31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }    int  t  =  ((u  &  1)  ==  1)  ?  v  :  -(u  /  2)/*  B3  */;    do  {  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  short  NS  PS  ZS  boolean  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  k  t  u  v  	projects/Math94/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	432	433	1	replace	if(v  <  31)  {  if(v  >  0)  {  k++;  }  else  {  throw  new  ArithmeticException( "Overflow:  gcd  is  2  >=  31 ");  }	  if(k    ==    31)    {    if(v    >    0)    {    k++;    }    else    {    throw    new    ArithmeticException(   "Overflow:    gcd    is    2    >=    31   ");    }    	non-compiled	[CE]  <identifier>  expected	36	None	replace
392	[BUG]  [BUGGY]  if(v  <  31)  {  if(v  >  0)  {  k++;  }  else  {  throw  new  ArithmeticException( "Overflow:  gcd  is  2  >>  31 ");  }  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  v  /=  2;      [BUGGY]  if(v  <  31)  {  if(v  >  0)  {  k++;  }  else  {  throw  new  ArithmeticException( "Overflow:  gcd  is  2  >>  31 ");  }  [BUGGY]      }  if  (k  ==  31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }    int  t  =  ((u  &  1)  ==  1)  ?  v  :  -(u  /  2)/*  B3  */;    do  {  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  short  NS  PS  ZS  boolean  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  k  t  u  v  	projects/Math94/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	432	433	1	replace	if(v  <  31)  {  if(v  >  0)  {  k++;  }  else  {  throw  new  ArithmeticException( "Overflow:  gcd  is  2  >>  31 ");  }	  if(k    ==    31)    {    if(v    >    0)    {    k++;    }    else    {    throw    new    ArithmeticException(   "Overflow:    gcd    is    2    >=    31   ");    }    	non-compiled	[CE]  <identifier>  expected	36	None	replace
393	[BUG]  [BUGGY]  if(v  ==  31)  {  for(int  k  =  0;  k  <  2;  k++)  {  throw  new  ArithmeticException( "overflow:  Gcd  is  2  >>  31 ");  }  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  v  /=  2;      [BUGGY]  if(v  ==  31)  {  for(int  k  =  0;  k  <  2;  k++)  {  throw  new  ArithmeticException( "overflow:  Gcd  is  2  >>  31 ");  }  [BUGGY]      k++;  //  cast  out  twos.  }  }  if  (k  ==  31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }    int  t  =  ((u  &  1)  ==  1)  ?  v  :  -(u  /  2)/*  B3  */;    do  {  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  short  NS  PS  ZS  boolean  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  k  t  u  v  	projects/Math94/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	432	433	1	replace	if(v  ==  31)  {  for(int  k  =  0;  k  <  2;  k++)  {  throw  new  ArithmeticException( "overflow:  Gcd  is  2  >>  31 ");  }	  if(v    >    31)    {    for(int    k    =    0;    k    <    2;    k++)    {    throw    new    ArithmeticException(   "overflow:    Gcd    is    2    >>    31   ");    }    	non-compiled	[CE]  <identifier>  expected	51	None	replace
394	[BUG]  [BUGGY]  if(v  <  31)  {  for(int  k  =  0;  k  <  2;  k++)  {  throw  new  ArithmeticException( "overflow:  Gcd  is  2  >>  31 ");  }  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]      }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  v  /=  2;      [BUGGY]  if(v  <  31)  {  for(int  k  =  0;  k  <  2;  k++)  {  throw  new  ArithmeticException( "overflow:  Gcd  is  2  >>  31 ");  }  [BUGGY]      k++;  //  cast  out  twos.  }  }  if  (k  ==  31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }    int  t  =  ((u  &  1)  ==  1)  ?  v  :  -(u  /  2)/*  B3  */;    do  {  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  short  NS  PS  ZS  boolean  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  k  t  u  v  	projects/Math94/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	432	433	1	replace	if(v  <  31)  {  for(int  k  =  0;  k  <  2;  k++)  {  throw  new  ArithmeticException( "overflow:  Gcd  is  2  >>  31 ");  }	  if(v    >    31)    {    for(int    k    =    0;    k    <    2;    k++)    {    throw    new    ArithmeticException(   "overflow:    Gcd    is    2    >>    31   ");    }    	non-compiled	[CE]  <identifier>  expected	51	None	replace
395	[BUG]  [BUGGY]  if(v  >  0)  {  for(int  k  =  0;  k  <  2;  k++)  {  throw  new  ArithmeticException( "overflow:  Gcd  is  2  >=  31 ");  }  [CE]  <identifier>  expected  [FE]                          AssertionFailedError      [CONTEXT]      }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  v  /=  2;      [BUGGY]  if(v  >  0)  {  for(int  k  =  0;  k  <  2;  k++)  {  throw  new  ArithmeticException( "overflow:  Gcd  is  2  >=  31 ");  }  [BUGGY]      k++;  //  cast  out  twos.  }  }  if  (k  ==  31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }    int  t  =  ((u  &  1)  ==  1)  ?  v  :  -(u  /  2)/*  B3  */;    do  {  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  short  NS  PS  ZS  boolean  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  k  t  u  v  	projects/Math94/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	432	433	1	replace	if(v  >  0)  {  for(int  k  =  0;  k  <  2;  k++)  {  throw  new  ArithmeticException( "overflow:  Gcd  is  2  >=  31 ");  }	  if(v    >    31)    {    for(int    k    =    0;    k    <    2;    k++)    {    throw    new    ArithmeticException(   "overflow:    Gcd    is    2    >>    31   ");    }    	non-compiled	[CE]  <identifier>  expected	51	None	replace
396	[BUG]  [BUGGY]  if(k  ==  31)  {  catch(IllegalArgumentException  e)  {  throw  new  ArithmeticException( "Overflow:  gcd  is  2  >>  31 ");  }  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  v  /=  2;      [BUGGY]  if(k  ==  31)  {  catch(IllegalArgumentException  e)  {  throw  new  ArithmeticException( "Overflow:  gcd  is  2  >>  31 ");  }  [BUGGY]      k++;  //  cast  out  twos.  }  }  if  (k  ==  31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }    int  t  =  ((u  &  1)  ==  1)  ?  v  :  -(u  /  2)/*  B3  */;    do  {  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  short  NS  PS  ZS  boolean  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  k  t  u  v  	projects/Math94/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	432	433	1	replace	if(k  ==  31)  {  catch(IllegalArgumentException  e)  {  throw  new  ArithmeticException( "Overflow:  gcd  is  2  >>  31 ");  }	  try    {    [Delete]    catch(IllegalArgumentException    e)    {    throw    new    ArithmeticException(   "Overflow:    gcd    is    2    >>    31   ");    }    	non-compiled	[CE]  <identifier>  expected	118	None	replace
397	[BUG]  [BUGGY]  if(k  ==  31)  {  catch(IllegalArgumentException  e)  {  throw  new  ArithmeticException( "Overflow:  gcd  is  2  >=  31 ");  }  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  v  /=  2;      [BUGGY]  if(k  ==  31)  {  catch(IllegalArgumentException  e)  {  throw  new  ArithmeticException( "Overflow:  gcd  is  2  >=  31 ");  }  [BUGGY]      k++;  //  cast  out  twos.  }  }  if  (k  ==  31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }    int  t  =  ((u  &  1)  ==  1)  ?  v  :  -(u  /  2)/*  B3  */;    do  {  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  short  NS  PS  ZS  boolean  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  k  t  u  v  	projects/Math94/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	432	433	1	replace	if(k  ==  31)  {  catch(IllegalArgumentException  e)  {  throw  new  ArithmeticException( "Overflow:  gcd  is  2  >=  31 ");  }	  try    {    [Delete]    catch(IllegalArgumentException    e)    {    throw    new    ArithmeticException(   "Overflow:    gcd    is    2    >>    31   ");    }    	non-compiled	[CE]  <identifier>  expected	118	None	replace
398	[BUG]  [BUGGY]  if(v  ==  0)  {  for(int  k  =  0;  k  <  2;  k++)  {  throw  new  ArithmeticException( "overflow:  Gcd  is  2  >>  31 ");  }  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  v  /=  2;      [BUGGY]  if(v  ==  0)  {  for(int  k  =  0;  k  <  2;  k++)  {  throw  new  ArithmeticException( "overflow:  Gcd  is  2  >>  31 ");  }  [BUGGY]      k++;  //  cast  out  twos.  }  }  if  (k  ==  31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }    int  t  =  ((u  &  1)  ==  1)  ?  v  :  -(u  /  2)/*  B3  */;    do  {  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  short  NS  PS  ZS  boolean  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  k  t  u  v  	projects/Math94/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	432	433	1	replace	if(v  ==  0)  {  for(int  k  =  0;  k  <  2;  k++)  {  throw  new  ArithmeticException( "overflow:  Gcd  is  2  >>  31 ");  }	  if(v    >    0)    {    for(int    k    =    0;    k    <    2;    k++)    {    throw    new    ArithmeticException(   "overflow:    Gcd    is    2    >>    31   ");    }    	non-compiled	[CE]  <identifier>  expected	50	None	replace
399	[BUG]  [BUGGY]  if(v  >  0)  {  for(int  k  =  0;  k  <  31;  k++)  {  throw  new  ArithmeticException( "overflow:  Gcd  is  2  >>  31 ");  }  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  v  /=  2;      [BUGGY]  if(v  >  0)  {  for(int  k  =  0;  k  <  31;  k++)  {  throw  new  ArithmeticException( "overflow:  Gcd  is  2  >>  31 ");  }  [BUGGY]      k++;  //  cast  out  twos.  }  }  if  (k  ==  31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }    int  t  =  ((u  &  1)  ==  1)  ?  v  :  -(u  /  2)/*  B3  */;    do  {  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  short  NS  PS  ZS  boolean  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  k  t  u  v  	projects/Math94/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	432	433	1	replace	if(v  >  0)  {  for(int  k  =  0;  k  <  31;  k++)  {  throw  new  ArithmeticException( "overflow:  Gcd  is  2  >>  31 ");  }	  if(v    >    0)    {    for(int    k    =    0;    k    <    2;    k++)    {    throw    new    ArithmeticException(   "overflow:    Gcd    is    2    >>    31   ");    }    	non-compiled	[CE]  <identifier>  expected	50	None	replace
400	[BUG]  [BUGGY]  if(v  >  0)  {  for(int  k  =  0;  k  <  3;  k++)  {  throw  new  ArithmeticException( "overflow:  Gcd  is  2  >>  31 ");  }  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]      }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  v  /=  2;      [BUGGY]  if(v  >  0)  {  for(int  k  =  0;  k  <  3;  k++)  {  throw  new  ArithmeticException( "overflow:  Gcd  is  2  >>  31 ");  }  [BUGGY]      k++;  //  cast  out  twos.  }  }  if  (k  ==  31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }    int  t  =  ((u  &  1)  ==  1)  ?  v  :  -(u  /  2)/*  B3  */;    do  {  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  short  NS  PS  ZS  boolean  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  k  t  u  v  	projects/Math94/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	432	433	1	replace	if(v  >  0)  {  for(int  k  =  0;  k  <  3;  k++)  {  throw  new  ArithmeticException( "overflow:  Gcd  is  2  >>  31 ");  }	  if(v    >    0)    {    for(int    k    =    0;    k    <    2;    k++)    {    throw    new    ArithmeticException(   "overflow:    Gcd    is    2    >>    31   ");    }    	non-compiled	[CE]  <identifier>  expected	50	None	replace
401	[BUG]  [BUGGY]  if(k  >=  0)  {  k++;  }  else  {  throw  new  ArithmeticException( "overflow:  gcd  is  2  >>  31 ");  }  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  v  /=  2;      [BUGGY]  if(k  >=  0)  {  k++;  }  else  {  throw  new  ArithmeticException( "overflow:  gcd  is  2  >>  31 ");  }  [BUGGY]      }  if  (k  ==  31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }    int  t  =  ((u  &  1)  ==  1)  ?  v  :  -(u  /  2)/*  B3  */;    do  {  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  short  NS  PS  ZS  boolean  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  k  t  u  v  	projects/Math94/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	432	433	1	replace	if(k  >=  0)  {  k++;  }  else  {  throw  new  ArithmeticException( "overflow:  gcd  is  2  >>  31 ");  }	  if(v    ==    0)    {    k++;    }    else    {    throw    new    ArithmeticException(   "overflow:    gcd    is    2    >>    31   ");    }    	non-compiled	[CE]  <identifier>  expected	75	None	replace
402	[BUG]  [BUGGY]  if(k  <  31)  {  catch(IllegalArgumentException  e)  {  throw  new  ArithmeticException( "Overflow:  gcd  is  2  ==  31 ");  }  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  v  /=  2;      [BUGGY]  if(k  <  31)  {  catch(IllegalArgumentException  e)  {  throw  new  ArithmeticException( "Overflow:  gcd  is  2  ==  31 ");  }  [BUGGY]      k++;  //  cast  out  twos.  }  }  if  (k  ==  31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }    int  t  =  ((u  &  1)  ==  1)  ?  v  :  -(u  /  2)/*  B3  */;    do  {  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  short  NS  PS  ZS  boolean  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  k  t  u  v  	projects/Math94/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	432	433	1	replace	if(k  <  31)  {  catch(IllegalArgumentException  e)  {  throw  new  ArithmeticException( "Overflow:  gcd  is  2  ==  31 ");  }	  try    {    [Delete]    catch(IllegalArgumentException    e)    {    throw    new    ArithmeticException(   "Overflow:    gcd    is    2    ==    31   ");    }    	non-compiled	[CE]  <identifier>  expected	133	None	replace
403	[BUG]  [BUGGY]  if(k  <  31)  {  catch(IllegalArgumentException  e)  {  throw  new  ArithmeticException( "overflow:  gcd  is  2  ==  31 ");  }  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  v  /=  2;      [BUGGY]  if(k  <  31)  {  catch(IllegalArgumentException  e)  {  throw  new  ArithmeticException( "overflow:  gcd  is  2  ==  31 ");  }  [BUGGY]      k++;  //  cast  out  twos.  }  }  if  (k  ==  31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }    int  t  =  ((u  &  1)  ==  1)  ?  v  :  -(u  /  2)/*  B3  */;    do  {  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  short  NS  PS  ZS  boolean  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  k  t  u  v  	projects/Math94/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	432	433	1	replace	if(k  <  31)  {  catch(IllegalArgumentException  e)  {  throw  new  ArithmeticException( "overflow:  gcd  is  2  ==  31 ");  }	  try    {    [Delete]    catch(IllegalArgumentException    e)    {    throw    new    ArithmeticException(   "Overflow:    gcd    is    2    ==    31   ");    }    	non-compiled	[CE]  <identifier>  expected	133	None	replace
404	[BUG]  [BUGGY]  try  {  for(int  k  =  0;  k  <  2;  k++)  {  v  =  -k;  }  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]      }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  v  /=  2;      [BUGGY]  try  {  for(int  k  =  0;  k  <  2;  k++)  {  v  =  -k;  }  [BUGGY]      }  if  (k  ==  31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }    int  t  =  ((u  &  1)  ==  1)  ?  v  :  -(u  /  2)/*  B3  */;    do  {  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  short  NS  PS  ZS  boolean  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  k  t  u  v  	projects/Math94/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	432	433	1	replace	try  {  for(int  k  =  0;  k  <  2;  k++)  {  v  =  -k;  }	  if(t    >    0)    {    for(int    k    =    0;    k    <    2;    k++)    {    v    =    -k;    }    	non-compiled	[CE]  <identifier>  expected	113	None	replace
405	[BUG]  [BUGGY]  while((  u  &  1)  ==  0  &&  v  &  1)  ==  0  &&  k  <  31)  {  for(int  k  =  0;  k  <  2;  k++)  {  v  =  -k;  }  [CE]  <identifier>  expected  [FE]                          AssertionFailedError      [CONTEXT]      }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  v  /=  2;      [BUGGY]  while((  u  &  1)  ==  0  &&  v  &  1)  ==  0  &&  k  <  31)  {  for(int  k  =  0;  k  <  2;  k++)  {  v  =  -k;  }  [BUGGY]      }  if  (k  ==  31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }    int  t  =  ((u  &  1)  ==  1)  ?  v  :  -(u  /  2)/*  B3  */;    do  {  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  short  NS  PS  ZS  boolean  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  k  t  u  v  	projects/Math94/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	432	433	1	replace	while((  u  &  1)  ==  0  &&  v  &  1)  ==  0  &&  k  <  31)  {  for(int  k  =  0;  k  <  2;  k++)  {  v  =  -k;  }	  if(t    >    0)    {    for(int    k    =    0;    k    <    2;    k++)    {    v    =    -k;    }    	non-compiled	[CE]  <identifier>  expected	113	None	replace
406	[BUG]  [BUGGY]  char  k  =  ((  u  &  1)  ==  0  &&  v  &  1)  ==  0  &&  k  <  31)  {  u  /=  3;  v  /=  2;  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  v  /=  2;      [BUGGY]  char  k  =  ((  u  &  1)  ==  0  &&  v  &  1)  ==  0  &&  k  <  31)  {  u  /=  3;  v  /=  2;  [BUGGY]      k++;  //  cast  out  twos.  }  }  if  (k  ==  31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }    int  t  =  ((u  &  1)  ==  1)  ?  v  :  -(u  /  2)/*  B3  */;    do  {  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  short  NS  PS  ZS  boolean  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  k  t  u  v  	projects/Math94/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	432	433	1	replace	char  k  =  ((  u  &  1)  ==  0  &&  v  &  1)  ==  0  &&  k  <  31)  {  u  /=  3;  v  /=  2;	  int    k    =    ((    u    &    1)    ==    0    &&    v    &    1)    ==    0    &&    k    <    31)    {    u    /=    3;    v    /=    2;    	non-compiled	[CE]  <identifier>  expected	38	None	replace
407	[BUG]  [BUGGY]  int  k  =  ((  u  &  1)  ==  0  &&  v  &  1)  ==  0)  {  u  +=  2;  v  /=  2;  }  [CE]  <identifier>  expected  [FE]            AssertionFailedError      [CONTEXT]      }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  v  /=  2;      [BUGGY]  int  k  =  ((  u  &  1)  ==  0  &&  v  &  1)  ==  0)  {  u  +=  2;  v  /=  2;  }  [BUGGY]      k++;  //  cast  out  twos.  }  }  if  (k  ==  31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }    int  t  =  ((u  &  1)  ==  1)  ?  v  :  -(u  /  2)/*  B3  */;    do  {  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  short  NS  PS  ZS  boolean  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  k  t  u  v  	projects/Math94/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	432	433	1	replace	int  k  =  ((  u  &  1)  ==  0  &&  v  &  1)  ==  0)  {  u  +=  2;  v  /=  2;  }	  int    k    =    ((    u    &    1)    ==    0    &&    v    &    1)    ==    0)    {    u    /=    2;    v    /=    2;    }    	non-compiled	[CE]  <identifier>  expected	39	None	replace
408	[BUG]  [BUGGY]  int  k  =  ((  u  &  1)  ==  0  &&  v  &  1)  ==  0)  {  u  /=  31;  v  /=  2;  }  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  v  /=  2;      [BUGGY]  int  k  =  ((  u  &  1)  ==  0  &&  v  &  1)  ==  0)  {  u  /=  31;  v  /=  2;  }  [BUGGY]      k++;  //  cast  out  twos.  }  }  if  (k  ==  31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }    int  t  =  ((u  &  1)  ==  1)  ?  v  :  -(u  /  2)/*  B3  */;    do  {  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  short  NS  PS  ZS  boolean  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  k  t  u  v  	projects/Math94/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	432	433	1	replace	int  k  =  ((  u  &  1)  ==  0  &&  v  &  1)  ==  0)  {  u  /=  31;  v  /=  2;  }	  int    k    =    ((    u    &    1)    ==    0    &&    v    &    1)    ==    0)    {    u    /=    2;    v    /=    2;    }    	non-compiled	[CE]  <identifier>  expected	39	None	replace
409	[BUG]  [BUGGY]  aughtExceptionHandler(new  ArithmeticException( "overflow:  gcd  is  2  <  <  31 "));  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  v  /=  2;      [BUGGY]  aughtExceptionHandler(new  ArithmeticException( "overflow:  gcd  is  2  <  <  31 "));  [BUGGY]      k++;  //  cast  out  twos.  }  }  if  (k  ==  31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }    int  t  =  ((u  &  1)  ==  1)  ?  v  :  -(u  /  2)/*  B3  */;    do  {  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  short  NS  PS  ZS  boolean  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  k  t  u  v  	projects/Math94/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	432	433	1	replace	aughtExceptionHandler(new  ArithmeticException( "overflow:  gcd  is  2  <  <  31 "));	  aughtExceptionHandler(new    ArithmeticException(   "overflow:    gcd    is    2    >>    31   "));    	non-compiled	[CE]  <identifier>  expected	32	None	replace
410	[BUG]  [BUGGY]  while(t  >  1)  {  for(int  k  =  0;  k  <  2;  k++)  {  throw  new  ArithmeticException( "overflow:  Gcd  is  2  >>  31 ");  }  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  v  /=  2;      [BUGGY]  while(t  >  1)  {  for(int  k  =  0;  k  <  2;  k++)  {  throw  new  ArithmeticException( "overflow:  Gcd  is  2  >>  31 ");  }  [BUGGY]      k++;  //  cast  out  twos.  }  }  if  (k  ==  31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }    int  t  =  ((u  &  1)  ==  1)  ?  v  :  -(u  /  2)/*  B3  */;    do  {  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  short  NS  PS  ZS  boolean  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  k  t  u  v  	projects/Math94/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	432	433	1	replace	while(t  >  1)  {  for(int  k  =  0;  k  <  2;  k++)  {  throw  new  ArithmeticException( "overflow:  Gcd  is  2  >>  31 ");  }	  while(t    >    0)    {    for(int    k    =    0;    k    <    2;    k++)    {    throw    new    ArithmeticException(   "overflow:    Gcd    is    2    >>    31   ");    }    	non-compiled	[CE]  <identifier>  expected	49	None	replace
411	[BUG]  [BUGGY]  while(t  >  1)  {  for(int  k  =  0;  k  <  2;  k++)  {  throw  new  ArithmeticException( "Overflow:  gcd  is  2  >>  31 ");  }  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  v  /=  2;      [BUGGY]  while(t  >  1)  {  for(int  k  =  0;  k  <  2;  k++)  {  throw  new  ArithmeticException( "Overflow:  gcd  is  2  >>  31 ");  }  [BUGGY]      k++;  //  cast  out  twos.  }  }  if  (k  ==  31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }    int  t  =  ((u  &  1)  ==  1)  ?  v  :  -(u  /  2)/*  B3  */;    do  {  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  short  NS  PS  ZS  boolean  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  k  t  u  v  	projects/Math94/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	432	433	1	replace	while(t  >  1)  {  for(int  k  =  0;  k  <  2;  k++)  {  throw  new  ArithmeticException( "Overflow:  gcd  is  2  >>  31 ");  }	  while(t    >    0)    {    for(int    k    =    0;    k    <    2;    k++)    {    throw    new    ArithmeticException(   "Overflow:    gcd    is    2    >>    31   ");    }    	non-compiled	[CE]  <identifier>  expected	2	None	replace
412	[BUG]  [BUGGY]  while(v  <  0)  {  for(int  k  =  0;  k  <  2;  k++)  {  throw  new  ArithmeticException( "overflow:  Gcd  is  2  >>  31. ");  }  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  v  /=  2;      [BUGGY]  while(v  <  0)  {  for(int  k  =  0;  k  <  2;  k++)  {  throw  new  ArithmeticException( "overflow:  Gcd  is  2  >>  31. ");  }  [BUGGY]      k++;  //  cast  out  twos.  }  }  if  (k  ==  31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }    int  t  =  ((u  &  1)  ==  1)  ?  v  :  -(u  /  2)/*  B3  */;    do  {  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  short  NS  PS  ZS  boolean  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  k  t  u  v  	projects/Math94/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	432	433	1	replace	while(v  <  0)  {  for(int  k  =  0;  k  <  2;  k++)  {  throw  new  ArithmeticException( "overflow:  Gcd  is  2  >>  31. ");  }	  while(t    <    0)    {    for(int    k    =    0;    k    <    2;    k++)    {    throw    new    ArithmeticException(   "overflow:    Gcd    is    2    >>    31.   ");    }    	non-compiled	[CE]  <identifier>  expected	79	None	replace
413	[BUG]  [BUGGY]  while(t  >  1)  {  for(int  k  =  0;  k  <  2;  k++)  {  throw  new  ArithmeticException( "overflow:  gcd  is  2  >>  31 ");  }  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  v  /=  2;      [BUGGY]  while(t  >  1)  {  for(int  k  =  0;  k  <  2;  k++)  {  throw  new  ArithmeticException( "overflow:  gcd  is  2  >>  31 ");  }  [BUGGY]      k++;  //  cast  out  twos.  }  }  if  (k  ==  31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }    int  t  =  ((u  &  1)  ==  1)  ?  v  :  -(u  /  2)/*  B3  */;    do  {  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  short  NS  PS  ZS  boolean  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  k  t  u  v  	projects/Math94/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	432	433	1	replace	while(t  >  1)  {  for(int  k  =  0;  k  <  2;  k++)  {  throw  new  ArithmeticException( "overflow:  gcd  is  2  >>  31 ");  }	  while(t    >    0)    {    for(int    k    =    0;    k    <    2;    k++)    {    throw    new    ArithmeticException(   "overflow:    gcd    is    2    >>    31   ");    }    	non-compiled	[CE]  <identifier>  expected	3	None	replace
414	[BUG]  [BUGGY]  if(k  <  31)  {  k++;  }  else  {  throw  new  ArithmeticException( "overflow:  gcd  is  2  >>  31 ");  }  [CE]  <identifier>  expected  [FE]            AssertionFailedError      [CONTEXT]      }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  v  /=  2;      [BUGGY]  if(k  <  31)  {  k++;  }  else  {  throw  new  ArithmeticException( "overflow:  gcd  is  2  >>  31 ");  }  [BUGGY]      }  if  (k  ==  31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }    int  t  =  ((u  &  1)  ==  1)  ?  v  :  -(u  /  2)/*  B3  */;    do  {  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  short  NS  PS  ZS  boolean  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  k  t  u  v  	projects/Math94/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	432	433	1	replace	if(k  <  31)  {  k++;  }  else  {  throw  new  ArithmeticException( "overflow:  gcd  is  2  >>  31 ");  }	  if(v    <    31)    {    k++;    }    else    {    throw    new    ArithmeticException(   "   ");    }    	non-compiled	[CE]  <identifier>  expected	114	None	replace
415	[BUG]  [BUGGY]  if(k  >=  31)  {  k++;  }  else  {  throw  new  ArithmeticException( " ");  }  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  v  /=  2;      [BUGGY]  if(k  >=  31)  {  k++;  }  else  {  throw  new  ArithmeticException( " ");  }  [BUGGY]      }  if  (k  ==  31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }    int  t  =  ((u  &  1)  ==  1)  ?  v  :  -(u  /  2)/*  B3  */;    do  {  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  short  NS  PS  ZS  boolean  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  k  t  u  v  	projects/Math94/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	432	433	1	replace	if(k  >=  31)  {  k++;  }  else  {  throw  new  ArithmeticException( " ");  }	  if(v    <    31)    {    k++;    }    else    {    throw    new    ArithmeticException(   "   ");    }    	non-compiled	[CE]  <identifier>  expected	114	None	replace
416	[BUG]  [BUGGY]  [Delete]  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  v  /=  2;      [BUGGY]  [Delete]  [BUGGY]      }  if  (k  ==  31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }    int  t  =  ((u  &  1)  ==  1)  ?  v  :  -(u  /  2)/*  B3  */;    do  {  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  short  NS  PS  ZS  boolean  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  k  t  u  v  	projects/Math94/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	432	433	1	replace	[Delete]	  if(t    ==    0)    {    throw    new    ArithmeticException(   "Overflow:    gcd    is    2    <    31       ");    }    	non-compiled	[CE]  <identifier>  expected	13	None	replace
417	[BUG]  [BUGGY]  try  {  [Delete]  catch  (RuntimeException  rex)  {  throw  new  ArithmeticException( "Overflow:  gcd  is  2  <  31 ");  }  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  v  /=  2;      [BUGGY]  try  {  [Delete]  catch  (RuntimeException  rex)  {  throw  new  ArithmeticException( "Overflow:  gcd  is  2  <  31 ");  }  [BUGGY]      }  if  (k  ==  31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }    int  t  =  ((u  &  1)  ==  1)  ?  v  :  -(u  /  2)/*  B3  */;    do  {  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  short  NS  PS  ZS  boolean  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  k  t  u  v  	projects/Math94/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	432	433	1	replace	try  {  [Delete]  catch  (RuntimeException  rex)  {  throw  new  ArithmeticException( "Overflow:  gcd  is  2  <  31 ");  }	  if(t    ==    0)    {    throw    new    ArithmeticException(   "Overflow:    gcd    is    2    <    31       ");    }    	non-compiled	[CE]  <identifier>  expected	13	None	replace
418	[BUG]  [BUGGY]  while(v  <  0)  {  for(int  k  =  0;  k  <  2;  k++)  {  throw  new  ArithmeticException( "overflow:  gcd  is  2  ==  31 ");  }  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  v  /=  2;      [BUGGY]  while(v  <  0)  {  for(int  k  =  0;  k  <  2;  k++)  {  throw  new  ArithmeticException( "overflow:  gcd  is  2  ==  31 ");  }  [BUGGY]      k++;  //  cast  out  twos.  }  }  if  (k  ==  31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }    int  t  =  ((u  &  1)  ==  1)  ?  v  :  -(u  /  2)/*  B3  */;    do  {  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  short  NS  PS  ZS  boolean  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  k  t  u  v  	projects/Math94/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	432	433	1	replace	while(v  <  0)  {  for(int  k  =  0;  k  <  2;  k++)  {  throw  new  ArithmeticException( "overflow:  gcd  is  2  ==  31 ");  }	  while(t    <    0)    {    for(int    k    =    0;    k    <    2;    k++)    {    throw    new    ArithmeticException(   "overflow:    gcd    is    2    ==    31   ");    }    	non-compiled	[CE]  <identifier>  expected	25	None	replace
419	[BUG]  [BUGGY]  Mutation(t)  {  k++;  }  else  {  throw  new  ArithmeticException( "overflow:  gcd  is  2  ==  31 ");  }  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  v  /=  2;      [BUGGY]  Mutation(t)  {  k++;  }  else  {  throw  new  ArithmeticException( "overflow:  gcd  is  2  ==  31 ");  }  [BUGGY]      }  if  (k  ==  31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }    int  t  =  ((u  &  1)  ==  1)  ?  v  :  -(u  /  2)/*  B3  */;    do  {  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  short  NS  PS  ZS  boolean  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  k  t  u  v  	projects/Math94/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	432	433	1	replace	Mutation(t)  {  k++;  }  else  {  throw  new  ArithmeticException( "overflow:  gcd  is  2  ==  31 ");  }	  mutation(t    >    0)    {    k++;    }    else    {    throw    new    ArithmeticException(   "overflow:    gcd    is    2    ==    31   ");    }    	non-compiled	[CE]  <identifier>  expected	53	None	replace
420	[BUG]  [BUGGY]  Mutation(t,  k)  {  k++;  }  else  {  throw  new  ArithmeticException( "overflow:  gcd  is  2  ==  31 ");  }  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  v  /=  2;      [BUGGY]  Mutation(t,  k)  {  k++;  }  else  {  throw  new  ArithmeticException( "overflow:  gcd  is  2  ==  31 ");  }  [BUGGY]      }  if  (k  ==  31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }    int  t  =  ((u  &  1)  ==  1)  ?  v  :  -(u  /  2)/*  B3  */;    do  {  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  short  NS  PS  ZS  boolean  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  k  t  u  v  	projects/Math94/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	432	433	1	replace	Mutation(t,  k)  {  k++;  }  else  {  throw  new  ArithmeticException( "overflow:  gcd  is  2  ==  31 ");  }	  mutation(t    >    0)    {    k++;    }    else    {    throw    new    ArithmeticException(   "overflow:    gcd    is    2    ==    31   ");    }    	non-compiled	[CE]  <identifier>  expected	53	None	replace
421	[BUG]  [BUGGY]  Mutation(t,  v)  {  k++;  }  else  {  throw  new  ArithmeticException( "overflow:  gcd  is  2  ==  31 ");  }  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  v  /=  2;      [BUGGY]  Mutation(t,  v)  {  k++;  }  else  {  throw  new  ArithmeticException( "overflow:  gcd  is  2  ==  31 ");  }  [BUGGY]      }  if  (k  ==  31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }    int  t  =  ((u  &  1)  ==  1)  ?  v  :  -(u  /  2)/*  B3  */;    do  {  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  short  NS  PS  ZS  boolean  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  k  t  u  v  	projects/Math94/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	432	433	1	replace	Mutation(t,  v)  {  k++;  }  else  {  throw  new  ArithmeticException( "overflow:  gcd  is  2  ==  31 ");  }	  mutation(t    >    0)    {    k++;    }    else    {    throw    new    ArithmeticException(   "overflow:    gcd    is    2    ==    31   ");    }    	non-compiled	[CE]  <identifier>  expected	53	None	replace
422	[BUG]  [BUGGY]  if(new  ArithmeticException( "Overflow:  gcd  is  2  ==  31 "))  {  throw  new  ArithmeticException( "Overflow:  gcd  is  2  ==  31 ");  }  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  v  /=  2;      [BUGGY]  if(new  ArithmeticException( "Overflow:  gcd  is  2  ==  31 "))  {  throw  new  ArithmeticException( "Overflow:  gcd  is  2  ==  31 ");  }  [BUGGY]      k++;  //  cast  out  twos.  }  }  if  (k  ==  31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }    int  t  =  ((u  &  1)  ==  1)  ?  v  :  -(u  /  2)/*  B3  */;    do  {  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  short  NS  PS  ZS  boolean  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  k  t  u  v  	projects/Math94/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	432	433	1	replace	if(new  ArithmeticException( "Overflow:  gcd  is  2  ==  31 "))  {  throw  new  ArithmeticException( "Overflow:  gcd  is  2  ==  31 ");  }	  aught(new    ArithmeticException(   "Overflow:    gcd    is    2    ==    31   "));    	non-compiled	[CE]  <identifier>  expected	135	None	replace
423	[BUG]  [BUGGY]  if(new  ArithmeticException( "Overflow:  gcd  is  2  ==  31 "))  {  throw  new  ArithmeticException( "overflow:  gcd  is  2  ==  31 ");  }  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]      }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  v  /=  2;      [BUGGY]  if(new  ArithmeticException( "Overflow:  gcd  is  2  ==  31 "))  {  throw  new  ArithmeticException( "overflow:  gcd  is  2  ==  31 ");  }  [BUGGY]      k++;  //  cast  out  twos.  }  }  if  (k  ==  31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }    int  t  =  ((u  &  1)  ==  1)  ?  v  :  -(u  /  2)/*  B3  */;    do  {  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  short  NS  PS  ZS  boolean  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  k  t  u  v  	projects/Math94/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	432	433	1	replace	if(new  ArithmeticException( "Overflow:  gcd  is  2  ==  31 "))  {  throw  new  ArithmeticException( "overflow:  gcd  is  2  ==  31 ");  }	  aught(new    ArithmeticException(   "Overflow:    gcd    is    2    ==    31   "));    	non-compiled	[CE]  <identifier>  expected	135	None	replace
424	[BUG]  [BUGGY]  if(new  ArithmeticException( "Overflow:  gcd  is  2  ==  31 "))  throw  new  ArithmeticException( " ");  [CE]  <identifier>  expected  [FE]                          AssertionFailedError      [CONTEXT]      }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  v  /=  2;      [BUGGY]  if(new  ArithmeticException( "Overflow:  gcd  is  2  ==  31 "))  throw  new  ArithmeticException( " ");  [BUGGY]      k++;  //  cast  out  twos.  }  }  if  (k  ==  31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }    int  t  =  ((u  &  1)  ==  1)  ?  v  :  -(u  /  2)/*  B3  */;    do  {  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  short  NS  PS  ZS  boolean  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  k  t  u  v  	projects/Math94/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	432	433	1	replace	if(new  ArithmeticException( "Overflow:  gcd  is  2  ==  31 "))  throw  new  ArithmeticException( " ");	  aught(new    ArithmeticException(   "Overflow:    gcd    is    2    ==    31   "));    	non-compiled	[CE]  <identifier>  expected	135	None	replace
425	[BUG]  [BUGGY]  if(new  ArithmeticException( "Overflow:  gcd  is  2  ==  31 "))  throw  new  ArithmeticException( "Overflow:  gcd  is  2  ==  31 ");  [CE]  <identifier>  expected  [FE]                            AssertionFailedError      [CONTEXT]      }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  v  /=  2;      [BUGGY]  if(new  ArithmeticException( "Overflow:  gcd  is  2  ==  31 "))  throw  new  ArithmeticException( "Overflow:  gcd  is  2  ==  31 ");  [BUGGY]      k++;  //  cast  out  twos.  }  }  if  (k  ==  31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }    int  t  =  ((u  &  1)  ==  1)  ?  v  :  -(u  /  2)/*  B3  */;    do  {  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  short  NS  PS  ZS  boolean  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  k  t  u  v  	projects/Math94/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	432	433	1	replace	if(new  ArithmeticException( "Overflow:  gcd  is  2  ==  31 "))  throw  new  ArithmeticException( "Overflow:  gcd  is  2  ==  31 ");	  aught(new    ArithmeticException(   "Overflow:    gcd    is    2    ==    31   "));    	non-compiled	[CE]  <identifier>  expected	135	None	replace
426	[BUG]  [BUGGY]  safeThan  <  ArithmeticException.DEFAULT_NUMBER_INT)  {  throw  new  ArithmeticException( "overflow:  gcd  is  2  <  <  31 ");  }  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  v  /=  2;      [BUGGY]  safeThan  <  ArithmeticException.DEFAULT_NUMBER_INT)  {  throw  new  ArithmeticException( "overflow:  gcd  is  2  <  <  31 ");  }  [BUGGY]      k++;  //  cast  out  twos.  }  }  if  (k  ==  31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }    int  t  =  ((u  &  1)  ==  1)  ?  v  :  -(u  /  2)/*  B3  */;    do  {  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  short  NS  PS  ZS  boolean  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  k  t  u  v  	projects/Math94/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	432	433	1	replace	safeThan  <  ArithmeticException.DEFAULT_NUMBER_INT)  {  throw  new  ArithmeticException( "overflow:  gcd  is  2  <  <  31 ");  }	  safeThan    <    ArithmeticException.DEFAULT_NUMBER_INT)    {    throw    new    ArithmeticException(   "overflow:    gcd    is    2    >>    31   ");    }    	non-compiled	[CE]  <identifier>  expected	97	None	replace
427	[BUG]  [BUGGY]  if(k  <  31)  {  k++;  }  else  {  throw  new  ArithmeticException( "Overflow:  gcd  is  2  >>  31 ");  }  [CE]  <identifier>  expected  [FE]            AssertionFailedError      [CONTEXT]      }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  v  /=  2;      [BUGGY]  if(k  <  31)  {  k++;  }  else  {  throw  new  ArithmeticException( "Overflow:  gcd  is  2  >>  31 ");  }  [BUGGY]      }  if  (k  ==  31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }    int  t  =  ((u  &  1)  ==  1)  ?  v  :  -(u  /  2)/*  B3  */;    do  {  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  short  NS  PS  ZS  boolean  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  k  t  u  v  	projects/Math94/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	432	433	1	replace	if(k  <  31)  {  k++;  }  else  {  throw  new  ArithmeticException( "Overflow:  gcd  is  2  >>  31 ");  }	  if(v    <    31)    {    k++;    }    else    {    throw    new    ArithmeticException(   "Overflow:    gcd    is    2    >>    31   ");    }    	non-compiled	[CE]  <identifier>  expected	63	None	replace
428	[BUG]  [BUGGY]  char  k  =  ((  u  &  1)  ==  0  &&  v  &  2)  ==  0  &&  k  <  31)  {  u  /=  2;  v  /=  3;  }  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  v  /=  2;      [BUGGY]  char  k  =  ((  u  &  1)  ==  0  &&  v  &  2)  ==  0  &&  k  <  31)  {  u  /=  2;  v  /=  3;  }  [BUGGY]      k++;  //  cast  out  twos.  }  }  if  (k  ==  31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }    int  t  =  ((u  &  1)  ==  1)  ?  v  :  -(u  /  2)/*  B3  */;    do  {  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  short  NS  PS  ZS  boolean  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  k  t  u  v  	projects/Math94/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	432	433	1	replace	char  k  =  ((  u  &  1)  ==  0  &&  v  &  2)  ==  0  &&  k  <  31)  {  u  /=  2;  v  /=  3;  }	  int    k    =    ((    u    &    1)    ==    0    &&    v    &    2)    ==    0    &&    k    <    31)    {    u    /=    2;    v    /=    3;    }    	non-compiled	[CE]  <identifier>  expected	62	None	replace
429	[BUG]  [BUGGY]  try  {  [Delete]  catch(IllegalArgumentException  e)  {  throw  new  ArithmeticException( " ");  }  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  v  /=  2;      [BUGGY]  try  {  [Delete]  catch(IllegalArgumentException  e)  {  throw  new  ArithmeticException( " ");  }  [BUGGY]      }  if  (k  ==  31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }    int  t  =  ((u  &  1)  ==  1)  ?  v  :  -(u  /  2)/*  B3  */;    do  {  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  short  NS  PS  ZS  boolean  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  k  t  u  v  	projects/Math94/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	432	433	1	replace	try  {  [Delete]  catch(IllegalArgumentException  e)  {  throw  new  ArithmeticException( " ");  }	  if(t    >    0)    {    throw    new    ArithmeticException(   "   ");    }    	non-compiled	[CE]  <identifier>  expected	112	None	replace
430	[BUG]  [BUGGY]  try  {  [Delete]  catch(IllegalArgumentException  iae)  {  throw  new  ArithmeticException( " ");  }  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]      }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  v  /=  2;      [BUGGY]  try  {  [Delete]  catch(IllegalArgumentException  iae)  {  throw  new  ArithmeticException( " ");  }  [BUGGY]      }  if  (k  ==  31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }    int  t  =  ((u  &  1)  ==  1)  ?  v  :  -(u  /  2)/*  B3  */;    do  {  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  short  NS  PS  ZS  boolean  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  k  t  u  v  	projects/Math94/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	432	433	1	replace	try  {  [Delete]  catch(IllegalArgumentException  iae)  {  throw  new  ArithmeticException( " ");  }	  if(t    >    0)    {    throw    new    ArithmeticException(   "   ");    }    	non-compiled	[CE]  <identifier>  expected	112	None	replace
431	[BUG]  [BUGGY]  try  {  [Delete]  catch(IllegalArgumentException  t)  {  throw  new  ArithmeticException( " ");  }  [CE]  <identifier>  expected  [FE]                          AssertionFailedError      [CONTEXT]      }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  v  /=  2;      [BUGGY]  try  {  [Delete]  catch(IllegalArgumentException  t)  {  throw  new  ArithmeticException( " ");  }  [BUGGY]      }  if  (k  ==  31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }    int  t  =  ((u  &  1)  ==  1)  ?  v  :  -(u  /  2)/*  B3  */;    do  {  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  short  NS  PS  ZS  boolean  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  k  t  u  v  	projects/Math94/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	432	433	1	replace	try  {  [Delete]  catch(IllegalArgumentException  t)  {  throw  new  ArithmeticException( " ");  }	  if(t    >    0)    {    throw    new    ArithmeticException(   "   ");    }    	non-compiled	[CE]  <identifier>  expected	112	None	replace
432	[BUG]  [BUGGY]  while(t  >  1)  {  for(int  k  =  0;  k  <  2;  k++)  {  throw  new  ArithmeticException( "gcd  is  2  >>  31 ");  }  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  v  /=  2;      [BUGGY]  while(t  >  1)  {  for(int  k  =  0;  k  <  2;  k++)  {  throw  new  ArithmeticException( "gcd  is  2  >>  31 ");  }  [BUGGY]      k++;  //  cast  out  twos.  }  }  if  (k  ==  31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }    int  t  =  ((u  &  1)  ==  1)  ?  v  :  -(u  /  2)/*  B3  */;    do  {  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  short  NS  PS  ZS  boolean  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  k  t  u  v  	projects/Math94/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	432	433	1	replace	while(t  >  1)  {  for(int  k  =  0;  k  <  2;  k++)  {  throw  new  ArithmeticException( "gcd  is  2  >>  31 ");  }	  while(t    >    0)    {    for(int    k    =    0;    k    <    2;    k++)    {    throw    new    ArithmeticException(   "gcd    is    2    >>    31   ");    }    	non-compiled	[CE]  <identifier>  expected	47	None	replace
433	[BUG]  [BUGGY]  if(k  >  31)  {  k++;  }  else  {  throw  new  ArithmeticException( "overflow:  gcd  is  2  >>  31 ");  }  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  v  /=  2;      [BUGGY]  if(k  >  31)  {  k++;  }  else  {  throw  new  ArithmeticException( "overflow:  gcd  is  2  >>  31 ");  }  [BUGGY]      }  if  (k  ==  31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }    int  t  =  ((u  &  1)  ==  1)  ?  v  :  -(u  /  2)/*  B3  */;    do  {  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  short  NS  PS  ZS  boolean  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  k  t  u  v  	projects/Math94/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	432	433	1	replace	if(k  >  31)  {  k++;  }  else  {  throw  new  ArithmeticException( "overflow:  gcd  is  2  >>  31 ");  }	  if(t    >    31)    {    k++;    }    else    {    throw    new    ArithmeticException(   "   ");    }    	non-compiled	[CE]  <identifier>  expected	44	None	replace
434	[BUG]  [BUGGY]  if(k  >  0)  {  k++;  }  else  {  throw  new  ArithmeticException( "overflow:  gcd  is  2  >=  31 ");  }  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  v  /=  2;      [BUGGY]  if(k  >  0)  {  k++;  }  else  {  throw  new  ArithmeticException( "overflow:  gcd  is  2  >=  31 ");  }  [BUGGY]      }  if  (k  ==  31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }    int  t  =  ((u  &  1)  ==  1)  ?  v  :  -(u  /  2)/*  B3  */;    do  {  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  short  NS  PS  ZS  boolean  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  k  t  u  v  	projects/Math94/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	432	433	1	replace	if(k  >  0)  {  k++;  }  else  {  throw  new  ArithmeticException( "overflow:  gcd  is  2  >=  31 ");  }	  if(t    >    0)    {    k++;    }    else    {    throw    new    ArithmeticException(   "overflow:    gcd    is    2    >>    31   ");    }    	non-compiled	[CE]  <identifier>  expected	9	None	replace
435	[BUG]  [BUGGY]  mutation( "overflow:  gcd  is  2  >>  31 ");  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  v  /=  2;      [BUGGY]  mutation( "overflow:  gcd  is  2  >>  31 ");  [BUGGY]      }  if  (k  ==  31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }    int  t  =  ((u  &  1)  ==  1)  ?  v  :  -(u  /  2)/*  B3  */;    do  {  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  short  NS  PS  ZS  boolean  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  k  t  u  v  	projects/Math94/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	432	433	1	replace	mutation( "overflow:  gcd  is  2  >>  31 ");	  if(k    ==    31)    {    throw    new    ArithmeticException(   "overflow:    gcd    is    2    >>    31   ");    }    	non-compiled	[CE]  <identifier>  expected	92	None	replace
436	[BUG]  [BUGGY]  aughtException( "overflow:  gcd  is  2  >>  31 ");  }  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  v  /=  2;      [BUGGY]  aughtException( "overflow:  gcd  is  2  >>  31 ");  }  [BUGGY]      }  if  (k  ==  31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }    int  t  =  ((u  &  1)  ==  1)  ?  v  :  -(u  /  2)/*  B3  */;    do  {  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  short  NS  PS  ZS  boolean  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  k  t  u  v  	projects/Math94/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	432	433	1	replace	aughtException( "overflow:  gcd  is  2  >>  31 ");  }	  if(k    ==    31)    {    throw    new    ArithmeticException(   "overflow:    gcd    is    2    >>    31   ");    }    	non-compiled	[CE]  <identifier>  expected	92	None	replace
437	[BUG]  [BUGGY]  if(k  <  31)  {  k++;  }  else  {  throw  new  ArithmeticException( "overflow:  gcd  is  2  ==  31 ");  }  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  v  /=  2;      [BUGGY]  if(k  <  31)  {  k++;  }  else  {  throw  new  ArithmeticException( "overflow:  gcd  is  2  ==  31 ");  }  [BUGGY]      }  if  (k  ==  31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }    int  t  =  ((u  &  1)  ==  1)  ?  v  :  -(u  /  2)/*  B3  */;    do  {  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  short  NS  PS  ZS  boolean  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  k  t  u  v  	projects/Math94/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	432	433	1	replace	if(k  <  31)  {  k++;  }  else  {  throw  new  ArithmeticException( "overflow:  gcd  is  2  ==  31 ");  }	  if(k    >    0)    {    k++;    }    else    {    throw    new    ArithmeticException(   "overflow:    gcd    is    2    ==    31   ");    }    	non-compiled	[CE]  <identifier>  expected	108	None	replace
438	[BUG]  [BUGGY]  if(k  >  0)  {  k++;  }  else  {  throw  new  ArithmeticException( "overflow:  gcd  is  2  {  31 ");  }  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  v  /=  2;      [BUGGY]  if(k  >  0)  {  k++;  }  else  {  throw  new  ArithmeticException( "overflow:  gcd  is  2  {  31 ");  }  [BUGGY]      }  if  (k  ==  31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }    int  t  =  ((u  &  1)  ==  1)  ?  v  :  -(u  /  2)/*  B3  */;    do  {  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  short  NS  PS  ZS  boolean  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  k  t  u  v  	projects/Math94/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	432	433	1	replace	if(k  >  0)  {  k++;  }  else  {  throw  new  ArithmeticException( "overflow:  gcd  is  2  {  31 ");  }	  if(t    >    0)    {    k++;    }    else    {    throw    new    ArithmeticException(   "overflow:    gcd    is    2    {    31   ");    }    	non-compiled	[CE]  <identifier>  expected	73	None	replace
439	[BUG]  [BUGGY]  if(k  ==  0)  {  k++;  }  else  {  throw  new  ArithmeticException( " ");  }  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  v  /=  2;      [BUGGY]  if(k  ==  0)  {  k++;  }  else  {  throw  new  ArithmeticException( " ");  }  [BUGGY]      }  if  (k  ==  31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }    int  t  =  ((u  &  1)  ==  1)  ?  v  :  -(u  /  2)/*  B3  */;    do  {  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  short  NS  PS  ZS  boolean  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  k  t  u  v  	projects/Math94/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	432	433	1	replace	if(k  ==  0)  {  k++;  }  else  {  throw  new  ArithmeticException( " ");  }	  if(v    >    0)    {    k++;    }    else    {    throw    new    ArithmeticException(   "   ");    }    	non-compiled	[CE]  <identifier>  expected	65	None	replace
440	[BUG]  [BUGGY]  mutation( "Overflow:  gcd  is  2  >>  31 ");  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  v  /=  2;      [BUGGY]  mutation( "Overflow:  gcd  is  2  >>  31 ");  [BUGGY]      }  if  (k  ==  31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }    int  t  =  ((u  &  1)  ==  1)  ?  v  :  -(u  /  2)/*  B3  */;    do  {  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  short  NS  PS  ZS  boolean  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  k  t  u  v  	projects/Math94/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	432	433	1	replace	mutation( "Overflow:  gcd  is  2  >>  31 ");	  if(k    ==    31)    {    throw    new    ArithmeticException(   "Overflow:    gcd    is    2    >>    31   ");    }    	non-compiled	[CE]  <identifier>  expected	91	None	replace
441	[BUG]  [BUGGY]  mutators.add(new  ArithmeticException( "Overflow:  gcd  is  2  >>  31 "));  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  v  /=  2;      [BUGGY]  mutators.add(new  ArithmeticException( "Overflow:  gcd  is  2  >>  31 "));  [BUGGY]      }  if  (k  ==  31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }    int  t  =  ((u  &  1)  ==  1)  ?  v  :  -(u  /  2)/*  B3  */;    do  {  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  short  NS  PS  ZS  boolean  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  k  t  u  v  	projects/Math94/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	432	433	1	replace	mutators.add(new  ArithmeticException( "Overflow:  gcd  is  2  >>  31 "));	  if(k    ==    31)    {    throw    new    ArithmeticException(   "Overflow:    gcd    is    2    >>    31   ");    }    	non-compiled	[CE]  <identifier>  expected	91	None	replace
442	[BUG]  [BUGGY]  if(k  ==  31)  {  k++;  }  else  {  throw  new  ArithmeticException( "overflow:  gcd  is  2  >>  31 ");  }  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  v  /=  2;      [BUGGY]  if(k  ==  31)  {  k++;  }  else  {  throw  new  ArithmeticException( "overflow:  gcd  is  2  >>  31 ");  }  [BUGGY]      }  if  (k  ==  31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }    int  t  =  ((u  &  1)  ==  1)  ?  v  :  -(u  /  2)/*  B3  */;    do  {  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  short  NS  PS  ZS  boolean  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  k  t  u  v  	projects/Math94/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	432	433	1	replace	if(k  ==  31)  {  k++;  }  else  {  throw  new  ArithmeticException( "overflow:  gcd  is  2  >>  31 ");  }	  if(v    <    31)    {    k++;    }    else    {    throw    new    ArithmeticException(   "overflow:    gcd    is    2    >>    31   ");    }    	non-compiled	[CE]  <identifier>  expected	127	None	replace
443	[BUG]  [BUGGY]  if(k  >=  31)  {  k++;  }  else  {  throw  new  ArithmeticException( "overflow:  gcd  is  2  ==  31 ");  }  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  v  /=  2;      [BUGGY]  if(k  >=  31)  {  k++;  }  else  {  throw  new  ArithmeticException( "overflow:  gcd  is  2  ==  31 ");  }  [BUGGY]      }  if  (k  ==  31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }    int  t  =  ((u  &  1)  ==  1)  ?  v  :  -(u  /  2)/*  B3  */;    do  {  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  short  NS  PS  ZS  boolean  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  k  t  u  v  	projects/Math94/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	432	433	1	replace	if(k  >=  31)  {  k++;  }  else  {  throw  new  ArithmeticException( "overflow:  gcd  is  2  ==  31 ");  }	  if(t    >    31)    {    k++;    }    else    {    throw    new    ArithmeticException(   "overflow:    gcd    is    2    ==    31   ");    }    	non-compiled	[CE]  <identifier>  expected	45	None	replace
444	[BUG]  [BUGGY]  if(new  ArithmeticException( "overflow:  gcd  is  2  >>  31 "))  throw  new  ArithmeticException( " ");  [CE]  <identifier>  expected  [FE]            AssertionFailedError      [CONTEXT]      }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  v  /=  2;      [BUGGY]  if(new  ArithmeticException( "overflow:  gcd  is  2  >>  31 "))  throw  new  ArithmeticException( " ");  [BUGGY]      k++;  //  cast  out  twos.  }  }  if  (k  ==  31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }    int  t  =  ((u  &  1)  ==  1)  ?  v  :  -(u  /  2)/*  B3  */;    do  {  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  short  NS  PS  ZS  boolean  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  k  t  u  v  	projects/Math94/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	432	433	1	replace	if(new  ArithmeticException( "overflow:  gcd  is  2  >>  31 "))  throw  new  ArithmeticException( " ");	  aught(new    ArithmeticException(   "overflow:    gcd    is    2    >>    31   "));    	non-compiled	[CE]  <identifier>  expected	136	None	replace
445	[BUG]  [BUGGY]  if(new  ArithmeticException( "overflow:  gcd  is  2  >>  31 "))  {  throw  new  ArithmeticException( " ");  }  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  v  /=  2;      [BUGGY]  if(new  ArithmeticException( "overflow:  gcd  is  2  >>  31 "))  {  throw  new  ArithmeticException( " ");  }  [BUGGY]      k++;  //  cast  out  twos.  }  }  if  (k  ==  31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }    int  t  =  ((u  &  1)  ==  1)  ?  v  :  -(u  /  2)/*  B3  */;    do  {  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  short  NS  PS  ZS  boolean  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  k  t  u  v  	projects/Math94/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	432	433	1	replace	if(new  ArithmeticException( "overflow:  gcd  is  2  >>  31 "))  {  throw  new  ArithmeticException( " ");  }	  aught(new    ArithmeticException(   "overflow:    gcd    is    2    >>    31   "));    	non-compiled	[CE]  <identifier>  expected	136	None	replace
446	[BUG]  [BUGGY]  if(k  >=  31)  {  k++;  }  else  {  throw  new  ArithmeticException( "Overflow:  gcd  is  2  ==  31 ");  }  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  v  /=  2;      [BUGGY]  if(k  >=  31)  {  k++;  }  else  {  throw  new  ArithmeticException( "Overflow:  gcd  is  2  ==  31 ");  }  [BUGGY]      }  if  (k  ==  31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }    int  t  =  ((u  &  1)  ==  1)  ?  v  :  -(u  /  2)/*  B3  */;    do  {  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  short  NS  PS  ZS  boolean  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  k  t  u  v  	projects/Math94/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	432	433	1	replace	if(k  >=  31)  {  k++;  }  else  {  throw  new  ArithmeticException( "Overflow:  gcd  is  2  ==  31 ");  }	  if(v    <    31)    {    k++;    }    else    {    throw    new    ArithmeticException(   "Overflow:    gcd    is    2    ==    31   ");    }    	non-compiled	[CE]  <identifier>  expected	64	None	replace
447	[BUG]  [BUGGY]  if(k  <  31)  {  k++;  }  else  {  throw  new  ArithmeticException( "Overflow:  gcd  is  2  ==  31 ");  }  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  v  /=  2;      [BUGGY]  if(k  <  31)  {  k++;  }  else  {  throw  new  ArithmeticException( "Overflow:  gcd  is  2  ==  31 ");  }  [BUGGY]      }  if  (k  ==  31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }    int  t  =  ((u  &  1)  ==  1)  ?  v  :  -(u  /  2)/*  B3  */;    do  {  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  short  NS  PS  ZS  boolean  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  k  t  u  v  	projects/Math94/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	432	433	1	replace	if(k  <  31)  {  k++;  }  else  {  throw  new  ArithmeticException( "Overflow:  gcd  is  2  ==  31 ");  }	  if(v    <    31)    {    k++;    }    else    {    throw    new    ArithmeticException(   "Overflow:    gcd    is    2    ==    31   ");    }    	non-compiled	[CE]  <identifier>  expected	64	None	replace
448	[BUG]  [BUGGY]  Mutation(t)  {  k++;  }  else  {  throw  new  ArithmeticException( "overflow:  gcd  is  2  >>  31 ");  }  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  v  /=  2;      [BUGGY]  Mutation(t)  {  k++;  }  else  {  throw  new  ArithmeticException( "overflow:  gcd  is  2  >>  31 ");  }  [BUGGY]      }  if  (k  ==  31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }    int  t  =  ((u  &  1)  ==  1)  ?  v  :  -(u  /  2)/*  B3  */;    do  {  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  short  NS  PS  ZS  boolean  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  k  t  u  v  	projects/Math94/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	432	433	1	replace	Mutation(t)  {  k++;  }  else  {  throw  new  ArithmeticException( "overflow:  gcd  is  2  >>  31 ");  }	  mutation(t    >    0)    {    k++;    }    else    {    throw    new    ArithmeticException(   "overflow:    gcd    is    2    >>    31   ");    }    	non-compiled	[CE]  <identifier>  expected	54	None	replace
449	[BUG]  [BUGGY]  if(k  >  0)  {  k++;  }  else  {  throw  new  ArithmeticException( " ");  }  [CE]  <identifier>  expected  [FE]            AssertionFailedError      [CONTEXT]      }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  v  /=  2;      [BUGGY]  if(k  >  0)  {  k++;  }  else  {  throw  new  ArithmeticException( " ");  }  [BUGGY]      }  if  (k  ==  31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }    int  t  =  ((u  &  1)  ==  1)  ?  v  :  -(u  /  2)/*  B3  */;    do  {  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  short  NS  PS  ZS  boolean  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  k  t  u  v  	projects/Math94/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	432	433	1	replace	if(k  >  0)  {  k++;  }  else  {  throw  new  ArithmeticException( " ");  }	  if(t    >    0)    {    k++;    }    else    {    throw    new    ArithmeticException(   "   ");    }    	non-compiled	[CE]  <identifier>  expected	43	None	replace
450	[BUG]  [BUGGY]  Char  k  =  ((  u  &  1)  ==  0  &&  v  &  1)  ==  0  &&  k  <  31)  {  u  /=  2;  v  /=  2;  }  [CE]  <identifier>  expected  [FE]            AssertionFailedError      [CONTEXT]      }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  v  /=  2;      [BUGGY]  Char  k  =  ((  u  &  1)  ==  0  &&  v  &  1)  ==  0  &&  k  <  31)  {  u  /=  2;  v  /=  2;  }  [BUGGY]      k++;  //  cast  out  twos.  }  }  if  (k  ==  31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }    int  t  =  ((u  &  1)  ==  1)  ?  v  :  -(u  /  2)/*  B3  */;    do  {  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  short  NS  PS  ZS  boolean  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  k  t  u  v  	projects/Math94/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	432	433	1	replace	Char  k  =  ((  u  &  1)  ==  0  &&  v  &  1)  ==  0  &&  k  <  31)  {  u  /=  2;  v  /=  2;  }	  char    k    =    ((    u    &    1)    ==    0    &&    v    &    1)    ==    0    &&    k    <    31)    {    u    /=    2;    v    /=    2;    }    	non-compiled	[CE]  <identifier>  expected	125	None	replace
451	[BUG]  [BUGGY]  safeThan  <  ArithmeticException.DEFAULT_NUMBER_ERROR  ||  t  ==  0)  {  throw  new  ArithmeticException( "Overflow:  gcd  is  2  ==  31 ");  }  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  v  /=  2;      [BUGGY]  safeThan  <  ArithmeticException.DEFAULT_NUMBER_ERROR  ||  t  ==  0)  {  throw  new  ArithmeticException( "Overflow:  gcd  is  2  ==  31 ");  }  [BUGGY]      k++;  //  cast  out  twos.  }  }  if  (k  ==  31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }    int  t  =  ((u  &  1)  ==  1)  ?  v  :  -(u  /  2)/*  B3  */;    do  {  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  short  NS  PS  ZS  boolean  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  k  t  u  v  	projects/Math94/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	432	433	1	replace	safeThan  <  ArithmeticException.DEFAULT_NUMBER_ERROR  ||  t  ==  0)  {  throw  new  ArithmeticException( "Overflow:  gcd  is  2  ==  31 ");  }	  safeThan    <    ArithmeticException.DEFAULT_NUMBER_ERROR    ||    t    >    0)    {    throw    new    ArithmeticException(   "Overflow:    gcd    is    2    ==    31   ");    }    	non-compiled	[CE]  <identifier>  expected	101	None	replace
452	[BUG]  [BUGGY]  if(k  <  31)  {  aughtException( "overflow:  gcd  is  2  ==  31 ");  }  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  v  /=  2;      [BUGGY]  if(k  <  31)  {  aughtException( "overflow:  gcd  is  2  ==  31 ");  }  [BUGGY]      k++;  //  cast  out  twos.  }  }  if  (k  ==  31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }    int  t  =  ((u  &  1)  ==  1)  ?  v  :  -(u  /  2)/*  B3  */;    do  {  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  short  NS  PS  ZS  boolean  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  k  t  u  v  	projects/Math94/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	432	433	1	replace	if(k  <  31)  {  aughtException( "overflow:  gcd  is  2  ==  31 ");  }	  aughtException(   "overflow:    gcd    is    2    ==    31   ");    	non-compiled	[CE]  <identifier>  expected	20	None	replace
453	[BUG]  [BUGGY]  while((  u  &  1)  ==  1)  {  if(t  >  0)  {  for(int  k  =  0;  k  <  31;  k++)  {  throw  new  ArithmeticException( "overflow:  gcd  is  2  >>  31 ");  }  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  v  /=  2;      [BUGGY]  while((  u  &  1)  ==  1)  {  if(t  >  0)  {  for(int  k  =  0;  k  <  31;  k++)  {  throw  new  ArithmeticException( "overflow:  gcd  is  2  >>  31 ");  }  [BUGGY]      }  if  (k  ==  31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }    int  t  =  ((u  &  1)  ==  1)  ?  v  :  -(u  /  2)/*  B3  */;    do  {  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  short  NS  PS  ZS  boolean  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  k  t  u  v  	projects/Math94/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	432	433	1	replace	while((  u  &  1)  ==  1)  {  if(t  >  0)  {  for(int  k  =  0;  k  <  31;  k++)  {  throw  new  ArithmeticException( "overflow:  gcd  is  2  >>  31 ");  }	  if(t    >    0)    {    for(int    k    =    0;    k    <    31;    k++)    {    throw    new    ArithmeticException(   "overflow:    gcd    is    2    >>    31   ");    }    	non-compiled	[CE]  <identifier>  expected	111	None	replace
454	[BUG]  [BUGGY]  if(k  <  31)  {  catch(IllegalArgumentException  e)  {  throw  new  ArithmeticException( "Overflow:  gcd  is  2  >>  31 ");  }  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  v  /=  2;      [BUGGY]  if(k  <  31)  {  catch(IllegalArgumentException  e)  {  throw  new  ArithmeticException( "Overflow:  gcd  is  2  >>  31 ");  }  [BUGGY]      k++;  //  cast  out  twos.  }  }  if  (k  ==  31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }    int  t  =  ((u  &  1)  ==  1)  ?  v  :  -(u  /  2)/*  B3  */;    do  {  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  short  NS  PS  ZS  boolean  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  k  t  u  v  	projects/Math94/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	432	433	1	replace	if(k  <  31)  {  catch(IllegalArgumentException  e)  {  throw  new  ArithmeticException( "Overflow:  gcd  is  2  >>  31 ");  }	  try    {    [Delete]    catch(IllegalArgumentException    e)    {    throw    new    ArithmeticException(   "Overflow:    gcd    is    2    >>    31   ");    }    	non-compiled	[CE]  <identifier>  expected	118	None	replace
455	[BUG]  [BUGGY]  int  k  =  ((  u  &  1)  ==  0  &&  v  &  1)  ==  0)  {  u  +=  2;  v  /=  3;  }  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  v  /=  2;      [BUGGY]  int  k  =  ((  u  &  1)  ==  0  &&  v  &  1)  ==  0)  {  u  +=  2;  v  /=  3;  }  [BUGGY]      k++;  //  cast  out  twos.  }  }  if  (k  ==  31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }    int  t  =  ((u  &  1)  ==  1)  ?  v  :  -(u  /  2)/*  B3  */;    do  {  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  short  NS  PS  ZS  boolean  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  k  t  u  v  	projects/Math94/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	432	433	1	replace	int  k  =  ((  u  &  1)  ==  0  &&  v  &  1)  ==  0)  {  u  +=  2;  v  /=  3;  }	  int    k    =    ((    u    &    1)    ==    0    &&    v    &    1)    ==    0)    {    u    /=    2;    v    /=    3;    }    	non-compiled	[CE]  <identifier>  expected	61	None	replace
456	[BUG]  [BUGGY]  char  k  =  ((  u  &  1)  ==  0  &&  v  &  1)  ==  0)  {  u  /=  2;  v  /=  3;  }  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  v  /=  2;      [BUGGY]  char  k  =  ((  u  &  1)  ==  0  &&  v  &  1)  ==  0)  {  u  /=  2;  v  /=  3;  }  [BUGGY]      k++;  //  cast  out  twos.  }  }  if  (k  ==  31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }    int  t  =  ((u  &  1)  ==  1)  ?  v  :  -(u  /  2)/*  B3  */;    do  {  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  short  NS  PS  ZS  boolean  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  k  t  u  v  	projects/Math94/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	432	433	1	replace	char  k  =  ((  u  &  1)  ==  0  &&  v  &  1)  ==  0)  {  u  /=  2;  v  /=  3;  }	  int    k    =    ((    u    &    1)    ==    0    &&    v    &    1)    ==    0)    {    u    /=    2;    v    /=    3;    }    	non-compiled	[CE]  <identifier>  expected	61	None	replace
457	[BUG]  [BUGGY]  if(k  >  0)  {  k++;  }  else  {  throw  new  ArithmeticException( "overflow:  gcd  is  2  <  31 ");  }  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  v  /=  2;      [BUGGY]  if(k  >  0)  {  k++;  }  else  {  throw  new  ArithmeticException( "overflow:  gcd  is  2  <  31 ");  }  [BUGGY]      }  if  (k  ==  31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }    int  t  =  ((u  &  1)  ==  1)  ?  v  :  -(u  /  2)/*  B3  */;    do  {  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  short  NS  PS  ZS  boolean  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  k  t  u  v  	projects/Math94/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	432	433	1	replace	if(k  >  0)  {  k++;  }  else  {  throw  new  ArithmeticException( "overflow:  gcd  is  2  <  31 ");  }	  if(t    >    0)    {    k++;    }    else    {    throw    new    ArithmeticException(   "overflow:    gcd    is    2    >=    31   ");    }    	non-compiled	[CE]  <identifier>  expected	11	None	replace
458	[BUG]  [BUGGY]  if(k  >  0)  {  k++;  }  else  {  throw  new  ArithmeticException( "Overflow:  gcd  is  2  >=  31 ");  }  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  v  /=  2;      [BUGGY]  if(k  >  0)  {  k++;  }  else  {  throw  new  ArithmeticException( "Overflow:  gcd  is  2  >=  31 ");  }  [BUGGY]      }  if  (k  ==  31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }    int  t  =  ((u  &  1)  ==  1)  ?  v  :  -(u  /  2)/*  B3  */;    do  {  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  short  NS  PS  ZS  boolean  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  k  t  u  v  	projects/Math94/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	432	433	1	replace	if(k  >  0)  {  k++;  }  else  {  throw  new  ArithmeticException( "Overflow:  gcd  is  2  >=  31 ");  }	  if(t    >    0)    {    k++;    }    else    {    throw    new    ArithmeticException(   "Overflow:    gcd    is    2    >=    31   ");    }    	non-compiled	[CE]  <identifier>  expected	37	None	replace
459	[BUG]  [BUGGY]  try  {  for(int  k  =  0;  k  <  31;  k++)  {  v  =  -k;  }  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  v  /=  2;      [BUGGY]  try  {  for(int  k  =  0;  k  <  31;  k++)  {  v  =  -k;  }  [BUGGY]      }  if  (k  ==  31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }    int  t  =  ((u  &  1)  ==  1)  ?  v  :  -(u  /  2)/*  B3  */;    do  {  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  short  NS  PS  ZS  boolean  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  k  t  u  v  	projects/Math94/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	432	433	1	replace	try  {  for(int  k  =  0;  k  <  31;  k++)  {  v  =  -k;  }	  if(t    >    0)    {    for(int    k    =    0;    k    <    31;    k++)    {    v    =    -k;    }    	non-compiled	[CE]  <identifier>  expected	110	None	replace
460	[BUG]  [BUGGY]  for(int  k  =  0;  k  <  31;  k++)  {  v  =  -k;  }  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  v  /=  2;      [BUGGY]  for(int  k  =  0;  k  <  31;  k++)  {  v  =  -k;  }  [BUGGY]      }  if  (k  ==  31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }    int  t  =  ((u  &  1)  ==  1)  ?  v  :  -(u  /  2)/*  B3  */;    do  {  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  short  NS  PS  ZS  boolean  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  k  t  u  v  	projects/Math94/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	432	433	1	replace	for(int  k  =  0;  k  <  31;  k++)  {  v  =  -k;  }	  if(t    >    0)    {    for(int    k    =    0;    k    <    31;    k++)    {    v    =    -k;    }    	non-compiled	[CE]  <identifier>  expected	110	None	replace
461	[BUG]  [BUGGY]  if(t  >  31)  {  for(int  k  =  0;  k  <  31;  k++)  {  v  =  -k;  }  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  v  /=  2;      [BUGGY]  if(t  >  31)  {  for(int  k  =  0;  k  <  31;  k++)  {  v  =  -k;  }  [BUGGY]      }  if  (k  ==  31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }    int  t  =  ((u  &  1)  ==  1)  ?  v  :  -(u  /  2)/*  B3  */;    do  {  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  short  NS  PS  ZS  boolean  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  k  t  u  v  	projects/Math94/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	432	433	1	replace	if(t  >  31)  {  for(int  k  =  0;  k  <  31;  k++)  {  v  =  -k;  }	  if(t    >    0)    {    for(int    k    =    0;    k    <    31;    k++)    {    v    =    -k;    }    	non-compiled	[CE]  <identifier>  expected	110	None	replace
462	[BUG]  [BUGGY]  if(k  >  0)  {  aughtException( "Overflow:  gcd  is  2  ==  31 ");  }  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  v  /=  2;      [BUGGY]  if(k  >  0)  {  aughtException( "Overflow:  gcd  is  2  ==  31 ");  }  [BUGGY]      k++;  //  cast  out  twos.  }  }  if  (k  ==  31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }    int  t  =  ((u  &  1)  ==  1)  ?  v  :  -(u  /  2)/*  B3  */;    do  {  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  short  NS  PS  ZS  boolean  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  k  t  u  v  	projects/Math94/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	432	433	1	replace	if(k  >  0)  {  aughtException( "Overflow:  gcd  is  2  ==  31 ");  }	  aughtException(   "Overflow:    gcd    is    2    ==    31   ");    	non-compiled	[CE]  <identifier>  expected	59	None	replace
463	[BUG]  [BUGGY]  Mutation(t)  {  throw  new  ArithmeticException( "Overflow:  gcd  is  2  >>  31 ");  }  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  v  /=  2;      [BUGGY]  Mutation(t)  {  throw  new  ArithmeticException( "Overflow:  gcd  is  2  >>  31 ");  }  [BUGGY]      k++;  //  cast  out  twos.  }  }  if  (k  ==  31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }    int  t  =  ((u  &  1)  ==  1)  ?  v  :  -(u  /  2)/*  B3  */;    do  {  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  short  NS  PS  ZS  boolean  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  k  t  u  v  	projects/Math94/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	432	433	1	replace	Mutation(t)  {  throw  new  ArithmeticException( "Overflow:  gcd  is  2  >>  31 ");  }	  mutation(t    >    0)    {    throw    new    ArithmeticException(   "Overflow:    gcd    is    2    >>    31   ");    }    	non-compiled	[CE]  <identifier>  expected	56	None	replace
464	[BUG]  [BUGGY]  int  k  =  ((  u  &  1)  ==  1  &&  v  &  1)  ==  1  &&  k  <  32)?  -(u  /  2)/  B3  */;  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  v  /=  2;      [BUGGY]  int  k  =  ((  u  &  1)  ==  1  &&  v  &  1)  ==  1  &&  k  <  32)?  -(u  /  2)/  B3  */;  [BUGGY]      k++;  //  cast  out  twos.  }  }  if  (k  ==  31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }    int  t  =  ((u  &  1)  ==  1)  ?  v  :  -(u  /  2)/*  B3  */;    do  {  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  short  NS  PS  ZS  boolean  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  k  t  u  v  	projects/Math94/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	432	433	1	replace	int  k  =  ((  u  &  1)  ==  1  &&  v  &  1)  ==  1  &&  k  <  32)?  -(u  /  2)/  B3  */;	  int    k    =    ((    u    &    1)    ==    1    &&    v    &    1)    ==    1    &&    k    <    31)?    -(u    /    2)/*    B3    */;    	non-compiled	[CE]  <identifier>  expected	41	None	replace
465	[BUG]  [BUGGY]  if(v  >  1)  {  for(int  k  =  0;  k  <  2;  k++)  {  throw  new  ArithmeticException( "overflow:  Gcd  is  2  >>  31 ");  }  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  v  /=  2;      [BUGGY]  if(v  >  1)  {  for(int  k  =  0;  k  <  2;  k++)  {  throw  new  ArithmeticException( "overflow:  Gcd  is  2  >>  31 ");  }  [BUGGY]      k++;  //  cast  out  twos.  }  }  if  (k  ==  31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }    int  t  =  ((u  &  1)  ==  1)  ?  v  :  -(u  /  2)/*  B3  */;    do  {  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  short  NS  PS  ZS  boolean  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  k  t  u  v  	projects/Math94/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	432	433	1	replace	if(v  >  1)  {  for(int  k  =  0;  k  <  2;  k++)  {  throw  new  ArithmeticException( "overflow:  Gcd  is  2  >>  31 ");  }	  if(v    >    0)    {    for(int    k    =    0;    k    <    2;    k++)    {    throw    new    ArithmeticException(   "overflow:    Gcd    is    2    >>    31   ");    }    	non-compiled	[CE]  <identifier>  expected	50	None	replace
466	[BUG]  [BUGGY]  while(t  >  1)  {  for(int  k  =  0;  k  <  2;  k++)  {  throw  new  ArithmeticException( "overflow:  gcd  is  2  {  31 ");  }  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  v  /=  2;      [BUGGY]  while(t  >  1)  {  for(int  k  =  0;  k  <  2;  k++)  {  throw  new  ArithmeticException( "overflow:  gcd  is  2  {  31 ");  }  [BUGGY]      k++;  //  cast  out  twos.  }  }  if  (k  ==  31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }    int  t  =  ((u  &  1)  ==  1)  ?  v  :  -(u  /  2)/*  B3  */;    do  {  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  short  NS  PS  ZS  boolean  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  k  t  u  v  	projects/Math94/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	432	433	1	replace	while(t  >  1)  {  for(int  k  =  0;  k  <  2;  k++)  {  throw  new  ArithmeticException( "overflow:  gcd  is  2  {  31 ");  }	  while(t    >    0)    {    for(int    k    =    0;    k    <    2;    k++)    {    throw    new    ArithmeticException(   "overflow:    gcd    is    2    {    31   ");    }    	non-compiled	[CE]  <identifier>  expected	26	None	replace
467	[BUG]  [BUGGY]  char  k  =  ((  u  &  1)  ==  0  &&  v  &  2)  ==  0  &&  k  <  31)  {  u  /=  2;  v  /=  2;  }  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  v  /=  2;      [BUGGY]  char  k  =  ((  u  &  1)  ==  0  &&  v  &  2)  ==  0  &&  k  <  31)  {  u  /=  2;  v  /=  2;  }  [BUGGY]      k++;  //  cast  out  twos.  }  }  if  (k  ==  31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }    int  t  =  ((u  &  1)  ==  1)  ?  v  :  -(u  /  2)/*  B3  */;    do  {  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  short  NS  PS  ZS  boolean  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  k  t  u  v  	projects/Math94/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	432	433	1	replace	char  k  =  ((  u  &  1)  ==  0  &&  v  &  2)  ==  0  &&  k  <  31)  {  u  /=  2;  v  /=  2;  }	  int    k    =    ((    u    &    1)    ==    0    &&    v    &    2)    ==    0    &&    k    <    31)    {    u    /=    2;    v    /=    2;    }    	non-compiled	[CE]  <identifier>  expected	40	None	replace
468	[BUG]  [BUGGY]  if(new  ArithmeticException( "overflow:  gcd  is  2  ==  31 "))  {  throw  new  ArithmeticException( " ");  }  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  v  /=  2;      [BUGGY]  if(new  ArithmeticException( "overflow:  gcd  is  2  ==  31 "))  {  throw  new  ArithmeticException( " ");  }  [BUGGY]      k++;  //  cast  out  twos.  }  }  if  (k  ==  31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }    int  t  =  ((u  &  1)  ==  1)  ?  v  :  -(u  /  2)/*  B3  */;    do  {  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  short  NS  PS  ZS  boolean  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  k  t  u  v  	projects/Math94/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	432	433	1	replace	if(new  ArithmeticException( "overflow:  gcd  is  2  ==  31 "))  {  throw  new  ArithmeticException( " ");  }	  aught(new    ArithmeticException(   "overflow:    gcd    is    2    ==    31   "));    	non-compiled	[CE]  <identifier>  expected	106	None	replace
469	[BUG]  [BUGGY]  if(new  ArithmeticException( "overflow:  gcd  is  2  ==  31 "))  throw  new  ArithmeticException( " ");  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  v  /=  2;      [BUGGY]  if(new  ArithmeticException( "overflow:  gcd  is  2  ==  31 "))  throw  new  ArithmeticException( " ");  [BUGGY]      k++;  //  cast  out  twos.  }  }  if  (k  ==  31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }    int  t  =  ((u  &  1)  ==  1)  ?  v  :  -(u  /  2)/*  B3  */;    do  {  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  short  NS  PS  ZS  boolean  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  k  t  u  v  	projects/Math94/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	432	433	1	replace	if(new  ArithmeticException( "overflow:  gcd  is  2  ==  31 "))  throw  new  ArithmeticException( " ");	  aught(new    ArithmeticException(   "overflow:    gcd    is    2    ==    31   "));    	non-compiled	[CE]  <identifier>  expected	106	None	replace
470	[BUG]  [BUGGY]  if(new  ArithmeticException( "overflow:  gcd  is  2  ==  31 "))  {  throw  new  ArithmeticException( "Overflow:  gcd  is  2  ==  31 ");  }  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  v  /=  2;      [BUGGY]  if(new  ArithmeticException( "overflow:  gcd  is  2  ==  31 "))  {  throw  new  ArithmeticException( "Overflow:  gcd  is  2  ==  31 ");  }  [BUGGY]      k++;  //  cast  out  twos.  }  }  if  (k  ==  31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }    int  t  =  ((u  &  1)  ==  1)  ?  v  :  -(u  /  2)/*  B3  */;    do  {  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  short  NS  PS  ZS  boolean  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  k  t  u  v  	projects/Math94/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	432	433	1	replace	if(new  ArithmeticException( "overflow:  gcd  is  2  ==  31 "))  {  throw  new  ArithmeticException( "Overflow:  gcd  is  2  ==  31 ");  }	  aught(new    ArithmeticException(   "overflow:    gcd    is    2    ==    31   "));    	non-compiled	[CE]  <identifier>  expected	106	None	replace
471	[BUG]  [BUGGY]  if(k  >  31)  {  aughtException( "overflow:  gcd  is  2  {  31 ");  }  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  v  /=  2;      [BUGGY]  if(k  >  31)  {  aughtException( "overflow:  gcd  is  2  {  31 ");  }  [BUGGY]      k++;  //  cast  out  twos.  }  }  if  (k  ==  31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }    int  t  =  ((u  &  1)  ==  1)  ?  v  :  -(u  /  2)/*  B3  */;    do  {  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  short  NS  PS  ZS  boolean  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  k  t  u  v  	projects/Math94/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	432	433	1	replace	if(k  >  31)  {  aughtException( "overflow:  gcd  is  2  {  31 ");  }	  aughtException(   "overflow:    gcd    is    2    {    31   ");    	non-compiled	[CE]  <identifier>  expected	18	None	replace
472	[BUG]  [BUGGY]  if(v  <  31)  {  if(v  >  0)  {  k++;  }  else  {  throw  new  ArithmeticException( "overflow:  gcd  is  2  >>  31 ");  }  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  v  /=  2;      [BUGGY]  if(v  <  31)  {  if(v  >  0)  {  k++;  }  else  {  throw  new  ArithmeticException( "overflow:  gcd  is  2  >>  31 ");  }  [BUGGY]      }  if  (k  ==  31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }    int  t  =  ((u  &  1)  ==  1)  ?  v  :  -(u  /  2)/*  B3  */;    do  {  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  short  NS  PS  ZS  boolean  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  k  t  u  v  	projects/Math94/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	432	433	1	replace	if(v  <  31)  {  if(v  >  0)  {  k++;  }  else  {  throw  new  ArithmeticException( "overflow:  gcd  is  2  >>  31 ");  }	  if(k    ==    31)    {    if(v    >    0)    {    k++;    }    else    {    throw    new    ArithmeticException(   "overflow:    gcd    is    2    >>    31   ");    }    	non-compiled	[CE]  <identifier>  expected	8	None	replace
473	[BUG]  [BUGGY]  Mutation(t)  {  throw  new  ArithmeticException( "Overflow:  gcd  is  2  {  31 ");  }  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  v  /=  2;      [BUGGY]  Mutation(t)  {  throw  new  ArithmeticException( "Overflow:  gcd  is  2  {  31 ");  }  [BUGGY]      k++;  //  cast  out  twos.  }  }  if  (k  ==  31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }    int  t  =  ((u  &  1)  ==  1)  ?  v  :  -(u  /  2)/*  B3  */;    do  {  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  short  NS  PS  ZS  boolean  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  k  t  u  v  	projects/Math94/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	432	433	1	replace	Mutation(t)  {  throw  new  ArithmeticException( "Overflow:  gcd  is  2  {  31 ");  }	  mutation(t    >    0)    {    throw    new    ArithmeticException(   "Overflow:    gcd    is    2    {    31   ");    }    	non-compiled	[CE]  <identifier>  expected	60	None	replace
474	[BUG]  [BUGGY]  if(k  ==  31)  {  throw  new  ArithmeticException( "overflow:  gcd  is  2  >=  31 ");  }  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  v  /=  2;      [BUGGY]  if(k  ==  31)  {  throw  new  ArithmeticException( "overflow:  gcd  is  2  >=  31 ");  }  [BUGGY]      k++;  //  cast  out  twos.  }  }  if  (k  ==  31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }    int  t  =  ((u  &  1)  ==  1)  ?  v  :  -(u  /  2)/*  B3  */;    do  {  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  short  NS  PS  ZS  boolean  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  k  t  u  v  	projects/Math94/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	432	433	1	replace	if(k  ==  31)  {  throw  new  ArithmeticException( "overflow:  gcd  is  2  >=  31 ");  }	  aughtException(   "overflow:    gcd    is    2    >=    31   ");    	non-compiled	[CE]  <identifier>  expected	33	None	replace
475	[BUG]  [BUGGY]  if(k  <  31)  {  throw  new  ArithmeticException( "overflow:  gcd  is  2  >>  31 ");  }  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  v  /=  2;      [BUGGY]  if(k  <  31)  {  throw  new  ArithmeticException( "overflow:  gcd  is  2  >>  31 ");  }  [BUGGY]      k++;  //  cast  out  twos.  }  }  if  (k  ==  31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }    int  t  =  ((u  &  1)  ==  1)  ?  v  :  -(u  /  2)/*  B3  */;    do  {  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  short  NS  PS  ZS  boolean  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  k  t  u  v  	projects/Math94/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	432	433	1	replace	if(k  <  31)  {  throw  new  ArithmeticException( "overflow:  gcd  is  2  >>  31 ");  }	  aughtException(   "overflow:    gcd    is    2    >=    31   ");    	non-compiled	[CE]  <identifier>  expected	33	None	replace
476	[BUG]  [BUGGY]  if(k  >  31)  {  k++;  }  else  {  throw  new  ArithmeticException( "Overflow:  gcd  is  2  >>  31 ");  }  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  v  /=  2;      [BUGGY]  if(k  >  31)  {  k++;  }  else  {  throw  new  ArithmeticException( "Overflow:  gcd  is  2  >>  31 ");  }  [BUGGY]      }  if  (k  ==  31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }    int  t  =  ((u  &  1)  ==  1)  ?  v  :  -(u  /  2)/*  B3  */;    do  {  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  short  NS  PS  ZS  boolean  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  k  t  u  v  	projects/Math94/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	432	433	1	replace	if(k  >  31)  {  k++;  }  else  {  throw  new  ArithmeticException( "Overflow:  gcd  is  2  >>  31 ");  }	  if(k    >=    31)    {    k++;    }    else    {    throw    new    ArithmeticException(   "Overflow:    gcd    is    2    >>    31   ");    }    	non-compiled	[CE]  <identifier>  expected	130	None	replace
477	[BUG]  [BUGGY]  if(k  >  31)  {  k++;  }  else  {  throw  new  ArithmeticException( "Overflow:  gcd  is  2  >=  31 ");  }  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  v  /=  2;      [BUGGY]  if(k  >  31)  {  k++;  }  else  {  throw  new  ArithmeticException( "Overflow:  gcd  is  2  >=  31 ");  }  [BUGGY]      }  if  (k  ==  31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }    int  t  =  ((u  &  1)  ==  1)  ?  v  :  -(u  /  2)/*  B3  */;    do  {  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  short  NS  PS  ZS  boolean  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  k  t  u  v  	projects/Math94/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	432	433	1	replace	if(k  >  31)  {  k++;  }  else  {  throw  new  ArithmeticException( "Overflow:  gcd  is  2  >=  31 ");  }	  if(k    >=    31)    {    k++;    }    else    {    throw    new    ArithmeticException(   "Overflow:    gcd    is    2    >>    31   ");    }    	non-compiled	[CE]  <identifier>  expected	130	None	replace
478	[BUG]  [BUGGY]  Mutation(t,  k)  {  k++;  }  else  {  throw  new  ArithmeticException( "overflow:  gcd  is  2  {  31 ");  }  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  v  /=  2;      [BUGGY]  Mutation(t,  k)  {  k++;  }  else  {  throw  new  ArithmeticException( "overflow:  gcd  is  2  {  31 ");  }  [BUGGY]      }  if  (k  ==  31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }    int  t  =  ((u  &  1)  ==  1)  ?  v  :  -(u  /  2)/*  B3  */;    do  {  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  short  NS  PS  ZS  boolean  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  k  t  u  v  	projects/Math94/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	432	433	1	replace	Mutation(t,  k)  {  k++;  }  else  {  throw  new  ArithmeticException( "overflow:  gcd  is  2  {  31 ");  }	  mutation(t    >    0)    {    k++;    }    else    {    throw    new    ArithmeticException(   "overflow:    gcd    is    2    {    31   ");    }    	non-compiled	[CE]  <identifier>  expected	52	None	replace
479	[BUG]  [BUGGY]  Mutation(t,  v)  {  k++;  }  else  {  throw  new  ArithmeticException( "overflow:  gcd  is  2  {  31 ");  }  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  v  /=  2;      [BUGGY]  Mutation(t,  v)  {  k++;  }  else  {  throw  new  ArithmeticException( "overflow:  gcd  is  2  {  31 ");  }  [BUGGY]      }  if  (k  ==  31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }    int  t  =  ((u  &  1)  ==  1)  ?  v  :  -(u  /  2)/*  B3  */;    do  {  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  short  NS  PS  ZS  boolean  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  k  t  u  v  	projects/Math94/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	432	433	1	replace	Mutation(t,  v)  {  k++;  }  else  {  throw  new  ArithmeticException( "overflow:  gcd  is  2  {  31 ");  }	  mutation(t    >    0)    {    k++;    }    else    {    throw    new    ArithmeticException(   "overflow:    gcd    is    2    {    31   ");    }    	non-compiled	[CE]  <identifier>  expected	52	None	replace
480	[BUG]  [BUGGY]  if(v  >  1)  {  for(int  k  =  0;  k  <  2;  k++)  {  throw  new  ArithmeticException( "overflow:  gcd  is  2  >>  31 ");  }  [CE]  <identifier>  expected  [FE]            AssertionFailedError      [CONTEXT]      }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  v  /=  2;      [BUGGY]  if(v  >  1)  {  for(int  k  =  0;  k  <  2;  k++)  {  throw  new  ArithmeticException( "overflow:  gcd  is  2  >>  31 ");  }  [BUGGY]      k++;  //  cast  out  twos.  }  }  if  (k  ==  31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }    int  t  =  ((u  &  1)  ==  1)  ?  v  :  -(u  /  2)/*  B3  */;    do  {  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  short  NS  PS  ZS  boolean  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  k  t  u  v  	projects/Math94/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	432	433	1	replace	if(v  >  1)  {  for(int  k  =  0;  k  <  2;  k++)  {  throw  new  ArithmeticException( "overflow:  gcd  is  2  >>  31 ");  }	  if(v    >    0)    {    for(int    k    =    0;    k    <    2;    k++)    {    throw    new    ArithmeticException(   "overflow:    gcd    is    2    >>    31   ");    }    	non-compiled	[CE]  <identifier>  expected	29	None	replace
481	[BUG]  [BUGGY]  while((  u  &  1)  ==  1)  {  if(v  >  0)  {  for(int  k  =  0;  k  <  2;  k++)  {  throw  new  ArithmeticException( "overflow:  gcd  is  2  >>  31 ");  }  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  v  /=  2;      [BUGGY]  while((  u  &  1)  ==  1)  {  if(v  >  0)  {  for(int  k  =  0;  k  <  2;  k++)  {  throw  new  ArithmeticException( "overflow:  gcd  is  2  >>  31 ");  }  [BUGGY]      k++;  //  cast  out  twos.  }  }  if  (k  ==  31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }    int  t  =  ((u  &  1)  ==  1)  ?  v  :  -(u  /  2)/*  B3  */;    do  {  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  short  NS  PS  ZS  boolean  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  k  t  u  v  	projects/Math94/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	432	433	1	replace	while((  u  &  1)  ==  1)  {  if(v  >  0)  {  for(int  k  =  0;  k  <  2;  k++)  {  throw  new  ArithmeticException( "overflow:  gcd  is  2  >>  31 ");  }	  if(v    >    0)    {    for(int    k    =    0;    k    <    2;    k++)    {    throw    new    ArithmeticException(   "overflow:    gcd    is    2    >>    31   ");    }    	non-compiled	[CE]  <identifier>  expected	29	None	replace
482	[BUG]  [BUGGY]  if(new  ArithmeticException( "overflow:  gcd  is  2  {  31 "))  {  throw  new  ArithmeticException( "Overflow:  gcd  is  2  ==  31 ");  }  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  v  /=  2;      [BUGGY]  if(new  ArithmeticException( "overflow:  gcd  is  2  {  31 "))  {  throw  new  ArithmeticException( "Overflow:  gcd  is  2  ==  31 ");  }  [BUGGY]      k++;  //  cast  out  twos.  }  }  if  (k  ==  31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }    int  t  =  ((u  &  1)  ==  1)  ?  v  :  -(u  /  2)/*  B3  */;    do  {  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  short  NS  PS  ZS  boolean  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  k  t  u  v  	projects/Math94/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	432	433	1	replace	if(new  ArithmeticException( "overflow:  gcd  is  2  {  31 "))  {  throw  new  ArithmeticException( "Overflow:  gcd  is  2  ==  31 ");  }	  aught(new    ArithmeticException(   "overflow:    gcd    is    2    {    31   "));    	non-compiled	[CE]  <identifier>  expected	107	None	replace
483	[BUG]  [BUGGY]  if(new  ArithmeticException( "overflow:  gcd  is  2  {  31 "))  throw  new  ArithmeticException( " ");  }  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  v  /=  2;      [BUGGY]  if(new  ArithmeticException( "overflow:  gcd  is  2  {  31 "))  throw  new  ArithmeticException( " ");  }  [BUGGY]      k++;  //  cast  out  twos.  }  }  if  (k  ==  31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }    int  t  =  ((u  &  1)  ==  1)  ?  v  :  -(u  /  2)/*  B3  */;    do  {  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  short  NS  PS  ZS  boolean  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  k  t  u  v  	projects/Math94/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	432	433	1	replace	if(new  ArithmeticException( "overflow:  gcd  is  2  {  31 "))  throw  new  ArithmeticException( " ");  }	  aught(new    ArithmeticException(   "overflow:    gcd    is    2    {    31   "));    	non-compiled	[CE]  <identifier>  expected	107	None	replace
484	[BUG]  [BUGGY]  if(new  ArithmeticException( "overflow:  gcd  is  2  {  31 "))  {  throw  new  ArithmeticException( " ");  }  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  v  /=  2;      [BUGGY]  if(new  ArithmeticException( "overflow:  gcd  is  2  {  31 "))  {  throw  new  ArithmeticException( " ");  }  [BUGGY]      k++;  //  cast  out  twos.  }  }  if  (k  ==  31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }    int  t  =  ((u  &  1)  ==  1)  ?  v  :  -(u  /  2)/*  B3  */;    do  {  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  short  NS  PS  ZS  boolean  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  k  t  u  v  	projects/Math94/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	432	433	1	replace	if(new  ArithmeticException( "overflow:  gcd  is  2  {  31 "))  {  throw  new  ArithmeticException( " ");  }	  aught(new    ArithmeticException(   "overflow:    gcd    is    2    {    31   "));    	non-compiled	[CE]  <identifier>  expected	107	None	replace
485	[BUG]  [BUGGY]  if(k  >  0)  {  aughtException( "Overflow:  gcd  is  2  >>  31 ");  }  [CE]  <identifier>  expected  [FE]            AssertionFailedError      [CONTEXT]      }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  v  /=  2;      [BUGGY]  if(k  >  0)  {  aughtException( "Overflow:  gcd  is  2  >>  31 ");  }  [BUGGY]      k++;  //  cast  out  twos.  }  }  if  (k  ==  31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }    int  t  =  ((u  &  1)  ==  1)  ?  v  :  -(u  /  2)/*  B3  */;    do  {  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  short  NS  PS  ZS  boolean  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  k  t  u  v  	projects/Math94/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	432	433	1	replace	if(k  >  0)  {  aughtException( "Overflow:  gcd  is  2  >>  31 ");  }	  aughtException(   "Overflow:    gcd    is    2    >>    31   ");    	non-compiled	[CE]  <identifier>  expected	31	None	replace
486	[BUG]  [BUGGY]  if(k  >  31)  {  aughtException( "Overflow:  gcd  is  2  {  31 ");  }  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  v  /=  2;      [BUGGY]  if(k  >  31)  {  aughtException( "Overflow:  gcd  is  2  {  31 ");  }  [BUGGY]      k++;  //  cast  out  twos.  }  }  if  (k  ==  31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }    int  t  =  ((u  &  1)  ==  1)  ?  v  :  -(u  /  2)/*  B3  */;    do  {  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  short  NS  PS  ZS  boolean  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  k  t  u  v  	projects/Math94/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	432	433	1	replace	if(k  >  31)  {  aughtException( "Overflow:  gcd  is  2  {  31 ");  }	  aughtException(   "Overflow:    gcd    is    2    {    31   ");    	non-compiled	[CE]  <identifier>  expected	19	None	replace
487	[BUG]  [BUGGY]  if(k  >=  0)  {  k++;  }  else  {  throw  new  ArithmeticException( "Overflow:  gcd  is  2  >>  31 ");  }  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  v  /=  2;      [BUGGY]  if(k  >=  0)  {  k++;  }  else  {  throw  new  ArithmeticException( "Overflow:  gcd  is  2  >>  31 ");  }  [BUGGY]      }  if  (k  ==  31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }    int  t  =  ((u  &  1)  ==  1)  ?  v  :  -(u  /  2)/*  B3  */;    do  {  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  short  NS  PS  ZS  boolean  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  k  t  u  v  	projects/Math94/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	432	433	1	replace	if(k  >=  0)  {  k++;  }  else  {  throw  new  ArithmeticException( "Overflow:  gcd  is  2  >>  31 ");  }	  if(v    <    =    0)    {    k++;    }    else    {    throw    new    ArithmeticException(   "Overflow:    gcd    is    2    >>    31   ");    }    	non-compiled	[CE]  <identifier>  expected	103	None	replace
488	[BUG]  [BUGGY]  if(new  ArithmeticException( "Overflow:  gcd  is  2  >>  31 "))  throw  new  ArithmeticException( " ");  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  v  /=  2;      [BUGGY]  if(new  ArithmeticException( "Overflow:  gcd  is  2  >>  31 "))  throw  new  ArithmeticException( " ");  [BUGGY]      k++;  //  cast  out  twos.  }  }  if  (k  ==  31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }    int  t  =  ((u  &  1)  ==  1)  ?  v  :  -(u  /  2)/*  B3  */;    do  {  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  short  NS  PS  ZS  boolean  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  k  t  u  v  	projects/Math94/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	432	433	1	replace	if(new  ArithmeticException( "Overflow:  gcd  is  2  >>  31 "))  throw  new  ArithmeticException( " ");	  aught(new    ArithmeticException(   "Overflow:    gcd    is    2    >>    31   "));    	non-compiled	[CE]  <identifier>  expected	137	None	replace
489	[BUG]  [BUGGY]  if(new  ArithmeticException( "Overflow:  gcd  is  2  >>  31 "))  {  throw  new  ArithmeticException( "Overflow:  gcd  is  2  >>  31 ");  }  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  v  /=  2;      [BUGGY]  if(new  ArithmeticException( "Overflow:  gcd  is  2  >>  31 "))  {  throw  new  ArithmeticException( "Overflow:  gcd  is  2  >>  31 ");  }  [BUGGY]      k++;  //  cast  out  twos.  }  }  if  (k  ==  31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }    int  t  =  ((u  &  1)  ==  1)  ?  v  :  -(u  /  2)/*  B3  */;    do  {  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  short  NS  PS  ZS  boolean  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  k  t  u  v  	projects/Math94/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	432	433	1	replace	if(new  ArithmeticException( "Overflow:  gcd  is  2  >>  31 "))  {  throw  new  ArithmeticException( "Overflow:  gcd  is  2  >>  31 ");  }	  aught(new    ArithmeticException(   "Overflow:    gcd    is    2    >>    31   "));    	non-compiled	[CE]  <identifier>  expected	137	None	replace
490	[BUG]  [BUGGY]  if(new  ArithmeticException( "Overflow:  gcd  is  2  >>  31 "))  {  throw  new  ArithmeticException( "Overflow:  gcd  is  2  ==  31 ");  }  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  v  /=  2;      [BUGGY]  if(new  ArithmeticException( "Overflow:  gcd  is  2  >>  31 "))  {  throw  new  ArithmeticException( "Overflow:  gcd  is  2  ==  31 ");  }  [BUGGY]      k++;  //  cast  out  twos.  }  }  if  (k  ==  31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }    int  t  =  ((u  &  1)  ==  1)  ?  v  :  -(u  /  2)/*  B3  */;    do  {  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  short  NS  PS  ZS  boolean  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  k  t  u  v  	projects/Math94/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	432	433	1	replace	if(new  ArithmeticException( "Overflow:  gcd  is  2  >>  31 "))  {  throw  new  ArithmeticException( "Overflow:  gcd  is  2  ==  31 ");  }	  aught(new    ArithmeticException(   "Overflow:    gcd    is    2    >>    31   "));    	non-compiled	[CE]  <identifier>  expected	137	None	replace
491	[BUG]  [BUGGY]  Mutation(t,  k)  {  k++;  }  else  {  throw  new  ArithmeticException( "Overflow:  gcd  is  2  {  31 ");  }  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  v  /=  2;      [BUGGY]  Mutation(t,  k)  {  k++;  }  else  {  throw  new  ArithmeticException( "Overflow:  gcd  is  2  {  31 ");  }  [BUGGY]      }  if  (k  ==  31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }    int  t  =  ((u  &  1)  ==  1)  ?  v  :  -(u  /  2)/*  B3  */;    do  {  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  short  NS  PS  ZS  boolean  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  k  t  u  v  	projects/Math94/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	432	433	1	replace	Mutation(t,  k)  {  k++;  }  else  {  throw  new  ArithmeticException( "Overflow:  gcd  is  2  {  31 ");  }	  mutation(t    >    0)    {    k++;    }    else    {    throw    new    ArithmeticException(   "Overflow:    gcd    is    2    {    31   ");    }    	non-compiled	[CE]  <identifier>  expected	55	None	replace
492	[BUG]  [BUGGY]  Mutation(t,  v  >  0)  {  k++;  }  else  {  throw  new  ArithmeticException( "Overflow:  gcd  is  2  {  31 ");  }  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]      }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  v  /=  2;      [BUGGY]  Mutation(t,  v  >  0)  {  k++;  }  else  {  throw  new  ArithmeticException( "Overflow:  gcd  is  2  {  31 ");  }  [BUGGY]      }  if  (k  ==  31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }    int  t  =  ((u  &  1)  ==  1)  ?  v  :  -(u  /  2)/*  B3  */;    do  {  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  short  NS  PS  ZS  boolean  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  k  t  u  v  	projects/Math94/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	432	433	1	replace	Mutation(t,  v  >  0)  {  k++;  }  else  {  throw  new  ArithmeticException( "Overflow:  gcd  is  2  {  31 ");  }	  mutation(t    >    0)    {    k++;    }    else    {    throw    new    ArithmeticException(   "Overflow:    gcd    is    2    {    31   ");    }    	non-compiled	[CE]  <identifier>  expected	55	None	replace
493	[BUG]  [BUGGY]  while((  u  &  1)  ==  1)  {  if(v  >  0)  {  for(int  k  =  0;  k  <  2;  k++)  {  throw  new  ArithmeticException( "overflow:  gcd  is  2  ==  31 ");  }  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  v  /=  2;      [BUGGY]  while((  u  &  1)  ==  1)  {  if(v  >  0)  {  for(int  k  =  0;  k  <  2;  k++)  {  throw  new  ArithmeticException( "overflow:  gcd  is  2  ==  31 ");  }  [BUGGY]      k++;  //  cast  out  twos.  }  }  if  (k  ==  31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }    int  t  =  ((u  &  1)  ==  1)  ?  v  :  -(u  /  2)/*  B3  */;    do  {  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  short  NS  PS  ZS  boolean  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  k  t  u  v  	projects/Math94/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	432	433	1	replace	while((  u  &  1)  ==  1)  {  if(v  >  0)  {  for(int  k  =  0;  k  <  2;  k++)  {  throw  new  ArithmeticException( "overflow:  gcd  is  2  ==  31 ");  }	  if(v    >    0)    {    for(int    k    =    0;    k    <    2;    k++)    {    throw    new    ArithmeticException(   "overflow:    gcd    is    2    ==    31   ");    }    	non-compiled	[CE]  <identifier>  expected	94	None	replace
494	[BUG]  [BUGGY]  int  k  =  ((  u  &  1)  ==  31  &&  v  &  1)  ==  31)?  -(u  /  2)/  B3  */;  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  v  /=  2;      [BUGGY]  int  k  =  ((  u  &  1)  ==  31  &&  v  &  1)  ==  31)?  -(u  /  2)/  B3  */;  [BUGGY]      k++;  //  cast  out  twos.  }  }  if  (k  ==  31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }    int  t  =  ((u  &  1)  ==  1)  ?  v  :  -(u  /  2)/*  B3  */;    do  {  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  short  NS  PS  ZS  boolean  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  k  t  u  v  	projects/Math94/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	432	433	1	replace	int  k  =  ((  u  &  1)  ==  31  &&  v  &  1)  ==  31)?  -(u  /  2)/  B3  */;	  int    k    =    ((    u    &    1)    ==    0    &&    v    &    1)    ==    0    &&    31)?    -(u    /    2)/*    B3    */;    	non-compiled	[CE]  <identifier>  expected	42	None	replace
495	[BUG]  [BUGGY]  int  k  =  ((  u  &  1)  ==  0  &&  v  &  1)  ==  0)?  -(u  /  2)/  B3  */;  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  v  /=  2;      [BUGGY]  int  k  =  ((  u  &  1)  ==  0  &&  v  &  1)  ==  0)?  -(u  /  2)/  B3  */;  [BUGGY]      k++;  //  cast  out  twos.  }  }  if  (k  ==  31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }    int  t  =  ((u  &  1)  ==  1)  ?  v  :  -(u  /  2)/*  B3  */;    do  {  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  short  NS  PS  ZS  boolean  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  k  t  u  v  	projects/Math94/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	432	433	1	replace	int  k  =  ((  u  &  1)  ==  0  &&  v  &  1)  ==  0)?  -(u  /  2)/  B3  */;	  int    k    =    ((    u    &    1)    ==    0    &&    v    &    1)    ==    0    &&    31)?    -(u    /    2)/*    B3    */;    	non-compiled	[CE]  <identifier>  expected	42	None	replace
