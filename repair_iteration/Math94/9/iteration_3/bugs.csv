bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  int  k  =((  u  &  1)  ==  0  ||  v  &  1)  ==  0)  {  throw  new  ArithmeticException( "Overflow:  gcd  is  2  >>  31 ");  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are        [BUGGY]  int  k  =((  u  &  1)  ==  0  ||  v  &  1)  ==  0)  {  throw  new  ArithmeticException( "Overflow:  gcd  is  2  >>  31 ");  [BUGGY]      u  /=  2;  v  /=  2;  k++;  //  cast  out  twos.  }  if  (k  ==  31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }    int  t  =  ((u  &  1)  ==  1)  ?  v  :  -(u  /  2)/*  B3  */;  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  short  NS  PS  ZS  boolean  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  k  t  u  v  	projects/Math94/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	430	430	1	replace	int  k  =((  u  &  1)  ==  0  ||  v  &  1)  ==  0)  {  throw  new  ArithmeticException( "Overflow:  gcd  is  2  >>  31 ");	  int    k    =((    u    &    1)    ==    0    &&    v    &    1)    ==    0)    {    throw    new    ArithmeticException(   "Overflow:    gcd    is    2    >>    31   ");    	non-compiled	[CE]  <identifier>  expected	52	None	replace
2	[BUG]  [BUGGY]  int  k  =((  u  &  1)  ==  1  &&  v  &  1)  ==  0)  {  throw  new  ArithmeticException( "Overflow:  gcd  is  2  >>  31 ");  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are        [BUGGY]  int  k  =((  u  &  1)  ==  1  &&  v  &  1)  ==  0)  {  throw  new  ArithmeticException( "Overflow:  gcd  is  2  >>  31 ");  [BUGGY]      u  /=  2;  v  /=  2;  k++;  //  cast  out  twos.  }  if  (k  ==  31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }    int  t  =  ((u  &  1)  ==  1)  ?  v  :  -(u  /  2)/*  B3  */;  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  short  NS  PS  ZS  boolean  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  k  t  u  v  	projects/Math94/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	430	430	1	replace	int  k  =((  u  &  1)  ==  1  &&  v  &  1)  ==  0)  {  throw  new  ArithmeticException( "Overflow:  gcd  is  2  >>  31 ");	  int    k    =((    u    &    1)    ==    0    &&    v    &    1)    ==    0)    {    throw    new    ArithmeticException(   "Overflow:    gcd    is    2    >>    31   ");    	non-compiled	[CE]  <identifier>  expected	52	None	replace
3	[BUG]  [BUGGY]  int  k  =((  u  &  1)  ==  0  &&  (v  &  1)  ==  0)  {  throw  new  ArithmeticException( "Overflow:  gcd  is  2  >>  31 ");  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are        [BUGGY]  int  k  =((  u  &  1)  ==  0  &&  (v  &  1)  ==  0)  {  throw  new  ArithmeticException( "Overflow:  gcd  is  2  >>  31 ");  [BUGGY]      u  /=  2;  v  /=  2;  k++;  //  cast  out  twos.  }  if  (k  ==  31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }    int  t  =  ((u  &  1)  ==  1)  ?  v  :  -(u  /  2)/*  B3  */;  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  short  NS  PS  ZS  boolean  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  k  t  u  v  	projects/Math94/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	430	430	1	replace	int  k  =((  u  &  1)  ==  0  &&  (v  &  1)  ==  0)  {  throw  new  ArithmeticException( "Overflow:  gcd  is  2  >>  31 ");	  int    k    =((    u    &    1)    ==    0    &&    v    &    1)    ==    0)    {    throw    new    ArithmeticException(   "Overflow:    gcd    is    2    >>    31   ");    	non-compiled	[CE]  <identifier>  expected	52	None	replace
4	[BUG]  [BUGGY]  int  k  =((  u  &  1)  ==  1  &&  v  &  2)  ==  1  &&  k  <  31)  {  throw  new  ArithmeticException( "overflow:  Gcd  is  2  >>  31 ");  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are        [BUGGY]  int  k  =((  u  &  1)  ==  1  &&  v  &  2)  ==  1  &&  k  <  31)  {  throw  new  ArithmeticException( "overflow:  Gcd  is  2  >>  31 ");  [BUGGY]      u  /=  2;  v  /=  2;  k++;  //  cast  out  twos.  }  if  (k  ==  31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }    int  t  =  ((u  &  1)  ==  1)  ?  v  :  -(u  /  2)/*  B3  */;  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  short  NS  PS  ZS  boolean  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  k  t  u  v  	projects/Math94/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	430	430	1	replace	int  k  =((  u  &  1)  ==  1  &&  v  &  2)  ==  1  &&  k  <  31)  {  throw  new  ArithmeticException( "overflow:  Gcd  is  2  >>  31 ");	  int    k    =((    u    &    1)    ==    0    &&    v    &    2)    ==    0    &&    k    <    31)    {    throw    new    ArithmeticException(   "overflow:    Gcd    is    2    >>    31   ");    	non-compiled	[CE]  <identifier>  expected	28	None	replace
5	[BUG]  [BUGGY]  int  k  =((  u  &  1)  ==  0  &&  v  /  2)  ==  0  &&  k  <  31)  {  throw  new  ArithmeticException( "overflow:  Gcd  is  2  >>  31 ");  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are        [BUGGY]  int  k  =((  u  &  1)  ==  0  &&  v  /  2)  ==  0  &&  k  <  31)  {  throw  new  ArithmeticException( "overflow:  Gcd  is  2  >>  31 ");  [BUGGY]      u  /=  2;  v  /=  2;  k++;  //  cast  out  twos.  }  if  (k  ==  31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }    int  t  =  ((u  &  1)  ==  1)  ?  v  :  -(u  /  2)/*  B3  */;  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  short  NS  PS  ZS  boolean  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  k  t  u  v  	projects/Math94/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	430	430	1	replace	int  k  =((  u  &  1)  ==  0  &&  v  /  2)  ==  0  &&  k  <  31)  {  throw  new  ArithmeticException( "overflow:  Gcd  is  2  >>  31 ");	  int    k    =((    u    &    1)    ==    0    &&    v    &    2)    ==    0    &&    k    <    31)    {    throw    new    ArithmeticException(   "overflow:    Gcd    is    2    >>    31   ");    	non-compiled	[CE]  <identifier>  expected	28	None	replace
6	[BUG]  [BUGGY]  int  k  =((  u  &  1)  ==  0  &&  v  &  2)  ==  0)  {  throw  new  ArithmeticException( "overflow:  Gcd  is  2  >>  31 ");  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are        [BUGGY]  int  k  =((  u  &  1)  ==  0  &&  v  &  2)  ==  0)  {  throw  new  ArithmeticException( "overflow:  Gcd  is  2  >>  31 ");  [BUGGY]      u  /=  2;  v  /=  2;  k++;  //  cast  out  twos.  }  if  (k  ==  31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }    int  t  =  ((u  &  1)  ==  1)  ?  v  :  -(u  /  2)/*  B3  */;  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  short  NS  PS  ZS  boolean  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  k  t  u  v  	projects/Math94/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	430	430	1	replace	int  k  =((  u  &  1)  ==  0  &&  v  &  2)  ==  0)  {  throw  new  ArithmeticException( "overflow:  Gcd  is  2  >>  31 ");	  int    k    =((    u    &    1)    ==    0    &&    v    &    2)    ==    0    &&    k    <    31)    {    throw    new    ArithmeticException(   "overflow:    Gcd    is    2    >>    31   ");    	non-compiled	[CE]  <identifier>  expected	28	None	replace
7	[BUG]  [BUGGY]  int  k  =((  u  &  1)  ==  0  ||(v  &  1)  ==  0)?  gcd  :  -(u  /  2)/  B3  */);  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are        [BUGGY]  int  k  =((  u  &  1)  ==  0  ||(v  &  1)  ==  0)?  gcd  :  -(u  /  2)/  B3  */);  [BUGGY]      u  /=  2;  v  /=  2;  k++;  //  cast  out  twos.  }  if  (k  ==  31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }    int  t  =  ((u  &  1)  ==  1)  ?  v  :  -(u  /  2)/*  B3  */;  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  short  NS  PS  ZS  boolean  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  k  t  u  v  	projects/Math94/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	430	430	1	replace	int  k  =((  u  &  1)  ==  0  ||(v  &  1)  ==  0)?  gcd  :  -(u  /  2)/  B3  */);	  int    k    =((    u    &    1)    ==    0    &&    (v    &    1)    ==    0)?    gcd    :    -(u    /    2)/    B3    */);    	non-compiled	[CE]  <identifier>  expected	48	None	replace
8	[BUG]  [BUGGY]  int  k  =((  u  &  1)  ==  0)?  gcd  :  -(u  /  2)/  B3  */);  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]      if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are        [BUGGY]  int  k  =((  u  &  1)  ==  0)?  gcd  :  -(u  /  2)/  B3  */);  [BUGGY]      u  /=  2;  v  /=  2;  k++;  //  cast  out  twos.  }  if  (k  ==  31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }    int  t  =  ((u  &  1)  ==  1)  ?  v  :  -(u  /  2)/*  B3  */;  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  short  NS  PS  ZS  boolean  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  k  t  u  v  	projects/Math94/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	430	430	1	replace	int  k  =((  u  &  1)  ==  0)?  gcd  :  -(u  /  2)/  B3  */);	  int    k    =((    u    &    1)    ==    0    &&    (v    &    1)    ==    0)?    gcd    :    -(u    /    2)/    B3    */);    	non-compiled	[CE]  <identifier>  expected	48	None	replace
9	[BUG]  [BUGGY]  int  k  =((  u  &  1)  ==  1  &&  (v  &  1)  ==  0)?  gcd  :  -(u  /  2)/  B3  */);  [CE]  <identifier>  expected  [FE]                          AssertionFailedError      [CONTEXT]      if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are        [BUGGY]  int  k  =((  u  &  1)  ==  1  &&  (v  &  1)  ==  0)?  gcd  :  -(u  /  2)/  B3  */);  [BUGGY]      u  /=  2;  v  /=  2;  k++;  //  cast  out  twos.  }  if  (k  ==  31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }    int  t  =  ((u  &  1)  ==  1)  ?  v  :  -(u  /  2)/*  B3  */;  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  short  NS  PS  ZS  boolean  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  k  t  u  v  	projects/Math94/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	430	430	1	replace	int  k  =((  u  &  1)  ==  1  &&  (v  &  1)  ==  0)?  gcd  :  -(u  /  2)/  B3  */);	  int    k    =((    u    &    1)    ==    0    &&    (v    &    1)    ==    0)?    gcd    :    -(u    /    2)/    B3    */);    	non-compiled	[CE]  <identifier>  expected	48	None	replace
10	[BUG]  [BUGGY]  int  k  =((  u  &  1)  ==  0  &&  v  /  2)  ==  0  &&  k  <  31)  {  throw  new  ArithmeticException( "overflow:  gcd  is  2  >>  31 ");  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are        [BUGGY]  int  k  =((  u  &  1)  ==  0  &&  v  /  2)  ==  0  &&  k  <  31)  {  throw  new  ArithmeticException( "overflow:  gcd  is  2  >>  31 ");  [BUGGY]      u  /=  2;  v  /=  2;  k++;  //  cast  out  twos.  }  if  (k  ==  31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }    int  t  =  ((u  &  1)  ==  1)  ?  v  :  -(u  /  2)/*  B3  */;  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  short  NS  PS  ZS  boolean  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  k  t  u  v  	projects/Math94/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	430	430	1	replace	int  k  =((  u  &  1)  ==  0  &&  v  /  2)  ==  0  &&  k  <  31)  {  throw  new  ArithmeticException( "overflow:  gcd  is  2  >>  31 ");	  int    k    =((    u    &    1)    ==    0    &&    v    &    2)    ==    0    &&    k    <    31)    {    throw    new    ArithmeticException(   "overflow:    gcd    is    2    >>    31   ");    	non-compiled	[CE]  <identifier>  expected	39	None	replace
11	[BUG]  [BUGGY]  int  k  =((  u  &  1)  ==  1  &&  v  &  2)  ==  1  &&  k  <  31)  {  throw  new  ArithmeticException( "overflow:  gcd  is  2  >>  31 ");  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are        [BUGGY]  int  k  =((  u  &  1)  ==  1  &&  v  &  2)  ==  1  &&  k  <  31)  {  throw  new  ArithmeticException( "overflow:  gcd  is  2  >>  31 ");  [BUGGY]      u  /=  2;  v  /=  2;  k++;  //  cast  out  twos.  }  if  (k  ==  31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }    int  t  =  ((u  &  1)  ==  1)  ?  v  :  -(u  /  2)/*  B3  */;  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  short  NS  PS  ZS  boolean  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  k  t  u  v  	projects/Math94/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	430	430	1	replace	int  k  =((  u  &  1)  ==  1  &&  v  &  2)  ==  1  &&  k  <  31)  {  throw  new  ArithmeticException( "overflow:  gcd  is  2  >>  31 ");	  int    k    =((    u    &    1)    ==    0    &&    v    &    2)    ==    0    &&    k    <    31)    {    throw    new    ArithmeticException(   "overflow:    gcd    is    2    >>    31   ");    	non-compiled	[CE]  <identifier>  expected	39	None	replace
12	[BUG]  [BUGGY]  int  k  =((  u  &  1)  ==  0  &&  v  %  2)  ==  0  &&  k  <  31)  {  throw  new  ArithmeticException( "overflow:  gcd  is  2  >>  31 ");  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are        [BUGGY]  int  k  =((  u  &  1)  ==  0  &&  v  %  2)  ==  0  &&  k  <  31)  {  throw  new  ArithmeticException( "overflow:  gcd  is  2  >>  31 ");  [BUGGY]      u  /=  2;  v  /=  2;  k++;  //  cast  out  twos.  }  if  (k  ==  31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }    int  t  =  ((u  &  1)  ==  1)  ?  v  :  -(u  /  2)/*  B3  */;  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  short  NS  PS  ZS  boolean  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  k  t  u  v  	projects/Math94/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	430	430	1	replace	int  k  =((  u  &  1)  ==  0  &&  v  %  2)  ==  0  &&  k  <  31)  {  throw  new  ArithmeticException( "overflow:  gcd  is  2  >>  31 ");	  int    k    =((    u    &    1)    ==    0    &&    v    &    2)    ==    0    &&    k    <    31)    {    throw    new    ArithmeticException(   "overflow:    gcd    is    2    >>    31   ");    	non-compiled	[CE]  <identifier>  expected	39	None	replace
13	[BUG]  [BUGGY]  int  k  =((  u  &  1)  ==  0  ||  v  &  1)  ==  0)  {  throw  new  ArithmeticException( "Overflow:  Gcd  is  2  >>  31 ");  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are        [BUGGY]  int  k  =((  u  &  1)  ==  0  ||  v  &  1)  ==  0)  {  throw  new  ArithmeticException( "Overflow:  Gcd  is  2  >>  31 ");  [BUGGY]      u  /=  2;  v  /=  2;  k++;  //  cast  out  twos.  }  if  (k  ==  31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }    int  t  =  ((u  &  1)  ==  1)  ?  v  :  -(u  /  2)/*  B3  */;  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  short  NS  PS  ZS  boolean  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  k  t  u  v  	projects/Math94/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	430	430	1	replace	int  k  =((  u  &  1)  ==  0  ||  v  &  1)  ==  0)  {  throw  new  ArithmeticException( "Overflow:  Gcd  is  2  >>  31 ");	  int    k    =((    u    &    1)    ==    0    &&    v    &    1)    ==    0)    {    throw    new    ArithmeticException(   "Overflow:    Gcd    is    2    >>    31   ");    	non-compiled	[CE]  <identifier>  expected	50	None	replace
14	[BUG]  [BUGGY]  int  k  =((  u  &  1)  ==  31  &&  v  &  1)  ==  0)  {  throw  new  ArithmeticException( "Overflow:  Gcd  is  2  >>  31 ");  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are        [BUGGY]  int  k  =((  u  &  1)  ==  31  &&  v  &  1)  ==  0)  {  throw  new  ArithmeticException( "Overflow:  Gcd  is  2  >>  31 ");  [BUGGY]      u  /=  2;  v  /=  2;  k++;  //  cast  out  twos.  }  if  (k  ==  31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }    int  t  =  ((u  &  1)  ==  1)  ?  v  :  -(u  /  2)/*  B3  */;  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  short  NS  PS  ZS  boolean  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  k  t  u  v  	projects/Math94/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	430	430	1	replace	int  k  =((  u  &  1)  ==  31  &&  v  &  1)  ==  0)  {  throw  new  ArithmeticException( "Overflow:  Gcd  is  2  >>  31 ");	  int    k    =((    u    &    1)    ==    0    &&    v    &    1)    ==    0)    {    throw    new    ArithmeticException(   "Overflow:    Gcd    is    2    >>    31   ");    	non-compiled	[CE]  <identifier>  expected	50	None	replace
15	[BUG]  [BUGGY]  int  k  =((  u  &  1)  ==  1  &&  v  &  1)  ==  0)  {  throw  new  ArithmeticException( "Overflow:  Gcd  is  2  >>  31 ");  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are        [BUGGY]  int  k  =((  u  &  1)  ==  1  &&  v  &  1)  ==  0)  {  throw  new  ArithmeticException( "Overflow:  Gcd  is  2  >>  31 ");  [BUGGY]      u  /=  2;  v  /=  2;  k++;  //  cast  out  twos.  }  if  (k  ==  31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }    int  t  =  ((u  &  1)  ==  1)  ?  v  :  -(u  /  2)/*  B3  */;  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  short  NS  PS  ZS  boolean  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  k  t  u  v  	projects/Math94/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	430	430	1	replace	int  k  =((  u  &  1)  ==  1  &&  v  &  1)  ==  0)  {  throw  new  ArithmeticException( "Overflow:  Gcd  is  2  >>  31 ");	  int    k    =((    u    &    1)    ==    0    &&    v    &    1)    ==    0)    {    throw    new    ArithmeticException(   "Overflow:    Gcd    is    2    >>    31   ");    	non-compiled	[CE]  <identifier>  expected	50	None	replace
16	[BUG]  [BUGGY]  int  k  =((  u  &  1)  ==  0  &&  (v  &  1)  ==  0)  {  throw  new  ArithmeticException( "Overflow:  Gcd  is  2  >>  31 ");  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]      if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are        [BUGGY]  int  k  =((  u  &  1)  ==  0  &&  (v  &  1)  ==  0)  {  throw  new  ArithmeticException( "Overflow:  Gcd  is  2  >>  31 ");  [BUGGY]      u  /=  2;  v  /=  2;  k++;  //  cast  out  twos.  }  if  (k  ==  31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }    int  t  =  ((u  &  1)  ==  1)  ?  v  :  -(u  /  2)/*  B3  */;  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  short  NS  PS  ZS  boolean  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  k  t  u  v  	projects/Math94/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	430	430	1	replace	int  k  =((  u  &  1)  ==  0  &&  (v  &  1)  ==  0)  {  throw  new  ArithmeticException( "Overflow:  Gcd  is  2  >>  31 ");	  int    k    =((    u    &    1)    ==    0    &&    v    &    1)    ==    0)    {    throw    new    ArithmeticException(   "Overflow:    Gcd    is    2    >>    31   ");    	non-compiled	[CE]  <identifier>  expected	50	None	replace
17	[BUG]  [BUGGY]  ((  u  &  1)  ==  0  &&  k  <  31)  {  throw  new  ArithmeticException( " ");  }  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are        [BUGGY]  ((  u  &  1)  ==  0  &&  k  <  31)  {  throw  new  ArithmeticException( " ");  }  [BUGGY]      v  /=  2;  k++;  //  cast  out  twos.  }  if  (k  ==  31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }    int  t  =  ((u  &  1)  ==  1)  ?  v  :  -(u  /  2)/*  B3  */;  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  short  NS  PS  ZS  boolean  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  k  t  u  v  	projects/Math94/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	430	430	1	replace	((  u  &  1)  ==  0  &&  k  <  31)  {  throw  new  ArithmeticException( " ");  }	  ((    u    &    1)    ==    0    &&    v    &    2)    ==    0)    {    throw    new    ArithmeticException(   "   ");    }    	non-compiled	[CE]  <identifier>  expected	51	None	replace
18	[BUG]  [BUGGY]  ((  u  &  1)  ==  31  &&  v  &  2)  ==  0)  {  throw  new  ArithmeticException( " ");  }  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are        [BUGGY]  ((  u  &  1)  ==  31  &&  v  &  2)  ==  0)  {  throw  new  ArithmeticException( " ");  }  [BUGGY]      v  /=  2;  k++;  //  cast  out  twos.  }  if  (k  ==  31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }    int  t  =  ((u  &  1)  ==  1)  ?  v  :  -(u  /  2)/*  B3  */;  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  short  NS  PS  ZS  boolean  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  k  t  u  v  	projects/Math94/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	430	430	1	replace	((  u  &  1)  ==  31  &&  v  &  2)  ==  0)  {  throw  new  ArithmeticException( " ");  }	  ((    u    &    1)    ==    0    &&    v    &    2)    ==    0)    {    throw    new    ArithmeticException(   "   ");    }    	non-compiled	[CE]  <identifier>  expected	51	None	replace
19	[BUG]  [BUGGY]  ((  u  &  1)  ==  0  ||  v  &  2)  ==  0)  {  throw  new  ArithmeticException( " ");  }  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are        [BUGGY]  ((  u  &  1)  ==  0  ||  v  &  2)  ==  0)  {  throw  new  ArithmeticException( " ");  }  [BUGGY]      v  /=  2;  k++;  //  cast  out  twos.  }  if  (k  ==  31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }    int  t  =  ((u  &  1)  ==  1)  ?  v  :  -(u  /  2)/*  B3  */;  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  short  NS  PS  ZS  boolean  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  k  t  u  v  	projects/Math94/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	430	430	1	replace	((  u  &  1)  ==  0  ||  v  &  2)  ==  0)  {  throw  new  ArithmeticException( " ");  }	  ((    u    &    1)    ==    0    &&    v    &    2)    ==    0)    {    throw    new    ArithmeticException(   "   ");    }    	non-compiled	[CE]  <identifier>  expected	51	None	replace
20	[BUG]  [BUGGY]  ((  u  &  1)  ==  0  &&  (v  &  2)  ==  0  &&  k  <  32));  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are        [BUGGY]  ((  u  &  1)  ==  0  &&  (v  &  2)  ==  0  &&  k  <  32));  [BUGGY]      u  /=  2;  v  /=  2;  k++;  //  cast  out  twos.  }  if  (k  ==  31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }    int  t  =  ((u  &  1)  ==  1)  ?  v  :  -(u  /  2)/*  B3  */;  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  short  NS  PS  ZS  boolean  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  k  t  u  v  	projects/Math94/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	430	430	1	replace	((  u  &  1)  ==  0  &&  (v  &  2)  ==  0  &&  k  <  32));	  ((    u    &    1)    ==    0    &&    (v    &    1)    ==    0    &&    k    <    32));    	non-compiled	[CE]  <identifier>  expected	13	None	replace
21	[BUG]  [BUGGY]  ((  u  &  1)  ==  0  ||(v  &  1)  ==  0  ||  k  <  32));  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are        [BUGGY]  ((  u  &  1)  ==  0  ||(v  &  1)  ==  0  ||  k  <  32));  [BUGGY]      u  /=  2;  v  /=  2;  k++;  //  cast  out  twos.  }  if  (k  ==  31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }    int  t  =  ((u  &  1)  ==  1)  ?  v  :  -(u  /  2)/*  B3  */;  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  short  NS  PS  ZS  boolean  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  k  t  u  v  	projects/Math94/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	430	430	1	replace	((  u  &  1)  ==  0  ||(v  &  1)  ==  0  ||  k  <  32));	  ((    u    &    1)    ==    0    &&    (v    &    1)    ==    0    &&    k    <    32));    	non-compiled	[CE]  <identifier>  expected	13	None	replace
22	[BUG]  [BUGGY]  int  k  =((  u  &  1)  ==  1  &&  (v  &  1)  ==  1  &&  k  <  31)?  gcd  :  -(u  /  2)/  B3  */);  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are        [BUGGY]  int  k  =((  u  &  1)  ==  1  &&  (v  &  1)  ==  1  &&  k  <  31)?  gcd  :  -(u  /  2)/  B3  */);  [BUGGY]      u  /=  2;  v  /=  2;  k++;  //  cast  out  twos.  }  if  (k  ==  31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }    int  t  =  ((u  &  1)  ==  1)  ?  v  :  -(u  /  2)/*  B3  */;  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  short  NS  PS  ZS  boolean  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  k  t  u  v  	projects/Math94/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	430	430	1	replace	int  k  =((  u  &  1)  ==  1  &&  (v  &  1)  ==  1  &&  k  <  31)?  gcd  :  -(u  /  2)/  B3  */);	  int    k    =((    u    &    1)    ==    0    &&    (v    &    1)    ==    0    &&    k    <    31)?    gcd    :    -(u    /    2)/    B3    */);    	non-compiled	[CE]  <identifier>  expected	33	None	replace
23	[BUG]  [BUGGY]  int  k  =((  u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  31)?  gcd  :  -(u  /  2)/  B3  */);  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]      if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are        [BUGGY]  int  k  =((  u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  31)?  gcd  :  -(u  /  2)/  B3  */);  [BUGGY]      u  /=  2;  v  /=  2;  k++;  //  cast  out  twos.  }  if  (k  ==  31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }    int  t  =  ((u  &  1)  ==  1)  ?  v  :  -(u  /  2)/*  B3  */;  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  short  NS  PS  ZS  boolean  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  k  t  u  v  	projects/Math94/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	430	430	1	replace	int  k  =((  u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  31)?  gcd  :  -(u  /  2)/  B3  */);	  int    k    =((    u    &    1)    ==    0    &&    (v    &    1)    ==    0    &&    k    <    31)?    gcd    :    -(u    /    2)/    B3    */);    	non-compiled	[CE]  <identifier>  expected	33	None	replace
24	[BUG]  [BUGGY]  int  k  =((  u  &  1)  ==  1  &&  v  &  1)  ==  1  &&  k  <  31)  {  throw  new  ArithmeticException( "gcd  is  2  >>  31 ");  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are        [BUGGY]  int  k  =((  u  &  1)  ==  1  &&  v  &  1)  ==  1  &&  k  <  31)  {  throw  new  ArithmeticException( "gcd  is  2  >>  31 ");  [BUGGY]      u  /=  2;  v  /=  2;  k++;  //  cast  out  twos.  }  if  (k  ==  31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }    int  t  =  ((u  &  1)  ==  1)  ?  v  :  -(u  /  2)/*  B3  */;  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  short  NS  PS  ZS  boolean  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  k  t  u  v  	projects/Math94/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	430	430	1	replace	int  k  =((  u  &  1)  ==  1  &&  v  &  1)  ==  1  &&  k  <  31)  {  throw  new  ArithmeticException( "gcd  is  2  >>  31 ");	  int    k    =((    u    &    1)    ==    0    &&    v    &    1)    ==    0    &&    k    <    31)    {    throw    new    ArithmeticException(   "gcd    is    2    >>    31   ");    	non-compiled	[CE]  <identifier>  expected	36	None	replace
25	[BUG]  [BUGGY]  int  k  =((  u  &  1)  ==  0  ||  v  &  1)  ==  0  ||  k  <  31)  {  throw  new  ArithmeticException( "gcd  is  2  >>  31 ");  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are        [BUGGY]  int  k  =((  u  &  1)  ==  0  ||  v  &  1)  ==  0  ||  k  <  31)  {  throw  new  ArithmeticException( "gcd  is  2  >>  31 ");  [BUGGY]      u  /=  2;  v  /=  2;  k++;  //  cast  out  twos.  }  if  (k  ==  31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }    int  t  =  ((u  &  1)  ==  1)  ?  v  :  -(u  /  2)/*  B3  */;  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  short  NS  PS  ZS  boolean  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  k  t  u  v  	projects/Math94/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	430	430	1	replace	int  k  =((  u  &  1)  ==  0  ||  v  &  1)  ==  0  ||  k  <  31)  {  throw  new  ArithmeticException( "gcd  is  2  >>  31 ");	  int    k    =((    u    &    1)    ==    0    &&    v    &    1)    ==    0    &&    k    <    31)    {    throw    new    ArithmeticException(   "gcd    is    2    >>    31   ");    	non-compiled	[CE]  <identifier>  expected	36	None	replace
26	[BUG]  [BUGGY]  int  k  =((  u  &  1)  ==  1  &&  (v  &  1)  ==  1  &&  k  <  32)?  1  :  -(u  /  2)/*  B3  */);  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are        [BUGGY]  int  k  =((  u  &  1)  ==  1  &&  (v  &  1)  ==  1  &&  k  <  32)?  1  :  -(u  /  2)/*  B3  */);  [BUGGY]      u  /=  2;  v  /=  2;  k++;  //  cast  out  twos.  }  if  (k  ==  31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }    int  t  =  ((u  &  1)  ==  1)  ?  v  :  -(u  /  2)/*  B3  */;  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  short  NS  PS  ZS  boolean  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  k  t  u  v  	projects/Math94/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	430	430	1	replace	int  k  =((  u  &  1)  ==  1  &&  (v  &  1)  ==  1  &&  k  <  32)?  1  :  -(u  /  2)/*  B3  */);	  int    k    =((    u    &    1)    ==    1    &&    (v    &    1)    ==    1    &&    k    <    31)?    1    :    -(u    /    2)/*    B3    */);    	non-compiled	[CE]  <identifier>  expected	16	None	replace
27	[BUG]  [BUGGY]  int  k  =((  u  &  1)  ==  1  &&  (v  &  1)  ==  1  &&  k  <  31)?  1  :  -(u  /  2)/  B3  */);  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are        [BUGGY]  int  k  =((  u  &  1)  ==  1  &&  (v  &  1)  ==  1  &&  k  <  31)?  1  :  -(u  /  2)/  B3  */);  [BUGGY]      u  /=  2;  v  /=  2;  k++;  //  cast  out  twos.  }  if  (k  ==  31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }    int  t  =  ((u  &  1)  ==  1)  ?  v  :  -(u  /  2)/*  B3  */;  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  short  NS  PS  ZS  boolean  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  k  t  u  v  	projects/Math94/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	430	430	1	replace	int  k  =((  u  &  1)  ==  1  &&  (v  &  1)  ==  1  &&  k  <  31)?  1  :  -(u  /  2)/  B3  */);	  int    k    =((    u    &    1)    ==    1    &&    (v    &    1)    ==    1    &&    k    <    31)?    1    :    -(u    /    2)/*    B3    */);    	non-compiled	[CE]  <identifier>  expected	16	None	replace
28	[BUG]  [BUGGY]  int  k  =((  u  &  1)  ==  0)?  gcd  :  -(u  /  2)/*  B3  */);  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are        [BUGGY]  int  k  =((  u  &  1)  ==  0)?  gcd  :  -(u  /  2)/*  B3  */);  [BUGGY]      u  /=  2;  v  /=  2;  k++;  //  cast  out  twos.  }  if  (k  ==  31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }    int  t  =  ((u  &  1)  ==  1)  ?  v  :  -(u  /  2)/*  B3  */;  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  short  NS  PS  ZS  boolean  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  k  t  u  v  	projects/Math94/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	430	430	1	replace	int  k  =((  u  &  1)  ==  0)?  gcd  :  -(u  /  2)/*  B3  */);	  int    k    =((    u    &    1)    ==    0    &&    (v    &    1)    ==    0)?    gcd    :    -(u    /    2)/    *    B3    */);    	non-compiled	[CE]  <identifier>  expected	47	None	replace
29	[BUG]  [BUGGY]  u  /=  3;  v  /=  2;  [CE]  <identifier>  expected  [FE]            AssertionFailedError      [CONTEXT]      if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are        [BUGGY]  u  /=  3;  v  /=  2;  [BUGGY]      u  /=  2;  v  /=  2;  k++;  //  cast  out  twos.  }  if  (k  ==  31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }    int  t  =  ((u  &  1)  ==  1)  ?  v  :  -(u  /  2)/*  B3  */;  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  short  NS  PS  ZS  boolean  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  k  t  u  v  	projects/Math94/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	430	430	1	replace	u  /=  3;  v  /=  2;	  u    /=    1;    v    /=    2;    	non-compiled	[CE]  <identifier>  expected	34	None	replace
30	[BUG]  [BUGGY]  int  k  =((  u  &  1)  ==  0  ||  v  &  1)  ==  0  ||  k  <  31)  {  throw  new  ArithmeticException( "overflow:  Gcd  is  2  >=  31 ");  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are        [BUGGY]  int  k  =((  u  &  1)  ==  0  ||  v  &  1)  ==  0  ||  k  <  31)  {  throw  new  ArithmeticException( "overflow:  Gcd  is  2  >=  31 ");  [BUGGY]      u  /=  2;  v  /=  2;  k++;  //  cast  out  twos.  }  if  (k  ==  31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }    int  t  =  ((u  &  1)  ==  1)  ?  v  :  -(u  /  2)/*  B3  */;  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  short  NS  PS  ZS  boolean  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  k  t  u  v  	projects/Math94/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	430	430	1	replace	int  k  =((  u  &  1)  ==  0  ||  v  &  1)  ==  0  ||  k  <  31)  {  throw  new  ArithmeticException( "overflow:  Gcd  is  2  >=  31 ");	  int    k    =((    u    &    1)    ==    0    &&    v    &    1)    ==    0    &&    k    <    31)    {    throw    new    ArithmeticException(   "overflow:    Gcd    is    2    >=    31   ");    	non-compiled	[CE]  <identifier>  expected	22	None	replace
31	[BUG]  [BUGGY]  int  k  =((  u  &  1)  ==  1  ||  v  &  1)  ==  1  ||  k  <  31)  {  throw  new  ArithmeticException( "overflow:  gcd  is  2  >>  31 ");  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are        [BUGGY]  int  k  =((  u  &  1)  ==  1  ||  v  &  1)  ==  1  ||  k  <  31)  {  throw  new  ArithmeticException( "overflow:  gcd  is  2  >>  31 ");  [BUGGY]      u  /=  2;  v  /=  2;  k++;  //  cast  out  twos.  }  if  (k  ==  31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }    int  t  =  ((u  &  1)  ==  1)  ?  v  :  -(u  /  2)/*  B3  */;  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  short  NS  PS  ZS  boolean  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  k  t  u  v  	projects/Math94/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	430	430	1	replace	int  k  =((  u  &  1)  ==  1  ||  v  &  1)  ==  1  ||  k  <  31)  {  throw  new  ArithmeticException( "overflow:  gcd  is  2  >>  31 ");	  int    k    =((    u    &    1)    ==    1    &&    v    &    1)    ==    1    &&    k    <    31)    {    throw    new    ArithmeticException(   "overflow:    gcd    is    2    >>    31   ");    	non-compiled	[CE]  <identifier>  expected	23	None	replace
32	[BUG]  [BUGGY]  int  k  =((  u  &  1)  ==  1  &&  v  &  1)  ==  1  &&  k  <  31)  {  throw  new  ArithmeticException( "overflow:  gcd  is  2  >=  31 ");  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are        [BUGGY]  int  k  =((  u  &  1)  ==  1  &&  v  &  1)  ==  1  &&  k  <  31)  {  throw  new  ArithmeticException( "overflow:  gcd  is  2  >=  31 ");  [BUGGY]      u  /=  2;  v  /=  2;  k++;  //  cast  out  twos.  }  if  (k  ==  31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }    int  t  =  ((u  &  1)  ==  1)  ?  v  :  -(u  /  2)/*  B3  */;  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  short  NS  PS  ZS  boolean  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  k  t  u  v  	projects/Math94/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	430	430	1	replace	int  k  =((  u  &  1)  ==  1  &&  v  &  1)  ==  1  &&  k  <  31)  {  throw  new  ArithmeticException( "overflow:  gcd  is  2  >=  31 ");	  int    k    =((    u    &    1)    ==    1    &&    v    &    1)    ==    1    &&    k    <    31)    {    throw    new    ArithmeticException(   "overflow:    gcd    is    2    >>    31   ");    	non-compiled	[CE]  <identifier>  expected	23	None	replace
33	[BUG]  [BUGGY]  ((  u  &  1)  ==  0  ||(v  &  1)  ==  0  &&  k  <  32));  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are        [BUGGY]  ((  u  &  1)  ==  0  ||(v  &  1)  ==  0  &&  k  <  32));  [BUGGY]      u  /=  2;  v  /=  2;  k++;  //  cast  out  twos.  }  if  (k  ==  31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }    int  t  =  ((u  &  1)  ==  1)  ?  v  :  -(u  /  2)/*  B3  */;  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  short  NS  PS  ZS  boolean  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  k  t  u  v  	projects/Math94/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	430	430	1	replace	((  u  &  1)  ==  0  ||(v  &  1)  ==  0  &&  k  <  32));	  ((    u    &    1)    ==    0    ||(v    &    1)    ==    0    &&    k    <    31));    	non-compiled	[CE]  <identifier>  expected	26	None	replace
34	[BUG]  [BUGGY]  ((  u  &  1)  ==  0  ||(v  &  2)  ==  0  &&  k  <  31));  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are        [BUGGY]  ((  u  &  1)  ==  0  ||(v  &  2)  ==  0  &&  k  <  31));  [BUGGY]      u  /=  2;  v  /=  2;  k++;  //  cast  out  twos.  }  if  (k  ==  31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }    int  t  =  ((u  &  1)  ==  1)  ?  v  :  -(u  /  2)/*  B3  */;  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  short  NS  PS  ZS  boolean  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  k  t  u  v  	projects/Math94/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	430	430	1	replace	((  u  &  1)  ==  0  ||(v  &  2)  ==  0  &&  k  <  31));	  ((    u    &    1)    ==    0    ||(v    &    1)    ==    0    &&    k    <    31));    	non-compiled	[CE]  <identifier>  expected	26	None	replace
35	[BUG]  [BUGGY]  int  k  =((  u  &  1)  ==  0  ||  v  &  1)  ==  0  ||  k  <  31)  {  throw  new  ArithmeticException( "overflow:  gcd  is  2  >=  31 ");  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are        [BUGGY]  int  k  =((  u  &  1)  ==  0  ||  v  &  1)  ==  0  ||  k  <  31)  {  throw  new  ArithmeticException( "overflow:  gcd  is  2  >=  31 ");  [BUGGY]      u  /=  2;  v  /=  2;  k++;  //  cast  out  twos.  }  if  (k  ==  31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }    int  t  =  ((u  &  1)  ==  1)  ?  v  :  -(u  /  2)/*  B3  */;  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  short  NS  PS  ZS  boolean  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  k  t  u  v  	projects/Math94/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	430	430	1	replace	int  k  =((  u  &  1)  ==  0  ||  v  &  1)  ==  0  ||  k  <  31)  {  throw  new  ArithmeticException( "overflow:  gcd  is  2  >=  31 ");	  int    k    =((    u    &    1)    ==    0    ||    v    &    1)    ==    0    ||    k    <    31)    {    throw    new    ArithmeticException(   "overflow:    gcd    is    2    >>    31   ");    	non-compiled	[CE]  <identifier>  expected	24	None	replace
36	[BUG]  [BUGGY]  int  k  =((  u  &  1)  ==  0  &&  v  &  1)  ==  0  ||  k  <  31)  {  throw  new  ArithmeticException( "overflow:  gcd  is  2  >>  31 ");  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are        [BUGGY]  int  k  =((  u  &  1)  ==  0  &&  v  &  1)  ==  0  ||  k  <  31)  {  throw  new  ArithmeticException( "overflow:  gcd  is  2  >>  31 ");  [BUGGY]      u  /=  2;  v  /=  2;  k++;  //  cast  out  twos.  }  if  (k  ==  31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }    int  t  =  ((u  &  1)  ==  1)  ?  v  :  -(u  /  2)/*  B3  */;  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  short  NS  PS  ZS  boolean  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  k  t  u  v  	projects/Math94/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	430	430	1	replace	int  k  =((  u  &  1)  ==  0  &&  v  &  1)  ==  0  ||  k  <  31)  {  throw  new  ArithmeticException( "overflow:  gcd  is  2  >>  31 ");	  int    k    =((    u    &    1)    ==    0    ||    v    &    1)    ==    0    ||    k    <    31)    {    throw    new    ArithmeticException(   "overflow:    gcd    is    2    >>    31   ");    	non-compiled	[CE]  <identifier>  expected	24	None	replace
37	[BUG]  [BUGGY]  u  /=  4;  v  /=  2;  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are        [BUGGY]  u  /=  4;  v  /=  2;  [BUGGY]      u  /=  2;  v  /=  2;  k++;  //  cast  out  twos.  }  if  (k  ==  31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }    int  t  =  ((u  &  1)  ==  1)  ?  v  :  -(u  /  2)/*  B3  */;  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  short  NS  PS  ZS  boolean  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  k  t  u  v  	projects/Math94/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	430	430	1	replace	u  /=  4;  v  /=  2;	  u    /=    4;    v    /=    4;    	non-compiled	[CE]  <identifier>  expected	19	None	replace
38	[BUG]  [BUGGY]  int  k  =  ((  u  &  1)  ==  0  &&  k  <  31)?  v  :  -(u  /  2)/  B3  */);  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are        [BUGGY]  int  k  =  ((  u  &  1)  ==  0  &&  k  <  31)?  v  :  -(u  /  2)/  B3  */);  [BUGGY]      v  /=  2;  k++;  //  cast  out  twos.  }  if  (k  ==  31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }    int  t  =  ((u  &  1)  ==  1)  ?  v  :  -(u  /  2)/*  B3  */;  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  short  NS  PS  ZS  boolean  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  k  t  u  v  	projects/Math94/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	430	430	1	replace	int  k  =  ((  u  &  1)  ==  0  &&  k  <  31)?  v  :  -(u  /  2)/  B3  */);	  int    k    =    ((    u    &    1)    ==    0    &&    k    <    31)?    v    :    -(u    /    2)/*    B3    */);    	non-compiled	[CE]  <identifier>  expected	5	None	replace
39	[BUG]  [BUGGY]  int  k  =  ((  u  &  1)  ==  1  &&  k  <  31)?  v  :  -(u  /  2)/*  B3  */);  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]      if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are        [BUGGY]  int  k  =  ((  u  &  1)  ==  1  &&  k  <  31)?  v  :  -(u  /  2)/*  B3  */);  [BUGGY]      v  /=  2;  k++;  //  cast  out  twos.  }  if  (k  ==  31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }    int  t  =  ((u  &  1)  ==  1)  ?  v  :  -(u  /  2)/*  B3  */;  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  short  NS  PS  ZS  boolean  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  k  t  u  v  	projects/Math94/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	430	430	1	replace	int  k  =  ((  u  &  1)  ==  1  &&  k  <  31)?  v  :  -(u  /  2)/*  B3  */);	  int    k    =    ((    u    &    1)    ==    0    &&    k    <    31)?    v    :    -(u    /    2)/*    B3    */);    	non-compiled	[CE]  <identifier>  expected	5	None	replace
40	[BUG]  [BUGGY]  ((  u  &  1)  ==  0  &&  k  <  31)?  t  :  -(u  /  2)/  B3  */);  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are        [BUGGY]  ((  u  &  1)  ==  0  &&  k  <  31)?  t  :  -(u  /  2)/  B3  */);  [BUGGY]      v  /=  2;  k++;  //  cast  out  twos.  }  if  (k  ==  31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }    int  t  =  ((u  &  1)  ==  1)  ?  v  :  -(u  /  2)/*  B3  */;  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  short  NS  PS  ZS  boolean  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  k  t  u  v  	projects/Math94/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	430	430	1	replace	((  u  &  1)  ==  0  &&  k  <  31)?  t  :  -(u  /  2)/  B3  */);	  ((    u    &    1)    ==    0    &&    k    <    31)?    t    :    -(u    /    2)/*    B3    */);    	non-compiled	[CE]  <identifier>  expected	4	None	replace
41	[BUG]  [BUGGY]  int  k  =((  u  &  1)  ==  0  &&  v  <  31)  {  throw  new  ArithmeticException( "overflow:  gcd  is  2  >>  31 ");  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are        [BUGGY]  int  k  =((  u  &  1)  ==  0  &&  v  <  31)  {  throw  new  ArithmeticException( "overflow:  gcd  is  2  >>  31 ");  [BUGGY]      u  /=  2;  v  /=  2;  k++;  //  cast  out  twos.  }  if  (k  ==  31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }    int  t  =  ((u  &  1)  ==  1)  ?  v  :  -(u  /  2)/*  B3  */;  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  short  NS  PS  ZS  boolean  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  k  t  u  v  	projects/Math94/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	430	430	1	replace	int  k  =((  u  &  1)  ==  0  &&  v  <  31)  {  throw  new  ArithmeticException( "overflow:  gcd  is  2  >>  31 ");	  int    k    =((    u    &    1)    ==    0    &&    (v    &    1)    ==    0    &&    k    <    31)    {    throw    new    ArithmeticException(   "overflow:    gcd    is    2    >>    31   ");    	non-compiled	[CE]  <identifier>  expected	40	None	replace
42	[BUG]  [BUGGY]  int  k  =((  u  &  1)  ==  1  &&  v  <  31)  {  throw  new  ArithmeticException( "overflow:  gcd  is  2  >>  31 ");  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are        [BUGGY]  int  k  =((  u  &  1)  ==  1  &&  v  <  31)  {  throw  new  ArithmeticException( "overflow:  gcd  is  2  >>  31 ");  [BUGGY]      u  /=  2;  v  /=  2;  k++;  //  cast  out  twos.  }  if  (k  ==  31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }    int  t  =  ((u  &  1)  ==  1)  ?  v  :  -(u  /  2)/*  B3  */;  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  short  NS  PS  ZS  boolean  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  k  t  u  v  	projects/Math94/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	430	430	1	replace	int  k  =((  u  &  1)  ==  1  &&  v  <  31)  {  throw  new  ArithmeticException( "overflow:  gcd  is  2  >>  31 ");	  int    k    =((    u    &    1)    ==    0    &&    (v    &    1)    ==    0    &&    k    <    31)    {    throw    new    ArithmeticException(   "overflow:    gcd    is    2    >>    31   ");    	non-compiled	[CE]  <identifier>  expected	40	None	replace
43	[BUG]  [BUGGY]  int  k  =((  u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  throw  new  ArithmeticException( "overflow:  gcd  is  2  >=  31 ");  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are        [BUGGY]  int  k  =((  u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  throw  new  ArithmeticException( "overflow:  gcd  is  2  >=  31 ");  [BUGGY]      u  /=  2;  v  /=  2;  k++;  //  cast  out  twos.  }  if  (k  ==  31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }    int  t  =  ((u  &  1)  ==  1)  ?  v  :  -(u  /  2)/*  B3  */;  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  short  NS  PS  ZS  boolean  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  k  t  u  v  	projects/Math94/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	430	430	1	replace	int  k  =((  u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  throw  new  ArithmeticException( "overflow:  gcd  is  2  >=  31 ");	  int    k    =((    u    &    1)    ==    0    &&    (v    &    1)    ==    0    &&    k    <    31)    {    throw    new    ArithmeticException(   "overflow:    gcd    is    2    >>    31   ");    	non-compiled	[CE]  <identifier>  expected	40	None	replace
44	[BUG]  [BUGGY]  ((  u  &  1)  ==  0  &&(v  &  1)  ==  0  &&  k  <  31))  {  throw  new  ArithmeticException( "gcd  is  2  >=  31 ");  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are        [BUGGY]  ((  u  &  1)  ==  0  &&(v  &  1)  ==  0  &&  k  <  31))  {  throw  new  ArithmeticException( "gcd  is  2  >=  31 ");  [BUGGY]      u  /=  2;  v  /=  2;  k++;  //  cast  out  twos.  }  if  (k  ==  31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }    int  t  =  ((u  &  1)  ==  1)  ?  v  :  -(u  /  2)/*  B3  */;  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  short  NS  PS  ZS  boolean  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  k  t  u  v  	projects/Math94/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	430	430	1	replace	((  u  &  1)  ==  0  &&(v  &  1)  ==  0  &&  k  <  31))  {  throw  new  ArithmeticException( "gcd  is  2  >=  31 ");	  ((    u    &    1)    ==    0    &&(v    &    1)    ==    0    &&    k    <    31))    {    throw    new    ArithmeticException(   "gcd    is    2    >>    31   ");    	non-compiled	[CE]  <identifier>  expected	42	None	replace
45	[BUG]  [BUGGY]  ((  u  &  1)  ==  0  &&  (v  &  2)  ==  0)||  k  <  31));  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are        [BUGGY]  ((  u  &  1)  ==  0  &&  (v  &  2)  ==  0)||  k  <  31));  [BUGGY]      u  /=  2;  v  /=  2;  k++;  //  cast  out  twos.  }  if  (k  ==  31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }    int  t  =  ((u  &  1)  ==  1)  ?  v  :  -(u  /  2)/*  B3  */;  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  short  NS  PS  ZS  boolean  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  k  t  u  v  	projects/Math94/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	430	430	1	replace	((  u  &  1)  ==  0  &&  (v  &  2)  ==  0)||  k  <  31));	  ((    u    &    1)    ==    0    &&    (v    &    2)    ==    0    &&    k    <    31));    	non-compiled	[CE]  <identifier>  expected	14	None	replace
46	[BUG]  [BUGGY]  int  k  =((  u  &  1)  ==  0  &&  (v  &  1)  ==  0)?  1  :  -(u  /  2)/  B3  */);  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are        [BUGGY]  int  k  =((  u  &  1)  ==  0  &&  (v  &  1)  ==  0)?  1  :  -(u  /  2)/  B3  */);  [BUGGY]      u  /=  2;  v  /=  2;  k++;  //  cast  out  twos.  }  if  (k  ==  31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }    int  t  =  ((u  &  1)  ==  1)  ?  v  :  -(u  /  2)/*  B3  */;  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  short  NS  PS  ZS  boolean  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  k  t  u  v  	projects/Math94/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	430	430	1	replace	int  k  =((  u  &  1)  ==  0  &&  (v  &  1)  ==  0)?  1  :  -(u  /  2)/  B3  */);	  int    k    =((    u    &    1)    ==    0    &&    (v    &    1)    ==    0    &&    k    <    31)?    1    :    -(u    /    2)/    B3    */);    	non-compiled	[CE]  <identifier>  expected	49	None	replace
47	[BUG]  [BUGGY]  int  k  =((  u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  32)?  1  :  -(u  /  2)/  B3  */);  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are        [BUGGY]  int  k  =((  u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  32)?  1  :  -(u  /  2)/  B3  */);  [BUGGY]      u  /=  2;  v  /=  2;  k++;  //  cast  out  twos.  }  if  (k  ==  31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }    int  t  =  ((u  &  1)  ==  1)  ?  v  :  -(u  /  2)/*  B3  */;  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  short  NS  PS  ZS  boolean  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  k  t  u  v  	projects/Math94/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	430	430	1	replace	int  k  =((  u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  32)?  1  :  -(u  /  2)/  B3  */);	  int    k    =((    u    &    1)    ==    0    &&    (v    &    1)    ==    0    &&    k    <    31)?    1    :    -(u    /    2)/    B3    */);    	non-compiled	[CE]  <identifier>  expected	49	None	replace
48	[BUG]  [BUGGY]  int  k  =((  u  &  1)  ==  1  &&  (v  &  1)  ==  1  &&  k  <  32)?  gcd  :  -(u  /  2)/*  B3  */);  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are        [BUGGY]  int  k  =((  u  &  1)  ==  1  &&  (v  &  1)  ==  1  &&  k  <  32)?  gcd  :  -(u  /  2)/*  B3  */);  [BUGGY]      u  /=  2;  v  /=  2;  k++;  //  cast  out  twos.  }  if  (k  ==  31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }    int  t  =  ((u  &  1)  ==  1)  ?  v  :  -(u  /  2)/*  B3  */;  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  short  NS  PS  ZS  boolean  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  k  t  u  v  	projects/Math94/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	430	430	1	replace	int  k  =((  u  &  1)  ==  1  &&  (v  &  1)  ==  1  &&  k  <  32)?  gcd  :  -(u  /  2)/*  B3  */);	  int    k    =((    u    &    1)    ==    0    &&    (v    &    1)    ==    0    &&    k    <    32)?    gcd    :    -(u    /    2)/*    B3    */);    	non-compiled	[CE]  <identifier>  expected	32	None	replace
49	[BUG]  [BUGGY]  ((  u  &  1)  ==  0  &&(v  &  1)  ==  0  &&  k  <  31))  {  throw  new  ArithmeticException( "overflow:  gcd  is  2  >=  31 ");  }  [CE]  <identifier>  expected  [FE]            AssertionFailedError      [CONTEXT]      if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are        [BUGGY]  ((  u  &  1)  ==  0  &&(v  &  1)  ==  0  &&  k  <  31))  {  throw  new  ArithmeticException( "overflow:  gcd  is  2  >=  31 ");  }  [BUGGY]      u  /=  2;  v  /=  2;  k++;  //  cast  out  twos.  }  if  (k  ==  31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }    int  t  =  ((u  &  1)  ==  1)  ?  v  :  -(u  /  2)/*  B3  */;  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  short  NS  PS  ZS  boolean  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  k  t  u  v  	projects/Math94/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	430	430	1	replace	((  u  &  1)  ==  0  &&(v  &  1)  ==  0  &&  k  <  31))  {  throw  new  ArithmeticException( "overflow:  gcd  is  2  >=  31 ");  }	  ((    u    &    1)    ==    0    &&(v    &    1)    ==    0    &&    k    <    31))    {    throw    new    ArithmeticException(   "overflow:    gcd    is    2    >>    31   ");    }    	non-compiled	[CE]  <identifier>  expected	41	None	replace
50	[BUG]  [BUGGY]  ((  u  &  1)  ==  0  &&(v  &  2)  ==  0  &&  k  <  31))  {  throw  new  ArithmeticException( "overflow:  gcd  is  2  >>  31 ");  }  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are        [BUGGY]  ((  u  &  1)  ==  0  &&(v  &  2)  ==  0  &&  k  <  31))  {  throw  new  ArithmeticException( "overflow:  gcd  is  2  >>  31 ");  }  [BUGGY]      u  /=  2;  v  /=  2;  k++;  //  cast  out  twos.  }  if  (k  ==  31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }    int  t  =  ((u  &  1)  ==  1)  ?  v  :  -(u  /  2)/*  B3  */;  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  short  NS  PS  ZS  boolean  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  k  t  u  v  	projects/Math94/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	430	430	1	replace	((  u  &  1)  ==  0  &&(v  &  2)  ==  0  &&  k  <  31))  {  throw  new  ArithmeticException( "overflow:  gcd  is  2  >>  31 ");  }	  ((    u    &    1)    ==    0    &&(v    &    1)    ==    0    &&    k    <    31))    {    throw    new    ArithmeticException(   "overflow:    gcd    is    2    >>    31   ");    }    	non-compiled	[CE]  <identifier>  expected	41	None	replace
51	[BUG]  [BUGGY]  ((  u  &  1)  ==  0  &&(v  &  1)  ==  0)  &&  k  <  31))  {  throw  new  ArithmeticException( "overflow:  gcd  is  2  >=  31 ");  [CE]  <identifier>  expected  [FE]            AssertionFailedError      [CONTEXT]      if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are        [BUGGY]  ((  u  &  1)  ==  0  &&(v  &  1)  ==  0)  &&  k  <  31))  {  throw  new  ArithmeticException( "overflow:  gcd  is  2  >=  31 ");  [BUGGY]      u  /=  2;  v  /=  2;  k++;  //  cast  out  twos.  }  if  (k  ==  31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }    int  t  =  ((u  &  1)  ==  1)  ?  v  :  -(u  /  2)/*  B3  */;  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  short  NS  PS  ZS  boolean  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  k  t  u  v  	projects/Math94/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	430	430	1	replace	((  u  &  1)  ==  0  &&(v  &  1)  ==  0)  &&  k  <  31))  {  throw  new  ArithmeticException( "overflow:  gcd  is  2  >=  31 ");	  ((    u    &    1)    ==    0    &&(v    &    1)    ==    0)&&    k    <    31))    {    throw    new    ArithmeticException(   "overflow:    gcd    is    2    >>    31   ");    	non-compiled	[CE]  <identifier>  expected	54	None	replace
52	[BUG]  [BUGGY]  ((  u  &  1)  ==  0  &&(v  &  1)  ==  0)  &&  k  <  31))  {  throw  new  ArithmeticException( "Overflow:  gcd  is  2  >>  31 ");  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are        [BUGGY]  ((  u  &  1)  ==  0  &&(v  &  1)  ==  0)  &&  k  <  31))  {  throw  new  ArithmeticException( "Overflow:  gcd  is  2  >>  31 ");  [BUGGY]      u  /=  2;  v  /=  2;  k++;  //  cast  out  twos.  }  if  (k  ==  31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }    int  t  =  ((u  &  1)  ==  1)  ?  v  :  -(u  /  2)/*  B3  */;  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  short  NS  PS  ZS  boolean  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  k  t  u  v  	projects/Math94/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	430	430	1	replace	((  u  &  1)  ==  0  &&(v  &  1)  ==  0)  &&  k  <  31))  {  throw  new  ArithmeticException( "Overflow:  gcd  is  2  >>  31 ");	  ((    u    &    1)    ==    0    &&(v    &    1)    ==    0)&&    k    <    31))    {    throw    new    ArithmeticException(   "overflow:    gcd    is    2    >>    31   ");    	non-compiled	[CE]  <identifier>  expected	54	None	replace
53	[BUG]  [BUGGY]  u  /=  3;  v  /=  4;  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are        [BUGGY]  u  /=  3;  v  /=  4;  [BUGGY]      u  /=  2;  v  /=  2;  k++;  //  cast  out  twos.  }  if  (k  ==  31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }    int  t  =  ((u  &  1)  ==  1)  ?  v  :  -(u  /  2)/*  B3  */;  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  short  NS  PS  ZS  boolean  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  k  t  u  v  	projects/Math94/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	430	430	1	replace	u  /=  3;  v  /=  4;	  u    /=    2;    v    /=    4;    	non-compiled	[CE]  <identifier>  expected	18	None	replace
54	[BUG]  [BUGGY]  ((  u  &  1)  ==  0  &&(v  &  1)  ==  0  &&  k  <  31))  {  throw  new  ArithmeticException( "Overflow:  gcd  is  2  >=  31 ");  }  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are        [BUGGY]  ((  u  &  1)  ==  0  &&(v  &  1)  ==  0  &&  k  <  31))  {  throw  new  ArithmeticException( "Overflow:  gcd  is  2  >=  31 ");  }  [BUGGY]      u  /=  2;  v  /=  2;  k++;  //  cast  out  twos.  }  if  (k  ==  31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }    int  t  =  ((u  &  1)  ==  1)  ?  v  :  -(u  /  2)/*  B3  */;  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  short  NS  PS  ZS  boolean  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  k  t  u  v  	projects/Math94/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	430	430	1	replace	((  u  &  1)  ==  0  &&(v  &  1)  ==  0  &&  k  <  31))  {  throw  new  ArithmeticException( "Overflow:  gcd  is  2  >=  31 ");  }	  ((    u    &    1)    ==    0    &&(v    &    1)    ==    0    &&    k    <    31))    {    throw    new    ArithmeticException(   "Overflow:    gcd    is    2    >>    31   ");    }    	non-compiled	[CE]  <identifier>  expected	43	None	replace
55	[BUG]  [BUGGY]  ((  u  &  1)  ==  0  &&(v  &  2)  ==  0  &&  k  <  31))  {  throw  new  ArithmeticException( "Overflow:  gcd  is  2  >>  31 ");  }  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are        [BUGGY]  ((  u  &  1)  ==  0  &&(v  &  2)  ==  0  &&  k  <  31))  {  throw  new  ArithmeticException( "Overflow:  gcd  is  2  >>  31 ");  }  [BUGGY]      u  /=  2;  v  /=  2;  k++;  //  cast  out  twos.  }  if  (k  ==  31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }    int  t  =  ((u  &  1)  ==  1)  ?  v  :  -(u  /  2)/*  B3  */;  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  short  NS  PS  ZS  boolean  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  k  t  u  v  	projects/Math94/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	430	430	1	replace	((  u  &  1)  ==  0  &&(v  &  2)  ==  0  &&  k  <  31))  {  throw  new  ArithmeticException( "Overflow:  gcd  is  2  >>  31 ");  }	  ((    u    &    1)    ==    0    &&(v    &    1)    ==    0    &&    k    <    31))    {    throw    new    ArithmeticException(   "Overflow:    gcd    is    2    >>    31   ");    }    	non-compiled	[CE]  <identifier>  expected	43	None	replace
56	[BUG]  [BUGGY]  int  k  =((  u  &  1)  ==  1  &&  v  &  2)  ==  1  &&  k  <  31)  {  throw  new  ArithmeticException( "Overflow:  Gcd  is  2  >>  31 ");  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are        [BUGGY]  int  k  =((  u  &  1)  ==  1  &&  v  &  2)  ==  1  &&  k  <  31)  {  throw  new  ArithmeticException( "Overflow:  Gcd  is  2  >>  31 ");  [BUGGY]      u  /=  2;  v  /=  2;  k++;  //  cast  out  twos.  }  if  (k  ==  31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }    int  t  =  ((u  &  1)  ==  1)  ?  v  :  -(u  /  2)/*  B3  */;  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  short  NS  PS  ZS  boolean  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  k  t  u  v  	projects/Math94/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	430	430	1	replace	int  k  =((  u  &  1)  ==  1  &&  v  &  2)  ==  1  &&  k  <  31)  {  throw  new  ArithmeticException( "Overflow:  Gcd  is  2  >>  31 ");	  int    k    =((    u    &    1)    ==    0    &&    v    &    2)    ==    0    &&    k    <    31)    {    throw    new    ArithmeticException(   "Overflow:    Gcd    is    2    >>    31   ");    	non-compiled	[CE]  <identifier>  expected	30	None	replace
57	[BUG]  [BUGGY]  int  k  =((  u  &  1)  ==  0  &&  v  /  2)  ==  0  &&  k  <  31)  {  throw  new  ArithmeticException( "Overflow:  Gcd  is  2  >>  31 ");  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are        [BUGGY]  int  k  =((  u  &  1)  ==  0  &&  v  /  2)  ==  0  &&  k  <  31)  {  throw  new  ArithmeticException( "Overflow:  Gcd  is  2  >>  31 ");  [BUGGY]      u  /=  2;  v  /=  2;  k++;  //  cast  out  twos.  }  if  (k  ==  31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }    int  t  =  ((u  &  1)  ==  1)  ?  v  :  -(u  /  2)/*  B3  */;  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  short  NS  PS  ZS  boolean  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  k  t  u  v  	projects/Math94/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	430	430	1	replace	int  k  =((  u  &  1)  ==  0  &&  v  /  2)  ==  0  &&  k  <  31)  {  throw  new  ArithmeticException( "Overflow:  Gcd  is  2  >>  31 ");	  int    k    =((    u    &    1)    ==    0    &&    v    &    2)    ==    0    &&    k    <    31)    {    throw    new    ArithmeticException(   "Overflow:    Gcd    is    2    >>    31   ");    	non-compiled	[CE]  <identifier>  expected	30	None	replace
58	[BUG]  [BUGGY]  int  k  =((  u  &  1)  ==  1  &&  v  &  1)  ==  1  &&  k  <  31)  {  throw  new  ArithmeticException( "overflow:  Gcd  is  2  >>  31 ");  }  [CE]  <identifier>  expected  [FE]            AssertionFailedError      [CONTEXT]      if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are        [BUGGY]  int  k  =((  u  &  1)  ==  1  &&  v  &  1)  ==  1  &&  k  <  31)  {  throw  new  ArithmeticException( "overflow:  Gcd  is  2  >>  31 ");  }  [BUGGY]      u  /=  2;  v  /=  2;  k++;  //  cast  out  twos.  }  if  (k  ==  31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }    int  t  =  ((u  &  1)  ==  1)  ?  v  :  -(u  /  2)/*  B3  */;  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  short  NS  PS  ZS  boolean  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  k  t  u  v  	projects/Math94/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	430	430	1	replace	int  k  =((  u  &  1)  ==  1  &&  v  &  1)  ==  1  &&  k  <  31)  {  throw  new  ArithmeticException( "overflow:  Gcd  is  2  >>  31 ");  }	  int    k    =((    u    &    1)    ==    0    &&    v    &    1)    ==    0    &&    k    <    31)    {    throw    new    ArithmeticException(   "overflow:    Gcd    is    2    >>    31   ");    }    	non-compiled	[CE]  <identifier>  expected	45	None	replace
59	[BUG]  [BUGGY]  int  k  =((  u  &  1)  ==  0  &&  v  &  1)  ==  0  &&  k  <  31)  {  throw  new  ArithmeticException( "overflow:  Gcd  is  2  >=  31 ");  }  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are        [BUGGY]  int  k  =((  u  &  1)  ==  0  &&  v  &  1)  ==  0  &&  k  <  31)  {  throw  new  ArithmeticException( "overflow:  Gcd  is  2  >=  31 ");  }  [BUGGY]      u  /=  2;  v  /=  2;  k++;  //  cast  out  twos.  }  if  (k  ==  31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }    int  t  =  ((u  &  1)  ==  1)  ?  v  :  -(u  /  2)/*  B3  */;  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  short  NS  PS  ZS  boolean  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  k  t  u  v  	projects/Math94/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	430	430	1	replace	int  k  =((  u  &  1)  ==  0  &&  v  &  1)  ==  0  &&  k  <  31)  {  throw  new  ArithmeticException( "overflow:  Gcd  is  2  >=  31 ");  }	  int    k    =((    u    &    1)    ==    0    &&    v    &    1)    ==    0    &&    k    <    31)    {    throw    new    ArithmeticException(   "overflow:    Gcd    is    2    >>    31   ");    }    	non-compiled	[CE]  <identifier>  expected	45	None	replace
60	[BUG]  [BUGGY]  int  k  =((  u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  throw  new  ArithmeticException( "overflow:  Gcd  is  2  >>  31 ");  }  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are        [BUGGY]  int  k  =((  u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  throw  new  ArithmeticException( "overflow:  Gcd  is  2  >>  31 ");  }  [BUGGY]      u  /=  2;  v  /=  2;  k++;  //  cast  out  twos.  }  if  (k  ==  31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }    int  t  =  ((u  &  1)  ==  1)  ?  v  :  -(u  /  2)/*  B3  */;  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  short  NS  PS  ZS  boolean  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  k  t  u  v  	projects/Math94/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	430	430	1	replace	int  k  =((  u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  throw  new  ArithmeticException( "overflow:  Gcd  is  2  >>  31 ");  }	  int    k    =((    u    &    1)    ==    0    &&    v    &    1)    ==    0    &&    k    <    31)    {    throw    new    ArithmeticException(   "overflow:    Gcd    is    2    >>    31   ");    }    	non-compiled	[CE]  <identifier>  expected	45	None	replace
61	[BUG]  [BUGGY]  ((  u  &  1)  ==  0  &&  (v  &  1)  ==  0)?  t  :  -(u  /  2)/*  B3  */);  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are        [BUGGY]  ((  u  &  1)  ==  0  &&  (v  &  1)  ==  0)?  t  :  -(u  /  2)/*  B3  */);  [BUGGY]      u  /=  2;  v  /=  2;  k++;  //  cast  out  twos.  }  if  (k  ==  31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }    int  t  =  ((u  &  1)  ==  1)  ?  v  :  -(u  /  2)/*  B3  */;  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  short  NS  PS  ZS  boolean  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  k  t  u  v  	projects/Math94/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	430	430	1	replace	((  u  &  1)  ==  0  &&  (v  &  1)  ==  0)?  t  :  -(u  /  2)/*  B3  */);	  ((    u    &    1)    ==    0    &&    (v    &    1)    ==    0    &&    31)?    t    :    -(u    /    2)/*    B3    */);    	non-compiled	[CE]  <identifier>  expected	9	None	replace
62	[BUG]  [BUGGY]  ((  u  &  1)  ==  0  &&  31)?  t  :  -(u  /  2)/*  B3  */);  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are        [BUGGY]  ((  u  &  1)  ==  0  &&  31)?  t  :  -(u  /  2)/*  B3  */);  [BUGGY]      u  /=  2;  v  /=  2;  k++;  //  cast  out  twos.  }  if  (k  ==  31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }    int  t  =  ((u  &  1)  ==  1)  ?  v  :  -(u  /  2)/*  B3  */;  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  short  NS  PS  ZS  boolean  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  k  t  u  v  	projects/Math94/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	430	430	1	replace	((  u  &  1)  ==  0  &&  31)?  t  :  -(u  /  2)/*  B3  */);	  ((    u    &    1)    ==    0    &&    (v    &    1)    ==    0    &&    31)?    t    :    -(u    /    2)/*    B3    */);    	non-compiled	[CE]  <identifier>  expected	9	None	replace
63	[BUG]  [BUGGY]  ((  u  &  1)  ==  1)?  v  :  -(u  /  2)/  B3  */);  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are        [BUGGY]  ((  u  &  1)  ==  1)?  v  :  -(u  /  2)/  B3  */);  [BUGGY]      v  /=  2;  k++;  //  cast  out  twos.  }  if  (k  ==  31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }    int  t  =  ((u  &  1)  ==  1)  ?  v  :  -(u  /  2)/*  B3  */;  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  short  NS  PS  ZS  boolean  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  k  t  u  v  	projects/Math94/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	430	430	1	replace	((  u  &  1)  ==  1)?  v  :  -(u  /  2)/  B3  */);	  ((    u    &    1)    ==    1)?    v    :    -(u    /    2)/*    B3    */);    	non-compiled	[CE]  <identifier>  expected	38	None	replace
64	[BUG]  [BUGGY]  ((  u  &  1)  ==  1)?  v  :  -(u  /  2)/  2);  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are        [BUGGY]  ((  u  &  1)  ==  1)?  v  :  -(u  /  2)/  2);  [BUGGY]      v  /=  2;  k++;  //  cast  out  twos.  }  if  (k  ==  31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }    int  t  =  ((u  &  1)  ==  1)  ?  v  :  -(u  /  2)/*  B3  */;  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  short  NS  PS  ZS  boolean  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  k  t  u  v  	projects/Math94/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	430	430	1	replace	((  u  &  1)  ==  1)?  v  :  -(u  /  2)/  2);	  ((    u    &    1)    ==    1)?    v    :    -(u    /    2)/*    B3    */);    	non-compiled	[CE]  <identifier>  expected	38	None	replace
65	[BUG]  [BUGGY]  ((  u  &  1)  ==  0  &&(v  &  2)  ==  0)&&  k  <  31))  {  throw  new  ArithmeticException( "Overflow:  gcd  is  2  >>  31 ");  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are        [BUGGY]  ((  u  &  1)  ==  0  &&(v  &  2)  ==  0)&&  k  <  31))  {  throw  new  ArithmeticException( "Overflow:  gcd  is  2  >>  31 ");  [BUGGY]      u  /=  2;  v  /=  2;  k++;  //  cast  out  twos.  }  if  (k  ==  31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }    int  t  =  ((u  &  1)  ==  1)  ?  v  :  -(u  /  2)/*  B3  */;  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  short  NS  PS  ZS  boolean  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  k  t  u  v  	projects/Math94/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	430	430	1	replace	((  u  &  1)  ==  0  &&(v  &  2)  ==  0)&&  k  <  31))  {  throw  new  ArithmeticException( "Overflow:  gcd  is  2  >>  31 ");	  ((    u    &    1)    ==    0    &&(v    &    2)    ==    0    &&    k    <    31))    {    throw    new    ArithmeticException(   "Overflow:    gcd    is    2    >>    31   ");    	non-compiled	[CE]  <identifier>  expected	44	None	replace
66	[BUG]  [BUGGY]  ((  u  &  1)  ==  0  &&(v  &  2)  ==  0  &&  k  <  31))  {  throw  new  ArithmeticException( "Overflow:  gcd  is  2  >=  31 ");  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are        [BUGGY]  ((  u  &  1)  ==  0  &&(v  &  2)  ==  0  &&  k  <  31))  {  throw  new  ArithmeticException( "Overflow:  gcd  is  2  >=  31 ");  [BUGGY]      u  /=  2;  v  /=  2;  k++;  //  cast  out  twos.  }  if  (k  ==  31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }    int  t  =  ((u  &  1)  ==  1)  ?  v  :  -(u  /  2)/*  B3  */;  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  short  NS  PS  ZS  boolean  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  k  t  u  v  	projects/Math94/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	430	430	1	replace	((  u  &  1)  ==  0  &&(v  &  2)  ==  0  &&  k  <  31))  {  throw  new  ArithmeticException( "Overflow:  gcd  is  2  >=  31 ");	  ((    u    &    1)    ==    0    &&(v    &    2)    ==    0    &&    k    <    31))    {    throw    new    ArithmeticException(   "Overflow:    gcd    is    2    >>    31   ");    	non-compiled	[CE]  <identifier>  expected	44	None	replace
67	[BUG]  [BUGGY]  ((  u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  31)?  t  :  -(u  /  2)/  B3  */);  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are        [BUGGY]  ((  u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  31)?  t  :  -(u  /  2)/  B3  */);  [BUGGY]      u  /=  2;  v  /=  2;  k++;  //  cast  out  twos.  }  if  (k  ==  31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }    int  t  =  ((u  &  1)  ==  1)  ?  v  :  -(u  /  2)/*  B3  */;  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  short  NS  PS  ZS  boolean  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  k  t  u  v  	projects/Math94/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	430	430	1	replace	((  u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  31)?  t  :  -(u  /  2)/  B3  */);	  ((    u    &    1)    ==    0    &&    (v    &    1)    ==    0    &&    k    <    31)?    t    :    -(u    /    2)/    B3    */);    	non-compiled	[CE]  <identifier>  expected	10	None	replace
68	[BUG]  [BUGGY]  ((  u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  32)?  t  :  -(u  /  2)/  B3  */);  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are        [BUGGY]  ((  u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  32)?  t  :  -(u  /  2)/  B3  */);  [BUGGY]      u  /=  2;  v  /=  2;  k++;  //  cast  out  twos.  }  if  (k  ==  31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }    int  t  =  ((u  &  1)  ==  1)  ?  v  :  -(u  /  2)/*  B3  */;  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  short  NS  PS  ZS  boolean  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  k  t  u  v  	projects/Math94/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	430	430	1	replace	((  u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  32)?  t  :  -(u  /  2)/  B3  */);	  ((    u    &    1)    ==    0    &&    (v    &    1)    ==    0    &&    k    <    31)?    t    :    -(u    /    2)/    B3    */);    	non-compiled	[CE]  <identifier>  expected	10	None	replace
69	[BUG]  [BUGGY]  ((  u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)?  t  :  -(u  /  2)/  4  */);  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are        [BUGGY]  ((  u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)?  t  :  -(u  /  2)/  4  */);  [BUGGY]      u  /=  2;  v  /=  2;  k++;  //  cast  out  twos.  }  if  (k  ==  31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }    int  t  =  ((u  &  1)  ==  1)  ?  v  :  -(u  /  2)/*  B3  */;  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  short  NS  PS  ZS  boolean  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  k  t  u  v  	projects/Math94/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	430	430	1	replace	((  u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)?  t  :  -(u  /  2)/  4  */);	  ((    u    &    1)    ==    0    &&    (v    &    1)    ==    0    &&    k    <    31)?    t    :    -(u    /    2)/    B3    */);    	non-compiled	[CE]  <identifier>  expected	10	None	replace
70	[BUG]  [BUGGY]  int  k  =((  u  &  1)  ==  0  ||  v  &  1)  ==  0  ||  k  <  31)  {  throw  new  ArithmeticException( "Overflow:  Gcd  is  2  >=  31 ");  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are        [BUGGY]  int  k  =((  u  &  1)  ==  0  ||  v  &  1)  ==  0  ||  k  <  31)  {  throw  new  ArithmeticException( "Overflow:  Gcd  is  2  >=  31 ");  [BUGGY]      u  /=  2;  v  /=  2;  k++;  //  cast  out  twos.  }  if  (k  ==  31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }    int  t  =  ((u  &  1)  ==  1)  ?  v  :  -(u  /  2)/*  B3  */;  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  short  NS  PS  ZS  boolean  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  k  t  u  v  	projects/Math94/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	430	430	1	replace	int  k  =((  u  &  1)  ==  0  ||  v  &  1)  ==  0  ||  k  <  31)  {  throw  new  ArithmeticException( "Overflow:  Gcd  is  2  >=  31 ");	  int    k    =((    u    &    1)    ==    0    ||    v    &    1)    ==    0    ||    k    <    31)    {    throw    new    ArithmeticException(   "Overflow:    Gcd    is    2    >>    31   ");    	non-compiled	[CE]  <identifier>  expected	11	None	replace
71	[BUG]  [BUGGY]  int  k  =((  u  &  1)  ==  1  ||  v  &  1)  ==  1  ||  k  <  31)  {  throw  new  ArithmeticException( "Overflow:  Gcd  is  2  >>  31 ");  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are        [BUGGY]  int  k  =((  u  &  1)  ==  1  ||  v  &  1)  ==  1  ||  k  <  31)  {  throw  new  ArithmeticException( "Overflow:  Gcd  is  2  >>  31 ");  [BUGGY]      u  /=  2;  v  /=  2;  k++;  //  cast  out  twos.  }  if  (k  ==  31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }    int  t  =  ((u  &  1)  ==  1)  ?  v  :  -(u  /  2)/*  B3  */;  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  short  NS  PS  ZS  boolean  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  k  t  u  v  	projects/Math94/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	430	430	1	replace	int  k  =((  u  &  1)  ==  1  ||  v  &  1)  ==  1  ||  k  <  31)  {  throw  new  ArithmeticException( "Overflow:  Gcd  is  2  >>  31 ");	  int    k    =((    u    &    1)    ==    0    ||    v    &    1)    ==    0    ||    k    <    31)    {    throw    new    ArithmeticException(   "Overflow:    Gcd    is    2    >>    31   ");    	non-compiled	[CE]  <identifier>  expected	11	None	replace
72	[BUG]  [BUGGY]  ((  u  &  1)  ==  0  &&  k  <  31)?  -(u  /  2):  -(u  /  2)/  B3  */);  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are        [BUGGY]  ((  u  &  1)  ==  0  &&  k  <  31)?  -(u  /  2):  -(u  /  2)/  B3  */);  [BUGGY]      v  /=  2;  k++;  //  cast  out  twos.  }  if  (k  ==  31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }    int  t  =  ((u  &  1)  ==  1)  ?  v  :  -(u  /  2)/*  B3  */;  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  short  NS  PS  ZS  boolean  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  k  t  u  v  	projects/Math94/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	430	430	1	replace	((  u  &  1)  ==  0  &&  k  <  31)?  -(u  /  2):  -(u  /  2)/  B3  */);	  ((    u    &    1)    ==    0    &&    k    <    31)?    -(u    /    2):    -(u    /    2)/*    B3    */);    	non-compiled	[CE]  <identifier>  expected	37	None	replace
73	[BUG]  [BUGGY]  ((  u  &  1)  ==  0  &&  k  <  31)?  -(u  /  2):  -(v  /  2)/*  B3  */);  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are        [BUGGY]  ((  u  &  1)  ==  0  &&  k  <  31)?  -(u  /  2):  -(v  /  2)/*  B3  */);  [BUGGY]      v  /=  2;  k++;  //  cast  out  twos.  }  if  (k  ==  31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }    int  t  =  ((u  &  1)  ==  1)  ?  v  :  -(u  /  2)/*  B3  */;  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  short  NS  PS  ZS  boolean  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  k  t  u  v  	projects/Math94/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	430	430	1	replace	((  u  &  1)  ==  0  &&  k  <  31)?  -(u  /  2):  -(v  /  2)/*  B3  */);	  ((    u    &    1)    ==    0    &&    k    <    31)?    -(u    /    2):    -(u    /    2)/*    B3    */);    	non-compiled	[CE]  <identifier>  expected	37	None	replace
74	[BUG]  [BUGGY]  int  k  =((  u  &  1)  ==  0  ||  (v  &  1)  ==  0  ||  k  <  31)  {  throw  new  ArithmeticException( "overflow:  Gcd  is  2  >>  31 ");  [CE]  <identifier>  expected  [FE]            AssertionFailedError      [CONTEXT]      if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are        [BUGGY]  int  k  =((  u  &  1)  ==  0  ||  (v  &  1)  ==  0  ||  k  <  31)  {  throw  new  ArithmeticException( "overflow:  Gcd  is  2  >>  31 ");  [BUGGY]      u  /=  2;  v  /=  2;  k++;  //  cast  out  twos.  }  if  (k  ==  31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }    int  t  =  ((u  &  1)  ==  1)  ?  v  :  -(u  /  2)/*  B3  */;  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  short  NS  PS  ZS  boolean  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  k  t  u  v  	projects/Math94/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	430	430	1	replace	int  k  =((  u  &  1)  ==  0  ||  (v  &  1)  ==  0  ||  k  <  31)  {  throw  new  ArithmeticException( "overflow:  Gcd  is  2  >>  31 ");	  int    k    =((    u    &    1)    ==    0    &&    (v    &    1)    ==    0    &&    k    <    31)    {    throw    new    ArithmeticException(   "overflow:    Gcd    is    2    >>    31   ");    	non-compiled	[CE]  <identifier>  expected	27	None	replace
75	[BUG]  [BUGGY]  int  k  =((  u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  throw  new  ArithmeticException( "overflow:  Gcd  is  2  >=  31 ");  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are        [BUGGY]  int  k  =((  u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  throw  new  ArithmeticException( "overflow:  Gcd  is  2  >=  31 ");  [BUGGY]      u  /=  2;  v  /=  2;  k++;  //  cast  out  twos.  }  if  (k  ==  31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }    int  t  =  ((u  &  1)  ==  1)  ?  v  :  -(u  /  2)/*  B3  */;  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  short  NS  PS  ZS  boolean  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  k  t  u  v  	projects/Math94/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	430	430	1	replace	int  k  =((  u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  throw  new  ArithmeticException( "overflow:  Gcd  is  2  >=  31 ");	  int    k    =((    u    &    1)    ==    0    &&    (v    &    1)    ==    0    &&    k    <    31)    {    throw    new    ArithmeticException(   "overflow:    Gcd    is    2    >>    31   ");    	non-compiled	[CE]  <identifier>  expected	27	None	replace
76	[BUG]  [BUGGY]  int  k  =((  u  &  1)  ==  1  &&  v  <  31)  {  throw  new  ArithmeticException( "overflow:  Gcd  is  2  >>  31 ");  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are        [BUGGY]  int  k  =((  u  &  1)  ==  1  &&  v  <  31)  {  throw  new  ArithmeticException( "overflow:  Gcd  is  2  >>  31 ");  [BUGGY]      u  /=  2;  v  /=  2;  k++;  //  cast  out  twos.  }  if  (k  ==  31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }    int  t  =  ((u  &  1)  ==  1)  ?  v  :  -(u  /  2)/*  B3  */;  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  short  NS  PS  ZS  boolean  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  k  t  u  v  	projects/Math94/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	430	430	1	replace	int  k  =((  u  &  1)  ==  1  &&  v  <  31)  {  throw  new  ArithmeticException( "overflow:  Gcd  is  2  >>  31 ");	  int    k    =((    u    &    1)    ==    0    &&    (v    &    1)    ==    0    &&    k    <    31)    {    throw    new    ArithmeticException(   "overflow:    Gcd    is    2    >>    31   ");    	non-compiled	[CE]  <identifier>  expected	27	None	replace
77	[BUG]  [BUGGY]  int  k  =((  u  &  1)  ==  0  ||  (v  &  1)  ==  0  ||  k  <  31)  {  throw  new  ArithmeticException( "Overflow:  gcd  is  2  >>  31 ");  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are        [BUGGY]  int  k  =((  u  &  1)  ==  0  ||  (v  &  1)  ==  0  ||  k  <  31)  {  throw  new  ArithmeticException( "Overflow:  gcd  is  2  >>  31 ");  [BUGGY]      u  /=  2;  v  /=  2;  k++;  //  cast  out  twos.  }  if  (k  ==  31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }    int  t  =  ((u  &  1)  ==  1)  ?  v  :  -(u  /  2)/*  B3  */;  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  short  NS  PS  ZS  boolean  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  k  t  u  v  	projects/Math94/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	430	430	1	replace	int  k  =((  u  &  1)  ==  0  ||  (v  &  1)  ==  0  ||  k  <  31)  {  throw  new  ArithmeticException( "Overflow:  gcd  is  2  >>  31 ");	  int    k    =((    u    &    1)    ==    0    &&    (v    &    1)    ==    0    &&    k    <    31)    {    throw    new    ArithmeticException(   "Overflow:    gcd    is    2    >>    31   ");    	non-compiled	[CE]  <identifier>  expected	35	None	replace
78	[BUG]  [BUGGY]  int  k  =((  u  &  1)  ==  0  ||  (v  &  1)  ==  0  ||  k  <  31)  {  throw  new  ArithmeticException( "Overflow:  Gcd  is  2  >>  31 ");  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are        [BUGGY]  int  k  =((  u  &  1)  ==  0  ||  (v  &  1)  ==  0  ||  k  <  31)  {  throw  new  ArithmeticException( "Overflow:  Gcd  is  2  >>  31 ");  [BUGGY]      u  /=  2;  v  /=  2;  k++;  //  cast  out  twos.  }  if  (k  ==  31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }    int  t  =  ((u  &  1)  ==  1)  ?  v  :  -(u  /  2)/*  B3  */;  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  short  NS  PS  ZS  boolean  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  k  t  u  v  	projects/Math94/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	430	430	1	replace	int  k  =((  u  &  1)  ==  0  ||  (v  &  1)  ==  0  ||  k  <  31)  {  throw  new  ArithmeticException( "Overflow:  Gcd  is  2  >>  31 ");	  int    k    =((    u    &    1)    ==    0    &&    (v    &    1)    ==    0    &&    k    <    31)    {    throw    new    ArithmeticException(   "Overflow:    Gcd    is    2    >>    31   ");    	non-compiled	[CE]  <identifier>  expected	29	None	replace
79	[BUG]  [BUGGY]  int  k  =((  u  &  1)  ==  1  &&  v  <  31)  {  throw  new  ArithmeticException( "Overflow:  Gcd  is  2  >>  31 ");  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are        [BUGGY]  int  k  =((  u  &  1)  ==  1  &&  v  <  31)  {  throw  new  ArithmeticException( "Overflow:  Gcd  is  2  >>  31 ");  [BUGGY]      u  /=  2;  v  /=  2;  k++;  //  cast  out  twos.  }  if  (k  ==  31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }    int  t  =  ((u  &  1)  ==  1)  ?  v  :  -(u  /  2)/*  B3  */;  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  short  NS  PS  ZS  boolean  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  k  t  u  v  	projects/Math94/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	430	430	1	replace	int  k  =((  u  &  1)  ==  1  &&  v  <  31)  {  throw  new  ArithmeticException( "Overflow:  Gcd  is  2  >>  31 ");	  int    k    =((    u    &    1)    ==    0    &&    (v    &    1)    ==    0    &&    k    <    31)    {    throw    new    ArithmeticException(   "Overflow:    Gcd    is    2    >>    31   ");    	non-compiled	[CE]  <identifier>  expected	29	None	replace
80	[BUG]  [BUGGY]  int  k  =((  u  &  1)  ==  0  ||  v  &  1)  ==  0  ||  k  <  31)  {  throw  new  ArithmeticException( "Overflow:  gcd  is  2  >=  31 ");  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are        [BUGGY]  int  k  =((  u  &  1)  ==  0  ||  v  &  1)  ==  0  ||  k  <  31)  {  throw  new  ArithmeticException( "Overflow:  gcd  is  2  >=  31 ");  [BUGGY]      u  /=  2;  v  /=  2;  k++;  //  cast  out  twos.  }  if  (k  ==  31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }    int  t  =  ((u  &  1)  ==  1)  ?  v  :  -(u  /  2)/*  B3  */;  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  short  NS  PS  ZS  boolean  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  k  t  u  v  	projects/Math94/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	430	430	1	replace	int  k  =((  u  &  1)  ==  0  ||  v  &  1)  ==  0  ||  k  <  31)  {  throw  new  ArithmeticException( "Overflow:  gcd  is  2  >=  31 ");	  int    k    =((    u    &    1)    ==    0    ||    v    &    1)    ==    0    ||    k    <    31)    {    throw    new    ArithmeticException(   "Overflow:    gcd    is    2    >>    31   ");    	non-compiled	[CE]  <identifier>  expected	7	None	replace
81	[BUG]  [BUGGY]  int  k  =((  u  &  1)  ==  31)?  1  :  -(u  /  2)/*  B3  */);  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are        [BUGGY]  int  k  =((  u  &  1)  ==  31)?  1  :  -(u  /  2)/*  B3  */);  [BUGGY]      u  /=  2;  v  /=  2;  k++;  //  cast  out  twos.  }  if  (k  ==  31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }    int  t  =  ((u  &  1)  ==  1)  ?  v  :  -(u  /  2)/*  B3  */;  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  short  NS  PS  ZS  boolean  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  k  t  u  v  	projects/Math94/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	430	430	1	replace	int  k  =((  u  &  1)  ==  31)?  1  :  -(u  /  2)/*  B3  */);	  int    k    =((    u    &    1)    ==    0    &&    (v    &    1)    ==    0)?    1    :    -(u    /    2)/*    B3    */);    	non-compiled	[CE]  <identifier>  expected	15	None	replace
82	[BUG]  [BUGGY]  int  k  =((  u  &  1)  ==  1  ||  v  &  1)  ==  1  ||  k  <  31)  {  throw  new  ArithmeticException( "overflow:  Gcd  is  2  >>  31 ");  [CE]  <identifier>  expected  [FE]            AssertionFailedError      [CONTEXT]      if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are        [BUGGY]  int  k  =((  u  &  1)  ==  1  ||  v  &  1)  ==  1  ||  k  <  31)  {  throw  new  ArithmeticException( "overflow:  Gcd  is  2  >>  31 ");  [BUGGY]      u  /=  2;  v  /=  2;  k++;  //  cast  out  twos.  }  if  (k  ==  31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }    int  t  =  ((u  &  1)  ==  1)  ?  v  :  -(u  /  2)/*  B3  */;  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  short  NS  PS  ZS  boolean  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  k  t  u  v  	projects/Math94/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	430	430	1	replace	int  k  =((  u  &  1)  ==  1  ||  v  &  1)  ==  1  ||  k  <  31)  {  throw  new  ArithmeticException( "overflow:  Gcd  is  2  >>  31 ");	  int    k    =((    u    &    1)    ==    1    &&    v    &    1)    ==    1    &&    k    <    31)    {    throw    new    ArithmeticException(   "overflow:    Gcd    is    2    >>    31   ");    	non-compiled	[CE]  <identifier>  expected	20	None	replace
83	[BUG]  [BUGGY]  int  k  =((  u  &  1)  ==  1  &&  v  &  1)  ==  1  &&  k  <  31)  {  throw  new  ArithmeticException( "gcd  is  2  >=  31 ");  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are        [BUGGY]  int  k  =((  u  &  1)  ==  1  &&  v  &  1)  ==  1  &&  k  <  31)  {  throw  new  ArithmeticException( "gcd  is  2  >=  31 ");  [BUGGY]      u  /=  2;  v  /=  2;  k++;  //  cast  out  twos.  }  if  (k  ==  31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }    int  t  =  ((u  &  1)  ==  1)  ?  v  :  -(u  /  2)/*  B3  */;  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  short  NS  PS  ZS  boolean  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  k  t  u  v  	projects/Math94/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	430	430	1	replace	int  k  =((  u  &  1)  ==  1  &&  v  &  1)  ==  1  &&  k  <  31)  {  throw  new  ArithmeticException( "gcd  is  2  >=  31 ");	  int    k    =((    u    &    1)    ==    1    &&    v    &    1)    ==    1    &&    k    <    31)    {    throw    new    ArithmeticException(   "overflow:    Gcd    is    2    >>    31   ");    	non-compiled	[CE]  <identifier>  expected	20	None	replace
84	[BUG]  [BUGGY]  ((  u  &  1)  ==  0  &&  k  <  31)?  v  :  -(u  /  2)/  B3  */);  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are        [BUGGY]  ((  u  &  1)  ==  0  &&  k  <  31)?  v  :  -(u  /  2)/  B3  */);  [BUGGY]      u  /=  2;  v  /=  2;  k++;  //  cast  out  twos.  }  if  (k  ==  31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }    int  t  =  ((u  &  1)  ==  1)  ?  v  :  -(u  /  2)/*  B3  */;  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  short  NS  PS  ZS  boolean  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  k  t  u  v  	projects/Math94/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	430	430	1	replace	((  u  &  1)  ==  0  &&  k  <  31)?  v  :  -(u  /  2)/  B3  */);	  ((    u    &    2)    ==    0    &&    k    <    31)?    v    :    -(u    /    2)/    B3    */);    	non-compiled	[CE]  <identifier>  expected	46	None	replace
85	[BUG]  [BUGGY]  ((  u  &  2)  ==  0  &&  k  <  31)?  v  :  -(u  /  2)/  2  */);  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are        [BUGGY]  ((  u  &  2)  ==  0  &&  k  <  31)?  v  :  -(u  /  2)/  2  */);  [BUGGY]      u  /=  2;  v  /=  2;  k++;  //  cast  out  twos.  }  if  (k  ==  31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }    int  t  =  ((u  &  1)  ==  1)  ?  v  :  -(u  /  2)/*  B3  */;  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  short  NS  PS  ZS  boolean  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  k  t  u  v  	projects/Math94/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	430	430	1	replace	((  u  &  2)  ==  0  &&  k  <  31)?  v  :  -(u  /  2)/  2  */);	  ((    u    &    2)    ==    0    &&    k    <    31)?    v    :    -(u    /    2)/    B3    */);    	non-compiled	[CE]  <identifier>  expected	46	None	replace
86	[BUG]  [BUGGY]  ((  u  &  1)  ==  0  &&(v  &  2)  ==  0)&&  k  <  31))  {  throw  new  ArithmeticException( "overflow:  gcd  is  2  >>  31 ");  [CE]  <identifier>  expected  [FE]            AssertionFailedError      [CONTEXT]      if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are        [BUGGY]  ((  u  &  1)  ==  0  &&(v  &  2)  ==  0)&&  k  <  31))  {  throw  new  ArithmeticException( "overflow:  gcd  is  2  >>  31 ");  [BUGGY]      u  /=  2;  v  /=  2;  k++;  //  cast  out  twos.  }  if  (k  ==  31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }    int  t  =  ((u  &  1)  ==  1)  ?  v  :  -(u  /  2)/*  B3  */;  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  short  NS  PS  ZS  boolean  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  k  t  u  v  	projects/Math94/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	430	430	1	replace	((  u  &  1)  ==  0  &&(v  &  2)  ==  0)&&  k  <  31))  {  throw  new  ArithmeticException( "overflow:  gcd  is  2  >>  31 ");	  ((    u    &    1)    ==    0    &&(v    &    2)    ==    0    &&    k    <    31))    {    throw    new    ArithmeticException(   "overflow:    gcd    is    2    >>    31   ");    	non-compiled	[CE]  <identifier>  expected	6	None	replace
87	[BUG]  [BUGGY]  ((  u  &  1)  ==  0  &&(v  &  2)  ==  0  &&  k  <  31))  {  throw  new  ArithmeticException( "overflow:  gcd  is  2  >=  31 ");  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are        [BUGGY]  ((  u  &  1)  ==  0  &&(v  &  2)  ==  0  &&  k  <  31))  {  throw  new  ArithmeticException( "overflow:  gcd  is  2  >=  31 ");  [BUGGY]      u  /=  2;  v  /=  2;  k++;  //  cast  out  twos.  }  if  (k  ==  31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }    int  t  =  ((u  &  1)  ==  1)  ?  v  :  -(u  /  2)/*  B3  */;  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  short  NS  PS  ZS  boolean  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  k  t  u  v  	projects/Math94/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	430	430	1	replace	((  u  &  1)  ==  0  &&(v  &  2)  ==  0  &&  k  <  31))  {  throw  new  ArithmeticException( "overflow:  gcd  is  2  >=  31 ");	  ((    u    &    1)    ==    0    &&(v    &    2)    ==    0    &&    k    <    31))    {    throw    new    ArithmeticException(   "overflow:    gcd    is    2    >>    31   ");    	non-compiled	[CE]  <identifier>  expected	6	None	replace
88	[BUG]  [BUGGY]  ((  u  &  1)  ==  1  &&(v  &  2)  ==  1  &&  k  <  31))  {  throw  new  ArithmeticException( "overflow:  gcd  is  2  >>  31 ");  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are        [BUGGY]  ((  u  &  1)  ==  1  &&(v  &  2)  ==  1  &&  k  <  31))  {  throw  new  ArithmeticException( "overflow:  gcd  is  2  >>  31 ");  [BUGGY]      u  /=  2;  v  /=  2;  k++;  //  cast  out  twos.  }  if  (k  ==  31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }    int  t  =  ((u  &  1)  ==  1)  ?  v  :  -(u  /  2)/*  B3  */;  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  short  NS  PS  ZS  boolean  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  k  t  u  v  	projects/Math94/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	430	430	1	replace	((  u  &  1)  ==  1  &&(v  &  2)  ==  1  &&  k  <  31))  {  throw  new  ArithmeticException( "overflow:  gcd  is  2  >>  31 ");	  ((    u    &    1)    ==    0    &&(v    &    2)    ==    0    &&    k    <    31))    {    throw    new    ArithmeticException(   "overflow:    gcd    is    2    >>    31   ");    	non-compiled	[CE]  <identifier>  expected	6	None	replace
89	[BUG]  [BUGGY]  int  k  =((  u  &  1)  ==  0  ||  v  &  1)  ==  0)  {  throw  new  ArithmeticException( "overflow:  gcd  is  2  >>  31 ");  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are        [BUGGY]  int  k  =((  u  &  1)  ==  0  ||  v  &  1)  ==  0)  {  throw  new  ArithmeticException( "overflow:  gcd  is  2  >>  31 ");  [BUGGY]      u  /=  2;  v  /=  2;  k++;  //  cast  out  twos.  }  if  (k  ==  31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }    int  t  =  ((u  &  1)  ==  1)  ?  v  :  -(u  /  2)/*  B3  */;  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  short  NS  PS  ZS  boolean  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  k  t  u  v  	projects/Math94/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	430	430	1	replace	int  k  =((  u  &  1)  ==  0  ||  v  &  1)  ==  0)  {  throw  new  ArithmeticException( "overflow:  gcd  is  2  >>  31 ");	  int    k    =((    u    &    1)    ==    0    &&    v    &    1)    ==    0)    {    throw    new    ArithmeticException(   "overflow:    gcd    is    2    >>    31   ");    	non-compiled	[CE]  <identifier>  expected	53	None	replace
90	[BUG]  [BUGGY]  int  k  =((  u  &  1)  ==  1  &&  v  &  1)  ==  0)  {  throw  new  ArithmeticException( "overflow:  gcd  is  2  >>  31 ");  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are        [BUGGY]  int  k  =((  u  &  1)  ==  1  &&  v  &  1)  ==  0)  {  throw  new  ArithmeticException( "overflow:  gcd  is  2  >>  31 ");  [BUGGY]      u  /=  2;  v  /=  2;  k++;  //  cast  out  twos.  }  if  (k  ==  31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }    int  t  =  ((u  &  1)  ==  1)  ?  v  :  -(u  /  2)/*  B3  */;  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  short  NS  PS  ZS  boolean  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  k  t  u  v  	projects/Math94/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	430	430	1	replace	int  k  =((  u  &  1)  ==  1  &&  v  &  1)  ==  0)  {  throw  new  ArithmeticException( "overflow:  gcd  is  2  >>  31 ");	  int    k    =((    u    &    1)    ==    0    &&    v    &    1)    ==    0)    {    throw    new    ArithmeticException(   "overflow:    gcd    is    2    >>    31   ");    	non-compiled	[CE]  <identifier>  expected	53	None	replace
91	[BUG]  [BUGGY]  int  k  =((  u  &  1)  ==  0  &&  (v  &  1)  ==  0)  {  throw  new  ArithmeticException( "overflow:  gcd  is  2  >>  31 ");  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are        [BUGGY]  int  k  =((  u  &  1)  ==  0  &&  (v  &  1)  ==  0)  {  throw  new  ArithmeticException( "overflow:  gcd  is  2  >>  31 ");  [BUGGY]      u  /=  2;  v  /=  2;  k++;  //  cast  out  twos.  }  if  (k  ==  31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }    int  t  =  ((u  &  1)  ==  1)  ?  v  :  -(u  /  2)/*  B3  */;  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  short  NS  PS  ZS  boolean  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  k  t  u  v  	projects/Math94/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	430	430	1	replace	int  k  =((  u  &  1)  ==  0  &&  (v  &  1)  ==  0)  {  throw  new  ArithmeticException( "overflow:  gcd  is  2  >>  31 ");	  int    k    =((    u    &    1)    ==    0    &&    v    &    1)    ==    0)    {    throw    new    ArithmeticException(   "overflow:    gcd    is    2    >>    31   ");    	non-compiled	[CE]  <identifier>  expected	53	None	replace
92	[BUG]  [BUGGY]  ((  u  &  1)  ==  1  &&  k  <  31)?  v  :  -(u  /  2)/*  B3  */);  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are        [BUGGY]  ((  u  &  1)  ==  1  &&  k  <  31)?  v  :  -(u  /  2)/*  B3  */);  [BUGGY]      v  /=  2;  k++;  //  cast  out  twos.  }  if  (k  ==  31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }    int  t  =  ((u  &  1)  ==  1)  ?  v  :  -(u  /  2)/*  B3  */;  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  short  NS  PS  ZS  boolean  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  k  t  u  v  	projects/Math94/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	430	430	1	replace	((  u  &  1)  ==  1  &&  k  <  31)?  v  :  -(u  /  2)/*  B3  */);	  ((    u    &    1)    ==    0    &&    k    <    31)?    v    :    -(u    /    2)/*    B3    */);    	non-compiled	[CE]  <identifier>  expected	3	None	replace
93	[BUG]  [BUGGY]  int  k  =((  u  &  1)  ==  2  &&  v  &  1)  ==  2  &&  k  <  31)  {  throw  new  ArithmeticException( "Overflow:  Gcd  is  2  >>  31 ");  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are        [BUGGY]  int  k  =((  u  &  1)  ==  2  &&  v  &  1)  ==  2  &&  k  <  31)  {  throw  new  ArithmeticException( "Overflow:  Gcd  is  2  >>  31 ");  [BUGGY]      u  /=  2;  v  /=  2;  k++;  //  cast  out  twos.  }  if  (k  ==  31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }    int  t  =  ((u  &  1)  ==  1)  ?  v  :  -(u  /  2)/*  B3  */;  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  short  NS  PS  ZS  boolean  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  k  t  u  v  	projects/Math94/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	430	430	1	replace	int  k  =((  u  &  1)  ==  2  &&  v  &  1)  ==  2  &&  k  <  31)  {  throw  new  ArithmeticException( "Overflow:  Gcd  is  2  >>  31 ");	  int    k    =((    u    &    1)    ==    1    &&    v    &    1)    ==    1    &&    k    <    31)    {    throw    new    ArithmeticException(   "Overflow:    Gcd    is    2    >>    31   ");    	non-compiled	[CE]  <identifier>  expected	12	None	replace
94	[BUG]  [BUGGY]  int  k  =((  u  &  1)  ==  0  &&  v  &  1)  ==  0  ||  k  <  31)  {  throw  new  ArithmeticException( "overflow:  Gcd  is  2  >>  31 ");  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are        [BUGGY]  int  k  =((  u  &  1)  ==  0  &&  v  &  1)  ==  0  ||  k  <  31)  {  throw  new  ArithmeticException( "overflow:  Gcd  is  2  >>  31 ");  [BUGGY]      u  /=  2;  v  /=  2;  k++;  //  cast  out  twos.  }  if  (k  ==  31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }    int  t  =  ((u  &  1)  ==  1)  ?  v  :  -(u  /  2)/*  B3  */;  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  short  NS  PS  ZS  boolean  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  k  t  u  v  	projects/Math94/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	430	430	1	replace	int  k  =((  u  &  1)  ==  0  &&  v  &  1)  ==  0  ||  k  <  31)  {  throw  new  ArithmeticException( "overflow:  Gcd  is  2  >>  31 ");	  int    k    =((    u    &    1)    ==    0    ||    v    &    1)    ==    0    ||    k    <    31)    {    throw    new    ArithmeticException(   "overflow:    Gcd    is    2    >>    31   ");    	non-compiled	[CE]  <identifier>  expected	21	None	replace
95	[BUG]  [BUGGY]  int  k  =((  u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  throw  new  ArithmeticException( "gcd  is  2  >>  31 ");  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are        [BUGGY]  int  k  =((  u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  throw  new  ArithmeticException( "gcd  is  2  >>  31 ");  [BUGGY]      u  /=  2;  v  /=  2;  k++;  //  cast  out  twos.  }  if  (k  ==  31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }    int  t  =  ((u  &  1)  ==  1)  ?  v  :  -(u  /  2)/*  B3  */;  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  short  NS  PS  ZS  boolean  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  k  t  u  v  	projects/Math94/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	430	430	1	replace	int  k  =((  u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  throw  new  ArithmeticException( "gcd  is  2  >>  31 ");	  int    k    =((    u    &    1)    ==    0    &&    v    &    1)    ==    0    &&    k    <    31)    {    throw    new    ArithmeticException(   "gcd    is    2    >>    31   ");    	non-compiled	[CE]  <identifier>  expected	36	None	replace
96	[BUG]  [BUGGY]  int  k  =((  u  &  1)  ==  0  &&  v  &  2)  ==  0  &&  k  <  31)  {  throw  new  ArithmeticException( "gcd  is  2  >>  31 ");  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are        [BUGGY]  int  k  =((  u  &  1)  ==  0  &&  v  &  2)  ==  0  &&  k  <  31)  {  throw  new  ArithmeticException( "gcd  is  2  >>  31 ");  [BUGGY]      u  /=  2;  v  /=  2;  k++;  //  cast  out  twos.  }  if  (k  ==  31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }    int  t  =  ((u  &  1)  ==  1)  ?  v  :  -(u  /  2)/*  B3  */;  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  short  NS  PS  ZS  boolean  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  k  t  u  v  	projects/Math94/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	430	430	1	replace	int  k  =((  u  &  1)  ==  0  &&  v  &  2)  ==  0  &&  k  <  31)  {  throw  new  ArithmeticException( "gcd  is  2  >>  31 ");	  int    k    =((    u    &    1)    ==    0    &&    v    &    1)    ==    0    &&    k    <    31)    {    throw    new    ArithmeticException(   "gcd    is    2    >>    31   ");    	non-compiled	[CE]  <identifier>  expected	36	None	replace
97	[BUG]  [BUGGY]  int  k  =((  u  &  1)  ==  0  &&  v  &  1)  ==  0  &&  k  <  31)  {  throw  new  ArithmeticException( "gcd  is  2  >>  31 ");  }  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are        [BUGGY]  int  k  =((  u  &  1)  ==  0  &&  v  &  1)  ==  0  &&  k  <  31)  {  throw  new  ArithmeticException( "gcd  is  2  >>  31 ");  }  [BUGGY]      u  /=  2;  v  /=  2;  k++;  //  cast  out  twos.  }  if  (k  ==  31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }    int  t  =  ((u  &  1)  ==  1)  ?  v  :  -(u  /  2)/*  B3  */;  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  short  NS  PS  ZS  boolean  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  k  t  u  v  	projects/Math94/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	430	430	1	replace	int  k  =((  u  &  1)  ==  0  &&  v  &  1)  ==  0  &&  k  <  31)  {  throw  new  ArithmeticException( "gcd  is  2  >>  31 ");  }	  int    k    =((    u    &    1)    ==    0    &&    v    &    1)    ==    0    &&    k    <    31)    {    throw    new    ArithmeticException(   "gcd    is    2    >>    31   ");    	non-compiled	[CE]  <identifier>  expected	36	None	replace
98	[BUG]  [BUGGY]  int  k  =  ((  u  &  1)  ==  0  &&  v  <  31)?  v  :  -(u  /  2)/*  B3  */);  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are        [BUGGY]  int  k  =  ((  u  &  1)  ==  0  &&  v  <  31)?  v  :  -(u  /  2)/*  B3  */);  [BUGGY]      v  /=  2;  k++;  //  cast  out  twos.  }  if  (k  ==  31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }    int  t  =  ((u  &  1)  ==  1)  ?  v  :  -(u  /  2)/*  B3  */;  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  short  NS  PS  ZS  boolean  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  k  t  u  v  	projects/Math94/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	430	430	1	replace	int  k  =  ((  u  &  1)  ==  0  &&  v  <  31)?  v  :  -(u  /  2)/*  B3  */);	  int    k    =    ((    u    &    1)    ==    0    &&    k    <    31)?    v    :    -(u    /    2)/*    B3    */);    	non-compiled	[CE]  <identifier>  expected	5	None	replace
99	[BUG]  [BUGGY]  int  k  =((  u  &  1)  ==  0  &&  v  &  1)  ==  0)  {  throw  new  ArithmeticException( "Overflow:  Gcd  is  2  >>  31;  }  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are        [BUGGY]  int  k  =((  u  &  1)  ==  0  &&  v  &  1)  ==  0)  {  throw  new  ArithmeticException( "Overflow:  Gcd  is  2  >>  31;  }  [BUGGY]      u  /=  2;  v  /=  2;  k++;  //  cast  out  twos.  }  if  (k  ==  31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }    int  t  =  ((u  &  1)  ==  1)  ?  v  :  -(u  /  2)/*  B3  */;  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  short  NS  PS  ZS  boolean  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  k  t  u  v  	projects/Math94/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	430	430	1	replace	int  k  =((  u  &  1)  ==  0  &&  v  &  1)  ==  0)  {  throw  new  ArithmeticException( "Overflow:  Gcd  is  2  >>  31;  }	  int    k    =((    u    &    1)    ==    0    &&    v    &    1)    ==    0)    {    throw    new    ArithmeticException(   "Overflow:    Gcd    is    2    >>    31   ");    	non-compiled	[CE]  <identifier>  expected	50	None	replace
100	[BUG]  [BUGGY]  int  k  =((  u  &  1)  ==  0  &&  (v  &  1)  ==  0)?  31  :  -(u  /  2)/  *  B3  */);  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are        [BUGGY]  int  k  =((  u  &  1)  ==  0  &&  (v  &  1)  ==  0)?  31  :  -(u  /  2)/  *  B3  */);  [BUGGY]      u  /=  2;  v  /=  2;  k++;  //  cast  out  twos.  }  if  (k  ==  31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }    int  t  =  ((u  &  1)  ==  1)  ?  v  :  -(u  /  2)/*  B3  */;  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  short  NS  PS  ZS  boolean  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  k  t  u  v  	projects/Math94/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	430	430	1	replace	int  k  =((  u  &  1)  ==  0  &&  (v  &  1)  ==  0)?  31  :  -(u  /  2)/  *  B3  */);	  int    k    =((    u    &    1)    ==    0    &&    (v    &    1)    ==    0)?    gcd    :    -(u    /    2)/    *    B3    */);    	non-compiled	[CE]  <identifier>  expected	47	None	replace
101	[BUG]  [BUGGY]  int  k  =((  u  &  1)  ==  0  ||  v  &  1)  ==  0  ||  k  >=  31)  {  throw  new  ArithmeticException( "Overflow:  Gcd  is  2  >>  31 ");  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are        [BUGGY]  int  k  =((  u  &  1)  ==  0  ||  v  &  1)  ==  0  ||  k  >=  31)  {  throw  new  ArithmeticException( "Overflow:  Gcd  is  2  >>  31 ");  [BUGGY]      u  /=  2;  v  /=  2;  k++;  //  cast  out  twos.  }  if  (k  ==  31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }    int  t  =  ((u  &  1)  ==  1)  ?  v  :  -(u  /  2)/*  B3  */;  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  short  NS  PS  ZS  boolean  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  k  t  u  v  	projects/Math94/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	430	430	1	replace	int  k  =((  u  &  1)  ==  0  ||  v  &  1)  ==  0  ||  k  >=  31)  {  throw  new  ArithmeticException( "Overflow:  Gcd  is  2  >>  31 ");	  int    k    =((    u    &    1)    ==    0    ||    v    &    1)    ==    0    ||    k    <    31)    {    throw    new    ArithmeticException(   "Overflow:    Gcd    is    2    >>    31   ");    	non-compiled	[CE]  <identifier>  expected	11	None	replace
102	[BUG]  [BUGGY]  int  k  =((  u  &  1)  ==  0  &&  v  &  1)  ==  0  ||  k  <  31)  {  throw  new  ArithmeticException( "Overflow:  Gcd  is  2  >>  31 ");  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are        [BUGGY]  int  k  =((  u  &  1)  ==  0  &&  v  &  1)  ==  0  ||  k  <  31)  {  throw  new  ArithmeticException( "Overflow:  Gcd  is  2  >>  31 ");  [BUGGY]      u  /=  2;  v  /=  2;  k++;  //  cast  out  twos.  }  if  (k  ==  31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }    int  t  =  ((u  &  1)  ==  1)  ?  v  :  -(u  /  2)/*  B3  */;  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  short  NS  PS  ZS  boolean  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  k  t  u  v  	projects/Math94/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	430	430	1	replace	int  k  =((  u  &  1)  ==  0  &&  v  &  1)  ==  0  ||  k  <  31)  {  throw  new  ArithmeticException( "Overflow:  Gcd  is  2  >>  31 ");	  int    k    =((    u    &    1)    ==    0    ||    v    &    1)    ==    0    ||    k    <    31)    {    throw    new    ArithmeticException(   "Overflow:    Gcd    is    2    >>    31   ");    	non-compiled	[CE]  <identifier>  expected	11	None	replace
103	[BUG]  [BUGGY]  int  k  =((  u  &  1)  ==  0  ||  v  &  2)  ==  0  ||  k  <  31)  {  throw  new  ArithmeticException( "Overflow:  Gcd  is  2  >>  31 ");  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are        [BUGGY]  int  k  =((  u  &  1)  ==  0  ||  v  &  2)  ==  0  ||  k  <  31)  {  throw  new  ArithmeticException( "Overflow:  Gcd  is  2  >>  31 ");  [BUGGY]      u  /=  2;  v  /=  2;  k++;  //  cast  out  twos.  }  if  (k  ==  31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }    int  t  =  ((u  &  1)  ==  1)  ?  v  :  -(u  /  2)/*  B3  */;  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  short  NS  PS  ZS  boolean  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  k  t  u  v  	projects/Math94/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	430	430	1	replace	int  k  =((  u  &  1)  ==  0  ||  v  &  2)  ==  0  ||  k  <  31)  {  throw  new  ArithmeticException( "Overflow:  Gcd  is  2  >>  31 ");	  int    k    =((    u    &    1)    ==    0    ||    v    &    1)    ==    0    ||    k    <    31)    {    throw    new    ArithmeticException(   "Overflow:    Gcd    is    2    >>    31   ");    	non-compiled	[CE]  <identifier>  expected	11	None	replace
104	[BUG]  [BUGGY]  ((  u  &  1)  ==  0  &&  k  <  31)?  -(v  /  2):  -(u  /  2)/*  B3  */);  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are        [BUGGY]  ((  u  &  1)  ==  0  &&  k  <  31)?  -(v  /  2):  -(u  /  2)/*  B3  */);  [BUGGY]      v  /=  2;  k++;  //  cast  out  twos.  }  if  (k  ==  31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }    int  t  =  ((u  &  1)  ==  1)  ?  v  :  -(u  /  2)/*  B3  */;  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  short  NS  PS  ZS  boolean  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  k  t  u  v  	projects/Math94/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	430	430	1	replace	((  u  &  1)  ==  0  &&  k  <  31)?  -(v  /  2):  -(u  /  2)/*  B3  */);	  ((    u    &    1)    ==    0    &&    k    <    31)?    -(u    /    2):    -(u    /    2)/*    B3    */);    	non-compiled	[CE]  <identifier>  expected	37	None	replace
105	[BUG]  [BUGGY]  int  k  =((  u  &  1)  ==  0  &&  v  &  2)  ==  0  &&  k  <  31)  {  throw  new  ArithmeticException( "overflow:  Gcd  is  2  >>  31 ");  }  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are        [BUGGY]  int  k  =((  u  &  1)  ==  0  &&  v  &  2)  ==  0  &&  k  <  31)  {  throw  new  ArithmeticException( "overflow:  Gcd  is  2  >>  31 ");  }  [BUGGY]      u  /=  2;  v  /=  2;  k++;  //  cast  out  twos.  }  if  (k  ==  31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }    int  t  =  ((u  &  1)  ==  1)  ?  v  :  -(u  /  2)/*  B3  */;  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  short  NS  PS  ZS  boolean  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  k  t  u  v  	projects/Math94/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	430	430	1	replace	int  k  =((  u  &  1)  ==  0  &&  v  &  2)  ==  0  &&  k  <  31)  {  throw  new  ArithmeticException( "overflow:  Gcd  is  2  >>  31 ");  }	  int    k    =((    u    &    1)    ==    0    &&    v    &    2)    ==    0    &&    k    <    31)    {    throw    new    ArithmeticException(   "overflow:    Gcd    is    2    >>    31   ");    	non-compiled	[CE]  <identifier>  expected	28	None	replace
106	[BUG]  [BUGGY]  int  k  =((  u  &  1)  ==  0  &&  (v  &  2)  ==  0)&&  k  <  31)  {  throw  new  ArithmeticException( "overflow:  Gcd  is  2  >>  31 ");  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are        [BUGGY]  int  k  =((  u  &  1)  ==  0  &&  (v  &  2)  ==  0)&&  k  <  31)  {  throw  new  ArithmeticException( "overflow:  Gcd  is  2  >>  31 ");  [BUGGY]      u  /=  2;  v  /=  2;  k++;  //  cast  out  twos.  }  if  (k  ==  31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }    int  t  =  ((u  &  1)  ==  1)  ?  v  :  -(u  /  2)/*  B3  */;  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  short  NS  PS  ZS  boolean  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  k  t  u  v  	projects/Math94/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	430	430	1	replace	int  k  =((  u  &  1)  ==  0  &&  (v  &  2)  ==  0)&&  k  <  31)  {  throw  new  ArithmeticException( "overflow:  Gcd  is  2  >>  31 ");	  int    k    =((    u    &    1)    ==    0    &&    v    &    2)    ==    0    &&    k    <    31)    {    throw    new    ArithmeticException(   "overflow:    Gcd    is    2    >>    31   ");    	non-compiled	[CE]  <identifier>  expected	28	None	replace
107	[BUG]  [BUGGY]  int  k  =((  u  &  1)  ==  0  &&  v  &  2)  ==  0)  {  throw  new  ArithmeticException( "Overflow:  gcd  is  2  >>  31 ");  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are        [BUGGY]  int  k  =((  u  &  1)  ==  0  &&  v  &  2)  ==  0)  {  throw  new  ArithmeticException( "Overflow:  gcd  is  2  >>  31 ");  [BUGGY]      u  /=  2;  v  /=  2;  k++;  //  cast  out  twos.  }  if  (k  ==  31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }    int  t  =  ((u  &  1)  ==  1)  ?  v  :  -(u  /  2)/*  B3  */;  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  short  NS  PS  ZS  boolean  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  k  t  u  v  	projects/Math94/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	430	430	1	replace	int  k  =((  u  &  1)  ==  0  &&  v  &  2)  ==  0)  {  throw  new  ArithmeticException( "Overflow:  gcd  is  2  >>  31 ");	  int    k    =((    u    &    1)    ==    0    &&    v    &    1)    ==    0)    {    throw    new    ArithmeticException(   "Overflow:    gcd    is    2    >>    31   ");    	non-compiled	[CE]  <identifier>  expected	52	None	replace
108	[BUG]  [BUGGY]  ((  u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)?  t  :  -(u  /  2)/  2  */);  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are        [BUGGY]  ((  u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)?  t  :  -(u  /  2)/  2  */);  [BUGGY]      u  /=  2;  v  /=  2;  k++;  //  cast  out  twos.  }  if  (k  ==  31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }    int  t  =  ((u  &  1)  ==  1)  ?  v  :  -(u  /  2)/*  B3  */;  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  short  NS  PS  ZS  boolean  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  k  t  u  v  	projects/Math94/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	430	430	1	replace	((  u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)?  t  :  -(u  /  2)/  2  */);	  ((    u    &    1)    ==    0    &&    (v    &    1)    ==    0    &&    k    <    31)?    t    :    -(u    /    2)/    B3    */);    	non-compiled	[CE]  <identifier>  expected	10	None	replace
109	[BUG]  [BUGGY]  ((  u  &  1)  ==  0  &&  (v  &  1)  ==  0)?  31  :  -(u  /  2)/*  B3  */);  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are        [BUGGY]  ((  u  &  1)  ==  0  &&  (v  &  1)  ==  0)?  31  :  -(u  /  2)/*  B3  */);  [BUGGY]      u  /=  2;  v  /=  2;  k++;  //  cast  out  twos.  }  if  (k  ==  31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }    int  t  =  ((u  &  1)  ==  1)  ?  v  :  -(u  /  2)/*  B3  */;  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  short  NS  PS  ZS  boolean  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  k  t  u  v  	projects/Math94/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	430	430	1	replace	((  u  &  1)  ==  0  &&  (v  &  1)  ==  0)?  31  :  -(u  /  2)/*  B3  */);	  ((    u    &    1)    ==    0    &&    (v    &    1)    ==    0    &&    31)?    t    :    -(u    /    2)/*    B3    */);    	non-compiled	[CE]  <identifier>  expected	9	None	replace
110	[BUG]  [BUGGY]  ((  u  +  1)  ==  0  &&  v  &  2)  ==  0)  {  throw  new  ArithmeticException( " ");  }  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are        [BUGGY]  ((  u  +  1)  ==  0  &&  v  &  2)  ==  0)  {  throw  new  ArithmeticException( " ");  }  [BUGGY]      v  /=  2;  k++;  //  cast  out  twos.  }  if  (k  ==  31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }    int  t  =  ((u  &  1)  ==  1)  ?  v  :  -(u  /  2)/*  B3  */;  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  short  NS  PS  ZS  boolean  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  k  t  u  v  	projects/Math94/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	430	430	1	replace	((  u  +  1)  ==  0  &&  v  &  2)  ==  0)  {  throw  new  ArithmeticException( " ");  }	  ((    u    &    1)    ==    0    &&    v    &    2)    ==    0)    {    throw    new    ArithmeticException(   "   ");    }    	non-compiled	[CE]  <identifier>  expected	51	None	replace
111	[BUG]  [BUGGY]  int  k  =((  u  &  1)  ==  0  ||(v  &  1)  ==  0  &&  k  <  31)  {  throw  new  ArithmeticException( "Overflow:  gcd  is  2  >>  31 ");  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are        [BUGGY]  int  k  =((  u  &  1)  ==  0  ||(v  &  1)  ==  0  &&  k  <  31)  {  throw  new  ArithmeticException( "Overflow:  gcd  is  2  >>  31 ");  [BUGGY]      u  /=  2;  v  /=  2;  k++;  //  cast  out  twos.  }  if  (k  ==  31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }    int  t  =  ((u  &  1)  ==  1)  ?  v  :  -(u  /  2)/*  B3  */;  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  short  NS  PS  ZS  boolean  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  k  t  u  v  	projects/Math94/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	430	430	1	replace	int  k  =((  u  &  1)  ==  0  ||(v  &  1)  ==  0  &&  k  <  31)  {  throw  new  ArithmeticException( "Overflow:  gcd  is  2  >>  31 ");	  int    k    =((    u    &    1)    ==    0    &&    (v    &    1)    ==    0    &&    k    <    31)    {    throw    new    ArithmeticException(   "Overflow:    gcd    is    2    >>    31   ");    	non-compiled	[CE]  <identifier>  expected	35	None	replace
112	[BUG]  [BUGGY]  int  k  =((  u  &  1)  ==  0  ||(v  &  1)  ==  0  &&  k  <  31)  {  throw  new  ArithmeticException( "overflow:  gcd  is  2  >>  31 ");  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are        [BUGGY]  int  k  =((  u  &  1)  ==  0  ||(v  &  1)  ==  0  &&  k  <  31)  {  throw  new  ArithmeticException( "overflow:  gcd  is  2  >>  31 ");  [BUGGY]      u  /=  2;  v  /=  2;  k++;  //  cast  out  twos.  }  if  (k  ==  31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }    int  t  =  ((u  &  1)  ==  1)  ?  v  :  -(u  /  2)/*  B3  */;  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  short  NS  PS  ZS  boolean  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  k  t  u  v  	projects/Math94/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	430	430	1	replace	int  k  =((  u  &  1)  ==  0  ||(v  &  1)  ==  0  &&  k  <  31)  {  throw  new  ArithmeticException( "overflow:  gcd  is  2  >>  31 ");	  int    k    =((    u    &    1)    ==    0    &&    (v    &    1)    ==    0    &&    k    <    31)    {    throw    new    ArithmeticException(   "overflow:    gcd    is    2    >>    31   ");    	non-compiled	[CE]  <identifier>  expected	40	None	replace
113	[BUG]  [BUGGY]  int  k  =((  u  &  1)  ==  0  &&  (v  &  2)  ==  0  &&  k  <  31)  {  throw  new  ArithmeticException( "overflow:  gcd  is  2  >>  31 ");  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are        [BUGGY]  int  k  =((  u  &  1)  ==  0  &&  (v  &  2)  ==  0  &&  k  <  31)  {  throw  new  ArithmeticException( "overflow:  gcd  is  2  >>  31 ");  [BUGGY]      u  /=  2;  v  /=  2;  k++;  //  cast  out  twos.  }  if  (k  ==  31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }    int  t  =  ((u  &  1)  ==  1)  ?  v  :  -(u  /  2)/*  B3  */;  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  short  NS  PS  ZS  boolean  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  k  t  u  v  	projects/Math94/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	430	430	1	replace	int  k  =((  u  &  1)  ==  0  &&  (v  &  2)  ==  0  &&  k  <  31)  {  throw  new  ArithmeticException( "overflow:  gcd  is  2  >>  31 ");	  int    k    =((    u    &    1)    ==    0    &&    (v    &    1)    ==    0    &&    k    <    31)    {    throw    new    ArithmeticException(   "overflow:    gcd    is    2    >>    31   ");    	non-compiled	[CE]  <identifier>  expected	40	None	replace
114	[BUG]  [BUGGY]  int  k  =((  u  &  1)  ==  0  &&  v  &  2)  ==  0  &&  k  <  31)  {  throw  new  ArithmeticException( "Overflow:  Gcd  is  2  >>  31 ");  }  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are        [BUGGY]  int  k  =((  u  &  1)  ==  0  &&  v  &  2)  ==  0  &&  k  <  31)  {  throw  new  ArithmeticException( "Overflow:  Gcd  is  2  >>  31 ");  }  [BUGGY]      u  /=  2;  v  /=  2;  k++;  //  cast  out  twos.  }  if  (k  ==  31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }    int  t  =  ((u  &  1)  ==  1)  ?  v  :  -(u  /  2)/*  B3  */;  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  short  NS  PS  ZS  boolean  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  k  t  u  v  	projects/Math94/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	430	430	1	replace	int  k  =((  u  &  1)  ==  0  &&  v  &  2)  ==  0  &&  k  <  31)  {  throw  new  ArithmeticException( "Overflow:  Gcd  is  2  >>  31 ");  }	  int    k    =((    u    &    1)    ==    0    &&    v    &    2)    ==    0    &&    k    <    31)    {    throw    new    ArithmeticException(   "Overflow:    Gcd    is    2    >>    31   ");    	non-compiled	[CE]  <identifier>  expected	30	None	replace
115	[BUG]  [BUGGY]  int  k  =((  u  &  1)  ==  0  &&  (v  &  2)  ==  0)&&  k  <  31)  {  throw  new  ArithmeticException( "Overflow:  Gcd  is  2  >>  31 ");  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are        [BUGGY]  int  k  =((  u  &  1)  ==  0  &&  (v  &  2)  ==  0)&&  k  <  31)  {  throw  new  ArithmeticException( "Overflow:  Gcd  is  2  >>  31 ");  [BUGGY]      u  /=  2;  v  /=  2;  k++;  //  cast  out  twos.  }  if  (k  ==  31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }    int  t  =  ((u  &  1)  ==  1)  ?  v  :  -(u  /  2)/*  B3  */;  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  short  NS  PS  ZS  boolean  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  k  t  u  v  	projects/Math94/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	430	430	1	replace	int  k  =((  u  &  1)  ==  0  &&  (v  &  2)  ==  0)&&  k  <  31)  {  throw  new  ArithmeticException( "Overflow:  Gcd  is  2  >>  31 ");	  int    k    =((    u    &    1)    ==    0    &&    v    &    2)    ==    0    &&    k    <    31)    {    throw    new    ArithmeticException(   "Overflow:    Gcd    is    2    >>    31   ");    	non-compiled	[CE]  <identifier>  expected	30	None	replace
116	[BUG]  [BUGGY]  int  k  =((  u  &  1)  ==  0  &&  (v  &  1)  ==  0)?  31  :  -(u  /  2)/  B3  */);  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are        [BUGGY]  int  k  =((  u  &  1)  ==  0  &&  (v  &  1)  ==  0)?  31  :  -(u  /  2)/  B3  */);  [BUGGY]      u  /=  2;  v  /=  2;  k++;  //  cast  out  twos.  }  if  (k  ==  31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }    int  t  =  ((u  &  1)  ==  1)  ?  v  :  -(u  /  2)/*  B3  */;  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  short  NS  PS  ZS  boolean  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  k  t  u  v  	projects/Math94/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	430	430	1	replace	int  k  =((  u  &  1)  ==  0  &&  (v  &  1)  ==  0)?  31  :  -(u  /  2)/  B3  */);	  int    k    =((    u    &    1)    ==    0    &&    (v    &    1)    ==    0)?    gcd    :    -(u    /    2)/    B3    */);    	non-compiled	[CE]  <identifier>  expected	48	None	replace
117	[BUG]  [BUGGY]  ((  u  &  1)  ==  0  &&  k  <  32)?  v  :  -(u  /  2)/*  B3  */);  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are        [BUGGY]  ((  u  &  1)  ==  0  &&  k  <  32)?  v  :  -(u  /  2)/*  B3  */);  [BUGGY]      v  /=  2;  k++;  //  cast  out  twos.  }  if  (k  ==  31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }    int  t  =  ((u  &  1)  ==  1)  ?  v  :  -(u  /  2)/*  B3  */;  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  short  NS  PS  ZS  boolean  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  k  t  u  v  	projects/Math94/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	430	430	1	replace	((  u  &  1)  ==  0  &&  k  <  32)?  v  :  -(u  /  2)/*  B3  */);	  ((    u    &    1)    ==    0    &&    k    <    31)?    v    :    -(u    /    2)/*    B3    */);    	non-compiled	[CE]  <identifier>  expected	3	None	replace
118	[BUG]  [BUGGY]  ((  u  &  1)  ==  0  &&  k  <  31)?  v  :  -(u  /  2)/*  B3  */,  t);  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are        [BUGGY]  ((  u  &  1)  ==  0  &&  k  <  31)?  v  :  -(u  /  2)/*  B3  */,  t);  [BUGGY]      v  /=  2;  k++;  //  cast  out  twos.  }  if  (k  ==  31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }    int  t  =  ((u  &  1)  ==  1)  ?  v  :  -(u  /  2)/*  B3  */;  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  short  NS  PS  ZS  boolean  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  k  t  u  v  	projects/Math94/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	430	430	1	replace	((  u  &  1)  ==  0  &&  k  <  31)?  v  :  -(u  /  2)/*  B3  */,  t);	  ((    u    &    1)    ==    0    &&    k    <    31)?    v    :    -(u    /    2)/*    B3    */);    	non-compiled	[CE]  <identifier>  expected	3	None	replace
119	[BUG]  [BUGGY]  int  k  =((  u  &  1)  ==  0  &&  v  &  1)  ==  0)  {  throw  new  ArithmeticException( "gcd  is  2  >>  31 ");  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are        [BUGGY]  int  k  =((  u  &  1)  ==  0  &&  v  &  1)  ==  0)  {  throw  new  ArithmeticException( "gcd  is  2  >>  31 ");  [BUGGY]      u  /=  2;  v  /=  2;  k++;  //  cast  out  twos.  }  if  (k  ==  31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }    int  t  =  ((u  &  1)  ==  1)  ?  v  :  -(u  /  2)/*  B3  */;  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  short  NS  PS  ZS  boolean  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  k  t  u  v  	projects/Math94/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	430	430	1	replace	int  k  =((  u  &  1)  ==  0  &&  v  &  1)  ==  0)  {  throw  new  ArithmeticException( "gcd  is  2  >>  31 ");	  int    k    =((    u    &    1)    ==    0    &&    v    &    1)    ==    0)    {    throw    new    ArithmeticException(   "overflow:    gcd    is    2    >>    31   ");    	non-compiled	[CE]  <identifier>  expected	53	None	replace
120	[BUG]  [BUGGY]  int  k  =((  u  &  1)  ==  0  &&  v  &  2)  ==  0)  {  throw  new  ArithmeticException( "overflow:  gcd  is  2  >>  31 ");  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are        [BUGGY]  int  k  =((  u  &  1)  ==  0  &&  v  &  2)  ==  0)  {  throw  new  ArithmeticException( "overflow:  gcd  is  2  >>  31 ");  [BUGGY]      u  /=  2;  v  /=  2;  k++;  //  cast  out  twos.  }  if  (k  ==  31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }    int  t  =  ((u  &  1)  ==  1)  ?  v  :  -(u  /  2)/*  B3  */;  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  short  NS  PS  ZS  boolean  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  k  t  u  v  	projects/Math94/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	430	430	1	replace	int  k  =((  u  &  1)  ==  0  &&  v  &  2)  ==  0)  {  throw  new  ArithmeticException( "overflow:  gcd  is  2  >>  31 ");	  int    k    =((    u    &    1)    ==    0    &&    v    &    1)    ==    0)    {    throw    new    ArithmeticException(   "overflow:    gcd    is    2    >>    31   ");    	non-compiled	[CE]  <identifier>  expected	53	None	replace
121	[BUG]  [BUGGY]  int  k  =((  u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  32)?  gcd  :  -(u  /  2)/  B3  */);  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are        [BUGGY]  int  k  =((  u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  32)?  gcd  :  -(u  /  2)/  B3  */);  [BUGGY]      u  /=  2;  v  /=  2;  k++;  //  cast  out  twos.  }  if  (k  ==  31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }    int  t  =  ((u  &  1)  ==  1)  ?  v  :  -(u  /  2)/*  B3  */;  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  short  NS  PS  ZS  boolean  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  k  t  u  v  	projects/Math94/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	430	430	1	replace	int  k  =((  u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  32)?  gcd  :  -(u  /  2)/  B3  */);	  int    k    =((    u    &    1)    ==    0    &&    (v    &    1)    ==    0    &&    k    <    31)?    gcd    :    -(u    /    2)/    B3    */);    	non-compiled	[CE]  <identifier>  expected	33	None	replace
122	[BUG]  [BUGGY]  int  k  =((  u  &  1)  ==  0  ||  v  &  1)  ==  0  ||  k  >=  31)  {  throw  new  ArithmeticException( "overflow:  gcd  is  2  >>  31 ");  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are        [BUGGY]  int  k  =((  u  &  1)  ==  0  ||  v  &  1)  ==  0  ||  k  >=  31)  {  throw  new  ArithmeticException( "overflow:  gcd  is  2  >>  31 ");  [BUGGY]      u  /=  2;  v  /=  2;  k++;  //  cast  out  twos.  }  if  (k  ==  31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }    int  t  =  ((u  &  1)  ==  1)  ?  v  :  -(u  /  2)/*  B3  */;  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  short  NS  PS  ZS  boolean  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  k  t  u  v  	projects/Math94/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	430	430	1	replace	int  k  =((  u  &  1)  ==  0  ||  v  &  1)  ==  0  ||  k  >=  31)  {  throw  new  ArithmeticException( "overflow:  gcd  is  2  >>  31 ");	  int    k    =((    u    &    1)    ==    0    ||    v    &    1)    ==    0    ||    k    <    31)    {    throw    new    ArithmeticException(   "overflow:    gcd    is    2    >>    31   ");    	non-compiled	[CE]  <identifier>  expected	24	None	replace
123	[BUG]  [BUGGY]  int  k  =((  u  &  1)  ==  0  ||  v  &  2)  ==  0  ||  k  <  31)  {  throw  new  ArithmeticException( "overflow:  gcd  is  2  >>  31 ");  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are        [BUGGY]  int  k  =((  u  &  1)  ==  0  ||  v  &  2)  ==  0  ||  k  <  31)  {  throw  new  ArithmeticException( "overflow:  gcd  is  2  >>  31 ");  [BUGGY]      u  /=  2;  v  /=  2;  k++;  //  cast  out  twos.  }  if  (k  ==  31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }    int  t  =  ((u  &  1)  ==  1)  ?  v  :  -(u  /  2)/*  B3  */;  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  short  NS  PS  ZS  boolean  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  k  t  u  v  	projects/Math94/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	430	430	1	replace	int  k  =((  u  &  1)  ==  0  ||  v  &  2)  ==  0  ||  k  <  31)  {  throw  new  ArithmeticException( "overflow:  gcd  is  2  >>  31 ");	  int    k    =((    u    &    1)    ==    0    ||    v    &    1)    ==    0    ||    k    <    31)    {    throw    new    ArithmeticException(   "overflow:    gcd    is    2    >>    31   ");    	non-compiled	[CE]  <identifier>  expected	24	None	replace
124	[BUG]  [BUGGY]  int  k  =((  u  &  1)  ==  0  ||  v  &  1)  ==  0  ||  k  <  31)  {  throw  new  ArithmeticException( "overflow:  Gcd  is  2  >>  31 ");  }  [CE]  <identifier>  expected  [FE]            AssertionFailedError      [CONTEXT]      if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are        [BUGGY]  int  k  =((  u  &  1)  ==  0  ||  v  &  1)  ==  0  ||  k  <  31)  {  throw  new  ArithmeticException( "overflow:  Gcd  is  2  >>  31 ");  }  [BUGGY]      u  /=  2;  v  /=  2;  k++;  //  cast  out  twos.  }  if  (k  ==  31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }    int  t  =  ((u  &  1)  ==  1)  ?  v  :  -(u  /  2)/*  B3  */;  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  short  NS  PS  ZS  boolean  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  k  t  u  v  	projects/Math94/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	430	430	1	replace	int  k  =((  u  &  1)  ==  0  ||  v  &  1)  ==  0  ||  k  <  31)  {  throw  new  ArithmeticException( "overflow:  Gcd  is  2  >>  31 ");  }	  int    k    =((    u    &    1)    ==    0    &&    v    &    1)    ==    0    &&    k    <    31)    {    throw    new    ArithmeticException(   "overflow:    Gcd    is    2    >>    31   ");    }    	non-compiled	[CE]  <identifier>  expected	45	None	replace
125	[BUG]  [BUGGY]  int  k  =((  u  &  1)  ==  0  ||(v  &  1)  ==  0  &&  k  <  31)  {  throw  new  ArithmeticException( "Overflow:  Gcd  is  2  >>  31 ");  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are        [BUGGY]  int  k  =((  u  &  1)  ==  0  ||(v  &  1)  ==  0  &&  k  <  31)  {  throw  new  ArithmeticException( "Overflow:  Gcd  is  2  >>  31 ");  [BUGGY]      u  /=  2;  v  /=  2;  k++;  //  cast  out  twos.  }  if  (k  ==  31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }    int  t  =  ((u  &  1)  ==  1)  ?  v  :  -(u  /  2)/*  B3  */;  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  short  NS  PS  ZS  boolean  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  k  t  u  v  	projects/Math94/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	430	430	1	replace	int  k  =((  u  &  1)  ==  0  ||(v  &  1)  ==  0  &&  k  <  31)  {  throw  new  ArithmeticException( "Overflow:  Gcd  is  2  >>  31 ");	  int    k    =((    u    &    1)    ==    0    &&    (v    &    1)    ==    0    &&    k    <    31)    {    throw    new    ArithmeticException(   "Overflow:    Gcd    is    2    >>    31   ");    	non-compiled	[CE]  <identifier>  expected	29	None	replace
126	[BUG]  [BUGGY]  int  k  =((  u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  throw  new  ArithmeticException( "Overflow:  Gcd  is  2  >>  31 ");  }  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are        [BUGGY]  int  k  =((  u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  throw  new  ArithmeticException( "Overflow:  Gcd  is  2  >>  31 ");  }  [BUGGY]      u  /=  2;  v  /=  2;  k++;  //  cast  out  twos.  }  if  (k  ==  31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }    int  t  =  ((u  &  1)  ==  1)  ?  v  :  -(u  /  2)/*  B3  */;  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  short  NS  PS  ZS  boolean  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  k  t  u  v  	projects/Math94/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	430	430	1	replace	int  k  =((  u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  throw  new  ArithmeticException( "Overflow:  Gcd  is  2  >>  31 ");  }	  int    k    =((    u    &    1)    ==    0    &&    (v    &    1)    ==    0    &&    k    <    31)    {    throw    new    ArithmeticException(   "Overflow:    Gcd    is    2    >>    31   ");    	non-compiled	[CE]  <identifier>  expected	29	None	replace
127	[BUG]  [BUGGY]  ((  u  &  1)  ==  0  &&(v  &  2)  ==  0  &&  k  <  31))  {  throw  new  ArithmeticException( "gcd  is  2  >>  31 ");  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are        [BUGGY]  ((  u  &  1)  ==  0  &&(v  &  2)  ==  0  &&  k  <  31))  {  throw  new  ArithmeticException( "gcd  is  2  >>  31 ");  [BUGGY]      u  /=  2;  v  /=  2;  k++;  //  cast  out  twos.  }  if  (k  ==  31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }    int  t  =  ((u  &  1)  ==  1)  ?  v  :  -(u  /  2)/*  B3  */;  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  short  NS  PS  ZS  boolean  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  k  t  u  v  	projects/Math94/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	430	430	1	replace	((  u  &  1)  ==  0  &&(v  &  2)  ==  0  &&  k  <  31))  {  throw  new  ArithmeticException( "gcd  is  2  >>  31 ");	  ((    u    &    1)    ==    0    &&(v    &    2)    ==    0    &&    k    <    31))    {    throw    new    ArithmeticException(   "Overflow:    gcd    is    2    >>    31   ");    	non-compiled	[CE]  <identifier>  expected	44	None	replace
128	[BUG]  [BUGGY]  int  k  =((  u  &  1)  ==  0  ||  v  &  1)  ==  0  ||  k  >=  31)  {  throw  new  ArithmeticException( "Overflow:  gcd  is  2  >>  31 ");  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are        [BUGGY]  int  k  =((  u  &  1)  ==  0  ||  v  &  1)  ==  0  ||  k  >=  31)  {  throw  new  ArithmeticException( "Overflow:  gcd  is  2  >>  31 ");  [BUGGY]      u  /=  2;  v  /=  2;  k++;  //  cast  out  twos.  }  if  (k  ==  31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }    int  t  =  ((u  &  1)  ==  1)  ?  v  :  -(u  /  2)/*  B3  */;  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  short  NS  PS  ZS  boolean  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  k  t  u  v  	projects/Math94/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	430	430	1	replace	int  k  =((  u  &  1)  ==  0  ||  v  &  1)  ==  0  ||  k  >=  31)  {  throw  new  ArithmeticException( "Overflow:  gcd  is  2  >>  31 ");	  int    k    =((    u    &    1)    ==    0    ||    v    &    1)    ==    0    ||    k    <    31)    {    throw    new    ArithmeticException(   "Overflow:    gcd    is    2    >>    31   ");    	non-compiled	[CE]  <identifier>  expected	7	None	replace
129	[BUG]  [BUGGY]  int  k  =((  u  &  1)  ==  0  ||  v  &  2)  ==  0  ||  k  <  31)  {  throw  new  ArithmeticException( "Overflow:  gcd  is  2  >>  31 ");  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are        [BUGGY]  int  k  =((  u  &  1)  ==  0  ||  v  &  2)  ==  0  ||  k  <  31)  {  throw  new  ArithmeticException( "Overflow:  gcd  is  2  >>  31 ");  [BUGGY]      u  /=  2;  v  /=  2;  k++;  //  cast  out  twos.  }  if  (k  ==  31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }    int  t  =  ((u  &  1)  ==  1)  ?  v  :  -(u  /  2)/*  B3  */;  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  short  NS  PS  ZS  boolean  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  k  t  u  v  	projects/Math94/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	430	430	1	replace	int  k  =((  u  &  1)  ==  0  ||  v  &  2)  ==  0  ||  k  <  31)  {  throw  new  ArithmeticException( "Overflow:  gcd  is  2  >>  31 ");	  int    k    =((    u    &    1)    ==    0    ||    v    &    1)    ==    0    ||    k    <    31)    {    throw    new    ArithmeticException(   "Overflow:    gcd    is    2    >>    31   ");    	non-compiled	[CE]  <identifier>  expected	7	None	replace
130	[BUG]  [BUGGY]  int  k  =((  u  &  1)  ==  0  &&  v  &  1)  ==  0  &&  k  <  31)  {  throw  new  ArithmeticException( "Overflow:  Gcd  is  2  >>  31 ");  }  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are        [BUGGY]  int  k  =((  u  &  1)  ==  0  &&  v  &  1)  ==  0  &&  k  <  31)  {  throw  new  ArithmeticException( "Overflow:  Gcd  is  2  >>  31 ");  }  [BUGGY]      u  /=  2;  v  /=  2;  k++;  //  cast  out  twos.  }  if  (k  ==  31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }    int  t  =  ((u  &  1)  ==  1)  ?  v  :  -(u  /  2)/*  B3  */;  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  short  NS  PS  ZS  boolean  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  k  t  u  v  	projects/Math94/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	430	430	1	replace	int  k  =((  u  &  1)  ==  0  &&  v  &  1)  ==  0  &&  k  <  31)  {  throw  new  ArithmeticException( "Overflow:  Gcd  is  2  >>  31 ");  }	  int    k    =((    u    &    1)    ==    1    &&    v    &    1)    ==    1    &&    k    <    31)    {    throw    new    ArithmeticException(   "Overflow:    Gcd    is    2    >>    31   ");    	non-compiled	[CE]  <identifier>  expected	12	None	replace
131	[BUG]  [BUGGY]  int  k  =((  u  &  1)  ==  0  ||  v  &  1)  ==  0  ||  k  >=  31)  {  throw  new  ArithmeticException( "overflow:  Gcd  is  2  >>  31 ");  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are        [BUGGY]  int  k  =((  u  &  1)  ==  0  ||  v  &  1)  ==  0  ||  k  >=  31)  {  throw  new  ArithmeticException( "overflow:  Gcd  is  2  >>  31 ");  [BUGGY]      u  /=  2;  v  /=  2;  k++;  //  cast  out  twos.  }  if  (k  ==  31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }    int  t  =  ((u  &  1)  ==  1)  ?  v  :  -(u  /  2)/*  B3  */;  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  short  NS  PS  ZS  boolean  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  k  t  u  v  	projects/Math94/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	430	430	1	replace	int  k  =((  u  &  1)  ==  0  ||  v  &  1)  ==  0  ||  k  >=  31)  {  throw  new  ArithmeticException( "overflow:  Gcd  is  2  >>  31 ");	  int    k    =((    u    &    1)    ==    0    ||    v    &    1)    ==    0    ||    k    <    31)    {    throw    new    ArithmeticException(   "overflow:    Gcd    is    2    >>    31   ");    	non-compiled	[CE]  <identifier>  expected	21	None	replace
132	[BUG]  [BUGGY]  int  k  =((  u  &  1)  ==  0  ||  v  &  2)  ==  0  ||  k  <  31)  {  throw  new  ArithmeticException( "overflow:  Gcd  is  2  >>  31 ");  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are        [BUGGY]  int  k  =((  u  &  1)  ==  0  ||  v  &  2)  ==  0  ||  k  <  31)  {  throw  new  ArithmeticException( "overflow:  Gcd  is  2  >>  31 ");  [BUGGY]      u  /=  2;  v  /=  2;  k++;  //  cast  out  twos.  }  if  (k  ==  31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }    int  t  =  ((u  &  1)  ==  1)  ?  v  :  -(u  /  2)/*  B3  */;  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  short  NS  PS  ZS  boolean  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  k  t  u  v  	projects/Math94/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	430	430	1	replace	int  k  =((  u  &  1)  ==  0  ||  v  &  2)  ==  0  ||  k  <  31)  {  throw  new  ArithmeticException( "overflow:  Gcd  is  2  >>  31 ");	  int    k    =((    u    &    1)    ==    0    ||    v    &    1)    ==    0    ||    k    <    31)    {    throw    new    ArithmeticException(   "overflow:    Gcd    is    2    >>    31   ");    	non-compiled	[CE]  <identifier>  expected	21	None	replace
133	[BUG]  [BUGGY]  ((  u  &  1)  ==  1)?  v  :  -(u  /  2)/  2  *  B3  */);  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are        [BUGGY]  ((  u  &  1)  ==  1)?  v  :  -(u  /  2)/  2  *  B3  */);  [BUGGY]      v  /=  2;  k++;  //  cast  out  twos.  }  if  (k  ==  31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }    int  t  =  ((u  &  1)  ==  1)  ?  v  :  -(u  /  2)/*  B3  */;  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  short  NS  PS  ZS  boolean  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  k  t  u  v  	projects/Math94/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	430	430	1	replace	((  u  &  1)  ==  1)?  v  :  -(u  /  2)/  2  *  B3  */);	  ((    u    &    1)    ==    1)?    v    :    -(u    /    2)/*    B3    */);    	non-compiled	[CE]  <identifier>  expected	38	None	replace
134	[BUG]  [BUGGY]  ((  u  &  1)  ==  1)?  v  :  -(u  /  2)/  2.0  */);  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are        [BUGGY]  ((  u  &  1)  ==  1)?  v  :  -(u  /  2)/  2.0  */);  [BUGGY]      v  /=  2;  k++;  //  cast  out  twos.  }  if  (k  ==  31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }    int  t  =  ((u  &  1)  ==  1)  ?  v  :  -(u  /  2)/*  B3  */;  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  short  NS  PS  ZS  boolean  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  k  t  u  v  	projects/Math94/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	430	430	1	replace	((  u  &  1)  ==  1)?  v  :  -(u  /  2)/  2.0  */);	  ((    u    &    1)    ==    1)?    v    :    -(u    /    2)/*    B3    */);    	non-compiled	[CE]  <identifier>  expected	38	None	replace
135	[BUG]  [BUGGY]  ((  u  &  1)  ==  0  &&(v  &  1)  ==  0  &&  k  <  31))  {  throw  new  ArithmeticException( "gcd  is  2  >>  31 ");  }  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are        [BUGGY]  ((  u  &  1)  ==  0  &&(v  &  1)  ==  0  &&  k  <  31))  {  throw  new  ArithmeticException( "gcd  is  2  >>  31 ");  }  [BUGGY]      u  /=  2;  v  /=  2;  k++;  //  cast  out  twos.  }  if  (k  ==  31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }    int  t  =  ((u  &  1)  ==  1)  ?  v  :  -(u  /  2)/*  B3  */;  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  short  NS  PS  ZS  boolean  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  k  t  u  v  	projects/Math94/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	430	430	1	replace	((  u  &  1)  ==  0  &&(v  &  1)  ==  0  &&  k  <  31))  {  throw  new  ArithmeticException( "gcd  is  2  >>  31 ");  }	  ((    u    &    1)    ==    0    &&(v    &    1)    ==    0    &&    k    <    31))    {    throw    new    ArithmeticException(   "gcd    is    2    >>    31   ");    	non-compiled	[CE]  <identifier>  expected	42	None	replace
136	[BUG]  [BUGGY]  ((  u  &  1)  ==  0  ||(v  &  1)  ==  0)&&  k  <  31))  {  throw  new  ArithmeticException( "overflow:  gcd  is  2  >>  31 ");  [CE]  <identifier>  expected  [FE]            AssertionFailedError      [CONTEXT]      if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are        [BUGGY]  ((  u  &  1)  ==  0  ||(v  &  1)  ==  0)&&  k  <  31))  {  throw  new  ArithmeticException( "overflow:  gcd  is  2  >>  31 ");  [BUGGY]      u  /=  2;  v  /=  2;  k++;  //  cast  out  twos.  }  if  (k  ==  31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }    int  t  =  ((u  &  1)  ==  1)  ?  v  :  -(u  /  2)/*  B3  */;  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  short  NS  PS  ZS  boolean  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  k  t  u  v  	projects/Math94/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	430	430	1	replace	((  u  &  1)  ==  0  ||(v  &  1)  ==  0)&&  k  <  31))  {  throw  new  ArithmeticException( "overflow:  gcd  is  2  >>  31 ");	  ((    u    &    1)    ==    0    &&(v    &    1)    ==    0)&&    k    <    31))    {    throw    new    ArithmeticException(   "overflow:    gcd    is    2    >>    31   ");    	non-compiled	[CE]  <identifier>  expected	54	None	replace
137	[BUG]  [BUGGY]  ((  u  &  1)  ==  0  &&(v  &  1)  ==  0)  &&  k  <  31))  {  throw  new  ArithmeticException( "overflow:  gcd  is  2  >>  31 ");  }  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are        [BUGGY]  ((  u  &  1)  ==  0  &&(v  &  1)  ==  0)  &&  k  <  31))  {  throw  new  ArithmeticException( "overflow:  gcd  is  2  >>  31 ");  }  [BUGGY]      u  /=  2;  v  /=  2;  k++;  //  cast  out  twos.  }  if  (k  ==  31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }    int  t  =  ((u  &  1)  ==  1)  ?  v  :  -(u  /  2)/*  B3  */;  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  short  NS  PS  ZS  boolean  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  k  t  u  v  	projects/Math94/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	430	430	1	replace	((  u  &  1)  ==  0  &&(v  &  1)  ==  0)  &&  k  <  31))  {  throw  new  ArithmeticException( "overflow:  gcd  is  2  >>  31 ");  }	  ((    u    &    1)    ==    0    &&(v    &    1)    ==    0)&&    k    <    31))    {    throw    new    ArithmeticException(   "overflow:    gcd    is    2    >>    31   ");    	non-compiled	[CE]  <identifier>  expected	54	None	replace
138	[BUG]  [BUGGY]  int  k  =((  u  &  1)  ==  0  &&  v  &  2)  ==  0  &&  k  <  31)  {  throw  new  ArithmeticException( "overflow:  gcd  is  2  >>  31 ");  }  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are        [BUGGY]  int  k  =((  u  &  1)  ==  0  &&  v  &  2)  ==  0  &&  k  <  31)  {  throw  new  ArithmeticException( "overflow:  gcd  is  2  >>  31 ");  }  [BUGGY]      u  /=  2;  v  /=  2;  k++;  //  cast  out  twos.  }  if  (k  ==  31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }    int  t  =  ((u  &  1)  ==  1)  ?  v  :  -(u  /  2)/*  B3  */;  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  short  NS  PS  ZS  boolean  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  k  t  u  v  	projects/Math94/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	430	430	1	replace	int  k  =((  u  &  1)  ==  0  &&  v  &  2)  ==  0  &&  k  <  31)  {  throw  new  ArithmeticException( "overflow:  gcd  is  2  >>  31 ");  }	  int    k    =((    u    &    1)    ==    0    &&    v    &    2)    ==    0    &&    k    <    31)    {    throw    new    ArithmeticException(   "overflow:    gcd    is    2    >>    31   ");    	non-compiled	[CE]  <identifier>  expected	39	None	replace
139	[BUG]  [BUGGY]  int  k  =((  u  &  1)  ==  0  &&  v  &  2)  ==  0  &&  k  <  32)  {  throw  new  ArithmeticException( "overflow:  gcd  is  2  >>  31 ");  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are        [BUGGY]  int  k  =((  u  &  1)  ==  0  &&  v  &  2)  ==  0  &&  k  <  32)  {  throw  new  ArithmeticException( "overflow:  gcd  is  2  >>  31 ");  [BUGGY]      u  /=  2;  v  /=  2;  k++;  //  cast  out  twos.  }  if  (k  ==  31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }    int  t  =  ((u  &  1)  ==  1)  ?  v  :  -(u  /  2)/*  B3  */;  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  short  NS  PS  ZS  boolean  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  k  t  u  v  	projects/Math94/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	430	430	1	replace	int  k  =((  u  &  1)  ==  0  &&  v  &  2)  ==  0  &&  k  <  32)  {  throw  new  ArithmeticException( "overflow:  gcd  is  2  >>  31 ");	  int    k    =((    u    &    1)    ==    0    &&    v    &    2)    ==    0    &&    k    <    31)    {    throw    new    ArithmeticException(   "overflow:    gcd    is    2    >>    31   ");    	non-compiled	[CE]  <identifier>  expected	39	None	replace
140	[BUG]  [BUGGY]  int  k  =((  u  &  1)  ==  0  &&  (v  &  1)  ==  0)?  1  :  -(u  /  2)/  2  *  B3  */);  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are        [BUGGY]  int  k  =((  u  &  1)  ==  0  &&  (v  &  1)  ==  0)?  1  :  -(u  /  2)/  2  *  B3  */);  [BUGGY]      u  /=  2;  v  /=  2;  k++;  //  cast  out  twos.  }  if  (k  ==  31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }    int  t  =  ((u  &  1)  ==  1)  ?  v  :  -(u  /  2)/*  B3  */;  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  short  NS  PS  ZS  boolean  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  k  t  u  v  	projects/Math94/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	430	430	1	replace	int  k  =((  u  &  1)  ==  0  &&  (v  &  1)  ==  0)?  1  :  -(u  /  2)/  2  *  B3  */);	  int    k    =((    u    &    1)    ==    0    &&    (v    &    1)    ==    0)?    1    :    -(u    /    2)/*    B3    */);    	non-compiled	[CE]  <identifier>  expected	15	None	replace
141	[BUG]  [BUGGY]  int  k  =((  u  &  1)  ==  0  ||(v  &  1)  ==  0  &&  k  <  31)  {  throw  new  ArithmeticException( "overflow:  Gcd  is  2  >>  31 ");  [CE]  <identifier>  expected  [FE]            AssertionFailedError      [CONTEXT]      if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are        [BUGGY]  int  k  =((  u  &  1)  ==  0  ||(v  &  1)  ==  0  &&  k  <  31)  {  throw  new  ArithmeticException( "overflow:  Gcd  is  2  >>  31 ");  [BUGGY]      u  /=  2;  v  /=  2;  k++;  //  cast  out  twos.  }  if  (k  ==  31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }    int  t  =  ((u  &  1)  ==  1)  ?  v  :  -(u  /  2)/*  B3  */;  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  short  NS  PS  ZS  boolean  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  k  t  u  v  	projects/Math94/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	430	430	1	replace	int  k  =((  u  &  1)  ==  0  ||(v  &  1)  ==  0  &&  k  <  31)  {  throw  new  ArithmeticException( "overflow:  Gcd  is  2  >>  31 ");	  int    k    =((    u    &    1)    ==    0    &&    (v    &    1)    ==    0    &&    k    <    31)    {    throw    new    ArithmeticException(   "overflow:    Gcd    is    2    >>    31   ");    	non-compiled	[CE]  <identifier>  expected	27	None	replace
142	[BUG]  [BUGGY]  int  k  =((  u  &  1)  ==  0  &&  v  &  1)  ==  0)  {  throw  new  ArithmeticException( "overflow:  gcd  is  2  >>  31 ");  }  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are        [BUGGY]  int  k  =((  u  &  1)  ==  0  &&  v  &  1)  ==  0)  {  throw  new  ArithmeticException( "overflow:  gcd  is  2  >>  31 ");  }  [BUGGY]      u  /=  2;  v  /=  2;  k++;  //  cast  out  twos.  }  if  (k  ==  31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }    int  t  =  ((u  &  1)  ==  1)  ?  v  :  -(u  /  2)/*  B3  */;  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  short  NS  PS  ZS  boolean  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  k  t  u  v  	projects/Math94/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	430	430	1	replace	int  k  =((  u  &  1)  ==  0  &&  v  &  1)  ==  0)  {  throw  new  ArithmeticException( "overflow:  gcd  is  2  >>  31 ");  }	  int    k    =((    u    &    1)    ==    0    &&    v    &    1)    ==    0)    {    throw    new    ArithmeticException(   "Overflow:    gcd    is    2    >>    31   ");    	non-compiled	[CE]  <identifier>  expected	52	None	replace
143	[BUG]  [BUGGY]  int  k  =((  u  &  1)  ==  0  &&  (v  &  2)  ==  0  &&  k  <  31)  {  throw  new  ArithmeticException( "Overflow:  Gcd  is  2  >>  31 ");  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are        [BUGGY]  int  k  =((  u  &  1)  ==  0  &&  (v  &  2)  ==  0  &&  k  <  31)  {  throw  new  ArithmeticException( "Overflow:  Gcd  is  2  >>  31 ");  [BUGGY]      u  /=  2;  v  /=  2;  k++;  //  cast  out  twos.  }  if  (k  ==  31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }    int  t  =  ((u  &  1)  ==  1)  ?  v  :  -(u  /  2)/*  B3  */;  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  short  NS  PS  ZS  boolean  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  k  t  u  v  	projects/Math94/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	430	430	1	replace	int  k  =((  u  &  1)  ==  0  &&  (v  &  2)  ==  0  &&  k  <  31)  {  throw  new  ArithmeticException( "Overflow:  Gcd  is  2  >>  31 ");	  int    k    =((    u    &    1)    ==    0    &&    (v    &    1)    ==    0    &&    k    <    31)    {    throw    new    ArithmeticException(   "Overflow:    Gcd    is    2    >>    31   ");    	non-compiled	[CE]  <identifier>  expected	29	None	replace
144	[BUG]  [BUGGY]  int  k  =((  u  &  1)  ==  0)&&(v  &  1)  ==  0)  {  throw  new  ArithmeticException( "Overflow:  Gcd  is  2  >>  31 ");  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are        [BUGGY]  int  k  =((  u  &  1)  ==  0)&&(v  &  1)  ==  0)  {  throw  new  ArithmeticException( "Overflow:  Gcd  is  2  >>  31 ");  [BUGGY]      u  /=  2;  v  /=  2;  k++;  //  cast  out  twos.  }  if  (k  ==  31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }    int  t  =  ((u  &  1)  ==  1)  ?  v  :  -(u  /  2)/*  B3  */;  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  short  NS  PS  ZS  boolean  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  k  t  u  v  	projects/Math94/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	430	430	1	replace	int  k  =((  u  &  1)  ==  0)&&(v  &  1)  ==  0)  {  throw  new  ArithmeticException( "Overflow:  Gcd  is  2  >>  31 ");	  int    k    =((    u    &    1)    ==    0    &&    (v    &    1)    ==    0    &&    k    <    31)    {    throw    new    ArithmeticException(   "Overflow:    Gcd    is    2    >>    31   ");    	non-compiled	[CE]  <identifier>  expected	29	None	replace
145	[BUG]  [BUGGY]  int  k  =((  u  &  1)  ==  0  &&  v  &  2)  ==  0)  {  throw  new  ArithmeticException( "Overflow:  Gcd  is  2  >>  31 ");  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are        [BUGGY]  int  k  =((  u  &  1)  ==  0  &&  v  &  2)  ==  0)  {  throw  new  ArithmeticException( "Overflow:  Gcd  is  2  >>  31 ");  [BUGGY]      u  /=  2;  v  /=  2;  k++;  //  cast  out  twos.  }  if  (k  ==  31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }    int  t  =  ((u  &  1)  ==  1)  ?  v  :  -(u  /  2)/*  B3  */;  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  short  NS  PS  ZS  boolean  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  k  t  u  v  	projects/Math94/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	430	430	1	replace	int  k  =((  u  &  1)  ==  0  &&  v  &  2)  ==  0)  {  throw  new  ArithmeticException( "Overflow:  Gcd  is  2  >>  31 ");	  int    k    =((    u    &    1)    ==    0    &&    v    &    2)    ==    0    &&    k    <    31)    {    throw    new    ArithmeticException(   "Overflow:    Gcd    is    2    >>    31   ");    	non-compiled	[CE]  <identifier>  expected	30	None	replace
146	[BUG]  [BUGGY]  int  k  =((  u  &  1)  ==  0  &&  v  &  1)  ==  0  &&  k  <  31)  {  throw  new  ArithmeticException( "gcd  is  2  >=  31 ");  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are        [BUGGY]  int  k  =((  u  &  1)  ==  0  &&  v  &  1)  ==  0  &&  k  <  31)  {  throw  new  ArithmeticException( "gcd  is  2  >=  31 ");  [BUGGY]      u  /=  2;  v  /=  2;  k++;  //  cast  out  twos.  }  if  (k  ==  31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }    int  t  =  ((u  &  1)  ==  1)  ?  v  :  -(u  /  2)/*  B3  */;  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  short  NS  PS  ZS  boolean  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  k  t  u  v  	projects/Math94/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	430	430	1	replace	int  k  =((  u  &  1)  ==  0  &&  v  &  1)  ==  0  &&  k  <  31)  {  throw  new  ArithmeticException( "gcd  is  2  >=  31 ");	  int    k    =((    u    &    1)    ==    0    &&    v    &    1)    ==    0    &&    k    <    31)    {    throw    new    ArithmeticException(   "overflow:    Gcd    is    2    >=    31   ");    	non-compiled	[CE]  <identifier>  expected	22	None	replace
147	[BUG]  [BUGGY]  int  k  =((  u  &  1)  ==  0)?  1  :  -(u  /  2)/  B3  */);  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are        [BUGGY]  int  k  =((  u  &  1)  ==  0)?  1  :  -(u  /  2)/  B3  */);  [BUGGY]      u  /=  2;  v  /=  2;  k++;  //  cast  out  twos.  }  if  (k  ==  31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }    int  t  =  ((u  &  1)  ==  1)  ?  v  :  -(u  /  2)/*  B3  */;  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  short  NS  PS  ZS  boolean  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  k  t  u  v  	projects/Math94/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	430	430	1	replace	int  k  =((  u  &  1)  ==  0)?  1  :  -(u  /  2)/  B3  */);	  int    k    =((    u    &    1)    ==    0    &&    (v    &    1)    ==    0)?    1    :    -(u    /    2)/*    B3    */);    	non-compiled	[CE]  <identifier>  expected	15	None	replace
148	[BUG]  [BUGGY]  v  /=  2;  [CE]  <identifier>  expected  [FE]            AssertionFailedError      [CONTEXT]      if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are        [BUGGY]  v  /=  2;  [BUGGY]      u  /=  2;  v  /=  2;  k++;  //  cast  out  twos.  }  if  (k  ==  31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }    int  t  =  ((u  &  1)  ==  1)  ?  v  :  -(u  /  2)/*  B3  */;  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  short  NS  PS  ZS  boolean  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  k  t  u  v  	projects/Math94/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	430	430	1	replace	v  /=  2;	  u    /=    1;    v    /=    2;    	non-compiled	[CE]  <identifier>  expected	34	None	replace
149	[BUG]  [BUGGY]  int  k  =((  u  &  1)  ==  0  &&  v  &  1)  ==  0)  {  throw  new  ArithmeticException( "overflow:  Gcd  is  2  >>  31 ");  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are        [BUGGY]  int  k  =((  u  &  1)  ==  0  &&  v  &  1)  ==  0)  {  throw  new  ArithmeticException( "overflow:  Gcd  is  2  >>  31 ");  [BUGGY]      u  /=  2;  v  /=  2;  k++;  //  cast  out  twos.  }  if  (k  ==  31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }    int  t  =  ((u  &  1)  ==  1)  ?  v  :  -(u  /  2)/*  B3  */;  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  short  NS  PS  ZS  boolean  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  k  t  u  v  	projects/Math94/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	430	430	1	replace	int  k  =((  u  &  1)  ==  0  &&  v  &  1)  ==  0)  {  throw  new  ArithmeticException( "overflow:  Gcd  is  2  >>  31 ");	  int    k    =((    u    &    1)    ==    0    &&    v    &    1)    ==    0)    {    throw    new    ArithmeticException(   "Overflow:    Gcd    is    2    >>    31   ");    	non-compiled	[CE]  <identifier>  expected	50	None	replace
150	[BUG]  [BUGGY]  int  k  =((  u  &  1)  ==  0  &&  v  &  1)  ==  0)  {  throw  new  ArithmeticException( "overflow:  Gcd  is  2  >>  31 ");  }  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are        [BUGGY]  int  k  =((  u  &  1)  ==  0  &&  v  &  1)  ==  0)  {  throw  new  ArithmeticException( "overflow:  Gcd  is  2  >>  31 ");  }  [BUGGY]      u  /=  2;  v  /=  2;  k++;  //  cast  out  twos.  }  if  (k  ==  31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }    int  t  =  ((u  &  1)  ==  1)  ?  v  :  -(u  /  2)/*  B3  */;  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  short  NS  PS  ZS  boolean  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  k  t  u  v  	projects/Math94/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	430	430	1	replace	int  k  =((  u  &  1)  ==  0  &&  v  &  1)  ==  0)  {  throw  new  ArithmeticException( "overflow:  Gcd  is  2  >>  31 ");  }	  int    k    =((    u    &    1)    ==    0    &&    v    &    1)    ==    0)    {    throw    new    ArithmeticException(   "Overflow:    Gcd    is    2    >>    31   ");    	non-compiled	[CE]  <identifier>  expected	50	None	replace
151	[BUG]  [BUGGY]  int  k  =((  u  &  1)  ==  1  &&  (v  &  1)  ==  1  &&  k  <  31)?  gcd  :  -(u  /  2)/  2  *  B3  */);  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are        [BUGGY]  int  k  =((  u  &  1)  ==  1  &&  (v  &  1)  ==  1  &&  k  <  31)?  gcd  :  -(u  /  2)/  2  *  B3  */);  [BUGGY]      u  /=  2;  v  /=  2;  k++;  //  cast  out  twos.  }  if  (k  ==  31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }    int  t  =  ((u  &  1)  ==  1)  ?  v  :  -(u  /  2)/*  B3  */;  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  short  NS  PS  ZS  boolean  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  k  t  u  v  	projects/Math94/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	430	430	1	replace	int  k  =((  u  &  1)  ==  1  &&  (v  &  1)  ==  1  &&  k  <  31)?  gcd  :  -(u  /  2)/  2  *  B3  */);	  int    k    =((    u    &    1)    ==    1    &&    (v    &    1)    ==    1    &&    k    <    31)?    gcd    :    -(u    /    2)/*    B3    */);    	non-compiled	[CE]  <identifier>  expected	25	None	replace
152	[BUG]  [BUGGY]  int  k  =((  u  &  1)  ==  1  &&  (v  &  1)  ==  1  &&  k  <  32)?  gcd  :  -(u  /  2)/  B3  */);  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are        [BUGGY]  int  k  =((  u  &  1)  ==  1  &&  (v  &  1)  ==  1  &&  k  <  32)?  gcd  :  -(u  /  2)/  B3  */);  [BUGGY]      u  /=  2;  v  /=  2;  k++;  //  cast  out  twos.  }  if  (k  ==  31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }    int  t  =  ((u  &  1)  ==  1)  ?  v  :  -(u  /  2)/*  B3  */;  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  short  NS  PS  ZS  boolean  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  k  t  u  v  	projects/Math94/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	430	430	1	replace	int  k  =((  u  &  1)  ==  1  &&  (v  &  1)  ==  1  &&  k  <  32)?  gcd  :  -(u  /  2)/  B3  */);	  int    k    =((    u    &    1)    ==    1    &&    (v    &    1)    ==    1    &&    k    <    31)?    gcd    :    -(u    /    2)/*    B3    */);    	non-compiled	[CE]  <identifier>  expected	25	None	replace
153	[BUG]  [BUGGY]  int  k  =((  u  &  1)  ==  0  &&  (v  &  2)  ==  0  &&  k  <  31)  {  throw  new  ArithmeticException( "overflow:  Gcd  is  2  >>  31 ");  [CE]  <identifier>  expected  [FE]            AssertionFailedError      [CONTEXT]      if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are        [BUGGY]  int  k  =((  u  &  1)  ==  0  &&  (v  &  2)  ==  0  &&  k  <  31)  {  throw  new  ArithmeticException( "overflow:  Gcd  is  2  >>  31 ");  [BUGGY]      u  /=  2;  v  /=  2;  k++;  //  cast  out  twos.  }  if  (k  ==  31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }    int  t  =  ((u  &  1)  ==  1)  ?  v  :  -(u  /  2)/*  B3  */;  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  short  NS  PS  ZS  boolean  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  k  t  u  v  	projects/Math94/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	430	430	1	replace	int  k  =((  u  &  1)  ==  0  &&  (v  &  2)  ==  0  &&  k  <  31)  {  throw  new  ArithmeticException( "overflow:  Gcd  is  2  >>  31 ");	  int    k    =((    u    &    1)    ==    0    &&    (v    &    1)    ==    0    &&    k    <    31)    {    throw    new    ArithmeticException(   "overflow:    Gcd    is    2    >>    31   ");    	non-compiled	[CE]  <identifier>  expected	27	None	replace
154	[BUG]  [BUGGY]  int  k  =((  u  &  1)  ==  0)&&(v  &  1)  ==  0)  {  throw  new  ArithmeticException( "overflow:  Gcd  is  2  >>  31 ");  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are        [BUGGY]  int  k  =((  u  &  1)  ==  0)&&(v  &  1)  ==  0)  {  throw  new  ArithmeticException( "overflow:  Gcd  is  2  >>  31 ");  [BUGGY]      u  /=  2;  v  /=  2;  k++;  //  cast  out  twos.  }  if  (k  ==  31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }    int  t  =  ((u  &  1)  ==  1)  ?  v  :  -(u  /  2)/*  B3  */;  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  short  NS  PS  ZS  boolean  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  k  t  u  v  	projects/Math94/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	430	430	1	replace	int  k  =((  u  &  1)  ==  0)&&(v  &  1)  ==  0)  {  throw  new  ArithmeticException( "overflow:  Gcd  is  2  >>  31 ");	  int    k    =((    u    &    1)    ==    0    &&    (v    &    1)    ==    0    &&    k    <    31)    {    throw    new    ArithmeticException(   "overflow:    Gcd    is    2    >>    31   ");    	non-compiled	[CE]  <identifier>  expected	27	None	replace
155	[BUG]  [BUGGY]  ((  u  &  1)  ==  0  &&(v  &  2)  ==  0)&&  k  <  31));  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are        [BUGGY]  ((  u  &  1)  ==  0  &&(v  &  2)  ==  0)&&  k  <  31));  [BUGGY]      u  /=  2;  v  /=  2;  k++;  //  cast  out  twos.  }  if  (k  ==  31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }    int  t  =  ((u  &  1)  ==  1)  ?  v  :  -(u  /  2)/*  B3  */;  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  short  NS  PS  ZS  boolean  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  k  t  u  v  	projects/Math94/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	430	430	1	replace	((  u  &  1)  ==  0  &&(v  &  2)  ==  0)&&  k  <  31));	  ((    u    &    1)    ==    0    &&    (v    &    2)    ==    0    &&    k    <    31));    	non-compiled	[CE]  <identifier>  expected	14	None	replace
156	[BUG]  [BUGGY]  ((  u  &  1)  ==  0  ||(v  &  2)  ==  0  ||  k  <  31));  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are        [BUGGY]  ((  u  &  1)  ==  0  ||(v  &  2)  ==  0  ||  k  <  31));  [BUGGY]      u  /=  2;  v  /=  2;  k++;  //  cast  out  twos.  }  if  (k  ==  31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }    int  t  =  ((u  &  1)  ==  1)  ?  v  :  -(u  /  2)/*  B3  */;  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  short  NS  PS  ZS  boolean  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  k  t  u  v  	projects/Math94/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	430	430	1	replace	((  u  &  1)  ==  0  ||(v  &  2)  ==  0  ||  k  <  31));	  ((    u    &    1)    ==    0    &&    (v    &    2)    ==    0    &&    k    <    31));    	non-compiled	[CE]  <identifier>  expected	14	None	replace
157	[BUG]  [BUGGY]  int  k  =((  u  &  1)  ==  0  &&  (v  &  1)  ==  0)?  gcd  :  -(u  /  2)/  2  *  B3  */);  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are        [BUGGY]  int  k  =((  u  &  1)  ==  0  &&  (v  &  1)  ==  0)?  gcd  :  -(u  /  2)/  2  *  B3  */);  [BUGGY]      u  /=  2;  v  /=  2;  k++;  //  cast  out  twos.  }  if  (k  ==  31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }    int  t  =  ((u  &  1)  ==  1)  ?  v  :  -(u  /  2)/*  B3  */;  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  short  NS  PS  ZS  boolean  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  k  t  u  v  	projects/Math94/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	430	430	1	replace	int  k  =((  u  &  1)  ==  0  &&  (v  &  1)  ==  0)?  gcd  :  -(u  /  2)/  2  *  B3  */);	  int    k    =((    u    &    1)    ==    0    &&    (v    &    1)    ==    0)?    gcd    :    -(u    /    2)/    *    B3    */);    	non-compiled	[CE]  <identifier>  expected	47	None	replace
158	[BUG]  [BUGGY]  ((  u  &  1)  ==  0  &&(v  &  2)  ==  0)||  k  <  31))  {  throw  new  ArithmeticException( "overflow:  gcd  is  2  >>  31 ");  [CE]  <identifier>  expected  [FE]            AssertionFailedError      [CONTEXT]      if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are        [BUGGY]  ((  u  &  1)  ==  0  &&(v  &  2)  ==  0)||  k  <  31))  {  throw  new  ArithmeticException( "overflow:  gcd  is  2  >>  31 ");  [BUGGY]      u  /=  2;  v  /=  2;  k++;  //  cast  out  twos.  }  if  (k  ==  31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }    int  t  =  ((u  &  1)  ==  1)  ?  v  :  -(u  /  2)/*  B3  */;  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  short  NS  PS  ZS  boolean  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  k  t  u  v  	projects/Math94/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	430	430	1	replace	((  u  &  1)  ==  0  &&(v  &  2)  ==  0)||  k  <  31))  {  throw  new  ArithmeticException( "overflow:  gcd  is  2  >>  31 ");	  ((    u    &    1)    ==    0    &&(v    &    2)    ==    0    &&    k    <    31))    {    throw    new    ArithmeticException(   "overflow:    gcd    is    2    >>    31   ");    	non-compiled	[CE]  <identifier>  expected	6	None	replace
159	[BUG]  [BUGGY]  ((  u  &  1)  ==  0  &&(v  &  2)  ==  0)&&  k  <  31))  {  throw  new  ArithmeticException( "overflow:  gcd  is  2  >>  31 ");  }  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are        [BUGGY]  ((  u  &  1)  ==  0  &&(v  &  2)  ==  0)&&  k  <  31))  {  throw  new  ArithmeticException( "overflow:  gcd  is  2  >>  31 ");  }  [BUGGY]      u  /=  2;  v  /=  2;  k++;  //  cast  out  twos.  }  if  (k  ==  31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }    int  t  =  ((u  &  1)  ==  1)  ?  v  :  -(u  /  2)/*  B3  */;  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  short  NS  PS  ZS  boolean  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  k  t  u  v  	projects/Math94/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	430	430	1	replace	((  u  &  1)  ==  0  &&(v  &  2)  ==  0)&&  k  <  31))  {  throw  new  ArithmeticException( "overflow:  gcd  is  2  >>  31 ");  }	  ((    u    &    1)    ==    0    &&(v    &    2)    ==    0    &&    k    <    31))    {    throw    new    ArithmeticException(   "overflow:    gcd    is    2    >>    31   ");    	non-compiled	[CE]  <identifier>  expected	6	None	replace
160	[BUG]  [BUGGY]  int  k  =((  u  &  1)  ==  0  &&  v  &  2)  ==  0)  {  throw  new  ArithmeticException( "gcd  is  2  >>  31 ");  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are        [BUGGY]  int  k  =((  u  &  1)  ==  0  &&  v  &  2)  ==  0)  {  throw  new  ArithmeticException( "gcd  is  2  >>  31 ");  [BUGGY]      u  /=  2;  v  /=  2;  k++;  //  cast  out  twos.  }  if  (k  ==  31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }    int  t  =  ((u  &  1)  ==  1)  ?  v  :  -(u  /  2)/*  B3  */;  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  short  NS  PS  ZS  boolean  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  k  t  u  v  	projects/Math94/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	430	430	1	replace	int  k  =((  u  &  1)  ==  0  &&  v  &  2)  ==  0)  {  throw  new  ArithmeticException( "gcd  is  2  >>  31 ");	  int    k    =((    u    &    1)    ==    0    &&    v    &    2)    ==    0    &&    k    <    31)    {    throw    new    ArithmeticException(   "overflow:    Gcd    is    2    >>    31   ");    	non-compiled	[CE]  <identifier>  expected	28	None	replace
161	[BUG]  [BUGGY]  int  k  =((  u  &  1)  ==  0  &&  v  &  2)  ==  0)||  k  <  31)  {  throw  new  ArithmeticException( "overflow:  Gcd  is  2  >>  31 ");  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are        [BUGGY]  int  k  =((  u  &  1)  ==  0  &&  v  &  2)  ==  0)||  k  <  31)  {  throw  new  ArithmeticException( "overflow:  Gcd  is  2  >>  31 ");  [BUGGY]      u  /=  2;  v  /=  2;  k++;  //  cast  out  twos.  }  if  (k  ==  31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }    int  t  =  ((u  &  1)  ==  1)  ?  v  :  -(u  /  2)/*  B3  */;  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  short  NS  PS  ZS  boolean  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  k  t  u  v  	projects/Math94/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	430	430	1	replace	int  k  =((  u  &  1)  ==  0  &&  v  &  2)  ==  0)||  k  <  31)  {  throw  new  ArithmeticException( "overflow:  Gcd  is  2  >>  31 ");	  int    k    =((    u    &    1)    ==    0    &&    v    &    2)    ==    0    &&    k    <    31)    {    throw    new    ArithmeticException(   "overflow:    Gcd    is    2    >>    31   ");    	non-compiled	[CE]  <identifier>  expected	28	None	replace
162	[BUG]  [BUGGY]  int  k  =((  u  &  1)  ==  0  &&  v  &  2)  ==  0)||  k  <  31)  {  throw  new  ArithmeticException( "overflow:  gcd  is  2  >>  31 ");  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are        [BUGGY]  int  k  =((  u  &  1)  ==  0  &&  v  &  2)  ==  0)||  k  <  31)  {  throw  new  ArithmeticException( "overflow:  gcd  is  2  >>  31 ");  [BUGGY]      u  /=  2;  v  /=  2;  k++;  //  cast  out  twos.  }  if  (k  ==  31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }    int  t  =  ((u  &  1)  ==  1)  ?  v  :  -(u  /  2)/*  B3  */;  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  short  NS  PS  ZS  boolean  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  k  t  u  v  	projects/Math94/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	430	430	1	replace	int  k  =((  u  &  1)  ==  0  &&  v  &  2)  ==  0)||  k  <  31)  {  throw  new  ArithmeticException( "overflow:  gcd  is  2  >>  31 ");	  int    k    =((    u    &    1)    ==    0    &&    v    &    2)    ==    0    &&    k    <    31)    {    throw    new    ArithmeticException(   "overflow:    gcd    is    2    >>    31   ");    	non-compiled	[CE]  <identifier>  expected	39	None	replace
163	[BUG]  [BUGGY]  ((  u  &  2)  ==  0)?  v  :  -(u  /  2)/  B3  */);  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are        [BUGGY]  ((  u  &  2)  ==  0)?  v  :  -(u  /  2)/  B3  */);  [BUGGY]      u  /=  2;  v  /=  2;  k++;  //  cast  out  twos.  }  if  (k  ==  31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }    int  t  =  ((u  &  1)  ==  1)  ?  v  :  -(u  /  2)/*  B3  */;  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  short  NS  PS  ZS  boolean  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  k  t  u  v  	projects/Math94/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	430	430	1	replace	((  u  &  2)  ==  0)?  v  :  -(u  /  2)/  B3  */);	  ((    u    &    2)    ==    0    &&    k    <    31)?    v    :    -(u    /    2)/    B3    */);    	non-compiled	[CE]  <identifier>  expected	46	None	replace
164	[BUG]  [BUGGY]  int  k  =((  u  &  1)  ==  31  &&  (v  &  1)  ==  31)?  1  :  -(u  /  2)/  B3  */);  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are        [BUGGY]  int  k  =((  u  &  1)  ==  31  &&  (v  &  1)  ==  31)?  1  :  -(u  /  2)/  B3  */);  [BUGGY]      u  /=  2;  v  /=  2;  k++;  //  cast  out  twos.  }  if  (k  ==  31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }    int  t  =  ((u  &  1)  ==  1)  ?  v  :  -(u  /  2)/*  B3  */;  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  short  NS  PS  ZS  boolean  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  k  t  u  v  	projects/Math94/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	430	430	1	replace	int  k  =((  u  &  1)  ==  31  &&  (v  &  1)  ==  31)?  1  :  -(u  /  2)/  B3  */);	  int    k    =((    u    &    1)    ==    0    &&    (v    &    1)    ==    0    &&    k    <    31)?    1    :    -(u    /    2)/    B3    */);    	non-compiled	[CE]  <identifier>  expected	49	None	replace
165	[BUG]  [BUGGY]  ((  u  &  1)  ==  1)?  v  :  -(u  /  2)/  3  *  B3  */);  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are        [BUGGY]  ((  u  &  1)  ==  1)?  v  :  -(u  /  2)/  3  *  B3  */);  [BUGGY]      v  /=  2;  k++;  //  cast  out  twos.  }  if  (k  ==  31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }    int  t  =  ((u  &  1)  ==  1)  ?  v  :  -(u  /  2)/*  B3  */;  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  short  NS  PS  ZS  boolean  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  k  t  u  v  	projects/Math94/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	430	430	1	replace	((  u  &  1)  ==  1)?  v  :  -(u  /  2)/  3  *  B3  */);	  ((    u    &    1)    ==    1)?    v    :    -(u    /    2)/*    B3    */);    	non-compiled	[CE]  <identifier>  expected	38	None	replace
166	[BUG]  [BUGGY]  ((  u  &  1)  ==  0  &&  k  <  31)?  v  :  -(u  /  2)/  2  *  B3  */);  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are        [BUGGY]  ((  u  &  1)  ==  0  &&  k  <  31)?  v  :  -(u  /  2)/  2  *  B3  */);  [BUGGY]      v  /=  2;  k++;  //  cast  out  twos.  }  if  (k  ==  31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }    int  t  =  ((u  &  1)  ==  1)  ?  v  :  -(u  /  2)/*  B3  */;  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  short  NS  PS  ZS  boolean  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  k  t  u  v  	projects/Math94/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	430	430	1	replace	((  u  &  1)  ==  0  &&  k  <  31)?  v  :  -(u  /  2)/  2  *  B3  */);	  ((    u    &    1)    ==    0    &&    k    <    31)?    v    :    -(u    /    2)/*    B3    */);    	non-compiled	[CE]  <identifier>  expected	3	None	replace
167	[BUG]  [BUGGY]  int  k  =((  u  &  1)  ==  0)&&(v  &  1)  ==  0)  {  throw  new  ArithmeticException( "Overflow:  gcd  is  2  >>  31 ");  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are        [BUGGY]  int  k  =((  u  &  1)  ==  0)&&(v  &  1)  ==  0)  {  throw  new  ArithmeticException( "Overflow:  gcd  is  2  >>  31 ");  [BUGGY]      u  /=  2;  v  /=  2;  k++;  //  cast  out  twos.  }  if  (k  ==  31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }    int  t  =  ((u  &  1)  ==  1)  ?  v  :  -(u  /  2)/*  B3  */;  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  short  NS  PS  ZS  boolean  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  k  t  u  v  	projects/Math94/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	430	430	1	replace	int  k  =((  u  &  1)  ==  0)&&(v  &  1)  ==  0)  {  throw  new  ArithmeticException( "Overflow:  gcd  is  2  >>  31 ");	  int    k    =((    u    &    1)    ==    0    &&    (v    &    1)    ==    0    &&    k    <    31)    {    throw    new    ArithmeticException(   "Overflow:    gcd    is    2    >>    31   ");    	non-compiled	[CE]  <identifier>  expected	35	None	replace
168	[BUG]  [BUGGY]  ((  u  &  1)  ==  0  &&  (v  &  1)  ==  0)?  t  :  -(u  /  2)/  B3  */);  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are        [BUGGY]  ((  u  &  1)  ==  0  &&  (v  &  1)  ==  0)?  t  :  -(u  /  2)/  B3  */);  [BUGGY]      u  /=  2;  v  /=  2;  k++;  //  cast  out  twos.  }  if  (k  ==  31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }    int  t  =  ((u  &  1)  ==  1)  ?  v  :  -(u  /  2)/*  B3  */;  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  short  NS  PS  ZS  boolean  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  k  t  u  v  	projects/Math94/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	430	430	1	replace	((  u  &  1)  ==  0  &&  (v  &  1)  ==  0)?  t  :  -(u  /  2)/  B3  */);	  ((    u    &    1)    ==    0    &&    (v    &    1)    ==    0    &&    31)?    t    :    -(u    /    2)/*    B3    */);    	non-compiled	[CE]  <identifier>  expected	9	None	replace
169	[BUG]  [BUGGY]  ((  u  &  1)  ==  0  ||(v  &  1)  ==  0  &&  k  <  31)?  t  :  -(u  /  2)/  B3  */);  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are        [BUGGY]  ((  u  &  1)  ==  0  ||(v  &  1)  ==  0  &&  k  <  31)?  t  :  -(u  /  2)/  B3  */);  [BUGGY]      u  /=  2;  v  /=  2;  k++;  //  cast  out  twos.  }  if  (k  ==  31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }    int  t  =  ((u  &  1)  ==  1)  ?  v  :  -(u  /  2)/*  B3  */;  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  short  NS  PS  ZS  boolean  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  k  t  u  v  	projects/Math94/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	430	430	1	replace	((  u  &  1)  ==  0  ||(v  &  1)  ==  0  &&  k  <  31)?  t  :  -(u  /  2)/  B3  */);	  ((    u    &    1)    ==    0    &&    (v    &    1)    ==    0    &&    k    <    31)?    t    :    -(u    /    2)/    B3    */);    	non-compiled	[CE]  <identifier>  expected	10	None	replace
170	[BUG]  [BUGGY]  ((  u  &  1)  ==  0  &&  k  <  31))  {  throw  new  ArithmeticException( " ");  }  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are        [BUGGY]  ((  u  &  1)  ==  0  &&  k  <  31))  {  throw  new  ArithmeticException( " ");  }  [BUGGY]      v  /=  2;  k++;  //  cast  out  twos.  }  if  (k  ==  31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }    int  t  =  ((u  &  1)  ==  1)  ?  v  :  -(u  /  2)/*  B3  */;  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  short  NS  PS  ZS  boolean  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  k  t  u  v  	projects/Math94/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	430	430	1	replace	((  u  &  1)  ==  0  &&  k  <  31))  {  throw  new  ArithmeticException( " ");  }	  ((    u    &    1)    ==    0    &&    v    &    2)    ==    0)    {    throw    new    ArithmeticException(   "   ");    }    	non-compiled	[CE]  <identifier>  expected	51	None	replace
171	[BUG]  [BUGGY]  ((  v  &  1)  ==  0  &&  v  &  2)  ==  0)  {  throw  new  ArithmeticException( " ");  }  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are        [BUGGY]  ((  v  &  1)  ==  0  &&  v  &  2)  ==  0)  {  throw  new  ArithmeticException( " ");  }  [BUGGY]      v  /=  2;  k++;  //  cast  out  twos.  }  if  (k  ==  31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }    int  t  =  ((u  &  1)  ==  1)  ?  v  :  -(u  /  2)/*  B3  */;  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  short  NS  PS  ZS  boolean  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  k  t  u  v  	projects/Math94/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	430	430	1	replace	((  v  &  1)  ==  0  &&  v  &  2)  ==  0)  {  throw  new  ArithmeticException( " ");  }	  ((    u    &    1)    ==    0    &&    v    &    2)    ==    0)    {    throw    new    ArithmeticException(   "   ");    }    	non-compiled	[CE]  <identifier>  expected	51	None	replace
172	[BUG]  [BUGGY]  ((  u  &  1)  ==  0  &&  k  <  31)?  t  :  -(u  /  2)/  2  *  B3  */);  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are        [BUGGY]  ((  u  &  1)  ==  0  &&  k  <  31)?  t  :  -(u  /  2)/  2  *  B3  */);  [BUGGY]      v  /=  2;  k++;  //  cast  out  twos.  }  if  (k  ==  31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }    int  t  =  ((u  &  1)  ==  1)  ?  v  :  -(u  /  2)/*  B3  */;  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  short  NS  PS  ZS  boolean  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  k  t  u  v  	projects/Math94/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	430	430	1	replace	((  u  &  1)  ==  0  &&  k  <  31)?  t  :  -(u  /  2)/  2  *  B3  */);	  ((    u    &    1)    ==    0    &&    k    <    31)?    t    :    -(u    /    2)/*    B3    */);    	non-compiled	[CE]  <identifier>  expected	4	None	replace
173	[BUG]  [BUGGY]  int  k  =((  u  &  1)  ==  0  ||  v  &  1)  ==  0  ||  k  <  31)  {  throw  new  ArithmeticException( "overflow:  gcd  is  2  >>  31 ");  }  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are        [BUGGY]  int  k  =((  u  &  1)  ==  0  ||  v  &  1)  ==  0  ||  k  <  31)  {  throw  new  ArithmeticException( "overflow:  gcd  is  2  >>  31 ");  }  [BUGGY]      u  /=  2;  v  /=  2;  k++;  //  cast  out  twos.  }  if  (k  ==  31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }    int  t  =  ((u  &  1)  ==  1)  ?  v  :  -(u  /  2)/*  B3  */;  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  short  NS  PS  ZS  boolean  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  k  t  u  v  	projects/Math94/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	430	430	1	replace	int  k  =((  u  &  1)  ==  0  ||  v  &  1)  ==  0  ||  k  <  31)  {  throw  new  ArithmeticException( "overflow:  gcd  is  2  >>  31 ");  }	  int    k    =((    u    &    1)    ==    0    ||    v    &    1)    ==    0    ||    k    <    31)    {    throw    new    ArithmeticException(   "Overflow:    gcd    is    2    >>    31   ");    	non-compiled	[CE]  <identifier>  expected	7	None	replace
174	[BUG]  [BUGGY]  int  k  =((  u  &  1)  ==  1  &&  v  &  1)  ==  1  &&  k  <  31)  {  throw  new  ArithmeticException( "gcd  is  2  >>  31 ");  }  [CE]  <identifier>  expected  [FE]            AssertionFailedError      [CONTEXT]      if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are        [BUGGY]  int  k  =((  u  &  1)  ==  1  &&  v  &  1)  ==  1  &&  k  <  31)  {  throw  new  ArithmeticException( "gcd  is  2  >>  31 ");  }  [BUGGY]      u  /=  2;  v  /=  2;  k++;  //  cast  out  twos.  }  if  (k  ==  31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }    int  t  =  ((u  &  1)  ==  1)  ?  v  :  -(u  /  2)/*  B3  */;  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  short  NS  PS  ZS  boolean  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  k  t  u  v  	projects/Math94/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	430	430	1	replace	int  k  =((  u  &  1)  ==  1  &&  v  &  1)  ==  1  &&  k  <  31)  {  throw  new  ArithmeticException( "gcd  is  2  >>  31 ");  }	  int    k    =((    u    &    1)    ==    1    &&    v    &    1)    ==    1    &&    k    <    31)    {    throw    new    ArithmeticException(   "overflow:    Gcd    is    2    >>    31   ");    	non-compiled	[CE]  <identifier>  expected	20	None	replace
175	[BUG]  [BUGGY]  int  k  =((  u  &  1)  ==  0  ||  v  &  1)  ==  0  ||  k  <  31)  {  throw  new  ArithmeticException( "Overflow:  Gcd  is  2  >>  31 ");  }  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are        [BUGGY]  int  k  =((  u  &  1)  ==  0  ||  v  &  1)  ==  0  ||  k  <  31)  {  throw  new  ArithmeticException( "Overflow:  Gcd  is  2  >>  31 ");  }  [BUGGY]      u  /=  2;  v  /=  2;  k++;  //  cast  out  twos.  }  if  (k  ==  31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }    int  t  =  ((u  &  1)  ==  1)  ?  v  :  -(u  /  2)/*  B3  */;  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  short  NS  PS  ZS  boolean  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  k  t  u  v  	projects/Math94/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	430	430	1	replace	int  k  =((  u  &  1)  ==  0  ||  v  &  1)  ==  0  ||  k  <  31)  {  throw  new  ArithmeticException( "Overflow:  Gcd  is  2  >>  31 ");  }	  int    k    =((    u    &    1)    ==    0    ||    v    &    1)    ==    0    ||    k    <    31)    {    throw    new    ArithmeticException(   "Overflow:    Gcd    is    2    >>    31   ");    	non-compiled	[CE]  <identifier>  expected	11	None	replace
176	[BUG]  [BUGGY]  ((  u  &  1)  ==  0  &&(v  &  1)  ==  0)&&  k  <  31))  {  throw  new  ArithmeticException( "Overflow:  gcd  is  2  >>  31 ");  }  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are        [BUGGY]  ((  u  &  1)  ==  0  &&(v  &  1)  ==  0)&&  k  <  31))  {  throw  new  ArithmeticException( "Overflow:  gcd  is  2  >>  31 ");  }  [BUGGY]      u  /=  2;  v  /=  2;  k++;  //  cast  out  twos.  }  if  (k  ==  31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }    int  t  =  ((u  &  1)  ==  1)  ?  v  :  -(u  /  2)/*  B3  */;  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  short  NS  PS  ZS  boolean  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  k  t  u  v  	projects/Math94/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	430	430	1	replace	((  u  &  1)  ==  0  &&(v  &  1)  ==  0)&&  k  <  31))  {  throw  new  ArithmeticException( "Overflow:  gcd  is  2  >>  31 ");  }	  ((    u    &    1)    ==    0    &&(v    &    1)    ==    0    &&    k    <    31))    {    throw    new    ArithmeticException(   "Overflow:    gcd    is    2    >>    31   ");    }    	non-compiled	[CE]  <identifier>  expected	43	None	replace
177	[BUG]  [BUGGY]  int  k  =  ((  u  &  1)  ==  0  &&  k  <  31)?  v  :  -(u  /  2)/  2  *  B3  */);  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are        [BUGGY]  int  k  =  ((  u  &  1)  ==  0  &&  k  <  31)?  v  :  -(u  /  2)/  2  *  B3  */);  [BUGGY]      v  /=  2;  k++;  //  cast  out  twos.  }  if  (k  ==  31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }    int  t  =  ((u  &  1)  ==  1)  ?  v  :  -(u  /  2)/*  B3  */;  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  short  NS  PS  ZS  boolean  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  k  t  u  v  	projects/Math94/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	430	430	1	replace	int  k  =  ((  u  &  1)  ==  0  &&  k  <  31)?  v  :  -(u  /  2)/  2  *  B3  */);	  int    k    =    ((    u    &    1)    ==    0    &&    k    <    31)?    v    :    -(u    /    2)/*    B3    */);    	non-compiled	[CE]  <identifier>  expected	5	None	replace
178	[BUG]  [BUGGY]  int  k  =((  u  &  1)  ==  0)&&(v  &  1)  ==  0)  {  throw  new  ArithmeticException( "overflow:  gcd  is  2  >>  31 ");  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are        [BUGGY]  int  k  =((  u  &  1)  ==  0)&&(v  &  1)  ==  0)  {  throw  new  ArithmeticException( "overflow:  gcd  is  2  >>  31 ");  [BUGGY]      u  /=  2;  v  /=  2;  k++;  //  cast  out  twos.  }  if  (k  ==  31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }    int  t  =  ((u  &  1)  ==  1)  ?  v  :  -(u  /  2)/*  B3  */;  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  short  NS  PS  ZS  boolean  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  k  t  u  v  	projects/Math94/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	430	430	1	replace	int  k  =((  u  &  1)  ==  0)&&(v  &  1)  ==  0)  {  throw  new  ArithmeticException( "overflow:  gcd  is  2  >>  31 ");	  int    k    =((    u    &    1)    ==    0    &&    (v    &    1)    ==    0    &&    k    <    31)    {    throw    new    ArithmeticException(   "overflow:    gcd    is    2    >>    31   ");    	non-compiled	[CE]  <identifier>  expected	40	None	replace
