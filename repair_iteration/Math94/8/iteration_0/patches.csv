bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]    int  k  =  0;  [CE]  <identifier>  expected  [FE]    AssertionFailedError  [CONTEXT]    if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;  [BUGGY]    int  k  =  0;  [BUGGY]  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are                //  both  even...      u  /=  2;  u  /=  2;  v  /=  2;  k++;  //  cast  out  twos.  }  if  (k  ==  31)  {  throw  new  ArithmeticException( "overflow:  gcd  is  2^31 ");  }    [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  short  NS  PS  ZS  boolean  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  k  t  u  v  	projects/Math94/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	428	430	1	replace	    int  k  =  0;		non-compiled	[CE]  <identifier>  expected	16	None	add
2	[BUG]  [BUGGY]    int  k  =(int)Math.rint((  u  +  1)/  2);  [CE]  <identifier>  expected  [FE]      AssertionFailedError  [CONTEXT]    if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;  [BUGGY]    int  k  =(int)Math.rint((  u  +  1)/  2);  [BUGGY]  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are                //  both  even...      u  /=  2;  u  /=  2;  v  /=  2;  k++;  //  cast  out  twos.  }  if  (k  ==  31)  {  throw  new  ArithmeticException( "overflow:  gcd  is  2^31 ");  }    [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  short  NS  PS  ZS  boolean  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  k  t  u  v  	projects/Math94/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	428	430	1	replace	    int  k  =(int)Math.rint((  u  +  1)/  2);		non-compiled	[CE]  <identifier>  expected	16	None	add
3	[BUG]  [BUGGY]    int  k  =(int)Math.rint((  u  -  1)/  2);  [CE]  <identifier>  expected  [FE]        AssertionFailedError  [CONTEXT]    if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;  [BUGGY]    int  k  =(int)Math.rint((  u  -  1)/  2);  [BUGGY]  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are                //  both  even...      u  /=  2;  u  /=  2;  v  /=  2;  k++;  //  cast  out  twos.  }  if  (k  ==  31)  {  throw  new  ArithmeticException( "overflow:  gcd  is  2^31 ");  }    [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  short  NS  PS  ZS  boolean  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  k  t  u  v  	projects/Math94/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	428	430	1	replace	    int  k  =(int)Math.rint((  u  -  1)/  2);		non-compiled	[CE]  <identifier>  expected	16	None	add
4	[BUG]  [BUGGY]    int  u  =(int)Math.rint((  u  -  1)/  2);  [CE]  <identifier>  expected  [FE]          AssertionFailedError  [CONTEXT]    if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;  [BUGGY]    int  u  =(int)Math.rint((  u  -  1)/  2);  [BUGGY]  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are                //  both  even...      u  /=  2;  u  /=  2;  v  /=  2;  k++;  //  cast  out  twos.  }  if  (k  ==  31)  {  throw  new  ArithmeticException( "overflow:  gcd  is  2^31 ");  }    [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  short  NS  PS  ZS  boolean  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  k  t  u  v  	projects/Math94/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	428	430	1	replace	    int  u  =(int)Math.rint((  u  -  1)/  2);		non-compiled	[CE]  <identifier>  expected	16	None	add
5	[BUG]  [BUGGY]    int  k  =(int)Math.rint((  u  &  1)*  k);  [CE]  <identifier>  expected  [FE]            AssertionFailedError  [CONTEXT]    if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;  [BUGGY]    int  k  =(int)Math.rint((  u  &  1)*  k);  [BUGGY]  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are                //  both  even...      u  /=  2;  u  /=  2;  v  /=  2;  k++;  //  cast  out  twos.  }  if  (k  ==  31)  {  throw  new  ArithmeticException( "overflow:  gcd  is  2^31 ");  }    [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  short  NS  PS  ZS  boolean  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  k  t  u  v  	projects/Math94/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	428	430	1	replace	    int  k  =(int)Math.rint((  u  &  1)*  k);		non-compiled	[CE]  <identifier>  expected	16	None	add
6	[BUG]  [BUGGY]  while(u  >  0  &&  v  <  =  0  &&  k  <  31)  {  [CE]  <identifier>  expected  [FE]    AssertionFailedError  [CONTEXT]    if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;  [BUGGY]  while(u  >  0  &&  v  <  =  0  &&  k  <  31)  {  [BUGGY]    u  /=  2;  v  /=  2;  k++;  //  cast  out  twos.  }  if  (k  ==  31)  {  throw  new  ArithmeticException( "overflow:  gcd  is  2^31 ");  }    [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  short  NS  PS  ZS  boolean  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  k  t  u  v  	projects/Math94/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	428	430	1	replace	while(u  >  0  &&  v  <  =  0  &&  k  <  31)  {	while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are        //  both  even...    u  /=  2;  	non-compiled	[CE]  <identifier>  expected	15	None	replace
7	[BUG]  [BUGGY]  while(u  >  0  &&  k  <  31)  {  [CE]  <identifier>  expected  [FE]      AssertionFailedError  [CONTEXT]    if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;  [BUGGY]  while(u  >  0  &&  k  <  31)  {  [BUGGY]    u  /=  2;  v  /=  2;  k++;  //  cast  out  twos.  }  if  (k  ==  31)  {  throw  new  ArithmeticException( "overflow:  gcd  is  2^31 ");  }    [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  short  NS  PS  ZS  boolean  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  k  t  u  v  	projects/Math94/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	428	430	1	replace	while(u  >  0  &&  k  <  31)  {	while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are        //  both  even...    u  /=  2;  	non-compiled	[CE]  <identifier>  expected	15	None	replace
8	[BUG]  [BUGGY]  while(u  %  2  ==  0  &&  v  >  0  &&  k  <  31)  {  [CE]  <identifier>  expected  [FE]        AssertionFailedError  [CONTEXT]    if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;  [BUGGY]  while(u  %  2  ==  0  &&  v  >  0  &&  k  <  31)  {  [BUGGY]    u  /=  2;  v  /=  2;  k++;  //  cast  out  twos.  }  if  (k  ==  31)  {  throw  new  ArithmeticException( "overflow:  gcd  is  2^31 ");  }    [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  short  NS  PS  ZS  boolean  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  k  t  u  v  	projects/Math94/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	428	430	1	replace	while(u  %  2  ==  0  &&  v  >  0  &&  k  <  31)  {	while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are        //  both  even...    u  /=  2;  	non-compiled	[CE]  <identifier>  expected	15	None	replace
9	[BUG]  [BUGGY]  while(u  %  2  ==  0  &&  k  <  31)  {  [CE]  <identifier>  expected  [FE]          AssertionFailedError  [CONTEXT]    if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;  [BUGGY]  while(u  %  2  ==  0  &&  k  <  31)  {  [BUGGY]    u  /=  2;  v  /=  2;  k++;  //  cast  out  twos.  }  if  (k  ==  31)  {  throw  new  ArithmeticException( "overflow:  gcd  is  2^31 ");  }    [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  short  NS  PS  ZS  boolean  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  k  t  u  v  	projects/Math94/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	428	430	1	replace	while(u  %  2  ==  0  &&  k  <  31)  {	while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are        //  both  even...    u  /=  2;  	non-compiled	[CE]  <identifier>  expected	15	None	replace
10	[BUG]  [BUGGY]    int  k  =(int)Math.pow(10,  k);  [CE]  <identifier>  expected  [FE]    AssertionFailedError  [CONTEXT]    if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;  [BUGGY]    int  k  =(int)Math.pow(10,  k);  [BUGGY]  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are                //  both  even...      u  /=  2;  u  /=  2;  v  /=  2;  k++;  //  cast  out  twos.  }  if  (k  ==  31)  {  throw  new  ArithmeticException( "overflow:  gcd  is  2^31 ");  }    [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  short  NS  PS  ZS  boolean  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  k  t  u  v  	projects/Math94/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	428	430	1	replace	    int  k  =(int)Math.pow(10,  k);		non-compiled	[CE]  <identifier>  expected	16	None	add
11	[BUG]  [BUGGY]    int  k  =(int)Math.rint((  u  <  <  3)+  1);  [CE]  <identifier>  expected  [FE]      AssertionFailedError  [CONTEXT]    if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;  [BUGGY]    int  k  =(int)Math.rint((  u  <  <  3)+  1);  [BUGGY]  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are                //  both  even...      u  /=  2;  u  /=  2;  v  /=  2;  k++;  //  cast  out  twos.  }  if  (k  ==  31)  {  throw  new  ArithmeticException( "overflow:  gcd  is  2^31 ");  }    [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  short  NS  PS  ZS  boolean  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  k  t  u  v  	projects/Math94/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	428	430	1	replace	    int  k  =(int)Math.rint((  u  <  <  3)+  1);		non-compiled	[CE]  <identifier>  expected	16	None	add
12	[BUG]  [BUGGY]    int  k  =(int)Math.pow(10,  y);  [CE]  <identifier>  expected  [FE]        AssertionFailedError  [CONTEXT]    if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;  [BUGGY]    int  k  =(int)Math.pow(10,  y);  [BUGGY]  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are                //  both  even...      u  /=  2;  u  /=  2;  v  /=  2;  k++;  //  cast  out  twos.  }  if  (k  ==  31)  {  throw  new  ArithmeticException( "overflow:  gcd  is  2^31 ");  }    [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  short  NS  PS  ZS  boolean  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  k  t  u  v  	projects/Math94/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	428	430	1	replace	    int  k  =(int)Math.pow(10,  y);		non-compiled	[CE]  <identifier>  expected	16	None	add
13	[BUG]  [BUGGY]    int  k  =(int)Math.floor(v);  [CE]  <identifier>  expected  [FE]          AssertionFailedError  [CONTEXT]    if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;  [BUGGY]    int  k  =(int)Math.floor(v);  [BUGGY]  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are                //  both  even...      u  /=  2;  u  /=  2;  v  /=  2;  k++;  //  cast  out  twos.  }  if  (k  ==  31)  {  throw  new  ArithmeticException( "overflow:  gcd  is  2^31 ");  }    [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  short  NS  PS  ZS  boolean  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  k  t  u  v  	projects/Math94/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	428	430	1	replace	    int  k  =(int)Math.floor(v);		non-compiled	[CE]  <identifier>  expected	16	None	add
14	[BUG]  [BUGGY]  while((  u  &  1)  ==  0  &&(v  &  1)  ==  0  &&  k  <  31)  {  [CE]  <identifier>  expected  [FE]    AssertionFailedError  [CONTEXT]    if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;  [BUGGY]  while((  u  &  1)  ==  0  &&(v  &  1)  ==  0  &&  k  <  31)  {  [BUGGY]    u  /=  2;  v  /=  2;  k++;  //  cast  out  twos.  }  if  (k  ==  31)  {  throw  new  ArithmeticException( "overflow:  gcd  is  2^31 ");  }    [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  short  NS  PS  ZS  boolean  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  k  t  u  v  	projects/Math94/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	428	430	1	replace	while((  u  &  1)  ==  0  &&(v  &  1)  ==  0  &&  k  <  31)  {	while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are        //  both  even...    u  /=  2;  	non-compiled	[CE]  <identifier>  expected	15	None	replace
15	[BUG]  [BUGGY]  while((  u  &  1)!=  0  &&(v  &  1)  ==  0  &&  k  <  31)  {  [CE]  <identifier>  expected  [FE]      AssertionFailedError  [CONTEXT]    if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;  [BUGGY]  while((  u  &  1)!=  0  &&(v  &  1)  ==  0  &&  k  <  31)  {  [BUGGY]    u  /=  2;  v  /=  2;  k++;  //  cast  out  twos.  }  if  (k  ==  31)  {  throw  new  ArithmeticException( "overflow:  gcd  is  2^31 ");  }    [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  short  NS  PS  ZS  boolean  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  k  t  u  v  	projects/Math94/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	428	430	1	replace	while((  u  &  1)!=  0  &&(v  &  1)  ==  0  &&  k  <  31)  {	while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are        //  both  even...    u  /=  2;  	non-compiled	[CE]  <identifier>  expected	15	None	replace
16	[BUG]  [BUGGY]    int  u  =(int)Math.floor(v);  [CE]  <identifier>  expected  [FE]    AssertionFailedError  [CONTEXT]    if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;  [BUGGY]    int  u  =(int)Math.floor(v);  [BUGGY]  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are                //  both  even...      u  /=  2;  u  /=  2;  v  /=  2;  k++;  //  cast  out  twos.  }  if  (k  ==  31)  {  throw  new  ArithmeticException( "overflow:  gcd  is  2^31 ");  }    [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  short  NS  PS  ZS  boolean  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  k  t  u  v  	projects/Math94/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	428	430	1	replace	    int  u  =(int)Math.floor(v);		non-compiled	[CE]  <identifier>  expected	16	None	add
17	[BUG]  [BUGGY]    int  u  =(int)Math.log((  u  +  1)/  2);  [CE]  <identifier>  expected  [FE]      AssertionFailedError  [CONTEXT]    if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;  [BUGGY]    int  u  =(int)Math.log((  u  +  1)/  2);  [BUGGY]  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are                //  both  even...      u  /=  2;  u  /=  2;  v  /=  2;  k++;  //  cast  out  twos.  }  if  (k  ==  31)  {  throw  new  ArithmeticException( "overflow:  gcd  is  2^31 ");  }    [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  short  NS  PS  ZS  boolean  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  k  t  u  v  	projects/Math94/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	428	430	1	replace	    int  u  =(int)Math.log((  u  +  1)/  2);		non-compiled	[CE]  <identifier>  expected	16	None	add
18	[BUG]  [BUGGY]    int  u  =(int)Math.floor(k);  [CE]  <identifier>  expected  [FE]        AssertionFailedError  [CONTEXT]    if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;  [BUGGY]    int  u  =(int)Math.floor(k);  [BUGGY]  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are                //  both  even...      u  /=  2;  u  /=  2;  v  /=  2;  k++;  //  cast  out  twos.  }  if  (k  ==  31)  {  throw  new  ArithmeticException( "overflow:  gcd  is  2^31 ");  }    [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  short  NS  PS  ZS  boolean  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  k  t  u  v  	projects/Math94/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	428	430	1	replace	    int  u  =(int)Math.floor(k);		non-compiled	[CE]  <identifier>  expected	16	None	add
19	[BUG]  [BUGGY]    int  u  =(int)Math.log((  u  <  <  1)/  2);  [CE]  <identifier>  expected  [FE]          AssertionFailedError  [CONTEXT]    if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;  [BUGGY]    int  u  =(int)Math.log((  u  <  <  1)/  2);  [BUGGY]  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are                //  both  even...      u  /=  2;  u  /=  2;  v  /=  2;  k++;  //  cast  out  twos.  }  if  (k  ==  31)  {  throw  new  ArithmeticException( "overflow:  gcd  is  2^31 ");  }    [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  short  NS  PS  ZS  boolean  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  k  t  u  v  	projects/Math94/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	428	430	1	replace	    int  u  =(int)Math.log((  u  <  <  1)/  2);		non-compiled	[CE]  <identifier>  expected	16	None	add
20	[BUG]  [BUGGY]    int  u  =(int)Math.log((  u  <  <  2)/  2);  [CE]  <identifier>  expected  [FE]            AssertionFailedError  [CONTEXT]    if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;  [BUGGY]    int  u  =(int)Math.log((  u  <  <  2)/  2);  [BUGGY]  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are                //  both  even...      u  /=  2;  u  /=  2;  v  /=  2;  k++;  //  cast  out  twos.  }  if  (k  ==  31)  {  throw  new  ArithmeticException( "overflow:  gcd  is  2^31 ");  }    [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  short  NS  PS  ZS  boolean  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  k  t  u  v  	projects/Math94/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	428	430	1	replace	    int  u  =(int)Math.log((  u  <  <  2)/  2);		non-compiled	[CE]  <identifier>  expected	16	None	add
21	[BUG]  [BUGGY]  while((  u  &  1)  ==  0  ||(v  &  1)  ==  0  ||  k  <  31)  {  //  while  u  and  v  are  //  both  even...  u  /=  2;  [CE]  <identifier>  expected  [FE]    AssertionFailedError  [CONTEXT]    if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;  [BUGGY]  while((  u  &  1)  ==  0  ||(v  &  1)  ==  0  ||  k  <  31)  {  //  while  u  and  v  are  //  both  even...  u  /=  2;  [BUGGY]    u  /=  2;  v  /=  2;  k++;  //  cast  out  twos.  }  if  (k  ==  31)  {  throw  new  ArithmeticException( "overflow:  gcd  is  2^31 ");  }    [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  short  NS  PS  ZS  boolean  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  k  t  u  v  	projects/Math94/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	428	430	1	replace	while((  u  &  1)  ==  0  ||(v  &  1)  ==  0  ||  k  <  31)  {  //  while  u  and  v  are  //  both  even...  u  /=  2;	while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are        //  both  even...    u  /=  2;  	non-compiled	[CE]  <identifier>  expected	15	None	replace
22	[BUG]  [BUGGY]  while((  u  &  1)  ==  0  &&(v  &  1)  ==  0)  {  //  while  u  and  v  are  //  both  even...  u  /=  2;  [CE]  <identifier>  expected  [FE]      AssertionFailedError  [CONTEXT]    if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;  [BUGGY]  while((  u  &  1)  ==  0  &&(v  &  1)  ==  0)  {  //  while  u  and  v  are  //  both  even...  u  /=  2;  [BUGGY]    u  /=  2;  v  /=  2;  k++;  //  cast  out  twos.  }  if  (k  ==  31)  {  throw  new  ArithmeticException( "overflow:  gcd  is  2^31 ");  }    [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  short  NS  PS  ZS  boolean  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  k  t  u  v  	projects/Math94/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	428	430	1	replace	while((  u  &  1)  ==  0  &&(v  &  1)  ==  0)  {  //  while  u  and  v  are  //  both  even...  u  /=  2;	while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are        //  both  even...    u  /=  2;  	non-compiled	[CE]  <identifier>  expected	15	None	replace
