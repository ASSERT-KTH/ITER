bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  int  k  =(int)Math.rint((  u  <  <  4)+  2);  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]        if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;      [BUGGY]  int  k  =(int)Math.rint((  u  <  <  4)+  2);  [BUGGY]      while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are                //  both  even...      u  /=  2;  u  /=  2;  v  /=  2;  k++;  //  cast  out  twos.  }  if  (k  ==  31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }    [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  short  NS  PS  ZS  boolean  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  k  t  u  v  	projects/Math94/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	428	430	1	replace	int  k  =(int)Math.rint((  u  <  <  4)+  2);	  int    k    =(int)Math.rint((    u    <    <    4)+    1);    	non-compiled	[CE]  <identifier>  expected	55	None	replace
2	[BUG]  [BUGGY]  int  k  =(int)Math.rint((  u  <  <  6)+  1);  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]        if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;      [BUGGY]  int  k  =(int)Math.rint((  u  <  <  6)+  1);  [BUGGY]      while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are                //  both  even...      u  /=  2;  u  /=  2;  v  /=  2;  k++;  //  cast  out  twos.  }  if  (k  ==  31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }    [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  short  NS  PS  ZS  boolean  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  k  t  u  v  	projects/Math94/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	428	430	1	replace	int  k  =(int)Math.rint((  u  <  <  6)+  1);	  int    k    =(int)Math.rint((    u    <    <    4)+    1);    	non-compiled	[CE]  <identifier>  expected	55	None	replace
3	[BUG]  [BUGGY]  while(k  <  0  &&  v  <  31)  {  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]        if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;      [BUGGY]  while(k  <  0  &&  v  <  31)  {  [BUGGY]        u  /=  2;  v  /=  2;  k++;  //  cast  out  twos.  }  if  (k  ==  31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }    [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  short  NS  PS  ZS  boolean  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  k  t  u  v  	projects/Math94/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	428	430	1	replace	while(k  <  0  &&  v  <  31)  {	  while(k    >    0    &&    v    <    31)    {    	non-compiled	[CE]  <identifier>  expected	122	None	replace
4	[BUG]  [BUGGY]  while(v  <  0  &&  k  <  31)  {  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]        if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;      [BUGGY]  while(v  <  0  &&  k  <  31)  {  [BUGGY]        u  /=  2;  v  /=  2;  k++;  //  cast  out  twos.  }  if  (k  ==  31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }    [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  short  NS  PS  ZS  boolean  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  k  t  u  v  	projects/Math94/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	428	430	1	replace	while(v  <  0  &&  k  <  31)  {	  while(k    >    0    &&    v    <    31)    {    	non-compiled	[CE]  <identifier>  expected	122	None	replace
5	[BUG]  [BUGGY]  while(k  >  0  &&  v  <  =  31)  {  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]        if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;      [BUGGY]  while(k  >  0  &&  v  <  =  31)  {  [BUGGY]        u  /=  2;  v  /=  2;  k++;  //  cast  out  twos.  }  if  (k  ==  31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }    [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  short  NS  PS  ZS  boolean  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  k  t  u  v  	projects/Math94/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	428	430	1	replace	while(k  >  0  &&  v  <  =  31)  {	  while(k    >    0    &&    v    <    31)    {    	non-compiled	[CE]  <identifier>  expected	122	None	replace
6	[BUG]  [BUGGY]  int  k  =(int)Math.pow(10,  x  +  1);  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]        if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;      [BUGGY]  int  k  =(int)Math.pow(10,  x  +  1);  [BUGGY]      while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are                //  both  even...      u  /=  2;  u  /=  2;  v  /=  2;  k++;  //  cast  out  twos.  }  if  (k  ==  31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }    [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  short  NS  PS  ZS  boolean  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  k  t  u  v  	projects/Math94/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	428	430	1	replace	int  k  =(int)Math.pow(10,  x  +  1);	  int    k    =(int)Math.pow(10,    x);    	non-compiled	[CE]  <identifier>  expected	47	None	replace
7	[BUG]  [BUGGY]  int  k  =(int)Math.pow(10,  logSum);  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]        if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;      [BUGGY]  int  k  =(int)Math.pow(10,  logSum);  [BUGGY]      while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are                //  both  even...      u  /=  2;  u  /=  2;  v  /=  2;  k++;  //  cast  out  twos.  }  if  (k  ==  31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }    [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  short  NS  PS  ZS  boolean  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  k  t  u  v  	projects/Math94/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	428	430	1	replace	int  k  =(int)Math.pow(10,  logSum);	  int    k    =(int)Math.pow(10,    x);    	non-compiled	[CE]  <identifier>  expected	47	None	replace
8	[BUG]  [BUGGY]  char  k  =(char)Math.pow(10,  x);  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]        if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;      [BUGGY]  char  k  =(char)Math.pow(10,  x);  [BUGGY]      while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are                //  both  even...      u  /=  2;  u  /=  2;  v  /=  2;  k++;  //  cast  out  twos.  }  if  (k  ==  31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }    [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  short  NS  PS  ZS  boolean  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  k  t  u  v  	projects/Math94/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	428	430	1	replace	char  k  =(char)Math.pow(10,  x);	  int    k    =(int)Math.pow(10,    x);    	non-compiled	[CE]  <identifier>  expected	47	None	replace
9	[BUG]  [BUGGY]  char  k  =(char)Math.pow(10,  y  +  1);  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]        if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;      [BUGGY]  char  k  =(char)Math.pow(10,  y  +  1);  [BUGGY]      while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are                //  both  even...      u  /=  2;  u  /=  2;  v  /=  2;  k++;  //  cast  out  twos.  }  if  (k  ==  31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }    [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  short  NS  PS  ZS  boolean  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  k  t  u  v  	projects/Math94/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	428	430	1	replace	char  k  =(char)Math.pow(10,  y  +  1);	  char    k    =(char)Math.pow(10,    y);    	non-compiled	[CE]  <identifier>  expected	49	None	replace
10	[BUG]  [BUGGY]  String  k  =(String)Math.pow(10,  y);  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]        if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;      [BUGGY]  String  k  =(String)Math.pow(10,  y);  [BUGGY]      while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are                //  both  even...      u  /=  2;  u  /=  2;  v  /=  2;  k++;  //  cast  out  twos.  }  if  (k  ==  31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }    [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  short  NS  PS  ZS  boolean  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  k  t  u  v  	projects/Math94/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	428	430	1	replace	String  k  =(String)Math.pow(10,  y);	  char    k    =(char)Math.pow(10,    y);    	non-compiled	[CE]  <identifier>  expected	49	None	replace
11	[BUG]  [BUGGY]  int  k  =(int)Math.pow(10,  0);  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]        if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;      [BUGGY]  int  k  =(int)Math.pow(10,  0);  [BUGGY]      while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are                //  both  even...      u  /=  2;  u  /=  2;  v  /=  2;  k++;  //  cast  out  twos.  }  if  (k  ==  31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }    [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  short  NS  PS  ZS  boolean  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  k  t  u  v  	projects/Math94/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	428	430	1	replace	int  k  =(int)Math.pow(10,  0);	  int    k    =(int)Math.pow(10,    3);    	non-compiled	[CE]  <identifier>  expected	50	None	replace
12	[BUG]  [BUGGY]  int  k  =(int)Math.pow(10,  12);  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]        if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;      [BUGGY]  int  k  =(int)Math.pow(10,  12);  [BUGGY]      while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are                //  both  even...      u  /=  2;  u  /=  2;  v  /=  2;  k++;  //  cast  out  twos.  }  if  (k  ==  31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }    [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  short  NS  PS  ZS  boolean  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  k  t  u  v  	projects/Math94/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	428	430	1	replace	int  k  =(int)Math.pow(10,  12);	  int    k    =(int)Math.pow(10,    3);    	non-compiled	[CE]  <identifier>  expected	50	None	replace
13	[BUG]  [BUGGY]  int  k  =(int)Math.pow(10,  1);  [CE]  <identifier>  expected  [FE]                          AssertionFailedError      [CONTEXT]        if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;      [BUGGY]  int  k  =(int)Math.pow(10,  1);  [BUGGY]      while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are                //  both  even...      u  /=  2;  u  /=  2;  v  /=  2;  k++;  //  cast  out  twos.  }  if  (k  ==  31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }    [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  short  NS  PS  ZS  boolean  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  k  t  u  v  	projects/Math94/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	428	430	1	replace	int  k  =(int)Math.pow(10,  1);	  int    k    =(int)Math.pow(10,    3);    	non-compiled	[CE]  <identifier>  expected	50	None	replace
14	[BUG]  [BUGGY]  while((  u  %  2)  ==  0  &&(v  &  1)  ==  0  ||  k  <  31)  {  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]        if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;      [BUGGY]  while((  u  %  2)  ==  0  &&(v  &  1)  ==  0  ||  k  <  31)  {  [BUGGY]        u  /=  2;  v  /=  2;  k++;  //  cast  out  twos.  }  if  (k  ==  31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }    [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  short  NS  PS  ZS  boolean  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  k  t  u  v  	projects/Math94/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	428	430	1	replace	while((  u  %  2)  ==  0  &&(v  &  1)  ==  0  ||  k  <  31)  {	  while((    u    %    2)    ==    0    ||(v    &    1)    ==    0    ||    k    <    31)    {    	non-compiled	[CE]  <identifier>  expected	93	None	replace
15	[BUG]  [BUGGY]  while((  u  %  2)  ==  0  &&(v  &  1)  ==  0  &&  k  <  31)  {  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]        if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;      [BUGGY]  while((  u  %  2)  ==  0  &&(v  &  1)  ==  0  &&  k  <  31)  {  [BUGGY]        u  /=  2;  v  /=  2;  k++;  //  cast  out  twos.  }  if  (k  ==  31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }    [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  short  NS  PS  ZS  boolean  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  k  t  u  v  	projects/Math94/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	428	430	1	replace	while((  u  %  2)  ==  0  &&(v  &  1)  ==  0  &&  k  <  31)  {	  while((    u    %    2)    ==    0    ||(v    &    1)    ==    0    ||    k    <    31)    {    	non-compiled	[CE]  <identifier>  expected	93	None	replace
16	[BUG]  [BUGGY]  while((  u  %  2)  ==  0  ||(v  &  1)  ==  0  ||  k  >=  31)  {  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]        if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;      [BUGGY]  while((  u  %  2)  ==  0  ||(v  &  1)  ==  0  ||  k  >=  31)  {  [BUGGY]        u  /=  2;  v  /=  2;  k++;  //  cast  out  twos.  }  if  (k  ==  31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }    [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  short  NS  PS  ZS  boolean  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  k  t  u  v  	projects/Math94/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	428	430	1	replace	while((  u  %  2)  ==  0  ||(v  &  1)  ==  0  ||  k  >=  31)  {	  while((    u    %    2)    ==    0    ||(v    &    1)    ==    0    ||    k    <    31)    {    	non-compiled	[CE]  <identifier>  expected	93	None	replace
17	[BUG]  [BUGGY]  float  u  =(float)Math.log(k);  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]        if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;      [BUGGY]  float  u  =(float)Math.log(k);  [BUGGY]      while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are                //  both  even...      u  /=  2;  u  /=  2;  v  /=  2;  k++;  //  cast  out  twos.  }  if  (k  ==  31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }    [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  short  NS  PS  ZS  boolean  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  k  t  u  v  	projects/Math94/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	428	430	1	replace	float  u  =(float)Math.log(k);	  float    u    =(float)Math.floor(k);    	non-compiled	[CE]  <identifier>  expected	101	None	replace
18	[BUG]  [BUGGY]  float  u  =(float)Math.ceil(k);  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]        if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;      [BUGGY]  float  u  =(float)Math.ceil(k);  [BUGGY]      while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are                //  both  even...      u  /=  2;  u  /=  2;  v  /=  2;  k++;  //  cast  out  twos.  }  if  (k  ==  31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }    [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  short  NS  PS  ZS  boolean  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  k  t  u  v  	projects/Math94/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	428	430	1	replace	float  u  =(float)Math.ceil(k);	  float    u    =(float)Math.floor(k);    	non-compiled	[CE]  <identifier>  expected	101	None	replace
19	[BUG]  [BUGGY]  float  u  =(float)Math.floor(v);  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]        if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;      [BUGGY]  float  u  =(float)Math.floor(v);  [BUGGY]      while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are                //  both  even...      u  /=  2;  u  /=  2;  v  /=  2;  k++;  //  cast  out  twos.  }  if  (k  ==  31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }    [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  short  NS  PS  ZS  boolean  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  k  t  u  v  	projects/Math94/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	428	430	1	replace	float  u  =(float)Math.floor(v);	  float    u    =(float)Math.floor(k);    	non-compiled	[CE]  <identifier>  expected	101	None	replace
20	[BUG]  [BUGGY]  float  u  =(float)Math.floor(u);  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]        if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;      [BUGGY]  float  u  =(float)Math.floor(u);  [BUGGY]      while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are                //  both  even...      u  /=  2;  u  /=  2;  v  /=  2;  k++;  //  cast  out  twos.  }  if  (k  ==  31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }    [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  short  NS  PS  ZS  boolean  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  k  t  u  v  	projects/Math94/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	428	430	1	replace	float  u  =(float)Math.floor(u);	  float    u    =(float)Math.floor(k);    	non-compiled	[CE]  <identifier>  expected	101	None	replace
21	[BUG]  [BUGGY]  while(u  >  0  &&  v  <  =  31  &&  k  <  31)  {  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]        if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;      [BUGGY]  while(u  >  0  &&  v  <  =  31  &&  k  <  31)  {  [BUGGY]        u  /=  2;  v  /=  2;  k++;  //  cast  out  twos.  }  if  (k  ==  31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }    [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  short  NS  PS  ZS  boolean  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  k  t  u  v  	projects/Math94/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	428	430	1	replace	while(u  >  0  &&  v  <  =  31  &&  k  <  31)  {	  while(u    >    0    &&    v    <    31    &&    k    <    31)    {    	non-compiled	[CE]  <identifier>  expected	62	None	replace
22	[BUG]  [BUGGY]  while(u  <  =  0  &&  v  <  31  &&  k  <  31)  {  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]        if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;      [BUGGY]  while(u  <  =  0  &&  v  <  31  &&  k  <  31)  {  [BUGGY]        u  /=  2;  v  /=  2;  k++;  //  cast  out  twos.  }  if  (k  ==  31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }    [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  short  NS  PS  ZS  boolean  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  k  t  u  v  	projects/Math94/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	428	430	1	replace	while(u  <  =  0  &&  v  <  31  &&  k  <  31)  {	  while(u    >    0    &&    v    <    31    &&    k    <    31)    {    	non-compiled	[CE]  <identifier>  expected	62	None	replace
23	[BUG]  [BUGGY]  char  k  =(char)Math.pow(10,  k  +  1);  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]        if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;      [BUGGY]  char  k  =(char)Math.pow(10,  k  +  1);  [BUGGY]      while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are                //  both  even...      u  /=  2;  u  /=  2;  v  /=  2;  k++;  //  cast  out  twos.  }  if  (k  ==  31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }    [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  short  NS  PS  ZS  boolean  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  k  t  u  v  	projects/Math94/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	428	430	1	replace	char  k  =(char)Math.pow(10,  k  +  1);	  char    k    =(char)Math.pow(10,    k);    	non-compiled	[CE]  <identifier>  expected	10	None	replace
24	[BUG]  [BUGGY]  char  k  =(char)Math.pow(10,  k  -  1);  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]        if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;      [BUGGY]  char  k  =(char)Math.pow(10,  k  -  1);  [BUGGY]      while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are                //  both  even...      u  /=  2;  u  /=  2;  v  /=  2;  k++;  //  cast  out  twos.  }  if  (k  ==  31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }    [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  short  NS  PS  ZS  boolean  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  k  t  u  v  	projects/Math94/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	428	430	1	replace	char  k  =(char)Math.pow(10,  k  -  1);	  char    k    =(char)Math.pow(10,    k);    	non-compiled	[CE]  <identifier>  expected	10	None	replace
25	[BUG]  [BUGGY]  String  k  =(String)Math.pow(10,  k);  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]        if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;      [BUGGY]  String  k  =(String)Math.pow(10,  k);  [BUGGY]      while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are                //  both  even...      u  /=  2;  u  /=  2;  v  /=  2;  k++;  //  cast  out  twos.  }  if  (k  ==  31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }    [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  short  NS  PS  ZS  boolean  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  k  t  u  v  	projects/Math94/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	428	430	1	replace	String  k  =(String)Math.pow(10,  k);	  char    k    =(char)Math.pow(10,    k);    	non-compiled	[CE]  <identifier>  expected	10	None	replace
26	[BUG]  [BUGGY]  while((  u  &  2)  ==  0)  {  u  +=(v  &  2)  ==  0)  {  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]        if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;      [BUGGY]  while((  u  &  2)  ==  0)  {  u  +=(v  &  2)  ==  0)  {  [BUGGY]        u  /=  2;  v  /=  2;  k++;  //  cast  out  twos.  }  if  (k  ==  31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }    [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  short  NS  PS  ZS  boolean  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  k  t  u  v  	projects/Math94/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	428	430	1	replace	while((  u  &  2)  ==  0)  {  u  +=(v  &  2)  ==  0)  {	  while((    u    &    1)    ==    0)    {    u    +=(v    &    1)    ==    0)    {    	non-compiled	[CE]  <identifier>  expected	89	None	replace
27	[BUG]  [BUGGY]  while((  u  &  1)  ==  0)  {  u  +=(v  &  2)  ==  0)  {  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]        if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;      [BUGGY]  while((  u  &  1)  ==  0)  {  u  +=(v  &  2)  ==  0)  {  [BUGGY]        u  /=  2;  v  /=  2;  k++;  //  cast  out  twos.  }  if  (k  ==  31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }    [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  short  NS  PS  ZS  boolean  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  k  t  u  v  	projects/Math94/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	428	430	1	replace	while((  u  &  1)  ==  0)  {  u  +=(v  &  2)  ==  0)  {	  while((    u    &    1)    ==    0)    {    u    +=(v    &    1)    ==    0)    {    	non-compiled	[CE]  <identifier>  expected	89	None	replace
28	[BUG]  [BUGGY]  while((  u  &  2)  ==  0)  {  u  +=(v  &  1)  ==  0)  {  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]        if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;      [BUGGY]  while((  u  &  2)  ==  0)  {  u  +=(v  &  1)  ==  0)  {  [BUGGY]        u  /=  2;  v  /=  2;  k++;  //  cast  out  twos.  }  if  (k  ==  31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }    [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  short  NS  PS  ZS  boolean  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  k  t  u  v  	projects/Math94/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	428	430	1	replace	while((  u  &  2)  ==  0)  {  u  +=(v  &  1)  ==  0)  {	  while((    u    &    1)    ==    0)    {    u    +=(v    &    1)    ==    0)    {    	non-compiled	[CE]  <identifier>  expected	89	None	replace
29	[BUG]  [BUGGY]  while(k  %  2  ==  0  &&  v  <  =  0  &&  u  <  31)  {  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]        if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;      [BUGGY]  while(k  %  2  ==  0  &&  v  <  =  0  &&  u  <  31)  {  [BUGGY]        u  /=  2;  v  /=  2;  k++;  //  cast  out  twos.  }  if  (k  ==  31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }    [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  short  NS  PS  ZS  boolean  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  k  t  u  v  	projects/Math94/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	428	430	1	replace	while(k  %  2  ==  0  &&  v  <  =  0  &&  u  <  31)  {	  while(k    %    2    ==    0    &&    v    >    0    &&    u    <    31)    {    	non-compiled	[CE]  <identifier>  expected	104	None	replace
30	[BUG]  [BUGGY]  while(k  %  2!=  0  &&  v  <  =  0  &&  u  <  31)  {  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]        if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;      [BUGGY]  while(k  %  2!=  0  &&  v  <  =  0  &&  u  <  31)  {  [BUGGY]        u  /=  2;  v  /=  2;  k++;  //  cast  out  twos.  }  if  (k  ==  31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }    [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  short  NS  PS  ZS  boolean  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  k  t  u  v  	projects/Math94/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	428	430	1	replace	while(k  %  2!=  0  &&  v  <  =  0  &&  u  <  31)  {	  while(k    %    2    ==    0    &&    v    >    0    &&    u    <    31)    {    	non-compiled	[CE]  <identifier>  expected	104	None	replace
31	[BUG]  [BUGGY]  int  k  =(int)Math.rint((  u  +  1)/  2  *  1);  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]        if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;      [BUGGY]  int  k  =(int)Math.rint((  u  +  1)/  2  *  1);  [BUGGY]      while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are                //  both  even...      u  /=  2;  u  /=  2;  v  /=  2;  k++;  //  cast  out  twos.  }  if  (k  ==  31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }    [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  short  NS  PS  ZS  boolean  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  k  t  u  v  	projects/Math94/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	428	430	1	replace	int  k  =(int)Math.rint((  u  +  1)/  2  *  1);	  int    k    =(int)Math.rint((    u    +    1)/    2    +    1);    	non-compiled	[CE]  <identifier>  expected	4	None	replace
32	[BUG]  [BUGGY]  int  k  =(int)Math.rint((  u  +  1)/  2  *  2  +  1);  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]        if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;      [BUGGY]  int  k  =(int)Math.rint((  u  +  1)/  2  *  2  +  1);  [BUGGY]      while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are                //  both  even...      u  /=  2;  u  /=  2;  v  /=  2;  k++;  //  cast  out  twos.  }  if  (k  ==  31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }    [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  short  NS  PS  ZS  boolean  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  k  t  u  v  	projects/Math94/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	428	430	1	replace	int  k  =(int)Math.rint((  u  +  1)/  2  *  2  +  1);	  int    k    =(int)Math.rint((    u    +    1)/    2    +    1);    	non-compiled	[CE]  <identifier>  expected	4	None	replace
33	[BUG]  [BUGGY]  int  u  =(int)Math.rint((  u  +  1)/  2  +  1);  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]        if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;      [BUGGY]  int  u  =(int)Math.rint((  u  +  1)/  2  +  1);  [BUGGY]      while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are                //  both  even...      u  /=  2;  u  /=  2;  v  /=  2;  k++;  //  cast  out  twos.  }  if  (k  ==  31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }    [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  short  NS  PS  ZS  boolean  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  k  t  u  v  	projects/Math94/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	428	430	1	replace	int  u  =(int)Math.rint((  u  +  1)/  2  +  1);	  int    u    =(int)Math.rint((    u    +    1)/    2);    	non-compiled	[CE]  <identifier>  expected	79	None	replace
34	[BUG]  [BUGGY]  int  u  =(int)Math.rint((  k  +  1)/  2);  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]        if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;      [BUGGY]  int  u  =(int)Math.rint((  k  +  1)/  2);  [BUGGY]      while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are                //  both  even...      u  /=  2;  u  /=  2;  v  /=  2;  k++;  //  cast  out  twos.  }  if  (k  ==  31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }    [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  short  NS  PS  ZS  boolean  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  k  t  u  v  	projects/Math94/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	428	430	1	replace	int  u  =(int)Math.rint((  k  +  1)/  2);	  int    u    =(int)Math.rint((    u    +    1)/    2);    	non-compiled	[CE]  <identifier>  expected	79	None	replace
35	[BUG]  [BUGGY]  int  u  =(int)Math.rint((  u  +  1)/  4);  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]        if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;      [BUGGY]  int  u  =(int)Math.rint((  u  +  1)/  4);  [BUGGY]      while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are                //  both  even...      u  /=  2;  u  /=  2;  v  /=  2;  k++;  //  cast  out  twos.  }  if  (k  ==  31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }    [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  short  NS  PS  ZS  boolean  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  k  t  u  v  	projects/Math94/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	428	430	1	replace	int  u  =(int)Math.rint((  u  +  1)/  4);	  int    u    =(int)Math.rint((    u    +    1)/    2);    	non-compiled	[CE]  <identifier>  expected	79	None	replace
36	[BUG]  [BUGGY]  int  u  =(int)Math.rint((  u  +  1)/  3);  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]        if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;      [BUGGY]  int  u  =(int)Math.rint((  u  +  1)/  3);  [BUGGY]      while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are                //  both  even...      u  /=  2;  u  /=  2;  v  /=  2;  k++;  //  cast  out  twos.  }  if  (k  ==  31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }    [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  short  NS  PS  ZS  boolean  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  k  t  u  v  	projects/Math94/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	428	430	1	replace	int  u  =(int)Math.rint((  u  +  1)/  3);	  int    u    =(int)Math.rint((    u    +    1)/    2);    	non-compiled	[CE]  <identifier>  expected	79	None	replace
37	[BUG]  [BUGGY]  int  k  =  3;  [CE]  <identifier>  expected  [FE]            AssertionFailedError      [CONTEXT]        if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;      [BUGGY]  int  k  =  3;  [BUGGY]      while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are                //  both  even...      u  /=  2;  u  /=  2;  v  /=  2;  k++;  //  cast  out  twos.  }  if  (k  ==  31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }    [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  short  NS  PS  ZS  boolean  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  k  t  u  v  	projects/Math94/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	428	430	1	replace	int  k  =  3;	  int    k    =    1;    	non-compiled	[CE]  <identifier>  expected	73	None	replace
38	[BUG]  [BUGGY]  int  u  =(int)Math.rint((  u  /  2)/  2  +  1);  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]        if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;      [BUGGY]  int  u  =(int)Math.rint((  u  /  2)/  2  +  1);  [BUGGY]      while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are                //  both  even...      u  /=  2;  u  /=  2;  v  /=  2;  k++;  //  cast  out  twos.  }  if  (k  ==  31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }    [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  short  NS  PS  ZS  boolean  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  k  t  u  v  	projects/Math94/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	428	430	1	replace	int  u  =(int)Math.rint((  u  /  2)/  2  +  1);	  int    u    =(int)Math.rint((    u    /    2)/    2);    	non-compiled	[CE]  <identifier>  expected	68	None	replace
39	[BUG]  [BUGGY]  int  u  =(int)Math.rint((  u  /  2)/  4);  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]        if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;      [BUGGY]  int  u  =(int)Math.rint((  u  /  2)/  4);  [BUGGY]      while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are                //  both  even...      u  /=  2;  u  /=  2;  v  /=  2;  k++;  //  cast  out  twos.  }  if  (k  ==  31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }    [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  short  NS  PS  ZS  boolean  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  k  t  u  v  	projects/Math94/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	428	430	1	replace	int  u  =(int)Math.rint((  u  /  2)/  4);	  int    u    =(int)Math.rint((    u    /    2)/    2);    	non-compiled	[CE]  <identifier>  expected	68	None	replace
40	[BUG]  [BUGGY]  int  u  =(int)Math.rint((  u  /  2)/  3);  [CE]  <identifier>  expected  [FE]                          AssertionFailedError      [CONTEXT]        if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;      [BUGGY]  int  u  =(int)Math.rint((  u  /  2)/  3);  [BUGGY]      while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are                //  both  even...      u  /=  2;  u  /=  2;  v  /=  2;  k++;  //  cast  out  twos.  }  if  (k  ==  31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }    [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  short  NS  PS  ZS  boolean  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  k  t  u  v  	projects/Math94/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	428	430	1	replace	int  u  =(int)Math.rint((  u  /  2)/  3);	  int    u    =(int)Math.rint((    u    /    2)/    2);    	non-compiled	[CE]  <identifier>  expected	68	None	replace
41	[BUG]  [BUGGY]  int  u  =(int)Math.log((  u  <  <  6)/  2  +  1);  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]        if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;      [BUGGY]  int  u  =(int)Math.log((  u  <  <  6)/  2  +  1);  [BUGGY]      while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are                //  both  even...      u  /=  2;  u  /=  2;  v  /=  2;  k++;  //  cast  out  twos.  }  if  (k  ==  31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }    [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  short  NS  PS  ZS  boolean  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  k  t  u  v  	projects/Math94/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	428	430	1	replace	int  u  =(int)Math.log((  u  <  <  6)/  2  +  1);	  int    u    =(int)Math.log((    u    <    <    6)/    2);    	non-compiled	[CE]  <identifier>  expected	12	None	replace
42	[BUG]  [BUGGY]  int  k  =(int)Math.log(u  +  1);  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]        if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;      [BUGGY]  int  k  =(int)Math.log(u  +  1);  [BUGGY]      while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are                //  both  even...      u  /=  2;  u  /=  2;  v  /=  2;  k++;  //  cast  out  twos.  }  if  (k  ==  31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }    [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  short  NS  PS  ZS  boolean  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  k  t  u  v  	projects/Math94/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	428	430	1	replace	int  k  =(int)Math.log(u  +  1);	  int    k    =(int)Math.log(u);    	non-compiled	[CE]  <identifier>  expected	30	None	replace
43	[BUG]  [BUGGY]  int  k  =(int)Math.log(u  +  1,  v);  [CE]  <identifier>  expected  [FE]                          AssertionFailedError      [CONTEXT]        if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;      [BUGGY]  int  k  =(int)Math.log(u  +  1,  v);  [BUGGY]      while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are                //  both  even...      u  /=  2;  u  /=  2;  v  /=  2;  k++;  //  cast  out  twos.  }  if  (k  ==  31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }    [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  short  NS  PS  ZS  boolean  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  k  t  u  v  	projects/Math94/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	428	430	1	replace	int  k  =(int)Math.log(u  +  1,  v);	  int    k    =(int)Math.log(u);    	non-compiled	[CE]  <identifier>  expected	30	None	replace
44	[BUG]  [BUGGY]  int  k  =(int)Math.rint(v);  [CE]  <identifier>  expected  [FE]                            AssertionFailedError      [CONTEXT]        if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;      [BUGGY]  int  k  =(int)Math.rint(v);  [BUGGY]      while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are                //  both  even...      u  /=  2;  u  /=  2;  v  /=  2;  k++;  //  cast  out  twos.  }  if  (k  ==  31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }    [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  short  NS  PS  ZS  boolean  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  k  t  u  v  	projects/Math94/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	428	430	1	replace	int  k  =(int)Math.rint(v);	  int    k    =(int)Math.log(u);    	non-compiled	[CE]  <identifier>  expected	30	None	replace
45	[BUG]  [BUGGY]  while((  u  &  2)  ==  0  &&(v  &  1)  ==  0  &&  k  >=  31)  {  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]        if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;      [BUGGY]  while((  u  &  2)  ==  0  &&(v  &  1)  ==  0  &&  k  >=  31)  {  [BUGGY]        u  /=  2;  v  /=  2;  k++;  //  cast  out  twos.  }  if  (k  ==  31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }    [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  short  NS  PS  ZS  boolean  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  k  t  u  v  	projects/Math94/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	428	430	1	replace	while((  u  &  2)  ==  0  &&(v  &  1)  ==  0  &&  k  >=  31)  {	  while((    u    &    2)    ==    0    &&(v    &    1)    ==    0    &&    k    <    31)    {    	non-compiled	[CE]  <identifier>  expected	71	None	replace
46	[BUG]  [BUGGY]  while((  u  &  2)!=  0  &&(v  &  1)  ==  0  &&  k  <  31)  {  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]        if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;      [BUGGY]  while((  u  &  2)!=  0  &&(v  &  1)  ==  0  &&  k  <  31)  {  [BUGGY]        u  /=  2;  v  /=  2;  k++;  //  cast  out  twos.  }  if  (k  ==  31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }    [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  short  NS  PS  ZS  boolean  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  k  t  u  v  	projects/Math94/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	428	430	1	replace	while((  u  &  2)!=  0  &&(v  &  1)  ==  0  &&  k  <  31)  {	  while((    u    &    2)    ==    0    &&(v    &    1)    ==    0    &&    k    <    31)    {    	non-compiled	[CE]  <identifier>  expected	71	None	replace
47	[BUG]  [BUGGY]  while((  u  &  2)  ==  0  &&(v  &  1)!=  0  &&  k  <  31)  {  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]        if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;      [BUGGY]  while((  u  &  2)  ==  0  &&(v  &  1)!=  0  &&  k  <  31)  {  [BUGGY]        u  /=  2;  v  /=  2;  k++;  //  cast  out  twos.  }  if  (k  ==  31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }    [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  short  NS  PS  ZS  boolean  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  k  t  u  v  	projects/Math94/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	428	430	1	replace	while((  u  &  2)  ==  0  &&(v  &  1)!=  0  &&  k  <  31)  {	  while((    u    &    2)    ==    0    &&(v    &    1)    ==    0    &&    k    <    31)    {    	non-compiled	[CE]  <identifier>  expected	71	None	replace
48	[BUG]  [BUGGY]  while(v  %  2  ==  0  ||  k  <  31)  {  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]        if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;      [BUGGY]  while(v  %  2  ==  0  ||  k  <  31)  {  [BUGGY]        u  /=  2;  v  /=  2;  k++;  //  cast  out  twos.  }  if  (k  ==  31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }    [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  short  NS  PS  ZS  boolean  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  k  t  u  v  	projects/Math94/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	428	430	1	replace	while(v  %  2  ==  0  ||  k  <  31)  {	  while(u    %    2    ==    0    ||    k    <    31)    {    	non-compiled	[CE]  <identifier>  expected	2	None	replace
49	[BUG]  [BUGGY]  while(k  %  2  ==  0  ||  u  <  31)  {  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]        if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;      [BUGGY]  while(k  %  2  ==  0  ||  u  <  31)  {  [BUGGY]        u  /=  2;  v  /=  2;  k++;  //  cast  out  twos.  }  if  (k  ==  31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }    [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  short  NS  PS  ZS  boolean  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  k  t  u  v  	projects/Math94/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	428	430	1	replace	while(k  %  2  ==  0  ||  u  <  31)  {	  while(u    %    2    ==    0    ||    k    <    31)    {    	non-compiled	[CE]  <identifier>  expected	2	None	replace
50	[BUG]  [BUGGY]  while((  u  &  1)!=  0  &&(v  &  2)  ==  0  &&  k  >=  31)  {  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]        if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;      [BUGGY]  while((  u  &  1)!=  0  &&(v  &  2)  ==  0  &&  k  >=  31)  {  [BUGGY]        u  /=  2;  v  /=  2;  k++;  //  cast  out  twos.  }  if  (k  ==  31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }    [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  short  NS  PS  ZS  boolean  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  k  t  u  v  	projects/Math94/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	428	430	1	replace	while((  u  &  1)!=  0  &&(v  &  2)  ==  0  &&  k  >=  31)  {	  while((    u    &    1)!=    0    &&(v    &    1)    ==    0    &&    k    >=    31)    {    	non-compiled	[CE]  <identifier>  expected	105	None	replace
51	[BUG]  [BUGGY]  while((  u  &  1)!=  0  &&(v  &  1)  ==  0  &&  k  >>  31)  {  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]        if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;      [BUGGY]  while((  u  &  1)!=  0  &&(v  &  1)  ==  0  &&  k  >>  31)  {  [BUGGY]        u  /=  2;  v  /=  2;  k++;  //  cast  out  twos.  }  if  (k  ==  31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }    [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  short  NS  PS  ZS  boolean  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  k  t  u  v  	projects/Math94/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	428	430	1	replace	while((  u  &  1)!=  0  &&(v  &  1)  ==  0  &&  k  >>  31)  {	  while((    u    &    1)!=    0    &&(v    &    1)    ==    0    &&    k    >=    31)    {    	non-compiled	[CE]  <identifier>  expected	105	None	replace
52	[BUG]  [BUGGY]  while(u  %  2  ==  0  &&  v  <  =  31  &&  k  <  31)  {  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]        if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;      [BUGGY]  while(u  %  2  ==  0  &&  v  <  =  31  &&  k  <  31)  {  [BUGGY]        u  /=  2;  v  /=  2;  k++;  //  cast  out  twos.  }  if  (k  ==  31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }    [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  short  NS  PS  ZS  boolean  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  k  t  u  v  	projects/Math94/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	428	430	1	replace	while(u  %  2  ==  0  &&  v  <  =  31  &&  k  <  31)  {	  while(u    %    2    ==    0    &&    v    <    31    &&    k    <    31)    {    	non-compiled	[CE]  <identifier>  expected	18	None	replace
53	[BUG]  [BUGGY]  while(v  %  2  ==  0  &&  v  <  31  &&  k  <  31)  {  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]        if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;      [BUGGY]  while(v  %  2  ==  0  &&  v  <  31  &&  k  <  31)  {  [BUGGY]        u  /=  2;  v  /=  2;  k++;  //  cast  out  twos.  }  if  (k  ==  31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }    [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  short  NS  PS  ZS  boolean  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  k  t  u  v  	projects/Math94/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	428	430	1	replace	while(v  %  2  ==  0  &&  v  <  31  &&  k  <  31)  {	  while(u    %    2    ==    0    &&    v    <    31    &&    k    <    31)    {    	non-compiled	[CE]  <identifier>  expected	18	None	replace
54	[BUG]  [BUGGY]  while(u  %  2!=  0  &&  v  <  =  31  &&  k  <  31)  {  [CE]  <identifier>  expected  [FE]                          AssertionFailedError      [CONTEXT]        if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;      [BUGGY]  while(u  %  2!=  0  &&  v  <  =  31  &&  k  <  31)  {  [BUGGY]        u  /=  2;  v  /=  2;  k++;  //  cast  out  twos.  }  if  (k  ==  31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }    [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  short  NS  PS  ZS  boolean  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  k  t  u  v  	projects/Math94/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	428	430	1	replace	while(u  %  2!=  0  &&  v  <  =  31  &&  k  <  31)  {	  while(u    %    2    ==    0    &&    v    <    31    &&    k    <    31)    {    	non-compiled	[CE]  <identifier>  expected	18	None	replace
55	[BUG]  [BUGGY]  int  k  =(int)Math.rint((  u  <  <  3)/  2);  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]        if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;      [BUGGY]  int  k  =(int)Math.rint((  u  <  <  3)/  2);  [BUGGY]      while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are                //  both  even...      u  /=  2;  u  /=  2;  v  /=  2;  k++;  //  cast  out  twos.  }  if  (k  ==  31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }    [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  short  NS  PS  ZS  boolean  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  k  t  u  v  	projects/Math94/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	428	430	1	replace	int  k  =(int)Math.rint((  u  <  <  3)/  2);	  int    k    =(int)Math.rint((    u    <    <    3)/    1);    	non-compiled	[CE]  <identifier>  expected	127	None	replace
56	[BUG]  [BUGGY]  int  k  =(int)Math.rint((  u  <  <  4)/  2);  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]        if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;      [BUGGY]  int  k  =(int)Math.rint((  u  <  <  4)/  2);  [BUGGY]      while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are                //  both  even...      u  /=  2;  u  /=  2;  v  /=  2;  k++;  //  cast  out  twos.  }  if  (k  ==  31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }    [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  short  NS  PS  ZS  boolean  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  k  t  u  v  	projects/Math94/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	428	430	1	replace	int  k  =(int)Math.rint((  u  <  <  4)/  2);	  int    k    =(int)Math.rint((    u    <    <    3)/    1);    	non-compiled	[CE]  <identifier>  expected	127	None	replace
57	[BUG]  [BUGGY]  int  k  =(int)Math.rint((  u  <  <  6)/  2);  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]        if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;      [BUGGY]  int  k  =(int)Math.rint((  u  <  <  6)/  2);  [BUGGY]      while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are                //  both  even...      u  /=  2;  u  /=  2;  v  /=  2;  k++;  //  cast  out  twos.  }  if  (k  ==  31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }    [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  short  NS  PS  ZS  boolean  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  k  t  u  v  	projects/Math94/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	428	430	1	replace	int  k  =(int)Math.rint((  u  <  <  6)/  2);	  int    k    =(int)Math.rint((    u    <    <    3)/    1);    	non-compiled	[CE]  <identifier>  expected	127	None	replace
58	[BUG]  [BUGGY]  int  k  =(int)Math.rint((  u  <  <  4)/  1);  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]        if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;      [BUGGY]  int  k  =(int)Math.rint((  u  <  <  4)/  1);  [BUGGY]      while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are                //  both  even...      u  /=  2;  u  /=  2;  v  /=  2;  k++;  //  cast  out  twos.  }  if  (k  ==  31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }    [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  short  NS  PS  ZS  boolean  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  k  t  u  v  	projects/Math94/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	428	430	1	replace	int  k  =(int)Math.rint((  u  <  <  4)/  1);	  int    k    =(int)Math.rint((    u    <    <    3)/    1);    	non-compiled	[CE]  <identifier>  expected	127	None	replace
59	[BUG]  [BUGGY]  while(u  %  2!=  0  &&  k  <  =  31)  {  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]        if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;      [BUGGY]  while(u  %  2!=  0  &&  k  <  =  31)  {  [BUGGY]        u  /=  2;  v  /=  2;  k++;  //  cast  out  twos.  }  if  (k  ==  31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }    [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  short  NS  PS  ZS  boolean  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  k  t  u  v  	projects/Math94/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	428	430	1	replace	while(u  %  2!=  0  &&  k  <  =  31)  {	  while(u    %    2!=    0    &&    k    <    31)    {    	non-compiled	[CE]  <identifier>  expected	84	None	replace
60	[BUG]  [BUGGY]  while(u  %  2!=  0  &&  v  <  31)  {  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]        if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;      [BUGGY]  while(u  %  2!=  0  &&  v  <  31)  {  [BUGGY]        u  /=  2;  v  /=  2;  k++;  //  cast  out  twos.  }  if  (k  ==  31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }    [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  short  NS  PS  ZS  boolean  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  k  t  u  v  	projects/Math94/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	428	430	1	replace	while(u  %  2!=  0  &&  v  <  31)  {	  while(u    %    2!=    0    &&    k    <    31)    {    	non-compiled	[CE]  <identifier>  expected	84	None	replace
61	[BUG]  [BUGGY]  while(v  %  2!=  0  &&  k  <  31)  {  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]        if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;      [BUGGY]  while(v  %  2!=  0  &&  k  <  31)  {  [BUGGY]        u  /=  2;  v  /=  2;  k++;  //  cast  out  twos.  }  if  (k  ==  31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }    [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  short  NS  PS  ZS  boolean  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  k  t  u  v  	projects/Math94/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	428	430	1	replace	while(v  %  2!=  0  &&  k  <  31)  {	  while(u    %    2!=    0    &&    k    <    31)    {    	non-compiled	[CE]  <identifier>  expected	84	None	replace
62	[BUG]  [BUGGY]  while((  u  &  1)  ==  0  &&(v  &  1)  ==  0)  {  //  while  u  and  v  are  both  even...  u  /=  2;  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]        if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;      [BUGGY]  while((  u  &  1)  ==  0  &&(v  &  1)  ==  0)  {  //  while  u  and  v  are  both  even...  u  /=  2;  [BUGGY]        u  /=  2;  v  /=  2;  k++;  //  cast  out  twos.  }  if  (k  ==  31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }    [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  short  NS  PS  ZS  boolean  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  k  t  u  v  	projects/Math94/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	428	430	1	replace	while((  u  &  1)  ==  0  &&(v  &  1)  ==  0)  {  //  while  u  and  v  are  both  even...  u  /=  2;	  while((    u    &    1)    ==    0    ||(v    &    1)    ==    0)    {    //    while    u    and    v    are    both    even...    u    /=    2;    	non-compiled	[CE]  <identifier>  expected	131	None	replace
63	[BUG]  [BUGGY]  int  u  =(int)Math.log((  u  /  1)/  2  +  1);  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]        if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;      [BUGGY]  int  u  =(int)Math.log((  u  /  1)/  2  +  1);  [BUGGY]      while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are                //  both  even...      u  /=  2;  u  /=  2;  v  /=  2;  k++;  //  cast  out  twos.  }  if  (k  ==  31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }    [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  short  NS  PS  ZS  boolean  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  k  t  u  v  	projects/Math94/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	428	430	1	replace	int  u  =(int)Math.log((  u  /  1)/  2  +  1);	  int    u    =(int)Math.log((    u    /    1)/    2);    	non-compiled	[CE]  <identifier>  expected	108	None	replace
64	[BUG]  [BUGGY]  int  u  =(int)Math.log((  u  /  2)/  2  +  1);  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]        if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;      [BUGGY]  int  u  =(int)Math.log((  u  /  2)/  2  +  1);  [BUGGY]      while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are                //  both  even...      u  /=  2;  u  /=  2;  v  /=  2;  k++;  //  cast  out  twos.  }  if  (k  ==  31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }    [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  short  NS  PS  ZS  boolean  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  k  t  u  v  	projects/Math94/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	428	430	1	replace	int  u  =(int)Math.log((  u  /  2)/  2  +  1);	  int    u    =(int)Math.log((    u    /    1)/    2);    	non-compiled	[CE]  <identifier>  expected	108	None	replace
65	[BUG]  [BUGGY]  int  u  =(int)Math.log((  u  /  2)/  2);  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]        if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;      [BUGGY]  int  u  =(int)Math.log((  u  /  2)/  2);  [BUGGY]      while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are                //  both  even...      u  /=  2;  u  /=  2;  v  /=  2;  k++;  //  cast  out  twos.  }  if  (k  ==  31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }    [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  short  NS  PS  ZS  boolean  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  k  t  u  v  	projects/Math94/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	428	430	1	replace	int  u  =(int)Math.log((  u  /  2)/  2);	  int    u    =(int)Math.log((    u    /    1)/    2);    	non-compiled	[CE]  <identifier>  expected	108	None	replace
66	[BUG]  [BUGGY]  int  u  =(int)Math.log((  k  /  1)/  2);  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]        if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;      [BUGGY]  int  u  =(int)Math.log((  k  /  1)/  2);  [BUGGY]      while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are                //  both  even...      u  /=  2;  u  /=  2;  v  /=  2;  k++;  //  cast  out  twos.  }  if  (k  ==  31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }    [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  short  NS  PS  ZS  boolean  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  k  t  u  v  	projects/Math94/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	428	430	1	replace	int  u  =(int)Math.log((  k  /  1)/  2);	  int    u    =(int)Math.log((    u    /    1)/    2);    	non-compiled	[CE]  <identifier>  expected	108	None	replace
67	[BUG]  [BUGGY]  int  u  =(int)Math.log((  u  +  1)/  3  +  1);  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]        if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;      [BUGGY]  int  u  =(int)Math.log((  u  +  1)/  3  +  1);  [BUGGY]      while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are                //  both  even...      u  /=  2;  u  /=  2;  v  /=  2;  k++;  //  cast  out  twos.  }  if  (k  ==  31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }    [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  short  NS  PS  ZS  boolean  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  k  t  u  v  	projects/Math94/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	428	430	1	replace	int  u  =(int)Math.log((  u  +  1)/  3  +  1);	  int    u    =(int)Math.log((    u    +    1)/    3);    	non-compiled	[CE]  <identifier>  expected	24	None	replace
68	[BUG]  [BUGGY]  int  u  =(int)Math.log((  k  +  1)/  3);  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]        if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;      [BUGGY]  int  u  =(int)Math.log((  k  +  1)/  3);  [BUGGY]      while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are                //  both  even...      u  /=  2;  u  /=  2;  v  /=  2;  k++;  //  cast  out  twos.  }  if  (k  ==  31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }    [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  short  NS  PS  ZS  boolean  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  k  t  u  v  	projects/Math94/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	428	430	1	replace	int  u  =(int)Math.log((  k  +  1)/  3);	  int    u    =(int)Math.log((    u    +    1)/    3);    	non-compiled	[CE]  <identifier>  expected	24	None	replace
69	[BUG]  [BUGGY]  while(u  >  0  &&  v  <  =  31  &&  k  <  =  2)  {  [CE]  <identifier>  expected  [FE]            AssertionFailedError      [CONTEXT]        if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;      [BUGGY]  while(u  >  0  &&  v  <  =  31  &&  k  <  =  2)  {  [BUGGY]        u  /=  2;  v  /=  2;  k++;  //  cast  out  twos.  }  if  (k  ==  31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }    [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  short  NS  PS  ZS  boolean  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  k  t  u  v  	projects/Math94/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	428	430	1	replace	while(u  >  0  &&  v  <  =  31  &&  k  <  =  2)  {	  while(u    >    0    &&    v    <    =    2    &&    k    <    31)    {    	non-compiled	[CE]  <identifier>  expected	60	None	replace
70	[BUG]  [BUGGY]  while(u  >  0  &&  v  <  2  &&  k  <  31)  {  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]        if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;      [BUGGY]  while(u  >  0  &&  v  <  2  &&  k  <  31)  {  [BUGGY]        u  /=  2;  v  /=  2;  k++;  //  cast  out  twos.  }  if  (k  ==  31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }    [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  short  NS  PS  ZS  boolean  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  k  t  u  v  	projects/Math94/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	428	430	1	replace	while(u  >  0  &&  v  <  2  &&  k  <  31)  {	  while(u    >    0    &&    v    <    =    2    &&    k    <    31)    {    	non-compiled	[CE]  <identifier>  expected	60	None	replace
71	[BUG]  [BUGGY]  while(u  >  0  &&  v  <  =  3  &&  k  <  31)  {  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]        if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;      [BUGGY]  while(u  >  0  &&  v  <  =  3  &&  k  <  31)  {  [BUGGY]        u  /=  2;  v  /=  2;  k++;  //  cast  out  twos.  }  if  (k  ==  31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }    [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  short  NS  PS  ZS  boolean  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  k  t  u  v  	projects/Math94/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	428	430	1	replace	while(u  >  0  &&  v  <  =  3  &&  k  <  31)  {	  while(u    >    0    &&    v    <    =    2    &&    k    <    31)    {    	non-compiled	[CE]  <identifier>  expected	60	None	replace
72	[BUG]  [BUGGY]  int  k  =(int)Math.rint((  u  -  1)/  k);  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]        if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;      [BUGGY]  int  k  =(int)Math.rint((  u  -  1)/  k);  [BUGGY]      while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are                //  both  even...      u  /=  2;  u  /=  2;  v  /=  2;  k++;  //  cast  out  twos.  }  if  (k  ==  31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }    [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  short  NS  PS  ZS  boolean  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  k  t  u  v  	projects/Math94/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	428	430	1	replace	int  k  =(int)Math.rint((  u  -  1)/  k);	  int    k    =(int)Math.rint((    u    -    1)*    k);    	non-compiled	[CE]  <identifier>  expected	124	None	replace
73	[BUG]  [BUGGY]  int  k  =(int)Math.rint((  u  -  1)*  4);  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]        if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;      [BUGGY]  int  k  =(int)Math.rint((  u  -  1)*  4);  [BUGGY]      while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are                //  both  even...      u  /=  2;  u  /=  2;  v  /=  2;  k++;  //  cast  out  twos.  }  if  (k  ==  31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }    [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  short  NS  PS  ZS  boolean  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  k  t  u  v  	projects/Math94/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	428	430	1	replace	int  k  =(int)Math.rint((  u  -  1)*  4);	  int    k    =(int)Math.rint((    u    -    1)*    k);    	non-compiled	[CE]  <identifier>  expected	124	None	replace
74	[BUG]  [BUGGY]  int  k  =(int)Math.rint((  u  -  1)*  1);  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]        if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;      [BUGGY]  int  k  =(int)Math.rint((  u  -  1)*  1);  [BUGGY]      while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are                //  both  even...      u  /=  2;  u  /=  2;  v  /=  2;  k++;  //  cast  out  twos.  }  if  (k  ==  31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }    [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  short  NS  PS  ZS  boolean  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  k  t  u  v  	projects/Math94/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	428	430	1	replace	int  k  =(int)Math.rint((  u  -  1)*  1);	  int    k    =(int)Math.rint((    u    -    1)*    k);    	non-compiled	[CE]  <identifier>  expected	124	None	replace
75	[BUG]  [BUGGY]  int  k  =(int)Math.rint((  u  -  1)*  2);  [CE]  <identifier>  expected  [FE]                          AssertionFailedError      [CONTEXT]        if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;      [BUGGY]  int  k  =(int)Math.rint((  u  -  1)*  2);  [BUGGY]      while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are                //  both  even...      u  /=  2;  u  /=  2;  v  /=  2;  k++;  //  cast  out  twos.  }  if  (k  ==  31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }    [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  short  NS  PS  ZS  boolean  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  k  t  u  v  	projects/Math94/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	428	430	1	replace	int  k  =(int)Math.rint((  u  -  1)*  2);	  int    k    =(int)Math.rint((    u    -    1)*    k);    	non-compiled	[CE]  <identifier>  expected	124	None	replace
76	[BUG]  [BUGGY]  while(u  >  0  &&  v  <  =  31)  {  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]        if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;      [BUGGY]  while(u  >  0  &&  v  <  =  31)  {  [BUGGY]        u  /=  2;  v  /=  2;  k++;  //  cast  out  twos.  }  if  (k  ==  31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }    [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  short  NS  PS  ZS  boolean  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  k  t  u  v  	projects/Math94/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	428	430	1	replace	while(u  >  0  &&  v  <  =  31)  {	  while(u    >    0    &&    v    <    31)    {    	non-compiled	[CE]  <identifier>  expected	77	None	replace
77	[BUG]  [BUGGY]  while(u  <  =  0  &&  v  <  31)  {  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]        if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;      [BUGGY]  while(u  <  =  0  &&  v  <  31)  {  [BUGGY]        u  /=  2;  v  /=  2;  k++;  //  cast  out  twos.  }  if  (k  ==  31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }    [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  short  NS  PS  ZS  boolean  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  k  t  u  v  	projects/Math94/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	428	430	1	replace	while(u  <  =  0  &&  v  <  31)  {	  while(u    >    0    &&    v    <    31)    {    	non-compiled	[CE]  <identifier>  expected	77	None	replace
78	[BUG]  [BUGGY]  while(v  >  0  &&  v  <  31)  {  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]        if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;      [BUGGY]  while(v  >  0  &&  v  <  31)  {  [BUGGY]        u  /=  2;  v  /=  2;  k++;  //  cast  out  twos.  }  if  (k  ==  31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }    [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  short  NS  PS  ZS  boolean  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  k  t  u  v  	projects/Math94/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	428	430	1	replace	while(v  >  0  &&  v  <  31)  {	  while(u    >    0    &&    v    <    31)    {    	non-compiled	[CE]  <identifier>  expected	77	None	replace
79	[BUG]  [BUGGY]  int  k  =(int)Math.rint((  u  <  <  3)+  4);  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]        if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;      [BUGGY]  int  k  =(int)Math.rint((  u  <  <  3)+  4);  [BUGGY]      while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are                //  both  even...      u  /=  2;  u  /=  2;  v  /=  2;  k++;  //  cast  out  twos.  }  if  (k  ==  31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }    [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  short  NS  PS  ZS  boolean  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  k  t  u  v  	projects/Math94/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	428	430	1	replace	int  k  =(int)Math.rint((  u  <  <  3)+  4);	  int    k    =(int)Math.rint((    u    <    <    3)+    3);    	non-compiled	[CE]  <identifier>  expected	56	None	replace
80	[BUG]  [BUGGY]  int  k  =(int)Math.rint((  u  %  2)*  k);  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]        if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;      [BUGGY]  int  k  =(int)Math.rint((  u  %  2)*  k);  [BUGGY]      while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are                //  both  even...      u  /=  2;  u  /=  2;  v  /=  2;  k++;  //  cast  out  twos.  }  if  (k  ==  31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }    [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  short  NS  PS  ZS  boolean  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  k  t  u  v  	projects/Math94/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	428	430	1	replace	int  k  =(int)Math.rint((  u  %  2)*  k);	  int    k    =(int)Math.rint((    u    %    1)*    k);    	non-compiled	[CE]  <identifier>  expected	106	None	replace
81	[BUG]  [BUGGY]  int  k  =(int)Math.rint((  u  %  1)/  k);  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]        if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;      [BUGGY]  int  k  =(int)Math.rint((  u  %  1)/  k);  [BUGGY]      while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are                //  both  even...      u  /=  2;  u  /=  2;  v  /=  2;  k++;  //  cast  out  twos.  }  if  (k  ==  31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }    [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  short  NS  PS  ZS  boolean  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  k  t  u  v  	projects/Math94/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	428	430	1	replace	int  k  =(int)Math.rint((  u  %  1)/  k);	  int    k    =(int)Math.rint((    u    %    1)*    k);    	non-compiled	[CE]  <identifier>  expected	106	None	replace
82	[BUG]  [BUGGY]  int  k  =(int)Math.rint((  u  %  1)*  4);  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]        if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;      [BUGGY]  int  k  =(int)Math.rint((  u  %  1)*  4);  [BUGGY]      while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are                //  both  even...      u  /=  2;  u  /=  2;  v  /=  2;  k++;  //  cast  out  twos.  }  if  (k  ==  31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }    [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  short  NS  PS  ZS  boolean  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  k  t  u  v  	projects/Math94/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	428	430	1	replace	int  k  =(int)Math.rint((  u  %  1)*  4);	  int    k    =(int)Math.rint((    u    %    1)*    k);    	non-compiled	[CE]  <identifier>  expected	106	None	replace
83	[BUG]  [BUGGY]  int  k  =(int)Math.rint((  u  %  1)*  v);  [CE]  <identifier>  expected  [FE]                          AssertionFailedError      [CONTEXT]        if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;      [BUGGY]  int  k  =(int)Math.rint((  u  %  1)*  v);  [BUGGY]      while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are                //  both  even...      u  /=  2;  u  /=  2;  v  /=  2;  k++;  //  cast  out  twos.  }  if  (k  ==  31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }    [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  short  NS  PS  ZS  boolean  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  k  t  u  v  	projects/Math94/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	428	430	1	replace	int  k  =(int)Math.rint((  u  %  1)*  v);	  int    k    =(int)Math.rint((    u    %    1)*    k);    	non-compiled	[CE]  <identifier>  expected	106	None	replace
84	[BUG]  [BUGGY]  while(v  >=  2  &&  v  <  =  0  &&  k  <  31)  {  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]        if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;      [BUGGY]  while(v  >=  2  &&  v  <  =  0  &&  k  <  31)  {  [BUGGY]        u  /=  2;  v  /=  2;  k++;  //  cast  out  twos.  }  if  (k  ==  31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }    [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  short  NS  PS  ZS  boolean  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  k  t  u  v  	projects/Math94/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	428	430	1	replace	while(v  >=  2  &&  v  <  =  0  &&  k  <  31)  {	  while(v    >=    0    &&    v    <    =    0    &&    k    <    31)    {    	non-compiled	[CE]  <identifier>  expected	87	None	replace
85	[BUG]  [BUGGY]  while(v  >=  0  &&  v  <  =  31  &&  k  <  31)  {  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]        if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;      [BUGGY]  while(v  >=  0  &&  v  <  =  31  &&  k  <  31)  {  [BUGGY]        u  /=  2;  v  /=  2;  k++;  //  cast  out  twos.  }  if  (k  ==  31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }    [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  short  NS  PS  ZS  boolean  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  k  t  u  v  	projects/Math94/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	428	430	1	replace	while(v  >=  0  &&  v  <  =  31  &&  k  <  31)  {	  while(v    >=    0    &&    v    <    =    0    &&    k    <    31)    {    	non-compiled	[CE]  <identifier>  expected	87	None	replace
86	[BUG]  [BUGGY]  while(k  %  2  ==  0  &&  v  <  31)  {  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]        if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;      [BUGGY]  while(k  %  2  ==  0  &&  v  <  31)  {  [BUGGY]        u  /=  2;  v  /=  2;  k++;  //  cast  out  twos.  }  if  (k  ==  31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }    [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  short  NS  PS  ZS  boolean  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  k  t  u  v  	projects/Math94/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	428	430	1	replace	while(k  %  2  ==  0  &&  v  <  31)  {	  while(k    %    2    ==    0    &&    k    <    31)    {    	non-compiled	[CE]  <identifier>  expected	115	None	replace
87	[BUG]  [BUGGY]  while(k  %  2  ==  0  ||  k  <  31)  {  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]        if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;      [BUGGY]  while(k  %  2  ==  0  ||  k  <  31)  {  [BUGGY]        u  /=  2;  v  /=  2;  k++;  //  cast  out  twos.  }  if  (k  ==  31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }    [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  short  NS  PS  ZS  boolean  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  k  t  u  v  	projects/Math94/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	428	430	1	replace	while(k  %  2  ==  0  ||  k  <  31)  {	  while(k    %    2    ==    0    &&    k    <    31)    {    	non-compiled	[CE]  <identifier>  expected	115	None	replace
88	[BUG]  [BUGGY]  while((  u  &  1)  ==  0  &&(v  &  2)  ==  0  &&  k  >=  31)  {  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]        if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;      [BUGGY]  while((  u  &  1)  ==  0  &&(v  &  2)  ==  0  &&  k  >=  31)  {  [BUGGY]        u  /=  2;  v  /=  2;  k++;  //  cast  out  twos.  }  if  (k  ==  31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }    [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  short  NS  PS  ZS  boolean  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  k  t  u  v  	projects/Math94/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	428	430	1	replace	while((  u  &  1)  ==  0  &&(v  &  2)  ==  0  &&  k  >=  31)  {	  while((    u    &    1)    ==    0    &&(v    &    1)    ==    0    &&    k    >=    31)    {    	non-compiled	[CE]  <identifier>  expected	100	None	replace
89	[BUG]  [BUGGY]  while((  u  &  1)  ==  0  &&(v  &  1)  ==  0  &&  k!=  31)  {  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]        if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;      [BUGGY]  while((  u  &  1)  ==  0  &&(v  &  1)  ==  0  &&  k!=  31)  {  [BUGGY]        u  /=  2;  v  /=  2;  k++;  //  cast  out  twos.  }  if  (k  ==  31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }    [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  short  NS  PS  ZS  boolean  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  k  t  u  v  	projects/Math94/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	428	430	1	replace	while((  u  &  1)  ==  0  &&(v  &  1)  ==  0  &&  k!=  31)  {	  while((    u    &    1)    ==    0    &&(v    &    1)    ==    0    &&    k    >=    31)    {    	non-compiled	[CE]  <identifier>  expected	100	None	replace
90	[BUG]  [BUGGY]  int  u  =(int)Math.log((  k  +  1)/  2  +  1);  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]        if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;      [BUGGY]  int  u  =(int)Math.log((  k  +  1)/  2  +  1);  [BUGGY]      while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are                //  both  even...      u  /=  2;  u  /=  2;  v  /=  2;  k++;  //  cast  out  twos.  }  if  (k  ==  31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }    [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  short  NS  PS  ZS  boolean  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  k  t  u  v  	projects/Math94/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	428	430	1	replace	int  u  =(int)Math.log((  k  +  1)/  2  +  1);	  int    u    =(int)Math.log((    k    +    1)/    2);    	non-compiled	[CE]  <identifier>  expected	26	None	replace
91	[BUG]  [BUGGY]  int  u  =(int)Math.log((  k  +  1)/  4);  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]        if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;      [BUGGY]  int  u  =(int)Math.log((  k  +  1)/  4);  [BUGGY]      while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are                //  both  even...      u  /=  2;  u  /=  2;  v  /=  2;  k++;  //  cast  out  twos.  }  if  (k  ==  31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }    [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  short  NS  PS  ZS  boolean  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  k  t  u  v  	projects/Math94/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	428	430	1	replace	int  u  =(int)Math.log((  k  +  1)/  4);	  int    u    =(int)Math.log((    k    +    1)/    2);    	non-compiled	[CE]  <identifier>  expected	26	None	replace
92	[BUG]  [BUGGY]  int  u  =(int)Math.log((  k  +  1)/  2.0);  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]        if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;      [BUGGY]  int  u  =(int)Math.log((  k  +  1)/  2.0);  [BUGGY]      while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are                //  both  even...      u  /=  2;  u  /=  2;  v  /=  2;  k++;  //  cast  out  twos.  }  if  (k  ==  31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }    [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  short  NS  PS  ZS  boolean  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  k  t  u  v  	projects/Math94/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	428	430	1	replace	int  u  =(int)Math.log((  k  +  1)/  2.0);	  int    u    =(int)Math.log((    k    +    1)/    2);    	non-compiled	[CE]  <identifier>  expected	26	None	replace
93	[BUG]  [BUGGY]  while(v  <  =  2  &&  u  <  31)  {  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]        if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;      [BUGGY]  while(v  <  =  2  &&  u  <  31)  {  [BUGGY]        u  /=  2;  v  /=  2;  k++;  //  cast  out  twos.  }  if  (k  ==  31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }    [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  short  NS  PS  ZS  boolean  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  k  t  u  v  	projects/Math94/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	428	430	1	replace	while(v  <  =  2  &&  u  <  31)  {	  while(v    <    =    0    &&    u    <    31)    {    	non-compiled	[CE]  <identifier>  expected	63	None	replace
94	[BUG]  [BUGGY]  while(v  <  =  0  ||  u  <  31)  {  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]        if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;      [BUGGY]  while(v  <  =  0  ||  u  <  31)  {  [BUGGY]        u  /=  2;  v  /=  2;  k++;  //  cast  out  twos.  }  if  (k  ==  31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }    [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  short  NS  PS  ZS  boolean  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  k  t  u  v  	projects/Math94/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	428	430	1	replace	while(v  <  =  0  ||  u  <  31)  {	  while(v    <    =    0    &&    u    <    31)    {    	non-compiled	[CE]  <identifier>  expected	63	None	replace
95	[BUG]  [BUGGY]  int  k  =(int)Math.log(u,  v);  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]        if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;      [BUGGY]  int  k  =(int)Math.log(u,  v);  [BUGGY]      while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are                //  both  even...      u  /=  2;  u  /=  2;  v  /=  2;  k++;  //  cast  out  twos.  }  if  (k  ==  31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }    [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  short  NS  PS  ZS  boolean  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  k  t  u  v  	projects/Math94/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	428	430	1	replace	int  k  =(int)Math.log(u,  v);	  int    k    =(int)Math.log(v);    	non-compiled	[CE]  <identifier>  expected	28	None	replace
96	[BUG]  [BUGGY]  int  k  =(int)Math.rint((  u  +  1)/  3  +  1);  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]        if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;      [BUGGY]  int  k  =(int)Math.rint((  u  +  1)/  3  +  1);  [BUGGY]      while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are                //  both  even...      u  /=  2;  u  /=  2;  v  /=  2;  k++;  //  cast  out  twos.  }  if  (k  ==  31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }    [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  short  NS  PS  ZS  boolean  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  k  t  u  v  	projects/Math94/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	428	430	1	replace	int  k  =(int)Math.rint((  u  +  1)/  3  +  1);	  int    k    =(int)Math.rint((    u    +    1)/    3);    	non-compiled	[CE]  <identifier>  expected	5	None	replace
97	[BUG]  [BUGGY]  int  k  =(int)Math.rint((  u  *  1)/  3);  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]        if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;      [BUGGY]  int  k  =(int)Math.rint((  u  *  1)/  3);  [BUGGY]      while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are                //  both  even...      u  /=  2;  u  /=  2;  v  /=  2;  k++;  //  cast  out  twos.  }  if  (k  ==  31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }    [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  short  NS  PS  ZS  boolean  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  k  t  u  v  	projects/Math94/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	428	430	1	replace	int  k  =(int)Math.rint((  u  *  1)/  3);	  int    k    =(int)Math.rint((    u    +    1)/    3);    	non-compiled	[CE]  <identifier>  expected	5	None	replace
98	[BUG]  [BUGGY]  int  u  =(int)Math.ceil(gcd);  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]        if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;      [BUGGY]  int  u  =(int)Math.ceil(gcd);  [BUGGY]      while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are                //  both  even...      u  /=  2;  u  /=  2;  v  /=  2;  k++;  //  cast  out  twos.  }  if  (k  ==  31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }    [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  short  NS  PS  ZS  boolean  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  k  t  u  v  	projects/Math94/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	428	430	1	replace	int  u  =(int)Math.ceil(gcd);	  int    u    =(int)Math.ceil(k);    	non-compiled	[CE]  <identifier>  expected	42	None	replace
99	[BUG]  [BUGGY]  char  u  =(char)Math.ceil(k);  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]        if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;      [BUGGY]  char  u  =(char)Math.ceil(k);  [BUGGY]      while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are                //  both  even...      u  /=  2;  u  /=  2;  v  /=  2;  k++;  //  cast  out  twos.  }  if  (k  ==  31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }    [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  short  NS  PS  ZS  boolean  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  k  t  u  v  	projects/Math94/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	428	430	1	replace	char  u  =(char)Math.ceil(k);	  int    u    =(int)Math.ceil(k);    	non-compiled	[CE]  <identifier>  expected	42	None	replace
100	[BUG]  [BUGGY]  int  u  =(int)Math.ceil(k  +  1);  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]        if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;      [BUGGY]  int  u  =(int)Math.ceil(k  +  1);  [BUGGY]      while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are                //  both  even...      u  /=  2;  u  /=  2;  v  /=  2;  k++;  //  cast  out  twos.  }  if  (k  ==  31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }    [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  short  NS  PS  ZS  boolean  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  k  t  u  v  	projects/Math94/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	428	430	1	replace	int  u  =(int)Math.ceil(k  +  1);	  int    u    =(int)Math.ceil(k);    	non-compiled	[CE]  <identifier>  expected	42	None	replace
101	[BUG]  [BUGGY]  int  u  =(int)Math.log((  u  <  <  1)/  4  +  1);  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]        if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;      [BUGGY]  int  u  =(int)Math.log((  u  <  <  1)/  4  +  1);  [BUGGY]      while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are                //  both  even...      u  /=  2;  u  /=  2;  v  /=  2;  k++;  //  cast  out  twos.  }  if  (k  ==  31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }    [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  short  NS  PS  ZS  boolean  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  k  t  u  v  	projects/Math94/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	428	430	1	replace	int  u  =(int)Math.log((  u  <  <  1)/  4  +  1);	  int    u    =(int)Math.log((    u    <    <    1)/    4);    	non-compiled	[CE]  <identifier>  expected	36	None	replace
102	[BUG]  [BUGGY]  int  u  =(int)Math.log((  u  <  <  1)/  3);  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]        if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;      [BUGGY]  int  u  =(int)Math.log((  u  <  <  1)/  3);  [BUGGY]      while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are                //  both  even...      u  /=  2;  u  /=  2;  v  /=  2;  k++;  //  cast  out  twos.  }  if  (k  ==  31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }    [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  short  NS  PS  ZS  boolean  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  k  t  u  v  	projects/Math94/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	428	430	1	replace	int  u  =(int)Math.log((  u  <  <  1)/  3);	  int    u    =(int)Math.log((    u    <    <    1)/    4);    	non-compiled	[CE]  <identifier>  expected	36	None	replace
103	[BUG]  [BUGGY]  while(v  %  2!=  0  ||  k  <  31)  {  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]        if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;      [BUGGY]  while(v  %  2!=  0  ||  k  <  31)  {  [BUGGY]        u  /=  2;  v  /=  2;  k++;  //  cast  out  twos.  }  if  (k  ==  31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }    [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  short  NS  PS  ZS  boolean  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  k  t  u  v  	projects/Math94/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	428	430	1	replace	while(v  %  2!=  0  ||  k  <  31)  {	  while(u    %    2!=    0    ||    k    <    31)    {    	non-compiled	[CE]  <identifier>  expected	116	None	replace
104	[BUG]  [BUGGY]  while(u  %  2!=  0  ||  k  >=  31)  {  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]        if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;      [BUGGY]  while(u  %  2!=  0  ||  k  >=  31)  {  [BUGGY]        u  /=  2;  v  /=  2;  k++;  //  cast  out  twos.  }  if  (k  ==  31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }    [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  short  NS  PS  ZS  boolean  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  k  t  u  v  	projects/Math94/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	428	430	1	replace	while(u  %  2!=  0  ||  k  >=  31)  {	  while(u    %    2!=    0    ||    k    <    31)    {    	non-compiled	[CE]  <identifier>  expected	116	None	replace
105	[BUG]  [BUGGY]  int  u  =(int)Math.log((  v  +  1)/  2  +  1);  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]        if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;      [BUGGY]  int  u  =(int)Math.log((  v  +  1)/  2  +  1);  [BUGGY]      while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are                //  both  even...      u  /=  2;  u  /=  2;  v  /=  2;  k++;  //  cast  out  twos.  }  if  (k  ==  31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }    [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  short  NS  PS  ZS  boolean  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  k  t  u  v  	projects/Math94/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	428	430	1	replace	int  u  =(int)Math.log((  v  +  1)/  2  +  1);	  int    u    =(int)Math.log((    v    +    1)/    2);    	non-compiled	[CE]  <identifier>  expected	78	None	replace
106	[BUG]  [BUGGY]  int  u  =(int)Math.log((  v  +  1)/  3);  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]        if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;      [BUGGY]  int  u  =(int)Math.log((  v  +  1)/  3);  [BUGGY]      while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are                //  both  even...      u  /=  2;  u  /=  2;  v  /=  2;  k++;  //  cast  out  twos.  }  if  (k  ==  31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }    [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  short  NS  PS  ZS  boolean  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  k  t  u  v  	projects/Math94/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	428	430	1	replace	int  u  =(int)Math.log((  v  +  1)/  3);	  int    u    =(int)Math.log((    v    +    1)/    2);    	non-compiled	[CE]  <identifier>  expected	78	None	replace
107	[BUG]  [BUGGY]  int  u  =(int)Math.log((  u  *  2)/  2  +  1);  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]        if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;      [BUGGY]  int  u  =(int)Math.log((  u  *  2)/  2  +  1);  [BUGGY]      while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are                //  both  even...      u  /=  2;  u  /=  2;  v  /=  2;  k++;  //  cast  out  twos.  }  if  (k  ==  31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }    [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  short  NS  PS  ZS  boolean  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  k  t  u  v  	projects/Math94/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	428	430	1	replace	int  u  =(int)Math.log((  u  *  2)/  2  +  1);	  int    u    =(int)Math.log((    u    *    2)/    2);    	non-compiled	[CE]  <identifier>  expected	107	None	replace
108	[BUG]  [BUGGY]  int  u  =(int)Math.log((  u  *  2)/  4);  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]        if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;      [BUGGY]  int  u  =(int)Math.log((  u  *  2)/  4);  [BUGGY]      while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are                //  both  even...      u  /=  2;  u  /=  2;  v  /=  2;  k++;  //  cast  out  twos.  }  if  (k  ==  31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }    [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  short  NS  PS  ZS  boolean  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  k  t  u  v  	projects/Math94/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	428	430	1	replace	int  u  =(int)Math.log((  u  *  2)/  4);	  int    u    =(int)Math.log((    u    *    2)/    2);    	non-compiled	[CE]  <identifier>  expected	107	None	replace
109	[BUG]  [BUGGY]  int  u  =(int)Math.log((  u  *  2)/  3);  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]        if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;      [BUGGY]  int  u  =(int)Math.log((  u  *  2)/  3);  [BUGGY]      while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are                //  both  even...      u  /=  2;  u  /=  2;  v  /=  2;  k++;  //  cast  out  twos.  }  if  (k  ==  31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }    [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  short  NS  PS  ZS  boolean  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  k  t  u  v  	projects/Math94/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	428	430	1	replace	int  u  =(int)Math.log((  u  *  2)/  3);	  int    u    =(int)Math.log((    u    *    2)/    2);    	non-compiled	[CE]  <identifier>  expected	107	None	replace
110	[BUG]  [BUGGY]  while(v  %  2!=  0  &&  v  <  31  &&  k  <  31)  {  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]        if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;      [BUGGY]  while(v  %  2!=  0  &&  v  <  31  &&  k  <  31)  {  [BUGGY]        u  /=  2;  v  /=  2;  k++;  //  cast  out  twos.  }  if  (k  ==  31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }    [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  short  NS  PS  ZS  boolean  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  k  t  u  v  	projects/Math94/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	428	430	1	replace	while(v  %  2!=  0  &&  v  <  31  &&  k  <  31)  {	  while(v    %    2    ==    0    &&    v    >    31    &&    k    <    31)    {    	non-compiled	[CE]  <identifier>  expected	103	None	replace
111	[BUG]  [BUGGY]  while(v  %  2  ==  0  &&  k  <  31  &&  v  <  31)  {  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]        if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;      [BUGGY]  while(v  %  2  ==  0  &&  k  <  31  &&  v  <  31)  {  [BUGGY]        u  /=  2;  v  /=  2;  k++;  //  cast  out  twos.  }  if  (k  ==  31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }    [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  short  NS  PS  ZS  boolean  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  k  t  u  v  	projects/Math94/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	428	430	1	replace	while(v  %  2  ==  0  &&  k  <  31  &&  v  <  31)  {	  while(v    %    2    ==    0    &&    v    >    31    &&    k    <    31)    {    	non-compiled	[CE]  <identifier>  expected	103	None	replace
112	[BUG]  [BUGGY]  while(v  %  2  ==  0  &&  v  <  =  31  &&  k  <  31)  {  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]        if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;      [BUGGY]  while(v  %  2  ==  0  &&  v  <  =  31  &&  k  <  31)  {  [BUGGY]        u  /=  2;  v  /=  2;  k++;  //  cast  out  twos.  }  if  (k  ==  31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }    [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  short  NS  PS  ZS  boolean  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  k  t  u  v  	projects/Math94/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	428	430	1	replace	while(v  %  2  ==  0  &&  v  <  =  31  &&  k  <  31)  {	  while(v    %    2    ==    0    &&    v    >    31    &&    k    <    31)    {    	non-compiled	[CE]  <identifier>  expected	103	None	replace
113	[BUG]  [BUGGY]  int  u  =(int)Math.floor(k  +  1);  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]        if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;      [BUGGY]  int  u  =(int)Math.floor(k  +  1);  [BUGGY]      while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are                //  both  even...      u  /=  2;  u  /=  2;  v  /=  2;  k++;  //  cast  out  twos.  }  if  (k  ==  31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }    [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  short  NS  PS  ZS  boolean  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  k  t  u  v  	projects/Math94/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	428	430	1	replace	int  u  =(int)Math.floor(k  +  1);	  int    u    =(int)Math.floor(v    +    1);    	non-compiled	[CE]  <identifier>  expected	96	None	replace
114	[BUG]  [BUGGY]  int  u  =(int)Math.log(v  +  1);  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]        if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;      [BUGGY]  int  u  =(int)Math.log(v  +  1);  [BUGGY]      while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are                //  both  even...      u  /=  2;  u  /=  2;  v  /=  2;  k++;  //  cast  out  twos.  }  if  (k  ==  31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }    [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  short  NS  PS  ZS  boolean  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  k  t  u  v  	projects/Math94/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	428	430	1	replace	int  u  =(int)Math.log(v  +  1);	  int    u    =(int)Math.floor(v    +    1);    	non-compiled	[CE]  <identifier>  expected	96	None	replace
115	[BUG]  [BUGGY]  int  u  =(int)Math.ceil(v  +  1);  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]        if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;      [BUGGY]  int  u  =(int)Math.ceil(v  +  1);  [BUGGY]      while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are                //  both  even...      u  /=  2;  u  /=  2;  v  /=  2;  k++;  //  cast  out  twos.  }  if  (k  ==  31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }    [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  short  NS  PS  ZS  boolean  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  k  t  u  v  	projects/Math94/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	428	430	1	replace	int  u  =(int)Math.ceil(v  +  1);	  int    u    =(int)Math.floor(v    +    1);    	non-compiled	[CE]  <identifier>  expected	96	None	replace
116	[BUG]  [BUGGY]  char  u  =(char)Math.floor(v  +  1);  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]        if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;      [BUGGY]  char  u  =(char)Math.floor(v  +  1);  [BUGGY]      while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are                //  both  even...      u  /=  2;  u  /=  2;  v  /=  2;  k++;  //  cast  out  twos.  }  if  (k  ==  31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }    [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  short  NS  PS  ZS  boolean  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  k  t  u  v  	projects/Math94/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	428	430	1	replace	char  u  =(char)Math.floor(v  +  1);	  int    u    =(int)Math.floor(v    +    1);    	non-compiled	[CE]  <identifier>  expected	96	None	replace
117	[BUG]  [BUGGY]  int  k  =(int)Math.rint((  u  &  1)/  4);  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]        if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;      [BUGGY]  int  k  =(int)Math.rint((  u  &  1)/  4);  [BUGGY]      while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are                //  both  even...      u  /=  2;  u  /=  2;  v  /=  2;  k++;  //  cast  out  twos.  }  if  (k  ==  31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }    [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  short  NS  PS  ZS  boolean  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  k  t  u  v  	projects/Math94/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	428	430	1	replace	int  k  =(int)Math.rint((  u  &  1)/  4);	  int    k    =(int)Math.rint((    u    &    1)*    4);    	non-compiled	[CE]  <identifier>  expected	38	None	replace
118	[BUG]  [BUGGY]  int  k  =(int)Math.rint((  u  &  1)*  4  +  1);  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]        if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;      [BUGGY]  int  k  =(int)Math.rint((  u  &  1)*  4  +  1);  [BUGGY]      while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are                //  both  even...      u  /=  2;  u  /=  2;  v  /=  2;  k++;  //  cast  out  twos.  }  if  (k  ==  31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }    [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  short  NS  PS  ZS  boolean  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  k  t  u  v  	projects/Math94/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	428	430	1	replace	int  k  =(int)Math.rint((  u  &  1)*  4  +  1);	  int    k    =(int)Math.rint((    u    &    1)*    4);    	non-compiled	[CE]  <identifier>  expected	38	None	replace
119	[BUG]  [BUGGY]  int  k  =(int)Math.rint((  u  &  1)*  3);  [CE]  <identifier>  expected  [FE]                          AssertionFailedError      [CONTEXT]        if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;      [BUGGY]  int  k  =(int)Math.rint((  u  &  1)*  3);  [BUGGY]      while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are                //  both  even...      u  /=  2;  u  /=  2;  v  /=  2;  k++;  //  cast  out  twos.  }  if  (k  ==  31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }    [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  short  NS  PS  ZS  boolean  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  k  t  u  v  	projects/Math94/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	428	430	1	replace	int  k  =(int)Math.rint((  u  &  1)*  3);	  int    k    =(int)Math.rint((    u    &    1)*    4);    	non-compiled	[CE]  <identifier>  expected	38	None	replace
120	[BUG]  [BUGGY]  while((  u  &  2)  ==  0  ||(v  &  1)  ==  0  &&  k  <  31)  {  [CE]  <identifier>  expected  [FE]            AssertionFailedError      [CONTEXT]        if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;      [BUGGY]  while((  u  &  2)  ==  0  ||(v  &  1)  ==  0  &&  k  <  31)  {  [BUGGY]        u  /=  2;  v  /=  2;  k++;  //  cast  out  twos.  }  if  (k  ==  31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }    [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  short  NS  PS  ZS  boolean  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  k  t  u  v  	projects/Math94/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	428	430	1	replace	while((  u  &  2)  ==  0  ||(v  &  1)  ==  0  &&  k  <  31)  {	  while((    u    &    1)    ==    0    ||(v    &    1)    ==    0    &&    k    <    31)    {    	non-compiled	[CE]  <identifier>  expected	118	None	replace
121	[BUG]  [BUGGY]  int  u  =(int)Math.rint((  u  -  1)/  4  +  1);  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]        if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;      [BUGGY]  int  u  =(int)Math.rint((  u  -  1)/  4  +  1);  [BUGGY]      while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are                //  both  even...      u  /=  2;  u  /=  2;  v  /=  2;  k++;  //  cast  out  twos.  }  if  (k  ==  31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }    [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  short  NS  PS  ZS  boolean  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  k  t  u  v  	projects/Math94/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	428	430	1	replace	int  u  =(int)Math.rint((  u  -  1)/  4  +  1);	  int    u    =(int)Math.rint((    u    -    1)/    4);    	non-compiled	[CE]  <identifier>  expected	69	None	replace
122	[BUG]  [BUGGY]  int  u  =(int)Math.rint((  u  -  1)/  3);  [CE]  <identifier>  expected  [FE]                          AssertionFailedError      [CONTEXT]        if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;      [BUGGY]  int  u  =(int)Math.rint((  u  -  1)/  3);  [BUGGY]      while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are                //  both  even...      u  /=  2;  u  /=  2;  v  /=  2;  k++;  //  cast  out  twos.  }  if  (k  ==  31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }    [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  short  NS  PS  ZS  boolean  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  k  t  u  v  	projects/Math94/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	428	430	1	replace	int  u  =(int)Math.rint((  u  -  1)/  3);	  int    u    =(int)Math.rint((    u    -    1)/    4);    	non-compiled	[CE]  <identifier>  expected	69	None	replace
123	[BUG]  [BUGGY]  int  u  =(int)Math.rint((  u  /  1)/  4);  [CE]  <identifier>  expected  [FE]                            AssertionFailedError      [CONTEXT]        if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;      [BUGGY]  int  u  =(int)Math.rint((  u  /  1)/  4);  [BUGGY]      while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are                //  both  even...      u  /=  2;  u  /=  2;  v  /=  2;  k++;  //  cast  out  twos.  }  if  (k  ==  31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }    [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  short  NS  PS  ZS  boolean  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  k  t  u  v  	projects/Math94/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	428	430	1	replace	int  u  =(int)Math.rint((  u  /  1)/  4);	  int    u    =(int)Math.rint((    u    -    1)/    4);    	non-compiled	[CE]  <identifier>  expected	69	None	replace
124	[BUG]  [BUGGY]  int  u  =(int)Math.floor(k  -  1);  [CE]  <identifier>  expected  [FE]            AssertionFailedError      [CONTEXT]        if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;      [BUGGY]  int  u  =(int)Math.floor(k  -  1);  [BUGGY]      while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are                //  both  even...      u  /=  2;  u  /=  2;  v  /=  2;  k++;  //  cast  out  twos.  }  if  (k  ==  31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }    [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  short  NS  PS  ZS  boolean  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  k  t  u  v  	projects/Math94/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	428	430	1	replace	int  u  =(int)Math.floor(k  -  1);	  int    u    =(int)Math.floor(v    -    1);    	non-compiled	[CE]  <identifier>  expected	113	None	replace
125	[BUG]  [BUGGY]  int  u  =(int)Math.log(v  -  1);  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]        if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;      [BUGGY]  int  u  =(int)Math.log(v  -  1);  [BUGGY]      while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are                //  both  even...      u  /=  2;  u  /=  2;  v  /=  2;  k++;  //  cast  out  twos.  }  if  (k  ==  31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }    [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  short  NS  PS  ZS  boolean  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  k  t  u  v  	projects/Math94/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	428	430	1	replace	int  u  =(int)Math.log(v  -  1);	  int    u    =(int)Math.floor(v    -    1);    	non-compiled	[CE]  <identifier>  expected	113	None	replace
126	[BUG]  [BUGGY]  int  u  =(int)Math.ceil(v  -  1);  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]        if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;      [BUGGY]  int  u  =(int)Math.ceil(v  -  1);  [BUGGY]      while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are                //  both  even...      u  /=  2;  u  /=  2;  v  /=  2;  k++;  //  cast  out  twos.  }  if  (k  ==  31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }    [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  short  NS  PS  ZS  boolean  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  k  t  u  v  	projects/Math94/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	428	430	1	replace	int  u  =(int)Math.ceil(v  -  1);	  int    u    =(int)Math.floor(v    -    1);    	non-compiled	[CE]  <identifier>  expected	113	None	replace
127	[BUG]  [BUGGY]  char  u  =(char)Math.floor(v  -  1);  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]        if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;      [BUGGY]  char  u  =(char)Math.floor(v  -  1);  [BUGGY]      while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are                //  both  even...      u  /=  2;  u  /=  2;  v  /=  2;  k++;  //  cast  out  twos.  }  if  (k  ==  31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }    [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  short  NS  PS  ZS  boolean  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  k  t  u  v  	projects/Math94/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	428	430	1	replace	char  u  =(char)Math.floor(v  -  1);	  int    u    =(int)Math.floor(v    -    1);    	non-compiled	[CE]  <identifier>  expected	113	None	replace
128	[BUG]  [BUGGY]  while((  u  &  1)!=  0  &&(v  &  2)  ==  0)  {  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]        if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;      [BUGGY]  while((  u  &  1)!=  0  &&(v  &  2)  ==  0)  {  [BUGGY]        u  /=  2;  v  /=  2;  k++;  //  cast  out  twos.  }  if  (k  ==  31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }    [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  short  NS  PS  ZS  boolean  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  k  t  u  v  	projects/Math94/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	428	430	1	replace	while((  u  &  1)!=  0  &&(v  &  2)  ==  0)  {	  while((    u    &    1)!=    0    &&(v    &    2)    ==    0    &&    k    <    31)    {    	non-compiled	[CE]  <identifier>  expected	64	None	replace
129	[BUG]  [BUGGY]  float  k  =(float)Math.pow(10,  k  -  1);  [CE]  <identifier>  expected  [FE]            AssertionFailedError      [CONTEXT]        if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;      [BUGGY]  float  k  =(float)Math.pow(10,  k  -  1);  [BUGGY]      while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are                //  both  even...      u  /=  2;  u  /=  2;  v  /=  2;  k++;  //  cast  out  twos.  }  if  (k  ==  31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }    [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  short  NS  PS  ZS  boolean  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  k  t  u  v  	projects/Math94/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	428	430	1	replace	float  k  =(float)Math.pow(10,  k  -  1);	  float    k    =(float)Math.pow(10,    k);    	non-compiled	[CE]  <identifier>  expected	85	None	replace
130	[BUG]  [BUGGY]  float  k  =(float)Math.pow(10,  k  +  1);  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]        if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;      [BUGGY]  float  k  =(float)Math.pow(10,  k  +  1);  [BUGGY]      while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are                //  both  even...      u  /=  2;  u  /=  2;  v  /=  2;  k++;  //  cast  out  twos.  }  if  (k  ==  31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }    [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  short  NS  PS  ZS  boolean  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  k  t  u  v  	projects/Math94/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	428	430	1	replace	float  k  =(float)Math.pow(10,  k  +  1);	  float    k    =(float)Math.pow(10,    k);    	non-compiled	[CE]  <identifier>  expected	85	None	replace
131	[BUG]  [BUGGY]  float  k  =(float)Math.pow(10,  k  -  31);  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]        if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;      [BUGGY]  float  k  =(float)Math.pow(10,  k  -  31);  [BUGGY]      while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are                //  both  even...      u  /=  2;  u  /=  2;  v  /=  2;  k++;  //  cast  out  twos.  }  if  (k  ==  31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }    [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  short  NS  PS  ZS  boolean  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  k  t  u  v  	projects/Math94/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	428	430	1	replace	float  k  =(float)Math.pow(10,  k  -  31);	  float    k    =(float)Math.pow(10,    k);    	non-compiled	[CE]  <identifier>  expected	85	None	replace
132	[BUG]  [BUGGY]  char  u  =(char)Math.log(k);  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]        if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;      [BUGGY]  char  u  =(char)Math.log(k);  [BUGGY]      while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are                //  both  even...      u  /=  2;  u  /=  2;  v  /=  2;  k++;  //  cast  out  twos.  }  if  (k  ==  31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }    [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  short  NS  PS  ZS  boolean  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  k  t  u  v  	projects/Math94/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	428	430	1	replace	char  u  =(char)Math.log(k);	  char    u    =(char)Math.floor(k);    	non-compiled	[CE]  <identifier>  expected	43	None	replace
133	[BUG]  [BUGGY]  char  u  =(char)Math.floor(k  +  1);  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]        if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;      [BUGGY]  char  u  =(char)Math.floor(k  +  1);  [BUGGY]      while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are                //  both  even...      u  /=  2;  u  /=  2;  v  /=  2;  k++;  //  cast  out  twos.  }  if  (k  ==  31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }    [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  short  NS  PS  ZS  boolean  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  k  t  u  v  	projects/Math94/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	428	430	1	replace	char  u  =(char)Math.floor(k  +  1);	  char    u    =(char)Math.floor(k);    	non-compiled	[CE]  <identifier>  expected	43	None	replace
134	[BUG]  [BUGGY]  String  u  =(String)Math.floor(k);  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]        if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;      [BUGGY]  String  u  =(String)Math.floor(k);  [BUGGY]      while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are                //  both  even...      u  /=  2;  u  /=  2;  v  /=  2;  k++;  //  cast  out  twos.  }  if  (k  ==  31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }    [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  short  NS  PS  ZS  boolean  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  k  t  u  v  	projects/Math94/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	428	430	1	replace	String  u  =(String)Math.floor(k);	  char    u    =(char)Math.floor(k);    	non-compiled	[CE]  <identifier>  expected	43	None	replace
135	[BUG]  [BUGGY]  int  u  =(int)Math.log((  u  +  1)/  4  +  1);  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]        if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;      [BUGGY]  int  u  =(int)Math.log((  u  +  1)/  4  +  1);  [BUGGY]      while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are                //  both  even...      u  /=  2;  u  /=  2;  v  /=  2;  k++;  //  cast  out  twos.  }  if  (k  ==  31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }    [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  short  NS  PS  ZS  boolean  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  k  t  u  v  	projects/Math94/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	428	430	1	replace	int  u  =(int)Math.log((  u  +  1)/  4  +  1);	  int    u    =(int)Math.log((    u    +    1)/    4);    	non-compiled	[CE]  <identifier>  expected	25	None	replace
136	[BUG]  [BUGGY]  int  u  =(int)Math.log((  u  <  <  4)/  2  +  1);  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]        if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;      [BUGGY]  int  u  =(int)Math.log((  u  <  <  4)/  2  +  1);  [BUGGY]      while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are                //  both  even...      u  /=  2;  u  /=  2;  v  /=  2;  k++;  //  cast  out  twos.  }  if  (k  ==  31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }    [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  short  NS  PS  ZS  boolean  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  k  t  u  v  	projects/Math94/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	428	430	1	replace	int  u  =(int)Math.log((  u  <  <  4)/  2  +  1);	  int    u    =(int)Math.log((    u    <    <    4)/    2);    	non-compiled	[CE]  <identifier>  expected	13	None	replace
137	[BUG]  [BUGGY]  int  k  =(int)Math.rint((  u  +  1)*  v);  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]        if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;      [BUGGY]  int  k  =(int)Math.rint((  u  +  1)*  v);  [BUGGY]      while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are                //  both  even...      u  /=  2;  u  /=  2;  v  /=  2;  k++;  //  cast  out  twos.  }  if  (k  ==  31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }    [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  short  NS  PS  ZS  boolean  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  k  t  u  v  	projects/Math94/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	428	430	1	replace	int  k  =(int)Math.rint((  u  +  1)*  v);	  int    k    =(int)Math.rint((    u    &    1)*    v);    	non-compiled	[CE]  <identifier>  expected	125	None	replace
138	[BUG]  [BUGGY]  int  k  =(int)Math.rint((  u  &  1)/  v);  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]        if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;      [BUGGY]  int  k  =(int)Math.rint((  u  &  1)/  v);  [BUGGY]      while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are                //  both  even...      u  /=  2;  u  /=  2;  v  /=  2;  k++;  //  cast  out  twos.  }  if  (k  ==  31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }    [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  short  NS  PS  ZS  boolean  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  k  t  u  v  	projects/Math94/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	428	430	1	replace	int  k  =(int)Math.rint((  u  &  1)/  v);	  int    k    =(int)Math.rint((    u    &    1)*    v);    	non-compiled	[CE]  <identifier>  expected	125	None	replace
139	[BUG]  [BUGGY]  char  u  =(char)Math.ceil(v);  [CE]  <identifier>  expected  [FE]            AssertionFailedError      [CONTEXT]        if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;      [BUGGY]  char  u  =(char)Math.ceil(v);  [BUGGY]      while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are                //  both  even...      u  /=  2;  u  /=  2;  v  /=  2;  k++;  //  cast  out  twos.  }  if  (k  ==  31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }    [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  short  NS  PS  ZS  boolean  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  k  t  u  v  	projects/Math94/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	428	430	1	replace	char  u  =(char)Math.ceil(v);	  int    u    =(int)Math.ceil(v);    	non-compiled	[CE]  <identifier>  expected	44	None	replace
140	[BUG]  [BUGGY]  byte  u  =(byte)Math.ceil(v);  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]        if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;      [BUGGY]  byte  u  =(byte)Math.ceil(v);  [BUGGY]      while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are                //  both  even...      u  /=  2;  u  /=  2;  v  /=  2;  k++;  //  cast  out  twos.  }  if  (k  ==  31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }    [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  short  NS  PS  ZS  boolean  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  k  t  u  v  	projects/Math94/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	428	430	1	replace	byte  u  =(byte)Math.ceil(v);	  int    u    =(int)Math.ceil(v);    	non-compiled	[CE]  <identifier>  expected	44	None	replace
141	[BUG]  [BUGGY]  while(v  <  0  &&  v  <  =  0  &&  k  <  31)  {  [CE]  <identifier>  expected  [FE]            AssertionFailedError      [CONTEXT]        if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;      [BUGGY]  while(v  <  0  &&  v  <  =  0  &&  k  <  31)  {  [BUGGY]        u  /=  2;  v  /=  2;  k++;  //  cast  out  twos.  }  if  (k  ==  31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }    [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  short  NS  PS  ZS  boolean  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  k  t  u  v  	projects/Math94/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	428	430	1	replace	while(v  <  0  &&  v  <  =  0  &&  k  <  31)  {	  while(v    >    0    &&    v    <    =    0    &&    k    <    31)    {    	non-compiled	[CE]  <identifier>  expected	86	None	replace
142	[BUG]  [BUGGY]  int  k  =(int)Math.pow(10,  10);  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]        if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;      [BUGGY]  int  k  =(int)Math.pow(10,  10);  [BUGGY]      while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are                //  both  even...      u  /=  2;  u  /=  2;  v  /=  2;  k++;  //  cast  out  twos.  }  if  (k  ==  31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }    [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  short  NS  PS  ZS  boolean  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  k  t  u  v  	projects/Math94/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	428	430	1	replace	int  k  =(int)Math.pow(10,  10);	  int    k    =(int)Math.pow(10,    v);    	non-compiled	[CE]  <identifier>  expected	8	None	replace
143	[BUG]  [BUGGY]  int  k  =(int)Math.pow(10,  32);  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]        if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;      [BUGGY]  int  k  =(int)Math.pow(10,  32);  [BUGGY]      while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are                //  both  even...      u  /=  2;  u  /=  2;  v  /=  2;  k++;  //  cast  out  twos.  }  if  (k  ==  31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }    [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  short  NS  PS  ZS  boolean  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  k  t  u  v  	projects/Math94/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	428	430	1	replace	int  k  =(int)Math.pow(10,  32);	  int    k    =(int)Math.pow(10,    v);    	non-compiled	[CE]  <identifier>  expected	8	None	replace
144	[BUG]  [BUGGY]  while((  u  &  1)  ==  0  ||(v  &  1)  ==  0  ||  k  >>  31)  {  [CE]  <identifier>  expected  [FE]            AssertionFailedError      [CONTEXT]        if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;      [BUGGY]  while((  u  &  1)  ==  0  ||(v  &  1)  ==  0  ||  k  >>  31)  {  [BUGGY]        u  /=  2;  v  /=  2;  k++;  //  cast  out  twos.  }  if  (k  ==  31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }    [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  short  NS  PS  ZS  boolean  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  k  t  u  v  	projects/Math94/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	428	430	1	replace	while((  u  &  1)  ==  0  ||(v  &  1)  ==  0  ||  k  >>  31)  {	  while((    u    &    1)    ==    0    ||(v    &    1)    ==    0    ||    k    >=    31)    {    	non-compiled	[CE]  <identifier>  expected	91	None	replace
145	[BUG]  [BUGGY]  while((  u  &  2)  ==  0  ||(v  &  1)  ==  0  ||  k  >=  31)  {  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]        if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;      [BUGGY]  while((  u  &  2)  ==  0  ||(v  &  1)  ==  0  ||  k  >=  31)  {  [BUGGY]        u  /=  2;  v  /=  2;  k++;  //  cast  out  twos.  }  if  (k  ==  31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }    [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  short  NS  PS  ZS  boolean  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  k  t  u  v  	projects/Math94/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	428	430	1	replace	while((  u  &  2)  ==  0  ||(v  &  1)  ==  0  ||  k  >=  31)  {	  while((    u    &    1)    ==    0    ||(v    &    1)    ==    0    ||    k    >=    31)    {    	non-compiled	[CE]  <identifier>  expected	91	None	replace
146	[BUG]  [BUGGY]  int  u  =(int)Math.rint((  v  -  1)/  2  +  1);  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]        if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;      [BUGGY]  int  u  =(int)Math.rint((  v  -  1)/  2  +  1);  [BUGGY]      while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are                //  both  even...      u  /=  2;  u  /=  2;  v  /=  2;  k++;  //  cast  out  twos.  }  if  (k  ==  31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }    [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  short  NS  PS  ZS  boolean  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  k  t  u  v  	projects/Math94/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	428	430	1	replace	int  u  =(int)Math.rint((  v  -  1)/  2  +  1);	  int    u    =(int)Math.rint((    v    -    1)/    2);    	non-compiled	[CE]  <identifier>  expected	82	None	replace
147	[BUG]  [BUGGY]  int  u  =(int)Math.rint((  v  -  1)/  4);  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]        if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;      [BUGGY]  int  u  =(int)Math.rint((  v  -  1)/  4);  [BUGGY]      while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are                //  both  even...      u  /=  2;  u  /=  2;  v  /=  2;  k++;  //  cast  out  twos.  }  if  (k  ==  31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }    [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  short  NS  PS  ZS  boolean  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  k  t  u  v  	projects/Math94/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	428	430	1	replace	int  u  =(int)Math.rint((  v  -  1)/  4);	  int    u    =(int)Math.rint((    v    -    1)/    2);    	non-compiled	[CE]  <identifier>  expected	82	None	replace
148	[BUG]  [BUGGY]  int  u  =(int)Math.rint((  v  *  2)/  2);  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]        if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;      [BUGGY]  int  u  =(int)Math.rint((  v  *  2)/  2);  [BUGGY]      while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are                //  both  even...      u  /=  2;  u  /=  2;  v  /=  2;  k++;  //  cast  out  twos.  }  if  (k  ==  31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }    [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  short  NS  PS  ZS  boolean  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  k  t  u  v  	projects/Math94/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	428	430	1	replace	int  u  =(int)Math.rint((  v  *  2)/  2);	  int    u    =(int)Math.rint((    v    -    1)/    2);    	non-compiled	[CE]  <identifier>  expected	82	None	replace
149	[BUG]  [BUGGY]  int  k  =(int)Math.ceil(u);  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]        if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;      [BUGGY]  int  k  =(int)Math.ceil(u);  [BUGGY]      while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are                //  both  even...      u  /=  2;  u  /=  2;  v  /=  2;  k++;  //  cast  out  twos.  }  if  (k  ==  31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }    [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  short  NS  PS  ZS  boolean  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  k  t  u  v  	projects/Math94/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	428	430	1	replace	int  k  =(int)Math.ceil(u);	  int    k    =(int)Math.ceil(v);    	non-compiled	[CE]  <identifier>  expected	27	None	replace
150	[BUG]  [BUGGY]  int  k  =(int)Math.ceil(gcd);  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]        if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;      [BUGGY]  int  k  =(int)Math.ceil(gcd);  [BUGGY]      while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are                //  both  even...      u  /=  2;  u  /=  2;  v  /=  2;  k++;  //  cast  out  twos.  }  if  (k  ==  31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }    [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  short  NS  PS  ZS  boolean  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  k  t  u  v  	projects/Math94/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	428	430	1	replace	int  k  =(int)Math.ceil(gcd);	  int    k    =(int)Math.ceil(v);    	non-compiled	[CE]  <identifier>  expected	27	None	replace
151	[BUG]  [BUGGY]  int  k  =(int)Math.ceil(v  +  1);  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]        if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;      [BUGGY]  int  k  =(int)Math.ceil(v  +  1);  [BUGGY]      while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are                //  both  even...      u  /=  2;  u  /=  2;  v  /=  2;  k++;  //  cast  out  twos.  }  if  (k  ==  31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }    [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  short  NS  PS  ZS  boolean  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  k  t  u  v  	projects/Math94/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	428	430	1	replace	int  k  =(int)Math.ceil(v  +  1);	  int    k    =(int)Math.ceil(v);    	non-compiled	[CE]  <identifier>  expected	27	None	replace
152	[BUG]  [BUGGY]  char  k  =(char)Math.ceil(v);  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]        if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;      [BUGGY]  char  k  =(char)Math.ceil(v);  [BUGGY]      while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are                //  both  even...      u  /=  2;  u  /=  2;  v  /=  2;  k++;  //  cast  out  twos.  }  if  (k  ==  31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }    [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  short  NS  PS  ZS  boolean  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  k  t  u  v  	projects/Math94/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	428	430	1	replace	char  k  =(char)Math.ceil(v);	  int    k    =(int)Math.ceil(v);    	non-compiled	[CE]  <identifier>  expected	27	None	replace
153	[BUG]  [BUGGY]  char  k  =(char)Math.floor(u);  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]        if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;      [BUGGY]  char  k  =(char)Math.floor(u);  [BUGGY]      while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are                //  both  even...      u  /=  2;  u  /=  2;  v  /=  2;  k++;  //  cast  out  twos.  }  if  (k  ==  31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }    [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  short  NS  PS  ZS  boolean  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  k  t  u  v  	projects/Math94/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	428	430	1	replace	char  k  =(char)Math.floor(u);	  int    k    =(int)Math.floor(u);    	non-compiled	[CE]  <identifier>  expected	29	None	replace
154	[BUG]  [BUGGY]  int  k  =(int)Math.rint((  u  *  2)/  2  +  1);  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]        if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;      [BUGGY]  int  k  =(int)Math.rint((  u  *  2)/  2  +  1);  [BUGGY]      while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are                //  both  even...      u  /=  2;  u  /=  2;  v  /=  2;  k++;  //  cast  out  twos.  }  if  (k  ==  31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }    [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  short  NS  PS  ZS  boolean  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  k  t  u  v  	projects/Math94/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	428	430	1	replace	int  k  =(int)Math.rint((  u  *  2)/  2  +  1);	  int    k    =(int)Math.rint((    u    *    2)/    2);    	non-compiled	[CE]  <identifier>  expected	94	None	replace
155	[BUG]  [BUGGY]  int  k  =(int)Math.rint((  u  *  2)/  4);  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]        if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;      [BUGGY]  int  k  =(int)Math.rint((  u  *  2)/  4);  [BUGGY]      while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are                //  both  even...      u  /=  2;  u  /=  2;  v  /=  2;  k++;  //  cast  out  twos.  }  if  (k  ==  31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }    [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  short  NS  PS  ZS  boolean  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  k  t  u  v  	projects/Math94/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	428	430	1	replace	int  k  =(int)Math.rint((  u  *  2)/  4);	  int    k    =(int)Math.rint((    u    *    2)/    2);    	non-compiled	[CE]  <identifier>  expected	94	None	replace
156	[BUG]  [BUGGY]  int  k  =(int)Math.rint((  u  *  2)/  3);  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]        if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;      [BUGGY]  int  k  =(int)Math.rint((  u  *  2)/  3);  [BUGGY]      while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are                //  both  even...      u  /=  2;  u  /=  2;  v  /=  2;  k++;  //  cast  out  twos.  }  if  (k  ==  31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }    [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  short  NS  PS  ZS  boolean  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  k  t  u  v  	projects/Math94/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	428	430	1	replace	int  k  =(int)Math.rint((  u  *  2)/  3);	  int    k    =(int)Math.rint((    u    *    2)/    2);    	non-compiled	[CE]  <identifier>  expected	94	None	replace
157	[BUG]  [BUGGY]  while(k  %  2  ==  0  &&  v  <  =  0  &&  k  <  31)  {  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]        if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;      [BUGGY]  while(k  %  2  ==  0  &&  v  <  =  0  &&  k  <  31)  {  [BUGGY]        u  /=  2;  v  /=  2;  k++;  //  cast  out  twos.  }  if  (k  ==  31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }    [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  short  NS  PS  ZS  boolean  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  k  t  u  v  	projects/Math94/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	428	430	1	replace	while(k  %  2  ==  0  &&  v  <  =  0  &&  k  <  31)  {	  while(k    %    2    ==    0    &&    v    >    0    &&    k    <    31)    {    	non-compiled	[CE]  <identifier>  expected	111	None	replace
158	[BUG]  [BUGGY]  while(k  %  2!=  0  &&  v  <  =  0  &&  k  <  31)  {  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]        if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;      [BUGGY]  while(k  %  2!=  0  &&  v  <  =  0  &&  k  <  31)  {  [BUGGY]        u  /=  2;  v  /=  2;  k++;  //  cast  out  twos.  }  if  (k  ==  31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }    [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  short  NS  PS  ZS  boolean  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  k  t  u  v  	projects/Math94/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	428	430	1	replace	while(k  %  2!=  0  &&  v  <  =  0  &&  k  <  31)  {	  while(k    %    2    ==    0    &&    v    >    0    &&    k    <    31)    {    	non-compiled	[CE]  <identifier>  expected	111	None	replace
159	[BUG]  [BUGGY]  while(v  <  0  &&  v  <  31  &&  k  <  31)  {  [CE]  <identifier>  expected  [FE]            AssertionFailedError      [CONTEXT]        if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;      [BUGGY]  while(v  <  0  &&  v  <  31  &&  k  <  31)  {  [BUGGY]        u  /=  2;  v  /=  2;  k++;  //  cast  out  twos.  }  if  (k  ==  31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }    [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  short  NS  PS  ZS  boolean  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  k  t  u  v  	projects/Math94/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	428	430	1	replace	while(v  <  0  &&  v  <  31  &&  k  <  31)  {	  while(v    >    0    &&    v    <    31    &&    k    <    31)    {    	non-compiled	[CE]  <identifier>  expected	128	None	replace
160	[BUG]  [BUGGY]  while(v  >=  0  &&  v  <  31  &&  k  <  31)  {  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]        if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;      [BUGGY]  while(v  >=  0  &&  v  <  31  &&  k  <  31)  {  [BUGGY]        u  /=  2;  v  /=  2;  k++;  //  cast  out  twos.  }  if  (k  ==  31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }    [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  short  NS  PS  ZS  boolean  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  k  t  u  v  	projects/Math94/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	428	430	1	replace	while(v  >=  0  &&  v  <  31  &&  k  <  31)  {	  while(v    >    0    &&    v    <    31    &&    k    <    31)    {    	non-compiled	[CE]  <identifier>  expected	128	None	replace
161	[BUG]  [BUGGY]  while(v  >  0  &&  v  <  =  31  &&  k  <  31)  {  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]        if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;      [BUGGY]  while(v  >  0  &&  v  <  =  31  &&  k  <  31)  {  [BUGGY]        u  /=  2;  v  /=  2;  k++;  //  cast  out  twos.  }  if  (k  ==  31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }    [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  short  NS  PS  ZS  boolean  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  k  t  u  v  	projects/Math94/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	428	430	1	replace	while(v  >  0  &&  v  <  =  31  &&  k  <  31)  {	  while(v    >    0    &&    v    <    31    &&    k    <    31)    {    	non-compiled	[CE]  <identifier>  expected	128	None	replace
162	[BUG]  [BUGGY]  while((  u  %  2)  ==  0  ||(v  &  1)  ==  0)  {  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]        if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;      [BUGGY]  while((  u  %  2)  ==  0  ||(v  &  1)  ==  0)  {  [BUGGY]        u  /=  2;  v  /=  2;  k++;  //  cast  out  twos.  }  if  (k  ==  31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }    [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  short  NS  PS  ZS  boolean  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  k  t  u  v  	projects/Math94/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	428	430	1	replace	while((  u  %  2)  ==  0  ||(v  &  1)  ==  0)  {	  while((    u    %    2)    ==    0    &&(v    &    1)    ==    0)    {    	non-compiled	[CE]  <identifier>  expected	88	None	replace
163	[BUG]  [BUGGY]  while((  u  %  2)  ==  0  &&(v  %  2)  ==  0)  {  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]        if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;      [BUGGY]  while((  u  %  2)  ==  0  &&(v  %  2)  ==  0)  {  [BUGGY]        u  /=  2;  v  /=  2;  k++;  //  cast  out  twos.  }  if  (k  ==  31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }    [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  short  NS  PS  ZS  boolean  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  k  t  u  v  	projects/Math94/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	428	430	1	replace	while((  u  %  2)  ==  0  &&(v  %  2)  ==  0)  {	  while((    u    %    2)    ==    0    &&(v    &    1)    ==    0)    {    	non-compiled	[CE]  <identifier>  expected	88	None	replace
164	[BUG]  [BUGGY]  while((  u  %  2)  ==  0  &&(v  *  2)  ==  0)  {  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]        if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;      [BUGGY]  while((  u  %  2)  ==  0  &&(v  *  2)  ==  0)  {  [BUGGY]        u  /=  2;  v  /=  2;  k++;  //  cast  out  twos.  }  if  (k  ==  31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }    [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  short  NS  PS  ZS  boolean  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  k  t  u  v  	projects/Math94/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	428	430	1	replace	while((  u  %  2)  ==  0  &&(v  *  2)  ==  0)  {	  while((    u    %    2)    ==    0    &&(v    &    1)    ==    0)    {    	non-compiled	[CE]  <identifier>  expected	88	None	replace
165	[BUG]  [BUGGY]  while((  u  %  2)  ==  0  &&(v  %  2)!=  0)  {  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]        if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;      [BUGGY]  while((  u  %  2)  ==  0  &&(v  %  2)!=  0)  {  [BUGGY]        u  /=  2;  v  /=  2;  k++;  //  cast  out  twos.  }  if  (k  ==  31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }    [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  short  NS  PS  ZS  boolean  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  k  t  u  v  	projects/Math94/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	428	430	1	replace	while((  u  %  2)  ==  0  &&(v  %  2)!=  0)  {	  while((    u    %    2)    ==    0    &&(v    &    1)    ==    0)    {    	non-compiled	[CE]  <identifier>  expected	88	None	replace
166	[BUG]  [BUGGY]  int  k  =(v  <  32)?  1  :  0;  [CE]  <identifier>  expected  [FE]            AssertionFailedError      [CONTEXT]        if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;      [BUGGY]  int  k  =(v  <  32)?  1  :  0;  [BUGGY]      while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are                //  both  even...      u  /=  2;  u  /=  2;  v  /=  2;  k++;  //  cast  out  twos.  }  if  (k  ==  31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }    [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  short  NS  PS  ZS  boolean  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  k  t  u  v  	projects/Math94/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	428	430	1	replace	int  k  =(v  <  32)?  1  :  0;	  int    k    =(v    <    31)?    1    :    0;    	non-compiled	[CE]  <identifier>  expected	109	None	replace
167	[BUG]  [BUGGY]  int  k  =(v  >=  31)?  1  :  0;  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]        if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;      [BUGGY]  int  k  =(v  >=  31)?  1  :  0;  [BUGGY]      while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are                //  both  even...      u  /=  2;  u  /=  2;  v  /=  2;  k++;  //  cast  out  twos.  }  if  (k  ==  31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }    [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  short  NS  PS  ZS  boolean  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  k  t  u  v  	projects/Math94/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	428	430	1	replace	int  k  =(v  >=  31)?  1  :  0;	  int    k    =(v    <    31)?    1    :    0;    	non-compiled	[CE]  <identifier>  expected	109	None	replace
168	[BUG]  [BUGGY]  while((  u  &  1)!=  0  &&(v  &  1)  ==  0)  {  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]        if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;      [BUGGY]  while((  u  &  1)!=  0  &&(v  &  1)  ==  0)  {  [BUGGY]        u  /=  2;  v  /=  2;  k++;  //  cast  out  twos.  }  if  (k  ==  31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }    [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  short  NS  PS  ZS  boolean  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  k  t  u  v  	projects/Math94/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	428	430	1	replace	while((  u  &  1)!=  0  &&(v  &  1)  ==  0)  {	  while((    u    &    1)    ==    0    ||(v    &    1)    ==    0)    {    	non-compiled	[CE]  <identifier>  expected	57	None	replace
169	[BUG]  [BUGGY]  while((  u  &  2)  ==  0  ||(v  &  1)  ==  0)  {  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]        if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;      [BUGGY]  while((  u  &  2)  ==  0  ||(v  &  1)  ==  0)  {  [BUGGY]        u  /=  2;  v  /=  2;  k++;  //  cast  out  twos.  }  if  (k  ==  31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }    [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  short  NS  PS  ZS  boolean  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  k  t  u  v  	projects/Math94/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	428	430	1	replace	while((  u  &  2)  ==  0  ||(v  &  1)  ==  0)  {	  while((    u    &    1)    ==    0    ||(v    &    1)    ==    0)    {    	non-compiled	[CE]  <identifier>  expected	57	None	replace
170	[BUG]  [BUGGY]  int  k  =(v  <  >  31)?  1  :  0;  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]        if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;      [BUGGY]  int  k  =(v  <  >  31)?  1  :  0;  [BUGGY]      while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are                //  both  even...      u  /=  2;  u  /=  2;  v  /=  2;  k++;  //  cast  out  twos.  }  if  (k  ==  31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }    [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  short  NS  PS  ZS  boolean  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  k  t  u  v  	projects/Math94/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	428	430	1	replace	int  k  =(v  <  >  31)?  1  :  0;	  int    k    =(v    >    31)?    1    :    0;    	non-compiled	[CE]  <identifier>  expected	110	None	replace
171	[BUG]  [BUGGY]  while(v  <  =  2  &&  k  <  31)  {  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]        if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;      [BUGGY]  while(v  <  =  2  &&  k  <  31)  {  [BUGGY]        u  /=  2;  v  /=  2;  k++;  //  cast  out  twos.  }  if  (k  ==  31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }    [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  short  NS  PS  ZS  boolean  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  k  t  u  v  	projects/Math94/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	428	430	1	replace	while(v  <  =  2  &&  k  <  31)  {	  while(v    <    =    0    &&    k    <    31)    {    	non-compiled	[CE]  <identifier>  expected	129	None	replace
172	[BUG]  [BUGGY]  while(k  <  =  0  &&  v  <  31)  {  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]        if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;      [BUGGY]  while(k  <  =  0  &&  v  <  31)  {  [BUGGY]        u  /=  2;  v  /=  2;  k++;  //  cast  out  twos.  }  if  (k  ==  31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }    [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  short  NS  PS  ZS  boolean  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  k  t  u  v  	projects/Math94/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	428	430	1	replace	while(k  <  =  0  &&  v  <  31)  {	  while(v    <    =    0    &&    k    <    31)    {    	non-compiled	[CE]  <identifier>  expected	129	None	replace
173	[BUG]  [BUGGY]  int  k  =(int)Math.pow(10,  v  -  1);  [CE]  <identifier>  expected  [FE]            AssertionFailedError      [CONTEXT]        if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;      [BUGGY]  int  k  =(int)Math.pow(10,  v  -  1);  [BUGGY]      while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are                //  both  even...      u  /=  2;  u  /=  2;  v  /=  2;  k++;  //  cast  out  twos.  }  if  (k  ==  31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }    [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  short  NS  PS  ZS  boolean  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  k  t  u  v  	projects/Math94/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	428	430	1	replace	int  k  =(int)Math.pow(10,  v  -  1);	  int    k    =(int)Math.pow(10,    k    -    1);    	non-compiled	[CE]  <identifier>  expected	7	None	replace
174	[BUG]  [BUGGY]  int  k  =(int)Math.pow(10,  k  -  2);  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]        if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;      [BUGGY]  int  k  =(int)Math.pow(10,  k  -  2);  [BUGGY]      while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are                //  both  even...      u  /=  2;  u  /=  2;  v  /=  2;  k++;  //  cast  out  twos.  }  if  (k  ==  31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }    [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  short  NS  PS  ZS  boolean  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  k  t  u  v  	projects/Math94/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	428	430	1	replace	int  k  =(int)Math.pow(10,  k  -  2);	  int    k    =(int)Math.pow(10,    k    -    1);    	non-compiled	[CE]  <identifier>  expected	7	None	replace
175	[BUG]  [BUGGY]  int  k  =(int)Math.pow(10,  k  -  1  +  1);  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]        if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;      [BUGGY]  int  k  =(int)Math.pow(10,  k  -  1  +  1);  [BUGGY]      while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are                //  both  even...      u  /=  2;  u  /=  2;  v  /=  2;  k++;  //  cast  out  twos.  }  if  (k  ==  31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }    [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  short  NS  PS  ZS  boolean  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  k  t  u  v  	projects/Math94/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	428	430	1	replace	int  k  =(int)Math.pow(10,  k  -  1  +  1);	  int    k    =(int)Math.pow(10,    k    -    1);    	non-compiled	[CE]  <identifier>  expected	7	None	replace
176	[BUG]  [BUGGY]  int  u  =(int)Math.log((  v  <  <  1)/  2  +  1);  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]        if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;      [BUGGY]  int  u  =(int)Math.log((  v  <  <  1)/  2  +  1);  [BUGGY]      while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are                //  both  even...      u  /=  2;  u  /=  2;  v  /=  2;  k++;  //  cast  out  twos.  }  if  (k  ==  31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }    [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  short  NS  PS  ZS  boolean  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  k  t  u  v  	projects/Math94/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	428	430	1	replace	int  u  =(int)Math.log((  v  <  <  1)/  2  +  1);	  int    u    =(int)Math.log((    v    <    <    1)/    2);    	non-compiled	[CE]  <identifier>  expected	98	None	replace
177	[BUG]  [BUGGY]  int  u  =(int)Math.log((  k  <  <  1)/  2);  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]        if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;      [BUGGY]  int  u  =(int)Math.log((  k  <  <  1)/  2);  [BUGGY]      while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are                //  both  even...      u  /=  2;  u  /=  2;  v  /=  2;  k++;  //  cast  out  twos.  }  if  (k  ==  31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }    [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  short  NS  PS  ZS  boolean  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  k  t  u  v  	projects/Math94/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	428	430	1	replace	int  u  =(int)Math.log((  k  <  <  1)/  2);	  int    u    =(int)Math.log((    v    <    <    1)/    2);    	non-compiled	[CE]  <identifier>  expected	98	None	replace
178	[BUG]  [BUGGY]  int  k  =  32;  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]        if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;      [BUGGY]  int  k  =  32;  [BUGGY]      while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are                //  both  even...      u  /=  2;  u  /=  2;  v  /=  2;  k++;  //  cast  out  twos.  }  if  (k  ==  31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }    [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  short  NS  PS  ZS  boolean  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  k  t  u  v  	projects/Math94/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	428	430	1	replace	int  k  =  32;	  int    k    =    31;    	non-compiled	[CE]  <identifier>  expected	74	None	replace
179	[BUG]  [BUGGY]  while((  u  &  1)  ==  0  &&(v  &  2)  ==  0)  {  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]        if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;      [BUGGY]  while((  u  &  1)  ==  0  &&(v  &  2)  ==  0)  {  [BUGGY]        u  /=  2;  v  /=  2;  k++;  //  cast  out  twos.  }  if  (k  ==  31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }    [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  short  NS  PS  ZS  boolean  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  k  t  u  v  	projects/Math94/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	428	430	1	replace	while((  u  &  1)  ==  0  &&(v  &  2)  ==  0)  {	  while((    u    &    1)    ==    0    &&(v    &    1)    ==    0)    {    	non-compiled	[CE]  <identifier>  expected	59	None	replace
180	[BUG]  [BUGGY]  while((  u  &  2)  ==  0  &&(v  &  1)  ==  0)  {  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]        if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;      [BUGGY]  while((  u  &  2)  ==  0  &&(v  &  1)  ==  0)  {  [BUGGY]        u  /=  2;  v  /=  2;  k++;  //  cast  out  twos.  }  if  (k  ==  31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }    [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  short  NS  PS  ZS  boolean  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  k  t  u  v  	projects/Math94/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	428	430	1	replace	while((  u  &  2)  ==  0  &&(v  &  1)  ==  0)  {	  while((    u    &    1)    ==    0    &&(v    &    1)    ==    0)    {    	non-compiled	[CE]  <identifier>  expected	59	None	replace
181	[BUG]  [BUGGY]  int  k  =(int)Math.pow(10,  x  -  1);  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]        if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;      [BUGGY]  int  k  =(int)Math.pow(10,  x  -  1);  [BUGGY]      while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are                //  both  even...      u  /=  2;  u  /=  2;  v  /=  2;  k++;  //  cast  out  twos.  }  if  (k  ==  31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }    [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  short  NS  PS  ZS  boolean  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  k  t  u  v  	projects/Math94/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	428	430	1	replace	int  k  =(int)Math.pow(10,  x  -  1);	  int    k    =(int)Math.pow(10,    y    -    1);    	non-compiled	[CE]  <identifier>  expected	119	None	replace
182	[BUG]  [BUGGY]  int  k  =(int)Math.pow(10,  y  -  2);  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]        if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;      [BUGGY]  int  k  =(int)Math.pow(10,  y  -  2);  [BUGGY]      while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are                //  both  even...      u  /=  2;  u  /=  2;  v  /=  2;  k++;  //  cast  out  twos.  }  if  (k  ==  31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }    [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  short  NS  PS  ZS  boolean  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  k  t  u  v  	projects/Math94/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	428	430	1	replace	int  k  =(int)Math.pow(10,  y  -  2);	  int    k    =(int)Math.pow(10,    y    -    1);    	non-compiled	[CE]  <identifier>  expected	119	None	replace
183	[BUG]  [BUGGY]  int  u  =(int)Math.rint(v);  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]        if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;      [BUGGY]  int  u  =(int)Math.rint(v);  [BUGGY]      while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are                //  both  even...      u  /=  2;  u  /=  2;  v  /=  2;  k++;  //  cast  out  twos.  }  if  (k  ==  31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }    [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  short  NS  PS  ZS  boolean  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  k  t  u  v  	projects/Math94/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	428	430	1	replace	int  u  =(int)Math.rint(v);	  int    u    =(int)Math.log(k);    	non-compiled	[CE]  <identifier>  expected	41	None	replace
184	[BUG]  [BUGGY]  while(v  %  2  ==  0  &&  u  <  31)  {  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]        if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;      [BUGGY]  while(v  %  2  ==  0  &&  u  <  31)  {  [BUGGY]        u  /=  2;  v  /=  2;  k++;  //  cast  out  twos.  }  if  (k  ==  31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }    [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  short  NS  PS  ZS  boolean  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  k  t  u  v  	projects/Math94/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	428	430	1	replace	while(v  %  2  ==  0  &&  u  <  31)  {	  while(k    %    2    ==    0    &&    u    <    31)    {    	non-compiled	[CE]  <identifier>  expected	83	None	replace
185	[BUG]  [BUGGY]  while(k  %  2  ==  0  &&  u  <  =  31)  {  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]        if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;      [BUGGY]  while(k  %  2  ==  0  &&  u  <  =  31)  {  [BUGGY]        u  /=  2;  v  /=  2;  k++;  //  cast  out  twos.  }  if  (k  ==  31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }    [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  short  NS  PS  ZS  boolean  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  k  t  u  v  	projects/Math94/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	428	430	1	replace	while(k  %  2  ==  0  &&  u  <  =  31)  {	  while(k    %    2    ==    0    &&    u    <    31)    {    	non-compiled	[CE]  <identifier>  expected	83	None	replace
186	[BUG]  [BUGGY]  while(u  <  2  &&  k  <  31)  {  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]        if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;      [BUGGY]  while(u  <  2  &&  k  <  31)  {  [BUGGY]        u  /=  2;  v  /=  2;  k++;  //  cast  out  twos.  }  if  (k  ==  31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }    [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  short  NS  PS  ZS  boolean  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  k  t  u  v  	projects/Math94/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	428	430	1	replace	while(u  <  2  &&  k  <  31)  {	  while(u    >    2    &&    k    <    31)    {    	non-compiled	[CE]  <identifier>  expected	76	None	replace
187	[BUG]  [BUGGY]  while(v  >  2  &&  k  <  31)  {  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]        if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;      [BUGGY]  while(v  >  2  &&  k  <  31)  {  [BUGGY]        u  /=  2;  v  /=  2;  k++;  //  cast  out  twos.  }  if  (k  ==  31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }    [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  short  NS  PS  ZS  boolean  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  k  t  u  v  	projects/Math94/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	428	430	1	replace	while(v  >  2  &&  k  <  31)  {	  while(u    >    2    &&    k    <    31)    {    	non-compiled	[CE]  <identifier>  expected	76	None	replace
188	[BUG]  [BUGGY]  while(u  %  2  ==  0  &&  v  <  31)  {  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]        if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;      [BUGGY]  while(u  %  2  ==  0  &&  v  <  31)  {  [BUGGY]        u  /=  2;  v  /=  2;  k++;  //  cast  out  twos.  }  if  (k  ==  31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }    [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  short  NS  PS  ZS  boolean  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  k  t  u  v  	projects/Math94/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	428	430	1	replace	while(u  %  2  ==  0  &&  v  <  31)  {	  while(v    %    2    ==    0    &&    v    <    31)    {    	non-compiled	[CE]  <identifier>  expected	112	None	replace
189	[BUG]  [BUGGY]  while(v  %  2  ==  0  ||  v  <  31)  {  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]        if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;      [BUGGY]  while(v  %  2  ==  0  ||  v  <  31)  {  [BUGGY]        u  /=  2;  v  /=  2;  k++;  //  cast  out  twos.  }  if  (k  ==  31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }    [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  short  NS  PS  ZS  boolean  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  k  t  u  v  	projects/Math94/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	428	430	1	replace	while(v  %  2  ==  0  ||  v  <  31)  {	  while(v    %    2    ==    0    &&    v    <    31)    {    	non-compiled	[CE]  <identifier>  expected	112	None	replace
190	[BUG]  [BUGGY]  while(v  %  2!=  0  ||  v  <  31)  {  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]        if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;      [BUGGY]  while(v  %  2!=  0  ||  v  <  31)  {  [BUGGY]        u  /=  2;  v  /=  2;  k++;  //  cast  out  twos.  }  if  (k  ==  31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }    [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  short  NS  PS  ZS  boolean  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  k  t  u  v  	projects/Math94/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	428	430	1	replace	while(v  %  2!=  0  ||  v  <  31)  {	  while(v    %    2    ==    0    &&    v    <    31)    {    	non-compiled	[CE]  <identifier>  expected	112	None	replace
191	[BUG]  [BUGGY]  while(v  %  2  ==  0  &&  v  <  =  31)  {  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]        if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;      [BUGGY]  while(v  %  2  ==  0  &&  v  <  =  31)  {  [BUGGY]        u  /=  2;  v  /=  2;  k++;  //  cast  out  twos.  }  if  (k  ==  31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }    [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  short  NS  PS  ZS  boolean  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  k  t  u  v  	projects/Math94/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	428	430	1	replace	while(v  %  2  ==  0  &&  v  <  =  31)  {	  while(v    %    2    ==    0    &&    v    <    31)    {    	non-compiled	[CE]  <identifier>  expected	112	None	replace
192	[BUG]  [BUGGY]  while(u  <  =  0  &&  k  <  =  31)  {  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]        if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;      [BUGGY]  while(u  <  =  0  &&  k  <  =  31)  {  [BUGGY]        u  /=  2;  v  /=  2;  k++;  //  cast  out  twos.  }  if  (k  ==  31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }    [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  short  NS  PS  ZS  boolean  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  k  t  u  v  	projects/Math94/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	428	430	1	replace	while(u  <  =  0  &&  k  <  =  31)  {	  while(u    >    0    &&    k    <    =    31)    {    	non-compiled	[CE]  <identifier>  expected	51	None	replace
193	[BUG]  [BUGGY]  while(v  >  0  &&  k  <  =  31)  {  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]        if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;      [BUGGY]  while(v  >  0  &&  k  <  =  31)  {  [BUGGY]        u  /=  2;  v  /=  2;  k++;  //  cast  out  twos.  }  if  (k  ==  31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }    [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  short  NS  PS  ZS  boolean  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  k  t  u  v  	projects/Math94/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	428	430	1	replace	while(v  >  0  &&  k  <  =  31)  {	  while(u    >    0    &&    k    <    =    31)    {    	non-compiled	[CE]  <identifier>  expected	51	None	replace
194	[BUG]  [BUGGY]  while(k  <  =  0  &&  u  <  =  31)  {  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]        if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;      [BUGGY]  while(k  <  =  0  &&  u  <  =  31)  {  [BUGGY]        u  /=  2;  v  /=  2;  k++;  //  cast  out  twos.  }  if  (k  ==  31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }    [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  short  NS  PS  ZS  boolean  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  k  t  u  v  	projects/Math94/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	428	430	1	replace	while(k  <  =  0  &&  u  <  =  31)  {	  while(u    >    0    &&    k    <    =    31)    {    	non-compiled	[CE]  <identifier>  expected	51	None	replace
195	[BUG]  [BUGGY]  int  k  =(int)Math.rint((  u  -  1)/  2  *  2  +  1);  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]        if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;      [BUGGY]  int  k  =(int)Math.rint((  u  -  1)/  2  *  2  +  1);  [BUGGY]      while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are                //  both  even...      u  /=  2;  u  /=  2;  v  /=  2;  k++;  //  cast  out  twos.  }  if  (k  ==  31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }    [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  short  NS  PS  ZS  boolean  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  k  t  u  v  	projects/Math94/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	428	430	1	replace	int  k  =(int)Math.rint((  u  -  1)/  2  *  2  +  1);	  int    k    =(int)Math.rint((    u    -    1)/    2    +    1);    	non-compiled	[CE]  <identifier>  expected	19	None	replace
196	[BUG]  [BUGGY]  int  k  =(int)Math.rint((  u  -  1)/  2  *  1);  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]        if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;      [BUGGY]  int  k  =(int)Math.rint((  u  -  1)/  2  *  1);  [BUGGY]      while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are                //  both  even...      u  /=  2;  u  /=  2;  v  /=  2;  k++;  //  cast  out  twos.  }  if  (k  ==  31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }    [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  short  NS  PS  ZS  boolean  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  k  t  u  v  	projects/Math94/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	428	430	1	replace	int  k  =(int)Math.rint((  u  -  1)/  2  *  1);	  int    k    =(int)Math.rint((    u    -    1)/    2    +    1);    	non-compiled	[CE]  <identifier>  expected	19	None	replace
197	[BUG]  [BUGGY]  int  k  =(int)Math.pow(10,  y  +  2);  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]        if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;      [BUGGY]  int  k  =(int)Math.pow(10,  y  +  2);  [BUGGY]      while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are                //  both  even...      u  /=  2;  u  /=  2;  v  /=  2;  k++;  //  cast  out  twos.  }  if  (k  ==  31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }    [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  short  NS  PS  ZS  boolean  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  k  t  u  v  	projects/Math94/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	428	430	1	replace	int  k  =(int)Math.pow(10,  y  +  2);	  int    k    =(int)Math.pow(10,    y    +    1);    	non-compiled	[CE]  <identifier>  expected	48	None	replace
198	[BUG]  [BUGGY]  int  k  =(int)Math.pow(10,  y  +  3);  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]        if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;      [BUGGY]  int  k  =(int)Math.pow(10,  y  +  3);  [BUGGY]      while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are                //  both  even...      u  /=  2;  u  /=  2;  v  /=  2;  k++;  //  cast  out  twos.  }  if  (k  ==  31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }    [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  short  NS  PS  ZS  boolean  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  k  t  u  v  	projects/Math94/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	428	430	1	replace	int  k  =(int)Math.pow(10,  y  +  3);	  int    k    =(int)Math.pow(10,    y    +    1);    	non-compiled	[CE]  <identifier>  expected	48	None	replace
199	[BUG]  [BUGGY]  while(v  %  2  ==  0  &&  u  <  =  31  &&  k  <  31)  {  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]        if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;      [BUGGY]  while(v  %  2  ==  0  &&  u  <  =  31  &&  k  <  31)  {  [BUGGY]        u  /=  2;  v  /=  2;  k++;  //  cast  out  twos.  }  if  (k  ==  31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }    [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  short  NS  PS  ZS  boolean  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  k  t  u  v  	projects/Math94/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	428	430	1	replace	while(v  %  2  ==  0  &&  u  <  =  31  &&  k  <  31)  {	  while(v    %    2    ==    0    &&    u    <    31    &&    k    <    31)    {    	non-compiled	[CE]  <identifier>  expected	16	None	replace
200	[BUG]  [BUGGY]  while(u  %  2!=  0  &&  v  <  31  &&  k  <  31)  {  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]        if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;      [BUGGY]  while(u  %  2!=  0  &&  v  <  31  &&  k  <  31)  {  [BUGGY]        u  /=  2;  v  /=  2;  k++;  //  cast  out  twos.  }  if  (k  ==  31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }    [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  short  NS  PS  ZS  boolean  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  k  t  u  v  	projects/Math94/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	428	430	1	replace	while(u  %  2!=  0  &&  v  <  31  &&  k  <  31)  {	  while(v    %    2    ==    0    &&    u    <    31    &&    k    <    31)    {    	non-compiled	[CE]  <identifier>  expected	16	None	replace
201	[BUG]  [BUGGY]  while(v  %  2!=  0  &&  u  <  =  31  &&  k  <  31)  {  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]        if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;      [BUGGY]  while(v  %  2!=  0  &&  u  <  =  31  &&  k  <  31)  {  [BUGGY]        u  /=  2;  v  /=  2;  k++;  //  cast  out  twos.  }  if  (k  ==  31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }    [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  short  NS  PS  ZS  boolean  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  k  t  u  v  	projects/Math94/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	428	430	1	replace	while(v  %  2!=  0  &&  u  <  =  31  &&  k  <  31)  {	  while(v    %    2    ==    0    &&    u    <    31    &&    k    <    31)    {    	non-compiled	[CE]  <identifier>  expected	16	None	replace
202	[BUG]  [BUGGY]  int  u  =(int)Math.log((  u  <  <  1)/  2  *  1);  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]        if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;      [BUGGY]  int  u  =(int)Math.log((  u  <  <  1)/  2  *  1);  [BUGGY]      while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are                //  both  even...      u  /=  2;  u  /=  2;  v  /=  2;  k++;  //  cast  out  twos.  }  if  (k  ==  31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }    [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  short  NS  PS  ZS  boolean  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  k  t  u  v  	projects/Math94/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	428	430	1	replace	int  u  =(int)Math.log((  u  <  <  1)/  2  *  1);	  int    u    =(int)Math.log((    u    <    <    1)/    2    +    1);    	non-compiled	[CE]  <identifier>  expected	34	None	replace
203	[BUG]  [BUGGY]  int  u  =(int)Math.log((  u  <  <  1)/  2  +  3);  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]        if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;      [BUGGY]  int  u  =(int)Math.log((  u  <  <  1)/  2  +  3);  [BUGGY]      while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are                //  both  even...      u  /=  2;  u  /=  2;  v  /=  2;  k++;  //  cast  out  twos.  }  if  (k  ==  31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }    [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  short  NS  PS  ZS  boolean  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  k  t  u  v  	projects/Math94/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	428	430	1	replace	int  u  =(int)Math.log((  u  <  <  1)/  2  +  3);	  int    u    =(int)Math.log((    u    <    <    1)/    2    +    1);    	non-compiled	[CE]  <identifier>  expected	34	None	replace
204	[BUG]  [BUGGY]  while(u  <  0  &&  v  <  =  0  &&  k  <  31)  {  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]        if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;      [BUGGY]  while(u  <  0  &&  v  <  =  0  &&  k  <  31)  {  [BUGGY]        u  /=  2;  v  /=  2;  k++;  //  cast  out  twos.  }  if  (k  ==  31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }    [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  short  NS  PS  ZS  boolean  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  k  t  u  v  	projects/Math94/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	428	430	1	replace	while(u  <  0  &&  v  <  =  0  &&  k  <  31)  {	  while(u    >=    0    &&    v    <    =    0    &&    k    <    31)    {    	non-compiled	[CE]  <identifier>  expected	61	None	replace
205	[BUG]  [BUGGY]  int  k  =(int)Math.rint((  u  +  1)/  4  +  1);  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]        if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;      [BUGGY]  int  k  =(int)Math.rint((  u  +  1)/  4  +  1);  [BUGGY]      while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are                //  both  even...      u  /=  2;  u  /=  2;  v  /=  2;  k++;  //  cast  out  twos.  }  if  (k  ==  31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }    [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  short  NS  PS  ZS  boolean  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  k  t  u  v  	projects/Math94/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	428	430	1	replace	int  k  =(int)Math.rint((  u  +  1)/  4  +  1);	  int    k    =(int)Math.rint((    u    +    1)/    4);    	non-compiled	[CE]  <identifier>  expected	6	None	replace
206	[BUG]  [BUGGY]  int  k  =(int)Math.rint((  u  *  1)/  4);  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]        if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;      [BUGGY]  int  k  =(int)Math.rint((  u  *  1)/  4);  [BUGGY]      while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are                //  both  even...      u  /=  2;  u  /=  2;  v  /=  2;  k++;  //  cast  out  twos.  }  if  (k  ==  31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }    [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  short  NS  PS  ZS  boolean  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  k  t  u  v  	projects/Math94/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	428	430	1	replace	int  k  =(int)Math.rint((  u  *  1)/  4);	  int    k    =(int)Math.rint((    u    +    1)/    4);    	non-compiled	[CE]  <identifier>  expected	6	None	replace
207	[BUG]  [BUGGY]  int  k  =(int)Math.rint((  u  &  1)/  2);  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]        if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;      [BUGGY]  int  k  =(int)Math.rint((  u  &  1)/  2);  [BUGGY]      while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are                //  both  even...      u  /=  2;  u  /=  2;  v  /=  2;  k++;  //  cast  out  twos.  }  if  (k  ==  31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }    [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  short  NS  PS  ZS  boolean  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  k  t  u  v  	projects/Math94/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	428	430	1	replace	int  k  =(int)Math.rint((  u  &  1)/  2);	  int    k    =(int)Math.rint((    u    &    1)/    k);    	non-compiled	[CE]  <identifier>  expected	39	None	replace
208	[BUG]  [BUGGY]  int  k  =(int)Math.rint((  u  +  1)/  k);  [CE]  <identifier>  expected  [FE]                          AssertionFailedError      [CONTEXT]        if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;      [BUGGY]  int  k  =(int)Math.rint((  u  +  1)/  k);  [BUGGY]      while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are                //  both  even...      u  /=  2;  u  /=  2;  v  /=  2;  k++;  //  cast  out  twos.  }  if  (k  ==  31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }    [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  short  NS  PS  ZS  boolean  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  k  t  u  v  	projects/Math94/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	428	430	1	replace	int  k  =(int)Math.rint((  u  +  1)/  k);	  int    k    =(int)Math.rint((    u    &    1)/    k);    	non-compiled	[CE]  <identifier>  expected	39	None	replace
209	[BUG]  [BUGGY]  while(u  <  =  2  &&  k  <  31)  {  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]        if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;      [BUGGY]  while(u  <  =  2  &&  k  <  31)  {  [BUGGY]        u  /=  2;  v  /=  2;  k++;  //  cast  out  twos.  }  if  (k  ==  31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }    [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  short  NS  PS  ZS  boolean  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  k  t  u  v  	projects/Math94/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	428	430	1	replace	while(u  <  =  2  &&  k  <  31)  {	  while(u    <    =    0    &&    k    <    31)    {    	non-compiled	[CE]  <identifier>  expected	53	None	replace
210	[BUG]  [BUGGY]  while(k  <  =  0  &&  u  <  31)  {  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]        if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;      [BUGGY]  while(k  <  =  0  &&  u  <  31)  {  [BUGGY]        u  /=  2;  v  /=  2;  k++;  //  cast  out  twos.  }  if  (k  ==  31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }    [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  short  NS  PS  ZS  boolean  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  k  t  u  v  	projects/Math94/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	428	430	1	replace	while(k  <  =  0  &&  u  <  31)  {	  while(u    <    =    0    &&    k    <    31)    {    	non-compiled	[CE]  <identifier>  expected	53	None	replace
211	[BUG]  [BUGGY]  while(u  >=  0  &&  k  <  31)  {  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]        if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;      [BUGGY]  while(u  >=  0  &&  k  <  31)  {  [BUGGY]        u  /=  2;  v  /=  2;  k++;  //  cast  out  twos.  }  if  (k  ==  31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }    [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  short  NS  PS  ZS  boolean  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  k  t  u  v  	projects/Math94/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	428	430	1	replace	while(u  >=  0  &&  k  <  31)  {	  while(u    <    =    0    &&    k    <    31)    {    	non-compiled	[CE]  <identifier>  expected	53	None	replace
212	[BUG]  [BUGGY]  while(k  <  0  &&  u  <  31)  {  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]        if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;      [BUGGY]  while(k  <  0  &&  u  <  31)  {  [BUGGY]        u  /=  2;  v  /=  2;  k++;  //  cast  out  twos.  }  if  (k  ==  31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }    [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  short  NS  PS  ZS  boolean  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  k  t  u  v  	projects/Math94/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	428	430	1	replace	while(k  <  0  &&  u  <  31)  {	  while(k    >    0    &&    u    <    31)    {    	non-compiled	[CE]  <identifier>  expected	123	None	replace
213	[BUG]  [BUGGY]  while(u  <  0  &&  k  <  31)  {  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]        if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;      [BUGGY]  while(u  <  0  &&  k  <  31)  {  [BUGGY]        u  /=  2;  v  /=  2;  k++;  //  cast  out  twos.  }  if  (k  ==  31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }    [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  short  NS  PS  ZS  boolean  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  k  t  u  v  	projects/Math94/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	428	430	1	replace	while(u  <  0  &&  k  <  31)  {	  while(k    >    0    &&    u    <    31)    {    	non-compiled	[CE]  <identifier>  expected	123	None	replace
214	[BUG]  [BUGGY]  while((  u  &  1)  ==  0  &&(v  &  1)  ==  0  &&  k  >  31)  {  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]        if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;      [BUGGY]  while((  u  &  1)  ==  0  &&(v  &  1)  ==  0  &&  k  >  31)  {  [BUGGY]        u  /=  2;  v  /=  2;  k++;  //  cast  out  twos.  }  if  (k  ==  31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }    [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  short  NS  PS  ZS  boolean  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  k  t  u  v  	projects/Math94/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	428	430	1	replace	while((  u  &  1)  ==  0  &&(v  &  1)  ==  0  &&  k  >  31)  {	  while((    u    &    1)    ==    0    ||(v    &    1)    ==    0    ||    k    >    31)    {    	non-compiled	[CE]  <identifier>  expected	92	None	replace
215	[BUG]  [BUGGY]  while((  u  &  2)  ==  0  ||(v  &  1)  ==  0  ||  k  >  31)  {  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]        if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;      [BUGGY]  while((  u  &  2)  ==  0  ||(v  &  1)  ==  0  ||  k  >  31)  {  [BUGGY]        u  /=  2;  v  /=  2;  k++;  //  cast  out  twos.  }  if  (k  ==  31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }    [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  short  NS  PS  ZS  boolean  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  k  t  u  v  	projects/Math94/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	428	430	1	replace	while((  u  &  2)  ==  0  ||(v  &  1)  ==  0  ||  k  >  31)  {	  while((    u    &    1)    ==    0    ||(v    &    1)    ==    0    ||    k    >    31)    {    	non-compiled	[CE]  <identifier>  expected	92	None	replace
216	[BUG]  [BUGGY]  int  u  =(int)Math.log((  u  <  <  1)/  2  *  4);  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]        if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;      [BUGGY]  int  u  =(int)Math.log((  u  <  <  1)/  2  *  4);  [BUGGY]      while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are                //  both  even...      u  /=  2;  u  /=  2;  v  /=  2;  k++;  //  cast  out  twos.  }  if  (k  ==  31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }    [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  short  NS  PS  ZS  boolean  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  k  t  u  v  	projects/Math94/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	428	430	1	replace	int  u  =(int)Math.log((  u  <  <  1)/  2  *  4);	  int    u    =(int)Math.log((    u    <    <    1)/    2    +    4);    	non-compiled	[CE]  <identifier>  expected	35	None	replace
217	[BUG]  [BUGGY]  int  k  =(int)Math.rint((  u  +  1)*  4);  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]        if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;      [BUGGY]  int  k  =(int)Math.rint((  u  +  1)*  4);  [BUGGY]      while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are                //  both  even...      u  /=  2;  u  /=  2;  v  /=  2;  k++;  //  cast  out  twos.  }  if  (k  ==  31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }    [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  short  NS  PS  ZS  boolean  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  k  t  u  v  	projects/Math94/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	428	430	1	replace	int  k  =(int)Math.rint((  u  +  1)*  4);	  int    k    =(int)Math.rint((    u    +    1)*    k);    	non-compiled	[CE]  <identifier>  expected	37	None	replace
218	[BUG]  [BUGGY]  int  k  =(int)Math.rint((  u  +  1)*  2);  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]        if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;      [BUGGY]  int  k  =(int)Math.rint((  u  +  1)*  2);  [BUGGY]      while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are                //  both  even...      u  /=  2;  u  /=  2;  v  /=  2;  k++;  //  cast  out  twos.  }  if  (k  ==  31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }    [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  short  NS  PS  ZS  boolean  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  k  t  u  v  	projects/Math94/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	428	430	1	replace	int  k  =(int)Math.rint((  u  +  1)*  2);	  int    k    =(int)Math.rint((    u    +    1)*    k);    	non-compiled	[CE]  <identifier>  expected	37	None	replace
219	[BUG]  [BUGGY]  int  k  =(int)Math.rint((  u  +  1)*  1);  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]        if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;      [BUGGY]  int  k  =(int)Math.rint((  u  +  1)*  1);  [BUGGY]      while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are                //  both  even...      u  /=  2;  u  /=  2;  v  /=  2;  k++;  //  cast  out  twos.  }  if  (k  ==  31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }    [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  short  NS  PS  ZS  boolean  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  k  t  u  v  	projects/Math94/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	428	430	1	replace	int  k  =(int)Math.rint((  u  +  1)*  1);	  int    k    =(int)Math.rint((    u    +    1)*    k);    	non-compiled	[CE]  <identifier>  expected	37	None	replace
220	[BUG]  [BUGGY]  while(v  %  2  ==  0  &&  k  <  =  31)  {  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]        if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;      [BUGGY]  while(v  %  2  ==  0  &&  k  <  =  31)  {  [BUGGY]        u  /=  2;  v  /=  2;  k++;  //  cast  out  twos.  }  if  (k  ==  31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }    [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  short  NS  PS  ZS  boolean  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  k  t  u  v  	projects/Math94/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	428	430	1	replace	while(v  %  2  ==  0  &&  k  <  =  31)  {	  while(v    %    2    ==    0    &&    k    <    31)    {    	non-compiled	[CE]  <identifier>  expected	1	None	replace
221	[BUG]  [BUGGY]  int  u  =(int)Math.log((  u  <  <  3)/  2  +  1);  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]        if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;      [BUGGY]  int  u  =(int)Math.log((  u  <  <  3)/  2  +  1);  [BUGGY]      while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are                //  both  even...      u  /=  2;  u  /=  2;  v  /=  2;  k++;  //  cast  out  twos.  }  if  (k  ==  31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }    [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  short  NS  PS  ZS  boolean  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  k  t  u  v  	projects/Math94/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	428	430	1	replace	int  u  =(int)Math.log((  u  <  <  3)/  2  +  1);	  int    u    =(int)Math.log((    u    <    <    3)/    2);    	non-compiled	[CE]  <identifier>  expected	11	None	replace
222	[BUG]  [BUGGY]  int  u  =(int)Math.log(u  +  1);  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]        if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;      [BUGGY]  int  u  =(int)Math.log(u  +  1);  [BUGGY]      while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are                //  both  even...      u  /=  2;  u  /=  2;  v  /=  2;  k++;  //  cast  out  twos.  }  if  (k  ==  31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }    [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  short  NS  PS  ZS  boolean  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  k  t  u  v  	projects/Math94/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	428	430	1	replace	int  u  =(int)Math.log(u  +  1);	  int    u    =(int)Math.log(u);    	non-compiled	[CE]  <identifier>  expected	46	None	replace
223	[BUG]  [BUGGY]  int  u  =(int)Math.log(u  +  1,  k);  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]        if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;      [BUGGY]  int  u  =(int)Math.log(u  +  1,  k);  [BUGGY]      while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are                //  both  even...      u  /=  2;  u  /=  2;  v  /=  2;  k++;  //  cast  out  twos.  }  if  (k  ==  31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }    [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  short  NS  PS  ZS  boolean  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  k  t  u  v  	projects/Math94/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	428	430	1	replace	int  u  =(int)Math.log(u  +  1,  k);	  int    u    =(int)Math.log(u);    	non-compiled	[CE]  <identifier>  expected	46	None	replace
224	[BUG]  [BUGGY]  while((  u  &  1)!=  0  &&(v  &  1)  ==  0)  {  u  /=  2;  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]        if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;      [BUGGY]  while((  u  &  1)!=  0  &&(v  &  1)  ==  0)  {  u  /=  2;  [BUGGY]        u  /=  2;  v  /=  2;  k++;  //  cast  out  twos.  }  if  (k  ==  31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }    [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  short  NS  PS  ZS  boolean  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  k  t  u  v  	projects/Math94/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	428	430	1	replace	while((  u  &  1)!=  0  &&(v  &  1)  ==  0)  {  u  /=  2;	  while((    u    &    1)!=    0    &&(v    &    1)    ==    0)    {    //    while    u    and    v    are    both    even...    u    /=    2;    	non-compiled	[CE]  <identifier>  expected	132	None	replace
225	[BUG]  [BUGGY]  while((  u  &  1)!=  0  &&(v  &  2)  ==  0)  {  u  /=  2;  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]        if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;      [BUGGY]  while((  u  &  1)!=  0  &&(v  &  2)  ==  0)  {  u  /=  2;  [BUGGY]        u  /=  2;  v  /=  2;  k++;  //  cast  out  twos.  }  if  (k  ==  31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }    [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  short  NS  PS  ZS  boolean  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  k  t  u  v  	projects/Math94/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	428	430	1	replace	while((  u  &  1)!=  0  &&(v  &  2)  ==  0)  {  u  /=  2;	  while((    u    &    1)!=    0    &&(v    &    1)    ==    0)    {    //    while    u    and    v    are    both    even...    u    /=    2;    	non-compiled	[CE]  <identifier>  expected	132	None	replace
226	[BUG]  [BUGGY]  while((  u  &  2)  ==  0  ||(v  &  1)  ==  0  ||  k  <  31)  {  [CE]  <identifier>  expected  [FE]            AssertionFailedError      [CONTEXT]        if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;      [BUGGY]  while((  u  &  2)  ==  0  ||(v  &  1)  ==  0  ||  k  <  31)  {  [BUGGY]        u  /=  2;  v  /=  2;  k++;  //  cast  out  twos.  }  if  (k  ==  31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }    [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  short  NS  PS  ZS  boolean  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  k  t  u  v  	projects/Math94/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	428	430	1	replace	while((  u  &  2)  ==  0  ||(v  &  1)  ==  0  ||  k  <  31)  {	  while((    u    &    1)    ==    0    ||(v    &    1)    ==    0    ||    k    <    31)    {    	non-compiled	[CE]  <identifier>  expected	31	None	replace
227	[BUG]  [BUGGY]  int  u  =(int)Math.ceil(u);  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]        if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;      [BUGGY]  int  u  =(int)Math.ceil(u);  [BUGGY]      while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are                //  both  even...      u  /=  2;  u  /=  2;  v  /=  2;  k++;  //  cast  out  twos.  }  if  (k  ==  31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }    [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  short  NS  PS  ZS  boolean  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  k  t  u  v  	projects/Math94/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	428	430	1	replace	int  u  =(int)Math.ceil(u);	  int    u    =(int)Math.floor(u);    	non-compiled	[CE]  <identifier>  expected	45	None	replace
228	[BUG]  [BUGGY]  int  u  =(int)Math.rint((  u  <  <  1)/  2  +  1);  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]        if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;      [BUGGY]  int  u  =(int)Math.rint((  u  <  <  1)/  2  +  1);  [BUGGY]      while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are                //  both  even...      u  /=  2;  u  /=  2;  v  /=  2;  k++;  //  cast  out  twos.  }  if  (k  ==  31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }    [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  short  NS  PS  ZS  boolean  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  k  t  u  v  	projects/Math94/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	428	430	1	replace	int  u  =(int)Math.rint((  u  <  <  1)/  2  +  1);	  int    u    =(int)Math.rint((    u    <    <    1)/    2);    	non-compiled	[CE]  <identifier>  expected	97	None	replace
229	[BUG]  [BUGGY]  int  u  =(int)Math.rint((  u  <  <  1)/  2  +  4);  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]        if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;      [BUGGY]  int  u  =(int)Math.rint((  u  <  <  1)/  2  +  4);  [BUGGY]      while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are                //  both  even...      u  /=  2;  u  /=  2;  v  /=  2;  k++;  //  cast  out  twos.  }  if  (k  ==  31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }    [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  short  NS  PS  ZS  boolean  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  k  t  u  v  	projects/Math94/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	428	430	1	replace	int  u  =(int)Math.rint((  u  <  <  1)/  2  +  4);	  int    u    =(int)Math.rint((    u    <    <    1)/    2);    	non-compiled	[CE]  <identifier>  expected	97	None	replace
230	[BUG]  [BUGGY]  int  u  =(int)Math.rint((  u  <  <  1)/  4);  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]        if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;      [BUGGY]  int  u  =(int)Math.rint((  u  <  <  1)/  4);  [BUGGY]      while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are                //  both  even...      u  /=  2;  u  /=  2;  v  /=  2;  k++;  //  cast  out  twos.  }  if  (k  ==  31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }    [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  short  NS  PS  ZS  boolean  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  k  t  u  v  	projects/Math94/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	428	430	1	replace	int  u  =(int)Math.rint((  u  <  <  1)/  4);	  int    u    =(int)Math.rint((    u    <    <    1)/    2);    	non-compiled	[CE]  <identifier>  expected	97	None	replace
231	[BUG]  [BUGGY]  int  u  =(int)Math.rint((  u  /  1)/  2  +  1);  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]        if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;      [BUGGY]  int  u  =(int)Math.rint((  u  /  1)/  2  +  1);  [BUGGY]      while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are                //  both  even...      u  /=  2;  u  /=  2;  v  /=  2;  k++;  //  cast  out  twos.  }  if  (k  ==  31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }    [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  short  NS  PS  ZS  boolean  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  k  t  u  v  	projects/Math94/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	428	430	1	replace	int  u  =(int)Math.rint((  u  /  1)/  2  +  1);	  int    u    =(int)Math.rint((    u    /    1)/    2);    	non-compiled	[CE]  <identifier>  expected	67	None	replace
232	[BUG]  [BUGGY]  int  u  =(int)Math.rint((  k  /  1)/  2);  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]        if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;      [BUGGY]  int  u  =(int)Math.rint((  k  /  1)/  2);  [BUGGY]      while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are                //  both  even...      u  /=  2;  u  /=  2;  v  /=  2;  k++;  //  cast  out  twos.  }  if  (k  ==  31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }    [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  short  NS  PS  ZS  boolean  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  k  t  u  v  	projects/Math94/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	428	430	1	replace	int  u  =(int)Math.rint((  k  /  1)/  2);	  int    u    =(int)Math.rint((    u    /    1)/    2);    	non-compiled	[CE]  <identifier>  expected	67	None	replace
233	[BUG]  [BUGGY]  int  k  =(int)Math.pow(10,  15);  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]        if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;      [BUGGY]  int  k  =(int)Math.pow(10,  15);  [BUGGY]      while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are                //  both  even...      u  /=  2;  u  /=  2;  v  /=  2;  k++;  //  cast  out  twos.  }  if  (k  ==  31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }    [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  short  NS  PS  ZS  boolean  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  k  t  u  v  	projects/Math94/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	428	430	1	replace	int  k  =(int)Math.pow(10,  15);	  int    k    =(int)Math.pow(10,    16);    	non-compiled	[CE]  <identifier>  expected	9	None	replace
234	[BUG]  [BUGGY]  int  k  =(int)Math.floor(u  -  1);  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]        if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;      [BUGGY]  int  k  =(int)Math.floor(u  -  1);  [BUGGY]      while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are                //  both  even...      u  /=  2;  u  /=  2;  v  /=  2;  k++;  //  cast  out  twos.  }  if  (k  ==  31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }    [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  short  NS  PS  ZS  boolean  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  k  t  u  v  	projects/Math94/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	428	430	1	replace	int  k  =(int)Math.floor(u  -  1);	  int    k    =(int)Math.floor(v    -    1);    	non-compiled	[CE]  <identifier>  expected	126	None	replace
235	[BUG]  [BUGGY]  int  k  =(int)Math.log(v  -  1);  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]        if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;      [BUGGY]  int  k  =(int)Math.log(v  -  1);  [BUGGY]      while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are                //  both  even...      u  /=  2;  u  /=  2;  v  /=  2;  k++;  //  cast  out  twos.  }  if  (k  ==  31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }    [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  short  NS  PS  ZS  boolean  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  k  t  u  v  	projects/Math94/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	428	430	1	replace	int  k  =(int)Math.log(v  -  1);	  int    k    =(int)Math.floor(v    -    1);    	non-compiled	[CE]  <identifier>  expected	126	None	replace
236	[BUG]  [BUGGY]  int  k  =(int)Math.ceil(v  -  1);  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]        if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;      [BUGGY]  int  k  =(int)Math.ceil(v  -  1);  [BUGGY]      while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are                //  both  even...      u  /=  2;  u  /=  2;  v  /=  2;  k++;  //  cast  out  twos.  }  if  (k  ==  31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }    [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  short  NS  PS  ZS  boolean  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  k  t  u  v  	projects/Math94/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	428	430	1	replace	int  k  =(int)Math.ceil(v  -  1);	  int    k    =(int)Math.floor(v    -    1);    	non-compiled	[CE]  <identifier>  expected	126	None	replace
237	[BUG]  [BUGGY]  int  k  =(int)Math.log(u  -  1);  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]        if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;      [BUGGY]  int  k  =(int)Math.log(u  -  1);  [BUGGY]      while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are                //  both  even...      u  /=  2;  u  /=  2;  v  /=  2;  k++;  //  cast  out  twos.  }  if  (k  ==  31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }    [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  short  NS  PS  ZS  boolean  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  k  t  u  v  	projects/Math94/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	428	430	1	replace	int  k  =(int)Math.log(u  -  1);	  int    k    =(int)Math.floor(v    -    1);    	non-compiled	[CE]  <identifier>  expected	126	None	replace
238	[BUG]  [BUGGY]  while(u  %  2!=  0  &&  v  <  =  1  &&  k  <  31)  {  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]        if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;      [BUGGY]  while(u  %  2!=  0  &&  v  <  =  1  &&  k  <  31)  {  [BUGGY]        u  /=  2;  v  /=  2;  k++;  //  cast  out  twos.  }  if  (k  ==  31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }    [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  short  NS  PS  ZS  boolean  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  k  t  u  v  	projects/Math94/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	428	430	1	replace	while(u  %  2!=  0  &&  v  <  =  1  &&  k  <  31)  {	  while(u    %    2!=    0    &&    v    <    =    0    &&    k    <    31)    {    	non-compiled	[CE]  <identifier>  expected	17	None	replace
239	[BUG]  [BUGGY]  while(u  %  2!=  0  &&  v  <  =  3  &&  k  <  31)  {  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]        if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;      [BUGGY]  while(u  %  2!=  0  &&  v  <  =  3  &&  k  <  31)  {  [BUGGY]        u  /=  2;  v  /=  2;  k++;  //  cast  out  twos.  }  if  (k  ==  31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }    [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  short  NS  PS  ZS  boolean  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  k  t  u  v  	projects/Math94/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	428	430	1	replace	while(u  %  2!=  0  &&  v  <  =  3  &&  k  <  31)  {	  while(u    %    2!=    0    &&    v    <    =    0    &&    k    <    31)    {    	non-compiled	[CE]  <identifier>  expected	17	None	replace
240	[BUG]  [BUGGY]  while(v  %  2!=  0  &&  v  <  =  0  &&  k  <  31)  {  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]        if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;      [BUGGY]  while(v  %  2!=  0  &&  v  <  =  0  &&  k  <  31)  {  [BUGGY]        u  /=  2;  v  /=  2;  k++;  //  cast  out  twos.  }  if  (k  ==  31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }    [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  short  NS  PS  ZS  boolean  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  k  t  u  v  	projects/Math94/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	428	430	1	replace	while(v  %  2!=  0  &&  v  <  =  0  &&  k  <  31)  {	  while(u    %    2!=    0    &&    v    <    =    0    &&    k    <    31)    {    	non-compiled	[CE]  <identifier>  expected	17	None	replace
241	[BUG]  [BUGGY]  while(v  %  2  ==  0  &&  v  <  =  0  &&  k  <  31)  {  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]        if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;      [BUGGY]  while(v  %  2  ==  0  &&  v  <  =  0  &&  k  <  31)  {  [BUGGY]        u  /=  2;  v  /=  2;  k++;  //  cast  out  twos.  }  if  (k  ==  31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }    [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  short  NS  PS  ZS  boolean  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  k  t  u  v  	projects/Math94/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	428	430	1	replace	while(v  %  2  ==  0  &&  v  <  =  0  &&  k  <  31)  {	  while(u    %    2    ==    0    &&    v    <    =    0    &&    k    <    31)    {    	non-compiled	[CE]  <identifier>  expected	15	None	replace
242	[BUG]  [BUGGY]  while(u  %  2  ==  0  &&  v  <  =  1  &&  k  <  31)  {  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]        if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;      [BUGGY]  while(u  %  2  ==  0  &&  v  <  =  1  &&  k  <  31)  {  [BUGGY]        u  /=  2;  v  /=  2;  k++;  //  cast  out  twos.  }  if  (k  ==  31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }    [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  short  NS  PS  ZS  boolean  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  k  t  u  v  	projects/Math94/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	428	430	1	replace	while(u  %  2  ==  0  &&  v  <  =  1  &&  k  <  31)  {	  while(u    %    2    ==    0    &&    v    <    =    0    &&    k    <    31)    {    	non-compiled	[CE]  <identifier>  expected	15	None	replace
243	[BUG]  [BUGGY]  while(u  %  2  ==  0  &&  v  <  =  31  &&  k  <  =  0)  {  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]        if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;      [BUGGY]  while(u  %  2  ==  0  &&  v  <  =  31  &&  k  <  =  0)  {  [BUGGY]        u  /=  2;  v  /=  2;  k++;  //  cast  out  twos.  }  if  (k  ==  31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }    [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  short  NS  PS  ZS  boolean  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  k  t  u  v  	projects/Math94/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	428	430	1	replace	while(u  %  2  ==  0  &&  v  <  =  31  &&  k  <  =  0)  {	  while(u    %    2    ==    0    &&    v    <    =    0    &&    k    <    31)    {    	non-compiled	[CE]  <identifier>  expected	15	None	replace
244	[BUG]  [BUGGY]  while((  u  &  1)!=  0  &&(v  &  1)!=  0  &&  k  <  31)  {  [CE]  <identifier>  expected  [FE]            AssertionFailedError      [CONTEXT]        if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;      [BUGGY]  while((  u  &  1)!=  0  &&(v  &  1)!=  0  &&  k  <  31)  {  [BUGGY]        u  /=  2;  v  /=  2;  k++;  //  cast  out  twos.  }  if  (k  ==  31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }    [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  short  NS  PS  ZS  boolean  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  k  t  u  v  	projects/Math94/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	428	430	1	replace	while((  u  &  1)!=  0  &&(v  &  1)!=  0  &&  k  <  31)  {	  while((    u    &    1)    ==    0    &&(v    &    1)!=    0    &&    k    <    31)    {    	non-compiled	[CE]  <identifier>  expected	99	None	replace
245	[BUG]  [BUGGY]  while((  u  &  1)  ==  0  &&(v  &  2)!=  0  &&  k  <  31)  {  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]        if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;      [BUGGY]  while((  u  &  1)  ==  0  &&(v  &  2)!=  0  &&  k  <  31)  {  [BUGGY]        u  /=  2;  v  /=  2;  k++;  //  cast  out  twos.  }  if  (k  ==  31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }    [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  short  NS  PS  ZS  boolean  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  k  t  u  v  	projects/Math94/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	428	430	1	replace	while((  u  &  1)  ==  0  &&(v  &  2)!=  0  &&  k  <  31)  {	  while((    u    &    1)    ==    0    &&(v    &    1)!=    0    &&    k    <    31)    {    	non-compiled	[CE]  <identifier>  expected	99	None	replace
246	[BUG]  [BUGGY]  while((  u  &  1)  ==  0  &&(v  &  1)!=  0  &&  k  <  =  31)  {  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]        if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;      [BUGGY]  while((  u  &  1)  ==  0  &&(v  &  1)!=  0  &&  k  <  =  31)  {  [BUGGY]        u  /=  2;  v  /=  2;  k++;  //  cast  out  twos.  }  if  (k  ==  31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }    [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  short  NS  PS  ZS  boolean  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  k  t  u  v  	projects/Math94/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	428	430	1	replace	while((  u  &  1)  ==  0  &&(v  &  1)!=  0  &&  k  <  =  31)  {	  while((    u    &    1)    ==    0    &&(v    &    1)!=    0    &&    k    <    31)    {    	non-compiled	[CE]  <identifier>  expected	99	None	replace
247	[BUG]  [BUGGY]  int  k  =(int)Math.rint((  u  /  2)/  2  +  1);  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]        if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;      [BUGGY]  int  k  =(int)Math.rint((  u  /  2)/  2  +  1);  [BUGGY]      while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are                //  both  even...      u  /=  2;  u  /=  2;  v  /=  2;  k++;  //  cast  out  twos.  }  if  (k  ==  31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }    [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  short  NS  PS  ZS  boolean  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  k  t  u  v  	projects/Math94/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	428	430	1	replace	int  k  =(int)Math.rint((  u  /  2)/  2  +  1);	  int    k    =(int)Math.rint((    u    /    2)/    2);    	non-compiled	[CE]  <identifier>  expected	120	None	replace
248	[BUG]  [BUGGY]  int  k  =(int)Math.rint((  u  /  2)/  3);  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]        if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;      [BUGGY]  int  k  =(int)Math.rint((  u  /  2)/  3);  [BUGGY]      while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are                //  both  even...      u  /=  2;  u  /=  2;  v  /=  2;  k++;  //  cast  out  twos.  }  if  (k  ==  31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }    [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  short  NS  PS  ZS  boolean  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  k  t  u  v  	projects/Math94/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	428	430	1	replace	int  k  =(int)Math.rint((  u  /  2)/  3);	  int    k    =(int)Math.rint((    u    /    2)/    2);    	non-compiled	[CE]  <identifier>  expected	120	None	replace
249	[BUG]  [BUGGY]  int  k  =(int)Math.rint((  u  /  2)/  4);  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]        if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;      [BUGGY]  int  k  =(int)Math.rint((  u  /  2)/  4);  [BUGGY]      while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are                //  both  even...      u  /=  2;  u  /=  2;  v  /=  2;  k++;  //  cast  out  twos.  }  if  (k  ==  31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }    [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  short  NS  PS  ZS  boolean  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  k  t  u  v  	projects/Math94/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	428	430	1	replace	int  k  =(int)Math.rint((  u  /  2)/  4);	  int    k    =(int)Math.rint((    u    /    2)/    2);    	non-compiled	[CE]  <identifier>  expected	120	None	replace
250	[BUG]  [BUGGY]  while((  u  &  1)!=  0  &&(v  &  1)  ==  0  ||  k  <  31)  {  [CE]  <identifier>  expected  [FE]            AssertionFailedError      [CONTEXT]        if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;      [BUGGY]  while((  u  &  1)!=  0  &&(v  &  1)  ==  0  ||  k  <  31)  {  [BUGGY]        u  /=  2;  v  /=  2;  k++;  //  cast  out  twos.  }  if  (k  ==  31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }    [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  short  NS  PS  ZS  boolean  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  k  t  u  v  	projects/Math94/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	428	430	1	replace	while((  u  &  1)!=  0  &&(v  &  1)  ==  0  ||  k  <  31)  {	  while((    u    &    1)!=    0    ||(v    &    1)    ==    0    ||    k    <    31)    {    	non-compiled	[CE]  <identifier>  expected	117	None	replace
251	[BUG]  [BUGGY]  while((  u  &  2)!=  0  ||(v  &  1)  ==  0  ||  k  <  31)  {  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]        if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;      [BUGGY]  while((  u  &  2)!=  0  ||(v  &  1)  ==  0  ||  k  <  31)  {  [BUGGY]        u  /=  2;  v  /=  2;  k++;  //  cast  out  twos.  }  if  (k  ==  31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }    [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  short  NS  PS  ZS  boolean  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  k  t  u  v  	projects/Math94/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	428	430	1	replace	while((  u  &  2)!=  0  ||(v  &  1)  ==  0  ||  k  <  31)  {	  while((    u    &    1)!=    0    ||(v    &    1)    ==    0    ||    k    <    31)    {    	non-compiled	[CE]  <identifier>  expected	117	None	replace
252	[BUG]  [BUGGY]  int  k  =(int)Math.rint((  u  &  1)*  2  +  1);  [CE]  <identifier>  expected  [FE]                          AssertionFailedError      [CONTEXT]        if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;      [BUGGY]  int  k  =(int)Math.rint((  u  &  1)*  2  +  1);  [BUGGY]      while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are                //  both  even...      u  /=  2;  u  /=  2;  v  /=  2;  k++;  //  cast  out  twos.  }  if  (k  ==  31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }    [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  short  NS  PS  ZS  boolean  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  k  t  u  v  	projects/Math94/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	428	430	1	replace	int  k  =(int)Math.rint((  u  &  1)*  2  +  1);	  int    k    =(int)Math.rint((    u    &    1)*    2);    	non-compiled	[CE]  <identifier>  expected	40	None	replace
253	[BUG]  [BUGGY]  int  u  =(int)Math.rint((  u  -  1)/  2  *  2  +  1);  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]        if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;      [BUGGY]  int  u  =(int)Math.rint((  u  -  1)/  2  *  2  +  1);  [BUGGY]      while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are                //  both  even...      u  /=  2;  u  /=  2;  v  /=  2;  k++;  //  cast  out  twos.  }  if  (k  ==  31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }    [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  short  NS  PS  ZS  boolean  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  k  t  u  v  	projects/Math94/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	428	430	1	replace	int  u  =(int)Math.rint((  u  -  1)/  2  *  2  +  1);	  int    u    =(int)Math.rint((    u    -    1)/    2    +    1);    	non-compiled	[CE]  <identifier>  expected	66	None	replace
254	[BUG]  [BUGGY]  int  u  =(int)Math.rint((  u  -  1)/  2  *  1);  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]        if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;      [BUGGY]  int  u  =(int)Math.rint((  u  -  1)/  2  *  1);  [BUGGY]      while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are                //  both  even...      u  /=  2;  u  /=  2;  v  /=  2;  k++;  //  cast  out  twos.  }  if  (k  ==  31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }    [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  short  NS  PS  ZS  boolean  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  k  t  u  v  	projects/Math94/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	428	430	1	replace	int  u  =(int)Math.rint((  u  -  1)/  2  *  1);	  int    u    =(int)Math.rint((    u    -    1)/    2    +    1);    	non-compiled	[CE]  <identifier>  expected	66	None	replace
255	[BUG]  [BUGGY]  while((  u  &  1)  ==  0  &&(v  &  2)  ==  0)  {  u  /=  2;  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]        if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;      [BUGGY]  while((  u  &  1)  ==  0  &&(v  &  2)  ==  0)  {  u  /=  2;  [BUGGY]        u  /=  2;  v  /=  2;  k++;  //  cast  out  twos.  }  if  (k  ==  31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }    [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  short  NS  PS  ZS  boolean  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  k  t  u  v  	projects/Math94/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	428	430	1	replace	while((  u  &  1)  ==  0  &&(v  &  2)  ==  0)  {  u  /=  2;	  while((    u    &    1)    ==    0    &&(v    &    1)    ==    0)    {    u    /=    2;    	non-compiled	[CE]  <identifier>  expected	58	None	replace
256	[BUG]  [BUGGY]  while((  u  &  1)  ==  0)  {  u  /=  2;  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]        if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;      [BUGGY]  while((  u  &  1)  ==  0)  {  u  /=  2;  [BUGGY]        u  /=  2;  v  /=  2;  k++;  //  cast  out  twos.  }  if  (k  ==  31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }    [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  short  NS  PS  ZS  boolean  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  k  t  u  v  	projects/Math94/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	428	430	1	replace	while((  u  &  1)  ==  0)  {  u  /=  2;	  while((    u    &    1)    ==    0    &&(v    &    1)    ==    0)    {    u    /=    2;    	non-compiled	[CE]  <identifier>  expected	58	None	replace
257	[BUG]  [BUGGY]  int  k  =(int)Math.rint((  u  /  1)/  2  +  1);  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]        if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;      [BUGGY]  int  k  =(int)Math.rint((  u  /  1)/  2  +  1);  [BUGGY]      while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are                //  both  even...      u  /=  2;  u  /=  2;  v  /=  2;  k++;  //  cast  out  twos.  }  if  (k  ==  31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }    [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  short  NS  PS  ZS  boolean  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  k  t  u  v  	projects/Math94/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	428	430	1	replace	int  k  =(int)Math.rint((  u  /  1)/  2  +  1);	  int    k    =(int)Math.rint((    u    /    1)/    2);    	non-compiled	[CE]  <identifier>  expected	20	None	replace
258	[BUG]  [BUGGY]  int  k  =(int)Math.rint((  u  /  1)/  4);  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]        if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;      [BUGGY]  int  k  =(int)Math.rint((  u  /  1)/  4);  [BUGGY]      while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are                //  both  even...      u  /=  2;  u  /=  2;  v  /=  2;  k++;  //  cast  out  twos.  }  if  (k  ==  31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }    [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  short  NS  PS  ZS  boolean  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  k  t  u  v  	projects/Math94/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	428	430	1	replace	int  k  =(int)Math.rint((  u  /  1)/  4);	  int    k    =(int)Math.rint((    u    /    1)/    2);    	non-compiled	[CE]  <identifier>  expected	20	None	replace
259	[BUG]  [BUGGY]  while(v  %  2  ==  1  &&  v  >  0  &&  k  <  31)  {  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]        if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;      [BUGGY]  while(v  %  2  ==  1  &&  v  >  0  &&  k  <  31)  {  [BUGGY]        u  /=  2;  v  /=  2;  k++;  //  cast  out  twos.  }  if  (k  ==  31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }    [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  short  NS  PS  ZS  boolean  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  k  t  u  v  	projects/Math94/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	428	430	1	replace	while(v  %  2  ==  1  &&  v  >  0  &&  k  <  31)  {	  while(v    %    2    ==    0    &&    v    >    0    &&    k    <    31)    {    	non-compiled	[CE]  <identifier>  expected	102	None	replace
260	[BUG]  [BUGGY]  while(k  <  0  &&  k  <  31)  {  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]        if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;      [BUGGY]  while(k  <  0  &&  k  <  31)  {  [BUGGY]        u  /=  2;  v  /=  2;  k++;  //  cast  out  twos.  }  if  (k  ==  31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }    [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  short  NS  PS  ZS  boolean  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  k  t  u  v  	projects/Math94/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	428	430	1	replace	while(k  <  0  &&  k  <  31)  {	  while(k    >    0    &&    k    <    31)    {    	non-compiled	[CE]  <identifier>  expected	121	None	replace
261	[BUG]  [BUGGY]  while(k  >=  0  &&  k  <  31)  {  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]        if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;      [BUGGY]  while(k  >=  0  &&  k  <  31)  {  [BUGGY]        u  /=  2;  v  /=  2;  k++;  //  cast  out  twos.  }  if  (k  ==  31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }    [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  short  NS  PS  ZS  boolean  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  k  t  u  v  	projects/Math94/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	428	430	1	replace	while(k  >=  0  &&  k  <  31)  {	  while(k    >    0    &&    k    <    31)    {    	non-compiled	[CE]  <identifier>  expected	121	None	replace
262	[BUG]  [BUGGY]  int  k  =(int)Math.rint((  u  -  1)/  3  +  1);  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]        if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;      [BUGGY]  int  k  =(int)Math.rint((  u  -  1)/  3  +  1);  [BUGGY]      while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are                //  both  even...      u  /=  2;  u  /=  2;  v  /=  2;  k++;  //  cast  out  twos.  }  if  (k  ==  31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }    [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  short  NS  PS  ZS  boolean  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  k  t  u  v  	projects/Math94/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	428	430	1	replace	int  k  =(int)Math.rint((  u  -  1)/  3  +  1);	  int    k    =(int)Math.rint((    u    -    1)/    3);    	non-compiled	[CE]  <identifier>  expected	21	None	replace
263	[BUG]  [BUGGY]  int  k  =(int)Math.rint((  u  /  1)/  3);  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]        if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;      [BUGGY]  int  k  =(int)Math.rint((  u  /  1)/  3);  [BUGGY]      while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are                //  both  even...      u  /=  2;  u  /=  2;  v  /=  2;  k++;  //  cast  out  twos.  }  if  (k  ==  31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }    [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  short  NS  PS  ZS  boolean  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  k  t  u  v  	projects/Math94/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	428	430	1	replace	int  k  =(int)Math.rint((  u  /  1)/  3);	  int    k    =(int)Math.rint((    u    -    1)/    3);    	non-compiled	[CE]  <identifier>  expected	21	None	replace
264	[BUG]  [BUGGY]  int  k  =(int)Math.rint((  u  -  1)/  4  +  1);  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]        if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;      [BUGGY]  int  k  =(int)Math.rint((  u  -  1)/  4  +  1);  [BUGGY]      while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are                //  both  even...      u  /=  2;  u  /=  2;  v  /=  2;  k++;  //  cast  out  twos.  }  if  (k  ==  31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }    [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  short  NS  PS  ZS  boolean  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  k  t  u  v  	projects/Math94/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	428	430	1	replace	int  k  =(int)Math.rint((  u  -  1)/  4  +  1);	  int    k    =(int)Math.rint((    u    -    1)/    4);    	non-compiled	[CE]  <identifier>  expected	22	None	replace
265	[BUG]  [BUGGY]  int  u  =(int)Math.log(u,  k);  [CE]  <identifier>  expected  [FE]            AssertionFailedError      [CONTEXT]        if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;      [BUGGY]  int  u  =(int)Math.log(u,  k);  [BUGGY]      while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are                //  both  even...      u  /=  2;  u  /=  2;  v  /=  2;  k++;  //  cast  out  twos.  }  if  (k  ==  31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }    [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  short  NS  PS  ZS  boolean  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  k  t  u  v  	projects/Math94/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	428	430	1	replace	int  u  =(int)Math.log(u,  k);	  int    u    =(int)Math.log(v);    	non-compiled	[CE]  <identifier>  expected	95	None	replace
266	[BUG]  [BUGGY]  char  u  =(char)Math.log(v);  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]        if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;      [BUGGY]  char  u  =(char)Math.log(v);  [BUGGY]      while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are                //  both  even...      u  /=  2;  u  /=  2;  v  /=  2;  k++;  //  cast  out  twos.  }  if  (k  ==  31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }    [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  short  NS  PS  ZS  boolean  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  k  t  u  v  	projects/Math94/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	428	430	1	replace	char  u  =(char)Math.log(v);	  int    u    =(int)Math.log(v);    	non-compiled	[CE]  <identifier>  expected	95	None	replace
267	[BUG]  [BUGGY]  int  u  =(int)Math.rint((  k  -  1)/  2  +  1);  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]        if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;      [BUGGY]  int  u  =(int)Math.rint((  k  -  1)/  2  +  1);  [BUGGY]      while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are                //  both  even...      u  /=  2;  u  /=  2;  v  /=  2;  k++;  //  cast  out  twos.  }  if  (k  ==  31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }    [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  short  NS  PS  ZS  boolean  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  k  t  u  v  	projects/Math94/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	428	430	1	replace	int  u  =(int)Math.rint((  k  -  1)/  2  +  1);	  int    u    =(int)Math.rint((    k    -    1)/    2);    	non-compiled	[CE]  <identifier>  expected	81	None	replace
268	[BUG]  [BUGGY]  int  u  =(int)Math.rint((  k  -  1)/  3);  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]        if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;      [BUGGY]  int  u  =(int)Math.rint((  k  -  1)/  3);  [BUGGY]      while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are                //  both  even...      u  /=  2;  u  /=  2;  v  /=  2;  k++;  //  cast  out  twos.  }  if  (k  ==  31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }    [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  short  NS  PS  ZS  boolean  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  k  t  u  v  	projects/Math94/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	428	430	1	replace	int  u  =(int)Math.rint((  k  -  1)/  3);	  int    u    =(int)Math.rint((    k    -    1)/    2);    	non-compiled	[CE]  <identifier>  expected	81	None	replace
269	[BUG]  [BUGGY]  int  u  =(int)Math.rint((  k  -  1)/  4);  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]        if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;      [BUGGY]  int  u  =(int)Math.rint((  k  -  1)/  4);  [BUGGY]      while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are                //  both  even...      u  /=  2;  u  /=  2;  v  /=  2;  k++;  //  cast  out  twos.  }  if  (k  ==  31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }    [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  short  NS  PS  ZS  boolean  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  k  t  u  v  	projects/Math94/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	428	430	1	replace	int  u  =(int)Math.rint((  k  -  1)/  4);	  int    u    =(int)Math.rint((    k    -    1)/    2);    	non-compiled	[CE]  <identifier>  expected	81	None	replace
270	[BUG]  [BUGGY]  int  u  =(int)Math.rint((  k  -  1)/  2  +  4);  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]        if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;      [BUGGY]  int  u  =(int)Math.rint((  k  -  1)/  2  +  4);  [BUGGY]      while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are                //  both  even...      u  /=  2;  u  /=  2;  v  /=  2;  k++;  //  cast  out  twos.  }  if  (k  ==  31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }    [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  short  NS  PS  ZS  boolean  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  k  t  u  v  	projects/Math94/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	428	430	1	replace	int  u  =(int)Math.rint((  k  -  1)/  2  +  4);	  int    u    =(int)Math.rint((    k    -    1)/    2);    	non-compiled	[CE]  <identifier>  expected	81	None	replace
271	[BUG]  [BUGGY]  while((  u  &  1)  ==  0  &&(v  &  1)  ==  0  &&  k  <  31)  {  u  /=  2;  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]        if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;      [BUGGY]  while((  u  &  1)  ==  0  &&(v  &  1)  ==  0  &&  k  <  31)  {  u  /=  2;  [BUGGY]        u  /=  2;  v  /=  2;  k++;  //  cast  out  twos.  }  if  (k  ==  31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }    [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  short  NS  PS  ZS  boolean  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  k  t  u  v  	projects/Math94/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	428	430	1	replace	while((  u  &  1)  ==  0  &&(v  &  1)  ==  0  &&  k  <  31)  {  u  /=  2;	  while((    u    &    1)    ==    0    ||(v    &    1)    ==    0    ||    k    <    31)    {    u    /=    2;    	non-compiled	[CE]  <identifier>  expected	32	None	replace
272	[BUG]  [BUGGY]  while((  u  &  1)  ==  0  ||(v  &  1)  ==  0  ||  k  >=  31)  {  u  /=  2;  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]        if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;      [BUGGY]  while((  u  &  1)  ==  0  ||(v  &  1)  ==  0  ||  k  >=  31)  {  u  /=  2;  [BUGGY]        u  /=  2;  v  /=  2;  k++;  //  cast  out  twos.  }  if  (k  ==  31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }    [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  short  NS  PS  ZS  boolean  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  k  t  u  v  	projects/Math94/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	428	430	1	replace	while((  u  &  1)  ==  0  ||(v  &  1)  ==  0  ||  k  >=  31)  {  u  /=  2;	  while((    u    &    1)    ==    0    ||(v    &    1)    ==    0    ||    k    <    31)    {    u    /=    2;    	non-compiled	[CE]  <identifier>  expected	32	None	replace
273	[BUG]  [BUGGY]  float  k  =(float)Math.pow(10,  y  +  1);  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]        if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;      [BUGGY]  float  k  =(float)Math.pow(10,  y  +  1);  [BUGGY]      while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are                //  both  even...      u  /=  2;  u  /=  2;  v  /=  2;  k++;  //  cast  out  twos.  }  if  (k  ==  31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }    [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  short  NS  PS  ZS  boolean  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  k  t  u  v  	projects/Math94/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	428	430	1	replace	float  k  =(float)Math.pow(10,  y  +  1);	  float    k    =(float)Math.pow(10,    y);    	non-compiled	[CE]  <identifier>  expected	80	None	replace
274	[BUG]  [BUGGY]  float  k  =(float)Math.pow(10,  x);  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]        if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;      [BUGGY]  float  k  =(float)Math.pow(10,  x);  [BUGGY]      while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are                //  both  even...      u  /=  2;  u  /=  2;  v  /=  2;  k++;  //  cast  out  twos.  }  if  (k  ==  31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }    [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  short  NS  PS  ZS  boolean  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  k  t  u  v  	projects/Math94/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	428	430	1	replace	float  k  =(float)Math.pow(10,  x);	  float    k    =(float)Math.pow(10,    y);    	non-compiled	[CE]  <identifier>  expected	80	None	replace
275	[BUG]  [BUGGY]  float  k  =(float)Math.pow(10,  Y);  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]        if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;      [BUGGY]  float  k  =(float)Math.pow(10,  Y);  [BUGGY]      while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are                //  both  even...      u  /=  2;  u  /=  2;  v  /=  2;  k++;  //  cast  out  twos.  }  if  (k  ==  31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }    [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  short  NS  PS  ZS  boolean  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  k  t  u  v  	projects/Math94/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	428	430	1	replace	float  k  =(float)Math.pow(10,  Y);	  float    k    =(float)Math.pow(10,    y);    	non-compiled	[CE]  <identifier>  expected	80	None	replace
276	[BUG]  [BUGGY]  while((  u  &  2)  ==  0)  {  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]        if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;      [BUGGY]  while((  u  &  2)  ==  0)  {  [BUGGY]        u  /=  2;  v  /=  2;  k++;  //  cast  out  twos.  }  if  (k  ==  31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }    [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  short  NS  PS  ZS  boolean  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  k  t  u  v  	projects/Math94/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	428	430	1	replace	while((  u  &  2)  ==  0)  {	  while((    u    &    1)    ==    0)    {    	non-compiled	[CE]  <identifier>  expected	90	None	replace
277	[BUG]  [BUGGY]  while((  u  &  1)!=  0)  {  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]        if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;      [BUGGY]  while((  u  &  1)!=  0)  {  [BUGGY]        u  /=  2;  v  /=  2;  k++;  //  cast  out  twos.  }  if  (k  ==  31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }    [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  short  NS  PS  ZS  boolean  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  k  t  u  v  	projects/Math94/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	428	430	1	replace	while((  u  &  1)!=  0)  {	  while((    u    &    1)    ==    0)    {    	non-compiled	[CE]  <identifier>  expected	90	None	replace
278	[BUG]  [BUGGY]  while((  u  &  2)!=  0)  {  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]        if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;      [BUGGY]  while((  u  &  2)!=  0)  {  [BUGGY]        u  /=  2;  v  /=  2;  k++;  //  cast  out  twos.  }  if  (k  ==  31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }    [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  short  NS  PS  ZS  boolean  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  k  t  u  v  	projects/Math94/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	428	430	1	replace	while((  u  &  2)!=  0)  {	  while((    u    &    1)    ==    0)    {    	non-compiled	[CE]  <identifier>  expected	90	None	replace
279	[BUG]  [BUGGY]  while((  u  &  1)  ==  0  &&(v  &  1)!=  0)  {  u  /=  2;  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]        if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;      [BUGGY]  while((  u  &  1)  ==  0  &&(v  &  1)!=  0)  {  u  /=  2;  [BUGGY]        u  /=  2;  v  /=  2;  k++;  //  cast  out  twos.  }  if  (k  ==  31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }    [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  short  NS  PS  ZS  boolean  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  k  t  u  v  	projects/Math94/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	428	430	1	replace	while((  u  &  1)  ==  0  &&(v  &  1)!=  0)  {  u  /=  2;	  while((    u    &    1)    ==    0    ||(v    &    1)    ==    0)    {    u    /=    2;    	non-compiled	[CE]  <identifier>  expected	33	None	replace
280	[BUG]  [BUGGY]  int  u  =(int)Math.log((  u  +  1)/  2  *  1);  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]        if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;      [BUGGY]  int  u  =(int)Math.log((  u  +  1)/  2  *  1);  [BUGGY]      while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are                //  both  even...      u  /=  2;  u  /=  2;  v  /=  2;  k++;  //  cast  out  twos.  }  if  (k  ==  31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }    [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  short  NS  PS  ZS  boolean  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  k  t  u  v  	projects/Math94/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	428	430	1	replace	int  u  =(int)Math.log((  u  +  1)/  2  *  1);	  int    u    =(int)Math.log((    u    +    1)/    2    +    1);    	non-compiled	[CE]  <identifier>  expected	23	None	replace
281	[BUG]  [BUGGY]  int  u  =(int)Math.log((  u  +  1)/  2  +  3);  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]        if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;      [BUGGY]  int  u  =(int)Math.log((  u  +  1)/  2  +  3);  [BUGGY]      while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are                //  both  even...      u  /=  2;  u  /=  2;  v  /=  2;  k++;  //  cast  out  twos.  }  if  (k  ==  31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }    [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  short  NS  PS  ZS  boolean  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  k  t  u  v  	projects/Math94/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	428	430	1	replace	int  u  =(int)Math.log((  u  +  1)/  2  +  3);	  int    u    =(int)Math.log((    u    +    1)/    2    +    1);    	non-compiled	[CE]  <identifier>  expected	23	None	replace
282	[BUG]  [BUGGY]  while((  u  &  1)  ==  0  &&(v  %  2)  ==  0  &&  k  <  31)  {  [CE]  <identifier>  expected  [FE]            AssertionFailedError      [CONTEXT]        if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;      [BUGGY]  while((  u  &  1)  ==  0  &&(v  %  2)  ==  0  &&  k  <  31)  {  [BUGGY]        u  /=  2;  v  /=  2;  k++;  //  cast  out  twos.  }  if  (k  ==  31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }    [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  short  NS  PS  ZS  boolean  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  k  t  u  v  	projects/Math94/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	428	430	1	replace	while((  u  &  1)  ==  0  &&(v  %  2)  ==  0  &&  k  <  31)  {	  while((    u    &    1)    ==    0    &&(v    &    2)    ==    0    &&    k    <    31)    {    	non-compiled	[CE]  <identifier>  expected	70	None	replace
283	[BUG]  [BUGGY]  int  u  =(int)Math.log((  u  <  <  8)/  2  +  1);  [CE]  <identifier>  expected  [FE]                          AssertionFailedError      [CONTEXT]        if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;      [BUGGY]  int  u  =(int)Math.log((  u  <  <  8)/  2  +  1);  [BUGGY]      while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are                //  both  even...      u  /=  2;  u  /=  2;  v  /=  2;  k++;  //  cast  out  twos.  }  if  (k  ==  31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }    [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  short  NS  PS  ZS  boolean  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  k  t  u  v  	projects/Math94/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	428	430	1	replace	int  u  =(int)Math.log((  u  <  <  8)/  2  +  1);	  int    u    =(int)Math.log((    u    <    <    8)/    2);    	non-compiled	[CE]  <identifier>  expected	14	None	replace
284	[BUG]  [BUGGY]  String  u  =(String)Math.floor(v);  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]        if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;      [BUGGY]  String  u  =(String)Math.floor(v);  [BUGGY]      while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are                //  both  even...      u  /=  2;  u  /=  2;  v  /=  2;  k++;  //  cast  out  twos.  }  if  (k  ==  31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }    [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  short  NS  PS  ZS  boolean  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  k  t  u  v  	projects/Math94/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	428	430	1	replace	String  u  =(String)Math.floor(v);	  char    u    =(char)Math.floor(v);    	non-compiled	[CE]  <identifier>  expected	114	None	replace
285	[BUG]  [BUGGY]  int  k  =(int)Math.rint((  u  <  <  5)/  2);  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]        if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;      [BUGGY]  int  k  =(int)Math.rint((  u  <  <  5)/  2);  [BUGGY]      while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are                //  both  even...      u  /=  2;  u  /=  2;  v  /=  2;  k++;  //  cast  out  twos.  }  if  (k  ==  31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }    [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  short  NS  PS  ZS  boolean  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  k  t  u  v  	projects/Math94/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	428	430	1	replace	int  k  =(int)Math.rint((  u  <  <  5)/  2);	  int    k    =(int)Math.rint((    u    <    <    3)/    1);    	non-compiled	[CE]  <identifier>  expected	127	None	replace
286	[BUG]  [BUGGY]  while(k  >  0  &&  v  <  31  &&  u  <  31)  {  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]        if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;      [BUGGY]  while(k  >  0  &&  v  <  31  &&  u  <  31)  {  [BUGGY]        u  /=  2;  v  /=  2;  k++;  //  cast  out  twos.  }  if  (k  ==  31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }    [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  short  NS  PS  ZS  boolean  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  k  t  u  v  	projects/Math94/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	428	430	1	replace	while(k  >  0  &&  v  <  31  &&  u  <  31)  {	  while(u    >    0    &&    v    <    31    &&    k    <    31)    {    	non-compiled	[CE]  <identifier>  expected	62	None	replace
287	[BUG]  [BUGGY]  int  u  =(int)Math.rint((  v  -  1)/  3);  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]        if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;      [BUGGY]  int  u  =(int)Math.rint((  v  -  1)/  3);  [BUGGY]      while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are                //  both  even...      u  /=  2;  u  /=  2;  v  /=  2;  k++;  //  cast  out  twos.  }  if  (k  ==  31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }    [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  short  NS  PS  ZS  boolean  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  k  t  u  v  	projects/Math94/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	428	430	1	replace	int  u  =(int)Math.rint((  v  -  1)/  3);	  int    u    =(int)Math.rint((    v    -    1)/    2);    	non-compiled	[CE]  <identifier>  expected	82	None	replace
288	[BUG]  [BUGGY]  int  k  =(int)Math.rint((  u  %  1)*  2);  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]        if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;      [BUGGY]  int  k  =(int)Math.rint((  u  %  1)*  2);  [BUGGY]      while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are                //  both  even...      u  /=  2;  u  /=  2;  v  /=  2;  k++;  //  cast  out  twos.  }  if  (k  ==  31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }    [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  short  NS  PS  ZS  boolean  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  k  t  u  v  	projects/Math94/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	428	430	1	replace	int  k  =(int)Math.rint((  u  %  1)*  2);	  int    k    =(int)Math.rint((    u    %    1)*    k);    	non-compiled	[CE]  <identifier>  expected	106	None	replace
289	[BUG]  [BUGGY]  while((  u  &  1)  ==  0  ||(v  &  1)!=  0  &&  k  <  31)  {  [CE]  <identifier>  expected  [FE]            AssertionFailedError      [CONTEXT]        if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;      [BUGGY]  while((  u  &  1)  ==  0  ||(v  &  1)!=  0  &&  k  <  31)  {  [BUGGY]        u  /=  2;  v  /=  2;  k++;  //  cast  out  twos.  }  if  (k  ==  31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }    [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  short  NS  PS  ZS  boolean  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  k  t  u  v  	projects/Math94/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	428	430	1	replace	while((  u  &  1)  ==  0  ||(v  &  1)!=  0  &&  k  <  31)  {	  while((    u    &    1)    ==    0    &&(v    &    1)!=    0    &&    k    <    31)    {    	non-compiled	[CE]  <identifier>  expected	99	None	replace
290	[BUG]  [BUGGY]  while((  u  &  1)!=  0  ||(v  &  1)  ==  0  ||  k  >=  31)  {  [CE]  <identifier>  expected  [FE]            AssertionFailedError      [CONTEXT]        if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;      [BUGGY]  while((  u  &  1)!=  0  ||(v  &  1)  ==  0  ||  k  >=  31)  {  [BUGGY]        u  /=  2;  v  /=  2;  k++;  //  cast  out  twos.  }  if  (k  ==  31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }    [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  short  NS  PS  ZS  boolean  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  k  t  u  v  	projects/Math94/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	428	430	1	replace	while((  u  &  1)!=  0  ||(v  &  1)  ==  0  ||  k  >=  31)  {	  while((    u    &    1)!=    0    ||(v    &    1)    ==    0    ||    k    <    31)    {    	non-compiled	[CE]  <identifier>  expected	117	None	replace
291	[BUG]  [BUGGY]  int  u  =(int)Math.rint((  v  +  1)/  2);  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]        if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;      [BUGGY]  int  u  =(int)Math.rint((  v  +  1)/  2);  [BUGGY]      while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are                //  both  even...      u  /=  2;  u  /=  2;  v  /=  2;  k++;  //  cast  out  twos.  }  if  (k  ==  31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }    [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  short  NS  PS  ZS  boolean  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  k  t  u  v  	projects/Math94/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	428	430	1	replace	int  u  =(int)Math.rint((  v  +  1)/  2);	  int    u    =(int)Math.log((    v    +    1)/    2);    	non-compiled	[CE]  <identifier>  expected	78	None	replace
292	[BUG]  [BUGGY]  int  u  =(int)Math.rint((  v  <  <  1)/  2);  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]        if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;      [BUGGY]  int  u  =(int)Math.rint((  v  <  <  1)/  2);  [BUGGY]      while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are                //  both  even...      u  /=  2;  u  /=  2;  v  /=  2;  k++;  //  cast  out  twos.  }  if  (k  ==  31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }    [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  short  NS  PS  ZS  boolean  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  k  t  u  v  	projects/Math94/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	428	430	1	replace	int  u  =(int)Math.rint((  v  <  <  1)/  2);	  int    u    =(int)Math.rint((    u    <    <    1)/    2);    	non-compiled	[CE]  <identifier>  expected	97	None	replace
293	[BUG]  [BUGGY]  int  u  =(int)Math.rint((  k  <  <  1)/  2);  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]        if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;      [BUGGY]  int  u  =(int)Math.rint((  k  <  <  1)/  2);  [BUGGY]      while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are                //  both  even...      u  /=  2;  u  /=  2;  v  /=  2;  k++;  //  cast  out  twos.  }  if  (k  ==  31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }    [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  short  NS  PS  ZS  boolean  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  k  t  u  v  	projects/Math94/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	428	430	1	replace	int  u  =(int)Math.rint((  k  <  <  1)/  2);	  int    u    =(int)Math.rint((    u    <    <    1)/    2);    	non-compiled	[CE]  <identifier>  expected	97	None	replace
294	[BUG]  [BUGGY]  while(k  %  2!=  0  ||  u  <  31)  {  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]        if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;      [BUGGY]  while(k  %  2!=  0  ||  u  <  31)  {  [BUGGY]        u  /=  2;  v  /=  2;  k++;  //  cast  out  twos.  }  if  (k  ==  31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }    [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  short  NS  PS  ZS  boolean  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  k  t  u  v  	projects/Math94/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	428	430	1	replace	while(k  %  2!=  0  ||  u  <  31)  {	  while(u    %    2!=    0    ||    k    <    31)    {    	non-compiled	[CE]  <identifier>  expected	116	None	replace
295	[BUG]  [BUGGY]  int  u  =(int)Math.log(gcd);  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]        if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;      [BUGGY]  int  u  =(int)Math.log(gcd);  [BUGGY]      while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are                //  both  even...      u  /=  2;  u  /=  2;  v  /=  2;  k++;  //  cast  out  twos.  }  if  (k  ==  31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }    [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  short  NS  PS  ZS  boolean  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  k  t  u  v  	projects/Math94/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	428	430	1	replace	int  u  =(int)Math.log(gcd);	  int    u    =(int)Math.log(k);    	non-compiled	[CE]  <identifier>  expected	41	None	replace
296	[BUG]  [BUGGY]  int  u  =(int)Math.log(p);  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]        if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;      [BUGGY]  int  u  =(int)Math.log(p);  [BUGGY]      while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are                //  both  even...      u  /=  2;  u  /=  2;  v  /=  2;  k++;  //  cast  out  twos.  }  if  (k  ==  31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }    [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  short  NS  PS  ZS  boolean  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  k  t  u  v  	projects/Math94/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	428	430	1	replace	int  u  =(int)Math.log(p);	  int    u    =(int)Math.log(k);    	non-compiled	[CE]  <identifier>  expected	41	None	replace
297	[BUG]  [BUGGY]  int  u  =(int)Math.log(k  -  1);  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]        if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;      [BUGGY]  int  u  =(int)Math.log(k  -  1);  [BUGGY]      while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are                //  both  even...      u  /=  2;  u  /=  2;  v  /=  2;  k++;  //  cast  out  twos.  }  if  (k  ==  31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }    [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  short  NS  PS  ZS  boolean  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  k  t  u  v  	projects/Math94/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	428	430	1	replace	int  u  =(int)Math.log(k  -  1);	  int    u    =(int)Math.log(k);    	non-compiled	[CE]  <identifier>  expected	41	None	replace
298	[BUG]  [BUGGY]  while((  u  %  2)!=  0  &&(v  %  2)  ==  0)  {  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]        if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;      [BUGGY]  while((  u  %  2)!=  0  &&(v  %  2)  ==  0)  {  [BUGGY]        u  /=  2;  v  /=  2;  k++;  //  cast  out  twos.  }  if  (k  ==  31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }    [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  short  NS  PS  ZS  boolean  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  k  t  u  v  	projects/Math94/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	428	430	1	replace	while((  u  %  2)!=  0  &&(v  %  2)  ==  0)  {	  while((    u    %    2)    ==    0    &&(v    &    1)    ==    0)    {    	non-compiled	[CE]  <identifier>  expected	88	None	replace
299	[BUG]  [BUGGY]  int  k  =(int)Math.pow(10,  v  +  1);  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]        if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;      [BUGGY]  int  k  =(int)Math.pow(10,  v  +  1);  [BUGGY]      while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are                //  both  even...      u  /=  2;  u  /=  2;  v  /=  2;  k++;  //  cast  out  twos.  }  if  (k  ==  31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }    [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  short  NS  PS  ZS  boolean  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  k  t  u  v  	projects/Math94/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	428	430	1	replace	int  k  =(int)Math.pow(10,  v  +  1);	  int    k    =(int)Math.pow(10,    y    +    1);    	non-compiled	[CE]  <identifier>  expected	48	None	replace
300	[BUG]  [BUGGY]  int  u  =(int)Math.log((  k  *  2)/  2);  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]        if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;      [BUGGY]  int  u  =(int)Math.log((  k  *  2)/  2);  [BUGGY]      while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are                //  both  even...      u  /=  2;  u  /=  2;  v  /=  2;  k++;  //  cast  out  twos.  }  if  (k  ==  31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }    [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  short  NS  PS  ZS  boolean  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  k  t  u  v  	projects/Math94/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	428	430	1	replace	int  u  =(int)Math.log((  k  *  2)/  2);	  int    u    =(int)Math.log((    u    *    2)/    2);    	non-compiled	[CE]  <identifier>  expected	107	None	replace
301	[BUG]  [BUGGY]  int  u  =(int)Math.log((  v  *  2)/  2);  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]        if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;      [BUGGY]  int  u  =(int)Math.log((  v  *  2)/  2);  [BUGGY]      while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are                //  both  even...      u  /=  2;  u  /=  2;  v  /=  2;  k++;  //  cast  out  twos.  }  if  (k  ==  31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }    [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  short  NS  PS  ZS  boolean  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  k  t  u  v  	projects/Math94/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	428	430	1	replace	int  u  =(int)Math.log((  v  *  2)/  2);	  int    u    =(int)Math.log((    u    *    2)/    2);    	non-compiled	[CE]  <identifier>  expected	107	None	replace
302	[BUG]  [BUGGY]  while((  u  %  1)  ==  0)  {  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]        if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;      [BUGGY]  while((  u  %  1)  ==  0)  {  [BUGGY]        u  /=  2;  v  /=  2;  k++;  //  cast  out  twos.  }  if  (k  ==  31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }    [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  short  NS  PS  ZS  boolean  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  k  t  u  v  	projects/Math94/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	428	430	1	replace	while((  u  %  1)  ==  0)  {	  while((    u    &    1)    ==    0)    {    	non-compiled	[CE]  <identifier>  expected	90	None	replace
303	[BUG]  [BUGGY]  char  k  =(char)Math.pow(10,  v);  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]        if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;      [BUGGY]  char  k  =(char)Math.pow(10,  v);  [BUGGY]      while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are                //  both  even...      u  /=  2;  u  /=  2;  v  /=  2;  k++;  //  cast  out  twos.  }  if  (k  ==  31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }    [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  short  NS  PS  ZS  boolean  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  k  t  u  v  	projects/Math94/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	428	430	1	replace	char  k  =(char)Math.pow(10,  v);	  char    k    =(char)Math.pow(10,    k);    	non-compiled	[CE]  <identifier>  expected	10	None	replace
304	[BUG]  [BUGGY]  int  k  =(int)Math.floor(v  /  1);  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]        if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;      [BUGGY]  int  k  =(int)Math.floor(v  /  1);  [BUGGY]      while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are                //  both  even...      u  /=  2;  u  /=  2;  v  /=  2;  k++;  //  cast  out  twos.  }  if  (k  ==  31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }    [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  short  NS  PS  ZS  boolean  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  k  t  u  v  	projects/Math94/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	428	430	1	replace	int  k  =(int)Math.floor(v  /  1);	  int    k    =(int)Math.floor(v    -    1);    	non-compiled	[CE]  <identifier>  expected	126	None	replace
305	[BUG]  [BUGGY]  while((  u  &  1)  ==  0  ||(v  &  1)!=  0  ||  k  <  31)  {  [CE]  <identifier>  expected  [FE]            AssertionFailedError      [CONTEXT]        if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;      [BUGGY]  while((  u  &  1)  ==  0  ||(v  &  1)!=  0  ||  k  <  31)  {  [BUGGY]        u  /=  2;  v  /=  2;  k++;  //  cast  out  twos.  }  if  (k  ==  31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }    [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  short  NS  PS  ZS  boolean  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  k  t  u  v  	projects/Math94/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	428	430	1	replace	while((  u  &  1)  ==  0  ||(v  &  1)!=  0  ||  k  <  31)  {	  while((    u    &    1)    ==    0    ||(v    &    1)    ==    0    ||    k    <    31)    {    	non-compiled	[CE]  <identifier>  expected	31	None	replace
306	[BUG]  [BUGGY]  int  k  =(int)Math.rint((  u  <  <  4)+  3);  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]        if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;      [BUGGY]  int  k  =(int)Math.rint((  u  <  <  4)+  3);  [BUGGY]      while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are                //  both  even...      u  /=  2;  u  /=  2;  v  /=  2;  k++;  //  cast  out  twos.  }  if  (k  ==  31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }    [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  short  NS  PS  ZS  boolean  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  k  t  u  v  	projects/Math94/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	428	430	1	replace	int  k  =(int)Math.rint((  u  <  <  4)+  3);	  int    k    =(int)Math.rint((    u    <    <    4)+    1);    	non-compiled	[CE]  <identifier>  expected	55	None	replace
307	[BUG]  [BUGGY]  int  u  =(int)Math.log((  v  <  <  1)/  2  +  4);  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]        if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;      [BUGGY]  int  u  =(int)Math.log((  v  <  <  1)/  2  +  4);  [BUGGY]      while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are                //  both  even...      u  /=  2;  u  /=  2;  v  /=  2;  k++;  //  cast  out  twos.  }  if  (k  ==  31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }    [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  short  NS  PS  ZS  boolean  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  k  t  u  v  	projects/Math94/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	428	430	1	replace	int  u  =(int)Math.log((  v  <  <  1)/  2  +  4);	  int    u    =(int)Math.log((    v    <    <    1)/    2);    	non-compiled	[CE]  <identifier>  expected	98	None	replace
308	[BUG]  [BUGGY]  float  k  =(float)Math.pow(10,  Math.PI);  [CE]  <identifier>  expected  [FE]            AssertionFailedError      [CONTEXT]        if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;      [BUGGY]  float  k  =(float)Math.pow(10,  Math.PI);  [BUGGY]      while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are                //  both  even...      u  /=  2;  u  /=  2;  v  /=  2;  k++;  //  cast  out  twos.  }  if  (k  ==  31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }    [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  short  NS  PS  ZS  boolean  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  k  t  u  v  	projects/Math94/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	428	430	1	replace	float  k  =(float)Math.pow(10,  Math.PI);	  float    k    =(float)Math.pow(10,    k);    	non-compiled	[CE]  <identifier>  expected	85	None	replace
309	[BUG]  [BUGGY]  float  k  =(float)Math.pow(10,  v);  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]        if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;      [BUGGY]  float  k  =(float)Math.pow(10,  v);  [BUGGY]      while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are                //  both  even...      u  /=  2;  u  /=  2;  v  /=  2;  k++;  //  cast  out  twos.  }  if  (k  ==  31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }    [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  short  NS  PS  ZS  boolean  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  k  t  u  v  	projects/Math94/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	428	430	1	replace	float  k  =(float)Math.pow(10,  v);	  float    k    =(float)Math.pow(10,    k);    	non-compiled	[CE]  <identifier>  expected	85	None	replace
310	[BUG]  [BUGGY]  while((  u  &  1)  ==  0  ||(v  &  1)!=  0)  {  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]        if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;      [BUGGY]  while((  u  &  1)  ==  0  ||(v  &  1)!=  0)  {  [BUGGY]        u  /=  2;  v  /=  2;  k++;  //  cast  out  twos.  }  if  (k  ==  31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }    [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  short  NS  PS  ZS  boolean  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  k  t  u  v  	projects/Math94/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	428	430	1	replace	while((  u  &  1)  ==  0  ||(v  &  1)!=  0)  {	  while((    u    &    1)    ==    0    ||(v    &    1)    ==    0)    {    //    while    u    and    v    are    both    even...    u    /=    2;    	non-compiled	[CE]  <identifier>  expected	131	None	replace
311	[BUG]  [BUGGY]  int  u  =(int)Math.log((  u  +  1)/  2  *  2  +  1);  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]        if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;      [BUGGY]  int  u  =(int)Math.log((  u  +  1)/  2  *  2  +  1);  [BUGGY]      while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are                //  both  even...      u  /=  2;  u  /=  2;  v  /=  2;  k++;  //  cast  out  twos.  }  if  (k  ==  31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }    [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  short  NS  PS  ZS  boolean  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  k  t  u  v  	projects/Math94/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	428	430	1	replace	int  u  =(int)Math.log((  u  +  1)/  2  *  2  +  1);	  int    u    =(int)Math.log((    u    +    1)/    2    +    1);    	non-compiled	[CE]  <identifier>  expected	23	None	replace
312	[BUG]  [BUGGY]  while((  u  &  1)  ==  0  ||(v  &  1)  ==  0  ||  k  >  31)  {  u  /=  2;  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]        if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;      [BUGGY]  while((  u  &  1)  ==  0  ||(v  &  1)  ==  0  ||  k  >  31)  {  u  /=  2;  [BUGGY]        u  /=  2;  v  /=  2;  k++;  //  cast  out  twos.  }  if  (k  ==  31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }    [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  short  NS  PS  ZS  boolean  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  k  t  u  v  	projects/Math94/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	428	430	1	replace	while((  u  &  1)  ==  0  ||(v  &  1)  ==  0  ||  k  >  31)  {  u  /=  2;	  while((    u    &    1)    ==    0    ||(v    &    1)    ==    0    ||    k    <    31)    {    u    /=    2;    	non-compiled	[CE]  <identifier>  expected	32	None	replace
313	[BUG]  [BUGGY]  while(k  %  2!=  0  &&  u  <  31)  {  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]        if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;      [BUGGY]  while(k  %  2!=  0  &&  u  <  31)  {  [BUGGY]        u  /=  2;  v  /=  2;  k++;  //  cast  out  twos.  }  if  (k  ==  31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }    [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  short  NS  PS  ZS  boolean  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  k  t  u  v  	projects/Math94/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	428	430	1	replace	while(k  %  2!=  0  &&  u  <  31)  {	  while(u    %    2!=    0    &&    k    <    31)    {    	non-compiled	[CE]  <identifier>  expected	84	None	replace
314	[BUG]  [BUGGY]  float  u  =(float)Math.ceil(v);  [CE]  <identifier>  expected  [FE]            AssertionFailedError      [CONTEXT]        if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;      [BUGGY]  float  u  =(float)Math.ceil(v);  [BUGGY]      while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are                //  both  even...      u  /=  2;  u  /=  2;  v  /=  2;  k++;  //  cast  out  twos.  }  if  (k  ==  31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }    [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  short  NS  PS  ZS  boolean  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  k  t  u  v  	projects/Math94/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	428	430	1	replace	float  u  =(float)Math.ceil(v);	  int    u    =(int)Math.ceil(v);    	non-compiled	[CE]  <identifier>  expected	44	None	replace
315	[BUG]  [BUGGY]  int  k  =(v  >  32)?  1  :  0;  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]        if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;      [BUGGY]  int  k  =(v  >  32)?  1  :  0;  [BUGGY]      while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are                //  both  even...      u  /=  2;  u  /=  2;  v  /=  2;  k++;  //  cast  out  twos.  }  if  (k  ==  31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }    [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  short  NS  PS  ZS  boolean  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  k  t  u  v  	projects/Math94/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	428	430	1	replace	int  k  =(v  >  32)?  1  :  0;	  int    k    =(v    >    31)?    1    :    0;    	non-compiled	[CE]  <identifier>  expected	110	None	replace
316	[BUG]  [BUGGY]  int  u  =(int)Math.log((  u  <  <  5)/  2);  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]        if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;      [BUGGY]  int  u  =(int)Math.log((  u  <  <  5)/  2);  [BUGGY]      while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are                //  both  even...      u  /=  2;  u  /=  2;  v  /=  2;  k++;  //  cast  out  twos.  }  if  (k  ==  31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }    [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  short  NS  PS  ZS  boolean  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  k  t  u  v  	projects/Math94/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	428	430	1	replace	int  u  =(int)Math.log((  u  <  <  5)/  2);	  int    u    =(int)Math.log((    u    <    <    3)/    2);    	non-compiled	[CE]  <identifier>  expected	11	None	replace
317	[BUG]  [BUGGY]  while(v  %  2  ==  0  &&  k  >  0  &&  k  <  31)  {  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]        if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;      [BUGGY]  while(v  %  2  ==  0  &&  k  >  0  &&  k  <  31)  {  [BUGGY]        u  /=  2;  v  /=  2;  k++;  //  cast  out  twos.  }  if  (k  ==  31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }    [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  short  NS  PS  ZS  boolean  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  k  t  u  v  	projects/Math94/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	428	430	1	replace	while(v  %  2  ==  0  &&  k  >  0  &&  k  <  31)  {	  while(k    %    2    ==    0    &&    v    >    0    &&    k    <    31)    {    	non-compiled	[CE]  <identifier>  expected	111	None	replace
318	[BUG]  [BUGGY]  while((  u  &  1)  ==  0  ||(v  &  1)!=  0  ||  k  >  31)  {  [CE]  <identifier>  expected  [FE]            AssertionFailedError      [CONTEXT]        if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;      [BUGGY]  while((  u  &  1)  ==  0  ||(v  &  1)!=  0  ||  k  >  31)  {  [BUGGY]        u  /=  2;  v  /=  2;  k++;  //  cast  out  twos.  }  if  (k  ==  31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }    [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  short  NS  PS  ZS  boolean  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  k  t  u  v  	projects/Math94/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	428	430	1	replace	while((  u  &  1)  ==  0  ||(v  &  1)!=  0  ||  k  >  31)  {	  while((    u    &    1)    ==    0    ||(v    &    1)    ==    0    ||    k    >=    31)    {    	non-compiled	[CE]  <identifier>  expected	91	None	replace
319	[BUG]  [BUGGY]  int  u  =(int)Math.log((  v  +  1)/  4);  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]        if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;      [BUGGY]  int  u  =(int)Math.log((  v  +  1)/  4);  [BUGGY]      while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are                //  both  even...      u  /=  2;  u  /=  2;  v  /=  2;  k++;  //  cast  out  twos.  }  if  (k  ==  31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }    [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  short  NS  PS  ZS  boolean  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  k  t  u  v  	projects/Math94/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	428	430	1	replace	int  u  =(int)Math.log((  v  +  1)/  4);	  int    u    =(int)Math.log((    u    +    1)/    4);    	non-compiled	[CE]  <identifier>  expected	25	None	replace
320	[BUG]  [BUGGY]  int  k  =(int)Math.rint((  u  *  4  +  1)/  4);  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]        if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;      [BUGGY]  int  k  =(int)Math.rint((  u  *  4  +  1)/  4);  [BUGGY]      while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are                //  both  even...      u  /=  2;  u  /=  2;  v  /=  2;  k++;  //  cast  out  twos.  }  if  (k  ==  31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }    [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  short  NS  PS  ZS  boolean  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  k  t  u  v  	projects/Math94/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	428	430	1	replace	int  k  =(int)Math.rint((  u  *  4  +  1)/  4);	  int    k    =(int)Math.rint((    u    +    1)/    4);    	non-compiled	[CE]  <identifier>  expected	6	None	replace
321	[BUG]  [BUGGY]  while(v  >  0  &&  u  <  31)  {  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]        if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;      [BUGGY]  while(v  >  0  &&  u  <  31)  {  [BUGGY]        u  /=  2;  v  /=  2;  k++;  //  cast  out  twos.  }  if  (k  ==  31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }    [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  short  NS  PS  ZS  boolean  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  k  t  u  v  	projects/Math94/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	428	430	1	replace	while(v  >  0  &&  u  <  31)  {	  while(k    >    0    &&    u    <    31)    {    	non-compiled	[CE]  <identifier>  expected	123	None	replace
322	[BUG]  [BUGGY]  while(k  >=  0  &&  u  <  31)  {  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]        if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;      [BUGGY]  while(k  >=  0  &&  u  <  31)  {  [BUGGY]        u  /=  2;  v  /=  2;  k++;  //  cast  out  twos.  }  if  (k  ==  31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }    [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  short  NS  PS  ZS  boolean  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  k  t  u  v  	projects/Math94/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	428	430	1	replace	while(k  >=  0  &&  u  <  31)  {	  while(k    >    0    &&    u    <    31)    {    	non-compiled	[CE]  <identifier>  expected	123	None	replace
323	[BUG]  [BUGGY]  while((  u  &  1)  ==  0)  {  v  &=  2;  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]        if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;      [BUGGY]  while((  u  &  1)  ==  0)  {  v  &=  2;  [BUGGY]        u  /=  2;  v  /=  2;  k++;  //  cast  out  twos.  }  if  (k  ==  31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }    [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  short  NS  PS  ZS  boolean  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  k  t  u  v  	projects/Math94/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	428	430	1	replace	while((  u  &  1)  ==  0)  {  v  &=  2;	  while((    u    &    1)    ==    0    &&(v    &    1)    ==    0)    {    u    /=    2;    	non-compiled	[CE]  <identifier>  expected	58	None	replace
324	[BUG]  [BUGGY]  float  u  =(float)Math.floor(k  +  1);  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]        if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;      [BUGGY]  float  u  =(float)Math.floor(k  +  1);  [BUGGY]      while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are                //  both  even...      u  /=  2;  u  /=  2;  v  /=  2;  k++;  //  cast  out  twos.  }  if  (k  ==  31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }    [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  short  NS  PS  ZS  boolean  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  k  t  u  v  	projects/Math94/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	428	430	1	replace	float  u  =(float)Math.floor(k  +  1);	  float    u    =(float)Math.floor(k);    	non-compiled	[CE]  <identifier>  expected	101	None	replace
325	[BUG]  [BUGGY]  while(u  >  2  &&  v  <  31)  {  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]        if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;      [BUGGY]  while(u  >  2  &&  v  <  31)  {  [BUGGY]        u  /=  2;  v  /=  2;  k++;  //  cast  out  twos.  }  if  (k  ==  31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }    [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  short  NS  PS  ZS  boolean  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  k  t  u  v  	projects/Math94/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	428	430	1	replace	while(u  >  2  &&  v  <  31)  {	  while(u    >    2    &&    k    <    31)    {    	non-compiled	[CE]  <identifier>  expected	76	None	replace
326	[BUG]  [BUGGY]  int  u  =(int)Math.log(gcd,  v);  [CE]  <identifier>  expected  [FE]            AssertionFailedError      [CONTEXT]        if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;      [BUGGY]  int  u  =(int)Math.log(gcd,  v);  [BUGGY]      while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are                //  both  even...      u  /=  2;  u  /=  2;  v  /=  2;  k++;  //  cast  out  twos.  }  if  (k  ==  31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }    [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  short  NS  PS  ZS  boolean  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  k  t  u  v  	projects/Math94/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	428	430	1	replace	int  u  =(int)Math.log(gcd,  v);	  int    u    =(int)Math.log(v);    	non-compiled	[CE]  <identifier>  expected	95	None	replace
327	[BUG]  [BUGGY]  int  u  =(int)Math.rint((  char)v);  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]        if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;      [BUGGY]  int  u  =(int)Math.rint((  char)v);  [BUGGY]      while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are                //  both  even...      u  /=  2;  u  /=  2;  v  /=  2;  k++;  //  cast  out  twos.  }  if  (k  ==  31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }    [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  short  NS  PS  ZS  boolean  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  k  t  u  v  	projects/Math94/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	428	430	1	replace	int  u  =(int)Math.rint((  char)v);	  int    u    =(int)Math.log(v);    	non-compiled	[CE]  <identifier>  expected	95	None	replace
328	[BUG]  [BUGGY]  int  k  =(v  <  1)?  1  :  0;  [CE]  <identifier>  expected  [FE]            AssertionFailedError      [CONTEXT]        if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;      [BUGGY]  int  k  =(v  <  1)?  1  :  0;  [BUGGY]      while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are                //  both  even...      u  /=  2;  u  /=  2;  v  /=  2;  k++;  //  cast  out  twos.  }  if  (k  ==  31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }    [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  short  NS  PS  ZS  boolean  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  k  t  u  v  	projects/Math94/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	428	430	1	replace	int  k  =(v  <  1)?  1  :  0;	  int    k    =(v    <    31)?    1    :    0;    	non-compiled	[CE]  <identifier>  expected	109	None	replace
329	[BUG]  [BUGGY]  while(v  <  0  &&  u  <  31)  {  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]        if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;      [BUGGY]  while(v  <  0  &&  u  <  31)  {  [BUGGY]        u  /=  2;  v  /=  2;  k++;  //  cast  out  twos.  }  if  (k  ==  31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }    [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  short  NS  PS  ZS  boolean  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  k  t  u  v  	projects/Math94/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	428	430	1	replace	while(v  <  0  &&  u  <  31)  {	  while(v    <    =    0    &&    u    <    31)    {    	non-compiled	[CE]  <identifier>  expected	63	None	replace
330	[BUG]  [BUGGY]  while(v  <  =  0  &&  u  >  31)  {  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]        if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;      [BUGGY]  while(v  <  =  0  &&  u  >  31)  {  [BUGGY]        u  /=  2;  v  /=  2;  k++;  //  cast  out  twos.  }  if  (k  ==  31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }    [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  short  NS  PS  ZS  boolean  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  k  t  u  v  	projects/Math94/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	428	430	1	replace	while(v  <  =  0  &&  u  >  31)  {	  while(v    <    =    0    &&    u    <    31)    {    	non-compiled	[CE]  <identifier>  expected	63	None	replace
331	[BUG]  [BUGGY]  while(v  <  =  0  &&  u  >=  31)  {  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]        if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;      [BUGGY]  while(v  <  =  0  &&  u  >=  31)  {  [BUGGY]        u  /=  2;  v  /=  2;  k++;  //  cast  out  twos.  }  if  (k  ==  31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }    [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  short  NS  PS  ZS  boolean  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  k  t  u  v  	projects/Math94/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	428	430	1	replace	while(v  <  =  0  &&  u  >=  31)  {	  while(v    <    =    0    &&    u    <    31)    {    	non-compiled	[CE]  <identifier>  expected	63	None	replace
332	[BUG]  [BUGGY]  while((  u  &  1)  ==  0)  {  v  /=  2;  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]        if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;      [BUGGY]  while((  u  &  1)  ==  0)  {  v  /=  2;  [BUGGY]        u  /=  2;  v  /=  2;  k++;  //  cast  out  twos.  }  if  (k  ==  31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }    [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  short  NS  PS  ZS  boolean  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  k  t  u  v  	projects/Math94/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	428	430	1	replace	while((  u  &  1)  ==  0)  {  v  /=  2;	  while((    u    &    1)    ==    0    ||(v    &    1)    ==    0)    {    u    /=    2;    	non-compiled	[CE]  <identifier>  expected	33	None	replace
333	[BUG]  [BUGGY]  int  u  =(int)Math.rint((  k  -  1)/  2  +  3);  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]        if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;      [BUGGY]  int  u  =(int)Math.rint((  k  -  1)/  2  +  3);  [BUGGY]      while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are                //  both  even...      u  /=  2;  u  /=  2;  v  /=  2;  k++;  //  cast  out  twos.  }  if  (k  ==  31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }    [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  short  NS  PS  ZS  boolean  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  k  t  u  v  	projects/Math94/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	428	430	1	replace	int  u  =(int)Math.rint((  k  -  1)/  2  +  3);	  int    u    =(int)Math.rint((    k    -    1)/    2);    	non-compiled	[CE]  <identifier>  expected	81	None	replace
334	[BUG]  [BUGGY]  while(v  %  2  ==  0  &&  v  >=  31  &&  k  <  31)  {  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]        if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;      [BUGGY]  while(v  %  2  ==  0  &&  v  >=  31  &&  k  <  31)  {  [BUGGY]        u  /=  2;  v  /=  2;  k++;  //  cast  out  twos.  }  if  (k  ==  31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }    [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  short  NS  PS  ZS  boolean  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  k  t  u  v  	projects/Math94/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	428	430	1	replace	while(v  %  2  ==  0  &&  v  >=  31  &&  k  <  31)  {	  while(v    %    2    ==    0    &&    v    >    31    &&    k    <    31)    {    	non-compiled	[CE]  <identifier>  expected	103	None	replace
335	[BUG]  [BUGGY]  int  u  =(int)Math.floor(v  +  2);  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]        if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;      [BUGGY]  int  u  =(int)Math.floor(v  +  2);  [BUGGY]      while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are                //  both  even...      u  /=  2;  u  /=  2;  v  /=  2;  k++;  //  cast  out  twos.  }  if  (k  ==  31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }    [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  short  NS  PS  ZS  boolean  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  k  t  u  v  	projects/Math94/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	428	430	1	replace	int  u  =(int)Math.floor(v  +  2);	  int    u    =(int)Math.floor(v    +    1);    	non-compiled	[CE]  <identifier>  expected	96	None	replace
336	[BUG]  [BUGGY]  int  u  =(int)Math.floor(v  +  3);  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]        if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;      [BUGGY]  int  u  =(int)Math.floor(v  +  3);  [BUGGY]      while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are                //  both  even...      u  /=  2;  u  /=  2;  v  /=  2;  k++;  //  cast  out  twos.  }  if  (k  ==  31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }    [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  short  NS  PS  ZS  boolean  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  k  t  u  v  	projects/Math94/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	428	430	1	replace	int  u  =(int)Math.floor(v  +  3);	  int    u    =(int)Math.floor(v    +    1);    	non-compiled	[CE]  <identifier>  expected	96	None	replace
337	[BUG]  [BUGGY]  int  k  =(int)Math.rint((  u  <  <  3)/  3);  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]        if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;      [BUGGY]  int  k  =(int)Math.rint((  u  <  <  3)/  3);  [BUGGY]      while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are                //  both  even...      u  /=  2;  u  /=  2;  v  /=  2;  k++;  //  cast  out  twos.  }  if  (k  ==  31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }    [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  short  NS  PS  ZS  boolean  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  k  t  u  v  	projects/Math94/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	428	430	1	replace	int  k  =(int)Math.rint((  u  <  <  3)/  3);	  int    k    =(int)Math.rint((    u    <    <    3)+    3);    	non-compiled	[CE]  <identifier>  expected	56	None	replace
338	[BUG]  [BUGGY]  while((  u  &  1)!=  0  ||(v  &  1)  ==  0  &&  k  <  31)  {  [CE]  <identifier>  expected  [FE]            AssertionFailedError      [CONTEXT]        if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;      [BUGGY]  while((  u  &  1)!=  0  ||(v  &  1)  ==  0  &&  k  <  31)  {  [BUGGY]        u  /=  2;  v  /=  2;  k++;  //  cast  out  twos.  }  if  (k  ==  31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }    [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  short  NS  PS  ZS  boolean  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  k  t  u  v  	projects/Math94/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	428	430	1	replace	while((  u  &  1)!=  0  ||(v  &  1)  ==  0  &&  k  <  31)  {	  while((    u    &    1)    ==    0    ||(v    &    1)    ==    0    &&    k    <    31)    {    	non-compiled	[CE]  <identifier>  expected	118	None	replace
339	[BUG]  [BUGGY]  int  k  =(int)Math.rint((  u  /  1)*  k);  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]        if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;      [BUGGY]  int  k  =(int)Math.rint((  u  /  1)*  k);  [BUGGY]      while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are                //  both  even...      u  /=  2;  u  /=  2;  v  /=  2;  k++;  //  cast  out  twos.  }  if  (k  ==  31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }    [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  short  NS  PS  ZS  boolean  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  k  t  u  v  	projects/Math94/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	428	430	1	replace	int  k  =(int)Math.rint((  u  /  1)*  k);	  int    k    =(int)Math.rint((    u    -    1)*    k);    	non-compiled	[CE]  <identifier>  expected	124	None	replace
340	[BUG]  [BUGGY]  int  k  =(int)Math.pow(10,  16  +  1);  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]        if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;      [BUGGY]  int  k  =(int)Math.pow(10,  16  +  1);  [BUGGY]      while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are                //  both  even...      u  /=  2;  u  /=  2;  v  /=  2;  k++;  //  cast  out  twos.  }  if  (k  ==  31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }    [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  short  NS  PS  ZS  boolean  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  k  t  u  v  	projects/Math94/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	428	430	1	replace	int  k  =(int)Math.pow(10,  16  +  1);	  int    k    =(int)Math.pow(10,    16);    	non-compiled	[CE]  <identifier>  expected	9	None	replace
341	[BUG]  [BUGGY]  int  k  =(int)Math.rint((  u  -  1)*  v);  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]        if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;      [BUGGY]  int  k  =(int)Math.rint((  u  -  1)*  v);  [BUGGY]      while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are                //  both  even...      u  /=  2;  u  /=  2;  v  /=  2;  k++;  //  cast  out  twos.  }  if  (k  ==  31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }    [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  short  NS  PS  ZS  boolean  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  k  t  u  v  	projects/Math94/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	428	430	1	replace	int  k  =(int)Math.rint((  u  -  1)*  v);	  int    k    =(int)Math.rint((    u    &    1)*    v);    	non-compiled	[CE]  <identifier>  expected	125	None	replace
342	[BUG]  [BUGGY]  while((  u  &  1)!=  0  ||(v  &  1)  ==  0)  {  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]        if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;      [BUGGY]  while((  u  &  1)!=  0  ||(v  &  1)  ==  0)  {  [BUGGY]        u  /=  2;  v  /=  2;  k++;  //  cast  out  twos.  }  if  (k  ==  31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }    [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  short  NS  PS  ZS  boolean  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  k  t  u  v  	projects/Math94/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	428	430	1	replace	while((  u  &  1)!=  0  ||(v  &  1)  ==  0)  {	  while((    u    &    1)    ==    0    &&(v    &    1)    ==    0)    {    	non-compiled	[CE]  <identifier>  expected	59	None	replace
343	[BUG]  [BUGGY]  while((  u  &  1)  ==  0  &&(v  &  1)!=  0)  {  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]        if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;      [BUGGY]  while((  u  &  1)  ==  0  &&(v  &  1)!=  0)  {  [BUGGY]        u  /=  2;  v  /=  2;  k++;  //  cast  out  twos.  }  if  (k  ==  31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }    [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  short  NS  PS  ZS  boolean  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  k  t  u  v  	projects/Math94/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	428	430	1	replace	while((  u  &  1)  ==  0  &&(v  &  1)!=  0)  {	  while((    u    &    1)    ==    0    &&(v    &    1)    ==    0)    {    	non-compiled	[CE]  <identifier>  expected	59	None	replace
344	[BUG]  [BUGGY]  while(v  %  2  ==  0  &&  v  >  0  &&  u  <  31)  {  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]        if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;      [BUGGY]  while(v  %  2  ==  0  &&  v  >  0  &&  u  <  31)  {  [BUGGY]        u  /=  2;  v  /=  2;  k++;  //  cast  out  twos.  }  if  (k  ==  31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }    [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  short  NS  PS  ZS  boolean  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  k  t  u  v  	projects/Math94/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	428	430	1	replace	while(v  %  2  ==  0  &&  v  >  0  &&  u  <  31)  {	  while(k    %    2    ==    0    &&    v    >    0    &&    u    <    31)    {    	non-compiled	[CE]  <identifier>  expected	104	None	replace
345	[BUG]  [BUGGY]  while(v  %  2  ==  0  &&  v  >  0  &&  u  >=  31)  {  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]        if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;      [BUGGY]  while(v  %  2  ==  0  &&  v  >  0  &&  u  >=  31)  {  [BUGGY]        u  /=  2;  v  /=  2;  k++;  //  cast  out  twos.  }  if  (k  ==  31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }    [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  short  NS  PS  ZS  boolean  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  k  t  u  v  	projects/Math94/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	428	430	1	replace	while(v  %  2  ==  0  &&  v  >  0  &&  u  >=  31)  {	  while(k    %    2    ==    0    &&    v    >    0    &&    u    <    31)    {    	non-compiled	[CE]  <identifier>  expected	104	None	replace
346	[BUG]  [BUGGY]  while(v  %  2  ==  0  &&  v  >  31  &&  u  <  31)  {  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]        if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;      [BUGGY]  while(v  %  2  ==  0  &&  v  >  31  &&  u  <  31)  {  [BUGGY]        u  /=  2;  v  /=  2;  k++;  //  cast  out  twos.  }  if  (k  ==  31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }    [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  short  NS  PS  ZS  boolean  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  k  t  u  v  	projects/Math94/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	428	430	1	replace	while(v  %  2  ==  0  &&  v  >  31  &&  u  <  31)  {	  while(k    %    2    ==    0    &&    v    >    0    &&    u    <    31)    {    	non-compiled	[CE]  <identifier>  expected	104	None	replace
347	[BUG]  [BUGGY]  int  k  =(int)Math.floor(u  +  1);  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]        if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;      [BUGGY]  int  k  =(int)Math.floor(u  +  1);  [BUGGY]      while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are                //  both  even...      u  /=  2;  u  /=  2;  v  /=  2;  k++;  //  cast  out  twos.  }  if  (k  ==  31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }    [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  short  NS  PS  ZS  boolean  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  k  t  u  v  	projects/Math94/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	428	430	1	replace	int  k  =(int)Math.floor(u  +  1);	  int    k    =(int)Math.floor(u);    	non-compiled	[CE]  <identifier>  expected	29	None	replace
348	[BUG]  [BUGGY]  int  u  =(int)Math.log((  v  /  1)/  2);  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]        if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;      [BUGGY]  int  u  =(int)Math.log((  v  /  1)/  2);  [BUGGY]      while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are                //  both  even...      u  /=  2;  u  /=  2;  v  /=  2;  k++;  //  cast  out  twos.  }  if  (k  ==  31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }    [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  short  NS  PS  ZS  boolean  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  k  t  u  v  	projects/Math94/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	428	430	1	replace	int  u  =(int)Math.log((  v  /  1)/  2);	  int    u    =(int)Math.log((    u    /    1)/    2);    	non-compiled	[CE]  <identifier>  expected	108	None	replace
349	[BUG]  [BUGGY]  int  u  =(int)Math.rint((  u  *  2)/  2);  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]        if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;      [BUGGY]  int  u  =(int)Math.rint((  u  *  2)/  2);  [BUGGY]      while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are                //  both  even...      u  /=  2;  u  /=  2;  v  /=  2;  k++;  //  cast  out  twos.  }  if  (k  ==  31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }    [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  short  NS  PS  ZS  boolean  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  k  t  u  v  	projects/Math94/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	428	430	1	replace	int  u  =(int)Math.rint((  u  *  2)/  2);	  int    u    =(int)Math.rint((    u    +    1)/    2);    	non-compiled	[CE]  <identifier>  expected	79	None	replace
350	[BUG]  [BUGGY]  int  k  =  31  +  1;  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]        if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;      [BUGGY]  int  k  =  31  +  1;  [BUGGY]      while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are                //  both  even...      u  /=  2;  u  /=  2;  v  /=  2;  k++;  //  cast  out  twos.  }  if  (k  ==  31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }    [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  short  NS  PS  ZS  boolean  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  k  t  u  v  	projects/Math94/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	428	430	1	replace	int  k  =  31  +  1;	  int    k    =    31;    	non-compiled	[CE]  <identifier>  expected	74	None	replace
351	[BUG]  [BUGGY]  int  k  =(int)Math.pow(10,  Math.pow(10,  k  -  1));  [CE]  <identifier>  expected  [FE]            AssertionFailedError      [CONTEXT]        if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;      [BUGGY]  int  k  =(int)Math.pow(10,  Math.pow(10,  k  -  1));  [BUGGY]      while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are                //  both  even...      u  /=  2;  u  /=  2;  v  /=  2;  k++;  //  cast  out  twos.  }  if  (k  ==  31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }    [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  short  NS  PS  ZS  boolean  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  k  t  u  v  	projects/Math94/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	428	430	1	replace	int  k  =(int)Math.pow(10,  Math.pow(10,  k  -  1));	  int    k    =(int)Math.pow(10,    k    -    1);    	non-compiled	[CE]  <identifier>  expected	7	None	replace
352	[BUG]  [BUGGY]  while(u  >  0  &&  v  <  32)  {  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]        if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;      [BUGGY]  while(u  >  0  &&  v  <  32)  {  [BUGGY]        u  /=  2;  v  /=  2;  k++;  //  cast  out  twos.  }  if  (k  ==  31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }    [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  short  NS  PS  ZS  boolean  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  k  t  u  v  	projects/Math94/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	428	430	1	replace	while(u  >  0  &&  v  <  32)  {	  while(u    >    0    &&    v    <    31)    {    	non-compiled	[CE]  <identifier>  expected	77	None	replace
353	[BUG]  [BUGGY]  while(v  %  2!=  0  &&  v  <  31)  {  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]        if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;      [BUGGY]  while(v  %  2!=  0  &&  v  <  31)  {  [BUGGY]        u  /=  2;  v  /=  2;  k++;  //  cast  out  twos.  }  if  (k  ==  31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }    [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  short  NS  PS  ZS  boolean  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  k  t  u  v  	projects/Math94/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	428	430	1	replace	while(v  %  2!=  0  &&  v  <  31)  {	  while(v    %    2    ==    0    &&    v    <    31)    {    	non-compiled	[CE]  <identifier>  expected	112	None	replace
354	[BUG]  [BUGGY]  while(v  %  2!=  0  &&  v  >=  31)  {  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]        if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;      [BUGGY]  while(v  %  2!=  0  &&  v  >=  31)  {  [BUGGY]        u  /=  2;  v  /=  2;  k++;  //  cast  out  twos.  }  if  (k  ==  31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }    [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  short  NS  PS  ZS  boolean  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  k  t  u  v  	projects/Math94/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	428	430	1	replace	while(v  %  2!=  0  &&  v  >=  31)  {	  while(v    %    2    ==    0    &&    v    <    31)    {    	non-compiled	[CE]  <identifier>  expected	112	None	replace
355	[BUG]  [BUGGY]  while(v  %  2  ==  0  &&  v  >=  31)  {  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]        if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;      [BUGGY]  while(v  %  2  ==  0  &&  v  >=  31)  {  [BUGGY]        u  /=  2;  v  /=  2;  k++;  //  cast  out  twos.  }  if  (k  ==  31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }    [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  short  NS  PS  ZS  boolean  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  k  t  u  v  	projects/Math94/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	428	430	1	replace	while(v  %  2  ==  0  &&  v  >=  31)  {	  while(v    %    2    ==    0    &&    v    <    31)    {    	non-compiled	[CE]  <identifier>  expected	112	None	replace
356	[BUG]  [BUGGY]  while(v  >  0  &&  v  <  =  2  &&  k  <  31)  {  [CE]  <identifier>  expected  [FE]            AssertionFailedError      [CONTEXT]        if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;      [BUGGY]  while(v  >  0  &&  v  <  =  2  &&  k  <  31)  {  [BUGGY]        u  /=  2;  v  /=  2;  k++;  //  cast  out  twos.  }  if  (k  ==  31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }    [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  short  NS  PS  ZS  boolean  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  k  t  u  v  	projects/Math94/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	428	430	1	replace	while(v  >  0  &&  v  <  =  2  &&  k  <  31)  {	  while(u    >    0    &&    v    <    =    2    &&    k    <    31)    {    	non-compiled	[CE]  <identifier>  expected	60	None	replace
357	[BUG]  [BUGGY]  while((  u  &  1)!=  0  &&(v  &  1)  ==  0  &&  k  >  31)  {  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]        if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;      [BUGGY]  while((  u  &  1)!=  0  &&(v  &  1)  ==  0  &&  k  >  31)  {  [BUGGY]        u  /=  2;  v  /=  2;  k++;  //  cast  out  twos.  }  if  (k  ==  31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }    [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  short  NS  PS  ZS  boolean  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  k  t  u  v  	projects/Math94/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	428	430	1	replace	while((  u  &  1)!=  0  &&(v  &  1)  ==  0  &&  k  >  31)  {	  while((    u    &    1)!=    0    &&(v    &    1)    ==    0    &&    k    >=    31)    {    	non-compiled	[CE]  <identifier>  expected	105	None	replace
358	[BUG]  [BUGGY]  while(k  %  2!=  0  &&  v  <  31)  {  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]        if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;      [BUGGY]  while(k  %  2!=  0  &&  v  <  31)  {  [BUGGY]        u  /=  2;  v  /=  2;  k++;  //  cast  out  twos.  }  if  (k  ==  31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }    [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  short  NS  PS  ZS  boolean  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  k  t  u  v  	projects/Math94/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	428	430	1	replace	while(k  %  2!=  0  &&  v  <  31)  {	  while(k    %    2    ==    0    &&    u    <    31)    {    	non-compiled	[CE]  <identifier>  expected	83	None	replace
359	[BUG]  [BUGGY]  while(v  %  2  ==  0  &&  k  >=  31)  {  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]        if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;      [BUGGY]  while(v  %  2  ==  0  &&  k  >=  31)  {  [BUGGY]        u  /=  2;  v  /=  2;  k++;  //  cast  out  twos.  }  if  (k  ==  31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }    [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  short  NS  PS  ZS  boolean  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  k  t  u  v  	projects/Math94/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	428	430	1	replace	while(v  %  2  ==  0  &&  k  >=  31)  {	  while(v    %    2    ==    0    &&    k    <    31)    {    	non-compiled	[CE]  <identifier>  expected	1	None	replace
360	[BUG]  [BUGGY]  while(k  %  2!=  0  &&  k  <  31)  {  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]        if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;      [BUGGY]  while(k  %  2!=  0  &&  k  <  31)  {  [BUGGY]        u  /=  2;  v  /=  2;  k++;  //  cast  out  twos.  }  if  (k  ==  31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }    [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  short  NS  PS  ZS  boolean  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  k  t  u  v  	projects/Math94/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	428	430	1	replace	while(k  %  2!=  0  &&  k  <  31)  {	  while(k    %    2    ==    0    &&    k    <    31)    {    	non-compiled	[CE]  <identifier>  expected	115	None	replace
361	[BUG]  [BUGGY]  while(u  >=  2  &&  v  <  =  0  &&  k  <  31)  {  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]        if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;      [BUGGY]  while(u  >=  2  &&  v  <  =  0  &&  k  <  31)  {  [BUGGY]        u  /=  2;  v  /=  2;  k++;  //  cast  out  twos.  }  if  (k  ==  31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }    [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  short  NS  PS  ZS  boolean  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  k  t  u  v  	projects/Math94/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	428	430	1	replace	while(u  >=  2  &&  v  <  =  0  &&  k  <  31)  {	  while(u    >=    0    &&    v    <    =    0    &&    k    <    31)    {    	non-compiled	[CE]  <identifier>  expected	61	None	replace
362	[BUG]  [BUGGY]  while(v  >=  0  &&  k  <  31)  {  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]        if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;      [BUGGY]  while(v  >=  0  &&  k  <  31)  {  [BUGGY]        u  /=  2;  v  /=  2;  k++;  //  cast  out  twos.  }  if  (k  ==  31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }    [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  short  NS  PS  ZS  boolean  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  k  t  u  v  	projects/Math94/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	428	430	1	replace	while(v  >=  0  &&  k  <  31)  {	  while(v    >    0    &&    k    <    31)    {    	non-compiled	[CE]  <identifier>  expected	52	None	replace
363	[BUG]  [BUGGY]  int  u  =(int)Math.rint((  v  /  2)/  2);  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]        if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;      [BUGGY]  int  u  =(int)Math.rint((  v  /  2)/  2);  [BUGGY]      while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are                //  both  even...      u  /=  2;  u  /=  2;  v  /=  2;  k++;  //  cast  out  twos.  }  if  (k  ==  31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }    [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  short  NS  PS  ZS  boolean  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  k  t  u  v  	projects/Math94/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	428	430	1	replace	int  u  =(int)Math.rint((  v  /  2)/  2);	  int    u    =(int)Math.rint((    u    /    2)/    2);    	non-compiled	[CE]  <identifier>  expected	68	None	replace
364	[BUG]  [BUGGY]  int  u  =(int)Math.rint((  k  /  2)/  2);  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]        if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;      [BUGGY]  int  u  =(int)Math.rint((  k  /  2)/  2);  [BUGGY]      while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are                //  both  even...      u  /=  2;  u  /=  2;  v  /=  2;  k++;  //  cast  out  twos.  }  if  (k  ==  31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }    [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  short  NS  PS  ZS  boolean  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  k  t  u  v  	projects/Math94/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	428	430	1	replace	int  u  =(int)Math.rint((  k  /  2)/  2);	  int    u    =(int)Math.rint((    u    /    2)/    2);    	non-compiled	[CE]  <identifier>  expected	68	None	replace
365	[BUG]  [BUGGY]  int  u  =(int)Math.floor(v  /  1);  [CE]  <identifier>  expected  [FE]            AssertionFailedError      [CONTEXT]        if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;      [BUGGY]  int  u  =(int)Math.floor(v  /  1);  [BUGGY]      while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are                //  both  even...      u  /=  2;  u  /=  2;  v  /=  2;  k++;  //  cast  out  twos.  }  if  (k  ==  31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }    [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  short  NS  PS  ZS  boolean  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  k  t  u  v  	projects/Math94/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	428	430	1	replace	int  u  =(int)Math.floor(v  /  1);	  int    u    =(int)Math.floor(v    -    1);    	non-compiled	[CE]  <identifier>  expected	113	None	replace
366	[BUG]  [BUGGY]  int  u  =(int)Math.rint((  v  /  1)/  2);  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]        if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;      [BUGGY]  int  u  =(int)Math.rint((  v  /  1)/  2);  [BUGGY]      while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are                //  both  even...      u  /=  2;  u  /=  2;  v  /=  2;  k++;  //  cast  out  twos.  }  if  (k  ==  31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }    [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  short  NS  PS  ZS  boolean  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  k  t  u  v  	projects/Math94/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	428	430	1	replace	int  u  =(int)Math.rint((  v  /  1)/  2);	  int    u    =(int)Math.rint((    u    /    1)/    2);    	non-compiled	[CE]  <identifier>  expected	67	None	replace
367	[BUG]  [BUGGY]  while((  u  &  1)!=  0)  {  u  +=(v  &  1)  ==  0)  {  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]        if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;      [BUGGY]  while((  u  &  1)!=  0)  {  u  +=(v  &  1)  ==  0)  {  [BUGGY]        u  /=  2;  v  /=  2;  k++;  //  cast  out  twos.  }  if  (k  ==  31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }    [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  short  NS  PS  ZS  boolean  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  k  t  u  v  	projects/Math94/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	428	430	1	replace	while((  u  &  1)!=  0)  {  u  +=(v  &  1)  ==  0)  {	  while((    u    &    1)    ==    0)    {    u    +=(v    &    1)    ==    0)    {    	non-compiled	[CE]  <identifier>  expected	89	None	replace
368	[BUG]  [BUGGY]  while((  u  %  2)  ==  0)  {  u  +=(v  &  1)  ==  0)  {  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]        if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;      [BUGGY]  while((  u  %  2)  ==  0)  {  u  +=(v  &  1)  ==  0)  {  [BUGGY]        u  /=  2;  v  /=  2;  k++;  //  cast  out  twos.  }  if  (k  ==  31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }    [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  short  NS  PS  ZS  boolean  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  k  t  u  v  	projects/Math94/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	428	430	1	replace	while((  u  %  2)  ==  0)  {  u  +=(v  &  1)  ==  0)  {	  while((    u    &    1)    ==    0)    {    u    +=(v    &    1)    ==    0)    {    	non-compiled	[CE]  <identifier>  expected	89	None	replace
369	[BUG]  [BUGGY]  while((  v  &  1)  ==  0)  {  u  +=(v  &  1)  ==  0)  {  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]        if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;      [BUGGY]  while((  v  &  1)  ==  0)  {  u  +=(v  &  1)  ==  0)  {  [BUGGY]        u  /=  2;  v  /=  2;  k++;  //  cast  out  twos.  }  if  (k  ==  31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }    [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  short  NS  PS  ZS  boolean  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  k  t  u  v  	projects/Math94/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	428	430	1	replace	while((  v  &  1)  ==  0)  {  u  +=(v  &  1)  ==  0)  {	  while((    u    &    1)    ==    0)    {    u    +=(v    &    1)    ==    0)    {    	non-compiled	[CE]  <identifier>  expected	89	None	replace
370	[BUG]  [BUGGY]  while((  u  &  1)!=  0)  {  u  +=(v  &  2)  ==  0)  {  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]        if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;      [BUGGY]  while((  u  &  1)!=  0)  {  u  +=(v  &  2)  ==  0)  {  [BUGGY]        u  /=  2;  v  /=  2;  k++;  //  cast  out  twos.  }  if  (k  ==  31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }    [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  short  NS  PS  ZS  boolean  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  k  t  u  v  	projects/Math94/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	428	430	1	replace	while((  u  &  1)!=  0)  {  u  +=(v  &  2)  ==  0)  {	  while((    u    &    1)    ==    0)    {    u    +=(v    &    1)    ==    0)    {    	non-compiled	[CE]  <identifier>  expected	89	None	replace
371	[BUG]  [BUGGY]  while(v  %  2  ==  0  &&  u  >=  31  &&  k  <  31)  {  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]        if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;      [BUGGY]  while(v  %  2  ==  0  &&  u  >=  31  &&  k  <  31)  {  [BUGGY]        u  /=  2;  v  /=  2;  k++;  //  cast  out  twos.  }  if  (k  ==  31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }    [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  short  NS  PS  ZS  boolean  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  k  t  u  v  	projects/Math94/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	428	430	1	replace	while(v  %  2  ==  0  &&  u  >=  31  &&  k  <  31)  {	  while(v    %    2    ==    0    &&    u    <    31    &&    k    <    31)    {    	non-compiled	[CE]  <identifier>  expected	16	None	replace
372	[BUG]  [BUGGY]  int  k  =(int)Math.log(gcd);  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]        if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;      [BUGGY]  int  k  =(int)Math.log(gcd);  [BUGGY]      while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are                //  both  even...      u  /=  2;  u  /=  2;  v  /=  2;  k++;  //  cast  out  twos.  }  if  (k  ==  31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }    [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  short  NS  PS  ZS  boolean  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  k  t  u  v  	projects/Math94/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	428	430	1	replace	int  k  =(int)Math.log(gcd);	  int    k    =(int)Math.log(u);    	non-compiled	[CE]  <identifier>  expected	30	None	replace
373	[BUG]  [BUGGY]  while((  u  %  2)  ==  0  ||(v  &  1)  ==  0  ||  k  >  31)  {  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]        if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;      [BUGGY]  while((  u  %  2)  ==  0  ||(v  &  1)  ==  0  ||  k  >  31)  {  [BUGGY]        u  /=  2;  v  /=  2;  k++;  //  cast  out  twos.  }  if  (k  ==  31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }    [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  short  NS  PS  ZS  boolean  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  k  t  u  v  	projects/Math94/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	428	430	1	replace	while((  u  %  2)  ==  0  ||(v  &  1)  ==  0  ||  k  >  31)  {	  while((    u    %    2)    ==    0    ||(v    &    1)    ==    0    ||    k    <    31)    {    	non-compiled	[CE]  <identifier>  expected	93	None	replace
374	[BUG]  [BUGGY]  int  u  =(int)Math.log((  v  <  <  1)/  4);  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]        if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;      [BUGGY]  int  u  =(int)Math.log((  v  <  <  1)/  4);  [BUGGY]      while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are                //  both  even...      u  /=  2;  u  /=  2;  v  /=  2;  k++;  //  cast  out  twos.  }  if  (k  ==  31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }    [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  short  NS  PS  ZS  boolean  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  k  t  u  v  	projects/Math94/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	428	430	1	replace	int  u  =(int)Math.log((  v  <  <  1)/  4);	  int    u    =(int)Math.log((    u    <    <    1)/    4);    	non-compiled	[CE]  <identifier>  expected	36	None	replace
375	[BUG]  [BUGGY]  int  u  =(int)Math.log((  k  <  <  1)/  4);  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]        if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;      [BUGGY]  int  u  =(int)Math.log((  k  <  <  1)/  4);  [BUGGY]      while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are                //  both  even...      u  /=  2;  u  /=  2;  v  /=  2;  k++;  //  cast  out  twos.  }  if  (k  ==  31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }    [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  short  NS  PS  ZS  boolean  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  k  t  u  v  	projects/Math94/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	428	430	1	replace	int  u  =(int)Math.log((  k  <  <  1)/  4);	  int    u    =(int)Math.log((    u    <    <    1)/    4);    	non-compiled	[CE]  <identifier>  expected	36	None	replace
376	[BUG]  [BUGGY]  while(k  %  2  ==  0  &&  v  <  31  &&  u  <  31)  {  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]        if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;      [BUGGY]  while(k  %  2  ==  0  &&  v  <  31  &&  u  <  31)  {  [BUGGY]        u  /=  2;  v  /=  2;  k++;  //  cast  out  twos.  }  if  (k  ==  31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }    [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  short  NS  PS  ZS  boolean  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  k  t  u  v  	projects/Math94/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	428	430	1	replace	while(k  %  2  ==  0  &&  v  <  31  &&  u  <  31)  {	  while(u    %    2    ==    0    &&    v    <    31    &&    k    <    31)    {    	non-compiled	[CE]  <identifier>  expected	18	None	replace
377	[BUG]  [BUGGY]  int  k  =(int)Math.log(gcd,  v);  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]        if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;      [BUGGY]  int  k  =(int)Math.log(gcd,  v);  [BUGGY]      while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are                //  both  even...      u  /=  2;  u  /=  2;  v  /=  2;  k++;  //  cast  out  twos.  }  if  (k  ==  31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }    [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  short  NS  PS  ZS  boolean  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  k  t  u  v  	projects/Math94/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	428	430	1	replace	int  k  =(int)Math.log(gcd,  v);	  int    k    =(int)Math.log(v);    	non-compiled	[CE]  <identifier>  expected	28	None	replace
378	[BUG]  [BUGGY]  while((  v  &  1)  ==  0  ||(v  &  1)  ==  0  &&  k  <  31)  {  [CE]  <identifier>  expected  [FE]            AssertionFailedError      [CONTEXT]        if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;      [BUGGY]  while((  v  &  1)  ==  0  ||(v  &  1)  ==  0  &&  k  <  31)  {  [BUGGY]        u  /=  2;  v  /=  2;  k++;  //  cast  out  twos.  }  if  (k  ==  31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }    [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  short  NS  PS  ZS  boolean  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  k  t  u  v  	projects/Math94/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	428	430	1	replace	while((  v  &  1)  ==  0  ||(v  &  1)  ==  0  &&  k  <  31)  {	  while((    u    &    1)    ==    0    ||(v    &    1)    ==    0    &&    k    <    31)    {    	non-compiled	[CE]  <identifier>  expected	118	None	replace
379	[BUG]  [BUGGY]  int  u  =(int)Math.log((  u  +  1)/  2  +  4);  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]        if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;      [BUGGY]  int  u  =(int)Math.log((  u  +  1)/  2  +  4);  [BUGGY]      while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are                //  both  even...      u  /=  2;  u  /=  2;  v  /=  2;  k++;  //  cast  out  twos.  }  if  (k  ==  31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }    [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  short  NS  PS  ZS  boolean  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  k  t  u  v  	projects/Math94/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	428	430	1	replace	int  u  =(int)Math.log((  u  +  1)/  2  +  4);	  int    u    =(int)Math.log((    u    <    <    1)/    2    +    4);    	non-compiled	[CE]  <identifier>  expected	35	None	replace
380	[BUG]  [BUGGY]  int  k  =(int)Math.pow(10,  u  -  1);  [CE]  <identifier>  expected  [FE]            AssertionFailedError      [CONTEXT]        if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;      [BUGGY]  int  k  =(int)Math.pow(10,  u  -  1);  [BUGGY]      while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are                //  both  even...      u  /=  2;  u  /=  2;  v  /=  2;  k++;  //  cast  out  twos.  }  if  (k  ==  31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }    [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  short  NS  PS  ZS  boolean  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  k  t  u  v  	projects/Math94/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	428	430	1	replace	int  k  =(int)Math.pow(10,  u  -  1);	  int    k    =(int)Math.pow(10,    k    -    1);    	non-compiled	[CE]  <identifier>  expected	7	None	replace
381	[BUG]  [BUGGY]  int  u  =(int)Math.rint((  u  <  <  3)/  2);  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]        if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;      [BUGGY]  int  u  =(int)Math.rint((  u  <  <  3)/  2);  [BUGGY]      while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are                //  both  even...      u  /=  2;  u  /=  2;  v  /=  2;  k++;  //  cast  out  twos.  }  if  (k  ==  31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }    [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  short  NS  PS  ZS  boolean  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  k  t  u  v  	projects/Math94/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	428	430	1	replace	int  u  =(int)Math.rint((  u  <  <  3)/  2);	  int    u    =(int)Math.rint((    u    <    <    1)/    2);    	non-compiled	[CE]  <identifier>  expected	97	None	replace
382	[BUG]  [BUGGY]  int  u  =(int)Math.rint((  u  <  <  4)/  2);  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]        if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;      [BUGGY]  int  u  =(int)Math.rint((  u  <  <  4)/  2);  [BUGGY]      while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are                //  both  even...      u  /=  2;  u  /=  2;  v  /=  2;  k++;  //  cast  out  twos.  }  if  (k  ==  31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }    [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  short  NS  PS  ZS  boolean  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  k  t  u  v  	projects/Math94/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	428	430	1	replace	int  u  =(int)Math.rint((  u  <  <  4)/  2);	  int    u    =(int)Math.rint((    u    <    <    1)/    2);    	non-compiled	[CE]  <identifier>  expected	97	None	replace
383	[BUG]  [BUGGY]  int  u  =(int)Math.rint((  u  <  <  6)/  2);  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]        if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;      [BUGGY]  int  u  =(int)Math.rint((  u  <  <  6)/  2);  [BUGGY]      while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are                //  both  even...      u  /=  2;  u  /=  2;  v  /=  2;  k++;  //  cast  out  twos.  }  if  (k  ==  31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }    [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  short  NS  PS  ZS  boolean  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  k  t  u  v  	projects/Math94/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	428	430	1	replace	int  u  =(int)Math.rint((  u  <  <  6)/  2);	  int    u    =(int)Math.rint((    u    <    <    1)/    2);    	non-compiled	[CE]  <identifier>  expected	97	None	replace
384	[BUG]  [BUGGY]  int  k  =  1  <  <  2;  [CE]  <identifier>  expected  [FE]            AssertionFailedError      [CONTEXT]        if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;      [BUGGY]  int  k  =  1  <  <  2;  [BUGGY]      while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are                //  both  even...      u  /=  2;  u  /=  2;  v  /=  2;  k++;  //  cast  out  twos.  }  if  (k  ==  31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }    [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  short  NS  PS  ZS  boolean  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  k  t  u  v  	projects/Math94/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	428	430	1	replace	int  k  =  1  <  <  2;	  int    k    =    1;    	non-compiled	[CE]  <identifier>  expected	73	None	replace
385	[BUG]  [BUGGY]  while(k  >  2  &&  u  <  31)  {  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]        if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;      [BUGGY]  while(k  >  2  &&  u  <  31)  {  [BUGGY]        u  /=  2;  v  /=  2;  k++;  //  cast  out  twos.  }  if  (k  ==  31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }    [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  short  NS  PS  ZS  boolean  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  k  t  u  v  	projects/Math94/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	428	430	1	replace	while(k  >  2  &&  u  <  31)  {	  while(u    >    2    &&    k    <    31)    {    	non-compiled	[CE]  <identifier>  expected	76	None	replace
386	[BUG]  [BUGGY]  char  u  =(char)Math.log(u);  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]        if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;      [BUGGY]  char  u  =(char)Math.log(u);  [BUGGY]      while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are                //  both  even...      u  /=  2;  u  /=  2;  v  /=  2;  k++;  //  cast  out  twos.  }  if  (k  ==  31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }    [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  short  NS  PS  ZS  boolean  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  k  t  u  v  	projects/Math94/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	428	430	1	replace	char  u  =(char)Math.log(u);	  int    u    =(int)Math.log(u);    	non-compiled	[CE]  <identifier>  expected	46	None	replace
387	[BUG]  [BUGGY]  while(v  %  2!=  0  &&  v  >=  0  &&  k  <  31)  {  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]        if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;      [BUGGY]  while(v  %  2!=  0  &&  v  >=  0  &&  k  <  31)  {  [BUGGY]        u  /=  2;  v  /=  2;  k++;  //  cast  out  twos.  }  if  (k  ==  31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }    [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  short  NS  PS  ZS  boolean  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  k  t  u  v  	projects/Math94/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	428	430	1	replace	while(v  %  2!=  0  &&  v  >=  0  &&  k  <  31)  {	  while(v    %    2    ==    0    &&    v    >    0    &&    k    <    31)    {    	non-compiled	[CE]  <identifier>  expected	102	None	replace
388	[BUG]  [BUGGY]  while(v  %  2  ==  0  ||  v  >  0  &&  k  <  31)  {  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]        if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;      [BUGGY]  while(v  %  2  ==  0  ||  v  >  0  &&  k  <  31)  {  [BUGGY]        u  /=  2;  v  /=  2;  k++;  //  cast  out  twos.  }  if  (k  ==  31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }    [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  short  NS  PS  ZS  boolean  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  k  t  u  v  	projects/Math94/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	428	430	1	replace	while(v  %  2  ==  0  ||  v  >  0  &&  k  <  31)  {	  while(v    %    2    ==    0    &&    v    >    0    &&    k    <    31)    {    	non-compiled	[CE]  <identifier>  expected	102	None	replace
389	[BUG]  [BUGGY]  int  k  =(int)Math.log(p);  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]        if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;      [BUGGY]  int  k  =(int)Math.log(p);  [BUGGY]      while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are                //  both  even...      u  /=  2;  u  /=  2;  v  /=  2;  k++;  //  cast  out  twos.  }  if  (k  ==  31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }    [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  short  NS  PS  ZS  boolean  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  k  t  u  v  	projects/Math94/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	428	430	1	replace	int  k  =(int)Math.log(p);	  int    k    =(int)Math.log(v);    	non-compiled	[CE]  <identifier>  expected	28	None	replace
390	[BUG]  [BUGGY]  while((  u  &  1)!=  0  ||(v  &  1)  ==  0)  {  //  while  u  and  v  are  both  even...  u  /=  2;  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]        if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;      [BUGGY]  while((  u  &  1)!=  0  ||(v  &  1)  ==  0)  {  //  while  u  and  v  are  both  even...  u  /=  2;  [BUGGY]        u  /=  2;  v  /=  2;  k++;  //  cast  out  twos.  }  if  (k  ==  31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }    [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  short  NS  PS  ZS  boolean  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  k  t  u  v  	projects/Math94/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	428	430	1	replace	while((  u  &  1)!=  0  ||(v  &  1)  ==  0)  {  //  while  u  and  v  are  both  even...  u  /=  2;	  while((    u    &    1)    ==    0    ||(v    &    1)    ==    0)    {    //    while    u    and    v    are    both    even...    u    /=    2;    	non-compiled	[CE]  <identifier>  expected	131	None	replace
391	[BUG]  [BUGGY]  while(k  %  2!=  0  &&  v  >=  0  &&  k  <  31)  {  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]        if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;      [BUGGY]  while(k  %  2!=  0  &&  v  >=  0  &&  k  <  31)  {  [BUGGY]        u  /=  2;  v  /=  2;  k++;  //  cast  out  twos.  }  if  (k  ==  31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }    [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  short  NS  PS  ZS  boolean  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  k  t  u  v  	projects/Math94/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	428	430	1	replace	while(k  %  2!=  0  &&  v  >=  0  &&  k  <  31)  {	  while(k    %    2    ==    0    &&    v    >    0    &&    k    <    31)    {    	non-compiled	[CE]  <identifier>  expected	111	None	replace
392	[BUG]  [BUGGY]  while(k  %  2!=  0  &&  v  >  0  &&  k  <  31)  {  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]        if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;      [BUGGY]  while(k  %  2!=  0  &&  v  >  0  &&  k  <  31)  {  [BUGGY]        u  /=  2;  v  /=  2;  k++;  //  cast  out  twos.  }  if  (k  ==  31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }    [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  short  NS  PS  ZS  boolean  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  k  t  u  v  	projects/Math94/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	428	430	1	replace	while(k  %  2!=  0  &&  v  >  0  &&  k  <  31)  {	  while(k    %    2    ==    0    &&    v    >    0    &&    k    <    31)    {    	non-compiled	[CE]  <identifier>  expected	111	None	replace
393	[BUG]  [BUGGY]  while((  v  &  1)  ==  0  ||(v  &  1)  ==  0  ||  k  <  31)  {  [CE]  <identifier>  expected  [FE]            AssertionFailedError      [CONTEXT]        if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;      [BUGGY]  while((  v  &  1)  ==  0  ||(v  &  1)  ==  0  ||  k  <  31)  {  [BUGGY]        u  /=  2;  v  /=  2;  k++;  //  cast  out  twos.  }  if  (k  ==  31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }    [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  short  NS  PS  ZS  boolean  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  k  t  u  v  	projects/Math94/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	428	430	1	replace	while((  v  &  1)  ==  0  ||(v  &  1)  ==  0  ||  k  <  31)  {	  while((    u    &    1)    ==    0    ||(v    &    1)    ==    0    ||    k    <    31)    {    	non-compiled	[CE]  <identifier>  expected	31	None	replace
394	[BUG]  [BUGGY]  while((  u  +  1)  ==  0)  {  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]        if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;      [BUGGY]  while((  u  +  1)  ==  0)  {  [BUGGY]        u  /=  2;  v  /=  2;  k++;  //  cast  out  twos.  }  if  (k  ==  31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }    [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  short  NS  PS  ZS  boolean  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  k  t  u  v  	projects/Math94/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	428	430	1	replace	while((  u  +  1)  ==  0)  {	  while((    u    &    1)    ==    0)    {    	non-compiled	[CE]  <identifier>  expected	90	None	replace
395	[BUG]  [BUGGY]  while(k  >=  0  &&  v  <  =  0  &&  k  <  31)  {  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]        if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;      [BUGGY]  while(k  >=  0  &&  v  <  =  0  &&  k  <  31)  {  [BUGGY]        u  /=  2;  v  /=  2;  k++;  //  cast  out  twos.  }  if  (k  ==  31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }    [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  short  NS  PS  ZS  boolean  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  k  t  u  v  	projects/Math94/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	428	430	1	replace	while(k  >=  0  &&  v  <  =  0  &&  k  <  31)  {	  while(u    >=    0    &&    v    <    =    0    &&    k    <    31)    {    	non-compiled	[CE]  <identifier>  expected	61	None	replace
396	[BUG]  [BUGGY]  while((  v  %  2)  ==  0  &&(v  &  1)  ==  0)  {  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]        if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;      [BUGGY]  while((  v  %  2)  ==  0  &&(v  &  1)  ==  0)  {  [BUGGY]        u  /=  2;  v  /=  2;  k++;  //  cast  out  twos.  }  if  (k  ==  31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }    [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  short  NS  PS  ZS  boolean  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  k  t  u  v  	projects/Math94/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	428	430	1	replace	while((  v  %  2)  ==  0  &&(v  &  1)  ==  0)  {	  while((    u    %    2)    ==    0    &&(v    &    1)    ==    0)    {    	non-compiled	[CE]  <identifier>  expected	88	None	replace
397	[BUG]  [BUGGY]  while((  u  %  2)!=  0  ||(v  &  1)  ==  0)  {  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]        if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;      [BUGGY]  while((  u  %  2)!=  0  ||(v  &  1)  ==  0)  {  [BUGGY]        u  /=  2;  v  /=  2;  k++;  //  cast  out  twos.  }  if  (k  ==  31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }    [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  short  NS  PS  ZS  boolean  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  k  t  u  v  	projects/Math94/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	428	430	1	replace	while((  u  %  2)!=  0  ||(v  &  1)  ==  0)  {	  while((    u    %    2)    ==    0    &&(v    &    1)    ==    0)    {    	non-compiled	[CE]  <identifier>  expected	88	None	replace
398	[BUG]  [BUGGY]  while((  u  %  2)!=  0  &&(v  &  1)  ==  0)  {  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]        if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;      [BUGGY]  while((  u  %  2)!=  0  &&(v  &  1)  ==  0)  {  [BUGGY]        u  /=  2;  v  /=  2;  k++;  //  cast  out  twos.  }  if  (k  ==  31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }    [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  short  NS  PS  ZS  boolean  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  k  t  u  v  	projects/Math94/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	428	430	1	replace	while((  u  %  2)!=  0  &&(v  &  1)  ==  0)  {	  while((    u    %    2)    ==    0    &&(v    &    1)    ==    0)    {    	non-compiled	[CE]  <identifier>  expected	88	None	replace
399	[BUG]  [BUGGY]  while(k  %  2!=  0  &&  v  >  0  &&  u  <  31)  {  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]        if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;      [BUGGY]  while(k  %  2!=  0  &&  v  >  0  &&  u  <  31)  {  [BUGGY]        u  /=  2;  v  /=  2;  k++;  //  cast  out  twos.  }  if  (k  ==  31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }    [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  short  NS  PS  ZS  boolean  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  k  t  u  v  	projects/Math94/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	428	430	1	replace	while(k  %  2!=  0  &&  v  >  0  &&  u  <  31)  {	  while(k    %    2    ==    0    &&    v    >    0    &&    u    <    31)    {    	non-compiled	[CE]  <identifier>  expected	104	None	replace
400	[BUG]  [BUGGY]  int  u  =(int)Math.log((  u  *  1)/  4);  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]        if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;      [BUGGY]  int  u  =(int)Math.log((  u  *  1)/  4);  [BUGGY]      while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are                //  both  even...      u  /=  2;  u  /=  2;  v  /=  2;  k++;  //  cast  out  twos.  }  if  (k  ==  31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }    [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  short  NS  PS  ZS  boolean  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  k  t  u  v  	projects/Math94/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	428	430	1	replace	int  u  =(int)Math.log((  u  *  1)/  4);	  int    u    =(int)Math.log((    u    +    1)/    4);    	non-compiled	[CE]  <identifier>  expected	25	None	replace
401	[BUG]  [BUGGY]  while(k  >  0  &&  k  <  =  31)  {  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]        if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;      [BUGGY]  while(k  >  0  &&  k  <  =  31)  {  [BUGGY]        u  /=  2;  v  /=  2;  k++;  //  cast  out  twos.  }  if  (k  ==  31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }    [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  short  NS  PS  ZS  boolean  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  k  t  u  v  	projects/Math94/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	428	430	1	replace	while(k  >  0  &&  k  <  =  31)  {	  while(u    >    0    &&    k    <    =    31)    {    	non-compiled	[CE]  <identifier>  expected	51	None	replace
402	[BUG]  [BUGGY]  float  k  =(float)Math.pow(10,  Float.POSITIVE_INFINITY);  [CE]  <identifier>  expected  [FE]            AssertionFailedError      [CONTEXT]        if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;      [BUGGY]  float  k  =(float)Math.pow(10,  Float.POSITIVE_INFINITY);  [BUGGY]      while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are                //  both  even...      u  /=  2;  u  /=  2;  v  /=  2;  k++;  //  cast  out  twos.  }  if  (k  ==  31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }    [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  short  NS  PS  ZS  boolean  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  k  t  u  v  	projects/Math94/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	428	430	1	replace	float  k  =(float)Math.pow(10,  Float.POSITIVE_INFINITY);	  float    k    =(float)Math.pow(10,    k);    	non-compiled	[CE]  <identifier>  expected	85	None	replace
403	[BUG]  [BUGGY]  float  k  =(float)Math.pow(10,  -k);  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]        if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;      [BUGGY]  float  k  =(float)Math.pow(10,  -k);  [BUGGY]      while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are                //  both  even...      u  /=  2;  u  /=  2;  v  /=  2;  k++;  //  cast  out  twos.  }  if  (k  ==  31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }    [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  short  NS  PS  ZS  boolean  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  k  t  u  v  	projects/Math94/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	428	430	1	replace	float  k  =(float)Math.pow(10,  -k);	  float    k    =(float)Math.pow(10,    k);    	non-compiled	[CE]  <identifier>  expected	85	None	replace
404	[BUG]  [BUGGY]  while(v  %  2!=  0  &&  v  >=  31  &&  k  <  31)  {  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]        if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;      [BUGGY]  while(v  %  2!=  0  &&  v  >=  31  &&  k  <  31)  {  [BUGGY]        u  /=  2;  v  /=  2;  k++;  //  cast  out  twos.  }  if  (k  ==  31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }    [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  short  NS  PS  ZS  boolean  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  k  t  u  v  	projects/Math94/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	428	430	1	replace	while(v  %  2!=  0  &&  v  >=  31  &&  k  <  31)  {	  while(v    %    2    ==    0    &&    v    >    31    &&    k    <    31)    {    	non-compiled	[CE]  <identifier>  expected	103	None	replace
405	[BUG]  [BUGGY]  while(v  <  31  &&  u  <  31)  {  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]        if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;      [BUGGY]  while(v  <  31  &&  u  <  31)  {  [BUGGY]        u  /=  2;  v  /=  2;  k++;  //  cast  out  twos.  }  if  (k  ==  31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }    [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  short  NS  PS  ZS  boolean  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  k  t  u  v  	projects/Math94/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	428	430	1	replace	while(v  <  31  &&  u  <  31)  {	  while(u    >    0    &&    v    <    31    &&    k    <    31)    {    	non-compiled	[CE]  <identifier>  expected	62	None	replace
406	[BUG]  [BUGGY]  int  k  =(int)Math.rint((  u  +  2)/  2);  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]        if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;      [BUGGY]  int  k  =(int)Math.rint((  u  +  2)/  2);  [BUGGY]      while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are                //  both  even...      u  /=  2;  u  /=  2;  v  /=  2;  k++;  //  cast  out  twos.  }  if  (k  ==  31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }    [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  short  NS  PS  ZS  boolean  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  k  t  u  v  	projects/Math94/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	428	430	1	replace	int  k  =(int)Math.rint((  u  +  2)/  2);	  int    k    =(int)Math.rint((    u    *    2)/    2);    	non-compiled	[CE]  <identifier>  expected	94	None	replace
407	[BUG]  [BUGGY]  while((  v  %  2)  ==  0  ||(v  &  1)  ==  0  ||  k  <  31)  {  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]        if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;      [BUGGY]  while((  v  %  2)  ==  0  ||(v  &  1)  ==  0  ||  k  <  31)  {  [BUGGY]        u  /=  2;  v  /=  2;  k++;  //  cast  out  twos.  }  if  (k  ==  31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }    [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  short  NS  PS  ZS  boolean  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  k  t  u  v  	projects/Math94/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	428	430	1	replace	while((  v  %  2)  ==  0  ||(v  &  1)  ==  0  ||  k  <  31)  {	  while((    u    %    2)    ==    0    ||(v    &    1)    ==    0    ||    k    <    31)    {    	non-compiled	[CE]  <identifier>  expected	93	None	replace
408	[BUG]  [BUGGY]  while(v  <  =  0  ||  k  <  31)  {  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]        if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;      [BUGGY]  while(v  <  =  0  ||  k  <  31)  {  [BUGGY]        u  /=  2;  v  /=  2;  k++;  //  cast  out  twos.  }  if  (k  ==  31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }    [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  short  NS  PS  ZS  boolean  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  k  t  u  v  	projects/Math94/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	428	430	1	replace	while(v  <  =  0  ||  k  <  31)  {	  while(v    <    =    0    &&    k    <    31)    {    	non-compiled	[CE]  <identifier>  expected	129	None	replace
409	[BUG]  [BUGGY]  while(v  <  31  &&  k  <  31)  {  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]        if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;      [BUGGY]  while(v  <  31  &&  k  <  31)  {  [BUGGY]        u  /=  2;  v  /=  2;  k++;  //  cast  out  twos.  }  if  (k  ==  31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }    [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  short  NS  PS  ZS  boolean  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  k  t  u  v  	projects/Math94/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	428	430	1	replace	while(v  <  31  &&  k  <  31)  {	  while(v    <    =    0    &&    k    <    31)    {    	non-compiled	[CE]  <identifier>  expected	129	None	replace
410	[BUG]  [BUGGY]  while((  u  +  1)  ==  0  &&(v  &  1)  ==  0)  {  u  /=  2;  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]        if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;      [BUGGY]  while((  u  +  1)  ==  0  &&(v  &  1)  ==  0)  {  u  /=  2;  [BUGGY]        u  /=  2;  v  /=  2;  k++;  //  cast  out  twos.  }  if  (k  ==  31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }    [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  short  NS  PS  ZS  boolean  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  k  t  u  v  	projects/Math94/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	428	430	1	replace	while((  u  +  1)  ==  0  &&(v  &  1)  ==  0)  {  u  /=  2;	  while((    u    &    1)    ==    0    &&(v    &    1)    ==    0)    {    u    /=    2;    	non-compiled	[CE]  <identifier>  expected	58	None	replace
411	[BUG]  [BUGGY]  int  u  =(int)Math.log((  k  +  1)/  2  +  3);  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]        if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;      [BUGGY]  int  u  =(int)Math.log((  k  +  1)/  2  +  3);  [BUGGY]      while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are                //  both  even...      u  /=  2;  u  /=  2;  v  /=  2;  k++;  //  cast  out  twos.  }  if  (k  ==  31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }    [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  short  NS  PS  ZS  boolean  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  k  t  u  v  	projects/Math94/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	428	430	1	replace	int  u  =(int)Math.log((  k  +  1)/  2  +  3);	  int    u    =(int)Math.log((    k    +    1)/    2);    	non-compiled	[CE]  <identifier>  expected	26	None	replace
412	[BUG]  [BUGGY]  while((  u  &  1)  ==  0  ||(v  &  1)  ==  0  &&  k  >=  31)  {  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]        if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;      [BUGGY]  while((  u  &  1)  ==  0  ||(v  &  1)  ==  0  &&  k  >=  31)  {  [BUGGY]        u  /=  2;  v  /=  2;  k++;  //  cast  out  twos.  }  if  (k  ==  31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }    [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  short  NS  PS  ZS  boolean  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  k  t  u  v  	projects/Math94/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	428	430	1	replace	while((  u  &  1)  ==  0  ||(v  &  1)  ==  0  &&  k  >=  31)  {	  while((    u    &    1)    ==    0    &&(v    &    1)    ==    0    &&    k    >=    31)    {    	non-compiled	[CE]  <identifier>  expected	100	None	replace
413	[BUG]  [BUGGY]  while((  u  &  1)  ==  0  ||(v  &  1)  ==  0  &&  k  <  =  31)  {  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]        if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;      [BUGGY]  while((  u  &  1)  ==  0  ||(v  &  1)  ==  0  &&  k  <  =  31)  {  [BUGGY]        u  /=  2;  v  /=  2;  k++;  //  cast  out  twos.  }  if  (k  ==  31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }    [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  short  NS  PS  ZS  boolean  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  k  t  u  v  	projects/Math94/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	428	430	1	replace	while((  u  &  1)  ==  0  ||(v  &  1)  ==  0  &&  k  <  =  31)  {	  while((    u    &    1)    ==    0    &&(v    &    1)    ==    0    &&    k    <    =    31)    {    	non-compiled	[CE]  <identifier>  expected	72	None	replace
414	[BUG]  [BUGGY]  while((  v  &  1)  ==  0  &&(v  &  1)  ==  0  &&  k  <  31)  {  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]        if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;      [BUGGY]  while((  v  &  1)  ==  0  &&(v  &  1)  ==  0  &&  k  <  31)  {  [BUGGY]        u  /=  2;  v  /=  2;  k++;  //  cast  out  twos.  }  if  (k  ==  31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }    [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  short  NS  PS  ZS  boolean  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  k  t  u  v  	projects/Math94/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	428	430	1	replace	while((  v  &  1)  ==  0  &&(v  &  1)  ==  0  &&  k  <  31)  {	  while((    u    &    1)    ==    0    &&(v    &    1)    ==    0    &&    k    <    =    31)    {    	non-compiled	[CE]  <identifier>  expected	72	None	replace
415	[BUG]  [BUGGY]  while((  v  &  1)  ==  0  ||(v  &  1)  ==  0)  {  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]        if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;      [BUGGY]  while((  v  &  1)  ==  0  ||(v  &  1)  ==  0)  {  [BUGGY]        u  /=  2;  v  /=  2;  k++;  //  cast  out  twos.  }  if  (k  ==  31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }    [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  short  NS  PS  ZS  boolean  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  k  t  u  v  	projects/Math94/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	428	430	1	replace	while((  v  &  1)  ==  0  ||(v  &  1)  ==  0)  {	  while((    u    &    1)    ==    0    ||(v    &    1)    ==    0)    {    	non-compiled	[CE]  <identifier>  expected	57	None	replace
416	[BUG]  [BUGGY]  while((  u  &  1)  ==  0  ||(v  &  2)  ==  0)  {  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]        if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;      [BUGGY]  while((  u  &  1)  ==  0  ||(v  &  2)  ==  0)  {  [BUGGY]        u  /=  2;  v  /=  2;  k++;  //  cast  out  twos.  }  if  (k  ==  31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }    [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  short  NS  PS  ZS  boolean  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  k  t  u  v  	projects/Math94/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	428	430	1	replace	while((  u  &  1)  ==  0  ||(v  &  2)  ==  0)  {	  while((    u    &    1)    ==    0    ||(v    &    1)    ==    0)    {    	non-compiled	[CE]  <identifier>  expected	57	None	replace
417	[BUG]  [BUGGY]  int  k  =(int)Math.rint((  u  *  1)*  k);  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]        if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;      [BUGGY]  int  k  =(int)Math.rint((  u  *  1)*  k);  [BUGGY]      while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are                //  both  even...      u  /=  2;  u  /=  2;  v  /=  2;  k++;  //  cast  out  twos.  }  if  (k  ==  31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }    [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  short  NS  PS  ZS  boolean  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  k  t  u  v  	projects/Math94/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	428	430	1	replace	int  k  =(int)Math.rint((  u  *  1)*  k);	  int    k    =(int)Math.rint((    u    %    1)*    k);    	non-compiled	[CE]  <identifier>  expected	106	None	replace
418	[BUG]  [BUGGY]  while((  u  &  1)!=  0  ||(v  &  1)  ==  0)  {  //  while  u  and  v  are  //  both  even...  u  /=  2;  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]        if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;      [BUGGY]  while((  u  &  1)!=  0  ||(v  &  1)  ==  0)  {  //  while  u  and  v  are  //  both  even...  u  /=  2;  [BUGGY]        u  /=  2;  v  /=  2;  k++;  //  cast  out  twos.  }  if  (k  ==  31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }    [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  short  NS  PS  ZS  boolean  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  k  t  u  v  	projects/Math94/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	428	430	1	replace	while((  u  &  1)!=  0  ||(v  &  1)  ==  0)  {  //  while  u  and  v  are  //  both  even...  u  /=  2;	  while((    u    &    1)    ==    0    ||(v    &    1)    ==    0)    {    //    while    u    and    v    are    //    both    even...    u    /=    2;    	non-compiled	[CE]  <identifier>  expected	130	None	replace
419	[BUG]  [BUGGY]  int  u  =(int)Math.log((  v  <  <  3)/  2);  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]        if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;      [BUGGY]  int  u  =(int)Math.log((  v  <  <  3)/  2);  [BUGGY]      while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are                //  both  even...      u  /=  2;  u  /=  2;  v  /=  2;  k++;  //  cast  out  twos.  }  if  (k  ==  31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }    [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  short  NS  PS  ZS  boolean  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  k  t  u  v  	projects/Math94/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	428	430	1	replace	int  u  =(int)Math.log((  v  <  <  3)/  2);	  int    u    =(int)Math.log((    v    <    <    1)/    2);    	non-compiled	[CE]  <identifier>  expected	98	None	replace
420	[BUG]  [BUGGY]  int  k  =(v  <  31)?  2  :  0;  [CE]  <identifier>  expected  [FE]            AssertionFailedError      [CONTEXT]        if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;      [BUGGY]  int  k  =(v  <  31)?  2  :  0;  [BUGGY]      while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are                //  both  even...      u  /=  2;  u  /=  2;  v  /=  2;  k++;  //  cast  out  twos.  }  if  (k  ==  31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }    [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  short  NS  PS  ZS  boolean  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  k  t  u  v  	projects/Math94/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	428	430	1	replace	int  k  =(v  <  31)?  2  :  0;	  int    k    =(v    <    31)?    1    :    0;    	non-compiled	[CE]  <identifier>  expected	109	None	replace
421	[BUG]  [BUGGY]  int  k  =(v  <  31)?  1  :  -1;  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]        if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;      [BUGGY]  int  k  =(v  <  31)?  1  :  -1;  [BUGGY]      while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are                //  both  even...      u  /=  2;  u  /=  2;  v  /=  2;  k++;  //  cast  out  twos.  }  if  (k  ==  31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }    [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  short  NS  PS  ZS  boolean  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  k  t  u  v  	projects/Math94/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	428	430	1	replace	int  k  =(v  <  31)?  1  :  -1;	  int    k    =(v    <    31)?    1    :    0;    	non-compiled	[CE]  <identifier>  expected	109	None	replace
422	[BUG]  [BUGGY]  while(k  <  31  &&  v  <  31)  {  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]        if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;      [BUGGY]  while(k  <  31  &&  v  <  31)  {  [BUGGY]        u  /=  2;  v  /=  2;  k++;  //  cast  out  twos.  }  if  (k  ==  31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }    [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  short  NS  PS  ZS  boolean  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  k  t  u  v  	projects/Math94/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	428	430	1	replace	while(k  <  31  &&  v  <  31)  {	  while(k    >    0    &&    v    <    31)    {    	non-compiled	[CE]  <identifier>  expected	122	None	replace
423	[BUG]  [BUGGY]  int  k  =(int)Math.rint((  u  <  <  6)+  2);  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]        if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;      [BUGGY]  int  k  =(int)Math.rint((  u  <  <  6)+  2);  [BUGGY]      while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are                //  both  even...      u  /=  2;  u  /=  2;  v  /=  2;  k++;  //  cast  out  twos.  }  if  (k  ==  31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }    [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  short  NS  PS  ZS  boolean  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  k  t  u  v  	projects/Math94/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	428	430	1	replace	int  k  =(int)Math.rint((  u  <  <  6)+  2);	  int    k    =(int)Math.rint((    u    <    <    3)+    2);    	non-compiled	[CE]  <identifier>  expected	54	None	replace
424	[BUG]  [BUGGY]  while(v  <  =  0  &&  v  <  =  2  &&  k  <  31)  {  [CE]  <identifier>  expected  [FE]            AssertionFailedError      [CONTEXT]        if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;      [BUGGY]  while(v  <  =  0  &&  v  <  =  2  &&  k  <  31)  {  [BUGGY]        u  /=  2;  v  /=  2;  k++;  //  cast  out  twos.  }  if  (k  ==  31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }    [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  short  NS  PS  ZS  boolean  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  k  t  u  v  	projects/Math94/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	428	430	1	replace	while(v  <  =  0  &&  v  <  =  2  &&  k  <  31)  {	  while(u    >    0    &&    v    <    =    2    &&    k    <    31)    {    	non-compiled	[CE]  <identifier>  expected	60	None	replace
425	[BUG]  [BUGGY]  while(k  %  2!=  0  ||  k  <  31)  {  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]        if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;      [BUGGY]  while(k  %  2!=  0  ||  k  <  31)  {  [BUGGY]        u  /=  2;  v  /=  2;  k++;  //  cast  out  twos.  }  if  (k  ==  31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }    [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  short  NS  PS  ZS  boolean  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  k  t  u  v  	projects/Math94/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	428	430	1	replace	while(k  %  2!=  0  ||  k  <  31)  {	  while(u    %    2!=    0    ||    k    <    31)    {    	non-compiled	[CE]  <identifier>  expected	116	None	replace
426	[BUG]  [BUGGY]  while(u  %  2!=  0  ||  v  <  31)  {  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]        if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;      [BUGGY]  while(u  %  2!=  0  ||  v  <  31)  {  [BUGGY]        u  /=  2;  v  /=  2;  k++;  //  cast  out  twos.  }  if  (k  ==  31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }    [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  short  NS  PS  ZS  boolean  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  k  t  u  v  	projects/Math94/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	428	430	1	replace	while(u  %  2!=  0  ||  v  <  31)  {	  while(u    %    2!=    0    ||    k    <    31)    {    	non-compiled	[CE]  <identifier>  expected	116	None	replace
427	[BUG]  [BUGGY]  while(k  %  2  ==  0  ||  v  <  31)  {  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]        if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;      [BUGGY]  while(k  %  2  ==  0  ||  v  <  31)  {  [BUGGY]        u  /=  2;  v  /=  2;  k++;  //  cast  out  twos.  }  if  (k  ==  31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }    [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  short  NS  PS  ZS  boolean  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  k  t  u  v  	projects/Math94/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	428	430	1	replace	while(k  %  2  ==  0  ||  v  <  31)  {	  while(u    %    2    ==    0    ||    k    <    31)    {    	non-compiled	[CE]  <identifier>  expected	2	None	replace
428	[BUG]  [BUGGY]  while(k  %  2  ==  0  &&  k  <  =  31)  {  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]        if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;      [BUGGY]  while(k  %  2  ==  0  &&  k  <  =  31)  {  [BUGGY]        u  /=  2;  v  /=  2;  k++;  //  cast  out  twos.  }  if  (k  ==  31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }    [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  short  NS  PS  ZS  boolean  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  k  t  u  v  	projects/Math94/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	428	430	1	replace	while(k  %  2  ==  0  &&  k  <  =  31)  {	  while(u    %    2    ==    0    &&    k    <    =    31)    {    	non-compiled	[CE]  <identifier>  expected	3	None	replace
429	[BUG]  [BUGGY]  while(u  <  =  0  ||  k  <  31)  {  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]        if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;      [BUGGY]  while(u  <  =  0  ||  k  <  31)  {  [BUGGY]        u  /=  2;  v  /=  2;  k++;  //  cast  out  twos.  }  if  (k  ==  31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }    [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  short  NS  PS  ZS  boolean  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  k  t  u  v  	projects/Math94/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	428	430	1	replace	while(u  <  =  0  ||  k  <  31)  {	  while(u    <    =    0    &&    k    <    31)    {    	non-compiled	[CE]  <identifier>  expected	53	None	replace
430	[BUG]  [BUGGY]  while((  u  &  1)!=  0  ||(v  &  1)  ==  0)  {  u  /=  2;  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]        if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;      [BUGGY]  while((  u  &  1)!=  0  ||(v  &  1)  ==  0)  {  u  /=  2;  [BUGGY]        u  /=  2;  v  /=  2;  k++;  //  cast  out  twos.  }  if  (k  ==  31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }    [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  short  NS  PS  ZS  boolean  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  k  t  u  v  	projects/Math94/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	428	430	1	replace	while((  u  &  1)!=  0  ||(v  &  1)  ==  0)  {  u  /=  2;	  while((    u    &    1)    ==    0    ||(v    &    1)    ==    0)    {    u    /=    2;    	non-compiled	[CE]  <identifier>  expected	33	None	replace
431	[BUG]  [BUGGY]  int  k  =(int)Math.pow(10,  u);  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]        if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;      [BUGGY]  int  k  =(int)Math.pow(10,  u);  [BUGGY]      while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are                //  both  even...      u  /=  2;  u  /=  2;  v  /=  2;  k++;  //  cast  out  twos.  }  if  (k  ==  31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }    [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  short  NS  PS  ZS  boolean  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  k  t  u  v  	projects/Math94/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	428	430	1	replace	int  k  =(int)Math.pow(10,  u);	  int    k    =(int)Math.pow(10,    v);    	non-compiled	[CE]  <identifier>  expected	8	None	replace
432	[BUG]  [BUGGY]  while(v  <  31  &&  v  <  =  0  &&  k  <  31)  {  [CE]  <identifier>  expected  [FE]            AssertionFailedError      [CONTEXT]        if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;      [BUGGY]  while(v  <  31  &&  v  <  =  0  &&  k  <  31)  {  [BUGGY]        u  /=  2;  v  /=  2;  k++;  //  cast  out  twos.  }  if  (k  ==  31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }    [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  short  NS  PS  ZS  boolean  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  k  t  u  v  	projects/Math94/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	428	430	1	replace	while(v  <  31  &&  v  <  =  0  &&  k  <  31)  {	  while(v    >    0    &&    v    <    =    0    &&    k    <    31)    {    	non-compiled	[CE]  <identifier>  expected	86	None	replace
433	[BUG]  [BUGGY]  while(v  <  =  0  &&  v  <  31)  {  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]        if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;      [BUGGY]  while(v  <  =  0  &&  v  <  31)  {  [BUGGY]        u  /=  2;  v  /=  2;  k++;  //  cast  out  twos.  }  if  (k  ==  31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }    [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  short  NS  PS  ZS  boolean  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  k  t  u  v  	projects/Math94/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	428	430	1	replace	while(v  <  =  0  &&  v  <  31)  {	  while(v    >    0    &&    v    <    =    0    &&    k    <    31)    {    	non-compiled	[CE]  <identifier>  expected	86	None	replace
434	[BUG]  [BUGGY]  float  k  =(float)Math.pow(10,  y  -  1);  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]        if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;      [BUGGY]  float  k  =(float)Math.pow(10,  y  -  1);  [BUGGY]      while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are                //  both  even...      u  /=  2;  u  /=  2;  v  /=  2;  k++;  //  cast  out  twos.  }  if  (k  ==  31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }    [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  short  NS  PS  ZS  boolean  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  k  t  u  v  	projects/Math94/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	428	430	1	replace	float  k  =(float)Math.pow(10,  y  -  1);	  float    k    =(float)Math.pow(10,    y);    	non-compiled	[CE]  <identifier>  expected	80	None	replace
435	[BUG]  [BUGGY]  int  k  =(int)Math.rint((  u  /  2)+  2);  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]        if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;      [BUGGY]  int  k  =(int)Math.rint((  u  /  2)+  2);  [BUGGY]      while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are                //  both  even...      u  /=  2;  u  /=  2;  v  /=  2;  k++;  //  cast  out  twos.  }  if  (k  ==  31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }    [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  short  NS  PS  ZS  boolean  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  k  t  u  v  	projects/Math94/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	428	430	1	replace	int  k  =(int)Math.rint((  u  /  2)+  2);	  int    k    =(int)Math.rint((    u    /    2)/    2);    	non-compiled	[CE]  <identifier>  expected	120	None	replace
436	[BUG]  [BUGGY]  int  k  =(int)Math.pow(10,  YEAR);  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]        if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;      [BUGGY]  int  k  =(int)Math.pow(10,  YEAR);  [BUGGY]      while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are                //  both  even...      u  /=  2;  u  /=  2;  v  /=  2;  k++;  //  cast  out  twos.  }  if  (k  ==  31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }    [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  short  NS  PS  ZS  boolean  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  k  t  u  v  	projects/Math94/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	428	430	1	replace	int  k  =(int)Math.pow(10,  YEAR);	  int    k    =(int)Math.pow(10,    3);    	non-compiled	[CE]  <identifier>  expected	50	None	replace
437	[BUG]  [BUGGY]  while(v  <  =  0  &&  v  <  31  &&  k  <  31)  {  [CE]  <identifier>  expected  [FE]            AssertionFailedError      [CONTEXT]        if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;      [BUGGY]  while(v  <  =  0  &&  v  <  31  &&  k  <  31)  {  [BUGGY]        u  /=  2;  v  /=  2;  k++;  //  cast  out  twos.  }  if  (k  ==  31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }    [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  short  NS  PS  ZS  boolean  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  k  t  u  v  	projects/Math94/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	428	430	1	replace	while(v  <  =  0  &&  v  <  31  &&  k  <  31)  {	  while(v    >    0    &&    v    <    31    &&    k    <    31)    {    	non-compiled	[CE]  <identifier>  expected	128	None	replace
438	[BUG]  [BUGGY]  int  u  =(int)Math.log((  u  *  1)/  3);  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]        if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;      [BUGGY]  int  u  =(int)Math.log((  u  *  1)/  3);  [BUGGY]      while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are                //  both  even...      u  /=  2;  u  /=  2;  v  /=  2;  k++;  //  cast  out  twos.  }  if  (k  ==  31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }    [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  short  NS  PS  ZS  boolean  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  k  t  u  v  	projects/Math94/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	428	430	1	replace	int  u  =(int)Math.log((  u  *  1)/  3);	  int    u    =(int)Math.log((    u    +    1)/    3);    	non-compiled	[CE]  <identifier>  expected	24	None	replace
439	[BUG]  [BUGGY]  int  u  =(int)Math.log((  u  <  <  3)/  4);  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]        if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;      [BUGGY]  int  u  =(int)Math.log((  u  <  <  3)/  4);  [BUGGY]      while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are                //  both  even...      u  /=  2;  u  /=  2;  v  /=  2;  k++;  //  cast  out  twos.  }  if  (k  ==  31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }    [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  short  NS  PS  ZS  boolean  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  k  t  u  v  	projects/Math94/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	428	430	1	replace	int  u  =(int)Math.log((  u  <  <  3)/  4);	  int    u    =(int)Math.log((    u    <    <    1)/    4);    	non-compiled	[CE]  <identifier>  expected	36	None	replace
440	[BUG]  [BUGGY]  int  u  =(int)Math.log((  u  <  <  4)/  4);  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]        if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;      [BUGGY]  int  u  =(int)Math.log((  u  <  <  4)/  4);  [BUGGY]      while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are                //  both  even...      u  /=  2;  u  /=  2;  v  /=  2;  k++;  //  cast  out  twos.  }  if  (k  ==  31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }    [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  short  NS  PS  ZS  boolean  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  k  t  u  v  	projects/Math94/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	428	430	1	replace	int  u  =(int)Math.log((  u  <  <  4)/  4);	  int    u    =(int)Math.log((    u    <    <    1)/    4);    	non-compiled	[CE]  <identifier>  expected	36	None	replace
441	[BUG]  [BUGGY]  while((  v  &  1)  ==  0  ||(v  &  1)  ==  0  ||  k  >  31)  {  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]        if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;      [BUGGY]  while((  v  &  1)  ==  0  ||(v  &  1)  ==  0  ||  k  >  31)  {  [BUGGY]        u  /=  2;  v  /=  2;  k++;  //  cast  out  twos.  }  if  (k  ==  31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }    [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  short  NS  PS  ZS  boolean  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  k  t  u  v  	projects/Math94/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	428	430	1	replace	while((  v  &  1)  ==  0  ||(v  &  1)  ==  0  ||  k  >  31)  {	  while((    u    &    1)    ==    0    ||(v    &    1)    ==    0    ||    k    >    31)    {    	non-compiled	[CE]  <identifier>  expected	92	None	replace
442	[BUG]  [BUGGY]  char  k  =(char)Math.pow(10,  Y);  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]        if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;      [BUGGY]  char  k  =(char)Math.pow(10,  Y);  [BUGGY]      while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are                //  both  even...      u  /=  2;  u  /=  2;  v  /=  2;  k++;  //  cast  out  twos.  }  if  (k  ==  31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }    [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  short  NS  PS  ZS  boolean  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  k  t  u  v  	projects/Math94/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	428	430	1	replace	char  k  =(char)Math.pow(10,  Y);	  char    k    =(char)Math.pow(10,    y);    	non-compiled	[CE]  <identifier>  expected	49	None	replace
443	[BUG]  [BUGGY]  while(k  <  31  &&  k  <  31)  {  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]        if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;      [BUGGY]  while(k  <  31  &&  k  <  31)  {  [BUGGY]        u  /=  2;  v  /=  2;  k++;  //  cast  out  twos.  }  if  (k  ==  31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }    [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  short  NS  PS  ZS  boolean  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  k  t  u  v  	projects/Math94/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	428	430	1	replace	while(k  <  31  &&  k  <  31)  {	  while(k    >    0    &&    k    <    31)    {    	non-compiled	[CE]  <identifier>  expected	121	None	replace
444	[BUG]  [BUGGY]  int  u  =(int)Math.ceil(k  -  1);  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]        if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;      [BUGGY]  int  u  =(int)Math.ceil(k  -  1);  [BUGGY]      while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are                //  both  even...      u  /=  2;  u  /=  2;  v  /=  2;  k++;  //  cast  out  twos.  }  if  (k  ==  31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }    [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  short  NS  PS  ZS  boolean  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  k  t  u  v  	projects/Math94/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	428	430	1	replace	int  u  =(int)Math.ceil(k  -  1);	  int    u    =(int)Math.ceil(k);    	non-compiled	[CE]  <identifier>  expected	42	None	replace
445	[BUG]  [BUGGY]  while(v  %  2!=  0  &&  u  <  31  &&  k  <  31)  {  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]        if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;      [BUGGY]  while(v  %  2!=  0  &&  u  <  31  &&  k  <  31)  {  [BUGGY]        u  /=  2;  v  /=  2;  k++;  //  cast  out  twos.  }  if  (k  ==  31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }    [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  short  NS  PS  ZS  boolean  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  k  t  u  v  	projects/Math94/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	428	430	1	replace	while(v  %  2!=  0  &&  u  <  31  &&  k  <  31)  {	  while(v    %    2    ==    0    &&    u    <    31    &&    k    <    31)    {    	non-compiled	[CE]  <identifier>  expected	16	None	replace
446	[BUG]  [BUGGY]  while(k  %  2  ==  0  &&  u  <  31  &&  v  <  31)  {  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]        if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;      [BUGGY]  while(k  %  2  ==  0  &&  u  <  31  &&  v  <  31)  {  [BUGGY]        u  /=  2;  v  /=  2;  k++;  //  cast  out  twos.  }  if  (k  ==  31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }    [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  short  NS  PS  ZS  boolean  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  k  t  u  v  	projects/Math94/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	428	430	1	replace	while(k  %  2  ==  0  &&  u  <  31  &&  v  <  31)  {	  while(v    %    2    ==    0    &&    u    <    31    &&    k    <    31)    {    	non-compiled	[CE]  <identifier>  expected	16	None	replace
447	[BUG]  [BUGGY]  while(v  >  31  &&  k  <  31)  {  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]        if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;      [BUGGY]  while(v  >  31  &&  k  <  31)  {  [BUGGY]        u  /=  2;  v  /=  2;  k++;  //  cast  out  twos.  }  if  (k  ==  31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }    [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  short  NS  PS  ZS  boolean  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  k  t  u  v  	projects/Math94/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	428	430	1	replace	while(v  >  31  &&  k  <  31)  {	  while(v    >    0    &&    k    <    31)    {    	non-compiled	[CE]  <identifier>  expected	52	None	replace
448	[BUG]  [BUGGY]  char  k  =(char)Math.pow(10,  16);  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]        if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;      [BUGGY]  char  k  =(char)Math.pow(10,  16);  [BUGGY]      while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are                //  both  even...      u  /=  2;  u  /=  2;  v  /=  2;  k++;  //  cast  out  twos.  }  if  (k  ==  31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }    [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  short  NS  PS  ZS  boolean  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  k  t  u  v  	projects/Math94/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	428	430	1	replace	char  k  =(char)Math.pow(10,  16);	  int    k    =(int)Math.pow(10,    16);    	non-compiled	[CE]  <identifier>  expected	9	None	replace
449	[BUG]  [BUGGY]  while((  v  &  1)  ==  0  ||(v  &  1)  ==  0  ||  k  >=  31)  {  [CE]  <identifier>  expected  [FE]            AssertionFailedError      [CONTEXT]        if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;      [BUGGY]  while((  v  &  1)  ==  0  ||(v  &  1)  ==  0  ||  k  >=  31)  {  [BUGGY]        u  /=  2;  v  /=  2;  k++;  //  cast  out  twos.  }  if  (k  ==  31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }    [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  short  NS  PS  ZS  boolean  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  k  t  u  v  	projects/Math94/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	428	430	1	replace	while((  v  &  1)  ==  0  ||(v  &  1)  ==  0  ||  k  >=  31)  {	  while((    u    &    1)    ==    0    ||(v    &    1)    ==    0    ||    k    >=    31)    {    	non-compiled	[CE]  <identifier>  expected	91	None	replace
450	[BUG]  [BUGGY]  float  u  =(float)Math.floor(k  -  1);  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]        if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;      [BUGGY]  float  u  =(float)Math.floor(k  -  1);  [BUGGY]      while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are                //  both  even...      u  /=  2;  u  /=  2;  v  /=  2;  k++;  //  cast  out  twos.  }  if  (k  ==  31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }    [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  short  NS  PS  ZS  boolean  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  k  t  u  v  	projects/Math94/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	428	430	1	replace	float  u  =(float)Math.floor(k  -  1);	  float    u    =(float)Math.floor(k);    	non-compiled	[CE]  <identifier>  expected	101	None	replace
451	[BUG]  [BUGGY]  int  k  =(int)Math.pow(10,  Math.PI);  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]        if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;      [BUGGY]  int  k  =(int)Math.pow(10,  Math.PI);  [BUGGY]      while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are                //  both  even...      u  /=  2;  u  /=  2;  v  /=  2;  k++;  //  cast  out  twos.  }  if  (k  ==  31)  {  throw  new  ArithmeticException(     "overflow:  gcd  is  2^31     ");  }    [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  short  NS  PS  ZS  boolean  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  k  t  u  v  	projects/Math94/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	428	430	1	replace	int  k  =(int)Math.pow(10,  Math.PI);	  int    k    =(int)Math.pow(10,    x);    	non-compiled	[CE]  <identifier>  expected	47	None	replace
