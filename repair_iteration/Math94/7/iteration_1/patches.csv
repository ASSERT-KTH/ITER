bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  int  u  =(int)Math.log(v);  [CE]  <identifier>  expected  [FE]              AssertionFailedError    [CONTEXT]        if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative      [BUGGY]  int  u  =(int)Math.log(v);  [BUGGY]    int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  v  /=  2;  k++;  //  cast  out  twos.  }  if  (k  ==  31)  {  throw  new  ArithmeticException(   "overflow:  gcd  is  2^31   ");  }  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  short  NS  PS  ZS  boolean  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  k  t  u  v  	projects/Math94/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	427	427	1	replace	int  u  =(int)Math.log(v);	      int    u    =(int)Math.floor(v);    	non-compiled	[CE]  <identifier>  expected	8	None	replace
2	[BUG]  [BUGGY]  int  u  =(int)Math.ceil(v);  [CE]  <identifier>  expected  [FE]                AssertionFailedError    [CONTEXT]        if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative      [BUGGY]  int  u  =(int)Math.ceil(v);  [BUGGY]    int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  v  /=  2;  k++;  //  cast  out  twos.  }  if  (k  ==  31)  {  throw  new  ArithmeticException(   "overflow:  gcd  is  2^31   ");  }  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  short  NS  PS  ZS  boolean  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  k  t  u  v  	projects/Math94/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	427	427	1	replace	int  u  =(int)Math.ceil(v);	      int    u    =(int)Math.floor(v);    	non-compiled	[CE]  <identifier>  expected	8	None	replace
3	[BUG]  [BUGGY]  int  u  =(int)Math.floor(u);  [CE]  <identifier>  expected  [FE]                  AssertionFailedError    [CONTEXT]        if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative      [BUGGY]  int  u  =(int)Math.floor(u);  [BUGGY]    int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  v  /=  2;  k++;  //  cast  out  twos.  }  if  (k  ==  31)  {  throw  new  ArithmeticException(   "overflow:  gcd  is  2^31   ");  }  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  short  NS  PS  ZS  boolean  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  k  t  u  v  	projects/Math94/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	427	427	1	replace	int  u  =(int)Math.floor(u);	      int    u    =(int)Math.floor(v);    	non-compiled	[CE]  <identifier>  expected	8	None	replace
4	[BUG]  [BUGGY]  int  u  =(int)Math.log(u);  [CE]  <identifier>  expected  [FE]                    AssertionFailedError    [CONTEXT]        if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative      [BUGGY]  int  u  =(int)Math.log(u);  [BUGGY]    int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  v  /=  2;  k++;  //  cast  out  twos.  }  if  (k  ==  31)  {  throw  new  ArithmeticException(   "overflow:  gcd  is  2^31   ");  }  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  short  NS  PS  ZS  boolean  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  k  t  u  v  	projects/Math94/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	427	427	1	replace	int  u  =(int)Math.log(u);	      int    u    =(int)Math.floor(v);    	non-compiled	[CE]  <identifier>  expected	8	None	replace
5	[BUG]  [BUGGY]  int  k  =  32;  [CE]  <identifier>  expected  [FE]          AssertionFailedError    [CONTEXT]        if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative      [BUGGY]  int  k  =  32;  [BUGGY]    while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  v  /=  2;  k++;  //  cast  out  twos.  }  if  (k  ==  31)  {  throw  new  ArithmeticException(   "overflow:  gcd  is  2^31   ");  }  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  short  NS  PS  ZS  boolean  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  k  t  u  v  	projects/Math94/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	427	427	1	replace	int  k  =  32;	  int    k    =    31;    	non-compiled	[CE]  <identifier>  expected	2	None	replace
6	[BUG]  [BUGGY]  int  u  =(int)Math.pow(10,  0);  [CE]  <identifier>  expected  [FE]            AssertionFailedError    [CONTEXT]        if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative      [BUGGY]  int  u  =(int)Math.pow(10,  0);  [BUGGY]    int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  v  /=  2;  k++;  //  cast  out  twos.  }  if  (k  ==  31)  {  throw  new  ArithmeticException(   "overflow:  gcd  is  2^31   ");  }  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  short  NS  PS  ZS  boolean  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  k  t  u  v  	projects/Math94/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	427	427	1	replace	int  u  =(int)Math.pow(10,  0);	      int    u    =(int)Math.pow(10,    v);    	non-compiled	[CE]  <identifier>  expected	7	None	replace
7	[BUG]  [BUGGY]  int  u  =(int)Math.pow(10,  3);  [CE]  <identifier>  expected  [FE]              AssertionFailedError    [CONTEXT]        if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative      [BUGGY]  int  u  =(int)Math.pow(10,  3);  [BUGGY]    int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  v  /=  2;  k++;  //  cast  out  twos.  }  if  (k  ==  31)  {  throw  new  ArithmeticException(   "overflow:  gcd  is  2^31   ");  }  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  short  NS  PS  ZS  boolean  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  k  t  u  v  	projects/Math94/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	427	427	1	replace	int  u  =(int)Math.pow(10,  3);	      int    u    =(int)Math.pow(10,    v);    	non-compiled	[CE]  <identifier>  expected	7	None	replace
8	[BUG]  [BUGGY]  int  u  =(int)Math.pow(10,  10);  [CE]  <identifier>  expected  [FE]                AssertionFailedError    [CONTEXT]        if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative      [BUGGY]  int  u  =(int)Math.pow(10,  10);  [BUGGY]    int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  v  /=  2;  k++;  //  cast  out  twos.  }  if  (k  ==  31)  {  throw  new  ArithmeticException(   "overflow:  gcd  is  2^31   ");  }  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  short  NS  PS  ZS  boolean  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  k  t  u  v  	projects/Math94/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	427	427	1	replace	int  u  =(int)Math.pow(10,  10);	      int    u    =(int)Math.pow(10,    v);    	non-compiled	[CE]  <identifier>  expected	7	None	replace
9	[BUG]  [BUGGY]  int  u  =(int)Math.pow(10,  32);  [CE]  <identifier>  expected  [FE]                  AssertionFailedError    [CONTEXT]        if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative      [BUGGY]  int  u  =(int)Math.pow(10,  32);  [BUGGY]    int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  v  /=  2;  k++;  //  cast  out  twos.  }  if  (k  ==  31)  {  throw  new  ArithmeticException(   "overflow:  gcd  is  2^31   ");  }  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  short  NS  PS  ZS  boolean  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  k  t  u  v  	projects/Math94/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	427	427	1	replace	int  u  =(int)Math.pow(10,  32);	      int    u    =(int)Math.pow(10,    v);    	non-compiled	[CE]  <identifier>  expected	7	None	replace
10	[BUG]  [BUGGY]  int  v  =(int)Math.ceil((  u  +  1)/  2  +  1);  [CE]  <identifier>  expected  [FE]          AssertionFailedError    [CONTEXT]        if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative      [BUGGY]  int  v  =(int)Math.ceil((  u  +  1)/  2  +  1);  [BUGGY]    int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  v  /=  2;  k++;  //  cast  out  twos.  }  if  (k  ==  31)  {  throw  new  ArithmeticException(   "overflow:  gcd  is  2^31   ");  }  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  short  NS  PS  ZS  boolean  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  k  t  u  v  	projects/Math94/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	427	427	1	replace	int  v  =(int)Math.ceil((  u  +  1)/  2  +  1);	      int    v    =(int)Math.ceil((    u    +    1)/    2);    	non-compiled	[CE]  <identifier>  expected	15	None	replace
11	[BUG]  [BUGGY]  int  v  =(int)Math.ceil((  u  +  1)/  3);  [CE]  <identifier>  expected  [FE]            AssertionFailedError    [CONTEXT]        if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative      [BUGGY]  int  v  =(int)Math.ceil((  u  +  1)/  3);  [BUGGY]    int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  v  /=  2;  k++;  //  cast  out  twos.  }  if  (k  ==  31)  {  throw  new  ArithmeticException(   "overflow:  gcd  is  2^31   ");  }  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  short  NS  PS  ZS  boolean  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  k  t  u  v  	projects/Math94/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	427	427	1	replace	int  v  =(int)Math.ceil((  u  +  1)/  3);	      int    v    =(int)Math.ceil((    u    +    1)/    2);    	non-compiled	[CE]  <identifier>  expected	15	None	replace
12	[BUG]  [BUGGY]  int  v  =(int)Math.ceil((  u  +  1)/  4);  [CE]  <identifier>  expected  [FE]              AssertionFailedError    [CONTEXT]        if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative      [BUGGY]  int  v  =(int)Math.ceil((  u  +  1)/  4);  [BUGGY]    int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  v  /=  2;  k++;  //  cast  out  twos.  }  if  (k  ==  31)  {  throw  new  ArithmeticException(   "overflow:  gcd  is  2^31   ");  }  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  short  NS  PS  ZS  boolean  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  k  t  u  v  	projects/Math94/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	427	427	1	replace	int  v  =(int)Math.ceil((  u  +  1)/  4);	      int    v    =(int)Math.ceil((    u    +    1)/    2);    	non-compiled	[CE]  <identifier>  expected	15	None	replace
13	[BUG]  [BUGGY]  int  v  =(int)Math.ceil((  u  *  2)/  2);  [CE]  <identifier>  expected  [FE]                AssertionFailedError    [CONTEXT]        if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative      [BUGGY]  int  v  =(int)Math.ceil((  u  *  2)/  2);  [BUGGY]    int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  v  /=  2;  k++;  //  cast  out  twos.  }  if  (k  ==  31)  {  throw  new  ArithmeticException(   "overflow:  gcd  is  2^31   ");  }  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  short  NS  PS  ZS  boolean  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  k  t  u  v  	projects/Math94/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	427	427	1	replace	int  v  =(int)Math.ceil((  u  *  2)/  2);	      int    v    =(int)Math.ceil((    u    +    1)/    2);    	non-compiled	[CE]  <identifier>  expected	15	None	replace
14	[BUG]  [BUGGY]  float  v  =(float)Math.pow(10,  y);  [CE]  <identifier>  expected  [FE]                AssertionFailedError    [CONTEXT]        if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative      [BUGGY]  float  v  =(float)Math.pow(10,  y);  [BUGGY]    int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  v  /=  2;  k++;  //  cast  out  twos.  }  if  (k  ==  31)  {  throw  new  ArithmeticException(   "overflow:  gcd  is  2^31   ");  }  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  short  NS  PS  ZS  boolean  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  k  t  u  v  	projects/Math94/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	427	427	1	replace	float  v  =(float)Math.pow(10,  y);	      int    v    =(int)Math.pow(10,    y);    	non-compiled	[CE]  <identifier>  expected	18	None	replace
15	[BUG]  [BUGGY]  int  v  =(int)Math.pow(10,  3);  [CE]  <identifier>  expected  [FE]                  AssertionFailedError    [CONTEXT]        if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative      [BUGGY]  int  v  =(int)Math.pow(10,  3);  [BUGGY]    int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  v  /=  2;  k++;  //  cast  out  twos.  }  if  (k  ==  31)  {  throw  new  ArithmeticException(   "overflow:  gcd  is  2^31   ");  }  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  short  NS  PS  ZS  boolean  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  k  t  u  v  	projects/Math94/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	427	427	1	replace	int  v  =(int)Math.pow(10,  3);	      int    v    =(int)Math.pow(10,    y);    	non-compiled	[CE]  <identifier>  expected	18	None	replace
16	[BUG]  [BUGGY]  int  v  =(int)Math.pow(10,  MAX_VALUE);  [CE]  <identifier>  expected  [FE]                    AssertionFailedError    [CONTEXT]        if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative      [BUGGY]  int  v  =(int)Math.pow(10,  MAX_VALUE);  [BUGGY]    int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  v  /=  2;  k++;  //  cast  out  twos.  }  if  (k  ==  31)  {  throw  new  ArithmeticException(   "overflow:  gcd  is  2^31   ");  }  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  short  NS  PS  ZS  boolean  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  k  t  u  v  	projects/Math94/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	427	427	1	replace	int  v  =(int)Math.pow(10,  MAX_VALUE);	      int    v    =(int)Math.pow(10,    y);    	non-compiled	[CE]  <identifier>  expected	18	None	replace
17	[BUG]  [BUGGY]  int  v  =(int)Math.pow(10,  12);  [CE]  <identifier>  expected  [FE]                      AssertionFailedError    [CONTEXT]        if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative      [BUGGY]  int  v  =(int)Math.pow(10,  12);  [BUGGY]    int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  v  /=  2;  k++;  //  cast  out  twos.  }  if  (k  ==  31)  {  throw  new  ArithmeticException(   "overflow:  gcd  is  2^31   ");  }  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  short  NS  PS  ZS  boolean  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  k  t  u  v  	projects/Math94/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	427	427	1	replace	int  v  =(int)Math.pow(10,  12);	      int    v    =(int)Math.pow(10,    y);    	non-compiled	[CE]  <identifier>  expected	18	None	replace
18	[BUG]  [BUGGY]  U  =  -u;  [CE]  <identifier>  expected  [FE]        AssertionFailedError    [CONTEXT]        if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative      [BUGGY]  U  =  -u;  [BUGGY]    int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  v  /=  2;  k++;  //  cast  out  twos.  }  if  (k  ==  31)  {  throw  new  ArithmeticException(   "overflow:  gcd  is  2^31   ");  }  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  short  NS  PS  ZS  boolean  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  k  t  u  v  	projects/Math94/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	427	427	1	replace	U  =  -u;	      if(t    >    0)    {    u    =    -u;    }    	non-compiled	[CE]  <identifier>  expected	14	None	replace
19	[BUG]  [BUGGY]  Ucraina  <  Object>  u  =  -u;  [CE]  <identifier>  expected  [FE]          AssertionFailedError    [CONTEXT]        if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative      [BUGGY]  Ucraina  <  Object>  u  =  -u;  [BUGGY]    int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  v  /=  2;  k++;  //  cast  out  twos.  }  if  (k  ==  31)  {  throw  new  ArithmeticException(   "overflow:  gcd  is  2^31   ");  }  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  short  NS  PS  ZS  boolean  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  k  t  u  v  	projects/Math94/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	427	427	1	replace	Ucraina  <  Object>  u  =  -u;	      if(t    >    0)    {    u    =    -u;    }    	non-compiled	[CE]  <identifier>  expected	14	None	replace
20	[BUG]  [BUGGY]  int  u  =(int)Math.rint((  u  -  1)/  2  +  1);  [CE]  <identifier>  expected  [FE]          AssertionFailedError    [CONTEXT]        if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative      [BUGGY]  int  u  =(int)Math.rint((  u  -  1)/  2  +  1);  [BUGGY]    int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  v  /=  2;  k++;  //  cast  out  twos.  }  if  (k  ==  31)  {  throw  new  ArithmeticException(   "overflow:  gcd  is  2^31   ");  }  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  short  NS  PS  ZS  boolean  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  k  t  u  v  	projects/Math94/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	427	427	1	replace	int  u  =(int)Math.rint((  u  -  1)/  2  +  1);	      int    u    =(int)Math.rint((    u    -    1)/    2);    	non-compiled	[CE]  <identifier>  expected	6	None	replace
21	[BUG]  [BUGGY]  int  u  =(int)Math.rint((  u  -  1)/  3);  [CE]  <identifier>  expected  [FE]            AssertionFailedError    [CONTEXT]        if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative      [BUGGY]  int  u  =(int)Math.rint((  u  -  1)/  3);  [BUGGY]    int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  v  /=  2;  k++;  //  cast  out  twos.  }  if  (k  ==  31)  {  throw  new  ArithmeticException(   "overflow:  gcd  is  2^31   ");  }  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  short  NS  PS  ZS  boolean  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  k  t  u  v  	projects/Math94/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	427	427	1	replace	int  u  =(int)Math.rint((  u  -  1)/  3);	      int    u    =(int)Math.rint((    u    -    1)/    2);    	non-compiled	[CE]  <identifier>  expected	6	None	replace
22	[BUG]  [BUGGY]  int  u  =(int)Math.rint((  u  -  1)/  4);  [CE]  <identifier>  expected  [FE]              AssertionFailedError    [CONTEXT]        if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative      [BUGGY]  int  u  =(int)Math.rint((  u  -  1)/  4);  [BUGGY]    int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  v  /=  2;  k++;  //  cast  out  twos.  }  if  (k  ==  31)  {  throw  new  ArithmeticException(   "overflow:  gcd  is  2^31   ");  }  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  short  NS  PS  ZS  boolean  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  k  t  u  v  	projects/Math94/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	427	427	1	replace	int  u  =(int)Math.rint((  u  -  1)/  4);	      int    u    =(int)Math.rint((    u    -    1)/    2);    	non-compiled	[CE]  <identifier>  expected	6	None	replace
23	[BUG]  [BUGGY]  int  u  =(int)Math.rint((  u  -  1)/  2  +  3);  [CE]  <identifier>  expected  [FE]                AssertionFailedError    [CONTEXT]        if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative      [BUGGY]  int  u  =(int)Math.rint((  u  -  1)/  2  +  3);  [BUGGY]    int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  v  /=  2;  k++;  //  cast  out  twos.  }  if  (k  ==  31)  {  throw  new  ArithmeticException(   "overflow:  gcd  is  2^31   ");  }  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  short  NS  PS  ZS  boolean  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  k  t  u  v  	projects/Math94/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	427	427	1	replace	int  u  =(int)Math.rint((  u  -  1)/  2  +  3);	      int    u    =(int)Math.rint((    u    -    1)/    2);    	non-compiled	[CE]  <identifier>  expected	6	None	replace
24	[BUG]  [BUGGY]  int  v  =  Math.pow(10,  u);  [CE]  <identifier>  expected  [FE]            AssertionFailedError    [CONTEXT]        if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative      [BUGGY]  int  v  =  Math.pow(10,  u);  [BUGGY]    int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  v  /=  2;  k++;  //  cast  out  twos.  }  if  (k  ==  31)  {  throw  new  ArithmeticException(   "overflow:  gcd  is  2^31   ");  }  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  short  NS  PS  ZS  boolean  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  k  t  u  v  	projects/Math94/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	427	427	1	replace	int  v  =  Math.pow(10,  u);	      int    v    =    Math.pow(10,    v);    	non-compiled	[CE]  <identifier>  expected	11	None	replace
25	[BUG]  [BUGGY]  int  v  =  Math.pow(10,  0);  [CE]  <identifier>  expected  [FE]              AssertionFailedError    [CONTEXT]        if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative      [BUGGY]  int  v  =  Math.pow(10,  0);  [BUGGY]    int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  v  /=  2;  k++;  //  cast  out  twos.  }  if  (k  ==  31)  {  throw  new  ArithmeticException(   "overflow:  gcd  is  2^31   ");  }  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  short  NS  PS  ZS  boolean  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  k  t  u  v  	projects/Math94/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	427	427	1	replace	int  v  =  Math.pow(10,  0);	      int    v    =    Math.pow(10,    v);    	non-compiled	[CE]  <identifier>  expected	11	None	replace
26	[BUG]  [BUGGY]  int  v  =  Math.pow(10,  31);  [CE]  <identifier>  expected  [FE]                AssertionFailedError    [CONTEXT]        if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative      [BUGGY]  int  v  =  Math.pow(10,  31);  [BUGGY]    int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  v  /=  2;  k++;  //  cast  out  twos.  }  if  (k  ==  31)  {  throw  new  ArithmeticException(   "overflow:  gcd  is  2^31   ");  }  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  short  NS  PS  ZS  boolean  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  k  t  u  v  	projects/Math94/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	427	427	1	replace	int  v  =  Math.pow(10,  31);	      int    v    =    Math.pow(10,    v);    	non-compiled	[CE]  <identifier>  expected	11	None	replace
27	[BUG]  [BUGGY]  int  v  =  Math.pow(10,  3);  [CE]  <identifier>  expected  [FE]                  AssertionFailedError    [CONTEXT]        if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative      [BUGGY]  int  v  =  Math.pow(10,  3);  [BUGGY]    int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  v  /=  2;  k++;  //  cast  out  twos.  }  if  (k  ==  31)  {  throw  new  ArithmeticException(   "overflow:  gcd  is  2^31   ");  }  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  short  NS  PS  ZS  boolean  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  k  t  u  v  	projects/Math94/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	427	427	1	replace	int  v  =  Math.pow(10,  3);	      int    v    =    Math.pow(10,    v);    	non-compiled	[CE]  <identifier>  expected	11	None	replace
28	[BUG]  [BUGGY]  int  u  =(int)Math.rint((  u  +  1)/  2  +  1);  [CE]  <identifier>  expected  [FE]        AssertionFailedError    [CONTEXT]        if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative      [BUGGY]  int  u  =(int)Math.rint((  u  +  1)/  2  +  1);  [BUGGY]    int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  v  /=  2;  k++;  //  cast  out  twos.  }  if  (k  ==  31)  {  throw  new  ArithmeticException(   "overflow:  gcd  is  2^31   ");  }  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  short  NS  PS  ZS  boolean  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  k  t  u  v  	projects/Math94/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	427	427	1	replace	int  u  =(int)Math.rint((  u  +  1)/  2  +  1);	      int    u    =(int)Math.rint((    u    +    1)/    2);    	non-compiled	[CE]  <identifier>  expected	5	None	replace
29	[BUG]  [BUGGY]  int  u  =(int)Math.rint((  u  +  1)/  3);  [CE]  <identifier>  expected  [FE]          AssertionFailedError    [CONTEXT]        if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative      [BUGGY]  int  u  =(int)Math.rint((  u  +  1)/  3);  [BUGGY]    int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  v  /=  2;  k++;  //  cast  out  twos.  }  if  (k  ==  31)  {  throw  new  ArithmeticException(   "overflow:  gcd  is  2^31   ");  }  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  short  NS  PS  ZS  boolean  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  k  t  u  v  	projects/Math94/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	427	427	1	replace	int  u  =(int)Math.rint((  u  +  1)/  3);	      int    u    =(int)Math.rint((    u    +    1)/    2);    	non-compiled	[CE]  <identifier>  expected	5	None	replace
30	[BUG]  [BUGGY]  int  u  =(int)Math.rint((  u  +  1)/  4);  [CE]  <identifier>  expected  [FE]            AssertionFailedError    [CONTEXT]        if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative      [BUGGY]  int  u  =(int)Math.rint((  u  +  1)/  4);  [BUGGY]    int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  v  /=  2;  k++;  //  cast  out  twos.  }  if  (k  ==  31)  {  throw  new  ArithmeticException(   "overflow:  gcd  is  2^31   ");  }  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  short  NS  PS  ZS  boolean  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  k  t  u  v  	projects/Math94/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	427	427	1	replace	int  u  =(int)Math.rint((  u  +  1)/  4);	      int    u    =(int)Math.rint((    u    +    1)/    2);    	non-compiled	[CE]  <identifier>  expected	5	None	replace
31	[BUG]  [BUGGY]  int  u  =(int)Math.rint((  u  *  2)/  2);  [CE]  <identifier>  expected  [FE]              AssertionFailedError    [CONTEXT]        if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative      [BUGGY]  int  u  =(int)Math.rint((  u  *  2)/  2);  [BUGGY]    int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  v  /=  2;  k++;  //  cast  out  twos.  }  if  (k  ==  31)  {  throw  new  ArithmeticException(   "overflow:  gcd  is  2^31   ");  }  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  short  NS  PS  ZS  boolean  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  k  t  u  v  	projects/Math94/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	427	427	1	replace	int  u  =(int)Math.rint((  u  *  2)/  2);	      int    u    =(int)Math.rint((    u    +    1)/    2);    	non-compiled	[CE]  <identifier>  expected	5	None	replace
32	[BUG]  [BUGGY]  int  v  =(int)Math.log((  u  -  1)/  2  +  1);  [CE]  <identifier>  expected  [FE]            AssertionFailedError    [CONTEXT]        if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative      [BUGGY]  int  v  =(int)Math.log((  u  -  1)/  2  +  1);  [BUGGY]    int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  v  /=  2;  k++;  //  cast  out  twos.  }  if  (k  ==  31)  {  throw  new  ArithmeticException(   "overflow:  gcd  is  2^31   ");  }  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  short  NS  PS  ZS  boolean  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  k  t  u  v  	projects/Math94/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	427	427	1	replace	int  v  =(int)Math.log((  u  -  1)/  2  +  1);	      int    v    =(int)Math.log((    u    -    1)/    2);    	non-compiled	[CE]  <identifier>  expected	16	None	replace
33	[BUG]  [BUGGY]  int  v  =(int)Math.log((  u  -  1)/  3);  [CE]  <identifier>  expected  [FE]              AssertionFailedError    [CONTEXT]        if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative      [BUGGY]  int  v  =(int)Math.log((  u  -  1)/  3);  [BUGGY]    int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  v  /=  2;  k++;  //  cast  out  twos.  }  if  (k  ==  31)  {  throw  new  ArithmeticException(   "overflow:  gcd  is  2^31   ");  }  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  short  NS  PS  ZS  boolean  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  k  t  u  v  	projects/Math94/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	427	427	1	replace	int  v  =(int)Math.log((  u  -  1)/  3);	      int    v    =(int)Math.log((    u    -    1)/    2);    	non-compiled	[CE]  <identifier>  expected	16	None	replace
34	[BUG]  [BUGGY]  int  v  =(int)Math.log((  u  -  1)/  4);  [CE]  <identifier>  expected  [FE]                AssertionFailedError    [CONTEXT]        if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative      [BUGGY]  int  v  =(int)Math.log((  u  -  1)/  4);  [BUGGY]    int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  v  /=  2;  k++;  //  cast  out  twos.  }  if  (k  ==  31)  {  throw  new  ArithmeticException(   "overflow:  gcd  is  2^31   ");  }  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  short  NS  PS  ZS  boolean  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  k  t  u  v  	projects/Math94/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	427	427	1	replace	int  v  =(int)Math.log((  u  -  1)/  4);	      int    v    =(int)Math.log((    u    -    1)/    2);    	non-compiled	[CE]  <identifier>  expected	16	None	replace
35	[BUG]  [BUGGY]  int  v  =(int)Math.log((  u  -  1)/  2.0);  [CE]  <identifier>  expected  [FE]                  AssertionFailedError    [CONTEXT]        if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative      [BUGGY]  int  v  =(int)Math.log((  u  -  1)/  2.0);  [BUGGY]    int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  v  /=  2;  k++;  //  cast  out  twos.  }  if  (k  ==  31)  {  throw  new  ArithmeticException(   "overflow:  gcd  is  2^31   ");  }  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  short  NS  PS  ZS  boolean  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  k  t  u  v  	projects/Math94/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	427	427	1	replace	int  v  =(int)Math.log((  u  -  1)/  2.0);	      int    v    =(int)Math.log((    u    -    1)/    2);    	non-compiled	[CE]  <identifier>  expected	16	None	replace
36	[BUG]  [BUGGY]  u  =  -v;  [CE]  <identifier>  expected  [FE]          AssertionFailedError    [CONTEXT]        if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative      [BUGGY]  u  =  -v;  [BUGGY]    int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  v  /=  2;  k++;  //  cast  out  twos.  }  if  (k  ==  31)  {  throw  new  ArithmeticException(   "overflow:  gcd  is  2^31   ");  }  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  short  NS  PS  ZS  boolean  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  k  t  u  v  	projects/Math94/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	427	427	1	replace	u  =  -v;	      u    =    -u;    	non-compiled	[CE]  <identifier>  expected	10	None	replace
37	[BUG]  [BUGGY]  u  =  -1;  [CE]  <identifier>  expected  [FE]            AssertionFailedError    [CONTEXT]        if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative      [BUGGY]  u  =  -1;  [BUGGY]    int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  v  /=  2;  k++;  //  cast  out  twos.  }  if  (k  ==  31)  {  throw  new  ArithmeticException(   "overflow:  gcd  is  2^31   ");  }  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  short  NS  PS  ZS  boolean  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  k  t  u  v  	projects/Math94/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	427	427	1	replace	u  =  -1;	      u    =    -u;    	non-compiled	[CE]  <identifier>  expected	10	None	replace
38	[BUG]  [BUGGY]  u  =  -t;  [CE]  <identifier>  expected  [FE]              AssertionFailedError    [CONTEXT]        if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative      [BUGGY]  u  =  -t;  [BUGGY]    int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  v  /=  2;  k++;  //  cast  out  twos.  }  if  (k  ==  31)  {  throw  new  ArithmeticException(   "overflow:  gcd  is  2^31   ");  }  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  short  NS  PS  ZS  boolean  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  k  t  u  v  	projects/Math94/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	427	427	1	replace	u  =  -t;	      u    =    -u;    	non-compiled	[CE]  <identifier>  expected	10	None	replace
39	[BUG]  [BUGGY]  u  =  -2;  [CE]  <identifier>  expected  [FE]                AssertionFailedError    [CONTEXT]        if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative      [BUGGY]  u  =  -2;  [BUGGY]    int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  v  /=  2;  k++;  //  cast  out  twos.  }  if  (k  ==  31)  {  throw  new  ArithmeticException(   "overflow:  gcd  is  2^31   ");  }  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  short  NS  PS  ZS  boolean  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  k  t  u  v  	projects/Math94/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	427	427	1	replace	u  =  -2;	      u    =    -u;    	non-compiled	[CE]  <identifier>  expected	10	None	replace
40	[BUG]  [BUGGY]  int  k  =(v  <  32)?  1  :  0;  [CE]  <identifier>  expected  [FE]        AssertionFailedError    [CONTEXT]        if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative      [BUGGY]  int  k  =(v  <  32)?  1  :  0;  [BUGGY]    while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  v  /=  2;  k++;  //  cast  out  twos.  }  if  (k  ==  31)  {  throw  new  ArithmeticException(   "overflow:  gcd  is  2^31   ");  }  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  short  NS  PS  ZS  boolean  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  k  t  u  v  	projects/Math94/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	427	427	1	replace	int  k  =(v  <  32)?  1  :  0;	  int    k    =(v    <    31)?    1    :    0;    	non-compiled	[CE]  <identifier>  expected	13	None	replace
41	[BUG]  [BUGGY]  int  k  =(v  >=  31)?  1  :  0;  [CE]  <identifier>  expected  [FE]          AssertionFailedError    [CONTEXT]        if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative      [BUGGY]  int  k  =(v  >=  31)?  1  :  0;  [BUGGY]    while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  v  /=  2;  k++;  //  cast  out  twos.  }  if  (k  ==  31)  {  throw  new  ArithmeticException(   "overflow:  gcd  is  2^31   ");  }  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  short  NS  PS  ZS  boolean  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  k  t  u  v  	projects/Math94/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	427	427	1	replace	int  k  =(v  >=  31)?  1  :  0;	  int    k    =(v    <    31)?    1    :    0;    	non-compiled	[CE]  <identifier>  expected	13	None	replace
42	[BUG]  [BUGGY]  int  k  =(v  <  31)?  2  :  0;  [CE]  <identifier>  expected  [FE]            AssertionFailedError    [CONTEXT]        if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative      [BUGGY]  int  k  =(v  <  31)?  2  :  0;  [BUGGY]    while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  v  /=  2;  k++;  //  cast  out  twos.  }  if  (k  ==  31)  {  throw  new  ArithmeticException(   "overflow:  gcd  is  2^31   ");  }  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  short  NS  PS  ZS  boolean  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  k  t  u  v  	projects/Math94/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	427	427	1	replace	int  k  =(v  <  31)?  2  :  0;	  int    k    =(v    <    31)?    1    :    0;    	non-compiled	[CE]  <identifier>  expected	13	None	replace
43	[BUG]  [BUGGY]  Integer  v  =  Math.max(0,  u);  [CE]  <identifier>  expected  [FE]              AssertionFailedError    [CONTEXT]        if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative      [BUGGY]  Integer  v  =  Math.max(0,  u);  [BUGGY]    int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  v  /=  2;  k++;  //  cast  out  twos.  }  if  (k  ==  31)  {  throw  new  ArithmeticException(   "overflow:  gcd  is  2^31   ");  }  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  short  NS  PS  ZS  boolean  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  k  t  u  v  	projects/Math94/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	427	427	1	replace	Integer  v  =  Math.max(0,  u);	      Integer    v    =    Math.max(0,    v);    	non-compiled	[CE]  <identifier>  expected	12	None	replace
44	[BUG]  [BUGGY]  Integer  v  =  Math.max(1,  v);  [CE]  <identifier>  expected  [FE]                AssertionFailedError    [CONTEXT]        if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative      [BUGGY]  Integer  v  =  Math.max(1,  v);  [BUGGY]    int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  v  /=  2;  k++;  //  cast  out  twos.  }  if  (k  ==  31)  {  throw  new  ArithmeticException(   "overflow:  gcd  is  2^31   ");  }  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  short  NS  PS  ZS  boolean  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  k  t  u  v  	projects/Math94/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	427	427	1	replace	Integer  v  =  Math.max(1,  v);	      Integer    v    =    Math.max(0,    v);    	non-compiled	[CE]  <identifier>  expected	12	None	replace
45	[BUG]  [BUGGY]  Integer  v  =  Math.max(10.0,  v);  [CE]  <identifier>  expected  [FE]                  AssertionFailedError    [CONTEXT]        if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative      [BUGGY]  Integer  v  =  Math.max(10.0,  v);  [BUGGY]    int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  v  /=  2;  k++;  //  cast  out  twos.  }  if  (k  ==  31)  {  throw  new  ArithmeticException(   "overflow:  gcd  is  2^31   ");  }  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  short  NS  PS  ZS  boolean  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  k  t  u  v  	projects/Math94/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	427	427	1	replace	Integer  v  =  Math.max(10.0,  v);	      Integer    v    =    Math.max(0,    v);    	non-compiled	[CE]  <identifier>  expected	12	None	replace
46	[BUG]  [BUGGY]  Integer  v  =  Math.max(1,  0);  [CE]  <identifier>  expected  [FE]                    AssertionFailedError    [CONTEXT]        if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative      [BUGGY]  Integer  v  =  Math.max(1,  0);  [BUGGY]    int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  v  /=  2;  k++;  //  cast  out  twos.  }  if  (k  ==  31)  {  throw  new  ArithmeticException(   "overflow:  gcd  is  2^31   ");  }  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  short  NS  PS  ZS  boolean  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  k  t  u  v  	projects/Math94/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	427	427	1	replace	Integer  v  =  Math.max(1,  0);	      Integer    v    =    Math.max(0,    v);    	non-compiled	[CE]  <identifier>  expected	12	None	replace
47	[BUG]  [BUGGY]  int  k  =  1  <  <  2;  [CE]  <identifier>  expected  [FE]        AssertionFailedError    [CONTEXT]        if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative      [BUGGY]  int  k  =  1  <  <  2;  [BUGGY]    while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  v  /=  2;  k++;  //  cast  out  twos.  }  if  (k  ==  31)  {  throw  new  ArithmeticException(   "overflow:  gcd  is  2^31   ");  }  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  short  NS  PS  ZS  boolean  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  k  t  u  v  	projects/Math94/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	427	427	1	replace	int  k  =  1  <  <  2;	  int    k    =    1;    	non-compiled	[CE]  <identifier>  expected	1	None	replace
48	[BUG]  [BUGGY]  int  k  =(int)Math.rint((  u  +  1)/  2);  [CE]  <identifier>  expected  [FE]              AssertionFailedError    [CONTEXT]        if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative      [BUGGY]  int  k  =(int)Math.rint((  u  +  1)/  2);  [BUGGY]    while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  v  /=  2;  k++;  //  cast  out  twos.  }  if  (k  ==  31)  {  throw  new  ArithmeticException(   "overflow:  gcd  is  2^31   ");  }  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  short  NS  PS  ZS  boolean  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  k  t  u  v  	projects/Math94/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	427	427	1	replace	int  k  =(int)Math.rint((  u  +  1)/  2);	      	non-compiled	[CE]  <identifier>  expected	4	None	replace
49	[BUG]  [BUGGY]  int  k  =(int)Math.log(u);  [CE]  <identifier>  expected  [FE]                AssertionFailedError    [CONTEXT]        if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative      [BUGGY]  int  k  =(int)Math.log(u);  [BUGGY]    while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  v  /=  2;  k++;  //  cast  out  twos.  }  if  (k  ==  31)  {  throw  new  ArithmeticException(   "overflow:  gcd  is  2^31   ");  }  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  short  NS  PS  ZS  boolean  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  k  t  u  v  	projects/Math94/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	427	427	1	replace	int  k  =(int)Math.log(u);	      	non-compiled	[CE]  <identifier>  expected	4	None	replace
50	[BUG]  [BUGGY]  int  k  =(int)Math.rint((  u  -  1)/  2);  [CE]  <identifier>  expected  [FE]                  AssertionFailedError    [CONTEXT]        if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative      [BUGGY]  int  k  =(int)Math.rint((  u  -  1)/  2);  [BUGGY]    while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  v  /=  2;  k++;  //  cast  out  twos.  }  if  (k  ==  31)  {  throw  new  ArithmeticException(   "overflow:  gcd  is  2^31   ");  }  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  short  NS  PS  ZS  boolean  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  k  t  u  v  	projects/Math94/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	427	427	1	replace	int  k  =(int)Math.rint((  u  -  1)/  2);	      	non-compiled	[CE]  <identifier>  expected	4	None	replace
51	[BUG]  [BUGGY]  int  k  =(int)Math.floor(u);  [CE]  <identifier>  expected  [FE]                    AssertionFailedError    [CONTEXT]        if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative      [BUGGY]  int  k  =(int)Math.floor(u);  [BUGGY]    while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  v  /=  2;  k++;  //  cast  out  twos.  }  if  (k  ==  31)  {  throw  new  ArithmeticException(   "overflow:  gcd  is  2^31   ");  }  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  short  NS  PS  ZS  boolean  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  k  t  u  v  	projects/Math94/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	427	427	1	replace	int  k  =(int)Math.floor(u);	      	non-compiled	[CE]  <identifier>  expected	4	None	replace
52	[BUG]  [BUGGY]  Integer  v  =  Math.min(u,  v  -  1);  [CE]  <identifier>  expected  [FE]        AssertionFailedError    [CONTEXT]        if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative      [BUGGY]  Integer  v  =  Math.min(u,  v  -  1);  [BUGGY]    int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  v  /=  2;  k++;  //  cast  out  twos.  }  if  (k  ==  31)  {  throw  new  ArithmeticException(   "overflow:  gcd  is  2^31   ");  }  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  short  NS  PS  ZS  boolean  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  k  t  u  v  	projects/Math94/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	427	427	1	replace	Integer  v  =  Math.min(u,  v  -  1);	      Integer    v    =    Math.min(u,    v);    	non-compiled	[CE]  <identifier>  expected	9	None	replace
53	[BUG]  [BUGGY]  Integer  v  =  Math.min(u,  v  +  1);  [CE]  <identifier>  expected  [FE]          AssertionFailedError    [CONTEXT]        if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative      [BUGGY]  Integer  v  =  Math.min(u,  v  +  1);  [BUGGY]    int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  v  /=  2;  k++;  //  cast  out  twos.  }  if  (k  ==  31)  {  throw  new  ArithmeticException(   "overflow:  gcd  is  2^31   ");  }  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  short  NS  PS  ZS  boolean  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  k  t  u  v  	projects/Math94/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	427	427	1	replace	Integer  v  =  Math.min(u,  v  +  1);	      Integer    v    =    Math.min(u,    v);    	non-compiled	[CE]  <identifier>  expected	9	None	replace
54	[BUG]  [BUGGY]  Integer  v  =  Math.min(u,  0);  [CE]  <identifier>  expected  [FE]            AssertionFailedError    [CONTEXT]        if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative      [BUGGY]  Integer  v  =  Math.min(u,  0);  [BUGGY]    int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  v  /=  2;  k++;  //  cast  out  twos.  }  if  (k  ==  31)  {  throw  new  ArithmeticException(   "overflow:  gcd  is  2^31   ");  }  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  short  NS  PS  ZS  boolean  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  k  t  u  v  	projects/Math94/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	427	427	1	replace	Integer  v  =  Math.min(u,  0);	      Integer    v    =    Math.min(u,    v);    	non-compiled	[CE]  <identifier>  expected	9	None	replace
55	[BUG]  [BUGGY]  Integer  v  =  Math.min(u,  31);  [CE]  <identifier>  expected  [FE]              AssertionFailedError    [CONTEXT]        if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative      [BUGGY]  Integer  v  =  Math.min(u,  31);  [BUGGY]    int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  v  /=  2;  k++;  //  cast  out  twos.  }  if  (k  ==  31)  {  throw  new  ArithmeticException(   "overflow:  gcd  is  2^31   ");  }  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  short  NS  PS  ZS  boolean  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  k  t  u  v  	projects/Math94/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	427	427	1	replace	Integer  v  =  Math.min(u,  31);	      Integer    v    =    Math.min(u,    v);    	non-compiled	[CE]  <identifier>  expected	9	None	replace
56	[BUG]  [BUGGY]  int  v  =(int)Math.ceil((  u  -  1)/  2  +  1);  [CE]  <identifier>  expected  [FE]              AssertionFailedError    [CONTEXT]        if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative      [BUGGY]  int  v  =(int)Math.ceil((  u  -  1)/  2  +  1);  [BUGGY]    int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  v  /=  2;  k++;  //  cast  out  twos.  }  if  (k  ==  31)  {  throw  new  ArithmeticException(   "overflow:  gcd  is  2^31   ");  }  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  short  NS  PS  ZS  boolean  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  k  t  u  v  	projects/Math94/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	427	427	1	replace	int  v  =(int)Math.ceil((  u  -  1)/  2  +  1);	      int    v    =(int)Math.ceil((    u    -    1)/    2);    	non-compiled	[CE]  <identifier>  expected	17	None	replace
57	[BUG]  [BUGGY]  int  v  =(int)Math.ceil((  u  -  1)/  3);  [CE]  <identifier>  expected  [FE]                AssertionFailedError    [CONTEXT]        if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative      [BUGGY]  int  v  =(int)Math.ceil((  u  -  1)/  3);  [BUGGY]    int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  v  /=  2;  k++;  //  cast  out  twos.  }  if  (k  ==  31)  {  throw  new  ArithmeticException(   "overflow:  gcd  is  2^31   ");  }  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  short  NS  PS  ZS  boolean  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  k  t  u  v  	projects/Math94/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	427	427	1	replace	int  v  =(int)Math.ceil((  u  -  1)/  3);	      int    v    =(int)Math.ceil((    u    -    1)/    2);    	non-compiled	[CE]  <identifier>  expected	17	None	replace
58	[BUG]  [BUGGY]  int  v  =(int)Math.ceil((  u  -  1)/  4);  [CE]  <identifier>  expected  [FE]                  AssertionFailedError    [CONTEXT]        if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative      [BUGGY]  int  v  =(int)Math.ceil((  u  -  1)/  4);  [BUGGY]    int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  v  /=  2;  k++;  //  cast  out  twos.  }  if  (k  ==  31)  {  throw  new  ArithmeticException(   "overflow:  gcd  is  2^31   ");  }  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  short  NS  PS  ZS  boolean  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  k  t  u  v  	projects/Math94/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	427	427	1	replace	int  v  =(int)Math.ceil((  u  -  1)/  4);	      int    v    =(int)Math.ceil((    u    -    1)/    2);    	non-compiled	[CE]  <identifier>  expected	17	None	replace
59	[BUG]  [BUGGY]  int  v  =(int)Math.ceil((  u  -  1)/  1);  [CE]  <identifier>  expected  [FE]                    AssertionFailedError    [CONTEXT]        if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative      [BUGGY]  int  v  =(int)Math.ceil((  u  -  1)/  1);  [BUGGY]    int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  v  /=  2;  k++;  //  cast  out  twos.  }  if  (k  ==  31)  {  throw  new  ArithmeticException(   "overflow:  gcd  is  2^31   ");  }  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  short  NS  PS  ZS  boolean  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  k  t  u  v  	projects/Math94/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	427	427	1	replace	int  v  =(int)Math.ceil((  u  -  1)/  1);	      int    v    =(int)Math.ceil((    u    -    1)/    2);    	non-compiled	[CE]  <identifier>  expected	17	None	replace
60	[BUG]  [BUGGY]  int  k  =(v  >  31)?  1  :  0;  [CE]  <identifier>  expected  [FE]            AssertionFailedError    [CONTEXT]        if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative      [BUGGY]  int  k  =(v  >  31)?  1  :  0;  [BUGGY]    while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  v  /=  2;  k++;  //  cast  out  twos.  }  if  (k  ==  31)  {  throw  new  ArithmeticException(   "overflow:  gcd  is  2^31   ");  }  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  short  NS  PS  ZS  boolean  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  k  t  u  v  	projects/Math94/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	427	427	1	replace	int  k  =(v  >  31)?  1  :  0;	  int    k    =    2;    	non-compiled	[CE]  <identifier>  expected	3	None	replace
61	[BUG]  [BUGGY]  MutableToJavaIdentifiers.checkArgument(t  >  0);  [CE]  <identifier>  expected  [FE]        AssertionFailedError    [CONTEXT]        if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative      [BUGGY]  MutableToJavaIdentifiers.checkArgument(t  >  0);  [BUGGY]    int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  v  /=  2;  k++;  //  cast  out  twos.  }  if  (k  ==  31)  {  throw  new  ArithmeticException(   "overflow:  gcd  is  2^31   ");  }  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  short  NS  PS  ZS  boolean  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  k  t  u  v  	projects/Math94/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	427	427	1	replace	MutableToJavaIdentifiers.checkArgument(t  >  0);	      if(t    >    0)    {    u    =    -u;    }    	non-compiled	[CE]  <identifier>  expected	14	None	replace
62	[BUG]  [BUGGY]  MutableToJavaIdentifiers.checkNotNull(u);  [CE]  <identifier>  expected  [FE]          AssertionFailedError    [CONTEXT]        if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative      [BUGGY]  MutableToJavaIdentifiers.checkNotNull(u);  [BUGGY]    int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  v  /=  2;  k++;  //  cast  out  twos.  }  if  (k  ==  31)  {  throw  new  ArithmeticException(   "overflow:  gcd  is  2^31   ");  }  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  short  NS  PS  ZS  boolean  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  k  t  u  v  	projects/Math94/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	427	427	1	replace	MutableToJavaIdentifiers.checkNotNull(u);	      if(t    >    0)    {    u    =    -u;    }    	non-compiled	[CE]  <identifier>  expected	14	None	replace
63	[BUG]  [BUGGY]  int  k  =  1  <  <  4;  [CE]  <identifier>  expected  [FE]        AssertionFailedError    [CONTEXT]        if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative      [BUGGY]  int  k  =  1  <  <  4;  [BUGGY]    while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  v  /=  2;  k++;  //  cast  out  twos.  }  if  (k  ==  31)  {  throw  new  ArithmeticException(   "overflow:  gcd  is  2^31   ");  }  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  short  NS  PS  ZS  boolean  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  k  t  u  v  	projects/Math94/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	427	427	1	replace	int  k  =  1  <  <  4;	  int    k    =    1;    	non-compiled	[CE]  <identifier>  expected	1	None	replace
64	[BUG]  [BUGGY]  int  v  =(int)Math.pow(10,  y  +  1);  [CE]  <identifier>  expected  [FE]                AssertionFailedError    [CONTEXT]        if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative      [BUGGY]  int  v  =(int)Math.pow(10,  y  +  1);  [BUGGY]    int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  v  /=  2;  k++;  //  cast  out  twos.  }  if  (k  ==  31)  {  throw  new  ArithmeticException(   "overflow:  gcd  is  2^31   ");  }  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  short  NS  PS  ZS  boolean  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  k  t  u  v  	projects/Math94/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	427	427	1	replace	int  v  =(int)Math.pow(10,  y  +  1);	      int    v    =(int)Math.pow(10,    y);    	non-compiled	[CE]  <identifier>  expected	18	None	replace
65	[BUG]  [BUGGY]  int  v  =(int)Math.pow(10,  x);  [CE]  <identifier>  expected  [FE]                  AssertionFailedError    [CONTEXT]        if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative      [BUGGY]  int  v  =(int)Math.pow(10,  x);  [BUGGY]    int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  v  /=  2;  k++;  //  cast  out  twos.  }  if  (k  ==  31)  {  throw  new  ArithmeticException(   "overflow:  gcd  is  2^31   ");  }  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  short  NS  PS  ZS  boolean  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  k  t  u  v  	projects/Math94/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	427	427	1	replace	int  v  =(int)Math.pow(10,  x);	      int    v    =(int)Math.pow(10,    y);    	non-compiled	[CE]  <identifier>  expected	18	None	replace
66	[BUG]  [BUGGY]  int  k  =(v  <  >  31)?  1  :  0;  [CE]  <identifier>  expected  [FE]        AssertionFailedError    [CONTEXT]        if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative      [BUGGY]  int  k  =(v  <  >  31)?  1  :  0;  [BUGGY]    while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  v  /=  2;  k++;  //  cast  out  twos.  }  if  (k  ==  31)  {  throw  new  ArithmeticException(   "overflow:  gcd  is  2^31   ");  }  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  short  NS  PS  ZS  boolean  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  k  t  u  v  	projects/Math94/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	427	427	1	replace	int  k  =(v  <  >  31)?  1  :  0;	  int    k    =(v    <    31)?    1    :    0;    	non-compiled	[CE]  <identifier>  expected	13	None	replace
67	[BUG]  [BUGGY]  int  k  =(v  <  1)?  1  :  0;  [CE]  <identifier>  expected  [FE]          AssertionFailedError    [CONTEXT]        if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative      [BUGGY]  int  k  =(v  <  1)?  1  :  0;  [BUGGY]    while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  v  /=  2;  k++;  //  cast  out  twos.  }  if  (k  ==  31)  {  throw  new  ArithmeticException(   "overflow:  gcd  is  2^31   ");  }  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  short  NS  PS  ZS  boolean  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  k  t  u  v  	projects/Math94/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	427	427	1	replace	int  k  =(v  <  1)?  1  :  0;	  int    k    =(v    <    31)?    1    :    0;    	non-compiled	[CE]  <identifier>  expected	13	None	replace
68	[BUG]  [BUGGY]  int  u  =(int)Math.pow(10,  v  -  1);  [CE]  <identifier>  expected  [FE]            AssertionFailedError    [CONTEXT]        if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative      [BUGGY]  int  u  =(int)Math.pow(10,  v  -  1);  [BUGGY]    int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  v  /=  2;  k++;  //  cast  out  twos.  }  if  (k  ==  31)  {  throw  new  ArithmeticException(   "overflow:  gcd  is  2^31   ");  }  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  short  NS  PS  ZS  boolean  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  k  t  u  v  	projects/Math94/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	427	427	1	replace	int  u  =(int)Math.pow(10,  v  -  1);	      int    u    =(int)Math.pow(10,    v);    	non-compiled	[CE]  <identifier>  expected	7	None	replace
69	[BUG]  [BUGGY]  int  u  =(int)Math.pow(10,  16);  [CE]  <identifier>  expected  [FE]              AssertionFailedError    [CONTEXT]        if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative      [BUGGY]  int  u  =(int)Math.pow(10,  16);  [BUGGY]    int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  v  /=  2;  k++;  //  cast  out  twos.  }  if  (k  ==  31)  {  throw  new  ArithmeticException(   "overflow:  gcd  is  2^31   ");  }  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  short  NS  PS  ZS  boolean  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  k  t  u  v  	projects/Math94/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	427	427	1	replace	int  u  =(int)Math.pow(10,  16);	      int    u    =(int)Math.pow(10,    v);    	non-compiled	[CE]  <identifier>  expected	7	None	replace
70	[BUG]  [BUGGY]  float  v  =(float)Math.ceil((  u  +  1)/  2);  [CE]  <identifier>  expected  [FE]          AssertionFailedError    [CONTEXT]        if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative      [BUGGY]  float  v  =(float)Math.ceil((  u  +  1)/  2);  [BUGGY]    int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  v  /=  2;  k++;  //  cast  out  twos.  }  if  (k  ==  31)  {  throw  new  ArithmeticException(   "overflow:  gcd  is  2^31   ");  }  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  short  NS  PS  ZS  boolean  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  k  t  u  v  	projects/Math94/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	427	427	1	replace	float  v  =(float)Math.ceil((  u  +  1)/  2);	      int    v    =(int)Math.ceil((    u    +    1)/    2);    	non-compiled	[CE]  <identifier>  expected	15	None	replace
71	[BUG]  [BUGGY]  Integer  v  =  Math.min(u,  2);  [CE]  <identifier>  expected  [FE]        AssertionFailedError    [CONTEXT]        if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative      [BUGGY]  Integer  v  =  Math.min(u,  2);  [BUGGY]    int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  v  /=  2;  k++;  //  cast  out  twos.  }  if  (k  ==  31)  {  throw  new  ArithmeticException(   "overflow:  gcd  is  2^31   ");  }  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  short  NS  PS  ZS  boolean  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  k  t  u  v  	projects/Math94/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	427	427	1	replace	Integer  v  =  Math.min(u,  2);	      Integer    v    =    Math.min(u,    v);    	non-compiled	[CE]  <identifier>  expected	9	None	replace
72	[BUG]  [BUGGY]  k  =  Math.pow(10,  v);  [CE]  <identifier>  expected  [FE]              AssertionFailedError    [CONTEXT]        if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative      [BUGGY]  k  =  Math.pow(10,  v);  [BUGGY]    while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  v  /=  2;  k++;  //  cast  out  twos.  }  if  (k  ==  31)  {  throw  new  ArithmeticException(   "overflow:  gcd  is  2^31   ");  }  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  short  NS  PS  ZS  boolean  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  k  t  u  v  	projects/Math94/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	427	427	1	replace	k  =  Math.pow(10,  v);	      	non-compiled	[CE]  <identifier>  expected	4	None	replace
73	[BUG]  [BUGGY]  int  k  =(int)Math.pow(10,  v);  [CE]  <identifier>  expected  [FE]                AssertionFailedError    [CONTEXT]        if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative      [BUGGY]  int  k  =(int)Math.pow(10,  v);  [BUGGY]    while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  v  /=  2;  k++;  //  cast  out  twos.  }  if  (k  ==  31)  {  throw  new  ArithmeticException(   "overflow:  gcd  is  2^31   ");  }  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  short  NS  PS  ZS  boolean  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  k  t  u  v  	projects/Math94/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	427	427	1	replace	int  k  =(int)Math.pow(10,  v);	      	non-compiled	[CE]  <identifier>  expected	4	None	replace
74	[BUG]  [BUGGY]  k  =  Math.min(k,  v);  [CE]  <identifier>  expected  [FE]                  AssertionFailedError    [CONTEXT]        if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative      [BUGGY]  k  =  Math.min(k,  v);  [BUGGY]    while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  v  /=  2;  k++;  //  cast  out  twos.  }  if  (k  ==  31)  {  throw  new  ArithmeticException(   "overflow:  gcd  is  2^31   ");  }  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  short  NS  PS  ZS  boolean  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  k  t  u  v  	projects/Math94/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	427	427	1	replace	k  =  Math.min(k,  v);	      	non-compiled	[CE]  <identifier>  expected	4	None	replace
75	[BUG]  [BUGGY]  Integer  v  =  Math.max(0.0,  v);  [CE]  <identifier>  expected  [FE]              AssertionFailedError    [CONTEXT]        if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative      [BUGGY]  Integer  v  =  Math.max(0.0,  v);  [BUGGY]    int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  v  /=  2;  k++;  //  cast  out  twos.  }  if  (k  ==  31)  {  throw  new  ArithmeticException(   "overflow:  gcd  is  2^31   ");  }  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  short  NS  PS  ZS  boolean  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  k  t  u  v  	projects/Math94/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	427	427	1	replace	Integer  v  =  Math.max(0.0,  v);	      Integer    v    =    Math.max(0,    v);    	non-compiled	[CE]  <identifier>  expected	12	None	replace
76	[BUG]  [BUGGY]  u  =  -n;  [CE]  <identifier>  expected  [FE]          AssertionFailedError    [CONTEXT]        if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative      [BUGGY]  u  =  -n;  [BUGGY]    int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  v  /=  2;  k++;  //  cast  out  twos.  }  if  (k  ==  31)  {  throw  new  ArithmeticException(   "overflow:  gcd  is  2^31   ");  }  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  short  NS  PS  ZS  boolean  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  k  t  u  v  	projects/Math94/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	427	427	1	replace	u  =  -n;	      u    =    -u;    	non-compiled	[CE]  <identifier>  expected	10	None	replace
77	[BUG]  [BUGGY]  int  u  =(int)Math.rint((  v  +  1)/  2);  [CE]  <identifier>  expected  [FE]        AssertionFailedError    [CONTEXT]        if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative      [BUGGY]  int  u  =(int)Math.rint((  v  +  1)/  2);  [BUGGY]    int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  v  /=  2;  k++;  //  cast  out  twos.  }  if  (k  ==  31)  {  throw  new  ArithmeticException(   "overflow:  gcd  is  2^31   ");  }  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  short  NS  PS  ZS  boolean  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  k  t  u  v  	projects/Math94/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	427	427	1	replace	int  u  =(int)Math.rint((  v  +  1)/  2);	      int    u    =(int)Math.rint((    u    +    1)/    2);    	non-compiled	[CE]  <identifier>  expected	5	None	replace
78	[BUG]  [BUGGY]  int  u  =(int)Math.rint((  v  -  1)/  2);  [CE]  <identifier>  expected  [FE]          AssertionFailedError    [CONTEXT]        if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative      [BUGGY]  int  u  =(int)Math.rint((  v  -  1)/  2);  [BUGGY]    int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  v  /=  2;  k++;  //  cast  out  twos.  }  if  (k  ==  31)  {  throw  new  ArithmeticException(   "overflow:  gcd  is  2^31   ");  }  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  short  NS  PS  ZS  boolean  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  k  t  u  v  	projects/Math94/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	427	427	1	replace	int  u  =(int)Math.rint((  v  -  1)/  2);	      int    u    =(int)Math.rint((    u    -    1)/    2);    	non-compiled	[CE]  <identifier>  expected	6	None	replace
79	[BUG]  [BUGGY]  int  k  =  31  +  1;  [CE]  <identifier>  expected  [FE]          AssertionFailedError    [CONTEXT]        if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative      [BUGGY]  int  k  =  31  +  1;  [BUGGY]    while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  v  /=  2;  k++;  //  cast  out  twos.  }  if  (k  ==  31)  {  throw  new  ArithmeticException(   "overflow:  gcd  is  2^31   ");  }  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  short  NS  PS  ZS  boolean  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  k  t  u  v  	projects/Math94/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	427	427	1	replace	int  k  =  31  +  1;	  int    k    =    31;    	non-compiled	[CE]  <identifier>  expected	2	None	replace
80	[BUG]  [BUGGY]  int  k  =  29;  [CE]  <identifier>  expected  [FE]            AssertionFailedError    [CONTEXT]        if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative      [BUGGY]  int  k  =  29;  [BUGGY]    while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  v  /=  2;  k++;  //  cast  out  twos.  }  if  (k  ==  31)  {  throw  new  ArithmeticException(   "overflow:  gcd  is  2^31   ");  }  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  short  NS  PS  ZS  boolean  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  k  t  u  v  	projects/Math94/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	427	427	1	replace	int  k  =  29;	  int    k    =    31;    	non-compiled	[CE]  <identifier>  expected	2	None	replace
81	[BUG]  [BUGGY]  float  v  =(float)Math.ceil((  u  -  1)/  2);  [CE]  <identifier>  expected  [FE]              AssertionFailedError    [CONTEXT]        if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative      [BUGGY]  float  v  =(float)Math.ceil((  u  -  1)/  2);  [BUGGY]    int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  v  /=  2;  k++;  //  cast  out  twos.  }  if  (k  ==  31)  {  throw  new  ArithmeticException(   "overflow:  gcd  is  2^31   ");  }  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  short  NS  PS  ZS  boolean  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  k  t  u  v  	projects/Math94/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	427	427	1	replace	float  v  =(float)Math.ceil((  u  -  1)/  2);	      int    v    =(int)Math.ceil((    u    -    1)/    2);    	non-compiled	[CE]  <identifier>  expected	17	None	replace
82	[BUG]  [BUGGY]  int  u  =(int)Math.floor(v  +  1);  [CE]  <identifier>  expected  [FE]              AssertionFailedError    [CONTEXT]        if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative      [BUGGY]  int  u  =(int)Math.floor(v  +  1);  [BUGGY]    int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  v  /=  2;  k++;  //  cast  out  twos.  }  if  (k  ==  31)  {  throw  new  ArithmeticException(   "overflow:  gcd  is  2^31   ");  }  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  short  NS  PS  ZS  boolean  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  k  t  u  v  	projects/Math94/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	427	427	1	replace	int  u  =(int)Math.floor(v  +  1);	      int    u    =(int)Math.floor(v);    	non-compiled	[CE]  <identifier>  expected	8	None	replace
83	[BUG]  [BUGGY]  int  v  =(int)Math.rint((  u  -  1)/  2);  [CE]  <identifier>  expected  [FE]            AssertionFailedError    [CONTEXT]        if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative      [BUGGY]  int  v  =(int)Math.rint((  u  -  1)/  2);  [BUGGY]    int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  v  /=  2;  k++;  //  cast  out  twos.  }  if  (k  ==  31)  {  throw  new  ArithmeticException(   "overflow:  gcd  is  2^31   ");  }  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  short  NS  PS  ZS  boolean  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  k  t  u  v  	projects/Math94/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	427	427	1	replace	int  v  =(int)Math.rint((  u  -  1)/  2);	      int    v    =(int)Math.log((    u    -    1)/    2);    	non-compiled	[CE]  <identifier>  expected	16	None	replace
84	[BUG]  [BUGGY]  int  v  =(int)Math.log((  u  -  1)/  1);  [CE]  <identifier>  expected  [FE]              AssertionFailedError    [CONTEXT]        if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative      [BUGGY]  int  v  =(int)Math.log((  u  -  1)/  1);  [BUGGY]    int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  v  /=  2;  k++;  //  cast  out  twos.  }  if  (k  ==  31)  {  throw  new  ArithmeticException(   "overflow:  gcd  is  2^31   ");  }  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  short  NS  PS  ZS  boolean  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  k  t  u  v  	projects/Math94/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	427	427	1	replace	int  v  =(int)Math.log((  u  -  1)/  1);	      int    v    =(int)Math.log((    u    -    1)/    2);    	non-compiled	[CE]  <identifier>  expected	16	None	replace
85	[BUG]  [BUGGY]  int  v  =  Math.pow(10,  -u);  [CE]  <identifier>  expected  [FE]            AssertionFailedError    [CONTEXT]        if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative      [BUGGY]  int  v  =  Math.pow(10,  -u);  [BUGGY]    int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  v  /=  2;  k++;  //  cast  out  twos.  }  if  (k  ==  31)  {  throw  new  ArithmeticException(   "overflow:  gcd  is  2^31   ");  }  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  short  NS  PS  ZS  boolean  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  k  t  u  v  	projects/Math94/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	427	427	1	replace	int  v  =  Math.pow(10,  -u);	      int    v    =    Math.pow(10,    v);    	non-compiled	[CE]  <identifier>  expected	11	None	replace
86	[BUG]  [BUGGY]  int  v  =  Math.pow(10,  -1);  [CE]  <identifier>  expected  [FE]              AssertionFailedError    [CONTEXT]        if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative      [BUGGY]  int  v  =  Math.pow(10,  -1);  [BUGGY]    int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  v  /=  2;  k++;  //  cast  out  twos.  }  if  (k  ==  31)  {  throw  new  ArithmeticException(   "overflow:  gcd  is  2^31   ");  }  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  short  NS  PS  ZS  boolean  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  k  t  u  v  	projects/Math94/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	427	427	1	replace	int  v  =  Math.pow(10,  -1);	      int    v    =    Math.pow(10,    v);    	non-compiled	[CE]  <identifier>  expected	11	None	replace
87	[BUG]  [BUGGY]  Integer  v  =  Math.min(0,  v);  [CE]  <identifier>  expected  [FE]        AssertionFailedError    [CONTEXT]        if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative      [BUGGY]  Integer  v  =  Math.min(0,  v);  [BUGGY]    int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  v  /=  2;  k++;  //  cast  out  twos.  }  if  (k  ==  31)  {  throw  new  ArithmeticException(   "overflow:  gcd  is  2^31   ");  }  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  short  NS  PS  ZS  boolean  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  k  t  u  v  	projects/Math94/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	427	427	1	replace	Integer  v  =  Math.min(0,  v);	      Integer    v    =    Math.min(u,    v);    	non-compiled	[CE]  <identifier>  expected	9	None	replace
88	[BUG]  [BUGGY]  Integer  v  =  Math.min(u  +  1,  v);  [CE]  <identifier>  expected  [FE]          AssertionFailedError    [CONTEXT]        if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative      [BUGGY]  Integer  v  =  Math.min(u  +  1,  v);  [BUGGY]    int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  v  /=  2;  k++;  //  cast  out  twos.  }  if  (k  ==  31)  {  throw  new  ArithmeticException(   "overflow:  gcd  is  2^31   ");  }  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  short  NS  PS  ZS  boolean  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  k  t  u  v  	projects/Math94/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	427	427	1	replace	Integer  v  =  Math.min(u  +  1,  v);	      Integer    v    =    Math.min(u,    v);    	non-compiled	[CE]  <identifier>  expected	9	None	replace
89	[BUG]  [BUGGY]  Integer  v  =  Math.min(int,  v);  [CE]  <identifier>  expected  [FE]            AssertionFailedError    [CONTEXT]        if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative      [BUGGY]  Integer  v  =  Math.min(int,  v);  [BUGGY]    int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  v  /=  2;  k++;  //  cast  out  twos.  }  if  (k  ==  31)  {  throw  new  ArithmeticException(   "overflow:  gcd  is  2^31   ");  }  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  short  NS  PS  ZS  boolean  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  k  t  u  v  	projects/Math94/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	427	427	1	replace	Integer  v  =  Math.min(int,  v);	      Integer    v    =    Math.min(u,    v);    	non-compiled	[CE]  <identifier>  expected	9	None	replace
90	[BUG]  [BUGGY]  int  u  =(int)Math.pow(10,  y);  [CE]  <identifier>  expected  [FE]            AssertionFailedError    [CONTEXT]        if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative      [BUGGY]  int  u  =(int)Math.pow(10,  y);  [BUGGY]    int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  v  /=  2;  k++;  //  cast  out  twos.  }  if  (k  ==  31)  {  throw  new  ArithmeticException(   "overflow:  gcd  is  2^31   ");  }  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  short  NS  PS  ZS  boolean  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  k  t  u  v  	projects/Math94/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	427	427	1	replace	int  u  =(int)Math.pow(10,  y);	      int    u    =(int)Math.pow(10,    v);    	non-compiled	[CE]  <identifier>  expected	7	None	replace
91	[BUG]  [BUGGY]  int  u  =(int)Math.pow(10,  -v);  [CE]  <identifier>  expected  [FE]              AssertionFailedError    [CONTEXT]        if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative      [BUGGY]  int  u  =(int)Math.pow(10,  -v);  [BUGGY]    int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  v  /=  2;  k++;  //  cast  out  twos.  }  if  (k  ==  31)  {  throw  new  ArithmeticException(   "overflow:  gcd  is  2^31   ");  }  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  short  NS  PS  ZS  boolean  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  k  t  u  v  	projects/Math94/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	427	427	1	replace	int  u  =(int)Math.pow(10,  -v);	      int    u    =(int)Math.pow(10,    v);    	non-compiled	[CE]  <identifier>  expected	7	None	replace
92	[BUG]  [BUGGY]  k++;  [CE]  <identifier>  expected  [FE]              AssertionFailedError    [CONTEXT]        if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative      [BUGGY]  k++;  [BUGGY]    while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  v  /=  2;  k++;  //  cast  out  twos.  }  if  (k  ==  31)  {  throw  new  ArithmeticException(   "overflow:  gcd  is  2^31   ");  }  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  short  NS  PS  ZS  boolean  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  k  t  u  v  	projects/Math94/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	427	427	1	replace	k++;	      	non-compiled	[CE]  <identifier>  expected	4	None	replace
93	[BUG]  [BUGGY]  int  k  =(int)Math.pow(10,  y);  [CE]  <identifier>  expected  [FE]                AssertionFailedError    [CONTEXT]        if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative      [BUGGY]  int  k  =(int)Math.pow(10,  y);  [BUGGY]    while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  v  /=  2;  k++;  //  cast  out  twos.  }  if  (k  ==  31)  {  throw  new  ArithmeticException(   "overflow:  gcd  is  2^31   ");  }  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  short  NS  PS  ZS  boolean  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  k  t  u  v  	projects/Math94/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	427	427	1	replace	int  k  =(int)Math.pow(10,  y);	      	non-compiled	[CE]  <identifier>  expected	4	None	replace
94	[BUG]  [BUGGY]  int  k  =(int)Math.log((  u  -  1)/  2);  [CE]  <identifier>  expected  [FE]                  AssertionFailedError    [CONTEXT]        if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative      [BUGGY]  int  k  =(int)Math.log((  u  -  1)/  2);  [BUGGY]    while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  v  /=  2;  k++;  //  cast  out  twos.  }  if  (k  ==  31)  {  throw  new  ArithmeticException(   "overflow:  gcd  is  2^31   ");  }  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  short  NS  PS  ZS  boolean  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  k  t  u  v  	projects/Math94/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	427	427	1	replace	int  k  =(int)Math.log((  u  -  1)/  2);	      	non-compiled	[CE]  <identifier>  expected	4	None	replace
95	[BUG]  [BUGGY]  int  v  =  Math.pow(10,  y);  [CE]  <identifier>  expected  [FE]            AssertionFailedError    [CONTEXT]        if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative      [BUGGY]  int  v  =  Math.pow(10,  y);  [BUGGY]    int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  v  /=  2;  k++;  //  cast  out  twos.  }  if  (k  ==  31)  {  throw  new  ArithmeticException(   "overflow:  gcd  is  2^31   ");  }  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  short  NS  PS  ZS  boolean  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  k  t  u  v  	projects/Math94/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	427	427	1	replace	int  v  =  Math.pow(10,  y);	      int    v    =    Math.pow(10,    v);    	non-compiled	[CE]  <identifier>  expected	11	None	replace
96	[BUG]  [BUGGY]  int  k  =(v  <  31)?  1  :  -1;  [CE]  <identifier>  expected  [FE]        AssertionFailedError    [CONTEXT]        if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative      [BUGGY]  int  k  =(v  <  31)?  1  :  -1;  [BUGGY]    while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  v  /=  2;  k++;  //  cast  out  twos.  }  if  (k  ==  31)  {  throw  new  ArithmeticException(   "overflow:  gcd  is  2^31   ");  }  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  short  NS  PS  ZS  boolean  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  k  t  u  v  	projects/Math94/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	427	427	1	replace	int  k  =(v  <  31)?  1  :  -1;	  int    k    =(v    <    31)?    1    :    0;    	non-compiled	[CE]  <identifier>  expected	13	None	replace
97	[BUG]  [BUGGY]  int  v  =(int)Math.ceil((  u  /  1)/  2);  [CE]  <identifier>  expected  [FE]              AssertionFailedError    [CONTEXT]        if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative      [BUGGY]  int  v  =(int)Math.ceil((  u  /  1)/  2);  [BUGGY]    int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  v  /=  2;  k++;  //  cast  out  twos.  }  if  (k  ==  31)  {  throw  new  ArithmeticException(   "overflow:  gcd  is  2^31   ");  }  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  short  NS  PS  ZS  boolean  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  k  t  u  v  	projects/Math94/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	427	427	1	replace	int  v  =(int)Math.ceil((  u  /  1)/  2);	      int    v    =(int)Math.ceil((    u    -    1)/    2);    	non-compiled	[CE]  <identifier>  expected	17	None	replace
98	[BUG]  [BUGGY]  MutableToJavaIdentifiers.checkState(u  <  =  0);  [CE]  <identifier>  expected  [FE]        AssertionFailedError    [CONTEXT]        if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative      [BUGGY]  MutableToJavaIdentifiers.checkState(u  <  =  0);  [BUGGY]    int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  v  /=  2;  k++;  //  cast  out  twos.  }  if  (k  ==  31)  {  throw  new  ArithmeticException(   "overflow:  gcd  is  2^31   ");  }  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  short  NS  PS  ZS  boolean  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  k  t  u  v  	projects/Math94/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	427	427	1	replace	MutableToJavaIdentifiers.checkState(u  <  =  0);	      if(t    >    0)    {    u    =    -u;    }    	non-compiled	[CE]  <identifier>  expected	14	None	replace
99	[BUG]  [BUGGY]  MutableToJavaIdentifiers.checkState(t  >  0);  [CE]  <identifier>  expected  [FE]          AssertionFailedError    [CONTEXT]        if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative      [BUGGY]  MutableToJavaIdentifiers.checkState(t  >  0);  [BUGGY]    int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  v  /=  2;  k++;  //  cast  out  twos.  }  if  (k  ==  31)  {  throw  new  ArithmeticException(   "overflow:  gcd  is  2^31   ");  }  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  short  NS  PS  ZS  boolean  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  k  t  u  v  	projects/Math94/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	427	427	1	replace	MutableToJavaIdentifiers.checkState(t  >  0);	      if(t    >    0)    {    u    =    -u;    }    	non-compiled	[CE]  <identifier>  expected	14	None	replace
100	[BUG]  [BUGGY]  int  u  =(int)Math.floor(v  -  1);  [CE]  <identifier>  expected  [FE]              AssertionFailedError    [CONTEXT]        if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative      [BUGGY]  int  u  =(int)Math.floor(v  -  1);  [BUGGY]    int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  v  /=  2;  k++;  //  cast  out  twos.  }  if  (k  ==  31)  {  throw  new  ArithmeticException(   "overflow:  gcd  is  2^31   ");  }  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  short  NS  PS  ZS  boolean  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  k  t  u  v  	projects/Math94/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	427	427	1	replace	int  u  =(int)Math.floor(v  -  1);	      int    u    =(int)Math.floor(v);    	non-compiled	[CE]  <identifier>  expected	8	None	replace
101	[BUG]  [BUGGY]  Integer  v  =  Math.max(10,  v);  [CE]  <identifier>  expected  [FE]              AssertionFailedError    [CONTEXT]        if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative      [BUGGY]  Integer  v  =  Math.max(10,  v);  [BUGGY]    int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  v  /=  2;  k++;  //  cast  out  twos.  }  if  (k  ==  31)  {  throw  new  ArithmeticException(   "overflow:  gcd  is  2^31   ");  }  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  short  NS  PS  ZS  boolean  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  k  t  u  v  	projects/Math94/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	427	427	1	replace	Integer  v  =  Math.max(10,  v);	      Integer    v    =    Math.max(0,    v);    	non-compiled	[CE]  <identifier>  expected	12	None	replace
102	[BUG]  [BUGGY]  int  v  =(int)Math.log((  u  +  1)/  2);  [CE]  <identifier>  expected  [FE]            AssertionFailedError    [CONTEXT]        if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative      [BUGGY]  int  v  =(int)Math.log((  u  +  1)/  2);  [BUGGY]    int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  v  /=  2;  k++;  //  cast  out  twos.  }  if  (k  ==  31)  {  throw  new  ArithmeticException(   "overflow:  gcd  is  2^31   ");  }  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  short  NS  PS  ZS  boolean  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  k  t  u  v  	projects/Math94/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	427	427	1	replace	int  v  =(int)Math.log((  u  +  1)/  2);	      int    v    =(int)Math.log((    u    -    1)/    2);    	non-compiled	[CE]  <identifier>  expected	16	None	replace
103	[BUG]  [BUGGY]  int  v  =(int)Math.log((  u  *  2)/  2);  [CE]  <identifier>  expected  [FE]              AssertionFailedError    [CONTEXT]        if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative      [BUGGY]  int  v  =(int)Math.log((  u  *  2)/  2);  [BUGGY]    int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  v  /=  2;  k++;  //  cast  out  twos.  }  if  (k  ==  31)  {  throw  new  ArithmeticException(   "overflow:  gcd  is  2^31   ");  }  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  short  NS  PS  ZS  boolean  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  k  t  u  v  	projects/Math94/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	427	427	1	replace	int  v  =(int)Math.log((  u  *  2)/  2);	      int    v    =(int)Math.log((    u    -    1)/    2);    	non-compiled	[CE]  <identifier>  expected	16	None	replace
104	[BUG]  [BUGGY]  int  v  =(int)Math.log((  u  /  1)/  2);  [CE]  <identifier>  expected  [FE]                AssertionFailedError    [CONTEXT]        if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative      [BUGGY]  int  v  =(int)Math.log((  u  /  1)/  2);  [BUGGY]    int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  v  /=  2;  k++;  //  cast  out  twos.  }  if  (k  ==  31)  {  throw  new  ArithmeticException(   "overflow:  gcd  is  2^31   ");  }  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  short  NS  PS  ZS  boolean  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  k  t  u  v  	projects/Math94/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	427	427	1	replace	int  v  =(int)Math.log((  u  /  1)/  2);	      int    v    =(int)Math.log((    u    -    1)/    2);    	non-compiled	[CE]  <identifier>  expected	16	None	replace
