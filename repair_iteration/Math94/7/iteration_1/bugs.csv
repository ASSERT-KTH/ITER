bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  int  k  =  1;  [CE]  <identifier>  expected  [FE]    AssertionFailedError  [CONTEXT]      if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative    [BUGGY]  int  k  =  1;  [BUGGY]  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  v  /=  2;  k++;  //  cast  out  twos.  }  if  (k  ==  31)  {  throw  new  ArithmeticException( "overflow:  gcd  is  2^31 ");  }  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  short  NS  PS  ZS  boolean  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  k  t  u  v  	projects/Math94/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	427	427	1	replace	int  k  =  1;	int  k  =  0;  	non-compiled	[CE]  <identifier>  expected	13	None	replace
2	[BUG]  [BUGGY]  int  k  =  31;  [CE]  <identifier>  expected  [FE]      AssertionFailedError  [CONTEXT]      if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative    [BUGGY]  int  k  =  31;  [BUGGY]  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  v  /=  2;  k++;  //  cast  out  twos.  }  if  (k  ==  31)  {  throw  new  ArithmeticException( "overflow:  gcd  is  2^31 ");  }  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  short  NS  PS  ZS  boolean  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  k  t  u  v  	projects/Math94/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	427	427	1	replace	int  k  =  31;	int  k  =  0;  	non-compiled	[CE]  <identifier>  expected	13	None	replace
3	[BUG]  [BUGGY]  int  k  =  2;  [CE]  <identifier>  expected  [FE]        AssertionFailedError  [CONTEXT]      if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative    [BUGGY]  int  k  =  2;  [BUGGY]  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  v  /=  2;  k++;  //  cast  out  twos.  }  if  (k  ==  31)  {  throw  new  ArithmeticException( "overflow:  gcd  is  2^31 ");  }  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  short  NS  PS  ZS  boolean  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  k  t  u  v  	projects/Math94/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	427	427	1	replace	int  k  =  2;	int  k  =  0;  	non-compiled	[CE]  <identifier>  expected	13	None	replace
4	[BUG]  [BUGGY]    [CE]  <identifier>  expected  [FE]          AssertionFailedError  [CONTEXT]      if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative    [BUGGY]    [BUGGY]  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  v  /=  2;  k++;  //  cast  out  twos.  }  if  (k  ==  31)  {  throw  new  ArithmeticException( "overflow:  gcd  is  2^31 ");  }  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  short  NS  PS  ZS  boolean  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  k  t  u  v  	projects/Math94/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	427	427	1	replace	  	int  k  =  0;  	non-compiled	[CE]  <identifier>  expected	13	None	replace
5	[BUG]  [BUGGY]    int  u  =(int)Math.rint((  u  +  1)/  2);  [CE]  <identifier>  expected  [FE]    AssertionFailedError  [CONTEXT]      if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative    [BUGGY]    int  u  =(int)Math.rint((  u  +  1)/  2);  [BUGGY]  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  v  /=  2;  k++;  //  cast  out  twos.  }  if  (k  ==  31)  {  throw  new  ArithmeticException( "overflow:  gcd  is  2^31 ");  }  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  short  NS  PS  ZS  boolean  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  k  t  u  v  	projects/Math94/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	427	427	1	replace	    int  u  =(int)Math.rint((  u  +  1)/  2);		non-compiled	[CE]  <identifier>  expected	14	None	add
6	[BUG]  [BUGGY]    int  u  =(int)Math.rint((  u  -  1)/  2);  [CE]  <identifier>  expected  [FE]      AssertionFailedError  [CONTEXT]      if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative    [BUGGY]    int  u  =(int)Math.rint((  u  -  1)/  2);  [BUGGY]  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  v  /=  2;  k++;  //  cast  out  twos.  }  if  (k  ==  31)  {  throw  new  ArithmeticException( "overflow:  gcd  is  2^31 ");  }  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  short  NS  PS  ZS  boolean  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  k  t  u  v  	projects/Math94/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	427	427	1	replace	    int  u  =(int)Math.rint((  u  -  1)/  2);		non-compiled	[CE]  <identifier>  expected	14	None	add
7	[BUG]  [BUGGY]    int  u  =(int)Math.pow(10,  v);  [CE]  <identifier>  expected  [FE]        AssertionFailedError  [CONTEXT]      if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative    [BUGGY]    int  u  =(int)Math.pow(10,  v);  [BUGGY]  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  v  /=  2;  k++;  //  cast  out  twos.  }  if  (k  ==  31)  {  throw  new  ArithmeticException( "overflow:  gcd  is  2^31 ");  }  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  short  NS  PS  ZS  boolean  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  k  t  u  v  	projects/Math94/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	427	427	1	replace	    int  u  =(int)Math.pow(10,  v);		non-compiled	[CE]  <identifier>  expected	14	None	add
8	[BUG]  [BUGGY]    int  u  =(int)Math.floor(v);  [CE]  <identifier>  expected  [FE]          AssertionFailedError  [CONTEXT]      if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative    [BUGGY]    int  u  =(int)Math.floor(v);  [BUGGY]  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  v  /=  2;  k++;  //  cast  out  twos.  }  if  (k  ==  31)  {  throw  new  ArithmeticException( "overflow:  gcd  is  2^31 ");  }  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  short  NS  PS  ZS  boolean  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  k  t  u  v  	projects/Math94/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	427	427	1	replace	    int  u  =(int)Math.floor(v);		non-compiled	[CE]  <identifier>  expected	14	None	add
9	[BUG]  [BUGGY]    Integer  v  =  Math.min(u,  v);  [CE]  <identifier>  expected  [FE]    AssertionFailedError  [CONTEXT]      if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative    [BUGGY]    Integer  v  =  Math.min(u,  v);  [BUGGY]  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  v  /=  2;  k++;  //  cast  out  twos.  }  if  (k  ==  31)  {  throw  new  ArithmeticException( "overflow:  gcd  is  2^31 ");  }  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  short  NS  PS  ZS  boolean  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  k  t  u  v  	projects/Math94/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	427	427	1	replace	    Integer  v  =  Math.min(u,  v);		non-compiled	[CE]  <identifier>  expected	14	None	add
10	[BUG]  [BUGGY]    u  =  -u;  [CE]  <identifier>  expected  [FE]      AssertionFailedError  [CONTEXT]      if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative    [BUGGY]    u  =  -u;  [BUGGY]  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  v  /=  2;  k++;  //  cast  out  twos.  }  if  (k  ==  31)  {  throw  new  ArithmeticException( "overflow:  gcd  is  2^31 ");  }  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  short  NS  PS  ZS  boolean  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  k  t  u  v  	projects/Math94/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	427	427	1	replace	    u  =  -u;		non-compiled	[CE]  <identifier>  expected	14	None	add
11	[BUG]  [BUGGY]    int  v  =  Math.pow(10,  v);  [CE]  <identifier>  expected  [FE]        AssertionFailedError  [CONTEXT]      if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative    [BUGGY]    int  v  =  Math.pow(10,  v);  [BUGGY]  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  v  /=  2;  k++;  //  cast  out  twos.  }  if  (k  ==  31)  {  throw  new  ArithmeticException( "overflow:  gcd  is  2^31 ");  }  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  short  NS  PS  ZS  boolean  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  k  t  u  v  	projects/Math94/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	427	427	1	replace	    int  v  =  Math.pow(10,  v);		non-compiled	[CE]  <identifier>  expected	14	None	add
12	[BUG]  [BUGGY]    Integer  v  =  Math.max(0,  v);  [CE]  <identifier>  expected  [FE]          AssertionFailedError  [CONTEXT]      if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative    [BUGGY]    Integer  v  =  Math.max(0,  v);  [BUGGY]  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  v  /=  2;  k++;  //  cast  out  twos.  }  if  (k  ==  31)  {  throw  new  ArithmeticException( "overflow:  gcd  is  2^31 ");  }  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  short  NS  PS  ZS  boolean  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  k  t  u  v  	projects/Math94/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	427	427	1	replace	    Integer  v  =  Math.max(0,  v);		non-compiled	[CE]  <identifier>  expected	14	None	add
13	[BUG]  [BUGGY]  int  k  =(v  <  31)?  1  :  0;  [CE]  <identifier>  expected  [FE]    AssertionFailedError  [CONTEXT]      if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative    [BUGGY]  int  k  =(v  <  31)?  1  :  0;  [BUGGY]  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  v  /=  2;  k++;  //  cast  out  twos.  }  if  (k  ==  31)  {  throw  new  ArithmeticException( "overflow:  gcd  is  2^31 ");  }  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  short  NS  PS  ZS  boolean  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  k  t  u  v  	projects/Math94/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	427	427	1	replace	int  k  =(v  <  31)?  1  :  0;	int  k  =  0;  	non-compiled	[CE]  <identifier>  expected	13	None	replace
14	[BUG]  [BUGGY]    if(t  >  0)  {  u  =  -u;  }  [CE]  <identifier>  expected  [FE]    AssertionFailedError  [CONTEXT]      if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative    [BUGGY]    if(t  >  0)  {  u  =  -u;  }  [BUGGY]  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  v  /=  2;  k++;  //  cast  out  twos.  }  if  (k  ==  31)  {  throw  new  ArithmeticException( "overflow:  gcd  is  2^31 ");  }  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  short  NS  PS  ZS  boolean  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  k  t  u  v  	projects/Math94/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	427	427	1	replace	    if(t  >  0)  {  u  =  -u;  }		non-compiled	[CE]  <identifier>  expected	14	None	add
15	[BUG]  [BUGGY]    int  v  =(int)Math.ceil((  u  +  1)/  2);  [CE]  <identifier>  expected  [FE]      AssertionFailedError  [CONTEXT]      if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative    [BUGGY]    int  v  =(int)Math.ceil((  u  +  1)/  2);  [BUGGY]  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  v  /=  2;  k++;  //  cast  out  twos.  }  if  (k  ==  31)  {  throw  new  ArithmeticException( "overflow:  gcd  is  2^31 ");  }  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  short  NS  PS  ZS  boolean  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  k  t  u  v  	projects/Math94/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	427	427	1	replace	    int  v  =(int)Math.ceil((  u  +  1)/  2);		non-compiled	[CE]  <identifier>  expected	14	None	add
16	[BUG]  [BUGGY]    int  v  =(int)Math.log((  u  -  1)/  2);  [CE]  <identifier>  expected  [FE]        AssertionFailedError  [CONTEXT]      if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative    [BUGGY]    int  v  =(int)Math.log((  u  -  1)/  2);  [BUGGY]  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  v  /=  2;  k++;  //  cast  out  twos.  }  if  (k  ==  31)  {  throw  new  ArithmeticException( "overflow:  gcd  is  2^31 ");  }  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  short  NS  PS  ZS  boolean  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  k  t  u  v  	projects/Math94/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	427	427	1	replace	    int  v  =(int)Math.log((  u  -  1)/  2);		non-compiled	[CE]  <identifier>  expected	14	None	add
17	[BUG]  [BUGGY]    int  v  =(int)Math.ceil((  u  -  1)/  2);  [CE]  <identifier>  expected  [FE]          AssertionFailedError  [CONTEXT]      if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative    [BUGGY]    int  v  =(int)Math.ceil((  u  -  1)/  2);  [BUGGY]  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  v  /=  2;  k++;  //  cast  out  twos.  }  if  (k  ==  31)  {  throw  new  ArithmeticException( "overflow:  gcd  is  2^31 ");  }  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  short  NS  PS  ZS  boolean  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  k  t  u  v  	projects/Math94/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	427	427	1	replace	    int  v  =(int)Math.ceil((  u  -  1)/  2);		non-compiled	[CE]  <identifier>  expected	14	None	add
18	[BUG]  [BUGGY]    int  v  =(int)Math.pow(10,  y);  [CE]  <identifier>  expected  [FE]            AssertionFailedError  [CONTEXT]      if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative    [BUGGY]    int  v  =(int)Math.pow(10,  y);  [BUGGY]  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  v  /=  2;  k++;  //  cast  out  twos.  }  if  (k  ==  31)  {  throw  new  ArithmeticException( "overflow:  gcd  is  2^31 ");  }  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  short  NS  PS  ZS  boolean  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  k  t  u  v  	projects/Math94/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	427	427	1	replace	    int  v  =(int)Math.pow(10,  y);		non-compiled	[CE]  <identifier>  expected	14	None	add
