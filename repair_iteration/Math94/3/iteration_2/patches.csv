bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  int  u  =(int)Math.ceil(u,  v);  [CE]  not  a  statement  [FE]                    AssertionFailedError      [CONTEXT]      public  static  int  gcd(int  u,  int  v)  {  if  (u  *  v  ==  0)  {  return  (Math.abs(u)  +  Math.abs(v));  }            [BUGGY]  int  u  =(int)Math.ceil(u,  v);  [BUGGY]      if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  short  NS  PS  ZS  boolean  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  k  t  u  v  	projects/Math94/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	420	420	1	replace	int  u  =(int)Math.ceil(u,  v);	  int    u    =(int)Math.floor(u,    v);    	non-compiled	[CE]  not  a  statement	39	None	replace
2	[BUG]  [BUGGY]  int  u  =(int)Math.floor(u,  v  +  1);  [CE]  not  a  statement  [FE]                      AssertionFailedError      [CONTEXT]      public  static  int  gcd(int  u,  int  v)  {  if  (u  *  v  ==  0)  {  return  (Math.abs(u)  +  Math.abs(v));  }            [BUGGY]  int  u  =(int)Math.floor(u,  v  +  1);  [BUGGY]      if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  short  NS  PS  ZS  boolean  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  k  t  u  v  	projects/Math94/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	420	420	1	replace	int  u  =(int)Math.floor(u,  v  +  1);	  int    u    =(int)Math.floor(u,    v);    	non-compiled	[CE]  not  a  statement	39	None	replace
3	[BUG]  [BUGGY]  int  u  =(int)Math.log(u,  v);  [CE]  not  a  statement  [FE]                        AssertionFailedError      [CONTEXT]      public  static  int  gcd(int  u,  int  v)  {  if  (u  *  v  ==  0)  {  return  (Math.abs(u)  +  Math.abs(v));  }            [BUGGY]  int  u  =(int)Math.log(u,  v);  [BUGGY]      if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  short  NS  PS  ZS  boolean  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  k  t  u  v  	projects/Math94/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	420	420	1	replace	int  u  =(int)Math.log(u,  v);	  int    u    =(int)Math.floor(u,    v);    	non-compiled	[CE]  not  a  statement	39	None	replace
4	[BUG]  [BUGGY]  if(u  <  0  ||  v  <  0)  {  [CE]  not  a  statement  [FE]              AssertionFailedError      [CONTEXT]      public  static  int  gcd(int  u,  int  v)  {  if  (u  *  v  ==  0)  {  return  (Math.abs(u)  +  Math.abs(v));  }            [BUGGY]  if(u  <  0  ||  v  <  0)  {  [BUGGY]      u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  short  NS  PS  ZS  boolean  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  k  t  u  v  	projects/Math94/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	420	420	1	replace	if(u  <  0  ||  v  <  0)  {	  if(u    <    =    0    ||    v    <    0)    {    	non-compiled	[CE]  not  a  statement	6	None	replace
5	[BUG]  [BUGGY]  if(u  ==  0  ||  v  <  =  0)  {  [CE]  not  a  statement  [FE]                AssertionFailedError      [CONTEXT]      public  static  int  gcd(int  u,  int  v)  {  if  (u  *  v  ==  0)  {  return  (Math.abs(u)  +  Math.abs(v));  }            [BUGGY]  if(u  ==  0  ||  v  <  =  0)  {  [BUGGY]      u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  short  NS  PS  ZS  boolean  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  k  t  u  v  	projects/Math94/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	420	420	1	replace	if(u  ==  0  ||  v  <  =  0)  {	  if(u    <    =    0    ||    v    <    0)    {    	non-compiled	[CE]  not  a  statement	6	None	replace
6	[BUG]  [BUGGY]  if(u  <  =  0  ||  v  >=  0)  {  [CE]  not  a  statement  [FE]                  AssertionFailedError      [CONTEXT]      public  static  int  gcd(int  u,  int  v)  {  if  (u  *  v  ==  0)  {  return  (Math.abs(u)  +  Math.abs(v));  }            [BUGGY]  if(u  <  =  0  ||  v  >=  0)  {  [BUGGY]      u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  short  NS  PS  ZS  boolean  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  k  t  u  v  	projects/Math94/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	420	420	1	replace	if(u  <  =  0  ||  v  >=  0)  {	  if(u    <    =    0    ||    v    <    0)    {    	non-compiled	[CE]  not  a  statement	6	None	replace
7	[BUG]  [BUGGY]  int  v  =(int)Math.ceil(u,  v);  [CE]  not  a  statement  [FE]              AssertionFailedError      [CONTEXT]      public  static  int  gcd(int  u,  int  v)  {  if  (u  *  v  ==  0)  {  return  (Math.abs(u)  +  Math.abs(v));  }            [BUGGY]  int  v  =(int)Math.ceil(u,  v);  [BUGGY]      if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  short  NS  PS  ZS  boolean  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  k  t  u  v  	projects/Math94/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	420	420	1	replace	int  v  =(int)Math.ceil(u,  v);	  int    v    =(int)Math.floor(u,    v);    	non-compiled	[CE]  not  a  statement	51	None	replace
8	[BUG]  [BUGGY]  char  v  =(char)Math.floor(u,  v);  [CE]  not  a  statement  [FE]                AssertionFailedError      [CONTEXT]      public  static  int  gcd(int  u,  int  v)  {  if  (u  *  v  ==  0)  {  return  (Math.abs(u)  +  Math.abs(v));  }            [BUGGY]  char  v  =(char)Math.floor(u,  v);  [BUGGY]      if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  short  NS  PS  ZS  boolean  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  k  t  u  v  	projects/Math94/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	420	420	1	replace	char  v  =(char)Math.floor(u,  v);	  int    v    =(int)Math.floor(u,    v);    	non-compiled	[CE]  not  a  statement	51	None	replace
9	[BUG]  [BUGGY]  float  v  =(float)Math.floor(u,  v);  [CE]  not  a  statement  [FE]                  AssertionFailedError      [CONTEXT]      public  static  int  gcd(int  u,  int  v)  {  if  (u  *  v  ==  0)  {  return  (Math.abs(u)  +  Math.abs(v));  }            [BUGGY]  float  v  =(float)Math.floor(u,  v);  [BUGGY]      if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  short  NS  PS  ZS  boolean  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  k  t  u  v  	projects/Math94/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	420	420	1	replace	float  v  =(float)Math.floor(u,  v);	  int    v    =(int)Math.floor(u,    v);    	non-compiled	[CE]  not  a  statement	51	None	replace
10	[BUG]  [BUGGY]  int  u  =(int)Math.pow(10,  y  +  1);  [CE]  not  a  statement  [FE]                  AssertionFailedError      [CONTEXT]      public  static  int  gcd(int  u,  int  v)  {  if  (u  *  v  ==  0)  {  return  (Math.abs(u)  +  Math.abs(v));  }            [BUGGY]  int  u  =(int)Math.pow(10,  y  +  1);  [BUGGY]      if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  short  NS  PS  ZS  boolean  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  k  t  u  v  	projects/Math94/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	420	420	1	replace	int  u  =(int)Math.pow(10,  y  +  1);	  int    u    =(int)Math.pow(10,    y);    	non-compiled	[CE]  not  a  statement	19	None	replace
11	[BUG]  [BUGGY]  int  u  =(int)Math.pow(10,  x);  [CE]  not  a  statement  [FE]                    AssertionFailedError      [CONTEXT]      public  static  int  gcd(int  u,  int  v)  {  if  (u  *  v  ==  0)  {  return  (Math.abs(u)  +  Math.abs(v));  }            [BUGGY]  int  u  =(int)Math.pow(10,  x);  [BUGGY]      if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  short  NS  PS  ZS  boolean  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  k  t  u  v  	projects/Math94/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	420	420	1	replace	int  u  =(int)Math.pow(10,  x);	  int    u    =(int)Math.pow(10,    y);    	non-compiled	[CE]  not  a  statement	19	None	replace
12	[BUG]  [BUGGY]  char  u  =(char)Math.pow(10,  y);  [CE]  not  a  statement  [FE]                      AssertionFailedError      [CONTEXT]      public  static  int  gcd(int  u,  int  v)  {  if  (u  *  v  ==  0)  {  return  (Math.abs(u)  +  Math.abs(v));  }            [BUGGY]  char  u  =(char)Math.pow(10,  y);  [BUGGY]      if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  short  NS  PS  ZS  boolean  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  k  t  u  v  	projects/Math94/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	420	420	1	replace	char  u  =(char)Math.pow(10,  y);	  int    u    =(int)Math.pow(10,    y);    	non-compiled	[CE]  not  a  statement	19	None	replace
13	[BUG]  [BUGGY]  int  v  =(int)Math.ceil(u  +  1);  [CE]  not  a  statement  [FE]                AssertionFailedError      [CONTEXT]      public  static  int  gcd(int  u,  int  v)  {  if  (u  *  v  ==  0)  {  return  (Math.abs(u)  +  Math.abs(v));  }            [BUGGY]  int  v  =(int)Math.ceil(u  +  1);  [BUGGY]      if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  short  NS  PS  ZS  boolean  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  k  t  u  v  	projects/Math94/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	420	420	1	replace	int  v  =(int)Math.ceil(u  +  1);	  int    v    =(int)Math.floor(u    +    1);    	non-compiled	[CE]  not  a  statement	28	None	replace
14	[BUG]  [BUGGY]  int  v  =(int)Math.floor(u  *  1);  [CE]  not  a  statement  [FE]                  AssertionFailedError      [CONTEXT]      public  static  int  gcd(int  u,  int  v)  {  if  (u  *  v  ==  0)  {  return  (Math.abs(u)  +  Math.abs(v));  }            [BUGGY]  int  v  =(int)Math.floor(u  *  1);  [BUGGY]      if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  short  NS  PS  ZS  boolean  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  k  t  u  v  	projects/Math94/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	420	420	1	replace	int  v  =(int)Math.floor(u  *  1);	  int    v    =(int)Math.floor(u    +    1);    	non-compiled	[CE]  not  a  statement	28	None	replace
15	[BUG]  [BUGGY]  int  v  =(int)Math.log(u  +  1);  [CE]  not  a  statement  [FE]                    AssertionFailedError      [CONTEXT]      public  static  int  gcd(int  u,  int  v)  {  if  (u  *  v  ==  0)  {  return  (Math.abs(u)  +  Math.abs(v));  }            [BUGGY]  int  v  =(int)Math.log(u  +  1);  [BUGGY]      if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  short  NS  PS  ZS  boolean  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  k  t  u  v  	projects/Math94/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	420	420	1	replace	int  v  =(int)Math.log(u  +  1);	  int    v    =(int)Math.floor(u    +    1);    	non-compiled	[CE]  not  a  statement	28	None	replace
16	[BUG]  [BUGGY]  char  v  =(char)Math.floor(u  +  1);  [CE]  not  a  statement  [FE]                      AssertionFailedError      [CONTEXT]      public  static  int  gcd(int  u,  int  v)  {  if  (u  *  v  ==  0)  {  return  (Math.abs(u)  +  Math.abs(v));  }            [BUGGY]  char  v  =(char)Math.floor(u  +  1);  [BUGGY]      if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  short  NS  PS  ZS  boolean  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  k  t  u  v  	projects/Math94/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	420	420	1	replace	char  v  =(char)Math.floor(u  +  1);	  int    v    =(int)Math.floor(u    +    1);    	non-compiled	[CE]  not  a  statement	28	None	replace
17	[BUG]  [BUGGY]  char  u  =(char)Math.ceil(v);  [CE]  not  a  statement  [FE]                  AssertionFailedError      [CONTEXT]      public  static  int  gcd(int  u,  int  v)  {  if  (u  *  v  ==  0)  {  return  (Math.abs(u)  +  Math.abs(v));  }            [BUGGY]  char  u  =(char)Math.ceil(v);  [BUGGY]      if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  short  NS  PS  ZS  boolean  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  k  t  u  v  	projects/Math94/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	420	420	1	replace	char  u  =(char)Math.ceil(v);	  int    u    =(int)Math.ceil(v);    	non-compiled	[CE]  not  a  statement	34	None	replace
18	[BUG]  [BUGGY]  float  u  =(float)Math.ceil(v);  [CE]  not  a  statement  [FE]                    AssertionFailedError      [CONTEXT]      public  static  int  gcd(int  u,  int  v)  {  if  (u  *  v  ==  0)  {  return  (Math.abs(u)  +  Math.abs(v));  }            [BUGGY]  float  u  =(float)Math.ceil(v);  [BUGGY]      if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  short  NS  PS  ZS  boolean  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  k  t  u  v  	projects/Math94/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	420	420	1	replace	float  u  =(float)Math.ceil(v);	  int    u    =(int)Math.ceil(v);    	non-compiled	[CE]  not  a  statement	34	None	replace
19	[BUG]  [BUGGY]  float  u  =(float)Math.log(u);  [CE]  not  a  statement  [FE]                  AssertionFailedError      [CONTEXT]      public  static  int  gcd(int  u,  int  v)  {  if  (u  *  v  ==  0)  {  return  (Math.abs(u)  +  Math.abs(v));  }            [BUGGY]  float  u  =(float)Math.log(u);  [BUGGY]      if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  short  NS  PS  ZS  boolean  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  k  t  u  v  	projects/Math94/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	420	420	1	replace	float  u  =(float)Math.log(u);	  float    u    =(float)Math.floor(v);    	non-compiled	[CE]  not  a  statement	61	None	replace
20	[BUG]  [BUGGY]  double  u  =(double)Math.floor(v);  [CE]  not  a  statement  [FE]                    AssertionFailedError      [CONTEXT]      public  static  int  gcd(int  u,  int  v)  {  if  (u  *  v  ==  0)  {  return  (Math.abs(u)  +  Math.abs(v));  }            [BUGGY]  double  u  =(double)Math.floor(v);  [BUGGY]      if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  short  NS  PS  ZS  boolean  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  k  t  u  v  	projects/Math94/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	420	420	1	replace	double  u  =(double)Math.floor(v);	  float    u    =(float)Math.floor(v);    	non-compiled	[CE]  not  a  statement	61	None	replace
21	[BUG]  [BUGGY]  float  v  =(float)Math.ceil(gcd  +  1);  [CE]  not  a  statement  [FE]                AssertionFailedError      [CONTEXT]      public  static  int  gcd(int  u,  int  v)  {  if  (u  *  v  ==  0)  {  return  (Math.abs(u)  +  Math.abs(v));  }            [BUGGY]  float  v  =(float)Math.ceil(gcd  +  1);  [BUGGY]      if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  short  NS  PS  ZS  boolean  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  k  t  u  v  	projects/Math94/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	420	420	1	replace	float  v  =(float)Math.ceil(gcd  +  1);	  float    v    =(float)Math.ceil(gcd);    	non-compiled	[CE]  not  a  statement	23	None	replace
22	[BUG]  [BUGGY]  float  v  =(float)Math.ceil(gcd,  v);  [CE]  not  a  statement  [FE]                  AssertionFailedError      [CONTEXT]      public  static  int  gcd(int  u,  int  v)  {  if  (u  *  v  ==  0)  {  return  (Math.abs(u)  +  Math.abs(v));  }            [BUGGY]  float  v  =(float)Math.ceil(gcd,  v);  [BUGGY]      if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  short  NS  PS  ZS  boolean  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  k  t  u  v  	projects/Math94/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	420	420	1	replace	float  v  =(float)Math.ceil(gcd,  v);	  float    v    =(float)Math.ceil(gcd);    	non-compiled	[CE]  not  a  statement	23	None	replace
23	[BUG]  [BUGGY]  float  v  =(float)Math.ceil(gcd,  0);  [CE]  not  a  statement  [FE]                    AssertionFailedError      [CONTEXT]      public  static  int  gcd(int  u,  int  v)  {  if  (u  *  v  ==  0)  {  return  (Math.abs(u)  +  Math.abs(v));  }            [BUGGY]  float  v  =(float)Math.ceil(gcd,  0);  [BUGGY]      if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  short  NS  PS  ZS  boolean  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  k  t  u  v  	projects/Math94/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	420	420	1	replace	float  v  =(float)Math.ceil(gcd,  0);	  float    v    =(float)Math.ceil(gcd);    	non-compiled	[CE]  not  a  statement	23	None	replace
24	[BUG]  [BUGGY]  char  k  =(char)Math.ceil(gcd(u,  v));  [CE]  not  a  statement  [FE]                    AssertionFailedError      [CONTEXT]      public  static  int  gcd(int  u,  int  v)  {  if  (u  *  v  ==  0)  {  return  (Math.abs(u)  +  Math.abs(v));  }            [BUGGY]  char  k  =(char)Math.ceil(gcd(u,  v));  [BUGGY]      if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  short  NS  PS  ZS  boolean  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  k  t  u  v  	projects/Math94/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	420	420	1	replace	char  k  =(char)Math.ceil(gcd(u,  v));	  char    k    =(char)Math.ceil(u);    	non-compiled	[CE]  not  a  statement	62	None	replace
25	[BUG]  [BUGGY]  char  k  =(char)Math.ceil(u,  v);  [CE]  not  a  statement  [FE]                      AssertionFailedError      [CONTEXT]      public  static  int  gcd(int  u,  int  v)  {  if  (u  *  v  ==  0)  {  return  (Math.abs(u)  +  Math.abs(v));  }            [BUGGY]  char  k  =(char)Math.ceil(u,  v);  [BUGGY]      if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  short  NS  PS  ZS  boolean  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  k  t  u  v  	projects/Math94/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	420	420	1	replace	char  k  =(char)Math.ceil(u,  v);	  char    k    =(char)Math.ceil(u);    	non-compiled	[CE]  not  a  statement	62	None	replace
26	[BUG]  [BUGGY]  char  k  =(char)Math.ceil(u  +  1);  [CE]  not  a  statement  [FE]                        AssertionFailedError      [CONTEXT]      public  static  int  gcd(int  u,  int  v)  {  if  (u  *  v  ==  0)  {  return  (Math.abs(u)  +  Math.abs(v));  }            [BUGGY]  char  k  =(char)Math.ceil(u  +  1);  [BUGGY]      if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  short  NS  PS  ZS  boolean  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  k  t  u  v  	projects/Math94/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	420	420	1	replace	char  k  =(char)Math.ceil(u  +  1);	  char    k    =(char)Math.ceil(u);    	non-compiled	[CE]  not  a  statement	62	None	replace
27	[BUG]  [BUGGY]  int  u  =(int)Math.pow(10,  4);  [CE]  not  a  statement  [FE]                      AssertionFailedError      [CONTEXT]      public  static  int  gcd(int  u,  int  v)  {  if  (u  *  v  ==  0)  {  return  (Math.abs(u)  +  Math.abs(v));  }            [BUGGY]  int  u  =(int)Math.pow(10,  4);  [BUGGY]      if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  short  NS  PS  ZS  boolean  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  k  t  u  v  	projects/Math94/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	420	420	1	replace	int  u  =(int)Math.pow(10,  4);	  int    u    =(int)Math.pow(10,    3);    	non-compiled	[CE]  not  a  statement	43	None	replace
28	[BUG]  [BUGGY]  int  k  =(int)Math.pow(10,  gcd  -  1);  [CE]  not  a  statement  [FE]                  AssertionFailedError      [CONTEXT]      public  static  int  gcd(int  u,  int  v)  {  if  (u  *  v  ==  0)  {  return  (Math.abs(u)  +  Math.abs(v));  }            [BUGGY]  int  k  =(int)Math.pow(10,  gcd  -  1);  [BUGGY]      if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  short  NS  PS  ZS  boolean  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  k  t  u  v  	projects/Math94/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	420	420	1	replace	int  k  =(int)Math.pow(10,  gcd  -  1);	  int    k    =(int)Math.pow(10,    gcd);    	non-compiled	[CE]  not  a  statement	1	None	replace
29	[BUG]  [BUGGY]  int  k  =(int)Math.pow(10,  gcd  +  1);  [CE]  not  a  statement  [FE]                    AssertionFailedError      [CONTEXT]      public  static  int  gcd(int  u,  int  v)  {  if  (u  *  v  ==  0)  {  return  (Math.abs(u)  +  Math.abs(v));  }            [BUGGY]  int  k  =(int)Math.pow(10,  gcd  +  1);  [BUGGY]      if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  short  NS  PS  ZS  boolean  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  k  t  u  v  	projects/Math94/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	420	420	1	replace	int  k  =(int)Math.pow(10,  gcd  +  1);	  int    k    =(int)Math.pow(10,    gcd);    	non-compiled	[CE]  not  a  statement	1	None	replace
30	[BUG]  [BUGGY]  char  k  =(char)Math.pow(10,  gcd);  [CE]  not  a  statement  [FE]                      AssertionFailedError      [CONTEXT]      public  static  int  gcd(int  u,  int  v)  {  if  (u  *  v  ==  0)  {  return  (Math.abs(u)  +  Math.abs(v));  }            [BUGGY]  char  k  =(char)Math.pow(10,  gcd);  [BUGGY]      if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  short  NS  PS  ZS  boolean  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  k  t  u  v  	projects/Math94/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	420	420	1	replace	char  k  =(char)Math.pow(10,  gcd);	  int    k    =(int)Math.pow(10,    gcd);    	non-compiled	[CE]  not  a  statement	1	None	replace
31	[BUG]  [BUGGY]  int  u  =(int)Math.pow(10,  10);  [CE]  not  a  statement  [FE]                  AssertionFailedError      [CONTEXT]      public  static  int  gcd(int  u,  int  v)  {  if  (u  *  v  ==  0)  {  return  (Math.abs(u)  +  Math.abs(v));  }            [BUGGY]  int  u  =(int)Math.pow(10,  10);  [BUGGY]      if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  short  NS  PS  ZS  boolean  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  k  t  u  v  	projects/Math94/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	420	420	1	replace	int  u  =(int)Math.pow(10,  10);	  int    u    =(int)Math.pow(10,    16);    	non-compiled	[CE]  not  a  statement	41	None	replace
32	[BUG]  [BUGGY]  int  u  =(int)Math.pow(10,  15);  [CE]  not  a  statement  [FE]                    AssertionFailedError      [CONTEXT]      public  static  int  gcd(int  u,  int  v)  {  if  (u  *  v  ==  0)  {  return  (Math.abs(u)  +  Math.abs(v));  }            [BUGGY]  int  u  =(int)Math.pow(10,  15);  [BUGGY]      if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  short  NS  PS  ZS  boolean  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  k  t  u  v  	projects/Math94/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	420	420	1	replace	int  u  =(int)Math.pow(10,  15);	  int    u    =(int)Math.pow(10,    16);    	non-compiled	[CE]  not  a  statement	41	None	replace
33	[BUG]  [BUGGY]  int  k  =(int)Math.ceil(u  *  1);  [CE]  not  a  statement  [FE]                        AssertionFailedError      [CONTEXT]      public  static  int  gcd(int  u,  int  v)  {  if  (u  *  v  ==  0)  {  return  (Math.abs(u)  +  Math.abs(v));  }            [BUGGY]  int  k  =(int)Math.ceil(u  *  1);  [BUGGY]      if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  short  NS  PS  ZS  boolean  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  k  t  u  v  	projects/Math94/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	420	420	1	replace	int  k  =(int)Math.ceil(u  *  1);	  int    k    =(int)Math.ceil(u    +    1);    	non-compiled	[CE]  not  a  statement	10	None	replace
34	[BUG]  [BUGGY]  int  k  =(int)Math.ceil(u,  v  +  1);  [CE]  not  a  statement  [FE]                          AssertionFailedError      [CONTEXT]      public  static  int  gcd(int  u,  int  v)  {  if  (u  *  v  ==  0)  {  return  (Math.abs(u)  +  Math.abs(v));  }            [BUGGY]  int  k  =(int)Math.ceil(u,  v  +  1);  [BUGGY]      if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  short  NS  PS  ZS  boolean  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  k  t  u  v  	projects/Math94/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	420	420	1	replace	int  k  =(int)Math.ceil(u,  v  +  1);	  int    k    =(int)Math.ceil(u    +    1);    	non-compiled	[CE]  not  a  statement	10	None	replace
35	[BUG]  [BUGGY]  int  k  =(int)Math.ceil(u  +  1,  v);  [CE]  not  a  statement  [FE]                            AssertionFailedError      [CONTEXT]      public  static  int  gcd(int  u,  int  v)  {  if  (u  *  v  ==  0)  {  return  (Math.abs(u)  +  Math.abs(v));  }            [BUGGY]  int  k  =(int)Math.ceil(u  +  1,  v);  [BUGGY]      if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  short  NS  PS  ZS  boolean  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  k  t  u  v  	projects/Math94/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	420	420	1	replace	int  k  =(int)Math.ceil(u  +  1,  v);	  int    k    =(int)Math.ceil(u    +    1);    	non-compiled	[CE]  not  a  statement	10	None	replace
36	[BUG]  [BUGGY]  if(u  <  0  ||  v  >=  0)  {  [CE]  not  a  statement  [FE]            AssertionFailedError      [CONTEXT]      public  static  int  gcd(int  u,  int  v)  {  if  (u  *  v  ==  0)  {  return  (Math.abs(u)  +  Math.abs(v));  }            [BUGGY]  if(u  <  0  ||  v  >=  0)  {  [BUGGY]      u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  short  NS  PS  ZS  boolean  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  k  t  u  v  	projects/Math94/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	420	420	1	replace	if(u  <  0  ||  v  >=  0)  {	  if(u    <    0    ||    v    >    0)    {    	non-compiled	[CE]  not  a  statement	5	None	replace
37	[BUG]  [BUGGY]  if(u  >=  0  ||  v  >  0)  {  [CE]  not  a  statement  [FE]              AssertionFailedError      [CONTEXT]      public  static  int  gcd(int  u,  int  v)  {  if  (u  *  v  ==  0)  {  return  (Math.abs(u)  +  Math.abs(v));  }            [BUGGY]  if(u  >=  0  ||  v  >  0)  {  [BUGGY]      u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  short  NS  PS  ZS  boolean  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  k  t  u  v  	projects/Math94/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	420	420	1	replace	if(u  >=  0  ||  v  >  0)  {	  if(u    <    0    ||    v    >    0)    {    	non-compiled	[CE]  not  a  statement	5	None	replace
38	[BUG]  [BUGGY]  if(u  <  0  ||  v  ==  0)  {  [CE]  not  a  statement  [FE]                AssertionFailedError      [CONTEXT]      public  static  int  gcd(int  u,  int  v)  {  if  (u  *  v  ==  0)  {  return  (Math.abs(u)  +  Math.abs(v));  }            [BUGGY]  if(u  <  0  ||  v  ==  0)  {  [BUGGY]      u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  short  NS  PS  ZS  boolean  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  k  t  u  v  	projects/Math94/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	420	420	1	replace	if(u  <  0  ||  v  ==  0)  {	  if(u    <    0    ||    v    >    0)    {    	non-compiled	[CE]  not  a  statement	5	None	replace
39	[BUG]  [BUGGY]  if(u  ==  0  ||  v  ==  0)  {  [CE]  not  a  statement  [FE]              AssertionFailedError      [CONTEXT]      public  static  int  gcd(int  u,  int  v)  {  if  (u  *  v  ==  0)  {  return  (Math.abs(u)  +  Math.abs(v));  }            [BUGGY]  if(u  ==  0  ||  v  ==  0)  {  [BUGGY]      u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  short  NS  PS  ZS  boolean  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  k  t  u  v  	projects/Math94/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	420	420	1	replace	if(u  ==  0  ||  v  ==  0)  {	  if(v    ==    0)    {    	non-compiled	[CE]  not  a  statement	54	None	replace
40	[BUG]  [BUGGY]  if(u  <  0  ||  v  <  =  0)  {  [CE]  not  a  statement  [FE]            AssertionFailedError      [CONTEXT]      public  static  int  gcd(int  u,  int  v)  {  if  (u  *  v  ==  0)  {  return  (Math.abs(u)  +  Math.abs(v));  }            [BUGGY]  if(u  <  0  ||  v  <  =  0)  {  [BUGGY]      u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  short  NS  PS  ZS  boolean  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  k  t  u  v  	projects/Math94/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	420	420	1	replace	if(u  <  0  ||  v  <  =  0)  {	  if(u    >    0    ||    v    <    =    0)    {    	non-compiled	[CE]  not  a  statement	72	None	replace
41	[BUG]  [BUGGY]  if(u  <  =  0  ||  v  <  =  0)  {  [CE]  not  a  statement  [FE]              AssertionFailedError      [CONTEXT]      public  static  int  gcd(int  u,  int  v)  {  if  (u  *  v  ==  0)  {  return  (Math.abs(u)  +  Math.abs(v));  }            [BUGGY]  if(u  <  =  0  ||  v  <  =  0)  {  [BUGGY]      u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  short  NS  PS  ZS  boolean  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  k  t  u  v  	projects/Math94/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	420	420	1	replace	if(u  <  =  0  ||  v  <  =  0)  {	  if(u    >    0    ||    v    <    =    0)    {    	non-compiled	[CE]  not  a  statement	72	None	replace
42	[BUG]  [BUGGY]  int  k  =(int)Math.pow(10,  x  -  1);  [CE]  not  a  statement  [FE]                AssertionFailedError      [CONTEXT]      public  static  int  gcd(int  u,  int  v)  {  if  (u  *  v  ==  0)  {  return  (Math.abs(u)  +  Math.abs(v));  }            [BUGGY]  int  k  =(int)Math.pow(10,  x  -  1);  [BUGGY]      if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  short  NS  PS  ZS  boolean  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  k  t  u  v  	projects/Math94/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	420	420	1	replace	int  k  =(int)Math.pow(10,  x  -  1);	  int    k    =(int)Math.pow(10,    y    -    1);    	non-compiled	[CE]  not  a  statement	68	None	replace
43	[BUG]  [BUGGY]  int  k  =(int)Math.ceil(u,  v  *  v);  [CE]  not  a  statement  [FE]                    AssertionFailedError      [CONTEXT]      public  static  int  gcd(int  u,  int  v)  {  if  (u  *  v  ==  0)  {  return  (Math.abs(u)  +  Math.abs(v));  }            [BUGGY]  int  k  =(int)Math.ceil(u,  v  *  v);  [BUGGY]      if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  short  NS  PS  ZS  boolean  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  k  t  u  v  	projects/Math94/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	420	420	1	replace	int  k  =(int)Math.ceil(u,  v  *  v);	  int    k    =(int)Math.ceil(u,    v);    	non-compiled	[CE]  not  a  statement	8	None	replace
44	[BUG]  [BUGGY]  int  k  =(int)Math.ceil(u,  v  -  1);  [CE]  not  a  statement  [FE]                      AssertionFailedError      [CONTEXT]      public  static  int  gcd(int  u,  int  v)  {  if  (u  *  v  ==  0)  {  return  (Math.abs(u)  +  Math.abs(v));  }            [BUGGY]  int  k  =(int)Math.ceil(u,  v  -  1);  [BUGGY]      if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  short  NS  PS  ZS  boolean  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  k  t  u  v  	projects/Math94/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	420	420	1	replace	int  k  =(int)Math.ceil(u,  v  -  1);	  int    k    =(int)Math.ceil(u,    v);    	non-compiled	[CE]  not  a  statement	8	None	replace
45	[BUG]  [BUGGY]  int  u  =(int)Math.pow(10,  -v  +  1);  [CE]  not  a  statement  [FE]                AssertionFailedError      [CONTEXT]      public  static  int  gcd(int  u,  int  v)  {  if  (u  *  v  ==  0)  {  return  (Math.abs(u)  +  Math.abs(v));  }            [BUGGY]  int  u  =(int)Math.pow(10,  -v  +  1);  [BUGGY]      if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  short  NS  PS  ZS  boolean  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  k  t  u  v  	projects/Math94/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	420	420	1	replace	int  u  =(int)Math.pow(10,  -v  +  1);	  int    u    =(int)Math.pow(10,    -v);    	non-compiled	[CE]  not  a  statement	59	None	replace
46	[BUG]  [BUGGY]  int  u  =(int)Math.pow(10,  -v  -  1);  [CE]  not  a  statement  [FE]                  AssertionFailedError      [CONTEXT]      public  static  int  gcd(int  u,  int  v)  {  if  (u  *  v  ==  0)  {  return  (Math.abs(u)  +  Math.abs(v));  }            [BUGGY]  int  u  =(int)Math.pow(10,  -v  -  1);  [BUGGY]      if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  short  NS  PS  ZS  boolean  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  k  t  u  v  	projects/Math94/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	420	420	1	replace	int  u  =(int)Math.pow(10,  -v  -  1);	  int    u    =(int)Math.pow(10,    -v);    	non-compiled	[CE]  not  a  statement	59	None	replace
47	[BUG]  [BUGGY]  int  u  =(int)Math.pow(10,  -1);  [CE]  not  a  statement  [FE]                    AssertionFailedError      [CONTEXT]      public  static  int  gcd(int  u,  int  v)  {  if  (u  *  v  ==  0)  {  return  (Math.abs(u)  +  Math.abs(v));  }            [BUGGY]  int  u  =(int)Math.pow(10,  -1);  [BUGGY]      if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  short  NS  PS  ZS  boolean  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  k  t  u  v  	projects/Math94/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	420	420	1	replace	int  u  =(int)Math.pow(10,  -1);	  int    u    =(int)Math.pow(10,    -v);    	non-compiled	[CE]  not  a  statement	59	None	replace
48	[BUG]  [BUGGY]  int  k  =(int)Math.pow(10,  -v  *  1);  [CE]  not  a  statement  [FE]                    AssertionFailedError      [CONTEXT]      public  static  int  gcd(int  u,  int  v)  {  if  (u  *  v  ==  0)  {  return  (Math.abs(u)  +  Math.abs(v));  }            [BUGGY]  int  k  =(int)Math.pow(10,  -v  *  1);  [BUGGY]      if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  short  NS  PS  ZS  boolean  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  k  t  u  v  	projects/Math94/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	420	420	1	replace	int  k  =(int)Math.pow(10,  -v  *  1);	  int    k    =(int)Math.pow(10,    -v    +    1);    	non-compiled	[CE]  not  a  statement	20	None	replace
49	[BUG]  [BUGGY]  int  k  =(int)Math.pow(10,  -v  /  1);  [CE]  not  a  statement  [FE]                      AssertionFailedError      [CONTEXT]      public  static  int  gcd(int  u,  int  v)  {  if  (u  *  v  ==  0)  {  return  (Math.abs(u)  +  Math.abs(v));  }            [BUGGY]  int  k  =(int)Math.pow(10,  -v  /  1);  [BUGGY]      if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  short  NS  PS  ZS  boolean  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  k  t  u  v  	projects/Math94/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	420	420	1	replace	int  k  =(int)Math.pow(10,  -v  /  1);	  int    k    =(int)Math.pow(10,    -v    +    1);    	non-compiled	[CE]  not  a  statement	20	None	replace
50	[BUG]  [BUGGY]  char  u  =(char)Math.ceil(gcd,  v);  [CE]  not  a  statement  [FE]                AssertionFailedError      [CONTEXT]      public  static  int  gcd(int  u,  int  v)  {  if  (u  *  v  ==  0)  {  return  (Math.abs(u)  +  Math.abs(v));  }            [BUGGY]  char  u  =(char)Math.ceil(gcd,  v);  [BUGGY]      if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  short  NS  PS  ZS  boolean  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  k  t  u  v  	projects/Math94/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	420	420	1	replace	char  u  =(char)Math.ceil(gcd,  v);	  char    u    =(char)Math.ceil(gcd);    	non-compiled	[CE]  not  a  statement	13	None	replace
51	[BUG]  [BUGGY]  char  u  =(char)Math.ceil(gcd,  0);  [CE]  not  a  statement  [FE]                  AssertionFailedError      [CONTEXT]      public  static  int  gcd(int  u,  int  v)  {  if  (u  *  v  ==  0)  {  return  (Math.abs(u)  +  Math.abs(v));  }            [BUGGY]  char  u  =(char)Math.ceil(gcd,  0);  [BUGGY]      if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  short  NS  PS  ZS  boolean  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  k  t  u  v  	projects/Math94/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	420	420	1	replace	char  u  =(char)Math.ceil(gcd,  0);	  char    u    =(char)Math.ceil(gcd);    	non-compiled	[CE]  not  a  statement	13	None	replace
52	[BUG]  [BUGGY]  char  u  =(char)Math.ceil(gcd  +  1);  [CE]  not  a  statement  [FE]                    AssertionFailedError      [CONTEXT]      public  static  int  gcd(int  u,  int  v)  {  if  (u  *  v  ==  0)  {  return  (Math.abs(u)  +  Math.abs(v));  }            [BUGGY]  char  u  =(char)Math.ceil(gcd  +  1);  [BUGGY]      if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  short  NS  PS  ZS  boolean  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  k  t  u  v  	projects/Math94/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	420	420	1	replace	char  u  =(char)Math.ceil(gcd  +  1);	  char    u    =(char)Math.ceil(gcd);    	non-compiled	[CE]  not  a  statement	13	None	replace
53	[BUG]  [BUGGY]  int  u  =(int)Math.ceil(gcd,  0,  u);  [CE]  not  a  statement  [FE]            AssertionFailedError      [CONTEXT]      public  static  int  gcd(int  u,  int  v)  {  if  (u  *  v  ==  0)  {  return  (Math.abs(u)  +  Math.abs(v));  }            [BUGGY]  int  u  =(int)Math.ceil(gcd,  0,  u);  [BUGGY]      if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  short  NS  PS  ZS  boolean  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  k  t  u  v  	projects/Math94/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	420	420	1	replace	int  u  =(int)Math.ceil(gcd,  0,  u);	  int    u    =(int)Math.ceil(gcd,    0,    v);    	non-compiled	[CE]  not  a  statement	66	None	replace
54	[BUG]  [BUGGY]  char  u  =(char)Math.ceil(gcd,  0,  v);  [CE]  not  a  statement  [FE]              AssertionFailedError      [CONTEXT]      public  static  int  gcd(int  u,  int  v)  {  if  (u  *  v  ==  0)  {  return  (Math.abs(u)  +  Math.abs(v));  }            [BUGGY]  char  u  =(char)Math.ceil(gcd,  0,  v);  [BUGGY]      if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  short  NS  PS  ZS  boolean  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  k  t  u  v  	projects/Math94/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	420	420	1	replace	char  u  =(char)Math.ceil(gcd,  0,  v);	  int    u    =(int)Math.ceil(gcd,    0,    v);    	non-compiled	[CE]  not  a  statement	66	None	replace
55	[BUG]  [BUGGY]  float  u  =(float)Math.ceil(gcd,  0,  v);  [CE]  not  a  statement  [FE]                AssertionFailedError      [CONTEXT]      public  static  int  gcd(int  u,  int  v)  {  if  (u  *  v  ==  0)  {  return  (Math.abs(u)  +  Math.abs(v));  }            [BUGGY]  float  u  =(float)Math.ceil(gcd,  0,  v);  [BUGGY]      if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  short  NS  PS  ZS  boolean  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  k  t  u  v  	projects/Math94/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	420	420	1	replace	float  u  =(float)Math.ceil(gcd,  0,  v);	  int    u    =(int)Math.ceil(gcd,    0,    v);    	non-compiled	[CE]  not  a  statement	66	None	replace
56	[BUG]  [BUGGY]  int  u  =(int)Math.ceil(gcd,  0,  v  -  1);  [CE]  not  a  statement  [FE]                  AssertionFailedError      [CONTEXT]      public  static  int  gcd(int  u,  int  v)  {  if  (u  *  v  ==  0)  {  return  (Math.abs(u)  +  Math.abs(v));  }            [BUGGY]  int  u  =(int)Math.ceil(gcd,  0,  v  -  1);  [BUGGY]      if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  short  NS  PS  ZS  boolean  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  k  t  u  v  	projects/Math94/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	420	420	1	replace	int  u  =(int)Math.ceil(gcd,  0,  v  -  1);	  int    u    =(int)Math.ceil(gcd,    0,    v);    	non-compiled	[CE]  not  a  statement	66	None	replace
57	[BUG]  [BUGGY]  int  k  =(int)Math.ceil(gcd(u,  v)-  1);  [CE]  not  a  statement  [FE]                      AssertionFailedError      [CONTEXT]      public  static  int  gcd(int  u,  int  v)  {  if  (u  *  v  ==  0)  {  return  (Math.abs(u)  +  Math.abs(v));  }            [BUGGY]  int  k  =(int)Math.ceil(gcd(u,  v)-  1);  [BUGGY]      if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  short  NS  PS  ZS  boolean  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  k  t  u  v  	projects/Math94/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	420	420	1	replace	int  k  =(int)Math.ceil(gcd(u,  v)-  1);	  int    k    =(int)Math.ceil(gcd(u,    v));    	non-compiled	[CE]  not  a  statement	9	None	replace
58	[BUG]  [BUGGY]  int  k  =(int)Math.ceil(gcd(u,  v)+  1);  [CE]  not  a  statement  [FE]                        AssertionFailedError      [CONTEXT]      public  static  int  gcd(int  u,  int  v)  {  if  (u  *  v  ==  0)  {  return  (Math.abs(u)  +  Math.abs(v));  }            [BUGGY]  int  k  =(int)Math.ceil(gcd(u,  v)+  1);  [BUGGY]      if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  short  NS  PS  ZS  boolean  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  k  t  u  v  	projects/Math94/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	420	420	1	replace	int  k  =(int)Math.ceil(gcd(u,  v)+  1);	  int    k    =(int)Math.ceil(gcd(u,    v));    	non-compiled	[CE]  not  a  statement	9	None	replace
59	[BUG]  [BUGGY]  int  k  =(int)Math.ceil(gcd(u,  v)/  2);  [CE]  not  a  statement  [FE]                          AssertionFailedError      [CONTEXT]      public  static  int  gcd(int  u,  int  v)  {  if  (u  *  v  ==  0)  {  return  (Math.abs(u)  +  Math.abs(v));  }            [BUGGY]  int  k  =(int)Math.ceil(gcd(u,  v)/  2);  [BUGGY]      if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  short  NS  PS  ZS  boolean  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  k  t  u  v  	projects/Math94/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	420	420	1	replace	int  k  =(int)Math.ceil(gcd(u,  v)/  2);	  int    k    =(int)Math.ceil(gcd(u,    v));    	non-compiled	[CE]  not  a  statement	9	None	replace
60	[BUG]  [BUGGY]  String  u  =(String)Math.floor(u);  [CE]  not  a  statement  [FE]                AssertionFailedError      [CONTEXT]      public  static  int  gcd(int  u,  int  v)  {  if  (u  *  v  ==  0)  {  return  (Math.abs(u)  +  Math.abs(v));  }            [BUGGY]  String  u  =(String)Math.floor(u);  [BUGGY]      if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  short  NS  PS  ZS  boolean  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  k  t  u  v  	projects/Math94/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	420	420	1	replace	String  u  =(String)Math.floor(u);	  char    u    =(char)Math.floor(u);    	non-compiled	[CE]  not  a  statement	74	None	replace
61	[BUG]  [BUGGY]  char  u  =(char)Math.ceil(u);  [CE]  not  a  statement  [FE]                  AssertionFailedError      [CONTEXT]      public  static  int  gcd(int  u,  int  v)  {  if  (u  *  v  ==  0)  {  return  (Math.abs(u)  +  Math.abs(v));  }            [BUGGY]  char  u  =(char)Math.ceil(u);  [BUGGY]      if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  short  NS  PS  ZS  boolean  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  k  t  u  v  	projects/Math94/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	420	420	1	replace	char  u  =(char)Math.ceil(u);	  char    u    =(char)Math.floor(u);    	non-compiled	[CE]  not  a  statement	74	None	replace
62	[BUG]  [BUGGY]  char  u  =(char)Math.floor(u  +  1);  [CE]  not  a  statement  [FE]                    AssertionFailedError      [CONTEXT]      public  static  int  gcd(int  u,  int  v)  {  if  (u  *  v  ==  0)  {  return  (Math.abs(u)  +  Math.abs(v));  }            [BUGGY]  char  u  =(char)Math.floor(u  +  1);  [BUGGY]      if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  short  NS  PS  ZS  boolean  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  k  t  u  v  	projects/Math94/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	420	420	1	replace	char  u  =(char)Math.floor(u  +  1);	  char    u    =(char)Math.floor(u);    	non-compiled	[CE]  not  a  statement	74	None	replace
63	[BUG]  [BUGGY]  int  u  =(int)Math.ceil(gcd(u,  v));  [CE]  not  a  statement  [FE]                AssertionFailedError      [CONTEXT]      public  static  int  gcd(int  u,  int  v)  {  if  (u  *  v  ==  0)  {  return  (Math.abs(u)  +  Math.abs(v));  }            [BUGGY]  int  u  =(int)Math.ceil(gcd(u,  v));  [BUGGY]      if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  short  NS  PS  ZS  boolean  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  k  t  u  v  	projects/Math94/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	420	420	1	replace	int  u  =(int)Math.ceil(gcd(u,  v));	  int    u    =(int)Math.ceil(u);    	non-compiled	[CE]  not  a  statement	37	None	replace
64	[BUG]  [BUGGY]  int  u  =(int)Math.ceil(u  +  1);  [CE]  not  a  statement  [FE]                  AssertionFailedError      [CONTEXT]      public  static  int  gcd(int  u,  int  v)  {  if  (u  *  v  ==  0)  {  return  (Math.abs(u)  +  Math.abs(v));  }            [BUGGY]  int  u  =(int)Math.ceil(u  +  1);  [BUGGY]      if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  short  NS  PS  ZS  boolean  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  k  t  u  v  	projects/Math94/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	420	420	1	replace	int  u  =(int)Math.ceil(u  +  1);	  int    u    =(int)Math.ceil(u);    	non-compiled	[CE]  not  a  statement	37	None	replace
65	[BUG]  [BUGGY]  float  v  =(float)Math.ceil(u);  [CE]  not  a  statement  [FE]                AssertionFailedError      [CONTEXT]      public  static  int  gcd(int  u,  int  v)  {  if  (u  *  v  ==  0)  {  return  (Math.abs(u)  +  Math.abs(v));  }            [BUGGY]  float  v  =(float)Math.ceil(u);  [BUGGY]      if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  short  NS  PS  ZS  boolean  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  k  t  u  v  	projects/Math94/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	420	420	1	replace	float  v  =(float)Math.ceil(u);	  float    v    =(float)Math.floor(u);    	non-compiled	[CE]  not  a  statement	52	None	replace
66	[BUG]  [BUGGY]  float  v  =(float)Math.log(u);  [CE]  not  a  statement  [FE]                  AssertionFailedError      [CONTEXT]      public  static  int  gcd(int  u,  int  v)  {  if  (u  *  v  ==  0)  {  return  (Math.abs(u)  +  Math.abs(v));  }            [BUGGY]  float  v  =(float)Math.log(u);  [BUGGY]      if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  short  NS  PS  ZS  boolean  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  k  t  u  v  	projects/Math94/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	420	420	1	replace	float  v  =(float)Math.log(u);	  float    v    =(float)Math.floor(u);    	non-compiled	[CE]  not  a  statement	52	None	replace
67	[BUG]  [BUGGY]  float  v  =(float)Math.floor(u  +  1);  [CE]  not  a  statement  [FE]                    AssertionFailedError      [CONTEXT]      public  static  int  gcd(int  u,  int  v)  {  if  (u  *  v  ==  0)  {  return  (Math.abs(u)  +  Math.abs(v));  }            [BUGGY]  float  v  =(float)Math.floor(u  +  1);  [BUGGY]      if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  short  NS  PS  ZS  boolean  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  k  t  u  v  	projects/Math94/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	420	420	1	replace	float  v  =(float)Math.floor(u  +  1);	  float    v    =(float)Math.floor(u);    	non-compiled	[CE]  not  a  statement	52	None	replace
68	[BUG]  [BUGGY]  String  k  =(String)Math.ceil(v);  [CE]  not  a  statement  [FE]            AssertionFailedError      [CONTEXT]      public  static  int  gcd(int  u,  int  v)  {  if  (u  *  v  ==  0)  {  return  (Math.abs(u)  +  Math.abs(v));  }            [BUGGY]  String  k  =(String)Math.ceil(v);  [BUGGY]      if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  short  NS  PS  ZS  boolean  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  k  t  u  v  	projects/Math94/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	420	420	1	replace	String  k  =(String)Math.ceil(v);	  char    k    =(char)Math.ceil(v);    	non-compiled	[CE]  not  a  statement	40	None	replace
69	[BUG]  [BUGGY]  if(u  ==  0  ||  k  ==  0)  {  [CE]  not  a  statement  [FE]            AssertionFailedError      [CONTEXT]      public  static  int  gcd(int  u,  int  v)  {  if  (u  *  v  ==  0)  {  return  (Math.abs(u)  +  Math.abs(v));  }            [BUGGY]  if(u  ==  0  ||  k  ==  0)  {  [BUGGY]      u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  short  NS  PS  ZS  boolean  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  k  t  u  v  	projects/Math94/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	420	420	1	replace	if(u  ==  0  ||  k  ==  0)  {	  if(k    ==    0)    {    	non-compiled	[CE]  not  a  statement	69	None	replace
70	[BUG]  [BUGGY]  char  k  =(char)Math.pow(10,  gcd(u,  v));  [CE]  not  a  statement  [FE]              AssertionFailedError      [CONTEXT]      public  static  int  gcd(int  u,  int  v)  {  if  (u  *  v  ==  0)  {  return  (Math.abs(u)  +  Math.abs(v));  }            [BUGGY]  char  k  =(char)Math.pow(10,  gcd(u,  v));  [BUGGY]      if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  short  NS  PS  ZS  boolean  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  k  t  u  v  	projects/Math94/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	420	420	1	replace	char  k  =(char)Math.pow(10,  gcd(u,  v));	  int    k    =(int)Math.pow(10,    gcd(u,    v));    	non-compiled	[CE]  not  a  statement	4	None	replace
71	[BUG]  [BUGGY]  int  k  =(int)Math.pow(10,  gcd(u,  v)-  1);  [CE]  not  a  statement  [FE]                AssertionFailedError      [CONTEXT]      public  static  int  gcd(int  u,  int  v)  {  if  (u  *  v  ==  0)  {  return  (Math.abs(u)  +  Math.abs(v));  }            [BUGGY]  int  k  =(int)Math.pow(10,  gcd(u,  v)-  1);  [BUGGY]      if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  short  NS  PS  ZS  boolean  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  k  t  u  v  	projects/Math94/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	420	420	1	replace	int  k  =(int)Math.pow(10,  gcd(u,  v)-  1);	  int    k    =(int)Math.pow(10,    gcd(u,    v));    	non-compiled	[CE]  not  a  statement	4	None	replace
72	[BUG]  [BUGGY]  int  k  =(int)Math.pow(10,  gcd(u,  v),  32);  [CE]  not  a  statement  [FE]                  AssertionFailedError      [CONTEXT]      public  static  int  gcd(int  u,  int  v)  {  if  (u  *  v  ==  0)  {  return  (Math.abs(u)  +  Math.abs(v));  }            [BUGGY]  int  k  =(int)Math.pow(10,  gcd(u,  v),  32);  [BUGGY]      if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  short  NS  PS  ZS  boolean  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  k  t  u  v  	projects/Math94/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	420	420	1	replace	int  k  =(int)Math.pow(10,  gcd(u,  v),  32);	  int    k    =(int)Math.pow(10,    gcd(u,    v));    	non-compiled	[CE]  not  a  statement	4	None	replace
73	[BUG]  [BUGGY]  if(u  <  0  ||  v  >=  31)  {  [CE]  not  a  statement  [FE]              AssertionFailedError      [CONTEXT]      public  static  int  gcd(int  u,  int  v)  {  if  (u  *  v  ==  0)  {  return  (Math.abs(u)  +  Math.abs(v));  }            [BUGGY]  if(u  <  0  ||  v  >=  31)  {  [BUGGY]      u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  short  NS  PS  ZS  boolean  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  k  t  u  v  	projects/Math94/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	420	420	1	replace	if(u  <  0  ||  v  >=  31)  {	  if(u    >    0    ||    v    >=    31)    {    	non-compiled	[CE]  not  a  statement	56	None	replace
74	[BUG]  [BUGGY]  if(u  >  0  ||  v  ==  31)  {  [CE]  not  a  statement  [FE]                AssertionFailedError      [CONTEXT]      public  static  int  gcd(int  u,  int  v)  {  if  (u  *  v  ==  0)  {  return  (Math.abs(u)  +  Math.abs(v));  }            [BUGGY]  if(u  >  0  ||  v  ==  31)  {  [BUGGY]      u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  short  NS  PS  ZS  boolean  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  k  t  u  v  	projects/Math94/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	420	420	1	replace	if(u  >  0  ||  v  ==  31)  {	  if(u    >    0    ||    v    >=    31)    {    	non-compiled	[CE]  not  a  statement	56	None	replace
75	[BUG]  [BUGGY]  if(u  <  =  0  ||  v  <  32)  {  [CE]  not  a  statement  [FE]                AssertionFailedError      [CONTEXT]      public  static  int  gcd(int  u,  int  v)  {  if  (u  *  v  ==  0)  {  return  (Math.abs(u)  +  Math.abs(v));  }            [BUGGY]  if(u  <  =  0  ||  v  <  32)  {  [BUGGY]      u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  short  NS  PS  ZS  boolean  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  k  t  u  v  	projects/Math94/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	420	420	1	replace	if(u  <  =  0  ||  v  <  32)  {	  if(u    >    0    ||    v    <    32)    {    	non-compiled	[CE]  not  a  statement	32	None	replace
76	[BUG]  [BUGGY]  if(u  <  0  ||  v  >  32)  {  [CE]  not  a  statement  [FE]                  AssertionFailedError      [CONTEXT]      public  static  int  gcd(int  u,  int  v)  {  if  (u  *  v  ==  0)  {  return  (Math.abs(u)  +  Math.abs(v));  }            [BUGGY]  if(u  <  0  ||  v  >  32)  {  [BUGGY]      u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  short  NS  PS  ZS  boolean  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  k  t  u  v  	projects/Math94/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	420	420	1	replace	if(u  <  0  ||  v  >  32)  {	  if(u    >    0    ||    v    <    32)    {    	non-compiled	[CE]  not  a  statement	32	None	replace
77	[BUG]  [BUGGY]  char  k  =(char)Math.pow(10,  c);  [CE]  not  a  statement  [FE]                    AssertionFailedError      [CONTEXT]      public  static  int  gcd(int  u,  int  v)  {  if  (u  *  v  ==  0)  {  return  (Math.abs(u)  +  Math.abs(v));  }            [BUGGY]  char  k  =(char)Math.pow(10,  c);  [BUGGY]      if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  short  NS  PS  ZS  boolean  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  k  t  u  v  	projects/Math94/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	420	420	1	replace	char  k  =(char)Math.pow(10,  c);	  int    k    =(int)Math.pow(10,    c);    	non-compiled	[CE]  not  a  statement	2	None	replace
78	[BUG]  [BUGGY]  if(u  <  =  0  ||  v  ==  0)  {  [CE]  not  a  statement  [FE]              AssertionFailedError      [CONTEXT]      public  static  int  gcd(int  u,  int  v)  {  if  (u  *  v  ==  0)  {  return  (Math.abs(u)  +  Math.abs(v));  }            [BUGGY]  if(u  <  =  0  ||  v  ==  0)  {  [BUGGY]      u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  short  NS  PS  ZS  boolean  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  k  t  u  v  	projects/Math94/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	420	420	1	replace	if(u  <  =  0  ||  v  ==  0)  {	  if(u    >    0    ||    v    ==    0)    {    	non-compiled	[CE]  not  a  statement	50	None	replace
79	[BUG]  [BUGGY]  if(u  <  =  0  ||  v  >  31)  {  [CE]  not  a  statement  [FE]                  AssertionFailedError      [CONTEXT]      public  static  int  gcd(int  u,  int  v)  {  if  (u  *  v  ==  0)  {  return  (Math.abs(u)  +  Math.abs(v));  }            [BUGGY]  if(u  <  =  0  ||  v  >  31)  {  [BUGGY]      u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  short  NS  PS  ZS  boolean  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  k  t  u  v  	projects/Math94/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	420	420	1	replace	if(u  <  =  0  ||  v  >  31)  {	  if(u    <    0    ||    v    >    31)    {    	non-compiled	[CE]  not  a  statement	33	None	replace
80	[BUG]  [BUGGY]  if(u  >=  0  ||  v  >  31)  {  [CE]  not  a  statement  [FE]                    AssertionFailedError      [CONTEXT]      public  static  int  gcd(int  u,  int  v)  {  if  (u  *  v  ==  0)  {  return  (Math.abs(u)  +  Math.abs(v));  }            [BUGGY]  if(u  >=  0  ||  v  >  31)  {  [BUGGY]      u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  short  NS  PS  ZS  boolean  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  k  t  u  v  	projects/Math94/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	420	420	1	replace	if(u  >=  0  ||  v  >  31)  {	  if(u    <    0    ||    v    >    31)    {    	non-compiled	[CE]  not  a  statement	33	None	replace
81	[BUG]  [BUGGY]  int  u  =(int)Math.floor(u  *  1);  [CE]  not  a  statement  [FE]                  AssertionFailedError      [CONTEXT]      public  static  int  gcd(int  u,  int  v)  {  if  (u  *  v  ==  0)  {  return  (Math.abs(u)  +  Math.abs(v));  }            [BUGGY]  int  u  =(int)Math.floor(u  *  1);  [BUGGY]      if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  short  NS  PS  ZS  boolean  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  k  t  u  v  	projects/Math94/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	420	420	1	replace	int  u  =(int)Math.floor(u  *  1);	  int    u    =(int)Math.floor(u    +    1);    	non-compiled	[CE]  not  a  statement	38	None	replace
82	[BUG]  [BUGGY]  int  u  =(int)Math.floor(u  +  2);  [CE]  not  a  statement  [FE]                    AssertionFailedError      [CONTEXT]      public  static  int  gcd(int  u,  int  v)  {  if  (u  *  v  ==  0)  {  return  (Math.abs(u)  +  Math.abs(v));  }            [BUGGY]  int  u  =(int)Math.floor(u  +  2);  [BUGGY]      if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  short  NS  PS  ZS  boolean  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  k  t  u  v  	projects/Math94/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	420	420	1	replace	int  u  =(int)Math.floor(u  +  2);	  int    u    =(int)Math.floor(u    +    1);    	non-compiled	[CE]  not  a  statement	38	None	replace
83	[BUG]  [BUGGY]  char  k  =(char)Math.pow(10,  x);  [CE]  not  a  statement  [FE]                  AssertionFailedError      [CONTEXT]      public  static  int  gcd(int  u,  int  v)  {  if  (u  *  v  ==  0)  {  return  (Math.abs(u)  +  Math.abs(v));  }            [BUGGY]  char  k  =(char)Math.pow(10,  x);  [BUGGY]      if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  short  NS  PS  ZS  boolean  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  k  t  u  v  	projects/Math94/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	420	420	1	replace	char  k  =(char)Math.pow(10,  x);	  int    k    =(int)Math.pow(10,    x);    	non-compiled	[CE]  not  a  statement	16	None	replace
84	[BUG]  [BUGGY]  int  k  =(int)Math.pow(10,  x  +  1);  [CE]  not  a  statement  [FE]                    AssertionFailedError      [CONTEXT]      public  static  int  gcd(int  u,  int  v)  {  if  (u  *  v  ==  0)  {  return  (Math.abs(u)  +  Math.abs(v));  }            [BUGGY]  int  k  =(int)Math.pow(10,  x  +  1);  [BUGGY]      if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  short  NS  PS  ZS  boolean  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  k  t  u  v  	projects/Math94/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	420	420	1	replace	int  k  =(int)Math.pow(10,  x  +  1);	  int    k    =(int)Math.pow(10,    x);    	non-compiled	[CE]  not  a  statement	16	None	replace
85	[BUG]  [BUGGY]  int  u  =(int)Math.pow(10,  u  -  1);  [CE]  not  a  statement  [FE]              AssertionFailedError      [CONTEXT]      public  static  int  gcd(int  u,  int  v)  {  if  (u  *  v  ==  0)  {  return  (Math.abs(u)  +  Math.abs(v));  }            [BUGGY]  int  u  =(int)Math.pow(10,  u  -  1);  [BUGGY]      if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  short  NS  PS  ZS  boolean  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  k  t  u  v  	projects/Math94/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	420	420	1	replace	int  u  =(int)Math.pow(10,  u  -  1);	  int    u    =(int)Math.pow(10,    v    -    1);    	non-compiled	[CE]  not  a  statement	58	None	replace
86	[BUG]  [BUGGY]  int  u  =(int)Math.pow(10,  v  -  2);  [CE]  not  a  statement  [FE]                AssertionFailedError      [CONTEXT]      public  static  int  gcd(int  u,  int  v)  {  if  (u  *  v  ==  0)  {  return  (Math.abs(u)  +  Math.abs(v));  }            [BUGGY]  int  u  =(int)Math.pow(10,  v  -  2);  [BUGGY]      if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  short  NS  PS  ZS  boolean  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  k  t  u  v  	projects/Math94/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	420	420	1	replace	int  u  =(int)Math.pow(10,  v  -  2);	  int    u    =(int)Math.pow(10,    v    -    1);    	non-compiled	[CE]  not  a  statement	58	None	replace
87	[BUG]  [BUGGY]  int  u  =(int)Math.pow(10,  y  -  1);  [CE]  not  a  statement  [FE]                  AssertionFailedError      [CONTEXT]      public  static  int  gcd(int  u,  int  v)  {  if  (u  *  v  ==  0)  {  return  (Math.abs(u)  +  Math.abs(v));  }            [BUGGY]  int  u  =(int)Math.pow(10,  y  -  1);  [BUGGY]      if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  short  NS  PS  ZS  boolean  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  k  t  u  v  	projects/Math94/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	420	420	1	replace	int  u  =(int)Math.pow(10,  y  -  1);	  int    u    =(int)Math.pow(10,    v    -    1);    	non-compiled	[CE]  not  a  statement	58	None	replace
88	[BUG]  [BUGGY]  char  u  =(char)Math.pow(10,  u);  [CE]  not  a  statement  [FE]                AssertionFailedError      [CONTEXT]      public  static  int  gcd(int  u,  int  v)  {  if  (u  *  v  ==  0)  {  return  (Math.abs(u)  +  Math.abs(v));  }            [BUGGY]  char  u  =(char)Math.pow(10,  u);  [BUGGY]      if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  short  NS  PS  ZS  boolean  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  k  t  u  v  	projects/Math94/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	420	420	1	replace	char  u  =(char)Math.pow(10,  u);	  int    u    =(int)Math.pow(10,    u);    	non-compiled	[CE]  not  a  statement	18	None	replace
89	[BUG]  [BUGGY]  char  k  =(char)Math.floor(u);  [CE]  not  a  statement  [FE]                  AssertionFailedError      [CONTEXT]      public  static  int  gcd(int  u,  int  v)  {  if  (u  *  v  ==  0)  {  return  (Math.abs(u)  +  Math.abs(v));  }            [BUGGY]  char  k  =(char)Math.floor(u);  [BUGGY]      if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  short  NS  PS  ZS  boolean  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  k  t  u  v  	projects/Math94/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	420	420	1	replace	char  k  =(char)Math.floor(u);	  char    k    =(char)Math.floor(v);    	non-compiled	[CE]  not  a  statement	47	None	replace
90	[BUG]  [BUGGY]  String  k  =(String)Math.floor(v);  [CE]  not  a  statement  [FE]                    AssertionFailedError      [CONTEXT]      public  static  int  gcd(int  u,  int  v)  {  if  (u  *  v  ==  0)  {  return  (Math.abs(u)  +  Math.abs(v));  }            [BUGGY]  String  k  =(String)Math.floor(v);  [BUGGY]      if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  short  NS  PS  ZS  boolean  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  k  t  u  v  	projects/Math94/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	420	420	1	replace	String  k  =(String)Math.floor(v);	  char    k    =(char)Math.floor(v);    	non-compiled	[CE]  not  a  statement	47	None	replace
91	[BUG]  [BUGGY]  int  k  =(int)Math.pow(10,  y  *  1);  [CE]  not  a  statement  [FE]                AssertionFailedError      [CONTEXT]      public  static  int  gcd(int  u,  int  v)  {  if  (u  *  v  ==  0)  {  return  (Math.abs(u)  +  Math.abs(v));  }            [BUGGY]  int  k  =(int)Math.pow(10,  y  *  1);  [BUGGY]      if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  short  NS  PS  ZS  boolean  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  k  t  u  v  	projects/Math94/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	420	420	1	replace	int  k  =(int)Math.pow(10,  y  *  1);	  int    k    =(int)Math.pow(10,    y    +    1);    	non-compiled	[CE]  not  a  statement	15	None	replace
92	[BUG]  [BUGGY]  char  k  =(char)Math.pow(10,  y  +  1);  [CE]  not  a  statement  [FE]                  AssertionFailedError      [CONTEXT]      public  static  int  gcd(int  u,  int  v)  {  if  (u  *  v  ==  0)  {  return  (Math.abs(u)  +  Math.abs(v));  }            [BUGGY]  char  k  =(char)Math.pow(10,  y  +  1);  [BUGGY]      if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  short  NS  PS  ZS  boolean  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  k  t  u  v  	projects/Math94/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	420	420	1	replace	char  k  =(char)Math.pow(10,  y  +  1);	  int    k    =(int)Math.pow(10,    y    +    1);    	non-compiled	[CE]  not  a  statement	15	None	replace
93	[BUG]  [BUGGY]  String  u  =(String)Math.floor(v);  [CE]  not  a  statement  [FE]                      AssertionFailedError      [CONTEXT]      public  static  int  gcd(int  u,  int  v)  {  if  (u  *  v  ==  0)  {  return  (Math.abs(u)  +  Math.abs(v));  }            [BUGGY]  String  u  =(String)Math.floor(v);  [BUGGY]      if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  short  NS  PS  ZS  boolean  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  k  t  u  v  	projects/Math94/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	420	420	1	replace	String  u  =(String)Math.floor(v);	  char    u    =(char)Math.floor(v);    	non-compiled	[CE]  not  a  statement	36	None	replace
94	[BUG]  [BUGGY]  int  k  =(int)Math.pow(10,  -i  +  1);  [CE]  not  a  statement  [FE]                    AssertionFailedError      [CONTEXT]      public  static  int  gcd(int  u,  int  v)  {  if  (u  *  v  ==  0)  {  return  (Math.abs(u)  +  Math.abs(v));  }            [BUGGY]  int  k  =(int)Math.pow(10,  -i  +  1);  [BUGGY]      if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  short  NS  PS  ZS  boolean  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  k  t  u  v  	projects/Math94/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	420	420	1	replace	int  k  =(int)Math.pow(10,  -i  +  1);	  int    k    =(int)Math.pow(10,    -i);    	non-compiled	[CE]  not  a  statement	76	None	replace
95	[BUG]  [BUGGY]  float  u  =(float)Math.ceil(gcd,  v);  [CE]  not  a  statement  [FE]                  AssertionFailedError      [CONTEXT]      public  static  int  gcd(int  u,  int  v)  {  if  (u  *  v  ==  0)  {  return  (Math.abs(u)  +  Math.abs(v));  }            [BUGGY]  float  u  =(float)Math.ceil(gcd,  v);  [BUGGY]      if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  short  NS  PS  ZS  boolean  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  k  t  u  v  	projects/Math94/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	420	420	1	replace	float  u  =(float)Math.ceil(gcd,  v);	  float    u    =(float)Math.ceil(gcd);    	non-compiled	[CE]  not  a  statement	14	None	replace
96	[BUG]  [BUGGY]  float  u  =(float)Math.ceil(gcd  +  1);  [CE]  not  a  statement  [FE]                    AssertionFailedError      [CONTEXT]      public  static  int  gcd(int  u,  int  v)  {  if  (u  *  v  ==  0)  {  return  (Math.abs(u)  +  Math.abs(v));  }            [BUGGY]  float  u  =(float)Math.ceil(gcd  +  1);  [BUGGY]      if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  short  NS  PS  ZS  boolean  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  k  t  u  v  	projects/Math94/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	420	420	1	replace	float  u  =(float)Math.ceil(gcd  +  1);	  float    u    =(float)Math.ceil(gcd);    	non-compiled	[CE]  not  a  statement	14	None	replace
97	[BUG]  [BUGGY]  float  u  =(float)Math.ceil(gcd,  0);  [CE]  not  a  statement  [FE]                      AssertionFailedError      [CONTEXT]      public  static  int  gcd(int  u,  int  v)  {  if  (u  *  v  ==  0)  {  return  (Math.abs(u)  +  Math.abs(v));  }            [BUGGY]  float  u  =(float)Math.ceil(gcd,  0);  [BUGGY]      if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  short  NS  PS  ZS  boolean  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  k  t  u  v  	projects/Math94/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	420	420	1	replace	float  u  =(float)Math.ceil(gcd,  0);	  float    u    =(float)Math.ceil(gcd);    	non-compiled	[CE]  not  a  statement	14	None	replace
98	[BUG]  [BUGGY]  if(u  <  =  0  ||  v  <  31)  {  [CE]  not  a  statement  [FE]              AssertionFailedError      [CONTEXT]      public  static  int  gcd(int  u,  int  v)  {  if  (u  *  v  ==  0)  {  return  (Math.abs(u)  +  Math.abs(v));  }            [BUGGY]  if(u  <  =  0  ||  v  <  31)  {  [BUGGY]      u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  short  NS  PS  ZS  boolean  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  k  t  u  v  	projects/Math94/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	420	420	1	replace	if(u  <  =  0  ||  v  <  31)  {	  if(u    <    0    ||    v    <    31)    {    	non-compiled	[CE]  not  a  statement	31	None	replace
99	[BUG]  [BUGGY]  if(u  >=  0  ||  v  <  31)  {  [CE]  not  a  statement  [FE]                AssertionFailedError      [CONTEXT]      public  static  int  gcd(int  u,  int  v)  {  if  (u  *  v  ==  0)  {  return  (Math.abs(u)  +  Math.abs(v));  }            [BUGGY]  if(u  >=  0  ||  v  <  31)  {  [BUGGY]      u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  short  NS  PS  ZS  boolean  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  k  t  u  v  	projects/Math94/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	420	420	1	replace	if(u  >=  0  ||  v  <  31)  {	  if(u    <    0    ||    v    <    31)    {    	non-compiled	[CE]  not  a  statement	31	None	replace
100	[BUG]  [BUGGY]  char  v  =(char)Math.ceil(u);  [CE]  not  a  statement  [FE]              AssertionFailedError      [CONTEXT]      public  static  int  gcd(int  u,  int  v)  {  if  (u  *  v  ==  0)  {  return  (Math.abs(u)  +  Math.abs(v));  }            [BUGGY]  char  v  =(char)Math.ceil(u);  [BUGGY]      if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  short  NS  PS  ZS  boolean  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  k  t  u  v  	projects/Math94/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	420	420	1	replace	char  v  =(char)Math.ceil(u);	  int    v    =(int)Math.ceil(u);    	non-compiled	[CE]  not  a  statement	27	None	replace
101	[BUG]  [BUGGY]  int  v  =(int)Math.ceil(u  *  v);  [CE]  not  a  statement  [FE]                AssertionFailedError      [CONTEXT]      public  static  int  gcd(int  u,  int  v)  {  if  (u  *  v  ==  0)  {  return  (Math.abs(u)  +  Math.abs(v));  }            [BUGGY]  int  v  =(int)Math.ceil(u  *  v);  [BUGGY]      if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  short  NS  PS  ZS  boolean  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  k  t  u  v  	projects/Math94/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	420	420	1	replace	int  v  =(int)Math.ceil(u  *  v);	  int    v    =(int)Math.ceil(u);    	non-compiled	[CE]  not  a  statement	27	None	replace
102	[BUG]  [BUGGY]  int  u  =(int)Math.pow(10,  gcd  -  1);  [CE]  not  a  statement  [FE]              AssertionFailedError      [CONTEXT]      public  static  int  gcd(int  u,  int  v)  {  if  (u  *  v  ==  0)  {  return  (Math.abs(u)  +  Math.abs(v));  }            [BUGGY]  int  u  =(int)Math.pow(10,  gcd  -  1);  [BUGGY]      if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  short  NS  PS  ZS  boolean  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  k  t  u  v  	projects/Math94/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	420	420	1	replace	int  u  =(int)Math.pow(10,  gcd  -  1);	  int    u    =(int)Math.pow(10,    gcd);    	non-compiled	[CE]  not  a  statement	17	None	replace
103	[BUG]  [BUGGY]  char  u  =(char)Math.pow(10,  gcd);  [CE]  not  a  statement  [FE]                AssertionFailedError      [CONTEXT]      public  static  int  gcd(int  u,  int  v)  {  if  (u  *  v  ==  0)  {  return  (Math.abs(u)  +  Math.abs(v));  }            [BUGGY]  char  u  =(char)Math.pow(10,  gcd);  [BUGGY]      if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  short  NS  PS  ZS  boolean  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  k  t  u  v  	projects/Math94/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	420	420	1	replace	char  u  =(char)Math.pow(10,  gcd);	  int    u    =(int)Math.pow(10,    gcd);    	non-compiled	[CE]  not  a  statement	17	None	replace
104	[BUG]  [BUGGY]  int  v  =(int)Math.rint(u);  [CE]  not  a  statement  [FE]                  AssertionFailedError      [CONTEXT]      public  static  int  gcd(int  u,  int  v)  {  if  (u  *  v  ==  0)  {  return  (Math.abs(u)  +  Math.abs(v));  }            [BUGGY]  int  v  =(int)Math.rint(u);  [BUGGY]      if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  short  NS  PS  ZS  boolean  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  k  t  u  v  	projects/Math94/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	420	420	1	replace	int  v  =(int)Math.rint(u);	  int    v    =(int)Math.log(u);    	non-compiled	[CE]  not  a  statement	29	None	replace
105	[BUG]  [BUGGY]  char  v  =(char)Math.log(u);  [CE]  not  a  statement  [FE]                    AssertionFailedError      [CONTEXT]      public  static  int  gcd(int  u,  int  v)  {  if  (u  *  v  ==  0)  {  return  (Math.abs(u)  +  Math.abs(v));  }            [BUGGY]  char  v  =(char)Math.log(u);  [BUGGY]      if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  short  NS  PS  ZS  boolean  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  k  t  u  v  	projects/Math94/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	420	420	1	replace	char  v  =(char)Math.log(u);	  int    v    =(int)Math.log(u);    	non-compiled	[CE]  not  a  statement	29	None	replace
106	[BUG]  [BUGGY]  int  v  =(int)Math.log(u  +  1,  v);  [CE]  not  a  statement  [FE]                      AssertionFailedError      [CONTEXT]      public  static  int  gcd(int  u,  int  v)  {  if  (u  *  v  ==  0)  {  return  (Math.abs(u)  +  Math.abs(v));  }            [BUGGY]  int  v  =(int)Math.log(u  +  1,  v);  [BUGGY]      if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  short  NS  PS  ZS  boolean  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  k  t  u  v  	projects/Math94/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	420	420	1	replace	int  v  =(int)Math.log(u  +  1,  v);	  int    v    =(int)Math.log(u);    	non-compiled	[CE]  not  a  statement	29	None	replace
107	[BUG]  [BUGGY]  int  k  =(int)Math.pow(10,  16);  [CE]  not  a  statement  [FE]                        AssertionFailedError      [CONTEXT]      public  static  int  gcd(int  u,  int  v)  {  if  (u  *  v  ==  0)  {  return  (Math.abs(u)  +  Math.abs(v));  }            [BUGGY]  int  k  =(int)Math.pow(10,  16);  [BUGGY]      if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  short  NS  PS  ZS  boolean  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  k  t  u  v  	projects/Math94/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	420	420	1	replace	int  k  =(int)Math.pow(10,  16);	  int    k    =(int)Math.pow(10,    -1);    	non-compiled	[CE]  not  a  statement	22	None	replace
108	[BUG]  [BUGGY]  int  k  =(int)Math.pow(10,  1);  [CE]  not  a  statement  [FE]                          AssertionFailedError      [CONTEXT]      public  static  int  gcd(int  u,  int  v)  {  if  (u  *  v  ==  0)  {  return  (Math.abs(u)  +  Math.abs(v));  }            [BUGGY]  int  k  =(int)Math.pow(10,  1);  [BUGGY]      if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  short  NS  PS  ZS  boolean  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  k  t  u  v  	projects/Math94/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	420	420	1	replace	int  k  =(int)Math.pow(10,  1);	  int    k    =(int)Math.pow(10,    -1);    	non-compiled	[CE]  not  a  statement	22	None	replace
109	[BUG]  [BUGGY]  int  k  =(int)Math.pow(10,  3);  [CE]  not  a  statement  [FE]                            AssertionFailedError      [CONTEXT]      public  static  int  gcd(int  u,  int  v)  {  if  (u  *  v  ==  0)  {  return  (Math.abs(u)  +  Math.abs(v));  }            [BUGGY]  int  k  =(int)Math.pow(10,  3);  [BUGGY]      if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  short  NS  PS  ZS  boolean  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  k  t  u  v  	projects/Math94/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	420	420	1	replace	int  k  =(int)Math.pow(10,  3);	  int    k    =(int)Math.pow(10,    -1);    	non-compiled	[CE]  not  a  statement	22	None	replace
110	[BUG]  [BUGGY]  int  k  =(int)Math.pow(10,  12);  [CE]  [FE]                              AssertionFailedError      [CONTEXT]      public  static  int  gcd(int  u,  int  v)  {  if  (u  *  v  ==  0)  {  return  (Math.abs(u)  +  Math.abs(v));  }            [BUGGY]  int  k  =(int)Math.pow(10,  12);  [BUGGY]      if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  short  NS  PS  ZS  boolean  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  k  t  u  v  	projects/Math94/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	420	420	1	replace	int  k  =(int)Math.pow(10,  12);	  int    k    =(int)Math.pow(10,    -1);    	non-compiled	[CE]  	22	None	replace
111	[BUG]  [BUGGY]  int  u  =(int)Math.rint(u);  [CE]  [FE]                    AssertionFailedError      [CONTEXT]      public  static  int  gcd(int  u,  int  v)  {  if  (u  *  v  ==  0)  {  return  (Math.abs(u)  +  Math.abs(v));  }            [BUGGY]  int  u  =(int)Math.rint(u);  [BUGGY]      if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  short  NS  PS  ZS  boolean  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  k  t  u  v  	projects/Math94/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	420	420	1	replace	int  u  =(int)Math.rint(u);	  int    u    =(int)Math.log(u);    	non-compiled	[CE]  	35	None	replace
112	[BUG]  [BUGGY]  if(u  ==  0  ||  k  <  31)  {  [CE]  [FE]              AssertionFailedError      [CONTEXT]      public  static  int  gcd(int  u,  int  v)  {  if  (u  *  v  ==  0)  {  return  (Math.abs(u)  +  Math.abs(v));  }            [BUGGY]  if(u  ==  0  ||  k  <  31)  {  [BUGGY]      u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  short  NS  PS  ZS  boolean  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  k  t  u  v  	projects/Math94/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	420	420	1	replace	if(u  ==  0  ||  k  <  31)  {	  if(u    <    =    0    ||    k    <    31)    {    	non-compiled	[CE]  	44	None	replace
113	[BUG]  [BUGGY]  if(u  >=  0  ||  k  <  31)  {  [CE]  [FE]                AssertionFailedError      [CONTEXT]      public  static  int  gcd(int  u,  int  v)  {  if  (u  *  v  ==  0)  {  return  (Math.abs(u)  +  Math.abs(v));  }            [BUGGY]  if(u  >=  0  ||  k  <  31)  {  [BUGGY]      u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  short  NS  PS  ZS  boolean  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  k  t  u  v  	projects/Math94/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	420	420	1	replace	if(u  >=  0  ||  k  <  31)  {	  if(u    <    =    0    ||    k    <    31)    {    	non-compiled	[CE]  	44	None	replace
114	[BUG]  [BUGGY]  int  k  =(int)Math.log(u,  v);  [CE]  [FE]                AssertionFailedError      [CONTEXT]      public  static  int  gcd(int  u,  int  v)  {  if  (u  *  v  ==  0)  {  return  (Math.abs(u)  +  Math.abs(v));  }            [BUGGY]  int  k  =(int)Math.log(u,  v);  [BUGGY]      if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  short  NS  PS  ZS  boolean  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  k  t  u  v  	projects/Math94/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	420	420	1	replace	int  k  =(int)Math.log(u,  v);	  int    k    =(int)Math.log(u);    	non-compiled	[CE]  	46	None	replace
115	[BUG]  [BUGGY]  int  k  =(int)Math.rint(u);  [CE]  not  a  statement  [FE]                  AssertionFailedError      [CONTEXT]      public  static  int  gcd(int  u,  int  v)  {  if  (u  *  v  ==  0)  {  return  (Math.abs(u)  +  Math.abs(v));  }            [BUGGY]  int  k  =(int)Math.rint(u);  [BUGGY]      if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  short  NS  PS  ZS  boolean  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  k  t  u  v  	projects/Math94/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	420	420	1	replace	int  k  =(int)Math.rint(u);	  int    k    =(int)Math.log(u);    	non-compiled	[CE]  not  a  statement	46	None	replace
116	[BUG]  [BUGGY]  int  k  =(int)Math.log(gcd(u,  v));  [CE]  not  a  statement  [FE]                    AssertionFailedError      [CONTEXT]      public  static  int  gcd(int  u,  int  v)  {  if  (u  *  v  ==  0)  {  return  (Math.abs(u)  +  Math.abs(v));  }            [BUGGY]  int  k  =(int)Math.log(gcd(u,  v));  [BUGGY]      if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  short  NS  PS  ZS  boolean  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  k  t  u  v  	projects/Math94/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	420	420	1	replace	int  k  =(int)Math.log(gcd(u,  v));	  int    k    =(int)Math.log(u);    	non-compiled	[CE]  not  a  statement	46	None	replace
117	[BUG]  [BUGGY]  int  u  =(int)Math.ceil(gcd,  1);  [CE]  not  a  statement  [FE]              AssertionFailedError      [CONTEXT]      public  static  int  gcd(int  u,  int  v)  {  if  (u  *  v  ==  0)  {  return  (Math.abs(u)  +  Math.abs(v));  }            [BUGGY]  int  u  =(int)Math.ceil(gcd,  1);  [BUGGY]      if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  short  NS  PS  ZS  boolean  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  k  t  u  v  	projects/Math94/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	420	420	1	replace	int  u  =(int)Math.ceil(gcd,  1);	  int    u    =(int)Math.ceil(gcd,    0);    	non-compiled	[CE]  not  a  statement	12	None	replace
118	[BUG]  [BUGGY]  int  k  =(int)Math.floor(u  +  1);  [CE]  not  a  statement  [FE]              AssertionFailedError      [CONTEXT]      public  static  int  gcd(int  u,  int  v)  {  if  (u  *  v  ==  0)  {  return  (Math.abs(u)  +  Math.abs(v));  }            [BUGGY]  int  k  =(int)Math.floor(u  +  1);  [BUGGY]      if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  short  NS  PS  ZS  boolean  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  k  t  u  v  	projects/Math94/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	420	420	1	replace	int  k  =(int)Math.floor(u  +  1);	  int    k    =(int)Math.floor(u);    	non-compiled	[CE]  not  a  statement	45	None	replace
119	[BUG]  [BUGGY]  char  v  =(char)Math.ceil(gcd,  0);  [CE]  [FE]                    AssertionFailedError      [CONTEXT]      public  static  int  gcd(int  u,  int  v)  {  if  (u  *  v  ==  0)  {  return  (Math.abs(u)  +  Math.abs(v));  }            [BUGGY]  char  v  =(char)Math.ceil(gcd,  0);  [BUGGY]      if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  short  NS  PS  ZS  boolean  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  k  t  u  v  	projects/Math94/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	420	420	1	replace	char  v  =(char)Math.ceil(gcd,  0);	  char    v    =(char)Math.ceil(gcd);    	non-compiled	[CE]  	25	None	replace
120	[BUG]  [BUGGY]  char  v  =(char)Math.ceil(gcd,  v);  [CE]  [FE]                      AssertionFailedError      [CONTEXT]      public  static  int  gcd(int  u,  int  v)  {  if  (u  *  v  ==  0)  {  return  (Math.abs(u)  +  Math.abs(v));  }            [BUGGY]  char  v  =(char)Math.ceil(gcd,  v);  [BUGGY]      if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  short  NS  PS  ZS  boolean  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  k  t  u  v  	projects/Math94/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	420	420	1	replace	char  v  =(char)Math.ceil(gcd,  v);	  char    v    =(char)Math.ceil(gcd);    	non-compiled	[CE]  	25	None	replace
121	[BUG]  [BUGGY]  char  v  =(char)Math.ceil(gcd  +  1);  [CE]  not  a  statement  [FE]                        AssertionFailedError      [CONTEXT]      public  static  int  gcd(int  u,  int  v)  {  if  (u  *  v  ==  0)  {  return  (Math.abs(u)  +  Math.abs(v));  }            [BUGGY]  char  v  =(char)Math.ceil(gcd  +  1);  [BUGGY]      if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  short  NS  PS  ZS  boolean  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  k  t  u  v  	projects/Math94/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	420	420	1	replace	char  v  =(char)Math.ceil(gcd  +  1);	  char    v    =(char)Math.ceil(gcd);    	non-compiled	[CE]  not  a  statement	25	None	replace
122	[BUG]  [BUGGY]  if(u  <  -v)  {  [CE]  not  a  statement  [FE]              AssertionFailedError      [CONTEXT]      public  static  int  gcd(int  u,  int  v)  {  if  (u  *  v  ==  0)  {  return  (Math.abs(u)  +  Math.abs(v));  }            [BUGGY]  if(u  <  -v)  {  [BUGGY]      u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  short  NS  PS  ZS  boolean  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  k  t  u  v  	projects/Math94/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	420	420	1	replace	if(u  <  -v)  {	  if(u    >    -v)    {    	non-compiled	[CE]  not  a  statement	60	None	replace
123	[BUG]  [BUGGY]  if(u  <  =  -v)  {  [CE]  not  a  statement  [FE]                AssertionFailedError      [CONTEXT]      public  static  int  gcd(int  u,  int  v)  {  if  (u  *  v  ==  0)  {  return  (Math.abs(u)  +  Math.abs(v));  }            [BUGGY]  if(u  <  =  -v)  {  [BUGGY]      u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  short  NS  PS  ZS  boolean  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  k  t  u  v  	projects/Math94/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	420	420	1	replace	if(u  <  =  -v)  {	  if(u    >    -v)    {    	non-compiled	[CE]  not  a  statement	60	None	replace
124	[BUG]  [BUGGY]  if(u  >  -1)  {  [CE]  not  a  statement  [FE]                  AssertionFailedError      [CONTEXT]      public  static  int  gcd(int  u,  int  v)  {  if  (u  *  v  ==  0)  {  return  (Math.abs(u)  +  Math.abs(v));  }            [BUGGY]  if(u  >  -1)  {  [BUGGY]      u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  short  NS  PS  ZS  boolean  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  k  t  u  v  	projects/Math94/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	420	420	1	replace	if(u  >  -1)  {	  if(u    >    -v)    {    	non-compiled	[CE]  not  a  statement	60	None	replace
125	[BUG]  [BUGGY]  int  k  =(int)Math.pow(10,  4);  [CE]  not  a  statement  [FE]            AssertionFailedError      [CONTEXT]      public  static  int  gcd(int  u,  int  v)  {  if  (u  *  v  ==  0)  {  return  (Math.abs(u)  +  Math.abs(v));  }            [BUGGY]  int  k  =(int)Math.pow(10,  4);  [BUGGY]      if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  short  NS  PS  ZS  boolean  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  k  t  u  v  	projects/Math94/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	420	420	1	replace	int  k  =(int)Math.pow(10,  4);	  int    k    =(int)Math.pow(10,    0);    	non-compiled	[CE]  not  a  statement	3	None	replace
126	[BUG]  [BUGGY]  float  u  =(float)Math.ceil(u);  [CE]  not  a  statement  [FE]                  AssertionFailedError      [CONTEXT]      public  static  int  gcd(int  u,  int  v)  {  if  (u  *  v  ==  0)  {  return  (Math.abs(u)  +  Math.abs(v));  }            [BUGGY]  float  u  =(float)Math.ceil(u);  [BUGGY]      if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  short  NS  PS  ZS  boolean  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  k  t  u  v  	projects/Math94/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	420	420	1	replace	float  u  =(float)Math.ceil(u);	  float    u    =(float)Math.floor(u);    	non-compiled	[CE]  not  a  statement	75	None	replace
127	[BUG]  [BUGGY]  float  u  =(float)Math.floor(u  +  1);  [CE]  not  a  statement  [FE]                    AssertionFailedError      [CONTEXT]      public  static  int  gcd(int  u,  int  v)  {  if  (u  *  v  ==  0)  {  return  (Math.abs(u)  +  Math.abs(v));  }            [BUGGY]  float  u  =(float)Math.floor(u  +  1);  [BUGGY]      if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  short  NS  PS  ZS  boolean  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  k  t  u  v  	projects/Math94/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	420	420	1	replace	float  u  =(float)Math.floor(u  +  1);	  float    u    =(float)Math.floor(u);    	non-compiled	[CE]  not  a  statement	75	None	replace
128	[BUG]  [BUGGY]  int  k  =(int)Math.pow(10,  -v  -  2);  [CE]  not  a  statement  [FE]                      AssertionFailedError      [CONTEXT]      public  static  int  gcd(int  u,  int  v)  {  if  (u  *  v  ==  0)  {  return  (Math.abs(u)  +  Math.abs(v));  }            [BUGGY]  int  k  =(int)Math.pow(10,  -v  -  2);  [BUGGY]      if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  short  NS  PS  ZS  boolean  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  k  t  u  v  	projects/Math94/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	420	420	1	replace	int  k  =(int)Math.pow(10,  -v  -  2);	  int    k    =(int)Math.pow(10,    -v    -    1);    	non-compiled	[CE]  not  a  statement	21	None	replace
129	[BUG]  [BUGGY]  char  k  =(char)Math.pow(10,  -v  -  1);  [CE]  not  a  statement  [FE]                        AssertionFailedError      [CONTEXT]      public  static  int  gcd(int  u,  int  v)  {  if  (u  *  v  ==  0)  {  return  (Math.abs(u)  +  Math.abs(v));  }            [BUGGY]  char  k  =(char)Math.pow(10,  -v  -  1);  [BUGGY]      if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  short  NS  PS  ZS  boolean  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  k  t  u  v  	projects/Math94/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	420	420	1	replace	char  k  =(char)Math.pow(10,  -v  -  1);	  int    k    =(int)Math.pow(10,    -v    -    1);    	non-compiled	[CE]  not  a  statement	21	None	replace
130	[BUG]  [BUGGY]  if(u  <  0  ||  v  <  =  31)  {  [CE]  not  a  statement  [FE]                AssertionFailedError      [CONTEXT]      public  static  int  gcd(int  u,  int  v)  {  if  (u  *  v  ==  0)  {  return  (Math.abs(u)  +  Math.abs(v));  }            [BUGGY]  if(u  <  0  ||  v  <  =  31)  {  [BUGGY]      u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  short  NS  PS  ZS  boolean  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  k  t  u  v  	projects/Math94/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	420	420	1	replace	if(u  <  0  ||  v  <  =  31)  {	  if(u    >    0    ||    v    <    =    31)    {    	non-compiled	[CE]  not  a  statement	65	None	replace
131	[BUG]  [BUGGY]  int  k  =(int)Math.ceil(u  -  1);  [CE]  not  a  statement  [FE]            AssertionFailedError      [CONTEXT]      public  static  int  gcd(int  u,  int  v)  {  if  (u  *  v  ==  0)  {  return  (Math.abs(u)  +  Math.abs(v));  }            [BUGGY]  int  k  =(int)Math.ceil(u  -  1);  [BUGGY]      if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  short  NS  PS  ZS  boolean  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  k  t  u  v  	projects/Math94/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	420	420	1	replace	int  k  =(int)Math.ceil(u  -  1);	  int    k    =(int)Math.ceil(v    -    1);    	non-compiled	[CE]  not  a  statement	67	None	replace
132	[BUG]  [BUGGY]  char  k  =(char)Math.ceil(v  -  1);  [CE]  not  a  statement  [FE]              AssertionFailedError      [CONTEXT]      public  static  int  gcd(int  u,  int  v)  {  if  (u  *  v  ==  0)  {  return  (Math.abs(u)  +  Math.abs(v));  }            [BUGGY]  char  k  =(char)Math.ceil(v  -  1);  [BUGGY]      if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  short  NS  PS  ZS  boolean  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  k  t  u  v  	projects/Math94/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	420	420	1	replace	char  k  =(char)Math.ceil(v  -  1);	  int    k    =(int)Math.ceil(v    -    1);    	non-compiled	[CE]  not  a  statement	67	None	replace
133	[BUG]  [BUGGY]  byte  k  =(byte)Math.ceil(v  -  1);  [CE]  not  a  statement  [FE]                AssertionFailedError      [CONTEXT]      public  static  int  gcd(int  u,  int  v)  {  if  (u  *  v  ==  0)  {  return  (Math.abs(u)  +  Math.abs(v));  }            [BUGGY]  byte  k  =(byte)Math.ceil(v  -  1);  [BUGGY]      if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  short  NS  PS  ZS  boolean  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  k  t  u  v  	projects/Math94/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	420	420	1	replace	byte  k  =(byte)Math.ceil(v  -  1);	  int    k    =(int)Math.ceil(v    -    1);    	non-compiled	[CE]  not  a  statement	67	None	replace
134	[BUG]  [BUGGY]  int  k  =(int)Math.ceil(gcd(u,  v  -  1);  [CE]  not  a  statement  [FE]                  AssertionFailedError      [CONTEXT]      public  static  int  gcd(int  u,  int  v)  {  if  (u  *  v  ==  0)  {  return  (Math.abs(u)  +  Math.abs(v));  }            [BUGGY]  int  k  =(int)Math.ceil(gcd(u,  v  -  1);  [BUGGY]      if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  short  NS  PS  ZS  boolean  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  k  t  u  v  	projects/Math94/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	420	420	1	replace	int  k  =(int)Math.ceil(gcd(u,  v  -  1);	  int    k    =(int)Math.ceil(v    -    1);    	non-compiled	[CE]  not  a  statement	67	None	replace
135	[BUG]  [BUGGY]  if(v  <  0  ||  v  <  31)  {  [CE]  not  a  statement  [FE]              AssertionFailedError      [CONTEXT]      public  static  int  gcd(int  u,  int  v)  {  if  (u  *  v  ==  0)  {  return  (Math.abs(u)  +  Math.abs(v));  }            [BUGGY]  if(v  <  0  ||  v  <  31)  {  [BUGGY]      u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  short  NS  PS  ZS  boolean  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  k  t  u  v  	projects/Math94/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	420	420	1	replace	if(v  <  0  ||  v  <  31)  {	  if(v    >    0    ||    v    <    31)    {    	non-compiled	[CE]  not  a  statement	64	None	replace
136	[BUG]  [BUGGY]  int  v  =(int)Math.ceil(gcd,  1);  [CE]  not  a  statement  [FE]                      AssertionFailedError      [CONTEXT]      public  static  int  gcd(int  u,  int  v)  {  if  (u  *  v  ==  0)  {  return  (Math.abs(u)  +  Math.abs(v));  }            [BUGGY]  int  v  =(int)Math.ceil(gcd,  1);  [BUGGY]      if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  short  NS  PS  ZS  boolean  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  k  t  u  v  	projects/Math94/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	420	420	1	replace	int  v  =(int)Math.ceil(gcd,  1);	  int    v    =(int)Math.ceil(gcd,    0);    	non-compiled	[CE]  not  a  statement	26	None	replace
137	[BUG]  [BUGGY]  int  v  =(int)Math.ceil(gcd,  0,  v);  [CE]  not  a  statement  [FE]                        AssertionFailedError      [CONTEXT]      public  static  int  gcd(int  u,  int  v)  {  if  (u  *  v  ==  0)  {  return  (Math.abs(u)  +  Math.abs(v));  }            [BUGGY]  int  v  =(int)Math.ceil(gcd,  0,  v);  [BUGGY]      if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  short  NS  PS  ZS  boolean  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  k  t  u  v  	projects/Math94/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	420	420	1	replace	int  v  =(int)Math.ceil(gcd,  0,  v);	  int    v    =(int)Math.ceil(gcd,    0);    	non-compiled	[CE]  not  a  statement	26	None	replace
138	[BUG]  [BUGGY]  int  k  =(int)Math.pow(10,  u  -  1);  [CE]  not  a  statement  [FE]            AssertionFailedError      [CONTEXT]      public  static  int  gcd(int  u,  int  v)  {  if  (u  *  v  ==  0)  {  return  (Math.abs(u)  +  Math.abs(v));  }            [BUGGY]  int  k  =(int)Math.pow(10,  u  -  1);  [BUGGY]      if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  short  NS  PS  ZS  boolean  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  k  t  u  v  	projects/Math94/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	420	420	1	replace	int  k  =(int)Math.pow(10,  u  -  1);	  int    k    =(int)Math.pow(10,    v    -    1);    	non-compiled	[CE]  not  a  statement	48	None	replace
139	[BUG]  [BUGGY]  int  k  =(int)Math.pow(10,  v  -  2);  [CE]  not  a  statement  [FE]              AssertionFailedError      [CONTEXT]      public  static  int  gcd(int  u,  int  v)  {  if  (u  *  v  ==  0)  {  return  (Math.abs(u)  +  Math.abs(v));  }            [BUGGY]  int  k  =(int)Math.pow(10,  v  -  2);  [BUGGY]      if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  short  NS  PS  ZS  boolean  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  k  t  u  v  	projects/Math94/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	420	420	1	replace	int  k  =(int)Math.pow(10,  v  -  2);	  int    k    =(int)Math.pow(10,    v    -    1);    	non-compiled	[CE]  not  a  statement	48	None	replace
140	[BUG]  [BUGGY]  int  u  =(int)Math.pow(10,  2);  [CE]  not  a  statement  [FE]                  AssertionFailedError      [CONTEXT]      public  static  int  gcd(int  u,  int  v)  {  if  (u  *  v  ==  0)  {  return  (Math.abs(u)  +  Math.abs(v));  }            [BUGGY]  int  u  =(int)Math.pow(10,  2);  [BUGGY]      if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  short  NS  PS  ZS  boolean  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  k  t  u  v  	projects/Math94/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	420	420	1	replace	int  u  =(int)Math.pow(10,  2);	  int    u    =(int)Math.pow(10,    1);    	non-compiled	[CE]  not  a  statement	63	None	replace
141	[BUG]  [BUGGY]  int  v  =(int)Math.ceil(gcd,  u);  [CE]  not  a  statement  [FE]                  AssertionFailedError      [CONTEXT]      public  static  int  gcd(int  u,  int  v)  {  if  (u  *  v  ==  0)  {  return  (Math.abs(u)  +  Math.abs(v));  }            [BUGGY]  int  v  =(int)Math.ceil(gcd,  u);  [BUGGY]      if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  short  NS  PS  ZS  boolean  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  k  t  u  v  	projects/Math94/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	420	420	1	replace	int  v  =(int)Math.ceil(gcd,  u);	  int    v    =(int)Math.ceil(gcd,    v);    	non-compiled	[CE]  not  a  statement	24	None	replace
142	[BUG]  [BUGGY]  if(v  >=  0  ||  u  >=  0)  {  [CE]  not  a  statement  [FE]                AssertionFailedError      [CONTEXT]      public  static  int  gcd(int  u,  int  v)  {  if  (u  *  v  ==  0)  {  return  (Math.abs(u)  +  Math.abs(v));  }            [BUGGY]  if(v  >=  0  ||  u  >=  0)  {  [BUGGY]      u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  short  NS  PS  ZS  boolean  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  k  t  u  v  	projects/Math94/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	420	420	1	replace	if(v  >=  0  ||  u  >=  0)  {	  if(u    >=    0    ||    v    <    0)    {    	non-compiled	[CE]  not  a  statement	7	None	replace
143	[BUG]  [BUGGY]  if(u  >=  0  ||  v  ==  0)  {  [CE]  not  a  statement  [FE]                  AssertionFailedError      [CONTEXT]      public  static  int  gcd(int  u,  int  v)  {  if  (u  *  v  ==  0)  {  return  (Math.abs(u)  +  Math.abs(v));  }            [BUGGY]  if(u  >=  0  ||  v  ==  0)  {  [BUGGY]      u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  short  NS  PS  ZS  boolean  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  k  t  u  v  	projects/Math94/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	420	420	1	replace	if(u  >=  0  ||  v  ==  0)  {	  if(u    >=    0    ||    v    <    0)    {    	non-compiled	[CE]  not  a  statement	7	None	replace
144	[BUG]  [BUGGY]  if(u  >  0  ||  v  >  0)  {  [CE]  not  a  statement  [FE]            AssertionFailedError      [CONTEXT]      public  static  int  gcd(int  u,  int  v)  {  if  (u  *  v  ==  0)  {  return  (Math.abs(u)  +  Math.abs(v));  }            [BUGGY]  if(u  >  0  ||  v  >  0)  {  [BUGGY]      u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  short  NS  PS  ZS  boolean  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  k  t  u  v  	projects/Math94/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	420	420	1	replace	if(u  >  0  ||  v  >  0)  {	  if(u    <    0    ||    v    >    0)    {    	non-compiled	[CE]  not  a  statement	5	None	replace
145	[BUG]  [BUGGY]  if(v  <  0  ||  u  >  0)  {  [CE]  not  a  statement  [FE]              AssertionFailedError      [CONTEXT]      public  static  int  gcd(int  u,  int  v)  {  if  (u  *  v  ==  0)  {  return  (Math.abs(u)  +  Math.abs(v));  }            [BUGGY]  if(v  <  0  ||  u  >  0)  {  [BUGGY]      u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  short  NS  PS  ZS  boolean  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  k  t  u  v  	projects/Math94/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	420	420	1	replace	if(v  <  0  ||  u  >  0)  {	  if(u    <    0    ||    v    >    0)    {    	non-compiled	[CE]  not  a  statement	5	None	replace
146	[BUG]  [BUGGY]  int  k  =(int)Math.pow(10,  -i  -  1);  [CE]  not  a  statement  [FE]                    AssertionFailedError      [CONTEXT]      public  static  int  gcd(int  u,  int  v)  {  if  (u  *  v  ==  0)  {  return  (Math.abs(u)  +  Math.abs(v));  }            [BUGGY]  int  k  =(int)Math.pow(10,  -i  -  1);  [BUGGY]      if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  short  NS  PS  ZS  boolean  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  k  t  u  v  	projects/Math94/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	420	420	1	replace	int  k  =(int)Math.pow(10,  -i  -  1);	  int    k    =(int)Math.pow(10,    -i);    	non-compiled	[CE]  not  a  statement	76	None	replace
147	[BUG]  [BUGGY]  if(v  <  0  ||  v  >  31)  {  [CE]  not  a  statement  [FE]                  AssertionFailedError      [CONTEXT]      public  static  int  gcd(int  u,  int  v)  {  if  (u  *  v  ==  0)  {  return  (Math.abs(u)  +  Math.abs(v));  }            [BUGGY]  if(v  <  0  ||  v  >  31)  {  [BUGGY]      u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  short  NS  PS  ZS  boolean  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  k  t  u  v  	projects/Math94/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	420	420	1	replace	if(v  <  0  ||  v  >  31)  {	  if(u    <    0    ||    v    >    31)    {    	non-compiled	[CE]  not  a  statement	33	None	replace
148	[BUG]  [BUGGY]  float  u  =(float)Math.pow(10,  y);  [CE]  not  a  statement  [FE]                  AssertionFailedError      [CONTEXT]      public  static  int  gcd(int  u,  int  v)  {  if  (u  *  v  ==  0)  {  return  (Math.abs(u)  +  Math.abs(v));  }            [BUGGY]  float  u  =(float)Math.pow(10,  y);  [BUGGY]      if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  short  NS  PS  ZS  boolean  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  k  t  u  v  	projects/Math94/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	420	420	1	replace	float  u  =(float)Math.pow(10,  y);	  int    u    =(int)Math.pow(10,    y);    	non-compiled	[CE]  not  a  statement	19	None	replace
149	[BUG]  [BUGGY]  int  u  =(int)Math.pow(10,  17);  [CE]  not  a  statement  [FE]                  AssertionFailedError      [CONTEXT]      public  static  int  gcd(int  u,  int  v)  {  if  (u  *  v  ==  0)  {  return  (Math.abs(u)  +  Math.abs(v));  }            [BUGGY]  int  u  =(int)Math.pow(10,  17);  [BUGGY]      if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  short  NS  PS  ZS  boolean  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  k  t  u  v  	projects/Math94/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	420	420	1	replace	int  u  =(int)Math.pow(10,  17);	  int    u    =(int)Math.pow(10,    16);    	non-compiled	[CE]  not  a  statement	41	None	replace
150	[BUG]  [BUGGY]  int  k  =(int)Math.pow(10,  v  +  1);  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      public  static  int  gcd(int  u,  int  v)  {  if  (u  *  v  ==  0)  {  return  (Math.abs(u)  +  Math.abs(v));  }            [BUGGY]  int  k  =(int)Math.pow(10,  v  +  1);  [BUGGY]      if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  short  NS  PS  ZS  boolean  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  k  t  u  v  	projects/Math94/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	420	420	1	replace	int  k  =(int)Math.pow(10,  v  +  1);	  int    k    =(int)Math.pow(10,    y    +    1);    	non-compiled	[CE]  <identifier>  expected	15	None	replace
151	[BUG]  [BUGGY]  int  k  =(int)Math.floor(u,  v);  [CE]  not  a  statement  [FE]              AssertionFailedError      [CONTEXT]      public  static  int  gcd(int  u,  int  v)  {  if  (u  *  v  ==  0)  {  return  (Math.abs(u)  +  Math.abs(v));  }            [BUGGY]  int  k  =(int)Math.floor(u,  v);  [BUGGY]      if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  short  NS  PS  ZS  boolean  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  k  t  u  v  	projects/Math94/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	420	420	1	replace	int  k  =(int)Math.floor(u,  v);	  int    k    =(int)Math.floor(u);    	non-compiled	[CE]  not  a  statement	45	None	replace
152	[BUG]  [BUGGY]  int  u  =(int)Math.floor(u  +  3);  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      public  static  int  gcd(int  u,  int  v)  {  if  (u  *  v  ==  0)  {  return  (Math.abs(u)  +  Math.abs(v));  }            [BUGGY]  int  u  =(int)Math.floor(u  +  3);  [BUGGY]      if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  short  NS  PS  ZS  boolean  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  k  t  u  v  	projects/Math94/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	420	420	1	replace	int  u  =(int)Math.floor(u  +  3);	  int    u    =(int)Math.floor(u    +    1);    	non-compiled	[CE]  <identifier>  expected	38	None	replace
153	[BUG]  [BUGGY]  int  u  =(int)Math.log(v);  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      public  static  int  gcd(int  u,  int  v)  {  if  (u  *  v  ==  0)  {  return  (Math.abs(u)  +  Math.abs(v));  }            [BUGGY]  int  u  =(int)Math.log(v);  [BUGGY]      if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  short  NS  PS  ZS  boolean  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  k  t  u  v  	projects/Math94/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	420	420	1	replace	int  u  =(int)Math.log(v);	  int    u    =(int)Math.log(u);    	non-compiled	[CE]  <identifier>  expected	35	None	replace
154	[BUG]  [BUGGY]  int  u  =(int)Math.log(gcd);  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      public  static  int  gcd(int  u,  int  v)  {  if  (u  *  v  ==  0)  {  return  (Math.abs(u)  +  Math.abs(v));  }            [BUGGY]  int  u  =(int)Math.log(gcd);  [BUGGY]      if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  short  NS  PS  ZS  boolean  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  k  t  u  v  	projects/Math94/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	420	420	1	replace	int  u  =(int)Math.log(gcd);	  int    u    =(int)Math.log(u);    	non-compiled	[CE]  <identifier>  expected	35	None	replace
155	[BUG]  [BUGGY]  int  u  =(int)Math.log(u  +  1,  v);  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]      public  static  int  gcd(int  u,  int  v)  {  if  (u  *  v  ==  0)  {  return  (Math.abs(u)  +  Math.abs(v));  }            [BUGGY]  int  u  =(int)Math.log(u  +  1,  v);  [BUGGY]      if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  short  NS  PS  ZS  boolean  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  k  t  u  v  	projects/Math94/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	420	420	1	replace	int  u  =(int)Math.log(u  +  1,  v);	  int    u    =(int)Math.log(u);    	non-compiled	[CE]  <identifier>  expected	35	None	replace
156	[BUG]  [BUGGY]  char  k  =(char)Math.ceil(v,  u);  [CE]  <identifier>  expected  [FE]            AssertionFailedError      [CONTEXT]      public  static  int  gcd(int  u,  int  v)  {  if  (u  *  v  ==  0)  {  return  (Math.abs(u)  +  Math.abs(v));  }            [BUGGY]  char  k  =(char)Math.ceil(v,  u);  [BUGGY]      if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  short  NS  PS  ZS  boolean  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  k  t  u  v  	projects/Math94/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	420	420	1	replace	char  k  =(char)Math.ceil(v,  u);	  char    k    =(char)Math.ceil(v);    	non-compiled	[CE]  <identifier>  expected	40	None	replace
157	[BUG]  [BUGGY]  int  k  =(int)Math.pow(10,  Math.pow(10,  v));  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      public  static  int  gcd(int  u,  int  v)  {  if  (u  *  v  ==  0)  {  return  (Math.abs(u)  +  Math.abs(v));  }            [BUGGY]  int  k  =(int)Math.pow(10,  Math.pow(10,  v));  [BUGGY]      if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  short  NS  PS  ZS  boolean  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  k  t  u  v  	projects/Math94/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	420	420	1	replace	int  k  =(int)Math.pow(10,  Math.pow(10,  v));	  int    k    =(int)Math.pow(10,    c);    	non-compiled	[CE]  <identifier>  expected	2	None	replace
158	[BUG]  [BUGGY]  char  v  =(char)Math.ceil(gcd  -  1);  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      public  static  int  gcd(int  u,  int  v)  {  if  (u  *  v  ==  0)  {  return  (Math.abs(u)  +  Math.abs(v));  }            [BUGGY]  char  v  =(char)Math.ceil(gcd  -  1);  [BUGGY]      if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  short  NS  PS  ZS  boolean  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  k  t  u  v  	projects/Math94/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	420	420	1	replace	char  v  =(char)Math.ceil(gcd  -  1);	  char    v    =(char)Math.ceil(gcd);    	non-compiled	[CE]  <identifier>  expected	25	None	replace
159	[BUG]  [BUGGY]  float  k  =(float)Math.ceil(v  -  1);  [CE]  <identifier>  expected  [FE]            AssertionFailedError      [CONTEXT]      public  static  int  gcd(int  u,  int  v)  {  if  (u  *  v  ==  0)  {  return  (Math.abs(u)  +  Math.abs(v));  }            [BUGGY]  float  k  =(float)Math.ceil(v  -  1);  [BUGGY]      if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  short  NS  PS  ZS  boolean  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  k  t  u  v  	projects/Math94/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	420	420	1	replace	float  k  =(float)Math.ceil(v  -  1);	  int    k    =(int)Math.ceil(v    -    1);    	non-compiled	[CE]  <identifier>  expected	67	None	replace
160	[BUG]  [BUGGY]  int  k  =(int)Math.ceil(v  *  1);  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      public  static  int  gcd(int  u,  int  v)  {  if  (u  *  v  ==  0)  {  return  (Math.abs(u)  +  Math.abs(v));  }            [BUGGY]  int  k  =(int)Math.ceil(v  *  1);  [BUGGY]      if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  short  NS  PS  ZS  boolean  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  k  t  u  v  	projects/Math94/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	420	420	1	replace	int  k  =(int)Math.ceil(v  *  1);	  int    k    =(int)Math.ceil(v    -    1);    	non-compiled	[CE]  <identifier>  expected	67	None	replace
161	[BUG]  [BUGGY]  float  u  =(float)Math.log(v);  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      public  static  int  gcd(int  u,  int  v)  {  if  (u  *  v  ==  0)  {  return  (Math.abs(u)  +  Math.abs(v));  }            [BUGGY]  float  u  =(float)Math.log(v);  [BUGGY]      if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  short  NS  PS  ZS  boolean  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  k  t  u  v  	projects/Math94/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	420	420	1	replace	float  u  =(float)Math.log(v);	  float    u    =(float)Math.floor(v);    	non-compiled	[CE]  <identifier>  expected	61	None	replace
162	[BUG]  [BUGGY]  float  v  =(float)Math.floor(v);  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      public  static  int  gcd(int  u,  int  v)  {  if  (u  *  v  ==  0)  {  return  (Math.abs(u)  +  Math.abs(v));  }            [BUGGY]  float  v  =(float)Math.floor(v);  [BUGGY]      if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  short  NS  PS  ZS  boolean  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  k  t  u  v  	projects/Math94/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	420	420	1	replace	float  v  =(float)Math.floor(v);	  float    v    =(float)Math.floor(u);    	non-compiled	[CE]  <identifier>  expected	52	None	replace
163	[BUG]  [BUGGY]  float  k  =(float)Math.pow(10,  gcd);  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      public  static  int  gcd(int  u,  int  v)  {  if  (u  *  v  ==  0)  {  return  (Math.abs(u)  +  Math.abs(v));  }            [BUGGY]  float  k  =(float)Math.pow(10,  gcd);  [BUGGY]      if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  short  NS  PS  ZS  boolean  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  k  t  u  v  	projects/Math94/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	420	420	1	replace	float  k  =(float)Math.pow(10,  gcd);	  int    k    =(int)Math.pow(10,    gcd);    	non-compiled	[CE]  <identifier>  expected	1	None	replace
164	[BUG]  [BUGGY]  int  k  =(int)Math.pow(10,  v  *  1);  [CE]  <identifier>  expected  [FE]            AssertionFailedError      [CONTEXT]      public  static  int  gcd(int  u,  int  v)  {  if  (u  *  v  ==  0)  {  return  (Math.abs(u)  +  Math.abs(v));  }            [BUGGY]  int  k  =(int)Math.pow(10,  v  *  1);  [BUGGY]      if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  short  NS  PS  ZS  boolean  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  k  t  u  v  	projects/Math94/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	420	420	1	replace	int  k  =(int)Math.pow(10,  v  *  1);	  int    k    =(int)Math.pow(10,    v    -    1);    	non-compiled	[CE]  <identifier>  expected	48	None	replace
165	[BUG]  [BUGGY]  int  u  =(int)Math.ceil(gcd,  0,  v  +  1);  [CE]  <identifier>  expected  [FE]            AssertionFailedError      [CONTEXT]      public  static  int  gcd(int  u,  int  v)  {  if  (u  *  v  ==  0)  {  return  (Math.abs(u)  +  Math.abs(v));  }            [BUGGY]  int  u  =(int)Math.ceil(gcd,  0,  v  +  1);  [BUGGY]      if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  short  NS  PS  ZS  boolean  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  k  t  u  v  	projects/Math94/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	420	420	1	replace	int  u  =(int)Math.ceil(gcd,  0,  v  +  1);	  int    u    =(int)Math.ceil(gcd,    0,    v);    	non-compiled	[CE]  <identifier>  expected	66	None	replace
166	[BUG]  [BUGGY]  int  v  =(int)Math.log(u,  v);  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      public  static  int  gcd(int  u,  int  v)  {  if  (u  *  v  ==  0)  {  return  (Math.abs(u)  +  Math.abs(v));  }            [BUGGY]  int  v  =(int)Math.log(u,  v);  [BUGGY]      if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  short  NS  PS  ZS  boolean  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  k  t  u  v  	projects/Math94/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	420	420	1	replace	int  v  =(int)Math.log(u,  v);	  int    v    =(int)Math.log(u);    	non-compiled	[CE]  <identifier>  expected	29	None	replace
167	[BUG]  [BUGGY]  float  u  =(float)Math.pow(10,  u);  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      public  static  int  gcd(int  u,  int  v)  {  if  (u  *  v  ==  0)  {  return  (Math.abs(u)  +  Math.abs(v));  }            [BUGGY]  float  u  =(float)Math.pow(10,  u);  [BUGGY]      if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  short  NS  PS  ZS  boolean  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  k  t  u  v  	projects/Math94/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	420	420	1	replace	float  u  =(float)Math.pow(10,  u);	  int    u    =(int)Math.pow(10,    u);    	non-compiled	[CE]  <identifier>  expected	18	None	replace
168	[BUG]  [BUGGY]  float  k  =(float)Math.pow(10,  gcd(u,  v));  [CE]  not  a  statement  [FE]              AssertionFailedError      [CONTEXT]      public  static  int  gcd(int  u,  int  v)  {  if  (u  *  v  ==  0)  {  return  (Math.abs(u)  +  Math.abs(v));  }            [BUGGY]  float  k  =(float)Math.pow(10,  gcd(u,  v));  [BUGGY]      if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  short  NS  PS  ZS  boolean  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  k  t  u  v  	projects/Math94/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	420	420	1	replace	float  k  =(float)Math.pow(10,  gcd(u,  v));	  int    k    =(int)Math.pow(10,    gcd(u,    v));    	non-compiled	[CE]  not  a  statement	4	None	replace
169	[BUG]  [BUGGY]  if(u  >  0  &&  v  >=  0)  {  [CE]  <identifier>  expected  [FE]            AssertionFailedError      [CONTEXT]      public  static  int  gcd(int  u,  int  v)  {  if  (u  *  v  ==  0)  {  return  (Math.abs(u)  +  Math.abs(v));  }            [BUGGY]  if(u  >  0  &&  v  >=  0)  {  [BUGGY]      u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  short  NS  PS  ZS  boolean  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  k  t  u  v  	projects/Math94/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	420	420	1	replace	if(u  >  0  &&  v  >=  0)  {	  if(u    >    0    ||    v    >=    0)    {    	non-compiled	[CE]  <identifier>  expected	49	None	replace
170	[BUG]  [BUGGY]  if(u  <  0  ||  k  <  31)  {  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      public  static  int  gcd(int  u,  int  v)  {  if  (u  *  v  ==  0)  {  return  (Math.abs(u)  +  Math.abs(v));  }            [BUGGY]  if(u  <  0  ||  k  <  31)  {  [BUGGY]      u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  short  NS  PS  ZS  boolean  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  k  t  u  v  	projects/Math94/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	420	420	1	replace	if(u  <  0  ||  k  <  31)  {	  if(u    <    =    0    ||    k    <    31)    {    	non-compiled	[CE]  <identifier>  expected	44	None	replace
171	[BUG]  [BUGGY]  if(u  <  =  0  ||  k  >  31)  {  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      public  static  int  gcd(int  u,  int  v)  {  if  (u  *  v  ==  0)  {  return  (Math.abs(u)  +  Math.abs(v));  }            [BUGGY]  if(u  <  =  0  ||  k  >  31)  {  [BUGGY]      u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  short  NS  PS  ZS  boolean  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  k  t  u  v  	projects/Math94/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	420	420	1	replace	if(u  <  =  0  ||  k  >  31)  {	  if(u    <    =    0    ||    k    <    31)    {    	non-compiled	[CE]  <identifier>  expected	44	None	replace
172	[BUG]  [BUGGY]  char  k  =(char)Math.floor(v  +  1);  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      public  static  int  gcd(int  u,  int  v)  {  if  (u  *  v  ==  0)  {  return  (Math.abs(u)  +  Math.abs(v));  }            [BUGGY]  char  k  =(char)Math.floor(v  +  1);  [BUGGY]      if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  short  NS  PS  ZS  boolean  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  k  t  u  v  	projects/Math94/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	420	420	1	replace	char  k  =(char)Math.floor(v  +  1);	  char    k    =(char)Math.floor(v);    	non-compiled	[CE]  <identifier>  expected	47	None	replace
173	[BUG]  [BUGGY]  if(v  <  =  0  ||  u  >  0)  {  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      public  static  int  gcd(int  u,  int  v)  {  if  (u  *  v  ==  0)  {  return  (Math.abs(u)  +  Math.abs(v));  }            [BUGGY]  if(v  <  =  0  ||  u  >  0)  {  [BUGGY]      u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  short  NS  PS  ZS  boolean  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  k  t  u  v  	projects/Math94/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	420	420	1	replace	if(v  <  =  0  ||  u  >  0)  {	  if(u    <    =    0    ||    v    >    0)    {    	non-compiled	[CE]  <identifier>  expected	70	None	replace
174	[BUG]  [BUGGY]  int  k  =(int)Math.ceil(v  +  1);  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]      public  static  int  gcd(int  u,  int  v)  {  if  (u  *  v  ==  0)  {  return  (Math.abs(u)  +  Math.abs(v));  }            [BUGGY]  int  k  =(int)Math.ceil(v  +  1);  [BUGGY]      if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  short  NS  PS  ZS  boolean  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  k  t  u  v  	projects/Math94/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	420	420	1	replace	int  k  =(int)Math.ceil(v  +  1);	  int    k    =(int)Math.ceil(u    +    1);    	non-compiled	[CE]  <identifier>  expected	10	None	replace
175	[BUG]  [BUGGY]  float  v  =(float)Math.ceil(gcd  -  1);  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      public  static  int  gcd(int  u,  int  v)  {  if  (u  *  v  ==  0)  {  return  (Math.abs(u)  +  Math.abs(v));  }            [BUGGY]  float  v  =(float)Math.ceil(gcd  -  1);  [BUGGY]      if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  short  NS  PS  ZS  boolean  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  k  t  u  v  	projects/Math94/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	420	420	1	replace	float  v  =(float)Math.ceil(gcd  -  1);	  float    v    =(float)Math.ceil(gcd);    	non-compiled	[CE]  <identifier>  expected	23	None	replace
176	[BUG]  [BUGGY]  float  v  =(float)Math.floor(gcd);  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      public  static  int  gcd(int  u,  int  v)  {  if  (u  *  v  ==  0)  {  return  (Math.abs(u)  +  Math.abs(v));  }            [BUGGY]  float  v  =(float)Math.floor(gcd);  [BUGGY]      if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  short  NS  PS  ZS  boolean  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  k  t  u  v  	projects/Math94/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	420	420	1	replace	float  v  =(float)Math.floor(gcd);	  float    v    =(float)Math.ceil(gcd);    	non-compiled	[CE]  <identifier>  expected	23	None	replace
177	[BUG]  [BUGGY]  int  k  =(int)Math.log(gcd,  v);  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      public  static  int  gcd(int  u,  int  v)  {  if  (u  *  v  ==  0)  {  return  (Math.abs(u)  +  Math.abs(v));  }            [BUGGY]  int  k  =(int)Math.log(gcd,  v);  [BUGGY]      if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  short  NS  PS  ZS  boolean  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  k  t  u  v  	projects/Math94/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	420	420	1	replace	int  k  =(int)Math.log(gcd,  v);	  int    k    =(int)Math.log(v);    	non-compiled	[CE]  <identifier>  expected	57	None	replace
178	[BUG]  [BUGGY]  int  u  =(int)Math.pow(10,  v  *  1);  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      public  static  int  gcd(int  u,  int  v)  {  if  (u  *  v  ==  0)  {  return  (Math.abs(u)  +  Math.abs(v));  }            [BUGGY]  int  u  =(int)Math.pow(10,  v  *  1);  [BUGGY]      if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  short  NS  PS  ZS  boolean  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  k  t  u  v  	projects/Math94/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	420	420	1	replace	int  u  =(int)Math.pow(10,  v  *  1);	  int    u    =(int)Math.pow(10,    v    -    1);    	non-compiled	[CE]  <identifier>  expected	58	None	replace
179	[BUG]  [BUGGY]  float  u  =(float)Math.ceil(gcd  -  1);  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      public  static  int  gcd(int  u,  int  v)  {  if  (u  *  v  ==  0)  {  return  (Math.abs(u)  +  Math.abs(v));  }            [BUGGY]  float  u  =(float)Math.ceil(gcd  -  1);  [BUGGY]      if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  short  NS  PS  ZS  boolean  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  k  t  u  v  	projects/Math94/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	420	420	1	replace	float  u  =(float)Math.ceil(gcd  -  1);	  float    u    =(float)Math.ceil(gcd);    	non-compiled	[CE]  <identifier>  expected	14	None	replace
180	[BUG]  [BUGGY]  float  u  =(float)Math.ceil(gcd,  1);  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      public  static  int  gcd(int  u,  int  v)  {  if  (u  *  v  ==  0)  {  return  (Math.abs(u)  +  Math.abs(v));  }            [BUGGY]  float  u  =(float)Math.ceil(gcd,  1);  [BUGGY]      if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  short  NS  PS  ZS  boolean  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  k  t  u  v  	projects/Math94/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	420	420	1	replace	float  u  =(float)Math.ceil(gcd,  1);	  float    u    =(float)Math.ceil(gcd);    	non-compiled	[CE]  <identifier>  expected	14	None	replace
181	[BUG]  [BUGGY]  if(v  >  -u)  {  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      public  static  int  gcd(int  u,  int  v)  {  if  (u  *  v  ==  0)  {  return  (Math.abs(u)  +  Math.abs(v));  }            [BUGGY]  if(v  >  -u)  {  [BUGGY]      u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  short  NS  PS  ZS  boolean  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  k  t  u  v  	projects/Math94/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	420	420	1	replace	if(v  >  -u)  {	  if(u    >    -v)    {    	non-compiled	[CE]  <identifier>  expected	60	None	replace
182	[BUG]  [BUGGY]  if(v  >  u)  {  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      public  static  int  gcd(int  u,  int  v)  {  if  (u  *  v  ==  0)  {  return  (Math.abs(u)  +  Math.abs(v));  }            [BUGGY]  if(v  >  u)  {  [BUGGY]      u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  short  NS  PS  ZS  boolean  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  k  t  u  v  	projects/Math94/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	420	420	1	replace	if(v  >  u)  {	  if(u    >    -v)    {    	non-compiled	[CE]  <identifier>  expected	60	None	replace
183	[BUG]  [BUGGY]  if(v  >  0  ||  v  >=  31)  {  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      public  static  int  gcd(int  u,  int  v)  {  if  (u  *  v  ==  0)  {  return  (Math.abs(u)  +  Math.abs(v));  }            [BUGGY]  if(v  >  0  ||  v  >=  31)  {  [BUGGY]      u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  short  NS  PS  ZS  boolean  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  k  t  u  v  	projects/Math94/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	420	420	1	replace	if(v  >  0  ||  v  >=  31)  {	  if(u    >    0    ||    v    >=    31)    {    	non-compiled	[CE]  <identifier>  expected	56	None	replace
184	[BUG]  [BUGGY]  char  u  =(char)Math.ceil(gcd  -  1);  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      public  static  int  gcd(int  u,  int  v)  {  if  (u  *  v  ==  0)  {  return  (Math.abs(u)  +  Math.abs(v));  }            [BUGGY]  char  u  =(char)Math.ceil(gcd  -  1);  [BUGGY]      if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  short  NS  PS  ZS  boolean  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  k  t  u  v  	projects/Math94/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	420	420	1	replace	char  u  =(char)Math.ceil(gcd  -  1);	  char    u    =(char)Math.ceil(gcd);    	non-compiled	[CE]  <identifier>  expected	13	None	replace
185	[BUG]  [BUGGY]  if(u  <  =  0  ||  v  <  =  31)  {  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      public  static  int  gcd(int  u,  int  v)  {  if  (u  *  v  ==  0)  {  return  (Math.abs(u)  +  Math.abs(v));  }            [BUGGY]  if(u  <  =  0  ||  v  <  =  31)  {  [BUGGY]      u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  short  NS  PS  ZS  boolean  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  k  t  u  v  	projects/Math94/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	420	420	1	replace	if(u  <  =  0  ||  v  <  =  31)  {	  if(u    >    0    ||    v    <    =    31)    {    	non-compiled	[CE]  <identifier>  expected	65	None	replace
186	[BUG]  [BUGGY]  float  u  =(float)Math.pow(10,  gcd);  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      public  static  int  gcd(int  u,  int  v)  {  if  (u  *  v  ==  0)  {  return  (Math.abs(u)  +  Math.abs(v));  }            [BUGGY]  float  u  =(float)Math.pow(10,  gcd);  [BUGGY]      if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  short  NS  PS  ZS  boolean  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  k  t  u  v  	projects/Math94/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	420	420	1	replace	float  u  =(float)Math.pow(10,  gcd);	  int    u    =(int)Math.pow(10,    gcd);    	non-compiled	[CE]  <identifier>  expected	17	None	replace
187	[BUG]  [BUGGY]  char  v  =(char)Math.floor(v);  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      public  static  int  gcd(int  u,  int  v)  {  if  (u  *  v  ==  0)  {  return  (Math.abs(u)  +  Math.abs(v));  }            [BUGGY]  char  v  =(char)Math.floor(v);  [BUGGY]      if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  short  NS  PS  ZS  boolean  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  k  t  u  v  	projects/Math94/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	420	420	1	replace	char  v  =(char)Math.floor(v);	  char    v    =(char)Math.floor(u);    	non-compiled	[CE]  <identifier>  expected	30	None	replace
188	[BUG]  [BUGGY]  int  k  =(int)Math.log(u  +  1,  v);  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      public  static  int  gcd(int  u,  int  v)  {  if  (u  *  v  ==  0)  {  return  (Math.abs(u)  +  Math.abs(v));  }            [BUGGY]  int  k  =(int)Math.log(u  +  1,  v);  [BUGGY]      if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  short  NS  PS  ZS  boolean  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  k  t  u  v  	projects/Math94/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	420	420	1	replace	int  k  =(int)Math.log(u  +  1,  v);	  int    k    =(int)Math.log(u);    	non-compiled	[CE]  <identifier>  expected	46	None	replace
189	[BUG]  [BUGGY]  int  k  =(int)Math.log(u  +  1);  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      public  static  int  gcd(int  u,  int  v)  {  if  (u  *  v  ==  0)  {  return  (Math.abs(u)  +  Math.abs(v));  }            [BUGGY]  int  k  =(int)Math.log(u  +  1);  [BUGGY]      if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  short  NS  PS  ZS  boolean  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  k  t  u  v  	projects/Math94/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	420	420	1	replace	int  k  =(int)Math.log(u  +  1);	  int    k    =(int)Math.log(u);    	non-compiled	[CE]  <identifier>  expected	46	None	replace
190	[BUG]  [BUGGY]  char  k  =(char)Math.pow(10,  -v  +  1);  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      public  static  int  gcd(int  u,  int  v)  {  if  (u  *  v  ==  0)  {  return  (Math.abs(u)  +  Math.abs(v));  }            [BUGGY]  char  k  =(char)Math.pow(10,  -v  +  1);  [BUGGY]      if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  short  NS  PS  ZS  boolean  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  k  t  u  v  	projects/Math94/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	420	420	1	replace	char  k  =(char)Math.pow(10,  -v  +  1);	  int    k    =(int)Math.pow(10,    -v    +    1);    	non-compiled	[CE]  <identifier>  expected	20	None	replace
191	[BUG]  [BUGGY]  char  u  =(char)Math.log(u);  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      public  static  int  gcd(int  u,  int  v)  {  if  (u  *  v  ==  0)  {  return  (Math.abs(u)  +  Math.abs(v));  }            [BUGGY]  char  u  =(char)Math.log(u);  [BUGGY]      if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  short  NS  PS  ZS  boolean  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  k  t  u  v  	projects/Math94/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	420	420	1	replace	char  u  =(char)Math.log(u);	  int    u    =(int)Math.log(u);    	non-compiled	[CE]  <identifier>  expected	35	None	replace
192	[BUG]  [BUGGY]  if(v  >=  0  ||  u  <  0)  {  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      public  static  int  gcd(int  u,  int  v)  {  if  (u  *  v  ==  0)  {  return  (Math.abs(u)  +  Math.abs(v));  }            [BUGGY]  if(v  >=  0  ||  u  <  0)  {  [BUGGY]      u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  short  NS  PS  ZS  boolean  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  k  t  u  v  	projects/Math94/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	420	420	1	replace	if(v  >=  0  ||  u  <  0)  {	  if(u    >=    0    ||    v    <    0)    {    	non-compiled	[CE]  <identifier>  expected	7	None	replace
193	[BUG]  [BUGGY]  if(v  >=  0  ||  u  >  0)  {  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      public  static  int  gcd(int  u,  int  v)  {  if  (u  *  v  ==  0)  {  return  (Math.abs(u)  +  Math.abs(v));  }            [BUGGY]  if(v  >=  0  ||  u  >  0)  {  [BUGGY]      u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  short  NS  PS  ZS  boolean  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  k  t  u  v  	projects/Math94/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	420	420	1	replace	if(v  >=  0  ||  u  >  0)  {	  if(u    >=    0    ||    v    <    0)    {    	non-compiled	[CE]  <identifier>  expected	7	None	replace
194	[BUG]  [BUGGY]  int  k  =(int)Math.ceil(u  /  1);  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]      public  static  int  gcd(int  u,  int  v)  {  if  (u  *  v  ==  0)  {  return  (Math.abs(u)  +  Math.abs(v));  }            [BUGGY]  int  k  =(int)Math.ceil(u  /  1);  [BUGGY]      if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  short  NS  PS  ZS  boolean  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  k  t  u  v  	projects/Math94/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	420	420	1	replace	int  k  =(int)Math.ceil(u  /  1);	  int    k    =(int)Math.ceil(u    +    1);    	non-compiled	[CE]  <identifier>  expected	10	None	replace
195	[BUG]  [BUGGY]  int  k  =(int)Math.log(gcd(u),  v);  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      public  static  int  gcd(int  u,  int  v)  {  if  (u  *  v  ==  0)  {  return  (Math.abs(u)  +  Math.abs(v));  }            [BUGGY]  int  k  =(int)Math.log(gcd(u),  v);  [BUGGY]      if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  short  NS  PS  ZS  boolean  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  k  t  u  v  	projects/Math94/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	420	420	1	replace	int  k  =(int)Math.log(gcd(u),  v);	  int    k    =(int)Math.log(v);    	non-compiled	[CE]  <identifier>  expected	57	None	replace
196	[BUG]  [BUGGY]  int  u  =(int)Math.log(u  +  1);  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      public  static  int  gcd(int  u,  int  v)  {  if  (u  *  v  ==  0)  {  return  (Math.abs(u)  +  Math.abs(v));  }            [BUGGY]  int  u  =(int)Math.log(u  +  1);  [BUGGY]      if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  short  NS  PS  ZS  boolean  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  k  t  u  v  	projects/Math94/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	420	420	1	replace	int  u  =(int)Math.log(u  +  1);	  int    u    =(int)Math.floor(u    +    1);    	non-compiled	[CE]  <identifier>  expected	38	None	replace
197	[BUG]  [BUGGY]  int  k  =(int)Math.ceil(v,  u);  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      public  static  int  gcd(int  u,  int  v)  {  if  (u  *  v  ==  0)  {  return  (Math.abs(u)  +  Math.abs(v));  }            [BUGGY]  int  k  =(int)Math.ceil(v,  u);  [BUGGY]      if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  short  NS  PS  ZS  boolean  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  k  t  u  v  	projects/Math94/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	420	420	1	replace	int  k  =(int)Math.ceil(v,  u);	  int    k    =(int)Math.ceil(u,    v);    	non-compiled	[CE]  <identifier>  expected	8	None	replace
198	[BUG]  [BUGGY]  char  v  =(char)Math.ceil(v);  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      public  static  int  gcd(int  u,  int  v)  {  if  (u  *  v  ==  0)  {  return  (Math.abs(u)  +  Math.abs(v));  }            [BUGGY]  char  v  =(char)Math.ceil(v);  [BUGGY]      if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  short  NS  PS  ZS  boolean  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  k  t  u  v  	projects/Math94/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	420	420	1	replace	char  v  =(char)Math.ceil(v);	  char    v    =(char)Math.floor(u);    	non-compiled	[CE]  <identifier>  expected	30	None	replace
199	[BUG]  [BUGGY]  int  u  =(int)Math.pow(10,  YEAR);  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      public  static  int  gcd(int  u,  int  v)  {  if  (u  *  v  ==  0)  {  return  (Math.abs(u)  +  Math.abs(v));  }            [BUGGY]  int  u  =(int)Math.pow(10,  YEAR);  [BUGGY]      if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  short  NS  PS  ZS  boolean  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  k  t  u  v  	projects/Math94/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	420	420	1	replace	int  u  =(int)Math.pow(10,  YEAR);	  int    u    =(int)Math.pow(10,    3);    	non-compiled	[CE]  <identifier>  expected	43	None	replace
200	[BUG]  [BUGGY]  int  k  =(int)Math.ceil(gcd(u,  v  +  1));  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      public  static  int  gcd(int  u,  int  v)  {  if  (u  *  v  ==  0)  {  return  (Math.abs(u)  +  Math.abs(v));  }            [BUGGY]  int  k  =(int)Math.ceil(gcd(u,  v  +  1));  [BUGGY]      if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  short  NS  PS  ZS  boolean  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  k  t  u  v  	projects/Math94/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	420	420	1	replace	int  k  =(int)Math.ceil(gcd(u,  v  +  1));	  int    k    =(int)Math.ceil(gcd(u,    v));    	non-compiled	[CE]  <identifier>  expected	9	None	replace
201	[BUG]  [BUGGY]  byte  u  =(byte)Math.ceil(v);  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      public  static  int  gcd(int  u,  int  v)  {  if  (u  *  v  ==  0)  {  return  (Math.abs(u)  +  Math.abs(v));  }            [BUGGY]  byte  u  =(byte)Math.ceil(v);  [BUGGY]      if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  short  NS  PS  ZS  boolean  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  k  t  u  v  	projects/Math94/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	420	420	1	replace	byte  u  =(byte)Math.ceil(v);	  int    u    =(int)Math.ceil(v);    	non-compiled	[CE]  <identifier>  expected	34	None	replace
202	[BUG]  [BUGGY]  if(k  <  =  0  ||  u  <  31)  {  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      public  static  int  gcd(int  u,  int  v)  {  if  (u  *  v  ==  0)  {  return  (Math.abs(u)  +  Math.abs(v));  }            [BUGGY]  if(k  <  =  0  ||  u  <  31)  {  [BUGGY]      u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  short  NS  PS  ZS  boolean  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  k  t  u  v  	projects/Math94/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	420	420	1	replace	if(k  <  =  0  ||  u  <  31)  {	  if(u    <    =    0    ||    k    <    31)    {    	non-compiled	[CE]  <identifier>  expected	44	None	replace
203	[BUG]  [BUGGY]  if(v  <  =  0  ||  k  <  31)  {  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      public  static  int  gcd(int  u,  int  v)  {  if  (u  *  v  ==  0)  {  return  (Math.abs(u)  +  Math.abs(v));  }            [BUGGY]  if(v  <  =  0  ||  k  <  31)  {  [BUGGY]      u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  short  NS  PS  ZS  boolean  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  k  t  u  v  	projects/Math94/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	420	420	1	replace	if(v  <  =  0  ||  k  <  31)  {	  if(u    <    =    0    ||    k    <    31)    {    	non-compiled	[CE]  <identifier>  expected	44	None	replace
204	[BUG]  [BUGGY]  int  k  =(int)Math.pow(10,  y  /  1);  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      public  static  int  gcd(int  u,  int  v)  {  if  (u  *  v  ==  0)  {  return  (Math.abs(u)  +  Math.abs(v));  }            [BUGGY]  int  k  =(int)Math.pow(10,  y  /  1);  [BUGGY]      if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  short  NS  PS  ZS  boolean  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  k  t  u  v  	projects/Math94/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	420	420	1	replace	int  k  =(int)Math.pow(10,  y  /  1);	  int    k    =(int)Math.pow(10,    y    +    1);    	non-compiled	[CE]  <identifier>  expected	15	None	replace
205	[BUG]  [BUGGY]  int  v  =(int)Math.ceil(v);  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      public  static  int  gcd(int  u,  int  v)  {  if  (u  *  v  ==  0)  {  return  (Math.abs(u)  +  Math.abs(v));  }            [BUGGY]  int  v  =(int)Math.ceil(v);  [BUGGY]      if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  short  NS  PS  ZS  boolean  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  k  t  u  v  	projects/Math94/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	420	420	1	replace	int  v  =(int)Math.ceil(v);	  int    v    =(int)Math.ceil(u);    	non-compiled	[CE]  <identifier>  expected	27	None	replace
206	[BUG]  [BUGGY]  if(v  >  0  ||  v  <  32)  {  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      public  static  int  gcd(int  u,  int  v)  {  if  (u  *  v  ==  0)  {  return  (Math.abs(u)  +  Math.abs(v));  }            [BUGGY]  if(v  >  0  ||  v  <  32)  {  [BUGGY]      u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  short  NS  PS  ZS  boolean  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  k  t  u  v  	projects/Math94/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	420	420	1	replace	if(v  >  0  ||  v  <  32)  {	  if(v    >    0    ||    v    <    31)    {    	non-compiled	[CE]  <identifier>  expected	64	None	replace
207	[BUG]  [BUGGY]  if(v  >  0  ||  u  <  =  0)  {  [CE]  <identifier>  expected  [FE]            AssertionFailedError      [CONTEXT]      public  static  int  gcd(int  u,  int  v)  {  if  (u  *  v  ==  0)  {  return  (Math.abs(u)  +  Math.abs(v));  }            [BUGGY]  if(v  >  0  ||  u  <  =  0)  {  [BUGGY]      u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  short  NS  PS  ZS  boolean  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  k  t  u  v  	projects/Math94/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	420	420	1	replace	if(v  >  0  ||  u  <  =  0)  {	  if(u    >    0    ||    v    <    =    0)    {    	non-compiled	[CE]  <identifier>  expected	72	None	replace
208	[BUG]  [BUGGY]  float  v  =(float)Math.ceil(v);  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      public  static  int  gcd(int  u,  int  v)  {  if  (u  *  v  ==  0)  {  return  (Math.abs(u)  +  Math.abs(v));  }            [BUGGY]  float  v  =(float)Math.ceil(v);  [BUGGY]      if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  short  NS  PS  ZS  boolean  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  k  t  u  v  	projects/Math94/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	420	420	1	replace	float  v  =(float)Math.ceil(v);	  float    v    =(float)Math.floor(u);    	non-compiled	[CE]  <identifier>  expected	52	None	replace
209	[BUG]  [BUGGY]  if(v  <  =  0  ||  u  <  =  0)  {  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      public  static  int  gcd(int  u,  int  v)  {  if  (u  *  v  ==  0)  {  return  (Math.abs(u)  +  Math.abs(v));  }            [BUGGY]  if(v  <  =  0  ||  u  <  =  0)  {  [BUGGY]      u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  short  NS  PS  ZS  boolean  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  k  t  u  v  	projects/Math94/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	420	420	1	replace	if(v  <  =  0  ||  u  <  =  0)  {	  if(u    <    =    0    ||    v    <    0)    {    	non-compiled	[CE]  <identifier>  expected	6	None	replace
210	[BUG]  [BUGGY]  int  k  =(int)Math.pow(10,  gcd(u,  v  +  1));  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      public  static  int  gcd(int  u,  int  v)  {  if  (u  *  v  ==  0)  {  return  (Math.abs(u)  +  Math.abs(v));  }            [BUGGY]  int  k  =(int)Math.pow(10,  gcd(u,  v  +  1));  [BUGGY]      if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  short  NS  PS  ZS  boolean  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  k  t  u  v  	projects/Math94/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	420	420	1	replace	int  k  =(int)Math.pow(10,  gcd(u,  v  +  1));	  int    k    =(int)Math.pow(10,    gcd(u,    v));    	non-compiled	[CE]  <identifier>  expected	4	None	replace
211	[BUG]  [BUGGY]  int  u  =(int)Math.floor(u,  v  -  1);  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      public  static  int  gcd(int  u,  int  v)  {  if  (u  *  v  ==  0)  {  return  (Math.abs(u)  +  Math.abs(v));  }            [BUGGY]  int  u  =(int)Math.floor(u,  v  -  1);  [BUGGY]      if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  short  NS  PS  ZS  boolean  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  k  t  u  v  	projects/Math94/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	420	420	1	replace	int  u  =(int)Math.floor(u,  v  -  1);	  int    u    =(int)Math.floor(u,    v);    	non-compiled	[CE]  <identifier>  expected	39	None	replace
212	[BUG]  [BUGGY]  if(v  >  0  ||  v  <  =  31)  {  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      public  static  int  gcd(int  u,  int  v)  {  if  (u  *  v  ==  0)  {  return  (Math.abs(u)  +  Math.abs(v));  }            [BUGGY]  if(v  >  0  ||  v  <  =  31)  {  [BUGGY]      u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  short  NS  PS  ZS  boolean  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  k  t  u  v  	projects/Math94/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	420	420	1	replace	if(v  >  0  ||  v  <  =  31)  {	  if(u    >    0    ||    v    <    =    31)    {    	non-compiled	[CE]  <identifier>  expected	65	None	replace
213	[BUG]  [BUGGY]  if(v  >  0  ||  u  >=  0)  {  [CE]  <identifier>  expected  [FE]            AssertionFailedError      [CONTEXT]      public  static  int  gcd(int  u,  int  v)  {  if  (u  *  v  ==  0)  {  return  (Math.abs(u)  +  Math.abs(v));  }            [BUGGY]  if(v  >  0  ||  u  >=  0)  {  [BUGGY]      u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  short  NS  PS  ZS  boolean  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  k  t  u  v  	projects/Math94/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	420	420	1	replace	if(v  >  0  ||  u  >=  0)  {	  if(u    >    0    ||    v    >=    0)    {    	non-compiled	[CE]  <identifier>  expected	49	None	replace
214	[BUG]  [BUGGY]  String  k  =(String)Math.ceil(u);  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      public  static  int  gcd(int  u,  int  v)  {  if  (u  *  v  ==  0)  {  return  (Math.abs(u)  +  Math.abs(v));  }            [BUGGY]  String  k  =(String)Math.ceil(u);  [BUGGY]      if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  short  NS  PS  ZS  boolean  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  k  t  u  v  	projects/Math94/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	420	420	1	replace	String  k  =(String)Math.ceil(u);	  char    k    =(char)Math.ceil(u);    	non-compiled	[CE]  <identifier>  expected	62	None	replace
215	[BUG]  [BUGGY]  int  k  =(int)Math.pow(10,  y  -  2);  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      public  static  int  gcd(int  u,  int  v)  {  if  (u  *  v  ==  0)  {  return  (Math.abs(u)  +  Math.abs(v));  }            [BUGGY]  int  k  =(int)Math.pow(10,  y  -  2);  [BUGGY]      if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  short  NS  PS  ZS  boolean  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  k  t  u  v  	projects/Math94/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	420	420	1	replace	int  k  =(int)Math.pow(10,  y  -  2);	  int    k    =(int)Math.pow(10,    y    -    1);    	non-compiled	[CE]  <identifier>  expected	68	None	replace
216	[BUG]  [BUGGY]  int  k  =(int)Math.pow(10,  c  -  1);  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      public  static  int  gcd(int  u,  int  v)  {  if  (u  *  v  ==  0)  {  return  (Math.abs(u)  +  Math.abs(v));  }            [BUGGY]  int  k  =(int)Math.pow(10,  c  -  1);  [BUGGY]      if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  short  NS  PS  ZS  boolean  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  k  t  u  v  	projects/Math94/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	420	420	1	replace	int  k  =(int)Math.pow(10,  c  -  1);	  int    k    =(int)Math.pow(10,    c);    	non-compiled	[CE]  <identifier>  expected	2	None	replace
217	[BUG]  [BUGGY]  if(v  >  -1)  {  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      public  static  int  gcd(int  u,  int  v)  {  if  (u  *  v  ==  0)  {  return  (Math.abs(u)  +  Math.abs(v));  }            [BUGGY]  if(v  >  -1)  {  [BUGGY]      u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  short  NS  PS  ZS  boolean  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  k  t  u  v  	projects/Math94/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	420	420	1	replace	if(v  >  -1)  {	  if(u    >    -v)    {    	non-compiled	[CE]  <identifier>  expected	60	None	replace
218	[BUG]  [BUGGY]  char  u  =(char)Math.pow(10,  -v);  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      public  static  int  gcd(int  u,  int  v)  {  if  (u  *  v  ==  0)  {  return  (Math.abs(u)  +  Math.abs(v));  }            [BUGGY]  char  u  =(char)Math.pow(10,  -v);  [BUGGY]      if  (u  >  0)  {  u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  short  NS  PS  ZS  boolean  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  k  t  u  v  	projects/Math94/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	420	420	1	replace	char  u  =(char)Math.pow(10,  -v);	  int    u    =(int)Math.pow(10,    -v);    	non-compiled	[CE]  <identifier>  expected	59	None	replace
219	[BUG]  [BUGGY]  if(v  >  0  ||  u  ==  0)  {  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      public  static  int  gcd(int  u,  int  v)  {  if  (u  *  v  ==  0)  {  return  (Math.abs(u)  +  Math.abs(v));  }            [BUGGY]  if(v  >  0  ||  u  ==  0)  {  [BUGGY]      u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  short  NS  PS  ZS  boolean  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  k  t  u  v  	projects/Math94/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	420	420	1	replace	if(v  >  0  ||  u  ==  0)  {	  if(u    >    0    ||    v    ==    0)    {    	non-compiled	[CE]  <identifier>  expected	50	None	replace
