bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  u  =  0;  [CE]  <identifier>  expected  [FE]        AssertionFailedError    [CONTEXT]    public  static  int  gcd(int  u,  int  v)  {  if  (u  *  v  ==  0)  {  return  (Math.abs(u)  +  Math.abs(v));  }      if  (u  >  0)  {    [BUGGY]  u  =  0;  [BUGGY]    }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  v  /=  2;  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  short  NS  PS  ZS  boolean  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  k  t  u  v  	projects/Math94/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	421	421	1	replace	u  =  0;	  u    =    -1;    	non-compiled	[CE]  <identifier>  expected	6	None	replace
2	[BUG]  [BUGGY]  u  =  1;  [CE]  <identifier>  expected  [FE]          AssertionFailedError    [CONTEXT]    public  static  int  gcd(int  u,  int  v)  {  if  (u  *  v  ==  0)  {  return  (Math.abs(u)  +  Math.abs(v));  }      if  (u  >  0)  {    [BUGGY]  u  =  1;  [BUGGY]    }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  v  /=  2;  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  short  NS  PS  ZS  boolean  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  k  t  u  v  	projects/Math94/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	421	421	1	replace	u  =  1;	  u    =    -1;    	non-compiled	[CE]  <identifier>  expected	6	None	replace
3	[BUG]  [BUGGY]  int  v  =(int)Math.pow(10,  y  +  1);  [CE]  <identifier>  expected  [FE]              AssertionFailedError    [CONTEXT]    public  static  int  gcd(int  u,  int  v)  {  if  (u  *  v  ==  0)  {  return  (Math.abs(u)  +  Math.abs(v));  }      if  (u  >  0)  {    [BUGGY]  int  v  =(int)Math.pow(10,  y  +  1);  [BUGGY]    u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  v  /=  2;  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  short  NS  PS  ZS  boolean  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  k  t  u  v  	projects/Math94/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	421	421	1	replace	int  v  =(int)Math.pow(10,  y  +  1);	      int    v    =(int)Math.pow(10,    y);    	non-compiled	[CE]  <identifier>  expected	14	None	replace
4	[BUG]  [BUGGY]  int  v  =(int)Math.pow(10,  x);  [CE]  <identifier>  expected  [FE]                AssertionFailedError    [CONTEXT]    public  static  int  gcd(int  u,  int  v)  {  if  (u  *  v  ==  0)  {  return  (Math.abs(u)  +  Math.abs(v));  }      if  (u  >  0)  {    [BUGGY]  int  v  =(int)Math.pow(10,  x);  [BUGGY]    u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  v  /=  2;  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  short  NS  PS  ZS  boolean  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  k  t  u  v  	projects/Math94/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	421	421	1	replace	int  v  =(int)Math.pow(10,  x);	      int    v    =(int)Math.pow(10,    y);    	non-compiled	[CE]  <identifier>  expected	14	None	replace
5	[BUG]  [BUGGY]  float  v  =(float)Math.pow(10,  y);  [CE]  <identifier>  expected  [FE]                  AssertionFailedError    [CONTEXT]    public  static  int  gcd(int  u,  int  v)  {  if  (u  *  v  ==  0)  {  return  (Math.abs(u)  +  Math.abs(v));  }      if  (u  >  0)  {    [BUGGY]  float  v  =(float)Math.pow(10,  y);  [BUGGY]    u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  v  /=  2;  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  short  NS  PS  ZS  boolean  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  k  t  u  v  	projects/Math94/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	421	421	1	replace	float  v  =(float)Math.pow(10,  y);	      int    v    =(int)Math.pow(10,    y);    	non-compiled	[CE]  <identifier>  expected	14	None	replace
6	[BUG]  [BUGGY]  u  =  Math.abs(u)/  Math.abs(v);  [CE]  <identifier>  expected  [FE]        AssertionFailedError    [CONTEXT]    public  static  int  gcd(int  u,  int  v)  {  if  (u  *  v  ==  0)  {  return  (Math.abs(u)  +  Math.abs(v));  }      if  (u  >  0)  {    [BUGGY]  u  =  Math.abs(u)/  Math.abs(v);  [BUGGY]    u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  v  /=  2;  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  short  NS  PS  ZS  boolean  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  k  t  u  v  	projects/Math94/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	421	421	1	replace	u  =  Math.abs(u)/  Math.abs(v);	      u    =    Math.abs(u)+    Math.abs(v);    	non-compiled	[CE]  <identifier>  expected	1	None	replace
7	[BUG]  [BUGGY]  u  =  Math.abs(u)+  Math.abs(v  +  1);  [CE]  <identifier>  expected  [FE]          AssertionFailedError    [CONTEXT]    public  static  int  gcd(int  u,  int  v)  {  if  (u  *  v  ==  0)  {  return  (Math.abs(u)  +  Math.abs(v));  }      if  (u  >  0)  {    [BUGGY]  u  =  Math.abs(u)+  Math.abs(v  +  1);  [BUGGY]    u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  v  /=  2;  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  short  NS  PS  ZS  boolean  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  k  t  u  v  	projects/Math94/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	421	421	1	replace	u  =  Math.abs(u)+  Math.abs(v  +  1);	      u    =    Math.abs(u)+    Math.abs(v);    	non-compiled	[CE]  <identifier>  expected	1	None	replace
8	[BUG]  [BUGGY]  u  =  Math.abs(u)+  Math.abs(k);  [CE]  <identifier>  expected  [FE]            AssertionFailedError    [CONTEXT]    public  static  int  gcd(int  u,  int  v)  {  if  (u  *  v  ==  0)  {  return  (Math.abs(u)  +  Math.abs(v));  }      if  (u  >  0)  {    [BUGGY]  u  =  Math.abs(u)+  Math.abs(k);  [BUGGY]    u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  v  /=  2;  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  short  NS  PS  ZS  boolean  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  k  t  u  v  	projects/Math94/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	421	421	1	replace	u  =  Math.abs(u)+  Math.abs(k);	      u    =    Math.abs(u)+    Math.abs(v);    	non-compiled	[CE]  <identifier>  expected	1	None	replace
9	[BUG]  [BUGGY]  int  u  =(int)Math.pow(10,  v);  [CE]  <identifier>  expected  [FE]          AssertionFailedError    [CONTEXT]    public  static  int  gcd(int  u,  int  v)  {  if  (u  *  v  ==  0)  {  return  (Math.abs(u)  +  Math.abs(v));  }      if  (u  >  0)  {    [BUGGY]  int  u  =(int)Math.pow(10,  v);  [BUGGY]    u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  v  /=  2;  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  short  NS  PS  ZS  boolean  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  k  t  u  v  	projects/Math94/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	421	421	1	replace	int  u  =(int)Math.pow(10,  v);	      int    u    =(int)Math.pow(10,    u);    	non-compiled	[CE]  <identifier>  expected	2	None	replace
10	[BUG]  [BUGGY]  int  u  =(int)Math.pow(10,  0);  [CE]  <identifier>  expected  [FE]            AssertionFailedError    [CONTEXT]    public  static  int  gcd(int  u,  int  v)  {  if  (u  *  v  ==  0)  {  return  (Math.abs(u)  +  Math.abs(v));  }      if  (u  >  0)  {    [BUGGY]  int  u  =(int)Math.pow(10,  0);  [BUGGY]    u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  v  /=  2;  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  short  NS  PS  ZS  boolean  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  k  t  u  v  	projects/Math94/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	421	421	1	replace	int  u  =(int)Math.pow(10,  0);	      int    u    =(int)Math.pow(10,    u);    	non-compiled	[CE]  <identifier>  expected	2	None	replace
11	[BUG]  [BUGGY]  int  u  =(int)Math.pow(10,  y);  [CE]  <identifier>  expected  [FE]              AssertionFailedError    [CONTEXT]    public  static  int  gcd(int  u,  int  v)  {  if  (u  *  v  ==  0)  {  return  (Math.abs(u)  +  Math.abs(v));  }      if  (u  >  0)  {    [BUGGY]  int  u  =(int)Math.pow(10,  y);  [BUGGY]    u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  v  /=  2;  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  short  NS  PS  ZS  boolean  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  k  t  u  v  	projects/Math94/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	421	421	1	replace	int  u  =(int)Math.pow(10,  y);	      int    u    =(int)Math.pow(10,    u);    	non-compiled	[CE]  <identifier>  expected	2	None	replace
12	[BUG]  [BUGGY]  int  u  =(int)Math.pow(10,  gcd);  [CE]  <identifier>  expected  [FE]                AssertionFailedError    [CONTEXT]    public  static  int  gcd(int  u,  int  v)  {  if  (u  *  v  ==  0)  {  return  (Math.abs(u)  +  Math.abs(v));  }      if  (u  >  0)  {    [BUGGY]  int  u  =(int)Math.pow(10,  gcd);  [BUGGY]    u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  v  /=  2;  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  short  NS  PS  ZS  boolean  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  k  t  u  v  	projects/Math94/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	421	421	1	replace	int  u  =(int)Math.pow(10,  gcd);	      int    u    =(int)Math.pow(10,    u);    	non-compiled	[CE]  <identifier>  expected	2	None	replace
13	[BUG]  [BUGGY]  int  v  =(int)Math.floor(u  +  1);  [CE]  <identifier>  expected  [FE]          AssertionFailedError    [CONTEXT]    public  static  int  gcd(int  u,  int  v)  {  if  (u  *  v  ==  0)  {  return  (Math.abs(u)  +  Math.abs(v));  }      if  (u  >  0)  {    [BUGGY]  int  v  =(int)Math.floor(u  +  1);  [BUGGY]    u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  v  /=  2;  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  short  NS  PS  ZS  boolean  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  k  t  u  v  	projects/Math94/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	421	421	1	replace	int  v  =(int)Math.floor(u  +  1);	      int    v    =(int)Math.floor(u);    	non-compiled	[CE]  <identifier>  expected	12	None	replace
14	[BUG]  [BUGGY]  float  v  =(float)Math.floor(u);  [CE]  <identifier>  expected  [FE]            AssertionFailedError    [CONTEXT]    public  static  int  gcd(int  u,  int  v)  {  if  (u  *  v  ==  0)  {  return  (Math.abs(u)  +  Math.abs(v));  }      if  (u  >  0)  {    [BUGGY]  float  v  =(float)Math.floor(u);  [BUGGY]    u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  v  /=  2;  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  short  NS  PS  ZS  boolean  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  k  t  u  v  	projects/Math94/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	421	421	1	replace	float  v  =(float)Math.floor(u);	      int    v    =(int)Math.floor(u);    	non-compiled	[CE]  <identifier>  expected	12	None	replace
15	[BUG]  [BUGGY]  u  =  -u  *  v  +  1;  [CE]  <identifier>  expected  [FE]              AssertionFailedError    [CONTEXT]    public  static  int  gcd(int  u,  int  v)  {  if  (u  *  v  ==  0)  {  return  (Math.abs(u)  +  Math.abs(v));  }      if  (u  >  0)  {    [BUGGY]  u  =  -u  *  v  +  1;  [BUGGY]    }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  v  /=  2;  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  short  NS  PS  ZS  boolean  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  k  t  u  v  	projects/Math94/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	421	421	1	replace	u  =  -u  *  v  +  1;	  u    =    -u    *    v;    	non-compiled	[CE]  <identifier>  expected	9	None	replace
16	[BUG]  [BUGGY]  u  =  -u  *  2;  [CE]  <identifier>  expected  [FE]                AssertionFailedError    [CONTEXT]    public  static  int  gcd(int  u,  int  v)  {  if  (u  *  v  ==  0)  {  return  (Math.abs(u)  +  Math.abs(v));  }      if  (u  >  0)  {    [BUGGY]  u  =  -u  *  2;  [BUGGY]    }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  v  /=  2;  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  short  NS  PS  ZS  boolean  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  k  t  u  v  	projects/Math94/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	421	421	1	replace	u  =  -u  *  2;	  u    =    -u    *    v;    	non-compiled	[CE]  <identifier>  expected	9	None	replace
17	[BUG]  [BUGGY]  u  =  -u  *  k;  [CE]  <identifier>  expected  [FE]                  AssertionFailedError    [CONTEXT]    public  static  int  gcd(int  u,  int  v)  {  if  (u  *  v  ==  0)  {  return  (Math.abs(u)  +  Math.abs(v));  }      if  (u  >  0)  {    [BUGGY]  u  =  -u  *  k;  [BUGGY]    }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  v  /=  2;  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  short  NS  PS  ZS  boolean  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  k  t  u  v  	projects/Math94/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	421	421	1	replace	u  =  -u  *  k;	  u    =    -u    *    v;    	non-compiled	[CE]  <identifier>  expected	9	None	replace
18	[BUG]  [BUGGY]  int  v  =(int)Math.rint(u);  [CE]  <identifier>  expected  [FE]                AssertionFailedError    [CONTEXT]    public  static  int  gcd(int  u,  int  v)  {  if  (u  *  v  ==  0)  {  return  (Math.abs(u)  +  Math.abs(v));  }      if  (u  >  0)  {    [BUGGY]  int  v  =(int)Math.rint(u);  [BUGGY]    u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  v  /=  2;  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  short  NS  PS  ZS  boolean  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  k  t  u  v  	projects/Math94/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	421	421	1	replace	int  v  =(int)Math.rint(u);	      int    v    =(int)Math.log(u);    	non-compiled	[CE]  <identifier>  expected	15	None	replace
19	[BUG]  [BUGGY]  int  v  =(int)Math.log(u  +  1);  [CE]  <identifier>  expected  [FE]                  AssertionFailedError    [CONTEXT]    public  static  int  gcd(int  u,  int  v)  {  if  (u  *  v  ==  0)  {  return  (Math.abs(u)  +  Math.abs(v));  }      if  (u  >  0)  {    [BUGGY]  int  v  =(int)Math.log(u  +  1);  [BUGGY]    u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  v  /=  2;  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  short  NS  PS  ZS  boolean  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  k  t  u  v  	projects/Math94/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	421	421	1	replace	int  v  =(int)Math.log(u  +  1);	      int    v    =(int)Math.log(u);    	non-compiled	[CE]  <identifier>  expected	15	None	replace
20	[BUG]  [BUGGY]  int  v  =(int)Math.log(u  +  1,  v);  [CE]  <identifier>  expected  [FE]                    AssertionFailedError    [CONTEXT]    public  static  int  gcd(int  u,  int  v)  {  if  (u  *  v  ==  0)  {  return  (Math.abs(u)  +  Math.abs(v));  }      if  (u  >  0)  {    [BUGGY]  int  v  =(int)Math.log(u  +  1,  v);  [BUGGY]    u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  v  /=  2;  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  short  NS  PS  ZS  boolean  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  k  t  u  v  	projects/Math94/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	421	421	1	replace	int  v  =(int)Math.log(u  +  1,  v);	      int    v    =(int)Math.log(u);    	non-compiled	[CE]  <identifier>  expected	15	None	replace
21	[BUG]  [BUGGY]  int  u  =(int)Math.rint(u);  [CE]  <identifier>  expected  [FE]              AssertionFailedError    [CONTEXT]    public  static  int  gcd(int  u,  int  v)  {  if  (u  *  v  ==  0)  {  return  (Math.abs(u)  +  Math.abs(v));  }      if  (u  >  0)  {    [BUGGY]  int  u  =(int)Math.rint(u);  [BUGGY]    u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  v  /=  2;  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  short  NS  PS  ZS  boolean  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  k  t  u  v  	projects/Math94/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	421	421	1	replace	int  u  =(int)Math.rint(u);	      int    u    =(int)Math.log(u);    	non-compiled	[CE]  <identifier>  expected	4	None	replace
22	[BUG]  [BUGGY]  int  u  =(int)Math.log(u,  v);  [CE]  <identifier>  expected  [FE]                AssertionFailedError    [CONTEXT]    public  static  int  gcd(int  u,  int  v)  {  if  (u  *  v  ==  0)  {  return  (Math.abs(u)  +  Math.abs(v));  }      if  (u  >  0)  {    [BUGGY]  int  u  =(int)Math.log(u,  v);  [BUGGY]    u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  v  /=  2;  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  short  NS  PS  ZS  boolean  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  k  t  u  v  	projects/Math94/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	421	421	1	replace	int  u  =(int)Math.log(u,  v);	      int    u    =(int)Math.log(u);    	non-compiled	[CE]  <identifier>  expected	4	None	replace
23	[BUG]  [BUGGY]  int  u  =(int)Math.log(u  +  1);  [CE]  <identifier>  expected  [FE]                  AssertionFailedError    [CONTEXT]    public  static  int  gcd(int  u,  int  v)  {  if  (u  *  v  ==  0)  {  return  (Math.abs(u)  +  Math.abs(v));  }      if  (u  >  0)  {    [BUGGY]  int  u  =(int)Math.log(u  +  1);  [BUGGY]    u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  v  /=  2;  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  short  NS  PS  ZS  boolean  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  k  t  u  v  	projects/Math94/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	421	421	1	replace	int  u  =(int)Math.log(u  +  1);	      int    u    =(int)Math.log(u);    	non-compiled	[CE]  <identifier>  expected	4	None	replace
24	[BUG]  [BUGGY]  u  =  -u  /  1;  [CE]  <identifier>  expected  [FE]        AssertionFailedError    [CONTEXT]    public  static  int  gcd(int  u,  int  v)  {  if  (u  *  v  ==  0)  {  return  (Math.abs(u)  +  Math.abs(v));  }      if  (u  >  0)  {    [BUGGY]  u  =  -u  /  1;  [BUGGY]    }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  v  /=  2;  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  short  NS  PS  ZS  boolean  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  k  t  u  v  	projects/Math94/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	421	421	1	replace	u  =  -u  /  1;	  u    =    -u    -    1;    	non-compiled	[CE]  <identifier>  expected	16	None	replace
25	[BUG]  [BUGGY]  u  =  -u  *  1;  [CE]  <identifier>  expected  [FE]          AssertionFailedError    [CONTEXT]    public  static  int  gcd(int  u,  int  v)  {  if  (u  *  v  ==  0)  {  return  (Math.abs(u)  +  Math.abs(v));  }      if  (u  >  0)  {    [BUGGY]  u  =  -u  *  1;  [BUGGY]    }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  v  /=  2;  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  short  NS  PS  ZS  boolean  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  k  t  u  v  	projects/Math94/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	421	421	1	replace	u  =  -u  *  1;	  u    =    -u    -    1;    	non-compiled	[CE]  <identifier>  expected	16	None	replace
26	[BUG]  [BUGGY]  u  =  -u  +  2;  [CE]  <identifier>  expected  [FE]            AssertionFailedError    [CONTEXT]    public  static  int  gcd(int  u,  int  v)  {  if  (u  *  v  ==  0)  {  return  (Math.abs(u)  +  Math.abs(v));  }      if  (u  >  0)  {    [BUGGY]  u  =  -u  +  2;  [BUGGY]    }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  v  /=  2;  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  short  NS  PS  ZS  boolean  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  k  t  u  v  	projects/Math94/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	421	421	1	replace	u  =  -u  +  2;	  u    =    -u    +    1;    	non-compiled	[CE]  <identifier>  expected	8	None	replace
27	[BUG]  [BUGGY]  u  =  -u  +  3;  [CE]  <identifier>  expected  [FE]              AssertionFailedError    [CONTEXT]    public  static  int  gcd(int  u,  int  v)  {  if  (u  *  v  ==  0)  {  return  (Math.abs(u)  +  Math.abs(v));  }      if  (u  >  0)  {    [BUGGY]  u  =  -u  +  3;  [BUGGY]    }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  v  /=  2;  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  short  NS  PS  ZS  boolean  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  k  t  u  v  	projects/Math94/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	421	421	1	replace	u  =  -u  +  3;	  u    =    -u    +    1;    	non-compiled	[CE]  <identifier>  expected	8	None	replace
28	[BUG]  [BUGGY]  u  =  -v  +  1;  [CE]  <identifier>  expected  [FE]          AssertionFailedError    [CONTEXT]    public  static  int  gcd(int  u,  int  v)  {  if  (u  *  v  ==  0)  {  return  (Math.abs(u)  +  Math.abs(v));  }      if  (u  >  0)  {    [BUGGY]  u  =  -v  +  1;  [BUGGY]    }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  v  /=  2;  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  short  NS  PS  ZS  boolean  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  k  t  u  v  	projects/Math94/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	421	421	1	replace	u  =  -v  +  1;	  u    =    -v;    	non-compiled	[CE]  <identifier>  expected	7	None	replace
29	[BUG]  [BUGGY]  u  =  -k  +  1;  [CE]  <identifier>  expected  [FE]        AssertionFailedError    [CONTEXT]    public  static  int  gcd(int  u,  int  v)  {  if  (u  *  v  ==  0)  {  return  (Math.abs(u)  +  Math.abs(v));  }      if  (u  >  0)  {    [BUGGY]  u  =  -k  +  1;  [BUGGY]    }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  v  /=  2;  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  short  NS  PS  ZS  boolean  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  k  t  u  v  	projects/Math94/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	421	421	1	replace	u  =  -k  +  1;	  u    =    -k;    	non-compiled	[CE]  <identifier>  expected	10	None	replace
30	[BUG]  [BUGGY]  int  u  =(int)Math.ceil(u  +  1);  [CE]  <identifier>  expected  [FE]                AssertionFailedError    [CONTEXT]    public  static  int  gcd(int  u,  int  v)  {  if  (u  *  v  ==  0)  {  return  (Math.abs(u)  +  Math.abs(v));  }      if  (u  >  0)  {    [BUGGY]  int  u  =(int)Math.ceil(u  +  1);  [BUGGY]    u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  v  /=  2;  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  short  NS  PS  ZS  boolean  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  k  t  u  v  	projects/Math94/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	421	421	1	replace	int  u  =(int)Math.ceil(u  +  1);	      int    u    =(int)Math.ceil(u);    	non-compiled	[CE]  <identifier>  expected	5	None	replace
31	[BUG]  [BUGGY]  int  u  =(int)Math.ceil(v);  [CE]  <identifier>  expected  [FE]                  AssertionFailedError    [CONTEXT]    public  static  int  gcd(int  u,  int  v)  {  if  (u  *  v  ==  0)  {  return  (Math.abs(u)  +  Math.abs(v));  }      if  (u  >  0)  {    [BUGGY]  int  u  =(int)Math.ceil(v);  [BUGGY]    u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  v  /=  2;  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  short  NS  PS  ZS  boolean  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  k  t  u  v  	projects/Math94/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	421	421	1	replace	int  u  =(int)Math.ceil(v);	      int    u    =(int)Math.ceil(u);    	non-compiled	[CE]  <identifier>  expected	5	None	replace
32	[BUG]  [BUGGY]  int  u  =(int)Math.ceil(u  *  v);  [CE]  <identifier>  expected  [FE]                    AssertionFailedError    [CONTEXT]    public  static  int  gcd(int  u,  int  v)  {  if  (u  *  v  ==  0)  {  return  (Math.abs(u)  +  Math.abs(v));  }      if  (u  >  0)  {    [BUGGY]  int  u  =(int)Math.ceil(u  *  v);  [BUGGY]    u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  v  /=  2;  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  short  NS  PS  ZS  boolean  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  k  t  u  v  	projects/Math94/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	421	421	1	replace	int  u  =(int)Math.ceil(u  *  v);	      int    u    =(int)Math.ceil(u);    	non-compiled	[CE]  <identifier>  expected	5	None	replace
33	[BUG]  [BUGGY]  int  u  =(int)Math.ceil(u,  v);  [CE]  <identifier>  expected  [FE]                      AssertionFailedError    [CONTEXT]    public  static  int  gcd(int  u,  int  v)  {  if  (u  *  v  ==  0)  {  return  (Math.abs(u)  +  Math.abs(v));  }      if  (u  >  0)  {    [BUGGY]  int  u  =(int)Math.ceil(u,  v);  [BUGGY]    u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  v  /=  2;  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  short  NS  PS  ZS  boolean  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  k  t  u  v  	projects/Math94/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	421	421	1	replace	int  u  =(int)Math.ceil(u,  v);	      int    u    =(int)Math.ceil(u);    	non-compiled	[CE]  <identifier>  expected	5	None	replace
34	[BUG]  [BUGGY]  int  u  =(int)Math.floor(u  +  1);  [CE]  <identifier>  expected  [FE]            AssertionFailedError    [CONTEXT]    public  static  int  gcd(int  u,  int  v)  {  if  (u  *  v  ==  0)  {  return  (Math.abs(u)  +  Math.abs(v));  }      if  (u  >  0)  {    [BUGGY]  int  u  =(int)Math.floor(u  +  1);  [BUGGY]    u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  v  /=  2;  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  short  NS  PS  ZS  boolean  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  k  t  u  v  	projects/Math94/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	421	421	1	replace	int  u  =(int)Math.floor(u  +  1);	      int    u    =(int)Math.floor(u);    	non-compiled	[CE]  <identifier>  expected	3	None	replace
35	[BUG]  [BUGGY]  int  v  =(int)Math.ceil(u  +  1);  [CE]  <identifier>  expected  [FE]            AssertionFailedError    [CONTEXT]    public  static  int  gcd(int  u,  int  v)  {  if  (u  *  v  ==  0)  {  return  (Math.abs(u)  +  Math.abs(v));  }      if  (u  >  0)  {    [BUGGY]  int  v  =(int)Math.ceil(u  +  1);  [BUGGY]    u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  v  /=  2;  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  short  NS  PS  ZS  boolean  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  k  t  u  v  	projects/Math94/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	421	421	1	replace	int  v  =(int)Math.ceil(u  +  1);	      int    v    =(int)Math.ceil(u);    	non-compiled	[CE]  <identifier>  expected	13	None	replace
36	[BUG]  [BUGGY]  float  v  =(float)Math.ceil(u);  [CE]  <identifier>  expected  [FE]              AssertionFailedError    [CONTEXT]    public  static  int  gcd(int  u,  int  v)  {  if  (u  *  v  ==  0)  {  return  (Math.abs(u)  +  Math.abs(v));  }      if  (u  >  0)  {    [BUGGY]  float  v  =(float)Math.ceil(u);  [BUGGY]    u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  v  /=  2;  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  short  NS  PS  ZS  boolean  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  k  t  u  v  	projects/Math94/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	421	421	1	replace	float  v  =(float)Math.ceil(u);	      int    v    =(int)Math.ceil(u);    	non-compiled	[CE]  <identifier>  expected	13	None	replace
37	[BUG]  [BUGGY]  char  v  =(char)Math.ceil(u);  [CE]  <identifier>  expected  [FE]                AssertionFailedError    [CONTEXT]    public  static  int  gcd(int  u,  int  v)  {  if  (u  *  v  ==  0)  {  return  (Math.abs(u)  +  Math.abs(v));  }      if  (u  >  0)  {    [BUGGY]  char  v  =(char)Math.ceil(u);  [BUGGY]    u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  v  /=  2;  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  short  NS  PS  ZS  boolean  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  k  t  u  v  	projects/Math94/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	421	421	1	replace	char  v  =(char)Math.ceil(u);	      int    v    =(int)Math.ceil(u);    	non-compiled	[CE]  <identifier>  expected	13	None	replace
38	[BUG]  [BUGGY]  int  v  =(int)Math.ceil(u  *  2);  [CE]  <identifier>  expected  [FE]        AssertionFailedError    [CONTEXT]    public  static  int  gcd(int  u,  int  v)  {  if  (u  *  v  ==  0)  {  return  (Math.abs(u)  +  Math.abs(v));  }      if  (u  >  0)  {    [BUGGY]  int  v  =(int)Math.ceil(u  *  2);  [BUGGY]    u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  v  /=  2;  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  short  NS  PS  ZS  boolean  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  k  t  u  v  	projects/Math94/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	421	421	1	replace	int  v  =(int)Math.ceil(u  *  2);	      int    v    =(int)Math.ceil(u    *    v);    	non-compiled	[CE]  <identifier>  expected	17	None	replace
39	[BUG]  [BUGGY]  int  v  =(int)Math.ceil(u  *  4);  [CE]  <identifier>  expected  [FE]          AssertionFailedError    [CONTEXT]    public  static  int  gcd(int  u,  int  v)  {  if  (u  *  v  ==  0)  {  return  (Math.abs(u)  +  Math.abs(v));  }      if  (u  >  0)  {    [BUGGY]  int  v  =(int)Math.ceil(u  *  4);  [BUGGY]    u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  v  /=  2;  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  short  NS  PS  ZS  boolean  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  k  t  u  v  	projects/Math94/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	421	421	1	replace	int  v  =(int)Math.ceil(u  *  4);	      int    v    =(int)Math.ceil(u    *    v);    	non-compiled	[CE]  <identifier>  expected	17	None	replace
40	[BUG]  [BUGGY]  float  v  =(float)Math.ceil(u  *  v);  [CE]  <identifier>  expected  [FE]            AssertionFailedError    [CONTEXT]    public  static  int  gcd(int  u,  int  v)  {  if  (u  *  v  ==  0)  {  return  (Math.abs(u)  +  Math.abs(v));  }      if  (u  >  0)  {    [BUGGY]  float  v  =(float)Math.ceil(u  *  v);  [BUGGY]    u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  v  /=  2;  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  short  NS  PS  ZS  boolean  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  k  t  u  v  	projects/Math94/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	421	421	1	replace	float  v  =(float)Math.ceil(u  *  v);	      int    v    =(int)Math.ceil(u    *    v);    	non-compiled	[CE]  <identifier>  expected	17	None	replace
41	[BUG]  [BUGGY]  int  v  =(int)Math.ceil(u  *  3);  [CE]  <identifier>  expected  [FE]              AssertionFailedError    [CONTEXT]    public  static  int  gcd(int  u,  int  v)  {  if  (u  *  v  ==  0)  {  return  (Math.abs(u)  +  Math.abs(v));  }      if  (u  >  0)  {    [BUGGY]  int  v  =(int)Math.ceil(u  *  3);  [BUGGY]    u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  v  /=  2;  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  short  NS  PS  ZS  boolean  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  k  t  u  v  	projects/Math94/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	421	421	1	replace	int  v  =(int)Math.ceil(u  *  3);	      int    v    =(int)Math.ceil(u    *    v);    	non-compiled	[CE]  <identifier>  expected	17	None	replace
42	[BUG]  [BUGGY]  int  v  =(int)Math.pow(10,  u  +  1);  [CE]  <identifier>  expected  [FE]        AssertionFailedError    [CONTEXT]    public  static  int  gcd(int  u,  int  v)  {  if  (u  *  v  ==  0)  {  return  (Math.abs(u)  +  Math.abs(v));  }      if  (u  >  0)  {    [BUGGY]  int  v  =(int)Math.pow(10,  u  +  1);  [BUGGY]    u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  v  /=  2;  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  short  NS  PS  ZS  boolean  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  k  t  u  v  	projects/Math94/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	421	421	1	replace	int  v  =(int)Math.pow(10,  u  +  1);	      int    v    =(int)Math.pow(10,    u);    	non-compiled	[CE]  <identifier>  expected	11	None	replace
43	[BUG]  [BUGGY]  int  v  =(int)Math.pow(10,  0);  [CE]  <identifier>  expected  [FE]          AssertionFailedError    [CONTEXT]    public  static  int  gcd(int  u,  int  v)  {  if  (u  *  v  ==  0)  {  return  (Math.abs(u)  +  Math.abs(v));  }      if  (u  >  0)  {    [BUGGY]  int  v  =(int)Math.pow(10,  0);  [BUGGY]    u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  v  /=  2;  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  short  NS  PS  ZS  boolean  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  k  t  u  v  	projects/Math94/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	421	421	1	replace	int  v  =(int)Math.pow(10,  0);	      int    v    =(int)Math.pow(10,    u);    	non-compiled	[CE]  <identifier>  expected	11	None	replace
44	[BUG]  [BUGGY]  int  v  =(int)Math.pow(10,  -u);  [CE]  <identifier>  expected  [FE]            AssertionFailedError    [CONTEXT]    public  static  int  gcd(int  u,  int  v)  {  if  (u  *  v  ==  0)  {  return  (Math.abs(u)  +  Math.abs(v));  }      if  (u  >  0)  {    [BUGGY]  int  v  =(int)Math.pow(10,  -u);  [BUGGY]    u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  v  /=  2;  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  short  NS  PS  ZS  boolean  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  k  t  u  v  	projects/Math94/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	421	421	1	replace	int  v  =(int)Math.pow(10,  -u);	      int    v    =(int)Math.pow(10,    u);    	non-compiled	[CE]  <identifier>  expected	11	None	replace
45	[BUG]  [BUGGY]  int  u  =(int)Math.pow(10,  -v);  [CE]  <identifier>  expected  [FE]          AssertionFailedError    [CONTEXT]    public  static  int  gcd(int  u,  int  v)  {  if  (u  *  v  ==  0)  {  return  (Math.abs(u)  +  Math.abs(v));  }      if  (u  >  0)  {    [BUGGY]  int  u  =(int)Math.pow(10,  -v);  [BUGGY]    u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  v  /=  2;  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  short  NS  PS  ZS  boolean  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  k  t  u  v  	projects/Math94/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	421	421	1	replace	int  u  =(int)Math.pow(10,  -v);	      int    u    =(int)Math.pow(10,    u);    	non-compiled	[CE]  <identifier>  expected	2	None	replace
46	[BUG]  [BUGGY]  float  u  =(float)Math.pow(10,  u);  [CE]  <identifier>  expected  [FE]            AssertionFailedError    [CONTEXT]    public  static  int  gcd(int  u,  int  v)  {  if  (u  *  v  ==  0)  {  return  (Math.abs(u)  +  Math.abs(v));  }      if  (u  >  0)  {    [BUGGY]  float  u  =(float)Math.pow(10,  u);  [BUGGY]    u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  v  /=  2;  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  short  NS  PS  ZS  boolean  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  k  t  u  v  	projects/Math94/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	421	421	1	replace	float  u  =(float)Math.pow(10,  u);	      int    u    =(int)Math.pow(10,    u);    	non-compiled	[CE]  <identifier>  expected	2	None	replace
47	[BUG]  [BUGGY]  int  v  =(int)Math.log(u,  v);  [CE]  <identifier>  expected  [FE]                AssertionFailedError    [CONTEXT]    public  static  int  gcd(int  u,  int  v)  {  if  (u  *  v  ==  0)  {  return  (Math.abs(u)  +  Math.abs(v));  }      if  (u  >  0)  {    [BUGGY]  int  v  =(int)Math.log(u,  v);  [BUGGY]    u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  v  /=  2;  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  short  NS  PS  ZS  boolean  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  k  t  u  v  	projects/Math94/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	421	421	1	replace	int  v  =(int)Math.log(u,  v);	      int    v    =(int)Math.log(u);    	non-compiled	[CE]  <identifier>  expected	15	None	replace
48	[BUG]  [BUGGY]  int  u  =(int)Math.floor(v);  [CE]  <identifier>  expected  [FE]            AssertionFailedError    [CONTEXT]    public  static  int  gcd(int  u,  int  v)  {  if  (u  *  v  ==  0)  {  return  (Math.abs(u)  +  Math.abs(v));  }      if  (u  >  0)  {    [BUGGY]  int  u  =(int)Math.floor(v);  [BUGGY]    u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  v  /=  2;  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  short  NS  PS  ZS  boolean  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  k  t  u  v  	projects/Math94/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	421	421	1	replace	int  u  =(int)Math.floor(v);	      int    u    =(int)Math.floor(u);    	non-compiled	[CE]  <identifier>  expected	3	None	replace
49	[BUG]  [BUGGY]  int  u  =(int)Math.log(v);  [CE]  <identifier>  expected  [FE]              AssertionFailedError    [CONTEXT]    public  static  int  gcd(int  u,  int  v)  {  if  (u  *  v  ==  0)  {  return  (Math.abs(u)  +  Math.abs(v));  }      if  (u  >  0)  {    [BUGGY]  int  u  =(int)Math.log(v);  [BUGGY]    u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  v  /=  2;  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  short  NS  PS  ZS  boolean  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  k  t  u  v  	projects/Math94/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	421	421	1	replace	int  u  =(int)Math.log(v);	      int    u    =(int)Math.log(u);    	non-compiled	[CE]  <identifier>  expected	4	None	replace
50	[BUG]  [BUGGY]  int  u  =(int)Math.log(u  +  1,  v);  [CE]  <identifier>  expected  [FE]                AssertionFailedError    [CONTEXT]    public  static  int  gcd(int  u,  int  v)  {  if  (u  *  v  ==  0)  {  return  (Math.abs(u)  +  Math.abs(v));  }      if  (u  >  0)  {    [BUGGY]  int  u  =(int)Math.log(u  +  1,  v);  [BUGGY]    u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  v  /=  2;  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  short  NS  PS  ZS  boolean  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  k  t  u  v  	projects/Math94/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	421	421	1	replace	int  u  =(int)Math.log(u  +  1,  v);	      int    u    =(int)Math.log(u);    	non-compiled	[CE]  <identifier>  expected	4	None	replace
51	[BUG]  [BUGGY]  int  v  =(int)Math.ceil(u,  v);  [CE]  <identifier>  expected  [FE]            AssertionFailedError    [CONTEXT]    public  static  int  gcd(int  u,  int  v)  {  if  (u  *  v  ==  0)  {  return  (Math.abs(u)  +  Math.abs(v));  }      if  (u  >  0)  {    [BUGGY]  int  v  =(int)Math.ceil(u,  v);  [BUGGY]    u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  v  /=  2;  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  short  NS  PS  ZS  boolean  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  k  t  u  v  	projects/Math94/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	421	421	1	replace	int  v  =(int)Math.ceil(u,  v);	      int    v    =(int)Math.ceil(u);    	non-compiled	[CE]  <identifier>  expected	13	None	replace
52	[BUG]  [BUGGY]  float  u  =(float)Math.ceil(u);  [CE]  <identifier>  expected  [FE]                AssertionFailedError    [CONTEXT]    public  static  int  gcd(int  u,  int  v)  {  if  (u  *  v  ==  0)  {  return  (Math.abs(u)  +  Math.abs(v));  }      if  (u  >  0)  {    [BUGGY]  float  u  =(float)Math.ceil(u);  [BUGGY]    u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  v  /=  2;  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  short  NS  PS  ZS  boolean  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  k  t  u  v  	projects/Math94/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	421	421	1	replace	float  u  =(float)Math.ceil(u);	      int    u    =(int)Math.ceil(u);    	non-compiled	[CE]  <identifier>  expected	5	None	replace
53	[BUG]  [BUGGY]  int  u  =(int)Math.ceil(gcd);  [CE]  <identifier>  expected  [FE]                  AssertionFailedError    [CONTEXT]    public  static  int  gcd(int  u,  int  v)  {  if  (u  *  v  ==  0)  {  return  (Math.abs(u)  +  Math.abs(v));  }      if  (u  >  0)  {    [BUGGY]  int  u  =(int)Math.ceil(gcd);  [BUGGY]    u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  v  /=  2;  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  short  NS  PS  ZS  boolean  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  k  t  u  v  	projects/Math94/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	421	421	1	replace	int  u  =(int)Math.ceil(gcd);	      int    u    =(int)Math.ceil(u);    	non-compiled	[CE]  <identifier>  expected	5	None	replace
54	[BUG]  [BUGGY]  int  u  =(int)Math.ceil(0,  v);  [CE]  <identifier>  expected  [FE]                    AssertionFailedError    [CONTEXT]    public  static  int  gcd(int  u,  int  v)  {  if  (u  *  v  ==  0)  {  return  (Math.abs(u)  +  Math.abs(v));  }      if  (u  >  0)  {    [BUGGY]  int  u  =(int)Math.ceil(0,  v);  [BUGGY]    u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  v  /=  2;  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  short  NS  PS  ZS  boolean  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  k  t  u  v  	projects/Math94/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	421	421	1	replace	int  u  =(int)Math.ceil(0,  v);	      int    u    =(int)Math.ceil(u);    	non-compiled	[CE]  <identifier>  expected	5	None	replace
55	[BUG]  [BUGGY]  u  =  Math.abs(v)+  Math.abs(u);  [CE]  <identifier>  expected  [FE]        AssertionFailedError    [CONTEXT]    public  static  int  gcd(int  u,  int  v)  {  if  (u  *  v  ==  0)  {  return  (Math.abs(u)  +  Math.abs(v));  }      if  (u  >  0)  {    [BUGGY]  u  =  Math.abs(v)+  Math.abs(u);  [BUGGY]    u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  v  /=  2;  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  short  NS  PS  ZS  boolean  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  k  t  u  v  	projects/Math94/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	421	421	1	replace	u  =  Math.abs(v)+  Math.abs(u);	      u    =    Math.abs(u)+    Math.abs(v);    	non-compiled	[CE]  <identifier>  expected	1	None	replace
56	[BUG]  [BUGGY]  u  =  Math.abs(u)+  Math.abs(v  -  1);  [CE]  <identifier>  expected  [FE]          AssertionFailedError    [CONTEXT]    public  static  int  gcd(int  u,  int  v)  {  if  (u  *  v  ==  0)  {  return  (Math.abs(u)  +  Math.abs(v));  }      if  (u  >  0)  {    [BUGGY]  u  =  Math.abs(u)+  Math.abs(v  -  1);  [BUGGY]    u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  v  /=  2;  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  short  NS  PS  ZS  boolean  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  k  t  u  v  	projects/Math94/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	421	421	1	replace	u  =  Math.abs(u)+  Math.abs(v  -  1);	      u    =    Math.abs(u)+    Math.abs(v);    	non-compiled	[CE]  <identifier>  expected	1	None	replace
57	[BUG]  [BUGGY]  u  =  -u  *  4;  [CE]  <identifier>  expected  [FE]              AssertionFailedError    [CONTEXT]    public  static  int  gcd(int  u,  int  v)  {  if  (u  *  v  ==  0)  {  return  (Math.abs(u)  +  Math.abs(v));  }      if  (u  >  0)  {    [BUGGY]  u  =  -u  *  4;  [BUGGY]    }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  v  /=  2;  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  short  NS  PS  ZS  boolean  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  k  t  u  v  	projects/Math94/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	421	421	1	replace	u  =  -u  *  4;	  u    =    -u    *    v;    	non-compiled	[CE]  <identifier>  expected	9	None	replace
58	[BUG]  [BUGGY]  u  =  -u  *  3;  [CE]  <identifier>  expected  [FE]                AssertionFailedError    [CONTEXT]    public  static  int  gcd(int  u,  int  v)  {  if  (u  *  v  ==  0)  {  return  (Math.abs(u)  +  Math.abs(v));  }      if  (u  >  0)  {    [BUGGY]  u  =  -u  *  3;  [BUGGY]    }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  v  /=  2;  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  short  NS  PS  ZS  boolean  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  k  t  u  v  	projects/Math94/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	421	421	1	replace	u  =  -u  *  3;	  u    =    -u    *    v;    	non-compiled	[CE]  <identifier>  expected	9	None	replace
59	[BUG]  [BUGGY]  u  =  -v  *  u;  [CE]  <identifier>  expected  [FE]                  AssertionFailedError    [CONTEXT]    public  static  int  gcd(int  u,  int  v)  {  if  (u  *  v  ==  0)  {  return  (Math.abs(u)  +  Math.abs(v));  }      if  (u  >  0)  {    [BUGGY]  u  =  -v  *  u;  [BUGGY]    }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  v  /=  2;  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  short  NS  PS  ZS  boolean  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  k  t  u  v  	projects/Math94/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	421	421	1	replace	u  =  -v  *  u;	  u    =    -u    *    v;    	non-compiled	[CE]  <identifier>  expected	9	None	replace
60	[BUG]  [BUGGY]  u  =  -u  -  2;  [CE]  <identifier>  expected  [FE]        AssertionFailedError    [CONTEXT]    public  static  int  gcd(int  u,  int  v)  {  if  (u  *  v  ==  0)  {  return  (Math.abs(u)  +  Math.abs(v));  }      if  (u  >  0)  {    [BUGGY]  u  =  -u  -  2;  [BUGGY]    }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  v  /=  2;  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  short  NS  PS  ZS  boolean  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  k  t  u  v  	projects/Math94/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	421	421	1	replace	u  =  -u  -  2;	  u    =    -u    -    1;    	non-compiled	[CE]  <identifier>  expected	16	None	replace
61	[BUG]  [BUGGY]  int  v  =(int)Math.log(u  *  v);  [CE]  <identifier>  expected  [FE]                AssertionFailedError    [CONTEXT]    public  static  int  gcd(int  u,  int  v)  {  if  (u  *  v  ==  0)  {  return  (Math.abs(u)  +  Math.abs(v));  }      if  (u  >  0)  {    [BUGGY]  int  v  =(int)Math.log(u  *  v);  [BUGGY]    u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  v  /=  2;  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  short  NS  PS  ZS  boolean  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  k  t  u  v  	projects/Math94/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	421	421	1	replace	int  v  =(int)Math.log(u  *  v);	      int    v    =(int)Math.log(u);    	non-compiled	[CE]  <identifier>  expected	15	None	replace
62	[BUG]  [BUGGY]  k  =  -k;  [CE]  <identifier>  expected  [FE]        AssertionFailedError    [CONTEXT]    public  static  int  gcd(int  u,  int  v)  {  if  (u  *  v  ==  0)  {  return  (Math.abs(u)  +  Math.abs(v));  }      if  (u  >  0)  {    [BUGGY]  k  =  -k;  [BUGGY]    }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  v  /=  2;  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  short  NS  PS  ZS  boolean  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  k  t  u  v  	projects/Math94/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	421	421	1	replace	k  =  -k;	  u    =    -k;    	non-compiled	[CE]  <identifier>  expected	10	None	replace
63	[BUG]  [BUGGY]  int  v  =(int)Math.pow(10,  y  -  1);  [CE]  <identifier>  expected  [FE]              AssertionFailedError    [CONTEXT]    public  static  int  gcd(int  u,  int  v)  {  if  (u  *  v  ==  0)  {  return  (Math.abs(u)  +  Math.abs(v));  }      if  (u  >  0)  {    [BUGGY]  int  v  =(int)Math.pow(10,  y  -  1);  [BUGGY]    u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  v  /=  2;  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  short  NS  PS  ZS  boolean  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  k  t  u  v  	projects/Math94/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	421	421	1	replace	int  v  =(int)Math.pow(10,  y  -  1);	      int    v    =(int)Math.pow(10,    y);    	non-compiled	[CE]  <identifier>  expected	14	None	replace
64	[BUG]  [BUGGY]  int  v  =(int)Math.pow(10,  u  -  1);  [CE]  <identifier>  expected  [FE]        AssertionFailedError    [CONTEXT]    public  static  int  gcd(int  u,  int  v)  {  if  (u  *  v  ==  0)  {  return  (Math.abs(u)  +  Math.abs(v));  }      if  (u  >  0)  {    [BUGGY]  int  v  =(int)Math.pow(10,  u  -  1);  [BUGGY]    u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  v  /=  2;  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  short  NS  PS  ZS  boolean  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  k  t  u  v  	projects/Math94/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	421	421	1	replace	int  v  =(int)Math.pow(10,  u  -  1);	      int    v    =(int)Math.pow(10,    u);    	non-compiled	[CE]  <identifier>  expected	11	None	replace
65	[BUG]  [BUGGY]  v  =  -v;  [CE]  <identifier>  expected  [FE]          AssertionFailedError    [CONTEXT]    public  static  int  gcd(int  u,  int  v)  {  if  (u  *  v  ==  0)  {  return  (Math.abs(u)  +  Math.abs(v));  }      if  (u  >  0)  {    [BUGGY]  v  =  -v;  [BUGGY]    }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  v  /=  2;  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  short  NS  PS  ZS  boolean  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  k  t  u  v  	projects/Math94/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	421	421	1	replace	v  =  -v;	  u    =    -v;    	non-compiled	[CE]  <identifier>  expected	7	None	replace
66	[BUG]  [BUGGY]  v  =  -u;  [CE]  <identifier>  expected  [FE]            AssertionFailedError    [CONTEXT]    public  static  int  gcd(int  u,  int  v)  {  if  (u  *  v  ==  0)  {  return  (Math.abs(u)  +  Math.abs(v));  }      if  (u  >  0)  {    [BUGGY]  v  =  -u;  [BUGGY]    }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  v  /=  2;  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  short  NS  PS  ZS  boolean  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  k  t  u  v  	projects/Math94/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	421	421	1	replace	v  =  -u;	  u    =    -v;    	non-compiled	[CE]  <identifier>  expected	7	None	replace
67	[BUG]  [BUGGY]  float  u  =(float)Math.log(u);  [CE]  <identifier>  expected  [FE]              AssertionFailedError    [CONTEXT]    public  static  int  gcd(int  u,  int  v)  {  if  (u  *  v  ==  0)  {  return  (Math.abs(u)  +  Math.abs(v));  }      if  (u  >  0)  {    [BUGGY]  float  u  =(float)Math.log(u);  [BUGGY]    u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  v  /=  2;  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  short  NS  PS  ZS  boolean  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  k  t  u  v  	projects/Math94/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	421	421	1	replace	float  u  =(float)Math.log(u);	      int    u    =(int)Math.log(u);    	non-compiled	[CE]  <identifier>  expected	4	None	replace
68	[BUG]  [BUGGY]  u  =  -u  /  v;  [CE]  <identifier>  expected  [FE]              AssertionFailedError    [CONTEXT]    public  static  int  gcd(int  u,  int  v)  {  if  (u  *  v  ==  0)  {  return  (Math.abs(u)  +  Math.abs(v));  }      if  (u  >  0)  {    [BUGGY]  u  =  -u  /  v;  [BUGGY]    }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  v  /=  2;  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  short  NS  PS  ZS  boolean  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  k  t  u  v  	projects/Math94/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	421	421	1	replace	u  =  -u  /  v;	  u    =    -u    *    v;    	non-compiled	[CE]  <identifier>  expected	9	None	replace
69	[BUG]  [BUGGY]  float  u  =(float)Math.floor(u);  [CE]  <identifier>  expected  [FE]            AssertionFailedError    [CONTEXT]    public  static  int  gcd(int  u,  int  v)  {  if  (u  *  v  ==  0)  {  return  (Math.abs(u)  +  Math.abs(v));  }      if  (u  >  0)  {    [BUGGY]  float  u  =(float)Math.floor(u);  [BUGGY]    u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  v  /=  2;  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  short  NS  PS  ZS  boolean  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  k  t  u  v  	projects/Math94/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	421	421	1	replace	float  u  =(float)Math.floor(u);	      int    u    =(int)Math.floor(u);    	non-compiled	[CE]  <identifier>  expected	3	None	replace
70	[BUG]  [BUGGY]  char  u  =(char)Math.ceil(u);  [CE]  <identifier>  expected  [FE]                AssertionFailedError    [CONTEXT]    public  static  int  gcd(int  u,  int  v)  {  if  (u  *  v  ==  0)  {  return  (Math.abs(u)  +  Math.abs(v));  }      if  (u  >  0)  {    [BUGGY]  char  u  =(char)Math.ceil(u);  [BUGGY]    u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  v  /=  2;  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  short  NS  PS  ZS  boolean  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  k  t  u  v  	projects/Math94/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	421	421	1	replace	char  u  =(char)Math.ceil(u);	      int    u    =(int)Math.ceil(u);    	non-compiled	[CE]  <identifier>  expected	5	None	replace
71	[BUG]  [BUGGY]  int  v  =(int)Math.ceil(u  /  v);  [CE]  <identifier>  expected  [FE]        AssertionFailedError    [CONTEXT]    public  static  int  gcd(int  u,  int  v)  {  if  (u  *  v  ==  0)  {  return  (Math.abs(u)  +  Math.abs(v));  }      if  (u  >  0)  {    [BUGGY]  int  v  =(int)Math.ceil(u  /  v);  [BUGGY]    u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  v  /=  2;  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  short  NS  PS  ZS  boolean  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  k  t  u  v  	projects/Math94/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	421	421	1	replace	int  v  =(int)Math.ceil(u  /  v);	      int    v    =(int)Math.ceil(u    *    v);    	non-compiled	[CE]  <identifier>  expected	17	None	replace
72	[BUG]  [BUGGY]  u  =  Math.abs(v)+  Math.abs(v);  [CE]  <identifier>  expected  [FE]        AssertionFailedError    [CONTEXT]    public  static  int  gcd(int  u,  int  v)  {  if  (u  *  v  ==  0)  {  return  (Math.abs(u)  +  Math.abs(v));  }      if  (u  >  0)  {    [BUGGY]  u  =  Math.abs(v)+  Math.abs(v);  [BUGGY]    u  =  -u;  }  //  make  u  negative  if  (v  >  0)  {  v  =  -v;  }  //  make  v  negative  int  k  =  0;  while  ((u  &  1)  ==  0  &&  (v  &  1)  ==  0  &&  k  <  31)  {  //  while  u  and  v  are  u  /=  2;  v  /=  2;  [CLASS]  MathUtils  [METHOD]  gcd  [RETURN_TYPE]  int  int  u  int  v  [VARIABLES]  short  NS  PS  ZS  boolean  double  EPSILON  SAFE_MIN  TWO_PI  logSum  x  y  byte  NB  PB  ZB  int  k  t  u  v  	projects/Math94/src/java/org/apache/commons/math/util/MathUtils.java	0.7071067811865475	421	421	1	replace	u  =  Math.abs(v)+  Math.abs(v);	      u    =    Math.abs(u)+    Math.abs(v);    	non-compiled	[CE]  <identifier>  expected	1	None	replace
