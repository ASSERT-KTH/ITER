bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  numArgs;  ++i)  {  opt  =  getValue(i);  }  [CE]  <identifier>  expected  [FE]            AssertionFailedError      [CONTEXT]      public  static  Option  create(char  opt)  throws  IllegalArgumentException  {      [BUGGY]  for(int  i  =  0;  i  <  numArgs;  ++i)  {  opt  =  getValue(i);  }  [BUGGY]      return  create(String.valueOf(opt));  }  [CLASS]  OptionBuilder  [METHOD]  create  [RETURN_TYPE]  Option  char  opt  [VARIABLES]  boolean  hasArg  newRequired  optionalArg  required  OptionBuilder  instance  char  opt  sep  valuesep  Object  newType  type  String  argName  description  longopt  name  newDescription  newLongopt  int  num  numArgs  numberOfArgs  	projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java	0.3779644730092272	316	316	1	replace	for(int  i  =  0;  i  <  numArgs;  ++i)  {  opt  =  getValue(i);  }	  if(opt    >    0)    {    for(int    i    =    0;    i    <    numberOfArgs;    ++i)    {    opt    =    getValue(i);    }    	non-compiled	[CE]  <identifier>  expected	94	None	replace
2	[BUG]  [BUGGY]  OptionBuilder  <  Object>  opt  =  getValue(numberOfArgs);  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      public  static  Option  create(char  opt)  throws  IllegalArgumentException  {      [BUGGY]  OptionBuilder  <  Object>  opt  =  getValue(numberOfArgs);  [BUGGY]      return  create(String.valueOf(opt));  }  [CLASS]  OptionBuilder  [METHOD]  create  [RETURN_TYPE]  Option  char  opt  [VARIABLES]  boolean  hasArg  newRequired  optionalArg  required  OptionBuilder  instance  char  opt  sep  valuesep  Object  newType  type  String  argName  description  longopt  name  newDescription  newLongopt  int  num  numArgs  numberOfArgs  	projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java	0.3779644730092272	316	316	1	replace	OptionBuilder  <  Object>  opt  =  getValue(numberOfArgs);	  if(opt    >    0)    {    for(int    i    =    0;    i    <    numberOfArgs;    ++i)    {    opt    =    getValue(i);    }    	non-compiled	[CE]  <identifier>  expected	94	None	replace
3	[BUG]  [BUGGY]  numberOfArgs  ==  0)  {  return  create(String.valueOf(opt));  }  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      public  static  Option  create(char  opt)  throws  IllegalArgumentException  {      [BUGGY]  numberOfArgs  ==  0)  {  return  create(String.valueOf(opt));  }  [BUGGY]      }  [CLASS]  OptionBuilder  [METHOD]  create  [RETURN_TYPE]  Option  char  opt  [VARIABLES]  boolean  hasArg  newRequired  optionalArg  required  OptionBuilder  instance  char  opt  sep  valuesep  Object  newType  type  String  argName  description  longopt  name  newDescription  newLongopt  int  num  numArgs  numberOfArgs  	projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java	0.3779644730092272	316	316	1	replace	numberOfArgs  ==  0)  {  return  create(String.valueOf(opt));  }	  numberOfArgs    >=    0)    {    return    create(String.valueOf(opt));    }    else    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  <identifier>  expected	85	None	replace
4	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  numArgs;  ++i)  {  OptionBuilder.append(null);  }  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      public  static  Option  create(char  opt)  throws  IllegalArgumentException  {      [BUGGY]  for(int  i  =  0;  i  <  numArgs;  ++i)  {  OptionBuilder.append(null);  }  [BUGGY]      return  create(String.valueOf(opt));  }  [CLASS]  OptionBuilder  [METHOD]  create  [RETURN_TYPE]  Option  char  opt  [VARIABLES]  boolean  hasArg  newRequired  optionalArg  required  OptionBuilder  instance  char  opt  sep  valuesep  Object  newType  type  String  argName  description  longopt  name  newDescription  newLongopt  int  num  numArgs  numberOfArgs  	projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java	0.3779644730092272	316	316	1	replace	for(int  i  =  0;  i  <  numArgs;  ++i)  {  OptionBuilder.append(null);  }	  for(int    i    =    0;    i    <    numberOfArgs;    ++i)    {    OptionBuilder.append(null);    }    	non-compiled	[CE]  <identifier>  expected	41	None	replace
5	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  numberOfArgs  -  1;  ++i)  {  OptionBuilder.append(null);  }  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      public  static  Option  create(char  opt)  throws  IllegalArgumentException  {      [BUGGY]  for(int  i  =  0;  i  <  numberOfArgs  -  1;  ++i)  {  OptionBuilder.append(null);  }  [BUGGY]      return  create(String.valueOf(opt));  }  [CLASS]  OptionBuilder  [METHOD]  create  [RETURN_TYPE]  Option  char  opt  [VARIABLES]  boolean  hasArg  newRequired  optionalArg  required  OptionBuilder  instance  char  opt  sep  valuesep  Object  newType  type  String  argName  description  longopt  name  newDescription  newLongopt  int  num  numArgs  numberOfArgs  	projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java	0.3779644730092272	316	316	1	replace	for(int  i  =  0;  i  <  numberOfArgs  -  1;  ++i)  {  OptionBuilder.append(null);  }	  for(int    i    =    0;    i    <    numberOfArgs;    ++i)    {    OptionBuilder.append(null);    }    	non-compiled	[CE]  <identifier>  expected	41	None	replace
6	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  this.numberOfArgs;  ++i)  {  OptionBuilder.append(null);  }  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]      public  static  Option  create(char  opt)  throws  IllegalArgumentException  {      [BUGGY]  for(int  i  =  0;  i  <  this.numberOfArgs;  ++i)  {  OptionBuilder.append(null);  }  [BUGGY]      return  create(String.valueOf(opt));  }  [CLASS]  OptionBuilder  [METHOD]  create  [RETURN_TYPE]  Option  char  opt  [VARIABLES]  boolean  hasArg  newRequired  optionalArg  required  OptionBuilder  instance  char  opt  sep  valuesep  Object  newType  type  String  argName  description  longopt  name  newDescription  newLongopt  int  num  numArgs  numberOfArgs  	projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java	0.3779644730092272	316	316	1	replace	for(int  i  =  0;  i  <  this.numberOfArgs;  ++i)  {  OptionBuilder.append(null);  }	  for(int    i    =    0;    i    <    numberOfArgs;    ++i)    {    OptionBuilder.append(null);    }    	non-compiled	[CE]  <identifier>  expected	41	None	replace
7	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  valuesep;  ++i)  {  OptionBuilder.append(null);  }  [CE]  <identifier>  expected  [FE]                          AssertionFailedError      [CONTEXT]      public  static  Option  create(char  opt)  throws  IllegalArgumentException  {      [BUGGY]  for(int  i  =  0;  i  <  valuesep;  ++i)  {  OptionBuilder.append(null);  }  [BUGGY]      return  create(String.valueOf(opt));  }  [CLASS]  OptionBuilder  [METHOD]  create  [RETURN_TYPE]  Option  char  opt  [VARIABLES]  boolean  hasArg  newRequired  optionalArg  required  OptionBuilder  instance  char  opt  sep  valuesep  Object  newType  type  String  argName  description  longopt  name  newDescription  newLongopt  int  num  numArgs  numberOfArgs  	projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java	0.3779644730092272	316	316	1	replace	for(int  i  =  0;  i  <  valuesep;  ++i)  {  OptionBuilder.append(null);  }	  for(int    i    =    0;    i    <    numberOfArgs;    ++i)    {    OptionBuilder.append(null);    }    	non-compiled	[CE]  <identifier>  expected	41	None	replace
8	[BUG]  [BUGGY]  OptionBuilder  instance  =  new  OptionBuilder(numberOfArgs,  String.valueOf(opt));  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      public  static  Option  create(char  opt)  throws  IllegalArgumentException  {      [BUGGY]  OptionBuilder  instance  =  new  OptionBuilder(numberOfArgs,  String.valueOf(opt));  [BUGGY]      }  [CLASS]  OptionBuilder  [METHOD]  create  [RETURN_TYPE]  Option  char  opt  [VARIABLES]  boolean  hasArg  newRequired  optionalArg  required  OptionBuilder  instance  char  opt  sep  valuesep  Object  newType  type  String  argName  description  longopt  name  newDescription  newLongopt  int  num  numArgs  numberOfArgs  	projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java	0.3779644730092272	316	316	1	replace	OptionBuilder  instance  =  new  OptionBuilder(numberOfArgs,  String.valueOf(opt));	  OptionBuilder    instance    =    new    OptionBuilder(opt,    String.valueOf(numberOfArgs));    	non-compiled	[CE]  <identifier>  expected	60	None	replace
9	[BUG]  [BUGGY]  OptionBuilder  instance  =  new  OptionBuilder(opt,  String.valueOf(numberOfArgs  +  1));  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      public  static  Option  create(char  opt)  throws  IllegalArgumentException  {      [BUGGY]  OptionBuilder  instance  =  new  OptionBuilder(opt,  String.valueOf(numberOfArgs  +  1));  [BUGGY]      }  [CLASS]  OptionBuilder  [METHOD]  create  [RETURN_TYPE]  Option  char  opt  [VARIABLES]  boolean  hasArg  newRequired  optionalArg  required  OptionBuilder  instance  char  opt  sep  valuesep  Object  newType  type  String  argName  description  longopt  name  newDescription  newLongopt  int  num  numArgs  numberOfArgs  	projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java	0.3779644730092272	316	316	1	replace	OptionBuilder  instance  =  new  OptionBuilder(opt,  String.valueOf(numberOfArgs  +  1));	  OptionBuilder    instance    =    new    OptionBuilder(opt,    String.valueOf(numberOfArgs));    	non-compiled	[CE]  <identifier>  expected	60	None	replace
10	[BUG]  [BUGGY]  OptionBuilder  instance  =  new  OptionBuilder(opt,  String.valueOf(numberOfArgs  -  1));  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      public  static  Option  create(char  opt)  throws  IllegalArgumentException  {      [BUGGY]  OptionBuilder  instance  =  new  OptionBuilder(opt,  String.valueOf(numberOfArgs  -  1));  [BUGGY]      }  [CLASS]  OptionBuilder  [METHOD]  create  [RETURN_TYPE]  Option  char  opt  [VARIABLES]  boolean  hasArg  newRequired  optionalArg  required  OptionBuilder  instance  char  opt  sep  valuesep  Object  newType  type  String  argName  description  longopt  name  newDescription  newLongopt  int  num  numArgs  numberOfArgs  	projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java	0.3779644730092272	316	316	1	replace	OptionBuilder  instance  =  new  OptionBuilder(opt,  String.valueOf(numberOfArgs  -  1));	  OptionBuilder    instance    =    new    OptionBuilder(opt,    String.valueOf(numberOfArgs));    	non-compiled	[CE]  <identifier>  expected	60	None	replace
11	[BUG]  [BUGGY]  parseOption(opt)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      public  static  Option  create(char  opt)  throws  IllegalArgumentException  {      [BUGGY]  parseOption(opt)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      return  create(String.valueOf(opt));  }  [CLASS]  OptionBuilder  [METHOD]  create  [RETURN_TYPE]  Option  char  opt  [VARIABLES]  boolean  hasArg  newRequired  optionalArg  required  OptionBuilder  instance  char  opt  sep  valuesep  Object  newType  type  String  argName  description  longopt  name  newDescription  newLongopt  int  num  numArgs  numberOfArgs  	projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java	0.3779644730092272	316	316	1	replace	parseOption(opt)  {  throw  new  IllegalArgumentException( " ");  }	  allowsArg(opt)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  <identifier>  expected	111	None	replace
12	[BUG]  [BUGGY]  parseOptionalArg(opt)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      public  static  Option  create(char  opt)  throws  IllegalArgumentException  {      [BUGGY]  parseOptionalArg(opt)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      return  create(String.valueOf(opt));  }  [CLASS]  OptionBuilder  [METHOD]  create  [RETURN_TYPE]  Option  char  opt  [VARIABLES]  boolean  hasArg  newRequired  optionalArg  required  OptionBuilder  instance  char  opt  sep  valuesep  Object  newType  type  String  argName  description  longopt  name  newDescription  newLongopt  int  num  numArgs  numberOfArgs  	projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java	0.3779644730092272	316	316	1	replace	parseOptionalArg(opt)  {  throw  new  IllegalArgumentException( " ");  }	  allowsArg(opt)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  <identifier>  expected	111	None	replace
13	[BUG]  [BUGGY]  newDescription(opt)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      public  static  Option  create(char  opt)  throws  IllegalArgumentException  {      [BUGGY]  newDescription(opt)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      return  create(String.valueOf(opt));  }  [CLASS]  OptionBuilder  [METHOD]  create  [RETURN_TYPE]  Option  char  opt  [VARIABLES]  boolean  hasArg  newRequired  optionalArg  required  OptionBuilder  instance  char  opt  sep  valuesep  Object  newType  type  String  argName  description  longopt  name  newDescription  newLongopt  int  num  numArgs  numberOfArgs  	projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java	0.3779644730092272	316	316	1	replace	newDescription(opt)  {  throw  new  IllegalArgumentException( " ");  }	  allowsArg(opt)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  <identifier>  expected	111	None	replace
14	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  this.numberOfArgs;  ++i)  {  OptionBuilder.this.append(opt);  }  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      public  static  Option  create(char  opt)  throws  IllegalArgumentException  {      [BUGGY]  for(int  i  =  0;  i  <  this.numberOfArgs;  ++i)  {  OptionBuilder.this.append(opt);  }  [BUGGY]      return  create(String.valueOf(opt));  }  [CLASS]  OptionBuilder  [METHOD]  create  [RETURN_TYPE]  Option  char  opt  [VARIABLES]  boolean  hasArg  newRequired  optionalArg  required  OptionBuilder  instance  char  opt  sep  valuesep  Object  newType  type  String  argName  description  longopt  name  newDescription  newLongopt  int  num  numArgs  numberOfArgs  	projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java	0.3779644730092272	316	316	1	replace	for(int  i  =  0;  i  <  this.numberOfArgs;  ++i)  {  OptionBuilder.this.append(opt);  }	  if(numberOfArgs    >    1)    {    for(int    i    =    0;    i    <    this.numberOfArgs;    ++i)    {    OptionBuilder.this.append(opt);    }    	non-compiled	[CE]  <identifier>  expected	101	None	replace
15	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  this.numberOfArgs;  ++i)  {  OptionBuilder.this.append(option);  }  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      public  static  Option  create(char  opt)  throws  IllegalArgumentException  {      [BUGGY]  for(int  i  =  0;  i  <  this.numberOfArgs;  ++i)  {  OptionBuilder.this.append(option);  }  [BUGGY]      return  create(String.valueOf(opt));  }  [CLASS]  OptionBuilder  [METHOD]  create  [RETURN_TYPE]  Option  char  opt  [VARIABLES]  boolean  hasArg  newRequired  optionalArg  required  OptionBuilder  instance  char  opt  sep  valuesep  Object  newType  type  String  argName  description  longopt  name  newDescription  newLongopt  int  num  numArgs  numberOfArgs  	projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java	0.3779644730092272	316	316	1	replace	for(int  i  =  0;  i  <  this.numberOfArgs;  ++i)  {  OptionBuilder.this.append(option);  }	  if(numberOfArgs    >    1)    {    for(int    i    =    0;    i    <    this.numberOfArgs;    ++i)    {    OptionBuilder.this.append(opt);    }    	non-compiled	[CE]  <identifier>  expected	101	None	replace
16	[BUG]  [BUGGY]  OptionBuilder.this.append(opt);  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      public  static  Option  create(char  opt)  throws  IllegalArgumentException  {      [BUGGY]  OptionBuilder.this.append(opt);  [BUGGY]      return  create(String.valueOf(opt));  }  [CLASS]  OptionBuilder  [METHOD]  create  [RETURN_TYPE]  Option  char  opt  [VARIABLES]  boolean  hasArg  newRequired  optionalArg  required  OptionBuilder  instance  char  opt  sep  valuesep  Object  newType  type  String  argName  description  longopt  name  newDescription  newLongopt  int  num  numArgs  numberOfArgs  	projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java	0.3779644730092272	316	316	1	replace	OptionBuilder.this.append(opt);	  if(numberOfArgs    >    1)    {    for(int    i    =    0;    i    <    this.numberOfArgs;    ++i)    {    OptionBuilder.this.append(opt);    }    	non-compiled	[CE]  <identifier>  expected	101	None	replace
17	[BUG]  [BUGGY]  allowNumberOfArgs(opt)  {  return  create(String.valueOf(numberOfArgs));  }  [CE]  <identifier>  expected  [FE]            AssertionFailedError      [CONTEXT]      public  static  Option  create(char  opt)  throws  IllegalArgumentException  {      [BUGGY]  allowNumberOfArgs(opt)  {  return  create(String.valueOf(numberOfArgs));  }  [BUGGY]      }  [CLASS]  OptionBuilder  [METHOD]  create  [RETURN_TYPE]  Option  char  opt  [VARIABLES]  boolean  hasArg  newRequired  optionalArg  required  OptionBuilder  instance  char  opt  sep  valuesep  Object  newType  type  String  argName  description  longopt  name  newDescription  newLongopt  int  num  numArgs  numberOfArgs  	projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java	0.3779644730092272	316	316	1	replace	allowNumberOfArgs(opt)  {  return  create(String.valueOf(numberOfArgs));  }	  if(opt    >    0)    {    return    create(String.valueOf(numberOfArgs));    }    	non-compiled	[CE]  <identifier>  expected	67	None	replace
18	[BUG]  [BUGGY]  OptionBuilder  instance  =  create(String.valueOf(opt));  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      public  static  Option  create(char  opt)  throws  IllegalArgumentException  {      [BUGGY]  OptionBuilder  instance  =  create(String.valueOf(opt));  [BUGGY]      }  [CLASS]  OptionBuilder  [METHOD]  create  [RETURN_TYPE]  Option  char  opt  [VARIABLES]  boolean  hasArg  newRequired  optionalArg  required  OptionBuilder  instance  char  opt  sep  valuesep  Object  newType  type  String  argName  description  longopt  name  newDescription  newLongopt  int  num  numArgs  numberOfArgs  	projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java	0.3779644730092272	316	316	1	replace	OptionBuilder  instance  =  create(String.valueOf(opt));	  if(opt    >    0)    {    return    create(String.valueOf(numberOfArgs));    }    	non-compiled	[CE]  <identifier>  expected	67	None	replace
19	[BUG]  [BUGGY]  OptionBuilder  instance  =(OptionBuilder)null;  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      public  static  Option  create(char  opt)  throws  IllegalArgumentException  {      [BUGGY]  OptionBuilder  instance  =(OptionBuilder)null;  [BUGGY]      }  [CLASS]  OptionBuilder  [METHOD]  create  [RETURN_TYPE]  Option  char  opt  [VARIABLES]  boolean  hasArg  newRequired  optionalArg  required  OptionBuilder  instance  char  opt  sep  valuesep  Object  newType  type  String  argName  description  longopt  name  newDescription  newLongopt  int  num  numArgs  numberOfArgs  	projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java	0.3779644730092272	316	316	1	replace	OptionBuilder  instance  =(OptionBuilder)null;	  if(opt    >    0)    {    return    create(String.valueOf(numberOfArgs));    }    	non-compiled	[CE]  <identifier>  expected	67	None	replace
20	[BUG]  [BUGGY]  char  numberOfArgs  =  getValue(numberOfArgs);  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      public  static  Option  create(char  opt)  throws  IllegalArgumentException  {      [BUGGY]  char  numberOfArgs  =  getValue(numberOfArgs);  [BUGGY]      return  create(String.valueOf(opt));  }  [CLASS]  OptionBuilder  [METHOD]  create  [RETURN_TYPE]  Option  char  opt  [VARIABLES]  boolean  hasArg  newRequired  optionalArg  required  OptionBuilder  instance  char  opt  sep  valuesep  Object  newType  type  String  argName  description  longopt  name  newDescription  newLongopt  int  num  numArgs  numberOfArgs  	projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java	0.3779644730092272	316	316	1	replace	char  numberOfArgs  =  getValue(numberOfArgs);	  int    numberOfArgs    =    getValue(numberOfArgs);    	non-compiled	[CE]  <identifier>  expected	43	None	replace
21	[BUG]  [BUGGY]  int  numberOfArgs  =  getValue(optionalArg);  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      public  static  Option  create(char  opt)  throws  IllegalArgumentException  {      [BUGGY]  int  numberOfArgs  =  getValue(optionalArg);  [BUGGY]      return  create(String.valueOf(opt));  }  [CLASS]  OptionBuilder  [METHOD]  create  [RETURN_TYPE]  Option  char  opt  [VARIABLES]  boolean  hasArg  newRequired  optionalArg  required  OptionBuilder  instance  char  opt  sep  valuesep  Object  newType  type  String  argName  description  longopt  name  newDescription  newLongopt  int  num  numArgs  numberOfArgs  	projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java	0.3779644730092272	316	316	1	replace	int  numberOfArgs  =  getValue(optionalArg);	  int    numberOfArgs    =    getValue(numberOfArgs);    	non-compiled	[CE]  <identifier>  expected	43	None	replace
22	[BUG]  [BUGGY]  int  numberOfArgs  =  getValue(number);  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      public  static  Option  create(char  opt)  throws  IllegalArgumentException  {      [BUGGY]  int  numberOfArgs  =  getValue(number);  [BUGGY]      return  create(String.valueOf(opt));  }  [CLASS]  OptionBuilder  [METHOD]  create  [RETURN_TYPE]  Option  char  opt  [VARIABLES]  boolean  hasArg  newRequired  optionalArg  required  OptionBuilder  instance  char  opt  sep  valuesep  Object  newType  type  String  argName  description  longopt  name  newDescription  newLongopt  int  num  numArgs  numberOfArgs  	projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java	0.3779644730092272	316	316	1	replace	int  numberOfArgs  =  getValue(number);	  int    numberOfArgs    =    getValue(numberOfArgs);    	non-compiled	[CE]  <identifier>  expected	43	None	replace
23	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  numArgs;  i++)  {  opt  =  opt  +  1;  }  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      public  static  Option  create(char  opt)  throws  IllegalArgumentException  {      [BUGGY]  for(int  i  =  0;  i  <  numArgs;  i++)  {  opt  =  opt  +  1;  }  [BUGGY]      return  create(String.valueOf(opt));  }  [CLASS]  OptionBuilder  [METHOD]  create  [RETURN_TYPE]  Option  char  opt  [VARIABLES]  boolean  hasArg  newRequired  optionalArg  required  OptionBuilder  instance  char  opt  sep  valuesep  Object  newType  type  String  argName  description  longopt  name  newDescription  newLongopt  int  num  numArgs  numberOfArgs  	projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java	0.3779644730092272	316	316	1	replace	for(int  i  =  0;  i  <  numArgs;  i++)  {  opt  =  opt  +  1;  }	  for(int    i    =    0;    i    <    numberOfArgs;    i++)    {    opt    =    i    +    1;    }    	non-compiled	[CE]  <identifier>  expected	37	None	replace
24	[BUG]  [BUGGY]  int  i  =  0;  i  <  numberOfArgs;  i++)  {  opt  =  i  +  1;  }  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      public  static  Option  create(char  opt)  throws  IllegalArgumentException  {      [BUGGY]  int  i  =  0;  i  <  numberOfArgs;  i++)  {  opt  =  i  +  1;  }  [BUGGY]      return  create(String.valueOf(opt));  }  [CLASS]  OptionBuilder  [METHOD]  create  [RETURN_TYPE]  Option  char  opt  [VARIABLES]  boolean  hasArg  newRequired  optionalArg  required  OptionBuilder  instance  char  opt  sep  valuesep  Object  newType  type  String  argName  description  longopt  name  newDescription  newLongopt  int  num  numArgs  numberOfArgs  	projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java	0.3779644730092272	316	316	1	replace	int  i  =  0;  i  <  numberOfArgs;  i++)  {  opt  =  i  +  1;  }	  for(int    i    =    0;    i    <    numberOfArgs;    i++)    {    opt    =    i    +    1;    }    	non-compiled	[CE]  <identifier>  expected	37	None	replace
25	[BUG]  [BUGGY]  int  i  =  0;  i  <  numArgs;  i++)  {  opt  =  opt  +  1;  }  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]      public  static  Option  create(char  opt)  throws  IllegalArgumentException  {      [BUGGY]  int  i  =  0;  i  <  numArgs;  i++)  {  opt  =  opt  +  1;  }  [BUGGY]      return  create(String.valueOf(opt));  }  [CLASS]  OptionBuilder  [METHOD]  create  [RETURN_TYPE]  Option  char  opt  [VARIABLES]  boolean  hasArg  newRequired  optionalArg  required  OptionBuilder  instance  char  opt  sep  valuesep  Object  newType  type  String  argName  description  longopt  name  newDescription  newLongopt  int  num  numArgs  numberOfArgs  	projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java	0.3779644730092272	316	316	1	replace	int  i  =  0;  i  <  numArgs;  i++)  {  opt  =  opt  +  1;  }	  for(int    i    =    0;    i    <    numberOfArgs;    i++)    {    opt    =    i    +    1;    }    	non-compiled	[CE]  <identifier>  expected	37	None	replace
26	[BUG]  [BUGGY]  if(opt!=  null)  {  return  create(numberOfArgs,  String.valueOf(opt));  }  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      public  static  Option  create(char  opt)  throws  IllegalArgumentException  {      [BUGGY]  if(opt!=  null)  {  return  create(numberOfArgs,  String.valueOf(opt));  }  [BUGGY]      }  [CLASS]  OptionBuilder  [METHOD]  create  [RETURN_TYPE]  Option  char  opt  [VARIABLES]  boolean  hasArg  newRequired  optionalArg  required  OptionBuilder  instance  char  opt  sep  valuesep  Object  newType  type  String  argName  description  longopt  name  newDescription  newLongopt  int  num  numArgs  numberOfArgs  	projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java	0.3779644730092272	316	316	1	replace	if(opt!=  null)  {  return  create(numberOfArgs,  String.valueOf(opt));  }	  if(opt    ==    null)    {    return    create(numberOfArgs,    String.valueOf(opt));    }    	non-compiled	[CE]  <identifier>  expected	30	None	replace
27	[BUG]  [BUGGY]  if(opt  ==  null)  {  return  create(null,  String.valueOf(opt));  }  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      public  static  Option  create(char  opt)  throws  IllegalArgumentException  {      [BUGGY]  if(opt  ==  null)  {  return  create(null,  String.valueOf(opt));  }  [BUGGY]      }  [CLASS]  OptionBuilder  [METHOD]  create  [RETURN_TYPE]  Option  char  opt  [VARIABLES]  boolean  hasArg  newRequired  optionalArg  required  OptionBuilder  instance  char  opt  sep  valuesep  Object  newType  type  String  argName  description  longopt  name  newDescription  newLongopt  int  num  numArgs  numberOfArgs  	projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java	0.3779644730092272	316	316	1	replace	if(opt  ==  null)  {  return  create(null,  String.valueOf(opt));  }	  if(opt    ==    null)    {    return    create(numberOfArgs,    String.valueOf(opt));    }    	non-compiled	[CE]  <identifier>  expected	30	None	replace
28	[BUG]  [BUGGY]  int  numberOfArgs  >  0)  {  return  create(String.valueOf(opt));  }  else  {  throw  new  IllegalArgumentException( " ");  }  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      public  static  Option  create(char  opt)  throws  IllegalArgumentException  {      [BUGGY]  int  numberOfArgs  >  0)  {  return  create(String.valueOf(opt));  }  else  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      }  [CLASS]  OptionBuilder  [METHOD]  create  [RETURN_TYPE]  Option  char  opt  [VARIABLES]  boolean  hasArg  newRequired  optionalArg  required  OptionBuilder  instance  char  opt  sep  valuesep  Object  newType  type  String  argName  description  longopt  name  newDescription  newLongopt  int  num  numArgs  numberOfArgs  	projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java	0.3779644730092272	316	316	1	replace	int  numberOfArgs  >  0)  {  return  create(String.valueOf(opt));  }  else  {  throw  new  IllegalArgumentException( " ");  }	  numberOfArgs    >    0)    {    return    create(String.valueOf(opt));    }    else    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  <identifier>  expected	35	None	replace
29	[BUG]  [BUGGY]  numberOfArgs  >  1)  {  return  create(String.valueOf(opt));  }  else  {  throw  new  IllegalArgumentException( " ");  }  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      public  static  Option  create(char  opt)  throws  IllegalArgumentException  {      [BUGGY]  numberOfArgs  >  1)  {  return  create(String.valueOf(opt));  }  else  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      }  [CLASS]  OptionBuilder  [METHOD]  create  [RETURN_TYPE]  Option  char  opt  [VARIABLES]  boolean  hasArg  newRequired  optionalArg  required  OptionBuilder  instance  char  opt  sep  valuesep  Object  newType  type  String  argName  description  longopt  name  newDescription  newLongopt  int  num  numArgs  numberOfArgs  	projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java	0.3779644730092272	316	316	1	replace	numberOfArgs  >  1)  {  return  create(String.valueOf(opt));  }  else  {  throw  new  IllegalArgumentException( " ");  }	  numberOfArgs    >    0)    {    return    create(String.valueOf(opt));    }    else    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  <identifier>  expected	35	None	replace
30	[BUG]  [BUGGY]  int  numberOfArgs  =  getLongValue(opt);  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      public  static  Option  create(char  opt)  throws  IllegalArgumentException  {      [BUGGY]  int  numberOfArgs  =  getLongValue(opt);  [BUGGY]      return  create(String.valueOf(opt));  }  [CLASS]  OptionBuilder  [METHOD]  create  [RETURN_TYPE]  Option  char  opt  [VARIABLES]  boolean  hasArg  newRequired  optionalArg  required  OptionBuilder  instance  char  opt  sep  valuesep  Object  newType  type  String  argName  description  longopt  name  newDescription  newLongopt  int  num  numArgs  numberOfArgs  	projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java	0.3779644730092272	316	316	1	replace	int  numberOfArgs  =  getLongValue(opt);	  int    numberOfArgs    =    getValue(opt);    	non-compiled	[CE]  <identifier>  expected	95	None	replace
31	[BUG]  [BUGGY]  int  numberOfArgs  =  getValue(opt)+  1;  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      public  static  Option  create(char  opt)  throws  IllegalArgumentException  {      [BUGGY]  int  numberOfArgs  =  getValue(opt)+  1;  [BUGGY]      return  create(String.valueOf(opt));  }  [CLASS]  OptionBuilder  [METHOD]  create  [RETURN_TYPE]  Option  char  opt  [VARIABLES]  boolean  hasArg  newRequired  optionalArg  required  OptionBuilder  instance  char  opt  sep  valuesep  Object  newType  type  String  argName  description  longopt  name  newDescription  newLongopt  int  num  numArgs  numberOfArgs  	projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java	0.3779644730092272	316	316	1	replace	int  numberOfArgs  =  getValue(opt)+  1;	  int    numberOfArgs    =    getValue(opt);    	non-compiled	[CE]  <identifier>  expected	95	None	replace
32	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  numArgs;  ++i)  {  OptionBuilder.append(option);  }  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      public  static  Option  create(char  opt)  throws  IllegalArgumentException  {      [BUGGY]  for(int  i  =  0;  i  <  numArgs;  ++i)  {  OptionBuilder.append(option);  }  [BUGGY]      return  create(String.valueOf(opt));  }  [CLASS]  OptionBuilder  [METHOD]  create  [RETURN_TYPE]  Option  char  opt  [VARIABLES]  boolean  hasArg  newRequired  optionalArg  required  OptionBuilder  instance  char  opt  sep  valuesep  Object  newType  type  String  argName  description  longopt  name  newDescription  newLongopt  int  num  numArgs  numberOfArgs  	projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java	0.3779644730092272	316	316	1	replace	for(int  i  =  0;  i  <  numArgs;  ++i)  {  OptionBuilder.append(option);  }	  for(int    i    =    0;    i    <    numberOfArgs;    ++i)    {    OptionBuilder.append(option);    }    	non-compiled	[CE]  <identifier>  expected	40	None	replace
33	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  numArgs;  ++i)  {  OptionBuilder.append(opt);  }  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      public  static  Option  create(char  opt)  throws  IllegalArgumentException  {      [BUGGY]  for(int  i  =  0;  i  <  numArgs;  ++i)  {  OptionBuilder.append(opt);  }  [BUGGY]      return  create(String.valueOf(opt));  }  [CLASS]  OptionBuilder  [METHOD]  create  [RETURN_TYPE]  Option  char  opt  [VARIABLES]  boolean  hasArg  newRequired  optionalArg  required  OptionBuilder  instance  char  opt  sep  valuesep  Object  newType  type  String  argName  description  longopt  name  newDescription  newLongopt  int  num  numArgs  numberOfArgs  	projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java	0.3779644730092272	316	316	1	replace	for(int  i  =  0;  i  <  numArgs;  ++i)  {  OptionBuilder.append(opt);  }	  for(int    i    =    0;    i    <    numberOfArgs;    ++i)    {    OptionBuilder.append(option);    }    	non-compiled	[CE]  <identifier>  expected	40	None	replace
34	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  numberOfArgs  -  1;  ++i)  {  OptionBuilder.append(option);  }  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      public  static  Option  create(char  opt)  throws  IllegalArgumentException  {      [BUGGY]  for(int  i  =  0;  i  <  numberOfArgs  -  1;  ++i)  {  OptionBuilder.append(option);  }  [BUGGY]      return  create(String.valueOf(opt));  }  [CLASS]  OptionBuilder  [METHOD]  create  [RETURN_TYPE]  Option  char  opt  [VARIABLES]  boolean  hasArg  newRequired  optionalArg  required  OptionBuilder  instance  char  opt  sep  valuesep  Object  newType  type  String  argName  description  longopt  name  newDescription  newLongopt  int  num  numArgs  numberOfArgs  	projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java	0.3779644730092272	316	316	1	replace	for(int  i  =  0;  i  <  numberOfArgs  -  1;  ++i)  {  OptionBuilder.append(option);  }	  for(int    i    =    0;    i    <    numberOfArgs;    ++i)    {    OptionBuilder.append(option);    }    	non-compiled	[CE]  <identifier>  expected	40	None	replace
35	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  this.numberOfArgs;  ++i)  {  OptionBuilder.append(option);  }  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]      public  static  Option  create(char  opt)  throws  IllegalArgumentException  {      [BUGGY]  for(int  i  =  0;  i  <  this.numberOfArgs;  ++i)  {  OptionBuilder.append(option);  }  [BUGGY]      return  create(String.valueOf(opt));  }  [CLASS]  OptionBuilder  [METHOD]  create  [RETURN_TYPE]  Option  char  opt  [VARIABLES]  boolean  hasArg  newRequired  optionalArg  required  OptionBuilder  instance  char  opt  sep  valuesep  Object  newType  type  String  argName  description  longopt  name  newDescription  newLongopt  int  num  numArgs  numberOfArgs  	projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java	0.3779644730092272	316	316	1	replace	for(int  i  =  0;  i  <  this.numberOfArgs;  ++i)  {  OptionBuilder.append(option);  }	  for(int    i    =    0;    i    <    numberOfArgs;    ++i)    {    OptionBuilder.append(option);    }    	non-compiled	[CE]  <identifier>  expected	40	None	replace
36	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  valuesep;  i++)  {  opt  =  opt  +  1;  }  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      public  static  Option  create(char  opt)  throws  IllegalArgumentException  {      [BUGGY]  for(int  i  =  0;  i  <  valuesep;  i++)  {  opt  =  opt  +  1;  }  [BUGGY]      return  create(String.valueOf(opt));  }  [CLASS]  OptionBuilder  [METHOD]  create  [RETURN_TYPE]  Option  char  opt  [VARIABLES]  boolean  hasArg  newRequired  optionalArg  required  OptionBuilder  instance  char  opt  sep  valuesep  Object  newType  type  String  argName  description  longopt  name  newDescription  newLongopt  int  num  numArgs  numberOfArgs  	projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java	0.3779644730092272	316	316	1	replace	for(int  i  =  0;  i  <  valuesep;  i++)  {  opt  =  opt  +  1;  }	  for(int    i    =    0;    i    <    numberOfArgs;    i++)    {    opt    =    opt    +    1;    }    	non-compiled	[CE]  <identifier>  expected	38	None	replace
37	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  length;  i++)  {  opt  =  opt  +  1;  }  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]      public  static  Option  create(char  opt)  throws  IllegalArgumentException  {      [BUGGY]  for(int  i  =  0;  i  <  length;  i++)  {  opt  =  opt  +  1;  }  [BUGGY]      return  create(String.valueOf(opt));  }  [CLASS]  OptionBuilder  [METHOD]  create  [RETURN_TYPE]  Option  char  opt  [VARIABLES]  boolean  hasArg  newRequired  optionalArg  required  OptionBuilder  instance  char  opt  sep  valuesep  Object  newType  type  String  argName  description  longopt  name  newDescription  newLongopt  int  num  numArgs  numberOfArgs  	projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java	0.3779644730092272	316	316	1	replace	for(int  i  =  0;  i  <  length;  i++)  {  opt  =  opt  +  1;  }	  for(int    i    =    0;    i    <    numberOfArgs;    i++)    {    opt    =    opt    +    1;    }    	non-compiled	[CE]  <identifier>  expected	38	None	replace
38	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  numArgs;  i++)  {  opt  =  i  +  1;  }  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      public  static  Option  create(char  opt)  throws  IllegalArgumentException  {      [BUGGY]  for(int  i  =  0;  i  <  numArgs;  i++)  {  opt  =  i  +  1;  }  [BUGGY]      return  create(String.valueOf(opt));  }  [CLASS]  OptionBuilder  [METHOD]  create  [RETURN_TYPE]  Option  char  opt  [VARIABLES]  boolean  hasArg  newRequired  optionalArg  required  OptionBuilder  instance  char  opt  sep  valuesep  Object  newType  type  String  argName  description  longopt  name  newDescription  newLongopt  int  num  numArgs  numberOfArgs  	projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java	0.3779644730092272	316	316	1	replace	for(int  i  =  0;  i  <  numArgs;  i++)  {  opt  =  i  +  1;  }	  if(opt    >    0)    {    for(int    i    =    0;    i    <    numberOfArgs;    i++)    {    opt    =    i    +    1;    }    	non-compiled	[CE]  <identifier>  expected	80	None	replace
39	[BUG]  [BUGGY]  return  create(opt,  String.valueOf(numberOfArgs  -  1));  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      public  static  Option  create(char  opt)  throws  IllegalArgumentException  {      [BUGGY]  return  create(opt,  String.valueOf(numberOfArgs  -  1));  [BUGGY]      }  [CLASS]  OptionBuilder  [METHOD]  create  [RETURN_TYPE]  Option  char  opt  [VARIABLES]  boolean  hasArg  newRequired  optionalArg  required  OptionBuilder  instance  char  opt  sep  valuesep  Object  newType  type  String  argName  description  longopt  name  newDescription  newLongopt  int  num  numArgs  numberOfArgs  	projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java	0.3779644730092272	316	316	1	replace	return  create(opt,  String.valueOf(numberOfArgs  -  1));	  return    create(opt,    String.valueOf(numberOfArgs));    	non-compiled	[CE]  <identifier>  expected	28	None	replace
40	[BUG]  [BUGGY]  return  create(opt,  String.valueOf(numberOfArgs  +  1));  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      public  static  Option  create(char  opt)  throws  IllegalArgumentException  {      [BUGGY]  return  create(opt,  String.valueOf(numberOfArgs  +  1));  [BUGGY]      }  [CLASS]  OptionBuilder  [METHOD]  create  [RETURN_TYPE]  Option  char  opt  [VARIABLES]  boolean  hasArg  newRequired  optionalArg  required  OptionBuilder  instance  char  opt  sep  valuesep  Object  newType  type  String  argName  description  longopt  name  newDescription  newLongopt  int  num  numArgs  numberOfArgs  	projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java	0.3779644730092272	316	316	1	replace	return  create(opt,  String.valueOf(numberOfArgs  +  1));	  return    create(opt,    String.valueOf(numberOfArgs));    	non-compiled	[CE]  <identifier>  expected	28	None	replace
41	[BUG]  [BUGGY]  if(opt  ==  Long.MIN_VALUE  ||  opt!=  Long.MAX_VALUE)  {  return  create(String.valueOf(opt));  }  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      public  static  Option  create(char  opt)  throws  IllegalArgumentException  {      [BUGGY]  if(opt  ==  Long.MIN_VALUE  ||  opt!=  Long.MAX_VALUE)  {  return  create(String.valueOf(opt));  }  [BUGGY]      return  create(String.valueOf(opt));  }  [CLASS]  OptionBuilder  [METHOD]  create  [RETURN_TYPE]  Option  char  opt  [VARIABLES]  boolean  hasArg  newRequired  optionalArg  required  OptionBuilder  instance  char  opt  sep  valuesep  Object  newType  type  String  argName  description  longopt  name  newDescription  newLongopt  int  num  numArgs  numberOfArgs  	projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java	0.3779644730092272	316	316	1	replace	if(opt  ==  Long.MIN_VALUE  ||  opt!=  Long.MAX_VALUE)  {  return  create(String.valueOf(opt));  }	  if(opt    ==    Long.MIN_VALUE    ||    opt    >    Long.MAX_VALUE)    {    return    create(String.valueOf(opt));    }    	non-compiled	[CE]  <identifier>  expected	110	None	replace
42	[BUG]  [BUGGY]  if(opt  ==  Long.MIN_VALUE  ||  opt  >=  Long.MAX_VALUE)  {  return  create(String.valueOf(opt));  }  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      public  static  Option  create(char  opt)  throws  IllegalArgumentException  {      [BUGGY]  if(opt  ==  Long.MIN_VALUE  ||  opt  >=  Long.MAX_VALUE)  {  return  create(String.valueOf(opt));  }  [BUGGY]      return  create(String.valueOf(opt));  }  [CLASS]  OptionBuilder  [METHOD]  create  [RETURN_TYPE]  Option  char  opt  [VARIABLES]  boolean  hasArg  newRequired  optionalArg  required  OptionBuilder  instance  char  opt  sep  valuesep  Object  newType  type  String  argName  description  longopt  name  newDescription  newLongopt  int  num  numArgs  numberOfArgs  	projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java	0.3779644730092272	316	316	1	replace	if(opt  ==  Long.MIN_VALUE  ||  opt  >=  Long.MAX_VALUE)  {  return  create(String.valueOf(opt));  }	  if(opt    ==    Long.MIN_VALUE    ||    opt    >    Long.MAX_VALUE)    {    return    create(String.valueOf(opt));    }    	non-compiled	[CE]  <identifier>  expected	110	None	replace
43	[BUG]  [BUGGY]  Thread.currentThread().setContextClassLoader(this,  opt);  [CE]  <identifier>  expected  [FE]            AssertionFailedError      [CONTEXT]      public  static  Option  create(char  opt)  throws  IllegalArgumentException  {      [BUGGY]  Thread.currentThread().setContextClassLoader(this,  opt);  [BUGGY]      return  create(String.valueOf(opt));  }  [CLASS]  OptionBuilder  [METHOD]  create  [RETURN_TYPE]  Option  char  opt  [VARIABLES]  boolean  hasArg  newRequired  optionalArg  required  OptionBuilder  instance  char  opt  sep  valuesep  Object  newType  type  String  argName  description  longopt  name  newDescription  newLongopt  int  num  numArgs  numberOfArgs  	projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java	0.3779644730092272	316	316	1	replace	Thread.currentThread().setContextClassLoader(this,  opt);	  Thread.currentThread().setContextClassLoader(this);    	non-compiled	[CE]  <identifier>  expected	56	None	replace
44	[BUG]  [BUGGY]  Thread.currentThread().setContextClassLoader(this,  true);  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      public  static  Option  create(char  opt)  throws  IllegalArgumentException  {      [BUGGY]  Thread.currentThread().setContextClassLoader(this,  true);  [BUGGY]      return  create(String.valueOf(opt));  }  [CLASS]  OptionBuilder  [METHOD]  create  [RETURN_TYPE]  Option  char  opt  [VARIABLES]  boolean  hasArg  newRequired  optionalArg  required  OptionBuilder  instance  char  opt  sep  valuesep  Object  newType  type  String  argName  description  longopt  name  newDescription  newLongopt  int  num  numArgs  numberOfArgs  	projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java	0.3779644730092272	316	316	1	replace	Thread.currentThread().setContextClassLoader(this,  true);	  Thread.currentThread().setContextClassLoader(this);    	non-compiled	[CE]  <identifier>  expected	56	None	replace
45	[BUG]  [BUGGY]  Thread.currentThread().setContextClassLoader(this,  newType);  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      public  static  Option  create(char  opt)  throws  IllegalArgumentException  {      [BUGGY]  Thread.currentThread().setContextClassLoader(this,  newType);  [BUGGY]      return  create(String.valueOf(opt));  }  [CLASS]  OptionBuilder  [METHOD]  create  [RETURN_TYPE]  Option  char  opt  [VARIABLES]  boolean  hasArg  newRequired  optionalArg  required  OptionBuilder  instance  char  opt  sep  valuesep  Object  newType  type  String  argName  description  longopt  name  newDescription  newLongopt  int  num  numArgs  numberOfArgs  	projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java	0.3779644730092272	316	316	1	replace	Thread.currentThread().setContextClassLoader(this,  newType);	  Thread.currentThread().setContextClassLoader(this);    	non-compiled	[CE]  <identifier>  expected	56	None	replace
46	[BUG]  [BUGGY]  if(opt!=  Long.MIN_VALUE  ||  opt  ==  Long.MAX_VALUE)  {  return  create(String.valueOf(opt));  }  else  {  return  new  OptionBuilder();  }  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      public  static  Option  create(char  opt)  throws  IllegalArgumentException  {      [BUGGY]  if(opt!=  Long.MIN_VALUE  ||  opt  ==  Long.MAX_VALUE)  {  return  create(String.valueOf(opt));  }  else  {  return  new  OptionBuilder();  }  [BUGGY]      return  create(String.valueOf(opt));  }  [CLASS]  OptionBuilder  [METHOD]  create  [RETURN_TYPE]  Option  char  opt  [VARIABLES]  boolean  hasArg  newRequired  optionalArg  required  OptionBuilder  instance  char  opt  sep  valuesep  Object  newType  type  String  argName  description  longopt  name  newDescription  newLongopt  int  num  numArgs  numberOfArgs  	projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java	0.3779644730092272	316	316	1	replace	if(opt!=  Long.MIN_VALUE  ||  opt  ==  Long.MAX_VALUE)  {  return  create(String.valueOf(opt));  }  else  {  return  new  OptionBuilder();  }	  if(opt    ==    Long.MIN_VALUE    ||    opt    ==    Long.MAX_VALUE)    {    return    create(String.valueOf(opt));    }    else    {    return    new    OptionBuilder();    }    	non-compiled	[CE]  <identifier>  expected	13	None	replace
47	[BUG]  [BUGGY]  if(opt  ==  Long.MIN_VALUE  ||  opt!=  Long.MAX_VALUE)  {  return  create(String.valueOf(opt));  }  else  {  return  new  OptionBuilder();  }  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      public  static  Option  create(char  opt)  throws  IllegalArgumentException  {      [BUGGY]  if(opt  ==  Long.MIN_VALUE  ||  opt!=  Long.MAX_VALUE)  {  return  create(String.valueOf(opt));  }  else  {  return  new  OptionBuilder();  }  [BUGGY]      return  create(String.valueOf(opt));  }  [CLASS]  OptionBuilder  [METHOD]  create  [RETURN_TYPE]  Option  char  opt  [VARIABLES]  boolean  hasArg  newRequired  optionalArg  required  OptionBuilder  instance  char  opt  sep  valuesep  Object  newType  type  String  argName  description  longopt  name  newDescription  newLongopt  int  num  numArgs  numberOfArgs  	projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java	0.3779644730092272	316	316	1	replace	if(opt  ==  Long.MIN_VALUE  ||  opt!=  Long.MAX_VALUE)  {  return  create(String.valueOf(opt));  }  else  {  return  new  OptionBuilder();  }	  if(opt    ==    Long.MIN_VALUE    ||    opt    ==    Long.MAX_VALUE)    {    return    create(String.valueOf(opt));    }    else    {    return    new    OptionBuilder();    }    	non-compiled	[CE]  <identifier>  expected	13	None	replace
48	[BUG]  [BUGGY]  enableNumberOfArgs(opt)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      public  static  Option  create(char  opt)  throws  IllegalArgumentException  {      [BUGGY]  enableNumberOfArgs(opt)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      return  create(String.valueOf(opt));  }  [CLASS]  OptionBuilder  [METHOD]  create  [RETURN_TYPE]  Option  char  opt  [VARIABLES]  boolean  hasArg  newRequired  optionalArg  required  OptionBuilder  instance  char  opt  sep  valuesep  Object  newType  type  String  argName  description  longopt  name  newDescription  newLongopt  int  num  numArgs  numberOfArgs  	projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java	0.3779644730092272	316	316	1	replace	enableNumberOfArgs(opt)  {  throw  new  IllegalArgumentException( " ");  }	  allowNumberOfArgs(opt)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  <identifier>  expected	16	None	replace
49	[BUG]  [BUGGY]  if(numberOfArgs  ==  0)  {  allowNumberOfArgs(opt)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      public  static  Option  create(char  opt)  throws  IllegalArgumentException  {      [BUGGY]  if(numberOfArgs  ==  0)  {  allowNumberOfArgs(opt)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      return  create(String.valueOf(opt));  }  [CLASS]  OptionBuilder  [METHOD]  create  [RETURN_TYPE]  Option  char  opt  [VARIABLES]  boolean  hasArg  newRequired  optionalArg  required  OptionBuilder  instance  char  opt  sep  valuesep  Object  newType  type  String  argName  description  longopt  name  newDescription  newLongopt  int  num  numArgs  numberOfArgs  	projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java	0.3779644730092272	316	316	1	replace	if(numberOfArgs  ==  0)  {  allowNumberOfArgs(opt)  {  throw  new  IllegalArgumentException( " ");  }	  allowNumberOfArgs(opt)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  <identifier>  expected	16	None	replace
50	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  valuesep;  ++i)  {  opt  =  getValue(i);  }  [CE]  <identifier>  expected  [FE]            AssertionFailedError      [CONTEXT]      public  static  Option  create(char  opt)  throws  IllegalArgumentException  {      [BUGGY]  for(int  i  =  0;  i  <  valuesep;  ++i)  {  opt  =  getValue(i);  }  [BUGGY]      return  create(String.valueOf(opt));  }  [CLASS]  OptionBuilder  [METHOD]  create  [RETURN_TYPE]  Option  char  opt  [VARIABLES]  boolean  hasArg  newRequired  optionalArg  required  OptionBuilder  instance  char  opt  sep  valuesep  Object  newType  type  String  argName  description  longopt  name  newDescription  newLongopt  int  num  numArgs  numberOfArgs  	projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java	0.3779644730092272	316	316	1	replace	for(int  i  =  0;  i  <  valuesep;  ++i)  {  opt  =  getValue(i);  }	  for(int    i    =    0;    i    <    numberOfArgs;    ++i)    {    opt    =    getValue(i);    }    	non-compiled	[CE]  <identifier>  expected	42	None	replace
51	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  length;  ++i)  {  opt  =  getValue(i);  }  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      public  static  Option  create(char  opt)  throws  IllegalArgumentException  {      [BUGGY]  for(int  i  =  0;  i  <  length;  ++i)  {  opt  =  getValue(i);  }  [BUGGY]      return  create(String.valueOf(opt));  }  [CLASS]  OptionBuilder  [METHOD]  create  [RETURN_TYPE]  Option  char  opt  [VARIABLES]  boolean  hasArg  newRequired  optionalArg  required  OptionBuilder  instance  char  opt  sep  valuesep  Object  newType  type  String  argName  description  longopt  name  newDescription  newLongopt  int  num  numArgs  numberOfArgs  	projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java	0.3779644730092272	316	316	1	replace	for(int  i  =  0;  i  <  length;  ++i)  {  opt  =  getValue(i);  }	  for(int    i    =    0;    i    <    numberOfArgs;    ++i)    {    opt    =    getValue(i);    }    	non-compiled	[CE]  <identifier>  expected	42	None	replace
52	[BUG]  [BUGGY]  Integer  numberOfArgs  =  getValue(numberOfArgs,  1);  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      public  static  Option  create(char  opt)  throws  IllegalArgumentException  {      [BUGGY]  Integer  numberOfArgs  =  getValue(numberOfArgs,  1);  [BUGGY]      return  create(String.valueOf(opt));  }  [CLASS]  OptionBuilder  [METHOD]  create  [RETURN_TYPE]  Option  char  opt  [VARIABLES]  boolean  hasArg  newRequired  optionalArg  required  OptionBuilder  instance  char  opt  sep  valuesep  Object  newType  type  String  argName  description  longopt  name  newDescription  newLongopt  int  num  numArgs  numberOfArgs  	projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java	0.3779644730092272	316	316	1	replace	Integer  numberOfArgs  =  getValue(numberOfArgs,  1);	  Integer    numberOfArgs    =    getValue(numberOfArgs);    	non-compiled	[CE]  <identifier>  expected	45	None	replace
53	[BUG]  [BUGGY]  Integer  numberOfArgs  =  getNullValue(numberOfArgs);  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      public  static  Option  create(char  opt)  throws  IllegalArgumentException  {      [BUGGY]  Integer  numberOfArgs  =  getNullValue(numberOfArgs);  [BUGGY]      return  create(String.valueOf(opt));  }  [CLASS]  OptionBuilder  [METHOD]  create  [RETURN_TYPE]  Option  char  opt  [VARIABLES]  boolean  hasArg  newRequired  optionalArg  required  OptionBuilder  instance  char  opt  sep  valuesep  Object  newType  type  String  argName  description  longopt  name  newDescription  newLongopt  int  num  numArgs  numberOfArgs  	projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java	0.3779644730092272	316	316	1	replace	Integer  numberOfArgs  =  getNullValue(numberOfArgs);	  Integer    numberOfArgs    =    getValue(numberOfArgs);    	non-compiled	[CE]  <identifier>  expected	45	None	replace
54	[BUG]  [BUGGY]  Integer.valueOf(numberOfArgs)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      public  static  Option  create(char  opt)  throws  IllegalArgumentException  {      [BUGGY]  Integer.valueOf(numberOfArgs)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      return  create(String.valueOf(opt));  }  [CLASS]  OptionBuilder  [METHOD]  create  [RETURN_TYPE]  Option  char  opt  [VARIABLES]  boolean  hasArg  newRequired  optionalArg  required  OptionBuilder  instance  char  opt  sep  valuesep  Object  newType  type  String  argName  description  longopt  name  newDescription  newLongopt  int  num  numArgs  numberOfArgs  	projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java	0.3779644730092272	316	316	1	replace	Integer.valueOf(numberOfArgs)  {  throw  new  IllegalArgumentException( " ");  }	  Integer.valueOf(opt)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  <identifier>  expected	19	None	replace
55	[BUG]  [BUGGY]  Integer.parseInt(opt)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      public  static  Option  create(char  opt)  throws  IllegalArgumentException  {      [BUGGY]  Integer.parseInt(opt)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      return  create(String.valueOf(opt));  }  [CLASS]  OptionBuilder  [METHOD]  create  [RETURN_TYPE]  Option  char  opt  [VARIABLES]  boolean  hasArg  newRequired  optionalArg  required  OptionBuilder  instance  char  opt  sep  valuesep  Object  newType  type  String  argName  description  longopt  name  newDescription  newLongopt  int  num  numArgs  numberOfArgs  	projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java	0.3779644730092272	316	316	1	replace	Integer.parseInt(opt)  {  throw  new  IllegalArgumentException( " ");  }	  Integer.valueOf(opt)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  <identifier>  expected	19	None	replace
56	[BUG]  [BUGGY]  Integer.valueOf(opt)  ==  0?  null  :  opt.intValue();  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]      public  static  Option  create(char  opt)  throws  IllegalArgumentException  {      [BUGGY]  Integer.valueOf(opt)  ==  0?  null  :  opt.intValue();  [BUGGY]      return  create(String.valueOf(opt));  }  [CLASS]  OptionBuilder  [METHOD]  create  [RETURN_TYPE]  Option  char  opt  [VARIABLES]  boolean  hasArg  newRequired  optionalArg  required  OptionBuilder  instance  char  opt  sep  valuesep  Object  newType  type  String  argName  description  longopt  name  newDescription  newLongopt  int  num  numArgs  numberOfArgs  	projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java	0.3779644730092272	316	316	1	replace	Integer.valueOf(opt)  ==  0?  null  :  opt.intValue();	  Integer.valueOf(opt)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  <identifier>  expected	19	None	replace
57	[BUG]  [BUGGY]  int  numberOfArgs  =  getNumberOfArgs(numberOfArgs  +  1);  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      public  static  Option  create(char  opt)  throws  IllegalArgumentException  {      [BUGGY]  int  numberOfArgs  =  getNumberOfArgs(numberOfArgs  +  1);  [BUGGY]      return  create(String.valueOf(opt));  }  [CLASS]  OptionBuilder  [METHOD]  create  [RETURN_TYPE]  Option  char  opt  [VARIABLES]  boolean  hasArg  newRequired  optionalArg  required  OptionBuilder  instance  char  opt  sep  valuesep  Object  newType  type  String  argName  description  longopt  name  newDescription  newLongopt  int  num  numArgs  numberOfArgs  	projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java	0.3779644730092272	316	316	1	replace	int  numberOfArgs  =  getNumberOfArgs(numberOfArgs  +  1);	  int    numberOfArgs    =    getNumberOfArgs(numberOfArgs);    	non-compiled	[CE]  <identifier>  expected	59	None	replace
58	[BUG]  [BUGGY]  int  numberOfArgs  =  getNumberOfArgs(numberOfArgs,  1);  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      public  static  Option  create(char  opt)  throws  IllegalArgumentException  {      [BUGGY]  int  numberOfArgs  =  getNumberOfArgs(numberOfArgs,  1);  [BUGGY]      return  create(String.valueOf(opt));  }  [CLASS]  OptionBuilder  [METHOD]  create  [RETURN_TYPE]  Option  char  opt  [VARIABLES]  boolean  hasArg  newRequired  optionalArg  required  OptionBuilder  instance  char  opt  sep  valuesep  Object  newType  type  String  argName  description  longopt  name  newDescription  newLongopt  int  num  numArgs  numberOfArgs  	projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java	0.3779644730092272	316	316	1	replace	int  numberOfArgs  =  getNumberOfArgs(numberOfArgs,  1);	  int    numberOfArgs    =    getNumberOfArgs(numberOfArgs);    	non-compiled	[CE]  <identifier>  expected	59	None	replace
59	[BUG]  [BUGGY]  int  numberOfArgs  =  getNumberOfArgs(numberOfArgs  -  1);  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      public  static  Option  create(char  opt)  throws  IllegalArgumentException  {      [BUGGY]  int  numberOfArgs  =  getNumberOfArgs(numberOfArgs  -  1);  [BUGGY]      return  create(String.valueOf(opt));  }  [CLASS]  OptionBuilder  [METHOD]  create  [RETURN_TYPE]  Option  char  opt  [VARIABLES]  boolean  hasArg  newRequired  optionalArg  required  OptionBuilder  instance  char  opt  sep  valuesep  Object  newType  type  String  argName  description  longopt  name  newDescription  newLongopt  int  num  numArgs  numberOfArgs  	projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java	0.3779644730092272	316	316	1	replace	int  numberOfArgs  =  getNumberOfArgs(numberOfArgs  -  1);	  int    numberOfArgs    =    getNumberOfArgs(numberOfArgs);    	non-compiled	[CE]  <identifier>  expected	59	None	replace
60	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  numArgs;  ++i)  {  opt  +=  String.valueOf(opt);  }  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      public  static  Option  create(char  opt)  throws  IllegalArgumentException  {      [BUGGY]  for(int  i  =  0;  i  <  numArgs;  ++i)  {  opt  +=  String.valueOf(opt);  }  [BUGGY]      return  create(String.valueOf(opt));  }  [CLASS]  OptionBuilder  [METHOD]  create  [RETURN_TYPE]  Option  char  opt  [VARIABLES]  boolean  hasArg  newRequired  optionalArg  required  OptionBuilder  instance  char  opt  sep  valuesep  Object  newType  type  String  argName  description  longopt  name  newDescription  newLongopt  int  num  numArgs  numberOfArgs  	projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java	0.3779644730092272	316	316	1	replace	for(int  i  =  0;  i  <  numArgs;  ++i)  {  opt  +=  String.valueOf(opt);  }	  for(int    i    =    0;    i    <    numberOfArgs;    ++i)    {    opt    +=    String.valueOf(opt);    }    	non-compiled	[CE]  <identifier>  expected	5	None	replace
61	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  valuesep;  ++i)  {  opt  +=  String.valueOf(opt);  }  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      public  static  Option  create(char  opt)  throws  IllegalArgumentException  {      [BUGGY]  for(int  i  =  0;  i  <  valuesep;  ++i)  {  opt  +=  String.valueOf(opt);  }  [BUGGY]      return  create(String.valueOf(opt));  }  [CLASS]  OptionBuilder  [METHOD]  create  [RETURN_TYPE]  Option  char  opt  [VARIABLES]  boolean  hasArg  newRequired  optionalArg  required  OptionBuilder  instance  char  opt  sep  valuesep  Object  newType  type  String  argName  description  longopt  name  newDescription  newLongopt  int  num  numArgs  numberOfArgs  	projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java	0.3779644730092272	316	316	1	replace	for(int  i  =  0;  i  <  valuesep;  ++i)  {  opt  +=  String.valueOf(opt);  }	  for(int    i    =    0;    i    <    numberOfArgs;    ++i)    {    opt    +=    String.valueOf(opt);    }    	non-compiled	[CE]  <identifier>  expected	5	None	replace
62	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  length;  ++i)  {  opt  +=  String.valueOf(opt);  }  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]      public  static  Option  create(char  opt)  throws  IllegalArgumentException  {      [BUGGY]  for(int  i  =  0;  i  <  length;  ++i)  {  opt  +=  String.valueOf(opt);  }  [BUGGY]      return  create(String.valueOf(opt));  }  [CLASS]  OptionBuilder  [METHOD]  create  [RETURN_TYPE]  Option  char  opt  [VARIABLES]  boolean  hasArg  newRequired  optionalArg  required  OptionBuilder  instance  char  opt  sep  valuesep  Object  newType  type  String  argName  description  longopt  name  newDescription  newLongopt  int  num  numArgs  numberOfArgs  	projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java	0.3779644730092272	316	316	1	replace	for(int  i  =  0;  i  <  length;  ++i)  {  opt  +=  String.valueOf(opt);  }	  for(int    i    =    0;    i    <    numberOfArgs;    ++i)    {    opt    +=    String.valueOf(opt);    }    	non-compiled	[CE]  <identifier>  expected	5	None	replace
63	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  numArgs;  ++i)  {  opt  +=  String.valueOf(null);  }  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]      public  static  Option  create(char  opt)  throws  IllegalArgumentException  {      [BUGGY]  for(int  i  =  0;  i  <  numArgs;  ++i)  {  opt  +=  String.valueOf(null);  }  [BUGGY]      return  create(String.valueOf(opt));  }  [CLASS]  OptionBuilder  [METHOD]  create  [RETURN_TYPE]  Option  char  opt  [VARIABLES]  boolean  hasArg  newRequired  optionalArg  required  OptionBuilder  instance  char  opt  sep  valuesep  Object  newType  type  String  argName  description  longopt  name  newDescription  newLongopt  int  num  numArgs  numberOfArgs  	projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java	0.3779644730092272	316	316	1	replace	for(int  i  =  0;  i  <  numArgs;  ++i)  {  opt  +=  String.valueOf(null);  }	  for(int    i    =    0;    i    <    numberOfArgs;    ++i)    {    opt    +=    String.valueOf(null);    }    	non-compiled	[CE]  <identifier>  expected	7	None	replace
64	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  valuesep;  ++i)  {  opt  +=  String.valueOf(null);  }  [CE]  <identifier>  expected  [FE]                          AssertionFailedError      [CONTEXT]      public  static  Option  create(char  opt)  throws  IllegalArgumentException  {      [BUGGY]  for(int  i  =  0;  i  <  valuesep;  ++i)  {  opt  +=  String.valueOf(null);  }  [BUGGY]      return  create(String.valueOf(opt));  }  [CLASS]  OptionBuilder  [METHOD]  create  [RETURN_TYPE]  Option  char  opt  [VARIABLES]  boolean  hasArg  newRequired  optionalArg  required  OptionBuilder  instance  char  opt  sep  valuesep  Object  newType  type  String  argName  description  longopt  name  newDescription  newLongopt  int  num  numArgs  numberOfArgs  	projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java	0.3779644730092272	316	316	1	replace	for(int  i  =  0;  i  <  valuesep;  ++i)  {  opt  +=  String.valueOf(null);  }	  for(int    i    =    0;    i    <    numberOfArgs;    ++i)    {    opt    +=    String.valueOf(null);    }    	non-compiled	[CE]  <identifier>  expected	7	None	replace
65	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  length;  ++i)  {  opt  +=  String.valueOf(null);  }  [CE]  <identifier>  expected  [FE]                            AssertionFailedError      [CONTEXT]      public  static  Option  create(char  opt)  throws  IllegalArgumentException  {      [BUGGY]  for(int  i  =  0;  i  <  length;  ++i)  {  opt  +=  String.valueOf(null);  }  [BUGGY]      return  create(String.valueOf(opt));  }  [CLASS]  OptionBuilder  [METHOD]  create  [RETURN_TYPE]  Option  char  opt  [VARIABLES]  boolean  hasArg  newRequired  optionalArg  required  OptionBuilder  instance  char  opt  sep  valuesep  Object  newType  type  String  argName  description  longopt  name  newDescription  newLongopt  int  num  numArgs  numberOfArgs  	projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java	0.3779644730092272	316	316	1	replace	for(int  i  =  0;  i  <  length;  ++i)  {  opt  +=  String.valueOf(null);  }	  for(int    i    =    0;    i    <    numberOfArgs;    ++i)    {    opt    +=    String.valueOf(null);    }    	non-compiled	[CE]  <identifier>  expected	7	None	replace
66	[BUG]  [BUGGY]  Integer.toString(numberOfArgs)  ==  0)  {  return  create(String.valueOf(opt));  }  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      public  static  Option  create(char  opt)  throws  IllegalArgumentException  {      [BUGGY]  Integer.toString(numberOfArgs)  ==  0)  {  return  create(String.valueOf(opt));  }  [BUGGY]      return  create(String.valueOf(opt));  }  [CLASS]  OptionBuilder  [METHOD]  create  [RETURN_TYPE]  Option  char  opt  [VARIABLES]  boolean  hasArg  newRequired  optionalArg  required  OptionBuilder  instance  char  opt  sep  valuesep  Object  newType  type  String  argName  description  longopt  name  newDescription  newLongopt  int  num  numArgs  numberOfArgs  	projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java	0.3779644730092272	316	316	1	replace	Integer.toString(numberOfArgs)  ==  0)  {  return  create(String.valueOf(opt));  }	  Integer.toString(opt)    ==    0)    {    return    create(String.valueOf(opt));    }    	non-compiled	[CE]  <identifier>  expected	46	None	replace
67	[BUG]  [BUGGY]  Integer.toString(valuesep)  ==  0)  {  return  create(String.valueOf(opt));  }  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      public  static  Option  create(char  opt)  throws  IllegalArgumentException  {      [BUGGY]  Integer.toString(valuesep)  ==  0)  {  return  create(String.valueOf(opt));  }  [BUGGY]      return  create(String.valueOf(opt));  }  [CLASS]  OptionBuilder  [METHOD]  create  [RETURN_TYPE]  Option  char  opt  [VARIABLES]  boolean  hasArg  newRequired  optionalArg  required  OptionBuilder  instance  char  opt  sep  valuesep  Object  newType  type  String  argName  description  longopt  name  newDescription  newLongopt  int  num  numArgs  numberOfArgs  	projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java	0.3779644730092272	316	316	1	replace	Integer.toString(valuesep)  ==  0)  {  return  create(String.valueOf(opt));  }	  Integer.toString(opt)    ==    0)    {    return    create(String.valueOf(opt));    }    	non-compiled	[CE]  <identifier>  expected	46	None	replace
68	[BUG]  [BUGGY]  Integer.toString(null)  ==  0)  {  return  create(String.valueOf(opt));  }  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      public  static  Option  create(char  opt)  throws  IllegalArgumentException  {      [BUGGY]  Integer.toString(null)  ==  0)  {  return  create(String.valueOf(opt));  }  [BUGGY]      return  create(String.valueOf(opt));  }  [CLASS]  OptionBuilder  [METHOD]  create  [RETURN_TYPE]  Option  char  opt  [VARIABLES]  boolean  hasArg  newRequired  optionalArg  required  OptionBuilder  instance  char  opt  sep  valuesep  Object  newType  type  String  argName  description  longopt  name  newDescription  newLongopt  int  num  numArgs  numberOfArgs  	projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java	0.3779644730092272	316	316	1	replace	Integer.toString(null)  ==  0)  {  return  create(String.valueOf(opt));  }	  Integer.toString(opt)    ==    0)    {    return    create(String.valueOf(opt));    }    	non-compiled	[CE]  <identifier>  expected	46	None	replace
69	[BUG]  [BUGGY]  Integer.toString(int)  ==  0)  {  return  create(String.valueOf(opt));  }  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      public  static  Option  create(char  opt)  throws  IllegalArgumentException  {      [BUGGY]  Integer.toString(int)  ==  0)  {  return  create(String.valueOf(opt));  }  [BUGGY]      return  create(String.valueOf(opt));  }  [CLASS]  OptionBuilder  [METHOD]  create  [RETURN_TYPE]  Option  char  opt  [VARIABLES]  boolean  hasArg  newRequired  optionalArg  required  OptionBuilder  instance  char  opt  sep  valuesep  Object  newType  type  String  argName  description  longopt  name  newDescription  newLongopt  int  num  numArgs  numberOfArgs  	projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java	0.3779644730092272	316	316	1	replace	Integer.toString(int)  ==  0)  {  return  create(String.valueOf(opt));  }	  Integer.toString(opt)    ==    0)    {    return    create(String.valueOf(opt));    }    	non-compiled	[CE]  <identifier>  expected	46	None	replace
70	[BUG]  [BUGGY]  Integer  numberOfArgs  =  getNumberOfArgs(numberOfArgs);  [CE]  <identifier>  expected  [FE]            AssertionFailedError      [CONTEXT]      public  static  Option  create(char  opt)  throws  IllegalArgumentException  {      [BUGGY]  Integer  numberOfArgs  =  getNumberOfArgs(numberOfArgs);  [BUGGY]      return  create(String.valueOf(opt));  }  [CLASS]  OptionBuilder  [METHOD]  create  [RETURN_TYPE]  Option  char  opt  [VARIABLES]  boolean  hasArg  newRequired  optionalArg  required  OptionBuilder  instance  char  opt  sep  valuesep  Object  newType  type  String  argName  description  longopt  name  newDescription  newLongopt  int  num  numArgs  numberOfArgs  	projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java	0.3779644730092272	316	316	1	replace	Integer  numberOfArgs  =  getNumberOfArgs(numberOfArgs);	  if(numberOfArgs    >    1)    {    for(int    i    =    0;    i    <    numberOfArgs;    ++i)    {    opt    +=    String.valueOf(opt);    }    	non-compiled	[CE]  <identifier>  expected	107	None	replace
71	[BUG]  [BUGGY]  if(numberOfArgs  ==  1)  {  allowNumberOfArgs(numberOfArgs)  {  return  create(String.valueOf(opt));  }  else  {  throw  new  IllegalArgumentException( " ");  }  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      public  static  Option  create(char  opt)  throws  IllegalArgumentException  {      [BUGGY]  if(numberOfArgs  ==  1)  {  allowNumberOfArgs(numberOfArgs)  {  return  create(String.valueOf(opt));  }  else  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      return  create(String.valueOf(opt));  }  [CLASS]  OptionBuilder  [METHOD]  create  [RETURN_TYPE]  Option  char  opt  [VARIABLES]  boolean  hasArg  newRequired  optionalArg  required  OptionBuilder  instance  char  opt  sep  valuesep  Object  newType  type  String  argName  description  longopt  name  newDescription  newLongopt  int  num  numArgs  numberOfArgs  	projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java	0.3779644730092272	316	316	1	replace	if(numberOfArgs  ==  1)  {  allowNumberOfArgs(numberOfArgs)  {  return  create(String.valueOf(opt));  }  else  {  throw  new  IllegalArgumentException( " ");  }	  allowNumberOfArgs(numberOfArgs)    {    return    create(String.valueOf(opt));    }    else    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  <identifier>  expected	33	None	replace
72	[BUG]  [BUGGY]  if(numberOfArgs  ==  0)  {  allowNumberOfArgs(numberOfArgs)  {  return  create(String.valueOf(opt));  }  else  {  throw  new  IllegalArgumentException( " ");  }  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]      public  static  Option  create(char  opt)  throws  IllegalArgumentException  {      [BUGGY]  if(numberOfArgs  ==  0)  {  allowNumberOfArgs(numberOfArgs)  {  return  create(String.valueOf(opt));  }  else  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      return  create(String.valueOf(opt));  }  [CLASS]  OptionBuilder  [METHOD]  create  [RETURN_TYPE]  Option  char  opt  [VARIABLES]  boolean  hasArg  newRequired  optionalArg  required  OptionBuilder  instance  char  opt  sep  valuesep  Object  newType  type  String  argName  description  longopt  name  newDescription  newLongopt  int  num  numArgs  numberOfArgs  	projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java	0.3779644730092272	316	316	1	replace	if(numberOfArgs  ==  0)  {  allowNumberOfArgs(numberOfArgs)  {  return  create(String.valueOf(opt));  }  else  {  throw  new  IllegalArgumentException( " ");  }	  allowNumberOfArgs(numberOfArgs)    {    return    create(String.valueOf(opt));    }    else    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  <identifier>  expected	33	None	replace
73	[BUG]  [BUGGY]  if(numberOfArgs  ==  0)  {  allowNumberOfArgs(numberOfArgs)  {  return  create(String.valueOf(opt));  }  [CE]  <identifier>  expected  [FE]                          AssertionFailedError      [CONTEXT]      public  static  Option  create(char  opt)  throws  IllegalArgumentException  {      [BUGGY]  if(numberOfArgs  ==  0)  {  allowNumberOfArgs(numberOfArgs)  {  return  create(String.valueOf(opt));  }  [BUGGY]      return  create(String.valueOf(opt));  }  [CLASS]  OptionBuilder  [METHOD]  create  [RETURN_TYPE]  Option  char  opt  [VARIABLES]  boolean  hasArg  newRequired  optionalArg  required  OptionBuilder  instance  char  opt  sep  valuesep  Object  newType  type  String  argName  description  longopt  name  newDescription  newLongopt  int  num  numArgs  numberOfArgs  	projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java	0.3779644730092272	316	316	1	replace	if(numberOfArgs  ==  0)  {  allowNumberOfArgs(numberOfArgs)  {  return  create(String.valueOf(opt));  }	  allowNumberOfArgs(numberOfArgs)    {    return    create(String.valueOf(opt));    }    else    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  <identifier>  expected	33	None	replace
74	[BUG]  [BUGGY]  if(numberOfArgs  ==  1)  {  allowNumberOfArgs(numberOfArgs)  {  return  create(String.valueOf(opt));  }  [CE]  <identifier>  expected  [FE]                            AssertionFailedError      [CONTEXT]      public  static  Option  create(char  opt)  throws  IllegalArgumentException  {      [BUGGY]  if(numberOfArgs  ==  1)  {  allowNumberOfArgs(numberOfArgs)  {  return  create(String.valueOf(opt));  }  [BUGGY]      return  create(String.valueOf(opt));  }  [CLASS]  OptionBuilder  [METHOD]  create  [RETURN_TYPE]  Option  char  opt  [VARIABLES]  boolean  hasArg  newRequired  optionalArg  required  OptionBuilder  instance  char  opt  sep  valuesep  Object  newType  type  String  argName  description  longopt  name  newDescription  newLongopt  int  num  numArgs  numberOfArgs  	projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java	0.3779644730092272	316	316	1	replace	if(numberOfArgs  ==  1)  {  allowNumberOfArgs(numberOfArgs)  {  return  create(String.valueOf(opt));  }	  allowNumberOfArgs(numberOfArgs)    {    return    create(String.valueOf(opt));    }    else    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  <identifier>  expected	33	None	replace
75	[BUG]  [BUGGY]  Thread.currentThread().setContextClassLoader(getClass().getClassLoader());  [CE]  <identifier>  expected  [FE]            AssertionFailedError      [CONTEXT]      public  static  Option  create(char  opt)  throws  IllegalArgumentException  {      [BUGGY]  Thread.currentThread().setContextClassLoader(getClass().getClassLoader());  [BUGGY]      return  create(String.valueOf(opt));  }  [CLASS]  OptionBuilder  [METHOD]  create  [RETURN_TYPE]  Option  char  opt  [VARIABLES]  boolean  hasArg  newRequired  optionalArg  required  OptionBuilder  instance  char  opt  sep  valuesep  Object  newType  type  String  argName  description  longopt  name  newDescription  newLongopt  int  num  numArgs  numberOfArgs  	projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java	0.3779644730092272	316	316	1	replace	Thread.currentThread().setContextClassLoader(getClass().getClassLoader());	  if(opt!=    null)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  <identifier>  expected	72	None	replace
76	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  opt;  ++i)  {  OptionBuilder.this.append(option);  }  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      public  static  Option  create(char  opt)  throws  IllegalArgumentException  {      [BUGGY]  for(int  i  =  0;  i  <  opt;  ++i)  {  OptionBuilder.this.append(option);  }  [BUGGY]      return  create(String.valueOf(opt));  }  [CLASS]  OptionBuilder  [METHOD]  create  [RETURN_TYPE]  Option  char  opt  [VARIABLES]  boolean  hasArg  newRequired  optionalArg  required  OptionBuilder  instance  char  opt  sep  valuesep  Object  newType  type  String  argName  description  longopt  name  newDescription  newLongopt  int  num  numArgs  numberOfArgs  	projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java	0.3779644730092272	316	316	1	replace	for(int  i  =  0;  i  <  opt;  ++i)  {  OptionBuilder.this.append(option);  }	  if(numberOfArgs    >    0)    {    for(int    i    =    0;    i    <    numberOfArgs;    ++i)    {    OptionBuilder.this.append(option);    }    	non-compiled	[CE]  <identifier>  expected	65	None	replace
77	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  numberOfArgs;  ++i)  {  OptionsBuilder.this.append(option);  }  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      public  static  Option  create(char  opt)  throws  IllegalArgumentException  {      [BUGGY]  for(int  i  =  0;  i  <  numberOfArgs;  ++i)  {  OptionsBuilder.this.append(option);  }  [BUGGY]      return  create(String.valueOf(opt));  }  [CLASS]  OptionBuilder  [METHOD]  create  [RETURN_TYPE]  Option  char  opt  [VARIABLES]  boolean  hasArg  newRequired  optionalArg  required  OptionBuilder  instance  char  opt  sep  valuesep  Object  newType  type  String  argName  description  longopt  name  newDescription  newLongopt  int  num  numArgs  numberOfArgs  	projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java	0.3779644730092272	316	316	1	replace	for(int  i  =  0;  i  <  numberOfArgs;  ++i)  {  OptionsBuilder.this.append(option);  }	  if(numberOfArgs    >    0)    {    for(int    i    =    0;    i    <    numberOfArgs;    ++i)    {    OptionBuilder.this.append(option);    }    	non-compiled	[CE]  <identifier>  expected	65	None	replace
78	[BUG]  [BUGGY]  if(opt  ==  null)  {  return  create(String.valueOf(numberOfArgs  +  1));  }  [CE]  <identifier>  expected  [FE]            AssertionFailedError      [CONTEXT]      public  static  Option  create(char  opt)  throws  IllegalArgumentException  {      [BUGGY]  if(opt  ==  null)  {  return  create(String.valueOf(numberOfArgs  +  1));  }  [BUGGY]      }  [CLASS]  OptionBuilder  [METHOD]  create  [RETURN_TYPE]  Option  char  opt  [VARIABLES]  boolean  hasArg  newRequired  optionalArg  required  OptionBuilder  instance  char  opt  sep  valuesep  Object  newType  type  String  argName  description  longopt  name  newDescription  newLongopt  int  num  numArgs  numberOfArgs  	projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java	0.3779644730092272	316	316	1	replace	if(opt  ==  null)  {  return  create(String.valueOf(numberOfArgs  +  1));  }	  if(opt    ==    null)    {    return    create(String.valueOf(numberOfArgs));    }    	non-compiled	[CE]  <identifier>  expected	51	None	replace
79	[BUG]  [BUGGY]  Integer.toString(numberOfArgs)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      public  static  Option  create(char  opt)  throws  IllegalArgumentException  {      [BUGGY]  Integer.toString(numberOfArgs)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      return  create(String.valueOf(opt));  }  [CLASS]  OptionBuilder  [METHOD]  create  [RETURN_TYPE]  Option  char  opt  [VARIABLES]  boolean  hasArg  newRequired  optionalArg  required  OptionBuilder  instance  char  opt  sep  valuesep  Object  newType  type  String  argName  description  longopt  name  newDescription  newLongopt  int  num  numArgs  numberOfArgs  	projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java	0.3779644730092272	316	316	1	replace	Integer.toString(numberOfArgs)  {  throw  new  IllegalArgumentException( " ");  }	  Integer.toString(opt)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  <identifier>  expected	17	None	replace
80	[BUG]  [BUGGY]  Integer.toString(valuesep)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      public  static  Option  create(char  opt)  throws  IllegalArgumentException  {      [BUGGY]  Integer.toString(valuesep)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      return  create(String.valueOf(opt));  }  [CLASS]  OptionBuilder  [METHOD]  create  [RETURN_TYPE]  Option  char  opt  [VARIABLES]  boolean  hasArg  newRequired  optionalArg  required  OptionBuilder  instance  char  opt  sep  valuesep  Object  newType  type  String  argName  description  longopt  name  newDescription  newLongopt  int  num  numArgs  numberOfArgs  	projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java	0.3779644730092272	316	316	1	replace	Integer.toString(valuesep)  {  throw  new  IllegalArgumentException( " ");  }	  Integer.toString(opt)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  <identifier>  expected	17	None	replace
81	[BUG]  [BUGGY]  OptionBuilder  <  Object>  newType  =  getType(numberOfArgs  +  1);  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      public  static  Option  create(char  opt)  throws  IllegalArgumentException  {      [BUGGY]  OptionBuilder  <  Object>  newType  =  getType(numberOfArgs  +  1);  [BUGGY]      return  create(String.valueOf(opt));  }  [CLASS]  OptionBuilder  [METHOD]  create  [RETURN_TYPE]  Option  char  opt  [VARIABLES]  boolean  hasArg  newRequired  optionalArg  required  OptionBuilder  instance  char  opt  sep  valuesep  Object  newType  type  String  argName  description  longopt  name  newDescription  newLongopt  int  num  numArgs  numberOfArgs  	projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java	0.3779644730092272	316	316	1	replace	OptionBuilder  <  Object>  newType  =  getType(numberOfArgs  +  1);	  OptionBuilder    <    Object>    newType    =    getType(numberOfArgs);    	non-compiled	[CE]  <identifier>  expected	82	None	replace
82	[BUG]  [BUGGY]  OptionBuilder  <  Object>  newType  =  getType(numberOfArgs,  type);  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      public  static  Option  create(char  opt)  throws  IllegalArgumentException  {      [BUGGY]  OptionBuilder  <  Object>  newType  =  getType(numberOfArgs,  type);  [BUGGY]      return  create(String.valueOf(opt));  }  [CLASS]  OptionBuilder  [METHOD]  create  [RETURN_TYPE]  Option  char  opt  [VARIABLES]  boolean  hasArg  newRequired  optionalArg  required  OptionBuilder  instance  char  opt  sep  valuesep  Object  newType  type  String  argName  description  longopt  name  newDescription  newLongopt  int  num  numArgs  numberOfArgs  	projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java	0.3779644730092272	316	316	1	replace	OptionBuilder  <  Object>  newType  =  getType(numberOfArgs,  type);	  OptionBuilder    <    Object>    newType    =    getType(numberOfArgs);    	non-compiled	[CE]  <identifier>  expected	82	None	replace
83	[BUG]  [BUGGY]  allowNumberOfArgs(opt)  {  throw  new  IllegalArgumentException(String.valueOf(opt));  }  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      public  static  Option  create(char  opt)  throws  IllegalArgumentException  {      [BUGGY]  allowNumberOfArgs(opt)  {  throw  new  IllegalArgumentException(String.valueOf(opt));  }  [BUGGY]      return  create(String.valueOf(opt));  }  [CLASS]  OptionBuilder  [METHOD]  create  [RETURN_TYPE]  Option  char  opt  [VARIABLES]  boolean  hasArg  newRequired  optionalArg  required  OptionBuilder  instance  char  opt  sep  valuesep  Object  newType  type  String  argName  description  longopt  name  newDescription  newLongopt  int  num  numArgs  numberOfArgs  	projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java	0.3779644730092272	316	316	1	replace	allowNumberOfArgs(opt)  {  throw  new  IllegalArgumentException(String.valueOf(opt));  }	  if(opt    ==    Long.MIN_VALUE)    {    throw    new    IllegalArgumentException(String.valueOf(opt));    }    	non-compiled	[CE]  <identifier>  expected	71	None	replace
84	[BUG]  [BUGGY]  Integer.toString(opt)  {  throw  new  IllegalArgumentException(String.valueOf(opt));  }  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      public  static  Option  create(char  opt)  throws  IllegalArgumentException  {      [BUGGY]  Integer.toString(opt)  {  throw  new  IllegalArgumentException(String.valueOf(opt));  }  [BUGGY]      return  create(String.valueOf(opt));  }  [CLASS]  OptionBuilder  [METHOD]  create  [RETURN_TYPE]  Option  char  opt  [VARIABLES]  boolean  hasArg  newRequired  optionalArg  required  OptionBuilder  instance  char  opt  sep  valuesep  Object  newType  type  String  argName  description  longopt  name  newDescription  newLongopt  int  num  numArgs  numberOfArgs  	projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java	0.3779644730092272	316	316	1	replace	Integer.toString(opt)  {  throw  new  IllegalArgumentException(String.valueOf(opt));  }	  if(opt    ==    Long.MIN_VALUE)    {    throw    new    IllegalArgumentException(String.valueOf(opt));    }    	non-compiled	[CE]  <identifier>  expected	71	None	replace
85	[BUG]  [BUGGY]  Integer.toString(opt)  ==  Long.MIN_VALUE)  {  throw  new  IllegalArgumentException(String.valueOf(opt));  }  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      public  static  Option  create(char  opt)  throws  IllegalArgumentException  {      [BUGGY]  Integer.toString(opt)  ==  Long.MIN_VALUE)  {  throw  new  IllegalArgumentException(String.valueOf(opt));  }  [BUGGY]      return  create(String.valueOf(opt));  }  [CLASS]  OptionBuilder  [METHOD]  create  [RETURN_TYPE]  Option  char  opt  [VARIABLES]  boolean  hasArg  newRequired  optionalArg  required  OptionBuilder  instance  char  opt  sep  valuesep  Object  newType  type  String  argName  description  longopt  name  newDescription  newLongopt  int  num  numArgs  numberOfArgs  	projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java	0.3779644730092272	316	316	1	replace	Integer.toString(opt)  ==  Long.MIN_VALUE)  {  throw  new  IllegalArgumentException(String.valueOf(opt));  }	  if(opt    ==    Long.MIN_VALUE)    {    throw    new    IllegalArgumentException(String.valueOf(opt));    }    	non-compiled	[CE]  <identifier>  expected	71	None	replace
86	[BUG]  [BUGGY]  Integer.toString(opt)  {  throw  new  IllegalArgumentException(String.valueOf(opt));  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      public  static  Option  create(char  opt)  throws  IllegalArgumentException  {      [BUGGY]  Integer.toString(opt)  {  throw  new  IllegalArgumentException(String.valueOf(opt));  [BUGGY]      return  create(String.valueOf(opt));  }  [CLASS]  OptionBuilder  [METHOD]  create  [RETURN_TYPE]  Option  char  opt  [VARIABLES]  boolean  hasArg  newRequired  optionalArg  required  OptionBuilder  instance  char  opt  sep  valuesep  Object  newType  type  String  argName  description  longopt  name  newDescription  newLongopt  int  num  numArgs  numberOfArgs  	projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java	0.3779644730092272	316	316	1	replace	Integer.toString(opt)  {  throw  new  IllegalArgumentException(String.valueOf(opt));	  if(opt    ==    Long.MIN_VALUE)    {    throw    new    IllegalArgumentException(String.valueOf(opt));    }    	non-compiled	[CE]  <identifier>  expected	71	None	replace
87	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  numArgs;  ++i)  {  opt  =  opt  +  1;  }  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      public  static  Option  create(char  opt)  throws  IllegalArgumentException  {      [BUGGY]  for(int  i  =  0;  i  <  numArgs;  ++i)  {  opt  =  opt  +  1;  }  [BUGGY]      return  create(String.valueOf(opt));  }  [CLASS]  OptionBuilder  [METHOD]  create  [RETURN_TYPE]  Option  char  opt  [VARIABLES]  boolean  hasArg  newRequired  optionalArg  required  OptionBuilder  instance  char  opt  sep  valuesep  Object  newType  type  String  argName  description  longopt  name  newDescription  newLongopt  int  num  numArgs  numberOfArgs  	projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java	0.3779644730092272	316	316	1	replace	for(int  i  =  0;  i  <  numArgs;  ++i)  {  opt  =  opt  +  1;  }	  for(int    i    =    0;    i    <    numberOfArgs;    ++i)    {    opt    =    opt    +    1;    }    	non-compiled	[CE]  <identifier>  expected	27	None	replace
88	[BUG]  [BUGGY]  int  i  =  0;  i  <  numberOfArgs;  ++i)  {  opt  =  opt  +  1;  }  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      public  static  Option  create(char  opt)  throws  IllegalArgumentException  {      [BUGGY]  int  i  =  0;  i  <  numberOfArgs;  ++i)  {  opt  =  opt  +  1;  }  [BUGGY]      return  create(String.valueOf(opt));  }  [CLASS]  OptionBuilder  [METHOD]  create  [RETURN_TYPE]  Option  char  opt  [VARIABLES]  boolean  hasArg  newRequired  optionalArg  required  OptionBuilder  instance  char  opt  sep  valuesep  Object  newType  type  String  argName  description  longopt  name  newDescription  newLongopt  int  num  numArgs  numberOfArgs  	projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java	0.3779644730092272	316	316	1	replace	int  i  =  0;  i  <  numberOfArgs;  ++i)  {  opt  =  opt  +  1;  }	  for(int    i    =    0;    i    <    numberOfArgs;    ++i)    {    opt    =    opt    +    1;    }    	non-compiled	[CE]  <identifier>  expected	27	None	replace
89	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  length;  ++i)  {  opt  =  opt  +  1;  }  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      public  static  Option  create(char  opt)  throws  IllegalArgumentException  {      [BUGGY]  for(int  i  =  0;  i  <  length;  ++i)  {  opt  =  opt  +  1;  }  [BUGGY]      return  create(String.valueOf(opt));  }  [CLASS]  OptionBuilder  [METHOD]  create  [RETURN_TYPE]  Option  char  opt  [VARIABLES]  boolean  hasArg  newRequired  optionalArg  required  OptionBuilder  instance  char  opt  sep  valuesep  Object  newType  type  String  argName  description  longopt  name  newDescription  newLongopt  int  num  numArgs  numberOfArgs  	projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java	0.3779644730092272	316	316	1	replace	for(int  i  =  0;  i  <  length;  ++i)  {  opt  =  opt  +  1;  }	  for(int    i    =    0;    i    <    numberOfArgs;    ++i)    {    opt    =    opt    +    1;    }    	non-compiled	[CE]  <identifier>  expected	27	None	replace
90	[BUG]  [BUGGY]  if(opt  ==  Long.MIN_VALUE  ||  opt!=  Long.MAX_VALUE)  {  return  create(String.valueOf(opt));  }  else  {  throw  new  IllegalArgumentException( " ");  }  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      public  static  Option  create(char  opt)  throws  IllegalArgumentException  {      [BUGGY]  if(opt  ==  Long.MIN_VALUE  ||  opt!=  Long.MAX_VALUE)  {  return  create(String.valueOf(opt));  }  else  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      return  create(String.valueOf(opt));  }  [CLASS]  OptionBuilder  [METHOD]  create  [RETURN_TYPE]  Option  char  opt  [VARIABLES]  boolean  hasArg  newRequired  optionalArg  required  OptionBuilder  instance  char  opt  sep  valuesep  Object  newType  type  String  argName  description  longopt  name  newDescription  newLongopt  int  num  numArgs  numberOfArgs  	projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java	0.3779644730092272	316	316	1	replace	if(opt  ==  Long.MIN_VALUE  ||  opt!=  Long.MAX_VALUE)  {  return  create(String.valueOf(opt));  }  else  {  throw  new  IllegalArgumentException( " ");  }	  if(opt    ==    Long.MIN_VALUE    ||    opt    >    Long.MAX_VALUE)    {    return    create(String.valueOf(opt));    }    else    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  <identifier>  expected	93	None	replace
91	[BUG]  [BUGGY]  if(opt  ==  Long.MIN_VALUE  ||  opt  >=  Long.MAX_VALUE)  {  return  create(String.valueOf(opt));  }  else  {  throw  new  IllegalArgumentException( " ");  }  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      public  static  Option  create(char  opt)  throws  IllegalArgumentException  {      [BUGGY]  if(opt  ==  Long.MIN_VALUE  ||  opt  >=  Long.MAX_VALUE)  {  return  create(String.valueOf(opt));  }  else  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      return  create(String.valueOf(opt));  }  [CLASS]  OptionBuilder  [METHOD]  create  [RETURN_TYPE]  Option  char  opt  [VARIABLES]  boolean  hasArg  newRequired  optionalArg  required  OptionBuilder  instance  char  opt  sep  valuesep  Object  newType  type  String  argName  description  longopt  name  newDescription  newLongopt  int  num  numArgs  numberOfArgs  	projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java	0.3779644730092272	316	316	1	replace	if(opt  ==  Long.MIN_VALUE  ||  opt  >=  Long.MAX_VALUE)  {  return  create(String.valueOf(opt));  }  else  {  throw  new  IllegalArgumentException( " ");  }	  if(opt    ==    Long.MIN_VALUE    ||    opt    >    Long.MAX_VALUE)    {    return    create(String.valueOf(opt));    }    else    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  <identifier>  expected	93	None	replace
92	[BUG]  [BUGGY]  if(numberOfArgs  ==  1)  {  return  create(String.valueOf(opt));  }  else  {  throw  new  IllegalArgumentException( " ");  }  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      public  static  Option  create(char  opt)  throws  IllegalArgumentException  {      [BUGGY]  if(numberOfArgs  ==  1)  {  return  create(String.valueOf(opt));  }  else  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      }  [CLASS]  OptionBuilder  [METHOD]  create  [RETURN_TYPE]  Option  char  opt  [VARIABLES]  boolean  hasArg  newRequired  optionalArg  required  OptionBuilder  instance  char  opt  sep  valuesep  Object  newType  type  String  argName  description  longopt  name  newDescription  newLongopt  int  num  numArgs  numberOfArgs  	projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java	0.3779644730092272	316	316	1	replace	if(numberOfArgs  ==  1)  {  return  create(String.valueOf(opt));  }  else  {  throw  new  IllegalArgumentException( " ");  }	  if(numberOfArgs    ==    0)    {    return    create(String.valueOf(opt));    }    else    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  <identifier>  expected	36	None	replace
93	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  numberOfArgs;  ++i)  {  OptionBuilder.append(longopt);  }  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      public  static  Option  create(char  opt)  throws  IllegalArgumentException  {      [BUGGY]  for(int  i  =  0;  i  <  numberOfArgs;  ++i)  {  OptionBuilder.append(longopt);  }  [BUGGY]      return  create(String.valueOf(opt));  }  [CLASS]  OptionBuilder  [METHOD]  create  [RETURN_TYPE]  Option  char  opt  [VARIABLES]  boolean  hasArg  newRequired  optionalArg  required  OptionBuilder  instance  char  opt  sep  valuesep  Object  newType  type  String  argName  description  longopt  name  newDescription  newLongopt  int  num  numArgs  numberOfArgs  	projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java	0.3779644730092272	316	316	1	replace	for(int  i  =  0;  i  <  numberOfArgs;  ++i)  {  OptionBuilder.append(longopt);  }	  if(numberOfArgs    >    0)    {    for(int    i    =    0;    i    <    numberOfArgs;    ++i)    {    OptionBuilder.append(longopt);    }    	non-compiled	[CE]  <identifier>  expected	77	None	replace
94	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  numberOfArgs;  ++i)  {  OptionsBuilder.append(longopt);  }  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      public  static  Option  create(char  opt)  throws  IllegalArgumentException  {      [BUGGY]  for(int  i  =  0;  i  <  numberOfArgs;  ++i)  {  OptionsBuilder.append(longopt);  }  [BUGGY]      return  create(String.valueOf(opt));  }  [CLASS]  OptionBuilder  [METHOD]  create  [RETURN_TYPE]  Option  char  opt  [VARIABLES]  boolean  hasArg  newRequired  optionalArg  required  OptionBuilder  instance  char  opt  sep  valuesep  Object  newType  type  String  argName  description  longopt  name  newDescription  newLongopt  int  num  numArgs  numberOfArgs  	projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java	0.3779644730092272	316	316	1	replace	for(int  i  =  0;  i  <  numberOfArgs;  ++i)  {  OptionsBuilder.append(longopt);  }	  if(numberOfArgs    >    0)    {    for(int    i    =    0;    i    <    numberOfArgs;    ++i)    {    OptionBuilder.append(longopt);    }    	non-compiled	[CE]  <identifier>  expected	77	None	replace
95	[BUG]  [BUGGY]  NumberOfArgs  numberOfArgs  >  0)  {  return  create(String.valueOf(opt));  }  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      public  static  Option  create(char  opt)  throws  IllegalArgumentException  {      [BUGGY]  NumberOfArgs  numberOfArgs  >  0)  {  return  create(String.valueOf(opt));  }  [BUGGY]      }  [CLASS]  OptionBuilder  [METHOD]  create  [RETURN_TYPE]  Option  char  opt  [VARIABLES]  boolean  hasArg  newRequired  optionalArg  required  OptionBuilder  instance  char  opt  sep  valuesep  Object  newType  type  String  argName  description  longopt  name  newDescription  newLongopt  int  num  numArgs  numberOfArgs  	projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java	0.3779644730092272	316	316	1	replace	NumberOfArgs  numberOfArgs  >  0)  {  return  create(String.valueOf(opt));  }	  numberOfArgs    >    0)    {    return    create(String.valueOf(opt));    }    	non-compiled	[CE]  <identifier>  expected	69	None	replace
96	[BUG]  [BUGGY]  if(numberOfArgs  ==  1)  {  if(opt  ==  Long.MIN_VALUE)  {  return  create(String.valueOf(opt));  }  else  {  throw  new  IllegalArgumentException( " ");  }  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      public  static  Option  create(char  opt)  throws  IllegalArgumentException  {      [BUGGY]  if(numberOfArgs  ==  1)  {  if(opt  ==  Long.MIN_VALUE)  {  return  create(String.valueOf(opt));  }  else  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      return  create(String.valueOf(opt));  }  [CLASS]  OptionBuilder  [METHOD]  create  [RETURN_TYPE]  Option  char  opt  [VARIABLES]  boolean  hasArg  newRequired  optionalArg  required  OptionBuilder  instance  char  opt  sep  valuesep  Object  newType  type  String  argName  description  longopt  name  newDescription  newLongopt  int  num  numArgs  numberOfArgs  	projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java	0.3779644730092272	316	316	1	replace	if(numberOfArgs  ==  1)  {  if(opt  ==  Long.MIN_VALUE)  {  return  create(String.valueOf(opt));  }  else  {  throw  new  IllegalArgumentException( " ");  }	  allowNumberOfArgs(numberOfArgs)    {    if(opt    ==    Long.MIN_VALUE)    {    return    create(String.valueOf(opt));    }    else    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  <identifier>  expected	31	None	replace
97	[BUG]  [BUGGY]  allowNumberOfArgs(numberOfArgs)  {  if(opt!=  Long.MIN_VALUE)  {  return  create(String.valueOf(opt));  }  else  {  throw  new  IllegalArgumentException( " ");  }  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      public  static  Option  create(char  opt)  throws  IllegalArgumentException  {      [BUGGY]  allowNumberOfArgs(numberOfArgs)  {  if(opt!=  Long.MIN_VALUE)  {  return  create(String.valueOf(opt));  }  else  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      return  create(String.valueOf(opt));  }  [CLASS]  OptionBuilder  [METHOD]  create  [RETURN_TYPE]  Option  char  opt  [VARIABLES]  boolean  hasArg  newRequired  optionalArg  required  OptionBuilder  instance  char  opt  sep  valuesep  Object  newType  type  String  argName  description  longopt  name  newDescription  newLongopt  int  num  numArgs  numberOfArgs  	projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java	0.3779644730092272	316	316	1	replace	allowNumberOfArgs(numberOfArgs)  {  if(opt!=  Long.MIN_VALUE)  {  return  create(String.valueOf(opt));  }  else  {  throw  new  IllegalArgumentException( " ");  }	  allowNumberOfArgs(numberOfArgs)    {    if(opt    ==    Long.MIN_VALUE)    {    return    create(String.valueOf(opt));    }    else    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  <identifier>  expected	31	None	replace
98	[BUG]  [BUGGY]  allowNumberOfArgs(numberOfArgs)  {  if(opt  <  Long.MIN_VALUE)  {  return  create(String.valueOf(opt));  }  else  {  throw  new  IllegalArgumentException( " ");  }  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      public  static  Option  create(char  opt)  throws  IllegalArgumentException  {      [BUGGY]  allowNumberOfArgs(numberOfArgs)  {  if(opt  <  Long.MIN_VALUE)  {  return  create(String.valueOf(opt));  }  else  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      return  create(String.valueOf(opt));  }  [CLASS]  OptionBuilder  [METHOD]  create  [RETURN_TYPE]  Option  char  opt  [VARIABLES]  boolean  hasArg  newRequired  optionalArg  required  OptionBuilder  instance  char  opt  sep  valuesep  Object  newType  type  String  argName  description  longopt  name  newDescription  newLongopt  int  num  numArgs  numberOfArgs  	projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java	0.3779644730092272	316	316	1	replace	allowNumberOfArgs(numberOfArgs)  {  if(opt  <  Long.MIN_VALUE)  {  return  create(String.valueOf(opt));  }  else  {  throw  new  IllegalArgumentException( " ");  }	  allowNumberOfArgs(numberOfArgs)    {    if(opt    ==    Long.MIN_VALUE)    {    return    create(String.valueOf(opt));    }    else    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  <identifier>  expected	31	None	replace
99	[BUG]  [BUGGY]  return  create(opt,  String.valueOf(null));  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      public  static  Option  create(char  opt)  throws  IllegalArgumentException  {      [BUGGY]  return  create(opt,  String.valueOf(null));  [BUGGY]      }  [CLASS]  OptionBuilder  [METHOD]  create  [RETURN_TYPE]  Option  char  opt  [VARIABLES]  boolean  hasArg  newRequired  optionalArg  required  OptionBuilder  instance  char  opt  sep  valuesep  Object  newType  type  String  argName  description  longopt  name  newDescription  newLongopt  int  num  numArgs  numberOfArgs  	projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java	0.3779644730092272	316	316	1	replace	return  create(opt,  String.valueOf(null));	  return    create(null,    String.valueOf(opt));    	non-compiled	[CE]  <identifier>  expected	25	None	replace
100	[BUG]  [BUGGY]  if(opt  ==  Long.MIN_VALUE  ||  opt  ==  Long.MAX_VALUE)  {  return  create(longopt,  String.valueOf(opt));  }  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      public  static  Option  create(char  opt)  throws  IllegalArgumentException  {      [BUGGY]  if(opt  ==  Long.MIN_VALUE  ||  opt  ==  Long.MAX_VALUE)  {  return  create(longopt,  String.valueOf(opt));  }  [BUGGY]      return  create(String.valueOf(opt));  }  [CLASS]  OptionBuilder  [METHOD]  create  [RETURN_TYPE]  Option  char  opt  [VARIABLES]  boolean  hasArg  newRequired  optionalArg  required  OptionBuilder  instance  char  opt  sep  valuesep  Object  newType  type  String  argName  description  longopt  name  newDescription  newLongopt  int  num  numArgs  numberOfArgs  	projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java	0.3779644730092272	316	316	1	replace	if(opt  ==  Long.MIN_VALUE  ||  opt  ==  Long.MAX_VALUE)  {  return  create(longopt,  String.valueOf(opt));  }	  if(opt    ==    Long.MIN_VALUE)    {    return    create(longopt,    String.valueOf(opt));    }    	non-compiled	[CE]  <identifier>  expected	61	None	replace
101	[BUG]  [BUGGY]  if(opt  ==  Long.MIN_VALUE  ||  opt  ==  Long.MIN_VALUE)  {  return  create(longopt,  String.valueOf(opt));  }  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      public  static  Option  create(char  opt)  throws  IllegalArgumentException  {      [BUGGY]  if(opt  ==  Long.MIN_VALUE  ||  opt  ==  Long.MIN_VALUE)  {  return  create(longopt,  String.valueOf(opt));  }  [BUGGY]      return  create(String.valueOf(opt));  }  [CLASS]  OptionBuilder  [METHOD]  create  [RETURN_TYPE]  Option  char  opt  [VARIABLES]  boolean  hasArg  newRequired  optionalArg  required  OptionBuilder  instance  char  opt  sep  valuesep  Object  newType  type  String  argName  description  longopt  name  newDescription  newLongopt  int  num  numArgs  numberOfArgs  	projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java	0.3779644730092272	316	316	1	replace	if(opt  ==  Long.MIN_VALUE  ||  opt  ==  Long.MIN_VALUE)  {  return  create(longopt,  String.valueOf(opt));  }	  if(opt    ==    Long.MIN_VALUE)    {    return    create(longopt,    String.valueOf(opt));    }    	non-compiled	[CE]  <identifier>  expected	61	None	replace
102	[BUG]  [BUGGY]  Integer.toString(opt)  ==  0)  {  return  create(longopt,  String.valueOf(opt));  }  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      public  static  Option  create(char  opt)  throws  IllegalArgumentException  {      [BUGGY]  Integer.toString(opt)  ==  0)  {  return  create(longopt,  String.valueOf(opt));  }  [BUGGY]      return  create(String.valueOf(opt));  }  [CLASS]  OptionBuilder  [METHOD]  create  [RETURN_TYPE]  Option  char  opt  [VARIABLES]  boolean  hasArg  newRequired  optionalArg  required  OptionBuilder  instance  char  opt  sep  valuesep  Object  newType  type  String  argName  description  longopt  name  newDescription  newLongopt  int  num  numArgs  numberOfArgs  	projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java	0.3779644730092272	316	316	1	replace	Integer.toString(opt)  ==  0)  {  return  create(longopt,  String.valueOf(opt));  }	  if(opt    ==    Long.MIN_VALUE)    {    return    create(longopt,    String.valueOf(opt));    }    	non-compiled	[CE]  <identifier>  expected	61	None	replace
103	[BUG]  [BUGGY]  if(opt  ==  null)  {  return  create(String.valueOf(opt));  }  else  {  for(int  i  =  0;  i  <  numberOfArgs;  ++i)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      public  static  Option  create(char  opt)  throws  IllegalArgumentException  {      [BUGGY]  if(opt  ==  null)  {  return  create(String.valueOf(opt));  }  else  {  for(int  i  =  0;  i  <  numberOfArgs;  ++i)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      }  [CLASS]  OptionBuilder  [METHOD]  create  [RETURN_TYPE]  Option  char  opt  [VARIABLES]  boolean  hasArg  newRequired  optionalArg  required  OptionBuilder  instance  char  opt  sep  valuesep  Object  newType  type  String  argName  description  longopt  name  newDescription  newLongopt  int  num  numArgs  numberOfArgs  	projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java	0.3779644730092272	316	316	1	replace	if(opt  ==  null)  {  return  create(String.valueOf(opt));  }  else  {  for(int  i  =  0;  i  <  numberOfArgs;  ++i)  {  throw  new  IllegalArgumentException( " ");  }	  if(opt    ==    null)    {    return    create(String.valueOf(numberOfArgs));    }    else    {    for(int    i    =    0;    i    <    numberOfArgs;    ++i)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  <identifier>  expected	53	None	replace
104	[BUG]  [BUGGY]  if(opt  ==  null)  {  return  create(String.valueOf(numberOfArgs));  }  else  {  for(int  i  =  0;  i  <  numberOfArgs;  ++i)  {  throw  new  IllegalArgumentException( " ");  }  }  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      public  static  Option  create(char  opt)  throws  IllegalArgumentException  {      [BUGGY]  if(opt  ==  null)  {  return  create(String.valueOf(numberOfArgs));  }  else  {  for(int  i  =  0;  i  <  numberOfArgs;  ++i)  {  throw  new  IllegalArgumentException( " ");  }  }  [BUGGY]      }  [CLASS]  OptionBuilder  [METHOD]  create  [RETURN_TYPE]  Option  char  opt  [VARIABLES]  boolean  hasArg  newRequired  optionalArg  required  OptionBuilder  instance  char  opt  sep  valuesep  Object  newType  type  String  argName  description  longopt  name  newDescription  newLongopt  int  num  numArgs  numberOfArgs  	projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java	0.3779644730092272	316	316	1	replace	if(opt  ==  null)  {  return  create(String.valueOf(numberOfArgs));  }  else  {  for(int  i  =  0;  i  <  numberOfArgs;  ++i)  {  throw  new  IllegalArgumentException( " ");  }  }	  if(opt    ==    null)    {    return    create(String.valueOf(numberOfArgs));    }    else    {    for(int    i    =    0;    i    <    numberOfArgs;    ++i)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  <identifier>  expected	53	None	replace
105	[BUG]  [BUGGY]  if(opt  ==  null)  {  return  create(String.valueOf(numberOfArgs  +  1));  }  else  {  for(int  i  =  0;  i  <  numberOfArgs;  ++i)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      public  static  Option  create(char  opt)  throws  IllegalArgumentException  {      [BUGGY]  if(opt  ==  null)  {  return  create(String.valueOf(numberOfArgs  +  1));  }  else  {  for(int  i  =  0;  i  <  numberOfArgs;  ++i)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      }  [CLASS]  OptionBuilder  [METHOD]  create  [RETURN_TYPE]  Option  char  opt  [VARIABLES]  boolean  hasArg  newRequired  optionalArg  required  OptionBuilder  instance  char  opt  sep  valuesep  Object  newType  type  String  argName  description  longopt  name  newDescription  newLongopt  int  num  numArgs  numberOfArgs  	projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java	0.3779644730092272	316	316	1	replace	if(opt  ==  null)  {  return  create(String.valueOf(numberOfArgs  +  1));  }  else  {  for(int  i  =  0;  i  <  numberOfArgs;  ++i)  {  throw  new  IllegalArgumentException( " ");  }	  if(opt    ==    null)    {    return    create(String.valueOf(numberOfArgs));    }    else    {    for(int    i    =    0;    i    <    numberOfArgs;    ++i)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  <identifier>  expected	53	None	replace
106	[BUG]  [BUGGY]  return  createLong(String.valueOf(opt));  [CE]  <identifier>  expected  [FE]            AssertionFailedError      [CONTEXT]      public  static  Option  create(char  opt)  throws  IllegalArgumentException  {      [BUGGY]  return  createLong(String.valueOf(opt));  [BUGGY]      }  [CLASS]  OptionBuilder  [METHOD]  create  [RETURN_TYPE]  Option  char  opt  [VARIABLES]  boolean  hasArg  newRequired  optionalArg  required  OptionBuilder  instance  char  opt  sep  valuesep  Object  newType  type  String  argName  description  longopt  name  newDescription  newLongopt  int  num  numArgs  numberOfArgs  	projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java	0.3779644730092272	316	316	1	replace	return  createLong(String.valueOf(opt));	  return    createOptional(String.valueOf(opt));    	non-compiled	[CE]  <identifier>  expected	78	None	replace
107	[BUG]  [BUGGY]  return  createOptional(String.valueOf(opt)+  1);  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      public  static  Option  create(char  opt)  throws  IllegalArgumentException  {      [BUGGY]  return  createOptional(String.valueOf(opt)+  1);  [BUGGY]      }  [CLASS]  OptionBuilder  [METHOD]  create  [RETURN_TYPE]  Option  char  opt  [VARIABLES]  boolean  hasArg  newRequired  optionalArg  required  OptionBuilder  instance  char  opt  sep  valuesep  Object  newType  type  String  argName  description  longopt  name  newDescription  newLongopt  int  num  numArgs  numberOfArgs  	projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java	0.3779644730092272	316	316	1	replace	return  createOptional(String.valueOf(opt)+  1);	  return    createOptional(String.valueOf(opt));    	non-compiled	[CE]  <identifier>  expected	78	None	replace
108	[BUG]  [BUGGY]  Integer.toString(numberOfArgs)  {  return  create(String.valueOf(opt));  }  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      public  static  Option  create(char  opt)  throws  IllegalArgumentException  {      [BUGGY]  Integer.toString(numberOfArgs)  {  return  create(String.valueOf(opt));  }  [BUGGY]      return  create(String.valueOf(opt));  }  [CLASS]  OptionBuilder  [METHOD]  create  [RETURN_TYPE]  Option  char  opt  [VARIABLES]  boolean  hasArg  newRequired  optionalArg  required  OptionBuilder  instance  char  opt  sep  valuesep  Object  newType  type  String  argName  description  longopt  name  newDescription  newLongopt  int  num  numArgs  numberOfArgs  	projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java	0.3779644730092272	316	316	1	replace	Integer.toString(numberOfArgs)  {  return  create(String.valueOf(opt));  }	  Integer.toString(opt)    {    return    create(String.valueOf(opt));    }    	non-compiled	[CE]  <identifier>  expected	47	None	replace
109	[BUG]  [BUGGY]  Integer.toString(valuesep)  {  return  create(String.valueOf(opt));  }  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      public  static  Option  create(char  opt)  throws  IllegalArgumentException  {      [BUGGY]  Integer.toString(valuesep)  {  return  create(String.valueOf(opt));  }  [BUGGY]      return  create(String.valueOf(opt));  }  [CLASS]  OptionBuilder  [METHOD]  create  [RETURN_TYPE]  Option  char  opt  [VARIABLES]  boolean  hasArg  newRequired  optionalArg  required  OptionBuilder  instance  char  opt  sep  valuesep  Object  newType  type  String  argName  description  longopt  name  newDescription  newLongopt  int  num  numArgs  numberOfArgs  	projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java	0.3779644730092272	316	316	1	replace	Integer.toString(valuesep)  {  return  create(String.valueOf(opt));  }	  Integer.toString(opt)    {    return    create(String.valueOf(opt));    }    	non-compiled	[CE]  <identifier>  expected	47	None	replace
110	[BUG]  [BUGGY]  Integer.toString(valuesep)  {  return  create(Integer.toString(valuesep));  }  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      public  static  Option  create(char  opt)  throws  IllegalArgumentException  {      [BUGGY]  Integer.toString(valuesep)  {  return  create(Integer.toString(valuesep));  }  [BUGGY]      return  create(String.valueOf(opt));  }  [CLASS]  OptionBuilder  [METHOD]  create  [RETURN_TYPE]  Option  char  opt  [VARIABLES]  boolean  hasArg  newRequired  optionalArg  required  OptionBuilder  instance  char  opt  sep  valuesep  Object  newType  type  String  argName  description  longopt  name  newDescription  newLongopt  int  num  numArgs  numberOfArgs  	projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java	0.3779644730092272	316	316	1	replace	Integer.toString(valuesep)  {  return  create(Integer.toString(valuesep));  }	  Integer.toString(opt)    {    return    create(String.valueOf(opt));    }    	non-compiled	[CE]  <identifier>  expected	47	None	replace
111	[BUG]  [BUGGY]  Integer.toString(numberOfArgs)  {  return  create(Integer.toString(opt));  }  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]      public  static  Option  create(char  opt)  throws  IllegalArgumentException  {      [BUGGY]  Integer.toString(numberOfArgs)  {  return  create(Integer.toString(opt));  }  [BUGGY]      return  create(String.valueOf(opt));  }  [CLASS]  OptionBuilder  [METHOD]  create  [RETURN_TYPE]  Option  char  opt  [VARIABLES]  boolean  hasArg  newRequired  optionalArg  required  OptionBuilder  instance  char  opt  sep  valuesep  Object  newType  type  String  argName  description  longopt  name  newDescription  newLongopt  int  num  numArgs  numberOfArgs  	projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java	0.3779644730092272	316	316	1	replace	Integer.toString(numberOfArgs)  {  return  create(Integer.toString(opt));  }	  Integer.toString(opt)    {    return    create(String.valueOf(opt));    }    	non-compiled	[CE]  <identifier>  expected	47	None	replace
112	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  numArgs;  ++i)  {  OptionsBuilder.this.append(opt);  }  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      public  static  Option  create(char  opt)  throws  IllegalArgumentException  {      [BUGGY]  for(int  i  =  0;  i  <  numArgs;  ++i)  {  OptionsBuilder.this.append(opt);  }  [BUGGY]      return  create(String.valueOf(opt));  }  [CLASS]  OptionBuilder  [METHOD]  create  [RETURN_TYPE]  Option  char  opt  [VARIABLES]  boolean  hasArg  newRequired  optionalArg  required  OptionBuilder  instance  char  opt  sep  valuesep  Object  newType  type  String  argName  description  longopt  name  newDescription  newLongopt  int  num  numArgs  numberOfArgs  	projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java	0.3779644730092272	316	316	1	replace	for(int  i  =  0;  i  <  numArgs;  ++i)  {  OptionsBuilder.this.append(opt);  }	  for(int    i    =    0;    i    <    numberOfArgs;    ++i)    {    OptionsBuilder.this.append(opt);    }    	non-compiled	[CE]  <identifier>  expected	23	None	replace
113	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  numArgs;  ++i)  {  OptionsBuilder.this.append(option);  }  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      public  static  Option  create(char  opt)  throws  IllegalArgumentException  {      [BUGGY]  for(int  i  =  0;  i  <  numArgs;  ++i)  {  OptionsBuilder.this.append(option);  }  [BUGGY]      return  create(String.valueOf(opt));  }  [CLASS]  OptionBuilder  [METHOD]  create  [RETURN_TYPE]  Option  char  opt  [VARIABLES]  boolean  hasArg  newRequired  optionalArg  required  OptionBuilder  instance  char  opt  sep  valuesep  Object  newType  type  String  argName  description  longopt  name  newDescription  newLongopt  int  num  numArgs  numberOfArgs  	projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java	0.3779644730092272	316	316	1	replace	for(int  i  =  0;  i  <  numArgs;  ++i)  {  OptionsBuilder.this.append(option);  }	  for(int    i    =    0;    i    <    numberOfArgs;    ++i)    {    OptionsBuilder.this.append(opt);    }    	non-compiled	[CE]  <identifier>  expected	23	None	replace
114	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  length;  ++i)  {  OptionsBuilder.this.append(opt);  }  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]      public  static  Option  create(char  opt)  throws  IllegalArgumentException  {      [BUGGY]  for(int  i  =  0;  i  <  length;  ++i)  {  OptionsBuilder.this.append(opt);  }  [BUGGY]      return  create(String.valueOf(opt));  }  [CLASS]  OptionBuilder  [METHOD]  create  [RETURN_TYPE]  Option  char  opt  [VARIABLES]  boolean  hasArg  newRequired  optionalArg  required  OptionBuilder  instance  char  opt  sep  valuesep  Object  newType  type  String  argName  description  longopt  name  newDescription  newLongopt  int  num  numArgs  numberOfArgs  	projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java	0.3779644730092272	316	316	1	replace	for(int  i  =  0;  i  <  length;  ++i)  {  OptionsBuilder.this.append(opt);  }	  for(int    i    =    0;    i    <    numberOfArgs;    ++i)    {    OptionsBuilder.this.append(opt);    }    	non-compiled	[CE]  <identifier>  expected	23	None	replace
115	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  numArgs;  ++i)  {  OptionsBuilder.this.append(optionalArg);  }  [CE]  <identifier>  expected  [FE]                          AssertionFailedError      [CONTEXT]      public  static  Option  create(char  opt)  throws  IllegalArgumentException  {      [BUGGY]  for(int  i  =  0;  i  <  numArgs;  ++i)  {  OptionsBuilder.this.append(optionalArg);  }  [BUGGY]      return  create(String.valueOf(opt));  }  [CLASS]  OptionBuilder  [METHOD]  create  [RETURN_TYPE]  Option  char  opt  [VARIABLES]  boolean  hasArg  newRequired  optionalArg  required  OptionBuilder  instance  char  opt  sep  valuesep  Object  newType  type  String  argName  description  longopt  name  newDescription  newLongopt  int  num  numArgs  numberOfArgs  	projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java	0.3779644730092272	316	316	1	replace	for(int  i  =  0;  i  <  numArgs;  ++i)  {  OptionsBuilder.this.append(optionalArg);  }	  for(int    i    =    0;    i    <    numberOfArgs;    ++i)    {    OptionsBuilder.this.append(opt);    }    	non-compiled	[CE]  <identifier>  expected	23	None	replace
116	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  numArgs;  ++i)  {  OptionBuilder.this.append(option);  }  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      public  static  Option  create(char  opt)  throws  IllegalArgumentException  {      [BUGGY]  for(int  i  =  0;  i  <  numArgs;  ++i)  {  OptionBuilder.this.append(option);  }  [BUGGY]      return  create(String.valueOf(opt));  }  [CLASS]  OptionBuilder  [METHOD]  create  [RETURN_TYPE]  Option  char  opt  [VARIABLES]  boolean  hasArg  newRequired  optionalArg  required  OptionBuilder  instance  char  opt  sep  valuesep  Object  newType  type  String  argName  description  longopt  name  newDescription  newLongopt  int  num  numArgs  numberOfArgs  	projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java	0.3779644730092272	316	316	1	replace	for(int  i  =  0;  i  <  numArgs;  ++i)  {  OptionBuilder.this.append(option);  }	  for(int    i    =    0;    i    <    numberOfArgs;    ++i)    {    OptionBuilder.this.append(option);    }    	non-compiled	[CE]  <identifier>  expected	21	None	replace
117	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  numArgs;  ++i)  {  OptionBuilder.this.append(opt);  }  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      public  static  Option  create(char  opt)  throws  IllegalArgumentException  {      [BUGGY]  for(int  i  =  0;  i  <  numArgs;  ++i)  {  OptionBuilder.this.append(opt);  }  [BUGGY]      return  create(String.valueOf(opt));  }  [CLASS]  OptionBuilder  [METHOD]  create  [RETURN_TYPE]  Option  char  opt  [VARIABLES]  boolean  hasArg  newRequired  optionalArg  required  OptionBuilder  instance  char  opt  sep  valuesep  Object  newType  type  String  argName  description  longopt  name  newDescription  newLongopt  int  num  numArgs  numberOfArgs  	projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java	0.3779644730092272	316	316	1	replace	for(int  i  =  0;  i  <  numArgs;  ++i)  {  OptionBuilder.this.append(opt);  }	  for(int    i    =    0;    i    <    numberOfArgs;    ++i)    {    OptionBuilder.this.append(option);    }    	non-compiled	[CE]  <identifier>  expected	21	None	replace
118	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  length;  ++i)  {  OptionBuilder.this.append(option);  }  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      public  static  Option  create(char  opt)  throws  IllegalArgumentException  {      [BUGGY]  for(int  i  =  0;  i  <  length;  ++i)  {  OptionBuilder.this.append(option);  }  [BUGGY]      return  create(String.valueOf(opt));  }  [CLASS]  OptionBuilder  [METHOD]  create  [RETURN_TYPE]  Option  char  opt  [VARIABLES]  boolean  hasArg  newRequired  optionalArg  required  OptionBuilder  instance  char  opt  sep  valuesep  Object  newType  type  String  argName  description  longopt  name  newDescription  newLongopt  int  num  numArgs  numberOfArgs  	projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java	0.3779644730092272	316	316	1	replace	for(int  i  =  0;  i  <  length;  ++i)  {  OptionBuilder.this.append(option);  }	  for(int    i    =    0;    i    <    numberOfArgs;    ++i)    {    OptionBuilder.this.append(option);    }    	non-compiled	[CE]  <identifier>  expected	21	None	replace
119	[BUG]  [BUGGY]  int  numberOfArgs  =  getNumberOfArgs(opt)+  1;  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      public  static  Option  create(char  opt)  throws  IllegalArgumentException  {      [BUGGY]  int  numberOfArgs  =  getNumberOfArgs(opt)+  1;  [BUGGY]      return  create(String.valueOf(opt));  }  [CLASS]  OptionBuilder  [METHOD]  create  [RETURN_TYPE]  Option  char  opt  [VARIABLES]  boolean  hasArg  newRequired  optionalArg  required  OptionBuilder  instance  char  opt  sep  valuesep  Object  newType  type  String  argName  description  longopt  name  newDescription  newLongopt  int  num  numArgs  numberOfArgs  	projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java	0.3779644730092272	316	316	1	replace	int  numberOfArgs  =  getNumberOfArgs(opt)+  1;	  int    numberOfArgs    =    getNumberOfArgs(opt);    	non-compiled	[CE]  <identifier>  expected	63	None	replace
120	[BUG]  [BUGGY]  int  numberOfArgs  =  getNumberOfArgs(longopt);  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      public  static  Option  create(char  opt)  throws  IllegalArgumentException  {      [BUGGY]  int  numberOfArgs  =  getNumberOfArgs(longopt);  [BUGGY]      return  create(String.valueOf(opt));  }  [CLASS]  OptionBuilder  [METHOD]  create  [RETURN_TYPE]  Option  char  opt  [VARIABLES]  boolean  hasArg  newRequired  optionalArg  required  OptionBuilder  instance  char  opt  sep  valuesep  Object  newType  type  String  argName  description  longopt  name  newDescription  newLongopt  int  num  numArgs  numberOfArgs  	projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java	0.3779644730092272	316	316	1	replace	int  numberOfArgs  =  getNumberOfArgs(longopt);	  int    numberOfArgs    =    getNumberOfArgs(opt);    	non-compiled	[CE]  <identifier>  expected	63	None	replace
121	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  valuesep;  ++i)  {  opt  +=  String.valueOf(numberOfArgs);  }  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      public  static  Option  create(char  opt)  throws  IllegalArgumentException  {      [BUGGY]  for(int  i  =  0;  i  <  valuesep;  ++i)  {  opt  +=  String.valueOf(numberOfArgs);  }  [BUGGY]      return  create(String.valueOf(opt));  }  [CLASS]  OptionBuilder  [METHOD]  create  [RETURN_TYPE]  Option  char  opt  [VARIABLES]  boolean  hasArg  newRequired  optionalArg  required  OptionBuilder  instance  char  opt  sep  valuesep  Object  newType  type  String  argName  description  longopt  name  newDescription  newLongopt  int  num  numArgs  numberOfArgs  	projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java	0.3779644730092272	316	316	1	replace	for(int  i  =  0;  i  <  valuesep;  ++i)  {  opt  +=  String.valueOf(numberOfArgs);  }	  for(int    i    =    0;    i    <    numberOfArgs;    ++i)    {    opt    +=    String.valueOf(numberOfArgs);    }    	non-compiled	[CE]  <identifier>  expected	6	None	replace
122	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  numberOfArgs  -  1;  ++i)  {  opt  +=  String.valueOf(numberOfArgs);  }  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]      public  static  Option  create(char  opt)  throws  IllegalArgumentException  {      [BUGGY]  for(int  i  =  0;  i  <  numberOfArgs  -  1;  ++i)  {  opt  +=  String.valueOf(numberOfArgs);  }  [BUGGY]      return  create(String.valueOf(opt));  }  [CLASS]  OptionBuilder  [METHOD]  create  [RETURN_TYPE]  Option  char  opt  [VARIABLES]  boolean  hasArg  newRequired  optionalArg  required  OptionBuilder  instance  char  opt  sep  valuesep  Object  newType  type  String  argName  description  longopt  name  newDescription  newLongopt  int  num  numArgs  numberOfArgs  	projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java	0.3779644730092272	316	316	1	replace	for(int  i  =  0;  i  <  numberOfArgs  -  1;  ++i)  {  opt  +=  String.valueOf(numberOfArgs);  }	  for(int    i    =    0;    i    <    numberOfArgs;    ++i)    {    opt    +=    String.valueOf(numberOfArgs);    }    	non-compiled	[CE]  <identifier>  expected	6	None	replace
123	[BUG]  [BUGGY]  if(opt  ==  null)  {  for(int  i  =  0;  i  <  numArgs;  ++i)  {  opt  =  getValue(i,  null);  }  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      public  static  Option  create(char  opt)  throws  IllegalArgumentException  {      [BUGGY]  if(opt  ==  null)  {  for(int  i  =  0;  i  <  numArgs;  ++i)  {  opt  =  getValue(i,  null);  }  [BUGGY]      return  create(String.valueOf(opt));  }  [CLASS]  OptionBuilder  [METHOD]  create  [RETURN_TYPE]  Option  char  opt  [VARIABLES]  boolean  hasArg  newRequired  optionalArg  required  OptionBuilder  instance  char  opt  sep  valuesep  Object  newType  type  String  argName  description  longopt  name  newDescription  newLongopt  int  num  numArgs  numberOfArgs  	projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java	0.3779644730092272	316	316	1	replace	if(opt  ==  null)  {  for(int  i  =  0;  i  <  numArgs;  ++i)  {  opt  =  getValue(i,  null);  }	  if(opt    ==    null)    {    for(int    i    =    0;    i    <    numberOfArgs;    ++i)    {    opt    =    getValue(i,    null);    }    	non-compiled	[CE]  <identifier>  expected	66	None	replace
124	[BUG]  [BUGGY]  if(opt  ==  null)  {  for(int  i  =  0;  i  <  numberOfArgs;  ++i)  {  opt  =  getValue(i);  }  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      public  static  Option  create(char  opt)  throws  IllegalArgumentException  {      [BUGGY]  if(opt  ==  null)  {  for(int  i  =  0;  i  <  numberOfArgs;  ++i)  {  opt  =  getValue(i);  }  [BUGGY]      return  create(String.valueOf(opt));  }  [CLASS]  OptionBuilder  [METHOD]  create  [RETURN_TYPE]  Option  char  opt  [VARIABLES]  boolean  hasArg  newRequired  optionalArg  required  OptionBuilder  instance  char  opt  sep  valuesep  Object  newType  type  String  argName  description  longopt  name  newDescription  newLongopt  int  num  numArgs  numberOfArgs  	projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java	0.3779644730092272	316	316	1	replace	if(opt  ==  null)  {  for(int  i  =  0;  i  <  numberOfArgs;  ++i)  {  opt  =  getValue(i);  }	  if(opt    ==    null)    {    for(int    i    =    0;    i    <    numberOfArgs;    ++i)    {    opt    =    getValue(i,    null);    }    	non-compiled	[CE]  <identifier>  expected	66	None	replace
125	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  numArgs;  ++i)  {  opt  =  getValue(i,  null);  }  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      public  static  Option  create(char  opt)  throws  IllegalArgumentException  {      [BUGGY]  for(int  i  =  0;  i  <  numArgs;  ++i)  {  opt  =  getValue(i,  null);  }  [BUGGY]      return  create(String.valueOf(opt));  }  [CLASS]  OptionBuilder  [METHOD]  create  [RETURN_TYPE]  Option  char  opt  [VARIABLES]  boolean  hasArg  newRequired  optionalArg  required  OptionBuilder  instance  char  opt  sep  valuesep  Object  newType  type  String  argName  description  longopt  name  newDescription  newLongopt  int  num  numArgs  numberOfArgs  	projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java	0.3779644730092272	316	316	1	replace	for(int  i  =  0;  i  <  numArgs;  ++i)  {  opt  =  getValue(i,  null);  }	  for(int    i    =    0;    i    <    numberOfArgs;    ++i)    {    opt    =    getValue(i,    null);    }    	non-compiled	[CE]  <identifier>  expected	54	None	replace
126	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  valuesep;  ++i)  {  opt  =  getValue(i,  null);  }  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      public  static  Option  create(char  opt)  throws  IllegalArgumentException  {      [BUGGY]  for(int  i  =  0;  i  <  valuesep;  ++i)  {  opt  =  getValue(i,  null);  }  [BUGGY]      return  create(String.valueOf(opt));  }  [CLASS]  OptionBuilder  [METHOD]  create  [RETURN_TYPE]  Option  char  opt  [VARIABLES]  boolean  hasArg  newRequired  optionalArg  required  OptionBuilder  instance  char  opt  sep  valuesep  Object  newType  type  String  argName  description  longopt  name  newDescription  newLongopt  int  num  numArgs  numberOfArgs  	projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java	0.3779644730092272	316	316	1	replace	for(int  i  =  0;  i  <  valuesep;  ++i)  {  opt  =  getValue(i,  null);  }	  for(int    i    =    0;    i    <    numberOfArgs;    ++i)    {    opt    =    getValue(i,    null);    }    	non-compiled	[CE]  <identifier>  expected	54	None	replace
127	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  length;  ++i)  {  opt  =  getValue(i,  null);  }  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      public  static  Option  create(char  opt)  throws  IllegalArgumentException  {      [BUGGY]  for(int  i  =  0;  i  <  length;  ++i)  {  opt  =  getValue(i,  null);  }  [BUGGY]      return  create(String.valueOf(opt));  }  [CLASS]  OptionBuilder  [METHOD]  create  [RETURN_TYPE]  Option  char  opt  [VARIABLES]  boolean  hasArg  newRequired  optionalArg  required  OptionBuilder  instance  char  opt  sep  valuesep  Object  newType  type  String  argName  description  longopt  name  newDescription  newLongopt  int  num  numArgs  numberOfArgs  	projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java	0.3779644730092272	316	316	1	replace	for(int  i  =  0;  i  <  length;  ++i)  {  opt  =  getValue(i,  null);  }	  for(int    i    =    0;    i    <    numberOfArgs;    ++i)    {    opt    =    getValue(i,    null);    }    	non-compiled	[CE]  <identifier>  expected	54	None	replace
128	[BUG]  [BUGGY]  Integer  numberOfArgs  =  getNumberOfArgs(number);  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      public  static  Option  create(char  opt)  throws  IllegalArgumentException  {      [BUGGY]  Integer  numberOfArgs  =  getNumberOfArgs(number);  [BUGGY]      return  create(String.valueOf(opt));  }  [CLASS]  OptionBuilder  [METHOD]  create  [RETURN_TYPE]  Option  char  opt  [VARIABLES]  boolean  hasArg  newRequired  optionalArg  required  OptionBuilder  instance  char  opt  sep  valuesep  Object  newType  type  String  argName  description  longopt  name  newDescription  newLongopt  int  num  numArgs  numberOfArgs  	projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java	0.3779644730092272	316	316	1	replace	Integer  numberOfArgs  =  getNumberOfArgs(number);	  Integer    numberOfArgs    =    getNumberOfArgs();    	non-compiled	[CE]  <identifier>  expected	12	None	replace
129	[BUG]  [BUGGY]  Integer  numberOfArgs  =  getNumberOfArgs()  +  1;  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      public  static  Option  create(char  opt)  throws  IllegalArgumentException  {      [BUGGY]  Integer  numberOfArgs  =  getNumberOfArgs()  +  1;  [BUGGY]      return  create(String.valueOf(opt));  }  [CLASS]  OptionBuilder  [METHOD]  create  [RETURN_TYPE]  Option  char  opt  [VARIABLES]  boolean  hasArg  newRequired  optionalArg  required  OptionBuilder  instance  char  opt  sep  valuesep  Object  newType  type  String  argName  description  longopt  name  newDescription  newLongopt  int  num  numArgs  numberOfArgs  	projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java	0.3779644730092272	316	316	1	replace	Integer  numberOfArgs  =  getNumberOfArgs()  +  1;	  Integer    numberOfArgs    =    getNumberOfArgs();    	non-compiled	[CE]  <identifier>  expected	12	None	replace
130	[BUG]  [BUGGY]  Integer  numberOfArgs  =  getNumberOfArgs()  -  1;  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      public  static  Option  create(char  opt)  throws  IllegalArgumentException  {      [BUGGY]  Integer  numberOfArgs  =  getNumberOfArgs()  -  1;  [BUGGY]      return  create(String.valueOf(opt));  }  [CLASS]  OptionBuilder  [METHOD]  create  [RETURN_TYPE]  Option  char  opt  [VARIABLES]  boolean  hasArg  newRequired  optionalArg  required  OptionBuilder  instance  char  opt  sep  valuesep  Object  newType  type  String  argName  description  longopt  name  newDescription  newLongopt  int  num  numArgs  numberOfArgs  	projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java	0.3779644730092272	316	316	1	replace	Integer  numberOfArgs  =  getNumberOfArgs()  -  1;	  Integer    numberOfArgs    =    getNumberOfArgs();    	non-compiled	[CE]  <identifier>  expected	12	None	replace
131	[BUG]  [BUGGY]  ||  opt  ==  Long.MAX_VALUE)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      public  static  Option  create(char  opt)  throws  IllegalArgumentException  {      [BUGGY]  ||  opt  ==  Long.MAX_VALUE)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      return  create(String.valueOf(opt));  }  [CLASS]  OptionBuilder  [METHOD]  create  [RETURN_TYPE]  Option  char  opt  [VARIABLES]  boolean  hasArg  newRequired  optionalArg  required  OptionBuilder  instance  char  opt  sep  valuesep  Object  newType  type  String  argName  description  longopt  name  newDescription  newLongopt  int  num  numArgs  numberOfArgs  	projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java	0.3779644730092272	316	316	1	replace	||  opt  ==  Long.MAX_VALUE)  {  throw  new  IllegalArgumentException( " ");  }	  if(opt    ==    Long.MIN_VALUE    ||    opt    ==    Long.MAX_VALUE)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  <identifier>  expected	70	None	replace
132	[BUG]  [BUGGY]  if(opt!=  Long.MIN_VALUE  ||  opt  ==  Long.MAX_VALUE)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      public  static  Option  create(char  opt)  throws  IllegalArgumentException  {      [BUGGY]  if(opt!=  Long.MIN_VALUE  ||  opt  ==  Long.MAX_VALUE)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      return  create(String.valueOf(opt));  }  [CLASS]  OptionBuilder  [METHOD]  create  [RETURN_TYPE]  Option  char  opt  [VARIABLES]  boolean  hasArg  newRequired  optionalArg  required  OptionBuilder  instance  char  opt  sep  valuesep  Object  newType  type  String  argName  description  longopt  name  newDescription  newLongopt  int  num  numArgs  numberOfArgs  	projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java	0.3779644730092272	316	316	1	replace	if(opt!=  Long.MIN_VALUE  ||  opt  ==  Long.MAX_VALUE)  {  throw  new  IllegalArgumentException( " ");  }	  if(opt    ==    Long.MIN_VALUE    ||    opt    ==    Long.MAX_VALUE)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  <identifier>  expected	70	None	replace
133	[BUG]  [BUGGY]  if(opt  ==  Long.MIN_VALUE  ||  opt!=  Long.MAX_VALUE)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      public  static  Option  create(char  opt)  throws  IllegalArgumentException  {      [BUGGY]  if(opt  ==  Long.MIN_VALUE  ||  opt!=  Long.MAX_VALUE)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      return  create(String.valueOf(opt));  }  [CLASS]  OptionBuilder  [METHOD]  create  [RETURN_TYPE]  Option  char  opt  [VARIABLES]  boolean  hasArg  newRequired  optionalArg  required  OptionBuilder  instance  char  opt  sep  valuesep  Object  newType  type  String  argName  description  longopt  name  newDescription  newLongopt  int  num  numArgs  numberOfArgs  	projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java	0.3779644730092272	316	316	1	replace	if(opt  ==  Long.MIN_VALUE  ||  opt!=  Long.MAX_VALUE)  {  throw  new  IllegalArgumentException( " ");  }	  if(opt    ==    Long.MIN_VALUE    ||    opt    ==    Long.MAX_VALUE)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  <identifier>  expected	70	None	replace
134	[BUG]  [BUGGY]  int  numberOfArgs  =  Integer.MIN_VALUE;  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      public  static  Option  create(char  opt)  throws  IllegalArgumentException  {      [BUGGY]  int  numberOfArgs  =  Integer.MIN_VALUE;  [BUGGY]      return  create(String.valueOf(opt));  }  [CLASS]  OptionBuilder  [METHOD]  create  [RETURN_TYPE]  Option  char  opt  [VARIABLES]  boolean  hasArg  newRequired  optionalArg  required  OptionBuilder  instance  char  opt  sep  valuesep  Object  newType  type  String  argName  description  longopt  name  newDescription  newLongopt  int  num  numArgs  numberOfArgs  	projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java	0.3779644730092272	316	316	1	replace	int  numberOfArgs  =  Integer.MIN_VALUE;	  if(numberOfArgs    ==    Long.MIN_VALUE)    {    return    create(String.valueOf(opt));    }    	non-compiled	[CE]  <identifier>  expected	75	None	replace
135	[BUG]  [BUGGY]  if(numberOfArgs  ==  Long.MIN_VALUE)  {  return  create(Long.valueOf(opt));  }  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      public  static  Option  create(char  opt)  throws  IllegalArgumentException  {      [BUGGY]  if(numberOfArgs  ==  Long.MIN_VALUE)  {  return  create(Long.valueOf(opt));  }  [BUGGY]      return  create(String.valueOf(opt));  }  [CLASS]  OptionBuilder  [METHOD]  create  [RETURN_TYPE]  Option  char  opt  [VARIABLES]  boolean  hasArg  newRequired  optionalArg  required  OptionBuilder  instance  char  opt  sep  valuesep  Object  newType  type  String  argName  description  longopt  name  newDescription  newLongopt  int  num  numArgs  numberOfArgs  	projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java	0.3779644730092272	316	316	1	replace	if(numberOfArgs  ==  Long.MIN_VALUE)  {  return  create(Long.valueOf(opt));  }	  if(numberOfArgs    ==    Long.MIN_VALUE)    {    return    create(String.valueOf(opt));    }    	non-compiled	[CE]  <identifier>  expected	75	None	replace
136	[BUG]  [BUGGY]  if(opt!=  Long.MIN_VALUE  ||  opt  ==  Long.MAX_VALUE)  {  return  create(String.valueOf(opt));  }  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      public  static  Option  create(char  opt)  throws  IllegalArgumentException  {      [BUGGY]  if(opt!=  Long.MIN_VALUE  ||  opt  ==  Long.MAX_VALUE)  {  return  create(String.valueOf(opt));  }  [BUGGY]      return  create(String.valueOf(opt));  }  [CLASS]  OptionBuilder  [METHOD]  create  [RETURN_TYPE]  Option  char  opt  [VARIABLES]  boolean  hasArg  newRequired  optionalArg  required  OptionBuilder  instance  char  opt  sep  valuesep  Object  newType  type  String  argName  description  longopt  name  newDescription  newLongopt  int  num  numArgs  numberOfArgs  	projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java	0.3779644730092272	316	316	1	replace	if(opt!=  Long.MIN_VALUE  ||  opt  ==  Long.MAX_VALUE)  {  return  create(String.valueOf(opt));  }	  if(opt!=    Long.MIN_VALUE)    {    return    create(String.valueOf(opt));    }    	non-compiled	[CE]  <identifier>  expected	109	None	replace
137	[BUG]  [BUGGY]  OptionBuilder  instance  =(OptionBuilder)type.clone();  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]      public  static  Option  create(char  opt)  throws  IllegalArgumentException  {      [BUGGY]  OptionBuilder  instance  =(OptionBuilder)type.clone();  [BUGGY]      return  create(String.valueOf(opt));  }  [CLASS]  OptionBuilder  [METHOD]  create  [RETURN_TYPE]  Option  char  opt  [VARIABLES]  boolean  hasArg  newRequired  optionalArg  required  OptionBuilder  instance  char  opt  sep  valuesep  Object  newType  type  String  argName  description  longopt  name  newDescription  newLongopt  int  num  numArgs  numberOfArgs  	projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java	0.3779644730092272	316	316	1	replace	OptionBuilder  instance  =(OptionBuilder)type.clone();	  OptionBuilder    instance    =(OptionBuilder)type.getValue();    	non-compiled	[CE]  <identifier>  expected	84	None	replace
138	[BUG]  [BUGGY]  OptionBuilder  instance  =(OptionBuilder)type.getKey();  [CE]  <identifier>  expected  [FE]                          AssertionFailedError      [CONTEXT]      public  static  Option  create(char  opt)  throws  IllegalArgumentException  {      [BUGGY]  OptionBuilder  instance  =(OptionBuilder)type.getKey();  [BUGGY]      return  create(String.valueOf(opt));  }  [CLASS]  OptionBuilder  [METHOD]  create  [RETURN_TYPE]  Option  char  opt  [VARIABLES]  boolean  hasArg  newRequired  optionalArg  required  OptionBuilder  instance  char  opt  sep  valuesep  Object  newType  type  String  argName  description  longopt  name  newDescription  newLongopt  int  num  numArgs  numberOfArgs  	projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java	0.3779644730092272	316	316	1	replace	OptionBuilder  instance  =(OptionBuilder)type.getKey();	  OptionBuilder    instance    =(OptionBuilder)type.getValue();    	non-compiled	[CE]  <identifier>  expected	84	None	replace
139	[BUG]  [BUGGY]  OptionBuilder  instance  =(OptionBuilder)this.type.getValue();  [CE]  <identifier>  expected  [FE]                            AssertionFailedError      [CONTEXT]      public  static  Option  create(char  opt)  throws  IllegalArgumentException  {      [BUGGY]  OptionBuilder  instance  =(OptionBuilder)this.type.getValue();  [BUGGY]      return  create(String.valueOf(opt));  }  [CLASS]  OptionBuilder  [METHOD]  create  [RETURN_TYPE]  Option  char  opt  [VARIABLES]  boolean  hasArg  newRequired  optionalArg  required  OptionBuilder  instance  char  opt  sep  valuesep  Object  newType  type  String  argName  description  longopt  name  newDescription  newLongopt  int  num  numArgs  numberOfArgs  	projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java	0.3779644730092272	316	316	1	replace	OptionBuilder  instance  =(OptionBuilder)this.type.getValue();	  OptionBuilder    instance    =(OptionBuilder)type.getValue();    	non-compiled	[CE]  <identifier>  expected	84	None	replace
140	[BUG]  [BUGGY]  return  create(opt,  String.valueOf(newLongopt));  [CE]  <identifier>  expected  [FE]            AssertionFailedError      [CONTEXT]      public  static  Option  create(char  opt)  throws  IllegalArgumentException  {      [BUGGY]  return  create(opt,  String.valueOf(newLongopt));  [BUGGY]      }  [CLASS]  OptionBuilder  [METHOD]  create  [RETURN_TYPE]  Option  char  opt  [VARIABLES]  boolean  hasArg  newRequired  optionalArg  required  OptionBuilder  instance  char  opt  sep  valuesep  Object  newType  type  String  argName  description  longopt  name  newDescription  newLongopt  int  num  numArgs  numberOfArgs  	projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java	0.3779644730092272	316	316	1	replace	return  create(opt,  String.valueOf(newLongopt));	  return    create(newLongopt,    String.valueOf(opt));    	non-compiled	[CE]  <identifier>  expected	91	None	replace
141	[BUG]  [BUGGY]  int  numberOfArgs  =  Integer.parseInt(opt);  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      public  static  Option  create(char  opt)  throws  IllegalArgumentException  {      [BUGGY]  int  numberOfArgs  =  Integer.parseInt(opt);  [BUGGY]      return  create(String.valueOf(opt));  }  [CLASS]  OptionBuilder  [METHOD]  create  [RETURN_TYPE]  Option  char  opt  [VARIABLES]  boolean  hasArg  newRequired  optionalArg  required  OptionBuilder  instance  char  opt  sep  valuesep  Object  newType  type  String  argName  description  longopt  name  newDescription  newLongopt  int  num  numArgs  numberOfArgs  	projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java	0.3779644730092272	316	316	1	replace	int  numberOfArgs  =  Integer.parseInt(opt);	  if(numberOfArgs    ==    Long.MIN_VALUE)    {    return    create(String.valueOf(opt));    }    else    {    return    new    OptionBuilder();    }    	non-compiled	[CE]  <identifier>  expected	14	None	replace
142	[BUG]  [BUGGY]  if(opt!=  null  ||  opt.length()  ==  0)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      public  static  Option  create(char  opt)  throws  IllegalArgumentException  {      [BUGGY]  if(opt!=  null  ||  opt.length()  ==  0)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      return  create(String.valueOf(opt));  }  [CLASS]  OptionBuilder  [METHOD]  create  [RETURN_TYPE]  Option  char  opt  [VARIABLES]  boolean  hasArg  newRequired  optionalArg  required  OptionBuilder  instance  char  opt  sep  valuesep  Object  newType  type  String  argName  description  longopt  name  newDescription  newLongopt  int  num  numArgs  numberOfArgs  	projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java	0.3779644730092272	316	316	1	replace	if(opt!=  null  ||  opt.length()  ==  0)  {  throw  new  IllegalArgumentException( " ");  }	  if(opt    ==    null    ||    opt.length()    ==    0)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  <identifier>  expected	73	None	replace
143	[BUG]  [BUGGY]  ||  opt.length()  ==  0)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      public  static  Option  create(char  opt)  throws  IllegalArgumentException  {      [BUGGY]  ||  opt.length()  ==  0)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      return  create(String.valueOf(opt));  }  [CLASS]  OptionBuilder  [METHOD]  create  [RETURN_TYPE]  Option  char  opt  [VARIABLES]  boolean  hasArg  newRequired  optionalArg  required  OptionBuilder  instance  char  opt  sep  valuesep  Object  newType  type  String  argName  description  longopt  name  newDescription  newLongopt  int  num  numArgs  numberOfArgs  	projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java	0.3779644730092272	316	316	1	replace	||  opt.length()  ==  0)  {  throw  new  IllegalArgumentException( " ");  }	  if(opt    ==    null    ||    opt.length()    ==    0)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  <identifier>  expected	73	None	replace
144	[BUG]  [BUGGY]  Integer.toString(opt)  ==  0)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      public  static  Option  create(char  opt)  throws  IllegalArgumentException  {      [BUGGY]  Integer.toString(opt)  ==  0)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      return  create(String.valueOf(opt));  }  [CLASS]  OptionBuilder  [METHOD]  create  [RETURN_TYPE]  Option  char  opt  [VARIABLES]  boolean  hasArg  newRequired  optionalArg  required  OptionBuilder  instance  char  opt  sep  valuesep  Object  newType  type  String  argName  description  longopt  name  newDescription  newLongopt  int  num  numArgs  numberOfArgs  	projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java	0.3779644730092272	316	316	1	replace	Integer.toString(opt)  ==  0)  {  throw  new  IllegalArgumentException( " ");  }	  Integer.toString(opt)    ==    Long.MIN_VALUE)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  <identifier>  expected	18	None	replace
145	[BUG]  [BUGGY]  Integer.valueOf(opt)  ==  Long.MIN_VALUE)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      public  static  Option  create(char  opt)  throws  IllegalArgumentException  {      [BUGGY]  Integer.valueOf(opt)  ==  Long.MIN_VALUE)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      return  create(String.valueOf(opt));  }  [CLASS]  OptionBuilder  [METHOD]  create  [RETURN_TYPE]  Option  char  opt  [VARIABLES]  boolean  hasArg  newRequired  optionalArg  required  OptionBuilder  instance  char  opt  sep  valuesep  Object  newType  type  String  argName  description  longopt  name  newDescription  newLongopt  int  num  numArgs  numberOfArgs  	projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java	0.3779644730092272	316	316	1	replace	Integer.valueOf(opt)  ==  Long.MIN_VALUE)  {  throw  new  IllegalArgumentException( " ");  }	  Integer.toString(opt)    ==    Long.MIN_VALUE)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  <identifier>  expected	18	None	replace
146	[BUG]  [BUGGY]  Integer.toString(opt)  ==  0,  throw  new  IllegalArgumentException( " ");  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      public  static  Option  create(char  opt)  throws  IllegalArgumentException  {      [BUGGY]  Integer.toString(opt)  ==  0,  throw  new  IllegalArgumentException( " ");  [BUGGY]      return  create(String.valueOf(opt));  }  [CLASS]  OptionBuilder  [METHOD]  create  [RETURN_TYPE]  Option  char  opt  [VARIABLES]  boolean  hasArg  newRequired  optionalArg  required  OptionBuilder  instance  char  opt  sep  valuesep  Object  newType  type  String  argName  description  longopt  name  newDescription  newLongopt  int  num  numArgs  numberOfArgs  	projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java	0.3779644730092272	316	316	1	replace	Integer.toString(opt)  ==  0,  throw  new  IllegalArgumentException( " ");	  Integer.toString(opt)    ==    Long.MIN_VALUE)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  <identifier>  expected	18	None	replace
147	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  numberOfArgs;  ++i)  {  OptionBuilder.this.append(longopt);  }  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      public  static  Option  create(char  opt)  throws  IllegalArgumentException  {      [BUGGY]  for(int  i  =  0;  i  <  numberOfArgs;  ++i)  {  OptionBuilder.this.append(longopt);  }  [BUGGY]      return  create(String.valueOf(opt));  }  [CLASS]  OptionBuilder  [METHOD]  create  [RETURN_TYPE]  Option  char  opt  [VARIABLES]  boolean  hasArg  newRequired  optionalArg  required  OptionBuilder  instance  char  opt  sep  valuesep  Object  newType  type  String  argName  description  longopt  name  newDescription  newLongopt  int  num  numArgs  numberOfArgs  	projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java	0.3779644730092272	316	316	1	replace	for(int  i  =  0;  i  <  numberOfArgs;  ++i)  {  OptionBuilder.this.append(longopt);  }	  if(numberOfArgs    >    0)    {    for(int    i    =    0;    i    <    numberOfArgs;    ++i)    {    OptionBuilder.this.append(longopt);    }    	non-compiled	[CE]  <identifier>  expected	64	None	replace
148	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  numberOfArgs;  ++i)  {  OptionsBuilder.this.append(longopt);  }  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      public  static  Option  create(char  opt)  throws  IllegalArgumentException  {      [BUGGY]  for(int  i  =  0;  i  <  numberOfArgs;  ++i)  {  OptionsBuilder.this.append(longopt);  }  [BUGGY]      return  create(String.valueOf(opt));  }  [CLASS]  OptionBuilder  [METHOD]  create  [RETURN_TYPE]  Option  char  opt  [VARIABLES]  boolean  hasArg  newRequired  optionalArg  required  OptionBuilder  instance  char  opt  sep  valuesep  Object  newType  type  String  argName  description  longopt  name  newDescription  newLongopt  int  num  numArgs  numberOfArgs  	projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java	0.3779644730092272	316	316	1	replace	for(int  i  =  0;  i  <  numberOfArgs;  ++i)  {  OptionsBuilder.this.append(longopt);  }	  if(numberOfArgs    >    0)    {    for(int    i    =    0;    i    <    numberOfArgs;    ++i)    {    OptionBuilder.this.append(longopt);    }    	non-compiled	[CE]  <identifier>  expected	64	None	replace
149	[BUG]  [BUGGY]  return  create(String.valueOf(opt)+  1).toLowerCase(Long.valueOf(numberOfArgs));  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      public  static  Option  create(char  opt)  throws  IllegalArgumentException  {      [BUGGY]  return  create(String.valueOf(opt)+  1).toLowerCase(Long.valueOf(numberOfArgs));  [BUGGY]      }  [CLASS]  OptionBuilder  [METHOD]  create  [RETURN_TYPE]  Option  char  opt  [VARIABLES]  boolean  hasArg  newRequired  optionalArg  required  OptionBuilder  instance  char  opt  sep  valuesep  Object  newType  type  String  argName  description  longopt  name  newDescription  newLongopt  int  num  numArgs  numberOfArgs  	projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java	0.3779644730092272	316	316	1	replace	return  create(String.valueOf(opt)+  1).toLowerCase(Long.valueOf(numberOfArgs));	  return    create(String.valueOf(opt)+    1).toLowerCase();    	non-compiled	[CE]  <identifier>  expected	49	None	replace
150	[BUG]  [BUGGY]  return  create(String.valueOf(opt)+  2).toLowerCase();  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      public  static  Option  create(char  opt)  throws  IllegalArgumentException  {      [BUGGY]  return  create(String.valueOf(opt)+  2).toLowerCase();  [BUGGY]      }  [CLASS]  OptionBuilder  [METHOD]  create  [RETURN_TYPE]  Option  char  opt  [VARIABLES]  boolean  hasArg  newRequired  optionalArg  required  OptionBuilder  instance  char  opt  sep  valuesep  Object  newType  type  String  argName  description  longopt  name  newDescription  newLongopt  int  num  numArgs  numberOfArgs  	projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java	0.3779644730092272	316	316	1	replace	return  create(String.valueOf(opt)+  2).toLowerCase();	  return    create(String.valueOf(opt)+    1).toLowerCase();    	non-compiled	[CE]  <identifier>  expected	49	None	replace
151	[BUG]  [BUGGY]  return  create(String.valueOf(opt)+  1000).toLowerCase();  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      public  static  Option  create(char  opt)  throws  IllegalArgumentException  {      [BUGGY]  return  create(String.valueOf(opt)+  1000).toLowerCase();  [BUGGY]      }  [CLASS]  OptionBuilder  [METHOD]  create  [RETURN_TYPE]  Option  char  opt  [VARIABLES]  boolean  hasArg  newRequired  optionalArg  required  OptionBuilder  instance  char  opt  sep  valuesep  Object  newType  type  String  argName  description  longopt  name  newDescription  newLongopt  int  num  numArgs  numberOfArgs  	projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java	0.3779644730092272	316	316	1	replace	return  create(String.valueOf(opt)+  1000).toLowerCase();	  return    create(String.valueOf(opt)+    1).toLowerCase();    	non-compiled	[CE]  <identifier>  expected	49	None	replace
152	[BUG]  [BUGGY]  if(numberOfArgs  ==  1)  {  if(opt  ==  Long.MIN_VALUE)  {  return  create(String.valueOf(opt));  }  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]      public  static  Option  create(char  opt)  throws  IllegalArgumentException  {      [BUGGY]  if(numberOfArgs  ==  1)  {  if(opt  ==  Long.MIN_VALUE)  {  return  create(String.valueOf(opt));  }  [BUGGY]      return  create(String.valueOf(opt));  }  [CLASS]  OptionBuilder  [METHOD]  create  [RETURN_TYPE]  Option  char  opt  [VARIABLES]  boolean  hasArg  newRequired  optionalArg  required  OptionBuilder  instance  char  opt  sep  valuesep  Object  newType  type  String  argName  description  longopt  name  newDescription  newLongopt  int  num  numArgs  numberOfArgs  	projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java	0.3779644730092272	316	316	1	replace	if(numberOfArgs  ==  1)  {  if(opt  ==  Long.MIN_VALUE)  {  return  create(String.valueOf(opt));  }	  allowNumberOfArgs(numberOfArgs)    {    if(opt    ==    Long.MIN_VALUE)    {    return    create(String.valueOf(opt));    }    	non-compiled	[CE]  <identifier>  expected	34	None	replace
153	[BUG]  [BUGGY]  allowNumberOfArgs(numberOfArgs)  {  if(opt!=  Long.MIN_VALUE)  {  return  create(String.valueOf(opt));  }  [CE]  <identifier>  expected  [FE]                          AssertionFailedError      [CONTEXT]      public  static  Option  create(char  opt)  throws  IllegalArgumentException  {      [BUGGY]  allowNumberOfArgs(numberOfArgs)  {  if(opt!=  Long.MIN_VALUE)  {  return  create(String.valueOf(opt));  }  [BUGGY]      return  create(String.valueOf(opt));  }  [CLASS]  OptionBuilder  [METHOD]  create  [RETURN_TYPE]  Option  char  opt  [VARIABLES]  boolean  hasArg  newRequired  optionalArg  required  OptionBuilder  instance  char  opt  sep  valuesep  Object  newType  type  String  argName  description  longopt  name  newDescription  newLongopt  int  num  numArgs  numberOfArgs  	projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java	0.3779644730092272	316	316	1	replace	allowNumberOfArgs(numberOfArgs)  {  if(opt!=  Long.MIN_VALUE)  {  return  create(String.valueOf(opt));  }	  allowNumberOfArgs(numberOfArgs)    {    if(opt    ==    Long.MIN_VALUE)    {    return    create(String.valueOf(opt));    }    	non-compiled	[CE]  <identifier>  expected	34	None	replace
154	[BUG]  [BUGGY]  allowNumberOfArgs(numberOfArgs)  {  if(opt  ==  Long.MIN_VALUE  ||  opt  ==  Long.MAX_VALUE)  {  return  create(String.valueOf(opt));  }  [CE]  <identifier>  expected  [FE]                            AssertionFailedError      [CONTEXT]      public  static  Option  create(char  opt)  throws  IllegalArgumentException  {      [BUGGY]  allowNumberOfArgs(numberOfArgs)  {  if(opt  ==  Long.MIN_VALUE  ||  opt  ==  Long.MAX_VALUE)  {  return  create(String.valueOf(opt));  }  [BUGGY]      return  create(String.valueOf(opt));  }  [CLASS]  OptionBuilder  [METHOD]  create  [RETURN_TYPE]  Option  char  opt  [VARIABLES]  boolean  hasArg  newRequired  optionalArg  required  OptionBuilder  instance  char  opt  sep  valuesep  Object  newType  type  String  argName  description  longopt  name  newDescription  newLongopt  int  num  numArgs  numberOfArgs  	projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java	0.3779644730092272	316	316	1	replace	allowNumberOfArgs(numberOfArgs)  {  if(opt  ==  Long.MIN_VALUE  ||  opt  ==  Long.MAX_VALUE)  {  return  create(String.valueOf(opt));  }	  allowNumberOfArgs(numberOfArgs)    {    if(opt    ==    Long.MIN_VALUE)    {    return    create(String.valueOf(opt));    }    	non-compiled	[CE]  <identifier>  expected	34	None	replace
155	[BUG]  [BUGGY]  return  create(String.valueOf(opt)/  2);  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      public  static  Option  create(char  opt)  throws  IllegalArgumentException  {      [BUGGY]  return  create(String.valueOf(opt)/  2);  [BUGGY]      }  [CLASS]  OptionBuilder  [METHOD]  create  [RETURN_TYPE]  Option  char  opt  [VARIABLES]  boolean  hasArg  newRequired  optionalArg  required  OptionBuilder  instance  char  opt  sep  valuesep  Object  newType  type  String  argName  description  longopt  name  newDescription  newLongopt  int  num  numArgs  numberOfArgs  	projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java	0.3779644730092272	316	316	1	replace	return  create(String.valueOf(opt)/  2);	  return    create(String.valueOf(opt)+    2);    	non-compiled	[CE]  <identifier>  expected	88	None	replace
156	[BUG]  [BUGGY]  if(opt!=  null  ||  opt.length()  ==  numArgs)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  <identifier>  expected  [FE]            AssertionFailedError      [CONTEXT]      public  static  Option  create(char  opt)  throws  IllegalArgumentException  {      [BUGGY]  if(opt!=  null  ||  opt.length()  ==  numArgs)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      return  create(String.valueOf(opt));  }  [CLASS]  OptionBuilder  [METHOD]  create  [RETURN_TYPE]  Option  char  opt  [VARIABLES]  boolean  hasArg  newRequired  optionalArg  required  OptionBuilder  instance  char  opt  sep  valuesep  Object  newType  type  String  argName  description  longopt  name  newDescription  newLongopt  int  num  numArgs  numberOfArgs  	projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java	0.3779644730092272	316	316	1	replace	if(opt!=  null  ||  opt.length()  ==  numArgs)  {  throw  new  IllegalArgumentException( " ");  }	  if(opt    ==    null    ||    opt.length()    ==    numArgs)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  <identifier>  expected	89	None	replace
157	[BUG]  [BUGGY]  return  create(opt,  Long.valueOf(longopt));  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      public  static  Option  create(char  opt)  throws  IllegalArgumentException  {      [BUGGY]  return  create(opt,  Long.valueOf(longopt));  [BUGGY]      }  [CLASS]  OptionBuilder  [METHOD]  create  [RETURN_TYPE]  Option  char  opt  [VARIABLES]  boolean  hasArg  newRequired  optionalArg  required  OptionBuilder  instance  char  opt  sep  valuesep  Object  newType  type  String  argName  description  longopt  name  newDescription  newLongopt  int  num  numArgs  numberOfArgs  	projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java	0.3779644730092272	316	316	1	replace	return  create(opt,  Long.valueOf(longopt));	  return    create(longopt,    Long.valueOf(opt));    	non-compiled	[CE]  <identifier>  expected	1	None	replace
158	[BUG]  [BUGGY]  return  create(numberOfArgs,  Long.valueOf(opt));  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      public  static  Option  create(char  opt)  throws  IllegalArgumentException  {      [BUGGY]  return  create(numberOfArgs,  Long.valueOf(opt));  [BUGGY]      }  [CLASS]  OptionBuilder  [METHOD]  create  [RETURN_TYPE]  Option  char  opt  [VARIABLES]  boolean  hasArg  newRequired  optionalArg  required  OptionBuilder  instance  char  opt  sep  valuesep  Object  newType  type  String  argName  description  longopt  name  newDescription  newLongopt  int  num  numArgs  numberOfArgs  	projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java	0.3779644730092272	316	316	1	replace	return  create(numberOfArgs,  Long.valueOf(opt));	  return    create(longopt,    Long.valueOf(opt));    	non-compiled	[CE]  <identifier>  expected	1	None	replace
159	[BUG]  [BUGGY]  return  create(null,  Long.valueOf(opt));  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      public  static  Option  create(char  opt)  throws  IllegalArgumentException  {      [BUGGY]  return  create(null,  Long.valueOf(opt));  [BUGGY]      }  [CLASS]  OptionBuilder  [METHOD]  create  [RETURN_TYPE]  Option  char  opt  [VARIABLES]  boolean  hasArg  newRequired  optionalArg  required  OptionBuilder  instance  char  opt  sep  valuesep  Object  newType  type  String  argName  description  longopt  name  newDescription  newLongopt  int  num  numArgs  numberOfArgs  	projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java	0.3779644730092272	316	316	1	replace	return  create(null,  Long.valueOf(opt));	  return    create(longopt,    Long.valueOf(opt));    	non-compiled	[CE]  <identifier>  expected	1	None	replace
160	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  this.numberOfArgs;  ++i)  {  opt  +=  String.valueOf(opt);  }  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      public  static  Option  create(char  opt)  throws  IllegalArgumentException  {      [BUGGY]  for(int  i  =  0;  i  <  this.numberOfArgs;  ++i)  {  opt  +=  String.valueOf(opt);  }  [BUGGY]      return  create(String.valueOf(opt));  }  [CLASS]  OptionBuilder  [METHOD]  create  [RETURN_TYPE]  Option  char  opt  [VARIABLES]  boolean  hasArg  newRequired  optionalArg  required  OptionBuilder  instance  char  opt  sep  valuesep  Object  newType  type  String  argName  description  longopt  name  newDescription  newLongopt  int  num  numArgs  numberOfArgs  	projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java	0.3779644730092272	316	316	1	replace	for(int  i  =  0;  i  <  this.numberOfArgs;  ++i)  {  opt  +=  String.valueOf(opt);  }	  if(numberOfArgs    >    1)    {    for(int    i    =    0;    i    <    this.numberOfArgs;    ++i)    {    opt    +=    String.valueOf(opt);    }    	non-compiled	[CE]  <identifier>  expected	108	None	replace
161	[BUG]  [BUGGY]  int  numberOfArgs  =  this.numberOfArgs;  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      public  static  Option  create(char  opt)  throws  IllegalArgumentException  {      [BUGGY]  int  numberOfArgs  =  this.numberOfArgs;  [BUGGY]      return  create(String.valueOf(opt));  }  [CLASS]  OptionBuilder  [METHOD]  create  [RETURN_TYPE]  Option  char  opt  [VARIABLES]  boolean  hasArg  newRequired  optionalArg  required  OptionBuilder  instance  char  opt  sep  valuesep  Object  newType  type  String  argName  description  longopt  name  newDescription  newLongopt  int  num  numArgs  numberOfArgs  	projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java	0.3779644730092272	316	316	1	replace	int  numberOfArgs  =  this.numberOfArgs;	  if(numberOfArgs    >    1)    {    for(int    i    =    0;    i    <    this.numberOfArgs;    ++i)    {    opt    +=    String.valueOf(opt);    }    	non-compiled	[CE]  <identifier>  expected	108	None	replace
162	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  numArgs;  ++i)  {  opt  =  i  +  1;  }  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      public  static  Option  create(char  opt)  throws  IllegalArgumentException  {      [BUGGY]  for(int  i  =  0;  i  <  numArgs;  ++i)  {  opt  =  i  +  1;  }  [BUGGY]      return  create(String.valueOf(opt));  }  [CLASS]  OptionBuilder  [METHOD]  create  [RETURN_TYPE]  Option  char  opt  [VARIABLES]  boolean  hasArg  newRequired  optionalArg  required  OptionBuilder  instance  char  opt  sep  valuesep  Object  newType  type  String  argName  description  longopt  name  newDescription  newLongopt  int  num  numArgs  numberOfArgs  	projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java	0.3779644730092272	316	316	1	replace	for(int  i  =  0;  i  <  numArgs;  ++i)  {  opt  =  i  +  1;  }	  if(opt    >    0)    {    for(int    i    =    0;    i    <    numberOfArgs;    ++i)    {    opt    =    i    +    1;    }    	non-compiled	[CE]  <identifier>  expected	62	None	replace
163	[BUG]  [BUGGY]  Thread.currentThread().setContextClassLoader(getRequiredClass(),  opt);  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      public  static  Option  create(char  opt)  throws  IllegalArgumentException  {      [BUGGY]  Thread.currentThread().setContextClassLoader(getRequiredClass(),  opt);  [BUGGY]      return  create(String.valueOf(opt));  }  [CLASS]  OptionBuilder  [METHOD]  create  [RETURN_TYPE]  Option  char  opt  [VARIABLES]  boolean  hasArg  newRequired  optionalArg  required  OptionBuilder  instance  char  opt  sep  valuesep  Object  newType  type  String  argName  description  longopt  name  newDescription  newLongopt  int  num  numArgs  numberOfArgs  	projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java	0.3779644730092272	316	316	1	replace	Thread.currentThread().setContextClassLoader(getRequiredClass(),  opt);	  Thread.currentThread().setContextClassLoader(getRequiredClass());    	non-compiled	[CE]  <identifier>  expected	57	None	replace
164	[BUG]  [BUGGY]  Thread.currentThread().setContextClassLoader(getDescription());  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      public  static  Option  create(char  opt)  throws  IllegalArgumentException  {      [BUGGY]  Thread.currentThread().setContextClassLoader(getDescription());  [BUGGY]      return  create(String.valueOf(opt));  }  [CLASS]  OptionBuilder  [METHOD]  create  [RETURN_TYPE]  Option  char  opt  [VARIABLES]  boolean  hasArg  newRequired  optionalArg  required  OptionBuilder  instance  char  opt  sep  valuesep  Object  newType  type  String  argName  description  longopt  name  newDescription  newLongopt  int  num  numArgs  numberOfArgs  	projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java	0.3779644730092272	316	316	1	replace	Thread.currentThread().setContextClassLoader(getDescription());	  Thread.currentThread().setContextClassLoader(getRequiredClass());    	non-compiled	[CE]  <identifier>  expected	57	None	replace
165	[BUG]  [BUGGY]  Thread.currentThread().setContextClassLoader(getRequiredClass(),  true);  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      public  static  Option  create(char  opt)  throws  IllegalArgumentException  {      [BUGGY]  Thread.currentThread().setContextClassLoader(getRequiredClass(),  true);  [BUGGY]      return  create(String.valueOf(opt));  }  [CLASS]  OptionBuilder  [METHOD]  create  [RETURN_TYPE]  Option  char  opt  [VARIABLES]  boolean  hasArg  newRequired  optionalArg  required  OptionBuilder  instance  char  opt  sep  valuesep  Object  newType  type  String  argName  description  longopt  name  newDescription  newLongopt  int  num  numArgs  numberOfArgs  	projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java	0.3779644730092272	316	316	1	replace	Thread.currentThread().setContextClassLoader(getRequiredClass(),  true);	  Thread.currentThread().setContextClassLoader(getRequiredClass());    	non-compiled	[CE]  <identifier>  expected	57	None	replace
166	[BUG]  [BUGGY]  return  create(opt.toLowerCase(),  true);  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      public  static  Option  create(char  opt)  throws  IllegalArgumentException  {      [BUGGY]  return  create(opt.toLowerCase(),  true);  [BUGGY]      }  [CLASS]  OptionBuilder  [METHOD]  create  [RETURN_TYPE]  Option  char  opt  [VARIABLES]  boolean  hasArg  newRequired  optionalArg  required  OptionBuilder  instance  char  opt  sep  valuesep  Object  newType  type  String  argName  description  longopt  name  newDescription  newLongopt  int  num  numArgs  numberOfArgs  	projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java	0.3779644730092272	316	316	1	replace	return  create(opt.toLowerCase(),  true);	  return    create(opt.toLowerCase());    	non-compiled	[CE]  <identifier>  expected	79	None	replace
167	[BUG]  [BUGGY]  return  create(opt.toUpperCase());  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      public  static  Option  create(char  opt)  throws  IllegalArgumentException  {      [BUGGY]  return  create(opt.toUpperCase());  [BUGGY]      }  [CLASS]  OptionBuilder  [METHOD]  create  [RETURN_TYPE]  Option  char  opt  [VARIABLES]  boolean  hasArg  newRequired  optionalArg  required  OptionBuilder  instance  char  opt  sep  valuesep  Object  newType  type  String  argName  description  longopt  name  newDescription  newLongopt  int  num  numArgs  numberOfArgs  	projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java	0.3779644730092272	316	316	1	replace	return  create(opt.toUpperCase());	  return    create(opt.toLowerCase());    	non-compiled	[CE]  <identifier>  expected	79	None	replace
168	[BUG]  [BUGGY]  return  create(opt.toLowerCase(),  false);  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      public  static  Option  create(char  opt)  throws  IllegalArgumentException  {      [BUGGY]  return  create(opt.toLowerCase(),  false);  [BUGGY]      }  [CLASS]  OptionBuilder  [METHOD]  create  [RETURN_TYPE]  Option  char  opt  [VARIABLES]  boolean  hasArg  newRequired  optionalArg  required  OptionBuilder  instance  char  opt  sep  valuesep  Object  newType  type  String  argName  description  longopt  name  newDescription  newLongopt  int  num  numArgs  numberOfArgs  	projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java	0.3779644730092272	316	316	1	replace	return  create(opt.toLowerCase(),  false);	  return    create(opt.toLowerCase());    	non-compiled	[CE]  <identifier>  expected	79	None	replace
169	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  numArgs;  ++i)  {  opt  +=  String.valueOf(i);  }  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      public  static  Option  create(char  opt)  throws  IllegalArgumentException  {      [BUGGY]  for(int  i  =  0;  i  <  numArgs;  ++i)  {  opt  +=  String.valueOf(i);  }  [BUGGY]      return  create(String.valueOf(opt));  }  [CLASS]  OptionBuilder  [METHOD]  create  [RETURN_TYPE]  Option  char  opt  [VARIABLES]  boolean  hasArg  newRequired  optionalArg  required  OptionBuilder  instance  char  opt  sep  valuesep  Object  newType  type  String  argName  description  longopt  name  newDescription  newLongopt  int  num  numArgs  numberOfArgs  	projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java	0.3779644730092272	316	316	1	replace	for(int  i  =  0;  i  <  numArgs;  ++i)  {  opt  +=  String.valueOf(i);  }	  for(int    i    =    0;    i    <    numberOfArgs;    ++i)    {    opt    +=    String.valueOf(i);    }    	non-compiled	[CE]  <identifier>  expected	4	None	replace
170	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  valuesep;  ++i)  {  opt  +=  String.valueOf(i);  }  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      public  static  Option  create(char  opt)  throws  IllegalArgumentException  {      [BUGGY]  for(int  i  =  0;  i  <  valuesep;  ++i)  {  opt  +=  String.valueOf(i);  }  [BUGGY]      return  create(String.valueOf(opt));  }  [CLASS]  OptionBuilder  [METHOD]  create  [RETURN_TYPE]  Option  char  opt  [VARIABLES]  boolean  hasArg  newRequired  optionalArg  required  OptionBuilder  instance  char  opt  sep  valuesep  Object  newType  type  String  argName  description  longopt  name  newDescription  newLongopt  int  num  numArgs  numberOfArgs  	projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java	0.3779644730092272	316	316	1	replace	for(int  i  =  0;  i  <  valuesep;  ++i)  {  opt  +=  String.valueOf(i);  }	  for(int    i    =    0;    i    <    numberOfArgs;    ++i)    {    opt    +=    String.valueOf(i);    }    	non-compiled	[CE]  <identifier>  expected	4	None	replace
171	[BUG]  [BUGGY]  OptionBuilder  <  Object>  newType  =  getType(opt)+  1;  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      public  static  Option  create(char  opt)  throws  IllegalArgumentException  {      [BUGGY]  OptionBuilder  <  Object>  newType  =  getType(opt)+  1;  [BUGGY]      return  create(String.valueOf(opt));  }  [CLASS]  OptionBuilder  [METHOD]  create  [RETURN_TYPE]  Option  char  opt  [VARIABLES]  boolean  hasArg  newRequired  optionalArg  required  OptionBuilder  instance  char  opt  sep  valuesep  Object  newType  type  String  argName  description  longopt  name  newDescription  newLongopt  int  num  numArgs  numberOfArgs  	projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java	0.3779644730092272	316	316	1	replace	OptionBuilder  <  Object>  newType  =  getType(opt)+  1;	  OptionBuilder    <    Object>    newType    =    getType(opt);    	non-compiled	[CE]  <identifier>  expected	83	None	replace
172	[BUG]  [BUGGY]  OptionBuilder  <  Object>  newType  =  getType(opt  +  1);  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]      public  static  Option  create(char  opt)  throws  IllegalArgumentException  {      [BUGGY]  OptionBuilder  <  Object>  newType  =  getType(opt  +  1);  [BUGGY]      return  create(String.valueOf(opt));  }  [CLASS]  OptionBuilder  [METHOD]  create  [RETURN_TYPE]  Option  char  opt  [VARIABLES]  boolean  hasArg  newRequired  optionalArg  required  OptionBuilder  instance  char  opt  sep  valuesep  Object  newType  type  String  argName  description  longopt  name  newDescription  newLongopt  int  num  numArgs  numberOfArgs  	projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java	0.3779644730092272	316	316	1	replace	OptionBuilder  <  Object>  newType  =  getType(opt  +  1);	  OptionBuilder    <    Object>    newType    =    getType(opt);    	non-compiled	[CE]  <identifier>  expected	83	None	replace
173	[BUG]  [BUGGY]  OptionBuilder  <  Object>  newType  =  getType(opt.toLowerCase());  [CE]  <identifier>  expected  [FE]                          AssertionFailedError      [CONTEXT]      public  static  Option  create(char  opt)  throws  IllegalArgumentException  {      [BUGGY]  OptionBuilder  <  Object>  newType  =  getType(opt.toLowerCase());  [BUGGY]      return  create(String.valueOf(opt));  }  [CLASS]  OptionBuilder  [METHOD]  create  [RETURN_TYPE]  Option  char  opt  [VARIABLES]  boolean  hasArg  newRequired  optionalArg  required  OptionBuilder  instance  char  opt  sep  valuesep  Object  newType  type  String  argName  description  longopt  name  newDescription  newLongopt  int  num  numArgs  numberOfArgs  	projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java	0.3779644730092272	316	316	1	replace	OptionBuilder  <  Object>  newType  =  getType(opt.toLowerCase());	  OptionBuilder    <    Object>    newType    =    getType(opt);    	non-compiled	[CE]  <identifier>  expected	83	None	replace
174	[BUG]  [BUGGY]  OptionBuilder  instance  =(OptionBuilder)this.options.get(opt);  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      public  static  Option  create(char  opt)  throws  IllegalArgumentException  {      [BUGGY]  OptionBuilder  instance  =(OptionBuilder)this.options.get(opt);  [BUGGY]      return  create(String.valueOf(opt));  }  [CLASS]  OptionBuilder  [METHOD]  create  [RETURN_TYPE]  Option  char  opt  [VARIABLES]  boolean  hasArg  newRequired  optionalArg  required  OptionBuilder  instance  char  opt  sep  valuesep  Object  newType  type  String  argName  description  longopt  name  newDescription  newLongopt  int  num  numArgs  numberOfArgs  	projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java	0.3779644730092272	316	316	1	replace	OptionBuilder  instance  =(OptionBuilder)this.options.get(opt);	  OptionBuilder    instance    =(OptionBuilder)options.get(opt);    	non-compiled	[CE]  <identifier>  expected	81	None	replace
175	[BUG]  [BUGGY]  OptionBuilder  instance  =(OptionBuilder)this.optionalArgs.get(opt);  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      public  static  Option  create(char  opt)  throws  IllegalArgumentException  {      [BUGGY]  OptionBuilder  instance  =(OptionBuilder)this.optionalArgs.get(opt);  [BUGGY]      return  create(String.valueOf(opt));  }  [CLASS]  OptionBuilder  [METHOD]  create  [RETURN_TYPE]  Option  char  opt  [VARIABLES]  boolean  hasArg  newRequired  optionalArg  required  OptionBuilder  instance  char  opt  sep  valuesep  Object  newType  type  String  argName  description  longopt  name  newDescription  newLongopt  int  num  numArgs  numberOfArgs  	projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java	0.3779644730092272	316	316	1	replace	OptionBuilder  instance  =(OptionBuilder)this.optionalArgs.get(opt);	  OptionBuilder    instance    =(OptionBuilder)options.get(opt);    	non-compiled	[CE]  <identifier>  expected	81	None	replace
176	[BUG]  [BUGGY]  OptionBuilder  instance  =(OptionBuilder)this.values.get(opt);  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      public  static  Option  create(char  opt)  throws  IllegalArgumentException  {      [BUGGY]  OptionBuilder  instance  =(OptionBuilder)this.values.get(opt);  [BUGGY]      return  create(String.valueOf(opt));  }  [CLASS]  OptionBuilder  [METHOD]  create  [RETURN_TYPE]  Option  char  opt  [VARIABLES]  boolean  hasArg  newRequired  optionalArg  required  OptionBuilder  instance  char  opt  sep  valuesep  Object  newType  type  String  argName  description  longopt  name  newDescription  newLongopt  int  num  numArgs  numberOfArgs  	projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java	0.3779644730092272	316	316	1	replace	OptionBuilder  instance  =(OptionBuilder)this.values.get(opt);	  OptionBuilder    instance    =(OptionBuilder)options.get(opt);    	non-compiled	[CE]  <identifier>  expected	81	None	replace
177	[BUG]  [BUGGY]  OptionBuilder  instance  =  new  OptionBuilder(String.valueOf(opt)+  1);  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      public  static  Option  create(char  opt)  throws  IllegalArgumentException  {      [BUGGY]  OptionBuilder  instance  =  new  OptionBuilder(String.valueOf(opt)+  1);  [BUGGY]      return  create(String.valueOf(opt));  }  [CLASS]  OptionBuilder  [METHOD]  create  [RETURN_TYPE]  Option  char  opt  [VARIABLES]  boolean  hasArg  newRequired  optionalArg  required  OptionBuilder  instance  char  opt  sep  valuesep  Object  newType  type  String  argName  description  longopt  name  newDescription  newLongopt  int  num  numArgs  numberOfArgs  	projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java	0.3779644730092272	316	316	1	replace	OptionBuilder  instance  =  new  OptionBuilder(String.valueOf(opt)+  1);	  OptionBuilder    instance    =    new    OptionBuilder(String.valueOf(opt));    	non-compiled	[CE]  <identifier>  expected	112	None	replace
178	[BUG]  [BUGGY]  OptionBuilder  instance  =  new  OptionBuilder(String.valueOf(numberOfArgs));  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      public  static  Option  create(char  opt)  throws  IllegalArgumentException  {      [BUGGY]  OptionBuilder  instance  =  new  OptionBuilder(String.valueOf(numberOfArgs));  [BUGGY]      return  create(String.valueOf(opt));  }  [CLASS]  OptionBuilder  [METHOD]  create  [RETURN_TYPE]  Option  char  opt  [VARIABLES]  boolean  hasArg  newRequired  optionalArg  required  OptionBuilder  instance  char  opt  sep  valuesep  Object  newType  type  String  argName  description  longopt  name  newDescription  newLongopt  int  num  numArgs  numberOfArgs  	projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java	0.3779644730092272	316	316	1	replace	OptionBuilder  instance  =  new  OptionBuilder(String.valueOf(numberOfArgs));	  OptionBuilder    instance    =    new    OptionBuilder(String.valueOf(opt));    	non-compiled	[CE]  <identifier>  expected	112	None	replace
179	[BUG]  [BUGGY]  OptionBuilder  instance  =  new  OptionBuilder(String.valueOf(opt  +  1));  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      public  static  Option  create(char  opt)  throws  IllegalArgumentException  {      [BUGGY]  OptionBuilder  instance  =  new  OptionBuilder(String.valueOf(opt  +  1));  [BUGGY]      return  create(String.valueOf(opt));  }  [CLASS]  OptionBuilder  [METHOD]  create  [RETURN_TYPE]  Option  char  opt  [VARIABLES]  boolean  hasArg  newRequired  optionalArg  required  OptionBuilder  instance  char  opt  sep  valuesep  Object  newType  type  String  argName  description  longopt  name  newDescription  newLongopt  int  num  numArgs  numberOfArgs  	projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java	0.3779644730092272	316	316	1	replace	OptionBuilder  instance  =  new  OptionBuilder(String.valueOf(opt  +  1));	  OptionBuilder    instance    =    new    OptionBuilder(String.valueOf(opt));    	non-compiled	[CE]  <identifier>  expected	112	None	replace
180	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  numArgs;  ++i)  {  OptionBuilder.append(optionalArg);  }  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      public  static  Option  create(char  opt)  throws  IllegalArgumentException  {      [BUGGY]  for(int  i  =  0;  i  <  numArgs;  ++i)  {  OptionBuilder.append(optionalArg);  }  [BUGGY]      return  create(String.valueOf(opt));  }  [CLASS]  OptionBuilder  [METHOD]  create  [RETURN_TYPE]  Option  char  opt  [VARIABLES]  boolean  hasArg  newRequired  optionalArg  required  OptionBuilder  instance  char  opt  sep  valuesep  Object  newType  type  String  argName  description  longopt  name  newDescription  newLongopt  int  num  numArgs  numberOfArgs  	projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java	0.3779644730092272	316	316	1	replace	for(int  i  =  0;  i  <  numArgs;  ++i)  {  OptionBuilder.append(optionalArg);  }	  for(int    i    =    0;    i    <    numberOfArgs;    ++i)    {    OptionBuilder.append(opt);    }    	non-compiled	[CE]  <identifier>  expected	39	None	replace
181	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  length;  ++i)  {  OptionBuilder.append(opt);  }  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      public  static  Option  create(char  opt)  throws  IllegalArgumentException  {      [BUGGY]  for(int  i  =  0;  i  <  length;  ++i)  {  OptionBuilder.append(opt);  }  [BUGGY]      return  create(String.valueOf(opt));  }  [CLASS]  OptionBuilder  [METHOD]  create  [RETURN_TYPE]  Option  char  opt  [VARIABLES]  boolean  hasArg  newRequired  optionalArg  required  OptionBuilder  instance  char  opt  sep  valuesep  Object  newType  type  String  argName  description  longopt  name  newDescription  newLongopt  int  num  numArgs  numberOfArgs  	projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java	0.3779644730092272	316	316	1	replace	for(int  i  =  0;  i  <  length;  ++i)  {  OptionBuilder.append(opt);  }	  for(int    i    =    0;    i    <    numberOfArgs;    ++i)    {    OptionBuilder.append(opt);    }    	non-compiled	[CE]  <identifier>  expected	39	None	replace
182	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  numArgs;  ++i)  {  OptionBuilder.this.append(optionalArg);  }  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      public  static  Option  create(char  opt)  throws  IllegalArgumentException  {      [BUGGY]  for(int  i  =  0;  i  <  numArgs;  ++i)  {  OptionBuilder.this.append(optionalArg);  }  [BUGGY]      return  create(String.valueOf(opt));  }  [CLASS]  OptionBuilder  [METHOD]  create  [RETURN_TYPE]  Option  char  opt  [VARIABLES]  boolean  hasArg  newRequired  optionalArg  required  OptionBuilder  instance  char  opt  sep  valuesep  Object  newType  type  String  argName  description  longopt  name  newDescription  newLongopt  int  num  numArgs  numberOfArgs  	projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java	0.3779644730092272	316	316	1	replace	for(int  i  =  0;  i  <  numArgs;  ++i)  {  OptionBuilder.this.append(optionalArg);  }	  for(int    i    =    0;    i    <    numberOfArgs;    ++i)    {    OptionBuilder.this.append(opt);    }    	non-compiled	[CE]  <identifier>  expected	20	None	replace
183	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  length;  ++i)  {  OptionBuilder.this.append(opt);  }  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      public  static  Option  create(char  opt)  throws  IllegalArgumentException  {      [BUGGY]  for(int  i  =  0;  i  <  length;  ++i)  {  OptionBuilder.this.append(opt);  }  [BUGGY]      return  create(String.valueOf(opt));  }  [CLASS]  OptionBuilder  [METHOD]  create  [RETURN_TYPE]  Option  char  opt  [VARIABLES]  boolean  hasArg  newRequired  optionalArg  required  OptionBuilder  instance  char  opt  sep  valuesep  Object  newType  type  String  argName  description  longopt  name  newDescription  newLongopt  int  num  numArgs  numberOfArgs  	projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java	0.3779644730092272	316	316	1	replace	for(int  i  =  0;  i  <  length;  ++i)  {  OptionBuilder.this.append(opt);  }	  for(int    i    =    0;    i    <    numberOfArgs;    ++i)    {    OptionBuilder.this.append(opt);    }    	non-compiled	[CE]  <identifier>  expected	20	None	replace
184	[BUG]  [BUGGY]  if(numberOfArgs  ==  1)  {  return  create(String.valueOf(opt));  }  [CE]  <identifier>  expected  [FE]            AssertionFailedError      [CONTEXT]      public  static  Option  create(char  opt)  throws  IllegalArgumentException  {      [BUGGY]  if(numberOfArgs  ==  1)  {  return  create(String.valueOf(opt));  }  [BUGGY]      }  [CLASS]  OptionBuilder  [METHOD]  create  [RETURN_TYPE]  Option  char  opt  [VARIABLES]  boolean  hasArg  newRequired  optionalArg  required  OptionBuilder  instance  char  opt  sep  valuesep  Object  newType  type  String  argName  description  longopt  name  newDescription  newLongopt  int  num  numArgs  numberOfArgs  	projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java	0.3779644730092272	316	316	1	replace	if(numberOfArgs  ==  1)  {  return  create(String.valueOf(opt));  }	  if(numberOfArgs    ==    0)    {    return    create(String.valueOf(opt));    }    	non-compiled	[CE]  <identifier>  expected	8	None	replace
185	[BUG]  [BUGGY]  OptionBuilder  instance  =(OptionBuilder)opt.getValue();  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      public  static  Option  create(char  opt)  throws  IllegalArgumentException  {      [BUGGY]  OptionBuilder  instance  =(OptionBuilder)opt.getValue();  [BUGGY]      return  create(String.valueOf(opt));  }  [CLASS]  OptionBuilder  [METHOD]  create  [RETURN_TYPE]  Option  char  opt  [VARIABLES]  boolean  hasArg  newRequired  optionalArg  required  OptionBuilder  instance  char  opt  sep  valuesep  Object  newType  type  String  argName  description  longopt  name  newDescription  newLongopt  int  num  numArgs  numberOfArgs  	projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java	0.3779644730092272	316	316	1	replace	OptionBuilder  instance  =(OptionBuilder)opt.getValue();	  if(opt    ==    null    ||    opt.length()!=    0)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  <identifier>  expected	74	None	replace
186	[BUG]  [BUGGY]  allowNumberOfArgs(opt)  {  return  create(String.valueOf(numberOfArgs));  }  else  {  throw  new  IllegalArgumentException( " ");  }  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      public  static  Option  create(char  opt)  throws  IllegalArgumentException  {      [BUGGY]  allowNumberOfArgs(opt)  {  return  create(String.valueOf(numberOfArgs));  }  else  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      }  [CLASS]  OptionBuilder  [METHOD]  create  [RETURN_TYPE]  Option  char  opt  [VARIABLES]  boolean  hasArg  newRequired  optionalArg  required  OptionBuilder  instance  char  opt  sep  valuesep  Object  newType  type  String  argName  description  longopt  name  newDescription  newLongopt  int  num  numArgs  numberOfArgs  	projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java	0.3779644730092272	316	316	1	replace	allowNumberOfArgs(opt)  {  return  create(String.valueOf(numberOfArgs));  }  else  {  throw  new  IllegalArgumentException( " ");  }	  if(opt    ==    null)    {    return    create(String.valueOf(numberOfArgs));    }    else    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  <identifier>  expected	52	None	replace
187	[BUG]  [BUGGY]  allowNumberOfArgs(numberOfArgs))  {  return  create(String.valueOf(opt));  }  else  {  throw  new  IllegalArgumentException( " ");  }  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      public  static  Option  create(char  opt)  throws  IllegalArgumentException  {      [BUGGY]  allowNumberOfArgs(numberOfArgs))  {  return  create(String.valueOf(opt));  }  else  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      }  [CLASS]  OptionBuilder  [METHOD]  create  [RETURN_TYPE]  Option  char  opt  [VARIABLES]  boolean  hasArg  newRequired  optionalArg  required  OptionBuilder  instance  char  opt  sep  valuesep  Object  newType  type  String  argName  description  longopt  name  newDescription  newLongopt  int  num  numArgs  numberOfArgs  	projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java	0.3779644730092272	316	316	1	replace	allowNumberOfArgs(numberOfArgs))  {  return  create(String.valueOf(opt));  }  else  {  throw  new  IllegalArgumentException( " ");  }	  if(opt    ==    null)    {    return    create(String.valueOf(numberOfArgs));    }    else    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  <identifier>  expected	52	None	replace
188	[BUG]  [BUGGY]  return  create(String.valueOf(opt)/  0);  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      public  static  Option  create(char  opt)  throws  IllegalArgumentException  {      [BUGGY]  return  create(String.valueOf(opt)/  0);  [BUGGY]      }  [CLASS]  OptionBuilder  [METHOD]  create  [RETURN_TYPE]  Option  char  opt  [VARIABLES]  boolean  hasArg  newRequired  optionalArg  required  OptionBuilder  instance  char  opt  sep  valuesep  Object  newType  type  String  argName  description  longopt  name  newDescription  newLongopt  int  num  numArgs  numberOfArgs  	projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java	0.3779644730092272	316	316	1	replace	return  create(String.valueOf(opt)/  0);	  return    create(String.valueOf(opt)+    0);    	non-compiled	[CE]  <identifier>  expected	50	None	replace
189	[BUG]  [BUGGY]  if(numberOfArgs  <  1)  {  return  create(String.valueOf(opt));  }  [CE]  <identifier>  expected  [FE]            AssertionFailedError      [CONTEXT]      public  static  Option  create(char  opt)  throws  IllegalArgumentException  {      [BUGGY]  if(numberOfArgs  <  1)  {  return  create(String.valueOf(opt));  }  [BUGGY]      }  [CLASS]  OptionBuilder  [METHOD]  create  [RETURN_TYPE]  Option  char  opt  [VARIABLES]  boolean  hasArg  newRequired  optionalArg  required  OptionBuilder  instance  char  opt  sep  valuesep  Object  newType  type  String  argName  description  longopt  name  newDescription  newLongopt  int  num  numArgs  numberOfArgs  	projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java	0.3779644730092272	316	316	1	replace	if(numberOfArgs  <  1)  {  return  create(String.valueOf(opt));  }	  if(numberOfArgs    >    1)    {    return    create(String.valueOf(opt));    }    	non-compiled	[CE]  <identifier>  expected	106	None	replace
190	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  this.numberOfArgs;  ++i)  {  opt  =  getValue(i);  }  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      public  static  Option  create(char  opt)  throws  IllegalArgumentException  {      [BUGGY]  for(int  i  =  0;  i  <  this.numberOfArgs;  ++i)  {  opt  =  getValue(i);  }  [BUGGY]      return  create(String.valueOf(opt));  }  [CLASS]  OptionBuilder  [METHOD]  create  [RETURN_TYPE]  Option  char  opt  [VARIABLES]  boolean  hasArg  newRequired  optionalArg  required  OptionBuilder  instance  char  opt  sep  valuesep  Object  newType  type  String  argName  description  longopt  name  newDescription  newLongopt  int  num  numArgs  numberOfArgs  	projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java	0.3779644730092272	316	316	1	replace	for(int  i  =  0;  i  <  this.numberOfArgs;  ++i)  {  opt  =  getValue(i);  }	  if(opt    >    0)    {    for(int    i    =    0;    i    <    this.numberOfArgs;    ++i)    {    opt    =    getValue(i);    }    	non-compiled	[CE]  <identifier>  expected	96	None	replace
191	[BUG]  [BUGGY]  int  numberOfArgs  >  1)  {  return  create(String.valueOf(opt));  }  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      public  static  Option  create(char  opt)  throws  IllegalArgumentException  {      [BUGGY]  int  numberOfArgs  >  1)  {  return  create(String.valueOf(opt));  }  [BUGGY]      }  [CLASS]  OptionBuilder  [METHOD]  create  [RETURN_TYPE]  Option  char  opt  [VARIABLES]  boolean  hasArg  newRequired  optionalArg  required  OptionBuilder  instance  char  opt  sep  valuesep  Object  newType  type  String  argName  description  longopt  name  newDescription  newLongopt  int  num  numArgs  numberOfArgs  	projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java	0.3779644730092272	316	316	1	replace	int  numberOfArgs  >  1)  {  return  create(String.valueOf(opt));  }	  int    numberOfArgs    >    0)    {    return    create(String.valueOf(opt));    }    	non-compiled	[CE]  <identifier>  expected	68	None	replace
192	[BUG]  [BUGGY]  int  numberOfArgs  =  0)  {  return  create(String.valueOf(opt));  }  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      public  static  Option  create(char  opt)  throws  IllegalArgumentException  {      [BUGGY]  int  numberOfArgs  =  0)  {  return  create(String.valueOf(opt));  }  [BUGGY]      }  [CLASS]  OptionBuilder  [METHOD]  create  [RETURN_TYPE]  Option  char  opt  [VARIABLES]  boolean  hasArg  newRequired  optionalArg  required  OptionBuilder  instance  char  opt  sep  valuesep  Object  newType  type  String  argName  description  longopt  name  newDescription  newLongopt  int  num  numArgs  numberOfArgs  	projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java	0.3779644730092272	316	316	1	replace	int  numberOfArgs  =  0)  {  return  create(String.valueOf(opt));  }	  int    numberOfArgs    >    0)    {    return    create(String.valueOf(opt));    }    	non-compiled	[CE]  <identifier>  expected	68	None	replace
193	[BUG]  [BUGGY]  int  numberOfArgs  >  2)  {  return  create(String.valueOf(opt));  }  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      public  static  Option  create(char  opt)  throws  IllegalArgumentException  {      [BUGGY]  int  numberOfArgs  >  2)  {  return  create(String.valueOf(opt));  }  [BUGGY]      }  [CLASS]  OptionBuilder  [METHOD]  create  [RETURN_TYPE]  Option  char  opt  [VARIABLES]  boolean  hasArg  newRequired  optionalArg  required  OptionBuilder  instance  char  opt  sep  valuesep  Object  newType  type  String  argName  description  longopt  name  newDescription  newLongopt  int  num  numArgs  numberOfArgs  	projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java	0.3779644730092272	316	316	1	replace	int  numberOfArgs  >  2)  {  return  create(String.valueOf(opt));  }	  int    numberOfArgs    >    0)    {    return    create(String.valueOf(opt));    }    	non-compiled	[CE]  <identifier>  expected	68	None	replace
194	[BUG]  [BUGGY]  int  numberOfArgs  ==  0)  {  return  create(String.valueOf(opt));  }  else  {  throw  new  IllegalArgumentException( " ");  }  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      public  static  Option  create(char  opt)  throws  IllegalArgumentException  {      [BUGGY]  int  numberOfArgs  ==  0)  {  return  create(String.valueOf(opt));  }  else  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      }  [CLASS]  OptionBuilder  [METHOD]  create  [RETURN_TYPE]  Option  char  opt  [VARIABLES]  boolean  hasArg  newRequired  optionalArg  required  OptionBuilder  instance  char  opt  sep  valuesep  Object  newType  type  String  argName  description  longopt  name  newDescription  newLongopt  int  num  numArgs  numberOfArgs  	projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java	0.3779644730092272	316	316	1	replace	int  numberOfArgs  ==  0)  {  return  create(String.valueOf(opt));  }  else  {  throw  new  IllegalArgumentException( " ");  }	  numberOfArgs    ==    0)    {    return    create(String.valueOf(opt));    }    else    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  <identifier>  expected	86	None	replace
195	[BUG]  [BUGGY]  int  numberOfArgs  ==  0)  {  return  create(String.valueOf(opt));  }  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      public  static  Option  create(char  opt)  throws  IllegalArgumentException  {      [BUGGY]  int  numberOfArgs  ==  0)  {  return  create(String.valueOf(opt));  }  [BUGGY]      }  [CLASS]  OptionBuilder  [METHOD]  create  [RETURN_TYPE]  Option  char  opt  [VARIABLES]  boolean  hasArg  newRequired  optionalArg  required  OptionBuilder  instance  char  opt  sep  valuesep  Object  newType  type  String  argName  description  longopt  name  newDescription  newLongopt  int  num  numArgs  numberOfArgs  	projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java	0.3779644730092272	316	316	1	replace	int  numberOfArgs  ==  0)  {  return  create(String.valueOf(opt));  }	  numberOfArgs    ==    0)    {    return    create(String.valueOf(opt));    }    else    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  <identifier>  expected	86	None	replace
196	[BUG]  [BUGGY]  return  create(opt,  String.valueOf(numberOfArgs)+  1);  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      public  static  Option  create(char  opt)  throws  IllegalArgumentException  {      [BUGGY]  return  create(opt,  String.valueOf(numberOfArgs)+  1);  [BUGGY]      }  [CLASS]  OptionBuilder  [METHOD]  create  [RETURN_TYPE]  Option  char  opt  [VARIABLES]  boolean  hasArg  newRequired  optionalArg  required  OptionBuilder  instance  char  opt  sep  valuesep  Object  newType  type  String  argName  description  longopt  name  newDescription  newLongopt  int  num  numArgs  numberOfArgs  	projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java	0.3779644730092272	316	316	1	replace	return  create(opt,  String.valueOf(numberOfArgs)+  1);	  return    create(numberOfArgs,    String.valueOf(opt)+    1);    	non-compiled	[CE]  <identifier>  expected	29	None	replace
197	[BUG]  [BUGGY]  return  create(numberOfArgs,  String.valueOf(opt)+  1).toString();  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      public  static  Option  create(char  opt)  throws  IllegalArgumentException  {      [BUGGY]  return  create(numberOfArgs,  String.valueOf(opt)+  1).toString();  [BUGGY]      }  [CLASS]  OptionBuilder  [METHOD]  create  [RETURN_TYPE]  Option  char  opt  [VARIABLES]  boolean  hasArg  newRequired  optionalArg  required  OptionBuilder  instance  char  opt  sep  valuesep  Object  newType  type  String  argName  description  longopt  name  newDescription  newLongopt  int  num  numArgs  numberOfArgs  	projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java	0.3779644730092272	316	316	1	replace	return  create(numberOfArgs,  String.valueOf(opt)+  1).toString();	  return    create(numberOfArgs,    String.valueOf(opt)+    1);    	non-compiled	[CE]  <identifier>  expected	29	None	replace
198	[BUG]  [BUGGY]  Integer  numberOfArgs  =  getNumberOfArgs(opt  +  1);  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      public  static  Option  create(char  opt)  throws  IllegalArgumentException  {      [BUGGY]  Integer  numberOfArgs  =  getNumberOfArgs(opt  +  1);  [BUGGY]      }  [CLASS]  OptionBuilder  [METHOD]  create  [RETURN_TYPE]  Option  char  opt  [VARIABLES]  boolean  hasArg  newRequired  optionalArg  required  OptionBuilder  instance  char  opt  sep  valuesep  Object  newType  type  String  argName  description  longopt  name  newDescription  newLongopt  int  num  numArgs  numberOfArgs  	projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java	0.3779644730092272	316	316	1	replace	Integer  numberOfArgs  =  getNumberOfArgs(opt  +  1);	  Integer    numberOfArgs    =    getNumberOfArgs(opt);    	non-compiled	[CE]  <identifier>  expected	10	None	replace
199	[BUG]  [BUGGY]  if(numberOfArgs  ==  1)  {  allowNumberOfArgs(opt)  {  return  create(String.valueOf(opt));  }  else  {  throw  new  IllegalArgumentException( " ");  }  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      public  static  Option  create(char  opt)  throws  IllegalArgumentException  {      [BUGGY]  if(numberOfArgs  ==  1)  {  allowNumberOfArgs(opt)  {  return  create(String.valueOf(opt));  }  else  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      return  create(String.valueOf(opt));  }  [CLASS]  OptionBuilder  [METHOD]  create  [RETURN_TYPE]  Option  char  opt  [VARIABLES]  boolean  hasArg  newRequired  optionalArg  required  OptionBuilder  instance  char  opt  sep  valuesep  Object  newType  type  String  argName  description  longopt  name  newDescription  newLongopt  int  num  numArgs  numberOfArgs  	projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java	0.3779644730092272	316	316	1	replace	if(numberOfArgs  ==  1)  {  allowNumberOfArgs(opt)  {  return  create(String.valueOf(opt));  }  else  {  throw  new  IllegalArgumentException( " ");  }	  allowNumberOfArgs(opt)    {    return    create(String.valueOf(opt));    }    else    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  <identifier>  expected	32	None	replace
200	[BUG]  [BUGGY]  if(numberOfArgs  >  0)  {  allowNumberOfArgs(opt)  {  return  create(String.valueOf(opt));  }  else  {  throw  new  IllegalArgumentException( " ");  }  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      public  static  Option  create(char  opt)  throws  IllegalArgumentException  {      [BUGGY]  if(numberOfArgs  >  0)  {  allowNumberOfArgs(opt)  {  return  create(String.valueOf(opt));  }  else  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      return  create(String.valueOf(opt));  }  [CLASS]  OptionBuilder  [METHOD]  create  [RETURN_TYPE]  Option  char  opt  [VARIABLES]  boolean  hasArg  newRequired  optionalArg  required  OptionBuilder  instance  char  opt  sep  valuesep  Object  newType  type  String  argName  description  longopt  name  newDescription  newLongopt  int  num  numArgs  numberOfArgs  	projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java	0.3779644730092272	316	316	1	replace	if(numberOfArgs  >  0)  {  allowNumberOfArgs(opt)  {  return  create(String.valueOf(opt));  }  else  {  throw  new  IllegalArgumentException( " ");  }	  allowNumberOfArgs(opt)    {    return    create(String.valueOf(opt));    }    else    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  <identifier>  expected	32	None	replace
201	[BUG]  [BUGGY]  if(numberOfArgs  ==  0)  {  allowNumberOfArgs(opt)  {  return  create(String.valueOf(opt));  }  else  {  throw  new  IllegalArgumentException( " ");  }  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]      public  static  Option  create(char  opt)  throws  IllegalArgumentException  {      [BUGGY]  if(numberOfArgs  ==  0)  {  allowNumberOfArgs(opt)  {  return  create(String.valueOf(opt));  }  else  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      return  create(String.valueOf(opt));  }  [CLASS]  OptionBuilder  [METHOD]  create  [RETURN_TYPE]  Option  char  opt  [VARIABLES]  boolean  hasArg  newRequired  optionalArg  required  OptionBuilder  instance  char  opt  sep  valuesep  Object  newType  type  String  argName  description  longopt  name  newDescription  newLongopt  int  num  numArgs  numberOfArgs  	projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java	0.3779644730092272	316	316	1	replace	if(numberOfArgs  ==  0)  {  allowNumberOfArgs(opt)  {  return  create(String.valueOf(opt));  }  else  {  throw  new  IllegalArgumentException( " ");  }	  allowNumberOfArgs(opt)    {    return    create(String.valueOf(opt));    }    else    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  <identifier>  expected	32	None	replace
202	[BUG]  [BUGGY]  if(numberOfArgs  >  0)  {  allowNumberOfArgs(opt)  {  return  create(String.valueOf(opt));  }  [CE]  <identifier>  expected  [FE]                          AssertionFailedError      [CONTEXT]      public  static  Option  create(char  opt)  throws  IllegalArgumentException  {      [BUGGY]  if(numberOfArgs  >  0)  {  allowNumberOfArgs(opt)  {  return  create(String.valueOf(opt));  }  [BUGGY]      return  create(String.valueOf(opt));  }  [CLASS]  OptionBuilder  [METHOD]  create  [RETURN_TYPE]  Option  char  opt  [VARIABLES]  boolean  hasArg  newRequired  optionalArg  required  OptionBuilder  instance  char  opt  sep  valuesep  Object  newType  type  String  argName  description  longopt  name  newDescription  newLongopt  int  num  numArgs  numberOfArgs  	projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java	0.3779644730092272	316	316	1	replace	if(numberOfArgs  >  0)  {  allowNumberOfArgs(opt)  {  return  create(String.valueOf(opt));  }	  allowNumberOfArgs(opt)    {    return    create(String.valueOf(opt));    }    else    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  <identifier>  expected	32	None	replace
203	[BUG]  [BUGGY]  return  get(Long.valueOf(opt)+  1);  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      public  static  Option  create(char  opt)  throws  IllegalArgumentException  {      [BUGGY]  return  get(Long.valueOf(opt)+  1);  [BUGGY]      }  [CLASS]  OptionBuilder  [METHOD]  create  [RETURN_TYPE]  Option  char  opt  [VARIABLES]  boolean  hasArg  newRequired  optionalArg  required  OptionBuilder  instance  char  opt  sep  valuesep  Object  newType  type  String  argName  description  longopt  name  newDescription  newLongopt  int  num  numArgs  numberOfArgs  	projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java	0.3779644730092272	316	316	1	replace	return  get(Long.valueOf(opt)+  1);	  return    get(Long.valueOf(opt));    	non-compiled	[CE]  <identifier>  expected	98	None	replace
204	[BUG]  [BUGGY]  return  get(Long.parseLong(opt));  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      public  static  Option  create(char  opt)  throws  IllegalArgumentException  {      [BUGGY]  return  get(Long.parseLong(opt));  [BUGGY]      }  [CLASS]  OptionBuilder  [METHOD]  create  [RETURN_TYPE]  Option  char  opt  [VARIABLES]  boolean  hasArg  newRequired  optionalArg  required  OptionBuilder  instance  char  opt  sep  valuesep  Object  newType  type  String  argName  description  longopt  name  newDescription  newLongopt  int  num  numArgs  numberOfArgs  	projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java	0.3779644730092272	316	316	1	replace	return  get(Long.parseLong(opt));	  return    get(Long.valueOf(opt));    	non-compiled	[CE]  <identifier>  expected	98	None	replace
205	[BUG]  [BUGGY]  int  numberOfArgs  =  getNumberOfArgs()  +  1;  [CE]  <identifier>  expected  [FE]            AssertionFailedError      [CONTEXT]      public  static  Option  create(char  opt)  throws  IllegalArgumentException  {      [BUGGY]  int  numberOfArgs  =  getNumberOfArgs()  +  1;  [BUGGY]      return  create(String.valueOf(opt));  }  [CLASS]  OptionBuilder  [METHOD]  create  [RETURN_TYPE]  Option  char  opt  [VARIABLES]  boolean  hasArg  newRequired  optionalArg  required  OptionBuilder  instance  char  opt  sep  valuesep  Object  newType  type  String  argName  description  longopt  name  newDescription  newLongopt  int  num  numArgs  numberOfArgs  	projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java	0.3779644730092272	316	316	1	replace	int  numberOfArgs  =  getNumberOfArgs()  +  1;	  int    numberOfArgs    =    getNumberOfArgs();    	non-compiled	[CE]  <identifier>  expected	11	None	replace
206	[BUG]  [BUGGY]  int  numberOfArgs  =  getNumberOfArgs()  -  1;  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      public  static  Option  create(char  opt)  throws  IllegalArgumentException  {      [BUGGY]  int  numberOfArgs  =  getNumberOfArgs()  -  1;  [BUGGY]      return  create(String.valueOf(opt));  }  [CLASS]  OptionBuilder  [METHOD]  create  [RETURN_TYPE]  Option  char  opt  [VARIABLES]  boolean  hasArg  newRequired  optionalArg  required  OptionBuilder  instance  char  opt  sep  valuesep  Object  newType  type  String  argName  description  longopt  name  newDescription  newLongopt  int  num  numArgs  numberOfArgs  	projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java	0.3779644730092272	316	316	1	replace	int  numberOfArgs  =  getNumberOfArgs()  -  1;	  int    numberOfArgs    =    getNumberOfArgs();    	non-compiled	[CE]  <identifier>  expected	11	None	replace
207	[BUG]  [BUGGY]  int  numberOfArgs  =  getNumberOfArgs(number);  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      public  static  Option  create(char  opt)  throws  IllegalArgumentException  {      [BUGGY]  int  numberOfArgs  =  getNumberOfArgs(number);  [BUGGY]      return  create(String.valueOf(opt));  }  [CLASS]  OptionBuilder  [METHOD]  create  [RETURN_TYPE]  Option  char  opt  [VARIABLES]  boolean  hasArg  newRequired  optionalArg  required  OptionBuilder  instance  char  opt  sep  valuesep  Object  newType  type  String  argName  description  longopt  name  newDescription  newLongopt  int  num  numArgs  numberOfArgs  	projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java	0.3779644730092272	316	316	1	replace	int  numberOfArgs  =  getNumberOfArgs(number);	  int    numberOfArgs    =    getNumberOfArgs();    	non-compiled	[CE]  <identifier>  expected	11	None	replace
208	[BUG]  [BUGGY]  return  create(String.valueOf(opt)+  numberOfArgs);  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      public  static  Option  create(char  opt)  throws  IllegalArgumentException  {      [BUGGY]  return  create(String.valueOf(opt)+  numberOfArgs);  [BUGGY]      }  [CLASS]  OptionBuilder  [METHOD]  create  [RETURN_TYPE]  Option  char  opt  [VARIABLES]  boolean  hasArg  newRequired  optionalArg  required  OptionBuilder  instance  char  opt  sep  valuesep  Object  newType  type  String  argName  description  longopt  name  newDescription  newLongopt  int  num  numArgs  numberOfArgs  	projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java	0.3779644730092272	316	316	1	replace	return  create(String.valueOf(opt)+  numberOfArgs);	  return    create(String.valueOf(opt)+    num);    	non-compiled	[CE]  <identifier>  expected	87	None	replace
209	[BUG]  [BUGGY]  OptionBuilder  instance  =  new  OptionBuilder(opt.toCharArray());  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      public  static  Option  create(char  opt)  throws  IllegalArgumentException  {      [BUGGY]  OptionBuilder  instance  =  new  OptionBuilder(opt.toCharArray());  [BUGGY]      return  create(String.valueOf(opt));  }  [CLASS]  OptionBuilder  [METHOD]  create  [RETURN_TYPE]  Option  char  opt  [VARIABLES]  boolean  hasArg  newRequired  optionalArg  required  OptionBuilder  instance  char  opt  sep  valuesep  Object  newType  type  String  argName  description  longopt  name  newDescription  newLongopt  int  num  numArgs  numberOfArgs  	projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java	0.3779644730092272	316	316	1	replace	OptionBuilder  instance  =  new  OptionBuilder(opt.toCharArray());	  OptionBuilder    instance    =    new    OptionBuilder(opt.toString());    	non-compiled	[CE]  <identifier>  expected	114	None	replace
210	[BUG]  [BUGGY]  OptionBuilder  instance  =  new  OptionBuilder(opt.toLong());  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      public  static  Option  create(char  opt)  throws  IllegalArgumentException  {      [BUGGY]  OptionBuilder  instance  =  new  OptionBuilder(opt.toLong());  [BUGGY]      return  create(String.valueOf(opt));  }  [CLASS]  OptionBuilder  [METHOD]  create  [RETURN_TYPE]  Option  char  opt  [VARIABLES]  boolean  hasArg  newRequired  optionalArg  required  OptionBuilder  instance  char  opt  sep  valuesep  Object  newType  type  String  argName  description  longopt  name  newDescription  newLongopt  int  num  numArgs  numberOfArgs  	projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java	0.3779644730092272	316	316	1	replace	OptionBuilder  instance  =  new  OptionBuilder(opt.toLong());	  OptionBuilder    instance    =    new    OptionBuilder(opt.toString());    	non-compiled	[CE]  <identifier>  expected	114	None	replace
211	[BUG]  [BUGGY]  OptionBuilder  instance  =  new  OptionBuilder(opt.length());  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]      public  static  Option  create(char  opt)  throws  IllegalArgumentException  {      [BUGGY]  OptionBuilder  instance  =  new  OptionBuilder(opt.length());  [BUGGY]      return  create(String.valueOf(opt));  }  [CLASS]  OptionBuilder  [METHOD]  create  [RETURN_TYPE]  Option  char  opt  [VARIABLES]  boolean  hasArg  newRequired  optionalArg  required  OptionBuilder  instance  char  opt  sep  valuesep  Object  newType  type  String  argName  description  longopt  name  newDescription  newLongopt  int  num  numArgs  numberOfArgs  	projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java	0.3779644730092272	316	316	1	replace	OptionBuilder  instance  =  new  OptionBuilder(opt.length());	  OptionBuilder    instance    =    new    OptionBuilder(opt.toString());    	non-compiled	[CE]  <identifier>  expected	114	None	replace
212	[BUG]  [BUGGY]  return  create(String.valueOf(opt)+  numArgs,  numberOfArgs);  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      public  static  Option  create(char  opt)  throws  IllegalArgumentException  {      [BUGGY]  return  create(String.valueOf(opt)+  numArgs,  numberOfArgs);  [BUGGY]      }  [CLASS]  OptionBuilder  [METHOD]  create  [RETURN_TYPE]  Option  char  opt  [VARIABLES]  boolean  hasArg  newRequired  optionalArg  required  OptionBuilder  instance  char  opt  sep  valuesep  Object  newType  type  String  argName  description  longopt  name  newDescription  newLongopt  int  num  numArgs  numberOfArgs  	projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java	0.3779644730092272	316	316	1	replace	return  create(String.valueOf(opt)+  numArgs,  numberOfArgs);	  return    create(String.valueOf(opt)+    numArgs);    	non-compiled	[CE]  <identifier>  expected	48	None	replace
213	[BUG]  [BUGGY]  return  create(String.valueOf(opt)+  1,  numberOfArgs);  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      public  static  Option  create(char  opt)  throws  IllegalArgumentException  {      [BUGGY]  return  create(String.valueOf(opt)+  1,  numberOfArgs);  [BUGGY]      }  [CLASS]  OptionBuilder  [METHOD]  create  [RETURN_TYPE]  Option  char  opt  [VARIABLES]  boolean  hasArg  newRequired  optionalArg  required  OptionBuilder  instance  char  opt  sep  valuesep  Object  newType  type  String  argName  description  longopt  name  newDescription  newLongopt  int  num  numArgs  numberOfArgs  	projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java	0.3779644730092272	316	316	1	replace	return  create(String.valueOf(opt)+  1,  numberOfArgs);	  return    create(String.valueOf(opt)+    numArgs);    	non-compiled	[CE]  <identifier>  expected	48	None	replace
214	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  this.numberOfArgs;  ++i)  {  OptionBuilder.append(opt);  }  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      public  static  Option  create(char  opt)  throws  IllegalArgumentException  {      [BUGGY]  for(int  i  =  0;  i  <  this.numberOfArgs;  ++i)  {  OptionBuilder.append(opt);  }  [BUGGY]      return  create(String.valueOf(opt));  }  [CLASS]  OptionBuilder  [METHOD]  create  [RETURN_TYPE]  Option  char  opt  [VARIABLES]  boolean  hasArg  newRequired  optionalArg  required  OptionBuilder  instance  char  opt  sep  valuesep  Object  newType  type  String  argName  description  longopt  name  newDescription  newLongopt  int  num  numArgs  numberOfArgs  	projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java	0.3779644730092272	316	316	1	replace	for(int  i  =  0;  i  <  this.numberOfArgs;  ++i)  {  OptionBuilder.append(opt);  }	  if(numberOfArgs    >    0)    {    for(int    i    =    0;    i    <    this.numberOfArgs;    ++i)    {    OptionBuilder.append(opt);    }    	non-compiled	[CE]  <identifier>  expected	105	None	replace
215	[BUG]  [BUGGY]  Integer  numberOfArgs  =(Integer)this.numberOfArgs.clone();  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      public  static  Option  create(char  opt)  throws  IllegalArgumentException  {      [BUGGY]  Integer  numberOfArgs  =(Integer)this.numberOfArgs.clone();  [BUGGY]      return  create(String.valueOf(opt));  }  [CLASS]  OptionBuilder  [METHOD]  create  [RETURN_TYPE]  Option  char  opt  [VARIABLES]  boolean  hasArg  newRequired  optionalArg  required  OptionBuilder  instance  char  opt  sep  valuesep  Object  newType  type  String  argName  description  longopt  name  newDescription  newLongopt  int  num  numArgs  numberOfArgs  	projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java	0.3779644730092272	316	316	1	replace	Integer  numberOfArgs  =(Integer)this.numberOfArgs.clone();	  if(numberOfArgs    >    0)    {    for(int    i    =    0;    i    <    this.numberOfArgs;    ++i)    {    OptionBuilder.append(opt);    }    	non-compiled	[CE]  <identifier>  expected	105	None	replace
216	[BUG]  [BUGGY]  return  create(opt,  String.valueOf(numberOfArgs),  null);  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      public  static  Option  create(char  opt)  throws  IllegalArgumentException  {      [BUGGY]  return  create(opt,  String.valueOf(numberOfArgs),  null);  [BUGGY]      }  [CLASS]  OptionBuilder  [METHOD]  create  [RETURN_TYPE]  Option  char  opt  [VARIABLES]  boolean  hasArg  newRequired  optionalArg  required  OptionBuilder  instance  char  opt  sep  valuesep  Object  newType  type  String  argName  description  longopt  name  newDescription  newLongopt  int  num  numArgs  numberOfArgs  	projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java	0.3779644730092272	316	316	1	replace	return  create(opt,  String.valueOf(numberOfArgs),  null);	  return    create(numberOfArgs,    String.valueOf(opt),    null);    	non-compiled	[CE]  <identifier>  expected	90	None	replace
217	[BUG]  [BUGGY]  return  create(numberOfArgs,  String.valueOf(opt),  null,  null);  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      public  static  Option  create(char  opt)  throws  IllegalArgumentException  {      [BUGGY]  return  create(numberOfArgs,  String.valueOf(opt),  null,  null);  [BUGGY]      }  [CLASS]  OptionBuilder  [METHOD]  create  [RETURN_TYPE]  Option  char  opt  [VARIABLES]  boolean  hasArg  newRequired  optionalArg  required  OptionBuilder  instance  char  opt  sep  valuesep  Object  newType  type  String  argName  description  longopt  name  newDescription  newLongopt  int  num  numArgs  numberOfArgs  	projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java	0.3779644730092272	316	316	1	replace	return  create(numberOfArgs,  String.valueOf(opt),  null,  null);	  return    create(numberOfArgs,    String.valueOf(opt),    null);    	non-compiled	[CE]  <identifier>  expected	90	None	replace
218	[BUG]  [BUGGY]  Integer  numberOfArgs  =  getNullValue(opt);  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      public  static  Option  create(char  opt)  throws  IllegalArgumentException  {      [BUGGY]  Integer  numberOfArgs  =  getNullValue(opt);  [BUGGY]      return  create(String.valueOf(opt));  }  [CLASS]  OptionBuilder  [METHOD]  create  [RETURN_TYPE]  Option  char  opt  [VARIABLES]  boolean  hasArg  newRequired  optionalArg  required  OptionBuilder  instance  char  opt  sep  valuesep  Object  newType  type  String  argName  description  longopt  name  newDescription  newLongopt  int  num  numArgs  numberOfArgs  	projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java	0.3779644730092272	316	316	1	replace	Integer  numberOfArgs  =  getNullValue(opt);	  Integer    numberOfArgs    =    getValue(opt);    	non-compiled	[CE]  <identifier>  expected	55	None	replace
219	[BUG]  [BUGGY]  Integer  numberOfArgs  =  getValue(opt)+  1;  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      public  static  Option  create(char  opt)  throws  IllegalArgumentException  {      [BUGGY]  Integer  numberOfArgs  =  getValue(opt)+  1;  [BUGGY]      return  create(String.valueOf(opt));  }  [CLASS]  OptionBuilder  [METHOD]  create  [RETURN_TYPE]  Option  char  opt  [VARIABLES]  boolean  hasArg  newRequired  optionalArg  required  OptionBuilder  instance  char  opt  sep  valuesep  Object  newType  type  String  argName  description  longopt  name  newDescription  newLongopt  int  num  numArgs  numberOfArgs  	projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java	0.3779644730092272	316	316	1	replace	Integer  numberOfArgs  =  getValue(opt)+  1;	  Integer    numberOfArgs    =    getValue(opt);    	non-compiled	[CE]  <identifier>  expected	55	None	replace
220	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  numArgs;  ++i)  {  OptionBuilder.this.append(null);  }  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      public  static  Option  create(char  opt)  throws  IllegalArgumentException  {      [BUGGY]  for(int  i  =  0;  i  <  numArgs;  ++i)  {  OptionBuilder.this.append(null);  }  [BUGGY]      return  create(String.valueOf(opt));  }  [CLASS]  OptionBuilder  [METHOD]  create  [RETURN_TYPE]  Option  char  opt  [VARIABLES]  boolean  hasArg  newRequired  optionalArg  required  OptionBuilder  instance  char  opt  sep  valuesep  Object  newType  type  String  argName  description  longopt  name  newDescription  newLongopt  int  num  numArgs  numberOfArgs  	projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java	0.3779644730092272	316	316	1	replace	for(int  i  =  0;  i  <  numArgs;  ++i)  {  OptionBuilder.this.append(null);  }	  for(int    i    =    0;    i    <    numberOfArgs;    ++i)    {    OptionBuilder.this.append(null);    }    	non-compiled	[CE]  <identifier>  expected	22	None	replace
221	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  this.numberOfArgs;  ++i)  {  OptionBuilder.this.append(null);  }  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      public  static  Option  create(char  opt)  throws  IllegalArgumentException  {      [BUGGY]  for(int  i  =  0;  i  <  this.numberOfArgs;  ++i)  {  OptionBuilder.this.append(null);  }  [BUGGY]      return  create(String.valueOf(opt));  }  [CLASS]  OptionBuilder  [METHOD]  create  [RETURN_TYPE]  Option  char  opt  [VARIABLES]  boolean  hasArg  newRequired  optionalArg  required  OptionBuilder  instance  char  opt  sep  valuesep  Object  newType  type  String  argName  description  longopt  name  newDescription  newLongopt  int  num  numArgs  numberOfArgs  	projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java	0.3779644730092272	316	316	1	replace	for(int  i  =  0;  i  <  this.numberOfArgs;  ++i)  {  OptionBuilder.this.append(null);  }	  for(int    i    =    0;    i    <    numberOfArgs;    ++i)    {    OptionBuilder.this.append(null);    }    	non-compiled	[CE]  <identifier>  expected	22	None	replace
222	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  numberOfArgs  +  1;  ++i)  {  OptionBuilder.this.append(null);  }  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      public  static  Option  create(char  opt)  throws  IllegalArgumentException  {      [BUGGY]  for(int  i  =  0;  i  <  numberOfArgs  +  1;  ++i)  {  OptionBuilder.this.append(null);  }  [BUGGY]      return  create(String.valueOf(opt));  }  [CLASS]  OptionBuilder  [METHOD]  create  [RETURN_TYPE]  Option  char  opt  [VARIABLES]  boolean  hasArg  newRequired  optionalArg  required  OptionBuilder  instance  char  opt  sep  valuesep  Object  newType  type  String  argName  description  longopt  name  newDescription  newLongopt  int  num  numArgs  numberOfArgs  	projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java	0.3779644730092272	316	316	1	replace	for(int  i  =  0;  i  <  numberOfArgs  +  1;  ++i)  {  OptionBuilder.this.append(null);  }	  for(int    i    =    0;    i    <    numberOfArgs;    ++i)    {    OptionBuilder.this.append(null);    }    	non-compiled	[CE]  <identifier>  expected	22	None	replace
223	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  length;  ++i)  {  OptionBuilder.this.append(null);  }  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]      public  static  Option  create(char  opt)  throws  IllegalArgumentException  {      [BUGGY]  for(int  i  =  0;  i  <  length;  ++i)  {  OptionBuilder.this.append(null);  }  [BUGGY]      return  create(String.valueOf(opt));  }  [CLASS]  OptionBuilder  [METHOD]  create  [RETURN_TYPE]  Option  char  opt  [VARIABLES]  boolean  hasArg  newRequired  optionalArg  required  OptionBuilder  instance  char  opt  sep  valuesep  Object  newType  type  String  argName  description  longopt  name  newDescription  newLongopt  int  num  numArgs  numberOfArgs  	projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java	0.3779644730092272	316	316	1	replace	for(int  i  =  0;  i  <  length;  ++i)  {  OptionBuilder.this.append(null);  }	  for(int    i    =    0;    i    <    numberOfArgs;    ++i)    {    OptionBuilder.this.append(null);    }    	non-compiled	[CE]  <identifier>  expected	22	None	replace
224	[BUG]  [BUGGY]  return  create(Long.valueOf(opt)+  numArgs);  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      public  static  Option  create(char  opt)  throws  IllegalArgumentException  {      [BUGGY]  return  create(Long.valueOf(opt)+  numArgs);  [BUGGY]      }  [CLASS]  OptionBuilder  [METHOD]  create  [RETURN_TYPE]  Option  char  opt  [VARIABLES]  boolean  hasArg  newRequired  optionalArg  required  OptionBuilder  instance  char  opt  sep  valuesep  Object  newType  type  String  argName  description  longopt  name  newDescription  newLongopt  int  num  numArgs  numberOfArgs  	projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java	0.3779644730092272	316	316	1	replace	return  create(Long.valueOf(opt)+  numArgs);	  return    create(Long.valueOf(opt)+    1);    	non-compiled	[CE]  <identifier>  expected	2	None	replace
225	[BUG]  [BUGGY]  return  create(Long.valueOf(opt)+  0);  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      public  static  Option  create(char  opt)  throws  IllegalArgumentException  {      [BUGGY]  return  create(Long.valueOf(opt)+  0);  [BUGGY]      }  [CLASS]  OptionBuilder  [METHOD]  create  [RETURN_TYPE]  Option  char  opt  [VARIABLES]  boolean  hasArg  newRequired  optionalArg  required  OptionBuilder  instance  char  opt  sep  valuesep  Object  newType  type  String  argName  description  longopt  name  newDescription  newLongopt  int  num  numArgs  numberOfArgs  	projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java	0.3779644730092272	316	316	1	replace	return  create(Long.valueOf(opt)+  0);	  return    create(Long.valueOf(opt)+    1);    	non-compiled	[CE]  <identifier>  expected	2	None	replace
226	[BUG]  [BUGGY]  return  create(Long.valueOf(opt)+  num);  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      public  static  Option  create(char  opt)  throws  IllegalArgumentException  {      [BUGGY]  return  create(Long.valueOf(opt)+  num);  [BUGGY]      }  [CLASS]  OptionBuilder  [METHOD]  create  [RETURN_TYPE]  Option  char  opt  [VARIABLES]  boolean  hasArg  newRequired  optionalArg  required  OptionBuilder  instance  char  opt  sep  valuesep  Object  newType  type  String  argName  description  longopt  name  newDescription  newLongopt  int  num  numArgs  numberOfArgs  	projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java	0.3779644730092272	316	316	1	replace	return  create(Long.valueOf(opt)+  num);	  return    create(Long.valueOf(opt)+    1);    	non-compiled	[CE]  <identifier>  expected	2	None	replace
227	[BUG]  [BUGGY]  int  i  =  0;  i  <  numberOfArgs;  ++i)  {  opt  =  i  +  1;  }  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      public  static  Option  create(char  opt)  throws  IllegalArgumentException  {      [BUGGY]  int  i  =  0;  i  <  numberOfArgs;  ++i)  {  opt  =  i  +  1;  }  [BUGGY]      return  create(String.valueOf(opt));  }  [CLASS]  OptionBuilder  [METHOD]  create  [RETURN_TYPE]  Option  char  opt  [VARIABLES]  boolean  hasArg  newRequired  optionalArg  required  OptionBuilder  instance  char  opt  sep  valuesep  Object  newType  type  String  argName  description  longopt  name  newDescription  newLongopt  int  num  numArgs  numberOfArgs  	projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java	0.3779644730092272	316	316	1	replace	int  i  =  0;  i  <  numberOfArgs;  ++i)  {  opt  =  i  +  1;  }	  for(int    i    =    0;    i    <    numberOfArgs;    ++i)    {    opt    =    i    +    1;    }    	non-compiled	[CE]  <identifier>  expected	26	None	replace
228	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  numberOfArgs  +  1;  ++i)  {  opt  =  opt  +  1;  }  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      public  static  Option  create(char  opt)  throws  IllegalArgumentException  {      [BUGGY]  for(int  i  =  0;  i  <  numberOfArgs  +  1;  ++i)  {  opt  =  opt  +  1;  }  [BUGGY]      return  create(String.valueOf(opt));  }  [CLASS]  OptionBuilder  [METHOD]  create  [RETURN_TYPE]  Option  char  opt  [VARIABLES]  boolean  hasArg  newRequired  optionalArg  required  OptionBuilder  instance  char  opt  sep  valuesep  Object  newType  type  String  argName  description  longopt  name  newDescription  newLongopt  int  num  numArgs  numberOfArgs  	projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java	0.3779644730092272	316	316	1	replace	for(int  i  =  0;  i  <  numberOfArgs  +  1;  ++i)  {  opt  =  opt  +  1;  }	  for(int    i    =    0;    i    <    numberOfArgs;    ++i)    {    opt    =    i    +    1;    }    	non-compiled	[CE]  <identifier>  expected	26	None	replace
229	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  numArgs;  ++i)  {  opt  =  getValue(opt);  }  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      public  static  Option  create(char  opt)  throws  IllegalArgumentException  {      [BUGGY]  for(int  i  =  0;  i  <  numArgs;  ++i)  {  opt  =  getValue(opt);  }  [BUGGY]      return  create(String.valueOf(opt));  }  [CLASS]  OptionBuilder  [METHOD]  create  [RETURN_TYPE]  Option  char  opt  [VARIABLES]  boolean  hasArg  newRequired  optionalArg  required  OptionBuilder  instance  char  opt  sep  valuesep  Object  newType  type  String  argName  description  longopt  name  newDescription  newLongopt  int  num  numArgs  numberOfArgs  	projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java	0.3779644730092272	316	316	1	replace	for(int  i  =  0;  i  <  numArgs;  ++i)  {  opt  =  getValue(opt);  }	  for(int    i    =    0;    i    <    numberOfArgs;    ++i)    {    opt    =    getValue(numberOfArgs);    }    	non-compiled	[CE]  <identifier>  expected	44	None	replace
230	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  valuesep;  ++i)  {  opt  =  getValue(numberOfArgs);  }  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      public  static  Option  create(char  opt)  throws  IllegalArgumentException  {      [BUGGY]  for(int  i  =  0;  i  <  valuesep;  ++i)  {  opt  =  getValue(numberOfArgs);  }  [BUGGY]      return  create(String.valueOf(opt));  }  [CLASS]  OptionBuilder  [METHOD]  create  [RETURN_TYPE]  Option  char  opt  [VARIABLES]  boolean  hasArg  newRequired  optionalArg  required  OptionBuilder  instance  char  opt  sep  valuesep  Object  newType  type  String  argName  description  longopt  name  newDescription  newLongopt  int  num  numArgs  numberOfArgs  	projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java	0.3779644730092272	316	316	1	replace	for(int  i  =  0;  i  <  valuesep;  ++i)  {  opt  =  getValue(numberOfArgs);  }	  for(int    i    =    0;    i    <    numberOfArgs;    ++i)    {    opt    =    getValue(numberOfArgs);    }    	non-compiled	[CE]  <identifier>  expected	44	None	replace
231	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  valuesep;  ++i)  {  opt  =  getValue(opt);  }  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      public  static  Option  create(char  opt)  throws  IllegalArgumentException  {      [BUGGY]  for(int  i  =  0;  i  <  valuesep;  ++i)  {  opt  =  getValue(opt);  }  [BUGGY]      return  create(String.valueOf(opt));  }  [CLASS]  OptionBuilder  [METHOD]  create  [RETURN_TYPE]  Option  char  opt  [VARIABLES]  boolean  hasArg  newRequired  optionalArg  required  OptionBuilder  instance  char  opt  sep  valuesep  Object  newType  type  String  argName  description  longopt  name  newDescription  newLongopt  int  num  numArgs  numberOfArgs  	projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java	0.3779644730092272	316	316	1	replace	for(int  i  =  0;  i  <  valuesep;  ++i)  {  opt  =  getValue(opt);  }	  for(int    i    =    0;    i    <    numberOfArgs;    ++i)    {    opt    =    getValue(numberOfArgs);    }    	non-compiled	[CE]  <identifier>  expected	44	None	replace
232	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  numberOfArgs;  ++i)  {  opt  =  getValue(opt);  }  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      public  static  Option  create(char  opt)  throws  IllegalArgumentException  {      [BUGGY]  for(int  i  =  0;  i  <  numberOfArgs;  ++i)  {  opt  =  getValue(opt);  }  [BUGGY]      return  create(String.valueOf(opt));  }  [CLASS]  OptionBuilder  [METHOD]  create  [RETURN_TYPE]  Option  char  opt  [VARIABLES]  boolean  hasArg  newRequired  optionalArg  required  OptionBuilder  instance  char  opt  sep  valuesep  Object  newType  type  String  argName  description  longopt  name  newDescription  newLongopt  int  num  numArgs  numberOfArgs  	projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java	0.3779644730092272	316	316	1	replace	for(int  i  =  0;  i  <  numberOfArgs;  ++i)  {  opt  =  getValue(opt);  }	  for(int    i    =    0;    i    <    numberOfArgs;    ++i)    {    opt    =    getValue(numberOfArgs);    }    	non-compiled	[CE]  <identifier>  expected	44	None	replace
233	[BUG]  [BUGGY]  return  create(Number.valueOf(opt)+  1);  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      public  static  Option  create(char  opt)  throws  IllegalArgumentException  {      [BUGGY]  return  create(Number.valueOf(opt)+  1);  [BUGGY]      }  [CLASS]  OptionBuilder  [METHOD]  create  [RETURN_TYPE]  Option  char  opt  [VARIABLES]  boolean  hasArg  newRequired  optionalArg  required  OptionBuilder  instance  char  opt  sep  valuesep  Object  newType  type  String  argName  description  longopt  name  newDescription  newLongopt  int  num  numArgs  numberOfArgs  	projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java	0.3779644730092272	316	316	1	replace	return  create(Number.valueOf(opt)+  1);	  return    create(Number.valueOf(opt));    	non-compiled	[CE]  <identifier>  expected	3	None	replace
234	[BUG]  [BUGGY]  return  create(Number.valueOf(numberOfArgs));  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      public  static  Option  create(char  opt)  throws  IllegalArgumentException  {      [BUGGY]  return  create(Number.valueOf(numberOfArgs));  [BUGGY]      }  [CLASS]  OptionBuilder  [METHOD]  create  [RETURN_TYPE]  Option  char  opt  [VARIABLES]  boolean  hasArg  newRequired  optionalArg  required  OptionBuilder  instance  char  opt  sep  valuesep  Object  newType  type  String  argName  description  longopt  name  newDescription  newLongopt  int  num  numArgs  numberOfArgs  	projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java	0.3779644730092272	316	316	1	replace	return  create(Number.valueOf(numberOfArgs));	  return    create(Number.valueOf(opt));    	non-compiled	[CE]  <identifier>  expected	3	None	replace
235	[BUG]  [BUGGY]  OptionBuilder  instance  =  new  OptionBuilder(Long.parseLong(opt));  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      public  static  Option  create(char  opt)  throws  IllegalArgumentException  {      [BUGGY]  OptionBuilder  instance  =  new  OptionBuilder(Long.parseLong(opt));  [BUGGY]      return  create(String.valueOf(opt));  }  [CLASS]  OptionBuilder  [METHOD]  create  [RETURN_TYPE]  Option  char  opt  [VARIABLES]  boolean  hasArg  newRequired  optionalArg  required  OptionBuilder  instance  char  opt  sep  valuesep  Object  newType  type  String  argName  description  longopt  name  newDescription  newLongopt  int  num  numArgs  numberOfArgs  	projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java	0.3779644730092272	316	316	1	replace	OptionBuilder  instance  =  new  OptionBuilder(Long.parseLong(opt));	  OptionBuilder    instance    =    new    OptionBuilder(Long.valueOf(opt));    	non-compiled	[CE]  <identifier>  expected	113	None	replace
236	[BUG]  [BUGGY]  OptionBuilder  instance  =  new  OptionBuilder(Long.valueOf(opt)+  1);  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      public  static  Option  create(char  opt)  throws  IllegalArgumentException  {      [BUGGY]  OptionBuilder  instance  =  new  OptionBuilder(Long.valueOf(opt)+  1);  [BUGGY]      return  create(String.valueOf(opt));  }  [CLASS]  OptionBuilder  [METHOD]  create  [RETURN_TYPE]  Option  char  opt  [VARIABLES]  boolean  hasArg  newRequired  optionalArg  required  OptionBuilder  instance  char  opt  sep  valuesep  Object  newType  type  String  argName  description  longopt  name  newDescription  newLongopt  int  num  numArgs  numberOfArgs  	projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java	0.3779644730092272	316	316	1	replace	OptionBuilder  instance  =  new  OptionBuilder(Long.valueOf(opt)+  1);	  OptionBuilder    instance    =    new    OptionBuilder(Long.valueOf(opt));    	non-compiled	[CE]  <identifier>  expected	113	None	replace
237	[BUG]  [BUGGY]  return  create(String.valueOf(opt)+  argName,  description);  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      public  static  Option  create(char  opt)  throws  IllegalArgumentException  {      [BUGGY]  return  create(String.valueOf(opt)+  argName,  description);  [BUGGY]      }  [CLASS]  OptionBuilder  [METHOD]  create  [RETURN_TYPE]  Option  char  opt  [VARIABLES]  boolean  hasArg  newRequired  optionalArg  required  OptionBuilder  instance  char  opt  sep  valuesep  Object  newType  type  String  argName  description  longopt  name  newDescription  newLongopt  int  num  numArgs  numberOfArgs  	projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java	0.3779644730092272	316	316	1	replace	return  create(String.valueOf(opt)+  argName,  description);	  return    create(String.valueOf(opt)+    argName);    	non-compiled	[CE]  <identifier>  expected	99	None	replace
238	[BUG]  [BUGGY]  return  create(String.valueOf(opt)+  name);  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      public  static  Option  create(char  opt)  throws  IllegalArgumentException  {      [BUGGY]  return  create(String.valueOf(opt)+  name);  [BUGGY]      }  [CLASS]  OptionBuilder  [METHOD]  create  [RETURN_TYPE]  Option  char  opt  [VARIABLES]  boolean  hasArg  newRequired  optionalArg  required  OptionBuilder  instance  char  opt  sep  valuesep  Object  newType  type  String  argName  description  longopt  name  newDescription  newLongopt  int  num  numArgs  numberOfArgs  	projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java	0.3779644730092272	316	316	1	replace	return  create(String.valueOf(opt)+  name);	  return    create(String.valueOf(opt)+    argName);    	non-compiled	[CE]  <identifier>  expected	99	None	replace
239	[BUG]  [BUGGY]  if(opt  ==  Long.MIN_VALUE  ||  opt!=  Long.MAX_VALUE)  {  return  create(longopt,  String.valueOf(opt));  }  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      public  static  Option  create(char  opt)  throws  IllegalArgumentException  {      [BUGGY]  if(opt  ==  Long.MIN_VALUE  ||  opt!=  Long.MAX_VALUE)  {  return  create(longopt,  String.valueOf(opt));  }  [BUGGY]      return  create(String.valueOf(opt));  }  [CLASS]  OptionBuilder  [METHOD]  create  [RETURN_TYPE]  Option  char  opt  [VARIABLES]  boolean  hasArg  newRequired  optionalArg  required  OptionBuilder  instance  char  opt  sep  valuesep  Object  newType  type  String  argName  description  longopt  name  newDescription  newLongopt  int  num  numArgs  numberOfArgs  	projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java	0.3779644730092272	316	316	1	replace	if(opt  ==  Long.MIN_VALUE  ||  opt!=  Long.MAX_VALUE)  {  return  create(longopt,  String.valueOf(opt));  }	  if(opt    ==    Long.MIN_VALUE)    {    return    create(longopt,    String.valueOf(opt));    }    	non-compiled	[CE]  <identifier>  expected	61	None	replace
240	[BUG]  [BUGGY]  return  create(opt,  String.valueOf(sep));  [CE]  <identifier>  expected  [FE]            AssertionFailedError      [CONTEXT]      public  static  Option  create(char  opt)  throws  IllegalArgumentException  {      [BUGGY]  return  create(opt,  String.valueOf(sep));  [BUGGY]      }  [CLASS]  OptionBuilder  [METHOD]  create  [RETURN_TYPE]  Option  char  opt  [VARIABLES]  boolean  hasArg  newRequired  optionalArg  required  OptionBuilder  instance  char  opt  sep  valuesep  Object  newType  type  String  argName  description  longopt  name  newDescription  newLongopt  int  num  numArgs  numberOfArgs  	projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java	0.3779644730092272	316	316	1	replace	return  create(opt,  String.valueOf(sep));	  return    create(opt,    String.valueOf(longopt));    	non-compiled	[CE]  <identifier>  expected	24	None	replace
241	[BUG]  [BUGGY]  return  create(null,  String.valueOf(opt)+  1);  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      public  static  Option  create(char  opt)  throws  IllegalArgumentException  {      [BUGGY]  return  create(null,  String.valueOf(opt)+  1);  [BUGGY]      }  [CLASS]  OptionBuilder  [METHOD]  create  [RETURN_TYPE]  Option  char  opt  [VARIABLES]  boolean  hasArg  newRequired  optionalArg  required  OptionBuilder  instance  char  opt  sep  valuesep  Object  newType  type  String  argName  description  longopt  name  newDescription  newLongopt  int  num  numArgs  numberOfArgs  	projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java	0.3779644730092272	316	316	1	replace	return  create(null,  String.valueOf(opt)+  1);	  return    create(null,    String.valueOf(opt));    	non-compiled	[CE]  <identifier>  expected	25	None	replace
242	[BUG]  [BUGGY]  return  create(longopt,  Long.valueOf(opt)+  1);  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      public  static  Option  create(char  opt)  throws  IllegalArgumentException  {      [BUGGY]  return  create(longopt,  Long.valueOf(opt)+  1);  [BUGGY]      }  [CLASS]  OptionBuilder  [METHOD]  create  [RETURN_TYPE]  Option  char  opt  [VARIABLES]  boolean  hasArg  newRequired  optionalArg  required  OptionBuilder  instance  char  opt  sep  valuesep  Object  newType  type  String  argName  description  longopt  name  newDescription  newLongopt  int  num  numArgs  numberOfArgs  	projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java	0.3779644730092272	316	316	1	replace	return  create(longopt,  Long.valueOf(opt)+  1);	  return    create(Long.valueOf(opt)+    1);    	non-compiled	[CE]  <identifier>  expected	2	None	replace
243	[BUG]  [BUGGY]  if(opt  ==  null)  {  allowNumberOfArgs(opt)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      public  static  Option  create(char  opt)  throws  IllegalArgumentException  {      [BUGGY]  if(opt  ==  null)  {  allowNumberOfArgs(opt)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      return  create(String.valueOf(opt));  }  [CLASS]  OptionBuilder  [METHOD]  create  [RETURN_TYPE]  Option  char  opt  [VARIABLES]  boolean  hasArg  newRequired  optionalArg  required  OptionBuilder  instance  char  opt  sep  valuesep  Object  newType  type  String  argName  description  longopt  name  newDescription  newLongopt  int  num  numArgs  numberOfArgs  	projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java	0.3779644730092272	316	316	1	replace	if(opt  ==  null)  {  allowNumberOfArgs(opt)  {  throw  new  IllegalArgumentException( " ");  }	  allowNumberOfArgs(opt)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  <identifier>  expected	16	None	replace
244	[BUG]  [BUGGY]  if(opt!=  null)  {  allowNumberOfArgs(opt)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      public  static  Option  create(char  opt)  throws  IllegalArgumentException  {      [BUGGY]  if(opt!=  null)  {  allowNumberOfArgs(opt)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      return  create(String.valueOf(opt));  }  [CLASS]  OptionBuilder  [METHOD]  create  [RETURN_TYPE]  Option  char  opt  [VARIABLES]  boolean  hasArg  newRequired  optionalArg  required  OptionBuilder  instance  char  opt  sep  valuesep  Object  newType  type  String  argName  description  longopt  name  newDescription  newLongopt  int  num  numArgs  numberOfArgs  	projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java	0.3779644730092272	316	316	1	replace	if(opt!=  null)  {  allowNumberOfArgs(opt)  {  throw  new  IllegalArgumentException( " ");  }	  allowNumberOfArgs(opt)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  <identifier>  expected	16	None	replace
245	[BUG]  [BUGGY]  if(numberOfArgs  >  0)  {  for(int  i  =  0;  i  <  numberOfArgs;  i++)  {  opt  =  opt  +  1;  }  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      public  static  Option  create(char  opt)  throws  IllegalArgumentException  {      [BUGGY]  if(numberOfArgs  >  0)  {  for(int  i  =  0;  i  <  numberOfArgs;  i++)  {  opt  =  opt  +  1;  }  [BUGGY]      return  create(String.valueOf(opt));  }  [CLASS]  OptionBuilder  [METHOD]  create  [RETURN_TYPE]  Option  char  opt  [VARIABLES]  boolean  hasArg  newRequired  optionalArg  required  OptionBuilder  instance  char  opt  sep  valuesep  Object  newType  type  String  argName  description  longopt  name  newDescription  newLongopt  int  num  numArgs  numberOfArgs  	projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java	0.3779644730092272	316	316	1	replace	if(numberOfArgs  >  0)  {  for(int  i  =  0;  i  <  numberOfArgs;  i++)  {  opt  =  opt  +  1;  }	  if(opt    >    0)    {    for(int    i    =    0;    i    <    numberOfArgs;    i++)    {    opt    =    opt    +    1;    }    	non-compiled	[CE]  <identifier>  expected	115	None	replace
246	[BUG]  [BUGGY]  if(numberOfArgs  >  0)  {  for(int  i  =  0;  i  <  numArgs;  i++)  {  opt  =  opt  +  1;  }  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      public  static  Option  create(char  opt)  throws  IllegalArgumentException  {      [BUGGY]  if(numberOfArgs  >  0)  {  for(int  i  =  0;  i  <  numArgs;  i++)  {  opt  =  opt  +  1;  }  [BUGGY]      return  create(String.valueOf(opt));  }  [CLASS]  OptionBuilder  [METHOD]  create  [RETURN_TYPE]  Option  char  opt  [VARIABLES]  boolean  hasArg  newRequired  optionalArg  required  OptionBuilder  instance  char  opt  sep  valuesep  Object  newType  type  String  argName  description  longopt  name  newDescription  newLongopt  int  num  numArgs  numberOfArgs  	projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java	0.3779644730092272	316	316	1	replace	if(numberOfArgs  >  0)  {  for(int  i  =  0;  i  <  numArgs;  i++)  {  opt  =  opt  +  1;  }	  if(opt    >    0)    {    for(int    i    =    0;    i    <    numberOfArgs;    i++)    {    opt    =    opt    +    1;    }    	non-compiled	[CE]  <identifier>  expected	115	None	replace
247	[BUG]  [BUGGY]  int  numberOfArgs  =  getNumberOfArgs(opt  +  1);  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      public  static  Option  create(char  opt)  throws  IllegalArgumentException  {      [BUGGY]  int  numberOfArgs  =  getNumberOfArgs(opt  +  1);  [BUGGY]      return  create(String.valueOf(opt));  }  [CLASS]  OptionBuilder  [METHOD]  create  [RETURN_TYPE]  Option  char  opt  [VARIABLES]  boolean  hasArg  newRequired  optionalArg  required  OptionBuilder  instance  char  opt  sep  valuesep  Object  newType  type  String  argName  description  longopt  name  newDescription  newLongopt  int  num  numArgs  numberOfArgs  	projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java	0.3779644730092272	316	316	1	replace	int  numberOfArgs  =  getNumberOfArgs(opt  +  1);	  int    numberOfArgs    =    getNumberOfArgs(opt);    	non-compiled	[CE]  <identifier>  expected	63	None	replace
248	[BUG]  [BUGGY]  int  numberOfArgs  =  getNumberOfArgs(opt,  0);  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      public  static  Option  create(char  opt)  throws  IllegalArgumentException  {      [BUGGY]  int  numberOfArgs  =  getNumberOfArgs(opt,  0);  [BUGGY]      return  create(String.valueOf(opt));  }  [CLASS]  OptionBuilder  [METHOD]  create  [RETURN_TYPE]  Option  char  opt  [VARIABLES]  boolean  hasArg  newRequired  optionalArg  required  OptionBuilder  instance  char  opt  sep  valuesep  Object  newType  type  String  argName  description  longopt  name  newDescription  newLongopt  int  num  numArgs  numberOfArgs  	projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java	0.3779644730092272	316	316	1	replace	int  numberOfArgs  =  getNumberOfArgs(opt,  0);	  int    numberOfArgs    =    getNumberOfArgs(opt);    	non-compiled	[CE]  <identifier>  expected	63	None	replace
249	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  numArgs;  ++i)  {  OptionBuilder.this.append(longopt);  }  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      public  static  Option  create(char  opt)  throws  IllegalArgumentException  {      [BUGGY]  for(int  i  =  0;  i  <  numArgs;  ++i)  {  OptionBuilder.this.append(longopt);  }  [BUGGY]      return  create(String.valueOf(opt));  }  [CLASS]  OptionBuilder  [METHOD]  create  [RETURN_TYPE]  Option  char  opt  [VARIABLES]  boolean  hasArg  newRequired  optionalArg  required  OptionBuilder  instance  char  opt  sep  valuesep  Object  newType  type  String  argName  description  longopt  name  newDescription  newLongopt  int  num  numArgs  numberOfArgs  	projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java	0.3779644730092272	316	316	1	replace	for(int  i  =  0;  i  <  numArgs;  ++i)  {  OptionBuilder.this.append(longopt);  }	  for(int    i    =    0;    i    <    numberOfArgs;    ++i)    {    OptionBuilder.this.append(opt);    }    	non-compiled	[CE]  <identifier>  expected	20	None	replace
250	[BUG]  [BUGGY]  Integer.toString(numberOfArgs)  ==  Long.MIN_VALUE)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      public  static  Option  create(char  opt)  throws  IllegalArgumentException  {      [BUGGY]  Integer.toString(numberOfArgs)  ==  Long.MIN_VALUE)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      return  create(String.valueOf(opt));  }  [CLASS]  OptionBuilder  [METHOD]  create  [RETURN_TYPE]  Option  char  opt  [VARIABLES]  boolean  hasArg  newRequired  optionalArg  required  OptionBuilder  instance  char  opt  sep  valuesep  Object  newType  type  String  argName  description  longopt  name  newDescription  newLongopt  int  num  numArgs  numberOfArgs  	projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java	0.3779644730092272	316	316	1	replace	Integer.toString(numberOfArgs)  ==  Long.MIN_VALUE)  {  throw  new  IllegalArgumentException( " ");  }	  Integer.toString(opt)    ==    Long.MIN_VALUE)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  <identifier>  expected	18	None	replace
251	[BUG]  [BUGGY]  Integer.toString(opt)  <  =  Long.MIN_VALUE)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      public  static  Option  create(char  opt)  throws  IllegalArgumentException  {      [BUGGY]  Integer.toString(opt)  <  =  Long.MIN_VALUE)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      return  create(String.valueOf(opt));  }  [CLASS]  OptionBuilder  [METHOD]  create  [RETURN_TYPE]  Option  char  opt  [VARIABLES]  boolean  hasArg  newRequired  optionalArg  required  OptionBuilder  instance  char  opt  sep  valuesep  Object  newType  type  String  argName  description  longopt  name  newDescription  newLongopt  int  num  numArgs  numberOfArgs  	projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java	0.3779644730092272	316	316	1	replace	Integer.toString(opt)  <  =  Long.MIN_VALUE)  {  throw  new  IllegalArgumentException( " ");  }	  Integer.toString(opt)    ==    Long.MIN_VALUE)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  <identifier>  expected	18	None	replace
252	[BUG]  [BUGGY]  int  numberOfArgs  >  0)  {  return  create(opt,  String.valueOf(opt));  }  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      public  static  Option  create(char  opt)  throws  IllegalArgumentException  {      [BUGGY]  int  numberOfArgs  >  0)  {  return  create(opt,  String.valueOf(opt));  }  [BUGGY]      }  [CLASS]  OptionBuilder  [METHOD]  create  [RETURN_TYPE]  Option  char  opt  [VARIABLES]  boolean  hasArg  newRequired  optionalArg  required  OptionBuilder  instance  char  opt  sep  valuesep  Object  newType  type  String  argName  description  longopt  name  newDescription  newLongopt  int  num  numArgs  numberOfArgs  	projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java	0.3779644730092272	316	316	1	replace	int  numberOfArgs  >  0)  {  return  create(opt,  String.valueOf(opt));  }	  int    numberOfArgs    >    0)    {    return    create(String.valueOf(opt));    }    	non-compiled	[CE]  <identifier>  expected	68	None	replace
253	[BUG]  [BUGGY]  int  numberOfArgs  >  0)  {  return  create(numberOfArgs,  opt);  }  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      public  static  Option  create(char  opt)  throws  IllegalArgumentException  {      [BUGGY]  int  numberOfArgs  >  0)  {  return  create(numberOfArgs,  opt);  }  [BUGGY]      }  [CLASS]  OptionBuilder  [METHOD]  create  [RETURN_TYPE]  Option  char  opt  [VARIABLES]  boolean  hasArg  newRequired  optionalArg  required  OptionBuilder  instance  char  opt  sep  valuesep  Object  newType  type  String  argName  description  longopt  name  newDescription  newLongopt  int  num  numArgs  numberOfArgs  	projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java	0.3779644730092272	316	316	1	replace	int  numberOfArgs  >  0)  {  return  create(numberOfArgs,  opt);  }	  int    numberOfArgs    >    0)    {    return    create(String.valueOf(opt));    }    	non-compiled	[CE]  <identifier>  expected	68	None	replace
254	[BUG]  [BUGGY]  if(opt!=  null)  {  return  create(opt.toLowerCase());  }  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      public  static  Option  create(char  opt)  throws  IllegalArgumentException  {      [BUGGY]  if(opt!=  null)  {  return  create(opt.toLowerCase());  }  [BUGGY]      }  [CLASS]  OptionBuilder  [METHOD]  create  [RETURN_TYPE]  Option  char  opt  [VARIABLES]  boolean  hasArg  newRequired  optionalArg  required  OptionBuilder  instance  char  opt  sep  valuesep  Object  newType  type  String  argName  description  longopt  name  newDescription  newLongopt  int  num  numArgs  numberOfArgs  	projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java	0.3779644730092272	316	316	1	replace	if(opt!=  null)  {  return  create(opt.toLowerCase());  }	  return    create(opt.toLowerCase());    	non-compiled	[CE]  <identifier>  expected	79	None	replace
255	[BUG]  [BUGGY]  return  create(opt.toLowerCase()  +  1);  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      public  static  Option  create(char  opt)  throws  IllegalArgumentException  {      [BUGGY]  return  create(opt.toLowerCase()  +  1);  [BUGGY]      }  [CLASS]  OptionBuilder  [METHOD]  create  [RETURN_TYPE]  Option  char  opt  [VARIABLES]  boolean  hasArg  newRequired  optionalArg  required  OptionBuilder  instance  char  opt  sep  valuesep  Object  newType  type  String  argName  description  longopt  name  newDescription  newLongopt  int  num  numArgs  numberOfArgs  	projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java	0.3779644730092272	316	316	1	replace	return  create(opt.toLowerCase()  +  1);	  return    create(opt.toLowerCase());    	non-compiled	[CE]  <identifier>  expected	79	None	replace
256	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  numOfArgs;  ++i)  {  opt  =  getValue(i);  }  [CE]  <identifier>  expected  [FE]            AssertionFailedError      [CONTEXT]      public  static  Option  create(char  opt)  throws  IllegalArgumentException  {      [BUGGY]  for(int  i  =  0;  i  <  numOfArgs;  ++i)  {  opt  =  getValue(i);  }  [BUGGY]      return  create(String.valueOf(opt));  }  [CLASS]  OptionBuilder  [METHOD]  create  [RETURN_TYPE]  Option  char  opt  [VARIABLES]  boolean  hasArg  newRequired  optionalArg  required  OptionBuilder  instance  char  opt  sep  valuesep  Object  newType  type  String  argName  description  longopt  name  newDescription  newLongopt  int  num  numArgs  numberOfArgs  	projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java	0.3779644730092272	316	316	1	replace	for(int  i  =  0;  i  <  numOfArgs;  ++i)  {  opt  =  getValue(i);  }	  for(int    i    =    0;    i    <    numberOfArgs;    ++i)    {    opt    =    getValue(i);    }    	non-compiled	[CE]  <identifier>  expected	42	None	replace
257	[BUG]  [BUGGY]  int  numberOfArgs  >=  0)  {  return  create(String.valueOf(opt));  }  else  {  throw  new  IllegalArgumentException( " ");  }  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      public  static  Option  create(char  opt)  throws  IllegalArgumentException  {      [BUGGY]  int  numberOfArgs  >=  0)  {  return  create(String.valueOf(opt));  }  else  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      }  [CLASS]  OptionBuilder  [METHOD]  create  [RETURN_TYPE]  Option  char  opt  [VARIABLES]  boolean  hasArg  newRequired  optionalArg  required  OptionBuilder  instance  char  opt  sep  valuesep  Object  newType  type  String  argName  description  longopt  name  newDescription  newLongopt  int  num  numArgs  numberOfArgs  	projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java	0.3779644730092272	316	316	1	replace	int  numberOfArgs  >=  0)  {  return  create(String.valueOf(opt));  }  else  {  throw  new  IllegalArgumentException( " ");  }	  numberOfArgs    >=    0)    {    return    create(String.valueOf(opt));    }    else    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  <identifier>  expected	85	None	replace
258	[BUG]  [BUGGY]  numberOfArgs  >=  1)  {  return  create(String.valueOf(opt));  }  else  {  throw  new  IllegalArgumentException( " ");  }  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      public  static  Option  create(char  opt)  throws  IllegalArgumentException  {      [BUGGY]  numberOfArgs  >=  1)  {  return  create(String.valueOf(opt));  }  else  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      }  [CLASS]  OptionBuilder  [METHOD]  create  [RETURN_TYPE]  Option  char  opt  [VARIABLES]  boolean  hasArg  newRequired  optionalArg  required  OptionBuilder  instance  char  opt  sep  valuesep  Object  newType  type  String  argName  description  longopt  name  newDescription  newLongopt  int  num  numArgs  numberOfArgs  	projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java	0.3779644730092272	316	316	1	replace	numberOfArgs  >=  1)  {  return  create(String.valueOf(opt));  }  else  {  throw  new  IllegalArgumentException( " ");  }	  if(numberOfArgs    >    1)    {    return    create(String.valueOf(opt));    }    else    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  <identifier>  expected	97	None	replace
259	[BUG]  [BUGGY]  numberOfArgs  ==  1)  {  return  create(String.valueOf(opt));  }  else  {  throw  new  IllegalArgumentException( " ");  }  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      public  static  Option  create(char  opt)  throws  IllegalArgumentException  {      [BUGGY]  numberOfArgs  ==  1)  {  return  create(String.valueOf(opt));  }  else  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      }  [CLASS]  OptionBuilder  [METHOD]  create  [RETURN_TYPE]  Option  char  opt  [VARIABLES]  boolean  hasArg  newRequired  optionalArg  required  OptionBuilder  instance  char  opt  sep  valuesep  Object  newType  type  String  argName  description  longopt  name  newDescription  newLongopt  int  num  numArgs  numberOfArgs  	projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java	0.3779644730092272	316	316	1	replace	numberOfArgs  ==  1)  {  return  create(String.valueOf(opt));  }  else  {  throw  new  IllegalArgumentException( " ");  }	  if(numberOfArgs    >    1)    {    return    create(String.valueOf(opt));    }    else    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  <identifier>  expected	97	None	replace
260	[BUG]  [BUGGY]  numberOfArgs  >  1)  {  return  create(String.valueOf(opt));  }  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      public  static  Option  create(char  opt)  throws  IllegalArgumentException  {      [BUGGY]  numberOfArgs  >  1)  {  return  create(String.valueOf(opt));  }  [BUGGY]      }  [CLASS]  OptionBuilder  [METHOD]  create  [RETURN_TYPE]  Option  char  opt  [VARIABLES]  boolean  hasArg  newRequired  optionalArg  required  OptionBuilder  instance  char  opt  sep  valuesep  Object  newType  type  String  argName  description  longopt  name  newDescription  newLongopt  int  num  numArgs  numberOfArgs  	projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java	0.3779644730092272	316	316	1	replace	numberOfArgs  >  1)  {  return  create(String.valueOf(opt));  }	  numberOfArgs    >    0)    {    return    create(String.valueOf(opt));    }    	non-compiled	[CE]  <identifier>  expected	69	None	replace
261	[BUG]  [BUGGY]  Integer  numberOfArgs  =  getValue(opt  +  1);  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      public  static  Option  create(char  opt)  throws  IllegalArgumentException  {      [BUGGY]  Integer  numberOfArgs  =  getValue(opt  +  1);  [BUGGY]      return  create(String.valueOf(opt));  }  [CLASS]  OptionBuilder  [METHOD]  create  [RETURN_TYPE]  Option  char  opt  [VARIABLES]  boolean  hasArg  newRequired  optionalArg  required  OptionBuilder  instance  char  opt  sep  valuesep  Object  newType  type  String  argName  description  longopt  name  newDescription  newLongopt  int  num  numArgs  numberOfArgs  	projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java	0.3779644730092272	316	316	1	replace	Integer  numberOfArgs  =  getValue(opt  +  1);	  Integer    numberOfArgs    =    getValue(opt);    	non-compiled	[CE]  <identifier>  expected	55	None	replace
262	[BUG]  [BUGGY]  if(opt!=  Long.MIN_VALUE  ||  opt  ==  Long.MAX_VALUE)  {  return  create(String.valueOf(opt));  }  else  {  throw  new  IllegalArgumentException( " ");  }  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      public  static  Option  create(char  opt)  throws  IllegalArgumentException  {      [BUGGY]  if(opt!=  Long.MIN_VALUE  ||  opt  ==  Long.MAX_VALUE)  {  return  create(String.valueOf(opt));  }  else  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      return  create(String.valueOf(opt));  }  [CLASS]  OptionBuilder  [METHOD]  create  [RETURN_TYPE]  Option  char  opt  [VARIABLES]  boolean  hasArg  newRequired  optionalArg  required  OptionBuilder  instance  char  opt  sep  valuesep  Object  newType  type  String  argName  description  longopt  name  newDescription  newLongopt  int  num  numArgs  numberOfArgs  	projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java	0.3779644730092272	316	316	1	replace	if(opt!=  Long.MIN_VALUE  ||  opt  ==  Long.MAX_VALUE)  {  return  create(String.valueOf(opt));  }  else  {  throw  new  IllegalArgumentException( " ");  }	  if(opt    ==    Long.MIN_VALUE    ||    opt    ==    Long.MAX_VALUE)    {    return    create(String.valueOf(opt));    }    else    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  <identifier>  expected	92	None	replace
263	[BUG]  [BUGGY]  OptionBuilder.this.addValue(new  Long(opt));  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      public  static  Option  create(char  opt)  throws  IllegalArgumentException  {      [BUGGY]  OptionBuilder.this.addValue(new  Long(opt));  [BUGGY]      return  create(String.valueOf(opt));  }  [CLASS]  OptionBuilder  [METHOD]  create  [RETURN_TYPE]  Option  char  opt  [VARIABLES]  boolean  hasArg  newRequired  optionalArg  required  OptionBuilder  instance  char  opt  sep  valuesep  Object  newType  type  String  argName  description  longopt  name  newDescription  newLongopt  int  num  numArgs  numberOfArgs  	projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java	0.3779644730092272	316	316	1	replace	OptionBuilder.this.addValue(new  Long(opt));	  if(opt!=    Long.MIN_VALUE)    {    return    create(String.valueOf(opt));    }    	non-compiled	[CE]  <identifier>  expected	109	None	replace
264	[BUG]  [BUGGY]  if(opt!=  Long.MIN_VALUE)  {  return  create(Long.valueOf(opt));  }  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      public  static  Option  create(char  opt)  throws  IllegalArgumentException  {      [BUGGY]  if(opt!=  Long.MIN_VALUE)  {  return  create(Long.valueOf(opt));  }  [BUGGY]      return  create(String.valueOf(opt));  }  [CLASS]  OptionBuilder  [METHOD]  create  [RETURN_TYPE]  Option  char  opt  [VARIABLES]  boolean  hasArg  newRequired  optionalArg  required  OptionBuilder  instance  char  opt  sep  valuesep  Object  newType  type  String  argName  description  longopt  name  newDescription  newLongopt  int  num  numArgs  numberOfArgs  	projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java	0.3779644730092272	316	316	1	replace	if(opt!=  Long.MIN_VALUE)  {  return  create(Long.valueOf(opt));  }	  if(opt!=    Long.MIN_VALUE)    {    return    create(String.valueOf(opt));    }    	non-compiled	[CE]  <identifier>  expected	109	None	replace
265	[BUG]  [BUGGY]  OptionBuilder  instance  =  new  OptionBuilder(opt.toLowerCase());  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      public  static  Option  create(char  opt)  throws  IllegalArgumentException  {      [BUGGY]  OptionBuilder  instance  =  new  OptionBuilder(opt.toLowerCase());  [BUGGY]      return  create(String.valueOf(opt));  }  [CLASS]  OptionBuilder  [METHOD]  create  [RETURN_TYPE]  Option  char  opt  [VARIABLES]  boolean  hasArg  newRequired  optionalArg  required  OptionBuilder  instance  char  opt  sep  valuesep  Object  newType  type  String  argName  description  longopt  name  newDescription  newLongopt  int  num  numArgs  numberOfArgs  	projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java	0.3779644730092272	316	316	1	replace	OptionBuilder  instance  =  new  OptionBuilder(opt.toLowerCase());	  OptionBuilder    instance    =    new    OptionBuilder(opt.toString());    	non-compiled	[CE]  <identifier>  expected	114	None	replace
266	[BUG]  [BUGGY]  OptionBuilder  instance  =(OptionBuilder)opt;  [CE]  <identifier>  expected  [FE]            AssertionFailedError      [CONTEXT]      public  static  Option  create(char  opt)  throws  IllegalArgumentException  {      [BUGGY]  OptionBuilder  instance  =(OptionBuilder)opt;  [BUGGY]      return  create(String.valueOf(opt));  }  [CLASS]  OptionBuilder  [METHOD]  create  [RETURN_TYPE]  Option  char  opt  [VARIABLES]  boolean  hasArg  newRequired  optionalArg  required  OptionBuilder  instance  char  opt  sep  valuesep  Object  newType  type  String  argName  description  longopt  name  newDescription  newLongopt  int  num  numArgs  numberOfArgs  	projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java	0.3779644730092272	316	316	1	replace	OptionBuilder  instance  =(OptionBuilder)opt;	  if(opt!=    null)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  <identifier>  expected	72	None	replace
267	[BUG]  [BUGGY]  OptionBuilder  instance  =  new  OptionBuilder(opt);  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      public  static  Option  create(char  opt)  throws  IllegalArgumentException  {      [BUGGY]  OptionBuilder  instance  =  new  OptionBuilder(opt);  [BUGGY]      return  create(String.valueOf(opt));  }  [CLASS]  OptionBuilder  [METHOD]  create  [RETURN_TYPE]  Option  char  opt  [VARIABLES]  boolean  hasArg  newRequired  optionalArg  required  OptionBuilder  instance  char  opt  sep  valuesep  Object  newType  type  String  argName  description  longopt  name  newDescription  newLongopt  int  num  numArgs  numberOfArgs  	projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java	0.3779644730092272	316	316	1	replace	OptionBuilder  instance  =  new  OptionBuilder(opt);	  if(opt!=    null)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  <identifier>  expected	72	None	replace
268	[BUG]  [BUGGY]  return  create(numberOfArgs,  String.valueOf(opt),  this);  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      public  static  Option  create(char  opt)  throws  IllegalArgumentException  {      [BUGGY]  return  create(numberOfArgs,  String.valueOf(opt),  this);  [BUGGY]      }  [CLASS]  OptionBuilder  [METHOD]  create  [RETURN_TYPE]  Option  char  opt  [VARIABLES]  boolean  hasArg  newRequired  optionalArg  required  OptionBuilder  instance  char  opt  sep  valuesep  Object  newType  type  String  argName  description  longopt  name  newDescription  newLongopt  int  num  numArgs  numberOfArgs  	projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java	0.3779644730092272	316	316	1	replace	return  create(numberOfArgs,  String.valueOf(opt),  this);	  return    create(numberOfArgs,    String.valueOf(opt),    null);    	non-compiled	[CE]  <identifier>  expected	90	None	replace
269	[BUG]  [BUGGY]  OptionBuilder  instance  =  new  OptionBuilder(Long.valueOf(opt  +  1));  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      public  static  Option  create(char  opt)  throws  IllegalArgumentException  {      [BUGGY]  OptionBuilder  instance  =  new  OptionBuilder(Long.valueOf(opt  +  1));  [BUGGY]      return  create(String.valueOf(opt));  }  [CLASS]  OptionBuilder  [METHOD]  create  [RETURN_TYPE]  Option  char  opt  [VARIABLES]  boolean  hasArg  newRequired  optionalArg  required  OptionBuilder  instance  char  opt  sep  valuesep  Object  newType  type  String  argName  description  longopt  name  newDescription  newLongopt  int  num  numArgs  numberOfArgs  	projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java	0.3779644730092272	316	316	1	replace	OptionBuilder  instance  =  new  OptionBuilder(Long.valueOf(opt  +  1));	  OptionBuilder    instance    =    new    OptionBuilder(Long.valueOf(opt));    	non-compiled	[CE]  <identifier>  expected	113	None	replace
270	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  this.numberOfArgs;  ++i)  {  opt  =  getValue(i,  null);  }  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      public  static  Option  create(char  opt)  throws  IllegalArgumentException  {      [BUGGY]  for(int  i  =  0;  i  <  this.numberOfArgs;  ++i)  {  opt  =  getValue(i,  null);  }  [BUGGY]      return  create(String.valueOf(opt));  }  [CLASS]  OptionBuilder  [METHOD]  create  [RETURN_TYPE]  Option  char  opt  [VARIABLES]  boolean  hasArg  newRequired  optionalArg  required  OptionBuilder  instance  char  opt  sep  valuesep  Object  newType  type  String  argName  description  longopt  name  newDescription  newLongopt  int  num  numArgs  numberOfArgs  	projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java	0.3779644730092272	316	316	1	replace	for(int  i  =  0;  i  <  this.numberOfArgs;  ++i)  {  opt  =  getValue(i,  null);  }	  for(int    i    =    0;    i    <    numberOfArgs;    ++i)    {    opt    =    getValue(i,    null);    }    	non-compiled	[CE]  <identifier>  expected	54	None	replace
271	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  numArgs;  ++i)  {  opt  =  getValue(opt,  null);  }  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      public  static  Option  create(char  opt)  throws  IllegalArgumentException  {      [BUGGY]  for(int  i  =  0;  i  <  numArgs;  ++i)  {  opt  =  getValue(opt,  null);  }  [BUGGY]      return  create(String.valueOf(opt));  }  [CLASS]  OptionBuilder  [METHOD]  create  [RETURN_TYPE]  Option  char  opt  [VARIABLES]  boolean  hasArg  newRequired  optionalArg  required  OptionBuilder  instance  char  opt  sep  valuesep  Object  newType  type  String  argName  description  longopt  name  newDescription  newLongopt  int  num  numArgs  numberOfArgs  	projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java	0.3779644730092272	316	316	1	replace	for(int  i  =  0;  i  <  numArgs;  ++i)  {  opt  =  getValue(opt,  null);  }	  for(int    i    =    0;    i    <    numberOfArgs;    ++i)    {    opt    =    getValue(i,    null);    }    	non-compiled	[CE]  <identifier>  expected	54	None	replace
272	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  numArgs;  ++i)  {  OptionsBuilder.this.append(longopt);  }  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      public  static  Option  create(char  opt)  throws  IllegalArgumentException  {      [BUGGY]  for(int  i  =  0;  i  <  numArgs;  ++i)  {  OptionsBuilder.this.append(longopt);  }  [BUGGY]      return  create(String.valueOf(opt));  }  [CLASS]  OptionBuilder  [METHOD]  create  [RETURN_TYPE]  Option  char  opt  [VARIABLES]  boolean  hasArg  newRequired  optionalArg  required  OptionBuilder  instance  char  opt  sep  valuesep  Object  newType  type  String  argName  description  longopt  name  newDescription  newLongopt  int  num  numArgs  numberOfArgs  	projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java	0.3779644730092272	316	316	1	replace	for(int  i  =  0;  i  <  numArgs;  ++i)  {  OptionsBuilder.this.append(longopt);  }	  for(int    i    =    0;    i    <    numberOfArgs;    ++i)    {    OptionsBuilder.this.append(opt);    }    	non-compiled	[CE]  <identifier>  expected	23	None	replace
273	[BUG]  [BUGGY]  Thread.currentThread().setContextClassLoader(getRequiredClass(),  null);  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      public  static  Option  create(char  opt)  throws  IllegalArgumentException  {      [BUGGY]  Thread.currentThread().setContextClassLoader(getRequiredClass(),  null);  [BUGGY]      return  create(String.valueOf(opt));  }  [CLASS]  OptionBuilder  [METHOD]  create  [RETURN_TYPE]  Option  char  opt  [VARIABLES]  boolean  hasArg  newRequired  optionalArg  required  OptionBuilder  instance  char  opt  sep  valuesep  Object  newType  type  String  argName  description  longopt  name  newDescription  newLongopt  int  num  numArgs  numberOfArgs  	projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java	0.3779644730092272	316	316	1	replace	Thread.currentThread().setContextClassLoader(getRequiredClass(),  null);	  Thread.currentThread().setContextClassLoader(getRequiredClass());    	non-compiled	[CE]  <identifier>  expected	57	None	replace
274	[BUG]  [BUGGY]  int  numberOfArgs  =  getValue(numberOfArgs  -  1);  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      public  static  Option  create(char  opt)  throws  IllegalArgumentException  {      [BUGGY]  int  numberOfArgs  =  getValue(numberOfArgs  -  1);  [BUGGY]      return  create(String.valueOf(opt));  }  [CLASS]  OptionBuilder  [METHOD]  create  [RETURN_TYPE]  Option  char  opt  [VARIABLES]  boolean  hasArg  newRequired  optionalArg  required  OptionBuilder  instance  char  opt  sep  valuesep  Object  newType  type  String  argName  description  longopt  name  newDescription  newLongopt  int  num  numArgs  numberOfArgs  	projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java	0.3779644730092272	316	316	1	replace	int  numberOfArgs  =  getValue(numberOfArgs  -  1);	  int    numberOfArgs    =    getValue(numberOfArgs);    	non-compiled	[CE]  <identifier>  expected	43	None	replace
275	[BUG]  [BUGGY]  int  numberOfArgs  =  getValue(numberOfArgs  +  1);  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      public  static  Option  create(char  opt)  throws  IllegalArgumentException  {      [BUGGY]  int  numberOfArgs  =  getValue(numberOfArgs  +  1);  [BUGGY]      return  create(String.valueOf(opt));  }  [CLASS]  OptionBuilder  [METHOD]  create  [RETURN_TYPE]  Option  char  opt  [VARIABLES]  boolean  hasArg  newRequired  optionalArg  required  OptionBuilder  instance  char  opt  sep  valuesep  Object  newType  type  String  argName  description  longopt  name  newDescription  newLongopt  int  num  numArgs  numberOfArgs  	projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java	0.3779644730092272	316	316	1	replace	int  numberOfArgs  =  getValue(numberOfArgs  +  1);	  int    numberOfArgs    =    getValue(numberOfArgs);    	non-compiled	[CE]  <identifier>  expected	43	None	replace
276	[BUG]  [BUGGY]  char  numberOfArgs  =  getValue(opt);  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      public  static  Option  create(char  opt)  throws  IllegalArgumentException  {      [BUGGY]  char  numberOfArgs  =  getValue(opt);  [BUGGY]      return  create(String.valueOf(opt));  }  [CLASS]  OptionBuilder  [METHOD]  create  [RETURN_TYPE]  Option  char  opt  [VARIABLES]  boolean  hasArg  newRequired  optionalArg  required  OptionBuilder  instance  char  opt  sep  valuesep  Object  newType  type  String  argName  description  longopt  name  newDescription  newLongopt  int  num  numArgs  numberOfArgs  	projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java	0.3779644730092272	316	316	1	replace	char  numberOfArgs  =  getValue(opt);	  int    numberOfArgs    =    getValue(opt);    	non-compiled	[CE]  <identifier>  expected	95	None	replace
277	[BUG]  [BUGGY]  return  create(newLongopt,  Long.valueOf(opt));  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      public  static  Option  create(char  opt)  throws  IllegalArgumentException  {      [BUGGY]  return  create(newLongopt,  Long.valueOf(opt));  [BUGGY]      }  [CLASS]  OptionBuilder  [METHOD]  create  [RETURN_TYPE]  Option  char  opt  [VARIABLES]  boolean  hasArg  newRequired  optionalArg  required  OptionBuilder  instance  char  opt  sep  valuesep  Object  newType  type  String  argName  description  longopt  name  newDescription  newLongopt  int  num  numArgs  numberOfArgs  	projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java	0.3779644730092272	316	316	1	replace	return  create(newLongopt,  Long.valueOf(opt));	  return    create(longopt,    Long.valueOf(opt));    	non-compiled	[CE]  <identifier>  expected	1	None	replace
278	[BUG]  [BUGGY]  OptionBuilder  instance  =  new  OptionBuilder(numberOfArgs);  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      public  static  Option  create(char  opt)  throws  IllegalArgumentException  {      [BUGGY]  OptionBuilder  instance  =  new  OptionBuilder(numberOfArgs);  [BUGGY]      return  create(String.valueOf(opt));  }  [CLASS]  OptionBuilder  [METHOD]  create  [RETURN_TYPE]  Option  char  opt  [VARIABLES]  boolean  hasArg  newRequired  optionalArg  required  OptionBuilder  instance  char  opt  sep  valuesep  Object  newType  type  String  argName  description  longopt  name  newDescription  newLongopt  int  num  numArgs  numberOfArgs  	projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java	0.3779644730092272	316	316	1	replace	OptionBuilder  instance  =  new  OptionBuilder(numberOfArgs);	  if(opt    >    0)    {    for(int    i    =    0;    i    <    numberOfArgs;    ++i)    {    opt    =    i    +    1;    }    	non-compiled	[CE]  <identifier>  expected	62	None	replace
279	[BUG]  [BUGGY]  int  numberOfArgs  >  0)  {  for(int  i  =  0;  i  <  this.numberOfArgs;  ++i)  {  OptionBuilder.append(opt);  }  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      public  static  Option  create(char  opt)  throws  IllegalArgumentException  {      [BUGGY]  int  numberOfArgs  >  0)  {  for(int  i  =  0;  i  <  this.numberOfArgs;  ++i)  {  OptionBuilder.append(opt);  }  [BUGGY]      return  create(String.valueOf(opt));  }  [CLASS]  OptionBuilder  [METHOD]  create  [RETURN_TYPE]  Option  char  opt  [VARIABLES]  boolean  hasArg  newRequired  optionalArg  required  OptionBuilder  instance  char  opt  sep  valuesep  Object  newType  type  String  argName  description  longopt  name  newDescription  newLongopt  int  num  numArgs  numberOfArgs  	projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java	0.3779644730092272	316	316	1	replace	int  numberOfArgs  >  0)  {  for(int  i  =  0;  i  <  this.numberOfArgs;  ++i)  {  OptionBuilder.append(opt);  }	  if(numberOfArgs    >    0)    {    for(int    i    =    0;    i    <    this.numberOfArgs;    ++i)    {    OptionBuilder.append(opt);    }    	non-compiled	[CE]  <identifier>  expected	105	None	replace
280	[BUG]  [BUGGY]  int  numberOfArgs  >  0)  {  for(int  i  =  0;  i  <  this.numberOfArgs;  ++i)  {  OptionBuilder.append(option);  }  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      public  static  Option  create(char  opt)  throws  IllegalArgumentException  {      [BUGGY]  int  numberOfArgs  >  0)  {  for(int  i  =  0;  i  <  this.numberOfArgs;  ++i)  {  OptionBuilder.append(option);  }  [BUGGY]      return  create(String.valueOf(opt));  }  [CLASS]  OptionBuilder  [METHOD]  create  [RETURN_TYPE]  Option  char  opt  [VARIABLES]  boolean  hasArg  newRequired  optionalArg  required  OptionBuilder  instance  char  opt  sep  valuesep  Object  newType  type  String  argName  description  longopt  name  newDescription  newLongopt  int  num  numArgs  numberOfArgs  	projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java	0.3779644730092272	316	316	1	replace	int  numberOfArgs  >  0)  {  for(int  i  =  0;  i  <  this.numberOfArgs;  ++i)  {  OptionBuilder.append(option);  }	  if(numberOfArgs    >    0)    {    for(int    i    =    0;    i    <    this.numberOfArgs;    ++i)    {    OptionBuilder.append(opt);    }    	non-compiled	[CE]  <identifier>  expected	105	None	replace
281	[BUG]  [BUGGY]  Integer  numberOfArgs  =(Integer)this.numberOfArgs.get(numberOfArgs);  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      public  static  Option  create(char  opt)  throws  IllegalArgumentException  {      [BUGGY]  Integer  numberOfArgs  =(Integer)this.numberOfArgs.get(numberOfArgs);  [BUGGY]      return  create(String.valueOf(opt));  }  [CLASS]  OptionBuilder  [METHOD]  create  [RETURN_TYPE]  Option  char  opt  [VARIABLES]  boolean  hasArg  newRequired  optionalArg  required  OptionBuilder  instance  char  opt  sep  valuesep  Object  newType  type  String  argName  description  longopt  name  newDescription  newLongopt  int  num  numArgs  numberOfArgs  	projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java	0.3779644730092272	316	316	1	replace	Integer  numberOfArgs  =(Integer)this.numberOfArgs.get(numberOfArgs);	  if(numberOfArgs    >    0)    {    for(int    i    =    0;    i    <    this.numberOfArgs;    ++i)    {    OptionBuilder.append(opt);    }    	non-compiled	[CE]  <identifier>  expected	105	None	replace
282	[BUG]  [BUGGY]  return  create(String.valueOf(opt)+  valueName);  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      public  static  Option  create(char  opt)  throws  IllegalArgumentException  {      [BUGGY]  return  create(String.valueOf(opt)+  valueName);  [BUGGY]      }  [CLASS]  OptionBuilder  [METHOD]  create  [RETURN_TYPE]  Option  char  opt  [VARIABLES]  boolean  hasArg  newRequired  optionalArg  required  OptionBuilder  instance  char  opt  sep  valuesep  Object  newType  type  String  argName  description  longopt  name  newDescription  newLongopt  int  num  numArgs  numberOfArgs  	projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java	0.3779644730092272	316	316	1	replace	return  create(String.valueOf(opt)+  valueName);	  return    create(String.valueOf(opt)+    argName);    	non-compiled	[CE]  <identifier>  expected	99	None	replace
283	[BUG]  [BUGGY]  if(opt  >=  Long.MIN_VALUE  ||  opt  ==  Long.MAX_VALUE)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      public  static  Option  create(char  opt)  throws  IllegalArgumentException  {      [BUGGY]  if(opt  >=  Long.MIN_VALUE  ||  opt  ==  Long.MAX_VALUE)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      return  create(String.valueOf(opt));  }  [CLASS]  OptionBuilder  [METHOD]  create  [RETURN_TYPE]  Option  char  opt  [VARIABLES]  boolean  hasArg  newRequired  optionalArg  required  OptionBuilder  instance  char  opt  sep  valuesep  Object  newType  type  String  argName  description  longopt  name  newDescription  newLongopt  int  num  numArgs  numberOfArgs  	projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java	0.3779644730092272	316	316	1	replace	if(opt  >=  Long.MIN_VALUE  ||  opt  ==  Long.MAX_VALUE)  {  throw  new  IllegalArgumentException( " ");  }	  if(opt    ==    Long.MIN_VALUE    ||    opt    ==    Long.MAX_VALUE)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  <identifier>  expected	70	None	replace
284	[BUG]  [BUGGY]  OptionBuilder  instance  =(OptionBuilder)options.get(opt  +  1);  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      public  static  Option  create(char  opt)  throws  IllegalArgumentException  {      [BUGGY]  OptionBuilder  instance  =(OptionBuilder)options.get(opt  +  1);  [BUGGY]      return  create(String.valueOf(opt));  }  [CLASS]  OptionBuilder  [METHOD]  create  [RETURN_TYPE]  Option  char  opt  [VARIABLES]  boolean  hasArg  newRequired  optionalArg  required  OptionBuilder  instance  char  opt  sep  valuesep  Object  newType  type  String  argName  description  longopt  name  newDescription  newLongopt  int  num  numArgs  numberOfArgs  	projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java	0.3779644730092272	316	316	1	replace	OptionBuilder  instance  =(OptionBuilder)options.get(opt  +  1);	  OptionBuilder    instance    =(OptionBuilder)options.get(opt);    	non-compiled	[CE]  <identifier>  expected	81	None	replace
285	[BUG]  [BUGGY]  OptionBuilder  instance  =(OptionBuilder)options.get(opt  -  1);  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      public  static  Option  create(char  opt)  throws  IllegalArgumentException  {      [BUGGY]  OptionBuilder  instance  =(OptionBuilder)options.get(opt  -  1);  [BUGGY]      return  create(String.valueOf(opt));  }  [CLASS]  OptionBuilder  [METHOD]  create  [RETURN_TYPE]  Option  char  opt  [VARIABLES]  boolean  hasArg  newRequired  optionalArg  required  OptionBuilder  instance  char  opt  sep  valuesep  Object  newType  type  String  argName  description  longopt  name  newDescription  newLongopt  int  num  numArgs  numberOfArgs  	projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java	0.3779644730092272	316	316	1	replace	OptionBuilder  instance  =(OptionBuilder)options.get(opt  -  1);	  OptionBuilder    instance    =(OptionBuilder)options.get(opt);    	non-compiled	[CE]  <identifier>  expected	81	None	replace
286	[BUG]  [BUGGY]  Integer  numberOfArgs  =  getValue(numberOfArgs  -  1);  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      public  static  Option  create(char  opt)  throws  IllegalArgumentException  {      [BUGGY]  Integer  numberOfArgs  =  getValue(numberOfArgs  -  1);  [BUGGY]      return  create(String.valueOf(opt));  }  [CLASS]  OptionBuilder  [METHOD]  create  [RETURN_TYPE]  Option  char  opt  [VARIABLES]  boolean  hasArg  newRequired  optionalArg  required  OptionBuilder  instance  char  opt  sep  valuesep  Object  newType  type  String  argName  description  longopt  name  newDescription  newLongopt  int  num  numArgs  numberOfArgs  	projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java	0.3779644730092272	316	316	1	replace	Integer  numberOfArgs  =  getValue(numberOfArgs  -  1);	  Integer    numberOfArgs    =    getValue(numberOfArgs);    	non-compiled	[CE]  <identifier>  expected	45	None	replace
287	[BUG]  [BUGGY]  Integer  numberOfArgs  =  getValue(numberOfArgs  +  1);  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      public  static  Option  create(char  opt)  throws  IllegalArgumentException  {      [BUGGY]  Integer  numberOfArgs  =  getValue(numberOfArgs  +  1);  [BUGGY]      return  create(String.valueOf(opt));  }  [CLASS]  OptionBuilder  [METHOD]  create  [RETURN_TYPE]  Option  char  opt  [VARIABLES]  boolean  hasArg  newRequired  optionalArg  required  OptionBuilder  instance  char  opt  sep  valuesep  Object  newType  type  String  argName  description  longopt  name  newDescription  newLongopt  int  num  numArgs  numberOfArgs  	projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java	0.3779644730092272	316	316	1	replace	Integer  numberOfArgs  =  getValue(numberOfArgs  +  1);	  Integer    numberOfArgs    =    getValue(numberOfArgs);    	non-compiled	[CE]  <identifier>  expected	45	None	replace
288	[BUG]  [BUGGY]  char  numberOfArgs  =  getNumberOfArgs(numberOfArgs);  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      public  static  Option  create(char  opt)  throws  IllegalArgumentException  {      [BUGGY]  char  numberOfArgs  =  getNumberOfArgs(numberOfArgs);  [BUGGY]      return  create(String.valueOf(opt));  }  [CLASS]  OptionBuilder  [METHOD]  create  [RETURN_TYPE]  Option  char  opt  [VARIABLES]  boolean  hasArg  newRequired  optionalArg  required  OptionBuilder  instance  char  opt  sep  valuesep  Object  newType  type  String  argName  description  longopt  name  newDescription  newLongopt  int  num  numArgs  numberOfArgs  	projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java	0.3779644730092272	316	316	1	replace	char  numberOfArgs  =  getNumberOfArgs(numberOfArgs);	  int    numberOfArgs    =    getNumberOfArgs(numberOfArgs);    	non-compiled	[CE]  <identifier>  expected	59	None	replace
289	[BUG]  [BUGGY]  if(numberOfArgs  ==  0)  {  allowNumberOfArgs();  return  create(String.valueOf(opt));  }  else  {  throw  new  IllegalArgumentException( " ");  }  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      public  static  Option  create(char  opt)  throws  IllegalArgumentException  {      [BUGGY]  if(numberOfArgs  ==  0)  {  allowNumberOfArgs();  return  create(String.valueOf(opt));  }  else  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      return  create(String.valueOf(opt));  }  [CLASS]  OptionBuilder  [METHOD]  create  [RETURN_TYPE]  Option  char  opt  [VARIABLES]  boolean  hasArg  newRequired  optionalArg  required  OptionBuilder  instance  char  opt  sep  valuesep  Object  newType  type  String  argName  description  longopt  name  newDescription  newLongopt  int  num  numArgs  numberOfArgs  	projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java	0.3779644730092272	316	316	1	replace	if(numberOfArgs  ==  0)  {  allowNumberOfArgs();  return  create(String.valueOf(opt));  }  else  {  throw  new  IllegalArgumentException( " ");  }	  allowNumberOfArgs(numberOfArgs)    {    return    create(String.valueOf(opt));    }    else    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  <identifier>  expected	33	None	replace
290	[BUG]  [BUGGY]  Integer.toString(numberOfArgs)  {  return  create(int.valueOf(opt));  }  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      public  static  Option  create(char  opt)  throws  IllegalArgumentException  {      [BUGGY]  Integer.toString(numberOfArgs)  {  return  create(int.valueOf(opt));  }  [BUGGY]      return  create(String.valueOf(opt));  }  [CLASS]  OptionBuilder  [METHOD]  create  [RETURN_TYPE]  Option  char  opt  [VARIABLES]  boolean  hasArg  newRequired  optionalArg  required  OptionBuilder  instance  char  opt  sep  valuesep  Object  newType  type  String  argName  description  longopt  name  newDescription  newLongopt  int  num  numArgs  numberOfArgs  	projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java	0.3779644730092272	316	316	1	replace	Integer.toString(numberOfArgs)  {  return  create(int.valueOf(opt));  }	  Integer.toString(opt)    {    return    create(String.valueOf(opt));    }    	non-compiled	[CE]  <identifier>  expected	47	None	replace
291	[BUG]  [BUGGY]  if(opt!=  null)  {  return  create(longopt,  String.valueOf(opt));  }  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      public  static  Option  create(char  opt)  throws  IllegalArgumentException  {      [BUGGY]  if(opt!=  null)  {  return  create(longopt,  String.valueOf(opt));  }  [BUGGY]      }  [CLASS]  OptionBuilder  [METHOD]  create  [RETURN_TYPE]  Option  char  opt  [VARIABLES]  boolean  hasArg  newRequired  optionalArg  required  OptionBuilder  instance  char  opt  sep  valuesep  Object  newType  type  String  argName  description  longopt  name  newDescription  newLongopt  int  num  numArgs  numberOfArgs  	projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java	0.3779644730092272	316	316	1	replace	if(opt!=  null)  {  return  create(longopt,  String.valueOf(opt));  }	  if(opt    ==    null)    {    return    create(numberOfArgs,    String.valueOf(opt));    }    	non-compiled	[CE]  <identifier>  expected	30	None	replace
292	[BUG]  [BUGGY]  if(opt  ==  null)  {  return  create(longopt,  String.valueOf(opt));  }  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      public  static  Option  create(char  opt)  throws  IllegalArgumentException  {      [BUGGY]  if(opt  ==  null)  {  return  create(longopt,  String.valueOf(opt));  }  [BUGGY]      }  [CLASS]  OptionBuilder  [METHOD]  create  [RETURN_TYPE]  Option  char  opt  [VARIABLES]  boolean  hasArg  newRequired  optionalArg  required  OptionBuilder  instance  char  opt  sep  valuesep  Object  newType  type  String  argName  description  longopt  name  newDescription  newLongopt  int  num  numArgs  numberOfArgs  	projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java	0.3779644730092272	316	316	1	replace	if(opt  ==  null)  {  return  create(longopt,  String.valueOf(opt));  }	  if(opt    ==    null)    {    return    create(numberOfArgs,    String.valueOf(opt));    }    	non-compiled	[CE]  <identifier>  expected	30	None	replace
293	[BUG]  [BUGGY]  Thread.currentThread().setContextClassLoader(this,  OptionBuilder.class);  [CE]  <identifier>  expected  [FE]            AssertionFailedError      [CONTEXT]      public  static  Option  create(char  opt)  throws  IllegalArgumentException  {      [BUGGY]  Thread.currentThread().setContextClassLoader(this,  OptionBuilder.class);  [BUGGY]      return  create(String.valueOf(opt));  }  [CLASS]  OptionBuilder  [METHOD]  create  [RETURN_TYPE]  Option  char  opt  [VARIABLES]  boolean  hasArg  newRequired  optionalArg  required  OptionBuilder  instance  char  opt  sep  valuesep  Object  newType  type  String  argName  description  longopt  name  newDescription  newLongopt  int  num  numArgs  numberOfArgs  	projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java	0.3779644730092272	316	316	1	replace	Thread.currentThread().setContextClassLoader(this,  OptionBuilder.class);	  Thread.currentThread().setContextClassLoader(this);    	non-compiled	[CE]  <identifier>  expected	56	None	replace
294	[BUG]  [BUGGY]  int  i  =  0;  i  <  numArgs;  i++)  {  opt  =  i  +  1;  }  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      public  static  Option  create(char  opt)  throws  IllegalArgumentException  {      [BUGGY]  int  i  =  0;  i  <  numArgs;  i++)  {  opt  =  i  +  1;  }  [BUGGY]      return  create(String.valueOf(opt));  }  [CLASS]  OptionBuilder  [METHOD]  create  [RETURN_TYPE]  Option  char  opt  [VARIABLES]  boolean  hasArg  newRequired  optionalArg  required  OptionBuilder  instance  char  opt  sep  valuesep  Object  newType  type  String  argName  description  longopt  name  newDescription  newLongopt  int  num  numArgs  numberOfArgs  	projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java	0.3779644730092272	316	316	1	replace	int  i  =  0;  i  <  numArgs;  i++)  {  opt  =  i  +  1;  }	  for(int    i    =    0;    i    <    numberOfArgs;    i++)    {    opt    =    i    +    1;    }    	non-compiled	[CE]  <identifier>  expected	37	None	replace
295	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  length;  ++i)  {  OptionBuilder.append(null);  }  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      public  static  Option  create(char  opt)  throws  IllegalArgumentException  {      [BUGGY]  for(int  i  =  0;  i  <  length;  ++i)  {  OptionBuilder.append(null);  }  [BUGGY]      return  create(String.valueOf(opt));  }  [CLASS]  OptionBuilder  [METHOD]  create  [RETURN_TYPE]  Option  char  opt  [VARIABLES]  boolean  hasArg  newRequired  optionalArg  required  OptionBuilder  instance  char  opt  sep  valuesep  Object  newType  type  String  argName  description  longopt  name  newDescription  newLongopt  int  num  numArgs  numberOfArgs  	projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java	0.3779644730092272	316	316	1	replace	for(int  i  =  0;  i  <  length;  ++i)  {  OptionBuilder.append(null);  }	  for(int    i    =    0;    i    <    numberOfArgs;    ++i)    {    OptionBuilder.append(null);    }    	non-compiled	[CE]  <identifier>  expected	41	None	replace
296	[BUG]  [BUGGY]  allowNumberOfArgs(Long.MIN_VALUE)  {  throw  new  IllegalArgumentException(String.valueOf(opt));  }  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      public  static  Option  create(char  opt)  throws  IllegalArgumentException  {      [BUGGY]  allowNumberOfArgs(Long.MIN_VALUE)  {  throw  new  IllegalArgumentException(String.valueOf(opt));  }  [BUGGY]      return  create(String.valueOf(opt));  }  [CLASS]  OptionBuilder  [METHOD]  create  [RETURN_TYPE]  Option  char  opt  [VARIABLES]  boolean  hasArg  newRequired  optionalArg  required  OptionBuilder  instance  char  opt  sep  valuesep  Object  newType  type  String  argName  description  longopt  name  newDescription  newLongopt  int  num  numArgs  numberOfArgs  	projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java	0.3779644730092272	316	316	1	replace	allowNumberOfArgs(Long.MIN_VALUE)  {  throw  new  IllegalArgumentException(String.valueOf(opt));  }	  if(opt    ==    Long.MIN_VALUE)    {    throw    new    IllegalArgumentException(String.valueOf(opt));    }    	non-compiled	[CE]  <identifier>  expected	71	None	replace
297	[BUG]  [BUGGY]  OptionBuilder  instance  =(OptionBuilder)this.values.get(numberOfArgs);  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      public  static  Option  create(char  opt)  throws  IllegalArgumentException  {      [BUGGY]  OptionBuilder  instance  =(OptionBuilder)this.values.get(numberOfArgs);  [BUGGY]      return  create(String.valueOf(opt));  }  [CLASS]  OptionBuilder  [METHOD]  create  [RETURN_TYPE]  Option  char  opt  [VARIABLES]  boolean  hasArg  newRequired  optionalArg  required  OptionBuilder  instance  char  opt  sep  valuesep  Object  newType  type  String  argName  description  longopt  name  newDescription  newLongopt  int  num  numArgs  numberOfArgs  	projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java	0.3779644730092272	316	316	1	replace	OptionBuilder  instance  =(OptionBuilder)this.values.get(numberOfArgs);	  if(opt    ==    Long.MIN_VALUE)    {    throw    new    IllegalArgumentException(String.valueOf(opt));    }    	non-compiled	[CE]  <identifier>  expected	71	None	replace
298	[BUG]  [BUGGY]  allowNumberOfArgs(Long.MIN_VALUE)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      public  static  Option  create(char  opt)  throws  IllegalArgumentException  {      [BUGGY]  allowNumberOfArgs(Long.MIN_VALUE)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      return  create(String.valueOf(opt));  }  [CLASS]  OptionBuilder  [METHOD]  create  [RETURN_TYPE]  Option  char  opt  [VARIABLES]  boolean  hasArg  newRequired  optionalArg  required  OptionBuilder  instance  char  opt  sep  valuesep  Object  newType  type  String  argName  description  longopt  name  newDescription  newLongopt  int  num  numArgs  numberOfArgs  	projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java	0.3779644730092272	316	316	1	replace	allowNumberOfArgs(Long.MIN_VALUE)  {  throw  new  IllegalArgumentException( " ");  }	  if(opt    ==    Long.MIN_VALUE)    {    throw    new    IllegalArgumentException(String.valueOf(opt));    }    	non-compiled	[CE]  <identifier>  expected	71	None	replace
299	[BUG]  [BUGGY]  if(numberOfArgs  ==  Long.MIN_VALUE  ||  numberOfArgs  >  Long.MAX_VALUE)  {  return  create(String.valueOf(opt));  }  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      public  static  Option  create(char  opt)  throws  IllegalArgumentException  {      [BUGGY]  if(numberOfArgs  ==  Long.MIN_VALUE  ||  numberOfArgs  >  Long.MAX_VALUE)  {  return  create(String.valueOf(opt));  }  [BUGGY]      return  create(String.valueOf(opt));  }  [CLASS]  OptionBuilder  [METHOD]  create  [RETURN_TYPE]  Option  char  opt  [VARIABLES]  boolean  hasArg  newRequired  optionalArg  required  OptionBuilder  instance  char  opt  sep  valuesep  Object  newType  type  String  argName  description  longopt  name  newDescription  newLongopt  int  num  numArgs  numberOfArgs  	projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java	0.3779644730092272	316	316	1	replace	if(numberOfArgs  ==  Long.MIN_VALUE  ||  numberOfArgs  >  Long.MAX_VALUE)  {  return  create(String.valueOf(opt));  }	  if(numberOfArgs    ==    Long.MIN_VALUE)    {    return    create(String.valueOf(opt));    }    	non-compiled	[CE]  <identifier>  expected	75	None	replace
300	[BUG]  [BUGGY]  numberOfArgs  ==  Long.MIN_VALUE)  {  return  create(String.valueOf(opt));  }  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      public  static  Option  create(char  opt)  throws  IllegalArgumentException  {      [BUGGY]  numberOfArgs  ==  Long.MIN_VALUE)  {  return  create(String.valueOf(opt));  }  [BUGGY]      return  create(String.valueOf(opt));  }  [CLASS]  OptionBuilder  [METHOD]  create  [RETURN_TYPE]  Option  char  opt  [VARIABLES]  boolean  hasArg  newRequired  optionalArg  required  OptionBuilder  instance  char  opt  sep  valuesep  Object  newType  type  String  argName  description  longopt  name  newDescription  newLongopt  int  num  numArgs  numberOfArgs  	projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java	0.3779644730092272	316	316	1	replace	numberOfArgs  ==  Long.MIN_VALUE)  {  return  create(String.valueOf(opt));  }	  if(numberOfArgs    ==    Long.MIN_VALUE)    {    return    create(String.valueOf(opt));    }    	non-compiled	[CE]  <identifier>  expected	75	None	replace
301	[BUG]  [BUGGY]  int  numberOfArgs  =  Long.MIN_VALUE;  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]      public  static  Option  create(char  opt)  throws  IllegalArgumentException  {      [BUGGY]  int  numberOfArgs  =  Long.MIN_VALUE;  [BUGGY]      return  create(String.valueOf(opt));  }  [CLASS]  OptionBuilder  [METHOD]  create  [RETURN_TYPE]  Option  char  opt  [VARIABLES]  boolean  hasArg  newRequired  optionalArg  required  OptionBuilder  instance  char  opt  sep  valuesep  Object  newType  type  String  argName  description  longopt  name  newDescription  newLongopt  int  num  numArgs  numberOfArgs  	projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java	0.3779644730092272	316	316	1	replace	int  numberOfArgs  =  Long.MIN_VALUE;	  if(numberOfArgs    ==    Long.MIN_VALUE)    {    return    create(String.valueOf(opt));    }    	non-compiled	[CE]  <identifier>  expected	75	None	replace
302	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  this.numberOfArgs;  ++i)  {  opt  +=  String.valueOf(null);  }  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]      public  static  Option  create(char  opt)  throws  IllegalArgumentException  {      [BUGGY]  for(int  i  =  0;  i  <  this.numberOfArgs;  ++i)  {  opt  +=  String.valueOf(null);  }  [BUGGY]      return  create(String.valueOf(opt));  }  [CLASS]  OptionBuilder  [METHOD]  create  [RETURN_TYPE]  Option  char  opt  [VARIABLES]  boolean  hasArg  newRequired  optionalArg  required  OptionBuilder  instance  char  opt  sep  valuesep  Object  newType  type  String  argName  description  longopt  name  newDescription  newLongopt  int  num  numArgs  numberOfArgs  	projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java	0.3779644730092272	316	316	1	replace	for(int  i  =  0;  i  <  this.numberOfArgs;  ++i)  {  opt  +=  String.valueOf(null);  }	  for(int    i    =    0;    i    <    numberOfArgs;    ++i)    {    opt    +=    String.valueOf(null);    }    	non-compiled	[CE]  <identifier>  expected	7	None	replace
303	[BUG]  [BUGGY]  Integer  numberOfArgs  =  getNumberOfArgs(0);  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      public  static  Option  create(char  opt)  throws  IllegalArgumentException  {      [BUGGY]  Integer  numberOfArgs  =  getNumberOfArgs(0);  [BUGGY]      return  create(String.valueOf(opt));  }  [CLASS]  OptionBuilder  [METHOD]  create  [RETURN_TYPE]  Option  char  opt  [VARIABLES]  boolean  hasArg  newRequired  optionalArg  required  OptionBuilder  instance  char  opt  sep  valuesep  Object  newType  type  String  argName  description  longopt  name  newDescription  newLongopt  int  num  numArgs  numberOfArgs  	projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java	0.3779644730092272	316	316	1	replace	Integer  numberOfArgs  =  getNumberOfArgs(0);	  Integer    numberOfArgs    =    getNumberOfArgs();    	non-compiled	[CE]  <identifier>  expected	12	None	replace
304	[BUG]  [BUGGY]  if(opt  >  0)  {  for(int  i  =  0;  i  <  numberOfArgs;  ++i)  {  OptionBuilder.this.append(option);  }  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      public  static  Option  create(char  opt)  throws  IllegalArgumentException  {      [BUGGY]  if(opt  >  0)  {  for(int  i  =  0;  i  <  numberOfArgs;  ++i)  {  OptionBuilder.this.append(option);  }  [BUGGY]      return  create(String.valueOf(opt));  }  [CLASS]  OptionBuilder  [METHOD]  create  [RETURN_TYPE]  Option  char  opt  [VARIABLES]  boolean  hasArg  newRequired  optionalArg  required  OptionBuilder  instance  char  opt  sep  valuesep  Object  newType  type  String  argName  description  longopt  name  newDescription  newLongopt  int  num  numArgs  numberOfArgs  	projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java	0.3779644730092272	316	316	1	replace	if(opt  >  0)  {  for(int  i  =  0;  i  <  numberOfArgs;  ++i)  {  OptionBuilder.this.append(option);  }	  if(numberOfArgs    >    0)    {    for(int    i    =    0;    i    <    numberOfArgs;    ++i)    {    OptionBuilder.this.append(option);    }    	non-compiled	[CE]  <identifier>  expected	65	None	replace
305	[BUG]  [BUGGY]  OptionBuilder.append(opt);  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      public  static  Option  create(char  opt)  throws  IllegalArgumentException  {      [BUGGY]  OptionBuilder.append(opt);  [BUGGY]      return  create(String.valueOf(opt));  }  [CLASS]  OptionBuilder  [METHOD]  create  [RETURN_TYPE]  Option  char  opt  [VARIABLES]  boolean  hasArg  newRequired  optionalArg  required  OptionBuilder  instance  char  opt  sep  valuesep  Object  newType  type  String  argName  description  longopt  name  newDescription  newLongopt  int  num  numArgs  numberOfArgs  	projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java	0.3779644730092272	316	316	1	replace	OptionBuilder.append(opt);	  if(numberOfArgs    >    0)    {    for(int    i    =    0;    i    <    numberOfArgs;    ++i)    {    OptionBuilder.append(option);    }    	non-compiled	[CE]  <identifier>  expected	76	None	replace
306	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  numOfArgs;  ++i)  {  OptionBuilder.this.append(option);  }  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      public  static  Option  create(char  opt)  throws  IllegalArgumentException  {      [BUGGY]  for(int  i  =  0;  i  <  numOfArgs;  ++i)  {  OptionBuilder.this.append(option);  }  [BUGGY]      return  create(String.valueOf(opt));  }  [CLASS]  OptionBuilder  [METHOD]  create  [RETURN_TYPE]  Option  char  opt  [VARIABLES]  boolean  hasArg  newRequired  optionalArg  required  OptionBuilder  instance  char  opt  sep  valuesep  Object  newType  type  String  argName  description  longopt  name  newDescription  newLongopt  int  num  numArgs  numberOfArgs  	projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java	0.3779644730092272	316	316	1	replace	for(int  i  =  0;  i  <  numOfArgs;  ++i)  {  OptionBuilder.this.append(option);  }	  for(int    i    =    0;    i    <    numberOfArgs;    ++i)    {    OptionBuilder.this.append(option);    }    	non-compiled	[CE]  <identifier>  expected	21	None	replace
307	[BUG]  [BUGGY]  if(opt  ==  0)  {  return  create(String.valueOf(numberOfArgs));  }  [CE]  <identifier>  expected  [FE]            AssertionFailedError      [CONTEXT]      public  static  Option  create(char  opt)  throws  IllegalArgumentException  {      [BUGGY]  if(opt  ==  0)  {  return  create(String.valueOf(numberOfArgs));  }  [BUGGY]      }  [CLASS]  OptionBuilder  [METHOD]  create  [RETURN_TYPE]  Option  char  opt  [VARIABLES]  boolean  hasArg  newRequired  optionalArg  required  OptionBuilder  instance  char  opt  sep  valuesep  Object  newType  type  String  argName  description  longopt  name  newDescription  newLongopt  int  num  numArgs  numberOfArgs  	projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java	0.3779644730092272	316	316	1	replace	if(opt  ==  0)  {  return  create(String.valueOf(numberOfArgs));  }	  if(numberOfArgs    ==    0)    {    return    create(String.valueOf(opt));    }    	non-compiled	[CE]  <identifier>  expected	8	None	replace
308	[BUG]  [BUGGY]  if(numberOfArgs  ==  0)  {  return  create(opt,  String.valueOf(opt));  }  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      public  static  Option  create(char  opt)  throws  IllegalArgumentException  {      [BUGGY]  if(numberOfArgs  ==  0)  {  return  create(opt,  String.valueOf(opt));  }  [BUGGY]      }  [CLASS]  OptionBuilder  [METHOD]  create  [RETURN_TYPE]  Option  char  opt  [VARIABLES]  boolean  hasArg  newRequired  optionalArg  required  OptionBuilder  instance  char  opt  sep  valuesep  Object  newType  type  String  argName  description  longopt  name  newDescription  newLongopt  int  num  numArgs  numberOfArgs  	projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java	0.3779644730092272	316	316	1	replace	if(numberOfArgs  ==  0)  {  return  create(opt,  String.valueOf(opt));  }	  if(numberOfArgs    ==    0)    {    return    create(String.valueOf(opt));    }    	non-compiled	[CE]  <identifier>  expected	8	None	replace
309	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  this.numberOfArgs;  ++i)  {  opt  =  getValue(opt);  }  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      public  static  Option  create(char  opt)  throws  IllegalArgumentException  {      [BUGGY]  for(int  i  =  0;  i  <  this.numberOfArgs;  ++i)  {  opt  =  getValue(opt);  }  [BUGGY]      return  create(String.valueOf(opt));  }  [CLASS]  OptionBuilder  [METHOD]  create  [RETURN_TYPE]  Option  char  opt  [VARIABLES]  boolean  hasArg  newRequired  optionalArg  required  OptionBuilder  instance  char  opt  sep  valuesep  Object  newType  type  String  argName  description  longopt  name  newDescription  newLongopt  int  num  numArgs  numberOfArgs  	projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java	0.3779644730092272	316	316	1	replace	for(int  i  =  0;  i  <  this.numberOfArgs;  ++i)  {  opt  =  getValue(opt);  }	  if(opt    >    0)    {    for(int    i    =    0;    i    <    this.numberOfArgs;    ++i)    {    opt    =    getValue(i);    }    	non-compiled	[CE]  <identifier>  expected	96	None	replace
310	[BUG]  [BUGGY]  OptionBuilder.this.addValue(opt);  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      public  static  Option  create(char  opt)  throws  IllegalArgumentException  {      [BUGGY]  OptionBuilder.this.addValue(opt);  [BUGGY]      return  create(String.valueOf(opt));  }  [CLASS]  OptionBuilder  [METHOD]  create  [RETURN_TYPE]  Option  char  opt  [VARIABLES]  boolean  hasArg  newRequired  optionalArg  required  OptionBuilder  instance  char  opt  sep  valuesep  Object  newType  type  String  argName  description  longopt  name  newDescription  newLongopt  int  num  numArgs  numberOfArgs  	projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java	0.3779644730092272	316	316	1	replace	OptionBuilder.this.addValue(opt);	  if(opt    >    0)    {    for(int    i    =    0;    i    <    this.numberOfArgs;    ++i)    {    opt    =    getValue(i);    }    	non-compiled	[CE]  <identifier>  expected	96	None	replace
311	[BUG]  [BUGGY]  Integer  numberOfArgs  =(Integer)this.values.get(numberOfArgs);  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      public  static  Option  create(char  opt)  throws  IllegalArgumentException  {      [BUGGY]  Integer  numberOfArgs  =(Integer)this.values.get(numberOfArgs);  [BUGGY]      return  create(String.valueOf(opt));  }  [CLASS]  OptionBuilder  [METHOD]  create  [RETURN_TYPE]  Option  char  opt  [VARIABLES]  boolean  hasArg  newRequired  optionalArg  required  OptionBuilder  instance  char  opt  sep  valuesep  Object  newType  type  String  argName  description  longopt  name  newDescription  newLongopt  int  num  numArgs  numberOfArgs  	projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java	0.3779644730092272	316	316	1	replace	Integer  numberOfArgs  =(Integer)this.values.get(numberOfArgs);	  if(numberOfArgs    >    1)    {    for(int    i    =    0;    i    <    this.numberOfArgs;    ++i)    {    OptionBuilder.this.append(opt);    }    	non-compiled	[CE]  <identifier>  expected	101	None	replace
312	[BUG]  [BUGGY]  if(numberOfArgs  ==  Long.MIN_VALUE  ||  numberOfArgs  >  Long.MAX_VALUE)  {  return  create(String.valueOf(opt));  }  else  {  return  new  OptionBuilder();  }  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      public  static  Option  create(char  opt)  throws  IllegalArgumentException  {      [BUGGY]  if(numberOfArgs  ==  Long.MIN_VALUE  ||  numberOfArgs  >  Long.MAX_VALUE)  {  return  create(String.valueOf(opt));  }  else  {  return  new  OptionBuilder();  }  [BUGGY]      return  create(String.valueOf(opt));  }  [CLASS]  OptionBuilder  [METHOD]  create  [RETURN_TYPE]  Option  char  opt  [VARIABLES]  boolean  hasArg  newRequired  optionalArg  required  OptionBuilder  instance  char  opt  sep  valuesep  Object  newType  type  String  argName  description  longopt  name  newDescription  newLongopt  int  num  numArgs  numberOfArgs  	projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java	0.3779644730092272	316	316	1	replace	if(numberOfArgs  ==  Long.MIN_VALUE  ||  numberOfArgs  >  Long.MAX_VALUE)  {  return  create(String.valueOf(opt));  }  else  {  return  new  OptionBuilder();  }	  if(numberOfArgs    ==    Long.MIN_VALUE)    {    return    create(String.valueOf(opt));    }    else    {    return    new    OptionBuilder();    }    	non-compiled	[CE]  <identifier>  expected	14	None	replace
313	[BUG]  [BUGGY]  numberOfArgs  ==  0)  {  return  create(String.valueOf(opt));  }  else  {  return  new  OptionBuilder();  }  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]      public  static  Option  create(char  opt)  throws  IllegalArgumentException  {      [BUGGY]  numberOfArgs  ==  0)  {  return  create(String.valueOf(opt));  }  else  {  return  new  OptionBuilder();  }  [BUGGY]      return  create(String.valueOf(opt));  }  [CLASS]  OptionBuilder  [METHOD]  create  [RETURN_TYPE]  Option  char  opt  [VARIABLES]  boolean  hasArg  newRequired  optionalArg  required  OptionBuilder  instance  char  opt  sep  valuesep  Object  newType  type  String  argName  description  longopt  name  newDescription  newLongopt  int  num  numArgs  numberOfArgs  	projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java	0.3779644730092272	316	316	1	replace	numberOfArgs  ==  0)  {  return  create(String.valueOf(opt));  }  else  {  return  new  OptionBuilder();  }	  if(numberOfArgs    ==    Long.MIN_VALUE)    {    return    create(String.valueOf(opt));    }    else    {    return    new    OptionBuilder();    }    	non-compiled	[CE]  <identifier>  expected	14	None	replace
314	[BUG]  [BUGGY]  if(numberOfArgs  >  0)  {  for(int  i  =  0;  i  <  length;  ++i)  {  OptionBuilder.append(opt);  }  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      public  static  Option  create(char  opt)  throws  IllegalArgumentException  {      [BUGGY]  if(numberOfArgs  >  0)  {  for(int  i  =  0;  i  <  length;  ++i)  {  OptionBuilder.append(opt);  }  [BUGGY]      return  create(String.valueOf(opt));  }  [CLASS]  OptionBuilder  [METHOD]  create  [RETURN_TYPE]  Option  char  opt  [VARIABLES]  boolean  hasArg  newRequired  optionalArg  required  OptionBuilder  instance  char  opt  sep  valuesep  Object  newType  type  String  argName  description  longopt  name  newDescription  newLongopt  int  num  numArgs  numberOfArgs  	projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java	0.3779644730092272	316	316	1	replace	if(numberOfArgs  >  0)  {  for(int  i  =  0;  i  <  length;  ++i)  {  OptionBuilder.append(opt);  }	  if(numberOfArgs    >    1)    {    for(int    i    =    0;    i    <    numberOfArgs;    ++i)    {    OptionBuilder.append(opt);    }    	non-compiled	[CE]  <identifier>  expected	104	None	replace
315	[BUG]  [BUGGY]  int  numberOfArgs  =  getNumberOfArgs(numberOfArgs)+  1;  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]      public  static  Option  create(char  opt)  throws  IllegalArgumentException  {      [BUGGY]  int  numberOfArgs  =  getNumberOfArgs(numberOfArgs)+  1;  [BUGGY]      return  create(String.valueOf(opt));  }  [CLASS]  OptionBuilder  [METHOD]  create  [RETURN_TYPE]  Option  char  opt  [VARIABLES]  boolean  hasArg  newRequired  optionalArg  required  OptionBuilder  instance  char  opt  sep  valuesep  Object  newType  type  String  argName  description  longopt  name  newDescription  newLongopt  int  num  numArgs  numberOfArgs  	projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java	0.3779644730092272	316	316	1	replace	int  numberOfArgs  =  getNumberOfArgs(numberOfArgs)+  1;	  allowNumberOfArgs(numberOfArgs)    {    if(opt    ==    Long.MIN_VALUE)    {    return    create(String.valueOf(opt));    }    	non-compiled	[CE]  <identifier>  expected	34	None	replace
316	[BUG]  [BUGGY]  if(opt  ==  Long.MIN_VALUE)  {  return  get(Long.valueOf(opt));  }  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      public  static  Option  create(char  opt)  throws  IllegalArgumentException  {      [BUGGY]  if(opt  ==  Long.MIN_VALUE)  {  return  get(Long.valueOf(opt));  }  [BUGGY]      }  [CLASS]  OptionBuilder  [METHOD]  create  [RETURN_TYPE]  Option  char  opt  [VARIABLES]  boolean  hasArg  newRequired  optionalArg  required  OptionBuilder  instance  char  opt  sep  valuesep  Object  newType  type  String  argName  description  longopt  name  newDescription  newLongopt  int  num  numArgs  numberOfArgs  	projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java	0.3779644730092272	316	316	1	replace	if(opt  ==  Long.MIN_VALUE)  {  return  get(Long.valueOf(opt));  }	  return    get(Long.valueOf(opt));    	non-compiled	[CE]  <identifier>  expected	98	None	replace
317	[BUG]  [BUGGY]  if(numberOfArgs  >  0)  {  for(int  i  =  0;  i  <  this.numberOfArgs;  ++i)  {  OptionBuilder.this.append(opt);  }  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      public  static  Option  create(char  opt)  throws  IllegalArgumentException  {      [BUGGY]  if(numberOfArgs  >  0)  {  for(int  i  =  0;  i  <  this.numberOfArgs;  ++i)  {  OptionBuilder.this.append(opt);  }  [BUGGY]      return  create(String.valueOf(opt));  }  [CLASS]  OptionBuilder  [METHOD]  create  [RETURN_TYPE]  Option  char  opt  [VARIABLES]  boolean  hasArg  newRequired  optionalArg  required  OptionBuilder  instance  char  opt  sep  valuesep  Object  newType  type  String  argName  description  longopt  name  newDescription  newLongopt  int  num  numArgs  numberOfArgs  	projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java	0.3779644730092272	316	316	1	replace	if(numberOfArgs  >  0)  {  for(int  i  =  0;  i  <  this.numberOfArgs;  ++i)  {  OptionBuilder.this.append(opt);  }	  if(numberOfArgs    >    1)    {    for(int    i    =    0;    i    <    numberOfArgs;    ++i)    {    OptionBuilder.this.append(opt);    }    	non-compiled	[CE]  <identifier>  expected	100	None	replace
318	[BUG]  [BUGGY]  OptionBuilder  <  Object>  newType  =  getType(optionalArg);  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      public  static  Option  create(char  opt)  throws  IllegalArgumentException  {      [BUGGY]  OptionBuilder  <  Object>  newType  =  getType(optionalArg);  [BUGGY]      return  create(String.valueOf(opt));  }  [CLASS]  OptionBuilder  [METHOD]  create  [RETURN_TYPE]  Option  char  opt  [VARIABLES]  boolean  hasArg  newRequired  optionalArg  required  OptionBuilder  instance  char  opt  sep  valuesep  Object  newType  type  String  argName  description  longopt  name  newDescription  newLongopt  int  num  numArgs  numberOfArgs  	projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java	0.3779644730092272	316	316	1	replace	OptionBuilder  <  Object>  newType  =  getType(optionalArg);	  OptionBuilder    <    Object>    newType    =    getType(numberOfArgs);    	non-compiled	[CE]  <identifier>  expected	82	None	replace
319	[BUG]  [BUGGY]  return  create(String.valueOf(opt)+  1)+  1;  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      public  static  Option  create(char  opt)  throws  IllegalArgumentException  {      [BUGGY]  return  create(String.valueOf(opt)+  1)+  1;  [BUGGY]      }  [CLASS]  OptionBuilder  [METHOD]  create  [RETURN_TYPE]  Option  char  opt  [VARIABLES]  boolean  hasArg  newRequired  optionalArg  required  OptionBuilder  instance  char  opt  sep  valuesep  Object  newType  type  String  argName  description  longopt  name  newDescription  newLongopt  int  num  numArgs  numberOfArgs  	projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java	0.3779644730092272	316	316	1	replace	return  create(String.valueOf(opt)+  1)+  1;	  return    create(String.valueOf(opt)+    num);    	non-compiled	[CE]  <identifier>  expected	87	None	replace
320	[BUG]  [BUGGY]  return  create(opt,  String.valueOf(number)+  1);  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      public  static  Option  create(char  opt)  throws  IllegalArgumentException  {      [BUGGY]  return  create(opt,  String.valueOf(number)+  1);  [BUGGY]      }  [CLASS]  OptionBuilder  [METHOD]  create  [RETURN_TYPE]  Option  char  opt  [VARIABLES]  boolean  hasArg  newRequired  optionalArg  required  OptionBuilder  instance  char  opt  sep  valuesep  Object  newType  type  String  argName  description  longopt  name  newDescription  newLongopt  int  num  numArgs  numberOfArgs  	projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java	0.3779644730092272	316	316	1	replace	return  create(opt,  String.valueOf(number)+  1);	  return    create(numberOfArgs,    String.valueOf(opt)+    1);    	non-compiled	[CE]  <identifier>  expected	29	None	replace
321	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  length;  ++i)  {  opt  =  getValue(opt);  }  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      public  static  Option  create(char  opt)  throws  IllegalArgumentException  {      [BUGGY]  for(int  i  =  0;  i  <  length;  ++i)  {  opt  =  getValue(opt);  }  [BUGGY]      return  create(String.valueOf(opt));  }  [CLASS]  OptionBuilder  [METHOD]  create  [RETURN_TYPE]  Option  char  opt  [VARIABLES]  boolean  hasArg  newRequired  optionalArg  required  OptionBuilder  instance  char  opt  sep  valuesep  Object  newType  type  String  argName  description  longopt  name  newDescription  newLongopt  int  num  numArgs  numberOfArgs  	projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java	0.3779644730092272	316	316	1	replace	for(int  i  =  0;  i  <  length;  ++i)  {  opt  =  getValue(opt);  }	  for(int    i    =    0;    i    <    numberOfArgs;    ++i)    {    opt    =    getValue(numberOfArgs);    }    	non-compiled	[CE]  <identifier>  expected	44	None	replace
322	[BUG]  [BUGGY]  if(opt!=  null)  {  for(int  i  =  0;  i  <  numberOfArgs;  ++i)  {  opt  =  getValue(i,  null);  }  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      public  static  Option  create(char  opt)  throws  IllegalArgumentException  {      [BUGGY]  if(opt!=  null)  {  for(int  i  =  0;  i  <  numberOfArgs;  ++i)  {  opt  =  getValue(i,  null);  }  [BUGGY]      return  create(String.valueOf(opt));  }  [CLASS]  OptionBuilder  [METHOD]  create  [RETURN_TYPE]  Option  char  opt  [VARIABLES]  boolean  hasArg  newRequired  optionalArg  required  OptionBuilder  instance  char  opt  sep  valuesep  Object  newType  type  String  argName  description  longopt  name  newDescription  newLongopt  int  num  numArgs  numberOfArgs  	projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java	0.3779644730092272	316	316	1	replace	if(opt!=  null)  {  for(int  i  =  0;  i  <  numberOfArgs;  ++i)  {  opt  =  getValue(i,  null);  }	  if(opt    ==    null)    {    for(int    i    =    0;    i    <    numberOfArgs;    ++i)    {    opt    =    getValue(i,    null);    }    	non-compiled	[CE]  <identifier>  expected	66	None	replace
323	[BUG]  [BUGGY]  if(opt!=  null)  {  for(int  i  =  0;  i  <  numArgs;  ++i)  {  opt  =  getValue(i,  null);  }  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      public  static  Option  create(char  opt)  throws  IllegalArgumentException  {      [BUGGY]  if(opt!=  null)  {  for(int  i  =  0;  i  <  numArgs;  ++i)  {  opt  =  getValue(i,  null);  }  [BUGGY]      return  create(String.valueOf(opt));  }  [CLASS]  OptionBuilder  [METHOD]  create  [RETURN_TYPE]  Option  char  opt  [VARIABLES]  boolean  hasArg  newRequired  optionalArg  required  OptionBuilder  instance  char  opt  sep  valuesep  Object  newType  type  String  argName  description  longopt  name  newDescription  newLongopt  int  num  numArgs  numberOfArgs  	projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java	0.3779644730092272	316	316	1	replace	if(opt!=  null)  {  for(int  i  =  0;  i  <  numArgs;  ++i)  {  opt  =  getValue(i,  null);  }	  if(opt    ==    null)    {    for(int    i    =    0;    i    <    numberOfArgs;    ++i)    {    opt    =    getValue(i,    null);    }    	non-compiled	[CE]  <identifier>  expected	66	None	replace
324	[BUG]  [BUGGY]  if(opt  ==  Long.MIN_VALUE)  {  return  create(newLongopt,  String.valueOf(opt));  }  [CE]  <identifier>  expected  [FE]            AssertionFailedError      [CONTEXT]      public  static  Option  create(char  opt)  throws  IllegalArgumentException  {      [BUGGY]  if(opt  ==  Long.MIN_VALUE)  {  return  create(newLongopt,  String.valueOf(opt));  }  [BUGGY]      }  [CLASS]  OptionBuilder  [METHOD]  create  [RETURN_TYPE]  Option  char  opt  [VARIABLES]  boolean  hasArg  newRequired  optionalArg  required  OptionBuilder  instance  char  opt  sep  valuesep  Object  newType  type  String  argName  description  longopt  name  newDescription  newLongopt  int  num  numArgs  numberOfArgs  	projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java	0.3779644730092272	316	316	1	replace	if(opt  ==  Long.MIN_VALUE)  {  return  create(newLongopt,  String.valueOf(opt));  }	  return    create(newLongopt,    String.valueOf(opt));    	non-compiled	[CE]  <identifier>  expected	91	None	replace
325	[BUG]  [BUGGY]  allowArg(opt)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      public  static  Option  create(char  opt)  throws  IllegalArgumentException  {      [BUGGY]  allowArg(opt)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      return  create(String.valueOf(opt));  }  [CLASS]  OptionBuilder  [METHOD]  create  [RETURN_TYPE]  Option  char  opt  [VARIABLES]  boolean  hasArg  newRequired  optionalArg  required  OptionBuilder  instance  char  opt  sep  valuesep  Object  newType  type  String  argName  description  longopt  name  newDescription  newLongopt  int  num  numArgs  numberOfArgs  	projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java	0.3779644730092272	316	316	1	replace	allowArg(opt)  {  throw  new  IllegalArgumentException( " ");  }	  allowsArg(opt)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  <identifier>  expected	111	None	replace
326	[BUG]  [BUGGY]  if(opt!=  Long.MIN_VALUE)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      public  static  Option  create(char  opt)  throws  IllegalArgumentException  {      [BUGGY]  if(opt!=  Long.MIN_VALUE)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      return  create(String.valueOf(opt));  }  [CLASS]  OptionBuilder  [METHOD]  create  [RETURN_TYPE]  Option  char  opt  [VARIABLES]  boolean  hasArg  newRequired  optionalArg  required  OptionBuilder  instance  char  opt  sep  valuesep  Object  newType  type  String  argName  description  longopt  name  newDescription  newLongopt  int  num  numArgs  numberOfArgs  	projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java	0.3779644730092272	316	316	1	replace	if(opt!=  Long.MIN_VALUE)  {  throw  new  IllegalArgumentException( " ");  }	  allowsArg(opt)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  <identifier>  expected	111	None	replace
327	[BUG]  [BUGGY]  OptionBuilder  instance  =(OptionBuilder)type.toCharArray();  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]      public  static  Option  create(char  opt)  throws  IllegalArgumentException  {      [BUGGY]  OptionBuilder  instance  =(OptionBuilder)type.toCharArray();  [BUGGY]      return  create(String.valueOf(opt));  }  [CLASS]  OptionBuilder  [METHOD]  create  [RETURN_TYPE]  Option  char  opt  [VARIABLES]  boolean  hasArg  newRequired  optionalArg  required  OptionBuilder  instance  char  opt  sep  valuesep  Object  newType  type  String  argName  description  longopt  name  newDescription  newLongopt  int  num  numArgs  numberOfArgs  	projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java	0.3779644730092272	316	316	1	replace	OptionBuilder  instance  =(OptionBuilder)type.toCharArray();	  OptionBuilder    instance    =(OptionBuilder)type.getValue();    	non-compiled	[CE]  <identifier>  expected	84	None	replace
328	[BUG]  [BUGGY]  return  create(longopt,  String.valueOf(numberOfArgs));  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      public  static  Option  create(char  opt)  throws  IllegalArgumentException  {      [BUGGY]  return  create(longopt,  String.valueOf(numberOfArgs));  [BUGGY]      }  [CLASS]  OptionBuilder  [METHOD]  create  [RETURN_TYPE]  Option  char  opt  [VARIABLES]  boolean  hasArg  newRequired  optionalArg  required  OptionBuilder  instance  char  opt  sep  valuesep  Object  newType  type  String  argName  description  longopt  name  newDescription  newLongopt  int  num  numArgs  numberOfArgs  	projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java	0.3779644730092272	316	316	1	replace	return  create(longopt,  String.valueOf(numberOfArgs));	  return    create(opt,    String.valueOf(numberOfArgs));    	non-compiled	[CE]  <identifier>  expected	28	None	replace
329	[BUG]  [BUGGY]  return  create(String.valueOf(opt)+  1).toUpperCase();  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      public  static  Option  create(char  opt)  throws  IllegalArgumentException  {      [BUGGY]  return  create(String.valueOf(opt)+  1).toUpperCase();  [BUGGY]      }  [CLASS]  OptionBuilder  [METHOD]  create  [RETURN_TYPE]  Option  char  opt  [VARIABLES]  boolean  hasArg  newRequired  optionalArg  required  OptionBuilder  instance  char  opt  sep  valuesep  Object  newType  type  String  argName  description  longopt  name  newDescription  newLongopt  int  num  numArgs  numberOfArgs  	projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java	0.3779644730092272	316	316	1	replace	return  create(String.valueOf(opt)+  1).toUpperCase();	  return    create(String.valueOf(opt)+    1).toLowerCase();    	non-compiled	[CE]  <identifier>  expected	49	None	replace
330	[BUG]  [BUGGY]  return  create(String.valueOf(opt)+  1)/  1).toLowerCase();  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      public  static  Option  create(char  opt)  throws  IllegalArgumentException  {      [BUGGY]  return  create(String.valueOf(opt)+  1)/  1).toLowerCase();  [BUGGY]      }  [CLASS]  OptionBuilder  [METHOD]  create  [RETURN_TYPE]  Option  char  opt  [VARIABLES]  boolean  hasArg  newRequired  optionalArg  required  OptionBuilder  instance  char  opt  sep  valuesep  Object  newType  type  String  argName  description  longopt  name  newDescription  newLongopt  int  num  numArgs  numberOfArgs  	projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java	0.3779644730092272	316	316	1	replace	return  create(String.valueOf(opt)+  1)/  1).toLowerCase();	  return    create(String.valueOf(opt)+    1).toLowerCase();    	non-compiled	[CE]  <identifier>  expected	49	None	replace
331	[BUG]  [BUGGY]  Integer.toString(opt)  ==  0;  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      public  static  Option  create(char  opt)  throws  IllegalArgumentException  {      [BUGGY]  Integer.toString(opt)  ==  0;  [BUGGY]      return  create(String.valueOf(opt));  }  [CLASS]  OptionBuilder  [METHOD]  create  [RETURN_TYPE]  Option  char  opt  [VARIABLES]  boolean  hasArg  newRequired  optionalArg  required  OptionBuilder  instance  char  opt  sep  valuesep  Object  newType  type  String  argName  description  longopt  name  newDescription  newLongopt  int  num  numArgs  numberOfArgs  	projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java	0.3779644730092272	316	316	1	replace	Integer.toString(opt)  ==  0;	  Integer.toString(opt)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  <identifier>  expected	17	None	replace
332	[BUG]  [BUGGY]  Integer  numberOfArgs  =  getNumberOfArgs(opt)+  1;  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      public  static  Option  create(char  opt)  throws  IllegalArgumentException  {      [BUGGY]  Integer  numberOfArgs  =  getNumberOfArgs(opt)+  1;  [BUGGY]      }  [CLASS]  OptionBuilder  [METHOD]  create  [RETURN_TYPE]  Option  char  opt  [VARIABLES]  boolean  hasArg  newRequired  optionalArg  required  OptionBuilder  instance  char  opt  sep  valuesep  Object  newType  type  String  argName  description  longopt  name  newDescription  newLongopt  int  num  numArgs  numberOfArgs  	projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java	0.3779644730092272	316	316	1	replace	Integer  numberOfArgs  =  getNumberOfArgs(opt)+  1;	  Integer    numberOfArgs    =    getNumberOfArgs(opt);    	non-compiled	[CE]  <identifier>  expected	10	None	replace
333	[BUG]  [BUGGY]  Integer  numberOfArgs  =  getNumberOfArgs(opt,  0);  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      public  static  Option  create(char  opt)  throws  IllegalArgumentException  {      [BUGGY]  Integer  numberOfArgs  =  getNumberOfArgs(opt,  0);  [BUGGY]      }  [CLASS]  OptionBuilder  [METHOD]  create  [RETURN_TYPE]  Option  char  opt  [VARIABLES]  boolean  hasArg  newRequired  optionalArg  required  OptionBuilder  instance  char  opt  sep  valuesep  Object  newType  type  String  argName  description  longopt  name  newDescription  newLongopt  int  num  numArgs  numberOfArgs  	projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java	0.3779644730092272	316	316	1	replace	Integer  numberOfArgs  =  getNumberOfArgs(opt,  0);	  Integer    numberOfArgs    =    getNumberOfArgs(opt);    	non-compiled	[CE]  <identifier>  expected	10	None	replace
334	[BUG]  [BUGGY]  if(numberOfArgs  ==  0)  {  allowNumberOfArgs(opt)  {  return  create(String.valueOf(opt));  }  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      public  static  Option  create(char  opt)  throws  IllegalArgumentException  {      [BUGGY]  if(numberOfArgs  ==  0)  {  allowNumberOfArgs(opt)  {  return  create(String.valueOf(opt));  }  [BUGGY]      return  create(String.valueOf(opt));  }  [CLASS]  OptionBuilder  [METHOD]  create  [RETURN_TYPE]  Option  char  opt  [VARIABLES]  boolean  hasArg  newRequired  optionalArg  required  OptionBuilder  instance  char  opt  sep  valuesep  Object  newType  type  String  argName  description  longopt  name  newDescription  newLongopt  int  num  numArgs  numberOfArgs  	projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java	0.3779644730092272	316	316	1	replace	if(numberOfArgs  ==  0)  {  allowNumberOfArgs(opt)  {  return  create(String.valueOf(opt));  }	  allowNumberOfArgs(opt)    {    return    create(String.valueOf(opt));    }    else    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  <identifier>  expected	32	None	replace
335	[BUG]  [BUGGY]  if(opt  ==  Long.MIN_VALUE)  {  allowNumberOfArgs(numberOfArgs)  {  if(opt  ==  Long.MIN_VALUE)  {  return  create(String.valueOf(opt));  }  else  {  throw  new  IllegalArgumentException( " ");  }  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      public  static  Option  create(char  opt)  throws  IllegalArgumentException  {      [BUGGY]  if(opt  ==  Long.MIN_VALUE)  {  allowNumberOfArgs(numberOfArgs)  {  if(opt  ==  Long.MIN_VALUE)  {  return  create(String.valueOf(opt));  }  else  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      return  create(String.valueOf(opt));  }  [CLASS]  OptionBuilder  [METHOD]  create  [RETURN_TYPE]  Option  char  opt  [VARIABLES]  boolean  hasArg  newRequired  optionalArg  required  OptionBuilder  instance  char  opt  sep  valuesep  Object  newType  type  String  argName  description  longopt  name  newDescription  newLongopt  int  num  numArgs  numberOfArgs  	projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java	0.3779644730092272	316	316	1	replace	if(opt  ==  Long.MIN_VALUE)  {  allowNumberOfArgs(numberOfArgs)  {  if(opt  ==  Long.MIN_VALUE)  {  return  create(String.valueOf(opt));  }  else  {  throw  new  IllegalArgumentException( " ");  }	  allowNumberOfArgs(numberOfArgs)    {    if(opt    ==    Long.MIN_VALUE)    {    return    create(String.valueOf(opt));    }    else    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  <identifier>  expected	31	None	replace
336	[BUG]  [BUGGY]  if(numberOfArgs  ==  0)  {  if(opt  ==  Long.MIN_VALUE)  {  return  create(String.valueOf(opt));  }  else  {  throw  new  IllegalArgumentException( " ");  }  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      public  static  Option  create(char  opt)  throws  IllegalArgumentException  {      [BUGGY]  if(numberOfArgs  ==  0)  {  if(opt  ==  Long.MIN_VALUE)  {  return  create(String.valueOf(opt));  }  else  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      return  create(String.valueOf(opt));  }  [CLASS]  OptionBuilder  [METHOD]  create  [RETURN_TYPE]  Option  char  opt  [VARIABLES]  boolean  hasArg  newRequired  optionalArg  required  OptionBuilder  instance  char  opt  sep  valuesep  Object  newType  type  String  argName  description  longopt  name  newDescription  newLongopt  int  num  numArgs  numberOfArgs  	projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java	0.3779644730092272	316	316	1	replace	if(numberOfArgs  ==  0)  {  if(opt  ==  Long.MIN_VALUE)  {  return  create(String.valueOf(opt));  }  else  {  throw  new  IllegalArgumentException( " ");  }	  allowNumberOfArgs(numberOfArgs)    {    if(opt    ==    Long.MIN_VALUE)    {    return    create(String.valueOf(opt));    }    else    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  <identifier>  expected	31	None	replace
337	[BUG]  [BUGGY]  if(opt  ==  Long.MIN_VALUE)  {  allowNumberOfArgs(numberOfArgs)  {  if(opt  ==  Long.MIN_VALUE)  {  return  create(String.valueOf(opt));  }  else  {  throw  new  IllegalArgumentException( " ");  }  }  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      public  static  Option  create(char  opt)  throws  IllegalArgumentException  {      [BUGGY]  if(opt  ==  Long.MIN_VALUE)  {  allowNumberOfArgs(numberOfArgs)  {  if(opt  ==  Long.MIN_VALUE)  {  return  create(String.valueOf(opt));  }  else  {  throw  new  IllegalArgumentException( " ");  }  }  [BUGGY]      return  create(String.valueOf(opt));  }  [CLASS]  OptionBuilder  [METHOD]  create  [RETURN_TYPE]  Option  char  opt  [VARIABLES]  boolean  hasArg  newRequired  optionalArg  required  OptionBuilder  instance  char  opt  sep  valuesep  Object  newType  type  String  argName  description  longopt  name  newDescription  newLongopt  int  num  numArgs  numberOfArgs  	projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java	0.3779644730092272	316	316	1	replace	if(opt  ==  Long.MIN_VALUE)  {  allowNumberOfArgs(numberOfArgs)  {  if(opt  ==  Long.MIN_VALUE)  {  return  create(String.valueOf(opt));  }  else  {  throw  new  IllegalArgumentException( " ");  }  }	  allowNumberOfArgs(numberOfArgs)    {    if(opt    ==    Long.MIN_VALUE)    {    return    create(String.valueOf(opt));    }    else    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  <identifier>  expected	31	None	replace
338	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  numArgs;  ++i)  {  OptionBuilder.append(longopt);  }  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      public  static  Option  create(char  opt)  throws  IllegalArgumentException  {      [BUGGY]  for(int  i  =  0;  i  <  numArgs;  ++i)  {  OptionBuilder.append(longopt);  }  [BUGGY]      return  create(String.valueOf(opt));  }  [CLASS]  OptionBuilder  [METHOD]  create  [RETURN_TYPE]  Option  char  opt  [VARIABLES]  boolean  hasArg  newRequired  optionalArg  required  OptionBuilder  instance  char  opt  sep  valuesep  Object  newType  type  String  argName  description  longopt  name  newDescription  newLongopt  int  num  numArgs  numberOfArgs  	projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java	0.3779644730092272	316	316	1	replace	for(int  i  =  0;  i  <  numArgs;  ++i)  {  OptionBuilder.append(longopt);  }	  for(int    i    =    0;    i    <    numberOfArgs;    ++i)    {    OptionBuilder.append(opt);    }    	non-compiled	[CE]  <identifier>  expected	39	None	replace
339	[BUG]  [BUGGY]  if(numberOfArgs  >  0)  {  for(int  i  =  0;  i  <  numberOfArgs;  ++i)  {  opt  =  opt  +  1;  }  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      public  static  Option  create(char  opt)  throws  IllegalArgumentException  {      [BUGGY]  if(numberOfArgs  >  0)  {  for(int  i  =  0;  i  <  numberOfArgs;  ++i)  {  opt  =  opt  +  1;  }  [BUGGY]      return  create(String.valueOf(opt));  }  [CLASS]  OptionBuilder  [METHOD]  create  [RETURN_TYPE]  Option  char  opt  [VARIABLES]  boolean  hasArg  newRequired  optionalArg  required  OptionBuilder  instance  char  opt  sep  valuesep  Object  newType  type  String  argName  description  longopt  name  newDescription  newLongopt  int  num  numArgs  numberOfArgs  	projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java	0.3779644730092272	316	316	1	replace	if(numberOfArgs  >  0)  {  for(int  i  =  0;  i  <  numberOfArgs;  ++i)  {  opt  =  opt  +  1;  }	  if(opt    >    0)    {    for(int    i    =    0;    i    <    numberOfArgs;    ++i)    {    opt    =    opt    +    1;    }    	non-compiled	[CE]  <identifier>  expected	103	None	replace
340	[BUG]  [BUGGY]  return  create(String.valueOf(opt)+  valueOfArgs);  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      public  static  Option  create(char  opt)  throws  IllegalArgumentException  {      [BUGGY]  return  create(String.valueOf(opt)+  valueOfArgs);  [BUGGY]      }  [CLASS]  OptionBuilder  [METHOD]  create  [RETURN_TYPE]  Option  char  opt  [VARIABLES]  boolean  hasArg  newRequired  optionalArg  required  OptionBuilder  instance  char  opt  sep  valuesep  Object  newType  type  String  argName  description  longopt  name  newDescription  newLongopt  int  num  numArgs  numberOfArgs  	projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java	0.3779644730092272	316	316	1	replace	return  create(String.valueOf(opt)+  valueOfArgs);	  return    create(String.valueOf(opt)+    numArgs);    	non-compiled	[CE]  <identifier>  expected	48	None	replace
341	[BUG]  [BUGGY]  Integer.valueOf(opt)  ==  0;  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      public  static  Option  create(char  opt)  throws  IllegalArgumentException  {      [BUGGY]  Integer.valueOf(opt)  ==  0;  [BUGGY]      return  create(String.valueOf(opt));  }  [CLASS]  OptionBuilder  [METHOD]  create  [RETURN_TYPE]  Option  char  opt  [VARIABLES]  boolean  hasArg  newRequired  optionalArg  required  OptionBuilder  instance  char  opt  sep  valuesep  Object  newType  type  String  argName  description  longopt  name  newDescription  newLongopt  int  num  numArgs  numberOfArgs  	projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java	0.3779644730092272	316	316	1	replace	Integer.valueOf(opt)  ==  0;	  Integer.valueOf(opt)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  <identifier>  expected	19	None	replace
342	[BUG]  [BUGGY]  numberOfArgs  >=  0)  {  return  create(String.valueOf(opt));  }  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      public  static  Option  create(char  opt)  throws  IllegalArgumentException  {      [BUGGY]  numberOfArgs  >=  0)  {  return  create(String.valueOf(opt));  }  [BUGGY]      }  [CLASS]  OptionBuilder  [METHOD]  create  [RETURN_TYPE]  Option  char  opt  [VARIABLES]  boolean  hasArg  newRequired  optionalArg  required  OptionBuilder  instance  char  opt  sep  valuesep  Object  newType  type  String  argName  description  longopt  name  newDescription  newLongopt  int  num  numArgs  numberOfArgs  	projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java	0.3779644730092272	316	316	1	replace	numberOfArgs  >=  0)  {  return  create(String.valueOf(opt));  }	  if(numberOfArgs    >=    0)    {    return    create(String.valueOf(opt));    }    	non-compiled	[CE]  <identifier>  expected	9	None	replace
343	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  numberOfArgs  +  1;  i++)  {  opt  =  opt  +  1;  }  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      public  static  Option  create(char  opt)  throws  IllegalArgumentException  {      [BUGGY]  for(int  i  =  0;  i  <  numberOfArgs  +  1;  i++)  {  opt  =  opt  +  1;  }  [BUGGY]      return  create(String.valueOf(opt));  }  [CLASS]  OptionBuilder  [METHOD]  create  [RETURN_TYPE]  Option  char  opt  [VARIABLES]  boolean  hasArg  newRequired  optionalArg  required  OptionBuilder  instance  char  opt  sep  valuesep  Object  newType  type  String  argName  description  longopt  name  newDescription  newLongopt  int  num  numArgs  numberOfArgs  	projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java	0.3779644730092272	316	316	1	replace	for(int  i  =  0;  i  <  numberOfArgs  +  1;  i++)  {  opt  =  opt  +  1;  }	  for(int    i    =    0;    i    <    numberOfArgs;    i++)    {    opt    =    opt    +    1;    }    	non-compiled	[CE]  <identifier>  expected	38	None	replace
344	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  this.numberOfArgs;  i++)  {  opt  =  opt  +  1;  }  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]      public  static  Option  create(char  opt)  throws  IllegalArgumentException  {      [BUGGY]  for(int  i  =  0;  i  <  this.numberOfArgs;  i++)  {  opt  =  opt  +  1;  }  [BUGGY]      return  create(String.valueOf(opt));  }  [CLASS]  OptionBuilder  [METHOD]  create  [RETURN_TYPE]  Option  char  opt  [VARIABLES]  boolean  hasArg  newRequired  optionalArg  required  OptionBuilder  instance  char  opt  sep  valuesep  Object  newType  type  String  argName  description  longopt  name  newDescription  newLongopt  int  num  numArgs  numberOfArgs  	projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java	0.3779644730092272	316	316	1	replace	for(int  i  =  0;  i  <  this.numberOfArgs;  i++)  {  opt  =  opt  +  1;  }	  for(int    i    =    0;    i    <    numberOfArgs;    i++)    {    opt    =    opt    +    1;    }    	non-compiled	[CE]  <identifier>  expected	38	None	replace
345	[BUG]  [BUGGY]  if(opt  ==  null)  {  return  create(String.valueOf(opt));  }  [CE]  <identifier>  expected  [FE]            AssertionFailedError      [CONTEXT]      public  static  Option  create(char  opt)  throws  IllegalArgumentException  {      [BUGGY]  if(opt  ==  null)  {  return  create(String.valueOf(opt));  }  [BUGGY]      }  [CLASS]  OptionBuilder  [METHOD]  create  [RETURN_TYPE]  Option  char  opt  [VARIABLES]  boolean  hasArg  newRequired  optionalArg  required  OptionBuilder  instance  char  opt  sep  valuesep  Object  newType  type  String  argName  description  longopt  name  newDescription  newLongopt  int  num  numArgs  numberOfArgs  	projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java	0.3779644730092272	316	316	1	replace	if(opt  ==  null)  {  return  create(String.valueOf(opt));  }	  if(opt    ==    null)    {    return    create(String.valueOf(numberOfArgs));    }    	non-compiled	[CE]  <identifier>  expected	51	None	replace
346	[BUG]  [BUGGY]  int  i  =  0;  i  <  numArgs;  ++i)  {  OptionsBuilder.this.append(opt);  }  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      public  static  Option  create(char  opt)  throws  IllegalArgumentException  {      [BUGGY]  int  i  =  0;  i  <  numArgs;  ++i)  {  OptionsBuilder.this.append(opt);  }  [BUGGY]      return  create(String.valueOf(opt));  }  [CLASS]  OptionBuilder  [METHOD]  create  [RETURN_TYPE]  Option  char  opt  [VARIABLES]  boolean  hasArg  newRequired  optionalArg  required  OptionBuilder  instance  char  opt  sep  valuesep  Object  newType  type  String  argName  description  longopt  name  newDescription  newLongopt  int  num  numArgs  numberOfArgs  	projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java	0.3779644730092272	316	316	1	replace	int  i  =  0;  i  <  numArgs;  ++i)  {  OptionsBuilder.this.append(opt);  }	  for(int    i    =    0;    i    <    numberOfArgs;    ++i)    {    OptionsBuilder.this.append(opt);    }    	non-compiled	[CE]  <identifier>  expected	23	None	replace
347	[BUG]  [BUGGY]  if(opt!=  null  ||  opt.length()!=  0)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      public  static  Option  create(char  opt)  throws  IllegalArgumentException  {      [BUGGY]  if(opt!=  null  ||  opt.length()!=  0)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      return  create(String.valueOf(opt));  }  [CLASS]  OptionBuilder  [METHOD]  create  [RETURN_TYPE]  Option  char  opt  [VARIABLES]  boolean  hasArg  newRequired  optionalArg  required  OptionBuilder  instance  char  opt  sep  valuesep  Object  newType  type  String  argName  description  longopt  name  newDescription  newLongopt  int  num  numArgs  numberOfArgs  	projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java	0.3779644730092272	316	316	1	replace	if(opt!=  null  ||  opt.length()!=  0)  {  throw  new  IllegalArgumentException( " ");  }	  if(opt    ==    null    ||    opt.length()!=    0)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  <identifier>  expected	74	None	replace
348	[BUG]  [BUGGY]  int  numberOfArgs  =  0)  {  return  create(String.valueOf(opt));  }  else  {  throw  new  IllegalArgumentException( " ");  }  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      public  static  Option  create(char  opt)  throws  IllegalArgumentException  {      [BUGGY]  int  numberOfArgs  =  0)  {  return  create(String.valueOf(opt));  }  else  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      }  [CLASS]  OptionBuilder  [METHOD]  create  [RETURN_TYPE]  Option  char  opt  [VARIABLES]  boolean  hasArg  newRequired  optionalArg  required  OptionBuilder  instance  char  opt  sep  valuesep  Object  newType  type  String  argName  description  longopt  name  newDescription  newLongopt  int  num  numArgs  numberOfArgs  	projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java	0.3779644730092272	316	316	1	replace	int  numberOfArgs  =  0)  {  return  create(String.valueOf(opt));  }  else  {  throw  new  IllegalArgumentException( " ");  }	  numberOfArgs    ==    0)    {    return    create(String.valueOf(opt));    }    else    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  <identifier>  expected	86	None	replace
349	[BUG]  [BUGGY]  Integer  numberOfArgs  =  getValue(numberOfArgs,  0);  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      public  static  Option  create(char  opt)  throws  IllegalArgumentException  {      [BUGGY]  Integer  numberOfArgs  =  getValue(numberOfArgs,  0);  [BUGGY]      return  create(String.valueOf(opt));  }  [CLASS]  OptionBuilder  [METHOD]  create  [RETURN_TYPE]  Option  char  opt  [VARIABLES]  boolean  hasArg  newRequired  optionalArg  required  OptionBuilder  instance  char  opt  sep  valuesep  Object  newType  type  String  argName  description  longopt  name  newDescription  newLongopt  int  num  numArgs  numberOfArgs  	projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java	0.3779644730092272	316	316	1	replace	Integer  numberOfArgs  =  getValue(numberOfArgs,  0);	  Integer    numberOfArgs    =    getValue(numberOfArgs);    	non-compiled	[CE]  <identifier>  expected	45	None	replace
350	[BUG]  [BUGGY]  Integer  numberOfArgs  =  getValue(numberOfArgs,  opt);  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      public  static  Option  create(char  opt)  throws  IllegalArgumentException  {      [BUGGY]  Integer  numberOfArgs  =  getValue(numberOfArgs,  opt);  [BUGGY]      return  create(String.valueOf(opt));  }  [CLASS]  OptionBuilder  [METHOD]  create  [RETURN_TYPE]  Option  char  opt  [VARIABLES]  boolean  hasArg  newRequired  optionalArg  required  OptionBuilder  instance  char  opt  sep  valuesep  Object  newType  type  String  argName  description  longopt  name  newDescription  newLongopt  int  num  numArgs  numberOfArgs  	projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java	0.3779644730092272	316	316	1	replace	Integer  numberOfArgs  =  getValue(numberOfArgs,  opt);	  Integer    numberOfArgs    =    getValue(numberOfArgs);    	non-compiled	[CE]  <identifier>  expected	45	None	replace
351	[BUG]  [BUGGY]  OptionBuilder  <?>  longopt  =  getLongValue(numberOfArgs);  [CE]  <identifier>  expected  [FE]            AssertionFailedError      [CONTEXT]      public  static  Option  create(char  opt)  throws  IllegalArgumentException  {      [BUGGY]  OptionBuilder  <?>  longopt  =  getLongValue(numberOfArgs);  [BUGGY]      return  create(String.valueOf(opt));  }  [CLASS]  OptionBuilder  [METHOD]  create  [RETURN_TYPE]  Option  char  opt  [VARIABLES]  boolean  hasArg  newRequired  optionalArg  required  OptionBuilder  instance  char  opt  sep  valuesep  Object  newType  type  String  argName  description  longopt  name  newDescription  newLongopt  int  num  numArgs  numberOfArgs  	projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java	0.3779644730092272	316	316	1	replace	OptionBuilder  <?>  longopt  =  getLongValue(numberOfArgs);	  if(opt    >    0)    {    for(int    i    =    0;    i    <    numberOfArgs;    ++i)    {    opt    =    getValue(i);    }    	non-compiled	[CE]  <identifier>  expected	94	None	replace
352	[BUG]  [BUGGY]  if(opt!=  null)  {  return  create(String.valueOf(opt));  }  else  {  for(int  i  =  0;  i  <  numberOfArgs;  ++i)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      public  static  Option  create(char  opt)  throws  IllegalArgumentException  {      [BUGGY]  if(opt!=  null)  {  return  create(String.valueOf(opt));  }  else  {  for(int  i  =  0;  i  <  numberOfArgs;  ++i)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      }  [CLASS]  OptionBuilder  [METHOD]  create  [RETURN_TYPE]  Option  char  opt  [VARIABLES]  boolean  hasArg  newRequired  optionalArg  required  OptionBuilder  instance  char  opt  sep  valuesep  Object  newType  type  String  argName  description  longopt  name  newDescription  newLongopt  int  num  numArgs  numberOfArgs  	projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java	0.3779644730092272	316	316	1	replace	if(opt!=  null)  {  return  create(String.valueOf(opt));  }  else  {  for(int  i  =  0;  i  <  numberOfArgs;  ++i)  {  throw  new  IllegalArgumentException( " ");  }	  if(opt    ==    null)    {    return    create(String.valueOf(numberOfArgs));    }    else    {    for(int    i    =    0;    i    <    numberOfArgs;    ++i)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  <identifier>  expected	53	None	replace
353	[BUG]  [BUGGY]  if(opt!=  null)  {  return  create(String.valueOf(opt));  }  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      public  static  Option  create(char  opt)  throws  IllegalArgumentException  {      [BUGGY]  if(opt!=  null)  {  return  create(String.valueOf(opt));  }  [BUGGY]      }  [CLASS]  OptionBuilder  [METHOD]  create  [RETURN_TYPE]  Option  char  opt  [VARIABLES]  boolean  hasArg  newRequired  optionalArg  required  OptionBuilder  instance  char  opt  sep  valuesep  Object  newType  type  String  argName  description  longopt  name  newDescription  newLongopt  int  num  numArgs  numberOfArgs  	projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java	0.3779644730092272	316	316	1	replace	if(opt!=  null)  {  return  create(String.valueOf(opt));  }	  if(opt    ==    null)    {    return    create(String.valueOf(numberOfArgs));    }    else    {    for(int    i    =    0;    i    <    numberOfArgs;    ++i)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  <identifier>  expected	53	None	replace
354	[BUG]  [BUGGY]  if(opt  <  0)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      public  static  Option  create(char  opt)  throws  IllegalArgumentException  {      [BUGGY]  if(opt  <  0)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      return  create(String.valueOf(opt));  }  [CLASS]  OptionBuilder  [METHOD]  create  [RETURN_TYPE]  Option  char  opt  [VARIABLES]  boolean  hasArg  newRequired  optionalArg  required  OptionBuilder  instance  char  opt  sep  valuesep  Object  newType  type  String  argName  description  longopt  name  newDescription  newLongopt  int  num  numArgs  numberOfArgs  	projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java	0.3779644730092272	316	316	1	replace	if(opt  <  0)  {  throw  new  IllegalArgumentException( " ");  }	  allowsArg(opt)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  <identifier>  expected	111	None	replace
355	[BUG]  [BUGGY]  if(opt  ==  '.')  {  throw  new  IllegalArgumentException( " ");  }  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      public  static  Option  create(char  opt)  throws  IllegalArgumentException  {      [BUGGY]  if(opt  ==  '.')  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      return  create(String.valueOf(opt));  }  [CLASS]  OptionBuilder  [METHOD]  create  [RETURN_TYPE]  Option  char  opt  [VARIABLES]  boolean  hasArg  newRequired  optionalArg  required  OptionBuilder  instance  char  opt  sep  valuesep  Object  newType  type  String  argName  description  longopt  name  newDescription  newLongopt  int  num  numArgs  numberOfArgs  	projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java	0.3779644730092272	316	316	1	replace	if(opt  ==  '.')  {  throw  new  IllegalArgumentException( " ");  }	  allowsArg(opt)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  <identifier>  expected	111	None	replace
356	[BUG]  [BUGGY]  if(opt  <  0  ||  opt  >  length())  {  throw  new  IllegalArgumentException( " ");  }  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      public  static  Option  create(char  opt)  throws  IllegalArgumentException  {      [BUGGY]  if(opt  <  0  ||  opt  >  length())  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      return  create(String.valueOf(opt));  }  [CLASS]  OptionBuilder  [METHOD]  create  [RETURN_TYPE]  Option  char  opt  [VARIABLES]  boolean  hasArg  newRequired  optionalArg  required  OptionBuilder  instance  char  opt  sep  valuesep  Object  newType  type  String  argName  description  longopt  name  newDescription  newLongopt  int  num  numArgs  numberOfArgs  	projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java	0.3779644730092272	316	316	1	replace	if(opt  <  0  ||  opt  >  length())  {  throw  new  IllegalArgumentException( " ");  }	  allowsArg(opt)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  <identifier>  expected	111	None	replace
357	[BUG]  [BUGGY]  return  create(Long.valueOf(opt)+  2);  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      public  static  Option  create(char  opt)  throws  IllegalArgumentException  {      [BUGGY]  return  create(Long.valueOf(opt)+  2);  [BUGGY]      }  [CLASS]  OptionBuilder  [METHOD]  create  [RETURN_TYPE]  Option  char  opt  [VARIABLES]  boolean  hasArg  newRequired  optionalArg  required  OptionBuilder  instance  char  opt  sep  valuesep  Object  newType  type  String  argName  description  longopt  name  newDescription  newLongopt  int  num  numArgs  numberOfArgs  	projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java	0.3779644730092272	316	316	1	replace	return  create(Long.valueOf(opt)+  2);	  return    create(Long.valueOf(opt)+    1);    	non-compiled	[CE]  <identifier>  expected	2	None	replace
358	[BUG]  [BUGGY]  if(numberOfArgs  ==  1)  {  return  create(String.valueOf(opt));  }  else  {  return  new  OptionBuilder();  }  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      public  static  Option  create(char  opt)  throws  IllegalArgumentException  {      [BUGGY]  if(numberOfArgs  ==  1)  {  return  create(String.valueOf(opt));  }  else  {  return  new  OptionBuilder();  }  [BUGGY]      return  create(String.valueOf(opt));  }  [CLASS]  OptionBuilder  [METHOD]  create  [RETURN_TYPE]  Option  char  opt  [VARIABLES]  boolean  hasArg  newRequired  optionalArg  required  OptionBuilder  instance  char  opt  sep  valuesep  Object  newType  type  String  argName  description  longopt  name  newDescription  newLongopt  int  num  numArgs  numberOfArgs  	projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java	0.3779644730092272	316	316	1	replace	if(numberOfArgs  ==  1)  {  return  create(String.valueOf(opt));  }  else  {  return  new  OptionBuilder();  }	  if(numberOfArgs    ==    Long.MIN_VALUE)    {    return    create(String.valueOf(opt));    }    else    {    return    new    OptionBuilder();    }    	non-compiled	[CE]  <identifier>  expected	14	None	replace
359	[BUG]  [BUGGY]  Class  <?>  type  =  getType(opt);  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      public  static  Option  create(char  opt)  throws  IllegalArgumentException  {      [BUGGY]  Class  <?>  type  =  getType(opt);  [BUGGY]      return  create(String.valueOf(opt));  }  [CLASS]  OptionBuilder  [METHOD]  create  [RETURN_TYPE]  Option  char  opt  [VARIABLES]  boolean  hasArg  newRequired  optionalArg  required  OptionBuilder  instance  char  opt  sep  valuesep  Object  newType  type  String  argName  description  longopt  name  newDescription  newLongopt  int  num  numArgs  numberOfArgs  	projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java	0.3779644730092272	316	316	1	replace	Class  <?>  type  =  getType(opt);	  if(opt    ==    Long.MIN_VALUE)    {    throw    new    IllegalArgumentException(String.valueOf(opt));    }    	non-compiled	[CE]  <identifier>  expected	71	None	replace
360	[BUG]  [BUGGY]  Class  <?>  type  =  getType(opt).getRawClass();  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      public  static  Option  create(char  opt)  throws  IllegalArgumentException  {      [BUGGY]  Class  <?>  type  =  getType(opt).getRawClass();  [BUGGY]      return  create(String.valueOf(opt));  }  [CLASS]  OptionBuilder  [METHOD]  create  [RETURN_TYPE]  Option  char  opt  [VARIABLES]  boolean  hasArg  newRequired  optionalArg  required  OptionBuilder  instance  char  opt  sep  valuesep  Object  newType  type  String  argName  description  longopt  name  newDescription  newLongopt  int  num  numArgs  numberOfArgs  	projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java	0.3779644730092272	316	316	1	replace	Class  <?>  type  =  getType(opt).getRawClass();	  if(opt    ==    Long.MIN_VALUE)    {    throw    new    IllegalArgumentException(String.valueOf(opt));    }    	non-compiled	[CE]  <identifier>  expected	71	None	replace
361	[BUG]  [BUGGY]  Class  <?>  type  =  getType();  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      public  static  Option  create(char  opt)  throws  IllegalArgumentException  {      [BUGGY]  Class  <?>  type  =  getType();  [BUGGY]      return  create(String.valueOf(opt));  }  [CLASS]  OptionBuilder  [METHOD]  create  [RETURN_TYPE]  Option  char  opt  [VARIABLES]  boolean  hasArg  newRequired  optionalArg  required  OptionBuilder  instance  char  opt  sep  valuesep  Object  newType  type  String  argName  description  longopt  name  newDescription  newLongopt  int  num  numArgs  numberOfArgs  	projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java	0.3779644730092272	316	316	1	replace	Class  <?>  type  =  getType();	  if(opt    ==    Long.MIN_VALUE)    {    throw    new    IllegalArgumentException(String.valueOf(opt));    }    	non-compiled	[CE]  <identifier>  expected	71	None	replace
362	[BUG]  [BUGGY]  int  numberOfArgs  =  getNumberOfArgs(numberOfArgs,  opt);  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      public  static  Option  create(char  opt)  throws  IllegalArgumentException  {      [BUGGY]  int  numberOfArgs  =  getNumberOfArgs(numberOfArgs,  opt);  [BUGGY]      return  create(String.valueOf(opt));  }  [CLASS]  OptionBuilder  [METHOD]  create  [RETURN_TYPE]  Option  char  opt  [VARIABLES]  boolean  hasArg  newRequired  optionalArg  required  OptionBuilder  instance  char  opt  sep  valuesep  Object  newType  type  String  argName  description  longopt  name  newDescription  newLongopt  int  num  numArgs  numberOfArgs  	projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java	0.3779644730092272	316	316	1	replace	int  numberOfArgs  =  getNumberOfArgs(numberOfArgs,  opt);	  int    numberOfArgs    =    getNumberOfArgs(numberOfArgs);    	non-compiled	[CE]  <identifier>  expected	59	None	replace
363	[BUG]  [BUGGY]  int  i  =  0;  numArgs  =  numberOfArgs;  ++i)  {  OptionBuilder.this.append(option);  }  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      public  static  Option  create(char  opt)  throws  IllegalArgumentException  {      [BUGGY]  int  i  =  0;  numArgs  =  numberOfArgs;  ++i)  {  OptionBuilder.this.append(option);  }  [BUGGY]      return  create(String.valueOf(opt));  }  [CLASS]  OptionBuilder  [METHOD]  create  [RETURN_TYPE]  Option  char  opt  [VARIABLES]  boolean  hasArg  newRequired  optionalArg  required  OptionBuilder  instance  char  opt  sep  valuesep  Object  newType  type  String  argName  description  longopt  name  newDescription  newLongopt  int  num  numArgs  numberOfArgs  	projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java	0.3779644730092272	316	316	1	replace	int  i  =  0;  numArgs  =  numberOfArgs;  ++i)  {  OptionBuilder.this.append(option);  }	  for(int    i    =    0;    i    <    numberOfArgs;    ++i)    {    OptionBuilder.this.append(option);    }    	non-compiled	[CE]  <identifier>  expected	21	None	replace
364	[BUG]  [BUGGY]  if(opt!=  Long.MIN_VALUE)  {  return  create(String.valueOf(opt));  }  else  {  throw  new  IllegalArgumentException( " ");  }  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      public  static  Option  create(char  opt)  throws  IllegalArgumentException  {      [BUGGY]  if(opt!=  Long.MIN_VALUE)  {  return  create(String.valueOf(opt));  }  else  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      return  create(String.valueOf(opt));  }  [CLASS]  OptionBuilder  [METHOD]  create  [RETURN_TYPE]  Option  char  opt  [VARIABLES]  boolean  hasArg  newRequired  optionalArg  required  OptionBuilder  instance  char  opt  sep  valuesep  Object  newType  type  String  argName  description  longopt  name  newDescription  newLongopt  int  num  numArgs  numberOfArgs  	projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java	0.3779644730092272	316	316	1	replace	if(opt!=  Long.MIN_VALUE)  {  return  create(String.valueOf(opt));  }  else  {  throw  new  IllegalArgumentException( " ");  }	  if(opt    ==    Long.MIN_VALUE    ||    opt    ==    Long.MAX_VALUE)    {    return    create(String.valueOf(opt));    }    else    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  <identifier>  expected	92	None	replace
365	[BUG]  [BUGGY]  OptionBuilder  instance  =  new  OptionBuilder(opt,  String.valueOf(numberOfArgs),  description);  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      public  static  Option  create(char  opt)  throws  IllegalArgumentException  {      [BUGGY]  OptionBuilder  instance  =  new  OptionBuilder(opt,  String.valueOf(numberOfArgs),  description);  [BUGGY]      }  [CLASS]  OptionBuilder  [METHOD]  create  [RETURN_TYPE]  Option  char  opt  [VARIABLES]  boolean  hasArg  newRequired  optionalArg  required  OptionBuilder  instance  char  opt  sep  valuesep  Object  newType  type  String  argName  description  longopt  name  newDescription  newLongopt  int  num  numArgs  numberOfArgs  	projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java	0.3779644730092272	316	316	1	replace	OptionBuilder  instance  =  new  OptionBuilder(opt,  String.valueOf(numberOfArgs),  description);	  OptionBuilder    instance    =    new    OptionBuilder(opt,    String.valueOf(numberOfArgs));    	non-compiled	[CE]  <identifier>  expected	60	None	replace
366	[BUG]  [BUGGY]  return  create(longopt,  String.valueOf(opt),  null);  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      public  static  Option  create(char  opt)  throws  IllegalArgumentException  {      [BUGGY]  return  create(longopt,  String.valueOf(opt),  null);  [BUGGY]      }  [CLASS]  OptionBuilder  [METHOD]  create  [RETURN_TYPE]  Option  char  opt  [VARIABLES]  boolean  hasArg  newRequired  optionalArg  required  OptionBuilder  instance  char  opt  sep  valuesep  Object  newType  type  String  argName  description  longopt  name  newDescription  newLongopt  int  num  numArgs  numberOfArgs  	projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java	0.3779644730092272	316	316	1	replace	return  create(longopt,  String.valueOf(opt),  null);	  return    create(numberOfArgs,    String.valueOf(opt),    null);    	non-compiled	[CE]  <identifier>  expected	90	None	replace
367	[BUG]  [BUGGY]  return  create(Number.toHexString(opt));  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      public  static  Option  create(char  opt)  throws  IllegalArgumentException  {      [BUGGY]  return  create(Number.toHexString(opt));  [BUGGY]      }  [CLASS]  OptionBuilder  [METHOD]  create  [RETURN_TYPE]  Option  char  opt  [VARIABLES]  boolean  hasArg  newRequired  optionalArg  required  OptionBuilder  instance  char  opt  sep  valuesep  Object  newType  type  String  argName  description  longopt  name  newDescription  newLongopt  int  num  numArgs  numberOfArgs  	projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java	0.3779644730092272	316	316	1	replace	return  create(Number.toHexString(opt));	  return    create(Number.valueOf(opt));    	non-compiled	[CE]  <identifier>  expected	3	None	replace
368	[BUG]  [BUGGY]  return  create(opt,  String.valueOf(this.valuesep));  [CE]  <identifier>  expected  [FE]            AssertionFailedError      [CONTEXT]      public  static  Option  create(char  opt)  throws  IllegalArgumentException  {      [BUGGY]  return  create(opt,  String.valueOf(this.valuesep));  [BUGGY]      }  [CLASS]  OptionBuilder  [METHOD]  create  [RETURN_TYPE]  Option  char  opt  [VARIABLES]  boolean  hasArg  newRequired  optionalArg  required  OptionBuilder  instance  char  opt  sep  valuesep  Object  newType  type  String  argName  description  longopt  name  newDescription  newLongopt  int  num  numArgs  numberOfArgs  	projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java	0.3779644730092272	316	316	1	replace	return  create(opt,  String.valueOf(this.valuesep));	  return    create(opt,    String.valueOf(longopt));    	non-compiled	[CE]  <identifier>  expected	24	None	replace
369	[BUG]  [BUGGY]  OptionBuilder  <  Object>  opt  =  getValue(numberOfArgs,  null);  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      public  static  Option  create(char  opt)  throws  IllegalArgumentException  {      [BUGGY]  OptionBuilder  <  Object>  opt  =  getValue(numberOfArgs,  null);  [BUGGY]      return  create(String.valueOf(opt));  }  [CLASS]  OptionBuilder  [METHOD]  create  [RETURN_TYPE]  Option  char  opt  [VARIABLES]  boolean  hasArg  newRequired  optionalArg  required  OptionBuilder  instance  char  opt  sep  valuesep  Object  newType  type  String  argName  description  longopt  name  newDescription  newLongopt  int  num  numArgs  numberOfArgs  	projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java	0.3779644730092272	316	316	1	replace	OptionBuilder  <  Object>  opt  =  getValue(numberOfArgs,  null);	  if(opt    ==    null)    {    for(int    i    =    0;    i    <    numberOfArgs;    ++i)    {    opt    =    getValue(i,    null);    }    	non-compiled	[CE]  <identifier>  expected	66	None	replace
370	[BUG]  [BUGGY]  Integer.toString(this.valuesep)  ==  0)  {  return  create(String.valueOf(opt));  }  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      public  static  Option  create(char  opt)  throws  IllegalArgumentException  {      [BUGGY]  Integer.toString(this.valuesep)  ==  0)  {  return  create(String.valueOf(opt));  }  [BUGGY]      return  create(String.valueOf(opt));  }  [CLASS]  OptionBuilder  [METHOD]  create  [RETURN_TYPE]  Option  char  opt  [VARIABLES]  boolean  hasArg  newRequired  optionalArg  required  OptionBuilder  instance  char  opt  sep  valuesep  Object  newType  type  String  argName  description  longopt  name  newDescription  newLongopt  int  num  numArgs  numberOfArgs  	projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java	0.3779644730092272	316	316	1	replace	Integer.toString(this.valuesep)  ==  0)  {  return  create(String.valueOf(opt));  }	  Integer.toString(opt)    ==    0)    {    return    create(String.valueOf(opt));    }    	non-compiled	[CE]  <identifier>  expected	46	None	replace
371	[BUG]  [BUGGY]  if(numberOfArgs  >  1)  {  if(opt  ==  Long.MIN_VALUE)  {  return  create(String.valueOf(opt));  }  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]      public  static  Option  create(char  opt)  throws  IllegalArgumentException  {      [BUGGY]  if(numberOfArgs  >  1)  {  if(opt  ==  Long.MIN_VALUE)  {  return  create(String.valueOf(opt));  }  [BUGGY]      return  create(String.valueOf(opt));  }  [CLASS]  OptionBuilder  [METHOD]  create  [RETURN_TYPE]  Option  char  opt  [VARIABLES]  boolean  hasArg  newRequired  optionalArg  required  OptionBuilder  instance  char  opt  sep  valuesep  Object  newType  type  String  argName  description  longopt  name  newDescription  newLongopt  int  num  numArgs  numberOfArgs  	projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java	0.3779644730092272	316	316	1	replace	if(numberOfArgs  >  1)  {  if(opt  ==  Long.MIN_VALUE)  {  return  create(String.valueOf(opt));  }	  allowNumberOfArgs(numberOfArgs)    {    if(opt    ==    Long.MIN_VALUE)    {    return    create(String.valueOf(opt));    }    	non-compiled	[CE]  <identifier>  expected	34	None	replace
372	[BUG]  [BUGGY]  if(numberOfArgs  >  Long.MIN_VALUE)  {  if(opt  ==  Long.MIN_VALUE)  {  return  create(String.valueOf(opt));  }  [CE]  <identifier>  expected  [FE]                          AssertionFailedError      [CONTEXT]      public  static  Option  create(char  opt)  throws  IllegalArgumentException  {      [BUGGY]  if(numberOfArgs  >  Long.MIN_VALUE)  {  if(opt  ==  Long.MIN_VALUE)  {  return  create(String.valueOf(opt));  }  [BUGGY]      return  create(String.valueOf(opt));  }  [CLASS]  OptionBuilder  [METHOD]  create  [RETURN_TYPE]  Option  char  opt  [VARIABLES]  boolean  hasArg  newRequired  optionalArg  required  OptionBuilder  instance  char  opt  sep  valuesep  Object  newType  type  String  argName  description  longopt  name  newDescription  newLongopt  int  num  numArgs  numberOfArgs  	projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java	0.3779644730092272	316	316	1	replace	if(numberOfArgs  >  Long.MIN_VALUE)  {  if(opt  ==  Long.MIN_VALUE)  {  return  create(String.valueOf(opt));  }	  allowNumberOfArgs(numberOfArgs)    {    if(opt    ==    Long.MIN_VALUE)    {    return    create(String.valueOf(opt));    }    	non-compiled	[CE]  <identifier>  expected	34	None	replace
373	[BUG]  [BUGGY]  if(numberOfArgs  >  Long.MIN_VALUE)  {  return  create(String.valueOf(opt));  }  [CE]  <identifier>  expected  [FE]                            AssertionFailedError      [CONTEXT]      public  static  Option  create(char  opt)  throws  IllegalArgumentException  {      [BUGGY]  if(numberOfArgs  >  Long.MIN_VALUE)  {  return  create(String.valueOf(opt));  }  [BUGGY]      return  create(String.valueOf(opt));  }  [CLASS]  OptionBuilder  [METHOD]  create  [RETURN_TYPE]  Option  char  opt  [VARIABLES]  boolean  hasArg  newRequired  optionalArg  required  OptionBuilder  instance  char  opt  sep  valuesep  Object  newType  type  String  argName  description  longopt  name  newDescription  newLongopt  int  num  numArgs  numberOfArgs  	projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java	0.3779644730092272	316	316	1	replace	if(numberOfArgs  >  Long.MIN_VALUE)  {  return  create(String.valueOf(opt));  }	  allowNumberOfArgs(numberOfArgs)    {    if(opt    ==    Long.MIN_VALUE)    {    return    create(String.valueOf(opt));    }    	non-compiled	[CE]  <identifier>  expected	34	None	replace
374	[BUG]  [BUGGY]  int  numberOfArgs  =(numberOfArgs  >  1)?  numberOfArgs  :  0;  [CE]  <identifier>  expected  [FE]            AssertionFailedError      [CONTEXT]      public  static  Option  create(char  opt)  throws  IllegalArgumentException  {      [BUGGY]  int  numberOfArgs  =(numberOfArgs  >  1)?  numberOfArgs  :  0;  [BUGGY]      return  create(String.valueOf(opt));  }  [CLASS]  OptionBuilder  [METHOD]  create  [RETURN_TYPE]  Option  char  opt  [VARIABLES]  boolean  hasArg  newRequired  optionalArg  required  OptionBuilder  instance  char  opt  sep  valuesep  Object  newType  type  String  argName  description  longopt  name  newDescription  newLongopt  int  num  numArgs  numberOfArgs  	projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java	0.3779644730092272	316	316	1	replace	int  numberOfArgs  =(numberOfArgs  >  1)?  numberOfArgs  :  0;	  if(numberOfArgs    >    1)    {    for(int    i    =    0;    i    <    numberOfArgs;    ++i)    {    opt    +=    String.valueOf(opt);    }    	non-compiled	[CE]  <identifier>  expected	107	None	replace
375	[BUG]  [BUGGY]  int  i  =  0;  i  <  numArgs;  ++i)  {  opt  =  opt  +  1;  }  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      public  static  Option  create(char  opt)  throws  IllegalArgumentException  {      [BUGGY]  int  i  =  0;  i  <  numArgs;  ++i)  {  opt  =  opt  +  1;  }  [BUGGY]      return  create(String.valueOf(opt));  }  [CLASS]  OptionBuilder  [METHOD]  create  [RETURN_TYPE]  Option  char  opt  [VARIABLES]  boolean  hasArg  newRequired  optionalArg  required  OptionBuilder  instance  char  opt  sep  valuesep  Object  newType  type  String  argName  description  longopt  name  newDescription  newLongopt  int  num  numArgs  numberOfArgs  	projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java	0.3779644730092272	316	316	1	replace	int  i  =  0;  i  <  numArgs;  ++i)  {  opt  =  opt  +  1;  }	  for(int    i    =    0;    i    <    numberOfArgs;    ++i)    {    opt    =    opt    +    1;    }    	non-compiled	[CE]  <identifier>  expected	27	None	replace
376	[BUG]  [BUGGY]  Integer.toString(int)  {  return  create(String.valueOf(opt));  }  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      public  static  Option  create(char  opt)  throws  IllegalArgumentException  {      [BUGGY]  Integer.toString(int)  {  return  create(String.valueOf(opt));  }  [BUGGY]      return  create(String.valueOf(opt));  }  [CLASS]  OptionBuilder  [METHOD]  create  [RETURN_TYPE]  Option  char  opt  [VARIABLES]  boolean  hasArg  newRequired  optionalArg  required  OptionBuilder  instance  char  opt  sep  valuesep  Object  newType  type  String  argName  description  longopt  name  newDescription  newLongopt  int  num  numArgs  numberOfArgs  	projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java	0.3779644730092272	316	316	1	replace	Integer.toString(int)  {  return  create(String.valueOf(opt));  }	  Integer.toString(opt)    {    return    create(String.valueOf(opt));    }    	non-compiled	[CE]  <identifier>  expected	47	None	replace
377	[BUG]  [BUGGY]  Integer.toString(type)  {  return  create(String.valueOf(opt));  }  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      public  static  Option  create(char  opt)  throws  IllegalArgumentException  {      [BUGGY]  Integer.toString(type)  {  return  create(String.valueOf(opt));  }  [BUGGY]      return  create(String.valueOf(opt));  }  [CLASS]  OptionBuilder  [METHOD]  create  [RETURN_TYPE]  Option  char  opt  [VARIABLES]  boolean  hasArg  newRequired  optionalArg  required  OptionBuilder  instance  char  opt  sep  valuesep  Object  newType  type  String  argName  description  longopt  name  newDescription  newLongopt  int  num  numArgs  numberOfArgs  	projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java	0.3779644730092272	316	316	1	replace	Integer.toString(type)  {  return  create(String.valueOf(opt));  }	  Integer.toString(opt)    {    return    create(String.valueOf(opt));    }    	non-compiled	[CE]  <identifier>  expected	47	None	replace
378	[BUG]  [BUGGY]  if(opt  ==  '.')  {  return  create(newLongopt,  String.valueOf(opt));  }  [CE]  <identifier>  expected  [FE]            AssertionFailedError      [CONTEXT]      public  static  Option  create(char  opt)  throws  IllegalArgumentException  {      [BUGGY]  if(opt  ==  '.')  {  return  create(newLongopt,  String.valueOf(opt));  }  [BUGGY]      }  [CLASS]  OptionBuilder  [METHOD]  create  [RETURN_TYPE]  Option  char  opt  [VARIABLES]  boolean  hasArg  newRequired  optionalArg  required  OptionBuilder  instance  char  opt  sep  valuesep  Object  newType  type  String  argName  description  longopt  name  newDescription  newLongopt  int  num  numArgs  numberOfArgs  	projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java	0.3779644730092272	316	316	1	replace	if(opt  ==  '.')  {  return  create(newLongopt,  String.valueOf(opt));  }	  return    create(newLongopt,    String.valueOf(opt));    	non-compiled	[CE]  <identifier>  expected	91	None	replace
379	[BUG]  [BUGGY]  if(opt  <  Long.MIN_VALUE  ||  opt  >  Long.MAX_VALUE)  {  return  create(String.valueOf(opt));  }  else  {  return  new  OptionBuilder();  }  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      public  static  Option  create(char  opt)  throws  IllegalArgumentException  {      [BUGGY]  if(opt  <  Long.MIN_VALUE  ||  opt  >  Long.MAX_VALUE)  {  return  create(String.valueOf(opt));  }  else  {  return  new  OptionBuilder();  }  [BUGGY]      return  create(String.valueOf(opt));  }  [CLASS]  OptionBuilder  [METHOD]  create  [RETURN_TYPE]  Option  char  opt  [VARIABLES]  boolean  hasArg  newRequired  optionalArg  required  OptionBuilder  instance  char  opt  sep  valuesep  Object  newType  type  String  argName  description  longopt  name  newDescription  newLongopt  int  num  numArgs  numberOfArgs  	projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java	0.3779644730092272	316	316	1	replace	if(opt  <  Long.MIN_VALUE  ||  opt  >  Long.MAX_VALUE)  {  return  create(String.valueOf(opt));  }  else  {  return  new  OptionBuilder();  }	  if(opt    ==    Long.MIN_VALUE    ||    opt    ==    Long.MAX_VALUE)    {    return    create(String.valueOf(opt));    }    else    {    return    new    OptionBuilder();    }    	non-compiled	[CE]  <identifier>  expected	13	None	replace
380	[BUG]  [BUGGY]  if(opt  <  Long.MIN_VALUE  ||  opt  >  Long.MAX_VALUE)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      public  static  Option  create(char  opt)  throws  IllegalArgumentException  {      [BUGGY]  if(opt  <  Long.MIN_VALUE  ||  opt  >  Long.MAX_VALUE)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      return  create(String.valueOf(opt));  }  [CLASS]  OptionBuilder  [METHOD]  create  [RETURN_TYPE]  Option  char  opt  [VARIABLES]  boolean  hasArg  newRequired  optionalArg  required  OptionBuilder  instance  char  opt  sep  valuesep  Object  newType  type  String  argName  description  longopt  name  newDescription  newLongopt  int  num  numArgs  numberOfArgs  	projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java	0.3779644730092272	316	316	1	replace	if(opt  <  Long.MIN_VALUE  ||  opt  >  Long.MAX_VALUE)  {  throw  new  IllegalArgumentException( " ");  }	  if(opt    ==    Long.MIN_VALUE    ||    opt    ==    Long.MAX_VALUE)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  <identifier>  expected	70	None	replace
381	[BUG]  [BUGGY]  if(numberOfArgs  >  0)  {  allowNumberOfArgs(numberOfArgs)  {  return  create(String.valueOf(opt));  }  else  {  throw  new  IllegalArgumentException( " ");  }  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      public  static  Option  create(char  opt)  throws  IllegalArgumentException  {      [BUGGY]  if(numberOfArgs  >  0)  {  allowNumberOfArgs(numberOfArgs)  {  return  create(String.valueOf(opt));  }  else  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      return  create(String.valueOf(opt));  }  [CLASS]  OptionBuilder  [METHOD]  create  [RETURN_TYPE]  Option  char  opt  [VARIABLES]  boolean  hasArg  newRequired  optionalArg  required  OptionBuilder  instance  char  opt  sep  valuesep  Object  newType  type  String  argName  description  longopt  name  newDescription  newLongopt  int  num  numArgs  numberOfArgs  	projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java	0.3779644730092272	316	316	1	replace	if(numberOfArgs  >  0)  {  allowNumberOfArgs(numberOfArgs)  {  return  create(String.valueOf(opt));  }  else  {  throw  new  IllegalArgumentException( " ");  }	  allowNumberOfArgs(numberOfArgs)    {    return    create(String.valueOf(opt));    }    else    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  <identifier>  expected	33	None	replace
382	[BUG]  [BUGGY]  if(numberOfArgs  >  0)  {  allowNumberOfArgs(numberOfArgs)  {  return  create(String.valueOf(opt));  }  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]      public  static  Option  create(char  opt)  throws  IllegalArgumentException  {      [BUGGY]  if(numberOfArgs  >  0)  {  allowNumberOfArgs(numberOfArgs)  {  return  create(String.valueOf(opt));  }  [BUGGY]      return  create(String.valueOf(opt));  }  [CLASS]  OptionBuilder  [METHOD]  create  [RETURN_TYPE]  Option  char  opt  [VARIABLES]  boolean  hasArg  newRequired  optionalArg  required  OptionBuilder  instance  char  opt  sep  valuesep  Object  newType  type  String  argName  description  longopt  name  newDescription  newLongopt  int  num  numArgs  numberOfArgs  	projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java	0.3779644730092272	316	316	1	replace	if(numberOfArgs  >  0)  {  allowNumberOfArgs(numberOfArgs)  {  return  create(String.valueOf(opt));  }	  allowNumberOfArgs(numberOfArgs)    {    return    create(String.valueOf(opt));    }    else    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  <identifier>  expected	33	None	replace
383	[BUG]  [BUGGY]  return  create(String.valueOf(opt)+  description);  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      public  static  Option  create(char  opt)  throws  IllegalArgumentException  {      [BUGGY]  return  create(String.valueOf(opt)+  description);  [BUGGY]      }  [CLASS]  OptionBuilder  [METHOD]  create  [RETURN_TYPE]  Option  char  opt  [VARIABLES]  boolean  hasArg  newRequired  optionalArg  required  OptionBuilder  instance  char  opt  sep  valuesep  Object  newType  type  String  argName  description  longopt  name  newDescription  newLongopt  int  num  numArgs  numberOfArgs  	projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java	0.3779644730092272	316	316	1	replace	return  create(String.valueOf(opt)+  description);	  return    create(String.valueOf(opt)+    argName);    	non-compiled	[CE]  <identifier>  expected	99	None	replace
384	[BUG]  [BUGGY]  if(numberOfArgs  ==  0)  {  for(int  i  =  0;  i  <  this.numberOfArgs;  ++i)  {  opt  +=  String.valueOf(opt);  }  [CE]  <identifier>  expected  [FE]            AssertionFailedError      [CONTEXT]      public  static  Option  create(char  opt)  throws  IllegalArgumentException  {      [BUGGY]  if(numberOfArgs  ==  0)  {  for(int  i  =  0;  i  <  this.numberOfArgs;  ++i)  {  opt  +=  String.valueOf(opt);  }  [BUGGY]      return  create(String.valueOf(opt));  }  [CLASS]  OptionBuilder  [METHOD]  create  [RETURN_TYPE]  Option  char  opt  [VARIABLES]  boolean  hasArg  newRequired  optionalArg  required  OptionBuilder  instance  char  opt  sep  valuesep  Object  newType  type  String  argName  description  longopt  name  newDescription  newLongopt  int  num  numArgs  numberOfArgs  	projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java	0.3779644730092272	316	316	1	replace	if(numberOfArgs  ==  0)  {  for(int  i  =  0;  i  <  this.numberOfArgs;  ++i)  {  opt  +=  String.valueOf(opt);  }	  if(numberOfArgs    ==    0)    {    for(int    i    =    0;    i    <    numberOfArgs;    ++i)    {    opt    +=    String.valueOf(opt);    }    	non-compiled	[CE]  <identifier>  expected	58	None	replace
385	[BUG]  [BUGGY]  if(numberOfArgs  >  1)  {  if(opt  ==  Long.MIN_VALUE)  {  return  create(String.valueOf(opt));  }  else  {  throw  new  IllegalArgumentException( " ");  }  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      public  static  Option  create(char  opt)  throws  IllegalArgumentException  {      [BUGGY]  if(numberOfArgs  >  1)  {  if(opt  ==  Long.MIN_VALUE)  {  return  create(String.valueOf(opt));  }  else  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      return  create(String.valueOf(opt));  }  [CLASS]  OptionBuilder  [METHOD]  create  [RETURN_TYPE]  Option  char  opt  [VARIABLES]  boolean  hasArg  newRequired  optionalArg  required  OptionBuilder  instance  char  opt  sep  valuesep  Object  newType  type  String  argName  description  longopt  name  newDescription  newLongopt  int  num  numArgs  numberOfArgs  	projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java	0.3779644730092272	316	316	1	replace	if(numberOfArgs  >  1)  {  if(opt  ==  Long.MIN_VALUE)  {  return  create(String.valueOf(opt));  }  else  {  throw  new  IllegalArgumentException( " ");  }	  allowNumberOfArgs(numberOfArgs)    {    if(opt    ==    Long.MIN_VALUE)    {    return    create(String.valueOf(opt));    }    else    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  <identifier>  expected	31	None	replace
386	[BUG]  [BUGGY]  Integer.toString(numberOfArgs)  ==  throw  new  IllegalArgumentException( " ");  }  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      public  static  Option  create(char  opt)  throws  IllegalArgumentException  {      [BUGGY]  Integer.toString(numberOfArgs)  ==  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      return  create(String.valueOf(opt));  }  [CLASS]  OptionBuilder  [METHOD]  create  [RETURN_TYPE]  Option  char  opt  [VARIABLES]  boolean  hasArg  newRequired  optionalArg  required  OptionBuilder  instance  char  opt  sep  valuesep  Object  newType  type  String  argName  description  longopt  name  newDescription  newLongopt  int  num  numArgs  numberOfArgs  	projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java	0.3779644730092272	316	316	1	replace	Integer.toString(numberOfArgs)  ==  throw  new  IllegalArgumentException( " ");  }	  Integer.toString(opt)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  <identifier>  expected	17	None	replace
387	[BUG]  [BUGGY]  if(this.numberOfArgs  >  0)  {  for(int  i  =  0;  i  <  this.numberOfArgs;  ++i)  {  OptionBuilder.append(opt);  }  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      public  static  Option  create(char  opt)  throws  IllegalArgumentException  {      [BUGGY]  if(this.numberOfArgs  >  0)  {  for(int  i  =  0;  i  <  this.numberOfArgs;  ++i)  {  OptionBuilder.append(opt);  }  [BUGGY]      return  create(String.valueOf(opt));  }  [CLASS]  OptionBuilder  [METHOD]  create  [RETURN_TYPE]  Option  char  opt  [VARIABLES]  boolean  hasArg  newRequired  optionalArg  required  OptionBuilder  instance  char  opt  sep  valuesep  Object  newType  type  String  argName  description  longopt  name  newDescription  newLongopt  int  num  numArgs  numberOfArgs  	projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java	0.3779644730092272	316	316	1	replace	if(this.numberOfArgs  >  0)  {  for(int  i  =  0;  i  <  this.numberOfArgs;  ++i)  {  OptionBuilder.append(opt);  }	  if(numberOfArgs    >    0)    {    for(int    i    =    0;    i    <    this.numberOfArgs;    ++i)    {    OptionBuilder.append(opt);    }    	non-compiled	[CE]  <identifier>  expected	105	None	replace
388	[BUG]  [BUGGY]  OptionBuilder.append(this.numberOfArgs);  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      public  static  Option  create(char  opt)  throws  IllegalArgumentException  {      [BUGGY]  OptionBuilder.append(this.numberOfArgs);  [BUGGY]      return  create(String.valueOf(opt));  }  [CLASS]  OptionBuilder  [METHOD]  create  [RETURN_TYPE]  Option  char  opt  [VARIABLES]  boolean  hasArg  newRequired  optionalArg  required  OptionBuilder  instance  char  opt  sep  valuesep  Object  newType  type  String  argName  description  longopt  name  newDescription  newLongopt  int  num  numArgs  numberOfArgs  	projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java	0.3779644730092272	316	316	1	replace	OptionBuilder.append(this.numberOfArgs);	  if(numberOfArgs    >    0)    {    for(int    i    =    0;    i    <    this.numberOfArgs;    ++i)    {    OptionBuilder.append(opt);    }    	non-compiled	[CE]  <identifier>  expected	105	None	replace
389	[BUG]  [BUGGY]  if(this.numberOfArgs  >  0)  {  for(int  i  =  0;  i  <  this.numberOfArgs;  ++i)  {  OptionBuilder.append(option);  }  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      public  static  Option  create(char  opt)  throws  IllegalArgumentException  {      [BUGGY]  if(this.numberOfArgs  >  0)  {  for(int  i  =  0;  i  <  this.numberOfArgs;  ++i)  {  OptionBuilder.append(option);  }  [BUGGY]      return  create(String.valueOf(opt));  }  [CLASS]  OptionBuilder  [METHOD]  create  [RETURN_TYPE]  Option  char  opt  [VARIABLES]  boolean  hasArg  newRequired  optionalArg  required  OptionBuilder  instance  char  opt  sep  valuesep  Object  newType  type  String  argName  description  longopt  name  newDescription  newLongopt  int  num  numArgs  numberOfArgs  	projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java	0.3779644730092272	316	316	1	replace	if(this.numberOfArgs  >  0)  {  for(int  i  =  0;  i  <  this.numberOfArgs;  ++i)  {  OptionBuilder.append(option);  }	  if(numberOfArgs    >    0)    {    for(int    i    =    0;    i    <    this.numberOfArgs;    ++i)    {    OptionBuilder.append(opt);    }    	non-compiled	[CE]  <identifier>  expected	105	None	replace
390	[BUG]  [BUGGY]  if(numberOfArgs  >  1)  {  for(int  i  =  0;  i  <  this.numberOfArgs;  ++i)  {  OptionBuilder.append(opt);  }  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      public  static  Option  create(char  opt)  throws  IllegalArgumentException  {      [BUGGY]  if(numberOfArgs  >  1)  {  for(int  i  =  0;  i  <  this.numberOfArgs;  ++i)  {  OptionBuilder.append(opt);  }  [BUGGY]      return  create(String.valueOf(opt));  }  [CLASS]  OptionBuilder  [METHOD]  create  [RETURN_TYPE]  Option  char  opt  [VARIABLES]  boolean  hasArg  newRequired  optionalArg  required  OptionBuilder  instance  char  opt  sep  valuesep  Object  newType  type  String  argName  description  longopt  name  newDescription  newLongopt  int  num  numArgs  numberOfArgs  	projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java	0.3779644730092272	316	316	1	replace	if(numberOfArgs  >  1)  {  for(int  i  =  0;  i  <  this.numberOfArgs;  ++i)  {  OptionBuilder.append(opt);  }	  if(numberOfArgs    >    1)    {    for(int    i    =    0;    i    <    numberOfArgs;    ++i)    {    OptionBuilder.append(opt);    }    	non-compiled	[CE]  <identifier>  expected	104	None	replace
391	[BUG]  [BUGGY]  aughtException( " ");  [CE]  <identifier>  expected  [FE]            AssertionFailedError      [CONTEXT]      public  static  Option  create(char  opt)  throws  IllegalArgumentException  {      [BUGGY]  aughtException( " ");  [BUGGY]      return  create(String.valueOf(opt));  }  [CLASS]  OptionBuilder  [METHOD]  create  [RETURN_TYPE]  Option  char  opt  [VARIABLES]  boolean  hasArg  newRequired  optionalArg  required  OptionBuilder  instance  char  opt  sep  valuesep  Object  newType  type  String  argName  description  longopt  name  newDescription  newLongopt  int  num  numArgs  numberOfArgs  	projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java	0.3779644730092272	316	316	1	replace	aughtException( " ");	  if(opt!=    null)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  <identifier>  expected	72	None	replace
392	[BUG]  [BUGGY]  allowNumberOfArgs(opt)  {  throw  new  IllegalArgumentException( " ".);  }  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      public  static  Option  create(char  opt)  throws  IllegalArgumentException  {      [BUGGY]  allowNumberOfArgs(opt)  {  throw  new  IllegalArgumentException( " ".);  }  [BUGGY]      return  create(String.valueOf(opt));  }  [CLASS]  OptionBuilder  [METHOD]  create  [RETURN_TYPE]  Option  char  opt  [VARIABLES]  boolean  hasArg  newRequired  optionalArg  required  OptionBuilder  instance  char  opt  sep  valuesep  Object  newType  type  String  argName  description  longopt  name  newDescription  newLongopt  int  num  numArgs  numberOfArgs  	projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java	0.3779644730092272	316	316	1	replace	allowNumberOfArgs(opt)  {  throw  new  IllegalArgumentException( " ".);  }	  if(opt!=    null)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  <identifier>  expected	72	None	replace
393	[BUG]  [BUGGY]  allowNumberOfArgs(opt)  {  throw  new  IllegalArgumentException( ". ");  }  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      public  static  Option  create(char  opt)  throws  IllegalArgumentException  {      [BUGGY]  allowNumberOfArgs(opt)  {  throw  new  IllegalArgumentException( ". ");  }  [BUGGY]      return  create(String.valueOf(opt));  }  [CLASS]  OptionBuilder  [METHOD]  create  [RETURN_TYPE]  Option  char  opt  [VARIABLES]  boolean  hasArg  newRequired  optionalArg  required  OptionBuilder  instance  char  opt  sep  valuesep  Object  newType  type  String  argName  description  longopt  name  newDescription  newLongopt  int  num  numArgs  numberOfArgs  	projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java	0.3779644730092272	316	316	1	replace	allowNumberOfArgs(opt)  {  throw  new  IllegalArgumentException( ". ");  }	  if(opt!=    null)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  <identifier>  expected	72	None	replace
394	[BUG]  [BUGGY]  Class  <?>  longopt  =  getLongType(opt);  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      public  static  Option  create(char  opt)  throws  IllegalArgumentException  {      [BUGGY]  Class  <?>  longopt  =  getLongType(opt);  [BUGGY]      }  [CLASS]  OptionBuilder  [METHOD]  create  [RETURN_TYPE]  Option  char  opt  [VARIABLES]  boolean  hasArg  newRequired  optionalArg  required  OptionBuilder  instance  char  opt  sep  valuesep  Object  newType  type  String  argName  description  longopt  name  newDescription  newLongopt  int  num  numArgs  numberOfArgs  	projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java	0.3779644730092272	316	316	1	replace	Class  <?>  longopt  =  getLongType(opt);	  if(opt    ==    null)    {    return    create(String.valueOf(numberOfArgs));    }    else    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  <identifier>  expected	52	None	replace
395	[BUG]  [BUGGY]  OptionBuilder  <?>  longopt  =  create(opt);  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      public  static  Option  create(char  opt)  throws  IllegalArgumentException  {      [BUGGY]  OptionBuilder  <?>  longopt  =  create(opt);  [BUGGY]      }  [CLASS]  OptionBuilder  [METHOD]  create  [RETURN_TYPE]  Option  char  opt  [VARIABLES]  boolean  hasArg  newRequired  optionalArg  required  OptionBuilder  instance  char  opt  sep  valuesep  Object  newType  type  String  argName  description  longopt  name  newDescription  newLongopt  int  num  numArgs  numberOfArgs  	projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java	0.3779644730092272	316	316	1	replace	OptionBuilder  <?>  longopt  =  create(opt);	  if(opt    ==    null)    {    return    create(String.valueOf(numberOfArgs));    }    else    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  <identifier>  expected	52	None	replace
396	[BUG]  [BUGGY]  if(numberOfArgs  >  1)  {  for(int  i  =  0;  i  <  numberOfArgs;  ++i)  {  OptionBuilder.append(longopt);  }  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      public  static  Option  create(char  opt)  throws  IllegalArgumentException  {      [BUGGY]  if(numberOfArgs  >  1)  {  for(int  i  =  0;  i  <  numberOfArgs;  ++i)  {  OptionBuilder.append(longopt);  }  [BUGGY]      return  create(String.valueOf(opt));  }  [CLASS]  OptionBuilder  [METHOD]  create  [RETURN_TYPE]  Option  char  opt  [VARIABLES]  boolean  hasArg  newRequired  optionalArg  required  OptionBuilder  instance  char  opt  sep  valuesep  Object  newType  type  String  argName  description  longopt  name  newDescription  newLongopt  int  num  numArgs  numberOfArgs  	projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java	0.3779644730092272	316	316	1	replace	if(numberOfArgs  >  1)  {  for(int  i  =  0;  i  <  numberOfArgs;  ++i)  {  OptionBuilder.append(longopt);  }	  if(numberOfArgs    >    0)    {    for(int    i    =    0;    i    <    numberOfArgs;    ++i)    {    OptionBuilder.append(longopt);    }    	non-compiled	[CE]  <identifier>  expected	77	None	replace
397	[BUG]  [BUGGY]  if(numberOfArgs  >  0)  {  for(int  i  =  0;  i  <  this.numberOfArgs;  ++i)  {  OptionBuilder.append(longopt);  }  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      public  static  Option  create(char  opt)  throws  IllegalArgumentException  {      [BUGGY]  if(numberOfArgs  >  0)  {  for(int  i  =  0;  i  <  this.numberOfArgs;  ++i)  {  OptionBuilder.append(longopt);  }  [BUGGY]      return  create(String.valueOf(opt));  }  [CLASS]  OptionBuilder  [METHOD]  create  [RETURN_TYPE]  Option  char  opt  [VARIABLES]  boolean  hasArg  newRequired  optionalArg  required  OptionBuilder  instance  char  opt  sep  valuesep  Object  newType  type  String  argName  description  longopt  name  newDescription  newLongopt  int  num  numArgs  numberOfArgs  	projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java	0.3779644730092272	316	316	1	replace	if(numberOfArgs  >  0)  {  for(int  i  =  0;  i  <  this.numberOfArgs;  ++i)  {  OptionBuilder.append(longopt);  }	  if(numberOfArgs    >    0)    {    for(int    i    =    0;    i    <    numberOfArgs;    ++i)    {    OptionBuilder.append(longopt);    }    	non-compiled	[CE]  <identifier>  expected	77	None	replace
398	[BUG]  [BUGGY]  int  i  =  0;  i  <  numberOfArgs;  i++)  {  opt  =  opt  +  1;  }  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      public  static  Option  create(char  opt)  throws  IllegalArgumentException  {      [BUGGY]  int  i  =  0;  i  <  numberOfArgs;  i++)  {  opt  =  opt  +  1;  }  [BUGGY]      return  create(String.valueOf(opt));  }  [CLASS]  OptionBuilder  [METHOD]  create  [RETURN_TYPE]  Option  char  opt  [VARIABLES]  boolean  hasArg  newRequired  optionalArg  required  OptionBuilder  instance  char  opt  sep  valuesep  Object  newType  type  String  argName  description  longopt  name  newDescription  newLongopt  int  num  numArgs  numberOfArgs  	projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java	0.3779644730092272	316	316	1	replace	int  i  =  0;  i  <  numberOfArgs;  i++)  {  opt  =  opt  +  1;  }	  for(int    i    =    0;    i    <    numberOfArgs;    i++)    {    opt    =    i    +    1;    }    	non-compiled	[CE]  <identifier>  expected	37	None	replace
399	[BUG]  [BUGGY]  if(opt  <  0)  {  return  create(String.valueOf(opt));  }  [CE]  <identifier>  expected  [FE]            AssertionFailedError      [CONTEXT]      public  static  Option  create(char  opt)  throws  IllegalArgumentException  {      [BUGGY]  if(opt  <  0)  {  return  create(String.valueOf(opt));  }  [BUGGY]      }  [CLASS]  OptionBuilder  [METHOD]  create  [RETURN_TYPE]  Option  char  opt  [VARIABLES]  boolean  hasArg  newRequired  optionalArg  required  OptionBuilder  instance  char  opt  sep  valuesep  Object  newType  type  String  argName  description  longopt  name  newDescription  newLongopt  int  num  numArgs  numberOfArgs  	projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java	0.3779644730092272	316	316	1	replace	if(opt  <  0)  {  return  create(String.valueOf(opt));  }	  if(opt    >    0)    {    return    create(String.valueOf(numberOfArgs));    }    	non-compiled	[CE]  <identifier>  expected	67	None	replace
400	[BUG]  [BUGGY]  if(opt  <  0)  {  return  create(String.valueOf(numberOfArgs));  }  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      public  static  Option  create(char  opt)  throws  IllegalArgumentException  {      [BUGGY]  if(opt  <  0)  {  return  create(String.valueOf(numberOfArgs));  }  [BUGGY]      }  [CLASS]  OptionBuilder  [METHOD]  create  [RETURN_TYPE]  Option  char  opt  [VARIABLES]  boolean  hasArg  newRequired  optionalArg  required  OptionBuilder  instance  char  opt  sep  valuesep  Object  newType  type  String  argName  description  longopt  name  newDescription  newLongopt  int  num  numArgs  numberOfArgs  	projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java	0.3779644730092272	316	316	1	replace	if(opt  <  0)  {  return  create(String.valueOf(numberOfArgs));  }	  if(opt    >    0)    {    return    create(String.valueOf(numberOfArgs));    }    	non-compiled	[CE]  <identifier>  expected	67	None	replace
401	[BUG]  [BUGGY]  int  numberOfArgs  =  getValue(longopt);  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      public  static  Option  create(char  opt)  throws  IllegalArgumentException  {      [BUGGY]  int  numberOfArgs  =  getValue(longopt);  [BUGGY]      return  create(String.valueOf(opt));  }  [CLASS]  OptionBuilder  [METHOD]  create  [RETURN_TYPE]  Option  char  opt  [VARIABLES]  boolean  hasArg  newRequired  optionalArg  required  OptionBuilder  instance  char  opt  sep  valuesep  Object  newType  type  String  argName  description  longopt  name  newDescription  newLongopt  int  num  numArgs  numberOfArgs  	projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java	0.3779644730092272	316	316	1	replace	int  numberOfArgs  =  getValue(longopt);	  int    numberOfArgs    =    getValue(opt);    	non-compiled	[CE]  <identifier>  expected	95	None	replace
402	[BUG]  [BUGGY]  int  numberOfArgs  =  getValue(opt)-  1;  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      public  static  Option  create(char  opt)  throws  IllegalArgumentException  {      [BUGGY]  int  numberOfArgs  =  getValue(opt)-  1;  [BUGGY]      return  create(String.valueOf(opt));  }  [CLASS]  OptionBuilder  [METHOD]  create  [RETURN_TYPE]  Option  char  opt  [VARIABLES]  boolean  hasArg  newRequired  optionalArg  required  OptionBuilder  instance  char  opt  sep  valuesep  Object  newType  type  String  argName  description  longopt  name  newDescription  newLongopt  int  num  numArgs  numberOfArgs  	projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java	0.3779644730092272	316	316	1	replace	int  numberOfArgs  =  getValue(opt)-  1;	  int    numberOfArgs    =    getValue(opt);    	non-compiled	[CE]  <identifier>  expected	95	None	replace
403	[BUG]  [BUGGY]  return  create(String.valueOf(num)+  opt);  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      public  static  Option  create(char  opt)  throws  IllegalArgumentException  {      [BUGGY]  return  create(String.valueOf(num)+  opt);  [BUGGY]      }  [CLASS]  OptionBuilder  [METHOD]  create  [RETURN_TYPE]  Option  char  opt  [VARIABLES]  boolean  hasArg  newRequired  optionalArg  required  OptionBuilder  instance  char  opt  sep  valuesep  Object  newType  type  String  argName  description  longopt  name  newDescription  newLongopt  int  num  numArgs  numberOfArgs  	projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java	0.3779644730092272	316	316	1	replace	return  create(String.valueOf(num)+  opt);	  return    create(String.valueOf(opt)+    num);    	non-compiled	[CE]  <identifier>  expected	87	None	replace
404	[BUG]  [BUGGY]  return  create(String.valueOf(opt)/  num);  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      public  static  Option  create(char  opt)  throws  IllegalArgumentException  {      [BUGGY]  return  create(String.valueOf(opt)/  num);  [BUGGY]      }  [CLASS]  OptionBuilder  [METHOD]  create  [RETURN_TYPE]  Option  char  opt  [VARIABLES]  boolean  hasArg  newRequired  optionalArg  required  OptionBuilder  instance  char  opt  sep  valuesep  Object  newType  type  String  argName  description  longopt  name  newDescription  newLongopt  int  num  numArgs  numberOfArgs  	projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java	0.3779644730092272	316	316	1	replace	return  create(String.valueOf(opt)/  num);	  return    create(String.valueOf(opt)+    num);    	non-compiled	[CE]  <identifier>  expected	87	None	replace
405	[BUG]  [BUGGY]  int  i  =  0;  numArgs  =  numberOfArgs;  ++i)  {  OptionBuilder.this.append(opt);  }  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      public  static  Option  create(char  opt)  throws  IllegalArgumentException  {      [BUGGY]  int  i  =  0;  numArgs  =  numberOfArgs;  ++i)  {  OptionBuilder.this.append(opt);  }  [BUGGY]      return  create(String.valueOf(opt));  }  [CLASS]  OptionBuilder  [METHOD]  create  [RETURN_TYPE]  Option  char  opt  [VARIABLES]  boolean  hasArg  newRequired  optionalArg  required  OptionBuilder  instance  char  opt  sep  valuesep  Object  newType  type  String  argName  description  longopt  name  newDescription  newLongopt  int  num  numArgs  numberOfArgs  	projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java	0.3779644730092272	316	316	1	replace	int  i  =  0;  numArgs  =  numberOfArgs;  ++i)  {  OptionBuilder.this.append(opt);  }	  for(int    i    =    0;    i    <    numberOfArgs;    ++i)    {    OptionBuilder.this.append(opt);    }    	non-compiled	[CE]  <identifier>  expected	20	None	replace
406	[BUG]  [BUGGY]  if(numberOfArgs  >  0)  {  for(int  i  =  0;  i  <  this.numberOfArgs;  i++)  {  opt  =  opt  +  1;  }  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      public  static  Option  create(char  opt)  throws  IllegalArgumentException  {      [BUGGY]  if(numberOfArgs  >  0)  {  for(int  i  =  0;  i  <  this.numberOfArgs;  i++)  {  opt  =  opt  +  1;  }  [BUGGY]      return  create(String.valueOf(opt));  }  [CLASS]  OptionBuilder  [METHOD]  create  [RETURN_TYPE]  Option  char  opt  [VARIABLES]  boolean  hasArg  newRequired  optionalArg  required  OptionBuilder  instance  char  opt  sep  valuesep  Object  newType  type  String  argName  description  longopt  name  newDescription  newLongopt  int  num  numArgs  numberOfArgs  	projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java	0.3779644730092272	316	316	1	replace	if(numberOfArgs  >  0)  {  for(int  i  =  0;  i  <  this.numberOfArgs;  i++)  {  opt  =  opt  +  1;  }	  if(opt    >    0)    {    for(int    i    =    0;    i    <    numberOfArgs;    i++)    {    opt    =    opt    +    1;    }    	non-compiled	[CE]  <identifier>  expected	115	None	replace
407	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  this.numberOfArgs;  ++i)  {  opt  +=  String.valueOf(i);  }  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      public  static  Option  create(char  opt)  throws  IllegalArgumentException  {      [BUGGY]  for(int  i  =  0;  i  <  this.numberOfArgs;  ++i)  {  opt  +=  String.valueOf(i);  }  [BUGGY]      return  create(String.valueOf(opt));  }  [CLASS]  OptionBuilder  [METHOD]  create  [RETURN_TYPE]  Option  char  opt  [VARIABLES]  boolean  hasArg  newRequired  optionalArg  required  OptionBuilder  instance  char  opt  sep  valuesep  Object  newType  type  String  argName  description  longopt  name  newDescription  newLongopt  int  num  numArgs  numberOfArgs  	projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java	0.3779644730092272	316	316	1	replace	for(int  i  =  0;  i  <  this.numberOfArgs;  ++i)  {  opt  +=  String.valueOf(i);  }	  for(int    i    =    0;    i    <    numberOfArgs;    ++i)    {    opt    +=    String.valueOf(i);    }    	non-compiled	[CE]  <identifier>  expected	4	None	replace
408	[BUG]  [BUGGY]  int  numberOfArgs  =  getValue(numberOfArgs,  opt);  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      public  static  Option  create(char  opt)  throws  IllegalArgumentException  {      [BUGGY]  int  numberOfArgs  =  getValue(numberOfArgs,  opt);  [BUGGY]      return  create(String.valueOf(opt));  }  [CLASS]  OptionBuilder  [METHOD]  create  [RETURN_TYPE]  Option  char  opt  [VARIABLES]  boolean  hasArg  newRequired  optionalArg  required  OptionBuilder  instance  char  opt  sep  valuesep  Object  newType  type  String  argName  description  longopt  name  newDescription  newLongopt  int  num  numArgs  numberOfArgs  	projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java	0.3779644730092272	316	316	1	replace	int  numberOfArgs  =  getValue(numberOfArgs,  opt);	  int    numberOfArgs    =    getValue(numberOfArgs);    	non-compiled	[CE]  <identifier>  expected	43	None	replace
409	[BUG]  [BUGGY]  int  numberOfArgs  =  getValue(numberOfArgs,  1);  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      public  static  Option  create(char  opt)  throws  IllegalArgumentException  {      [BUGGY]  int  numberOfArgs  =  getValue(numberOfArgs,  1);  [BUGGY]      return  create(String.valueOf(opt));  }  [CLASS]  OptionBuilder  [METHOD]  create  [RETURN_TYPE]  Option  char  opt  [VARIABLES]  boolean  hasArg  newRequired  optionalArg  required  OptionBuilder  instance  char  opt  sep  valuesep  Object  newType  type  String  argName  description  longopt  name  newDescription  newLongopt  int  num  numArgs  numberOfArgs  	projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java	0.3779644730092272	316	316	1	replace	int  numberOfArgs  =  getValue(numberOfArgs,  1);	  int    numberOfArgs    =    getValue(numberOfArgs);    	non-compiled	[CE]  <identifier>  expected	43	None	replace
410	[BUG]  [BUGGY]  if(numberOfArgs  >  1)  {  allowNumberOfArgs(opt)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      public  static  Option  create(char  opt)  throws  IllegalArgumentException  {      [BUGGY]  if(numberOfArgs  >  1)  {  allowNumberOfArgs(opt)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      return  create(String.valueOf(opt));  }  [CLASS]  OptionBuilder  [METHOD]  create  [RETURN_TYPE]  Option  char  opt  [VARIABLES]  boolean  hasArg  newRequired  optionalArg  required  OptionBuilder  instance  char  opt  sep  valuesep  Object  newType  type  String  argName  description  longopt  name  newDescription  newLongopt  int  num  numArgs  numberOfArgs  	projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java	0.3779644730092272	316	316	1	replace	if(numberOfArgs  >  1)  {  allowNumberOfArgs(opt)  {  throw  new  IllegalArgumentException( " ");  }	  allowNumberOfArgs(opt)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  <identifier>  expected	16	None	replace
411	[BUG]  [BUGGY]  if(numberOfArgs  ==  0)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      public  static  Option  create(char  opt)  throws  IllegalArgumentException  {      [BUGGY]  if(numberOfArgs  ==  0)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      return  create(String.valueOf(opt));  }  [CLASS]  OptionBuilder  [METHOD]  create  [RETURN_TYPE]  Option  char  opt  [VARIABLES]  boolean  hasArg  newRequired  optionalArg  required  OptionBuilder  instance  char  opt  sep  valuesep  Object  newType  type  String  argName  description  longopt  name  newDescription  newLongopt  int  num  numArgs  numberOfArgs  	projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java	0.3779644730092272	316	316	1	replace	if(numberOfArgs  ==  0)  {  throw  new  IllegalArgumentException( " ");  }	  allowNumberOfArgs(opt)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  <identifier>  expected	16	None	replace
412	[BUG]  [BUGGY]  if(numberOfArgs  >  1)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      public  static  Option  create(char  opt)  throws  IllegalArgumentException  {      [BUGGY]  if(numberOfArgs  >  1)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      return  create(String.valueOf(opt));  }  [CLASS]  OptionBuilder  [METHOD]  create  [RETURN_TYPE]  Option  char  opt  [VARIABLES]  boolean  hasArg  newRequired  optionalArg  required  OptionBuilder  instance  char  opt  sep  valuesep  Object  newType  type  String  argName  description  longopt  name  newDescription  newLongopt  int  num  numArgs  numberOfArgs  	projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java	0.3779644730092272	316	316	1	replace	if(numberOfArgs  >  1)  {  throw  new  IllegalArgumentException( " ");  }	  allowNumberOfArgs(opt)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  <identifier>  expected	16	None	replace
413	[BUG]  [BUGGY]  Integer  numberOfArgs  =  getValue(longopt);  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      public  static  Option  create(char  opt)  throws  IllegalArgumentException  {      [BUGGY]  Integer  numberOfArgs  =  getValue(longopt);  [BUGGY]      return  create(String.valueOf(opt));  }  [CLASS]  OptionBuilder  [METHOD]  create  [RETURN_TYPE]  Option  char  opt  [VARIABLES]  boolean  hasArg  newRequired  optionalArg  required  OptionBuilder  instance  char  opt  sep  valuesep  Object  newType  type  String  argName  description  longopt  name  newDescription  newLongopt  int  num  numArgs  numberOfArgs  	projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java	0.3779644730092272	316	316	1	replace	Integer  numberOfArgs  =  getValue(longopt);	  Integer    numberOfArgs    =    getValue(opt);    	non-compiled	[CE]  <identifier>  expected	55	None	replace
414	[BUG]  [BUGGY]  int  numberOfArgs  >  0)  {  return  create(String.valueOf(opt)+  1);  }  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      public  static  Option  create(char  opt)  throws  IllegalArgumentException  {      [BUGGY]  int  numberOfArgs  >  0)  {  return  create(String.valueOf(opt)+  1);  }  [BUGGY]      }  [CLASS]  OptionBuilder  [METHOD]  create  [RETURN_TYPE]  Option  char  opt  [VARIABLES]  boolean  hasArg  newRequired  optionalArg  required  OptionBuilder  instance  char  opt  sep  valuesep  Object  newType  type  String  argName  description  longopt  name  newDescription  newLongopt  int  num  numArgs  numberOfArgs  	projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java	0.3779644730092272	316	316	1	replace	int  numberOfArgs  >  0)  {  return  create(String.valueOf(opt)+  1);  }	  int    numberOfArgs    >    0)    {    return    create(String.valueOf(opt));    }    	non-compiled	[CE]  <identifier>  expected	68	None	replace
415	[BUG]  [BUGGY]  if(opt!=  Long.MIN_VALUE)  {  return  create(longopt,  String.valueOf(opt));  }  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      public  static  Option  create(char  opt)  throws  IllegalArgumentException  {      [BUGGY]  if(opt!=  Long.MIN_VALUE)  {  return  create(longopt,  String.valueOf(opt));  }  [BUGGY]      return  create(String.valueOf(opt));  }  [CLASS]  OptionBuilder  [METHOD]  create  [RETURN_TYPE]  Option  char  opt  [VARIABLES]  boolean  hasArg  newRequired  optionalArg  required  OptionBuilder  instance  char  opt  sep  valuesep  Object  newType  type  String  argName  description  longopt  name  newDescription  newLongopt  int  num  numArgs  numberOfArgs  	projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java	0.3779644730092272	316	316	1	replace	if(opt!=  Long.MIN_VALUE)  {  return  create(longopt,  String.valueOf(opt));  }	  if(opt    ==    Long.MIN_VALUE)    {    return    create(longopt,    String.valueOf(opt));    }    	non-compiled	[CE]  <identifier>  expected	61	None	replace
416	[BUG]  [BUGGY]  Thread.currentThread().setContextClassLoader(getRequiredClass(),  options);  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      public  static  Option  create(char  opt)  throws  IllegalArgumentException  {      [BUGGY]  Thread.currentThread().setContextClassLoader(getRequiredClass(),  options);  [BUGGY]      return  create(String.valueOf(opt));  }  [CLASS]  OptionBuilder  [METHOD]  create  [RETURN_TYPE]  Option  char  opt  [VARIABLES]  boolean  hasArg  newRequired  optionalArg  required  OptionBuilder  instance  char  opt  sep  valuesep  Object  newType  type  String  argName  description  longopt  name  newDescription  newLongopt  int  num  numArgs  numberOfArgs  	projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java	0.3779644730092272	316	316	1	replace	Thread.currentThread().setContextClassLoader(getRequiredClass(),  options);	  Thread.currentThread().setContextClassLoader(getRequiredClass());    	non-compiled	[CE]  <identifier>  expected	57	None	replace
417	[BUG]  [BUGGY]  Thread.currentThread().intermediateThread().setContextClassLoader(this);  [CE]  <identifier>  expected  [FE]            AssertionFailedError      [CONTEXT]      public  static  Option  create(char  opt)  throws  IllegalArgumentException  {      [BUGGY]  Thread.currentThread().intermediateThread().setContextClassLoader(this);  [BUGGY]      return  create(String.valueOf(opt));  }  [CLASS]  OptionBuilder  [METHOD]  create  [RETURN_TYPE]  Option  char  opt  [VARIABLES]  boolean  hasArg  newRequired  optionalArg  required  OptionBuilder  instance  char  opt  sep  valuesep  Object  newType  type  String  argName  description  longopt  name  newDescription  newLongopt  int  num  numArgs  numberOfArgs  	projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java	0.3779644730092272	316	316	1	replace	Thread.currentThread().intermediateThread().setContextClassLoader(this);	  Thread.currentThread().setContextClassLoader(this);    	non-compiled	[CE]  <identifier>  expected	56	None	replace
418	[BUG]  [BUGGY]  Integer.valueOf(opt)  ==  0;  }  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      public  static  Option  create(char  opt)  throws  IllegalArgumentException  {      [BUGGY]  Integer.valueOf(opt)  ==  0;  }  [BUGGY]      return  create(String.valueOf(opt));  }  [CLASS]  OptionBuilder  [METHOD]  create  [RETURN_TYPE]  Option  char  opt  [VARIABLES]  boolean  hasArg  newRequired  optionalArg  required  OptionBuilder  instance  char  opt  sep  valuesep  Object  newType  type  String  argName  description  longopt  name  newDescription  newLongopt  int  num  numArgs  numberOfArgs  	projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java	0.3779644730092272	316	316	1	replace	Integer.valueOf(opt)  ==  0;  }	  Integer.valueOf(opt)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  <identifier>  expected	19	None	replace
419	[BUG]  [BUGGY]  Integer.valueOf(numberOfArgs)  ==  throw  new  IllegalArgumentException( " ");  }  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      public  static  Option  create(char  opt)  throws  IllegalArgumentException  {      [BUGGY]  Integer.valueOf(numberOfArgs)  ==  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      return  create(String.valueOf(opt));  }  [CLASS]  OptionBuilder  [METHOD]  create  [RETURN_TYPE]  Option  char  opt  [VARIABLES]  boolean  hasArg  newRequired  optionalArg  required  OptionBuilder  instance  char  opt  sep  valuesep  Object  newType  type  String  argName  description  longopt  name  newDescription  newLongopt  int  num  numArgs  numberOfArgs  	projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java	0.3779644730092272	316	316	1	replace	Integer.valueOf(numberOfArgs)  ==  throw  new  IllegalArgumentException( " ");  }	  Integer.valueOf(opt)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  <identifier>  expected	19	None	replace
420	[BUG]  [BUGGY]  return  create(numberOfArgs,  String.valueOf(opt)/  1);  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      public  static  Option  create(char  opt)  throws  IllegalArgumentException  {      [BUGGY]  return  create(numberOfArgs,  String.valueOf(opt)/  1);  [BUGGY]      }  [CLASS]  OptionBuilder  [METHOD]  create  [RETURN_TYPE]  Option  char  opt  [VARIABLES]  boolean  hasArg  newRequired  optionalArg  required  OptionBuilder  instance  char  opt  sep  valuesep  Object  newType  type  String  argName  description  longopt  name  newDescription  newLongopt  int  num  numArgs  numberOfArgs  	projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java	0.3779644730092272	316	316	1	replace	return  create(numberOfArgs,  String.valueOf(opt)/  1);	  return    create(numberOfArgs,    String.valueOf(opt)+    1);    	non-compiled	[CE]  <identifier>  expected	29	None	replace
421	[BUG]  [BUGGY]  if(opt  <  Long.MIN_VALUE  ||  opt  >  Long.MAX_VALUE)  {  return  create(String.valueOf(opt));  }  else  {  throw  new  IllegalArgumentException( " ");  }  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      public  static  Option  create(char  opt)  throws  IllegalArgumentException  {      [BUGGY]  if(opt  <  Long.MIN_VALUE  ||  opt  >  Long.MAX_VALUE)  {  return  create(String.valueOf(opt));  }  else  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      return  create(String.valueOf(opt));  }  [CLASS]  OptionBuilder  [METHOD]  create  [RETURN_TYPE]  Option  char  opt  [VARIABLES]  boolean  hasArg  newRequired  optionalArg  required  OptionBuilder  instance  char  opt  sep  valuesep  Object  newType  type  String  argName  description  longopt  name  newDescription  newLongopt  int  num  numArgs  numberOfArgs  	projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java	0.3779644730092272	316	316	1	replace	if(opt  <  Long.MIN_VALUE  ||  opt  >  Long.MAX_VALUE)  {  return  create(String.valueOf(opt));  }  else  {  throw  new  IllegalArgumentException( " ");  }	  if(opt    ==    Long.MIN_VALUE    ||    opt    >    Long.MAX_VALUE)    {    return    create(String.valueOf(opt));    }    else    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  <identifier>  expected	93	None	replace
422	[BUG]  [BUGGY]  int  numberOfArgs  =  this.numberOfArgs  -  1;  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      public  static  Option  create(char  opt)  throws  IllegalArgumentException  {      [BUGGY]  int  numberOfArgs  =  this.numberOfArgs  -  1;  [BUGGY]      return  create(String.valueOf(opt));  }  [CLASS]  OptionBuilder  [METHOD]  create  [RETURN_TYPE]  Option  char  opt  [VARIABLES]  boolean  hasArg  newRequired  optionalArg  required  OptionBuilder  instance  char  opt  sep  valuesep  Object  newType  type  String  argName  description  longopt  name  newDescription  newLongopt  int  num  numArgs  numberOfArgs  	projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java	0.3779644730092272	316	316	1	replace	int  numberOfArgs  =  this.numberOfArgs  -  1;	  if(numberOfArgs    >    1)    {    for(int    i    =    0;    i    <    this.numberOfArgs;    ++i)    {    opt    +=    String.valueOf(opt);    }    	non-compiled	[CE]  <identifier>  expected	108	None	replace
423	[BUG]  [BUGGY]  int  numberOfArgs  =  this.numberOfArgs;  ++i)  {  opt  +=  String.valueOf(opt);  }  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      public  static  Option  create(char  opt)  throws  IllegalArgumentException  {      [BUGGY]  int  numberOfArgs  =  this.numberOfArgs;  ++i)  {  opt  +=  String.valueOf(opt);  }  [BUGGY]      return  create(String.valueOf(opt));  }  [CLASS]  OptionBuilder  [METHOD]  create  [RETURN_TYPE]  Option  char  opt  [VARIABLES]  boolean  hasArg  newRequired  optionalArg  required  OptionBuilder  instance  char  opt  sep  valuesep  Object  newType  type  String  argName  description  longopt  name  newDescription  newLongopt  int  num  numArgs  numberOfArgs  	projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java	0.3779644730092272	316	316	1	replace	int  numberOfArgs  =  this.numberOfArgs;  ++i)  {  opt  +=  String.valueOf(opt);  }	  if(numberOfArgs    >    1)    {    for(int    i    =    0;    i    <    this.numberOfArgs;    ++i)    {    opt    +=    String.valueOf(opt);    }    	non-compiled	[CE]  <identifier>  expected	108	None	replace
424	[BUG]  [BUGGY]  if(numberOfArgs  >  1)  {  for(int  i  =  0;  i  <  numberOfArgs;  ++i)  {  OptionBuilder.append(option);  }  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      public  static  Option  create(char  opt)  throws  IllegalArgumentException  {      [BUGGY]  if(numberOfArgs  >  1)  {  for(int  i  =  0;  i  <  numberOfArgs;  ++i)  {  OptionBuilder.append(option);  }  [BUGGY]      return  create(String.valueOf(opt));  }  [CLASS]  OptionBuilder  [METHOD]  create  [RETURN_TYPE]  Option  char  opt  [VARIABLES]  boolean  hasArg  newRequired  optionalArg  required  OptionBuilder  instance  char  opt  sep  valuesep  Object  newType  type  String  argName  description  longopt  name  newDescription  newLongopt  int  num  numArgs  numberOfArgs  	projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java	0.3779644730092272	316	316	1	replace	if(numberOfArgs  >  1)  {  for(int  i  =  0;  i  <  numberOfArgs;  ++i)  {  OptionBuilder.append(option);  }	  if(numberOfArgs    >    0)    {    for(int    i    =    0;    i    <    numberOfArgs;    ++i)    {    OptionBuilder.append(option);    }    	non-compiled	[CE]  <identifier>  expected	76	None	replace
425	[BUG]  [BUGGY]  if(numberOfArgs  >  1)  {  for(int  i  =  0;  i  <  this.numberOfArgs;  ++i)  {  OptionBuilder.append(option);  }  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      public  static  Option  create(char  opt)  throws  IllegalArgumentException  {      [BUGGY]  if(numberOfArgs  >  1)  {  for(int  i  =  0;  i  <  this.numberOfArgs;  ++i)  {  OptionBuilder.append(option);  }  [BUGGY]      return  create(String.valueOf(opt));  }  [CLASS]  OptionBuilder  [METHOD]  create  [RETURN_TYPE]  Option  char  opt  [VARIABLES]  boolean  hasArg  newRequired  optionalArg  required  OptionBuilder  instance  char  opt  sep  valuesep  Object  newType  type  String  argName  description  longopt  name  newDescription  newLongopt  int  num  numArgs  numberOfArgs  	projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java	0.3779644730092272	316	316	1	replace	if(numberOfArgs  >  1)  {  for(int  i  =  0;  i  <  this.numberOfArgs;  ++i)  {  OptionBuilder.append(option);  }	  if(numberOfArgs    >    0)    {    for(int    i    =    0;    i    <    numberOfArgs;    ++i)    {    OptionBuilder.append(option);    }    	non-compiled	[CE]  <identifier>  expected	76	None	replace
426	[BUG]  [BUGGY]  if(opt  <  0)  {  for(int  i  =  0;  i  <  numberOfArgs;  ++i)  {  opt  =  i  +  1;  }  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      public  static  Option  create(char  opt)  throws  IllegalArgumentException  {      [BUGGY]  if(opt  <  0)  {  for(int  i  =  0;  i  <  numberOfArgs;  ++i)  {  opt  =  i  +  1;  }  [BUGGY]      return  create(String.valueOf(opt));  }  [CLASS]  OptionBuilder  [METHOD]  create  [RETURN_TYPE]  Option  char  opt  [VARIABLES]  boolean  hasArg  newRequired  optionalArg  required  OptionBuilder  instance  char  opt  sep  valuesep  Object  newType  type  String  argName  description  longopt  name  newDescription  newLongopt  int  num  numArgs  numberOfArgs  	projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java	0.3779644730092272	316	316	1	replace	if(opt  <  0)  {  for(int  i  =  0;  i  <  numberOfArgs;  ++i)  {  opt  =  i  +  1;  }	  if(opt    >    0)    {    for(int    i    =    0;    i    <    numberOfArgs;    ++i)    {    opt    =    i    +    1;    }    	non-compiled	[CE]  <identifier>  expected	62	None	replace
427	[BUG]  [BUGGY]  if(opt  <  0)  {  for(int  i  =  0;  i  <  numberOfArgs;  ++i)  {  opt  =  opt  +  1;  }  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      public  static  Option  create(char  opt)  throws  IllegalArgumentException  {      [BUGGY]  if(opt  <  0)  {  for(int  i  =  0;  i  <  numberOfArgs;  ++i)  {  opt  =  opt  +  1;  }  [BUGGY]      return  create(String.valueOf(opt));  }  [CLASS]  OptionBuilder  [METHOD]  create  [RETURN_TYPE]  Option  char  opt  [VARIABLES]  boolean  hasArg  newRequired  optionalArg  required  OptionBuilder  instance  char  opt  sep  valuesep  Object  newType  type  String  argName  description  longopt  name  newDescription  newLongopt  int  num  numArgs  numberOfArgs  	projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java	0.3779644730092272	316	316	1	replace	if(opt  <  0)  {  for(int  i  =  0;  i  <  numberOfArgs;  ++i)  {  opt  =  opt  +  1;  }	  if(opt    >    0)    {    for(int    i    =    0;    i    <    numberOfArgs;    ++i)    {    opt    =    i    +    1;    }    	non-compiled	[CE]  <identifier>  expected	62	None	replace
428	[BUG]  [BUGGY]  if(this.numberOfArgs  >  1)  {  for(int  i  =  0;  i  <  this.numberOfArgs;  ++i)  {  OptionBuilder.this.append(opt);  }  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      public  static  Option  create(char  opt)  throws  IllegalArgumentException  {      [BUGGY]  if(this.numberOfArgs  >  1)  {  for(int  i  =  0;  i  <  this.numberOfArgs;  ++i)  {  OptionBuilder.this.append(opt);  }  [BUGGY]      return  create(String.valueOf(opt));  }  [CLASS]  OptionBuilder  [METHOD]  create  [RETURN_TYPE]  Option  char  opt  [VARIABLES]  boolean  hasArg  newRequired  optionalArg  required  OptionBuilder  instance  char  opt  sep  valuesep  Object  newType  type  String  argName  description  longopt  name  newDescription  newLongopt  int  num  numArgs  numberOfArgs  	projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java	0.3779644730092272	316	316	1	replace	if(this.numberOfArgs  >  1)  {  for(int  i  =  0;  i  <  this.numberOfArgs;  ++i)  {  OptionBuilder.this.append(opt);  }	  if(numberOfArgs    >    1)    {    for(int    i    =    0;    i    <    this.numberOfArgs;    ++i)    {    OptionBuilder.this.append(opt);    }    	non-compiled	[CE]  <identifier>  expected	101	None	replace
429	[BUG]  [BUGGY]  if(numberOfArgs  >  0)  {  for(int  i  =  0;  i  <  this.numberOfArgs;  ++i)  {  opt  =  opt  +  1;  }  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      public  static  Option  create(char  opt)  throws  IllegalArgumentException  {      [BUGGY]  if(numberOfArgs  >  0)  {  for(int  i  =  0;  i  <  this.numberOfArgs;  ++i)  {  opt  =  opt  +  1;  }  [BUGGY]      return  create(String.valueOf(opt));  }  [CLASS]  OptionBuilder  [METHOD]  create  [RETURN_TYPE]  Option  char  opt  [VARIABLES]  boolean  hasArg  newRequired  optionalArg  required  OptionBuilder  instance  char  opt  sep  valuesep  Object  newType  type  String  argName  description  longopt  name  newDescription  newLongopt  int  num  numArgs  numberOfArgs  	projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java	0.3779644730092272	316	316	1	replace	if(numberOfArgs  >  0)  {  for(int  i  =  0;  i  <  this.numberOfArgs;  ++i)  {  opt  =  opt  +  1;  }	  if(opt    >    0)    {    for(int    i    =    0;    i    <    numberOfArgs;    ++i)    {    opt    =    opt    +    1;    }    	non-compiled	[CE]  <identifier>  expected	103	None	replace
430	[BUG]  [BUGGY]  OptionBuilder  <?>  create(opt)  ==  null  ||  opt.length()  ==  0)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      public  static  Option  create(char  opt)  throws  IllegalArgumentException  {      [BUGGY]  OptionBuilder  <?>  create(opt)  ==  null  ||  opt.length()  ==  0)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      return  create(String.valueOf(opt));  }  [CLASS]  OptionBuilder  [METHOD]  create  [RETURN_TYPE]  Option  char  opt  [VARIABLES]  boolean  hasArg  newRequired  optionalArg  required  OptionBuilder  instance  char  opt  sep  valuesep  Object  newType  type  String  argName  description  longopt  name  newDescription  newLongopt  int  num  numArgs  numberOfArgs  	projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java	0.3779644730092272	316	316	1	replace	OptionBuilder  <?>  create(opt)  ==  null  ||  opt.length()  ==  0)  {  throw  new  IllegalArgumentException( " ");  }	  if(opt    ==    null    ||    opt.length()    ==    0)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  <identifier>  expected	73	None	replace
431	[BUG]  [BUGGY]  if(opt!=  null)  {  return  create(numberOfArgs,  Character.toLowerCase(opt));  }  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      public  static  Option  create(char  opt)  throws  IllegalArgumentException  {      [BUGGY]  if(opt!=  null)  {  return  create(numberOfArgs,  Character.toLowerCase(opt));  }  [BUGGY]      }  [CLASS]  OptionBuilder  [METHOD]  create  [RETURN_TYPE]  Option  char  opt  [VARIABLES]  boolean  hasArg  newRequired  optionalArg  required  OptionBuilder  instance  char  opt  sep  valuesep  Object  newType  type  String  argName  description  longopt  name  newDescription  newLongopt  int  num  numArgs  numberOfArgs  	projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java	0.3779644730092272	316	316	1	replace	if(opt!=  null)  {  return  create(numberOfArgs,  Character.toLowerCase(opt));  }	  if(opt    ==    null)    {    return    create(numberOfArgs,    String.valueOf(opt));    }    	non-compiled	[CE]  <identifier>  expected	30	None	replace
432	[BUG]  [BUGGY]  if(opt!=  null)  {  return  create(numberOfArgs,  Character.toUpperCase(opt));  }  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      public  static  Option  create(char  opt)  throws  IllegalArgumentException  {      [BUGGY]  if(opt!=  null)  {  return  create(numberOfArgs,  Character.toUpperCase(opt));  }  [BUGGY]      }  [CLASS]  OptionBuilder  [METHOD]  create  [RETURN_TYPE]  Option  char  opt  [VARIABLES]  boolean  hasArg  newRequired  optionalArg  required  OptionBuilder  instance  char  opt  sep  valuesep  Object  newType  type  String  argName  description  longopt  name  newDescription  newLongopt  int  num  numArgs  numberOfArgs  	projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java	0.3779644730092272	316	316	1	replace	if(opt!=  null)  {  return  create(numberOfArgs,  Character.toUpperCase(opt));  }	  if(opt    ==    null)    {    return    create(numberOfArgs,    String.valueOf(opt));    }    	non-compiled	[CE]  <identifier>  expected	30	None	replace
433	[BUG]  [BUGGY]  if(opt!=  null)  {  return  create(numberOfArgs,  string.valueOf(opt));  }  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      public  static  Option  create(char  opt)  throws  IllegalArgumentException  {      [BUGGY]  if(opt!=  null)  {  return  create(numberOfArgs,  string.valueOf(opt));  }  [BUGGY]      }  [CLASS]  OptionBuilder  [METHOD]  create  [RETURN_TYPE]  Option  char  opt  [VARIABLES]  boolean  hasArg  newRequired  optionalArg  required  OptionBuilder  instance  char  opt  sep  valuesep  Object  newType  type  String  argName  description  longopt  name  newDescription  newLongopt  int  num  numArgs  numberOfArgs  	projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java	0.3779644730092272	316	316	1	replace	if(opt!=  null)  {  return  create(numberOfArgs,  string.valueOf(opt));  }	  if(opt    ==    null)    {    return    create(numberOfArgs,    String.valueOf(opt));    }    	non-compiled	[CE]  <identifier>  expected	30	None	replace
434	[BUG]  [BUGGY]  OptionBuilder  <  Object>  opt  =  new  OptionBuilder(numberOfArgs);  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      public  static  Option  create(char  opt)  throws  IllegalArgumentException  {      [BUGGY]  OptionBuilder  <  Object>  opt  =  new  OptionBuilder(numberOfArgs);  [BUGGY]      return  create(String.valueOf(opt));  }  [CLASS]  OptionBuilder  [METHOD]  create  [RETURN_TYPE]  Option  char  opt  [VARIABLES]  boolean  hasArg  newRequired  optionalArg  required  OptionBuilder  instance  char  opt  sep  valuesep  Object  newType  type  String  argName  description  longopt  name  newDescription  newLongopt  int  num  numArgs  numberOfArgs  	projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java	0.3779644730092272	316	316	1	replace	OptionBuilder  <  Object>  opt  =  new  OptionBuilder(numberOfArgs);	  if(opt    >    0)    {    for(int    i    =    0;    i    <    numberOfArgs;    i++)    {    opt    =    i    +    1;    }    	non-compiled	[CE]  <identifier>  expected	80	None	replace
435	[BUG]  [BUGGY]  OptionBuilder  <  Object>  opt  =  new  OptionBuilder();  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      public  static  Option  create(char  opt)  throws  IllegalArgumentException  {      [BUGGY]  OptionBuilder  <  Object>  opt  =  new  OptionBuilder();  [BUGGY]      return  create(String.valueOf(opt));  }  [CLASS]  OptionBuilder  [METHOD]  create  [RETURN_TYPE]  Option  char  opt  [VARIABLES]  boolean  hasArg  newRequired  optionalArg  required  OptionBuilder  instance  char  opt  sep  valuesep  Object  newType  type  String  argName  description  longopt  name  newDescription  newLongopt  int  num  numArgs  numberOfArgs  	projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java	0.3779644730092272	316	316	1	replace	OptionBuilder  <  Object>  opt  =  new  OptionBuilder();	  if(opt    >    0)    {    for(int    i    =    0;    i    <    numberOfArgs;    i++)    {    opt    =    i    +    1;    }    	non-compiled	[CE]  <identifier>  expected	80	None	replace
436	[BUG]  [BUGGY]  if(opt  <  Long.MIN_VALUE  ||  opt  >  Long.MAX_VALUE)  {  return  create(String.valueOf(opt));  }  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      public  static  Option  create(char  opt)  throws  IllegalArgumentException  {      [BUGGY]  if(opt  <  Long.MIN_VALUE  ||  opt  >  Long.MAX_VALUE)  {  return  create(String.valueOf(opt));  }  [BUGGY]      return  create(String.valueOf(opt));  }  [CLASS]  OptionBuilder  [METHOD]  create  [RETURN_TYPE]  Option  char  opt  [VARIABLES]  boolean  hasArg  newRequired  optionalArg  required  OptionBuilder  instance  char  opt  sep  valuesep  Object  newType  type  String  argName  description  longopt  name  newDescription  newLongopt  int  num  numArgs  numberOfArgs  	projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java	0.3779644730092272	316	316	1	replace	if(opt  <  Long.MIN_VALUE  ||  opt  >  Long.MAX_VALUE)  {  return  create(String.valueOf(opt));  }	  if(opt    ==    Long.MIN_VALUE    ||    opt    >    Long.MAX_VALUE)    {    return    create(String.valueOf(opt));    }    	non-compiled	[CE]  <identifier>  expected	110	None	replace
437	[BUG]  [BUGGY]  if(opt  ==  null  ||  opt.length()!=  numArgs)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  <identifier>  expected  [FE]            AssertionFailedError      [CONTEXT]      public  static  Option  create(char  opt)  throws  IllegalArgumentException  {      [BUGGY]  if(opt  ==  null  ||  opt.length()!=  numArgs)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      return  create(String.valueOf(opt));  }  [CLASS]  OptionBuilder  [METHOD]  create  [RETURN_TYPE]  Option  char  opt  [VARIABLES]  boolean  hasArg  newRequired  optionalArg  required  OptionBuilder  instance  char  opt  sep  valuesep  Object  newType  type  String  argName  description  longopt  name  newDescription  newLongopt  int  num  numArgs  numberOfArgs  	projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java	0.3779644730092272	316	316	1	replace	if(opt  ==  null  ||  opt.length()!=  numArgs)  {  throw  new  IllegalArgumentException( " ");  }	  if(opt    ==    null    ||    opt.length()    ==    numArgs)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  <identifier>  expected	89	None	replace
438	[BUG]  [BUGGY]  OptionBuilder  <?>  opt  =  getValue(numberOfArgs);  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      public  static  Option  create(char  opt)  throws  IllegalArgumentException  {      [BUGGY]  OptionBuilder  <?>  opt  =  getValue(numberOfArgs);  [BUGGY]      return  create(String.valueOf(opt));  }  [CLASS]  OptionBuilder  [METHOD]  create  [RETURN_TYPE]  Option  char  opt  [VARIABLES]  boolean  hasArg  newRequired  optionalArg  required  OptionBuilder  instance  char  opt  sep  valuesep  Object  newType  type  String  argName  description  longopt  name  newDescription  newLongopt  int  num  numArgs  numberOfArgs  	projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java	0.3779644730092272	316	316	1	replace	OptionBuilder  <?>  opt  =  getValue(numberOfArgs);	  if(opt    >    0)    {    for(int    i    =    0;    i    <    this.numberOfArgs;    ++i)    {    opt    =    getValue(i);    }    	non-compiled	[CE]  <identifier>  expected	96	None	replace
439	[BUG]  [BUGGY]  int  numberOfArgs  =  this.numberOfArgs  >  0;  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      public  static  Option  create(char  opt)  throws  IllegalArgumentException  {      [BUGGY]  int  numberOfArgs  =  this.numberOfArgs  >  0;  [BUGGY]      return  create(String.valueOf(opt));  }  [CLASS]  OptionBuilder  [METHOD]  create  [RETURN_TYPE]  Option  char  opt  [VARIABLES]  boolean  hasArg  newRequired  optionalArg  required  OptionBuilder  instance  char  opt  sep  valuesep  Object  newType  type  String  argName  description  longopt  name  newDescription  newLongopt  int  num  numArgs  numberOfArgs  	projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java	0.3779644730092272	316	316	1	replace	int  numberOfArgs  =  this.numberOfArgs  >  0;	  if(opt    >    0)    {    for(int    i    =    0;    i    <    this.numberOfArgs;    ++i)    {    opt    =    getValue(i);    }    	non-compiled	[CE]  <identifier>  expected	96	None	replace
440	[BUG]  [BUGGY]  OptionBuilder  <  Object>  newType  =  getType(longopt);  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      public  static  Option  create(char  opt)  throws  IllegalArgumentException  {      [BUGGY]  OptionBuilder  <  Object>  newType  =  getType(longopt);  [BUGGY]      return  create(String.valueOf(opt));  }  [CLASS]  OptionBuilder  [METHOD]  create  [RETURN_TYPE]  Option  char  opt  [VARIABLES]  boolean  hasArg  newRequired  optionalArg  required  OptionBuilder  instance  char  opt  sep  valuesep  Object  newType  type  String  argName  description  longopt  name  newDescription  newLongopt  int  num  numArgs  numberOfArgs  	projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java	0.3779644730092272	316	316	1	replace	OptionBuilder  <  Object>  newType  =  getType(longopt);	  OptionBuilder    <    Object>    newType    =    getType(opt);    	non-compiled	[CE]  <identifier>  expected	83	None	replace
441	[BUG]  [BUGGY]  Integer  numberOfArgs  =  getNumberOfArgs(longopt);  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      public  static  Option  create(char  opt)  throws  IllegalArgumentException  {      [BUGGY]  Integer  numberOfArgs  =  getNumberOfArgs(longopt);  [BUGGY]      }  [CLASS]  OptionBuilder  [METHOD]  create  [RETURN_TYPE]  Option  char  opt  [VARIABLES]  boolean  hasArg  newRequired  optionalArg  required  OptionBuilder  instance  char  opt  sep  valuesep  Object  newType  type  String  argName  description  longopt  name  newDescription  newLongopt  int  num  numArgs  numberOfArgs  	projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java	0.3779644730092272	316	316	1	replace	Integer  numberOfArgs  =  getNumberOfArgs(longopt);	  Integer    numberOfArgs    =    getNumberOfArgs(opt);    	non-compiled	[CE]  <identifier>  expected	10	None	replace
442	[BUG]  [BUGGY]  Integer  numberOfArgs  =  getNumberOfArgs(int);  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      public  static  Option  create(char  opt)  throws  IllegalArgumentException  {      [BUGGY]  Integer  numberOfArgs  =  getNumberOfArgs(int);  [BUGGY]      }  [CLASS]  OptionBuilder  [METHOD]  create  [RETURN_TYPE]  Option  char  opt  [VARIABLES]  boolean  hasArg  newRequired  optionalArg  required  OptionBuilder  instance  char  opt  sep  valuesep  Object  newType  type  String  argName  description  longopt  name  newDescription  newLongopt  int  num  numArgs  numberOfArgs  	projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java	0.3779644730092272	316	316	1	replace	Integer  numberOfArgs  =  getNumberOfArgs(int);	  Integer    numberOfArgs    =    getNumberOfArgs(opt);    	non-compiled	[CE]  <identifier>  expected	10	None	replace
443	[BUG]  [BUGGY]  if(numberOfArgs  >  1)  {  for(int  i  =  0;  i  <  numberOfArgs;  ++i)  {  OptionBuilder.this.append(longopt);  }  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      public  static  Option  create(char  opt)  throws  IllegalArgumentException  {      [BUGGY]  if(numberOfArgs  >  1)  {  for(int  i  =  0;  i  <  numberOfArgs;  ++i)  {  OptionBuilder.this.append(longopt);  }  [BUGGY]      return  create(String.valueOf(opt));  }  [CLASS]  OptionBuilder  [METHOD]  create  [RETURN_TYPE]  Option  char  opt  [VARIABLES]  boolean  hasArg  newRequired  optionalArg  required  OptionBuilder  instance  char  opt  sep  valuesep  Object  newType  type  String  argName  description  longopt  name  newDescription  newLongopt  int  num  numArgs  numberOfArgs  	projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java	0.3779644730092272	316	316	1	replace	if(numberOfArgs  >  1)  {  for(int  i  =  0;  i  <  numberOfArgs;  ++i)  {  OptionBuilder.this.append(longopt);  }	  if(numberOfArgs    >    0)    {    for(int    i    =    0;    i    <    numberOfArgs;    ++i)    {    OptionBuilder.this.append(longopt);    }    	non-compiled	[CE]  <identifier>  expected	64	None	replace
444	[BUG]  [BUGGY]  if(numberOfArgs  >  0)  {  for(int  i  =  0;  i  <  this.numberOfArgs;  ++i)  {  OptionBuilder.this.append(longopt);  }  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      public  static  Option  create(char  opt)  throws  IllegalArgumentException  {      [BUGGY]  if(numberOfArgs  >  0)  {  for(int  i  =  0;  i  <  this.numberOfArgs;  ++i)  {  OptionBuilder.this.append(longopt);  }  [BUGGY]      return  create(String.valueOf(opt));  }  [CLASS]  OptionBuilder  [METHOD]  create  [RETURN_TYPE]  Option  char  opt  [VARIABLES]  boolean  hasArg  newRequired  optionalArg  required  OptionBuilder  instance  char  opt  sep  valuesep  Object  newType  type  String  argName  description  longopt  name  newDescription  newLongopt  int  num  numArgs  numberOfArgs  	projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java	0.3779644730092272	316	316	1	replace	if(numberOfArgs  >  0)  {  for(int  i  =  0;  i  <  this.numberOfArgs;  ++i)  {  OptionBuilder.this.append(longopt);  }	  if(numberOfArgs    >    0)    {    for(int    i    =    0;    i    <    numberOfArgs;    ++i)    {    OptionBuilder.this.append(longopt);    }    	non-compiled	[CE]  <identifier>  expected	64	None	replace
