projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java58
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java58if(instance==null){instance=newAssertionFailedError();}
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java58if(instance==null){thrownewIllegalArgumentException("");}
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java58if(instance==null){instance=newAssertionFailedError();}else{instance=newAssertionFailedError();}
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java58if(instance==null){instance=newAssertionFailedError();}else{thrownewIllegalArgumentException("");}
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java58if(instance==null){returninstance;}
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java58privatestaticOptionBuilderinstance=newOptionBuilder();
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java58privatestaticfinalOptionBuilderinstance=newOptionBuilder();
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java58privatefinalstaticOptionBuilderinstance=newOptionBuilder();
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java58finalstaticOptionBuilderinstance=newOptionBuilder();
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java58InsertionFailedErrorinstance=newAssertionFailedError();
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java58if(instance==null){instance=newAssertionFailedError();}else{instance=newSimpleAssertionFailedError();}
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java58if(instance==null){instance=newAssertionFailedError();}else{instance=newOptionBuilder();}
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java58publicstaticOptionBuilderinstance=newOptionBuilder();
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java58System.err.println("Unabletoparse:"+asPath());
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java58System.err.println("Unabletoparse:"+getMessage());
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java58System.err.println("Unexpectederror:"+getMessage());
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java58OptionBuilderinstance=newOptionBuilder();
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java58[Delete]
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java58aughtExceptionHandler.throwAssertionFailedError("");
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java58aughtExceptionHandler.handleMissingException("");
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java58aughtExceptionHandler.throwAssertionFailedError("msg.bad.instance.method",null);
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java58finalInsertionFailedErrorinstance=newAssertionFailedError();
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java58Instanceinstance=newAssertionFailedError();
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java58instance=newAssertionFailedError();
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java58aughtExceptionHandler.handleFailedError(instance);
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java58System.err.println("Unabletoparse:"+asPath(),asPath());
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java58publicstaticfinalOptionBuilderinstance=newOptionBuilder();
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java58publicfinalstaticOptionBuilderinstance=newOptionBuilder();
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java58privatestaticfinalOptionBuilderinstance=newOptionBuilder(System.err);
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java58privatestaticfinalOptionBuilderinstance=newOptionBuilder(this.options);
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java58privatestaticfinalOptionBuilderinstance=newOptionBuilder(System.out);
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java58System.err.println("Unexpectederror:"+getClass());
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java58privatefinalstaticOptionBuilderinstance=newOptionBuilder(System.err);
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java58privatefinalstaticOptionBuilderinstance=newOptionBuilder(System.out);
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java58instance=newSimpleAssertionFailedError();
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java58instance=(OptionBuilder)instance.clone();
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java58instance=null;
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java58finalOptionBuilderinstance=newOptionBuilder();
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java58OptionBuilderinstance=newOptionBuilder(System.err);
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java58OptionBuilderinstance=newOptionBuilder(System.out);
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java58finalstaticOptionBuilderinstance=newOptionBuilder(System.err);
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java58finalstaticOptionBuilderinstance=newOptionBuilder(this.options);
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java58nullinstance=newOptionBuilder();
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java58aughtInstance=newAssertionFailedError();
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java58OptionBuilderinstance=newOptionBuilder(false);
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java58aughtExceptionHandler.handleFailedError("msg.instance.missing.assertion.error",newOptionBuilder());
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java58aughtExceptionHandler.handleFailedError("msg.instance.missing.assertion.error",null);
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java58finalpublicstaticOptionBuilderinstance=newOptionBuilder();
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java58aughtExceptionHandler.handle(newIllegalArgumentException(""));
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java58aughtExceptionHandler.handleFailedError("msg.instance.missing.instance",null);
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java58aughtInstantiationError("msg.instance.missing.instance.method",null);
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java58aughtExceptionHandler.handleMissingError("msg.instance.missing.instance",null);
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java58instance=(AssertionFailedError)newAssertionFailedError();
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java58instance=(AssertionFailedError)instance.clone();
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java58==[Delete]
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java58>>
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java58}
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java58finalstaticOptionBuilderinstance=newOptionBuilder(System.out);
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java58instance=newAssertionFailedError(InstanceType.START_DEPENDENCY);
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java58instance=newAssertionFailedError(InstanceType.DEFAULT_TYPE);
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java58safeMultiply(newSimpleAssertionFailedError());
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java58System.err.println("Unabletoparse:"+getClass());
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java58staticfinalOptionBuilderinstance=newOptionBuilder();
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java58System.err.println("Unabletoparse:"+getMessage(),error);
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java58instance=newAssertionFailedError(0);
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java58instance=createDefaultAssertionFailedError();
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java58if(instance!=null){returninstance;}
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java58OptionBuilderinstance=newOptionBuilder("Error:");
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java58InsertionFailedErrorinstance=newAssertionFailedError("JSC_UNKNOWN_ERROR");
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java58InsertionFailedErrorinstance=newAssertionFailedError("JSC_UNKNOWN_EXPECTED_ERROR");
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java58instance=(instance==null)?newAssertionFailedError():newAssertionFailedError();
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java58instance=(instance==null)?newAssertionFailedError():InstanceFactory.getInstance(instance);
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java58instance=(instance==null)?newAssertionFailedError():InstanceFactory.createInstance(instance);
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java58System.err.println("Unexpectederror:"+asPath());
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java58privatefinalstaticOptionBuilderinstance=newOptionBuilder("Error:");
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java58instance=(AssertionFailedError)super.clone();
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java58aughtExceptionHandler.handleFailedError("msg.instance.missing.errors",newOptionBuilder());
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java58aughtExceptionHandler.handleFailedError("msg.instance.missing.options.method",null);
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java58aughtExceptionHandler.handleFailedError("msg.instance.missing.options",null);
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java58privatestaticfinalOptionBuilderinstance=newOptionBuilder("Error:");
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java58OptionBuilderinstance=newOptionBuilder("Error:"+getMessage());
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java58finalOptionBuilderinstance=newOptionBuilder("Error:");
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java58if(instance==null){thrownewIllegalStateException("");}
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java58if(instance==null){thrownewIllegalArgumentException("Invalidinitializationoftype:"+Integer.toString(instance.getClass().getName()));}
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java58if(instance==null){thrownewIllegalArgumentException("Invalidinitializationoftype:"+Integer.toString(instance.getType()));}
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java58instance=(instance==null)?newAssertionFailedError():InstanceFactory.createInstance(instance,false);
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java58instance=(instance==null)?newAssertionFailedError():InstanceFactory.createInstance(instance,true);
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java58instance=(instance!=null)?newAssertionFailedError():InstanceFactory.createInstance(instance);
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java58aughtExceptionHandler.handleFailedError("msg.instance.missing.options",null,null);
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java58aughtExceptionHandler.handleFailedError("msg.instance.missing.options",null,false);
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java58aughtExceptionHandler.handleFailedError("msg.instance.missing.options",null,true);
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java58privatestaticfinalOptionBuilderinstance=newOptionBuilder(this.options,true);
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java58privatestaticfinalOptionBuilderinstance=newOptionBuilder(this.options,false);
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java58privatestaticfinalOptionBuilderinstance=newOptionBuilder(this.options,this.owner);
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java58instance=newSimpleAssertionFailedError(0);
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java58instance=newSimpleAssertionFailedError(System.err);
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java58instance=newSimpleAssertionFailedError(true);
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java58safe(newSimpleAssertionFailedError());
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java58safeMultiply(newSimpleAssertionFailedError(),false);
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java58instance=(AssertionFailedError)newAssertionFailedError(0);
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java58instance=(AssertionFailedError)this.sertionFailedError();
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java58(AssertionFailedError)newAssertionFailedError();
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java58privatestaticfinalOptionBuilderinstance=newOptionBuilder(System.err,System.err);
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java58staticfinalOptionBuilderinstance=newOptionBuilder(System.err);
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java58privatestaticfinalOptionBuilderinstance=newOptionBuilder(System.err,1);
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java58instance=newAssertionFailedError(0L);
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java58instance=newAssertionFailedError(1.0);
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java58if(instance==null){thrownewIllegalArgumentException("Invalidstartoftype:"+getClass().getName());}
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java58aughtExceptionHandler.throwAssertionFailedError("msg.bad.instance.method",null,null);
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java58aughtExceptionHandler.throwAssertionFailedError("msg.bad.instance.method",null,false);
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java58aughtExceptionHandler.throwAssertionFailedError("msg.bad.instance.method",null,e);
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java58instance=(AssertionFailedError)this.super.clone();
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java58instance=(AssertionFailedError)super.reset();
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java58aughtExceptionHandler.handleFailedError("msg.instance.missing.instance",null,null);
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java58aughtExceptionHandler.handleFailedError("msg.instance.missing.instance");
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java58aughtExceptionHandler.handleFailedError("msg.instance.missing.instance",null,false);
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java58privatefinalstaticOptionBuilderinstance=newOptionBuilder("Error:"+getMessage());
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java58aughtExceptionHandler.handle(newIllegalStateException(""));
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java58aughtExceptionHandler.handle(newIllegalArgumentException("Failedtoparse"));
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java58aughtExceptionHandler.handle(newIllegalArgumentException("Failedtoparseerror"));
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java58instance=(instance==null)?newAssertionFailedError():InstanceFactory.getInstance(instance,false);
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java58instance=(instance==null)?newAssertionFailedError():InstanceFactory.getInstance(instance,true);
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java58instance=(instance!=null)?newAssertionFailedError():InstanceFactory.getInstance(instance);
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java58aughtInstantiationError("msg.instance.missing.instance.method",null,null);
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java58aughtInstantiationError("msg.instance.missing.instance.method",null,false);
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java58instance=newAssertionFailedError(true);
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java58instance=newAssertionFailedError(false);
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java58privatefinalstaticOptionBuilderinstance=newOptionBuilder(System.err,System.err);
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java58privatefinalstaticOptionBuilderinstance=newOptionBuilder(System.err,null);
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java58publicstaticfinalOptionBuilderinstance=newOptionBuilder(System.err);
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java58publicstaticfinalOptionBuilderinstance=newOptionBuilder(this.options);
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java58publicstaticfinalOptionBuilderinstance=newOptionBuilder("Error:"+getMessage());
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java58nullinstance=newOptionBuilder(this.options);
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java58privatestaticfinalOptionBuilderinstance=newOptionBuilder(System.out,System.err);
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java58staticfinalOptionBuilderinstance=newOptionBuilder(System.out,System.err);
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java58aughtExceptionHandler.handleFailedError("msg.instance.missing.options.method",null,null);
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java58aughtExceptionHandler.handleFailedError("msg.instance.missing.options.method",null,false);
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java58aughtExceptionHandler.handleFailedError("msg.instance.missing.options.method",null,true);
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java58aughtExceptionHandler.handleFailedError("msg.instance.missing.errors,",newOptionBuilder());
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java58aughtExceptionHandler.handleFailedError("msg.instance.missing.errors.",newOptionBuilder());
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java58instance=(OptionBuilder)this.instance.clone();
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java58instance=(OptionBuilder)instance;
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java58instance=(OptionBuilder)instance.reset();
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java58staticfinalAssertionFailedErrorinstance=newAssertionFailedError();
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java58staticfinalInsertionFailedErrorinstance=newAssertionFailedError();
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java58nullinstance=newAssertionFailedError();
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java58aughtExceptionHandler.handleFailedError(instance,null);
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java58aughtExceptionHandler.handleFailedError(instance,false);
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java58aughtExceptionHandler.handleFailedError(newInstanceError());
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java58System.err.println("Unabletoparse:"+getMessage(),exception);
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java58publicfinalstaticOptionBuilderinstance=newOptionBuilder(this.options);
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java58publicfinalstaticOptionBuilderinstance=newOptionBuilder(newStringBuilder());
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java58aughtInstance=newAssertionFailedError(0);
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java58aughtExceptionHandler.handleFailedError("Msg.instance.missing.assertion.error",newOptionBuilder());
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java58aughtExceptionHandler.handleFailedError("msg.instance.missing.assertion.error,",newOptionBuilder());
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java58OptionBuilderinstance=newOptionBuilder(true);
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java58finalOptionBuilderinstance=newOptionBuilder(false);
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java58OptionBuilderinstance=newOptionBuilder(false,true);
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java58aughtExceptionHandler.throwAssertionFailedError("msg.js.unknown.type.error",newObject[]{});
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java58aughtExceptionHandler.throwAssertionFailedError("msg.js.unknown.error.method",e);
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java58finalstaticOptionBuilderinstance=newOptionBuilder(System.out,System.err);
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java58finalstaticOptionBuilderinstance=newOptionBuilder(System.out,true);
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java58OptionBuilderinstance=newOptionBuilder(System.out,System.err);
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java58OptionBuilderinstance=newOptionBuilder(System.out,true);
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java58privatefinalstaticOptionBuilderinstance=newOptionBuilder(System.out,System.err);
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java58instance=newAssertionFailedError(InstanceType.START_DEPENDENCY,Integer.MAX_VALUE);
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java58instance=newAssertionFailedError(InstanceType.START_DEPENDENCY,Integer.MIN_VALUE);
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java58instance=newAssertionFailedError(InstanceType.START_DEPENDENCY,false);
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java58instance=newAssertionFailedError(InstanceType.START_DEPENDENCY,System.identityHashCode(InstanceType.START_DEPENDENCY));
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java58InsertionFailedErrorinstance=newAssertionFailedError().invoke(null,null);
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java58AssertionFailedErrorinstance=newAssertionFailedError("JSC_UNKNOWN_ERROR");
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java58AnsertionFailedErrorinstance=newAnsertionFailedError("JSC_UNKNOWN_ERROR");
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java58System.err.println("Unexpectederror:"+asPath()+"=>");
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java58instance=(AssertionFailedError)this.instance.clone();
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java58instance=(AssertionFailedError)super.instance.clone();
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java58instance=(AssertionFailedError)instance.reset();
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java58staticfinalOptionBuilderinstance=newOptionBuilder(System.out);
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java58staticfinalOptionBuilderinstance=newOptionBuilder(this.options);
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java58aughtExceptionHandler.handleMissingError("msg.instance.missing.instance",null,null);
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java58aughtExceptionHandler.handleMissingError("msg.instance.missing.instance",null,false);
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java58aughtExceptionHandler.handleMissingError("msg.instance.missing.instance");
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java58aughtExceptionHandler.handleFailedError("msg.instance.missing.assertion.error",null,null);
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java58aughtExceptionHandler.handleFailedError("msg.instance.missing.assertion.error",null,false);
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java58aughtExceptionHandler.handleFailedError("msg.instance.missing.assertion.error",null,true);
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java58privatestaticfinalOptionBuilderinstance=newOptionBuilder("Error:"+getMessage());
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java58staticfinalOptionBuilderinstance=newOptionBuilder("Error:");
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java58privatestaticfinalOptionBuilderinstance=newOptionBuilder("Error:"+getName());
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java58aughtExceptionHandler.handleMissingException("Errorhandlingerror:");
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java58aughtExceptionHandler.handleMissingException("msg.js.no-errors");
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java58System.err.println("Unabletoparse:"+asPath(),asString());
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java58finalInstanceinstance=newAssertionFailedError();
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java58Instanceinstance=newAssertionFailedError(0);
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java58Instanceinstance=newAssertionFailedError("JSC_INTERNAL_ERROR");
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java58AssertionFailedErrorinstance=newAssertionFailedError("JSC_UNKNOWN_EXPECTED_ERROR");
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java58finalInsertionFailedErrorinstance=newAssertionFailedError("JSC_UNKNOWN_EXPECTED_ERROR");
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java58OptionBuilderinstance=newOptionBuilder(System.err,System.err);
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java58OptionBuilderinstance=newOptionBuilder(System.err,1);
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java58finalOptionBuilderinstance=newOptionBuilder(System.err);
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java58finalpublicstaticOptionBuilderinstance=newOptionBuilder(System.err);
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java58instance=newOptionBuilder();
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java58instance=newSimpleErrorBuilder();
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java58instance=System.err;
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java58finalstaticOptionBuilderinstance=newOptionBuilder(this.options,this.errors);
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java58finalstaticOptionBuilderinstance=newOptionBuilder(this.options,true);
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java58finalstaticOptionBuilderinstance=newOptionBuilder(this.options,this.sourceName);
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java58instance=createDefaultAssertionError();
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java58instance=getDefaultAssertionFailedError();
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java58instance=newAssertionFailedError(InstanceType.DEFAULT_TYPE,null);
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java58instance=newAssertionFailedError(InstanceType.DEFAULT_TYPE,Integer.MAX_VALUE);
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java58instance=newAssertionFailedError(InstanceType.DEFAULT_TYPE,false);
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java58instance=newAssertionFailedError(InstanceType.DEFAULT_TYPE,Integer.MIN_VALUE);
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java58instance=(newAssertionFailedError()==null)?newAssertionFailedError():newAssertionFailedError();
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java58instance=(this.instance==null)?newAssertionFailedError():newAssertionFailedError();
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java58instance=(instance!=null)?newAssertionFailedError():newAssertionFailedError();
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java58finalstaticOptionBuilderinstance=newOptionBuilder(System.err,System.err);
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java58finalstaticOptionBuilderinstance=newOptionBuilder(System.err,1);
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java58aughtExceptionHandler.throwAssertionFailedError("msg.bad.instance.method",null,pendingExceptionHandler);
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java58aughtExceptionHandler.throwAssertionFailedError("msg.bad.instance.method",null,args);
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java58aughtExceptionHandler.handleFailedError("msg.instance.missing.options",null,this);
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java58InsertionFailedErrorinstance=newAssertionFailedError("JSC_UNKNOWN_ERROR,");
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java58privatestaticfinalOptionBuilderinstance=newOptionBuilder(System.out,true);
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java58privatefinalstaticOptionBuilderinstance=newOptionBuilder(System.err,true);
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java58aughtExceptionHandler.handleMissingError("msg.instance.missing.instance",instance);
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java58aughtExceptionHandler.handleFailedError("msg.instance.missing.instance",instance);
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java58aughtExceptionHandler.handleFailedError("msg.missing.options.method",null);
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java58aughtExceptionHandler.handleFailedError("msg.instance.missing.options.method",null,this);
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java58secureMultiply(newSimpleAssertionFailedError());
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java58Instanceinstance=newAssertionFailedError("JSC_UNKNOWN_ERROR");
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java58OptionBuilderinstance=newOptionBuilder(System.err,true);
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java58instance=newAssertionFailedError(0,1);
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java58instance=newAssertionFailedError(-1,1);
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java58aughtExceptionHandler.throwAssertionFailedError("")
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java58aughtExceptionHandler.throwAssertionFailedError("msg.no-errors");
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java58privatestaticfinalOptionBuilderinstance=newOptionBuilder(this.options,this.sourceName);
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java58privatestaticfinalOptionBuilderinstance=newOptionBuilder(this.options,this.type);
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java58privatefinalstaticOptionBuilderinstance=newOptionBuilder("Error:"+getName());
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java58aughtExceptionHandler.handleMissingError("msg.missing.instance",null);
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java58instance=newAssertionFailedError(InstanceType.START_DEPENDENCY,System.currentTimeMillis());
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java58nullinstance=newOptionBuilder(this);
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java58aughtExceptionHandler.handleFailedError("msg.missing.errors",newOptionBuilder());
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java58aughtExceptionHandler.handleFailedError("msg.instance.missing.errors:"+name,newOptionBuilder());
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java58System.err.println("Unabletoparse:"+getClassName());
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java58System.err.println("Unabletoparse:"+getMessage(),expectedError);
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java58finalstaticOptionBuilderinstance=newOptionBuilder(this.options,this.type);
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java58aughtInstance=newAssertionFailedError(true);
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java58aughtExceptionHandler.handleFailedError("msg.missing.assertion.error",newOptionBuilder());
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java58aughtExceptionHandler.handleFailedError(",msg.instance.missing.assertion.error",newOptionBuilder());
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java58instance=(AssertionFailedError)newAssertionFailedError(1);
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java58instance=(AssertionFailedError)newAssertionFailedError().instance;
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java58instance=OptionBuilder.ERROR;
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java58instance=(OptionBuilder)instance.getAssertionFailedError();
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java58instance=(OptionBuilder)super.instance.clone();
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java58aughtExceptionHandler.handleMissingException("msg.no.errors");
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java58OptionFailedErrorinstance=newOptionFailedError("JSC_UNKNOWN_EXPECTED_ERROR");
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java58System.err.println("Unexpectederror:"+asPath(),exception);
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java58System.err.println("FailedtoinitializeOptionBuilder()");
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java58System.err.println("Failedtoinitializeoption:"+getClass().getName());
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java58publicfinalstaticOptionBuilderinstance=newOptionBuilder(System.err);
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java58publicfinalstaticOptionBuilderinstance=newOptionBuilder(System.out);
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java58aughtInstantiationError("msg.missing.instance.method",null);
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java58OptionBuilderinstance=newOptionBuilder("Error:{0}");
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java58OptionBuilderinstance=newOptionBuilder("Error:"+getName());
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java58instance=createDefaultAssertionFailedError(0);
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java58finalstaticOptionBuilderinstance=newOptionBuilder(System.err,err);
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java58privatestaticfinalOptionBuilderinstance=newOptionBuilder(System.err,true);
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java58finalAssertionFailedErrorinstance=newAssertionFailedError();
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java58aughtExceptionHandler.handleFailedError("msg.instance.missing.assertion.error",null,this);
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java58aughtExceptionHandler.handleFailedError("msg.instance.missing.assertion.error",null,pending);
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java58aughtExceptionHandler.handleFailedError("msg.instance.missing.assertion.error",null,e);
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java58publicstaticfinalOptionBuilderinstance=newOptionBuilder("DefaultErrors");
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java58instance=newAssertionFailedError(System.err);
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java58if(instance==null){thrownewIllegalStateException("");}else{OptionBuilderinstance=newOptionBuilder();instance.addErrorListener(this);}
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java58if(instance==null){thrownewIllegalStateException("");}else{instance=newOptionBuilder();}
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java58finalpublicstaticOptionBuilderinstance=newOptionBuilder(this.options);
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java58privatestaticfinalOptionBuilderinstance=newOptionBuilder("DefaultError:");
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java58aughtExceptionHandler.handleFailedError(this,instance);
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java58aughtExceptionHandler.handle(newIllegalArgumentException("));
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java58instance=newSimpleAssertionFailedError(SimpleAssertionFailedError.class);
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java58aughtExceptionHandler.throwAssertionFailedError("msg.bad.instance.method",null,Object.class);
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java58aughtExceptionHandler.handle(newIllegalStatementException(""));
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java58aughtExceptionHandler.handle(newIllegalArgumentException("Error"));
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java58publicstaticfinalOptionBuilderinstance=newOptionBuilder(System.out);
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java58instance=newAssertionFailedError("Invalidstartoftype:{0}");
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java58aughtExceptionHandler.handleFailedError("msg.instance.missing.options.method",null,Object.class);
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java58if(aughtExceptionHandler!=null){aughtExceptionHandler.handleMissingException("");}
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java58if(aughtExceptionHandler!=null){aughtExceptionHandler.handleMissingException("");}else{thrownewIllegalStateException("");}
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java58if(aughtExceptionHandler!=null){aughtExceptionHandler.handleMissingException("");}else{thrownewIllegalArgumentException("");}
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java58safeMultiply(newSimpleAssertionFailedError(0));
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java58System.err.println("Failedtoinitializeoption:"+asPath());
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java58System.err.println("FailedtoinitializeOptionBuilder:"+asPath());
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java58System.err.println("FailedtoinitializeOptionBuilder:"+getClass().getName());
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java58instance=(AssertionFailedError)newAssertionFailedError(null);
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java58instance=(AssertionFailedError)newAssertionFailedError("Invalidstartoftype:{0}");
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java58publicfinalstaticOptionBuilderinstance=newOptionBuilder("Error:");
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java58finalstaticOptionBuilderinstance=newOptionBuilder(this.options,this.options);
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java58aughtExceptionHandler.handleFailedError(instance,instance);
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java58aughtExceptionHandler.handleFailedError(newIllegalStateException());
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java58System.err.println("Unabletoparse:n"+asPath(),asPath());
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java58protectedfinalstaticOptionBuilderinstance=newOptionBuilder("Error:");
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java58publicstaticfinalOptionBuilderinstance=newOptionBuilder("Error:");
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java58AssertionFailedErrorinstance=newAssertionFailedError();
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java58instance=(instance==null)?newAssertionFailedError(0):newAssertionFailedError();
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java58finalpublicstaticOptionBuilderinstance=newOptionBuilder(options);
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java58aughtExceptionHandler.handleFailedError("msg.missing.options",null);
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java58nullinstance=newOptionBuilder(OptionBuilder.DEFAULT_VERSION);
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java58nullinstance=newOptionBuilder(OptionBuilder.DEFAULT_OPTIONAL_FAIL_ERROR);
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java58aughtExceptionHandler.handleFailedError("msg.instance.missing.assertion.error",null,Object.class);
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java58privatestaticfinalOptionBuilderinstance=newOptionBuilder(this.options,this.options);
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java58privatestaticfinalOptionBuilderinstance=newOptionBuilder(this.options,this.pendingErrors);
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java58instance=newAssertionFailedError(InstanceType.DEFAULT_TYPE,System.identityHashCode(InstanceType.DEFAULT_TYPE));
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java58instance=newAssertionFailedError(InstanceType.DEFAULT_TYPE,InstanceType.DEFAULT_TYPE);
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java58instance=newAssertionFailedError(1L);
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java58OptionBuilderinstance=newOptionBuilder("Error:n");
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java58instance=(AssertionFailedError)instance.cloneTree();
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java58System.err.println("Failedtoinitializeoption:"+getMessage());
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java58if(instance!=null){returninstance.getErrors();}
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java58protectedfinalstaticOptionBuilderinstance=newOptionBuilder(System.out);
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java58aughtExceptionHandler.handleFailedError("msg.missing.instance",null);
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java58aughtExceptionHandler.handleFailedError("msg.instance.missing.errors",newOptionBuilder(),instance);
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java58instance=OptionBuilder.DEFAULT;
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java58OptionFailedErrorinstance=newAssertionFailedError("JSC_UNKNOWN_ERROR");
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java58instance=(OptionBuilder)config.instance.clone();
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java58aughtInstance=newAssertionFailedError("JSC_UNKNOWN_EXPECTED_ERROR");
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java58aughtExceptionHandler.handleMissingError("msg.instance.missing.instance",null,Object.class);
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java58System.err.println("Unexpectederror:"+asPath(),asPath());
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java58staticOptionBuilderinstance=newOptionBuilder();
