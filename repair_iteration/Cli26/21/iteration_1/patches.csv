bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  option.setName(name);  [CE]  <identifier>  expected  [FE]        AssertionFailedError    [CONTEXT]    {  Option  option  =  new  Option(opt,  description);  option.setLongOpt(longopt);  option.setRequired(required);  option.setOptionalArg(optionalArg);  option.setArgs(numberOfArgs);  option.setType(type);    [BUGGY]  option.setName(name);  [BUGGY]    option.setValueSeparator(valuesep);  option.setArgName(argName);  OptionBuilder.reset();  return  option;  }  [CLASS]  OptionBuilder  [METHOD]  create  [RETURN_TYPE]  Option  String  opt  [VARIABLES]  boolean  hasArg  newRequired  optionalArg  required  OptionBuilder  instance  char  opt  sep  valuesep  Object  newType  type  Option  option  String  argName  description  longopt  name  newDescription  newLongopt  opt  int  num  numArgs  numberOfArgs  	projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java	0.3333333333333333	357	357	1	replace	option.setName(name);	      option.setDescription(description);    	non-compiled	[CE]  <identifier>  expected	1	None	replace
2	[BUG]  [BUGGY]  option.setValueSeparator(numberOfArgs  +  1);  [CE]  <identifier>  expected  [FE]          AssertionFailedError    [CONTEXT]    {  Option  option  =  new  Option(opt,  description);  option.setLongOpt(longopt);  option.setRequired(required);  option.setOptionalArg(optionalArg);  option.setArgs(numberOfArgs);  option.setType(type);    [BUGGY]  option.setValueSeparator(numberOfArgs  +  1);  [BUGGY]    option.setArgName(argName);  OptionBuilder.reset();  return  option;  }  [CLASS]  OptionBuilder  [METHOD]  create  [RETURN_TYPE]  Option  String  opt  [VARIABLES]  boolean  hasArg  newRequired  optionalArg  required  OptionBuilder  instance  char  opt  sep  valuesep  Object  newType  type  Option  option  String  argName  description  longopt  name  newDescription  newLongopt  opt  int  num  numArgs  numberOfArgs  	projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java	0.3333333333333333	357	357	1	replace	option.setValueSeparator(numberOfArgs  +  1);	  option.setValueSeparator(valuesep    +    1);    	non-compiled	[CE]  <identifier>  expected	7	None	replace
3	[BUG]  [BUGGY]  OptionBuilder.setValueSeparator(sep);  [CE]  <identifier>  expected  [FE]              AssertionFailedError    [CONTEXT]    {  Option  option  =  new  Option(opt,  description);  option.setLongOpt(longopt);  option.setRequired(required);  option.setOptionalArg(optionalArg);  option.setArgs(numberOfArgs);  option.setType(type);    [BUGGY]  OptionBuilder.setValueSeparator(sep);  [BUGGY]    option.setValueSeparator(valuesep);  option.setArgName(argName);  OptionBuilder.reset();  return  option;  }  [CLASS]  OptionBuilder  [METHOD]  create  [RETURN_TYPE]  Option  String  opt  [VARIABLES]  boolean  hasArg  newRequired  optionalArg  required  OptionBuilder  instance  char  opt  sep  valuesep  Object  newType  type  Option  option  String  argName  description  longopt  name  newDescription  newLongopt  opt  int  num  numArgs  numberOfArgs  	projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java	0.3333333333333333	357	357	1	replace	OptionBuilder.setValueSeparator(sep);	      OptionBuilder.setValueSeparator(valuesep);    	non-compiled	[CE]  <identifier>  expected	4	None	replace
4	[BUG]  [BUGGY]  OptionBuilder.setValueSeparator(optionalArg);  [CE]  <identifier>  expected  [FE]                AssertionFailedError    [CONTEXT]    {  Option  option  =  new  Option(opt,  description);  option.setLongOpt(longopt);  option.setRequired(required);  option.setOptionalArg(optionalArg);  option.setArgs(numberOfArgs);  option.setType(type);    [BUGGY]  OptionBuilder.setValueSeparator(optionalArg);  [BUGGY]    option.setValueSeparator(valuesep);  option.setArgName(argName);  OptionBuilder.reset();  return  option;  }  [CLASS]  OptionBuilder  [METHOD]  create  [RETURN_TYPE]  Option  String  opt  [VARIABLES]  boolean  hasArg  newRequired  optionalArg  required  OptionBuilder  instance  char  opt  sep  valuesep  Object  newType  type  Option  option  String  argName  description  longopt  name  newDescription  newLongopt  opt  int  num  numArgs  numberOfArgs  	projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java	0.3333333333333333	357	357	1	replace	OptionBuilder.setValueSeparator(optionalArg);	      OptionBuilder.setValueSeparator(valuesep);    	non-compiled	[CE]  <identifier>  expected	4	None	replace
5	[BUG]  [BUGGY]  OptionBuilder.setValueSeparator(valuesep  +  1);  [CE]  <identifier>  expected  [FE]                  AssertionFailedError    [CONTEXT]    {  Option  option  =  new  Option(opt,  description);  option.setLongOpt(longopt);  option.setRequired(required);  option.setOptionalArg(optionalArg);  option.setArgs(numberOfArgs);  option.setType(type);    [BUGGY]  OptionBuilder.setValueSeparator(valuesep  +  1);  [BUGGY]    option.setValueSeparator(valuesep);  option.setArgName(argName);  OptionBuilder.reset();  return  option;  }  [CLASS]  OptionBuilder  [METHOD]  create  [RETURN_TYPE]  Option  String  opt  [VARIABLES]  boolean  hasArg  newRequired  optionalArg  required  OptionBuilder  instance  char  opt  sep  valuesep  Object  newType  type  Option  option  String  argName  description  longopt  name  newDescription  newLongopt  opt  int  num  numArgs  numberOfArgs  	projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java	0.3333333333333333	357	357	1	replace	OptionBuilder.setValueSeparator(valuesep  +  1);	      OptionBuilder.setValueSeparator(valuesep);    	non-compiled	[CE]  <identifier>  expected	4	None	replace
6	[BUG]  [BUGGY]  OptionBuilder.instance.setDescription(newDescription);  [CE]  <identifier>  expected  [FE]        AssertionFailedError    [CONTEXT]    {  Option  option  =  new  Option(opt,  description);  option.setLongOpt(longopt);  option.setRequired(required);  option.setOptionalArg(optionalArg);  option.setArgs(numberOfArgs);  option.setType(type);    [BUGGY]  OptionBuilder.instance.setDescription(newDescription);  [BUGGY]    option.setValueSeparator(valuesep);  option.setArgName(argName);  OptionBuilder.reset();  return  option;  }  [CLASS]  OptionBuilder  [METHOD]  create  [RETURN_TYPE]  Option  String  opt  [VARIABLES]  boolean  hasArg  newRequired  optionalArg  required  OptionBuilder  instance  char  opt  sep  valuesep  Object  newType  type  Option  option  String  argName  description  longopt  name  newDescription  newLongopt  opt  int  num  numArgs  numberOfArgs  	projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java	0.3333333333333333	357	357	1	replace	OptionBuilder.instance.setDescription(newDescription);	      OptionBuilder.instance.setDescription(description);    	non-compiled	[CE]  <identifier>  expected	10	None	replace
7	[BUG]  [BUGGY]  OptionBuilder.instance.addDescription(description);  [CE]  <identifier>  expected  [FE]          AssertionFailedError    [CONTEXT]    {  Option  option  =  new  Option(opt,  description);  option.setLongOpt(longopt);  option.setRequired(required);  option.setOptionalArg(optionalArg);  option.setArgs(numberOfArgs);  option.setType(type);    [BUGGY]  OptionBuilder.instance.addDescription(description);  [BUGGY]    option.setValueSeparator(valuesep);  option.setArgName(argName);  OptionBuilder.reset();  return  option;  }  [CLASS]  OptionBuilder  [METHOD]  create  [RETURN_TYPE]  Option  String  opt  [VARIABLES]  boolean  hasArg  newRequired  optionalArg  required  OptionBuilder  instance  char  opt  sep  valuesep  Object  newType  type  Option  option  String  argName  description  longopt  name  newDescription  newLongopt  opt  int  num  numArgs  numberOfArgs  	projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java	0.3333333333333333	357	357	1	replace	OptionBuilder.instance.addDescription(description);	      OptionBuilder.instance.setDescription(description);    	non-compiled	[CE]  <identifier>  expected	10	None	replace
8	[BUG]  [BUGGY]  OptionBuilder.instance.setName(description);  [CE]  <identifier>  expected  [FE]            AssertionFailedError    [CONTEXT]    {  Option  option  =  new  Option(opt,  description);  option.setLongOpt(longopt);  option.setRequired(required);  option.setOptionalArg(optionalArg);  option.setArgs(numberOfArgs);  option.setType(type);    [BUGGY]  OptionBuilder.instance.setName(description);  [BUGGY]    option.setValueSeparator(valuesep);  option.setArgName(argName);  OptionBuilder.reset();  return  option;  }  [CLASS]  OptionBuilder  [METHOD]  create  [RETURN_TYPE]  Option  String  opt  [VARIABLES]  boolean  hasArg  newRequired  optionalArg  required  OptionBuilder  instance  char  opt  sep  valuesep  Object  newType  type  Option  option  String  argName  description  longopt  name  newDescription  newLongopt  opt  int  num  numArgs  numberOfArgs  	projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java	0.3333333333333333	357	357	1	replace	OptionBuilder.instance.setName(description);	      OptionBuilder.instance.setDescription(description);    	non-compiled	[CE]  <identifier>  expected	10	None	replace
9	[BUG]  [BUGGY]  option.setValues(numberOfArgs  +  1);  [CE]  <identifier>  expected  [FE]                AssertionFailedError    [CONTEXT]    {  Option  option  =  new  Option(opt,  description);  option.setLongOpt(longopt);  option.setRequired(required);  option.setOptionalArg(optionalArg);  option.setArgs(numberOfArgs);  option.setType(type);    [BUGGY]  option.setValues(numberOfArgs  +  1);  [BUGGY]    option.setValueSeparator(valuesep);  option.setArgName(argName);  OptionBuilder.reset();  return  option;  }  [CLASS]  OptionBuilder  [METHOD]  create  [RETURN_TYPE]  Option  String  opt  [VARIABLES]  boolean  hasArg  newRequired  optionalArg  required  OptionBuilder  instance  char  opt  sep  valuesep  Object  newType  type  Option  option  String  argName  description  longopt  name  newDescription  newLongopt  opt  int  num  numArgs  numberOfArgs  	projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java	0.3333333333333333	357	357	1	replace	option.setValues(numberOfArgs  +  1);	      option.setValues(numberOfArgs);    	non-compiled	[CE]  <identifier>  expected	5	None	replace
10	[BUG]  [BUGGY]  option.setValues(numberOfArgs  -  1);  [CE]  <identifier>  expected  [FE]                  AssertionFailedError    [CONTEXT]    {  Option  option  =  new  Option(opt,  description);  option.setLongOpt(longopt);  option.setRequired(required);  option.setOptionalArg(optionalArg);  option.setArgs(numberOfArgs);  option.setType(type);    [BUGGY]  option.setValues(numberOfArgs  -  1);  [BUGGY]    option.setValueSeparator(valuesep);  option.setArgName(argName);  OptionBuilder.reset();  return  option;  }  [CLASS]  OptionBuilder  [METHOD]  create  [RETURN_TYPE]  Option  String  opt  [VARIABLES]  boolean  hasArg  newRequired  optionalArg  required  OptionBuilder  instance  char  opt  sep  valuesep  Object  newType  type  Option  option  String  argName  description  longopt  name  newDescription  newLongopt  opt  int  num  numArgs  numberOfArgs  	projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java	0.3333333333333333	357	357	1	replace	option.setValues(numberOfArgs  -  1);	      option.setValues(numberOfArgs);    	non-compiled	[CE]  <identifier>  expected	5	None	replace
11	[BUG]  [BUGGY]  option.setValueSeparator(sep  +  1);  [CE]  <identifier>  expected  [FE]        AssertionFailedError    [CONTEXT]    {  Option  option  =  new  Option(opt,  description);  option.setLongOpt(longopt);  option.setRequired(required);  option.setOptionalArg(optionalArg);  option.setArgs(numberOfArgs);  option.setType(type);    [BUGGY]  option.setValueSeparator(sep  +  1);  [BUGGY]    option.setArgName(argName);  OptionBuilder.reset();  return  option;  }  [CLASS]  OptionBuilder  [METHOD]  create  [RETURN_TYPE]  Option  String  opt  [VARIABLES]  boolean  hasArg  newRequired  optionalArg  required  OptionBuilder  instance  char  opt  sep  valuesep  Object  newType  type  Option  option  String  argName  description  longopt  name  newDescription  newLongopt  opt  int  num  numArgs  numberOfArgs  	projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java	0.3333333333333333	357	357	1	replace	option.setValueSeparator(sep  +  1);	  option.setValueSeparator(sep);    	non-compiled	[CE]  <identifier>  expected	6	None	replace
12	[BUG]  [BUGGY]  option.setValueSeparator(numberOfArgs  -  1);  [CE]  <identifier>  expected  [FE]        AssertionFailedError    [CONTEXT]    {  Option  option  =  new  Option(opt,  description);  option.setLongOpt(longopt);  option.setRequired(required);  option.setOptionalArg(optionalArg);  option.setArgs(numberOfArgs);  option.setType(type);    [BUGGY]  option.setValueSeparator(numberOfArgs  -  1);  [BUGGY]    option.setArgName(argName);  OptionBuilder.reset();  return  option;  }  [CLASS]  OptionBuilder  [METHOD]  create  [RETURN_TYPE]  Option  String  opt  [VARIABLES]  boolean  hasArg  newRequired  optionalArg  required  OptionBuilder  instance  char  opt  sep  valuesep  Object  newType  type  Option  option  String  argName  description  longopt  name  newDescription  newLongopt  opt  int  num  numArgs  numberOfArgs  	projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java	0.3333333333333333	357	357	1	replace	option.setValueSeparator(numberOfArgs  -  1);	  option.setValueSeparator(valuesep    -    1);    	non-compiled	[CE]  <identifier>  expected	9	None	replace
13	[BUG]  [BUGGY]  OptionBuilder.addOption(optionalArg,  description);  [CE]  <identifier>  expected  [FE]        AssertionFailedError    [CONTEXT]    {  Option  option  =  new  Option(opt,  description);  option.setLongOpt(longopt);  option.setRequired(required);  option.setOptionalArg(optionalArg);  option.setArgs(numberOfArgs);  option.setType(type);    [BUGGY]  OptionBuilder.addOption(optionalArg,  description);  [BUGGY]    option.setValueSeparator(valuesep);  option.setArgName(argName);  OptionBuilder.reset();  return  option;  }  [CLASS]  OptionBuilder  [METHOD]  create  [RETURN_TYPE]  Option  String  opt  [VARIABLES]  boolean  hasArg  newRequired  optionalArg  required  OptionBuilder  instance  char  opt  sep  valuesep  Object  newType  type  Option  option  String  argName  description  longopt  name  newDescription  newLongopt  opt  int  num  numArgs  numberOfArgs  	projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java	0.3333333333333333	357	357	1	replace	OptionBuilder.addOption(optionalArg,  description);	      OptionBuilder.addOption(optionalArg);    	non-compiled	[CE]  <identifier>  expected	8	None	replace
14	[BUG]  [BUGGY]  OptionBuilder.addOption(optionalArg,  type);  [CE]  <identifier>  expected  [FE]          AssertionFailedError    [CONTEXT]    {  Option  option  =  new  Option(opt,  description);  option.setLongOpt(longopt);  option.setRequired(required);  option.setOptionalArg(optionalArg);  option.setArgs(numberOfArgs);  option.setType(type);    [BUGGY]  OptionBuilder.addOption(optionalArg,  type);  [BUGGY]    option.setValueSeparator(valuesep);  option.setArgName(argName);  OptionBuilder.reset();  return  option;  }  [CLASS]  OptionBuilder  [METHOD]  create  [RETURN_TYPE]  Option  String  opt  [VARIABLES]  boolean  hasArg  newRequired  optionalArg  required  OptionBuilder  instance  char  opt  sep  valuesep  Object  newType  type  Option  option  String  argName  description  longopt  name  newDescription  newLongopt  opt  int  num  numArgs  numberOfArgs  	projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java	0.3333333333333333	357	357	1	replace	OptionBuilder.addOption(optionalArg,  type);	      OptionBuilder.addOption(optionalArg);    	non-compiled	[CE]  <identifier>  expected	8	None	replace
15	[BUG]  [BUGGY]  OptionBuilder.addOption(optionalArg,  newDescription);  [CE]  <identifier>  expected  [FE]            AssertionFailedError    [CONTEXT]    {  Option  option  =  new  Option(opt,  description);  option.setLongOpt(longopt);  option.setRequired(required);  option.setOptionalArg(optionalArg);  option.setArgs(numberOfArgs);  option.setType(type);    [BUGGY]  OptionBuilder.addOption(optionalArg,  newDescription);  [BUGGY]    option.setValueSeparator(valuesep);  option.setArgName(argName);  OptionBuilder.reset();  return  option;  }  [CLASS]  OptionBuilder  [METHOD]  create  [RETURN_TYPE]  Option  String  opt  [VARIABLES]  boolean  hasArg  newRequired  optionalArg  required  OptionBuilder  instance  char  opt  sep  valuesep  Object  newType  type  Option  option  String  argName  description  longopt  name  newDescription  newLongopt  opt  int  num  numArgs  numberOfArgs  	projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java	0.3333333333333333	357	357	1	replace	OptionBuilder.addOption(optionalArg,  newDescription);	      OptionBuilder.addOption(optionalArg);    	non-compiled	[CE]  <identifier>  expected	8	None	replace
16	[BUG]  [BUGGY]  option.setValueSeparator(numberOfArgs);  [CE]  <identifier>  expected  [FE]        AssertionFailedError    [CONTEXT]    {  Option  option  =  new  Option(opt,  description);  option.setLongOpt(longopt);  option.setRequired(required);  option.setOptionalArg(optionalArg);  option.setArgs(numberOfArgs);  option.setType(type);    [BUGGY]  option.setValueSeparator(numberOfArgs);  [BUGGY]    option.setArgName(argName);  OptionBuilder.reset();  return  option;  }  [CLASS]  OptionBuilder  [METHOD]  create  [RETURN_TYPE]  Option  String  opt  [VARIABLES]  boolean  hasArg  newRequired  optionalArg  required  OptionBuilder  instance  char  opt  sep  valuesep  Object  newType  type  Option  option  String  argName  description  longopt  name  newDescription  newLongopt  opt  int  num  numArgs  numberOfArgs  	projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java	0.3333333333333333	357	357	1	replace	option.setValueSeparator(numberOfArgs);	  option.setValueSeparator(hasArg);    	non-compiled	[CE]  <identifier>  expected	11	None	replace
17	[BUG]  [BUGGY]  option.setValueSeparator(newValueSeparator);  [CE]  <identifier>  expected  [FE]          AssertionFailedError    [CONTEXT]    {  Option  option  =  new  Option(opt,  description);  option.setLongOpt(longopt);  option.setRequired(required);  option.setOptionalArg(optionalArg);  option.setArgs(numberOfArgs);  option.setType(type);    [BUGGY]  option.setValueSeparator(newValueSeparator);  [BUGGY]    option.setArgName(argName);  OptionBuilder.reset();  return  option;  }  [CLASS]  OptionBuilder  [METHOD]  create  [RETURN_TYPE]  Option  String  opt  [VARIABLES]  boolean  hasArg  newRequired  optionalArg  required  OptionBuilder  instance  char  opt  sep  valuesep  Object  newType  type  Option  option  String  argName  description  longopt  name  newDescription  newLongopt  opt  int  num  numArgs  numberOfArgs  	projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java	0.3333333333333333	357	357	1	replace	option.setValueSeparator(newValueSeparator);	  option.setValueSeparator(hasArg);    	non-compiled	[CE]  <identifier>  expected	11	None	replace
18	[BUG]  [BUGGY]  OptionBuilder.setDescription(description);  [CE]  <identifier>  expected  [FE]          AssertionFailedError    [CONTEXT]    {  Option  option  =  new  Option(opt,  description);  option.setLongOpt(longopt);  option.setRequired(required);  option.setOptionalArg(optionalArg);  option.setArgs(numberOfArgs);  option.setType(type);    [BUGGY]  OptionBuilder.setDescription(description);  [BUGGY]    option.setValueSeparator(valuesep);  option.setArgName(argName);  OptionBuilder.reset();  return  option;  }  [CLASS]  OptionBuilder  [METHOD]  create  [RETURN_TYPE]  Option  String  opt  [VARIABLES]  boolean  hasArg  newRequired  optionalArg  required  OptionBuilder  instance  char  opt  sep  valuesep  Object  newType  type  Option  option  String  argName  description  longopt  name  newDescription  newLongopt  opt  int  num  numArgs  numberOfArgs  	projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java	0.3333333333333333	357	357	1	replace	OptionBuilder.setDescription(description);	      OptionBuilder.reset();    	non-compiled	[CE]  <identifier>  expected	2	None	replace
19	[BUG]  [BUGGY]  OptionBuilder.setValues(numberOfArgs);  [CE]  <identifier>  expected  [FE]            AssertionFailedError    [CONTEXT]    {  Option  option  =  new  Option(opt,  description);  option.setLongOpt(longopt);  option.setRequired(required);  option.setOptionalArg(optionalArg);  option.setArgs(numberOfArgs);  option.setType(type);    [BUGGY]  OptionBuilder.setValues(numberOfArgs);  [BUGGY]    option.setValueSeparator(valuesep);  option.setArgName(argName);  OptionBuilder.reset();  return  option;  }  [CLASS]  OptionBuilder  [METHOD]  create  [RETURN_TYPE]  Option  String  opt  [VARIABLES]  boolean  hasArg  newRequired  optionalArg  required  OptionBuilder  instance  char  opt  sep  valuesep  Object  newType  type  Option  option  String  argName  description  longopt  name  newDescription  newLongopt  opt  int  num  numArgs  numberOfArgs  	projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java	0.3333333333333333	357	357	1	replace	OptionBuilder.setValues(numberOfArgs);	      OptionBuilder.reset();    	non-compiled	[CE]  <identifier>  expected	2	None	replace
20	[BUG]  [BUGGY]  OptionBuilder.setOptionalArg(optionalArg);  [CE]  <identifier>  expected  [FE]              AssertionFailedError    [CONTEXT]    {  Option  option  =  new  Option(opt,  description);  option.setLongOpt(longopt);  option.setRequired(required);  option.setOptionalArg(optionalArg);  option.setArgs(numberOfArgs);  option.setType(type);    [BUGGY]  OptionBuilder.setOptionalArg(optionalArg);  [BUGGY]    option.setValueSeparator(valuesep);  option.setArgName(argName);  OptionBuilder.reset();  return  option;  }  [CLASS]  OptionBuilder  [METHOD]  create  [RETURN_TYPE]  Option  String  opt  [VARIABLES]  boolean  hasArg  newRequired  optionalArg  required  OptionBuilder  instance  char  opt  sep  valuesep  Object  newType  type  Option  option  String  argName  description  longopt  name  newDescription  newLongopt  opt  int  num  numArgs  numberOfArgs  	projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java	0.3333333333333333	357	357	1	replace	OptionBuilder.setOptionalArg(optionalArg);	      OptionBuilder.reset();    	non-compiled	[CE]  <identifier>  expected	2	None	replace
21	[BUG]  [BUGGY]  OptionBuilder.addOption(optionalArg,  option);  [CE]  <identifier>  expected  [FE]        AssertionFailedError    [CONTEXT]    {  Option  option  =  new  Option(opt,  description);  option.setLongOpt(longopt);  option.setRequired(required);  option.setOptionalArg(optionalArg);  option.setArgs(numberOfArgs);  option.setType(type);    [BUGGY]  OptionBuilder.addOption(optionalArg,  option);  [BUGGY]    option.setValueSeparator(valuesep);  option.setArgName(argName);  OptionBuilder.reset();  return  option;  }  [CLASS]  OptionBuilder  [METHOD]  create  [RETURN_TYPE]  Option  String  opt  [VARIABLES]  boolean  hasArg  newRequired  optionalArg  required  OptionBuilder  instance  char  opt  sep  valuesep  Object  newType  type  Option  option  String  argName  description  longopt  name  newDescription  newLongopt  opt  int  num  numArgs  numberOfArgs  	projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java	0.3333333333333333	357	357	1	replace	OptionBuilder.addOption(optionalArg,  option);	      OptionBuilder.addOption(optionalArg);    	non-compiled	[CE]  <identifier>  expected	8	None	replace
22	[BUG]  [BUGGY]  option.setDefinition(description);  [CE]  <identifier>  expected  [FE]        AssertionFailedError    [CONTEXT]    {  Option  option  =  new  Option(opt,  description);  option.setLongOpt(longopt);  option.setRequired(required);  option.setOptionalArg(optionalArg);  option.setArgs(numberOfArgs);  option.setType(type);    [BUGGY]  option.setDefinition(description);  [BUGGY]    option.setValueSeparator(valuesep);  option.setArgName(argName);  OptionBuilder.reset();  return  option;  }  [CLASS]  OptionBuilder  [METHOD]  create  [RETURN_TYPE]  Option  String  opt  [VARIABLES]  boolean  hasArg  newRequired  optionalArg  required  OptionBuilder  instance  char  opt  sep  valuesep  Object  newType  type  Option  option  String  argName  description  longopt  name  newDescription  newLongopt  opt  int  num  numArgs  numberOfArgs  	projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java	0.3333333333333333	357	357	1	replace	option.setDefinition(description);	      option.setDescription(description);    	non-compiled	[CE]  <identifier>  expected	1	None	replace
23	[BUG]  [BUGGY]  OptionBuilder.instance.setType(type);  [CE]  <identifier>  expected  [FE]        AssertionFailedError    [CONTEXT]    {  Option  option  =  new  Option(opt,  description);  option.setLongOpt(longopt);  option.setRequired(required);  option.setOptionalArg(optionalArg);  option.setArgs(numberOfArgs);  option.setType(type);    [BUGGY]  OptionBuilder.instance.setType(type);  [BUGGY]    option.setValueSeparator(valuesep);  option.setArgName(argName);  OptionBuilder.reset();  return  option;  }  [CLASS]  OptionBuilder  [METHOD]  create  [RETURN_TYPE]  Option  String  opt  [VARIABLES]  boolean  hasArg  newRequired  optionalArg  required  OptionBuilder  instance  char  opt  sep  valuesep  Object  newType  type  Option  option  String  argName  description  longopt  name  newDescription  newLongopt  opt  int  num  numArgs  numberOfArgs  	projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java	0.3333333333333333	357	357	1	replace	OptionBuilder.instance.setType(type);	      OptionBuilder.instance.setDescription(description);    	non-compiled	[CE]  <identifier>  expected	10	None	replace
24	[BUG]  [BUGGY]  option.setValueSeparator(valuesep  /  1);  [CE]  <identifier>  expected  [FE]          AssertionFailedError    [CONTEXT]    {  Option  option  =  new  Option(opt,  description);  option.setLongOpt(longopt);  option.setRequired(required);  option.setOptionalArg(optionalArg);  option.setArgs(numberOfArgs);  option.setType(type);    [BUGGY]  option.setValueSeparator(valuesep  /  1);  [BUGGY]    option.setArgName(argName);  OptionBuilder.reset();  return  option;  }  [CLASS]  OptionBuilder  [METHOD]  create  [RETURN_TYPE]  Option  String  opt  [VARIABLES]  boolean  hasArg  newRequired  optionalArg  required  OptionBuilder  instance  char  opt  sep  valuesep  Object  newType  type  Option  option  String  argName  description  longopt  name  newDescription  newLongopt  opt  int  num  numArgs  numberOfArgs  	projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java	0.3333333333333333	357	357	1	replace	option.setValueSeparator(valuesep  /  1);	  option.setValueSeparator(valuesep    +    1);    	non-compiled	[CE]  <identifier>  expected	7	None	replace
25	[BUG]  [BUGGY]  OptionBuilder.addOption(optionalArg,  argName);  [CE]  <identifier>  expected  [FE]        AssertionFailedError    [CONTEXT]    {  Option  option  =  new  Option(opt,  description);  option.setLongOpt(longopt);  option.setRequired(required);  option.setOptionalArg(optionalArg);  option.setArgs(numberOfArgs);  option.setType(type);    [BUGGY]  OptionBuilder.addOption(optionalArg,  argName);  [BUGGY]    option.setValueSeparator(valuesep);  option.setArgName(argName);  OptionBuilder.reset();  return  option;  }  [CLASS]  OptionBuilder  [METHOD]  create  [RETURN_TYPE]  Option  String  opt  [VARIABLES]  boolean  hasArg  newRequired  optionalArg  required  OptionBuilder  instance  char  opt  sep  valuesep  Object  newType  type  Option  option  String  argName  description  longopt  name  newDescription  newLongopt  opt  int  num  numArgs  numberOfArgs  	projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java	0.3333333333333333	357	357	1	replace	OptionBuilder.addOption(optionalArg,  argName);	      OptionBuilder.addOption(optionalArg);    	non-compiled	[CE]  <identifier>  expected	8	None	replace
26	[BUG]  [BUGGY]  OptionBuilder.setValue(valuesep);  [CE]  <identifier>  expected  [FE]              AssertionFailedError    [CONTEXT]    {  Option  option  =  new  Option(opt,  description);  option.setLongOpt(longopt);  option.setRequired(required);  option.setOptionalArg(optionalArg);  option.setArgs(numberOfArgs);  option.setType(type);    [BUGGY]  OptionBuilder.setValue(valuesep);  [BUGGY]    option.setValueSeparator(valuesep);  option.setArgName(argName);  OptionBuilder.reset();  return  option;  }  [CLASS]  OptionBuilder  [METHOD]  create  [RETURN_TYPE]  Option  String  opt  [VARIABLES]  boolean  hasArg  newRequired  optionalArg  required  OptionBuilder  instance  char  opt  sep  valuesep  Object  newType  type  Option  option  String  argName  description  longopt  name  newDescription  newLongopt  opt  int  num  numArgs  numberOfArgs  	projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java	0.3333333333333333	357	357	1	replace	OptionBuilder.setValue(valuesep);	      OptionBuilder.setValueSeparator(valuesep);    	non-compiled	[CE]  <identifier>  expected	4	None	replace
27	[BUG]  [BUGGY]  option.setName(argName);  [CE]  <identifier>  expected  [FE]        AssertionFailedError    [CONTEXT]    {  Option  option  =  new  Option(opt,  description);  option.setLongOpt(longopt);  option.setRequired(required);  option.setOptionalArg(optionalArg);  option.setArgs(numberOfArgs);  option.setType(type);    [BUGGY]  option.setName(argName);  [BUGGY]    option.setValueSeparator(valuesep);  option.setArgName(argName);  OptionBuilder.reset();  return  option;  }  [CLASS]  OptionBuilder  [METHOD]  create  [RETURN_TYPE]  Option  String  opt  [VARIABLES]  boolean  hasArg  newRequired  optionalArg  required  OptionBuilder  instance  char  opt  sep  valuesep  Object  newType  type  Option  option  String  argName  description  longopt  name  newDescription  newLongopt  opt  int  num  numArgs  numberOfArgs  	projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java	0.3333333333333333	357	357	1	replace	option.setName(argName);	      option.setDescription(description);    	non-compiled	[CE]  <identifier>  expected	1	None	replace
28	[BUG]  [BUGGY]  option.setArgName(argName);  [CE]  <identifier>  expected  [FE]            AssertionFailedError    [CONTEXT]    {  Option  option  =  new  Option(opt,  description);  option.setLongOpt(longopt);  option.setRequired(required);  option.setOptionalArg(optionalArg);  option.setArgs(numberOfArgs);  option.setType(type);    [BUGGY]  option.setArgName(argName);  [BUGGY]    option.setValueSeparator(valuesep);  option.setArgName(argName);  OptionBuilder.reset();  return  option;  }  [CLASS]  OptionBuilder  [METHOD]  create  [RETURN_TYPE]  Option  String  opt  [VARIABLES]  boolean  hasArg  newRequired  optionalArg  required  OptionBuilder  instance  char  opt  sep  valuesep  Object  newType  type  Option  option  String  argName  description  longopt  name  newDescription  newLongopt  opt  int  num  numArgs  numberOfArgs  	projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java	0.3333333333333333	357	357	1	replace	option.setArgName(argName);	      option.setValueSeparator(valuesep);    	non-compiled	[CE]  <identifier>  expected	3	None	replace
29	[BUG]  [BUGGY]  option.setValue(valuesep);  [CE]  <identifier>  expected  [FE]                AssertionFailedError    [CONTEXT]    {  Option  option  =  new  Option(opt,  description);  option.setLongOpt(longopt);  option.setRequired(required);  option.setOptionalArg(optionalArg);  option.setArgs(numberOfArgs);  option.setType(type);    [BUGGY]  option.setValue(valuesep);  [BUGGY]    option.setValueSeparator(valuesep);  option.setArgName(argName);  OptionBuilder.reset();  return  option;  }  [CLASS]  OptionBuilder  [METHOD]  create  [RETURN_TYPE]  Option  String  opt  [VARIABLES]  boolean  hasArg  newRequired  optionalArg  required  OptionBuilder  instance  char  opt  sep  valuesep  Object  newType  type  Option  option  String  argName  description  longopt  name  newDescription  newLongopt  opt  int  num  numArgs  numberOfArgs  	projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java	0.3333333333333333	357	357	1	replace	option.setValue(valuesep);	      option.setValues(numberOfArgs);    	non-compiled	[CE]  <identifier>  expected	5	None	replace
30	[BUG]  [BUGGY]  OptionBuilder.append(optionalArg);  [CE]  <identifier>  expected  [FE]          AssertionFailedError    [CONTEXT]    {  Option  option  =  new  Option(opt,  description);  option.setLongOpt(longopt);  option.setRequired(required);  option.setOptionalArg(optionalArg);  option.setArgs(numberOfArgs);  option.setType(type);    [BUGGY]  OptionBuilder.append(optionalArg);  [BUGGY]    option.setValueSeparator(valuesep);  option.setArgName(argName);  OptionBuilder.reset();  return  option;  }  [CLASS]  OptionBuilder  [METHOD]  create  [RETURN_TYPE]  Option  String  opt  [VARIABLES]  boolean  hasArg  newRequired  optionalArg  required  OptionBuilder  instance  char  opt  sep  valuesep  Object  newType  type  Option  option  String  argName  description  longopt  name  newDescription  newLongopt  opt  int  num  numArgs  numberOfArgs  	projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java	0.3333333333333333	357	357	1	replace	OptionBuilder.append(optionalArg);	      OptionBuilder.reset();    	non-compiled	[CE]  <identifier>  expected	2	None	replace
31	[BUG]  [BUGGY]  OptionBuilder.clear();  [CE]  <identifier>  expected  [FE]            AssertionFailedError    [CONTEXT]    {  Option  option  =  new  Option(opt,  description);  option.setLongOpt(longopt);  option.setRequired(required);  option.setOptionalArg(optionalArg);  option.setArgs(numberOfArgs);  option.setType(type);    [BUGGY]  OptionBuilder.clear();  [BUGGY]    option.setValueSeparator(valuesep);  option.setArgName(argName);  OptionBuilder.reset();  return  option;  }  [CLASS]  OptionBuilder  [METHOD]  create  [RETURN_TYPE]  Option  String  opt  [VARIABLES]  boolean  hasArg  newRequired  optionalArg  required  OptionBuilder  instance  char  opt  sep  valuesep  Object  newType  type  Option  option  String  argName  description  longopt  name  newDescription  newLongopt  opt  int  num  numArgs  numberOfArgs  	projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java	0.3333333333333333	357	357	1	replace	OptionBuilder.clear();	      OptionBuilder.reset();    	non-compiled	[CE]  <identifier>  expected	2	None	replace
