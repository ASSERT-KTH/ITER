bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  option.setNumeric(numberOfArgs  +  1);  [CE]  <identifier>  expected  [FE]        AssertionFailedError    [CONTEXT]    public  static  Option  create(String  opt)  throws  IllegalArgumentException  {  Option  option  =  new  Option(opt,  description);  option.setLongOpt(longopt);  option.setRequired(required);  option.setOptionalArg(optionalArg);    [BUGGY]  option.setNumeric(numberOfArgs  +  1);  [BUGGY]    option.setArgs(numberOfArgs);  option.setType(type);  option.setValueSeparator(valuesep);  option.setArgName(argName);  OptionBuilder.reset();  return  option;  }  [CLASS]  OptionBuilder  [METHOD]  create  [RETURN_TYPE]  Option  String  opt  [VARIABLES]  boolean  hasArg  newRequired  optionalArg  required  OptionBuilder  instance  char  opt  sep  valuesep  Object  newType  type  Option  option  String  argName  description  longopt  name  newDescription  newLongopt  opt  int  num  numArgs  numberOfArgs  	projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java	0.3333333333333333	355	355	1	replace	option.setNumeric(numberOfArgs  +  1);	      option.setNumeric(numberOfArgs);    	non-compiled	[CE]  <identifier>  expected	11	None	replace
2	[BUG]  [BUGGY]  option.setNumeric(numberOfArgs  -  1);  [CE]  <identifier>  expected  [FE]          AssertionFailedError    [CONTEXT]    public  static  Option  create(String  opt)  throws  IllegalArgumentException  {  Option  option  =  new  Option(opt,  description);  option.setLongOpt(longopt);  option.setRequired(required);  option.setOptionalArg(optionalArg);    [BUGGY]  option.setNumeric(numberOfArgs  -  1);  [BUGGY]    option.setArgs(numberOfArgs);  option.setType(type);  option.setValueSeparator(valuesep);  option.setArgName(argName);  OptionBuilder.reset();  return  option;  }  [CLASS]  OptionBuilder  [METHOD]  create  [RETURN_TYPE]  Option  String  opt  [VARIABLES]  boolean  hasArg  newRequired  optionalArg  required  OptionBuilder  instance  char  opt  sep  valuesep  Object  newType  type  Option  option  String  argName  description  longopt  name  newDescription  newLongopt  opt  int  num  numArgs  numberOfArgs  	projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java	0.3333333333333333	355	355	1	replace	option.setNumeric(numberOfArgs  -  1);	      option.setNumeric(numberOfArgs);    	non-compiled	[CE]  <identifier>  expected	11	None	replace
3	[BUG]  [BUGGY]  option.setNumericArgs(numberOfArgs  +  1);  [CE]  <identifier>  expected  [FE]        AssertionFailedError    [CONTEXT]    public  static  Option  create(String  opt)  throws  IllegalArgumentException  {  Option  option  =  new  Option(opt,  description);  option.setLongOpt(longopt);  option.setRequired(required);  option.setOptionalArg(optionalArg);    [BUGGY]  option.setNumericArgs(numberOfArgs  +  1);  [BUGGY]    option.setType(type);  option.setValueSeparator(valuesep);  option.setArgName(argName);  OptionBuilder.reset();  return  option;  }  [CLASS]  OptionBuilder  [METHOD]  create  [RETURN_TYPE]  Option  String  opt  [VARIABLES]  boolean  hasArg  newRequired  optionalArg  required  OptionBuilder  instance  char  opt  sep  valuesep  Object  newType  type  Option  option  String  argName  description  longopt  name  newDescription  newLongopt  opt  int  num  numArgs  numberOfArgs  	projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java	0.3333333333333333	355	355	1	replace	option.setNumericArgs(numberOfArgs  +  1);	  option.setNumericArgs(numberOfArgs);    	non-compiled	[CE]  <identifier>  expected	10	None	replace
4	[BUG]  [BUGGY]  option.setNumericArgs(numberOfArgs  -  1);  [CE]  <identifier>  expected  [FE]          AssertionFailedError    [CONTEXT]    public  static  Option  create(String  opt)  throws  IllegalArgumentException  {  Option  option  =  new  Option(opt,  description);  option.setLongOpt(longopt);  option.setRequired(required);  option.setOptionalArg(optionalArg);    [BUGGY]  option.setNumericArgs(numberOfArgs  -  1);  [BUGGY]    option.setType(type);  option.setValueSeparator(valuesep);  option.setArgName(argName);  OptionBuilder.reset();  return  option;  }  [CLASS]  OptionBuilder  [METHOD]  create  [RETURN_TYPE]  Option  String  opt  [VARIABLES]  boolean  hasArg  newRequired  optionalArg  required  OptionBuilder  instance  char  opt  sep  valuesep  Object  newType  type  Option  option  String  argName  description  longopt  name  newDescription  newLongopt  opt  int  num  numArgs  numberOfArgs  	projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java	0.3333333333333333	355	355	1	replace	option.setNumericArgs(numberOfArgs  -  1);	  option.setNumericArgs(numberOfArgs);    	non-compiled	[CE]  <identifier>  expected	10	None	replace
5	[BUG]  [BUGGY]  option.setArgs(numberOfArgs  *  1);  [CE]  <identifier>  expected  [FE]          AssertionFailedError    [CONTEXT]    public  static  Option  create(String  opt)  throws  IllegalArgumentException  {  Option  option  =  new  Option(opt,  description);  option.setLongOpt(longopt);  option.setRequired(required);  option.setOptionalArg(optionalArg);    [BUGGY]  option.setArgs(numberOfArgs  *  1);  [BUGGY]    option.setType(type);  option.setValueSeparator(valuesep);  option.setArgName(argName);  OptionBuilder.reset();  return  option;  }  [CLASS]  OptionBuilder  [METHOD]  create  [RETURN_TYPE]  Option  String  opt  [VARIABLES]  boolean  hasArg  newRequired  optionalArg  required  OptionBuilder  instance  char  opt  sep  valuesep  Object  newType  type  Option  option  String  argName  description  longopt  name  newDescription  newLongopt  opt  int  num  numArgs  numberOfArgs  	projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java	0.3333333333333333	355	355	1	replace	option.setArgs(numberOfArgs  *  1);	  option.setArgs(numberOfArgs    +    1);    	non-compiled	[CE]  <identifier>  expected	2	None	replace
6	[BUG]  [BUGGY]  OptionBuilder.instance().setOptionalArg(optionalArg);  [CE]  <identifier>  expected  [FE]          AssertionFailedError    [CONTEXT]    public  static  Option  create(String  opt)  throws  IllegalArgumentException  {  Option  option  =  new  Option(opt,  description);  option.setLongOpt(longopt);  option.setRequired(required);  option.setOptionalArg(optionalArg);    [BUGGY]  OptionBuilder.instance().setOptionalArg(optionalArg);  [BUGGY]    option.setArgs(numberOfArgs);  option.setType(type);  option.setValueSeparator(valuesep);  option.setArgName(argName);  OptionBuilder.reset();  return  option;  }  [CLASS]  OptionBuilder  [METHOD]  create  [RETURN_TYPE]  Option  String  opt  [VARIABLES]  boolean  hasArg  newRequired  optionalArg  required  OptionBuilder  instance  char  opt  sep  valuesep  Object  newType  type  Option  option  String  argName  description  longopt  name  newDescription  newLongopt  opt  int  num  numArgs  numberOfArgs  	projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java	0.3333333333333333	355	355	1	replace	OptionBuilder.instance().setOptionalArg(optionalArg);	      OptionBuilder.instance().setType(type);    	non-compiled	[CE]  <identifier>  expected	16	None	replace
7	[BUG]  [BUGGY]  OptionBuilder.instance().setValues(numberOfArgs);  [CE]  <identifier>  expected  [FE]            AssertionFailedError    [CONTEXT]    public  static  Option  create(String  opt)  throws  IllegalArgumentException  {  Option  option  =  new  Option(opt,  description);  option.setLongOpt(longopt);  option.setRequired(required);  option.setOptionalArg(optionalArg);    [BUGGY]  OptionBuilder.instance().setValues(numberOfArgs);  [BUGGY]    option.setArgs(numberOfArgs);  option.setType(type);  option.setValueSeparator(valuesep);  option.setArgName(argName);  OptionBuilder.reset();  return  option;  }  [CLASS]  OptionBuilder  [METHOD]  create  [RETURN_TYPE]  Option  String  opt  [VARIABLES]  boolean  hasArg  newRequired  optionalArg  required  OptionBuilder  instance  char  opt  sep  valuesep  Object  newType  type  Option  option  String  argName  description  longopt  name  newDescription  newLongopt  opt  int  num  numArgs  numberOfArgs  	projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java	0.3333333333333333	355	355	1	replace	OptionBuilder.instance().setValues(numberOfArgs);	      OptionBuilder.instance().setType(type);    	non-compiled	[CE]  <identifier>  expected	16	None	replace
8	[BUG]  [BUGGY]  OptionBuilder.instance().setType(newType);  [CE]  <identifier>  expected  [FE]              AssertionFailedError    [CONTEXT]    public  static  Option  create(String  opt)  throws  IllegalArgumentException  {  Option  option  =  new  Option(opt,  description);  option.setLongOpt(longopt);  option.setRequired(required);  option.setOptionalArg(optionalArg);    [BUGGY]  OptionBuilder.instance().setType(newType);  [BUGGY]    option.setArgs(numberOfArgs);  option.setType(type);  option.setValueSeparator(valuesep);  option.setArgName(argName);  OptionBuilder.reset();  return  option;  }  [CLASS]  OptionBuilder  [METHOD]  create  [RETURN_TYPE]  Option  String  opt  [VARIABLES]  boolean  hasArg  newRequired  optionalArg  required  OptionBuilder  instance  char  opt  sep  valuesep  Object  newType  type  Option  option  String  argName  description  longopt  name  newDescription  newLongopt  opt  int  num  numArgs  numberOfArgs  	projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java	0.3333333333333333	355	355	1	replace	OptionBuilder.instance().setType(newType);	      OptionBuilder.instance().setType(type);    	non-compiled	[CE]  <identifier>  expected	16	None	replace
9	[BUG]  [BUGGY]  OptionBuilder.setType(type);  [CE]  <identifier>  expected  [FE]              AssertionFailedError    [CONTEXT]    public  static  Option  create(String  opt)  throws  IllegalArgumentException  {  Option  option  =  new  Option(opt,  description);  option.setLongOpt(longopt);  option.setRequired(required);  option.setOptionalArg(optionalArg);    [BUGGY]  OptionBuilder.setType(type);  [BUGGY]    option.setType(type);  option.setValueSeparator(valuesep);  option.setArgName(argName);  OptionBuilder.reset();  return  option;  }  [CLASS]  OptionBuilder  [METHOD]  create  [RETURN_TYPE]  Option  String  opt  [VARIABLES]  boolean  hasArg  newRequired  optionalArg  required  OptionBuilder  instance  char  opt  sep  valuesep  Object  newType  type  Option  option  String  argName  description  longopt  name  newDescription  newLongopt  opt  int  num  numArgs  numberOfArgs  	projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java	0.3333333333333333	355	355	1	replace	OptionBuilder.setType(type);	      	non-compiled	[CE]  <identifier>  expected	4	None	replace
10	[BUG]  [BUGGY]  OptionBuilder.instance.setOptionalArg(optionalArg);  [CE]  <identifier>  expected  [FE]            AssertionFailedError    [CONTEXT]    public  static  Option  create(String  opt)  throws  IllegalArgumentException  {  Option  option  =  new  Option(opt,  description);  option.setLongOpt(longopt);  option.setRequired(required);  option.setOptionalArg(optionalArg);    [BUGGY]  OptionBuilder.instance.setOptionalArg(optionalArg);  [BUGGY]    option.setArgs(numberOfArgs);  option.setType(type);  option.setValueSeparator(valuesep);  option.setArgName(argName);  OptionBuilder.reset();  return  option;  }  [CLASS]  OptionBuilder  [METHOD]  create  [RETURN_TYPE]  Option  String  opt  [VARIABLES]  boolean  hasArg  newRequired  optionalArg  required  OptionBuilder  instance  char  opt  sep  valuesep  Object  newType  type  Option  option  String  argName  description  longopt  name  newDescription  newLongopt  opt  int  num  numArgs  numberOfArgs  	projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java	0.3333333333333333	355	355	1	replace	OptionBuilder.instance.setOptionalArg(optionalArg);	      OptionBuilder.instance.setType(type);    	non-compiled	[CE]  <identifier>  expected	13	None	replace
11	[BUG]  [BUGGY]  OptionBuilder.instance.setValues(numberOfArgs);  [CE]  <identifier>  expected  [FE]              AssertionFailedError    [CONTEXT]    public  static  Option  create(String  opt)  throws  IllegalArgumentException  {  Option  option  =  new  Option(opt,  description);  option.setLongOpt(longopt);  option.setRequired(required);  option.setOptionalArg(optionalArg);    [BUGGY]  OptionBuilder.instance.setValues(numberOfArgs);  [BUGGY]    option.setArgs(numberOfArgs);  option.setType(type);  option.setValueSeparator(valuesep);  option.setArgName(argName);  OptionBuilder.reset();  return  option;  }  [CLASS]  OptionBuilder  [METHOD]  create  [RETURN_TYPE]  Option  String  opt  [VARIABLES]  boolean  hasArg  newRequired  optionalArg  required  OptionBuilder  instance  char  opt  sep  valuesep  Object  newType  type  Option  option  String  argName  description  longopt  name  newDescription  newLongopt  opt  int  num  numArgs  numberOfArgs  	projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java	0.3333333333333333	355	355	1	replace	OptionBuilder.instance.setValues(numberOfArgs);	      OptionBuilder.instance.setType(type);    	non-compiled	[CE]  <identifier>  expected	13	None	replace
12	[BUG]  [BUGGY]  OptionBuilder.instance.setType(newType);  [CE]  <identifier>  expected  [FE]                AssertionFailedError    [CONTEXT]    public  static  Option  create(String  opt)  throws  IllegalArgumentException  {  Option  option  =  new  Option(opt,  description);  option.setLongOpt(longopt);  option.setRequired(required);  option.setOptionalArg(optionalArg);    [BUGGY]  OptionBuilder.instance.setType(newType);  [BUGGY]    option.setArgs(numberOfArgs);  option.setType(type);  option.setValueSeparator(valuesep);  option.setArgName(argName);  OptionBuilder.reset();  return  option;  }  [CLASS]  OptionBuilder  [METHOD]  create  [RETURN_TYPE]  Option  String  opt  [VARIABLES]  boolean  hasArg  newRequired  optionalArg  required  OptionBuilder  instance  char  opt  sep  valuesep  Object  newType  type  Option  option  String  argName  description  longopt  name  newDescription  newLongopt  opt  int  num  numArgs  numberOfArgs  	projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java	0.3333333333333333	355	355	1	replace	OptionBuilder.instance.setType(newType);	      OptionBuilder.instance.setType(type);    	non-compiled	[CE]  <identifier>  expected	13	None	replace
13	[BUG]  [BUGGY]  OptionBuilder.addOptionalArg(optionalArg);  [CE]  <identifier>  expected  [FE]          AssertionFailedError    [CONTEXT]    public  static  Option  create(String  opt)  throws  IllegalArgumentException  {  Option  option  =  new  Option(opt,  description);  option.setLongOpt(longopt);  option.setRequired(required);  option.setOptionalArg(optionalArg);    [BUGGY]  OptionBuilder.addOptionalArg(optionalArg);  [BUGGY]    option.setArgs(numberOfArgs);  option.setType(type);  option.setValueSeparator(valuesep);  option.setArgName(argName);  OptionBuilder.reset();  return  option;  }  [CLASS]  OptionBuilder  [METHOD]  create  [RETURN_TYPE]  Option  String  opt  [VARIABLES]  boolean  hasArg  newRequired  optionalArg  required  OptionBuilder  instance  char  opt  sep  valuesep  Object  newType  type  Option  option  String  argName  description  longopt  name  newDescription  newLongopt  opt  int  num  numArgs  numberOfArgs  	projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java	0.3333333333333333	355	355	1	replace	OptionBuilder.addOptionalArg(optionalArg);	      OptionBuilder.addOptional(optionalArg);    	non-compiled	[CE]  <identifier>  expected	12	None	replace
14	[BUG]  [BUGGY]  OptionBuilder.addOptional(optionalArg,  description);  [CE]  <identifier>  expected  [FE]            AssertionFailedError    [CONTEXT]    public  static  Option  create(String  opt)  throws  IllegalArgumentException  {  Option  option  =  new  Option(opt,  description);  option.setLongOpt(longopt);  option.setRequired(required);  option.setOptionalArg(optionalArg);    [BUGGY]  OptionBuilder.addOptional(optionalArg,  description);  [BUGGY]    option.setArgs(numberOfArgs);  option.setType(type);  option.setValueSeparator(valuesep);  option.setArgName(argName);  OptionBuilder.reset();  return  option;  }  [CLASS]  OptionBuilder  [METHOD]  create  [RETURN_TYPE]  Option  String  opt  [VARIABLES]  boolean  hasArg  newRequired  optionalArg  required  OptionBuilder  instance  char  opt  sep  valuesep  Object  newType  type  Option  option  String  argName  description  longopt  name  newDescription  newLongopt  opt  int  num  numArgs  numberOfArgs  	projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java	0.3333333333333333	355	355	1	replace	OptionBuilder.addOptional(optionalArg,  description);	      OptionBuilder.addOptional(optionalArg);    	non-compiled	[CE]  <identifier>  expected	12	None	replace
15	[BUG]  [BUGGY]  OptionBuilder.addArg(optionalArg);  [CE]  <identifier>  expected  [FE]              AssertionFailedError    [CONTEXT]    public  static  Option  create(String  opt)  throws  IllegalArgumentException  {  Option  option  =  new  Option(opt,  description);  option.setLongOpt(longopt);  option.setRequired(required);  option.setOptionalArg(optionalArg);    [BUGGY]  OptionBuilder.addArg(optionalArg);  [BUGGY]    option.setArgs(numberOfArgs);  option.setType(type);  option.setValueSeparator(valuesep);  option.setArgName(argName);  OptionBuilder.reset();  return  option;  }  [CLASS]  OptionBuilder  [METHOD]  create  [RETURN_TYPE]  Option  String  opt  [VARIABLES]  boolean  hasArg  newRequired  optionalArg  required  OptionBuilder  instance  char  opt  sep  valuesep  Object  newType  type  Option  option  String  argName  description  longopt  name  newDescription  newLongopt  opt  int  num  numArgs  numberOfArgs  	projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java	0.3333333333333333	355	355	1	replace	OptionBuilder.addArg(optionalArg);	      OptionBuilder.addOptional(optionalArg);    	non-compiled	[CE]  <identifier>  expected	12	None	replace
16	[BUG]  [BUGGY]  option.setName(description);  [CE]  <identifier>  expected  [FE]          AssertionFailedError    [CONTEXT]    public  static  Option  create(String  opt)  throws  IllegalArgumentException  {  Option  option  =  new  Option(opt,  description);  option.setLongOpt(longopt);  option.setRequired(required);  option.setOptionalArg(optionalArg);    [BUGGY]  option.setName(description);  [BUGGY]    option.setArgs(numberOfArgs);  option.setType(type);  option.setValueSeparator(valuesep);  option.setArgName(argName);  OptionBuilder.reset();  return  option;  }  [CLASS]  OptionBuilder  [METHOD]  create  [RETURN_TYPE]  Option  String  opt  [VARIABLES]  boolean  hasArg  newRequired  optionalArg  required  OptionBuilder  instance  char  opt  sep  valuesep  Object  newType  type  Option  option  String  argName  description  longopt  name  newDescription  newLongopt  opt  int  num  numArgs  numberOfArgs  	projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java	0.3333333333333333	355	355	1	replace	option.setName(description);	      option.setDescription(description);    	non-compiled	[CE]  <identifier>  expected	6	None	replace
17	[BUG]  [BUGGY]  OptionBuilder.setDescription(description);  [CE]  <identifier>  expected  [FE]                AssertionFailedError    [CONTEXT]    public  static  Option  create(String  opt)  throws  IllegalArgumentException  {  Option  option  =  new  Option(opt,  description);  option.setLongOpt(longopt);  option.setRequired(required);  option.setOptionalArg(optionalArg);    [BUGGY]  OptionBuilder.setDescription(description);  [BUGGY]    option.setArgs(numberOfArgs);  option.setType(type);  option.setValueSeparator(valuesep);  option.setArgName(argName);  OptionBuilder.reset();  return  option;  }  [CLASS]  OptionBuilder  [METHOD]  create  [RETURN_TYPE]  Option  String  opt  [VARIABLES]  boolean  hasArg  newRequired  optionalArg  required  OptionBuilder  instance  char  opt  sep  valuesep  Object  newType  type  Option  option  String  argName  description  longopt  name  newDescription  newLongopt  opt  int  num  numArgs  numberOfArgs  	projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java	0.3333333333333333	355	355	1	replace	OptionBuilder.setDescription(description);	      OptionBuilder.reset();    option.setDescription(description);    	non-compiled	[CE]  <identifier>  expected	9	None	replace
18	[BUG]  [BUGGY]  option.setNumberOfArgs(numberOfArgs  +  1);  [CE]  <identifier>  expected  [FE]        AssertionFailedError    [CONTEXT]    public  static  Option  create(String  opt)  throws  IllegalArgumentException  {  Option  option  =  new  Option(opt,  description);  option.setLongOpt(longopt);  option.setRequired(required);  option.setOptionalArg(optionalArg);    [BUGGY]  option.setNumberOfArgs(numberOfArgs  +  1);  [BUGGY]    option.setType(type);  option.setValueSeparator(valuesep);  option.setArgName(argName);  OptionBuilder.reset();  return  option;  }  [CLASS]  OptionBuilder  [METHOD]  create  [RETURN_TYPE]  Option  String  opt  [VARIABLES]  boolean  hasArg  newRequired  optionalArg  required  OptionBuilder  instance  char  opt  sep  valuesep  Object  newType  type  Option  option  String  argName  description  longopt  name  newDescription  newLongopt  opt  int  num  numArgs  numberOfArgs  	projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java	0.3333333333333333	355	355	1	replace	option.setNumberOfArgs(numberOfArgs  +  1);	  option.setNumberOfArgs(numberOfArgs);    	non-compiled	[CE]  <identifier>  expected	1	None	replace
19	[BUG]  [BUGGY]  option.setNumberOfArgs(numberOfArgs  -  1);  [CE]  <identifier>  expected  [FE]          AssertionFailedError    [CONTEXT]    public  static  Option  create(String  opt)  throws  IllegalArgumentException  {  Option  option  =  new  Option(opt,  description);  option.setLongOpt(longopt);  option.setRequired(required);  option.setOptionalArg(optionalArg);    [BUGGY]  option.setNumberOfArgs(numberOfArgs  -  1);  [BUGGY]    option.setType(type);  option.setValueSeparator(valuesep);  option.setArgName(argName);  OptionBuilder.reset();  return  option;  }  [CLASS]  OptionBuilder  [METHOD]  create  [RETURN_TYPE]  Option  String  opt  [VARIABLES]  boolean  hasArg  newRequired  optionalArg  required  OptionBuilder  instance  char  opt  sep  valuesep  Object  newType  type  Option  option  String  argName  description  longopt  name  newDescription  newLongopt  opt  int  num  numArgs  numberOfArgs  	projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java	0.3333333333333333	355	355	1	replace	option.setNumberOfArgs(numberOfArgs  -  1);	  option.setNumberOfArgs(numberOfArgs);    	non-compiled	[CE]  <identifier>  expected	1	None	replace
20	[BUG]  [BUGGY]  OptionBuilder.setOptionalArg(optionalArg);  [CE]  <identifier>  expected  [FE]        AssertionFailedError    [CONTEXT]    public  static  Option  create(String  opt)  throws  IllegalArgumentException  {  Option  option  =  new  Option(opt,  description);  option.setLongOpt(longopt);  option.setRequired(required);  option.setOptionalArg(optionalArg);    [BUGGY]  OptionBuilder.setOptionalArg(optionalArg);  [BUGGY]    option.setArgs(numberOfArgs);  option.setType(type);  option.setValueSeparator(valuesep);  option.setArgName(argName);  OptionBuilder.reset();  return  option;  }  [CLASS]  OptionBuilder  [METHOD]  create  [RETURN_TYPE]  Option  String  opt  [VARIABLES]  boolean  hasArg  newRequired  optionalArg  required  OptionBuilder  instance  char  opt  sep  valuesep  Object  newType  type  Option  option  String  argName  description  longopt  name  newDescription  newLongopt  opt  int  num  numArgs  numberOfArgs  	projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java	0.3333333333333333	355	355	1	replace	OptionBuilder.setOptionalArg(optionalArg);	      OptionBuilder.reset();    	non-compiled	[CE]  <identifier>  expected	5	None	replace
21	[BUG]  [BUGGY]  OptionBuilder.setValues(numberOfArgs);  [CE]  <identifier>  expected  [FE]          AssertionFailedError    [CONTEXT]    public  static  Option  create(String  opt)  throws  IllegalArgumentException  {  Option  option  =  new  Option(opt,  description);  option.setLongOpt(longopt);  option.setRequired(required);  option.setOptionalArg(optionalArg);    [BUGGY]  OptionBuilder.setValues(numberOfArgs);  [BUGGY]    option.setArgs(numberOfArgs);  option.setType(type);  option.setValueSeparator(valuesep);  option.setArgName(argName);  OptionBuilder.reset();  return  option;  }  [CLASS]  OptionBuilder  [METHOD]  create  [RETURN_TYPE]  Option  String  opt  [VARIABLES]  boolean  hasArg  newRequired  optionalArg  required  OptionBuilder  instance  char  opt  sep  valuesep  Object  newType  type  Option  option  String  argName  description  longopt  name  newDescription  newLongopt  opt  int  num  numArgs  numberOfArgs  	projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java	0.3333333333333333	355	355	1	replace	OptionBuilder.setValues(numberOfArgs);	      OptionBuilder.reset();    	non-compiled	[CE]  <identifier>  expected	5	None	replace
22	[BUG]  [BUGGY]  OptionBuilder.setValueSeparator(valuesep);  [CE]  <identifier>  expected  [FE]            AssertionFailedError    [CONTEXT]    public  static  Option  create(String  opt)  throws  IllegalArgumentException  {  Option  option  =  new  Option(opt,  description);  option.setLongOpt(longopt);  option.setRequired(required);  option.setOptionalArg(optionalArg);    [BUGGY]  OptionBuilder.setValueSeparator(valuesep);  [BUGGY]    option.setArgs(numberOfArgs);  option.setType(type);  option.setValueSeparator(valuesep);  option.setArgName(argName);  OptionBuilder.reset();  return  option;  }  [CLASS]  OptionBuilder  [METHOD]  create  [RETURN_TYPE]  Option  String  opt  [VARIABLES]  boolean  hasArg  newRequired  optionalArg  required  OptionBuilder  instance  char  opt  sep  valuesep  Object  newType  type  Option  option  String  argName  description  longopt  name  newDescription  newLongopt  opt  int  num  numArgs  numberOfArgs  	projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java	0.3333333333333333	355	355	1	replace	OptionBuilder.setValueSeparator(valuesep);	      OptionBuilder.reset();    	non-compiled	[CE]  <identifier>  expected	5	None	replace
23	[BUG]  [BUGGY]  OptionBuilder.instance().addArg(optionalArg);  [CE]  <identifier>  expected  [FE]              AssertionFailedError    [CONTEXT]    public  static  Option  create(String  opt)  throws  IllegalArgumentException  {  Option  option  =  new  Option(opt,  description);  option.setLongOpt(longopt);  option.setRequired(required);  option.setOptionalArg(optionalArg);    [BUGGY]  OptionBuilder.instance().addArg(optionalArg);  [BUGGY]    option.setArgs(numberOfArgs);  option.setType(type);  option.setValueSeparator(valuesep);  option.setArgName(argName);  OptionBuilder.reset();  return  option;  }  [CLASS]  OptionBuilder  [METHOD]  create  [RETURN_TYPE]  Option  String  opt  [VARIABLES]  boolean  hasArg  newRequired  optionalArg  required  OptionBuilder  instance  char  opt  sep  valuesep  Object  newType  type  Option  option  String  argName  description  longopt  name  newDescription  newLongopt  opt  int  num  numArgs  numberOfArgs  	projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java	0.3333333333333333	355	355	1	replace	OptionBuilder.instance().addArg(optionalArg);	      OptionBuilder.instance().addOptionalArg(optionalArg);    	non-compiled	[CE]  <identifier>  expected	8	None	replace
24	[BUG]  [BUGGY]  OptionBuilder.instance().addOptionalArg(optionalArg,  description);  [CE]  <identifier>  expected  [FE]                AssertionFailedError    [CONTEXT]    public  static  Option  create(String  opt)  throws  IllegalArgumentException  {  Option  option  =  new  Option(opt,  description);  option.setLongOpt(longopt);  option.setRequired(required);  option.setOptionalArg(optionalArg);    [BUGGY]  OptionBuilder.instance().addOptionalArg(optionalArg,  description);  [BUGGY]    option.setArgs(numberOfArgs);  option.setType(type);  option.setValueSeparator(valuesep);  option.setArgName(argName);  OptionBuilder.reset();  return  option;  }  [CLASS]  OptionBuilder  [METHOD]  create  [RETURN_TYPE]  Option  String  opt  [VARIABLES]  boolean  hasArg  newRequired  optionalArg  required  OptionBuilder  instance  char  opt  sep  valuesep  Object  newType  type  Option  option  String  argName  description  longopt  name  newDescription  newLongopt  opt  int  num  numArgs  numberOfArgs  	projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java	0.3333333333333333	355	355	1	replace	OptionBuilder.instance().addOptionalArg(optionalArg,  description);	      OptionBuilder.instance().addOptionalArg(optionalArg);    	non-compiled	[CE]  <identifier>  expected	8	None	replace
25	[BUG]  [BUGGY]  option.setValueSeparator(valuesep);  [CE]  <identifier>  expected  [FE]        AssertionFailedError    [CONTEXT]    public  static  Option  create(String  opt)  throws  IllegalArgumentException  {  Option  option  =  new  Option(opt,  description);  option.setLongOpt(longopt);  option.setRequired(required);  option.setOptionalArg(optionalArg);    [BUGGY]  option.setValueSeparator(valuesep);  [BUGGY]    option.setType(type);  option.setValueSeparator(valuesep);  option.setArgName(argName);  OptionBuilder.reset();  return  option;  }  [CLASS]  OptionBuilder  [METHOD]  create  [RETURN_TYPE]  Option  String  opt  [VARIABLES]  boolean  hasArg  newRequired  optionalArg  required  OptionBuilder  instance  char  opt  sep  valuesep  Object  newType  type  Option  option  String  argName  description  longopt  name  newDescription  newLongopt  opt  int  num  numArgs  numberOfArgs  	projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java	0.3333333333333333	355	355	1	replace	option.setValueSeparator(valuesep);	  option.setArgName(argName);    	non-compiled	[CE]  <identifier>  expected	14	None	replace
26	[BUG]  [BUGGY]  option.setName(name);  [CE]  <identifier>  expected  [FE]          AssertionFailedError    [CONTEXT]    public  static  Option  create(String  opt)  throws  IllegalArgumentException  {  Option  option  =  new  Option(opt,  description);  option.setLongOpt(longopt);  option.setRequired(required);  option.setOptionalArg(optionalArg);    [BUGGY]  option.setName(name);  [BUGGY]    option.setType(type);  option.setValueSeparator(valuesep);  option.setArgName(argName);  OptionBuilder.reset();  return  option;  }  [CLASS]  OptionBuilder  [METHOD]  create  [RETURN_TYPE]  Option  String  opt  [VARIABLES]  boolean  hasArg  newRequired  optionalArg  required  OptionBuilder  instance  char  opt  sep  valuesep  Object  newType  type  Option  option  String  argName  description  longopt  name  newDescription  newLongopt  opt  int  num  numArgs  numberOfArgs  	projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java	0.3333333333333333	355	355	1	replace	option.setName(name);	  option.setArgName(argName);    	non-compiled	[CE]  <identifier>  expected	14	None	replace
27	[BUG]  [BUGGY]  OptionBuilder.append(optionalArg,  description);  [CE]  <identifier>  expected  [FE]        AssertionFailedError    [CONTEXT]    public  static  Option  create(String  opt)  throws  IllegalArgumentException  {  Option  option  =  new  Option(opt,  description);  option.setLongOpt(longopt);  option.setRequired(required);  option.setOptionalArg(optionalArg);    [BUGGY]  OptionBuilder.append(optionalArg,  description);  [BUGGY]    option.setArgs(numberOfArgs);  option.setType(type);  option.setValueSeparator(valuesep);  option.setArgName(argName);  OptionBuilder.reset();  return  option;  }  [CLASS]  OptionBuilder  [METHOD]  create  [RETURN_TYPE]  Option  String  opt  [VARIABLES]  boolean  hasArg  newRequired  optionalArg  required  OptionBuilder  instance  char  opt  sep  valuesep  Object  newType  type  Option  option  String  argName  description  longopt  name  newDescription  newLongopt  opt  int  num  numArgs  numberOfArgs  	projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java	0.3333333333333333	355	355	1	replace	OptionBuilder.append(optionalArg,  description);	      OptionBuilder.append(optionalArg);    	non-compiled	[CE]  <identifier>  expected	15	None	replace
28	[BUG]  [BUGGY]  OptionBuilder.append(optionalArg  +  1);  [CE]  <identifier>  expected  [FE]          AssertionFailedError    [CONTEXT]    public  static  Option  create(String  opt)  throws  IllegalArgumentException  {  Option  option  =  new  Option(opt,  description);  option.setLongOpt(longopt);  option.setRequired(required);  option.setOptionalArg(optionalArg);    [BUGGY]  OptionBuilder.append(optionalArg  +  1);  [BUGGY]    option.setArgs(numberOfArgs);  option.setType(type);  option.setValueSeparator(valuesep);  option.setArgName(argName);  OptionBuilder.reset();  return  option;  }  [CLASS]  OptionBuilder  [METHOD]  create  [RETURN_TYPE]  Option  String  opt  [VARIABLES]  boolean  hasArg  newRequired  optionalArg  required  OptionBuilder  instance  char  opt  sep  valuesep  Object  newType  type  Option  option  String  argName  description  longopt  name  newDescription  newLongopt  opt  int  num  numArgs  numberOfArgs  	projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java	0.3333333333333333	355	355	1	replace	OptionBuilder.append(optionalArg  +  1);	      OptionBuilder.append(optionalArg);    	non-compiled	[CE]  <identifier>  expected	15	None	replace
29	[BUG]  [BUGGY]  OptionBuilder.append(newDescription);  [CE]  <identifier>  expected  [FE]            AssertionFailedError    [CONTEXT]    public  static  Option  create(String  opt)  throws  IllegalArgumentException  {  Option  option  =  new  Option(opt,  description);  option.setLongOpt(longopt);  option.setRequired(required);  option.setOptionalArg(optionalArg);    [BUGGY]  OptionBuilder.append(newDescription);  [BUGGY]    option.setArgs(numberOfArgs);  option.setType(type);  option.setValueSeparator(valuesep);  option.setArgName(argName);  OptionBuilder.reset();  return  option;  }  [CLASS]  OptionBuilder  [METHOD]  create  [RETURN_TYPE]  Option  String  opt  [VARIABLES]  boolean  hasArg  newRequired  optionalArg  required  OptionBuilder  instance  char  opt  sep  valuesep  Object  newType  type  Option  option  String  argName  description  longopt  name  newDescription  newLongopt  opt  int  num  numArgs  numberOfArgs  	projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java	0.3333333333333333	355	355	1	replace	OptionBuilder.append(newDescription);	      OptionBuilder.append(optionalArg);    	non-compiled	[CE]  <identifier>  expected	15	None	replace
30	[BUG]  [BUGGY]  option.setOptionalArg(hasArg);  [CE]  <identifier>  expected  [FE]            AssertionFailedError    [CONTEXT]    public  static  Option  create(String  opt)  throws  IllegalArgumentException  {  Option  option  =  new  Option(opt,  description);  option.setLongOpt(longopt);  option.setRequired(required);  option.setOptionalArg(optionalArg);    [BUGGY]  option.setOptionalArg(hasArg);  [BUGGY]    option.setArgs(numberOfArgs);  option.setType(type);  option.setValueSeparator(valuesep);  option.setArgName(argName);  OptionBuilder.reset();  return  option;  }  [CLASS]  OptionBuilder  [METHOD]  create  [RETURN_TYPE]  Option  String  opt  [VARIABLES]  boolean  hasArg  newRequired  optionalArg  required  OptionBuilder  instance  char  opt  sep  valuesep  Object  newType  type  Option  option  String  argName  description  longopt  name  newDescription  newLongopt  opt  int  num  numArgs  numberOfArgs  	projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java	0.3333333333333333	355	355	1	replace	option.setOptionalArg(hasArg);	      option.setOptionalArg(optionalArg);    	non-compiled	[CE]  <identifier>  expected	7	None	replace
31	[BUG]  [BUGGY]  OptionBuilder.init(optionalArg);  [CE]  <identifier>  expected  [FE]        AssertionFailedError    [CONTEXT]    public  static  Option  create(String  opt)  throws  IllegalArgumentException  {  Option  option  =  new  Option(opt,  description);  option.setLongOpt(longopt);  option.setRequired(required);  option.setOptionalArg(optionalArg);    [BUGGY]  OptionBuilder.init(optionalArg);  [BUGGY]    option.setArgs(numberOfArgs);  option.setType(type);  option.setValueSeparator(valuesep);  option.setArgName(argName);  OptionBuilder.reset();  return  option;  }  [CLASS]  OptionBuilder  [METHOD]  create  [RETURN_TYPE]  Option  String  opt  [VARIABLES]  boolean  hasArg  newRequired  optionalArg  required  OptionBuilder  instance  char  opt  sep  valuesep  Object  newType  type  Option  option  String  argName  description  longopt  name  newDescription  newLongopt  opt  int  num  numArgs  numberOfArgs  	projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java	0.3333333333333333	355	355	1	replace	OptionBuilder.init(optionalArg);	      OptionBuilder.reset();    	non-compiled	[CE]  <identifier>  expected	5	None	replace
32	[BUG]  [BUGGY]  OptionBuilder.setArgName(argName);  [CE]  <identifier>  expected  [FE]          AssertionFailedError    [CONTEXT]    public  static  Option  create(String  opt)  throws  IllegalArgumentException  {  Option  option  =  new  Option(opt,  description);  option.setLongOpt(longopt);  option.setRequired(required);  option.setOptionalArg(optionalArg);    [BUGGY]  OptionBuilder.setArgName(argName);  [BUGGY]    option.setArgs(numberOfArgs);  option.setType(type);  option.setValueSeparator(valuesep);  option.setArgName(argName);  OptionBuilder.reset();  return  option;  }  [CLASS]  OptionBuilder  [METHOD]  create  [RETURN_TYPE]  Option  String  opt  [VARIABLES]  boolean  hasArg  newRequired  optionalArg  required  OptionBuilder  instance  char  opt  sep  valuesep  Object  newType  type  Option  option  String  argName  description  longopt  name  newDescription  newLongopt  opt  int  num  numArgs  numberOfArgs  	projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java	0.3333333333333333	355	355	1	replace	OptionBuilder.setArgName(argName);	      OptionBuilder.reset();    	non-compiled	[CE]  <identifier>  expected	5	None	replace
33	[BUG]  [BUGGY]  OptionBuilder.instance.setDescription(description);  [CE]  <identifier>  expected  [FE]                AssertionFailedError    [CONTEXT]    public  static  Option  create(String  opt)  throws  IllegalArgumentException  {  Option  option  =  new  Option(opt,  description);  option.setLongOpt(longopt);  option.setRequired(required);  option.setOptionalArg(optionalArg);    [BUGGY]  OptionBuilder.instance.setDescription(description);  [BUGGY]    option.setArgs(numberOfArgs);  option.setType(type);  option.setValueSeparator(valuesep);  option.setArgName(argName);  OptionBuilder.reset();  return  option;  }  [CLASS]  OptionBuilder  [METHOD]  create  [RETURN_TYPE]  Option  String  opt  [VARIABLES]  boolean  hasArg  newRequired  optionalArg  required  OptionBuilder  instance  char  opt  sep  valuesep  Object  newType  type  Option  option  String  argName  description  longopt  name  newDescription  newLongopt  opt  int  num  numArgs  numberOfArgs  	projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java	0.3333333333333333	355	355	1	replace	OptionBuilder.instance.setDescription(description);	      OptionBuilder.reset();    option.setDescription(description);    	non-compiled	[CE]  <identifier>  expected	9	None	replace
34	[BUG]  [BUGGY]  OptionBuilder.append(opt);  [CE]  <identifier>  expected  [FE]        AssertionFailedError    [CONTEXT]    public  static  Option  create(String  opt)  throws  IllegalArgumentException  {  Option  option  =  new  Option(opt,  description);  option.setLongOpt(longopt);  option.setRequired(required);  option.setOptionalArg(optionalArg);    [BUGGY]  OptionBuilder.append(opt);  [BUGGY]    option.setArgs(numberOfArgs);  option.setType(type);  option.setValueSeparator(valuesep);  option.setArgName(argName);  OptionBuilder.reset();  return  option;  }  [CLASS]  OptionBuilder  [METHOD]  create  [RETURN_TYPE]  Option  String  opt  [VARIABLES]  boolean  hasArg  newRequired  optionalArg  required  OptionBuilder  instance  char  opt  sep  valuesep  Object  newType  type  Option  option  String  argName  description  longopt  name  newDescription  newLongopt  opt  int  num  numArgs  numberOfArgs  	projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java	0.3333333333333333	355	355	1	replace	OptionBuilder.append(opt);	      OptionBuilder.append(optionalArg);    	non-compiled	[CE]  <identifier>  expected	15	None	replace
35	[BUG]  [BUGGY]  OptionBuilder.setNumeric(numberOfArgs);  [CE]  <identifier>  expected  [FE]        AssertionFailedError    [CONTEXT]    public  static  Option  create(String  opt)  throws  IllegalArgumentException  {  Option  option  =  new  Option(opt,  description);  option.setLongOpt(longopt);  option.setRequired(required);  option.setOptionalArg(optionalArg);    [BUGGY]  OptionBuilder.setNumeric(numberOfArgs);  [BUGGY]    option.setArgs(numberOfArgs);  option.setType(type);  option.setValueSeparator(valuesep);  option.setArgName(argName);  OptionBuilder.reset();  return  option;  }  [CLASS]  OptionBuilder  [METHOD]  create  [RETURN_TYPE]  Option  String  opt  [VARIABLES]  boolean  hasArg  newRequired  optionalArg  required  OptionBuilder  instance  char  opt  sep  valuesep  Object  newType  type  Option  option  String  argName  description  longopt  name  newDescription  newLongopt  opt  int  num  numArgs  numberOfArgs  	projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java	0.3333333333333333	355	355	1	replace	OptionBuilder.setNumeric(numberOfArgs);	      option.setNumeric(numberOfArgs);    	non-compiled	[CE]  <identifier>  expected	11	None	replace
36	[BUG]  [BUGGY]  option.setType(type);  [CE]  <identifier>  expected  [FE]              AssertionFailedError    [CONTEXT]    public  static  Option  create(String  opt)  throws  IllegalArgumentException  {  Option  option  =  new  Option(opt,  description);  option.setLongOpt(longopt);  option.setRequired(required);  option.setOptionalArg(optionalArg);    [BUGGY]  option.setType(type);  [BUGGY]    option.setType(type);  option.setValueSeparator(valuesep);  option.setArgName(argName);  OptionBuilder.reset();  return  option;  }  [CLASS]  OptionBuilder  [METHOD]  create  [RETURN_TYPE]  Option  String  opt  [VARIABLES]  boolean  hasArg  newRequired  optionalArg  required  OptionBuilder  instance  char  opt  sep  valuesep  Object  newType  type  Option  option  String  argName  description  longopt  name  newDescription  newLongopt  opt  int  num  numArgs  numberOfArgs  	projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java	0.3333333333333333	355	355	1	replace	option.setType(type);	      	non-compiled	[CE]  <identifier>  expected	4	None	replace
37	[BUG]  [BUGGY]  OptionBuilder.addOption(optionalOptionalArg);  [CE]  <identifier>  expected  [FE]                AssertionFailedError    [CONTEXT]    public  static  Option  create(String  opt)  throws  IllegalArgumentException  {  Option  option  =  new  Option(opt,  description);  option.setLongOpt(longopt);  option.setRequired(required);  option.setOptionalArg(optionalArg);    [BUGGY]  OptionBuilder.addOption(optionalOptionalArg);  [BUGGY]    option.setType(type);  option.setValueSeparator(valuesep);  option.setArgName(argName);  OptionBuilder.reset();  return  option;  }  [CLASS]  OptionBuilder  [METHOD]  create  [RETURN_TYPE]  Option  String  opt  [VARIABLES]  boolean  hasArg  newRequired  optionalArg  required  OptionBuilder  instance  char  opt  sep  valuesep  Object  newType  type  Option  option  String  argName  description  longopt  name  newDescription  newLongopt  opt  int  num  numArgs  numberOfArgs  	projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java	0.3333333333333333	355	355	1	replace	OptionBuilder.addOption(optionalOptionalArg);	      	non-compiled	[CE]  <identifier>  expected	4	None	replace
38	[BUG]  [BUGGY]  option.setName(argName);  [CE]  <identifier>  expected  [FE]        AssertionFailedError    [CONTEXT]    public  static  Option  create(String  opt)  throws  IllegalArgumentException  {  Option  option  =  new  Option(opt,  description);  option.setLongOpt(longopt);  option.setRequired(required);  option.setOptionalArg(optionalArg);    [BUGGY]  option.setName(argName);  [BUGGY]    option.setType(type);  option.setValueSeparator(valuesep);  option.setArgName(argName);  OptionBuilder.reset();  return  option;  }  [CLASS]  OptionBuilder  [METHOD]  create  [RETURN_TYPE]  Option  String  opt  [VARIABLES]  boolean  hasArg  newRequired  optionalArg  required  OptionBuilder  instance  char  opt  sep  valuesep  Object  newType  type  Option  option  String  argName  description  longopt  name  newDescription  newLongopt  opt  int  num  numArgs  numberOfArgs  	projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java	0.3333333333333333	355	355	1	replace	option.setName(argName);	  option.setArgName(argName);    	non-compiled	[CE]  <identifier>  expected	14	None	replace
39	[BUG]  [BUGGY]  OptionBuilder.setNumericArgs(numberOfArgs);  [CE]  <identifier>  expected  [FE]        AssertionFailedError    [CONTEXT]    public  static  Option  create(String  opt)  throws  IllegalArgumentException  {  Option  option  =  new  Option(opt,  description);  option.setLongOpt(longopt);  option.setRequired(required);  option.setOptionalArg(optionalArg);    [BUGGY]  OptionBuilder.setNumericArgs(numberOfArgs);  [BUGGY]    option.setType(type);  option.setValueSeparator(valuesep);  option.setArgName(argName);  OptionBuilder.reset();  return  option;  }  [CLASS]  OptionBuilder  [METHOD]  create  [RETURN_TYPE]  Option  String  opt  [VARIABLES]  boolean  hasArg  newRequired  optionalArg  required  OptionBuilder  instance  char  opt  sep  valuesep  Object  newType  type  Option  option  String  argName  description  longopt  name  newDescription  newLongopt  opt  int  num  numArgs  numberOfArgs  	projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java	0.3333333333333333	355	355	1	replace	OptionBuilder.setNumericArgs(numberOfArgs);	  option.setNumericArgs(numberOfArgs);    	non-compiled	[CE]  <identifier>  expected	10	None	replace
40	[BUG]  [BUGGY]  OptionBuilder.setNumberOfArgs(numberOfArgs);  [CE]  <identifier>  expected  [FE]        AssertionFailedError    [CONTEXT]    public  static  Option  create(String  opt)  throws  IllegalArgumentException  {  Option  option  =  new  Option(opt,  description);  option.setLongOpt(longopt);  option.setRequired(required);  option.setOptionalArg(optionalArg);    [BUGGY]  OptionBuilder.setNumberOfArgs(numberOfArgs);  [BUGGY]    option.setType(type);  option.setValueSeparator(valuesep);  option.setArgName(argName);  OptionBuilder.reset();  return  option;  }  [CLASS]  OptionBuilder  [METHOD]  create  [RETURN_TYPE]  Option  String  opt  [VARIABLES]  boolean  hasArg  newRequired  optionalArg  required  OptionBuilder  instance  char  opt  sep  valuesep  Object  newType  type  Option  option  String  argName  description  longopt  name  newDescription  newLongopt  opt  int  num  numArgs  numberOfArgs  	projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java	0.3333333333333333	355	355	1	replace	OptionBuilder.setNumberOfArgs(numberOfArgs);	  option.setNumberOfArgs(numberOfArgs);    	non-compiled	[CE]  <identifier>  expected	1	None	replace
41	[BUG]  [BUGGY]  OptionBuilder.clear();  option.setDescription(description);  [CE]  <identifier>  expected  [FE]                AssertionFailedError    [CONTEXT]    public  static  Option  create(String  opt)  throws  IllegalArgumentException  {  Option  option  =  new  Option(opt,  description);  option.setLongOpt(longopt);  option.setRequired(required);  option.setOptionalArg(optionalArg);    [BUGGY]  OptionBuilder.clear();  option.setDescription(description);  [BUGGY]    option.setArgs(numberOfArgs);  option.setType(type);  option.setValueSeparator(valuesep);  option.setArgName(argName);  OptionBuilder.reset();  return  option;  }  [CLASS]  OptionBuilder  [METHOD]  create  [RETURN_TYPE]  Option  String  opt  [VARIABLES]  boolean  hasArg  newRequired  optionalArg  required  OptionBuilder  instance  char  opt  sep  valuesep  Object  newType  type  Option  option  String  argName  description  longopt  name  newDescription  newLongopt  opt  int  num  numArgs  numberOfArgs  	projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java	0.3333333333333333	355	355	1	replace	OptionBuilder.clear();  option.setDescription(description);	      OptionBuilder.reset();    option.setDescription(description);    	non-compiled	[CE]  <identifier>  expected	9	None	replace
42	[BUG]  [BUGGY]  OptionBuilder.instance.setValue(valuesep);  [CE]  <identifier>  expected  [FE]            AssertionFailedError    [CONTEXT]    public  static  Option  create(String  opt)  throws  IllegalArgumentException  {  Option  option  =  new  Option(opt,  description);  option.setLongOpt(longopt);  option.setRequired(required);  option.setOptionalArg(optionalArg);    [BUGGY]  OptionBuilder.instance.setValue(valuesep);  [BUGGY]    option.setArgs(numberOfArgs);  option.setType(type);  option.setValueSeparator(valuesep);  option.setArgName(argName);  OptionBuilder.reset();  return  option;  }  [CLASS]  OptionBuilder  [METHOD]  create  [RETURN_TYPE]  Option  String  opt  [VARIABLES]  boolean  hasArg  newRequired  optionalArg  required  OptionBuilder  instance  char  opt  sep  valuesep  Object  newType  type  Option  option  String  argName  description  longopt  name  newDescription  newLongopt  opt  int  num  numArgs  numberOfArgs  	projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java	0.3333333333333333	355	355	1	replace	OptionBuilder.instance.setValue(valuesep);	      OptionBuilder.instance.setType(type);    	non-compiled	[CE]  <identifier>  expected	13	None	replace
43	[BUG]  [BUGGY]  if(hasArg)  {  option.setType(type);  }  [CE]  <identifier>  expected  [FE]              AssertionFailedError    [CONTEXT]    public  static  Option  create(String  opt)  throws  IllegalArgumentException  {  Option  option  =  new  Option(opt,  description);  option.setLongOpt(longopt);  option.setRequired(required);  option.setOptionalArg(optionalArg);    [BUGGY]  if(hasArg)  {  option.setType(type);  }  [BUGGY]    option.setType(type);  option.setValueSeparator(valuesep);  option.setArgName(argName);  OptionBuilder.reset();  return  option;  }  [CLASS]  OptionBuilder  [METHOD]  create  [RETURN_TYPE]  Option  String  opt  [VARIABLES]  boolean  hasArg  newRequired  optionalArg  required  OptionBuilder  instance  char  opt  sep  valuesep  Object  newType  type  Option  option  String  argName  description  longopt  name  newDescription  newLongopt  opt  int  num  numArgs  numberOfArgs  	projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java	0.3333333333333333	355	355	1	replace	if(hasArg)  {  option.setType(type);  }	      	non-compiled	[CE]  <identifier>  expected	4	None	replace
44	[BUG]  [BUGGY]  if(hasArg)  {  option.setType(type);  option.setValueSeparator(valuesep);  }  [CE]  <identifier>  expected  [FE]                AssertionFailedError    [CONTEXT]    public  static  Option  create(String  opt)  throws  IllegalArgumentException  {  Option  option  =  new  Option(opt,  description);  option.setLongOpt(longopt);  option.setRequired(required);  option.setOptionalArg(optionalArg);    [BUGGY]  if(hasArg)  {  option.setType(type);  option.setValueSeparator(valuesep);  }  [BUGGY]    option.setType(type);  option.setValueSeparator(valuesep);  option.setArgName(argName);  OptionBuilder.reset();  return  option;  }  [CLASS]  OptionBuilder  [METHOD]  create  [RETURN_TYPE]  Option  String  opt  [VARIABLES]  boolean  hasArg  newRequired  optionalArg  required  OptionBuilder  instance  char  opt  sep  valuesep  Object  newType  type  Option  option  String  argName  description  longopt  name  newDescription  newLongopt  opt  int  num  numArgs  numberOfArgs  	projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java	0.3333333333333333	355	355	1	replace	if(hasArg)  {  option.setType(type);  option.setValueSeparator(valuesep);  }	      	non-compiled	[CE]  <identifier>  expected	4	None	replace
45	[BUG]  [BUGGY]  if(hasArg)  {  option.setType(type);  }  else  {  OptionBuilder.reset();  }  [CE]  <identifier>  expected  [FE]                  AssertionFailedError    [CONTEXT]    public  static  Option  create(String  opt)  throws  IllegalArgumentException  {  Option  option  =  new  Option(opt,  description);  option.setLongOpt(longopt);  option.setRequired(required);  option.setOptionalArg(optionalArg);    [BUGGY]  if(hasArg)  {  option.setType(type);  }  else  {  OptionBuilder.reset();  }  [BUGGY]    option.setType(type);  option.setValueSeparator(valuesep);  option.setArgName(argName);  OptionBuilder.reset();  return  option;  }  [CLASS]  OptionBuilder  [METHOD]  create  [RETURN_TYPE]  Option  String  opt  [VARIABLES]  boolean  hasArg  newRequired  optionalArg  required  OptionBuilder  instance  char  opt  sep  valuesep  Object  newType  type  Option  option  String  argName  description  longopt  name  newDescription  newLongopt  opt  int  num  numArgs  numberOfArgs  	projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java	0.3333333333333333	355	355	1	replace	if(hasArg)  {  option.setType(type);  }  else  {  OptionBuilder.reset();  }	      	non-compiled	[CE]  <identifier>  expected	4	None	replace
46	[BUG]  [BUGGY]  OptionBuilder.addOptionalArg(optionalArg,  description);  [CE]  <identifier>  expected  [FE]          AssertionFailedError    [CONTEXT]    public  static  Option  create(String  opt)  throws  IllegalArgumentException  {  Option  option  =  new  Option(opt,  description);  option.setLongOpt(longopt);  option.setRequired(required);  option.setOptionalArg(optionalArg);    [BUGGY]  OptionBuilder.addOptionalArg(optionalArg,  description);  [BUGGY]    option.setArgs(numberOfArgs);  option.setType(type);  option.setValueSeparator(valuesep);  option.setArgName(argName);  OptionBuilder.reset();  return  option;  }  [CLASS]  OptionBuilder  [METHOD]  create  [RETURN_TYPE]  Option  String  opt  [VARIABLES]  boolean  hasArg  newRequired  optionalArg  required  OptionBuilder  instance  char  opt  sep  valuesep  Object  newType  type  Option  option  String  argName  description  longopt  name  newDescription  newLongopt  opt  int  num  numArgs  numberOfArgs  	projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java	0.3333333333333333	355	355	1	replace	OptionBuilder.addOptionalArg(optionalArg,  description);	      OptionBuilder.addOptional(optionalArg);    	non-compiled	[CE]  <identifier>  expected	12	None	replace
47	[BUG]  [BUGGY]  OptionBuilder.instance().addArg(argName);  [CE]  <identifier>  expected  [FE]              AssertionFailedError    [CONTEXT]    public  static  Option  create(String  opt)  throws  IllegalArgumentException  {  Option  option  =  new  Option(opt,  description);  option.setLongOpt(longopt);  option.setRequired(required);  option.setOptionalArg(optionalArg);    [BUGGY]  OptionBuilder.instance().addArg(argName);  [BUGGY]    option.setArgs(numberOfArgs);  option.setType(type);  option.setValueSeparator(valuesep);  option.setArgName(argName);  OptionBuilder.reset();  return  option;  }  [CLASS]  OptionBuilder  [METHOD]  create  [RETURN_TYPE]  Option  String  opt  [VARIABLES]  boolean  hasArg  newRequired  optionalArg  required  OptionBuilder  instance  char  opt  sep  valuesep  Object  newType  type  Option  option  String  argName  description  longopt  name  newDescription  newLongopt  opt  int  num  numArgs  numberOfArgs  	projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java	0.3333333333333333	355	355	1	replace	OptionBuilder.instance().addArg(argName);	      OptionBuilder.instance().addOptionalArg(optionalArg);    	non-compiled	[CE]  <identifier>  expected	8	None	replace
48	[BUG]  [BUGGY]  OptionBuilder.instance().setValue(valuesep);  [CE]  <identifier>  expected  [FE]          AssertionFailedError    [CONTEXT]    public  static  Option  create(String  opt)  throws  IllegalArgumentException  {  Option  option  =  new  Option(opt,  description);  option.setLongOpt(longopt);  option.setRequired(required);  option.setOptionalArg(optionalArg);    [BUGGY]  OptionBuilder.instance().setValue(valuesep);  [BUGGY]    option.setArgs(numberOfArgs);  option.setType(type);  option.setValueSeparator(valuesep);  option.setArgName(argName);  OptionBuilder.reset();  return  option;  }  [CLASS]  OptionBuilder  [METHOD]  create  [RETURN_TYPE]  Option  String  opt  [VARIABLES]  boolean  hasArg  newRequired  optionalArg  required  OptionBuilder  instance  char  opt  sep  valuesep  Object  newType  type  Option  option  String  argName  description  longopt  name  newDescription  newLongopt  opt  int  num  numArgs  numberOfArgs  	projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java	0.3333333333333333	355	355	1	replace	OptionBuilder.instance().setValue(valuesep);	      OptionBuilder.instance().setType(type);    	non-compiled	[CE]  <identifier>  expected	16	None	replace
