bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  option.setNumberOfArgs(numberOfArgs);  [CE]  <identifier>  expected  [FE]    AssertionFailedError  [CONTEXT]  public  static  Option  create(String  opt)  throws  IllegalArgumentException  {  Option  option  =  new  Option(opt,  description);  option.setLongOpt(longopt);  option.setRequired(required);  option.setOptionalArg(optionalArg);  [BUGGY]  option.setNumberOfArgs(numberOfArgs);  [BUGGY]  option.setType(type);  option.setValueSeparator(valuesep);  option.setArgName(argName);  OptionBuilder.reset();  return  option;  }  [CLASS]  OptionBuilder  [METHOD]  create  [RETURN_TYPE]  Option  String  opt  [VARIABLES]  boolean  hasArg  newRequired  optionalArg  required  OptionBuilder  instance  char  opt  sep  valuesep  Object  newType  type  Option  option  String  argName  description  longopt  name  newDescription  newLongopt  opt  int  num  numArgs  numberOfArgs  	projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java	0.3333333333333333	355	355	1	replace	option.setNumberOfArgs(numberOfArgs);	option.setArgs(numberOfArgs);  	non-compiled	[CE]  <identifier>  expected	39	None	replace
2	[BUG]  [BUGGY]  option.setArgs(numberOfArgs  +  1);  [CE]  <identifier>  expected  [FE]      AssertionFailedError  [CONTEXT]  public  static  Option  create(String  opt)  throws  IllegalArgumentException  {  Option  option  =  new  Option(opt,  description);  option.setLongOpt(longopt);  option.setRequired(required);  option.setOptionalArg(optionalArg);  [BUGGY]  option.setArgs(numberOfArgs  +  1);  [BUGGY]  option.setType(type);  option.setValueSeparator(valuesep);  option.setArgName(argName);  OptionBuilder.reset();  return  option;  }  [CLASS]  OptionBuilder  [METHOD]  create  [RETURN_TYPE]  Option  String  opt  [VARIABLES]  boolean  hasArg  newRequired  optionalArg  required  OptionBuilder  instance  char  opt  sep  valuesep  Object  newType  type  Option  option  String  argName  description  longopt  name  newDescription  newLongopt  opt  int  num  numArgs  numberOfArgs  	projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java	0.3333333333333333	355	355	1	replace	option.setArgs(numberOfArgs  +  1);	option.setArgs(numberOfArgs);  	non-compiled	[CE]  <identifier>  expected	39	None	replace
3	[BUG]  [BUGGY]  option.setArgs(numberOfArgs  -  1);  [CE]  <identifier>  expected  [FE]        AssertionFailedError  [CONTEXT]  public  static  Option  create(String  opt)  throws  IllegalArgumentException  {  Option  option  =  new  Option(opt,  description);  option.setLongOpt(longopt);  option.setRequired(required);  option.setOptionalArg(optionalArg);  [BUGGY]  option.setArgs(numberOfArgs  -  1);  [BUGGY]  option.setType(type);  option.setValueSeparator(valuesep);  option.setArgName(argName);  OptionBuilder.reset();  return  option;  }  [CLASS]  OptionBuilder  [METHOD]  create  [RETURN_TYPE]  Option  String  opt  [VARIABLES]  boolean  hasArg  newRequired  optionalArg  required  OptionBuilder  instance  char  opt  sep  valuesep  Object  newType  type  Option  option  String  argName  description  longopt  name  newDescription  newLongopt  opt  int  num  numArgs  numberOfArgs  	projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java	0.3333333333333333	355	355	1	replace	option.setArgs(numberOfArgs  -  1);	option.setArgs(numberOfArgs);  	non-compiled	[CE]  <identifier>  expected	39	None	replace
4	[BUG]  [BUGGY]    [CE]  <identifier>  expected  [FE]          AssertionFailedError  [CONTEXT]  public  static  Option  create(String  opt)  throws  IllegalArgumentException  {  Option  option  =  new  Option(opt,  description);  option.setLongOpt(longopt);  option.setRequired(required);  option.setOptionalArg(optionalArg);  [BUGGY]    [BUGGY]  option.setType(type);  option.setValueSeparator(valuesep);  option.setArgName(argName);  OptionBuilder.reset();  return  option;  }  [CLASS]  OptionBuilder  [METHOD]  create  [RETURN_TYPE]  Option  String  opt  [VARIABLES]  boolean  hasArg  newRequired  optionalArg  required  OptionBuilder  instance  char  opt  sep  valuesep  Object  newType  type  Option  option  String  argName  description  longopt  name  newDescription  newLongopt  opt  int  num  numArgs  numberOfArgs  	projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java	0.3333333333333333	355	355	1	replace	  	option.setArgs(numberOfArgs);  	non-compiled	[CE]  <identifier>  expected	39	None	replace
5	[BUG]  [BUGGY]    OptionBuilder.reset();  [CE]  <identifier>  expected  [FE]    AssertionFailedError  [CONTEXT]  public  static  Option  create(String  opt)  throws  IllegalArgumentException  {  Option  option  =  new  Option(opt,  description);  option.setLongOpt(longopt);  option.setRequired(required);  option.setOptionalArg(optionalArg);  [BUGGY]    OptionBuilder.reset();  [BUGGY]  option.setArgs(numberOfArgs);  option.setType(type);  option.setValueSeparator(valuesep);  option.setArgName(argName);  OptionBuilder.reset();  return  option;  }  [CLASS]  OptionBuilder  [METHOD]  create  [RETURN_TYPE]  Option  String  opt  [VARIABLES]  boolean  hasArg  newRequired  optionalArg  required  OptionBuilder  instance  char  opt  sep  valuesep  Object  newType  type  Option  option  String  argName  description  longopt  name  newDescription  newLongopt  opt  int  num  numArgs  numberOfArgs  	projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java	0.3333333333333333	355	355	1	replace	    OptionBuilder.reset();		non-compiled	[CE]  <identifier>  expected	40	None	add
6	[BUG]  [BUGGY]    option.setDescription(description);  [CE]  <identifier>  expected  [FE]      AssertionFailedError  [CONTEXT]  public  static  Option  create(String  opt)  throws  IllegalArgumentException  {  Option  option  =  new  Option(opt,  description);  option.setLongOpt(longopt);  option.setRequired(required);  option.setOptionalArg(optionalArg);  [BUGGY]    option.setDescription(description);  [BUGGY]  option.setArgs(numberOfArgs);  option.setType(type);  option.setValueSeparator(valuesep);  option.setArgName(argName);  OptionBuilder.reset();  return  option;  }  [CLASS]  OptionBuilder  [METHOD]  create  [RETURN_TYPE]  Option  String  opt  [VARIABLES]  boolean  hasArg  newRequired  optionalArg  required  OptionBuilder  instance  char  opt  sep  valuesep  Object  newType  type  Option  option  String  argName  description  longopt  name  newDescription  newLongopt  opt  int  num  numArgs  numberOfArgs  	projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java	0.3333333333333333	355	355	1	replace	    option.setDescription(description);		non-compiled	[CE]  <identifier>  expected	40	None	add
7	[BUG]  [BUGGY]    option.setOptionalArg(optionalArg);  [CE]  <identifier>  expected  [FE]        AssertionFailedError  [CONTEXT]  public  static  Option  create(String  opt)  throws  IllegalArgumentException  {  Option  option  =  new  Option(opt,  description);  option.setLongOpt(longopt);  option.setRequired(required);  option.setOptionalArg(optionalArg);  [BUGGY]    option.setOptionalArg(optionalArg);  [BUGGY]  option.setArgs(numberOfArgs);  option.setType(type);  option.setValueSeparator(valuesep);  option.setArgName(argName);  OptionBuilder.reset();  return  option;  }  [CLASS]  OptionBuilder  [METHOD]  create  [RETURN_TYPE]  Option  String  opt  [VARIABLES]  boolean  hasArg  newRequired  optionalArg  required  OptionBuilder  instance  char  opt  sep  valuesep  Object  newType  type  Option  option  String  argName  description  longopt  name  newDescription  newLongopt  opt  int  num  numArgs  numberOfArgs  	projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java	0.3333333333333333	355	355	1	replace	    option.setOptionalArg(optionalArg);		non-compiled	[CE]  <identifier>  expected	40	None	add
8	[BUG]  [BUGGY]    OptionBuilder.instance().addOptionalArg(optionalArg);  [CE]  <identifier>  expected  [FE]          AssertionFailedError  [CONTEXT]  public  static  Option  create(String  opt)  throws  IllegalArgumentException  {  Option  option  =  new  Option(opt,  description);  option.setLongOpt(longopt);  option.setRequired(required);  option.setOptionalArg(optionalArg);  [BUGGY]    OptionBuilder.instance().addOptionalArg(optionalArg);  [BUGGY]  option.setArgs(numberOfArgs);  option.setType(type);  option.setValueSeparator(valuesep);  option.setArgName(argName);  OptionBuilder.reset();  return  option;  }  [CLASS]  OptionBuilder  [METHOD]  create  [RETURN_TYPE]  Option  String  opt  [VARIABLES]  boolean  hasArg  newRequired  optionalArg  required  OptionBuilder  instance  char  opt  sep  valuesep  Object  newType  type  Option  option  String  argName  description  longopt  name  newDescription  newLongopt  opt  int  num  numArgs  numberOfArgs  	projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java	0.3333333333333333	355	355	1	replace	    OptionBuilder.instance().addOptionalArg(optionalArg);		non-compiled	[CE]  <identifier>  expected	40	None	add
9	[BUG]  [BUGGY]    OptionBuilder.reset();  option.setDescription(description);  [CE]  <identifier>  expected  [FE]            AssertionFailedError  [CONTEXT]  public  static  Option  create(String  opt)  throws  IllegalArgumentException  {  Option  option  =  new  Option(opt,  description);  option.setLongOpt(longopt);  option.setRequired(required);  option.setOptionalArg(optionalArg);  [BUGGY]    OptionBuilder.reset();  option.setDescription(description);  [BUGGY]  option.setArgs(numberOfArgs);  option.setType(type);  option.setValueSeparator(valuesep);  option.setArgName(argName);  OptionBuilder.reset();  return  option;  }  [CLASS]  OptionBuilder  [METHOD]  create  [RETURN_TYPE]  Option  String  opt  [VARIABLES]  boolean  hasArg  newRequired  optionalArg  required  OptionBuilder  instance  char  opt  sep  valuesep  Object  newType  type  Option  option  String  argName  description  longopt  name  newDescription  newLongopt  opt  int  num  numArgs  numberOfArgs  	projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java	0.3333333333333333	355	355	1	replace	    OptionBuilder.reset();  option.setDescription(description);		non-compiled	[CE]  <identifier>  expected	40	None	add
10	[BUG]  [BUGGY]  option.setNumericArgs(numberOfArgs);  [CE]  <identifier>  expected  [FE]    AssertionFailedError  [CONTEXT]  public  static  Option  create(String  opt)  throws  IllegalArgumentException  {  Option  option  =  new  Option(opt,  description);  option.setLongOpt(longopt);  option.setRequired(required);  option.setOptionalArg(optionalArg);  [BUGGY]  option.setNumericArgs(numberOfArgs);  [BUGGY]  option.setType(type);  option.setValueSeparator(valuesep);  option.setArgName(argName);  OptionBuilder.reset();  return  option;  }  [CLASS]  OptionBuilder  [METHOD]  create  [RETURN_TYPE]  Option  String  opt  [VARIABLES]  boolean  hasArg  newRequired  optionalArg  required  OptionBuilder  instance  char  opt  sep  valuesep  Object  newType  type  Option  option  String  argName  description  longopt  name  newDescription  newLongopt  opt  int  num  numArgs  numberOfArgs  	projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java	0.3333333333333333	355	355	1	replace	option.setNumericArgs(numberOfArgs);	option.setArgs(numberOfArgs);  	non-compiled	[CE]  <identifier>  expected	39	None	replace
11	[BUG]  [BUGGY]    option.setNumeric(numberOfArgs);  [CE]  <identifier>  expected  [FE]    AssertionFailedError  [CONTEXT]  public  static  Option  create(String  opt)  throws  IllegalArgumentException  {  Option  option  =  new  Option(opt,  description);  option.setLongOpt(longopt);  option.setRequired(required);  option.setOptionalArg(optionalArg);  [BUGGY]    option.setNumeric(numberOfArgs);  [BUGGY]  option.setArgs(numberOfArgs);  option.setType(type);  option.setValueSeparator(valuesep);  option.setArgName(argName);  OptionBuilder.reset();  return  option;  }  [CLASS]  OptionBuilder  [METHOD]  create  [RETURN_TYPE]  Option  String  opt  [VARIABLES]  boolean  hasArg  newRequired  optionalArg  required  OptionBuilder  instance  char  opt  sep  valuesep  Object  newType  type  Option  option  String  argName  description  longopt  name  newDescription  newLongopt  opt  int  num  numArgs  numberOfArgs  	projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java	0.3333333333333333	355	355	1	replace	    option.setNumeric(numberOfArgs);		non-compiled	[CE]  <identifier>  expected	40	None	add
12	[BUG]  [BUGGY]    OptionBuilder.addOptional(optionalArg);  [CE]  <identifier>  expected  [FE]      AssertionFailedError  [CONTEXT]  public  static  Option  create(String  opt)  throws  IllegalArgumentException  {  Option  option  =  new  Option(opt,  description);  option.setLongOpt(longopt);  option.setRequired(required);  option.setOptionalArg(optionalArg);  [BUGGY]    OptionBuilder.addOptional(optionalArg);  [BUGGY]  option.setArgs(numberOfArgs);  option.setType(type);  option.setValueSeparator(valuesep);  option.setArgName(argName);  OptionBuilder.reset();  return  option;  }  [CLASS]  OptionBuilder  [METHOD]  create  [RETURN_TYPE]  Option  String  opt  [VARIABLES]  boolean  hasArg  newRequired  optionalArg  required  OptionBuilder  instance  char  opt  sep  valuesep  Object  newType  type  Option  option  String  argName  description  longopt  name  newDescription  newLongopt  opt  int  num  numArgs  numberOfArgs  	projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java	0.3333333333333333	355	355	1	replace	    OptionBuilder.addOptional(optionalArg);		non-compiled	[CE]  <identifier>  expected	40	None	add
13	[BUG]  [BUGGY]    OptionBuilder.instance.setType(type);  [CE]  <identifier>  expected  [FE]        AssertionFailedError  [CONTEXT]  public  static  Option  create(String  opt)  throws  IllegalArgumentException  {  Option  option  =  new  Option(opt,  description);  option.setLongOpt(longopt);  option.setRequired(required);  option.setOptionalArg(optionalArg);  [BUGGY]    OptionBuilder.instance.setType(type);  [BUGGY]  option.setArgs(numberOfArgs);  option.setType(type);  option.setValueSeparator(valuesep);  option.setArgName(argName);  OptionBuilder.reset();  return  option;  }  [CLASS]  OptionBuilder  [METHOD]  create  [RETURN_TYPE]  Option  String  opt  [VARIABLES]  boolean  hasArg  newRequired  optionalArg  required  OptionBuilder  instance  char  opt  sep  valuesep  Object  newType  type  Option  option  String  argName  description  longopt  name  newDescription  newLongopt  opt  int  num  numArgs  numberOfArgs  	projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java	0.3333333333333333	355	355	1	replace	    OptionBuilder.instance.setType(type);		non-compiled	[CE]  <identifier>  expected	40	None	add
14	[BUG]  [BUGGY]  option.setArgName(argName);  [CE]  <identifier>  expected  [FE]    AssertionFailedError  [CONTEXT]  public  static  Option  create(String  opt)  throws  IllegalArgumentException  {  Option  option  =  new  Option(opt,  description);  option.setLongOpt(longopt);  option.setRequired(required);  option.setOptionalArg(optionalArg);  [BUGGY]  option.setArgName(argName);  [BUGGY]  option.setType(type);  option.setValueSeparator(valuesep);  option.setArgName(argName);  OptionBuilder.reset();  return  option;  }  [CLASS]  OptionBuilder  [METHOD]  create  [RETURN_TYPE]  Option  String  opt  [VARIABLES]  boolean  hasArg  newRequired  optionalArg  required  OptionBuilder  instance  char  opt  sep  valuesep  Object  newType  type  Option  option  String  argName  description  longopt  name  newDescription  newLongopt  opt  int  num  numArgs  numberOfArgs  	projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java	0.3333333333333333	355	355	1	replace	option.setArgName(argName);	option.setArgs(numberOfArgs);  	non-compiled	[CE]  <identifier>  expected	39	None	replace
15	[BUG]  [BUGGY]    OptionBuilder.append(optionalArg);  [CE]  <identifier>  expected  [FE]    AssertionFailedError  [CONTEXT]  public  static  Option  create(String  opt)  throws  IllegalArgumentException  {  Option  option  =  new  Option(opt,  description);  option.setLongOpt(longopt);  option.setRequired(required);  option.setOptionalArg(optionalArg);  [BUGGY]    OptionBuilder.append(optionalArg);  [BUGGY]  option.setArgs(numberOfArgs);  option.setType(type);  option.setValueSeparator(valuesep);  option.setArgName(argName);  OptionBuilder.reset();  return  option;  }  [CLASS]  OptionBuilder  [METHOD]  create  [RETURN_TYPE]  Option  String  opt  [VARIABLES]  boolean  hasArg  newRequired  optionalArg  required  OptionBuilder  instance  char  opt  sep  valuesep  Object  newType  type  Option  option  String  argName  description  longopt  name  newDescription  newLongopt  opt  int  num  numArgs  numberOfArgs  	projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java	0.3333333333333333	355	355	1	replace	    OptionBuilder.append(optionalArg);		non-compiled	[CE]  <identifier>  expected	40	None	add
16	[BUG]  [BUGGY]    OptionBuilder.instance().setType(type);  [CE]  <identifier>  expected  [FE]      AssertionFailedError  [CONTEXT]  public  static  Option  create(String  opt)  throws  IllegalArgumentException  {  Option  option  =  new  Option(opt,  description);  option.setLongOpt(longopt);  option.setRequired(required);  option.setOptionalArg(optionalArg);  [BUGGY]    OptionBuilder.instance().setType(type);  [BUGGY]  option.setArgs(numberOfArgs);  option.setType(type);  option.setValueSeparator(valuesep);  option.setArgName(argName);  OptionBuilder.reset();  return  option;  }  [CLASS]  OptionBuilder  [METHOD]  create  [RETURN_TYPE]  Option  String  opt  [VARIABLES]  boolean  hasArg  newRequired  optionalArg  required  OptionBuilder  instance  char  opt  sep  valuesep  Object  newType  type  Option  option  String  argName  description  longopt  name  newDescription  newLongopt  opt  int  num  numArgs  numberOfArgs  	projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java	0.3333333333333333	355	355	1	replace	    OptionBuilder.instance().setType(type);		non-compiled	[CE]  <identifier>  expected	40	None	add
