bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  OptionBuilder.addDescription(description);  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      public  static  Option  create(String  opt)  throws  IllegalArgumentException  {  Option  option  =  new  Option(opt,  description);  option.setLongOpt(longopt);  option.setRequired(required);  option.setOptionalArg(optionalArg);      [BUGGY]  OptionBuilder.addDescription(description);  [BUGGY]      option.setArgs(numberOfArgs);  option.setType(type);  option.setValueSeparator(valuesep);  option.setArgName(argName);  OptionBuilder.reset();  return  option;  }  [CLASS]  OptionBuilder  [METHOD]  create  [RETURN_TYPE]  Option  String  opt  [VARIABLES]  boolean  hasArg  newRequired  optionalArg  required  OptionBuilder  instance  char  opt  sep  valuesep  Object  newType  type  Option  option  String  argName  description  longopt  name  newDescription  newLongopt  opt  int  num  numArgs  numberOfArgs  	projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java	0.3333333333333333	355	355	1	replace	OptionBuilder.addDescription(description);	  OptionBuilder.addOptional(optionalArg,    description);    	non-compiled	[CE]  <identifier>  expected	14	None	replace
2	[BUG]  [BUGGY]  OptionBuilder.addDescription(optionalArg,  description);  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      public  static  Option  create(String  opt)  throws  IllegalArgumentException  {  Option  option  =  new  Option(opt,  description);  option.setLongOpt(longopt);  option.setRequired(required);  option.setOptionalArg(optionalArg);      [BUGGY]  OptionBuilder.addDescription(optionalArg,  description);  [BUGGY]      option.setArgs(numberOfArgs);  option.setType(type);  option.setValueSeparator(valuesep);  option.setArgName(argName);  OptionBuilder.reset();  return  option;  }  [CLASS]  OptionBuilder  [METHOD]  create  [RETURN_TYPE]  Option  String  opt  [VARIABLES]  boolean  hasArg  newRequired  optionalArg  required  OptionBuilder  instance  char  opt  sep  valuesep  Object  newType  type  Option  option  String  argName  description  longopt  name  newDescription  newLongopt  opt  int  num  numArgs  numberOfArgs  	projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java	0.3333333333333333	355	355	1	replace	OptionBuilder.addDescription(optionalArg,  description);	  OptionBuilder.addOptional(optionalArg,    description);    	non-compiled	[CE]  <identifier>  expected	14	None	replace
3	[BUG]  [BUGGY]  OptionBuilder.addOptional(optionalArg,  newDescription);  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      public  static  Option  create(String  opt)  throws  IllegalArgumentException  {  Option  option  =  new  Option(opt,  description);  option.setLongOpt(longopt);  option.setRequired(required);  option.setOptionalArg(optionalArg);      [BUGGY]  OptionBuilder.addOptional(optionalArg,  newDescription);  [BUGGY]      option.setArgs(numberOfArgs);  option.setType(type);  option.setValueSeparator(valuesep);  option.setArgName(argName);  OptionBuilder.reset();  return  option;  }  [CLASS]  OptionBuilder  [METHOD]  create  [RETURN_TYPE]  Option  String  opt  [VARIABLES]  boolean  hasArg  newRequired  optionalArg  required  OptionBuilder  instance  char  opt  sep  valuesep  Object  newType  type  Option  option  String  argName  description  longopt  name  newDescription  newLongopt  opt  int  num  numArgs  numberOfArgs  	projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java	0.3333333333333333	355	355	1	replace	OptionBuilder.addOptional(optionalArg,  newDescription);	  OptionBuilder.addOptional(optionalArg,    description);    	non-compiled	[CE]  <identifier>  expected	14	None	replace
4	[BUG]  [BUGGY]  OptionBuilder.append(numberOfArgs  +  1);  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      public  static  Option  create(String  opt)  throws  IllegalArgumentException  {  Option  option  =  new  Option(opt,  description);  option.setLongOpt(longopt);  option.setRequired(required);  option.setOptionalArg(optionalArg);      [BUGGY]  OptionBuilder.append(numberOfArgs  +  1);  [BUGGY]      option.setArgs(numberOfArgs);  option.setType(type);  option.setValueSeparator(valuesep);  option.setArgName(argName);  OptionBuilder.reset();  return  option;  }  [CLASS]  OptionBuilder  [METHOD]  create  [RETURN_TYPE]  Option  String  opt  [VARIABLES]  boolean  hasArg  newRequired  optionalArg  required  OptionBuilder  instance  char  opt  sep  valuesep  Object  newType  type  Option  option  String  argName  description  longopt  name  newDescription  newLongopt  opt  int  num  numArgs  numberOfArgs  	projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java	0.3333333333333333	355	355	1	replace	OptionBuilder.append(numberOfArgs  +  1);	  OptionBuilder.append(optionalArg    +    1);    	non-compiled	[CE]  <identifier>  expected	28	None	replace
5	[BUG]  [BUGGY]  OptionBuilder.append(opt  +  1);  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      public  static  Option  create(String  opt)  throws  IllegalArgumentException  {  Option  option  =  new  Option(opt,  description);  option.setLongOpt(longopt);  option.setRequired(required);  option.setOptionalArg(optionalArg);      [BUGGY]  OptionBuilder.append(opt  +  1);  [BUGGY]      option.setArgs(numberOfArgs);  option.setType(type);  option.setValueSeparator(valuesep);  option.setArgName(argName);  OptionBuilder.reset();  return  option;  }  [CLASS]  OptionBuilder  [METHOD]  create  [RETURN_TYPE]  Option  String  opt  [VARIABLES]  boolean  hasArg  newRequired  optionalArg  required  OptionBuilder  instance  char  opt  sep  valuesep  Object  newType  type  Option  option  String  argName  description  longopt  name  newDescription  newLongopt  opt  int  num  numArgs  numberOfArgs  	projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java	0.3333333333333333	355	355	1	replace	OptionBuilder.append(opt  +  1);	  OptionBuilder.append(optionalArg    +    1);    	non-compiled	[CE]  <identifier>  expected	28	None	replace
6	[BUG]  [BUGGY]  OptionBuilder.setArgs(numberOfArgs);  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      public  static  Option  create(String  opt)  throws  IllegalArgumentException  {  Option  option  =  new  Option(opt,  description);  option.setLongOpt(longopt);  option.setRequired(required);  option.setOptionalArg(optionalArg);      [BUGGY]  OptionBuilder.setArgs(numberOfArgs);  [BUGGY]      option.setArgs(numberOfArgs);  option.setType(type);  option.setValueSeparator(valuesep);  option.setArgName(argName);  OptionBuilder.reset();  return  option;  }  [CLASS]  OptionBuilder  [METHOD]  create  [RETURN_TYPE]  Option  String  opt  [VARIABLES]  boolean  hasArg  newRequired  optionalArg  required  OptionBuilder  instance  char  opt  sep  valuesep  Object  newType  type  Option  option  String  argName  description  longopt  name  newDescription  newLongopt  opt  int  num  numArgs  numberOfArgs  	projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java	0.3333333333333333	355	355	1	replace	OptionBuilder.setArgs(numberOfArgs);	  OptionBuilder.setArgName(argName);    	non-compiled	[CE]  <identifier>  expected	32	None	replace
7	[BUG]  [BUGGY]  OptionBuilder.setArgName(type);  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      public  static  Option  create(String  opt)  throws  IllegalArgumentException  {  Option  option  =  new  Option(opt,  description);  option.setLongOpt(longopt);  option.setRequired(required);  option.setOptionalArg(optionalArg);      [BUGGY]  OptionBuilder.setArgName(type);  [BUGGY]      option.setArgs(numberOfArgs);  option.setType(type);  option.setValueSeparator(valuesep);  option.setArgName(argName);  OptionBuilder.reset();  return  option;  }  [CLASS]  OptionBuilder  [METHOD]  create  [RETURN_TYPE]  Option  String  opt  [VARIABLES]  boolean  hasArg  newRequired  optionalArg  required  OptionBuilder  instance  char  opt  sep  valuesep  Object  newType  type  Option  option  String  argName  description  longopt  name  newDescription  newLongopt  opt  int  num  numArgs  numberOfArgs  	projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java	0.3333333333333333	355	355	1	replace	OptionBuilder.setArgName(type);	  OptionBuilder.setArgName(argName);    	non-compiled	[CE]  <identifier>  expected	32	None	replace
8	[BUG]  [BUGGY]  OptionBuilder.setArgName(name);  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      public  static  Option  create(String  opt)  throws  IllegalArgumentException  {  Option  option  =  new  Option(opt,  description);  option.setLongOpt(longopt);  option.setRequired(required);  option.setOptionalArg(optionalArg);      [BUGGY]  OptionBuilder.setArgName(name);  [BUGGY]      option.setArgs(numberOfArgs);  option.setType(type);  option.setValueSeparator(valuesep);  option.setArgName(argName);  OptionBuilder.reset();  return  option;  }  [CLASS]  OptionBuilder  [METHOD]  create  [RETURN_TYPE]  Option  String  opt  [VARIABLES]  boolean  hasArg  newRequired  optionalArg  required  OptionBuilder  instance  char  opt  sep  valuesep  Object  newType  type  Option  option  String  argName  description  longopt  name  newDescription  newLongopt  opt  int  num  numArgs  numberOfArgs  	projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java	0.3333333333333333	355	355	1	replace	OptionBuilder.setArgName(name);	  OptionBuilder.setArgName(argName);    	non-compiled	[CE]  <identifier>  expected	32	None	replace
9	[BUG]  [BUGGY]  option.setArgs(numberOfArgs  *  2);  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      public  static  Option  create(String  opt)  throws  IllegalArgumentException  {  Option  option  =  new  Option(opt,  description);  option.setLongOpt(longopt);  option.setRequired(required);  option.setOptionalArg(optionalArg);      [BUGGY]  option.setArgs(numberOfArgs  *  2);  [BUGGY]      option.setType(type);  option.setValueSeparator(valuesep);  option.setArgName(argName);  OptionBuilder.reset();  return  option;  }  [CLASS]  OptionBuilder  [METHOD]  create  [RETURN_TYPE]  Option  String  opt  [VARIABLES]  boolean  hasArg  newRequired  optionalArg  required  OptionBuilder  instance  char  opt  sep  valuesep  Object  newType  type  Option  option  String  argName  description  longopt  name  newDescription  newLongopt  opt  int  num  numArgs  numberOfArgs  	projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java	0.3333333333333333	355	355	1	replace	option.setArgs(numberOfArgs  *  2);	  option.setArgs(numberOfArgs    *    1);    	non-compiled	[CE]  <identifier>  expected	5	None	replace
10	[BUG]  [BUGGY]  option.setArgs(numberOfArgs  /  1);  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      public  static  Option  create(String  opt)  throws  IllegalArgumentException  {  Option  option  =  new  Option(opt,  description);  option.setLongOpt(longopt);  option.setRequired(required);  option.setOptionalArg(optionalArg);      [BUGGY]  option.setArgs(numberOfArgs  /  1);  [BUGGY]      option.setType(type);  option.setValueSeparator(valuesep);  option.setArgName(argName);  OptionBuilder.reset();  return  option;  }  [CLASS]  OptionBuilder  [METHOD]  create  [RETURN_TYPE]  Option  String  opt  [VARIABLES]  boolean  hasArg  newRequired  optionalArg  required  OptionBuilder  instance  char  opt  sep  valuesep  Object  newType  type  Option  option  String  argName  description  longopt  name  newDescription  newLongopt  opt  int  num  numArgs  numberOfArgs  	projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java	0.3333333333333333	355	355	1	replace	option.setArgs(numberOfArgs  /  1);	  option.setArgs(numberOfArgs    *    1);    	non-compiled	[CE]  <identifier>  expected	5	None	replace
11	[BUG]  [BUGGY]  option.setArgs(numberOfArgs  *  4);  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      public  static  Option  create(String  opt)  throws  IllegalArgumentException  {  Option  option  =  new  Option(opt,  description);  option.setLongOpt(longopt);  option.setRequired(required);  option.setOptionalArg(optionalArg);      [BUGGY]  option.setArgs(numberOfArgs  *  4);  [BUGGY]      option.setType(type);  option.setValueSeparator(valuesep);  option.setArgName(argName);  OptionBuilder.reset();  return  option;  }  [CLASS]  OptionBuilder  [METHOD]  create  [RETURN_TYPE]  Option  String  opt  [VARIABLES]  boolean  hasArg  newRequired  optionalArg  required  OptionBuilder  instance  char  opt  sep  valuesep  Object  newType  type  Option  option  String  argName  description  longopt  name  newDescription  newLongopt  opt  int  num  numArgs  numberOfArgs  	projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java	0.3333333333333333	355	355	1	replace	option.setArgs(numberOfArgs  *  4);	  option.setArgs(numberOfArgs    *    1);    	non-compiled	[CE]  <identifier>  expected	5	None	replace
12	[BUG]  [BUGGY]  option.setRequired(required);  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      public  static  Option  create(String  opt)  throws  IllegalArgumentException  {  Option  option  =  new  Option(opt,  description);  option.setLongOpt(longopt);  option.setRequired(required);  option.setOptionalArg(optionalArg);      [BUGGY]  option.setRequired(required);  [BUGGY]      option.setArgs(numberOfArgs);  option.setType(type);  option.setValueSeparator(valuesep);  option.setArgName(argName);  OptionBuilder.reset();  return  option;  }  [CLASS]  OptionBuilder  [METHOD]  create  [RETURN_TYPE]  Option  String  opt  [VARIABLES]  boolean  hasArg  newRequired  optionalArg  required  OptionBuilder  instance  char  opt  sep  valuesep  Object  newType  type  Option  option  String  argName  description  longopt  name  newDescription  newLongopt  opt  int  num  numArgs  numberOfArgs  	projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java	0.3333333333333333	355	355	1	replace	option.setRequired(required);	  option.setOptionalArg(hasArg);    	non-compiled	[CE]  <identifier>  expected	30	None	replace
13	[BUG]  [BUGGY]  OptionBuilder.clear();  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      public  static  Option  create(String  opt)  throws  IllegalArgumentException  {  Option  option  =  new  Option(opt,  description);  option.setLongOpt(longopt);  option.setRequired(required);  option.setOptionalArg(optionalArg);      [BUGGY]  OptionBuilder.clear();  [BUGGY]      option.setArgs(numberOfArgs);  option.setType(type);  option.setValueSeparator(valuesep);  option.setArgName(argName);  OptionBuilder.reset();  return  option;  }  [CLASS]  OptionBuilder  [METHOD]  create  [RETURN_TYPE]  Option  String  opt  [VARIABLES]  boolean  hasArg  newRequired  optionalArg  required  OptionBuilder  instance  char  opt  sep  valuesep  Object  newType  type  Option  option  String  argName  description  longopt  name  newDescription  newLongopt  opt  int  num  numArgs  numberOfArgs  	projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java	0.3333333333333333	355	355	1	replace	OptionBuilder.clear();	  OptionBuilder.clear();    option.setDescription(description);    	non-compiled	[CE]  <identifier>  expected	41	None	replace
14	[BUG]  [BUGGY]  OptionBuilder.instance.setName(description);  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      public  static  Option  create(String  opt)  throws  IllegalArgumentException  {  Option  option  =  new  Option(opt,  description);  option.setLongOpt(longopt);  option.setRequired(required);  option.setOptionalArg(optionalArg);      [BUGGY]  OptionBuilder.instance.setName(description);  [BUGGY]      option.setArgs(numberOfArgs);  option.setType(type);  option.setValueSeparator(valuesep);  option.setArgName(argName);  OptionBuilder.reset();  return  option;  }  [CLASS]  OptionBuilder  [METHOD]  create  [RETURN_TYPE]  Option  String  opt  [VARIABLES]  boolean  hasArg  newRequired  optionalArg  required  OptionBuilder  instance  char  opt  sep  valuesep  Object  newType  type  Option  option  String  argName  description  longopt  name  newDescription  newLongopt  opt  int  num  numArgs  numberOfArgs  	projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java	0.3333333333333333	355	355	1	replace	OptionBuilder.instance.setName(description);	  OptionBuilder.instance.setDescription(description);    	non-compiled	[CE]  <identifier>  expected	33	None	replace
15	[BUG]  [BUGGY]  OptionBuilder.instance.setDescription(newDescription);  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      public  static  Option  create(String  opt)  throws  IllegalArgumentException  {  Option  option  =  new  Option(opt,  description);  option.setLongOpt(longopt);  option.setRequired(required);  option.setOptionalArg(optionalArg);      [BUGGY]  OptionBuilder.instance.setDescription(newDescription);  [BUGGY]      option.setArgs(numberOfArgs);  option.setType(type);  option.setValueSeparator(valuesep);  option.setArgName(argName);  OptionBuilder.reset();  return  option;  }  [CLASS]  OptionBuilder  [METHOD]  create  [RETURN_TYPE]  Option  String  opt  [VARIABLES]  boolean  hasArg  newRequired  optionalArg  required  OptionBuilder  instance  char  opt  sep  valuesep  Object  newType  type  Option  option  String  argName  description  longopt  name  newDescription  newLongopt  opt  int  num  numArgs  numberOfArgs  	projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java	0.3333333333333333	355	355	1	replace	OptionBuilder.instance.setDescription(newDescription);	  OptionBuilder.instance.setDescription(description);    	non-compiled	[CE]  <identifier>  expected	33	None	replace
16	[BUG]  [BUGGY]  OptionBuilder.instance.addDescription(description);  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]      public  static  Option  create(String  opt)  throws  IllegalArgumentException  {  Option  option  =  new  Option(opt,  description);  option.setLongOpt(longopt);  option.setRequired(required);  option.setOptionalArg(optionalArg);      [BUGGY]  OptionBuilder.instance.addDescription(description);  [BUGGY]      option.setArgs(numberOfArgs);  option.setType(type);  option.setValueSeparator(valuesep);  option.setArgName(argName);  OptionBuilder.reset();  return  option;  }  [CLASS]  OptionBuilder  [METHOD]  create  [RETURN_TYPE]  Option  String  opt  [VARIABLES]  boolean  hasArg  newRequired  optionalArg  required  OptionBuilder  instance  char  opt  sep  valuesep  Object  newType  type  Option  option  String  argName  description  longopt  name  newDescription  newLongopt  opt  int  num  numArgs  numberOfArgs  	projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java	0.3333333333333333	355	355	1	replace	OptionBuilder.instance.addDescription(description);	  OptionBuilder.instance.setDescription(description);    	non-compiled	[CE]  <identifier>  expected	33	None	replace
17	[BUG]  [BUGGY]  OptionBuilder.instance.setValue(optionalArg);  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      public  static  Option  create(String  opt)  throws  IllegalArgumentException  {  Option  option  =  new  Option(opt,  description);  option.setLongOpt(longopt);  option.setRequired(required);  option.setOptionalArg(optionalArg);      [BUGGY]  OptionBuilder.instance.setValue(optionalArg);  [BUGGY]      option.setArgs(numberOfArgs);  option.setType(type);  option.setValueSeparator(valuesep);  option.setArgName(argName);  OptionBuilder.reset();  return  option;  }  [CLASS]  OptionBuilder  [METHOD]  create  [RETURN_TYPE]  Option  String  opt  [VARIABLES]  boolean  hasArg  newRequired  optionalArg  required  OptionBuilder  instance  char  opt  sep  valuesep  Object  newType  type  Option  option  String  argName  description  longopt  name  newDescription  newLongopt  opt  int  num  numArgs  numberOfArgs  	projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java	0.3333333333333333	355	355	1	replace	OptionBuilder.instance.setValue(optionalArg);	  OptionBuilder.instance.setValue(valuesep);    	non-compiled	[CE]  <identifier>  expected	42	None	replace
18	[BUG]  [BUGGY]  OptionBuilder.instance.setValue(opt);  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      public  static  Option  create(String  opt)  throws  IllegalArgumentException  {  Option  option  =  new  Option(opt,  description);  option.setLongOpt(longopt);  option.setRequired(required);  option.setOptionalArg(optionalArg);      [BUGGY]  OptionBuilder.instance.setValue(opt);  [BUGGY]      option.setArgs(numberOfArgs);  option.setType(type);  option.setValueSeparator(valuesep);  option.setArgName(argName);  OptionBuilder.reset();  return  option;  }  [CLASS]  OptionBuilder  [METHOD]  create  [RETURN_TYPE]  Option  String  opt  [VARIABLES]  boolean  hasArg  newRequired  optionalArg  required  OptionBuilder  instance  char  opt  sep  valuesep  Object  newType  type  Option  option  String  argName  description  longopt  name  newDescription  newLongopt  opt  int  num  numArgs  numberOfArgs  	projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java	0.3333333333333333	355	355	1	replace	OptionBuilder.instance.setValue(opt);	  OptionBuilder.instance.setValue(valuesep);    	non-compiled	[CE]  <identifier>  expected	42	None	replace
19	[BUG]  [BUGGY]  OptionBuilder.instance.setValue(numberOfArgs);  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      public  static  Option  create(String  opt)  throws  IllegalArgumentException  {  Option  option  =  new  Option(opt,  description);  option.setLongOpt(longopt);  option.setRequired(required);  option.setOptionalArg(optionalArg);      [BUGGY]  OptionBuilder.instance.setValue(numberOfArgs);  [BUGGY]      option.setArgs(numberOfArgs);  option.setType(type);  option.setValueSeparator(valuesep);  option.setArgName(argName);  OptionBuilder.reset();  return  option;  }  [CLASS]  OptionBuilder  [METHOD]  create  [RETURN_TYPE]  Option  String  opt  [VARIABLES]  boolean  hasArg  newRequired  optionalArg  required  OptionBuilder  instance  char  opt  sep  valuesep  Object  newType  type  Option  option  String  argName  description  longopt  name  newDescription  newLongopt  opt  int  num  numArgs  numberOfArgs  	projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java	0.3333333333333333	355	355	1	replace	OptionBuilder.instance.setValue(numberOfArgs);	  OptionBuilder.instance.setValue(valuesep);    	non-compiled	[CE]  <identifier>  expected	42	None	replace
20	[BUG]  [BUGGY]  option.setName(newName);  [CE]  <identifier>  expected  [FE]            AssertionFailedError      [CONTEXT]      public  static  Option  create(String  opt)  throws  IllegalArgumentException  {  Option  option  =  new  Option(opt,  description);  option.setLongOpt(longopt);  option.setRequired(required);  option.setOptionalArg(optionalArg);      [BUGGY]  option.setName(newName);  [BUGGY]      option.setType(type);  option.setValueSeparator(valuesep);  option.setArgName(argName);  OptionBuilder.reset();  return  option;  }  [CLASS]  OptionBuilder  [METHOD]  create  [RETURN_TYPE]  Option  String  opt  [VARIABLES]  boolean  hasArg  newRequired  optionalArg  required  OptionBuilder  instance  char  opt  sep  valuesep  Object  newType  type  Option  option  String  argName  description  longopt  name  newDescription  newLongopt  opt  int  num  numArgs  numberOfArgs  	projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java	0.3333333333333333	355	355	1	replace	option.setName(newName);	  option.setName(argName);    	non-compiled	[CE]  <identifier>  expected	38	None	replace
21	[BUG]  [BUGGY]  OptionBuilder.setValues(numberOfArgs  +  1);  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      public  static  Option  create(String  opt)  throws  IllegalArgumentException  {  Option  option  =  new  Option(opt,  description);  option.setLongOpt(longopt);  option.setRequired(required);  option.setOptionalArg(optionalArg);      [BUGGY]  OptionBuilder.setValues(numberOfArgs  +  1);  [BUGGY]      option.setArgs(numberOfArgs);  option.setType(type);  option.setValueSeparator(valuesep);  option.setArgName(argName);  OptionBuilder.reset();  return  option;  }  [CLASS]  OptionBuilder  [METHOD]  create  [RETURN_TYPE]  Option  String  opt  [VARIABLES]  boolean  hasArg  newRequired  optionalArg  required  OptionBuilder  instance  char  opt  sep  valuesep  Object  newType  type  Option  option  String  argName  description  longopt  name  newDescription  newLongopt  opt  int  num  numArgs  numberOfArgs  	projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java	0.3333333333333333	355	355	1	replace	OptionBuilder.setValues(numberOfArgs  +  1);	  OptionBuilder.setValues(numberOfArgs);    	non-compiled	[CE]  <identifier>  expected	21	None	replace
22	[BUG]  [BUGGY]  OptionBuilder.setValues(numberOfArgs  -  1);  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      public  static  Option  create(String  opt)  throws  IllegalArgumentException  {  Option  option  =  new  Option(opt,  description);  option.setLongOpt(longopt);  option.setRequired(required);  option.setOptionalArg(optionalArg);      [BUGGY]  OptionBuilder.setValues(numberOfArgs  -  1);  [BUGGY]      option.setArgs(numberOfArgs);  option.setType(type);  option.setValueSeparator(valuesep);  option.setArgName(argName);  OptionBuilder.reset();  return  option;  }  [CLASS]  OptionBuilder  [METHOD]  create  [RETURN_TYPE]  Option  String  opt  [VARIABLES]  boolean  hasArg  newRequired  optionalArg  required  OptionBuilder  instance  char  opt  sep  valuesep  Object  newType  type  Option  option  String  argName  description  longopt  name  newDescription  newLongopt  opt  int  num  numArgs  numberOfArgs  	projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java	0.3333333333333333	355	355	1	replace	OptionBuilder.setValues(numberOfArgs  -  1);	  OptionBuilder.setValues(numberOfArgs);    	non-compiled	[CE]  <identifier>  expected	21	None	replace
23	[BUG]  [BUGGY]  OptionBuilder.setValues(optionalArgs);  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      public  static  Option  create(String  opt)  throws  IllegalArgumentException  {  Option  option  =  new  Option(opt,  description);  option.setLongOpt(longopt);  option.setRequired(required);  option.setOptionalArg(optionalArg);      [BUGGY]  OptionBuilder.setValues(optionalArgs);  [BUGGY]      option.setArgs(numberOfArgs);  option.setType(type);  option.setValueSeparator(valuesep);  option.setArgName(argName);  OptionBuilder.reset();  return  option;  }  [CLASS]  OptionBuilder  [METHOD]  create  [RETURN_TYPE]  Option  String  opt  [VARIABLES]  boolean  hasArg  newRequired  optionalArg  required  OptionBuilder  instance  char  opt  sep  valuesep  Object  newType  type  Option  option  String  argName  description  longopt  name  newDescription  newLongopt  opt  int  num  numArgs  numberOfArgs  	projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java	0.3333333333333333	355	355	1	replace	OptionBuilder.setValues(optionalArgs);	  OptionBuilder.setValues(numberOfArgs);    	non-compiled	[CE]  <identifier>  expected	21	None	replace
24	[BUG]  [BUGGY]  OptionBuilder.setName(description);  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      public  static  Option  create(String  opt)  throws  IllegalArgumentException  {  Option  option  =  new  Option(opt,  description);  option.setLongOpt(longopt);  option.setRequired(required);  option.setOptionalArg(optionalArg);      [BUGGY]  OptionBuilder.setName(description);  [BUGGY]      option.setArgs(numberOfArgs);  option.setType(type);  option.setValueSeparator(valuesep);  option.setArgName(argName);  OptionBuilder.reset();  return  option;  }  [CLASS]  OptionBuilder  [METHOD]  create  [RETURN_TYPE]  Option  String  opt  [VARIABLES]  boolean  hasArg  newRequired  optionalArg  required  OptionBuilder  instance  char  opt  sep  valuesep  Object  newType  type  Option  option  String  argName  description  longopt  name  newDescription  newLongopt  opt  int  num  numArgs  numberOfArgs  	projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java	0.3333333333333333	355	355	1	replace	OptionBuilder.setName(description);	  OptionBuilder.setDescription(description);    	non-compiled	[CE]  <identifier>  expected	17	None	replace
25	[BUG]  [BUGGY]  OptionBuilder.instance().setValue(optionalArg);  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      public  static  Option  create(String  opt)  throws  IllegalArgumentException  {  Option  option  =  new  Option(opt,  description);  option.setLongOpt(longopt);  option.setRequired(required);  option.setOptionalArg(optionalArg);      [BUGGY]  OptionBuilder.instance().setValue(optionalArg);  [BUGGY]      option.setArgs(numberOfArgs);  option.setType(type);  option.setValueSeparator(valuesep);  option.setArgName(argName);  OptionBuilder.reset();  return  option;  }  [CLASS]  OptionBuilder  [METHOD]  create  [RETURN_TYPE]  Option  String  opt  [VARIABLES]  boolean  hasArg  newRequired  optionalArg  required  OptionBuilder  instance  char  opt  sep  valuesep  Object  newType  type  Option  option  String  argName  description  longopt  name  newDescription  newLongopt  opt  int  num  numArgs  numberOfArgs  	projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java	0.3333333333333333	355	355	1	replace	OptionBuilder.instance().setValue(optionalArg);	  OptionBuilder.instance().setValue(valuesep);    	non-compiled	[CE]  <identifier>  expected	48	None	replace
26	[BUG]  [BUGGY]  OptionBuilder.instance().setValue(opt);  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      public  static  Option  create(String  opt)  throws  IllegalArgumentException  {  Option  option  =  new  Option(opt,  description);  option.setLongOpt(longopt);  option.setRequired(required);  option.setOptionalArg(optionalArg);      [BUGGY]  OptionBuilder.instance().setValue(opt);  [BUGGY]      option.setArgs(numberOfArgs);  option.setType(type);  option.setValueSeparator(valuesep);  option.setArgName(argName);  OptionBuilder.reset();  return  option;  }  [CLASS]  OptionBuilder  [METHOD]  create  [RETURN_TYPE]  Option  String  opt  [VARIABLES]  boolean  hasArg  newRequired  optionalArg  required  OptionBuilder  instance  char  opt  sep  valuesep  Object  newType  type  Option  option  String  argName  description  longopt  name  newDescription  newLongopt  opt  int  num  numArgs  numberOfArgs  	projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java	0.3333333333333333	355	355	1	replace	OptionBuilder.instance().setValue(opt);	  OptionBuilder.instance().setValue(valuesep);    	non-compiled	[CE]  <identifier>  expected	48	None	replace
27	[BUG]  [BUGGY]  OptionBuilder.instance().setValueSeparator(valuesep);  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      public  static  Option  create(String  opt)  throws  IllegalArgumentException  {  Option  option  =  new  Option(opt,  description);  option.setLongOpt(longopt);  option.setRequired(required);  option.setOptionalArg(optionalArg);      [BUGGY]  OptionBuilder.instance().setValueSeparator(valuesep);  [BUGGY]      option.setArgs(numberOfArgs);  option.setType(type);  option.setValueSeparator(valuesep);  option.setArgName(argName);  OptionBuilder.reset();  return  option;  }  [CLASS]  OptionBuilder  [METHOD]  create  [RETURN_TYPE]  Option  String  opt  [VARIABLES]  boolean  hasArg  newRequired  optionalArg  required  OptionBuilder  instance  char  opt  sep  valuesep  Object  newType  type  Option  option  String  argName  description  longopt  name  newDescription  newLongopt  opt  int  num  numArgs  numberOfArgs  	projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java	0.3333333333333333	355	355	1	replace	OptionBuilder.instance().setValueSeparator(valuesep);	  OptionBuilder.instance().setValue(valuesep);    	non-compiled	[CE]  <identifier>  expected	48	None	replace
28	[BUG]  [BUGGY]  OptionBuilder.setNumericArgs(numberOfArgs  +  1);  [CE]  <identifier>  expected  [FE]            AssertionFailedError      [CONTEXT]      public  static  Option  create(String  opt)  throws  IllegalArgumentException  {  Option  option  =  new  Option(opt,  description);  option.setLongOpt(longopt);  option.setRequired(required);  option.setOptionalArg(optionalArg);      [BUGGY]  OptionBuilder.setNumericArgs(numberOfArgs  +  1);  [BUGGY]      option.setType(type);  option.setValueSeparator(valuesep);  option.setArgName(argName);  OptionBuilder.reset();  return  option;  }  [CLASS]  OptionBuilder  [METHOD]  create  [RETURN_TYPE]  Option  String  opt  [VARIABLES]  boolean  hasArg  newRequired  optionalArg  required  OptionBuilder  instance  char  opt  sep  valuesep  Object  newType  type  Option  option  String  argName  description  longopt  name  newDescription  newLongopt  opt  int  num  numArgs  numberOfArgs  	projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java	0.3333333333333333	355	355	1	replace	OptionBuilder.setNumericArgs(numberOfArgs  +  1);	  OptionBuilder.setNumericArgs(numberOfArgs);    	non-compiled	[CE]  <identifier>  expected	39	None	replace
29	[BUG]  [BUGGY]  OptionBuilder.setNumericArgs(numberOfArgs  -  1);  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      public  static  Option  create(String  opt)  throws  IllegalArgumentException  {  Option  option  =  new  Option(opt,  description);  option.setLongOpt(longopt);  option.setRequired(required);  option.setOptionalArg(optionalArg);      [BUGGY]  OptionBuilder.setNumericArgs(numberOfArgs  -  1);  [BUGGY]      option.setType(type);  option.setValueSeparator(valuesep);  option.setArgName(argName);  OptionBuilder.reset();  return  option;  }  [CLASS]  OptionBuilder  [METHOD]  create  [RETURN_TYPE]  Option  String  opt  [VARIABLES]  boolean  hasArg  newRequired  optionalArg  required  OptionBuilder  instance  char  opt  sep  valuesep  Object  newType  type  Option  option  String  argName  description  longopt  name  newDescription  newLongopt  opt  int  num  numArgs  numberOfArgs  	projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java	0.3333333333333333	355	355	1	replace	OptionBuilder.setNumericArgs(numberOfArgs  -  1);	  OptionBuilder.setNumericArgs(numberOfArgs);    	non-compiled	[CE]  <identifier>  expected	39	None	replace
30	[BUG]  [BUGGY]  OptionBuilder.setNumberOfArgs(numberOfArgs  +  1);  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      public  static  Option  create(String  opt)  throws  IllegalArgumentException  {  Option  option  =  new  Option(opt,  description);  option.setLongOpt(longopt);  option.setRequired(required);  option.setOptionalArg(optionalArg);      [BUGGY]  OptionBuilder.setNumberOfArgs(numberOfArgs  +  1);  [BUGGY]      option.setType(type);  option.setValueSeparator(valuesep);  option.setArgName(argName);  OptionBuilder.reset();  return  option;  }  [CLASS]  OptionBuilder  [METHOD]  create  [RETURN_TYPE]  Option  String  opt  [VARIABLES]  boolean  hasArg  newRequired  optionalArg  required  OptionBuilder  instance  char  opt  sep  valuesep  Object  newType  type  Option  option  String  argName  description  longopt  name  newDescription  newLongopt  opt  int  num  numArgs  numberOfArgs  	projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java	0.3333333333333333	355	355	1	replace	OptionBuilder.setNumberOfArgs(numberOfArgs  +  1);	  OptionBuilder.setNumericArgs(numberOfArgs);    	non-compiled	[CE]  <identifier>  expected	39	None	replace
31	[BUG]  [BUGGY]  option.setNumericArgs(numberOfArgs  *  1);  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      public  static  Option  create(String  opt)  throws  IllegalArgumentException  {  Option  option  =  new  Option(opt,  description);  option.setLongOpt(longopt);  option.setRequired(required);  option.setOptionalArg(optionalArg);      [BUGGY]  option.setNumericArgs(numberOfArgs  *  1);  [BUGGY]      option.setType(type);  option.setValueSeparator(valuesep);  option.setArgName(argName);  OptionBuilder.reset();  return  option;  }  [CLASS]  OptionBuilder  [METHOD]  create  [RETURN_TYPE]  Option  String  opt  [VARIABLES]  boolean  hasArg  newRequired  optionalArg  required  OptionBuilder  instance  char  opt  sep  valuesep  Object  newType  type  Option  option  String  argName  description  longopt  name  newDescription  newLongopt  opt  int  num  numArgs  numberOfArgs  	projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java	0.3333333333333333	355	355	1	replace	option.setNumericArgs(numberOfArgs  *  1);	  option.setNumericArgs(numberOfArgs    -    1);    	non-compiled	[CE]  <identifier>  expected	4	None	replace
32	[BUG]  [BUGGY]  OptionBuilder.instance.setValues(numberOfArgs  +  1);  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      public  static  Option  create(String  opt)  throws  IllegalArgumentException  {  Option  option  =  new  Option(opt,  description);  option.setLongOpt(longopt);  option.setRequired(required);  option.setOptionalArg(optionalArg);      [BUGGY]  OptionBuilder.instance.setValues(numberOfArgs  +  1);  [BUGGY]      option.setArgs(numberOfArgs);  option.setType(type);  option.setValueSeparator(valuesep);  option.setArgName(argName);  OptionBuilder.reset();  return  option;  }  [CLASS]  OptionBuilder  [METHOD]  create  [RETURN_TYPE]  Option  String  opt  [VARIABLES]  boolean  hasArg  newRequired  optionalArg  required  OptionBuilder  instance  char  opt  sep  valuesep  Object  newType  type  Option  option  String  argName  description  longopt  name  newDescription  newLongopt  opt  int  num  numArgs  numberOfArgs  	projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java	0.3333333333333333	355	355	1	replace	OptionBuilder.instance.setValues(numberOfArgs  +  1);	  OptionBuilder.instance.setValues(numberOfArgs);    	non-compiled	[CE]  <identifier>  expected	11	None	replace
33	[BUG]  [BUGGY]  OptionBuilder.instance.setValues(numberOfArgs  -  1);  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      public  static  Option  create(String  opt)  throws  IllegalArgumentException  {  Option  option  =  new  Option(opt,  description);  option.setLongOpt(longopt);  option.setRequired(required);  option.setOptionalArg(optionalArg);      [BUGGY]  OptionBuilder.instance.setValues(numberOfArgs  -  1);  [BUGGY]      option.setArgs(numberOfArgs);  option.setType(type);  option.setValueSeparator(valuesep);  option.setArgName(argName);  OptionBuilder.reset();  return  option;  }  [CLASS]  OptionBuilder  [METHOD]  create  [RETURN_TYPE]  Option  String  opt  [VARIABLES]  boolean  hasArg  newRequired  optionalArg  required  OptionBuilder  instance  char  opt  sep  valuesep  Object  newType  type  Option  option  String  argName  description  longopt  name  newDescription  newLongopt  opt  int  num  numArgs  numberOfArgs  	projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java	0.3333333333333333	355	355	1	replace	OptionBuilder.instance.setValues(numberOfArgs  -  1);	  OptionBuilder.instance.setValues(numberOfArgs);    	non-compiled	[CE]  <identifier>  expected	11	None	replace
34	[BUG]  [BUGGY]  OptionBuilder.instance.setValues(opt);  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      public  static  Option  create(String  opt)  throws  IllegalArgumentException  {  Option  option  =  new  Option(opt,  description);  option.setLongOpt(longopt);  option.setRequired(required);  option.setOptionalArg(optionalArg);      [BUGGY]  OptionBuilder.instance.setValues(opt);  [BUGGY]      option.setArgs(numberOfArgs);  option.setType(type);  option.setValueSeparator(valuesep);  option.setArgName(argName);  OptionBuilder.reset();  return  option;  }  [CLASS]  OptionBuilder  [METHOD]  create  [RETURN_TYPE]  Option  String  opt  [VARIABLES]  boolean  hasArg  newRequired  optionalArg  required  OptionBuilder  instance  char  opt  sep  valuesep  Object  newType  type  Option  option  String  argName  description  longopt  name  newDescription  newLongopt  opt  int  num  numArgs  numberOfArgs  	projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java	0.3333333333333333	355	355	1	replace	OptionBuilder.instance.setValues(opt);	  OptionBuilder.instance.setValues(numberOfArgs);    	non-compiled	[CE]  <identifier>  expected	11	None	replace
35	[BUG]  [BUGGY]  OptionBuilder.setNumberOfArgs(numberOfArgs  -  1);  [CE]  <identifier>  expected  [FE]            AssertionFailedError      [CONTEXT]      public  static  Option  create(String  opt)  throws  IllegalArgumentException  {  Option  option  =  new  Option(opt,  description);  option.setLongOpt(longopt);  option.setRequired(required);  option.setOptionalArg(optionalArg);      [BUGGY]  OptionBuilder.setNumberOfArgs(numberOfArgs  -  1);  [BUGGY]      option.setType(type);  option.setValueSeparator(valuesep);  option.setArgName(argName);  OptionBuilder.reset();  return  option;  }  [CLASS]  OptionBuilder  [METHOD]  create  [RETURN_TYPE]  Option  String  opt  [VARIABLES]  boolean  hasArg  newRequired  optionalArg  required  OptionBuilder  instance  char  opt  sep  valuesep  Object  newType  type  Option  option  String  argName  description  longopt  name  newDescription  newLongopt  opt  int  num  numArgs  numberOfArgs  	projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java	0.3333333333333333	355	355	1	replace	OptionBuilder.setNumberOfArgs(numberOfArgs  -  1);	  OptionBuilder.setNumberOfArgs(numberOfArgs);    	non-compiled	[CE]  <identifier>  expected	40	None	replace
36	[BUG]  [BUGGY]  OptionBuilder.setNumberOfArgs(numberOfArgs  *  2);  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      public  static  Option  create(String  opt)  throws  IllegalArgumentException  {  Option  option  =  new  Option(opt,  description);  option.setLongOpt(longopt);  option.setRequired(required);  option.setOptionalArg(optionalArg);      [BUGGY]  OptionBuilder.setNumberOfArgs(numberOfArgs  *  2);  [BUGGY]      option.setType(type);  option.setValueSeparator(valuesep);  option.setArgName(argName);  OptionBuilder.reset();  return  option;  }  [CLASS]  OptionBuilder  [METHOD]  create  [RETURN_TYPE]  Option  String  opt  [VARIABLES]  boolean  hasArg  newRequired  optionalArg  required  OptionBuilder  instance  char  opt  sep  valuesep  Object  newType  type  Option  option  String  argName  description  longopt  name  newDescription  newLongopt  opt  int  num  numArgs  numberOfArgs  	projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java	0.3333333333333333	355	355	1	replace	OptionBuilder.setNumberOfArgs(numberOfArgs  *  2);	  OptionBuilder.setNumberOfArgs(numberOfArgs);    	non-compiled	[CE]  <identifier>  expected	40	None	replace
37	[BUG]  [BUGGY]  option.setValueSeparator(sep);  [CE]  <identifier>  expected  [FE]            AssertionFailedError      [CONTEXT]      public  static  Option  create(String  opt)  throws  IllegalArgumentException  {  Option  option  =  new  Option(opt,  description);  option.setLongOpt(longopt);  option.setRequired(required);  option.setOptionalArg(optionalArg);      [BUGGY]  option.setValueSeparator(sep);  [BUGGY]      option.setType(type);  option.setValueSeparator(valuesep);  option.setArgName(argName);  OptionBuilder.reset();  return  option;  }  [CLASS]  OptionBuilder  [METHOD]  create  [RETURN_TYPE]  Option  String  opt  [VARIABLES]  boolean  hasArg  newRequired  optionalArg  required  OptionBuilder  instance  char  opt  sep  valuesep  Object  newType  type  Option  option  String  argName  description  longopt  name  newDescription  newLongopt  opt  int  num  numArgs  numberOfArgs  	projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java	0.3333333333333333	355	355	1	replace	option.setValueSeparator(sep);	  option.setValueSeparator(valuesep);    	non-compiled	[CE]  <identifier>  expected	25	None	replace
38	[BUG]  [BUGGY]  option.setValueSeparator(optionalArg);  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      public  static  Option  create(String  opt)  throws  IllegalArgumentException  {  Option  option  =  new  Option(opt,  description);  option.setLongOpt(longopt);  option.setRequired(required);  option.setOptionalArg(optionalArg);      [BUGGY]  option.setValueSeparator(optionalArg);  [BUGGY]      option.setType(type);  option.setValueSeparator(valuesep);  option.setArgName(argName);  OptionBuilder.reset();  return  option;  }  [CLASS]  OptionBuilder  [METHOD]  create  [RETURN_TYPE]  Option  String  opt  [VARIABLES]  boolean  hasArg  newRequired  optionalArg  required  OptionBuilder  instance  char  opt  sep  valuesep  Object  newType  type  Option  option  String  argName  description  longopt  name  newDescription  newLongopt  opt  int  num  numArgs  numberOfArgs  	projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java	0.3333333333333333	355	355	1	replace	option.setValueSeparator(optionalArg);	  option.setValueSeparator(valuesep);    	non-compiled	[CE]  <identifier>  expected	25	None	replace
39	[BUG]  [BUGGY]  option.setNumeric(numberOfArgs  *  1);  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      public  static  Option  create(String  opt)  throws  IllegalArgumentException  {  Option  option  =  new  Option(opt,  description);  option.setLongOpt(longopt);  option.setRequired(required);  option.setOptionalArg(optionalArg);      [BUGGY]  option.setNumeric(numberOfArgs  *  1);  [BUGGY]      option.setArgs(numberOfArgs);  option.setType(type);  option.setValueSeparator(valuesep);  option.setArgName(argName);  OptionBuilder.reset();  return  option;  }  [CLASS]  OptionBuilder  [METHOD]  create  [RETURN_TYPE]  Option  String  opt  [VARIABLES]  boolean  hasArg  newRequired  optionalArg  required  OptionBuilder  instance  char  opt  sep  valuesep  Object  newType  type  Option  option  String  argName  description  longopt  name  newDescription  newLongopt  opt  int  num  numArgs  numberOfArgs  	projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java	0.3333333333333333	355	355	1	replace	option.setNumeric(numberOfArgs  *  1);	  option.setNumeric(numberOfArgs    -    1);    	non-compiled	[CE]  <identifier>  expected	2	None	replace
40	[BUG]  [BUGGY]  OptionBuilder.append(argName,  description);  [CE]  <identifier>  expected  [FE]            AssertionFailedError      [CONTEXT]      public  static  Option  create(String  opt)  throws  IllegalArgumentException  {  Option  option  =  new  Option(opt,  description);  option.setLongOpt(longopt);  option.setRequired(required);  option.setOptionalArg(optionalArg);      [BUGGY]  OptionBuilder.append(argName,  description);  [BUGGY]      option.setArgs(numberOfArgs);  option.setType(type);  option.setValueSeparator(valuesep);  option.setArgName(argName);  OptionBuilder.reset();  return  option;  }  [CLASS]  OptionBuilder  [METHOD]  create  [RETURN_TYPE]  Option  String  opt  [VARIABLES]  boolean  hasArg  newRequired  optionalArg  required  OptionBuilder  instance  char  opt  sep  valuesep  Object  newType  type  Option  option  String  argName  description  longopt  name  newDescription  newLongopt  opt  int  num  numArgs  numberOfArgs  	projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java	0.3333333333333333	355	355	1	replace	OptionBuilder.append(argName,  description);	  OptionBuilder.append(optionalArg,    description);    	non-compiled	[CE]  <identifier>  expected	27	None	replace
41	[BUG]  [BUGGY]  OptionBuilder.append(description,  option);  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      public  static  Option  create(String  opt)  throws  IllegalArgumentException  {  Option  option  =  new  Option(opt,  description);  option.setLongOpt(longopt);  option.setRequired(required);  option.setOptionalArg(optionalArg);      [BUGGY]  OptionBuilder.append(description,  option);  [BUGGY]      option.setArgs(numberOfArgs);  option.setType(type);  option.setValueSeparator(valuesep);  option.setArgName(argName);  OptionBuilder.reset();  return  option;  }  [CLASS]  OptionBuilder  [METHOD]  create  [RETURN_TYPE]  Option  String  opt  [VARIABLES]  boolean  hasArg  newRequired  optionalArg  required  OptionBuilder  instance  char  opt  sep  valuesep  Object  newType  type  Option  option  String  argName  description  longopt  name  newDescription  newLongopt  opt  int  num  numArgs  numberOfArgs  	projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java	0.3333333333333333	355	355	1	replace	OptionBuilder.append(description,  option);	  OptionBuilder.append(optionalArg,    description);    	non-compiled	[CE]  <identifier>  expected	27	None	replace
42	[BUG]  [BUGGY]  OptionBuilder.append(optionalArg,  description  +  1);  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      public  static  Option  create(String  opt)  throws  IllegalArgumentException  {  Option  option  =  new  Option(opt,  description);  option.setLongOpt(longopt);  option.setRequired(required);  option.setOptionalArg(optionalArg);      [BUGGY]  OptionBuilder.append(optionalArg,  description  +  1);  [BUGGY]      option.setArgs(numberOfArgs);  option.setType(type);  option.setValueSeparator(valuesep);  option.setArgName(argName);  OptionBuilder.reset();  return  option;  }  [CLASS]  OptionBuilder  [METHOD]  create  [RETURN_TYPE]  Option  String  opt  [VARIABLES]  boolean  hasArg  newRequired  optionalArg  required  OptionBuilder  instance  char  opt  sep  valuesep  Object  newType  type  Option  option  String  argName  description  longopt  name  newDescription  newLongopt  opt  int  num  numArgs  numberOfArgs  	projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java	0.3333333333333333	355	355	1	replace	OptionBuilder.append(optionalArg,  description  +  1);	  OptionBuilder.append(optionalArg,    description);    	non-compiled	[CE]  <identifier>  expected	27	None	replace
43	[BUG]  [BUGGY]  OptionBuilder.addDescriptionArg(description);  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      public  static  Option  create(String  opt)  throws  IllegalArgumentException  {  Option  option  =  new  Option(opt,  description);  option.setLongOpt(longopt);  option.setRequired(required);  option.setOptionalArg(optionalArg);      [BUGGY]  OptionBuilder.addDescriptionArg(description);  [BUGGY]      option.setArgs(numberOfArgs);  option.setType(type);  option.setValueSeparator(valuesep);  option.setArgName(argName);  OptionBuilder.reset();  return  option;  }  [CLASS]  OptionBuilder  [METHOD]  create  [RETURN_TYPE]  Option  String  opt  [VARIABLES]  boolean  hasArg  newRequired  optionalArg  required  OptionBuilder  instance  char  opt  sep  valuesep  Object  newType  type  Option  option  String  argName  description  longopt  name  newDescription  newLongopt  opt  int  num  numArgs  numberOfArgs  	projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java	0.3333333333333333	355	355	1	replace	OptionBuilder.addDescriptionArg(description);	  OptionBuilder.addOptionalArg(optionalArg,    description);    	non-compiled	[CE]  <identifier>  expected	46	None	replace
44	[BUG]  [BUGGY]  option.setNumberOfArgs(numberOfArgs  *  1);  [CE]  <identifier>  expected  [FE]            AssertionFailedError      [CONTEXT]      public  static  Option  create(String  opt)  throws  IllegalArgumentException  {  Option  option  =  new  Option(opt,  description);  option.setLongOpt(longopt);  option.setRequired(required);  option.setOptionalArg(optionalArg);      [BUGGY]  option.setNumberOfArgs(numberOfArgs  *  1);  [BUGGY]      option.setType(type);  option.setValueSeparator(valuesep);  option.setArgName(argName);  OptionBuilder.reset();  return  option;  }  [CLASS]  OptionBuilder  [METHOD]  create  [RETURN_TYPE]  Option  String  opt  [VARIABLES]  boolean  hasArg  newRequired  optionalArg  required  OptionBuilder  instance  char  opt  sep  valuesep  Object  newType  type  Option  option  String  argName  description  longopt  name  newDescription  newLongopt  opt  int  num  numArgs  numberOfArgs  	projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java	0.3333333333333333	355	355	1	replace	option.setNumberOfArgs(numberOfArgs  *  1);	  option.setNumberOfArgs(numberOfArgs    +    1);    	non-compiled	[CE]  <identifier>  expected	18	None	replace
45	[BUG]  [BUGGY]  option.setNumberOfArgs(numberOfArgs  +  2);  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      public  static  Option  create(String  opt)  throws  IllegalArgumentException  {  Option  option  =  new  Option(opt,  description);  option.setLongOpt(longopt);  option.setRequired(required);  option.setOptionalArg(optionalArg);      [BUGGY]  option.setNumberOfArgs(numberOfArgs  +  2);  [BUGGY]      option.setType(type);  option.setValueSeparator(valuesep);  option.setArgName(argName);  OptionBuilder.reset();  return  option;  }  [CLASS]  OptionBuilder  [METHOD]  create  [RETURN_TYPE]  Option  String  opt  [VARIABLES]  boolean  hasArg  newRequired  optionalArg  required  OptionBuilder  instance  char  opt  sep  valuesep  Object  newType  type  Option  option  String  argName  description  longopt  name  newDescription  newLongopt  opt  int  num  numArgs  numberOfArgs  	projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java	0.3333333333333333	355	355	1	replace	option.setNumberOfArgs(numberOfArgs  +  2);	  option.setNumberOfArgs(numberOfArgs    +    1);    	non-compiled	[CE]  <identifier>  expected	18	None	replace
46	[BUG]  [BUGGY]  OptionBuilder.setNumeric(numberOfArgs  +  1);  [CE]  <identifier>  expected  [FE]            AssertionFailedError      [CONTEXT]      public  static  Option  create(String  opt)  throws  IllegalArgumentException  {  Option  option  =  new  Option(opt,  description);  option.setLongOpt(longopt);  option.setRequired(required);  option.setOptionalArg(optionalArg);      [BUGGY]  OptionBuilder.setNumeric(numberOfArgs  +  1);  [BUGGY]      option.setArgs(numberOfArgs);  option.setType(type);  option.setValueSeparator(valuesep);  option.setArgName(argName);  OptionBuilder.reset();  return  option;  }  [CLASS]  OptionBuilder  [METHOD]  create  [RETURN_TYPE]  Option  String  opt  [VARIABLES]  boolean  hasArg  newRequired  optionalArg  required  OptionBuilder  instance  char  opt  sep  valuesep  Object  newType  type  Option  option  String  argName  description  longopt  name  newDescription  newLongopt  opt  int  num  numArgs  numberOfArgs  	projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java	0.3333333333333333	355	355	1	replace	OptionBuilder.setNumeric(numberOfArgs  +  1);	  OptionBuilder.setNumeric(numberOfArgs);    	non-compiled	[CE]  <identifier>  expected	35	None	replace
47	[BUG]  [BUGGY]  OptionBuilder.setNumeric(numberOfArgs  -  1);  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      public  static  Option  create(String  opt)  throws  IllegalArgumentException  {  Option  option  =  new  Option(opt,  description);  option.setLongOpt(longopt);  option.setRequired(required);  option.setOptionalArg(optionalArg);      [BUGGY]  OptionBuilder.setNumeric(numberOfArgs  -  1);  [BUGGY]      option.setArgs(numberOfArgs);  option.setType(type);  option.setValueSeparator(valuesep);  option.setArgName(argName);  OptionBuilder.reset();  return  option;  }  [CLASS]  OptionBuilder  [METHOD]  create  [RETURN_TYPE]  Option  String  opt  [VARIABLES]  boolean  hasArg  newRequired  optionalArg  required  OptionBuilder  instance  char  opt  sep  valuesep  Object  newType  type  Option  option  String  argName  description  longopt  name  newDescription  newLongopt  opt  int  num  numArgs  numberOfArgs  	projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java	0.3333333333333333	355	355	1	replace	OptionBuilder.setNumeric(numberOfArgs  -  1);	  OptionBuilder.setNumeric(numberOfArgs);    	non-compiled	[CE]  <identifier>  expected	35	None	replace
48	[BUG]  [BUGGY]  OptionBuilder.setType(newType);  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      public  static  Option  create(String  opt)  throws  IllegalArgumentException  {  Option  option  =  new  Option(opt,  description);  option.setLongOpt(longopt);  option.setRequired(required);  option.setOptionalArg(optionalArg);      [BUGGY]  OptionBuilder.setType(newType);  [BUGGY]      option.setType(type);  option.setValueSeparator(valuesep);  option.setArgName(argName);  OptionBuilder.reset();  return  option;  }  [CLASS]  OptionBuilder  [METHOD]  create  [RETURN_TYPE]  Option  String  opt  [VARIABLES]  boolean  hasArg  newRequired  optionalArg  required  OptionBuilder  instance  char  opt  sep  valuesep  Object  newType  type  Option  option  String  argName  description  longopt  name  newDescription  newLongopt  opt  int  num  numArgs  numberOfArgs  	projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java	0.3333333333333333	355	355	1	replace	OptionBuilder.setType(newType);	  OptionBuilder.setType(type);    	non-compiled	[CE]  <identifier>  expected	9	None	replace
49	[BUG]  [BUGGY]  OptionBuilder.setValueType(newType);  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      public  static  Option  create(String  opt)  throws  IllegalArgumentException  {  Option  option  =  new  Option(opt,  description);  option.setLongOpt(longopt);  option.setRequired(required);  option.setOptionalArg(optionalArg);      [BUGGY]  OptionBuilder.setValueType(newType);  [BUGGY]      option.setType(type);  option.setValueSeparator(valuesep);  option.setArgName(argName);  OptionBuilder.reset();  return  option;  }  [CLASS]  OptionBuilder  [METHOD]  create  [RETURN_TYPE]  Option  String  opt  [VARIABLES]  boolean  hasArg  newRequired  optionalArg  required  OptionBuilder  instance  char  opt  sep  valuesep  Object  newType  type  Option  option  String  argName  description  longopt  name  newDescription  newLongopt  opt  int  num  numArgs  numberOfArgs  	projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java	0.3333333333333333	355	355	1	replace	OptionBuilder.setValueType(newType);	  OptionBuilder.setType(type);    	non-compiled	[CE]  <identifier>  expected	9	None	replace
50	[BUG]  [BUGGY]  optionalArg  =  option.getOptionalArg();  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      public  static  Option  create(String  opt)  throws  IllegalArgumentException  {  Option  option  =  new  Option(opt,  description);  option.setLongOpt(longopt);  option.setRequired(required);  option.setOptionalArg(optionalArg);      [BUGGY]  optionalArg  =  option.getOptionalArg();  [BUGGY]      option.setType(type);  option.setValueSeparator(valuesep);  option.setArgName(argName);  OptionBuilder.reset();  return  option;  }  [CLASS]  OptionBuilder  [METHOD]  create  [RETURN_TYPE]  Option  String  opt  [VARIABLES]  boolean  hasArg  newRequired  optionalArg  required  OptionBuilder  instance  char  opt  sep  valuesep  Object  newType  type  Option  option  String  argName  description  longopt  name  newDescription  newLongopt  opt  int  num  numArgs  numberOfArgs  	projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java	0.3333333333333333	355	355	1	replace	optionalArg  =  option.getOptionalArg();	  if(hasArg)    {    option.setType(type);    }    else    {    OptionBuilder.reset();    }    	non-compiled	[CE]  <identifier>  expected	45	None	replace
51	[BUG]  [BUGGY]  optionalArg.reset();  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]      public  static  Option  create(String  opt)  throws  IllegalArgumentException  {  Option  option  =  new  Option(opt,  description);  option.setLongOpt(longopt);  option.setRequired(required);  option.setOptionalArg(optionalArg);      [BUGGY]  optionalArg.reset();  [BUGGY]      option.setType(type);  option.setValueSeparator(valuesep);  option.setArgName(argName);  OptionBuilder.reset();  return  option;  }  [CLASS]  OptionBuilder  [METHOD]  create  [RETURN_TYPE]  Option  String  opt  [VARIABLES]  boolean  hasArg  newRequired  optionalArg  required  OptionBuilder  instance  char  opt  sep  valuesep  Object  newType  type  Option  option  String  argName  description  longopt  name  newDescription  newLongopt  opt  int  num  numArgs  numberOfArgs  	projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java	0.3333333333333333	355	355	1	replace	optionalArg.reset();	  if(hasArg)    {    option.setType(type);    }    else    {    OptionBuilder.reset();    }    	non-compiled	[CE]  <identifier>  expected	45	None	replace
52	[BUG]  [BUGGY]  OptionBuilder.instance().setArgs(numberOfArgs);  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      public  static  Option  create(String  opt)  throws  IllegalArgumentException  {  Option  option  =  new  Option(opt,  description);  option.setLongOpt(longopt);  option.setRequired(required);  option.setOptionalArg(optionalArg);      [BUGGY]  OptionBuilder.instance().setArgs(numberOfArgs);  [BUGGY]      option.setArgs(numberOfArgs);  option.setType(type);  option.setValueSeparator(valuesep);  option.setArgName(argName);  OptionBuilder.reset();  return  option;  }  [CLASS]  OptionBuilder  [METHOD]  create  [RETURN_TYPE]  Option  String  opt  [VARIABLES]  boolean  hasArg  newRequired  optionalArg  required  OptionBuilder  instance  char  opt  sep  valuesep  Object  newType  type  Option  option  String  argName  description  longopt  name  newDescription  newLongopt  opt  int  num  numArgs  numberOfArgs  	projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java	0.3333333333333333	355	355	1	replace	OptionBuilder.instance().setArgs(numberOfArgs);	  OptionBuilder.instance().setOptionalArg(optionalArg);    	non-compiled	[CE]  <identifier>  expected	6	None	replace
53	[BUG]  [BUGGY]  OptionBuilder.instance().setArgs(optionalArg);  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      public  static  Option  create(String  opt)  throws  IllegalArgumentException  {  Option  option  =  new  Option(opt,  description);  option.setLongOpt(longopt);  option.setRequired(required);  option.setOptionalArg(optionalArg);      [BUGGY]  OptionBuilder.instance().setArgs(optionalArg);  [BUGGY]      option.setArgs(numberOfArgs);  option.setType(type);  option.setValueSeparator(valuesep);  option.setArgName(argName);  OptionBuilder.reset();  return  option;  }  [CLASS]  OptionBuilder  [METHOD]  create  [RETURN_TYPE]  Option  String  opt  [VARIABLES]  boolean  hasArg  newRequired  optionalArg  required  OptionBuilder  instance  char  opt  sep  valuesep  Object  newType  type  Option  option  String  argName  description  longopt  name  newDescription  newLongopt  opt  int  num  numArgs  numberOfArgs  	projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java	0.3333333333333333	355	355	1	replace	OptionBuilder.instance().setArgs(optionalArg);	  OptionBuilder.instance().setOptionalArg(optionalArg);    	non-compiled	[CE]  <identifier>  expected	6	None	replace
54	[BUG]  [BUGGY]  OptionBuilder.instance().setArg(optionalArg);  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      public  static  Option  create(String  opt)  throws  IllegalArgumentException  {  Option  option  =  new  Option(opt,  description);  option.setLongOpt(longopt);  option.setRequired(required);  option.setOptionalArg(optionalArg);      [BUGGY]  OptionBuilder.instance().setArg(optionalArg);  [BUGGY]      option.setArgs(numberOfArgs);  option.setType(type);  option.setValueSeparator(valuesep);  option.setArgName(argName);  OptionBuilder.reset();  return  option;  }  [CLASS]  OptionBuilder  [METHOD]  create  [RETURN_TYPE]  Option  String  opt  [VARIABLES]  boolean  hasArg  newRequired  optionalArg  required  OptionBuilder  instance  char  opt  sep  valuesep  Object  newType  type  Option  option  String  argName  description  longopt  name  newDescription  newLongopt  opt  int  num  numArgs  numberOfArgs  	projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java	0.3333333333333333	355	355	1	replace	OptionBuilder.instance().setArg(optionalArg);	  OptionBuilder.instance().setOptionalArg(optionalArg);    	non-compiled	[CE]  <identifier>  expected	6	None	replace
55	[BUG]  [BUGGY]  OptionBuilder.instance().setType(optionalArg);  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      public  static  Option  create(String  opt)  throws  IllegalArgumentException  {  Option  option  =  new  Option(opt,  description);  option.setLongOpt(longopt);  option.setRequired(required);  option.setOptionalArg(optionalArg);      [BUGGY]  OptionBuilder.instance().setType(optionalArg);  [BUGGY]      option.setArgs(numberOfArgs);  option.setType(type);  option.setValueSeparator(valuesep);  option.setArgName(argName);  OptionBuilder.reset();  return  option;  }  [CLASS]  OptionBuilder  [METHOD]  create  [RETURN_TYPE]  Option  String  opt  [VARIABLES]  boolean  hasArg  newRequired  optionalArg  required  OptionBuilder  instance  char  opt  sep  valuesep  Object  newType  type  Option  option  String  argName  description  longopt  name  newDescription  newLongopt  opt  int  num  numArgs  numberOfArgs  	projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java	0.3333333333333333	355	355	1	replace	OptionBuilder.instance().setType(optionalArg);	  OptionBuilder.instance().setType(newType);    	non-compiled	[CE]  <identifier>  expected	8	None	replace
56	[BUG]  [BUGGY]  OptionBuilder.instance().addArg(type);  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      public  static  Option  create(String  opt)  throws  IllegalArgumentException  {  Option  option  =  new  Option(opt,  description);  option.setLongOpt(longopt);  option.setRequired(required);  option.setOptionalArg(optionalArg);      [BUGGY]  OptionBuilder.instance().addArg(type);  [BUGGY]      option.setArgs(numberOfArgs);  option.setType(type);  option.setValueSeparator(valuesep);  option.setArgName(argName);  OptionBuilder.reset();  return  option;  }  [CLASS]  OptionBuilder  [METHOD]  create  [RETURN_TYPE]  Option  String  opt  [VARIABLES]  boolean  hasArg  newRequired  optionalArg  required  OptionBuilder  instance  char  opt  sep  valuesep  Object  newType  type  Option  option  String  argName  description  longopt  name  newDescription  newLongopt  opt  int  num  numArgs  numberOfArgs  	projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java	0.3333333333333333	355	355	1	replace	OptionBuilder.instance().addArg(type);	  OptionBuilder.instance().addArg(argName);    	non-compiled	[CE]  <identifier>  expected	47	None	replace
57	[BUG]  [BUGGY]  OptionBuilder.instance().addArg(valuesep);  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      public  static  Option  create(String  opt)  throws  IllegalArgumentException  {  Option  option  =  new  Option(opt,  description);  option.setLongOpt(longopt);  option.setRequired(required);  option.setOptionalArg(optionalArg);      [BUGGY]  OptionBuilder.instance().addArg(valuesep);  [BUGGY]      option.setArgs(numberOfArgs);  option.setType(type);  option.setValueSeparator(valuesep);  option.setArgName(argName);  OptionBuilder.reset();  return  option;  }  [CLASS]  OptionBuilder  [METHOD]  create  [RETURN_TYPE]  Option  String  opt  [VARIABLES]  boolean  hasArg  newRequired  optionalArg  required  OptionBuilder  instance  char  opt  sep  valuesep  Object  newType  type  Option  option  String  argName  description  longopt  name  newDescription  newLongopt  opt  int  num  numArgs  numberOfArgs  	projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java	0.3333333333333333	355	355	1	replace	OptionBuilder.instance().addArg(valuesep);	  OptionBuilder.instance().addArg(argName);    	non-compiled	[CE]  <identifier>  expected	47	None	replace
58	[BUG]  [BUGGY]  OptionBuilder.instance().setArgName(argName);  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      public  static  Option  create(String  opt)  throws  IllegalArgumentException  {  Option  option  =  new  Option(opt,  description);  option.setLongOpt(longopt);  option.setRequired(required);  option.setOptionalArg(optionalArg);      [BUGGY]  OptionBuilder.instance().setArgName(argName);  [BUGGY]      option.setArgs(numberOfArgs);  option.setType(type);  option.setValueSeparator(valuesep);  option.setArgName(argName);  OptionBuilder.reset();  return  option;  }  [CLASS]  OptionBuilder  [METHOD]  create  [RETURN_TYPE]  Option  String  opt  [VARIABLES]  boolean  hasArg  newRequired  optionalArg  required  OptionBuilder  instance  char  opt  sep  valuesep  Object  newType  type  Option  option  String  argName  description  longopt  name  newDescription  newLongopt  opt  int  num  numArgs  numberOfArgs  	projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java	0.3333333333333333	355	355	1	replace	OptionBuilder.instance().setArgName(argName);	  OptionBuilder.instance().addArg(argName);    	non-compiled	[CE]  <identifier>  expected	47	None	replace
59	[BUG]  [BUGGY]  OptionBuilder.instance().setValues(optionalArg);  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      public  static  Option  create(String  opt)  throws  IllegalArgumentException  {  Option  option  =  new  Option(opt,  description);  option.setLongOpt(longopt);  option.setRequired(required);  option.setOptionalArg(optionalArg);      [BUGGY]  OptionBuilder.instance().setValues(optionalArg);  [BUGGY]      option.setArgs(numberOfArgs);  option.setType(type);  option.setValueSeparator(valuesep);  option.setArgName(argName);  OptionBuilder.reset();  return  option;  }  [CLASS]  OptionBuilder  [METHOD]  create  [RETURN_TYPE]  Option  String  opt  [VARIABLES]  boolean  hasArg  newRequired  optionalArg  required  OptionBuilder  instance  char  opt  sep  valuesep  Object  newType  type  Option  option  String  argName  description  longopt  name  newDescription  newLongopt  opt  int  num  numArgs  numberOfArgs  	projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java	0.3333333333333333	355	355	1	replace	OptionBuilder.instance().setValues(optionalArg);	  OptionBuilder.instance().setValues(numberOfArgs);    	non-compiled	[CE]  <identifier>  expected	7	None	replace
60	[BUG]  [BUGGY]  OptionBuilder.instance().setValues(numberOfArgs  +  1);  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      public  static  Option  create(String  opt)  throws  IllegalArgumentException  {  Option  option  =  new  Option(opt,  description);  option.setLongOpt(longopt);  option.setRequired(required);  option.setOptionalArg(optionalArg);      [BUGGY]  OptionBuilder.instance().setValues(numberOfArgs  +  1);  [BUGGY]      option.setArgs(numberOfArgs);  option.setType(type);  option.setValueSeparator(valuesep);  option.setArgName(argName);  OptionBuilder.reset();  return  option;  }  [CLASS]  OptionBuilder  [METHOD]  create  [RETURN_TYPE]  Option  String  opt  [VARIABLES]  boolean  hasArg  newRequired  optionalArg  required  OptionBuilder  instance  char  opt  sep  valuesep  Object  newType  type  Option  option  String  argName  description  longopt  name  newDescription  newLongopt  opt  int  num  numArgs  numberOfArgs  	projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java	0.3333333333333333	355	355	1	replace	OptionBuilder.instance().setValues(numberOfArgs  +  1);	  OptionBuilder.instance().setValues(numberOfArgs);    	non-compiled	[CE]  <identifier>  expected	7	None	replace
61	[BUG]  [BUGGY]  OptionBuilder.instance().setValues(opt);  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      public  static  Option  create(String  opt)  throws  IllegalArgumentException  {  Option  option  =  new  Option(opt,  description);  option.setLongOpt(longopt);  option.setRequired(required);  option.setOptionalArg(optionalArg);      [BUGGY]  OptionBuilder.instance().setValues(opt);  [BUGGY]      option.setArgs(numberOfArgs);  option.setType(type);  option.setValueSeparator(valuesep);  option.setArgName(argName);  OptionBuilder.reset();  return  option;  }  [CLASS]  OptionBuilder  [METHOD]  create  [RETURN_TYPE]  Option  String  opt  [VARIABLES]  boolean  hasArg  newRequired  optionalArg  required  OptionBuilder  instance  char  opt  sep  valuesep  Object  newType  type  Option  option  String  argName  description  longopt  name  newDescription  newLongopt  opt  int  num  numArgs  numberOfArgs  	projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java	0.3333333333333333	355	355	1	replace	OptionBuilder.instance().setValues(opt);	  OptionBuilder.instance().setValues(numberOfArgs);    	non-compiled	[CE]  <identifier>  expected	7	None	replace
62	[BUG]  [BUGGY]  OptionBuilder.append(description);  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      public  static  Option  create(String  opt)  throws  IllegalArgumentException  {  Option  option  =  new  Option(opt,  description);  option.setLongOpt(longopt);  option.setRequired(required);  option.setOptionalArg(optionalArg);      [BUGGY]  OptionBuilder.append(description);  [BUGGY]      option.setArgs(numberOfArgs);  option.setType(type);  option.setValueSeparator(valuesep);  option.setArgName(argName);  OptionBuilder.reset();  return  option;  }  [CLASS]  OptionBuilder  [METHOD]  create  [RETURN_TYPE]  Option  String  opt  [VARIABLES]  boolean  hasArg  newRequired  optionalArg  required  OptionBuilder  instance  char  opt  sep  valuesep  Object  newType  type  Option  option  String  argName  description  longopt  name  newDescription  newLongopt  opt  int  num  numArgs  numberOfArgs  	projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java	0.3333333333333333	355	355	1	replace	OptionBuilder.append(description);	  OptionBuilder.append(newDescription);    	non-compiled	[CE]  <identifier>  expected	29	None	replace
63	[BUG]  [BUGGY]  OptionBuilder.instance.setArgs(numberOfArgs);  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      public  static  Option  create(String  opt)  throws  IllegalArgumentException  {  Option  option  =  new  Option(opt,  description);  option.setLongOpt(longopt);  option.setRequired(required);  option.setOptionalArg(optionalArg);      [BUGGY]  OptionBuilder.instance.setArgs(numberOfArgs);  [BUGGY]      option.setArgs(numberOfArgs);  option.setType(type);  option.setValueSeparator(valuesep);  option.setArgName(argName);  OptionBuilder.reset();  return  option;  }  [CLASS]  OptionBuilder  [METHOD]  create  [RETURN_TYPE]  Option  String  opt  [VARIABLES]  boolean  hasArg  newRequired  optionalArg  required  OptionBuilder  instance  char  opt  sep  valuesep  Object  newType  type  Option  option  String  argName  description  longopt  name  newDescription  newLongopt  opt  int  num  numArgs  numberOfArgs  	projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java	0.3333333333333333	355	355	1	replace	OptionBuilder.instance.setArgs(numberOfArgs);	  OptionBuilder.instance.setOptionalArg(optionalArg);    	non-compiled	[CE]  <identifier>  expected	10	None	replace
64	[BUG]  [BUGGY]  OptionBuilder.instance.setArgs(optionalArgs);  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      public  static  Option  create(String  opt)  throws  IllegalArgumentException  {  Option  option  =  new  Option(opt,  description);  option.setLongOpt(longopt);  option.setRequired(required);  option.setOptionalArg(optionalArg);      [BUGGY]  OptionBuilder.instance.setArgs(optionalArgs);  [BUGGY]      option.setArgs(numberOfArgs);  option.setType(type);  option.setValueSeparator(valuesep);  option.setArgName(argName);  OptionBuilder.reset();  return  option;  }  [CLASS]  OptionBuilder  [METHOD]  create  [RETURN_TYPE]  Option  String  opt  [VARIABLES]  boolean  hasArg  newRequired  optionalArg  required  OptionBuilder  instance  char  opt  sep  valuesep  Object  newType  type  Option  option  String  argName  description  longopt  name  newDescription  newLongopt  opt  int  num  numArgs  numberOfArgs  	projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java	0.3333333333333333	355	355	1	replace	OptionBuilder.instance.setArgs(optionalArgs);	  OptionBuilder.instance.setOptionalArg(optionalArg);    	non-compiled	[CE]  <identifier>  expected	10	None	replace
65	[BUG]  [BUGGY]  OptionBuilder.instance().addArg(optionalArg,  description);  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      public  static  Option  create(String  opt)  throws  IllegalArgumentException  {  Option  option  =  new  Option(opt,  description);  option.setLongOpt(longopt);  option.setRequired(required);  option.setOptionalArg(optionalArg);      [BUGGY]  OptionBuilder.instance().addArg(optionalArg,  description);  [BUGGY]      option.setArgs(numberOfArgs);  option.setType(type);  option.setValueSeparator(valuesep);  option.setArgName(argName);  OptionBuilder.reset();  return  option;  }  [CLASS]  OptionBuilder  [METHOD]  create  [RETURN_TYPE]  Option  String  opt  [VARIABLES]  boolean  hasArg  newRequired  optionalArg  required  OptionBuilder  instance  char  opt  sep  valuesep  Object  newType  type  Option  option  String  argName  description  longopt  name  newDescription  newLongopt  opt  int  num  numArgs  numberOfArgs  	projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java	0.3333333333333333	355	355	1	replace	OptionBuilder.instance().addArg(optionalArg,  description);	  OptionBuilder.instance().addOptionalArg(optionalArg,    description);    	non-compiled	[CE]  <identifier>  expected	24	None	replace
66	[BUG]  [BUGGY]  OptionBuilder.instance().addDescription(optionalArg,  description);  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      public  static  Option  create(String  opt)  throws  IllegalArgumentException  {  Option  option  =  new  Option(opt,  description);  option.setLongOpt(longopt);  option.setRequired(required);  option.setOptionalArg(optionalArg);      [BUGGY]  OptionBuilder.instance().addDescription(optionalArg,  description);  [BUGGY]      option.setArgs(numberOfArgs);  option.setType(type);  option.setValueSeparator(valuesep);  option.setArgName(argName);  OptionBuilder.reset();  return  option;  }  [CLASS]  OptionBuilder  [METHOD]  create  [RETURN_TYPE]  Option  String  opt  [VARIABLES]  boolean  hasArg  newRequired  optionalArg  required  OptionBuilder  instance  char  opt  sep  valuesep  Object  newType  type  Option  option  String  argName  description  longopt  name  newDescription  newLongopt  opt  int  num  numArgs  numberOfArgs  	projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java	0.3333333333333333	355	355	1	replace	OptionBuilder.instance().addDescription(optionalArg,  description);	  OptionBuilder.instance().addOptionalArg(optionalArg,    description);    	non-compiled	[CE]  <identifier>  expected	24	None	replace
67	[BUG]  [BUGGY]  OptionBuilder.instance().addOptionalArg(optionalArg,  type);  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]      public  static  Option  create(String  opt)  throws  IllegalArgumentException  {  Option  option  =  new  Option(opt,  description);  option.setLongOpt(longopt);  option.setRequired(required);  option.setOptionalArg(optionalArg);      [BUGGY]  OptionBuilder.instance().addOptionalArg(optionalArg,  type);  [BUGGY]      option.setArgs(numberOfArgs);  option.setType(type);  option.setValueSeparator(valuesep);  option.setArgName(argName);  OptionBuilder.reset();  return  option;  }  [CLASS]  OptionBuilder  [METHOD]  create  [RETURN_TYPE]  Option  String  opt  [VARIABLES]  boolean  hasArg  newRequired  optionalArg  required  OptionBuilder  instance  char  opt  sep  valuesep  Object  newType  type  Option  option  String  argName  description  longopt  name  newDescription  newLongopt  opt  int  num  numArgs  numberOfArgs  	projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java	0.3333333333333333	355	355	1	replace	OptionBuilder.instance().addOptionalArg(optionalArg,  type);	  OptionBuilder.instance().addOptionalArg(optionalArg,    description);    	non-compiled	[CE]  <identifier>  expected	24	None	replace
68	[BUG]  [BUGGY]  OptionBuilder.addArg(argName);  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      public  static  Option  create(String  opt)  throws  IllegalArgumentException  {  Option  option  =  new  Option(opt,  description);  option.setLongOpt(longopt);  option.setRequired(required);  option.setOptionalArg(optionalArg);      [BUGGY]  OptionBuilder.addArg(argName);  [BUGGY]      option.setArgs(numberOfArgs);  option.setType(type);  option.setValueSeparator(valuesep);  option.setArgName(argName);  OptionBuilder.reset();  return  option;  }  [CLASS]  OptionBuilder  [METHOD]  create  [RETURN_TYPE]  Option  String  opt  [VARIABLES]  boolean  hasArg  newRequired  optionalArg  required  OptionBuilder  instance  char  opt  sep  valuesep  Object  newType  type  Option  option  String  argName  description  longopt  name  newDescription  newLongopt  opt  int  num  numArgs  numberOfArgs  	projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java	0.3333333333333333	355	355	1	replace	OptionBuilder.addArg(argName);	  OptionBuilder.addArg(optionalArg);    	non-compiled	[CE]  <identifier>  expected	15	None	replace
69	[BUG]  [BUGGY]  OptionBuilder.setValueSeparator(optionalArg);  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      public  static  Option  create(String  opt)  throws  IllegalArgumentException  {  Option  option  =  new  Option(opt,  description);  option.setLongOpt(longopt);  option.setRequired(required);  option.setOptionalArg(optionalArg);      [BUGGY]  OptionBuilder.setValueSeparator(optionalArg);  [BUGGY]      option.setArgs(numberOfArgs);  option.setType(type);  option.setValueSeparator(valuesep);  option.setArgName(argName);  OptionBuilder.reset();  return  option;  }  [CLASS]  OptionBuilder  [METHOD]  create  [RETURN_TYPE]  Option  String  opt  [VARIABLES]  boolean  hasArg  newRequired  optionalArg  required  OptionBuilder  instance  char  opt  sep  valuesep  Object  newType  type  Option  option  String  argName  description  longopt  name  newDescription  newLongopt  opt  int  num  numArgs  numberOfArgs  	projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java	0.3333333333333333	355	355	1	replace	OptionBuilder.setValueSeparator(optionalArg);	  OptionBuilder.setValueSeparator(valuesep);    	non-compiled	[CE]  <identifier>  expected	22	None	replace
70	[BUG]  [BUGGY]  OptionBuilder.setValueSeparator(sep);  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      public  static  Option  create(String  opt)  throws  IllegalArgumentException  {  Option  option  =  new  Option(opt,  description);  option.setLongOpt(longopt);  option.setRequired(required);  option.setOptionalArg(optionalArg);      [BUGGY]  OptionBuilder.setValueSeparator(sep);  [BUGGY]      option.setArgs(numberOfArgs);  option.setType(type);  option.setValueSeparator(valuesep);  option.setArgName(argName);  OptionBuilder.reset();  return  option;  }  [CLASS]  OptionBuilder  [METHOD]  create  [RETURN_TYPE]  Option  String  opt  [VARIABLES]  boolean  hasArg  newRequired  optionalArg  required  OptionBuilder  instance  char  opt  sep  valuesep  Object  newType  type  Option  option  String  argName  description  longopt  name  newDescription  newLongopt  opt  int  num  numArgs  numberOfArgs  	projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java	0.3333333333333333	355	355	1	replace	OptionBuilder.setValueSeparator(sep);	  OptionBuilder.setValueSeparator(valuesep);    	non-compiled	[CE]  <identifier>  expected	22	None	replace
71	[BUG]  [BUGGY]  OptionBuilder.setValueSeparator(valuesep  +  1);  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      public  static  Option  create(String  opt)  throws  IllegalArgumentException  {  Option  option  =  new  Option(opt,  description);  option.setLongOpt(longopt);  option.setRequired(required);  option.setOptionalArg(optionalArg);      [BUGGY]  OptionBuilder.setValueSeparator(valuesep  +  1);  [BUGGY]      option.setArgs(numberOfArgs);  option.setType(type);  option.setValueSeparator(valuesep);  option.setArgName(argName);  OptionBuilder.reset();  return  option;  }  [CLASS]  OptionBuilder  [METHOD]  create  [RETURN_TYPE]  Option  String  opt  [VARIABLES]  boolean  hasArg  newRequired  optionalArg  required  OptionBuilder  instance  char  opt  sep  valuesep  Object  newType  type  Option  option  String  argName  description  longopt  name  newDescription  newLongopt  opt  int  num  numArgs  numberOfArgs  	projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java	0.3333333333333333	355	355	1	replace	OptionBuilder.setValueSeparator(valuesep  +  1);	  OptionBuilder.setValueSeparator(valuesep);    	non-compiled	[CE]  <identifier>  expected	22	None	replace
72	[BUG]  [BUGGY]  option.setType(type);  option.setValueSeparator(valuesep);  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      public  static  Option  create(String  opt)  throws  IllegalArgumentException  {  Option  option  =  new  Option(opt,  description);  option.setLongOpt(longopt);  option.setRequired(required);  option.setOptionalArg(optionalArg);      [BUGGY]  option.setType(type);  option.setValueSeparator(valuesep);  [BUGGY]      option.setType(type);  option.setValueSeparator(valuesep);  option.setArgName(argName);  OptionBuilder.reset();  return  option;  }  [CLASS]  OptionBuilder  [METHOD]  create  [RETURN_TYPE]  Option  String  opt  [VARIABLES]  boolean  hasArg  newRequired  optionalArg  required  OptionBuilder  instance  char  opt  sep  valuesep  Object  newType  type  Option  option  String  argName  description  longopt  name  newDescription  newLongopt  opt  int  num  numArgs  numberOfArgs  	projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java	0.3333333333333333	355	355	1	replace	option.setType(type);  option.setValueSeparator(valuesep);	  if(hasArg)    {    option.setType(type);    option.setValueSeparator(valuesep);    }    	non-compiled	[CE]  <identifier>  expected	44	None	replace
73	[BUG]  [BUGGY]  OptionBuilder.instance().setType(type);  option.setValueSeparator(valuesep);  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      public  static  Option  create(String  opt)  throws  IllegalArgumentException  {  Option  option  =  new  Option(opt,  description);  option.setLongOpt(longopt);  option.setRequired(required);  option.setOptionalArg(optionalArg);      [BUGGY]  OptionBuilder.instance().setType(type);  option.setValueSeparator(valuesep);  [BUGGY]      option.setType(type);  option.setValueSeparator(valuesep);  option.setArgName(argName);  OptionBuilder.reset();  return  option;  }  [CLASS]  OptionBuilder  [METHOD]  create  [RETURN_TYPE]  Option  String  opt  [VARIABLES]  boolean  hasArg  newRequired  optionalArg  required  OptionBuilder  instance  char  opt  sep  valuesep  Object  newType  type  Option  option  String  argName  description  longopt  name  newDescription  newLongopt  opt  int  num  numArgs  numberOfArgs  	projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java	0.3333333333333333	355	355	1	replace	OptionBuilder.instance().setType(type);  option.setValueSeparator(valuesep);	  if(hasArg)    {    option.setType(type);    option.setValueSeparator(valuesep);    }    	non-compiled	[CE]  <identifier>  expected	44	None	replace
74	[BUG]  [BUGGY]  option.setType(type);  option.setValueSeparator(valuesep);  }  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]      public  static  Option  create(String  opt)  throws  IllegalArgumentException  {  Option  option  =  new  Option(opt,  description);  option.setLongOpt(longopt);  option.setRequired(required);  option.setOptionalArg(optionalArg);      [BUGGY]  option.setType(type);  option.setValueSeparator(valuesep);  }  [BUGGY]      option.setType(type);  option.setValueSeparator(valuesep);  option.setArgName(argName);  OptionBuilder.reset();  return  option;  }  [CLASS]  OptionBuilder  [METHOD]  create  [RETURN_TYPE]  Option  String  opt  [VARIABLES]  boolean  hasArg  newRequired  optionalArg  required  OptionBuilder  instance  char  opt  sep  valuesep  Object  newType  type  Option  option  String  argName  description  longopt  name  newDescription  newLongopt  opt  int  num  numArgs  numberOfArgs  	projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java	0.3333333333333333	355	355	1	replace	option.setType(type);  option.setValueSeparator(valuesep);  }	  if(hasArg)    {    option.setType(type);    option.setValueSeparator(valuesep);    }    	non-compiled	[CE]  <identifier>  expected	44	None	replace
75	[BUG]  [BUGGY]  OptionBuilder.addArgs(numberOfArgs);  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      public  static  Option  create(String  opt)  throws  IllegalArgumentException  {  Option  option  =  new  Option(opt,  description);  option.setLongOpt(longopt);  option.setRequired(required);  option.setOptionalArg(optionalArg);      [BUGGY]  OptionBuilder.addArgs(numberOfArgs);  [BUGGY]      option.setArgs(numberOfArgs);  option.setType(type);  option.setValueSeparator(valuesep);  option.setArgName(argName);  OptionBuilder.reset();  return  option;  }  [CLASS]  OptionBuilder  [METHOD]  create  [RETURN_TYPE]  Option  String  opt  [VARIABLES]  boolean  hasArg  newRequired  optionalArg  required  OptionBuilder  instance  char  opt  sep  valuesep  Object  newType  type  Option  option  String  argName  description  longopt  name  newDescription  newLongopt  opt  int  num  numArgs  numberOfArgs  	projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java	0.3333333333333333	355	355	1	replace	OptionBuilder.addArgs(numberOfArgs);	  OptionBuilder.addOptionalArg(optionalArg);    	non-compiled	[CE]  <identifier>  expected	13	None	replace
76	[BUG]  [BUGGY]  OptionBuilder.init(optionalArg,  description);  [CE]  <identifier>  expected  [FE]            AssertionFailedError      [CONTEXT]      public  static  Option  create(String  opt)  throws  IllegalArgumentException  {  Option  option  =  new  Option(opt,  description);  option.setLongOpt(longopt);  option.setRequired(required);  option.setOptionalArg(optionalArg);      [BUGGY]  OptionBuilder.init(optionalArg,  description);  [BUGGY]      option.setArgs(numberOfArgs);  option.setType(type);  option.setValueSeparator(valuesep);  option.setArgName(argName);  OptionBuilder.reset();  return  option;  }  [CLASS]  OptionBuilder  [METHOD]  create  [RETURN_TYPE]  Option  String  opt  [VARIABLES]  boolean  hasArg  newRequired  optionalArg  required  OptionBuilder  instance  char  opt  sep  valuesep  Object  newType  type  Option  option  String  argName  description  longopt  name  newDescription  newLongopt  opt  int  num  numArgs  numberOfArgs  	projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java	0.3333333333333333	355	355	1	replace	OptionBuilder.init(optionalArg,  description);	  OptionBuilder.init(optionalArg);    	non-compiled	[CE]  <identifier>  expected	31	None	replace
77	[BUG]  [BUGGY]  OptionBuilder.init();  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      public  static  Option  create(String  opt)  throws  IllegalArgumentException  {  Option  option  =  new  Option(opt,  description);  option.setLongOpt(longopt);  option.setRequired(required);  option.setOptionalArg(optionalArg);      [BUGGY]  OptionBuilder.init();  [BUGGY]      option.setArgs(numberOfArgs);  option.setType(type);  option.setValueSeparator(valuesep);  option.setArgName(argName);  OptionBuilder.reset();  return  option;  }  [CLASS]  OptionBuilder  [METHOD]  create  [RETURN_TYPE]  Option  String  opt  [VARIABLES]  boolean  hasArg  newRequired  optionalArg  required  OptionBuilder  instance  char  opt  sep  valuesep  Object  newType  type  Option  option  String  argName  description  longopt  name  newDescription  newLongopt  opt  int  num  numArgs  numberOfArgs  	projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java	0.3333333333333333	355	355	1	replace	OptionBuilder.init();	  OptionBuilder.init(optionalArg);    	non-compiled	[CE]  <identifier>  expected	31	None	replace
78	[BUG]  [BUGGY]  OptionBuilder.instance().setArgs(optionalArgs);  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      public  static  Option  create(String  opt)  throws  IllegalArgumentException  {  Option  option  =  new  Option(opt,  description);  option.setLongOpt(longopt);  option.setRequired(required);  option.setOptionalArg(optionalArg);      [BUGGY]  OptionBuilder.instance().setArgs(optionalArgs);  [BUGGY]      option.setArgs(numberOfArgs);  option.setType(type);  option.setValueSeparator(valuesep);  option.setArgName(argName);  OptionBuilder.reset();  return  option;  }  [CLASS]  OptionBuilder  [METHOD]  create  [RETURN_TYPE]  Option  String  opt  [VARIABLES]  boolean  hasArg  newRequired  optionalArg  required  OptionBuilder  instance  char  opt  sep  valuesep  Object  newType  type  Option  option  String  argName  description  longopt  name  newDescription  newLongopt  opt  int  num  numArgs  numberOfArgs  	projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java	0.3333333333333333	355	355	1	replace	OptionBuilder.instance().setArgs(optionalArgs);	  OptionBuilder.instance().addArg(optionalArg);    	non-compiled	[CE]  <identifier>  expected	23	None	replace
79	[BUG]  [BUGGY]  option.setNumeric(numberOfArgs  +  2);  [CE]  <identifier>  expected  [FE]            AssertionFailedError      [CONTEXT]      public  static  Option  create(String  opt)  throws  IllegalArgumentException  {  Option  option  =  new  Option(opt,  description);  option.setLongOpt(longopt);  option.setRequired(required);  option.setOptionalArg(optionalArg);      [BUGGY]  option.setNumeric(numberOfArgs  +  2);  [BUGGY]      option.setArgs(numberOfArgs);  option.setType(type);  option.setValueSeparator(valuesep);  option.setArgName(argName);  OptionBuilder.reset();  return  option;  }  [CLASS]  OptionBuilder  [METHOD]  create  [RETURN_TYPE]  Option  String  opt  [VARIABLES]  boolean  hasArg  newRequired  optionalArg  required  OptionBuilder  instance  char  opt  sep  valuesep  Object  newType  type  Option  option  String  argName  description  longopt  name  newDescription  newLongopt  opt  int  num  numArgs  numberOfArgs  	projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java	0.3333333333333333	355	355	1	replace	option.setNumeric(numberOfArgs  +  2);	  option.setNumeric(numberOfArgs    +    1);    	non-compiled	[CE]  <identifier>  expected	1	None	replace
80	[BUG]  [BUGGY]  OptionBuilder.addOption(optionalArg);  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      public  static  Option  create(String  opt)  throws  IllegalArgumentException  {  Option  option  =  new  Option(opt,  description);  option.setLongOpt(longopt);  option.setRequired(required);  option.setOptionalArg(optionalArg);      [BUGGY]  OptionBuilder.addOption(optionalArg);  [BUGGY]      option.setType(type);  option.setValueSeparator(valuesep);  option.setArgName(argName);  OptionBuilder.reset();  return  option;  }  [CLASS]  OptionBuilder  [METHOD]  create  [RETURN_TYPE]  Option  String  opt  [VARIABLES]  boolean  hasArg  newRequired  optionalArg  required  OptionBuilder  instance  char  opt  sep  valuesep  Object  newType  type  Option  option  String  argName  description  longopt  name  newDescription  newLongopt  opt  int  num  numArgs  numberOfArgs  	projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java	0.3333333333333333	355	355	1	replace	OptionBuilder.addOption(optionalArg);	  OptionBuilder.addOption(optionalOptionalArg);    	non-compiled	[CE]  <identifier>  expected	37	None	replace
81	[BUG]  [BUGGY]  OptionBuilder.addOption(optionalArg,  description);  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      public  static  Option  create(String  opt)  throws  IllegalArgumentException  {  Option  option  =  new  Option(opt,  description);  option.setLongOpt(longopt);  option.setRequired(required);  option.setOptionalArg(optionalArg);      [BUGGY]  OptionBuilder.addOption(optionalArg,  description);  [BUGGY]      option.setType(type);  option.setValueSeparator(valuesep);  option.setArgName(argName);  OptionBuilder.reset();  return  option;  }  [CLASS]  OptionBuilder  [METHOD]  create  [RETURN_TYPE]  Option  String  opt  [VARIABLES]  boolean  hasArg  newRequired  optionalArg  required  OptionBuilder  instance  char  opt  sep  valuesep  Object  newType  type  Option  option  String  argName  description  longopt  name  newDescription  newLongopt  opt  int  num  numArgs  numberOfArgs  	projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java	0.3333333333333333	355	355	1	replace	OptionBuilder.addOption(optionalArg,  description);	  OptionBuilder.addOption(optionalOptionalArg);    	non-compiled	[CE]  <identifier>  expected	37	None	replace
82	[BUG]  [BUGGY]  OptionBuilder.addOption(optionalArg,  newDescription);  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]      public  static  Option  create(String  opt)  throws  IllegalArgumentException  {  Option  option  =  new  Option(opt,  description);  option.setLongOpt(longopt);  option.setRequired(required);  option.setOptionalArg(optionalArg);      [BUGGY]  OptionBuilder.addOption(optionalArg,  newDescription);  [BUGGY]      option.setType(type);  option.setValueSeparator(valuesep);  option.setArgName(argName);  OptionBuilder.reset();  return  option;  }  [CLASS]  OptionBuilder  [METHOD]  create  [RETURN_TYPE]  Option  String  opt  [VARIABLES]  boolean  hasArg  newRequired  optionalArg  required  OptionBuilder  instance  char  opt  sep  valuesep  Object  newType  type  Option  option  String  argName  description  longopt  name  newDescription  newLongopt  opt  int  num  numArgs  numberOfArgs  	projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java	0.3333333333333333	355	355	1	replace	OptionBuilder.addOption(optionalArg,  newDescription);	  OptionBuilder.addOption(optionalOptionalArg);    	non-compiled	[CE]  <identifier>  expected	37	None	replace
83	[BUG]  [BUGGY]  OptionBuilder.instance.setValues(values);  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      public  static  Option  create(String  opt)  throws  IllegalArgumentException  {  Option  option  =  new  Option(opt,  description);  option.setLongOpt(longopt);  option.setRequired(required);  option.setOptionalArg(optionalArg);      [BUGGY]  OptionBuilder.instance.setValues(values);  [BUGGY]      option.setArgs(numberOfArgs);  option.setType(type);  option.setValueSeparator(valuesep);  option.setArgName(argName);  OptionBuilder.reset();  return  option;  }  [CLASS]  OptionBuilder  [METHOD]  create  [RETURN_TYPE]  Option  String  opt  [VARIABLES]  boolean  hasArg  newRequired  optionalArg  required  OptionBuilder  instance  char  opt  sep  valuesep  Object  newType  type  Option  option  String  argName  description  longopt  name  newDescription  newLongopt  opt  int  num  numArgs  numberOfArgs  	projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java	0.3333333333333333	355	355	1	replace	OptionBuilder.instance.setValues(values);	  OptionBuilder.instance.setValues(numberOfArgs);    	non-compiled	[CE]  <identifier>  expected	11	None	replace
84	[BUG]  [BUGGY]  OptionBuilder.instance.clear();  option.setDescription(description);  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      public  static  Option  create(String  opt)  throws  IllegalArgumentException  {  Option  option  =  new  Option(opt,  description);  option.setLongOpt(longopt);  option.setRequired(required);  option.setOptionalArg(optionalArg);      [BUGGY]  OptionBuilder.instance.clear();  option.setDescription(description);  [BUGGY]      option.setArgs(numberOfArgs);  option.setType(type);  option.setValueSeparator(valuesep);  option.setArgName(argName);  OptionBuilder.reset();  return  option;  }  [CLASS]  OptionBuilder  [METHOD]  create  [RETURN_TYPE]  Option  String  opt  [VARIABLES]  boolean  hasArg  newRequired  optionalArg  required  OptionBuilder  instance  char  opt  sep  valuesep  Object  newType  type  Option  option  String  argName  description  longopt  name  newDescription  newLongopt  opt  int  num  numArgs  numberOfArgs  	projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java	0.3333333333333333	355	355	1	replace	OptionBuilder.instance.clear();  option.setDescription(description);	  OptionBuilder.clear();    option.setDescription(description);    	non-compiled	[CE]  <identifier>  expected	41	None	replace
85	[BUG]  [BUGGY]  OptionBuilder.append(option);  [CE]  <identifier>  expected  [FE]            AssertionFailedError      [CONTEXT]      public  static  Option  create(String  opt)  throws  IllegalArgumentException  {  Option  option  =  new  Option(opt,  description);  option.setLongOpt(longopt);  option.setRequired(required);  option.setOptionalArg(optionalArg);      [BUGGY]  OptionBuilder.append(option);  [BUGGY]      option.setArgs(numberOfArgs);  option.setType(type);  option.setValueSeparator(valuesep);  option.setArgName(argName);  OptionBuilder.reset();  return  option;  }  [CLASS]  OptionBuilder  [METHOD]  create  [RETURN_TYPE]  Option  String  opt  [VARIABLES]  boolean  hasArg  newRequired  optionalArg  required  OptionBuilder  instance  char  opt  sep  valuesep  Object  newType  type  Option  option  String  argName  description  longopt  name  newDescription  newLongopt  opt  int  num  numArgs  numberOfArgs  	projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java	0.3333333333333333	355	355	1	replace	OptionBuilder.append(option);	  OptionBuilder.append(opt);    	non-compiled	[CE]  <identifier>  expected	34	None	replace
86	[BUG]  [BUGGY]  OptionBuilder.addOptional(optionalArg,  option);  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      public  static  Option  create(String  opt)  throws  IllegalArgumentException  {  Option  option  =  new  Option(opt,  description);  option.setLongOpt(longopt);  option.setRequired(required);  option.setOptionalArg(optionalArg);      [BUGGY]  OptionBuilder.addOptional(optionalArg,  option);  [BUGGY]      option.setArgs(numberOfArgs);  option.setType(type);  option.setValueSeparator(valuesep);  option.setArgName(argName);  OptionBuilder.reset();  return  option;  }  [CLASS]  OptionBuilder  [METHOD]  create  [RETURN_TYPE]  Option  String  opt  [VARIABLES]  boolean  hasArg  newRequired  optionalArg  required  OptionBuilder  instance  char  opt  sep  valuesep  Object  newType  type  Option  option  String  argName  description  longopt  name  newDescription  newLongopt  opt  int  num  numArgs  numberOfArgs  	projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java	0.3333333333333333	355	355	1	replace	OptionBuilder.addOptional(optionalArg,  option);	  OptionBuilder.addOptional(optionalArg,    description);    	non-compiled	[CE]  <identifier>  expected	14	None	replace
87	[BUG]  [BUGGY]  OptionBuilder.addDescription(optionalArg);  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      public  static  Option  create(String  opt)  throws  IllegalArgumentException  {  Option  option  =  new  Option(opt,  description);  option.setLongOpt(longopt);  option.setRequired(required);  option.setOptionalArg(optionalArg);      [BUGGY]  OptionBuilder.addDescription(optionalArg);  [BUGGY]      option.setArgs(numberOfArgs);  option.setType(type);  option.setValueSeparator(valuesep);  option.setArgName(argName);  OptionBuilder.reset();  return  option;  }  [CLASS]  OptionBuilder  [METHOD]  create  [RETURN_TYPE]  Option  String  opt  [VARIABLES]  boolean  hasArg  newRequired  optionalArg  required  OptionBuilder  instance  char  opt  sep  valuesep  Object  newType  type  Option  option  String  argName  description  longopt  name  newDescription  newLongopt  opt  int  num  numArgs  numberOfArgs  	projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java	0.3333333333333333	355	355	1	replace	OptionBuilder.addDescription(optionalArg);	  OptionBuilder.addOptional(optionalArg,    description);    	non-compiled	[CE]  <identifier>  expected	14	None	replace
88	[BUG]  [BUGGY]  OptionBuilder.setDescription(newDescription);  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      public  static  Option  create(String  opt)  throws  IllegalArgumentException  {  Option  option  =  new  Option(opt,  description);  option.setLongOpt(longopt);  option.setRequired(required);  option.setOptionalArg(optionalArg);      [BUGGY]  OptionBuilder.setDescription(newDescription);  [BUGGY]      option.setArgs(numberOfArgs);  option.setType(type);  option.setValueSeparator(valuesep);  option.setArgName(argName);  OptionBuilder.reset();  return  option;  }  [CLASS]  OptionBuilder  [METHOD]  create  [RETURN_TYPE]  Option  String  opt  [VARIABLES]  boolean  hasArg  newRequired  optionalArg  required  OptionBuilder  instance  char  opt  sep  valuesep  Object  newType  type  Option  option  String  argName  description  longopt  name  newDescription  newLongopt  opt  int  num  numArgs  numberOfArgs  	projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java	0.3333333333333333	355	355	1	replace	OptionBuilder.setDescription(newDescription);	  OptionBuilder.setDescription(description);    	non-compiled	[CE]  <identifier>  expected	17	None	replace
89	[BUG]  [BUGGY]  OptionBuilder.addOptionalArg(optionalArgs);  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      public  static  Option  create(String  opt)  throws  IllegalArgumentException  {  Option  option  =  new  Option(opt,  description);  option.setLongOpt(longopt);  option.setRequired(required);  option.setOptionalArg(optionalArg);      [BUGGY]  OptionBuilder.addOptionalArg(optionalArgs);  [BUGGY]      option.setArgs(numberOfArgs);  option.setType(type);  option.setValueSeparator(valuesep);  option.setArgName(argName);  OptionBuilder.reset();  return  option;  }  [CLASS]  OptionBuilder  [METHOD]  create  [RETURN_TYPE]  Option  String  opt  [VARIABLES]  boolean  hasArg  newRequired  optionalArg  required  OptionBuilder  instance  char  opt  sep  valuesep  Object  newType  type  Option  option  String  argName  description  longopt  name  newDescription  newLongopt  opt  int  num  numArgs  numberOfArgs  	projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java	0.3333333333333333	355	355	1	replace	OptionBuilder.addOptionalArg(optionalArgs);	  OptionBuilder.addOptionalArg(optionalArg);    	non-compiled	[CE]  <identifier>  expected	13	None	replace
90	[BUG]  [BUGGY]  OptionBuilder.setValueType(valuesep);  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      public  static  Option  create(String  opt)  throws  IllegalArgumentException  {  Option  option  =  new  Option(opt,  description);  option.setLongOpt(longopt);  option.setRequired(required);  option.setOptionalArg(optionalArg);      [BUGGY]  OptionBuilder.setValueType(valuesep);  [BUGGY]      option.setType(type);  option.setValueSeparator(valuesep);  option.setArgName(argName);  OptionBuilder.reset();  return  option;  }  [CLASS]  OptionBuilder  [METHOD]  create  [RETURN_TYPE]  Option  String  opt  [VARIABLES]  boolean  hasArg  newRequired  optionalArg  required  OptionBuilder  instance  char  opt  sep  valuesep  Object  newType  type  Option  option  String  argName  description  longopt  name  newDescription  newLongopt  opt  int  num  numArgs  numberOfArgs  	projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java	0.3333333333333333	355	355	1	replace	OptionBuilder.setValueType(valuesep);	  OptionBuilder.setType(type);    	non-compiled	[CE]  <identifier>  expected	9	None	replace
91	[BUG]  [BUGGY]  OptionBuilder.addOption(optionalArg,  option);  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      public  static  Option  create(String  opt)  throws  IllegalArgumentException  {  Option  option  =  new  Option(opt,  description);  option.setLongOpt(longopt);  option.setRequired(required);  option.setOptionalArg(optionalArg);      [BUGGY]  OptionBuilder.addOption(optionalArg,  option);  [BUGGY]      option.setType(type);  option.setValueSeparator(valuesep);  option.setArgName(argName);  OptionBuilder.reset();  return  option;  }  [CLASS]  OptionBuilder  [METHOD]  create  [RETURN_TYPE]  Option  String  opt  [VARIABLES]  boolean  hasArg  newRequired  optionalArg  required  OptionBuilder  instance  char  opt  sep  valuesep  Object  newType  type  Option  option  String  argName  description  longopt  name  newDescription  newLongopt  opt  int  num  numArgs  numberOfArgs  	projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java	0.3333333333333333	355	355	1	replace	OptionBuilder.addOption(optionalArg,  option);	  OptionBuilder.addOption(optionalOptionalArg);    	non-compiled	[CE]  <identifier>  expected	37	None	replace
92	[BUG]  [BUGGY]  if(hasArg)  {  option.setType(type);  option.setSeparator(valuesep);  }  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      public  static  Option  create(String  opt)  throws  IllegalArgumentException  {  Option  option  =  new  Option(opt,  description);  option.setLongOpt(longopt);  option.setRequired(required);  option.setOptionalArg(optionalArg);      [BUGGY]  if(hasArg)  {  option.setType(type);  option.setSeparator(valuesep);  }  [BUGGY]      option.setType(type);  option.setValueSeparator(valuesep);  option.setArgName(argName);  OptionBuilder.reset();  return  option;  }  [CLASS]  OptionBuilder  [METHOD]  create  [RETURN_TYPE]  Option  String  opt  [VARIABLES]  boolean  hasArg  newRequired  optionalArg  required  OptionBuilder  instance  char  opt  sep  valuesep  Object  newType  type  Option  option  String  argName  description  longopt  name  newDescription  newLongopt  opt  int  num  numArgs  numberOfArgs  	projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java	0.3333333333333333	355	355	1	replace	if(hasArg)  {  option.setType(type);  option.setSeparator(valuesep);  }	  if(hasArg)    {    option.setType(type);    option.setValueSeparator(valuesep);    }    	non-compiled	[CE]  <identifier>  expected	44	None	replace
93	[BUG]  [BUGGY]  OptionBuilder.instance().setArgName(optionalArg);  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      public  static  Option  create(String  opt)  throws  IllegalArgumentException  {  Option  option  =  new  Option(opt,  description);  option.setLongOpt(longopt);  option.setRequired(required);  option.setOptionalArg(optionalArg);      [BUGGY]  OptionBuilder.instance().setArgName(optionalArg);  [BUGGY]      option.setArgs(numberOfArgs);  option.setType(type);  option.setValueSeparator(valuesep);  option.setArgName(argName);  OptionBuilder.reset();  return  option;  }  [CLASS]  OptionBuilder  [METHOD]  create  [RETURN_TYPE]  Option  String  opt  [VARIABLES]  boolean  hasArg  newRequired  optionalArg  required  OptionBuilder  instance  char  opt  sep  valuesep  Object  newType  type  Option  option  String  argName  description  longopt  name  newDescription  newLongopt  opt  int  num  numArgs  numberOfArgs  	projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java	0.3333333333333333	355	355	1	replace	OptionBuilder.instance().setArgName(optionalArg);	  OptionBuilder.instance().setOptionalArg(optionalArg);    	non-compiled	[CE]  <identifier>  expected	6	None	replace
94	[BUG]  [BUGGY]  OptionBuilder.instance().setOptionalArg(optionalArgs);  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      public  static  Option  create(String  opt)  throws  IllegalArgumentException  {  Option  option  =  new  Option(opt,  description);  option.setLongOpt(longopt);  option.setRequired(required);  option.setOptionalArg(optionalArg);      [BUGGY]  OptionBuilder.instance().setOptionalArg(optionalArgs);  [BUGGY]      option.setArgs(numberOfArgs);  option.setType(type);  option.setValueSeparator(valuesep);  option.setArgName(argName);  OptionBuilder.reset();  return  option;  }  [CLASS]  OptionBuilder  [METHOD]  create  [RETURN_TYPE]  Option  String  opt  [VARIABLES]  boolean  hasArg  newRequired  optionalArg  required  OptionBuilder  instance  char  opt  sep  valuesep  Object  newType  type  Option  option  String  argName  description  longopt  name  newDescription  newLongopt  opt  int  num  numArgs  numberOfArgs  	projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java	0.3333333333333333	355	355	1	replace	OptionBuilder.instance().setOptionalArg(optionalArgs);	  OptionBuilder.instance().setOptionalArg(optionalArg);    	non-compiled	[CE]  <identifier>  expected	6	None	replace
95	[BUG]  [BUGGY]  OptionBuilder.instance().setValues(numberOfArgs  -  1);  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      public  static  Option  create(String  opt)  throws  IllegalArgumentException  {  Option  option  =  new  Option(opt,  description);  option.setLongOpt(longopt);  option.setRequired(required);  option.setOptionalArg(optionalArg);      [BUGGY]  OptionBuilder.instance().setValues(numberOfArgs  -  1);  [BUGGY]      option.setArgs(numberOfArgs);  option.setType(type);  option.setValueSeparator(valuesep);  option.setArgName(argName);  OptionBuilder.reset();  return  option;  }  [CLASS]  OptionBuilder  [METHOD]  create  [RETURN_TYPE]  Option  String  opt  [VARIABLES]  boolean  hasArg  newRequired  optionalArg  required  OptionBuilder  instance  char  opt  sep  valuesep  Object  newType  type  Option  option  String  argName  description  longopt  name  newDescription  newLongopt  opt  int  num  numArgs  numberOfArgs  	projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java	0.3333333333333333	355	355	1	replace	OptionBuilder.instance().setValues(numberOfArgs  -  1);	  OptionBuilder.instance().setValues(numberOfArgs);    	non-compiled	[CE]  <identifier>  expected	7	None	replace
96	[BUG]  [BUGGY]  OptionBuilder.append(optionalArg,  option);  [CE]  <identifier>  expected  [FE]            AssertionFailedError      [CONTEXT]      public  static  Option  create(String  opt)  throws  IllegalArgumentException  {  Option  option  =  new  Option(opt,  description);  option.setLongOpt(longopt);  option.setRequired(required);  option.setOptionalArg(optionalArg);      [BUGGY]  OptionBuilder.append(optionalArg,  option);  [BUGGY]      option.setArgs(numberOfArgs);  option.setType(type);  option.setValueSeparator(valuesep);  option.setArgName(argName);  OptionBuilder.reset();  return  option;  }  [CLASS]  OptionBuilder  [METHOD]  create  [RETURN_TYPE]  Option  String  opt  [VARIABLES]  boolean  hasArg  newRequired  optionalArg  required  OptionBuilder  instance  char  opt  sep  valuesep  Object  newType  type  Option  option  String  argName  description  longopt  name  newDescription  newLongopt  opt  int  num  numArgs  numberOfArgs  	projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java	0.3333333333333333	355	355	1	replace	OptionBuilder.append(optionalArg,  option);	  OptionBuilder.append(optionalArg,    description);    	non-compiled	[CE]  <identifier>  expected	27	None	replace
97	[BUG]  [BUGGY]  OptionBuilder.instance().addArg(optionalArgs);  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      public  static  Option  create(String  opt)  throws  IllegalArgumentException  {  Option  option  =  new  Option(opt,  description);  option.setLongOpt(longopt);  option.setRequired(required);  option.setOptionalArg(optionalArg);      [BUGGY]  OptionBuilder.instance().addArg(optionalArgs);  [BUGGY]      option.setArgs(numberOfArgs);  option.setType(type);  option.setValueSeparator(valuesep);  option.setArgName(argName);  OptionBuilder.reset();  return  option;  }  [CLASS]  OptionBuilder  [METHOD]  create  [RETURN_TYPE]  Option  String  opt  [VARIABLES]  boolean  hasArg  newRequired  optionalArg  required  OptionBuilder  instance  char  opt  sep  valuesep  Object  newType  type  Option  option  String  argName  description  longopt  name  newDescription  newLongopt  opt  int  num  numArgs  numberOfArgs  	projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java	0.3333333333333333	355	355	1	replace	OptionBuilder.instance().addArg(optionalArgs);	  OptionBuilder.instance().addArg(optionalArg);    	non-compiled	[CE]  <identifier>  expected	23	None	replace
98	[BUG]  [BUGGY]  OptionBuilder.init(optionalArgs);  [CE]  <identifier>  expected  [FE]            AssertionFailedError      [CONTEXT]      public  static  Option  create(String  opt)  throws  IllegalArgumentException  {  Option  option  =  new  Option(opt,  description);  option.setLongOpt(longopt);  option.setRequired(required);  option.setOptionalArg(optionalArg);      [BUGGY]  OptionBuilder.init(optionalArgs);  [BUGGY]      option.setArgs(numberOfArgs);  option.setType(type);  option.setValueSeparator(valuesep);  option.setArgName(argName);  OptionBuilder.reset();  return  option;  }  [CLASS]  OptionBuilder  [METHOD]  create  [RETURN_TYPE]  Option  String  opt  [VARIABLES]  boolean  hasArg  newRequired  optionalArg  required  OptionBuilder  instance  char  opt  sep  valuesep  Object  newType  type  Option  option  String  argName  description  longopt  name  newDescription  newLongopt  opt  int  num  numArgs  numberOfArgs  	projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java	0.3333333333333333	355	355	1	replace	OptionBuilder.init(optionalArgs);	  OptionBuilder.init(optionalArg);    	non-compiled	[CE]  <identifier>  expected	31	None	replace
99	[BUG]  [BUGGY]  OptionBuilder.setNumericArg(numberOfArgs  +  1);  [CE]  <identifier>  expected  [FE]            AssertionFailedError      [CONTEXT]      public  static  Option  create(String  opt)  throws  IllegalArgumentException  {  Option  option  =  new  Option(opt,  description);  option.setLongOpt(longopt);  option.setRequired(required);  option.setOptionalArg(optionalArg);      [BUGGY]  OptionBuilder.setNumericArg(numberOfArgs  +  1);  [BUGGY]      option.setType(type);  option.setValueSeparator(valuesep);  option.setArgName(argName);  OptionBuilder.reset();  return  option;  }  [CLASS]  OptionBuilder  [METHOD]  create  [RETURN_TYPE]  Option  String  opt  [VARIABLES]  boolean  hasArg  newRequired  optionalArg  required  OptionBuilder  instance  char  opt  sep  valuesep  Object  newType  type  Option  option  String  argName  description  longopt  name  newDescription  newLongopt  opt  int  num  numArgs  numberOfArgs  	projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java	0.3333333333333333	355	355	1	replace	OptionBuilder.setNumericArg(numberOfArgs  +  1);	  OptionBuilder.setNumericArgs(numberOfArgs);    	non-compiled	[CE]  <identifier>  expected	39	None	replace
100	[BUG]  [BUGGY]  option.setValues(numberOfArgs);  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      public  static  Option  create(String  opt)  throws  IllegalArgumentException  {  Option  option  =  new  Option(opt,  description);  option.setLongOpt(longopt);  option.setRequired(required);  option.setOptionalArg(optionalArg);      [BUGGY]  option.setValues(numberOfArgs);  [BUGGY]      option.setArgs(numberOfArgs);  option.setType(type);  option.setValueSeparator(valuesep);  option.setArgName(argName);  OptionBuilder.reset();  return  option;  }  [CLASS]  OptionBuilder  [METHOD]  create  [RETURN_TYPE]  Option  String  opt  [VARIABLES]  boolean  hasArg  newRequired  optionalArg  required  OptionBuilder  instance  char  opt  sep  valuesep  Object  newType  type  Option  option  String  argName  description  longopt  name  newDescription  newLongopt  opt  int  num  numArgs  numberOfArgs  	projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java	0.3333333333333333	355	355	1	replace	option.setValues(numberOfArgs);	  option.setOptionalArg(hasArg);    	non-compiled	[CE]  <identifier>  expected	30	None	replace
101	[BUG]  [BUGGY]  OptionBuilder.instance().addValue(valuesep);  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      public  static  Option  create(String  opt)  throws  IllegalArgumentException  {  Option  option  =  new  Option(opt,  description);  option.setLongOpt(longopt);  option.setRequired(required);  option.setOptionalArg(optionalArg);      [BUGGY]  OptionBuilder.instance().addValue(valuesep);  [BUGGY]      option.setArgs(numberOfArgs);  option.setType(type);  option.setValueSeparator(valuesep);  option.setArgName(argName);  OptionBuilder.reset();  return  option;  }  [CLASS]  OptionBuilder  [METHOD]  create  [RETURN_TYPE]  Option  String  opt  [VARIABLES]  boolean  hasArg  newRequired  optionalArg  required  OptionBuilder  instance  char  opt  sep  valuesep  Object  newType  type  Option  option  String  argName  description  longopt  name  newDescription  newLongopt  opt  int  num  numArgs  numberOfArgs  	projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java	0.3333333333333333	355	355	1	replace	OptionBuilder.instance().addValue(valuesep);	  OptionBuilder.instance().setValue(valuesep);    	non-compiled	[CE]  <identifier>  expected	48	None	replace
102	[BUG]  [BUGGY]  option.setValuesep(numberOfArgs);  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      public  static  Option  create(String  opt)  throws  IllegalArgumentException  {  Option  option  =  new  Option(opt,  description);  option.setLongOpt(longopt);  option.setRequired(required);  option.setOptionalArg(optionalArg);      [BUGGY]  option.setValuesep(numberOfArgs);  [BUGGY]      option.setType(type);  option.setValueSeparator(valuesep);  option.setArgName(argName);  OptionBuilder.reset();  return  option;  }  [CLASS]  OptionBuilder  [METHOD]  create  [RETURN_TYPE]  Option  String  opt  [VARIABLES]  boolean  hasArg  newRequired  optionalArg  required  OptionBuilder  instance  char  opt  sep  valuesep  Object  newType  type  Option  option  String  argName  description  longopt  name  newDescription  newLongopt  opt  int  num  numArgs  numberOfArgs  	projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java	0.3333333333333333	355	355	1	replace	option.setValuesep(numberOfArgs);	  option.setType(type);    	non-compiled	[CE]  <identifier>  expected	36	None	replace
103	[BUG]  [BUGGY]  OptionBuilder.append(argName  +  1);  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      public  static  Option  create(String  opt)  throws  IllegalArgumentException  {  Option  option  =  new  Option(opt,  description);  option.setLongOpt(longopt);  option.setRequired(required);  option.setOptionalArg(optionalArg);      [BUGGY]  OptionBuilder.append(argName  +  1);  [BUGGY]      option.setArgs(numberOfArgs);  option.setType(type);  option.setValueSeparator(valuesep);  option.setArgName(argName);  OptionBuilder.reset();  return  option;  }  [CLASS]  OptionBuilder  [METHOD]  create  [RETURN_TYPE]  Option  String  opt  [VARIABLES]  boolean  hasArg  newRequired  optionalArg  required  OptionBuilder  instance  char  opt  sep  valuesep  Object  newType  type  Option  option  String  argName  description  longopt  name  newDescription  newLongopt  opt  int  num  numArgs  numberOfArgs  	projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java	0.3333333333333333	355	355	1	replace	OptionBuilder.append(argName  +  1);	  OptionBuilder.append(optionalArg    +    1);    	non-compiled	[CE]  <identifier>  expected	28	None	replace
104	[BUG]  [BUGGY]  option.setDefinition(description);  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      public  static  Option  create(String  opt)  throws  IllegalArgumentException  {  Option  option  =  new  Option(opt,  description);  option.setLongOpt(longopt);  option.setRequired(required);  option.setOptionalArg(optionalArg);      [BUGGY]  option.setDefinition(description);  [BUGGY]      option.setArgs(numberOfArgs);  option.setType(type);  option.setValueSeparator(valuesep);  option.setArgName(argName);  OptionBuilder.reset();  return  option;  }  [CLASS]  OptionBuilder  [METHOD]  create  [RETURN_TYPE]  Option  String  opt  [VARIABLES]  boolean  hasArg  newRequired  optionalArg  required  OptionBuilder  instance  char  opt  sep  valuesep  Object  newType  type  Option  option  String  argName  description  longopt  name  newDescription  newLongopt  opt  int  num  numArgs  numberOfArgs  	projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java	0.3333333333333333	355	355	1	replace	option.setDefinition(description);	  option.setName(description);    	non-compiled	[CE]  <identifier>  expected	16	None	replace
105	[BUG]  [BUGGY]  OptionBuilder.setOptionalArg(hasArg);  [CE]  <identifier>  expected  [FE]            AssertionFailedError      [CONTEXT]      public  static  Option  create(String  opt)  throws  IllegalArgumentException  {  Option  option  =  new  Option(opt,  description);  option.setLongOpt(longopt);  option.setRequired(required);  option.setOptionalArg(optionalArg);      [BUGGY]  OptionBuilder.setOptionalArg(hasArg);  [BUGGY]      option.setArgs(numberOfArgs);  option.setType(type);  option.setValueSeparator(valuesep);  option.setArgName(argName);  OptionBuilder.reset();  return  option;  }  [CLASS]  OptionBuilder  [METHOD]  create  [RETURN_TYPE]  Option  String  opt  [VARIABLES]  boolean  hasArg  newRequired  optionalArg  required  OptionBuilder  instance  char  opt  sep  valuesep  Object  newType  type  Option  option  String  argName  description  longopt  name  newDescription  newLongopt  opt  int  num  numArgs  numberOfArgs  	projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java	0.3333333333333333	355	355	1	replace	OptionBuilder.setOptionalArg(hasArg);	  OptionBuilder.setOptionalArg(optionalArg);    	non-compiled	[CE]  <identifier>  expected	20	None	replace
106	[BUG]  [BUGGY]  OptionBuilder.setArgName(valuesep);  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      public  static  Option  create(String  opt)  throws  IllegalArgumentException  {  Option  option  =  new  Option(opt,  description);  option.setLongOpt(longopt);  option.setRequired(required);  option.setOptionalArg(optionalArg);      [BUGGY]  OptionBuilder.setArgName(valuesep);  [BUGGY]      option.setArgs(numberOfArgs);  option.setType(type);  option.setValueSeparator(valuesep);  option.setArgName(argName);  OptionBuilder.reset();  return  option;  }  [CLASS]  OptionBuilder  [METHOD]  create  [RETURN_TYPE]  Option  String  opt  [VARIABLES]  boolean  hasArg  newRequired  optionalArg  required  OptionBuilder  instance  char  opt  sep  valuesep  Object  newType  type  Option  option  String  argName  description  longopt  name  newDescription  newLongopt  opt  int  num  numArgs  numberOfArgs  	projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java	0.3333333333333333	355	355	1	replace	OptionBuilder.setArgName(valuesep);	  OptionBuilder.setArgName(argName);    	non-compiled	[CE]  <identifier>  expected	32	None	replace
107	[BUG]  [BUGGY]  OptionBuilder.setValues(values);  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      public  static  Option  create(String  opt)  throws  IllegalArgumentException  {  Option  option  =  new  Option(opt,  description);  option.setLongOpt(longopt);  option.setRequired(required);  option.setOptionalArg(optionalArg);      [BUGGY]  OptionBuilder.setValues(values);  [BUGGY]      option.setArgs(numberOfArgs);  option.setType(type);  option.setValueSeparator(valuesep);  option.setArgName(argName);  OptionBuilder.reset();  return  option;  }  [CLASS]  OptionBuilder  [METHOD]  create  [RETURN_TYPE]  Option  String  opt  [VARIABLES]  boolean  hasArg  newRequired  optionalArg  required  OptionBuilder  instance  char  opt  sep  valuesep  Object  newType  type  Option  option  String  argName  description  longopt  name  newDescription  newLongopt  opt  int  num  numArgs  numberOfArgs  	projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java	0.3333333333333333	355	355	1	replace	OptionBuilder.setValues(values);	  OptionBuilder.setValues(numberOfArgs);    	non-compiled	[CE]  <identifier>  expected	21	None	replace
108	[BUG]  [BUGGY]  OptionBuilder.instance.setArgName(optionalArg);  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      public  static  Option  create(String  opt)  throws  IllegalArgumentException  {  Option  option  =  new  Option(opt,  description);  option.setLongOpt(longopt);  option.setRequired(required);  option.setOptionalArg(optionalArg);      [BUGGY]  OptionBuilder.instance.setArgName(optionalArg);  [BUGGY]      option.setArgs(numberOfArgs);  option.setType(type);  option.setValueSeparator(valuesep);  option.setArgName(argName);  OptionBuilder.reset();  return  option;  }  [CLASS]  OptionBuilder  [METHOD]  create  [RETURN_TYPE]  Option  String  opt  [VARIABLES]  boolean  hasArg  newRequired  optionalArg  required  OptionBuilder  instance  char  opt  sep  valuesep  Object  newType  type  Option  option  String  argName  description  longopt  name  newDescription  newLongopt  opt  int  num  numArgs  numberOfArgs  	projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java	0.3333333333333333	355	355	1	replace	OptionBuilder.instance.setArgName(optionalArg);	  OptionBuilder.instance.setOptionalArg(optionalArg);    	non-compiled	[CE]  <identifier>  expected	10	None	replace
109	[BUG]  [BUGGY]  OptionBuilder.instance.setArgs(optionalArg);  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      public  static  Option  create(String  opt)  throws  IllegalArgumentException  {  Option  option  =  new  Option(opt,  description);  option.setLongOpt(longopt);  option.setRequired(required);  option.setOptionalArg(optionalArg);      [BUGGY]  OptionBuilder.instance.setArgs(optionalArg);  [BUGGY]      option.setArgs(numberOfArgs);  option.setType(type);  option.setValueSeparator(valuesep);  option.setArgName(argName);  OptionBuilder.reset();  return  option;  }  [CLASS]  OptionBuilder  [METHOD]  create  [RETURN_TYPE]  Option  String  opt  [VARIABLES]  boolean  hasArg  newRequired  optionalArg  required  OptionBuilder  instance  char  opt  sep  valuesep  Object  newType  type  Option  option  String  argName  description  longopt  name  newDescription  newLongopt  opt  int  num  numArgs  numberOfArgs  	projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java	0.3333333333333333	355	355	1	replace	OptionBuilder.instance.setArgs(optionalArg);	  OptionBuilder.instance.setOptionalArg(optionalArg);    	non-compiled	[CE]  <identifier>  expected	10	None	replace
110	[BUG]  [BUGGY]  OptionBuilder.instance.setOptionalArg(optionalArgs);  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      public  static  Option  create(String  opt)  throws  IllegalArgumentException  {  Option  option  =  new  Option(opt,  description);  option.setLongOpt(longopt);  option.setRequired(required);  option.setOptionalArg(optionalArg);      [BUGGY]  OptionBuilder.instance.setOptionalArg(optionalArgs);  [BUGGY]      option.setArgs(numberOfArgs);  option.setType(type);  option.setValueSeparator(valuesep);  option.setArgName(argName);  OptionBuilder.reset();  return  option;  }  [CLASS]  OptionBuilder  [METHOD]  create  [RETURN_TYPE]  Option  String  opt  [VARIABLES]  boolean  hasArg  newRequired  optionalArg  required  OptionBuilder  instance  char  opt  sep  valuesep  Object  newType  type  Option  option  String  argName  description  longopt  name  newDescription  newLongopt  opt  int  num  numArgs  numberOfArgs  	projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java	0.3333333333333333	355	355	1	replace	OptionBuilder.instance.setOptionalArg(optionalArgs);	  OptionBuilder.instance.setOptionalArg(optionalArg);    	non-compiled	[CE]  <identifier>  expected	10	None	replace
111	[BUG]  [BUGGY]  OptionBuilder.instance().addOptionalArg(optionalArg,  option);  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      public  static  Option  create(String  opt)  throws  IllegalArgumentException  {  Option  option  =  new  Option(opt,  description);  option.setLongOpt(longopt);  option.setRequired(required);  option.setOptionalArg(optionalArg);      [BUGGY]  OptionBuilder.instance().addOptionalArg(optionalArg,  option);  [BUGGY]      option.setArgs(numberOfArgs);  option.setType(type);  option.setValueSeparator(valuesep);  option.setArgName(argName);  OptionBuilder.reset();  return  option;  }  [CLASS]  OptionBuilder  [METHOD]  create  [RETURN_TYPE]  Option  String  opt  [VARIABLES]  boolean  hasArg  newRequired  optionalArg  required  OptionBuilder  instance  char  opt  sep  valuesep  Object  newType  type  Option  option  String  argName  description  longopt  name  newDescription  newLongopt  opt  int  num  numArgs  numberOfArgs  	projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java	0.3333333333333333	355	355	1	replace	OptionBuilder.instance().addOptionalArg(optionalArg,  option);	  OptionBuilder.instance().addOptionalArg(optionalArg,    description);    	non-compiled	[CE]  <identifier>  expected	24	None	replace
112	[BUG]  [BUGGY]  OptionBuilder.instance().addOptionalArg(optionalArg,  optionalArg);  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      public  static  Option  create(String  opt)  throws  IllegalArgumentException  {  Option  option  =  new  Option(opt,  description);  option.setLongOpt(longopt);  option.setRequired(required);  option.setOptionalArg(optionalArg);      [BUGGY]  OptionBuilder.instance().addOptionalArg(optionalArg,  optionalArg);  [BUGGY]      option.setArgs(numberOfArgs);  option.setType(type);  option.setValueSeparator(valuesep);  option.setArgName(argName);  OptionBuilder.reset();  return  option;  }  [CLASS]  OptionBuilder  [METHOD]  create  [RETURN_TYPE]  Option  String  opt  [VARIABLES]  boolean  hasArg  newRequired  optionalArg  required  OptionBuilder  instance  char  opt  sep  valuesep  Object  newType  type  Option  option  String  argName  description  longopt  name  newDescription  newLongopt  opt  int  num  numArgs  numberOfArgs  	projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java	0.3333333333333333	355	355	1	replace	OptionBuilder.instance().addOptionalArg(optionalArg,  optionalArg);	  OptionBuilder.instance().addOptionalArg(optionalArg,    description);    	non-compiled	[CE]  <identifier>  expected	24	None	replace
113	[BUG]  [BUGGY]  OptionBuilder.append(argName);  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      public  static  Option  create(String  opt)  throws  IllegalArgumentException  {  Option  option  =  new  Option(opt,  description);  option.setLongOpt(longopt);  option.setRequired(required);  option.setOptionalArg(optionalArg);      [BUGGY]  OptionBuilder.append(argName);  [BUGGY]      option.setArgs(numberOfArgs);  option.setType(type);  option.setValueSeparator(valuesep);  option.setArgName(argName);  OptionBuilder.reset();  return  option;  }  [CLASS]  OptionBuilder  [METHOD]  create  [RETURN_TYPE]  Option  String  opt  [VARIABLES]  boolean  hasArg  newRequired  optionalArg  required  OptionBuilder  instance  char  opt  sep  valuesep  Object  newType  type  Option  option  String  argName  description  longopt  name  newDescription  newLongopt  opt  int  num  numArgs  numberOfArgs  	projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java	0.3333333333333333	355	355	1	replace	OptionBuilder.append(argName);	  OptionBuilder.append(newDescription);    	non-compiled	[CE]  <identifier>  expected	29	None	replace
114	[BUG]  [BUGGY]  OptionBuilder.addOptionalArg(optionalArg,  option);  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      public  static  Option  create(String  opt)  throws  IllegalArgumentException  {  Option  option  =  new  Option(opt,  description);  option.setLongOpt(longopt);  option.setRequired(required);  option.setOptionalArg(optionalArg);      [BUGGY]  OptionBuilder.addOptionalArg(optionalArg,  option);  [BUGGY]      option.setArgs(numberOfArgs);  option.setType(type);  option.setValueSeparator(valuesep);  option.setArgName(argName);  OptionBuilder.reset();  return  option;  }  [CLASS]  OptionBuilder  [METHOD]  create  [RETURN_TYPE]  Option  String  opt  [VARIABLES]  boolean  hasArg  newRequired  optionalArg  required  OptionBuilder  instance  char  opt  sep  valuesep  Object  newType  type  Option  option  String  argName  description  longopt  name  newDescription  newLongopt  opt  int  num  numArgs  numberOfArgs  	projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java	0.3333333333333333	355	355	1	replace	OptionBuilder.addOptionalArg(optionalArg,  option);	  OptionBuilder.addOptionalArg(optionalArg,    description);    	non-compiled	[CE]  <identifier>  expected	46	None	replace
115	[BUG]  [BUGGY]  OptionBuilder.setValue(numberOfArgs);  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      public  static  Option  create(String  opt)  throws  IllegalArgumentException  {  Option  option  =  new  Option(opt,  description);  option.setLongOpt(longopt);  option.setRequired(required);  option.setOptionalArg(optionalArg);      [BUGGY]  OptionBuilder.setValue(numberOfArgs);  [BUGGY]      option.setArgs(numberOfArgs);  option.setType(type);  option.setValueSeparator(valuesep);  option.setArgName(argName);  OptionBuilder.reset();  return  option;  }  [CLASS]  OptionBuilder  [METHOD]  create  [RETURN_TYPE]  Option  String  opt  [VARIABLES]  boolean  hasArg  newRequired  optionalArg  required  OptionBuilder  instance  char  opt  sep  valuesep  Object  newType  type  Option  option  String  argName  description  longopt  name  newDescription  newLongopt  opt  int  num  numArgs  numberOfArgs  	projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java	0.3333333333333333	355	355	1	replace	OptionBuilder.setValue(numberOfArgs);	  OptionBuilder.setValues(numberOfArgs);    	non-compiled	[CE]  <identifier>  expected	21	None	replace
116	[BUG]  [BUGGY]  OptionBuilder.instance.setValue(argName);  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      public  static  Option  create(String  opt)  throws  IllegalArgumentException  {  Option  option  =  new  Option(opt,  description);  option.setLongOpt(longopt);  option.setRequired(required);  option.setOptionalArg(optionalArg);      [BUGGY]  OptionBuilder.instance.setValue(argName);  [BUGGY]      option.setArgs(numberOfArgs);  option.setType(type);  option.setValueSeparator(valuesep);  option.setArgName(argName);  OptionBuilder.reset();  return  option;  }  [CLASS]  OptionBuilder  [METHOD]  create  [RETURN_TYPE]  Option  String  opt  [VARIABLES]  boolean  hasArg  newRequired  optionalArg  required  OptionBuilder  instance  char  opt  sep  valuesep  Object  newType  type  Option  option  String  argName  description  longopt  name  newDescription  newLongopt  opt  int  num  numArgs  numberOfArgs  	projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java	0.3333333333333333	355	355	1	replace	OptionBuilder.instance.setValue(argName);	  OptionBuilder.instance.setValue(valuesep);    	non-compiled	[CE]  <identifier>  expected	42	None	replace
117	[BUG]  [BUGGY]  OptionBuilder.instance().addArg(argName,  description);  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      public  static  Option  create(String  opt)  throws  IllegalArgumentException  {  Option  option  =  new  Option(opt,  description);  option.setLongOpt(longopt);  option.setRequired(required);  option.setOptionalArg(optionalArg);      [BUGGY]  OptionBuilder.instance().addArg(argName,  description);  [BUGGY]      option.setArgs(numberOfArgs);  option.setType(type);  option.setValueSeparator(valuesep);  option.setArgName(argName);  OptionBuilder.reset();  return  option;  }  [CLASS]  OptionBuilder  [METHOD]  create  [RETURN_TYPE]  Option  String  opt  [VARIABLES]  boolean  hasArg  newRequired  optionalArg  required  OptionBuilder  instance  char  opt  sep  valuesep  Object  newType  type  Option  option  String  argName  description  longopt  name  newDescription  newLongopt  opt  int  num  numArgs  numberOfArgs  	projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java	0.3333333333333333	355	355	1	replace	OptionBuilder.instance().addArg(argName,  description);	  OptionBuilder.instance().addOptionalArg(optionalArg,    description);    	non-compiled	[CE]  <identifier>  expected	24	None	replace
118	[BUG]  [BUGGY]  OptionBuilder.setDefinitionName(description);  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      public  static  Option  create(String  opt)  throws  IllegalArgumentException  {  Option  option  =  new  Option(opt,  description);  option.setLongOpt(longopt);  option.setRequired(required);  option.setOptionalArg(optionalArg);      [BUGGY]  OptionBuilder.setDefinitionName(description);  [BUGGY]      option.setArgs(numberOfArgs);  option.setType(type);  option.setValueSeparator(valuesep);  option.setArgName(argName);  OptionBuilder.reset();  return  option;  }  [CLASS]  OptionBuilder  [METHOD]  create  [RETURN_TYPE]  Option  String  opt  [VARIABLES]  boolean  hasArg  newRequired  optionalArg  required  OptionBuilder  instance  char  opt  sep  valuesep  Object  newType  type  Option  option  String  argName  description  longopt  name  newDescription  newLongopt  opt  int  num  numArgs  numberOfArgs  	projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java	0.3333333333333333	355	355	1	replace	OptionBuilder.setDefinitionName(description);	  OptionBuilder.setDescription(description);    	non-compiled	[CE]  <identifier>  expected	17	None	replace
119	[BUG]  [BUGGY]  option.setValueName(valuesep);  [CE]  <identifier>  expected  [FE]            AssertionFailedError      [CONTEXT]      public  static  Option  create(String  opt)  throws  IllegalArgumentException  {  Option  option  =  new  Option(opt,  description);  option.setLongOpt(longopt);  option.setRequired(required);  option.setOptionalArg(optionalArg);      [BUGGY]  option.setValueName(valuesep);  [BUGGY]      option.setType(type);  option.setValueSeparator(valuesep);  option.setArgName(argName);  OptionBuilder.reset();  return  option;  }  [CLASS]  OptionBuilder  [METHOD]  create  [RETURN_TYPE]  Option  String  opt  [VARIABLES]  boolean  hasArg  newRequired  optionalArg  required  OptionBuilder  instance  char  opt  sep  valuesep  Object  newType  type  Option  option  String  argName  description  longopt  name  newDescription  newLongopt  opt  int  num  numArgs  numberOfArgs  	projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java	0.3333333333333333	355	355	1	replace	option.setValueName(valuesep);	  option.setName(argName);    	non-compiled	[CE]  <identifier>  expected	38	None	replace
120	[BUG]  [BUGGY]  if(hasArg)  {  option.setValueSeparator(valuesep);  }  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      public  static  Option  create(String  opt)  throws  IllegalArgumentException  {  Option  option  =  new  Option(opt,  description);  option.setLongOpt(longopt);  option.setRequired(required);  option.setOptionalArg(optionalArg);      [BUGGY]  if(hasArg)  {  option.setValueSeparator(valuesep);  }  [BUGGY]      option.setType(type);  option.setValueSeparator(valuesep);  option.setArgName(argName);  OptionBuilder.reset();  return  option;  }  [CLASS]  OptionBuilder  [METHOD]  create  [RETURN_TYPE]  Option  String  opt  [VARIABLES]  boolean  hasArg  newRequired  optionalArg  required  OptionBuilder  instance  char  opt  sep  valuesep  Object  newType  type  Option  option  String  argName  description  longopt  name  newDescription  newLongopt  opt  int  num  numArgs  numberOfArgs  	projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java	0.3333333333333333	355	355	1	replace	if(hasArg)  {  option.setValueSeparator(valuesep);  }	  if(hasArg)    {    option.setType(type);    }    	non-compiled	[CE]  <identifier>  expected	43	None	replace
121	[BUG]  [BUGGY]  OptionBuilder.instance.addOptionalArg(optionalArg);  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      public  static  Option  create(String  opt)  throws  IllegalArgumentException  {  Option  option  =  new  Option(opt,  description);  option.setLongOpt(longopt);  option.setRequired(required);  option.setOptionalArg(optionalArg);      [BUGGY]  OptionBuilder.instance.addOptionalArg(optionalArg);  [BUGGY]      option.setArgs(numberOfArgs);  option.setType(type);  option.setValueSeparator(valuesep);  option.setArgName(argName);  OptionBuilder.reset();  return  option;  }  [CLASS]  OptionBuilder  [METHOD]  create  [RETURN_TYPE]  Option  String  opt  [VARIABLES]  boolean  hasArg  newRequired  optionalArg  required  OptionBuilder  instance  char  opt  sep  valuesep  Object  newType  type  Option  option  String  argName  description  longopt  name  newDescription  newLongopt  opt  int  num  numArgs  numberOfArgs  	projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java	0.3333333333333333	355	355	1	replace	OptionBuilder.instance.addOptionalArg(optionalArg);	  OptionBuilder.instance.setType(newType);    	non-compiled	[CE]  <identifier>  expected	12	None	replace
122	[BUG]  [BUGGY]  OptionBuilder.instance.setArgName(argName);  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      public  static  Option  create(String  opt)  throws  IllegalArgumentException  {  Option  option  =  new  Option(opt,  description);  option.setLongOpt(longopt);  option.setRequired(required);  option.setOptionalArg(optionalArg);      [BUGGY]  OptionBuilder.instance.setArgName(argName);  [BUGGY]      option.setArgs(numberOfArgs);  option.setType(type);  option.setValueSeparator(valuesep);  option.setArgName(argName);  OptionBuilder.reset();  return  option;  }  [CLASS]  OptionBuilder  [METHOD]  create  [RETURN_TYPE]  Option  String  opt  [VARIABLES]  boolean  hasArg  newRequired  optionalArg  required  OptionBuilder  instance  char  opt  sep  valuesep  Object  newType  type  Option  option  String  argName  description  longopt  name  newDescription  newLongopt  opt  int  num  numArgs  numberOfArgs  	projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java	0.3333333333333333	355	355	1	replace	OptionBuilder.instance.setArgName(argName);	  OptionBuilder.instance.setOptionalArg(optionalArg);    	non-compiled	[CE]  <identifier>  expected	10	None	replace
123	[BUG]  [BUGGY]  OptionBuilder.setValue(valuesep);  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      public  static  Option  create(String  opt)  throws  IllegalArgumentException  {  Option  option  =  new  Option(opt,  description);  option.setLongOpt(longopt);  option.setRequired(required);  option.setOptionalArg(optionalArg);      [BUGGY]  OptionBuilder.setValue(valuesep);  [BUGGY]      option.setType(type);  option.setValueSeparator(valuesep);  option.setArgName(argName);  OptionBuilder.reset();  return  option;  }  [CLASS]  OptionBuilder  [METHOD]  create  [RETURN_TYPE]  Option  String  opt  [VARIABLES]  boolean  hasArg  newRequired  optionalArg  required  OptionBuilder  instance  char  opt  sep  valuesep  Object  newType  type  Option  option  String  argName  description  longopt  name  newDescription  newLongopt  opt  int  num  numArgs  numberOfArgs  	projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java	0.3333333333333333	355	355	1	replace	OptionBuilder.setValue(valuesep);	  OptionBuilder.setType(type);    	non-compiled	[CE]  <identifier>  expected	9	None	replace
124	[BUG]  [BUGGY]  OptionBuilder.instance().setValue(argName);  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      public  static  Option  create(String  opt)  throws  IllegalArgumentException  {  Option  option  =  new  Option(opt,  description);  option.setLongOpt(longopt);  option.setRequired(required);  option.setOptionalArg(optionalArg);      [BUGGY]  OptionBuilder.instance().setValue(argName);  [BUGGY]      option.setArgs(numberOfArgs);  option.setType(type);  option.setValueSeparator(valuesep);  option.setArgName(argName);  OptionBuilder.reset();  return  option;  }  [CLASS]  OptionBuilder  [METHOD]  create  [RETURN_TYPE]  Option  String  opt  [VARIABLES]  boolean  hasArg  newRequired  optionalArg  required  OptionBuilder  instance  char  opt  sep  valuesep  Object  newType  type  Option  option  String  argName  description  longopt  name  newDescription  newLongopt  opt  int  num  numArgs  numberOfArgs  	projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java	0.3333333333333333	355	355	1	replace	OptionBuilder.instance().setValue(argName);	  OptionBuilder.instance().setValue(valuesep);    	non-compiled	[CE]  <identifier>  expected	48	None	replace
125	[BUG]  [BUGGY]  OptionBuilder.instance.addDependency(description);  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      public  static  Option  create(String  opt)  throws  IllegalArgumentException  {  Option  option  =  new  Option(opt,  description);  option.setLongOpt(longopt);  option.setRequired(required);  option.setOptionalArg(optionalArg);      [BUGGY]  OptionBuilder.instance.addDependency(description);  [BUGGY]      option.setArgs(numberOfArgs);  option.setType(type);  option.setValueSeparator(valuesep);  option.setArgName(argName);  OptionBuilder.reset();  return  option;  }  [CLASS]  OptionBuilder  [METHOD]  create  [RETURN_TYPE]  Option  String  opt  [VARIABLES]  boolean  hasArg  newRequired  optionalArg  required  OptionBuilder  instance  char  opt  sep  valuesep  Object  newType  type  Option  option  String  argName  description  longopt  name  newDescription  newLongopt  opt  int  num  numArgs  numberOfArgs  	projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java	0.3333333333333333	355	355	1	replace	OptionBuilder.instance.addDependency(description);	  OptionBuilder.instance.setDescription(description);    	non-compiled	[CE]  <identifier>  expected	33	None	replace
126	[BUG]  [BUGGY]  OptionBuilder.instance().addOption(optionalArg);  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      public  static  Option  create(String  opt)  throws  IllegalArgumentException  {  Option  option  =  new  Option(opt,  description);  option.setLongOpt(longopt);  option.setRequired(required);  option.setOptionalArg(optionalArg);      [BUGGY]  OptionBuilder.instance().addOption(optionalArg);  [BUGGY]      option.setArgs(numberOfArgs);  option.setType(type);  option.setValueSeparator(valuesep);  option.setArgName(argName);  OptionBuilder.reset();  return  option;  }  [CLASS]  OptionBuilder  [METHOD]  create  [RETURN_TYPE]  Option  String  opt  [VARIABLES]  boolean  hasArg  newRequired  optionalArg  required  OptionBuilder  instance  char  opt  sep  valuesep  Object  newType  type  Option  option  String  argName  description  longopt  name  newDescription  newLongopt  opt  int  num  numArgs  numberOfArgs  	projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java	0.3333333333333333	355	355	1	replace	OptionBuilder.instance().addOption(optionalArg);	  OptionBuilder.instance().setType(newType);    	non-compiled	[CE]  <identifier>  expected	8	None	replace
127	[BUG]  [BUGGY]  OptionBuilder.instance().addValue(optionalArg);  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      public  static  Option  create(String  opt)  throws  IllegalArgumentException  {  Option  option  =  new  Option(opt,  description);  option.setLongOpt(longopt);  option.setRequired(required);  option.setOptionalArg(optionalArg);      [BUGGY]  OptionBuilder.instance().addValue(optionalArg);  [BUGGY]      option.setArgs(numberOfArgs);  option.setType(type);  option.setValueSeparator(valuesep);  option.setArgName(argName);  OptionBuilder.reset();  return  option;  }  [CLASS]  OptionBuilder  [METHOD]  create  [RETURN_TYPE]  Option  String  opt  [VARIABLES]  boolean  hasArg  newRequired  optionalArg  required  OptionBuilder  instance  char  opt  sep  valuesep  Object  newType  type  Option  option  String  argName  description  longopt  name  newDescription  newLongopt  opt  int  num  numArgs  numberOfArgs  	projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java	0.3333333333333333	355	355	1	replace	OptionBuilder.instance().addValue(optionalArg);	  OptionBuilder.instance().setType(newType);    	non-compiled	[CE]  <identifier>  expected	8	None	replace
128	[BUG]  [BUGGY]  OptionBuilder.addArg(argName,  description);  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      public  static  Option  create(String  opt)  throws  IllegalArgumentException  {  Option  option  =  new  Option(opt,  description);  option.setLongOpt(longopt);  option.setRequired(required);  option.setOptionalArg(optionalArg);      [BUGGY]  OptionBuilder.addArg(argName,  description);  [BUGGY]      option.setArgs(numberOfArgs);  option.setType(type);  option.setValueSeparator(valuesep);  option.setArgName(argName);  OptionBuilder.reset();  return  option;  }  [CLASS]  OptionBuilder  [METHOD]  create  [RETURN_TYPE]  Option  String  opt  [VARIABLES]  boolean  hasArg  newRequired  optionalArg  required  OptionBuilder  instance  char  opt  sep  valuesep  Object  newType  type  Option  option  String  argName  description  longopt  name  newDescription  newLongopt  opt  int  num  numArgs  numberOfArgs  	projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java	0.3333333333333333	355	355	1	replace	OptionBuilder.addArg(argName,  description);	  OptionBuilder.addOptionalArg(optionalArg,    description);    	non-compiled	[CE]  <identifier>  expected	46	None	replace
129	[BUG]  [BUGGY]  OptionBuilder.append(optionalArg  +  1).append( ", ");  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      public  static  Option  create(String  opt)  throws  IllegalArgumentException  {  Option  option  =  new  Option(opt,  description);  option.setLongOpt(longopt);  option.setRequired(required);  option.setOptionalArg(optionalArg);      [BUGGY]  OptionBuilder.append(optionalArg  +  1).append( ", ");  [BUGGY]      option.setArgs(numberOfArgs);  option.setType(type);  option.setValueSeparator(valuesep);  option.setArgName(argName);  OptionBuilder.reset();  return  option;  }  [CLASS]  OptionBuilder  [METHOD]  create  [RETURN_TYPE]  Option  String  opt  [VARIABLES]  boolean  hasArg  newRequired  optionalArg  required  OptionBuilder  instance  char  opt  sep  valuesep  Object  newType  type  Option  option  String  argName  description  longopt  name  newDescription  newLongopt  opt  int  num  numArgs  numberOfArgs  	projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java	0.3333333333333333	355	355	1	replace	OptionBuilder.append(optionalArg  +  1).append( ", ");	  OptionBuilder.append(optionalArg    +    1);    	non-compiled	[CE]  <identifier>  expected	28	None	replace
130	[BUG]  [BUGGY]  optionalArg  =  OptionOptionalArg.create(type);  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      public  static  Option  create(String  opt)  throws  IllegalArgumentException  {  Option  option  =  new  Option(opt,  description);  option.setLongOpt(longopt);  option.setRequired(required);  option.setOptionalArg(optionalArg);      [BUGGY]  optionalArg  =  OptionOptionalArg.create(type);  [BUGGY]      option.setType(type);  option.setValueSeparator(valuesep);  option.setArgName(argName);  OptionBuilder.reset();  return  option;  }  [CLASS]  OptionBuilder  [METHOD]  create  [RETURN_TYPE]  Option  String  opt  [VARIABLES]  boolean  hasArg  newRequired  optionalArg  required  OptionBuilder  instance  char  opt  sep  valuesep  Object  newType  type  Option  option  String  argName  description  longopt  name  newDescription  newLongopt  opt  int  num  numArgs  numberOfArgs  	projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java	0.3333333333333333	355	355	1	replace	optionalArg  =  OptionOptionalArg.create(type);	  if(hasArg)    {    option.setType(type);    }    else    {    OptionBuilder.reset();    }    	non-compiled	[CE]  <identifier>  expected	45	None	replace
131	[BUG]  [BUGGY]  OptionBuilder.appendOption(optionalArg);  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      public  static  Option  create(String  opt)  throws  IllegalArgumentException  {  Option  option  =  new  Option(opt,  description);  option.setLongOpt(longopt);  option.setRequired(required);  option.setOptionalArg(optionalArg);      [BUGGY]  OptionBuilder.appendOption(optionalArg);  [BUGGY]      option.setType(type);  option.setValueSeparator(valuesep);  option.setArgName(argName);  OptionBuilder.reset();  return  option;  }  [CLASS]  OptionBuilder  [METHOD]  create  [RETURN_TYPE]  Option  String  opt  [VARIABLES]  boolean  hasArg  newRequired  optionalArg  required  OptionBuilder  instance  char  opt  sep  valuesep  Object  newType  type  Option  option  String  argName  description  longopt  name  newDescription  newLongopt  opt  int  num  numArgs  numberOfArgs  	projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java	0.3333333333333333	355	355	1	replace	OptionBuilder.appendOption(optionalArg);	  OptionBuilder.addOption(optionalOptionalArg);    	non-compiled	[CE]  <identifier>  expected	37	None	replace
132	[BUG]  [BUGGY]  OptionBuilder.instance().setValue(numberOfArgs);  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      public  static  Option  create(String  opt)  throws  IllegalArgumentException  {  Option  option  =  new  Option(opt,  description);  option.setLongOpt(longopt);  option.setRequired(required);  option.setOptionalArg(optionalArg);      [BUGGY]  OptionBuilder.instance().setValue(numberOfArgs);  [BUGGY]      option.setArgs(numberOfArgs);  option.setType(type);  option.setValueSeparator(valuesep);  option.setArgName(argName);  OptionBuilder.reset();  return  option;  }  [CLASS]  OptionBuilder  [METHOD]  create  [RETURN_TYPE]  Option  String  opt  [VARIABLES]  boolean  hasArg  newRequired  optionalArg  required  OptionBuilder  instance  char  opt  sep  valuesep  Object  newType  type  Option  option  String  argName  description  longopt  name  newDescription  newLongopt  opt  int  num  numArgs  numberOfArgs  	projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java	0.3333333333333333	355	355	1	replace	OptionBuilder.instance().setValue(numberOfArgs);	  OptionBuilder.instance().setValues(numberOfArgs);    	non-compiled	[CE]  <identifier>  expected	7	None	replace
133	[BUG]  [BUGGY]  OptionBuilder.instance().addValue(argName);  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      public  static  Option  create(String  opt)  throws  IllegalArgumentException  {  Option  option  =  new  Option(opt,  description);  option.setLongOpt(longopt);  option.setRequired(required);  option.setOptionalArg(optionalArg);      [BUGGY]  OptionBuilder.instance().addValue(argName);  [BUGGY]      option.setArgs(numberOfArgs);  option.setType(type);  option.setValueSeparator(valuesep);  option.setArgName(argName);  OptionBuilder.reset();  return  option;  }  [CLASS]  OptionBuilder  [METHOD]  create  [RETURN_TYPE]  Option  String  opt  [VARIABLES]  boolean  hasArg  newRequired  optionalArg  required  OptionBuilder  instance  char  opt  sep  valuesep  Object  newType  type  Option  option  String  argName  description  longopt  name  newDescription  newLongopt  opt  int  num  numArgs  numberOfArgs  	projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java	0.3333333333333333	355	355	1	replace	OptionBuilder.instance().addValue(argName);	  OptionBuilder.instance().setValues(numberOfArgs);    	non-compiled	[CE]  <identifier>  expected	7	None	replace
134	[BUG]  [BUGGY]  OptionBuilder.instance().appendArg(optionalArg);  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      public  static  Option  create(String  opt)  throws  IllegalArgumentException  {  Option  option  =  new  Option(opt,  description);  option.setLongOpt(longopt);  option.setRequired(required);  option.setOptionalArg(optionalArg);      [BUGGY]  OptionBuilder.instance().appendArg(optionalArg);  [BUGGY]      option.setArgs(numberOfArgs);  option.setType(type);  option.setValueSeparator(valuesep);  option.setArgName(argName);  OptionBuilder.reset();  return  option;  }  [CLASS]  OptionBuilder  [METHOD]  create  [RETURN_TYPE]  Option  String  opt  [VARIABLES]  boolean  hasArg  newRequired  optionalArg  required  OptionBuilder  instance  char  opt  sep  valuesep  Object  newType  type  Option  option  String  argName  description  longopt  name  newDescription  newLongopt  opt  int  num  numArgs  numberOfArgs  	projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java	0.3333333333333333	355	355	1	replace	OptionBuilder.instance().appendArg(optionalArg);	  OptionBuilder.instance().addArg(optionalArg);    	non-compiled	[CE]  <identifier>  expected	23	None	replace
