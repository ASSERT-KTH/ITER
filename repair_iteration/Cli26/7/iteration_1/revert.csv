projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java74
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java74StringargName=(String)this.values.get(0);
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java74if(type==null){for(inti=0;i<numberOfArgs;i++){type=(char)type;}
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java74if(type==null){for(inti=0;i<numberOfArgs;i++){type=getType(i);}
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java74if(type==null){for(inti=0;i<numberOfArgs;++i){type=getType(i);}
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java74StringargName=null;
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java74argName="arg";
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java74argName=null;
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java74argName=description;
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java74argName="null";
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java74Objecttype=options.getOption("type");
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java74if(type!=null){type=Option.UNINITIALIZED;}
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java74if(type!=null){type=Option.NONE;}
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java74if(type!=null){type=Option.NUMBER_INT;}
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java74argName="arg"+description;
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java74Objecttype=getType();
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java74if(type!=null){for(inti=0;i<numberOfArgs;++i){type=(String)type.charAt(i);}
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java74if(type==null){for(inti=0;i<numberOfArgs;++i){type=(String)type.charAt(i);}
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java74if(type==null){for(inti=0;i<numberOfArgs;++i){type=(String)type.charAt(0);}
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java74if(type!=null){for(inti=0;i<numberOfArgs;++i){type=(String)type.charAt(0);}
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java74argName=(String)this.values.get(0);
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java74argName=(String)null;
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java74if(type!=null){for(inti=0;i<numberOfArgs;++i){type=getType(i);}
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java74if(description!=null){for(inti=0;i<numberOfArgs;++i){type=getType(i);}
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java74if(numberOfArgs==0){for(inti=0;i<numberOfArgs;++i){type=getType(i);}
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java74type=Option.NONE;
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java74if(type==null){type=Option.NONE;}
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java74type=Option.NUMBER_INT;
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java74if(type==null){type=Option.NUMBER_INT;}
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java74Typetype=Option.NUMBER_INT;
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java74if(type!=null){for(inti=0;i<numberOfArgs;i++){type=(char)type;}
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java74if(description!=null){for(inti=0;i<numberOfArgs;i++){type=(char)type;}
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java74if(numberOfArgs==0){for(inti=0;i<numberOfArgs;i++){type=(char)type;}
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java74if(description!=null){for(inti=0;i<numberOfArgs;++i){type=(String)type.charAt(i);}
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java74if(numberOfArgs==0){for(inti=0;i<numberOfArgs;++i){type=(String)type.charAt(i);}
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java74Objecttype=options.getOption("type",description);
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java74Objecttype=options.getOption("type").toString();
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java74Objecttype=options.getOption("type").reset();
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java74argName="arg"+type;
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java74argName="arg"+this.description;
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java74argName="arg"+longopt;
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java74Objecttype=getType().toString();
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java74Objecttype=getDescription();
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java74Objecttype=getType().toCharArray();
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java74StringargName="arg";
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java74type=Option.UNINITIALIZED;
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java74if(type==null){type=Option.UNINITIALIZED;}
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java74Typetype=Option.UNINITIALIZED;
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java74argName=(char)this.values.get(0);
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java74argName=(String)this.values.get(1);
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java74argName=String.valueOf(valuesep);
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java74argName=String.valueOf(numberOfArgs);
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java74if(numberOfArgs!=0){for(inti=0;i<numberOfArgs;++i){type=(String)type.charAt(i);}
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java74if(numberOfArgs==0){for(inti=0;i<numberOfArgs;++i){type=(String)type.charAt(0);}
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java74if(description!=null){for(inti=0;i<numberOfArgs;++i){type=(String)type.charAt(0);}
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java74argName=description.toLowerCase();
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java74argName=type;
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java74charargName=(char)this.values.get(0);
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java74ObjectargName=(Object)this.values.get(0);
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java74StringargName=(String)this.values.get(1);
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java74argName=(String)this.valuesep;
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java74argName=(String)type;
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java74argName=(String)this.values;
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java74if(numberOfArgs!=0){for(inti=0;i<numberOfArgs;++i){type=(String)type.charAt(0);}
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java74if(type!=null){for(inti=0;i<numberOfArgs;i++){type=getType(i);}
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java74if(description!=null){for(inti=0;i<numberOfArgs;i++){type=getType(i);}
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java74if(numberOfArgs==0){for(inti=0;i<numberOfArgs;i++){type=getType(i);}
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java74argName=(String)valuesep;
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java74if(type!=null){for(inti=0;i<numberOfArgs;++i){type=(String)type.charAt(1);}
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java74if(description!=null){type=Option.UNINITIALIZED;}
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java74ObjectargName=null;
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java74if(type!=null){for(inti=0;i<numberOfArgs;++i){type=(char)type.charAt(i);}
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java74argName="null"+type;
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java74argName=String.valueOf(description);
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java74if(description==null){for(inti=0;i<numberOfArgs;++i){type=(String)type.charAt(i);}
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java74if(type!=null){for(inti=0;i<numberOfArgs;++i){type=getType(0);}
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java74if(description==null){for(inti=0;i<numberOfArgs;i++){type=(char)type;}
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java74if(description==null){for(inti=0;i<numberOfArgs;i++){type=getType(i);}
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java74Objecttype=getTypeRegistry();
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java74Objecttype=getType().reset();
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java74Objecttype=getType(0);
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java74if(description==null){for(inti=0;i<numberOfArgs;++i){type=(String)type.charAt(0);}
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java74if(type.length()==0){for(inti=0;i<numberOfArgs;++i){type=(String)type.charAt(0);}
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java74if(type==Option.UNINITIALIZED){type=Option.UNINITIALIZED;}
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java74if(type==Option.NUMBER_INT){type=Option.NUMBER_INT;}
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java74if(type==null){for(inti=0;i<numberOfArgs;++i){type=getType(0);}
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java74charargName=null;
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java74Objecttype=options.getOption("type").toCharArray();
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java74if(type==Option.NONE){type=null;}
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java74if(values!=null){for(inti=0;i<numberOfArgs;i++){type=(char)type;}
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java74argName=(char)this.values.get(1);
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java74if(type==null){for(inti=0;i<numberOfArgs;i++){type=getType(0);}
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java74argName=(String)type.toLowerCase();
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java74charargName=(char)this.values.get(1);
