projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java74
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java74StringargName=(String)this.values.get(0);
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java74if(type==null){for(inti=0;i<numberOfArgs;i++){type=(char)type;}
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java74if(type==null){for(inti=0;i<numberOfArgs;i++){type=getType(i);}
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java74if(type==null){for(inti=0;i<numberOfArgs;++i){type=getType(i);}
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java74StringargName=null;
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java74argName="arg";
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java74argName=null;
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java74argName=description;
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java74argName="null";
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java74Objecttype=options.getOption("type");
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java74if(type!=null){type=Option.UNINITIALIZED;}
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java74if(type!=null){type=Option.NONE;}
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java74if(type!=null){type=Option.NUMBER_INT;}
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java74argName="arg"+description;
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java74Objecttype=getType();
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java74if(type!=null){for(inti=0;i<numberOfArgs;++i){type=(String)type.charAt(i);}
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java74if(type==null){for(inti=0;i<numberOfArgs;++i){type=(String)type.charAt(i);}
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java74if(type==null){for(inti=0;i<numberOfArgs;++i){type=(String)type.charAt(0);}
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java74if(type!=null){for(inti=0;i<numberOfArgs;++i){type=(String)type.charAt(0);}
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java74argName=(String)this.values.get(0);
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java74argName=(String)null;
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java74if(type!=null){for(inti=0;i<numberOfArgs;++i){type=getType(i);}
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java74if(description!=null){for(inti=0;i<numberOfArgs;++i){type=getType(i);}
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java74if(numberOfArgs==0){for(inti=0;i<numberOfArgs;++i){type=getType(i);}
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java74type=Option.NONE;
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java74if(type==null){type=Option.NONE;}
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java74type=Option.NUMBER_INT;
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java74if(type==null){type=Option.NUMBER_INT;}
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java74Typetype=Option.NUMBER_INT;
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java74if(type!=null){for(inti=0;i<numberOfArgs;i++){type=(char)type;}
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java74if(description!=null){for(inti=0;i<numberOfArgs;i++){type=(char)type;}
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java74if(numberOfArgs==0){for(inti=0;i<numberOfArgs;i++){type=(char)type;}
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java74if(description!=null){for(inti=0;i<numberOfArgs;++i){type=(String)type.charAt(i);}
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java74if(numberOfArgs==0){for(inti=0;i<numberOfArgs;++i){type=(String)type.charAt(i);}
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java74Objecttype=options.getOption("type",description);
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java74Objecttype=options.getOption("type").toString();
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java74Objecttype=options.getOption("type").reset();
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java74argName="arg"+type;
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java74argName="arg"+this.description;
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java74argName="arg"+longopt;
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java74Objecttype=getType().toString();
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java74Objecttype=getDescription();
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java74Objecttype=getType().toCharArray();
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java74StringargName="arg";
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java74type=Option.UNINITIALIZED;
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java74if(type==null){type=Option.UNINITIALIZED;}
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java74Typetype=Option.UNINITIALIZED;
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java74argName=(char)this.values.get(0);
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java74argName=(String)this.values.get(1);
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java74argName=String.valueOf(valuesep);
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java74argName=String.valueOf(numberOfArgs);
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java74if(numberOfArgs!=0){for(inti=0;i<numberOfArgs;++i){type=(String)type.charAt(i);}
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java74if(numberOfArgs==0){for(inti=0;i<numberOfArgs;++i){type=(String)type.charAt(0);}
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java74if(description!=null){for(inti=0;i<numberOfArgs;++i){type=(String)type.charAt(0);}
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java74argName=description.toLowerCase();
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java74argName=type;
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java74charargName=(char)this.values.get(0);
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java74ObjectargName=(Object)this.values.get(0);
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java74StringargName=(String)this.values.get(1);
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java74argName=(String)this.valuesep;
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java74argName=(String)type;
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java74argName=(String)this.values;
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java74if(numberOfArgs!=0){for(inti=0;i<numberOfArgs;++i){type=(String)type.charAt(0);}
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java74if(type!=null){for(inti=0;i<numberOfArgs;i++){type=getType(i);}
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java74if(description!=null){for(inti=0;i<numberOfArgs;i++){type=getType(i);}
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java74if(numberOfArgs==0){for(inti=0;i<numberOfArgs;i++){type=getType(i);}
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java74argName=(String)valuesep;
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java74if(type!=null){for(inti=0;i<numberOfArgs;++i){type=(String)type.charAt(1);}
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java74if(description!=null){type=Option.UNINITIALIZED;}
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java74ObjectargName=null;
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java74if(type!=null){for(inti=0;i<numberOfArgs;++i){type=(char)type.charAt(i);}
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java74argName="null"+type;
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java74argName=String.valueOf(description);
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java74if(description==null){for(inti=0;i<numberOfArgs;++i){type=(String)type.charAt(i);}
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java74if(type!=null){for(inti=0;i<numberOfArgs;++i){type=getType(0);}
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java74if(description==null){for(inti=0;i<numberOfArgs;i++){type=(char)type;}
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java74if(description==null){for(inti=0;i<numberOfArgs;i++){type=getType(i);}
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java74Objecttype=getTypeRegistry();
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java74Objecttype=getType().reset();
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java74Objecttype=getType(0);
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java74if(description==null){for(inti=0;i<numberOfArgs;++i){type=(String)type.charAt(0);}
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java74if(type.length()==0){for(inti=0;i<numberOfArgs;++i){type=(String)type.charAt(0);}
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java74if(type==Option.UNINITIALIZED){type=Option.UNINITIALIZED;}
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java74if(type==Option.NUMBER_INT){type=Option.NUMBER_INT;}
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java74if(type==null){for(inti=0;i<numberOfArgs;++i){type=getType(0);}
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java74charargName=null;
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java74Objecttype=options.getOption("type").toCharArray();
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java74if(type==Option.NONE){type=null;}
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java74if(values!=null){for(inti=0;i<numberOfArgs;i++){type=(char)type;}
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java74argName=(char)this.values.get(1);
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java74if(type==null){for(inti=0;i<numberOfArgs;i++){type=getType(0);}
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java74argName=(String)type.toLowerCase();
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java74charargName=(char)this.values.get(1);
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java74if(numberOfArgs>0){for(inti=0;i<numberOfArgs;++i){type=(String)type.charAt(0);}
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java74if(numberOfArgs>=0){for(inti=0;i<numberOfArgs;++i){type=(String)type.charAt(0);}
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java74Objecttype=getTypeRegistry().reset();
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java74Objecttype=getRequiredTypeRegistry();
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java74Stringtype=getType().reset();
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java74Objecttype=getType().reset(description);
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java74Objecttype=getType().restrictByNotNullOrUndefined();
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java74Stringtype=getType().toString();
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java74if(type!=null){for(inti=0;i<numberOfArgs;++i){type=getType(1);}
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java74if(description!=null){for(inti=0;i<numberOfArgs;++i){type=getType(0);}
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java74type=Option.NUMBER_INT+1;
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java74type=Option.NUMBER_ARRAY;
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java74type=Option.NUMBER_VALUE;
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java74if(type==Option.NUMBER_INT||type==Option.UNINITIALIZED){type=Option.UNINITIALIZED;}
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java74if(type==Option.NUMBER_OF_ARRAY){type=Option.UNINITIALIZED;}
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java74if(numberOfArgs!=0){for(inti=0;i<numberOfArgs;i++){type=getType(i);}
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java74if(numberOfArgs>=0){for(inti=0;i<numberOfArgs;i++){type=getType(i);}
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java74if(numberOfArgs>0){for(inti=0;i<numberOfArgs;++i){type=getType(i);}
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java74if(numberOfArgs!=0){for(inti=0;i<numberOfArgs;++i){type=getType(i);}
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java74for(inti=0;i<numberOfArgs;++i){type=getType(i);}
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java74argName=String.valueOf(type);
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java74argName=String.valueOf(longopt);
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java74argName=String.valueOf(length);
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java74Objecttype=options.getOption("type").restrictByNotNullOrUndefined();
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java74ObjectargName=(Object)this.values.get(1);
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java74argName=(String)type.toUpperCase();
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java74argName=(String)type.toLowerCase()+1;
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java74argName=(char)type.toLowerCase();
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java74argName=(String)this.valuesep+1;
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java74argName=(char)this.valuesep;
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java74argName=String.valueOf(numberOfArgs+1);
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java74Objecttype=options.getOption("type").required();
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java74Stringtype=options.getOption("type").toString();
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java74if(numberOfArgs!=0){for(inti=0;i<numberOfArgs;i++){type=(char)type;}
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java74if(numberOfArgs>0){for(inti=0;i<numberOfArgs;i++){type=getType(i);}
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java74for(inti=0;i<numberOfArgs;i++){type=getType(i);}
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java74type=null;
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java74if(type!=Option.NONE){type=null;}
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java74if(type==null){type=Option.UNKNOWN;}
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java74charargName="arg";
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java74ObjectargName="arg";
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java74if(numberOfArgs!=null){for(inti=0;i<numberOfArgs;i++){type=(char)type;}
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java74type=Option.NONE||description.length()==0;
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java74type=Option.NONE||description.length()!=0;
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java74type=Option.NONE||description.equals("null");
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java74Objecttype=getName();
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java74Stringtype=getDescription();
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java74argName=String.valueOf(valuesep+1);
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java74argName=type.toLowerCase();
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java74argName=DEFAULT_NUMBER_ERROR;
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java74if(numberOfArgs>0){for(inti=0;i<numberOfArgs;++i){type=(String)type.charAt(i);}
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java74if(numberOfArgs>=0){for(inti=0;i<numberOfArgs;++i){type=(String)type.charAt(i);}
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java74argName="arg"+lengthOfArgs;
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java74argName=(char)this.values;
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java74argName=(String)values;
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java74StringargName=(String)this.values;
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java74if(description!=null){for(inti=0;i<numberOfArgs;++i){type=(String)type.charAt(1);}
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java74if(numberOfArgs!=0){for(inti=0;i<numberOfArgs;++i){type=(String)type.charAt(1);}
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java74if(type!=Option.NUMBER_INT){type=Option.NUMBER_INT;}
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java74if(type==Option.NUMBER_INT||type==Option.NUMBER_INT){type=Option.NUMBER_INT;}
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java74argName="null"+description;
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java74argName="null"+longopt;
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java74Objecttype=options.getOption("type",description).reset();
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java74if(numberOfArgs>0){for(inti=0;i<numberOfArgs;++i){type=(String)type.charAt(1);}
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java74if(type!=Option.UNINITIALIZED){type=Option.UNINITIALIZED;}
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java74argName=description.toUpperCase();
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java74argName=this.description.toLowerCase();
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java74Objecttype=Option.UNINITIALIZED;
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java74Stringtype=Option.UNINITIALIZED;
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java74Typetype=Option.UNINITIALIZED_ARRAY;
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java74Objecttype=Option.NUMBER_INT;
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java74Typetype=Option.NUMBER_ARRAY;
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java74Typetype=Option.NUMBER_OBJECT;
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java74for(inti=0;i<numberOfArgs;++i){type=(String)type.charAt(i);}
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java74if(numberOfArgs<0){for(inti=0;i<numberOfArgs;++i){type=(String)type.charAt(i);}
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java74argName=this.description+"arg";
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java74argName=this.description;
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java74argName=description+this.description;
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java74ObjectargName=(Object)values.get(0);
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java74ObjectargName=type;
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java74ObjectargName=this.values;
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java74ObjectargName=this;
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java74argName=(String)valuesep+1;
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java74if(numberOfArgs>0){for(inti=0;i<numberOfArgs;i++){type=(char)type;}
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java74for(inti=0;i<numberOfArgs;i++){type=(char)type;}
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java74if(description!=null){if(type.length()==0){for(inti=0;i<numberOfArgs;++i){type=(String)type.charAt(0);}
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java74if(type.length()==1){for(inti=0;i<numberOfArgs;++i){type=(String)type.charAt(0);}
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java74Objecttype=getType(1);
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java74Objecttype=getType(0).toString();
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java74Objecttype=getType(0).reset();
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java74CharacterargName=null;
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java74if(numberOfArgs>=0){for(inti=0;i<numberOfArgs;++i){type=getType(i);}
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java74if(type==null){for(inti=0;i<numberOfArgs;++i){type=(char)type.charAt(i);}
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java74if(description!=null){for(inti=0;i<numberOfArgs;++i){type=(char)type.charAt(i);}
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java74if(numberOfArgs!=0){for(inti=0;i<numberOfArgs;++i){type=(char)type.charAt(i);}
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java74type=Option.UNINITIALIZED_ARRAY;
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java74type=Option.UNINITIALIZED_TYPE;
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java74type=Option.UNNITIALIZED;
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java74if(type!=null){for(inti=0;i<numberOfArgs;i++){type=getType(0);}
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java74if(type!=null){for(inti=0;i<numberOfArgs;i++){type=getType(1);}
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java74if(description!=null){for(inti=0;i<numberOfArgs;i++){type=getType(0);}
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java74Objecttype=options.getOption("type","null");
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java74if(numberOfArgs>=0){for(inti=0;i<numberOfArgs;i++){type=(char)type;}
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java74argName=(String)this.values+1;
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java74Objecttype=getTypeDescription();
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java74Objecttype=getType(description);
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java74if(numberOfArgs!=1){for(inti=0;i<numberOfArgs;++i){type=(String)type.charAt(0);}
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java74if(description!=null){for(inti=0;i<numberOfArgs;++i){type=getType(1);}
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java74ObjectargName=(type==null)?null:type;
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java74argName=(char)this.values.get(2);
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java74Objecttype=getTypeRegistry().getNumberOfArgs();
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java74Objecttype=getTypeRegistry().getNativeType(UNKNOWN_TYPE);
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java74argName=(String)this.values.get(2);
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java74if(description!=null){for(inti=0;i<numberOfArgs;i++){type=getType(1);}
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java74ObjectargName=(Object)this.values.get(type);
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java74argName=Option.NUMBER_INT;
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java74argName=(String)description;
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java74argName=(char)type;
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java74if(description!=null){type=Option.NONE;}
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java74argName=String.valueOf(description+1);
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java74if(type==Option.NUMBER_INT){type=Option.UNINITIALIZED;}
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java74if(type==Option.NUMBER_ALIASING){type=Option.UNINITIALIZED;}
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java74if(type!=null){for(inti=0;i<numberOfArgs;i++){type=getType(i).reset();}
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java74if(description==null){for(inti=0;i<numberOfArgs;++i){type=(char)type.charAt(i);}
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java74if(type==null){type=Option.NUMBER_NULL;}
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java74argName="arg"+name;
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java74argName=Option.UNINITIALIZED;
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java74argName=Option.NONE;
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java74type=Option.NONE-1;
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java74type=Option.NONE:description;
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java74Objecttype=options.getOption("type","description");
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java74if(type==Option.NULL){type=null;}
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java74Objecttype=options.getOption("type").append(description);
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java74Typetype=Option.UNNITIALIZED;
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java74argName=DEFAULT_NUMBER_ARRAY;
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java74argName=DEFAULT_TYPE;
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java74if(type!=null){for(inti=0;i<numberOfArgs;i++){type=(char)values;}
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java74if(type==Option.NONE){type="null";}
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java74argName=type==null?"null":type;
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java74Objecttype=getTypeRegistry().getType(getBaseValue());
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java74if(type.length()>0){for(inti=0;i<numberOfArgs;++i){type=(String)type.charAt(0);}
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java74ObjectargName=(Object)this.values.remove(0);
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java74ObjectargName=(Object)this.values.get(0,this.values.size());
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java74argName=(Character)this.values;
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java74Objecttype=options.getOption("type").removeValue();
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java74argName=(String)type.trim();
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java74if(type==null){for(inti=0;i<numberOfArgs;++i){type=getType(1);}
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java74Objecttype=getDescription().toString();
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java74Objecttype=getDescription().toCharArray();
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java74if(type==Option.NUMBER_INT||type==Option.UNINITIALIZED){type=Option.NUMBER_INT;}
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java74if(type!=null){for(inti=0;i<numberOfArgs;++i){type=getType(i).restrictByNotNullOrUndefined();}
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java74if(type!=null){for(inti=0;i<numberOfArgs;i++){type=(String)type;}
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java74argName="null"+this.type;
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java74if(type!=null){for(inti=0;i<numberOfArgs;++i){type=(char)type.charAt(0);}
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java74argName=(char)valuesep;
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java74if(type==null){StringargName="arg";}
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java74if(type==null){argName="arg";}
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java74if(type==null){for(inti=0;i<numberOfArgs;i++){type=getType(1);}
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java74Objecttype=options.getOption("type").append(valuesep);
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java74argName=(this.description==null)?null:"arg"+this.description;
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java74argName=String.valueOf(required);
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java74argName=String.valueOf(this.valuesep);
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java74StringargName=(char)this.values.get(1);
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java74Objecttype=getType(0).toCharArray();
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java74if(numberOfArgs<=0){for(inti=0;i<numberOfArgs;++i){type=(String)type.charAt(i);}
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java74if(type==null){for(inti=0;i<numberOfArgs;++i){type=(String)type.charAt(1);}
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java74if(type!=null){for(inti=0;i<length;++i){type=getType(i);}
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java74if(type==Option.NONE){type=Option.NONE;}
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java74if(type==Option.NONE){type=Option.NONE;}else{description=null;}
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java74if(type==Option.NONE){type=Option.NONE;}else{description="null";}
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java74if(type!=null){for(inti=0;i<numberOfArgs;++i){type=(char)type.charAt(1);}
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java74if(type!=null){for(inti=0;i<length;i++){type=(char)type;}
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java74if(type==Option.UNINITIALIZED){type=Option.UNINITIALIZED;}else{description=null;}
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java74if(type==Option.UNINITIALIZED){type=Option.UNINITIALIZED;}else{description="undefined";}
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java74Typetype=Option.NUMBER_VALUE;
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java74if(type==Option.NUMBER){type=Option.UNINITIALIZED;}
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java74if(type!=null){for(inti=0;i<length;i++){type=getType(i);}
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java74if(type!=null){for(inti=0;i<numberOfArgs;i++){type=newchar[type];}
